<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="710" onload="init(evt)" viewBox="0 0 1200 710" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="710.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="693" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="693" > </text>
<g id="frames">
<g >
<title>cql3::raw_value::make_value (21 samples, 0.04%)</title><rect x="896.6" y="293" width="0.5" height="15.0" fill="rgb(206,210,39)" rx="2" ry="2" />
<text  x="899.60" y="303.5" ></text>
</g>
<g >
<title>allocation_strategy::alloc&lt;blob_storage&gt; (51 samples, 0.10%)</title><rect x="189.5" y="69" width="1.2" height="15.0" fill="rgb(240,75,18)" rx="2" ry="2" />
<text  x="192.48" y="79.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (35 samples, 0.07%)</title><rect x="1044.5" y="213" width="0.8" height="15.0" fill="rgb(225,48,14)" rx="2" ry="2" />
<text  x="1047.50" y="223.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::constant (15 samples, 0.03%)</title><rect x="19.7" y="277" width="0.4" height="15.0" fill="rgb(236,32,40)" rx="2" ry="2" />
<text  x="22.72" y="287.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (48 samples, 0.10%)</title><rect x="721.8" y="341" width="1.2" height="15.0" fill="rgb(216,4,15)" rx="2" ry="2" />
<text  x="724.83" y="351.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (5 samples, 0.01%)</title><rect x="583.9" y="421" width="0.1" height="15.0" fill="rgb(208,139,7)" rx="2" ry="2" />
<text  x="586.92" y="431.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (9 samples, 0.02%)</title><rect x="652.3" y="437" width="0.2" height="15.0" fill="rgb(242,184,52)" rx="2" ry="2" />
<text  x="655.25" y="447.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::~_Deque_base (8 samples, 0.02%)</title><rect x="613.1" y="405" width="0.2" height="15.0" fill="rgb(225,21,26)" rx="2" ry="2" />
<text  x="616.14" y="415.5" ></text>
</g>
<g >
<title>reader_permit::consume_resources (22 samples, 0.04%)</title><rect x="213.2" y="149" width="0.5" height="15.0" fill="rgb(252,74,22)" rx="2" ry="2" />
<text  x="216.18" y="159.5" ></text>
</g>
<g >
<title>absl::hash_internal::HashState::combine_contiguous (23 samples, 0.05%)</title><rect x="836.8" y="341" width="0.6" height="15.0" fill="rgb(231,17,24)" rx="2" ry="2" />
<text  x="839.85" y="351.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (5 samples, 0.01%)</title><rect x="493.1" y="309" width="0.1" height="15.0" fill="rgb(211,72,41)" rx="2" ry="2" />
<text  x="496.08" y="319.5" ></text>
</g>
<g >
<title>operator new (27 samples, 0.05%)</title><rect x="495.9" y="293" width="0.7" height="15.0" fill="rgb(217,145,34)" rx="2" ry="2" />
<text  x="498.95" y="303.5" ></text>
</g>
<g >
<title>std::hash&lt;auth::resource&gt;::operator (117 samples, 0.24%)</title><rect x="797.5" y="149" width="2.8" height="15.0" fill="rgb(238,197,1)" rx="2" ry="2" />
<text  x="800.54" y="159.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (26 samples, 0.05%)</title><rect x="75.8" y="373" width="0.6" height="15.0" fill="rgb(206,112,54)" rx="2" ry="2" />
<text  x="78.82" y="383.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;service::digest_read_resolver&gt;::~shared_ptr_count_for (65 samples, 0.13%)</title><rect x="692.8" y="485" width="1.6" height="15.0" fill="rgb(228,164,16)" rx="2" ry="2" />
<text  x="695.80" y="495.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (8 samples, 0.02%)</title><rect x="1174.5" y="501" width="0.2" height="15.0" fill="rgb(228,172,29)" rx="2" ry="2" />
<text  x="1177.47" y="511.5" ></text>
</g>
<g >
<title>query::result::result (33 samples, 0.07%)</title><rect x="592.2" y="421" width="0.8" height="15.0" fill="rgb(245,154,36)" rx="2" ry="2" />
<text  x="595.16" y="431.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (9 samples, 0.02%)</title><rect x="39.3" y="437" width="0.2" height="15.0" fill="rgb(251,77,12)" rx="2" ry="2" />
<text  x="42.29" y="447.5" ></text>
</g>
<g >
<title>query::querier_base::querier_base (4,784 samples, 9.69%)</title><rect x="425.7" y="421" width="114.3" height="15.0" fill="rgb(226,53,17)" rx="2" ry="2" />
<text  x="428.68" y="431.5" >query::querier..</text>
</g>
<g >
<title>all (49,388 samples, 100%)</title><rect x="10.0" y="661" width="1180.0" height="15.0" fill="rgb(231,44,32)" rx="2" ry="2" />
<text  x="13.00" y="671.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_allocate_node&lt;nonwrapping_interval&lt;dht::token&gt;, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; (59 samples, 0.12%)</title><rect x="1159.3" y="453" width="1.4" height="15.0" fill="rgb(210,109,22)" rx="2" ry="2" />
<text  x="1162.30" y="463.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (5 samples, 0.01%)</title><rect x="630.9" y="469" width="0.1" height="15.0" fill="rgb(216,157,2)" rx="2" ry="2" />
<text  x="633.87" y="479.5" ></text>
</g>
<g >
<title>reader_selector::has_new_readers (14 samples, 0.03%)</title><rect x="446.8" y="277" width="0.3" height="15.0" fill="rgb(221,0,16)" rx="2" ry="2" />
<text  x="449.78" y="287.5" ></text>
</g>
<g >
<title>absl::hash_internal::HashState::combine_contiguous (12 samples, 0.02%)</title><rect x="825.3" y="277" width="0.2" height="15.0" fill="rgb(251,99,46)" rx="2" ry="2" />
<text  x="828.26" y="287.5" ></text>
</g>
<g >
<title>absl::container_internal::operator== (12 samples, 0.02%)</title><rect x="754.2" y="357" width="0.3" height="15.0" fill="rgb(241,119,51)" rx="2" ry="2" />
<text  x="757.23" y="367.5" ></text>
</g>
<g >
<title>ser::safe_serialize_as_uint32&lt;bytes_ostream&gt; (8 samples, 0.02%)</title><rect x="354.3" y="165" width="0.2" height="15.0" fill="rgb(246,225,44)" rx="2" ry="2" />
<text  x="357.34" y="175.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::local (10 samples, 0.02%)</title><rect x="977.9" y="357" width="0.2" height="15.0" fill="rgb(242,143,3)" rx="2" ry="2" />
<text  x="980.86" y="367.5" ></text>
</g>
<g >
<title>std::__lower_bound&lt;__gnu_cxx::__normal_iterator&lt;long*, std::vector&lt;long, std::allocator&lt;long&gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_less_val&gt; (5 samples, 0.01%)</title><rect x="1163.4" y="469" width="0.1" height="15.0" fill="rgb(231,208,47)" rx="2" ry="2" />
<text  x="1166.38" y="479.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::clear (8 samples, 0.02%)</title><rect x="777.0" y="293" width="0.2" height="15.0" fill="rgb(205,42,8)" rx="2" ry="2" />
<text  x="780.02" y="303.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (94 samples, 0.19%)</title><rect x="380.9" y="149" width="2.2" height="15.0" fill="rgb(247,109,35)" rx="2" ry="2" />
<text  x="383.86" y="159.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (13 samples, 0.03%)</title><rect x="693.2" y="469" width="0.3" height="15.0" fill="rgb(218,19,18)" rx="2" ry="2" />
<text  x="696.23" y="479.5" ></text>
</g>
<g >
<title>cql3::constants::setter::execute (9 samples, 0.02%)</title><rect x="859.8" y="325" width="0.2" height="15.0" fill="rgb(223,110,49)" rx="2" ry="2" />
<text  x="862.83" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (16 samples, 0.03%)</title><rect x="1120.2" y="405" width="0.4" height="15.0" fill="rgb(240,35,35)" rx="2" ry="2" />
<text  x="1123.23" y="415.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;query::read_command&gt;::dispose (76 samples, 0.15%)</title><rect x="38.9" y="469" width="1.8" height="15.0" fill="rgb(232,209,40)" rx="2" ry="2" />
<text  x="41.93" y="479.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::clear (5 samples, 0.01%)</title><rect x="709.2" y="501" width="0.1" height="15.0" fill="rgb(222,32,16)" rx="2" ry="2" />
<text  x="712.16" y="511.5" ></text>
</g>
<g >
<title>__tls_init (14 samples, 0.03%)</title><rect x="500.1" y="245" width="0.4" height="15.0" fill="rgb(236,53,30)" rx="2" ry="2" />
<text  x="503.13" y="255.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::close (8 samples, 0.02%)</title><rect x="1175.1" y="437" width="0.2" height="15.0" fill="rgb(246,162,7)" rx="2" ry="2" />
<text  x="1178.14" y="447.5" ></text>
</g>
<g >
<title>service::storage_proxy::new_read_repair_decision (14 samples, 0.03%)</title><rect x="1096.8" y="357" width="0.4" height="15.0" fill="rgb(229,104,17)" rx="2" ry="2" />
<text  x="1099.84" y="367.5" ></text>
</g>
<g >
<title>operator new (80 samples, 0.16%)</title><rect x="1066.2" y="325" width="1.9" height="15.0" fill="rgb(239,92,38)" rx="2" ry="2" />
<text  x="1069.17" y="335.5" ></text>
</g>
<g >
<title>list_reader_selector::~list_reader_selector (70 samples, 0.14%)</title><rect x="572.3" y="373" width="1.7" height="15.0" fill="rgb(230,171,36)" rx="2" ry="2" />
<text  x="575.28" y="383.5" ></text>
</g>
<g >
<title>std::hash&lt;gms::inet_address&gt;::operator (5 samples, 0.01%)</title><rect x="1154.3" y="421" width="0.1" height="15.0" fill="rgb(238,154,43)" rx="2" ry="2" />
<text  x="1157.30" y="431.5" ></text>
</g>
<g >
<title>seastar::promise&lt;void&gt;::promise (9 samples, 0.02%)</title><rect x="1028.1" y="133" width="0.2" height="15.0" fill="rgb(205,149,4)" rx="2" ry="2" />
<text  x="1031.13" y="143.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::abstract_read_executor&gt;::~shared_ptr (25 samples, 0.05%)</title><rect x="1170.7" y="453" width="0.6" height="15.0" fill="rgb(219,118,37)" rx="2" ry="2" />
<text  x="1173.69" y="463.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_token (38 samples, 0.08%)</title><rect x="943.9" y="389" width="0.9" height="15.0" fill="rgb(214,189,22)" rx="2" ry="2" />
<text  x="946.86" y="399.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::do_refresh_state (146 samples, 0.30%)</title><rect x="216.2" y="165" width="3.5" height="15.0" fill="rgb(233,72,7)" rx="2" ry="2" />
<text  x="219.22" y="175.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (38 samples, 0.08%)</title><rect x="1141.1" y="453" width="0.9" height="15.0" fill="rgb(247,176,9)" rx="2" ry="2" />
<text  x="1144.07" y="463.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (6 samples, 0.01%)</title><rect x="1134.3" y="421" width="0.1" height="15.0" fill="rgb(210,144,51)" rx="2" ry="2" />
<text  x="1137.26" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (7 samples, 0.01%)</title><rect x="158.1" y="181" width="0.2" height="15.0" fill="rgb(219,161,23)" rx="2" ry="2" />
<text  x="161.13" y="191.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (14 samples, 0.03%)</title><rect x="680.0" y="453" width="0.3" height="15.0" fill="rgb(245,164,41)" rx="2" ry="2" />
<text  x="682.97" y="463.5" ></text>
</g>
<g >
<title>service::endpoints_to_replica_ids (114 samples, 0.23%)</title><rect x="1152.9" y="469" width="2.8" height="15.0" fill="rgb(212,111,35)" rx="2" ry="2" />
<text  x="1155.94" y="479.5" ></text>
</g>
<g >
<title>table::do_apply&lt;frozen_mutation const&amp;, seastar::lw_shared_ptr&lt;schema const&gt; const&amp;&gt; (32 samples, 0.06%)</title><rect x="1140.1" y="277" width="0.8" height="15.0" fill="rgb(253,89,47)" rx="2" ry="2" />
<text  x="1143.14" y="287.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;, nonwrapping_interval&lt;managed_bytes&gt; &gt; (88 samples, 0.18%)</title><rect x="1135.0" y="421" width="2.1" height="15.0" fill="rgb(251,92,47)" rx="2" ry="2" />
<text  x="1138.00" y="431.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (20 samples, 0.04%)</title><rect x="656.4" y="485" width="0.5" height="15.0" fill="rgb(218,69,31)" rx="2" ry="2" />
<text  x="659.41" y="495.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (261 samples, 0.53%)</title><rect x="16.3" y="517" width="6.2" height="15.0" fill="rgb(232,218,29)" rx="2" ry="2" />
<text  x="19.28" y="527.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::move_it (6 samples, 0.01%)</title><rect x="663.0" y="469" width="0.1" height="15.0" fill="rgb(234,118,48)" rx="2" ry="2" />
<text  x="666.00" y="479.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;auth::role_or_anonymous&gt;, seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (49 samples, 0.10%)</title><rect x="806.3" y="293" width="1.2" height="15.0" fill="rgb(245,101,9)" rx="2" ry="2" />
<text  x="809.29" y="303.5" ></text>
</g>
<g >
<title>skip_empty_fragments&lt;managed_bytes_basic_view&lt; (6 samples, 0.01%)</title><rect x="928.5" y="325" width="0.1" height="15.0" fill="rgb(219,125,21)" rx="2" ry="2" />
<text  x="931.50" y="335.5" ></text>
</g>
<g >
<title>seastar::reactor::syscall_pollfn::poll (5 samples, 0.01%)</title><rect x="1176.3" y="501" width="0.1" height="15.0" fill="rgb(246,190,2)" rx="2" ry="2" />
<text  x="1179.31" y="511.5" ></text>
</g>
<g >
<title>mutation_fragment::operator= (43 samples, 0.09%)</title><rect x="165.9" y="229" width="1.0" height="15.0" fill="rgb(208,29,18)" rx="2" ry="2" />
<text  x="168.85" y="239.5" ></text>
</g>
<g >
<title>seastar::gate::leave (5 samples, 0.01%)</title><rect x="604.9" y="437" width="0.1" height="15.0" fill="rgb(239,38,9)" rx="2" ry="2" />
<text  x="607.90" y="447.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (5 samples, 0.01%)</title><rect x="1137.2" y="421" width="0.1" height="15.0" fill="rgb(221,58,27)" rx="2" ry="2" />
<text  x="1140.17" y="431.5" ></text>
</g>
<g >
<title>operator delete (22 samples, 0.04%)</title><rect x="420.2" y="373" width="0.5" height="15.0" fill="rgb(217,218,34)" rx="2" ry="2" />
<text  x="423.19" y="383.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_data_request (2,120 samples, 4.29%)</title><rect x="997.7" y="309" width="50.7" height="15.0" fill="rgb(215,26,9)" rx="2" ry="2" />
<text  x="1000.71" y="319.5" >servi..</text>
</g>
<g >
<title>seastar::internal::do_with_state&lt;std::tuple&lt;std::optional&lt;auth::resource&gt; &gt;, seastar::future&lt;bool&gt; &gt;::do_with_state&lt;std::optional&lt;auth::resource&gt; &gt; (50 samples, 0.10%)</title><rect x="772.6" y="309" width="1.2" height="15.0" fill="rgb(249,111,38)" rx="2" ry="2" />
<text  x="775.62" y="319.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_esft&lt;partition_snapshot&gt;::dispose (49 samples, 0.10%)</title><rect x="566.9" y="277" width="1.1" height="15.0" fill="rgb(230,201,29)" rx="2" ry="2" />
<text  x="569.86" y="287.5" ></text>
</g>
<g >
<title>logalloc::basic_region_impl::set_reclaiming_enabled (5 samples, 0.01%)</title><rect x="221.8" y="213" width="0.1" height="15.0" fill="rgb(224,157,31)" rx="2" ry="2" />
<text  x="224.76" y="223.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (11 samples, 0.02%)</title><rect x="805.0" y="261" width="0.2" height="15.0" fill="rgb(247,51,43)" rx="2" ry="2" />
<text  x="807.97" y="271.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::future&lt;void&gt;  (35 samples, 0.07%)</title><rect x="1140.1" y="357" width="0.9" height="15.0" fill="rgb(225,89,30)" rx="2" ry="2" />
<text  x="1143.14" y="367.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;clustering_key_prefix&gt;::wrapping_interval (10 samples, 0.02%)</title><rect x="1111.7" y="357" width="0.2" height="15.0" fill="rgb(244,18,3)" rx="2" ry="2" />
<text  x="1114.66" y="367.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;flat_mutation_reader::peek (40 samples, 0.08%)</title><rect x="284.9" y="389" width="1.0" height="15.0" fill="rgb(254,172,50)" rx="2" ry="2" />
<text  x="287.91" y="399.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::~impl (26 samples, 0.05%)</title><rect x="556.7" y="309" width="0.6" height="15.0" fill="rgb(235,209,17)" rx="2" ry="2" />
<text  x="559.71" y="319.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_data_requests (5 samples, 0.01%)</title><rect x="990.1" y="341" width="0.2" height="15.0" fill="rgb(221,4,50)" rx="2" ry="2" />
<text  x="993.14" y="351.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt;::~_Variant_storage (5 samples, 0.01%)</title><rect x="850.8" y="469" width="0.1" height="15.0" fill="rgb(215,202,22)" rx="2" ry="2" />
<text  x="853.78" y="479.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::handle_exception&lt;cql3::query_processor::execute_prepared (11 samples, 0.02%)</title><rect x="743.1" y="405" width="0.3" height="15.0" fill="rgb(229,166,46)" rx="2" ry="2" />
<text  x="746.09" y="415.5" ></text>
</g>
<g >
<title>ser::writer_of_std__optional__qr_cell&lt;bytes_ostream&gt;::write (16 samples, 0.03%)</title><rect x="333.3" y="181" width="0.4" height="15.0" fill="rgb(217,170,34)" rx="2" ry="2" />
<text  x="336.31" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::_M_range_initialize&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; const*&gt; (8 samples, 0.02%)</title><rect x="1113.8" y="389" width="0.2" height="15.0" fill="rgb(223,196,36)" rx="2" ry="2" />
<text  x="1116.78" y="399.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;interval_bound&lt;dht::ring_position&gt;, false, false&gt;::_Optional_base (27 samples, 0.05%)</title><rect x="608.9" y="437" width="0.7" height="15.0" fill="rgb(229,129,19)" rx="2" ry="2" />
<text  x="611.91" y="447.5" ></text>
</g>
<g >
<title>range_tombstone_list::slice (42 samples, 0.09%)</title><rect x="218.0" y="149" width="1.0" height="15.0" fill="rgb(253,223,1)" rx="2" ry="2" />
<text  x="220.96" y="159.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::drop_expired_front (36 samples, 0.07%)</title><rect x="70.0" y="405" width="0.9" height="15.0" fill="rgb(254,156,49)" rx="2" ry="2" />
<text  x="72.99" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (16 samples, 0.03%)</title><rect x="651.0" y="437" width="0.4" height="15.0" fill="rgb(210,169,43)" rx="2" ry="2" />
<text  x="654.03" y="447.5" ></text>
</g>
<g >
<title>_ZSt5applyIZN7seastar8internal12do_with_implISt8optionalIN4auth8resourceEEZNK7service12client_state20check_has_permissionENS4_12command_descEE3$_7JEEEDaOT_OT0_DpOT1_EUlDpOT_E_St5tupleIJOS6_EEEDcSC_SE_ (85 samples, 0.17%)</title><rect x="771.8" y="325" width="2.1" height="15.0" fill="rgb(209,38,29)" rx="2" ry="2" />
<text  x="774.83" y="335.5" ></text>
</g>
<g >
<title>list_reader_selector::~list_reader_selector (33 samples, 0.07%)</title><rect x="574.8" y="357" width="0.8" height="15.0" fill="rgb(215,187,10)" rx="2" ry="2" />
<text  x="577.84" y="367.5" ></text>
</g>
<g >
<title>utils::phased_barrier::start (21 samples, 0.04%)</title><rect x="1036.0" y="245" width="0.5" height="15.0" fill="rgb(245,157,34)" rx="2" ry="2" />
<text  x="1039.01" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt;::emplace_back&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; (18 samples, 0.04%)</title><rect x="219.3" y="149" width="0.4" height="15.0" fill="rgb(218,154,42)" rx="2" ry="2" />
<text  x="222.27" y="159.5" ></text>
</g>
<g >
<title>do_cql_test (275 samples, 0.56%)</title><rect x="16.1" y="549" width="6.5" height="15.0" fill="rgb(210,30,9)" rx="2" ry="2" />
<text  x="19.07" y="559.5" ></text>
</g>
<g >
<title>std::make_unique&lt;compact_for_query&lt; (79 samples, 0.16%)</title><rect x="418.0" y="357" width="1.9" height="15.0" fill="rgb(212,139,14)" rx="2" ry="2" />
<text  x="421.04" y="367.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::push_static_row (197 samples, 0.40%)</title><rect x="247.6" y="261" width="4.7" height="15.0" fill="rgb(205,118,4)" rx="2" ry="2" />
<text  x="250.61" y="271.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (27 samples, 0.05%)</title><rect x="559.9" y="293" width="0.6" height="15.0" fill="rgb(219,184,5)" rx="2" ry="2" />
<text  x="562.86" y="303.5" ></text>
</g>
<g >
<title>operator new (92 samples, 0.19%)</title><rect x="1043.1" y="245" width="2.2" height="15.0" fill="rgb(221,180,31)" rx="2" ry="2" />
<text  x="1046.13" y="255.5" ></text>
</g>
<g >
<title>seastar::gate::enter (9 samples, 0.02%)</title><rect x="1035.2" y="181" width="0.2" height="15.0" fill="rgb(231,178,11)" rx="2" ry="2" />
<text  x="1038.18" y="191.5" ></text>
</g>
<g >
<title>std::apply&lt;service::client_state::check_has_permission (1,290 samples, 2.61%)</title><rect x="777.4" y="325" width="30.9" height="15.0" fill="rgb(216,179,9)" rx="2" ry="2" />
<text  x="780.45" y="335.5" >st..</text>
</g>
<g >
<title>mutation_fragment::consume&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (4,147 samples, 8.40%)</title><rect x="300.1" y="261" width="99.0" height="15.0" fill="rgb(241,154,41)" rx="2" ry="2" />
<text  x="303.05" y="271.5" >mutation_fr..</text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (23 samples, 0.05%)</title><rect x="852.7" y="405" width="0.6" height="15.0" fill="rgb(247,177,3)" rx="2" ry="2" />
<text  x="855.71" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (34 samples, 0.07%)</title><rect x="985.6" y="293" width="0.8" height="15.0" fill="rgb(248,91,38)" rx="2" ry="2" />
<text  x="988.55" y="303.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (10 samples, 0.02%)</title><rect x="395.5" y="229" width="0.2" height="15.0" fill="rgb(211,126,31)" rx="2" ry="2" />
<text  x="398.46" y="239.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (6 samples, 0.01%)</title><rect x="635.7" y="469" width="0.2" height="15.0" fill="rgb(230,208,51)" rx="2" ry="2" />
<text  x="638.74" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (6 samples, 0.01%)</title><rect x="1148.3" y="469" width="0.2" height="15.0" fill="rgb(237,31,20)" rx="2" ry="2" />
<text  x="1151.33" y="479.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_nodes (10 samples, 0.02%)</title><rect x="1168.9" y="453" width="0.2" height="15.0" fill="rgb(223,127,50)" rx="2" ry="2" />
<text  x="1171.88" y="463.5" ></text>
</g>
<g >
<title>mutation_fragment::visit&lt;partition_snapshot_read_accounter&amp;&gt; (7 samples, 0.01%)</title><rect x="151.3" y="245" width="0.1" height="15.0" fill="rgb(242,133,30)" rx="2" ry="2" />
<text  x="154.28" y="255.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (5 samples, 0.01%)</title><rect x="903.0" y="357" width="0.1" height="15.0" fill="rgb(209,38,26)" rx="2" ry="2" />
<text  x="905.98" y="367.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (5 samples, 0.01%)</title><rect x="680.0" y="437" width="0.1" height="15.0" fill="rgb(205,78,33)" rx="2" ry="2" />
<text  x="683.02" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (12 samples, 0.02%)</title><rect x="413.7" y="277" width="0.3" height="15.0" fill="rgb(241,54,28)" rx="2" ry="2" />
<text  x="416.69" y="287.5" ></text>
</g>
<g >
<title>operator new (26 samples, 0.05%)</title><rect x="245.7" y="181" width="0.7" height="15.0" fill="rgb(254,174,25)" rx="2" ry="2" />
<text  x="248.75" y="191.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::operator== (84 samples, 0.17%)</title><rect x="794.2" y="133" width="2.1" height="15.0" fill="rgb(239,36,17)" rx="2" ry="2" />
<text  x="797.25" y="143.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::operator== (6 samples, 0.01%)</title><rect x="793.6" y="149" width="0.2" height="15.0" fill="rgb(243,120,5)" rx="2" ry="2" />
<text  x="796.65" y="159.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_clear (85 samples, 0.17%)</title><rect x="576.8" y="357" width="2.1" height="15.0" fill="rgb(220,44,36)" rx="2" ry="2" />
<text  x="579.82" y="367.5" ></text>
</g>
<g >
<title>operator new (25 samples, 0.05%)</title><rect x="536.6" y="325" width="0.6" height="15.0" fill="rgb(233,116,3)" rx="2" ry="2" />
<text  x="539.59" y="335.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (8 samples, 0.02%)</title><rect x="774.3" y="309" width="0.2" height="15.0" fill="rgb(233,59,14)" rx="2" ry="2" />
<text  x="777.32" y="319.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector (19 samples, 0.04%)</title><rect x="1072.0" y="293" width="0.4" height="15.0" fill="rgb(225,82,46)" rx="2" ry="2" />
<text  x="1075.00" y="303.5" ></text>
</g>
<g >
<title>compound_wrapper&lt;partition_key, partition_key_view&gt;::make_empty (81 samples, 0.16%)</title><rect x="542.1" y="389" width="2.0" height="15.0" fill="rgb(228,101,49)" rx="2" ry="2" />
<text  x="545.13" y="399.5" ></text>
</g>
<g >
<title>std::__detail::_List_node_base::_M_hook (14 samples, 0.03%)</title><rect x="445.4" y="261" width="0.3" height="15.0" fill="rgb(233,219,51)" rx="2" ry="2" />
<text  x="448.39" y="271.5" ></text>
</g>
<g >
<title>query_result_builder::consume (1,947 samples, 3.94%)</title><rect x="318.9" y="213" width="46.5" height="15.0" fill="rgb(228,204,3)" rx="2" ry="2" />
<text  x="321.88" y="223.5" >quer..</text>
</g>
<g >
<title>managed_bytes::managed_bytes (12 samples, 0.02%)</title><rect x="928.6" y="357" width="0.3" height="15.0" fill="rgb(240,42,43)" rx="2" ry="2" />
<text  x="931.64" y="367.5" ></text>
</g>
<g >
<title>seastar::hrtimer_aio_completion::complete_with (27 samples, 0.05%)</title><rect x="1176.7" y="469" width="0.6" height="15.0" fill="rgb(242,126,24)" rx="2" ry="2" />
<text  x="1179.67" y="479.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (23 samples, 0.05%)</title><rect x="624.3" y="469" width="0.5" height="15.0" fill="rgb(205,129,34)" rx="2" ry="2" />
<text  x="627.30" y="479.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;locator::snitch_ptr&gt;::local (13 samples, 0.03%)</title><rect x="1094.6" y="309" width="0.3" height="15.0" fill="rgb(207,16,9)" rx="2" ry="2" />
<text  x="1097.60" y="319.5" ></text>
</g>
<g >
<title>partition_version_ref::operator* (13 samples, 0.03%)</title><rect x="512.2" y="229" width="0.4" height="15.0" fill="rgb(229,198,16)" rx="2" ry="2" />
<text  x="515.24" y="239.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (11 samples, 0.02%)</title><rect x="932.1" y="405" width="0.2" height="15.0" fill="rgb(220,13,42)" rx="2" ry="2" />
<text  x="935.06" y="415.5" ></text>
</g>
<g >
<title>seastar::do_until&lt;flush_reader::fill_buffer (8 samples, 0.02%)</title><rect x="22.7" y="469" width="0.2" height="15.0" fill="rgb(236,14,5)" rx="2" ry="2" />
<text  x="25.69" y="479.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (8 samples, 0.02%)</title><rect x="662.6" y="469" width="0.2" height="15.0" fill="rgb(247,179,43)" rx="2" ry="2" />
<text  x="665.65" y="479.5" ></text>
</g>
<g >
<title>memtable::make_flat_reader (2,618 samples, 5.30%)</title><rect x="458.8" y="341" width="62.6" height="15.0" fill="rgb(237,215,37)" rx="2" ry="2" />
<text  x="461.84" y="351.5" >memtab..</text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (15 samples, 0.03%)</title><rect x="622.8" y="437" width="0.4" height="15.0" fill="rgb(244,21,4)" rx="2" ry="2" />
<text  x="625.82" y="447.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_erase_at_end (57 samples, 0.12%)</title><rect x="366.9" y="181" width="1.3" height="15.0" fill="rgb(208,45,36)" rx="2" ry="2" />
<text  x="369.88" y="191.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::operator== (12 samples, 0.02%)</title><rect x="738.8" y="293" width="0.3" height="15.0" fill="rgb(252,90,22)" rx="2" ry="2" />
<text  x="741.84" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_need_rehash (37 samples, 0.07%)</title><rect x="1160.7" y="453" width="0.9" height="15.0" fill="rgb(244,99,39)" rx="2" ry="2" />
<text  x="1163.71" y="463.5" ></text>
</g>
<g >
<title>query::querier_base::querier_base (38 samples, 0.08%)</title><rect x="618.3" y="405" width="0.9" height="15.0" fill="rgb(218,154,51)" rx="2" ry="2" />
<text  x="621.30" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (26 samples, 0.05%)</title><rect x="160.0" y="181" width="0.6" height="15.0" fill="rgb(220,88,3)" rx="2" ry="2" />
<text  x="163.00" y="191.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::on_permit_unused (11 samples, 0.02%)</title><rect x="67.3" y="437" width="0.3" height="15.0" fill="rgb(252,188,6)" rx="2" ry="2" />
<text  x="70.29" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (21 samples, 0.04%)</title><rect x="549.5" y="389" width="0.5" height="15.0" fill="rgb(252,52,31)" rx="2" ry="2" />
<text  x="552.52" y="399.5" ></text>
</g>
<g >
<title>service::storage_proxy::send_to_live_endpoints (9 samples, 0.02%)</title><rect x="1141.2" y="261" width="0.3" height="15.0" fill="rgb(241,205,22)" rx="2" ry="2" />
<text  x="1144.24" y="271.5" ></text>
</g>
<g >
<title>seastar::future&lt;query::result_memory_accounter&gt;::get0 (20 samples, 0.04%)</title><rect x="601.3" y="437" width="0.5" height="15.0" fill="rgb(210,211,5)" rx="2" ry="2" />
<text  x="604.34" y="447.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;mutation_reader_merger::reader_and_last_fragment_kind*, mutation_reader_merger::prepare_next (5 samples, 0.01%)</title><rect x="261.1" y="309" width="0.2" height="15.0" fill="rgb(244,29,20)" rx="2" ry="2" />
<text  x="264.13" y="319.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::do_get_limit (5 samples, 0.01%)</title><rect x="1117.0" y="389" width="0.2" height="15.0" fill="rgb(205,73,6)" rx="2" ry="2" />
<text  x="1120.03" y="399.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;flat_mutation_reader::impl::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (100 samples, 0.20%)</title><rect x="293.2" y="293" width="2.4" height="15.0" fill="rgb(231,216,54)" rx="2" ry="2" />
<text  x="296.22" y="303.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::value_ptr&gt; &gt;::invoke&lt;utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (77 samples, 0.16%)</title><rect x="733.8" y="357" width="1.8" height="15.0" fill="rgb(214,100,48)" rx="2" ry="2" />
<text  x="736.80" y="367.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::normalColumnOperation (51 samples, 0.10%)</title><rect x="19.1" y="325" width="1.2" height="15.0" fill="rgb(252,146,1)" rx="2" ry="2" />
<text  x="22.06" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (6 samples, 0.01%)</title><rect x="333.7" y="181" width="0.1" height="15.0" fill="rgb(239,16,23)" rx="2" ry="2" />
<text  x="336.69" y="191.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_M_reset (10 samples, 0.02%)</title><rect x="924.1" y="341" width="0.2" height="15.0" fill="rgb(251,91,53)" rx="2" ry="2" />
<text  x="927.10" y="351.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (8 samples, 0.02%)</title><rect x="532.2" y="229" width="0.2" height="15.0" fill="rgb(246,200,47)" rx="2" ry="2" />
<text  x="535.17" y="239.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_rehash (71 samples, 0.14%)</title><rect x="1157.6" y="437" width="1.7" height="15.0" fill="rgb(243,178,0)" rx="2" ry="2" />
<text  x="1160.55" y="447.5" ></text>
</g>
<g >
<title>operator new (30 samples, 0.06%)</title><rect x="606.7" y="421" width="0.7" height="15.0" fill="rgb(230,106,13)" rx="2" ry="2" />
<text  x="609.67" y="431.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (6 samples, 0.01%)</title><rect x="295.0" y="229" width="0.1" height="15.0" fill="rgb(235,133,47)" rx="2" ry="2" />
<text  x="297.99" y="239.5" ></text>
</g>
<g >
<title>absl::hash_internal::AbslHashValue&lt;absl::hash_internal::HashState&gt; (13 samples, 0.03%)</title><rect x="825.2" y="293" width="0.3" height="15.0" fill="rgb(227,130,34)" rx="2" ry="2" />
<text  x="828.23" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (23 samples, 0.05%)</title><rect x="496.0" y="277" width="0.6" height="15.0" fill="rgb(208,99,41)" rx="2" ry="2" />
<text  x="499.04" y="287.5" ></text>
</g>
<g >
<title>query::querier_base::~querier_base (10 samples, 0.02%)</title><rect x="62.3" y="453" width="0.3" height="15.0" fill="rgb(213,67,8)" rx="2" ry="2" />
<text  x="65.32" y="463.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (5 samples, 0.01%)</title><rect x="509.5" y="213" width="0.2" height="15.0" fill="rgb(230,169,44)" rx="2" ry="2" />
<text  x="512.54" y="223.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;, service::storage_proxy::query_result_local (129 samples, 0.26%)</title><rect x="634.8" y="501" width="3.1" height="15.0" fill="rgb(215,144,6)" rx="2" ry="2" />
<text  x="637.79" y="511.5" ></text>
</g>
<g >
<title>cql3::query_options::query_options (183 samples, 0.37%)</title><rect x="844.8" y="421" width="4.4" height="15.0" fill="rgb(254,141,14)" rx="2" ry="2" />
<text  x="847.85" y="431.5" ></text>
</g>
<g >
<title>partition_key::from_range&lt;std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt; const&amp;&gt; (194 samples, 0.39%)</title><rect x="924.6" y="389" width="4.6" height="15.0" fill="rgb(213,166,35)" rx="2" ry="2" />
<text  x="927.58" y="399.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (23 samples, 0.05%)</title><rect x="1168.6" y="469" width="0.5" height="15.0" fill="rgb(228,45,41)" rx="2" ry="2" />
<text  x="1171.57" y="479.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (20 samples, 0.04%)</title><rect x="213.7" y="165" width="0.5" height="15.0" fill="rgb(235,63,9)" rx="2" ry="2" />
<text  x="216.71" y="175.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (15 samples, 0.03%)</title><rect x="654.7" y="469" width="0.4" height="15.0" fill="rgb(254,132,44)" rx="2" ry="2" />
<text  x="657.74" y="479.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;query::read_command&gt;::make&lt;utils::UUID const&amp;, utils::UUID, query::partition_slice, query::max_result_size, query::row_limit, query::partition_limit, std::chrono::time_point&lt;gc_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt; &gt;&amp;, std::optional&lt;tracing::trace_info&gt;, utils::UUID, seastar::bool_class&lt;query::is_first_page_tag&gt; const&amp;, long&gt; (230 samples, 0.47%)</title><rect x="1123.5" y="421" width="5.5" height="15.0" fill="rgb(224,204,30)" rx="2" ry="2" />
<text  x="1126.53" y="431.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_last_fragment_kind, 4ul&gt;::emplace_back&lt;std::_List_iterator&lt;flat_mutation_reader&gt;, mutation_fragment::kind&gt; (17 samples, 0.03%)</title><rect x="445.7" y="261" width="0.4" height="15.0" fill="rgb(233,178,22)" rx="2" ry="2" />
<text  x="448.73" y="271.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (33 samples, 0.07%)</title><rect x="386.5" y="165" width="0.8" height="15.0" fill="rgb(235,229,31)" rx="2" ry="2" />
<text  x="389.47" y="175.5" ></text>
</g>
<g >
<title>seastar::future&lt;utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (17 samples, 0.03%)</title><rect x="785.0" y="229" width="0.4" height="15.0" fill="rgb(229,212,49)" rx="2" ry="2" />
<text  x="787.98" y="239.5" ></text>
</g>
<g >
<title>partition_snapshot::get_change_mark (5 samples, 0.01%)</title><rect x="225.5" y="165" width="0.2" height="15.0" fill="rgb(229,152,40)" rx="2" ry="2" />
<text  x="228.53" y="175.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (16 samples, 0.03%)</title><rect x="621.9" y="373" width="0.3" height="15.0" fill="rgb(240,98,45)" rx="2" ry="2" />
<text  x="624.86" y="383.5" ></text>
</g>
<g >
<title>operator new (49 samples, 0.10%)</title><rect x="1159.5" y="437" width="1.2" height="15.0" fill="rgb(241,197,34)" rx="2" ry="2" />
<text  x="1162.54" y="447.5" ></text>
</g>
<g >
<title>operator delete (36 samples, 0.07%)</title><rect x="413.1" y="293" width="0.9" height="15.0" fill="rgb(231,46,28)" rx="2" ry="2" />
<text  x="416.11" y="303.5" ></text>
</g>
<g >
<title>utils::basic_ihistogram&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt; &gt;::mark (5 samples, 0.01%)</title><rect x="600.6" y="405" width="0.1" height="15.0" fill="rgb(246,121,21)" rx="2" ry="2" />
<text  x="603.62" y="415.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::constant&gt;  (527 samples, 1.07%)</title><rect x="885.2" y="309" width="12.6" height="15.0" fill="rgb(254,120,3)" rx="2" ry="2" />
<text  x="888.18" y="319.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (5 samples, 0.01%)</title><rect x="669.5" y="437" width="0.1" height="15.0" fill="rgb(210,179,14)" rx="2" ry="2" />
<text  x="672.48" y="447.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::forward_to (37 samples, 0.07%)</title><rect x="863.2" y="469" width="0.8" height="15.0" fill="rgb(210,171,42)" rx="2" ry="2" />
<text  x="866.15" y="479.5" ></text>
</g>
<g >
<title>__strcmp_avx2 (120 samples, 0.24%)</title><rect x="12.7" y="581" width="2.8" height="15.0" fill="rgb(251,76,39)" rx="2" ry="2" />
<text  x="15.68" y="591.5" ></text>
</g>
<g >
<title>basic_atomic_cell_view&lt; (389 samples, 0.79%)</title><rect x="377.2" y="165" width="9.3" height="15.0" fill="rgb(226,96,1)" rx="2" ry="2" />
<text  x="380.18" y="175.5" ></text>
</g>
<g >
<title>clustering_row::external_memory_usage (311 samples, 0.63%)</title><rect x="204.5" y="165" width="7.4" height="15.0" fill="rgb(228,125,4)" rx="2" ry="2" />
<text  x="207.46" y="175.5" ></text>
</g>
<g >
<title>database::find_schema (231 samples, 0.47%)</title><rect x="817.9" y="373" width="5.6" height="15.0" fill="rgb(220,178,44)" rx="2" ry="2" />
<text  x="820.95" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::disable_abort_on_alloc_failure_temporarily (5 samples, 0.01%)</title><rect x="251.4" y="213" width="0.1" height="15.0" fill="rgb(244,2,30)" rx="2" ry="2" />
<text  x="254.36" y="223.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_4findERKNS5_10expressionENS5_6oper_tEEUlRS7_E_EES8_SE_T_EUlSG_E_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_8constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_11conjunctionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_12column_valueEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_5tokenEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13function_callEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4castEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_15field_selectionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4nullEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13bind_variableEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_16untyped_constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_17tuple_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_22collection_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSO_S6_SS_SW_S10_S14_S18_S1C_S1G_S1K_S1O_S1S_SK_S1W_S20_S24_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES29_S2C_ (8 samples, 0.02%)</title><rect x="951.3" y="373" width="0.2" height="15.0" fill="rgb(206,71,18)" rx="2" ry="2" />
<text  x="954.34" y="383.5" ></text>
</g>
<g >
<title>seastar::reactor::add_timer (24 samples, 0.05%)</title><rect x="1026.7" y="149" width="0.6" height="15.0" fill="rgb(253,148,8)" rx="2" ry="2" />
<text  x="1029.72" y="159.5" ></text>
</g>
<g >
<title>std::type_info::operator== (6 samples, 0.01%)</title><rect x="1173.7" y="405" width="0.1" height="15.0" fill="rgb(252,186,37)" rx="2" ry="2" />
<text  x="1176.71" y="415.5" ></text>
</g>
<g >
<title>std::hash&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::operator (7 samples, 0.01%)</title><rect x="757.3" y="341" width="0.2" height="15.0" fill="rgb(248,220,49)" rx="2" ry="2" />
<text  x="760.28" y="351.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (7 samples, 0.01%)</title><rect x="627.9" y="453" width="0.2" height="15.0" fill="rgb(210,5,54)" rx="2" ry="2" />
<text  x="630.91" y="463.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::emplace_back&lt;std::_List_iterator&lt;flat_mutation_reader&gt; const&amp;, mutation_fragment&gt; (12 samples, 0.02%)</title><rect x="142.5" y="245" width="0.3" height="15.0" fill="rgb(232,209,43)" rx="2" ry="2" />
<text  x="145.53" y="255.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_internal&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt; &gt; (36 samples, 0.07%)</title><rect x="1141.1" y="325" width="0.9" height="15.0" fill="rgb(239,109,53)" rx="2" ry="2" />
<text  x="1144.12" y="335.5" ></text>
</g>
<g >
<title>double_decker&lt;long, memtable_entry, dht::raw_token_less_comparator, dht::ring_position_comparator, 16,  (1,027 samples, 2.08%)</title><rect x="463.4" y="325" width="24.5" height="15.0" fill="rgb(223,69,40)" rx="2" ry="2" />
<text  x="466.36" y="335.5" >d..</text>
</g>
<g >
<title>cql3::statements::modification_statement::execute_without_condition (30 samples, 0.06%)</title><rect x="859.4" y="421" width="0.7" height="15.0" fill="rgb(253,117,46)" rx="2" ry="2" />
<text  x="862.40" y="431.5" ></text>
</g>
<g >
<title>mutation_fragment::operator= (20 samples, 0.04%)</title><rect x="141.0" y="229" width="0.5" height="15.0" fill="rgb(248,116,6)" rx="2" ry="2" />
<text  x="144.00" y="239.5" ></text>
</g>
<g >
<title>cql3::constants::marker::to_expression (14 samples, 0.03%)</title><rect x="881.1" y="341" width="0.3" height="15.0" fill="rgb(209,86,32)" rx="2" ry="2" />
<text  x="884.09" y="351.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (14 samples, 0.03%)</title><rect x="858.7" y="453" width="0.3" height="15.0" fill="rgb(213,220,8)" rx="2" ry="2" />
<text  x="861.71" y="463.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (5 samples, 0.01%)</title><rect x="605.4" y="421" width="0.2" height="15.0" fill="rgb(217,216,19)" rx="2" ry="2" />
<text  x="608.45" y="431.5" ></text>
</g>
<g >
<title>std::__find_if&lt;gms::inet_address*, __gnu_cxx::__ops::_Iter_pred&lt;std::unary_negate&lt;std::binder1st&lt;std::_Mem_fn&lt;bool  (5 samples, 0.01%)</title><rect x="1092.1" y="309" width="0.2" height="15.0" fill="rgb(228,222,35)" rx="2" ry="2" />
<text  x="1095.14" y="319.5" ></text>
</g>
<g >
<title>row_cache::do_make_reader (426 samples, 0.86%)</title><rect x="524.1" y="325" width="10.2" height="15.0" fill="rgb(235,117,54)" rx="2" ry="2" />
<text  x="527.09" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (19 samples, 0.04%)</title><rect x="39.9" y="453" width="0.5" height="15.0" fill="rgb(239,200,51)" rx="2" ry="2" />
<text  x="42.94" y="463.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::untyped_constant&gt; (5 samples, 0.01%)</title><rect x="19.6" y="277" width="0.1" height="15.0" fill="rgb(233,158,47)" rx="2" ry="2" />
<text  x="22.58" y="287.5" ></text>
</g>
<g >
<title>write_fragmented&lt;managed_bytes_basic_view&lt; (70 samples, 0.14%)</title><rect x="892.4" y="261" width="1.7" height="15.0" fill="rgb(233,8,37)" rx="2" ry="2" />
<text  x="895.40" y="271.5" ></text>
</g>
<g >
<title>std::default_delete&lt;seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::entry&gt;::operator (7 samples, 0.01%)</title><rect x="76.5" y="389" width="0.2" height="15.0" fill="rgb(241,87,12)" rx="2" ry="2" />
<text  x="79.54" y="399.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_slice_or_needs_filtering (29 samples, 0.06%)</title><rect x="645.8" y="437" width="0.6" height="15.0" fill="rgb(216,135,1)" rx="2" ry="2" />
<text  x="648.75" y="447.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (284 samples, 0.58%)</title><rect x="15.9" y="597" width="6.7" height="15.0" fill="rgb(205,84,12)" rx="2" ry="2" />
<text  x="18.85" y="607.5" ></text>
</g>
<g >
<title>mutation_reader_merger::close (708 samples, 1.43%)</title><rect x="553.6" y="373" width="16.9" height="15.0" fill="rgb(219,175,13)" rx="2" ry="2" />
<text  x="556.62" y="383.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::local (15 samples, 0.03%)</title><rect x="1133.5" y="405" width="0.4" height="15.0" fill="rgb(247,61,12)" rx="2" ry="2" />
<text  x="1136.54" y="415.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (5 samples, 0.01%)</title><rect x="930.5" y="357" width="0.1" height="15.0" fill="rgb(252,72,54)" rx="2" ry="2" />
<text  x="933.50" y="367.5" ></text>
</g>
<g >
<title>seastar::future&lt;utils::small_vector&lt;service::storage_proxy::unique_response_handler, 1ul&gt; &gt;::then_impl&lt;service::storage_proxy::mutate_internal&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt; &gt; (16 samples, 0.03%)</title><rect x="1141.1" y="309" width="0.4" height="15.0" fill="rgb(222,147,53)" rx="2" ry="2" />
<text  x="1144.12" y="319.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (10 samples, 0.02%)</title><rect x="65.7" y="437" width="0.2" height="15.0" fill="rgb(230,203,48)" rx="2" ry="2" />
<text  x="68.69" y="447.5" ></text>
</g>
<g >
<title>operator new (77 samples, 0.16%)</title><rect x="952.2" y="405" width="1.8" height="15.0" fill="rgb(219,26,25)" rx="2" ry="2" />
<text  x="955.15" y="415.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (7 samples, 0.01%)</title><rect x="756.2" y="293" width="0.2" height="15.0" fill="rgb(214,113,34)" rx="2" ry="2" />
<text  x="759.18" y="303.5" ></text>
</g>
<g >
<title>operator new (76 samples, 0.15%)</title><rect x="984.5" y="325" width="1.9" height="15.0" fill="rgb(234,220,10)" rx="2" ry="2" />
<text  x="987.55" y="335.5" ></text>
</g>
<g >
<title>operator new (36 samples, 0.07%)</title><rect x="457.5" y="325" width="0.9" height="15.0" fill="rgb(222,208,17)" rx="2" ry="2" />
<text  x="460.51" y="335.5" ></text>
</g>
<g >
<title>mutation_source::make_reader (4,628 samples, 9.37%)</title><rect x="427.1" y="405" width="110.5" height="15.0" fill="rgb(216,203,1)" rx="2" ry="2" />
<text  x="430.07" y="415.5" >mutation_sour..</text>
</g>
<g >
<title>compound_type&lt; (100 samples, 0.20%)</title><rect x="926.3" y="357" width="2.3" height="15.0" fill="rgb(219,196,15)" rx="2" ry="2" />
<text  x="929.25" y="367.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.01%)</title><rect x="522.4" y="341" width="0.2" height="15.0" fill="rgb(218,4,35)" rx="2" ry="2" />
<text  x="525.45" y="351.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::move_it (5 samples, 0.01%)</title><rect x="655.5" y="469" width="0.1" height="15.0" fill="rgb(209,121,37)" rx="2" ry="2" />
<text  x="658.50" y="479.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_Optional_payload_base (10 samples, 0.02%)</title><rect x="736.9" y="357" width="0.2" height="15.0" fill="rgb(218,27,14)" rx="2" ry="2" />
<text  x="739.88" y="367.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (173 samples, 0.35%)</title><rect x="470.6" y="261" width="4.2" height="15.0" fill="rgb(250,180,15)" rx="2" ry="2" />
<text  x="473.62" y="271.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_construct&lt;interval_bound&lt;dht::ring_position&gt; const&amp;&gt; (22 samples, 0.04%)</title><rect x="1041.7" y="277" width="0.5" height="15.0" fill="rgb(249,70,38)" rx="2" ry="2" />
<text  x="1044.72" y="287.5" ></text>
</g>
<g >
<title>operator delete (10 samples, 0.02%)</title><rect x="38.9" y="453" width="0.3" height="15.0" fill="rgb(218,189,26)" rx="2" ry="2" />
<text  x="41.93" y="463.5" ></text>
</g>
<g >
<title>tombstone::apply (10 samples, 0.02%)</title><rect x="391.6" y="197" width="0.3" height="15.0" fill="rgb(250,105,46)" rx="2" ry="2" />
<text  x="394.63" y="207.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::cql_statement&gt;::~shared_ptr (13 samples, 0.03%)</title><rect x="827.6" y="421" width="0.3" height="15.0" fill="rgb(206,213,6)" rx="2" ry="2" />
<text  x="830.60" y="431.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (15 samples, 0.03%)</title><rect x="677.3" y="453" width="0.4" height="15.0" fill="rgb(251,221,7)" rx="2" ry="2" />
<text  x="680.34" y="463.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;bool  (5 samples, 0.01%)</title><rect x="549.3" y="373" width="0.1" height="15.0" fill="rgb(250,128,27)" rx="2" ry="2" />
<text  x="552.28" y="383.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (5 samples, 0.01%)</title><rect x="762.8" y="341" width="0.1" height="15.0" fill="rgb(234,55,15)" rx="2" ry="2" />
<text  x="765.78" y="351.5" ></text>
</g>
<g >
<title>write_row&lt;ser::writer_of_deletable_row&lt;bytes_ostream&gt; &gt; (5 samples, 0.01%)</title><rect x="1141.6" y="149" width="0.1" height="15.0" fill="rgb(232,142,29)" rx="2" ry="2" />
<text  x="1144.62" y="159.5" ></text>
</g>
<g >
<title>cql3::query_options::get_value_at (50 samples, 0.10%)</title><rect x="888.3" y="277" width="1.2" height="15.0" fill="rgb(217,135,27)" rx="2" ry="2" />
<text  x="891.26" y="287.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::result_memory_accounter (7 samples, 0.01%)</title><rect x="601.4" y="421" width="0.2" height="15.0" fill="rgb(208,14,0)" rx="2" ry="2" />
<text  x="604.43" y="431.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (7 samples, 0.01%)</title><rect x="1137.9" y="405" width="0.2" height="15.0" fill="rgb(253,119,11)" rx="2" ry="2" />
<text  x="1140.89" y="415.5" ></text>
</g>
<g >
<title>std::hash&lt;gms::inet_address&gt;::operator (6 samples, 0.01%)</title><rect x="705.7" y="421" width="0.1" height="15.0" fill="rgb(246,38,35)" rx="2" ry="2" />
<text  x="708.65" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (7 samples, 0.01%)</title><rect x="552.5" y="421" width="0.1" height="15.0" fill="rgb(227,165,25)" rx="2" ry="2" />
<text  x="555.48" y="431.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (6 samples, 0.01%)</title><rect x="826.4" y="421" width="0.2" height="15.0" fill="rgb(220,81,19)" rx="2" ry="2" />
<text  x="829.43" y="431.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (5 samples, 0.01%)</title><rect x="39.5" y="437" width="0.1" height="15.0" fill="rgb(238,55,50)" rx="2" ry="2" />
<text  x="42.51" y="447.5" ></text>
</g>
<g >
<title>seastar::do_until&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (11 samples, 0.02%)</title><rect x="858.7" y="421" width="0.3" height="15.0" fill="rgb(254,18,42)" rx="2" ry="2" />
<text  x="861.73" y="431.5" ></text>
</g>
<g >
<title>std::optional&lt;position_in_partition&gt;::operator=&lt;position_in_partition&gt; (9 samples, 0.02%)</title><rect x="233.2" y="245" width="0.2" height="15.0" fill="rgb(232,150,2)" rx="2" ry="2" />
<text  x="236.16" y="255.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;dht::token, std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt;, std::allocator&lt;std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;dht::token&gt;, std::hash&lt;dht::token&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (207 samples, 0.42%)</title><rect x="1086.6" y="261" width="4.9" height="15.0" fill="rgb(241,72,33)" rx="2" ry="2" />
<text  x="1089.57" y="271.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextToken (50 samples, 0.10%)</title><rect x="16.9" y="309" width="1.2" height="15.0" fill="rgb(242,120,4)" rx="2" ry="2" />
<text  x="19.93" y="319.5" ></text>
</g>
<g >
<title>schema_registry_entry::get_schema (11 samples, 0.02%)</title><rect x="974.7" y="341" width="0.2" height="15.0" fill="rgb(222,24,46)" rx="2" ry="2" />
<text  x="977.66" y="351.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (68 samples, 0.14%)</title><rect x="16.6" y="373" width="1.6" height="15.0" fill="rgb(250,10,8)" rx="2" ry="2" />
<text  x="19.57" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (29 samples, 0.06%)</title><rect x="103.0" y="373" width="0.7" height="15.0" fill="rgb(223,10,51)" rx="2" ry="2" />
<text  x="106.04" y="383.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;::basic_sstring (12 samples, 0.02%)</title><rect x="715.2" y="469" width="0.2" height="15.0" fill="rgb(211,18,2)" rx="2" ry="2" />
<text  x="718.16" y="479.5" ></text>
</g>
<g >
<title>operator new (35 samples, 0.07%)</title><rect x="290.9" y="293" width="0.8" height="15.0" fill="rgb(218,216,27)" rx="2" ry="2" />
<text  x="293.86" y="303.5" ></text>
</g>
<g >
<title>seastar::gate::enter (10 samples, 0.02%)</title><rect x="1036.3" y="229" width="0.2" height="15.0" fill="rgb(218,102,22)" rx="2" ry="2" />
<text  x="1039.28" y="239.5" ></text>
</g>
<g >
<title>row_tombstone::apply (18 samples, 0.04%)</title><rect x="391.5" y="213" width="0.5" height="15.0" fill="rgb(213,40,48)" rx="2" ry="2" />
<text  x="394.54" y="223.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (20 samples, 0.04%)</title><rect x="535.1" y="341" width="0.5" height="15.0" fill="rgb(235,96,20)" rx="2" ry="2" />
<text  x="538.13" y="351.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (13 samples, 0.03%)</title><rect x="455.6" y="277" width="0.4" height="15.0" fill="rgb(251,120,42)" rx="2" ry="2" />
<text  x="458.64" y="287.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::push_back (10 samples, 0.02%)</title><rect x="16.7" y="277" width="0.2" height="15.0" fill="rgb(212,213,34)" rx="2" ry="2" />
<text  x="19.69" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (31 samples, 0.06%)</title><rect x="962.1" y="341" width="0.8" height="15.0" fill="rgb(222,174,43)" rx="2" ry="2" />
<text  x="965.14" y="351.5" ></text>
</g>
<g >
<title>range_tombstone_stream::get_next (7 samples, 0.01%)</title><rect x="227.4" y="181" width="0.2" height="15.0" fill="rgb(210,50,11)" rx="2" ry="2" />
<text  x="230.40" y="191.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;::basic_sstring (7 samples, 0.01%)</title><rect x="736.7" y="357" width="0.2" height="15.0" fill="rgb(244,35,16)" rx="2" ry="2" />
<text  x="739.71" y="367.5" ></text>
</g>
<g >
<title>seastar::promise&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::promise (12 samples, 0.02%)</title><rect x="1139.8" y="469" width="0.3" height="15.0" fill="rgb(235,95,43)" rx="2" ry="2" />
<text  x="1142.85" y="479.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (16 samples, 0.03%)</title><rect x="790.1" y="165" width="0.4" height="15.0" fill="rgb(250,28,2)" rx="2" ry="2" />
<text  x="793.14" y="175.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (5 samples, 0.01%)</title><rect x="809.9" y="293" width="0.1" height="15.0" fill="rgb(240,20,47)" rx="2" ry="2" />
<text  x="812.87" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::~disable_abort_on_alloc_failure_temporarily (5 samples, 0.01%)</title><rect x="221.6" y="197" width="0.1" height="15.0" fill="rgb(209,161,18)" rx="2" ry="2" />
<text  x="224.57" y="207.5" ></text>
</g>
<g >
<title>service::never_speculating_read_executor::never_speculating_read_executor (207 samples, 0.42%)</title><rect x="1068.2" y="325" width="5.0" height="15.0" fill="rgb(246,41,7)" rx="2" ry="2" />
<text  x="1071.22" y="335.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::get_limit (22 samples, 0.04%)</title><rect x="1105.1" y="421" width="0.5" height="15.0" fill="rgb(214,204,26)" rx="2" ry="2" />
<text  x="1108.09" y="431.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, enum_set&lt;super_enum&lt;auth::permission,  (640 samples, 1.30%)</title><rect x="785.7" y="229" width="15.3" height="15.0" fill="rgb(209,163,46)" rx="2" ry="2" />
<text  x="788.74" y="239.5" ></text>
</g>
<g >
<title>operator delete (5 samples, 0.01%)</title><rect x="153.7" y="213" width="0.2" height="15.0" fill="rgb(216,20,35)" rx="2" ry="2" />
<text  x="156.74" y="223.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;auth::resource&gt;::_M_reset (10 samples, 0.02%)</title><rect x="810.0" y="293" width="0.2" height="15.0" fill="rgb(207,112,41)" rx="2" ry="2" />
<text  x="812.99" y="303.5" ></text>
</g>
<g >
<title>reader_permit::used_guard::~used_guard (25 samples, 0.05%)</title><rect x="51.7" y="469" width="0.6" height="15.0" fill="rgb(252,71,8)" rx="2" ry="2" />
<text  x="54.67" y="479.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (6 samples, 0.01%)</title><rect x="19.9" y="261" width="0.1" height="15.0" fill="rgb(219,86,1)" rx="2" ry="2" />
<text  x="22.87" y="271.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::node_size (34 samples, 0.07%)</title><rect x="205.1" y="149" width="0.8" height="15.0" fill="rgb(216,1,53)" rx="2" ry="2" />
<text  x="208.06" y="159.5" ></text>
</g>
<g >
<title>mutation_reader_merger::close (6 samples, 0.01%)</title><rect x="582.3" y="389" width="0.2" height="15.0" fill="rgb(245,102,48)" rx="2" ry="2" />
<text  x="585.34" y="399.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector (13 samples, 0.03%)</title><rect x="1096.5" y="341" width="0.3" height="15.0" fill="rgb(226,76,24)" rx="2" ry="2" />
<text  x="1099.53" y="351.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (123 samples, 0.25%)</title><rect x="834.5" y="389" width="2.9" height="15.0" fill="rgb(254,160,45)" rx="2" ry="2" />
<text  x="837.50" y="399.5" ></text>
</g>
<g >
<title>seastar::repeat&lt;flat_mutation_reader::impl::consume_pausable&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (22 samples, 0.04%)</title><rect x="682.2" y="373" width="0.5" height="15.0" fill="rgb(225,80,4)" rx="2" ry="2" />
<text  x="685.17" y="383.5" ></text>
</g>
<g >
<title>tracing::global_trace_state_ptr::get (6 samples, 0.01%)</title><rect x="1047.7" y="293" width="0.2" height="15.0" fill="rgb(241,5,19)" rx="2" ry="2" />
<text  x="1050.74" y="303.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::indirect_move (12 samples, 0.02%)</title><rect x="1029.7" y="197" width="0.3" height="15.0" fill="rgb(235,53,43)" rx="2" ry="2" />
<text  x="1032.73" y="207.5" ></text>
</g>
<g >
<title>seastar::repeat&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (6,933 samples, 14.04%)</title><rect x="119.2" y="373" width="165.7" height="15.0" fill="rgb(208,213,6)" rx="2" ry="2" />
<text  x="122.24" y="383.5" >seastar::repeat&lt;mergi..</text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;query::result&gt;::dispose (121 samples, 0.24%)</title><rect x="36.0" y="453" width="2.9" height="15.0" fill="rgb(212,224,39)" rx="2" ry="2" />
<text  x="38.97" y="463.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (5,677 samples, 11.49%)</title><rect x="286.9" y="389" width="135.6" height="15.0" fill="rgb(217,68,23)" rx="2" ry="2" />
<text  x="289.87" y="399.5" >query::consume_pa..</text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (38 samples, 0.08%)</title><rect x="988.4" y="277" width="0.9" height="15.0" fill="rgb(214,43,28)" rx="2" ry="2" />
<text  x="991.40" y="287.5" ></text>
</g>
<g >
<title>memtable_entry::snapshot (122 samples, 0.25%)</title><rect x="515.6" y="325" width="2.9" height="15.0" fill="rgb(241,31,51)" rx="2" ry="2" />
<text  x="518.56" y="335.5" ></text>
</g>
<g >
<title>operator new (24 samples, 0.05%)</title><rect x="492.5" y="293" width="0.5" height="15.0" fill="rgb(222,109,2)" rx="2" ry="2" />
<text  x="495.46" y="303.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;flat_mutation_reader  (4,553 samples, 9.22%)</title><rect x="428.8" y="373" width="108.8" height="15.0" fill="rgb(215,53,50)" rx="2" ry="2" />
<text  x="431.79" y="383.5" >std::_Functio..</text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (9 samples, 0.02%)</title><rect x="1134.4" y="421" width="0.2" height="15.0" fill="rgb(251,112,48)" rx="2" ry="2" />
<text  x="1137.40" y="431.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (113 samples, 0.23%)</title><rect x="18.2" y="373" width="2.7" height="15.0" fill="rgb(207,163,48)" rx="2" ry="2" />
<text  x="21.22" y="383.5" ></text>
</g>
<g >
<title>cql3::restrictions::(anonymous namespace)::range_from_bytes (968 samples, 1.96%)</title><rect x="907.5" y="405" width="23.1" height="15.0" fill="rgb(247,129,5)" rx="2" ry="2" />
<text  x="910.52" y="415.5" >c..</text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (7 samples, 0.01%)</title><rect x="789.5" y="181" width="0.2" height="15.0" fill="rgb(238,53,48)" rx="2" ry="2" />
<text  x="792.54" y="191.5" ></text>
</g>
<g >
<title>mutation_reader_merger::mutation_reader_merger (369 samples, 0.75%)</title><rect x="439.7" y="309" width="8.8" height="15.0" fill="rgb(214,149,46)" rx="2" ry="2" />
<text  x="442.73" y="319.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::query_options, std::default_delete&lt;cql3::query_options&gt; &gt;::~unique_ptr (161 samples, 0.33%)</title><rect x="666.3" y="485" width="3.9" height="15.0" fill="rgb(230,5,37)" rx="2" ry="2" />
<text  x="669.33" y="495.5" ></text>
</g>
<g >
<title>mutation_querier::prepare_writers (47 samples, 0.10%)</title><rect x="327.7" y="181" width="1.1" height="15.0" fill="rgb(227,45,38)" rx="2" ry="2" />
<text  x="330.72" y="191.5" ></text>
</g>
<g >
<title>compound_type&lt; (83 samples, 0.17%)</title><rect x="909.7" y="373" width="2.0" height="15.0" fill="rgb(229,185,28)" rx="2" ry="2" />
<text  x="912.74" y="383.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate (756 samples, 1.53%)</title><rect x="881.4" y="341" width="18.1" height="15.0" fill="rgb(216,11,29)" rx="2" ry="2" />
<text  x="884.43" y="351.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::iterator_at (6 samples, 0.01%)</title><rect x="825.1" y="309" width="0.1" height="15.0" fill="rgb(240,34,14)" rx="2" ry="2" />
<text  x="828.07" y="319.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (5 samples, 0.01%)</title><rect x="1047.5" y="293" width="0.1" height="15.0" fill="rgb(245,130,24)" rx="2" ry="2" />
<text  x="1050.48" y="303.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::_Move_ctor_base (8 samples, 0.02%)</title><rect x="318.0" y="149" width="0.2" height="15.0" fill="rgb(245,200,38)" rx="2" ry="2" />
<text  x="321.05" y="159.5" ></text>
</g>
<g >
<title>operator delete (21 samples, 0.04%)</title><rect x="660.6" y="421" width="0.5" height="15.0" fill="rgb(219,46,32)" rx="2" ry="2" />
<text  x="663.57" y="431.5" ></text>
</g>
<g >
<title>database::find_column_family (77 samples, 0.16%)</title><rect x="1052.5" y="341" width="1.8" height="15.0" fill="rgb(223,75,11)" rx="2" ry="2" />
<text  x="1055.45" y="351.5" ></text>
</g>
<g >
<title>operator new (20 samples, 0.04%)</title><rect x="532.8" y="261" width="0.5" height="15.0" fill="rgb(210,171,45)" rx="2" ry="2" />
<text  x="535.84" y="271.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;std::tuple&lt;std::optional&lt;clustering_key_prefix&gt; &gt; &gt;, query::consume_page&lt; (25 samples, 0.05%)</title><rect x="682.1" y="501" width="0.6" height="15.0" fill="rgb(246,121,4)" rx="2" ry="2" />
<text  x="685.14" y="511.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (7 samples, 0.01%)</title><rect x="637.2" y="469" width="0.2" height="15.0" fill="rgb(227,162,36)" rx="2" ry="2" />
<text  x="640.25" y="479.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (7 samples, 0.01%)</title><rect x="1122.5" y="405" width="0.2" height="15.0" fill="rgb(219,56,3)" rx="2" ry="2" />
<text  x="1125.50" y="415.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;std::optional&lt;clustering_key_prefix&gt; &gt;::dispose (8 samples, 0.02%)</title><rect x="421.5" y="373" width="0.2" height="15.0" fill="rgb(246,8,8)" rx="2" ry="2" />
<text  x="424.55" y="383.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (14 samples, 0.03%)</title><rect x="842.7" y="341" width="0.3" height="15.0" fill="rgb(244,183,15)" rx="2" ry="2" />
<text  x="845.68" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (5 samples, 0.01%)</title><rect x="161.2" y="213" width="0.2" height="15.0" fill="rgb(238,127,27)" rx="2" ry="2" />
<text  x="164.24" y="223.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::guard (8 samples, 0.02%)</title><rect x="499.5" y="261" width="0.2" height="15.0" fill="rgb(215,218,50)" rx="2" ry="2" />
<text  x="502.48" y="271.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;mutation_reader_merger::reader_and_last_fragment_kind*, mutation_reader_merger::prepare_next (616 samples, 1.25%)</title><rect x="130.7" y="293" width="14.7" height="15.0" fill="rgb(248,134,14)" rx="2" ry="2" />
<text  x="133.68" y="303.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;clustering_key_prefix, false, false&gt;::_Optional_base (7 samples, 0.01%)</title><rect x="230.5" y="229" width="0.1" height="15.0" fill="rgb(231,13,21)" rx="2" ry="2" />
<text  x="233.46" y="239.5" ></text>
</g>
<g >
<title>ser::safe_serialize_as_uint32&lt;bytes_ostream&gt; (50 samples, 0.10%)</title><rect x="358.4" y="149" width="1.2" height="15.0" fill="rgb(209,97,1)" rx="2" ry="2" />
<text  x="361.40" y="159.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (6 samples, 0.01%)</title><rect x="756.7" y="309" width="0.1" height="15.0" fill="rgb(243,173,51)" rx="2" ry="2" />
<text  x="759.66" y="319.5" ></text>
</g>
<g >
<title>partition_snapshot::partition_tombstone (22 samples, 0.04%)</title><rect x="509.9" y="245" width="0.5" height="15.0" fill="rgb(234,77,53)" rx="2" ry="2" />
<text  x="512.88" y="255.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (23 samples, 0.05%)</title><rect x="701.3" y="421" width="0.6" height="15.0" fill="rgb(238,56,17)" rx="2" ry="2" />
<text  x="704.33" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value_view, std::allocator&lt;cql3::raw_value_view&gt; &gt;::_M_realloc_insert&lt;cql3::raw_value_view&gt; (96 samples, 0.19%)</title><rect x="846.5" y="373" width="2.3" height="15.0" fill="rgb(217,215,17)" rx="2" ry="2" />
<text  x="849.50" y="383.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::~partition_snapshot_flat_reader (469 samples, 0.95%)</title><rect x="558.9" y="325" width="11.2" height="15.0" fill="rgb(251,168,8)" rx="2" ry="2" />
<text  x="561.86" y="335.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_token (9 samples, 0.02%)</title><rect x="646.7" y="405" width="0.2" height="15.0" fill="rgb(206,33,39)" rx="2" ry="2" />
<text  x="649.69" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (9 samples, 0.02%)</title><rect x="1128.3" y="389" width="0.2" height="15.0" fill="rgb(207,136,49)" rx="2" ry="2" />
<text  x="1131.31" y="399.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (19 samples, 0.04%)</title><rect x="142.8" y="261" width="0.5" height="15.0" fill="rgb(236,136,18)" rx="2" ry="2" />
<text  x="145.82" y="271.5" ></text>
</g>
<g >
<title>cql3::raw_value::to_view (12 samples, 0.02%)</title><rect x="848.8" y="405" width="0.3" height="15.0" fill="rgb(254,160,51)" rx="2" ry="2" />
<text  x="851.79" y="415.5" ></text>
</g>
<g >
<title>local_schema_registry (6 samples, 0.01%)</title><rect x="960.9" y="373" width="0.1" height="15.0" fill="rgb(222,170,39)" rx="2" ry="2" />
<text  x="963.90" y="383.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_map&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::at&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt; &gt; (305 samples, 0.62%)</title><rect x="1054.5" y="325" width="7.3" height="15.0" fill="rgb(252,37,14)" rx="2" ry="2" />
<text  x="1057.51" y="335.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt;::~_Variant_storage (16 samples, 0.03%)</title><rect x="669.1" y="437" width="0.4" height="15.0" fill="rgb(237,149,21)" rx="2" ry="2" />
<text  x="672.10" y="447.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::has_available_units (6 samples, 0.01%)</title><rect x="275.4" y="277" width="0.1" height="15.0" fill="rgb(231,45,38)" rx="2" ry="2" />
<text  x="278.40" y="287.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::take_value (8 samples, 0.02%)</title><rect x="284.1" y="357" width="0.2" height="15.0" fill="rgb(243,106,29)" rx="2" ry="2" />
<text  x="287.12" y="367.5" ></text>
</g>
<g >
<title>__tls_init (10 samples, 0.02%)</title><rect x="529.1" y="293" width="0.3" height="15.0" fill="rgb(212,86,16)" rx="2" ry="2" />
<text  x="532.14" y="303.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned char, std::pair&lt;unsigned char const, std::optional&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned char const, std::optional&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned char&gt;, std::hash&lt;unsigned char&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::clear (29 samples, 0.06%)</title><rect x="668.3" y="437" width="0.7" height="15.0" fill="rgb(220,20,11)" rx="2" ry="2" />
<text  x="671.26" y="447.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::~deque (98 samples, 0.20%)</title><rect x="614.2" y="405" width="2.4" height="15.0" fill="rgb(232,174,15)" rx="2" ry="2" />
<text  x="617.24" y="415.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;std::function&lt;flat_mutation_reader  (12 samples, 0.02%)</title><rect x="605.1" y="437" width="0.3" height="15.0" fill="rgb(235,171,48)" rx="2" ry="2" />
<text  x="608.14" y="447.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (16 samples, 0.03%)</title><rect x="1102.4" y="373" width="0.4" height="15.0" fill="rgb(234,35,32)" rx="2" ry="2" />
<text  x="1105.39" y="383.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;schema_registry_entry&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;schema_registry_entry&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (72 samples, 0.15%)</title><rect x="972.9" y="325" width="1.8" height="15.0" fill="rgb(223,3,0)" rx="2" ry="2" />
<text  x="975.94" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (75 samples, 0.15%)</title><rect x="952.2" y="389" width="1.8" height="15.0" fill="rgb(235,46,15)" rx="2" ry="2" />
<text  x="955.20" y="399.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (9 samples, 0.02%)</title><rect x="785.4" y="229" width="0.2" height="15.0" fill="rgb(225,72,10)" rx="2" ry="2" />
<text  x="788.43" y="239.5" ></text>
</g>
<g >
<title>seastar::basic_semaphore&lt;seastar::semaphore_default_exception_factory, std::chrono::_V2::steady_clock&gt;::wait (12 samples, 0.02%)</title><rect x="599.4" y="437" width="0.3" height="15.0" fill="rgb(223,211,9)" rx="2" ry="2" />
<text  x="602.40" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (6 samples, 0.01%)</title><rect x="804.0" y="245" width="0.1" height="15.0" fill="rgb(208,57,21)" rx="2" ry="2" />
<text  x="806.97" y="255.5" ></text>
</g>
<g >
<title>write_cell&lt;ser::qr_clustered_row__cells__cells&lt;bytes_ostream&gt; &gt; (9 samples, 0.02%)</title><rect x="365.2" y="197" width="0.2" height="15.0" fill="rgb(208,2,17)" rx="2" ry="2" />
<text  x="368.19" y="207.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (29 samples, 0.06%)</title><rect x="883.0" y="277" width="0.7" height="15.0" fill="rgb(226,205,50)" rx="2" ry="2" />
<text  x="885.96" y="287.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (20 samples, 0.04%)</title><rect x="284.4" y="357" width="0.5" height="15.0" fill="rgb(218,46,50)" rx="2" ry="2" />
<text  x="287.40" y="367.5" ></text>
</g>
<g >
<title>seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;::swap (34 samples, 0.07%)</title><rect x="832.6" y="437" width="0.8" height="15.0" fill="rgb(229,204,21)" rx="2" ry="2" />
<text  x="835.62" y="447.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureINS_10bool_classIN22mutation_reader_merger15needs_merge_tagEEEE9then_implIZNS5_14discard_resultEvEUlDpOT_E_NS0_IvEEEET0_OT_ (20 samples, 0.04%)</title><rect x="128.7" y="293" width="0.5" height="15.0" fill="rgb(235,228,33)" rx="2" ry="2" />
<text  x="131.72" y="303.5" ></text>
</g>
<g >
<title>mutation_reader_merger::~mutation_reader_merger (78 samples, 0.16%)</title><rect x="448.5" y="309" width="1.9" height="15.0" fill="rgb(227,34,6)" rx="2" ry="2" />
<text  x="451.55" y="319.5" ></text>
</g>
<g >
<title>reader_permit::impl::~impl (92 samples, 0.19%)</title><rect x="63.7" y="453" width="2.2" height="15.0" fill="rgb(250,50,48)" rx="2" ry="2" />
<text  x="66.73" y="463.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (5 samples, 0.01%)</title><rect x="76.7" y="405" width="0.2" height="15.0" fill="rgb(248,192,11)" rx="2" ry="2" />
<text  x="79.73" y="415.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (13 samples, 0.03%)</title><rect x="765.9" y="357" width="0.3" height="15.0" fill="rgb(243,135,28)" rx="2" ry="2" />
<text  x="768.89" y="367.5" ></text>
</g>
<g >
<title>seastar::internal::coroutine_traits_base&lt;std::tuple&lt;seastar::lw_shared_ptr&lt;query::result&gt;, cache_temperature&gt; &gt;::promise_type::run_and_dispose (14 samples, 0.03%)</title><rect x="24.7" y="517" width="0.4" height="15.0" fill="rgb(250,170,33)" rx="2" ry="2" />
<text  x="27.72" y="527.5" ></text>
</g>
<g >
<title>operator new (38 samples, 0.08%)</title><rect x="849.4" y="437" width="0.9" height="15.0" fill="rgb(247,94,0)" rx="2" ry="2" />
<text  x="852.39" y="447.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (5 samples, 0.01%)</title><rect x="261.3" y="309" width="0.1" height="15.0" fill="rgb(239,59,7)" rx="2" ry="2" />
<text  x="264.25" y="319.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (275 samples, 0.56%)</title><rect x="16.1" y="565" width="6.5" height="15.0" fill="rgb(231,89,36)" rx="2" ry="2" />
<text  x="19.07" y="575.5" ></text>
</g>
<g >
<title>std::default_delete&lt;query::partition_slice const&gt;::operator (102 samples, 0.21%)</title><rect x="588.9" y="405" width="2.5" height="15.0" fill="rgb(244,56,34)" rx="2" ry="2" />
<text  x="591.91" y="415.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_clustering_bounds (24 samples, 0.05%)</title><rect x="875.7" y="421" width="0.5" height="15.0" fill="rgb(209,59,12)" rx="2" ry="2" />
<text  x="878.67" y="431.5" ></text>
</g>
<g >
<title>dht::maximum_token (8 samples, 0.02%)</title><rect x="441.7" y="277" width="0.2" height="15.0" fill="rgb(236,12,32)" rx="2" ry="2" />
<text  x="444.74" y="287.5" ></text>
</g>
<g >
<title>database::get_unlimited_query_max_result_size (8 samples, 0.02%)</title><rect x="1121.1" y="421" width="0.2" height="15.0" fill="rgb(248,49,25)" rx="2" ry="2" />
<text  x="1124.09" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (45 samples, 0.09%)</title><rect x="537.7" y="389" width="1.0" height="15.0" fill="rgb(234,114,43)" rx="2" ry="2" />
<text  x="540.66" y="399.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_range_tombstone (253 samples, 0.51%)</title><rect x="222.0" y="229" width="6.1" height="15.0" fill="rgb(240,103,42)" rx="2" ry="2" />
<text  x="225.05" y="239.5" ></text>
</g>
<g >
<title>service::storage_proxy::do_query (6,028 samples, 12.21%)</title><rect x="957.5" y="389" width="144.0" height="15.0" fill="rgb(214,70,37)" rx="2" ry="2" />
<text  x="960.45" y="399.5" >service::storage_p..</text>
</g>
<g >
<title>cql3::util::do_with_parser&lt;std::_Mem_fn&lt;std::unique_ptr&lt;cql3::statements::raw::parsed_statement, std::default_delete&lt;cql3::statements::raw::parsed_statement&gt; &gt;  (215 samples, 0.44%)</title><rect x="16.4" y="453" width="5.1" height="15.0" fill="rgb(249,166,34)" rx="2" ry="2" />
<text  x="19.38" y="463.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (16 samples, 0.03%)</title><rect x="1060.9" y="293" width="0.4" height="15.0" fill="rgb(214,159,32)" rx="2" ry="2" />
<text  x="1063.89" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (6 samples, 0.01%)</title><rect x="667.8" y="437" width="0.2" height="15.0" fill="rgb(235,193,32)" rx="2" ry="2" />
<text  x="670.81" y="447.5" ></text>
</g>
<g >
<title>__tls_init (5 samples, 0.01%)</title><rect x="526.0" y="309" width="0.1" height="15.0" fill="rgb(221,162,34)" rx="2" ry="2" />
<text  x="528.96" y="319.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (21 samples, 0.04%)</title><rect x="707.6" y="501" width="0.5" height="15.0" fill="rgb(242,111,23)" rx="2" ry="2" />
<text  x="710.61" y="511.5" ></text>
</g>
<g >
<title>TLS init function for bound_view::_empty_prefix (6 samples, 0.01%)</title><rect x="242.5" y="165" width="0.2" height="15.0" fill="rgb(240,72,24)" rx="2" ry="2" />
<text  x="245.55" y="175.5" ></text>
</g>
<g >
<title>allocation_strategy::alloc&lt;blob_storage&gt; (7 samples, 0.01%)</title><rect x="187.7" y="85" width="0.2" height="15.0" fill="rgb(214,218,23)" rx="2" ry="2" />
<text  x="190.74" y="95.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::reset_state (555 samples, 1.12%)</title><rect x="234.3" y="245" width="13.3" height="15.0" fill="rgb(211,150,23)" rx="2" ry="2" />
<text  x="237.30" y="255.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;mutation_reader_merger::operator (277 samples, 0.56%)</title><rect x="254.3" y="309" width="6.6" height="15.0" fill="rgb(220,26,44)" rx="2" ry="2" />
<text  x="257.25" y="319.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (21 samples, 0.04%)</title><rect x="289.2" y="373" width="0.5" height="15.0" fill="rgb(214,91,42)" rx="2" ry="2" />
<text  x="292.23" y="383.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (63 samples, 0.13%)</title><rect x="1058.3" y="277" width="1.5" height="15.0" fill="rgb(240,193,38)" rx="2" ry="2" />
<text  x="1061.28" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_List_node_base::_M_transfer (15 samples, 0.03%)</title><rect x="140.1" y="245" width="0.4" height="15.0" fill="rgb(241,99,54)" rx="2" ry="2" />
<text  x="143.09" y="255.5" ></text>
</g>
<g >
<title>boost::intrusive::bstree_algorithms&lt;boost::intrusive::rbtree_node_traits&lt;void*, false&gt; &gt;::clear_and_dispose&lt;boost::intrusive::detail::node_disposer&lt;current_deleter&lt;range_tombstone_entry&gt; (6 samples, 0.01%)</title><rect x="568.2" y="261" width="0.2" height="15.0" fill="rgb(205,202,13)" rx="2" ry="2" />
<text  x="571.25" y="271.5" ></text>
</g>
<g >
<title>database::find_schema (58 samples, 0.12%)</title><rect x="818.2" y="357" width="1.4" height="15.0" fill="rgb(223,96,6)" rx="2" ry="2" />
<text  x="821.23" y="367.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_restrictions::empty (6 samples, 0.01%)</title><rect x="647.2" y="453" width="0.2" height="15.0" fill="rgb(243,179,20)" rx="2" ry="2" />
<text  x="650.24" y="463.5" ></text>
</g>
<g >
<title>operator delete (17 samples, 0.03%)</title><rect x="614.5" y="389" width="0.4" height="15.0" fill="rgb(252,58,0)" rx="2" ry="2" />
<text  x="617.48" y="399.5" ></text>
</g>
<g >
<title>boost::intrusive::bstbase&lt;boost::intrusive::mhtraits&lt;range_tombstone_entry, boost::intrusive::set_member_hook&lt;boost::intrusive::link_mode&lt; (6 samples, 0.01%)</title><rect x="559.3" y="309" width="0.2" height="15.0" fill="rgb(207,81,8)" rx="2" ry="2" />
<text  x="562.34" y="319.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;std::pair&lt;seastar::shared_ptr&lt;service::abstract_read_executor&gt;, nonwrapping_interval&lt;dht::token&gt; &gt;, 1ul&gt;::clear (204 samples, 0.41%)</title><rect x="1169.5" y="469" width="4.9" height="15.0" fill="rgb(219,187,37)" rx="2" ry="2" />
<text  x="1172.55" y="479.5" ></text>
</g>
<g >
<title>std::__make_heap&lt;__gnu_cxx::__normal_iterator&lt;boost::iterator_range&lt;boost::intrusive::tree_iterator&lt;boost::intrusive::mhtraits&lt;range_tombstone_entry, boost::intrusive::set_member_hook&lt;boost::intrusive::link_mode&lt; (7 samples, 0.01%)</title><rect x="247.1" y="229" width="0.2" height="15.0" fill="rgb(250,227,13)" rx="2" ry="2" />
<text  x="250.11" y="239.5" ></text>
</g>
<g >
<title>std::__optional_hash_call_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, true&gt;::operator (23 samples, 0.05%)</title><rect x="740.0" y="309" width="0.6" height="15.0" fill="rgb(238,214,42)" rx="2" ry="2" />
<text  x="743.03" y="319.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (6 samples, 0.01%)</title><rect x="456.0" y="277" width="0.1" height="15.0" fill="rgb(220,229,2)" rx="2" ry="2" />
<text  x="458.95" y="287.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (6 samples, 0.01%)</title><rect x="1102.2" y="373" width="0.2" height="15.0" fill="rgb(223,34,23)" rx="2" ry="2" />
<text  x="1105.24" y="383.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (12 samples, 0.02%)</title><rect x="723.8" y="293" width="0.3" height="15.0" fill="rgb(209,180,25)" rx="2" ry="2" />
<text  x="726.83" y="303.5" ></text>
</g>
<g >
<title>seastar::execution_stage::flush (6 samples, 0.01%)</title><rect x="748.1" y="357" width="0.2" height="15.0" fill="rgb(226,171,33)" rx="2" ry="2" />
<text  x="751.11" y="367.5" ></text>
</g>
<g >
<title>seastar::basic_semaphore&lt;seastar::semaphore_default_exception_factory, std::chrono::_V2::steady_clock&gt;::signal (7 samples, 0.01%)</title><rect x="36.3" y="421" width="0.2" height="15.0" fill="rgb(216,44,26)" rx="2" ry="2" />
<text  x="39.31" y="431.5" ></text>
</g>
<g >
<title>cql3::raw_value::to_view (17 samples, 0.03%)</title><rect x="845.6" y="389" width="0.4" height="15.0" fill="rgb(240,55,32)" rx="2" ry="2" />
<text  x="848.61" y="399.5" ></text>
</g>
<g >
<title>std::hash&lt;std::basic_string_view&lt;signed char, std::char_traits&lt;signed char&gt; &gt; &gt;::operator (91 samples, 0.18%)</title><rect x="723.3" y="309" width="2.2" height="15.0" fill="rgb(219,114,10)" rx="2" ry="2" />
<text  x="726.33" y="319.5" ></text>
</g>
<g >
<title>operator delete (33 samples, 0.07%)</title><rect x="612.1" y="421" width="0.8" height="15.0" fill="rgb(233,213,19)" rx="2" ry="2" />
<text  x="615.07" y="431.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (22 samples, 0.04%)</title><rect x="682.2" y="437" width="0.5" height="15.0" fill="rgb(254,66,2)" rx="2" ry="2" />
<text  x="685.17" y="447.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;std::tuple&lt;std::optional&lt;clustering_key_prefix&gt; &gt; &gt;::clear (9 samples, 0.02%)</title><rect x="604.6" y="437" width="0.2" height="15.0" fill="rgb(212,180,14)" rx="2" ry="2" />
<text  x="607.56" y="447.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;std::function&lt;std::function&lt;partition_presence_checker_result  (7 samples, 0.01%)</title><rect x="605.4" y="437" width="0.2" height="15.0" fill="rgb(246,126,42)" rx="2" ry="2" />
<text  x="608.42" y="447.5" ></text>
</g>
<g >
<title>seastar::schedule_urgent (31 samples, 0.06%)</title><rect x="1144.2" y="501" width="0.7" height="15.0" fill="rgb(228,166,2)" rx="2" ry="2" />
<text  x="1147.17" y="511.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (67 samples, 0.14%)</title><rect x="16.6" y="341" width="1.6" height="15.0" fill="rgb(231,49,15)" rx="2" ry="2" />
<text  x="19.59" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (72 samples, 0.15%)</title><rect x="1123.8" y="389" width="1.8" height="15.0" fill="rgb(234,92,54)" rx="2" ry="2" />
<text  x="1126.84" y="399.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;dht::token, std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt;, std::allocator&lt;std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;dht::token&gt;, std::hash&lt;dht::token&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (5 samples, 0.01%)</title><rect x="1092.0" y="293" width="0.1" height="15.0" fill="rgb(216,20,15)" rx="2" ry="2" />
<text  x="1094.97" y="303.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_M_move_assign (7 samples, 0.01%)</title><rect x="1111.9" y="373" width="0.2" height="15.0" fill="rgb(246,108,29)" rx="2" ry="2" />
<text  x="1114.90" y="383.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::set_urgent_state (17 samples, 0.03%)</title><rect x="663.2" y="469" width="0.4" height="15.0" fill="rgb(233,216,37)" rx="2" ry="2" />
<text  x="666.24" y="479.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;mutation_fragment&gt;::allocate (7 samples, 0.01%)</title><rect x="277.2" y="293" width="0.2" height="15.0" fill="rgb(235,17,10)" rx="2" ry="2" />
<text  x="280.21" y="303.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;bytes_ostream::chunk, std::default_delete&lt;bytes_ostream::chunk&gt; &gt;::~unique_ptr (10 samples, 0.02%)</title><rect x="84.1" y="453" width="0.2" height="15.0" fill="rgb(218,119,53)" rx="2" ry="2" />
<text  x="87.09" y="463.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_requests (2,446 samples, 4.95%)</title><rect x="990.3" y="341" width="58.4" height="15.0" fill="rgb(244,143,17)" rx="2" ry="2" />
<text  x="993.26" y="351.5" >servic..</text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (17 samples, 0.03%)</title><rect x="411.3" y="229" width="0.4" height="15.0" fill="rgb(220,173,38)" rx="2" ry="2" />
<text  x="414.32" y="239.5" ></text>
</g>
<g >
<title>seastar::reactor::run_some_tasks (48,134 samples, 97.46%)</title><rect x="25.7" y="517" width="1150.0" height="15.0" fill="rgb(251,155,27)" rx="2" ry="2" />
<text  x="28.67" y="527.5" >seastar::reactor::run_some_tasks</text>
</g>
<g >
<title>query::result::builder::add_partition (146 samples, 0.30%)</title><rect x="310.1" y="181" width="3.5" height="15.0" fill="rgb(254,81,3)" rx="2" ry="2" />
<text  x="313.11" y="191.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::~small_vector (33 samples, 0.07%)</title><rect x="579.8" y="357" width="0.8" height="15.0" fill="rgb(220,1,40)" rx="2" ry="2" />
<text  x="582.81" y="367.5" ></text>
</g>
<g >
<title>utils::tuple_hash::hash_impl&lt;1ul, auth::resource_kind, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (29 samples, 0.06%)</title><rect x="799.6" y="101" width="0.7" height="15.0" fill="rgb(210,180,37)" rx="2" ry="2" />
<text  x="802.62" y="111.5" ></text>
</g>
<g >
<title>seastar::internal::future_base::set_coroutine (7 samples, 0.01%)</title><rect x="1038.6" y="261" width="0.2" height="15.0" fill="rgb(209,221,29)" rx="2" ry="2" />
<text  x="1041.62" y="271.5" ></text>
</g>
<g >
<title>intrusive_array&lt;memtable_entry&gt;::lower_bound&lt;dht::ring_position, dht::ring_position_comparator&gt; (503 samples, 1.02%)</title><rect x="475.9" y="309" width="12.0" height="15.0" fill="rgb(212,0,25)" rx="2" ry="2" />
<text  x="478.88" y="319.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (14 samples, 0.03%)</title><rect x="610.5" y="437" width="0.3" height="15.0" fill="rgb(213,140,35)" rx="2" ry="2" />
<text  x="613.49" y="447.5" ></text>
</g>
<g >
<title>make_flat_mutation_reader&lt;empty_flat_reader, seastar::lw_shared_ptr&lt;schema const&gt;, reader_permit&gt; (131 samples, 0.27%)</title><rect x="530.7" y="293" width="3.2" height="15.0" fill="rgb(235,76,28)" rx="2" ry="2" />
<text  x="533.74" y="303.5" ></text>
</g>
<g >
<title>locator::abstract_replication_strategy::get_natural_endpoints (12 samples, 0.02%)</title><rect x="1076.2" y="309" width="0.3" height="15.0" fill="rgb(234,130,4)" rx="2" ry="2" />
<text  x="1079.20" y="319.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::mutation_fragment_merger (133 samples, 0.27%)</title><rect x="452.5" y="277" width="3.1" height="15.0" fill="rgb(242,176,5)" rx="2" ry="2" />
<text  x="455.46" y="287.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (5 samples, 0.01%)</title><rect x="412.9" y="277" width="0.1" height="15.0" fill="rgb(212,77,12)" rx="2" ry="2" />
<text  x="415.90" y="287.5" ></text>
</g>
<g >
<title>compound_type&lt; (69 samples, 0.14%)</title><rect x="542.3" y="357" width="1.7" height="15.0" fill="rgb(244,78,6)" rx="2" ry="2" />
<text  x="545.32" y="367.5" ></text>
</g>
<g >
<title>table::query (23 samples, 0.05%)</title><rect x="1175.0" y="501" width="0.6" height="15.0" fill="rgb(213,49,2)" rx="2" ry="2" />
<text  x="1178.04" y="511.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_prepared (6 samples, 0.01%)</title><rect x="856.1" y="485" width="0.2" height="15.0" fill="rgb(211,110,17)" rx="2" ry="2" />
<text  x="859.13" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::vector (68 samples, 0.14%)</title><rect x="935.2" y="405" width="1.6" height="15.0" fill="rgb(251,217,3)" rx="2" ry="2" />
<text  x="938.16" y="415.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.29] (11 samples, 0.02%)</title><rect x="600.1" y="405" width="0.2" height="15.0" fill="rgb(222,22,14)" rx="2" ry="2" />
<text  x="603.07" y="415.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (5 samples, 0.01%)</title><rect x="999.8" y="293" width="0.1" height="15.0" fill="rgb(246,29,16)" rx="2" ry="2" />
<text  x="1002.82" y="303.5" ></text>
</g>
<g >
<title>cql3::prepared_statements_cache::find (300 samples, 0.61%)</title><rect x="719.2" y="437" width="7.2" height="15.0" fill="rgb(221,61,9)" rx="2" ry="2" />
<text  x="722.22" y="447.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::term (6 samples, 0.01%)</title><rect x="20.6" y="325" width="0.1" height="15.0" fill="rgb(221,112,38)" rx="2" ry="2" />
<text  x="23.56" y="335.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (9 samples, 0.02%)</title><rect x="96.5" y="437" width="0.2" height="15.0" fill="rgb(243,4,14)" rx="2" ry="2" />
<text  x="99.47" y="447.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (17 samples, 0.03%)</title><rect x="406.0" y="197" width="0.4" height="15.0" fill="rgb(230,166,51)" rx="2" ry="2" />
<text  x="408.99" y="207.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::future (25 samples, 0.05%)</title><rect x="962.9" y="373" width="0.6" height="15.0" fill="rgb(229,35,40)" rx="2" ry="2" />
<text  x="965.90" y="383.5" ></text>
</g>
<g >
<title>std::queue&lt;reader_concurrency_semaphore::entry, seastar::circular_buffer&lt;reader_concurrency_semaphore::entry, std::allocator&lt;reader_concurrency_semaphore::entry&gt; &gt; &gt;::pop (33 samples, 0.07%)</title><rect x="627.3" y="485" width="0.8" height="15.0" fill="rgb(230,222,26)" rx="2" ry="2" />
<text  x="630.31" y="495.5" ></text>
</g>
<g >
<title>mutation_source::make_reader (8 samples, 0.02%)</title><rect x="113.2" y="421" width="0.2" height="15.0" fill="rgb(237,97,23)" rx="2" ry="2" />
<text  x="116.24" y="431.5" ></text>
</g>
<g >
<title>position_in_partition::position_in_partition (55 samples, 0.11%)</title><rect x="228.1" y="229" width="1.3" height="15.0" fill="rgb(232,173,32)" rx="2" ry="2" />
<text  x="231.09" y="239.5" ></text>
</g>
<g >
<title>__tls_init (14 samples, 0.03%)</title><rect x="489.6" y="309" width="0.4" height="15.0" fill="rgb(254,219,15)" rx="2" ry="2" />
<text  x="492.64" y="319.5" ></text>
</g>
<g >
<title>mutation_reader_merger::~mutation_reader_merger (283 samples, 0.57%)</title><rect x="574.0" y="373" width="6.7" height="15.0" fill="rgb(247,17,25)" rx="2" ry="2" />
<text  x="576.96" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::reserve (44 samples, 0.09%)</title><rect x="536.3" y="341" width="1.0" height="15.0" fill="rgb(238,52,35)" rx="2" ry="2" />
<text  x="539.25" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (11 samples, 0.02%)</title><rect x="521.1" y="325" width="0.3" height="15.0" fill="rgb(212,20,43)" rx="2" ry="2" />
<text  x="524.13" y="335.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_no_esft&lt;query::read_command&gt;::shared_ptr_no_esft&lt;utils::UUID const&amp;, utils::UUID, query::partition_slice, query::max_result_size, query::row_limit, query::partition_limit, std::chrono::time_point&lt;gc_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt; &gt;&amp;, std::optional&lt;tracing::trace_info&gt;, utils::UUID, seastar::bool_class&lt;query::is_first_page_tag&gt; const&amp;, long&gt; (135 samples, 0.27%)</title><rect x="1125.7" y="405" width="3.3" height="15.0" fill="rgb(233,144,33)" rx="2" ry="2" />
<text  x="1128.73" y="415.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (8 samples, 0.02%)</title><rect x="698.1" y="453" width="0.1" height="15.0" fill="rgb(225,184,35)" rx="2" ry="2" />
<text  x="701.05" y="463.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::whereClause (21 samples, 0.04%)</title><rect x="20.3" y="357" width="0.5" height="15.0" fill="rgb(247,116,34)" rx="2" ry="2" />
<text  x="23.30" y="367.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (416 samples, 0.84%)</title><rect x="733.0" y="389" width="9.9" height="15.0" fill="rgb(239,64,17)" rx="2" ry="2" />
<text  x="736.01" y="399.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::partition_slice const, std::default_delete&lt;query::partition_slice const&gt; &gt;::~unique_ptr (5 samples, 0.01%)</title><rect x="619.8" y="437" width="0.1" height="15.0" fill="rgb(254,37,13)" rx="2" ry="2" />
<text  x="622.81" y="447.5" ></text>
</g>
<g >
<title>table::set_hit_rate (84 samples, 0.17%)</title><rect x="703.9" y="453" width="2.0" height="15.0" fill="rgb(247,119,15)" rx="2" ry="2" />
<text  x="706.86" y="463.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::operator= (12 samples, 0.02%)</title><rect x="826.9" y="405" width="0.3" height="15.0" fill="rgb(216,10,35)" rx="2" ry="2" />
<text  x="829.93" y="415.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_partition_key_ranges (8 samples, 0.02%)</title><rect x="859.6" y="373" width="0.2" height="15.0" fill="rgb(211,75,34)" rx="2" ry="2" />
<text  x="862.62" y="383.5" ></text>
</g>
<g >
<title>operator delete (14 samples, 0.03%)</title><rect x="35.6" y="453" width="0.4" height="15.0" fill="rgb(236,86,45)" rx="2" ry="2" />
<text  x="38.64" y="463.5" ></text>
</g>
<g >
<title>utils::estimated_histogram::add (57 samples, 0.12%)</title><rect x="1163.7" y="469" width="1.3" height="15.0" fill="rgb(220,149,17)" rx="2" ry="2" />
<text  x="1166.67" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (17 samples, 0.03%)</title><rect x="1129.0" y="421" width="0.4" height="15.0" fill="rgb(219,42,11)" rx="2" ry="2" />
<text  x="1132.03" y="431.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;gms::inet_address, std::pair&lt;gms::inet_address const, utils::UUID&gt;, std::allocator&lt;std::pair&lt;gms::inet_address const, utils::UUID&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;gms::inet_address&gt;, std::hash&lt;gms::inet_address&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (14 samples, 0.03%)</title><rect x="1154.0" y="421" width="0.3" height="15.0" fill="rgb(218,99,52)" rx="2" ry="2" />
<text  x="1156.97" y="431.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;gms::inet_address, std::pair&lt;gms::inet_address const, utils::UUID&gt;, std::allocator&lt;std::pair&lt;gms::inet_address const, utils::UUID&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;gms::inet_address&gt;, std::hash&lt;gms::inet_address&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (46 samples, 0.09%)</title><rect x="1153.4" y="437" width="1.1" height="15.0" fill="rgb(241,212,43)" rx="2" ry="2" />
<text  x="1156.40" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (7 samples, 0.01%)</title><rect x="98.3" y="421" width="0.1" height="15.0" fill="rgb(213,23,0)" rx="2" ry="2" />
<text  x="101.28" y="431.5" ></text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt;&amp;&gt; (24 samples, 0.05%)</title><rect x="824.4" y="309" width="0.5" height="15.0" fill="rgb(220,66,0)" rx="2" ry="2" />
<text  x="827.37" y="319.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reclaiming_disabled&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::get_static_row (134 samples, 0.27%)</title><rect x="248.3" y="229" width="3.2" height="15.0" fill="rgb(230,1,0)" rx="2" ry="2" />
<text  x="251.30" y="239.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (6 samples, 0.01%)</title><rect x="142.4" y="245" width="0.1" height="15.0" fill="rgb(228,177,11)" rx="2" ry="2" />
<text  x="145.39" y="255.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::find (7 samples, 0.01%)</title><rect x="878.5" y="405" width="0.1" height="15.0" fill="rgb(205,59,43)" rx="2" ry="2" />
<text  x="881.47" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::_M_range_initialize&lt;nonwrapping_interval&lt;dht::ring_position&gt; const*&gt; (140 samples, 0.28%)</title><rect x="1042.9" y="261" width="3.4" height="15.0" fill="rgb(221,144,40)" rx="2" ry="2" />
<text  x="1045.92" y="271.5" ></text>
</g>
<g >
<title>tracing::global_trace_state_ptr::get (8 samples, 0.02%)</title><rect x="1039.8" y="261" width="0.2" height="15.0" fill="rgb(244,161,38)" rx="2" ry="2" />
<text  x="1042.76" y="271.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take (21 samples, 0.04%)</title><rect x="80.2" y="453" width="0.5" height="15.0" fill="rgb(209,217,19)" rx="2" ry="2" />
<text  x="83.20" y="463.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (8 samples, 0.02%)</title><rect x="836.2" y="341" width="0.2" height="15.0" fill="rgb(235,105,50)" rx="2" ry="2" />
<text  x="839.25" y="351.5" ></text>
</g>
<g >
<title>atomic_cell_or_collection::copy (644 samples, 1.30%)</title><rect x="179.5" y="117" width="15.4" height="15.0" fill="rgb(223,99,0)" rx="2" ry="2" />
<text  x="182.49" y="127.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (12 samples, 0.02%)</title><rect x="939.5" y="373" width="0.3" height="15.0" fill="rgb(228,156,10)" rx="2" ry="2" />
<text  x="942.46" y="383.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;compact_for_query&lt; (12 samples, 0.02%)</title><rect x="422.7" y="389" width="0.3" height="15.0" fill="rgb(233,95,16)" rx="2" ry="2" />
<text  x="425.74" y="399.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume_in_thread&lt;sstables::sstable_writer, flat_mutation_reader::no_filter&gt; (14 samples, 0.03%)</title><rect x="22.7" y="533" width="0.3" height="15.0" fill="rgb(207,205,6)" rx="2" ry="2" />
<text  x="25.69" y="543.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (23 samples, 0.05%)</title><rect x="1155.1" y="421" width="0.6" height="15.0" fill="rgb(227,116,50)" rx="2" ry="2" />
<text  x="1158.12" y="431.5" ></text>
</g>
<g >
<title>mutation_reader_merger::maybe_add_readers (33 samples, 0.07%)</title><rect x="129.7" y="277" width="0.8" height="15.0" fill="rgb(246,59,40)" rx="2" ry="2" />
<text  x="132.68" y="287.5" ></text>
</g>
<g >
<title>managed_bytes::operator= (42 samples, 0.09%)</title><rect x="931.1" y="405" width="1.0" height="15.0" fill="rgb(236,219,35)" rx="2" ry="2" />
<text  x="934.05" y="415.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (14 samples, 0.03%)</title><rect x="672.3" y="469" width="0.4" height="15.0" fill="rgb(234,168,9)" rx="2" ry="2" />
<text  x="675.32" y="479.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (101 samples, 0.20%)</title><rect x="483.8" y="197" width="2.4" height="15.0" fill="rgb(230,189,38)" rx="2" ry="2" />
<text  x="486.76" y="207.5" ></text>
</g>
<g >
<title>seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::expand (8 samples, 0.02%)</title><rect x="512.6" y="245" width="0.1" height="15.0" fill="rgb(234,116,48)" rx="2" ry="2" />
<text  x="515.55" y="255.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::get_promise (8 samples, 0.02%)</title><rect x="826.6" y="421" width="0.2" height="15.0" fill="rgb(237,187,11)" rx="2" ry="2" />
<text  x="829.62" y="431.5" ></text>
</g>
<g >
<title>ser::writer_of_query_result&lt;bytes_ostream&gt;::writer_of_query_result (71 samples, 0.14%)</title><rect x="597.1" y="405" width="1.7" height="15.0" fill="rgb(207,214,52)" rx="2" ry="2" />
<text  x="600.11" y="415.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;boost::iterator_range&lt;mutation_fragment*&gt; &gt;::take_value (11 samples, 0.02%)</title><rect x="263.5" y="309" width="0.3" height="15.0" fill="rgb(236,86,15)" rx="2" ry="2" />
<text  x="266.52" y="319.5" ></text>
</g>
<g >
<title>std::__equal&lt;false&gt;::equal&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;*, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const*&gt; (104 samples, 0.21%)</title><rect x="793.8" y="149" width="2.5" height="15.0" fill="rgb(208,198,49)" rx="2" ry="2" />
<text  x="796.79" y="159.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::do_get_limit (22 samples, 0.04%)</title><rect x="946.4" y="421" width="0.5" height="15.0" fill="rgb(210,154,49)" rx="2" ry="2" />
<text  x="949.37" y="431.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;bool, bool  (26 samples, 0.05%)</title><rect x="1092.8" y="277" width="0.6" height="15.0" fill="rgb(221,29,43)" rx="2" ry="2" />
<text  x="1095.76" y="287.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::digest_read_resolver&gt;::~shared_ptr (13 samples, 0.03%)</title><rect x="991.5" y="325" width="0.3" height="15.0" fill="rgb(244,197,45)" rx="2" ry="2" />
<text  x="994.45" y="335.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (48 samples, 0.10%)</title><rect x="910.4" y="357" width="1.2" height="15.0" fill="rgb(254,182,35)" rx="2" ry="2" />
<text  x="913.43" y="367.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_next (5 samples, 0.01%)</title><rect x="261.9" y="325" width="0.1" height="15.0" fill="rgb(249,140,15)" rx="2" ry="2" />
<text  x="264.85" y="335.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (39 samples, 0.08%)</title><rect x="77.6" y="373" width="0.9" height="15.0" fill="rgb(206,158,35)" rx="2" ry="2" />
<text  x="80.57" y="383.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::digest_read_resolver&gt;::~shared_ptr (10 samples, 0.02%)</title><rect x="692.6" y="485" width="0.2" height="15.0" fill="rgb(223,182,44)" rx="2" ry="2" />
<text  x="695.56" y="495.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (56 samples, 0.11%)</title><rect x="274.2" y="293" width="1.3" height="15.0" fill="rgb(207,205,43)" rx="2" ry="2" />
<text  x="277.20" y="303.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::guard (20 samples, 0.04%)</title><rect x="488.2" y="325" width="0.5" height="15.0" fill="rgb(246,130,7)" rx="2" ry="2" />
<text  x="491.23" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (25 samples, 0.05%)</title><rect x="245.8" y="165" width="0.6" height="15.0" fill="rgb(233,30,2)" rx="2" ry="2" />
<text  x="248.77" y="175.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;mutation_querier&gt;::_M_reset (6 samples, 0.01%)</title><rect x="314.2" y="181" width="0.1" height="15.0" fill="rgb(243,99,13)" rx="2" ry="2" />
<text  x="317.17" y="191.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::partition_snapshot_flat_reader&lt;memtable&amp;&gt; (479 samples, 0.97%)</title><rect x="501.3" y="261" width="11.5" height="15.0" fill="rgb(233,176,39)" rx="2" ry="2" />
<text  x="504.35" y="271.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::~merging_reader (5 samples, 0.01%)</title><rect x="583.3" y="405" width="0.1" height="15.0" fill="rgb(211,229,42)" rx="2" ry="2" />
<text  x="586.32" y="415.5" ></text>
</g>
<g >
<title>list_reader_selector::list_reader_selector (35 samples, 0.07%)</title><rect x="438.4" y="325" width="0.8" height="15.0" fill="rgb(215,216,11)" rx="2" ry="2" />
<text  x="441.39" y="335.5" ></text>
</g>
<g >
<title>query::result::result (6 samples, 0.01%)</title><rect x="593.1" y="437" width="0.1" height="15.0" fill="rgb(252,87,29)" rx="2" ry="2" />
<text  x="596.10" y="447.5" ></text>
</g>
<g >
<title>basic_atomic_cell_view&lt; (16 samples, 0.03%)</title><rect x="372.8" y="181" width="0.4" height="15.0" fill="rgb(207,65,31)" rx="2" ry="2" />
<text  x="375.83" y="191.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::then_wrapped_nrvo&lt;void, service::abstract_read_executor::make_data_requests (128 samples, 0.26%)</title><rect x="993.7" y="293" width="3.1" height="15.0" fill="rgb(218,25,23)" rx="2" ry="2" />
<text  x="996.72" y="303.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_M_reset (57 samples, 0.12%)</title><rect x="1112.1" y="373" width="1.3" height="15.0" fill="rgb(227,59,19)" rx="2" ry="2" />
<text  x="1115.06" y="383.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::clear (6 samples, 0.01%)</title><rect x="709.5" y="501" width="0.2" height="15.0" fill="rgb(243,211,2)" rx="2" ry="2" />
<text  x="712.55" y="511.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;schema_registry_entry&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;schema_registry_entry&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (30 samples, 0.06%)</title><rect x="973.9" y="309" width="0.8" height="15.0" fill="rgb(219,35,44)" rx="2" ry="2" />
<text  x="976.94" y="319.5" ></text>
</g>
<g >
<title>std::__copy_n_a&lt;legacy_compound_view&lt;compound_type&lt; (181 samples, 0.37%)</title><rect x="917.0" y="357" width="4.3" height="15.0" fill="rgb(240,103,49)" rx="2" ry="2" />
<text  x="919.96" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (13 samples, 0.03%)</title><rect x="1151.5" y="485" width="0.3" height="15.0" fill="rgb(217,1,3)" rx="2" ry="2" />
<text  x="1154.46" y="495.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::tombstone_for_row (9 samples, 0.02%)</title><rect x="368.4" y="213" width="0.2" height="15.0" fill="rgb(223,107,15)" rx="2" ry="2" />
<text  x="371.36" y="223.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (13 samples, 0.03%)</title><rect x="822.0" y="293" width="0.3" height="15.0" fill="rgb(227,170,36)" rx="2" ry="2" />
<text  x="824.96" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (26 samples, 0.05%)</title><rect x="519.2" y="309" width="0.7" height="15.0" fill="rgb(210,100,53)" rx="2" ry="2" />
<text  x="522.24" y="319.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;signed char, std::char_traits&lt;signed char&gt; &gt;::substr (7 samples, 0.01%)</title><rect x="913.7" y="325" width="0.2" height="15.0" fill="rgb(244,114,41)" rx="2" ry="2" />
<text  x="916.68" y="335.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (7 samples, 0.01%)</title><rect x="693.0" y="469" width="0.1" height="15.0" fill="rgb(238,84,4)" rx="2" ry="2" />
<text  x="695.97" y="479.5" ></text>
</g>
<g >
<title>cql3::statements::prepared_statement::checked_weak_from_this (54 samples, 0.11%)</title><rect x="719.4" y="421" width="1.3" height="15.0" fill="rgb(217,26,47)" rx="2" ry="2" />
<text  x="722.41" y="431.5" ></text>
</g>
<g >
<title>operator new (60 samples, 0.12%)</title><rect x="1033.0" y="213" width="1.4" height="15.0" fill="rgb(253,80,16)" rx="2" ry="2" />
<text  x="1036.00" y="223.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::set_urgent_state (18 samples, 0.04%)</title><rect x="655.2" y="485" width="0.5" height="15.0" fill="rgb(218,2,3)" rx="2" ry="2" />
<text  x="658.24" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::~vector (9 samples, 0.02%)</title><rect x="934.8" y="389" width="0.2" height="15.0" fill="rgb(243,113,35)" rx="2" ry="2" />
<text  x="937.80" y="399.5" ></text>
</g>
<g >
<title>mutation_partition::lower_bound (89 samples, 0.18%)</title><rect x="237.3" y="197" width="2.1" height="15.0" fill="rgb(235,187,35)" rx="2" ry="2" />
<text  x="240.29" y="207.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::on_permit_created (22 samples, 0.04%)</title><rect x="1034.9" y="197" width="0.5" height="15.0" fill="rgb(243,204,40)" rx="2" ry="2" />
<text  x="1037.87" y="207.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (11 samples, 0.02%)</title><rect x="1040.1" y="277" width="0.3" height="15.0" fill="rgb(251,35,52)" rx="2" ry="2" />
<text  x="1043.10" y="287.5" ></text>
</g>
<g >
<title>bytes_view_hasher::update (11 samples, 0.02%)</title><rect x="740.9" y="277" width="0.2" height="15.0" fill="rgb(226,7,11)" rx="2" ry="2" />
<text  x="743.87" y="287.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (36 samples, 0.07%)</title><rect x="1102.9" y="405" width="0.9" height="15.0" fill="rgb(229,180,25)" rx="2" ry="2" />
<text  x="1105.91" y="415.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (5 samples, 0.01%)</title><rect x="259.3" y="261" width="0.1" height="15.0" fill="rgb(225,189,34)" rx="2" ry="2" />
<text  x="262.32" y="271.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::maybe_decay_reserve (11 samples, 0.02%)</title><rect x="224.3" y="181" width="0.3" height="15.0" fill="rgb(219,66,53)" rx="2" ry="2" />
<text  x="227.32" y="191.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::clone (28 samples, 0.06%)</title><rect x="492.4" y="309" width="0.7" height="15.0" fill="rgb(244,73,14)" rx="2" ry="2" />
<text  x="495.41" y="319.5" ></text>
</g>
<g >
<title>mutation_partition_serializer::write_serialized&lt;ser::writer_of_mutation_partition&lt;bytes_ostream&gt; &gt; (9 samples, 0.02%)</title><rect x="1141.5" y="165" width="0.2" height="15.0" fill="rgb(218,74,50)" rx="2" ry="2" />
<text  x="1144.52" y="175.5" ></text>
</g>
<g >
<title>schema_registry::get_entry (102 samples, 0.21%)</title><rect x="972.2" y="341" width="2.5" height="15.0" fill="rgb(231,109,0)" rx="2" ry="2" />
<text  x="975.22" y="351.5" ></text>
</g>
<g >
<title>sstring_hash::operator (17 samples, 0.03%)</title><rect x="1061.4" y="309" width="0.4" height="15.0" fill="rgb(221,55,31)" rx="2" ry="2" />
<text  x="1064.39" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (19 samples, 0.04%)</title><rect x="1158.8" y="357" width="0.5" height="15.0" fill="rgb(220,138,18)" rx="2" ry="2" />
<text  x="1161.80" y="367.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;service::digest_read_resolver&gt;::shared_ptr_count_for&lt;seastar::lw_shared_ptr&lt;schema const&gt;&amp;, db::consistency_level&amp;, unsigned long&amp;, unsigned long, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;&amp;&gt; (155 samples, 0.31%)</title><rect x="986.4" y="325" width="3.7" height="15.0" fill="rgb(234,34,28)" rx="2" ry="2" />
<text  x="989.41" y="335.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::set_urgent_state (34 samples, 0.07%)</title><rect x="630.2" y="485" width="0.8" height="15.0" fill="rgb(214,202,1)" rx="2" ry="2" />
<text  x="633.20" y="495.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (5 samples, 0.01%)</title><rect x="295.1" y="245" width="0.2" height="15.0" fill="rgb(224,160,24)" rx="2" ry="2" />
<text  x="298.13" y="255.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::digests_match (5 samples, 0.01%)</title><rect x="700.0" y="437" width="0.1" height="15.0" fill="rgb(215,205,52)" rx="2" ry="2" />
<text  x="703.01" y="447.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (6 samples, 0.01%)</title><rect x="481.1" y="213" width="0.2" height="15.0" fill="rgb(228,72,7)" rx="2" ry="2" />
<text  x="484.11" y="223.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (5 samples, 0.01%)</title><rect x="1171.4" y="437" width="0.1" height="15.0" fill="rgb(214,207,6)" rx="2" ry="2" />
<text  x="1174.41" y="447.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::~small_vector (23 samples, 0.05%)</title><rect x="449.8" y="293" width="0.6" height="15.0" fill="rgb(224,182,49)" rx="2" ry="2" />
<text  x="452.81" y="303.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.01%)</title><rect x="999.5" y="293" width="0.1" height="15.0" fill="rgb(226,159,18)" rx="2" ry="2" />
<text  x="1002.46" y="303.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;void&gt;::satisfy_with_result_of&lt;seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::then_wrapped_nrvo&lt;void, service::abstract_read_executor::make_data_requests (460 samples, 0.93%)</title><rect x="695.5" y="485" width="11.0" height="15.0" fill="rgb(253,14,19)" rx="2" ry="2" />
<text  x="698.47" y="495.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;partition_snapshot&gt;::make&lt;seastar::lw_shared_ptr&lt;schema const&gt;&amp;, logalloc::region&amp;, mutation_cleaner&amp;, partition_entry*, cache_tracker*&amp;, unsigned long&amp;&gt; (68 samples, 0.14%)</title><rect x="516.7" y="293" width="1.6" height="15.0" fill="rgb(230,134,34)" rx="2" ry="2" />
<text  x="519.69" y="303.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;dht::token, std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt;, std::allocator&lt;std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;dht::token&gt;, std::hash&lt;dht::token&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (260 samples, 0.53%)</title><rect x="1085.3" y="277" width="6.2" height="15.0" fill="rgb(225,161,48)" rx="2" ry="2" />
<text  x="1088.30" y="287.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::~unique_ptr (61 samples, 0.12%)</title><rect x="898.0" y="325" width="1.5" height="15.0" fill="rgb(215,84,49)" rx="2" ry="2" />
<text  x="901.03" y="335.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_slice_or_needs_filtering (26 samples, 0.05%)</title><rect x="943.2" y="389" width="0.7" height="15.0" fill="rgb(239,28,20)" rx="2" ry="2" />
<text  x="946.24" y="399.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;::lru_entry, boost::intrusive::list_node_traits&lt;void*&gt;,  (8 samples, 0.02%)</title><rect x="726.0" y="389" width="0.2" height="15.0" fill="rgb(249,158,6)" rx="2" ry="2" />
<text  x="729.03" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::vector (145 samples, 0.29%)</title><rect x="101.6" y="421" width="3.4" height="15.0" fill="rgb(244,219,29)" rx="2" ry="2" />
<text  x="104.58" y="431.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (9 samples, 0.02%)</title><rect x="1000.0" y="293" width="0.2" height="15.0" fill="rgb(250,199,45)" rx="2" ry="2" />
<text  x="1003.03" y="303.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::get0 (22 samples, 0.04%)</title><rect x="270.1" y="357" width="0.5" height="15.0" fill="rgb(253,24,41)" rx="2" ry="2" />
<text  x="273.07" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (76 samples, 0.15%)</title><rect x="546.4" y="325" width="1.8" height="15.0" fill="rgb(219,53,22)" rx="2" ry="2" />
<text  x="549.41" y="335.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, flat_mutation_reader, reader_concurrency_semaphore::inactive_read_handle&gt;::~_Variant_storage (26 samples, 0.05%)</title><rect x="584.1" y="421" width="0.7" height="15.0" fill="rgb(232,214,2)" rx="2" ry="2" />
<text  x="587.14" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (27 samples, 0.05%)</title><rect x="633.3" y="469" width="0.7" height="15.0" fill="rgb(253,165,0)" rx="2" ry="2" />
<text  x="636.33" y="479.5" ></text>
</g>
<g >
<title>cql3::restrictions::partition_key_restrictions::needs_filtering (74 samples, 0.15%)</title><rect x="645.4" y="453" width="1.8" height="15.0" fill="rgb(222,39,9)" rx="2" ry="2" />
<text  x="648.42" y="463.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::schedule&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::make_data_requests (98 samples, 0.20%)</title><rect x="994.2" y="277" width="2.3" height="15.0" fill="rgb(214,140,9)" rx="2" ry="2" />
<text  x="997.20" y="287.5" ></text>
</g>
<g >
<title>bytes_ostream::alloc_new (51 samples, 0.10%)</title><rect x="597.4" y="389" width="1.2" height="15.0" fill="rgb(247,222,17)" rx="2" ry="2" />
<text  x="600.40" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::_M_range_initialize&lt;nonwrapping_interval&lt;dht::ring_position&gt; const*&gt; (118 samples, 0.24%)</title><rect x="938.3" y="389" width="2.8" height="15.0" fill="rgb(208,119,5)" rx="2" ry="2" />
<text  x="941.27" y="399.5" ></text>
</g>
<g >
<title>mutation_source::mutation_source (62 samples, 0.13%)</title><rect x="620.9" y="421" width="1.5" height="15.0" fill="rgb(243,143,51)" rx="2" ry="2" />
<text  x="623.91" y="431.5" ></text>
</g>
<g >
<title>query::querier_base::close (1,280 samples, 2.59%)</title><rect x="552.9" y="437" width="30.5" height="15.0" fill="rgb(251,51,20)" rx="2" ry="2" />
<text  x="555.86" y="447.5" >qu..</text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (29 samples, 0.06%)</title><rect x="1167.9" y="469" width="0.7" height="15.0" fill="rgb(249,13,43)" rx="2" ry="2" />
<text  x="1170.88" y="479.5" ></text>
</g>
<g >
<title>memtable_entry::snapshot (22 samples, 0.04%)</title><rect x="521.9" y="341" width="0.5" height="15.0" fill="rgb(220,69,52)" rx="2" ry="2" />
<text  x="524.92" y="351.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (10 samples, 0.02%)</title><rect x="65.3" y="405" width="0.2" height="15.0" fill="rgb(215,227,25)" rx="2" ry="2" />
<text  x="68.29" y="415.5" ></text>
</g>
<g >
<title>bound_view::from_range_end&lt;nonwrapping_interval&gt; (13 samples, 0.03%)</title><rect x="242.7" y="197" width="0.3" height="15.0" fill="rgb(254,172,25)" rx="2" ry="2" />
<text  x="245.69" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_clear (15 samples, 0.03%)</title><rect x="449.1" y="293" width="0.4" height="15.0" fill="rgb(210,89,41)" rx="2" ry="2" />
<text  x="452.12" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (79 samples, 0.16%)</title><rect x="158.7" y="197" width="1.9" height="15.0" fill="rgb(241,80,40)" rx="2" ry="2" />
<text  x="161.73" y="207.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::storage_proxy&gt;::~shared_ptr (6 samples, 0.01%)</title><rect x="957.3" y="389" width="0.2" height="15.0" fill="rgb(248,96,32)" rx="2" ry="2" />
<text  x="960.31" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::vector (8 samples, 0.02%)</title><rect x="620.0" y="437" width="0.2" height="15.0" fill="rgb(232,157,25)" rx="2" ry="2" />
<text  x="623.00" y="447.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::operator (31 samples, 0.06%)</title><rect x="796.8" y="133" width="0.7" height="15.0" fill="rgb(241,76,0)" rx="2" ry="2" />
<text  x="799.78" y="143.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (8 samples, 0.02%)</title><rect x="590.3" y="373" width="0.2" height="15.0" fill="rgb(218,85,2)" rx="2" ry="2" />
<text  x="593.32" y="383.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::operator (20 samples, 0.04%)</title><rect x="740.1" y="293" width="0.5" height="15.0" fill="rgb(228,105,54)" rx="2" ry="2" />
<text  x="743.11" y="303.5" ></text>
</g>
<g >
<title>database::find_column_family (73 samples, 0.15%)</title><rect x="752.1" y="373" width="1.7" height="15.0" fill="rgb(248,100,4)" rx="2" ry="2" />
<text  x="755.05" y="383.5" ></text>
</g>
<g >
<title>operator new (21 samples, 0.04%)</title><rect x="456.7" y="293" width="0.5" height="15.0" fill="rgb(239,50,34)" rx="2" ry="2" />
<text  x="459.67" y="303.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (73 samples, 0.15%)</title><rect x="384.7" y="133" width="1.8" height="15.0" fill="rgb(215,175,51)" rx="2" ry="2" />
<text  x="387.73" y="143.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::get_promise (7 samples, 0.01%)</title><rect x="954.0" y="405" width="0.2" height="15.0" fill="rgb(215,200,37)" rx="2" ry="2" />
<text  x="956.99" y="415.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::pop_clustering_row (40 samples, 0.08%)</title><rect x="220.0" y="181" width="0.9" height="15.0" fill="rgb(221,198,43)" rx="2" ry="2" />
<text  x="222.97" y="191.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (5 samples, 0.01%)</title><rect x="414.7" y="277" width="0.1" height="15.0" fill="rgb(212,112,34)" rx="2" ry="2" />
<text  x="417.71" y="287.5" ></text>
</g>
<g >
<title>dht::shard_of (29 samples, 0.06%)</title><rect x="1003.3" y="277" width="0.7" height="15.0" fill="rgb(231,167,30)" rx="2" ry="2" />
<text  x="1006.28" y="287.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt;::construct&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; (10 samples, 0.02%)</title><rect x="219.5" y="133" width="0.2" height="15.0" fill="rgb(248,122,6)" rx="2" ry="2" />
<text  x="222.47" y="143.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt;::allocate (9 samples, 0.02%)</title><rect x="937.9" y="389" width="0.2" height="15.0" fill="rgb(239,112,21)" rx="2" ry="2" />
<text  x="940.93" y="399.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (21 samples, 0.04%)</title><rect x="72.9" y="389" width="0.5" height="15.0" fill="rgb(223,189,39)" rx="2" ry="2" />
<text  x="75.93" y="399.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;auth::resource_kind, std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;auth::resource_kind&gt;, std::hash&lt;auth::resource_kind&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (31 samples, 0.06%)</title><rect x="764.5" y="341" width="0.7" height="15.0" fill="rgb(209,180,51)" rx="2" ry="2" />
<text  x="767.48" y="351.5" ></text>
</g>
<g >
<title>__tls_init (6 samples, 0.01%)</title><rect x="530.3" y="277" width="0.1" height="15.0" fill="rgb(228,146,18)" rx="2" ry="2" />
<text  x="533.26" y="287.5" ></text>
</g>
<g >
<title>seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::expand (78 samples, 0.16%)</title><rect x="503.3" y="229" width="1.9" height="15.0" fill="rgb(213,209,49)" rx="2" ry="2" />
<text  x="506.33" y="239.5" ></text>
</g>
<g >
<title>operator new (96 samples, 0.19%)</title><rect x="969.8" y="357" width="2.3" height="15.0" fill="rgb(208,8,37)" rx="2" ry="2" />
<text  x="972.83" y="367.5" ></text>
</g>
<g >
<title>seastar::futurize_invoke&lt;seastar::future&lt;void&gt;  (22 samples, 0.04%)</title><rect x="682.2" y="421" width="0.5" height="15.0" fill="rgb(224,194,8)" rx="2" ry="2" />
<text  x="685.17" y="431.5" ></text>
</g>
<g >
<title>auth::resource::resource (52 samples, 0.11%)</title><rect x="764.3" y="373" width="1.3" height="15.0" fill="rgb(232,161,5)" rx="2" ry="2" />
<text  x="767.33" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (45 samples, 0.09%)</title><rect x="852.2" y="421" width="1.1" height="15.0" fill="rgb(252,99,2)" rx="2" ry="2" />
<text  x="855.18" y="431.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::~holder (13 samples, 0.03%)</title><rect x="461.7" y="325" width="0.3" height="15.0" fill="rgb(245,129,32)" rx="2" ry="2" />
<text  x="464.69" y="335.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::query_options, std::default_delete&lt;cql3::query_options&gt; &gt;::~unique_ptr (10 samples, 0.02%)</title><rect x="851.2" y="469" width="0.3" height="15.0" fill="rgb(253,58,21)" rx="2" ry="2" />
<text  x="854.23" y="479.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (24 samples, 0.05%)</title><rect x="1173.3" y="421" width="0.5" height="15.0" fill="rgb(254,213,53)" rx="2" ry="2" />
<text  x="1176.28" y="431.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql_transport::messages::result_message::rows&gt;::~shared_ptr_count_for (6 samples, 0.01%)</title><rect x="1145.2" y="501" width="0.2" height="15.0" fill="rgb(207,182,0)" rx="2" ry="2" />
<text  x="1148.23" y="511.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (29 samples, 0.06%)</title><rect x="776.2" y="277" width="0.7" height="15.0" fill="rgb(218,38,28)" rx="2" ry="2" />
<text  x="779.18" y="287.5" ></text>
</g>
<g >
<title>service::shared_mutation::shared_mutation (11 samples, 0.02%)</title><rect x="1141.5" y="213" width="0.3" height="15.0" fill="rgb(239,173,34)" rx="2" ry="2" />
<text  x="1144.52" y="223.5" ></text>
</g>
<g >
<title>seastar::timer_set&lt;seastar::timer&lt;std::chrono::_V2::steady_clock&gt;, &amp;seastar::timer&lt;std::chrono::_V2::steady_clock&gt;::_link&gt;::expire (9 samples, 0.02%)</title><rect x="1177.1" y="437" width="0.2" height="15.0" fill="rgb(252,20,48)" rx="2" ry="2" />
<text  x="1180.05" y="447.5" ></text>
</g>
<g >
<title>reader_permit::impl::on_admission (32 samples, 0.06%)</title><rect x="69.2" y="405" width="0.8" height="15.0" fill="rgb(230,147,31)" rx="2" ry="2" />
<text  x="72.23" y="415.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;std::function&lt;flat_mutation_reader  (9 samples, 0.02%)</title><rect x="622.4" y="421" width="0.2" height="15.0" fill="rgb(221,113,25)" rx="2" ry="2" />
<text  x="625.39" y="431.5" ></text>
</g>
<g >
<title>partition_entry::read (86 samples, 0.17%)</title><rect x="516.3" y="309" width="2.0" height="15.0" fill="rgb(205,11,54)" rx="2" ry="2" />
<text  x="519.26" y="319.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::partition_slice const, std::default_delete&lt;query::partition_slice const&gt; &gt;::~unique_ptr (157 samples, 0.32%)</title><rect x="587.6" y="421" width="3.8" height="15.0" fill="rgb(250,40,52)" rx="2" ry="2" />
<text  x="590.60" y="431.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::reserve (9 samples, 0.02%)</title><rect x="105.0" y="421" width="0.3" height="15.0" fill="rgb(233,177,32)" rx="2" ry="2" />
<text  x="108.04" y="431.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (7 samples, 0.01%)</title><rect x="608.7" y="437" width="0.2" height="15.0" fill="rgb(213,228,35)" rx="2" ry="2" />
<text  x="611.74" y="447.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::do_wait_admission (488 samples, 0.99%)</title><rect x="1020.3" y="229" width="11.7" height="15.0" fill="rgb(238,173,35)" rx="2" ry="2" />
<text  x="1023.34" y="239.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::get0 (9 samples, 0.02%)</title><rect x="1150.0" y="485" width="0.2" height="15.0" fill="rgb(230,122,52)" rx="2" ry="2" />
<text  x="1153.00" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (29 samples, 0.06%)</title><rect x="936.1" y="357" width="0.7" height="15.0" fill="rgb(222,184,15)" rx="2" ry="2" />
<text  x="939.07" y="367.5" ></text>
</g>
<g >
<title>bound_view::from_range_end&lt;nonwrapping_interval&gt; (19 samples, 0.04%)</title><rect x="229.7" y="213" width="0.4" height="15.0" fill="rgb(253,67,5)" rx="2" ry="2" />
<text  x="232.69" y="223.5" ></text>
</g>
<g >
<title>std::_Optional_base_impl&lt;mutation_querier, std::_Optional_base&lt;mutation_querier, false, false&gt; &gt;::_M_construct&lt;mutation_querier&gt; (40 samples, 0.08%)</title><rect x="317.3" y="165" width="1.0" height="15.0" fill="rgb(244,225,21)" rx="2" ry="2" />
<text  x="320.30" y="175.5" ></text>
</g>
<g >
<title>std::function&lt;flat_mutation_reader  (4,570 samples, 9.25%)</title><rect x="428.5" y="389" width="109.1" height="15.0" fill="rgb(226,22,4)" rx="2" ry="2" />
<text  x="431.45" y="399.5" >std::function..</text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::execute (8 samples, 0.02%)</title><rect x="24.1" y="517" width="0.2" height="15.0" fill="rgb(219,68,28)" rx="2" ry="2" />
<text  x="27.14" y="527.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_Optional_payload_base (14 samples, 0.03%)</title><rect x="801.6" y="245" width="0.3" height="15.0" fill="rgb(241,163,26)" rx="2" ry="2" />
<text  x="804.58" y="255.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (257 samples, 0.52%)</title><rect x="16.3" y="501" width="6.1" height="15.0" fill="rgb(208,154,40)" rx="2" ry="2" />
<text  x="19.28" y="511.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::~_Deque_base (44 samples, 0.09%)</title><rect x="614.9" y="389" width="1.0" height="15.0" fill="rgb(209,34,15)" rx="2" ry="2" />
<text  x="617.88" y="399.5" ></text>
</g>
<g >
<title>global_schema_ptr::global_schema_ptr (50 samples, 0.10%)</title><rect x="1004.1" y="277" width="1.2" height="15.0" fill="rgb(249,137,3)" rx="2" ry="2" />
<text  x="1007.07" y="287.5" ></text>
</g>
<g >
<title>flat_mutation_reader::peek (12 samples, 0.02%)</title><rect x="285.5" y="373" width="0.2" height="15.0" fill="rgb(205,215,47)" rx="2" ry="2" />
<text  x="288.46" y="383.5" ></text>
</g>
<g >
<title>operator new (27 samples, 0.05%)</title><rect x="212.3" y="165" width="0.7" height="15.0" fill="rgb(246,134,8)" rx="2" ry="2" />
<text  x="215.35" y="175.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (5 samples, 0.01%)</title><rect x="884.2" y="309" width="0.1" height="15.0" fill="rgb(220,127,29)" rx="2" ry="2" />
<text  x="887.15" y="319.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;void&gt;::satisfy_with_result_of&lt;seastar::future&lt;service::digest_read_result&gt;::then_wrapped_nrvo&lt;void, service::abstract_read_executor::execute (286 samples, 0.58%)</title><rect x="684.7" y="485" width="6.9" height="15.0" fill="rgb(205,14,52)" rx="2" ry="2" />
<text  x="687.72" y="495.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::get_promise (25 samples, 0.05%)</title><rect x="996.8" y="293" width="0.6" height="15.0" fill="rgb(220,214,22)" rx="2" ry="2" />
<text  x="999.78" y="303.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (11 samples, 0.02%)</title><rect x="425.3" y="405" width="0.2" height="15.0" fill="rgb(250,207,3)" rx="2" ry="2" />
<text  x="428.27" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (17 samples, 0.03%)</title><rect x="650.3" y="437" width="0.4" height="15.0" fill="rgb(239,151,25)" rx="2" ry="2" />
<text  x="653.27" y="447.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::get_local_service (6 samples, 0.01%)</title><rect x="1041.5" y="277" width="0.1" height="15.0" fill="rgb(237,23,43)" rx="2" ry="2" />
<text  x="1044.46" y="287.5" ></text>
</g>
<g >
<title>sstring_hash::operator (17 samples, 0.03%)</title><rect x="825.2" y="309" width="0.4" height="15.0" fill="rgb(246,106,16)" rx="2" ry="2" />
<text  x="828.21" y="319.5" ></text>
</g>
<g >
<title>operator delete (72 samples, 0.15%)</title><rect x="96.7" y="437" width="1.7" height="15.0" fill="rgb(214,170,21)" rx="2" ry="2" />
<text  x="99.73" y="447.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (6 samples, 0.01%)</title><rect x="152.4" y="245" width="0.2" height="15.0" fill="rgb(241,22,52)" rx="2" ry="2" />
<text  x="155.42" y="255.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (9 samples, 0.02%)</title><rect x="229.2" y="181" width="0.2" height="15.0" fill="rgb(205,113,53)" rx="2" ry="2" />
<text  x="232.19" y="191.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::_M_create_storage (9 samples, 0.02%)</title><rect x="934.5" y="405" width="0.3" height="15.0" fill="rgb(253,22,32)" rx="2" ry="2" />
<text  x="937.54" y="415.5" ></text>
</g>
<g >
<title>dht::ring_position::as_decorated_key (15 samples, 0.03%)</title><rect x="435.4" y="341" width="0.3" height="15.0" fill="rgb(235,166,47)" rx="2" ry="2" />
<text  x="438.36" y="351.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cident (6 samples, 0.01%)</title><rect x="18.7" y="341" width="0.1" height="15.0" fill="rgb(205,82,28)" rx="2" ry="2" />
<text  x="21.70" y="351.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::operator== (23 samples, 0.05%)</title><rect x="793.0" y="133" width="0.6" height="15.0" fill="rgb(232,13,34)" rx="2" ry="2" />
<text  x="796.03" y="143.5" ></text>
</g>
<g >
<title>bound_view::from_range_start&lt;nonwrapping_interval&gt; (11 samples, 0.02%)</title><rect x="218.6" y="117" width="0.3" height="15.0" fill="rgb(234,107,53)" rx="2" ry="2" />
<text  x="221.63" y="127.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;cql3::metadata, false&gt;::make&lt;cql3::metadata&amp;&gt; (28 samples, 0.06%)</title><rect x="650.2" y="469" width="0.6" height="15.0" fill="rgb(243,47,5)" rx="2" ry="2" />
<text  x="653.15" y="479.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;compact_for_query&lt; (17 samples, 0.03%)</title><rect x="422.1" y="373" width="0.4" height="15.0" fill="rgb(227,7,14)" rx="2" ry="2" />
<text  x="425.10" y="383.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::digest_read_result&gt;::move_it (6 samples, 0.01%)</title><rect x="983.5" y="341" width="0.1" height="15.0" fill="rgb(247,7,6)" rx="2" ry="2" />
<text  x="986.47" y="351.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (88 samples, 0.18%)</title><rect x="774.8" y="309" width="2.1" height="15.0" fill="rgb(211,113,24)" rx="2" ry="2" />
<text  x="777.84" y="319.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::schedule&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::make_data_requests (19 samples, 0.04%)</title><rect x="993.3" y="293" width="0.4" height="15.0" fill="rgb(246,138,47)" rx="2" ry="2" />
<text  x="996.27" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (20 samples, 0.04%)</title><rect x="706.7" y="485" width="0.5" height="15.0" fill="rgb(213,221,27)" rx="2" ry="2" />
<text  x="709.68" y="495.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::finally_body&lt;service::storage_proxy::do_query (97 samples, 0.20%)</title><rect x="671.9" y="485" width="2.3" height="15.0" fill="rgb(208,23,45)" rx="2" ry="2" />
<text  x="674.87" y="495.5" ></text>
</g>
<g >
<title>utils::basic_ihistogram&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt; &gt;::mark&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; (25 samples, 0.05%)</title><rect x="600.7" y="405" width="0.6" height="15.0" fill="rgb(208,155,38)" rx="2" ry="2" />
<text  x="603.74" y="415.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (33 samples, 0.07%)</title><rect x="474.9" y="277" width="0.8" height="15.0" fill="rgb(235,134,42)" rx="2" ry="2" />
<text  x="477.95" y="287.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (10 samples, 0.02%)</title><rect x="815.0" y="261" width="0.2" height="15.0" fill="rgb(231,156,22)" rx="2" ry="2" />
<text  x="817.98" y="271.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::operator (101 samples, 0.20%)</title><rect x="135.4" y="261" width="2.4" height="15.0" fill="rgb(209,89,13)" rx="2" ry="2" />
<text  x="138.41" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;auth::resource_kind, std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;auth::resource_kind&gt;, std::hash&lt;auth::resource_kind&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::at (33 samples, 0.07%)</title><rect x="764.4" y="357" width="0.8" height="15.0" fill="rgb(233,36,47)" rx="2" ry="2" />
<text  x="767.43" y="367.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_data_requests (2,372 samples, 4.80%)</title><rect x="991.8" y="325" width="56.7" height="15.0" fill="rgb(226,61,12)" rx="2" ry="2" />
<text  x="994.81" y="335.5" >servic..</text>
</g>
<g >
<title>seastar::internal::promise_base::make_ready&lt; (6 samples, 0.01%)</title><rect x="47.9" y="485" width="0.2" height="15.0" fill="rgb(232,100,1)" rx="2" ry="2" />
<text  x="50.94" y="495.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;reader_permit::impl, true&gt;::make&lt;reader_concurrency_semaphore&amp;, schema const* const&amp;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;&amp;, reader_resources&amp;, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;&amp;&gt; (110 samples, 0.22%)</title><rect x="1032.8" y="229" width="2.6" height="15.0" fill="rgb(229,157,7)" rx="2" ry="2" />
<text  x="1035.76" y="239.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;mutation_querier, false, false&gt;::_Optional_base (14 samples, 0.03%)</title><rect x="550.5" y="421" width="0.3" height="15.0" fill="rgb(208,30,49)" rx="2" ry="2" />
<text  x="553.47" y="431.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (5 samples, 0.01%)</title><rect x="112.6" y="421" width="0.1" height="15.0" fill="rgb(212,33,54)" rx="2" ry="2" />
<text  x="115.62" y="431.5" ></text>
</g>
<g >
<title>std::optional&lt;dht::decorated_key&gt;::emplace&lt;dht::decorated_key&gt; (9 samples, 0.02%)</title><rect x="394.6" y="229" width="0.2" height="15.0" fill="rgb(236,209,0)" rx="2" ry="2" />
<text  x="397.62" y="239.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql_transport::messages::result_message::rows&gt;::~shared_ptr_count_for (307 samples, 0.62%)</title><rect x="34.3" y="485" width="7.4" height="15.0" fill="rgb(213,9,53)" rx="2" ry="2" />
<text  x="37.32" y="495.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (247 samples, 0.50%)</title><rect x="16.3" y="485" width="5.9" height="15.0" fill="rgb(205,44,37)" rx="2" ry="2" />
<text  x="19.33" y="495.5" ></text>
</g>
<g >
<title>mutation_reader_merger::maybe_add_readers_at_partition_boundary (13 samples, 0.03%)</title><rect x="127.1" y="309" width="0.3" height="15.0" fill="rgb(252,9,51)" rx="2" ry="2" />
<text  x="130.10" y="319.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::clear (10 samples, 0.02%)</title><rect x="579.5" y="341" width="0.3" height="15.0" fill="rgb(236,164,13)" rx="2" ry="2" />
<text  x="582.52" y="351.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::clear (5 samples, 0.01%)</title><rect x="449.6" y="277" width="0.1" height="15.0" fill="rgb(221,150,38)" rx="2" ry="2" />
<text  x="452.62" y="287.5" ></text>
</g>
<g >
<title>operator new (28 samples, 0.06%)</title><rect x="545.6" y="357" width="0.7" height="15.0" fill="rgb(247,85,13)" rx="2" ry="2" />
<text  x="548.64" y="367.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::operator (5 samples, 0.01%)</title><rect x="824.5" y="293" width="0.1" height="15.0" fill="rgb(254,220,36)" rx="2" ry="2" />
<text  x="827.52" y="303.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::abstract_read_executor&gt;::~shared_ptr (8 samples, 0.02%)</title><rect x="964.8" y="373" width="0.2" height="15.0" fill="rgb(247,95,8)" rx="2" ry="2" />
<text  x="967.79" y="383.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::push_mutation_fragment&lt;mutation_fragment&gt; (22 samples, 0.04%)</title><rect x="150.2" y="245" width="0.5" height="15.0" fill="rgb(238,105,16)" rx="2" ry="2" />
<text  x="153.15" y="255.5" ></text>
</g>
<g >
<title>visit&lt;(anonymous namespace)::validate_visitor&lt;managed_bytes_basic_view&lt; (15 samples, 0.03%)</title><rect x="887.8" y="261" width="0.4" height="15.0" fill="rgb(225,9,39)" rx="2" ry="2" />
<text  x="890.81" y="271.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::guard (10 samples, 0.02%)</title><rect x="146.8" y="261" width="0.3" height="15.0" fill="rgb(231,185,34)" rx="2" ry="2" />
<text  x="149.83" y="271.5" ></text>
</g>
<g >
<title>fmt::v7::basic_printf_context&lt;fmt::v7::detail::buffer_appender&lt;char&gt;, char&gt;::format&lt;fmt::v7::printf_arg_formatter&lt;fmt::v7::detail::buffer_appender&lt;char&gt;, char&gt; &gt; (8 samples, 0.02%)</title><rect x="16.1" y="501" width="0.2" height="15.0" fill="rgb(218,165,34)" rx="2" ry="2" />
<text  x="19.09" y="511.5" ></text>
</g>
<g >
<title>dht::ring_position_comparator::operator (488 samples, 0.99%)</title><rect x="476.2" y="293" width="11.7" height="15.0" fill="rgb(242,69,15)" rx="2" ry="2" />
<text  x="479.24" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::at (7 samples, 0.01%)</title><rect x="1095.9" y="341" width="0.2" height="15.0" fill="rgb(232,194,37)" rx="2" ry="2" />
<text  x="1098.94" y="351.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; const*, nonwrapping_interval&lt;clustering_key_prefix&gt;*&gt; (28 samples, 0.06%)</title><rect x="1116.2" y="357" width="0.7" height="15.0" fill="rgb(209,88,6)" rx="2" ry="2" />
<text  x="1119.24" y="367.5" ></text>
</g>
<g >
<title>operator delete (6 samples, 0.01%)</title><rect x="561.3" y="309" width="0.1" height="15.0" fill="rgb(240,186,46)" rx="2" ry="2" />
<text  x="564.29" y="319.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (13 samples, 0.03%)</title><rect x="681.8" y="485" width="0.3" height="15.0" fill="rgb(252,163,28)" rx="2" ry="2" />
<text  x="684.81" y="495.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;signed char, std::char_traits&lt;signed char&gt; &gt;::substr (11 samples, 0.02%)</title><rect x="485.9" y="181" width="0.3" height="15.0" fill="rgb(230,54,7)" rx="2" ry="2" />
<text  x="488.91" y="191.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::maybe_decay_reserve (5 samples, 0.01%)</title><rect x="167.3" y="213" width="0.1" height="15.0" fill="rgb(246,91,16)" rx="2" ry="2" />
<text  x="170.31" y="223.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const*, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;*&gt; (43 samples, 0.09%)</title><rect x="775.8" y="293" width="1.1" height="15.0" fill="rgb(231,20,43)" rx="2" ry="2" />
<text  x="778.85" y="303.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take (21 samples, 0.04%)</title><rect x="603.9" y="437" width="0.5" height="15.0" fill="rgb(246,18,25)" rx="2" ry="2" />
<text  x="606.94" y="447.5" ></text>
</g>
<g >
<title>[unknown] (548 samples, 1.11%)</title><rect x="10.0" y="629" width="13.1" height="15.0" fill="rgb(221,180,36)" rx="2" ry="2" />
<text  x="13.00" y="639.5" ></text>
</g>
<g >
<title>abstract_type::without_reversed (6 samples, 0.01%)</title><rect x="878.3" y="405" width="0.2" height="15.0" fill="rgb(211,184,17)" rx="2" ry="2" />
<text  x="881.32" y="415.5" ></text>
</g>
<g >
<title>tests::random::get_int&lt;unsigned long&gt; (70 samples, 0.14%)</title><rect x="853.9" y="469" width="1.7" height="15.0" fill="rgb(239,159,50)" rx="2" ry="2" />
<text  x="856.88" y="479.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement::execute (872 samples, 1.77%)</title><rect x="640.4" y="501" width="20.8" height="15.0" fill="rgb(236,87,10)" rx="2" ry="2" />
<text  x="643.38" y="511.5" ></text>
</g>
<g >
<title>operator new (26 samples, 0.05%)</title><rect x="1155.0" y="437" width="0.7" height="15.0" fill="rgb(209,39,12)" rx="2" ry="2" />
<text  x="1158.05" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::_M_range_initialize&lt;nonwrapping_interval&lt;dht::ring_position&gt; const*&gt; (15 samples, 0.03%)</title><rect x="937.3" y="405" width="0.3" height="15.0" fill="rgb(238,147,20)" rx="2" ry="2" />
<text  x="940.29" y="415.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (9 samples, 0.02%)</title><rect x="1128.0" y="373" width="0.2" height="15.0" fill="rgb(208,19,6)" rx="2" ry="2" />
<text  x="1131.02" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::allocate_large_and_trim (10 samples, 0.02%)</title><rect x="548.0" y="277" width="0.2" height="15.0" fill="rgb(241,44,37)" rx="2" ry="2" />
<text  x="550.96" y="287.5" ></text>
</g>
<g >
<title>service::storage_proxy_stats::split_stats::get_ep_stat (16 samples, 0.03%)</title><rect x="703.4" y="453" width="0.4" height="15.0" fill="rgb(233,123,9)" rx="2" ry="2" />
<text  x="706.38" y="463.5" ></text>
</g>
<g >
<title>seastar::internal::future_base::set_coroutine (5 samples, 0.01%)</title><rect x="976.9" y="357" width="0.1" height="15.0" fill="rgb(240,138,26)" rx="2" ry="2" />
<text  x="979.93" y="367.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperation (71 samples, 0.14%)</title><rect x="18.6" y="357" width="1.7" height="15.0" fill="rgb(249,165,48)" rx="2" ry="2" />
<text  x="21.60" y="367.5" ></text>
</g>
<g >
<title>ser::query_result__partitions&lt;bytes_ostream&gt;::add (19 samples, 0.04%)</title><rect x="312.0" y="165" width="0.5" height="15.0" fill="rgb(230,97,5)" rx="2" ry="2" />
<text  x="315.02" y="175.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::push_static_row (5 samples, 0.01%)</title><rect x="254.1" y="277" width="0.1" height="15.0" fill="rgb(208,82,39)" rx="2" ry="2" />
<text  x="257.06" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (71 samples, 0.14%)</title><rect x="882.0" y="293" width="1.7" height="15.0" fill="rgb(243,127,37)" rx="2" ry="2" />
<text  x="884.95" y="303.5" ></text>
</g>
<g >
<title>_ZSt5applyIZN7seastar8internal12do_with_implIN4auth17role_or_anonymousEZNS3_15get_permissionsERKNS3_7serviceERKNS3_18authenticated_userERKNS3_8resourceEE3$_9JEEEDaOT_OT0_DpOT1_EUlDpOT_E_St5tupleIJOS4_EEEDcSG_SI_ (77 samples, 0.16%)</title><rect x="778.7" y="293" width="1.9" height="15.0" fill="rgb(253,131,31)" rx="2" ry="2" />
<text  x="781.72" y="303.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (18 samples, 0.04%)</title><rect x="200.9" y="117" width="0.5" height="15.0" fill="rgb(213,202,29)" rx="2" ry="2" />
<text  x="203.95" y="127.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::~impl (7 samples, 0.01%)</title><rect x="557.5" y="325" width="0.2" height="15.0" fill="rgb(242,23,23)" rx="2" ry="2" />
<text  x="560.54" y="335.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment (128 samples, 0.26%)</title><rect x="158.3" y="229" width="3.1" height="15.0" fill="rgb(239,4,27)" rx="2" ry="2" />
<text  x="161.32" y="239.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (16 samples, 0.03%)</title><rect x="639.8" y="485" width="0.4" height="15.0" fill="rgb(215,63,15)" rx="2" ry="2" />
<text  x="642.83" y="495.5" ></text>
</g>
<g >
<title>__start_context (16 samples, 0.03%)</title><rect x="22.7" y="597" width="0.4" height="15.0" fill="rgb(231,165,54)" rx="2" ry="2" />
<text  x="25.69" y="607.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt;::allocate (21 samples, 0.04%)</title><rect x="102.0" y="405" width="0.5" height="15.0" fill="rgb(223,133,46)" rx="2" ry="2" />
<text  x="105.03" y="415.5" ></text>
</g>
<g >
<title>ser::qr_partition__rows&lt;bytes_ostream&gt;::add (18 samples, 0.04%)</title><rect x="364.7" y="197" width="0.5" height="15.0" fill="rgb(225,43,14)" rx="2" ry="2" />
<text  x="367.73" y="207.5" ></text>
</g>
<g >
<title>cql3::authorized_prepared_statements_cache_key::hash (117 samples, 0.24%)</title><rect x="739.9" y="325" width="2.8" height="15.0" fill="rgb(241,109,30)" rx="2" ry="2" />
<text  x="742.89" y="335.5" ></text>
</g>
<g >
<title>allocation_strategy::alloc&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::leaf_node&gt; (39 samples, 0.08%)</title><rect x="196.6" y="101" width="0.9" height="15.0" fill="rgb(242,106,2)" rx="2" ry="2" />
<text  x="199.60" y="111.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::result_memory_accounter (16 samples, 0.03%)</title><rect x="603.5" y="421" width="0.4" height="15.0" fill="rgb(210,130,45)" rx="2" ry="2" />
<text  x="606.54" y="431.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::clear (7 samples, 0.01%)</title><rect x="864.0" y="469" width="0.2" height="15.0" fill="rgb(254,74,48)" rx="2" ry="2" />
<text  x="867.04" y="479.5" ></text>
</g>
<g >
<title>sstring_hash::operator (18 samples, 0.04%)</title><rect x="843.2" y="357" width="0.4" height="15.0" fill="rgb(222,161,21)" rx="2" ry="2" />
<text  x="846.18" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (8 samples, 0.02%)</title><rect x="415.6" y="245" width="0.2" height="15.0" fill="rgb(220,14,22)" rx="2" ry="2" />
<text  x="418.65" y="255.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (15 samples, 0.03%)</title><rect x="203.6" y="133" width="0.4" height="15.0" fill="rgb(222,42,21)" rx="2" ry="2" />
<text  x="206.62" y="143.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (6 samples, 0.01%)</title><rect x="667.0" y="469" width="0.1" height="15.0" fill="rgb(221,139,44)" rx="2" ry="2" />
<text  x="669.99" y="479.5" ></text>
</g>
<g >
<title>std::hash&lt;wrapping_interval&lt;dht::token&gt; &gt;::operator (12 samples, 0.02%)</title><rect x="1163.0" y="453" width="0.3" height="15.0" fill="rgb(213,213,22)" rx="2" ry="2" />
<text  x="1165.98" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_clear (6 samples, 0.01%)</title><rect x="450.5" y="309" width="0.1" height="15.0" fill="rgb(230,187,14)" rx="2" ry="2" />
<text  x="453.48" y="319.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::make_data_requests (11 samples, 0.02%)</title><rect x="996.3" y="261" width="0.2" height="15.0" fill="rgb(254,157,13)" rx="2" ry="2" />
<text  x="999.28" y="271.5" ></text>
</g>
<g >
<title>cql3::query_options::prepare (7 samples, 0.01%)</title><rect x="726.4" y="437" width="0.2" height="15.0" fill="rgb(235,227,31)" rx="2" ry="2" />
<text  x="729.39" y="447.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (15 samples, 0.03%)</title><rect x="905.4" y="309" width="0.4" height="15.0" fill="rgb(250,217,8)" rx="2" ry="2" />
<text  x="908.44" y="319.5" ></text>
</g>
<g >
<title>reader_permit::impl::mark_unused (9 samples, 0.02%)</title><rect x="682.8" y="469" width="0.2" height="15.0" fill="rgb(238,181,34)" rx="2" ry="2" />
<text  x="685.79" y="479.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (47 samples, 0.10%)</title><rect x="1022.6" y="181" width="1.1" height="15.0" fill="rgb(242,163,16)" rx="2" ry="2" />
<text  x="1025.61" y="191.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.29] (18 samples, 0.04%)</title><rect x="10.2" y="581" width="0.4" height="15.0" fill="rgb(220,54,40)" rx="2" ry="2" />
<text  x="13.17" y="591.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::clear (10 samples, 0.02%)</title><rect x="80.7" y="453" width="0.2" height="15.0" fill="rgb(254,75,40)" rx="2" ry="2" />
<text  x="83.70" y="463.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (38 samples, 0.08%)</title><rect x="1141.1" y="389" width="0.9" height="15.0" fill="rgb(217,150,18)" rx="2" ry="2" />
<text  x="1144.07" y="399.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (9 samples, 0.02%)</title><rect x="463.0" y="293" width="0.3" height="15.0" fill="rgb(234,164,1)" rx="2" ry="2" />
<text  x="466.05" y="303.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (5 samples, 0.01%)</title><rect x="883.7" y="309" width="0.1" height="15.0" fill="rgb(207,21,9)" rx="2" ry="2" />
<text  x="886.67" y="319.5" ></text>
</g>
<g >
<title>reader_permit::consume (30 samples, 0.06%)</title><rect x="395.7" y="229" width="0.8" height="15.0" fill="rgb(254,94,49)" rx="2" ry="2" />
<text  x="398.74" y="239.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;compact_mutation_state&lt; (156 samples, 0.32%)</title><rect x="612.9" y="421" width="3.7" height="15.0" fill="rgb(208,52,18)" rx="2" ry="2" />
<text  x="615.85" y="431.5" ></text>
</g>
<g >
<title>query::querier&lt; (66 samples, 0.13%)</title><rect x="60.6" y="453" width="1.6" height="15.0" fill="rgb(240,180,46)" rx="2" ry="2" />
<text  x="63.58" y="463.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::check_local_limit (6 samples, 0.01%)</title><rect x="329.3" y="165" width="0.1" height="15.0" fill="rgb(220,102,37)" rx="2" ry="2" />
<text  x="332.25" y="175.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (6 samples, 0.01%)</title><rect x="1156.8" y="453" width="0.2" height="15.0" fill="rgb(238,173,10)" rx="2" ry="2" />
<text  x="1159.81" y="463.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (78 samples, 0.16%)</title><rect x="153.9" y="213" width="1.9" height="15.0" fill="rgb(244,141,9)" rx="2" ry="2" />
<text  x="156.90" y="223.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::clone (6 samples, 0.01%)</title><rect x="461.5" y="325" width="0.2" height="15.0" fill="rgb(251,59,47)" rx="2" ry="2" />
<text  x="464.54" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (31 samples, 0.06%)</title><rect x="655.7" y="485" width="0.7" height="15.0" fill="rgb(226,35,24)" rx="2" ry="2" />
<text  x="658.67" y="495.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_Optional_payload_base (17 samples, 0.03%)</title><rect x="610.1" y="421" width="0.4" height="15.0" fill="rgb(247,6,3)" rx="2" ry="2" />
<text  x="613.08" y="431.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (22 samples, 0.04%)</title><rect x="144.3" y="261" width="0.5" height="15.0" fill="rgb(209,204,50)" rx="2" ry="2" />
<text  x="147.25" y="271.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::clear (11 samples, 0.02%)</title><rect x="392.0" y="213" width="0.2" height="15.0" fill="rgb(241,0,48)" rx="2" ry="2" />
<text  x="394.97" y="223.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::make_data_requests (547 samples, 1.11%)</title><rect x="694.4" y="501" width="13.0" height="15.0" fill="rgb(223,133,31)" rx="2" ry="2" />
<text  x="697.38" y="511.5" ></text>
</g>
<g >
<title>row::row (28 samples, 0.06%)</title><rect x="250.4" y="197" width="0.7" height="15.0" fill="rgb(240,131,21)" rx="2" ry="2" />
<text  x="253.38" y="207.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::~partition_snapshot_flat_reader (326 samples, 0.66%)</title><rect x="561.4" y="309" width="7.8" height="15.0" fill="rgb(246,229,32)" rx="2" ry="2" />
<text  x="564.44" y="319.5" ></text>
</g>
<g >
<title>mutation_fragment::destroy_data (380 samples, 0.77%)</title><rect x="399.1" y="261" width="9.1" height="15.0" fill="rgb(222,99,13)" rx="2" ry="2" />
<text  x="402.14" y="271.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::digest_read_resolver&gt;::~shared_ptr (18 samples, 0.04%)</title><rect x="983.8" y="341" width="0.4" height="15.0" fill="rgb(224,164,3)" rx="2" ry="2" />
<text  x="986.76" y="351.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (5 samples, 0.01%)</title><rect x="1046.1" y="181" width="0.1" height="15.0" fill="rgb(244,215,52)" rx="2" ry="2" />
<text  x="1049.10" y="191.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (27 samples, 0.05%)</title><rect x="547.6" y="309" width="0.6" height="15.0" fill="rgb(252,108,10)" rx="2" ry="2" />
<text  x="550.58" y="319.5" ></text>
</g>
<g >
<title>compound_type&lt; (178 samples, 0.36%)</title><rect x="924.8" y="373" width="4.2" height="15.0" fill="rgb(229,101,40)" rx="2" ry="2" />
<text  x="927.79" y="383.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement::execute (5 samples, 0.01%)</title><rect x="23.7" y="517" width="0.1" height="15.0" fill="rgb(251,38,4)" rx="2" ry="2" />
<text  x="26.71" y="527.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt;::~_Variant_storage (17 samples, 0.03%)</title><rect x="897.4" y="293" width="0.4" height="15.0" fill="rgb(227,200,44)" rx="2" ry="2" />
<text  x="900.37" y="303.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::partition_tombstone (90 samples, 0.18%)</title><rect x="510.4" y="245" width="2.2" height="15.0" fill="rgb(225,219,6)" rx="2" ry="2" />
<text  x="513.40" y="255.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (7,010 samples, 14.19%)</title><rect x="117.4" y="389" width="167.5" height="15.0" fill="rgb(214,106,29)" rx="2" ry="2" />
<text  x="120.42" y="399.5" >merging_reader&lt;mutati..</text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::then_wrapped_common&lt;false, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (85 samples, 0.17%)</title><rect x="829.2" y="421" width="2.1" height="15.0" fill="rgb(222,179,12)" rx="2" ry="2" />
<text  x="832.22" y="431.5" ></text>
</g>
<g >
<title>operator delete (45 samples, 0.09%)</title><rect x="683.4" y="485" width="1.1" height="15.0" fill="rgb(240,213,26)" rx="2" ry="2" />
<text  x="686.43" y="495.5" ></text>
</g>
<g >
<title>service::client_state::has_access (2,010 samples, 4.07%)</title><rect x="767.3" y="373" width="48.0" height="15.0" fill="rgb(225,154,12)" rx="2" ry="2" />
<text  x="770.32" y="383.5" >serv..</text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::move_it (157 samples, 0.32%)</title><rect x="674.4" y="485" width="3.8" height="15.0" fill="rgb(219,199,1)" rx="2" ry="2" />
<text  x="677.45" y="495.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (15 samples, 0.03%)</title><rect x="613.3" y="405" width="0.4" height="15.0" fill="rgb(215,203,25)" rx="2" ry="2" />
<text  x="616.33" y="415.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::signal (5 samples, 0.01%)</title><rect x="65.5" y="405" width="0.1" height="15.0" fill="rgb(223,6,21)" rx="2" ry="2" />
<text  x="68.53" y="415.5" ></text>
</g>
<g >
<title>operator delete (38 samples, 0.08%)</title><rect x="652.7" y="485" width="0.9" height="15.0" fill="rgb(248,219,18)" rx="2" ry="2" />
<text  x="655.68" y="495.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;std::tuple&lt;seastar::lw_shared_ptr&lt;query::result&gt;, cache_temperature&gt; &gt;::set_value&lt;std::tuple&lt;seastar::lw_shared_ptr&lt;query::result&gt;, cache_temperature&gt; &gt; (7 samples, 0.01%)</title><rect x="44.3" y="485" width="0.1" height="15.0" fill="rgb(224,62,15)" rx="2" ry="2" />
<text  x="47.26" y="495.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (5 samples, 0.01%)</title><rect x="1042.5" y="277" width="0.1" height="15.0" fill="rgb(231,214,36)" rx="2" ry="2" />
<text  x="1045.49" y="287.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;position_in_partition&gt;::_M_reset (8 samples, 0.02%)</title><rect x="233.0" y="245" width="0.2" height="15.0" fill="rgb(234,127,30)" rx="2" ry="2" />
<text  x="235.96" y="255.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;bytes_ostream::chunk, std::default_delete&lt;bytes_ostream::chunk&gt; &gt;::~unique_ptr (7 samples, 0.01%)</title><rect x="38.6" y="389" width="0.2" height="15.0" fill="rgb(215,47,33)" rx="2" ry="2" />
<text  x="41.65" y="399.5" ></text>
</g>
<g >
<title>reader_permit::consume_resources (7 samples, 0.01%)</title><rect x="160.8" y="197" width="0.1" height="15.0" fill="rgb(233,184,2)" rx="2" ry="2" />
<text  x="163.76" y="207.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (22 samples, 0.04%)</title><rect x="1125.0" y="373" width="0.6" height="15.0" fill="rgb(227,30,8)" rx="2" ry="2" />
<text  x="1128.04" y="383.5" ></text>
</g>
<g >
<title>schema::get_partitioner (12 samples, 0.02%)</title><rect x="933.7" y="405" width="0.3" height="15.0" fill="rgb(244,11,22)" rx="2" ry="2" />
<text  x="936.71" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (13 samples, 0.03%)</title><rect x="1038.0" y="229" width="0.3" height="15.0" fill="rgb(253,75,45)" rx="2" ry="2" />
<text  x="1041.00" y="239.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::take (14 samples, 0.03%)</title><rect x="270.3" y="341" width="0.3" height="15.0" fill="rgb(226,46,37)" rx="2" ry="2" />
<text  x="273.26" y="351.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::alloc (90 samples, 0.18%)</title><rect x="197.7" y="101" width="2.2" height="15.0" fill="rgb(228,99,26)" rx="2" ry="2" />
<text  x="200.72" y="111.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (7 samples, 0.01%)</title><rect x="809.5" y="293" width="0.2" height="15.0" fill="rgb(252,206,4)" rx="2" ry="2" />
<text  x="812.51" y="303.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (10 samples, 0.02%)</title><rect x="173.8" y="133" width="0.3" height="15.0" fill="rgb(213,88,34)" rx="2" ry="2" />
<text  x="176.83" y="143.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;nonwrapping_interval&lt;dht::ring_position&gt; const, std::default_delete&lt;nonwrapping_interval&lt;dht::ring_position&gt; const&gt; &gt;::~unique_ptr (5 samples, 0.01%)</title><rect x="619.7" y="437" width="0.1" height="15.0" fill="rgb(249,202,15)" rx="2" ry="2" />
<text  x="622.69" y="447.5" ></text>
</g>
<g >
<title>absl::container_internal::probe_seq&lt;16ul&gt;::probe_seq (5 samples, 0.01%)</title><rect x="1059.8" y="293" width="0.1" height="15.0" fill="rgb(207,162,21)" rx="2" ry="2" />
<text  x="1062.79" y="303.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (297 samples, 0.60%)</title><rect x="480.5" y="229" width="7.1" height="15.0" fill="rgb(241,89,34)" rx="2" ry="2" />
<text  x="483.51" y="239.5" ></text>
</g>
<g >
<title>utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (40 samples, 0.08%)</title><rect x="787.2" y="149" width="1.0" height="15.0" fill="rgb(226,10,22)" rx="2" ry="2" />
<text  x="790.25" y="159.5" ></text>
</g>
<g >
<title>seastar::future&lt;mutation_fragment*&gt;::then_impl&lt;query::consume_page&lt; (5,721 samples, 11.58%)</title><rect x="286.3" y="405" width="136.7" height="15.0" fill="rgb(226,147,4)" rx="2" ry="2" />
<text  x="289.34" y="415.5" >seastar::future&lt;m..</text>
</g>
<g >
<title>operator new (69 samples, 0.14%)</title><rect x="278.7" y="277" width="1.7" height="15.0" fill="rgb(243,23,17)" rx="2" ry="2" />
<text  x="281.72" y="287.5" ></text>
</g>
<g >
<title>operator new (27 samples, 0.05%)</title><rect x="938.8" y="373" width="0.7" height="15.0" fill="rgb(218,97,30)" rx="2" ry="2" />
<text  x="941.82" y="383.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (38 samples, 0.08%)</title><rect x="818.7" y="309" width="0.9" height="15.0" fill="rgb(230,79,25)" rx="2" ry="2" />
<text  x="821.71" y="319.5" ></text>
</g>
<g >
<title>reader_permit::impl::mark_unused (470 samples, 0.95%)</title><rect x="67.6" y="437" width="11.2" height="15.0" fill="rgb(248,207,5)" rx="2" ry="2" />
<text  x="70.56" y="447.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (6 samples, 0.01%)</title><rect x="580.9" y="373" width="0.1" height="15.0" fill="rgb(231,181,37)" rx="2" ry="2" />
<text  x="583.86" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (35 samples, 0.07%)</title><rect x="290.9" y="277" width="0.8" height="15.0" fill="rgb(228,179,17)" rx="2" ry="2" />
<text  x="293.86" y="287.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;schema const&gt;::operator= (21 samples, 0.04%)</title><rect x="1040.6" y="277" width="0.5" height="15.0" fill="rgb(231,13,25)" rx="2" ry="2" />
<text  x="1043.62" y="287.5" ></text>
</g>
<g >
<title>utils::basic_ihistogram&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt; &gt;::mark&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; (44 samples, 0.09%)</title><rect x="673.1" y="453" width="1.1" height="15.0" fill="rgb(246,147,14)" rx="2" ry="2" />
<text  x="676.13" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt;::emplace_back&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; (70 samples, 0.14%)</title><rect x="245.0" y="213" width="1.7" height="15.0" fill="rgb(217,183,21)" rx="2" ry="2" />
<text  x="247.98" y="223.5" ></text>
</g>
<g >
<title>std::__optional_hash_call_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, true&gt;::operator (32 samples, 0.06%)</title><rect x="796.8" y="149" width="0.7" height="15.0" fill="rgb(221,148,32)" rx="2" ry="2" />
<text  x="799.78" y="159.5" ></text>
</g>
<g >
<title>row_marker::compact_and_expire (37 samples, 0.07%)</title><rect x="393.4" y="229" width="0.9" height="15.0" fill="rgb(246,35,12)" rx="2" ry="2" />
<text  x="396.43" y="239.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (27 samples, 0.05%)</title><rect x="822.6" y="293" width="0.7" height="15.0" fill="rgb(222,74,49)" rx="2" ry="2" />
<text  x="825.61" y="303.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::contains&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (150 samples, 0.30%)</title><rect x="833.9" y="405" width="3.6" height="15.0" fill="rgb(244,4,48)" rx="2" ry="2" />
<text  x="836.93" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (11 samples, 0.02%)</title><rect x="1115.7" y="325" width="0.3" height="15.0" fill="rgb(235,13,38)" rx="2" ry="2" />
<text  x="1118.72" y="335.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (6 samples, 0.01%)</title><rect x="18.3" y="357" width="0.1" height="15.0" fill="rgb(252,3,39)" rx="2" ry="2" />
<text  x="21.29" y="367.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (22 samples, 0.04%)</title><rect x="835.9" y="357" width="0.5" height="15.0" fill="rgb(219,63,18)" rx="2" ry="2" />
<text  x="838.91" y="367.5" ></text>
</g>
<g >
<title>reader_permit::consume_resources (20 samples, 0.04%)</title><rect x="507.6" y="181" width="0.5" height="15.0" fill="rgb(213,151,33)" rx="2" ry="2" />
<text  x="510.61" y="191.5" ></text>
</g>
<g >
<title>memtable::find_or_create_partition (7 samples, 0.01%)</title><rect x="1140.3" y="229" width="0.2" height="15.0" fill="rgb(242,72,34)" rx="2" ry="2" />
<text  x="1143.33" y="239.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::upper_bound&lt;mutation_partition, schema const&amp;, nonwrapping_interval&lt;clustering_key_prefix&gt; const&amp;&gt; (10 samples, 0.02%)</title><rect x="217.7" y="149" width="0.3" height="15.0" fill="rgb(250,186,23)" rx="2" ry="2" />
<text  x="220.72" y="159.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_range_tombstone (110 samples, 0.22%)</title><rect x="224.8" y="181" width="2.6" height="15.0" fill="rgb(212,173,12)" rx="2" ry="2" />
<text  x="227.77" y="191.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (20 samples, 0.04%)</title><rect x="141.9" y="229" width="0.5" height="15.0" fill="rgb(250,169,34)" rx="2" ry="2" />
<text  x="144.91" y="239.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::move_it (6 samples, 0.01%)</title><rect x="975.8" y="357" width="0.1" height="15.0" fill="rgb(232,36,17)" rx="2" ry="2" />
<text  x="978.78" y="367.5" ></text>
</g>
<g >
<title>std::__apply_impl&lt;seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (38 samples, 0.08%)</title><rect x="1141.1" y="469" width="0.9" height="15.0" fill="rgb(249,124,8)" rx="2" ry="2" />
<text  x="1144.07" y="479.5" ></text>
</g>
<g >
<title>operator delete (61 samples, 0.12%)</title><rect x="577.4" y="341" width="1.4" height="15.0" fill="rgb(240,182,9)" rx="2" ry="2" />
<text  x="580.37" y="351.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (17 samples, 0.03%)</title><rect x="538.9" y="389" width="0.4" height="15.0" fill="rgb(220,189,9)" rx="2" ry="2" />
<text  x="541.93" y="399.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const*, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;*&gt; (30 samples, 0.06%)</title><rect x="802.3" y="229" width="0.7" height="15.0" fill="rgb(221,133,24)" rx="2" ry="2" />
<text  x="805.27" y="239.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (80 samples, 0.16%)</title><rect x="396.7" y="213" width="1.9" height="15.0" fill="rgb(236,148,30)" rx="2" ry="2" />
<text  x="399.72" y="223.5" ></text>
</g>
<g >
<title>TLS init function for bound_view::_empty_prefix (43 samples, 0.09%)</title><rect x="240.4" y="181" width="1.0" height="15.0" fill="rgb(229,73,29)" rx="2" ry="2" />
<text  x="243.37" y="191.5" ></text>
</g>
<g >
<title>database::has_keyspace (101 samples, 0.20%)</title><rect x="841.2" y="405" width="2.5" height="15.0" fill="rgb(215,158,7)" rx="2" ry="2" />
<text  x="844.24" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (8 samples, 0.02%)</title><rect x="633.1" y="453" width="0.2" height="15.0" fill="rgb(248,135,22)" rx="2" ry="2" />
<text  x="636.09" y="463.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (8 samples, 0.02%)</title><rect x="166.7" y="213" width="0.2" height="15.0" fill="rgb(233,204,23)" rx="2" ry="2" />
<text  x="169.69" y="223.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (13 samples, 0.03%)</title><rect x="800.7" y="213" width="0.3" height="15.0" fill="rgb(224,12,30)" rx="2" ry="2" />
<text  x="803.72" y="223.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (9 samples, 0.02%)</title><rect x="299.7" y="245" width="0.3" height="15.0" fill="rgb(214,113,36)" rx="2" ry="2" />
<text  x="302.74" y="255.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::lsa_partition_reader (5 samples, 0.01%)</title><rect x="496.6" y="293" width="0.1" height="15.0" fill="rgb(211,205,9)" rx="2" ry="2" />
<text  x="499.59" y="303.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::digests_match (6 samples, 0.01%)</title><rect x="702.4" y="421" width="0.1" height="15.0" fill="rgb(208,111,49)" rx="2" ry="2" />
<text  x="705.40" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (27 samples, 0.05%)</title><rect x="506.8" y="181" width="0.7" height="15.0" fill="rgb(205,114,6)" rx="2" ry="2" />
<text  x="509.82" y="191.5" ></text>
</g>
<g >
<title>seastar::memory::stats (50 samples, 0.10%)</title><rect x="147.8" y="245" width="1.2" height="15.0" fill="rgb(218,132,46)" rx="2" ry="2" />
<text  x="150.76" y="255.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (11 samples, 0.02%)</title><rect x="1040.4" y="277" width="0.2" height="15.0" fill="rgb(213,8,48)" rx="2" ry="2" />
<text  x="1043.36" y="287.5" ></text>
</g>
<g >
<title>cql3::expr::possible_lhs_values (1,195 samples, 2.42%)</title><rect x="879.0" y="405" width="28.5" height="15.0" fill="rgb(220,105,38)" rx="2" ry="2" />
<text  x="881.97" y="415.5" >cq..</text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::operator (79 samples, 0.16%)</title><rect x="746.6" y="389" width="1.9" height="15.0" fill="rgb(216,23,24)" rx="2" ry="2" />
<text  x="749.60" y="399.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::query_options, std::default_delete&lt;cql3::query_options&gt; &gt;::~unique_ptr (5 samples, 0.01%)</title><rect x="831.3" y="421" width="0.1" height="15.0" fill="rgb(205,91,33)" rx="2" ry="2" />
<text  x="834.30" y="431.5" ></text>
</g>
<g >
<title>bplus::tree&lt;long, intrusive_array&lt;memtable_entry&gt;, dht::raw_token_less_comparator, 16ul,  (9 samples, 0.02%)</title><rect x="462.0" y="325" width="0.2" height="15.0" fill="rgb(213,177,40)" rx="2" ry="2" />
<text  x="465.00" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::allocate_aligned (80 samples, 0.16%)</title><rect x="197.8" y="69" width="2.0" height="15.0" fill="rgb(211,162,32)" rx="2" ry="2" />
<text  x="200.84" y="79.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (11 samples, 0.02%)</title><rect x="987.2" y="293" width="0.3" height="15.0" fill="rgb(208,67,4)" rx="2" ry="2" />
<text  x="990.22" y="303.5" ></text>
</g>
<g >
<title>schema::column_at (26 samples, 0.05%)</title><rect x="390.7" y="181" width="0.6" height="15.0" fill="rgb(211,153,54)" rx="2" ry="2" />
<text  x="393.73" y="191.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (7 samples, 0.01%)</title><rect x="763.6" y="325" width="0.2" height="15.0" fill="rgb(219,111,27)" rx="2" ry="2" />
<text  x="766.59" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt;::_M_realloc_insert&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; (60 samples, 0.12%)</title><rect x="245.2" y="197" width="1.5" height="15.0" fill="rgb(226,101,10)" rx="2" ry="2" />
<text  x="248.22" y="207.5" ></text>
</g>
<g >
<title>dht::murmur3_partitioner::get_token (17 samples, 0.03%)</title><rect x="930.6" y="405" width="0.5" height="15.0" fill="rgb(252,34,11)" rx="2" ry="2" />
<text  x="933.65" y="415.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (28 samples, 0.06%)</title><rect x="722.3" y="325" width="0.7" height="15.0" fill="rgb(216,122,7)" rx="2" ry="2" />
<text  x="725.28" y="335.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::clear (23 samples, 0.05%)</title><rect x="143.3" y="261" width="0.5" height="15.0" fill="rgb(247,34,46)" rx="2" ry="2" />
<text  x="146.27" y="271.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;mutation_querier, false, false&gt;::_Optional_base (6 samples, 0.01%)</title><rect x="423.2" y="405" width="0.1" height="15.0" fill="rgb(226,62,37)" rx="2" ry="2" />
<text  x="426.20" y="415.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::value (23 samples, 0.05%)</title><rect x="19.5" y="293" width="0.6" height="15.0" fill="rgb(210,70,34)" rx="2" ry="2" />
<text  x="22.53" y="303.5" ></text>
</g>
<g >
<title>seastar::promise&lt;void&gt;::promise (28 samples, 0.06%)</title><rect x="624.2" y="485" width="0.6" height="15.0" fill="rgb(227,107,6)" rx="2" ry="2" />
<text  x="627.18" y="495.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (18 samples, 0.04%)</title><rect x="685.0" y="469" width="0.5" height="15.0" fill="rgb(228,3,37)" rx="2" ry="2" />
<text  x="688.03" y="479.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;query::result_memory_accounter&gt;::move_it (23 samples, 0.05%)</title><rect x="603.4" y="437" width="0.5" height="15.0" fill="rgb(236,130,46)" rx="2" ry="2" />
<text  x="606.37" y="447.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::small_vector (5 samples, 0.01%)</title><rect x="456.4" y="277" width="0.1" height="15.0" fill="rgb(244,88,12)" rx="2" ry="2" />
<text  x="459.36" y="287.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (10 samples, 0.02%)</title><rect x="145.2" y="277" width="0.2" height="15.0" fill="rgb(222,226,26)" rx="2" ry="2" />
<text  x="148.16" y="287.5" ></text>
</g>
<g >
<title>seastar::reactor_backend_aio::reap_kernel_completions (39 samples, 0.08%)</title><rect x="1176.5" y="501" width="0.9" height="15.0" fill="rgb(244,203,48)" rx="2" ry="2" />
<text  x="1179.45" y="511.5" ></text>
</g>
<g >
<title>query::clustering_position_tracker&lt;query_result_builder&gt;::consume_new_partition (6 samples, 0.01%)</title><rect x="307.1" y="197" width="0.1" height="15.0" fill="rgb(250,195,10)" rx="2" ry="2" />
<text  x="310.08" y="207.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::operator= (18 samples, 0.04%)</title><rect x="826.8" y="421" width="0.4" height="15.0" fill="rgb(247,99,14)" rx="2" ry="2" />
<text  x="829.81" y="431.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (11 samples, 0.02%)</title><rect x="286.1" y="405" width="0.2" height="15.0" fill="rgb(240,224,54)" rx="2" ry="2" />
<text  x="289.08" y="415.5" ></text>
</g>
<g >
<title>operator delete (47 samples, 0.10%)</title><rect x="557.7" y="325" width="1.1" height="15.0" fill="rgb(245,123,40)" rx="2" ry="2" />
<text  x="560.71" y="335.5" ></text>
</g>
<g >
<title>seastar::promise&lt;void&gt;::promise (34 samples, 0.07%)</title><rect x="1023.7" y="181" width="0.8" height="15.0" fill="rgb(253,29,49)" rx="2" ry="2" />
<text  x="1026.73" y="191.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (7 samples, 0.01%)</title><rect x="568.5" y="293" width="0.2" height="15.0" fill="rgb(250,123,33)" rx="2" ry="2" />
<text  x="571.53" y="303.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::push_mutation_fragment&lt;schema const&amp;, reader_permit&amp;, partition_start&gt; (317 samples, 0.64%)</title><rect x="502.2" y="245" width="7.6" height="15.0" fill="rgb(213,23,11)" rx="2" ry="2" />
<text  x="505.18" y="255.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (5 samples, 0.01%)</title><rect x="1073.2" y="325" width="0.2" height="15.0" fill="rgb(253,3,13)" rx="2" ry="2" />
<text  x="1076.24" y="335.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_Optional_payload_base (25 samples, 0.05%)</title><rect x="551.3" y="421" width="0.6" height="15.0" fill="rgb(211,61,34)" rx="2" ry="2" />
<text  x="554.31" y="431.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;::operator== (18 samples, 0.04%)</title><rect x="739.1" y="293" width="0.5" height="15.0" fill="rgb(205,115,6)" rx="2" ry="2" />
<text  x="742.13" y="303.5" ></text>
</g>
<g >
<title>operator delete (32 samples, 0.06%)</title><rect x="59.7" y="453" width="0.8" height="15.0" fill="rgb(221,128,49)" rx="2" ry="2" />
<text  x="62.70" y="463.5" ></text>
</g>
<g >
<title>seastar::internal::uninitialized_wrapper_base&lt;service::storage_proxy_coordinator_query_result, false&gt;::uninitialized_set&lt;service::storage_proxy_coordinator_query_result&gt; (101 samples, 0.20%)</title><rect x="674.7" y="469" width="2.4" height="15.0" fill="rgb(220,228,23)" rx="2" ry="2" />
<text  x="677.66" y="479.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;clustering_key_prefix, false, false&gt;::_Optional_base (8 samples, 0.02%)</title><rect x="231.0" y="213" width="0.2" height="15.0" fill="rgb(222,55,48)" rx="2" ry="2" />
<text  x="233.98" y="223.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_state&lt;std::tuple&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt; &gt;, seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (48 samples, 0.10%)</title><rect x="782.8" y="245" width="1.1" height="15.0" fill="rgb(234,13,51)" rx="2" ry="2" />
<text  x="785.80" y="255.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;std::pair&lt;seastar::shared_ptr&lt;service::abstract_read_executor&gt;, nonwrapping_interval&lt;dht::token&gt; &gt;, 1ul&gt;::~small_vector (211 samples, 0.43%)</title><rect x="1169.4" y="485" width="5.0" height="15.0" fill="rgb(229,213,17)" rx="2" ry="2" />
<text  x="1172.38" y="495.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (36 samples, 0.07%)</title><rect x="783.1" y="229" width="0.8" height="15.0" fill="rgb(252,163,3)" rx="2" ry="2" />
<text  x="786.09" y="239.5" ></text>
</g>
<g >
<title>cql3::query_options::fill_value_views (144 samples, 0.29%)</title><rect x="845.4" y="405" width="3.4" height="15.0" fill="rgb(249,157,53)" rx="2" ry="2" />
<text  x="848.35" y="415.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::check_local_limit (5 samples, 0.01%)</title><rect x="303.8" y="197" width="0.1" height="15.0" fill="rgb(219,91,47)" rx="2" ry="2" />
<text  x="306.78" y="207.5" ></text>
</g>
<g >
<title>partition_snapshot::static_row (76 samples, 0.15%)</title><rect x="249.3" y="213" width="1.8" height="15.0" fill="rgb(229,147,5)" rx="2" ry="2" />
<text  x="252.26" y="223.5" ></text>
</g>
<g >
<title>operator delete (53 samples, 0.11%)</title><rect x="932.4" y="405" width="1.2" height="15.0" fill="rgb(223,18,32)" rx="2" ry="2" />
<text  x="935.37" y="415.5" ></text>
</g>
<g >
<title>locator::i_endpoint_snitch::snitch_instance (5 samples, 0.01%)</title><rect x="1094.1" y="293" width="0.1" height="15.0" fill="rgb(219,133,49)" rx="2" ry="2" />
<text  x="1097.10" y="303.5" ></text>
</g>
<g >
<title>bound_view::from_range&lt;nonwrapping_interval&gt; (106 samples, 0.21%)</title><rect x="240.2" y="197" width="2.5" height="15.0" fill="rgb(243,91,4)" rx="2" ry="2" />
<text  x="243.16" y="207.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (6 samples, 0.01%)</title><rect x="662.0" y="469" width="0.2" height="15.0" fill="rgb(237,211,42)" rx="2" ry="2" />
<text  x="665.02" y="479.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::reserve (7 samples, 0.01%)</title><rect x="106.4" y="405" width="0.2" height="15.0" fill="rgb(241,53,49)" rx="2" ry="2" />
<text  x="109.43" y="415.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::clear (31 samples, 0.06%)</title><rect x="258.7" y="277" width="0.7" height="15.0" fill="rgb(210,67,46)" rx="2" ry="2" />
<text  x="261.70" y="287.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::bool_class&lt;mutation_reader_merger::needs_merge_tag&gt; &gt;::take_value (6 samples, 0.01%)</title><rect x="132.7" y="261" width="0.1" height="15.0" fill="rgb(252,145,53)" rx="2" ry="2" />
<text  x="135.69" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (5 samples, 0.01%)</title><rect x="330.7" y="165" width="0.2" height="15.0" fill="rgb(248,140,23)" rx="2" ry="2" />
<text  x="333.73" y="175.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::get_local_service (19 samples, 0.04%)</title><rect x="1039.0" y="261" width="0.5" height="15.0" fill="rgb(248,59,51)" rx="2" ry="2" />
<text  x="1042.00" y="271.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (22 samples, 0.04%)</title><rect x="231.2" y="229" width="0.5" height="15.0" fill="rgb(233,8,18)" rx="2" ry="2" />
<text  x="234.17" y="239.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::~_Variant_storage (28 samples, 0.06%)</title><rect x="315.2" y="181" width="0.6" height="15.0" fill="rgb(213,136,33)" rx="2" ry="2" />
<text  x="318.18" y="191.5" ></text>
</g>
<g >
<title>schema::column_at (61 samples, 0.12%)</title><rect x="329.4" y="181" width="1.5" height="15.0" fill="rgb(225,86,36)" rx="2" ry="2" />
<text  x="332.39" y="191.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (13 samples, 0.03%)</title><rect x="513.7" y="277" width="0.3" height="15.0" fill="rgb(240,9,31)" rx="2" ry="2" />
<text  x="516.65" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;gms::inet_address, std::pair&lt;gms::inet_address const, table::cache_hit_rate&gt;, std::allocator&lt;std::pair&lt;gms::inet_address const, table::cache_hit_rate&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;gms::inet_address&gt;, std::hash&lt;gms::inet_address&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::operator[] (78 samples, 0.16%)</title><rect x="703.9" y="437" width="1.9" height="15.0" fill="rgb(213,147,37)" rx="2" ry="2" />
<text  x="706.93" y="447.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::take_value (10 samples, 0.02%)</title><rect x="80.9" y="453" width="0.3" height="15.0" fill="rgb(239,116,21)" rx="2" ry="2" />
<text  x="83.94" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (24 samples, 0.05%)</title><rect x="517.7" y="261" width="0.6" height="15.0" fill="rgb(246,45,50)" rx="2" ry="2" />
<text  x="520.69" y="271.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (6 samples, 0.01%)</title><rect x="425.5" y="405" width="0.2" height="15.0" fill="rgb(219,170,21)" rx="2" ry="2" />
<text  x="428.54" y="415.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (25 samples, 0.05%)</title><rect x="753.2" y="325" width="0.6" height="15.0" fill="rgb(213,11,13)" rx="2" ry="2" />
<text  x="756.20" y="335.5" ></text>
</g>
<g >
<title>partition_key::from_range&lt;std::vector&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, std::allocator&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt; &gt; (74 samples, 0.15%)</title><rect x="542.2" y="373" width="1.8" height="15.0" fill="rgb(254,222,45)" rx="2" ry="2" />
<text  x="545.23" y="383.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::make_ready&lt; (11 samples, 0.02%)</title><rect x="856.7" y="501" width="0.3" height="15.0" fill="rgb(245,171,41)" rx="2" ry="2" />
<text  x="859.72" y="511.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::read_next (2,920 samples, 5.91%)</title><rect x="161.9" y="245" width="69.8" height="15.0" fill="rgb(252,4,36)" rx="2" ry="2" />
<text  x="164.93" y="255.5" >partiti..</text>
</g>
<g >
<title>cql3::statements::modification_statement::check_access (7 samples, 0.01%)</title><rect x="22.2" y="485" width="0.2" height="15.0" fill="rgb(232,53,15)" rx="2" ry="2" />
<text  x="25.23" y="495.5" ></text>
</g>
<g >
<title>flat_mutation_reader::close (15 samples, 0.03%)</title><rect x="1175.1" y="453" width="0.4" height="15.0" fill="rgb(241,100,39)" rx="2" ry="2" />
<text  x="1178.12" y="463.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::allocate (8 samples, 0.02%)</title><rect x="281.0" y="309" width="0.2" height="15.0" fill="rgb(225,119,16)" rx="2" ry="2" />
<text  x="283.96" y="319.5" ></text>
</g>
<g >
<title>operator delete (11 samples, 0.02%)</title><rect x="659.7" y="437" width="0.3" height="15.0" fill="rgb(228,86,52)" rx="2" ry="2" />
<text  x="662.71" y="447.5" ></text>
</g>
<g >
<title>database::find_schema (326 samples, 0.66%)</title><rect x="751.4" y="405" width="7.7" height="15.0" fill="rgb(235,169,9)" rx="2" ry="2" />
<text  x="754.36" y="415.5" ></text>
</g>
<g >
<title>std::__equal&lt;true&gt;::equal&lt;signed char&gt; (7 samples, 0.01%)</title><rect x="722.7" y="293" width="0.2" height="15.0" fill="rgb(217,113,45)" rx="2" ry="2" />
<text  x="725.71" y="303.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::forward_to (5 samples, 0.01%)</title><rect x="662.2" y="485" width="0.1" height="15.0" fill="rgb(248,7,54)" rx="2" ry="2" />
<text  x="665.17" y="495.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (14 samples, 0.03%)</title><rect x="605.6" y="437" width="0.3" height="15.0" fill="rgb(249,229,20)" rx="2" ry="2" />
<text  x="608.59" y="447.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate (561 samples, 1.14%)</title><rect x="884.4" y="325" width="13.4" height="15.0" fill="rgb(224,142,47)" rx="2" ry="2" />
<text  x="887.37" y="335.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::operator= (15 samples, 0.03%)</title><rect x="863.7" y="453" width="0.3" height="15.0" fill="rgb(232,5,48)" rx="2" ry="2" />
<text  x="866.68" y="463.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::clear (6 samples, 0.01%)</title><rect x="119.1" y="373" width="0.1" height="15.0" fill="rgb(240,102,13)" rx="2" ry="2" />
<text  x="122.09" y="383.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mHEXNUMBER (13 samples, 0.03%)</title><rect x="17.4" y="261" width="0.3" height="15.0" fill="rgb(245,137,51)" rx="2" ry="2" />
<text  x="20.36" y="271.5" ></text>
</g>
<g >
<title>reader_permit::used_guard::~used_guard (507 samples, 1.03%)</title><rect x="66.7" y="453" width="12.1" height="15.0" fill="rgb(248,130,7)" rx="2" ry="2" />
<text  x="69.67" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_clear (29 samples, 0.06%)</title><rect x="581.0" y="373" width="0.7" height="15.0" fill="rgb(229,176,45)" rx="2" ry="2" />
<text  x="584.01" y="383.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (7 samples, 0.01%)</title><rect x="996.4" y="245" width="0.1" height="15.0" fill="rgb(223,19,43)" rx="2" ry="2" />
<text  x="999.38" y="255.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (48 samples, 0.10%)</title><rect x="787.1" y="165" width="1.1" height="15.0" fill="rgb(209,28,21)" rx="2" ry="2" />
<text  x="790.05" y="175.5" ></text>
</g>
<g >
<title>query::querier_base::~querier_base (326 samples, 0.66%)</title><rect x="583.6" y="437" width="7.8" height="15.0" fill="rgb(241,210,14)" rx="2" ry="2" />
<text  x="586.56" y="447.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (23 samples, 0.05%)</title><rect x="635.9" y="485" width="0.6" height="15.0" fill="rgb(228,211,44)" rx="2" ry="2" />
<text  x="638.91" y="495.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::remove_if&lt;row::compact_and_expire (733 samples, 1.48%)</title><rect x="373.2" y="181" width="17.5" height="15.0" fill="rgb(212,136,5)" rx="2" ry="2" />
<text  x="376.21" y="191.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (21 samples, 0.04%)</title><rect x="804.4" y="229" width="0.5" height="15.0" fill="rgb(222,91,50)" rx="2" ry="2" />
<text  x="807.40" y="239.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::leaf_node::allocate (147 samples, 0.30%)</title><rect x="196.4" y="117" width="3.5" height="15.0" fill="rgb(244,183,42)" rx="2" ry="2" />
<text  x="199.36" y="127.5" ></text>
</g>
<g >
<title>range_tombstone_list::~range_tombstone_list (15 samples, 0.03%)</title><rect x="568.0" y="293" width="0.4" height="15.0" fill="rgb(207,78,33)" rx="2" ry="2" />
<text  x="571.03" y="303.5" ></text>
</g>
<g >
<title>reader_permit::consume_memory (14 samples, 0.03%)</title><rect x="160.6" y="213" width="0.4" height="15.0" fill="rgb(240,35,37)" rx="2" ry="2" />
<text  x="163.64" y="223.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (12 samples, 0.02%)</title><rect x="571.1" y="341" width="0.3" height="15.0" fill="rgb(242,21,26)" rx="2" ry="2" />
<text  x="574.11" y="351.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::clear (9 samples, 0.02%)</title><rect x="674.2" y="485" width="0.2" height="15.0" fill="rgb(211,83,15)" rx="2" ry="2" />
<text  x="677.23" y="495.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (8 samples, 0.02%)</title><rect x="590.5" y="373" width="0.2" height="15.0" fill="rgb(227,93,48)" rx="2" ry="2" />
<text  x="593.51" y="383.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;std::_List_iterator&lt;flat_mutation_reader&gt;, mutation_reader_merger::close (7 samples, 0.01%)</title><rect x="1175.2" y="405" width="0.1" height="15.0" fill="rgb(213,115,24)" rx="2" ry="2" />
<text  x="1178.16" y="415.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector (9 samples, 0.02%)</title><rect x="1091.6" y="277" width="0.2" height="15.0" fill="rgb(228,196,33)" rx="2" ry="2" />
<text  x="1094.56" y="287.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::~result_memory_accounter (7 samples, 0.01%)</title><rect x="63.2" y="453" width="0.2" height="15.0" fill="rgb(225,151,6)" rx="2" ry="2" />
<text  x="66.21" y="463.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (35 samples, 0.07%)</title><rect x="894.7" y="277" width="0.9" height="15.0" fill="rgb(230,93,0)" rx="2" ry="2" />
<text  x="897.74" y="287.5" ></text>
</g>
<g >
<title>table::as_mutation_source (92 samples, 0.19%)</title><rect x="620.6" y="437" width="2.2" height="15.0" fill="rgb(242,97,3)" rx="2" ry="2" />
<text  x="623.60" y="447.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (19 samples, 0.04%)</title><rect x="634.3" y="453" width="0.4" height="15.0" fill="rgb(252,63,9)" rx="2" ry="2" />
<text  x="637.29" y="463.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::at (32 samples, 0.06%)</title><rect x="1016.3" y="229" width="0.8" height="15.0" fill="rgb(241,128,28)" rx="2" ry="2" />
<text  x="1019.35" y="239.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (14 samples, 0.03%)</title><rect x="756.8" y="309" width="0.3" height="15.0" fill="rgb(233,10,15)" rx="2" ry="2" />
<text  x="759.81" y="319.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (5 samples, 0.01%)</title><rect x="269.0" y="325" width="0.1" height="15.0" fill="rgb(211,159,17)" rx="2" ry="2" />
<text  x="272.02" y="335.5" ></text>
</g>
<g >
<title>schema_registry::get (119 samples, 0.24%)</title><rect x="972.1" y="357" width="2.9" height="15.0" fill="rgb(248,18,7)" rx="2" ry="2" />
<text  x="975.12" y="367.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::make_data_requests (5 samples, 0.01%)</title><rect x="24.3" y="517" width="0.2" height="15.0" fill="rgb(233,27,24)" rx="2" ry="2" />
<text  x="27.34" y="527.5" ></text>
</g>
<g >
<title>cql3::raw_value_view::make_temporary (91 samples, 0.18%)</title><rect x="899.5" y="341" width="2.2" height="15.0" fill="rgb(246,153,45)" rx="2" ry="2" />
<text  x="902.49" y="351.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (12 samples, 0.02%)</title><rect x="649.3" y="453" width="0.3" height="15.0" fill="rgb(249,119,43)" rx="2" ry="2" />
<text  x="652.31" y="463.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_slice_or_needs_filtering (8 samples, 0.02%)</title><rect x="646.3" y="405" width="0.1" height="15.0" fill="rgb(232,131,12)" rx="2" ry="2" />
<text  x="649.26" y="415.5" ></text>
</g>
<g >
<title>cql3::restrictions::partition_key_restrictions::needs_filtering (25 samples, 0.05%)</title><rect x="874.0" y="421" width="0.5" height="15.0" fill="rgb(230,173,17)" rx="2" ry="2" />
<text  x="876.95" y="431.5" ></text>
</g>
<g >
<title>seastar::chunked_fifo&lt;seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::entry, 128ul&gt;::emplace_back&lt;reader_concurrency_semaphore::entry, seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;&amp;, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;&amp;&gt; (10 samples, 0.02%)</title><rect x="1024.7" y="197" width="0.2" height="15.0" fill="rgb(243,136,42)" rx="2" ry="2" />
<text  x="1027.69" y="207.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::operator (6,226 samples, 12.61%)</title><rect x="121.3" y="357" width="148.8" height="15.0" fill="rgb(250,97,54)" rx="2" ry="2" />
<text  x="124.31" y="367.5" >mutation_fragment_m..</text>
</g>
<g >
<title>utils::config_file::named_value&lt;unsigned long&gt;::the_value (60 samples, 0.12%)</title><rect x="1132.1" y="389" width="1.4" height="15.0" fill="rgb(224,85,30)" rx="2" ry="2" />
<text  x="1135.11" y="399.5" ></text>
</g>
<g >
<title>ser::serializer&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;::write_fragmented&lt;bytes_ostream, fragment_range&lt;managed_bytes_basic_view&lt; (5 samples, 0.01%)</title><rect x="332.7" y="181" width="0.1" height="15.0" fill="rgb(229,178,44)" rx="2" ry="2" />
<text  x="335.67" y="191.5" ></text>
</g>
<g >
<title>free (24 samples, 0.05%)</title><rect x="406.9" y="197" width="0.6" height="15.0" fill="rgb(245,64,8)" rx="2" ry="2" />
<text  x="409.93" y="207.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (150 samples, 0.30%)</title><rect x="564.4" y="293" width="3.6" height="15.0" fill="rgb(216,211,54)" rx="2" ry="2" />
<text  x="567.45" y="303.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (5 samples, 0.01%)</title><rect x="842.8" y="325" width="0.1" height="15.0" fill="rgb(220,40,24)" rx="2" ry="2" />
<text  x="845.80" y="335.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::maybe_refresh_state (54 samples, 0.11%)</title><rect x="225.7" y="165" width="1.2" height="15.0" fill="rgb(246,217,8)" rx="2" ry="2" />
<text  x="228.65" y="175.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (14 samples, 0.03%)</title><rect x="1100.8" y="357" width="0.4" height="15.0" fill="rgb(241,159,26)" rx="2" ry="2" />
<text  x="1103.83" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (5 samples, 0.01%)</title><rect x="1137.3" y="421" width="0.1" height="15.0" fill="rgb(229,158,23)" rx="2" ry="2" />
<text  x="1140.29" y="431.5" ></text>
</g>
<g >
<title>cql3::raw_value::make_value (193 samples, 0.39%)</title><rect x="889.5" y="277" width="4.6" height="15.0" fill="rgb(244,37,34)" rx="2" ry="2" />
<text  x="892.46" y="287.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (8 samples, 0.02%)</title><rect x="810.3" y="293" width="0.2" height="15.0" fill="rgb(218,128,14)" rx="2" ry="2" />
<text  x="813.33" y="303.5" ></text>
</g>
<g >
<title>tracing::global_trace_state_ptr::global_trace_state_ptr (8 samples, 0.02%)</title><rect x="1046.7" y="277" width="0.2" height="15.0" fill="rgb(224,154,33)" rx="2" ry="2" />
<text  x="1049.67" y="287.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (33 samples, 0.07%)</title><rect x="689.7" y="453" width="0.8" height="15.0" fill="rgb(251,75,41)" rx="2" ry="2" />
<text  x="692.67" y="463.5" ></text>
</g>
<g >
<title>utils::tuple_hash::operator (88 samples, 0.18%)</title><rect x="740.6" y="309" width="2.1" height="15.0" fill="rgb(248,209,19)" rx="2" ry="2" />
<text  x="743.58" y="319.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (10 samples, 0.02%)</title><rect x="750.4" y="405" width="0.2" height="15.0" fill="rgb(227,63,18)" rx="2" ry="2" />
<text  x="753.36" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (13 samples, 0.03%)</title><rect x="830.5" y="357" width="0.3" height="15.0" fill="rgb(207,148,26)" rx="2" ry="2" />
<text  x="833.54" y="367.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (54 samples, 0.11%)</title><rect x="499.9" y="261" width="1.3" height="15.0" fill="rgb(236,200,11)" rx="2" ry="2" />
<text  x="502.91" y="271.5" ></text>
</g>
<g >
<title>mutation_partition::upper_bound (8 samples, 0.02%)</title><rect x="239.5" y="197" width="0.2" height="15.0" fill="rgb(226,170,31)" rx="2" ry="2" />
<text  x="242.51" y="207.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (2,305 samples, 4.67%)</title><rect x="167.0" y="229" width="55.0" height="15.0" fill="rgb(226,218,23)" rx="2" ry="2" />
<text  x="169.97" y="239.5" >parti..</text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%)</title><rect x="35.9" y="437" width="0.1" height="15.0" fill="rgb(245,205,2)" rx="2" ry="2" />
<text  x="38.85" y="447.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (39 samples, 0.08%)</title><rect x="1149.1" y="485" width="0.9" height="15.0" fill="rgb(229,124,49)" rx="2" ry="2" />
<text  x="1152.07" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::emplace_back&lt;flat_mutation_reader&gt; (24 samples, 0.05%)</title><rect x="535.7" y="341" width="0.6" height="15.0" fill="rgb(253,97,14)" rx="2" ry="2" />
<text  x="538.68" y="351.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;clustering_key_prefix&gt;::_M_move_assign (15 samples, 0.03%)</title><rect x="540.5" y="405" width="0.4" height="15.0" fill="rgb(226,202,54)" rx="2" ry="2" />
<text  x="543.51" y="415.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (19 samples, 0.04%)</title><rect x="629.1" y="485" width="0.4" height="15.0" fill="rgb(222,202,47)" rx="2" ry="2" />
<text  x="632.05" y="495.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::_M_create_storage (45 samples, 0.09%)</title><rect x="102.7" y="405" width="1.1" height="15.0" fill="rgb(244,185,26)" rx="2" ry="2" />
<text  x="105.73" y="415.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::upper_bound&lt;mutation_partition, schema const&amp;, nonwrapping_interval&lt;clustering_key_prefix&gt; const&amp;&gt; (12 samples, 0.02%)</title><rect x="239.4" y="213" width="0.3" height="15.0" fill="rgb(222,212,43)" rx="2" ry="2" />
<text  x="242.42" y="223.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (22 samples, 0.04%)</title><rect x="802.5" y="213" width="0.5" height="15.0" fill="rgb(247,129,40)" rx="2" ry="2" />
<text  x="805.46" y="223.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (22 samples, 0.04%)</title><rect x="357.9" y="149" width="0.5" height="15.0" fill="rgb(250,26,16)" rx="2" ry="2" />
<text  x="360.87" y="159.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (40 samples, 0.08%)</title><rect x="1166.5" y="485" width="0.9" height="15.0" fill="rgb(246,46,48)" rx="2" ry="2" />
<text  x="1169.49" y="495.5" ></text>
</g>
<g >
<title>utils::fb_utilities::get_broadcast_address (7 samples, 0.01%)</title><rect x="703.6" y="437" width="0.2" height="15.0" fill="rgb(251,93,24)" rx="2" ry="2" />
<text  x="706.60" y="447.5" ></text>
</g>
<g >
<title>std::default_delete&lt;compact_for_query&lt; (23 samples, 0.05%)</title><rect x="415.9" y="261" width="0.6" height="15.0" fill="rgb(248,78,49)" rx="2" ry="2" />
<text  x="418.93" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value_view, std::allocator&lt;cql3::raw_value_view&gt; &gt;::_M_check_len (8 samples, 0.02%)</title><rect x="848.6" y="357" width="0.2" height="15.0" fill="rgb(245,82,25)" rx="2" ry="2" />
<text  x="851.60" y="367.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (22 samples, 0.04%)</title><rect x="797.0" y="117" width="0.5" height="15.0" fill="rgb(214,143,46)" rx="2" ry="2" />
<text  x="799.97" y="127.5" ></text>
</g>
<g >
<title>std::__detail::_List_node_header::_List_node_header (11 samples, 0.02%)</title><rect x="453.3" y="261" width="0.3" height="15.0" fill="rgb(252,162,38)" rx="2" ry="2" />
<text  x="456.35" y="271.5" ></text>
</g>
<g >
<title>auth::resource::parent (138 samples, 0.28%)</title><rect x="773.9" y="325" width="3.3" height="15.0" fill="rgb(250,48,48)" rx="2" ry="2" />
<text  x="776.91" y="335.5" ></text>
</g>
<g >
<title>utils::config_file::named_value&lt;bool&gt;::the_value (14 samples, 0.03%)</title><rect x="1096.1" y="341" width="0.3" height="15.0" fill="rgb(230,152,34)" rx="2" ry="2" />
<text  x="1099.10" y="351.5" ></text>
</g>
<g >
<title>utils::tuple_hash::hash_impl&lt;2ul, auth::resource_kind, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (59 samples, 0.12%)</title><rect x="813.9" y="309" width="1.4" height="15.0" fill="rgb(208,10,2)" rx="2" ry="2" />
<text  x="816.86" y="319.5" ></text>
</g>
<g >
<title>_ZSt5applyIZN7seastar8internal12do_with_implISt4pairIN4auth17role_or_anonymousENS4_8resourceEEZNS4_17permissions_cache3getERKS5_RKS6_E3$_0JEEEDaOT_OT0_DpOT1_EUlDpOT_E_St5tupleIJOS7_EEEDcSF_SH_ (90 samples, 0.18%)</title><rect x="782.0" y="261" width="2.2" height="15.0" fill="rgb(215,42,2)" rx="2" ry="2" />
<text  x="785.01" y="271.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (7 samples, 0.01%)</title><rect x="605.2" y="421" width="0.2" height="15.0" fill="rgb(235,133,22)" rx="2" ry="2" />
<text  x="608.23" y="431.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::on_new_range (373 samples, 0.76%)</title><rect x="153.0" y="245" width="8.9" height="15.0" fill="rgb(244,112,20)" rx="2" ry="2" />
<text  x="156.02" y="255.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (8 samples, 0.02%)</title><rect x="1032.5" y="229" width="0.2" height="15.0" fill="rgb(225,179,14)" rx="2" ry="2" />
<text  x="1035.50" y="239.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (19 samples, 0.04%)</title><rect x="456.7" y="277" width="0.5" height="15.0" fill="rgb(217,118,40)" rx="2" ry="2" />
<text  x="459.72" y="287.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (37 samples, 0.07%)</title><rect x="424.8" y="421" width="0.9" height="15.0" fill="rgb(226,209,17)" rx="2" ry="2" />
<text  x="427.80" y="431.5" ></text>
</g>
<g >
<title>std::push_heap&lt;mutation_reader_merger::reader_and_fragment*, mutation_reader_merger::reader_heap_compare&gt; (10 samples, 0.02%)</title><rect x="144.0" y="261" width="0.3" height="15.0" fill="rgb(213,189,3)" rx="2" ry="2" />
<text  x="147.01" y="271.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (75 samples, 0.15%)</title><rect x="1097.5" y="357" width="1.8" height="15.0" fill="rgb(226,169,27)" rx="2" ry="2" />
<text  x="1100.46" y="367.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;query::result_memory_accounter&gt;::clear (13 samples, 0.03%)</title><rect x="603.1" y="437" width="0.3" height="15.0" fill="rgb(213,73,13)" rx="2" ry="2" />
<text  x="606.06" y="447.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::query_options, db::consistency_level&amp;, std::vector&lt;cql3::raw_value, std::allocator&lt;cql3::raw_value&gt; &gt;, cql3::query_options::specific_options&gt; (255 samples, 0.52%)</title><rect x="844.3" y="453" width="6.1" height="15.0" fill="rgb(205,69,5)" rx="2" ry="2" />
<text  x="847.35" y="463.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;empty_flat_reader, std::default_delete&lt;empty_flat_reader&gt; &gt;::~unique_ptr (15 samples, 0.03%)</title><rect x="533.5" y="277" width="0.4" height="15.0" fill="rgb(214,159,8)" rx="2" ry="2" />
<text  x="536.51" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (8 samples, 0.02%)</title><rect x="558.6" y="309" width="0.2" height="15.0" fill="rgb(254,209,12)" rx="2" ry="2" />
<text  x="561.64" y="319.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (12 samples, 0.02%)</title><rect x="843.7" y="405" width="0.2" height="15.0" fill="rgb(240,18,38)" rx="2" ry="2" />
<text  x="846.66" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%)</title><rect x="572.1" y="325" width="0.2" height="15.0" fill="rgb(254,188,43)" rx="2" ry="2" />
<text  x="575.14" y="335.5" ></text>
</g>
<g >
<title>seastar::future&lt;boost::iterator_range&lt;mutation_fragment*&gt; &gt;::then_impl&lt;mutation_fragment_merger&lt;mutation_reader_merger&gt;::fetch (67 samples, 0.14%)</title><rect x="262.2" y="325" width="1.6" height="15.0" fill="rgb(210,87,31)" rx="2" ry="2" />
<text  x="265.18" y="335.5" ></text>
</g>
<g >
<title>operator delete (23 samples, 0.05%)</title><rect x="50.6" y="469" width="0.6" height="15.0" fill="rgb(228,68,30)" rx="2" ry="2" />
<text  x="53.64" y="479.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::insertToken (10 samples, 0.02%)</title><rect x="16.7" y="293" width="0.2" height="15.0" fill="rgb(218,91,38)" rx="2" ry="2" />
<text  x="19.69" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node_base*&gt;::allocate (7 samples, 0.01%)</title><rect x="1157.8" y="405" width="0.2" height="15.0" fill="rgb(209,10,11)" rx="2" ry="2" />
<text  x="1160.79" y="415.5" ></text>
</g>
<g >
<title>operator delete (30 samples, 0.06%)</title><rect x="809.0" y="309" width="0.7" height="15.0" fill="rgb(242,210,3)" rx="2" ry="2" />
<text  x="811.96" y="319.5" ></text>
</g>
<g >
<title>ser::qr_clustered_row__cells&lt;bytes_ostream&gt;::qr_clustered_row__cells (10 samples, 0.02%)</title><rect x="331.1" y="181" width="0.2" height="15.0" fill="rgb(228,221,21)" rx="2" ry="2" />
<text  x="334.09" y="191.5" ></text>
</g>
<g >
<title>ser::writer_of_qr_cell&lt;bytes_ostream&gt;::skip_timestamp (112 samples, 0.23%)</title><rect x="359.6" y="165" width="2.7" height="15.0" fill="rgb(206,188,42)" rx="2" ry="2" />
<text  x="362.59" y="175.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_9has_tokenERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES28_S2B_ (11 samples, 0.02%)</title><rect x="943.0" y="389" width="0.2" height="15.0" fill="rgb(247,101,47)" rx="2" ry="2" />
<text  x="945.98" y="399.5" ></text>
</g>
<g >
<title>operator new (23 samples, 0.05%)</title><rect x="549.5" y="405" width="0.5" height="15.0" fill="rgb(252,157,24)" rx="2" ry="2" />
<text  x="552.47" y="415.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::find (14 samples, 0.03%)</title><rect x="648.5" y="421" width="0.3" height="15.0" fill="rgb(239,77,9)" rx="2" ry="2" />
<text  x="651.45" y="431.5" ></text>
</g>
<g >
<title>memtable::find_or_create_partition_slow (8 samples, 0.02%)</title><rect x="1140.3" y="245" width="0.2" height="15.0" fill="rgb(254,229,46)" rx="2" ry="2" />
<text  x="1143.33" y="255.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (17 samples, 0.03%)</title><rect x="1127.8" y="389" width="0.4" height="15.0" fill="rgb(236,47,22)" rx="2" ry="2" />
<text  x="1130.83" y="399.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;mutation_fragment_merger&lt;mutation_reader_merger&gt;::operator (160 samples, 0.32%)</title><rect x="265.9" y="341" width="3.8" height="15.0" fill="rgb(231,18,53)" rx="2" ry="2" />
<text  x="268.91" y="351.5" ></text>
</g>
<g >
<title>schema::column_at (20 samples, 0.04%)</title><rect x="204.0" y="133" width="0.5" height="15.0" fill="rgb(234,201,3)" rx="2" ry="2" />
<text  x="206.98" y="143.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (8 samples, 0.02%)</title><rect x="1032.2" y="229" width="0.2" height="15.0" fill="rgb(253,130,46)" rx="2" ry="2" />
<text  x="1035.21" y="239.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (21 samples, 0.04%)</title><rect x="233.4" y="245" width="0.5" height="15.0" fill="rgb(215,82,29)" rx="2" ry="2" />
<text  x="236.37" y="255.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (12 samples, 0.02%)</title><rect x="821.7" y="277" width="0.2" height="15.0" fill="rgb(224,158,11)" rx="2" ry="2" />
<text  x="824.65" y="287.5" ></text>
</g>
<g >
<title>seastar::reactor::add_timer (24 samples, 0.05%)</title><rect x="989.3" y="277" width="0.6" height="15.0" fill="rgb(213,195,5)" rx="2" ry="2" />
<text  x="992.30" y="287.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (6 samples, 0.01%)</title><rect x="905.7" y="293" width="0.1" height="15.0" fill="rgb(232,178,4)" rx="2" ry="2" />
<text  x="908.66" y="303.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (92 samples, 0.19%)</title><rect x="624.8" y="485" width="2.2" height="15.0" fill="rgb(246,140,6)" rx="2" ry="2" />
<text  x="627.85" y="495.5" ></text>
</g>
<g >
<title>position_in_partition::position_in_partition (34 samples, 0.07%)</title><rect x="231.7" y="245" width="0.8" height="15.0" fill="rgb(246,84,42)" rx="2" ry="2" />
<text  x="234.70" y="255.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (7 samples, 0.01%)</title><rect x="668.1" y="437" width="0.2" height="15.0" fill="rgb(248,167,49)" rx="2" ry="2" />
<text  x="671.09" y="447.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (7 samples, 0.01%)</title><rect x="654.9" y="453" width="0.2" height="15.0" fill="rgb(217,192,19)" rx="2" ry="2" />
<text  x="657.93" y="463.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (8 samples, 0.02%)</title><rect x="295.6" y="293" width="0.2" height="15.0" fill="rgb(212,32,28)" rx="2" ry="2" />
<text  x="298.61" y="303.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_M_reset (6 samples, 0.01%)</title><rect x="930.0" y="389" width="0.1" height="15.0" fill="rgb(233,18,10)" rx="2" ry="2" />
<text  x="933.00" y="399.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (8 samples, 0.02%)</title><rect x="543.8" y="341" width="0.2" height="15.0" fill="rgb(239,61,6)" rx="2" ry="2" />
<text  x="546.78" y="351.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;, service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (19 samples, 0.04%)</title><rect x="1141.5" y="293" width="0.5" height="15.0" fill="rgb(214,195,41)" rx="2" ry="2" />
<text  x="1144.52" y="303.5" ></text>
</g>
<g >
<title>mutation_reader_merger::maybe_add_readers (287 samples, 0.58%)</title><rect x="441.4" y="293" width="6.9" height="15.0" fill="rgb(233,176,2)" rx="2" ry="2" />
<text  x="444.43" y="303.5" ></text>
</g>
<g >
<title>database::find_keyspace (317 samples, 0.64%)</title><rect x="1054.3" y="341" width="7.6" height="15.0" fill="rgb(206,223,27)" rx="2" ry="2" />
<text  x="1057.29" y="351.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (7 samples, 0.01%)</title><rect x="690.7" y="437" width="0.2" height="15.0" fill="rgb(246,139,4)" rx="2" ry="2" />
<text  x="693.74" y="447.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_rehash_aux (70 samples, 0.14%)</title><rect x="1157.6" y="421" width="1.7" height="15.0" fill="rgb(205,3,38)" rx="2" ry="2" />
<text  x="1160.58" y="431.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (9 samples, 0.02%)</title><rect x="619.0" y="389" width="0.2" height="15.0" fill="rgb(225,47,39)" rx="2" ry="2" />
<text  x="621.99" y="399.5" ></text>
</g>
<g >
<title>operator delete (17 samples, 0.03%)</title><rect x="45.6" y="501" width="0.4" height="15.0" fill="rgb(245,74,46)" rx="2" ry="2" />
<text  x="48.58" y="511.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::~guard (10 samples, 0.02%)</title><rect x="499.7" y="261" width="0.2" height="15.0" fill="rgb(228,168,23)" rx="2" ry="2" />
<text  x="502.68" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (7 samples, 0.01%)</title><rect x="583.0" y="373" width="0.2" height="15.0" fill="rgb(247,9,8)" rx="2" ry="2" />
<text  x="586.01" y="383.5" ></text>
</g>
<g >
<title>std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;, seastar::future&lt;void&gt; &gt; &gt;::operator (47 samples, 0.10%)</title><rect x="816.5" y="373" width="1.1" height="15.0" fill="rgb(244,40,27)" rx="2" ry="2" />
<text  x="819.47" y="383.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (12,970 samples, 26.26%)</title><rect x="113.5" y="421" width="309.9" height="15.0" fill="rgb(206,185,16)" rx="2" ry="2" />
<text  x="116.55" y="431.5" >query::consume_page&lt;</text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (5 samples, 0.01%)</title><rect x="1028.3" y="165" width="0.2" height="15.0" fill="rgb(219,202,29)" rx="2" ry="2" />
<text  x="1031.34" y="175.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (6 samples, 0.01%)</title><rect x="498.2" y="261" width="0.2" height="15.0" fill="rgb(221,193,43)" rx="2" ry="2" />
<text  x="501.22" y="271.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;seastar::future&lt;void&gt; &gt;  (7 samples, 0.01%)</title><rect x="617.2" y="437" width="0.2" height="15.0" fill="rgb(245,30,43)" rx="2" ry="2" />
<text  x="620.20" y="447.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::maybe_decay_reserve (7 samples, 0.01%)</title><rect x="168.5" y="197" width="0.2" height="15.0" fill="rgb(228,17,8)" rx="2" ry="2" />
<text  x="171.50" y="207.5" ></text>
</g>
<g >
<title>operator delete (32 samples, 0.06%)</title><rect x="34.5" y="469" width="0.7" height="15.0" fill="rgb(206,15,50)" rx="2" ry="2" />
<text  x="37.47" y="479.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::apply_updates (11 samples, 0.02%)</title><rect x="859.8" y="373" width="0.3" height="15.0" fill="rgb(236,55,23)" rx="2" ry="2" />
<text  x="862.83" y="383.5" ></text>
</g>
<g >
<title>service::never_speculating_read_executor::~never_speculating_read_executor (130 samples, 0.26%)</title><rect x="1171.3" y="453" width="3.1" height="15.0" fill="rgb(221,5,30)" rx="2" ry="2" />
<text  x="1174.32" y="463.5" ></text>
</g>
<g >
<title>absl::hash_internal::AbslHashValue&lt;absl::hash_internal::HashState&gt; (29 samples, 0.06%)</title><rect x="1060.1" y="277" width="0.7" height="15.0" fill="rgb(248,49,45)" rx="2" ry="2" />
<text  x="1063.14" y="287.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEENK4$_43clERKNSF_15binary_operatorEEUlRKNSF_12column_valueEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_17tuple_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlNSF_5tokenEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlSS_E_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_11conjunctionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_8constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_21unresolved_identifierEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_25column_mutation_attributeEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13function_callEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4castEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_15field_selectionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4nullEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13bind_variableEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_16untyped_constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_22collection_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_20usertype_constructorEE_EERS4_IJS14_SQ_ST_S11_S1C_S1G_S1K_S1O_S1S_S1W_S20_S24_S18_SX_S28_S2C_EEEJEEESt16integer_sequenceImJLm2EEEE14__visit_invokeES2H_S2J_ (7 samples, 0.01%)</title><rect x="907.1" y="389" width="0.2" height="15.0" fill="rgb(206,138,8)" rx="2" ry="2" />
<text  x="910.11" y="399.5" ></text>
</g>
<g >
<title>managed_bytes::external_memory_usage (16 samples, 0.03%)</title><rect x="209.2" y="101" width="0.4" height="15.0" fill="rgb(223,20,53)" rx="2" ry="2" />
<text  x="212.24" y="111.5" ></text>
</g>
<g >
<title>std::apply&lt;auth::get_permissions (1,060 samples, 2.15%)</title><rect x="780.9" y="293" width="25.3" height="15.0" fill="rgb(229,225,18)" rx="2" ry="2" />
<text  x="783.87" y="303.5" >s..</text>
</g>
<g >
<title>database::get_unlimited_query_max_result_size (113 samples, 0.23%)</title><rect x="1130.8" y="405" width="2.7" height="15.0" fill="rgb(235,204,49)" rx="2" ry="2" />
<text  x="1133.84" y="415.5" ></text>
</g>
<g >
<title>reader_permit::consume_memory (23 samples, 0.05%)</title><rect x="507.5" y="197" width="0.6" height="15.0" fill="rgb(208,213,6)" rx="2" ry="2" />
<text  x="510.54" y="207.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::find (27 samples, 0.05%)</title><rect x="648.1" y="437" width="0.7" height="15.0" fill="rgb(222,4,8)" rx="2" ry="2" />
<text  x="651.14" y="447.5" ></text>
</g>
<g >
<title>operator delete (33 samples, 0.07%)</title><rect x="898.2" y="309" width="0.8" height="15.0" fill="rgb(221,182,2)" rx="2" ry="2" />
<text  x="901.25" y="319.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (5 samples, 0.01%)</title><rect x="706.3" y="469" width="0.2" height="15.0" fill="rgb(210,164,0)" rx="2" ry="2" />
<text  x="709.35" y="479.5" ></text>
</g>
<g >
<title>std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (89 samples, 0.18%)</title><rect x="414.4" y="293" width="2.1" height="15.0" fill="rgb(221,197,26)" rx="2" ry="2" />
<text  x="417.36" y="303.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_no_esft&lt;std::function&lt;std::function&lt;partition_presence_checker_result  (5 samples, 0.01%)</title><rect x="622.3" y="389" width="0.1" height="15.0" fill="rgb(217,182,12)" rx="2" ry="2" />
<text  x="625.27" y="399.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (18 samples, 0.04%)</title><rect x="682.2" y="325" width="0.4" height="15.0" fill="rgb(217,78,29)" rx="2" ry="2" />
<text  x="685.19" y="335.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, fragmented_temporary_buffer::view, managed_bytes_basic_view&lt; (30 samples, 0.06%)</title><rect x="895.6" y="277" width="0.7" height="15.0" fill="rgb(223,204,13)" rx="2" ry="2" />
<text  x="898.57" y="287.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (16 samples, 0.03%)</title><rect x="682.2" y="309" width="0.4" height="15.0" fill="rgb(207,208,8)" rx="2" ry="2" />
<text  x="685.21" y="319.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::query_options, std::default_delete&lt;cql3::query_options&gt; &gt;::~unique_ptr (9 samples, 0.02%)</title><rect x="850.4" y="453" width="0.3" height="15.0" fill="rgb(213,132,35)" rx="2" ry="2" />
<text  x="853.44" y="463.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;managed_bytes&gt;::make&lt;managed_bytes&gt; (5 samples, 0.01%)</title><rect x="901.5" y="325" width="0.1" height="15.0" fill="rgb(218,147,3)" rx="2" ry="2" />
<text  x="904.50" y="335.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (38 samples, 0.08%)</title><rect x="1141.1" y="437" width="0.9" height="15.0" fill="rgb(232,18,37)" rx="2" ry="2" />
<text  x="1144.07" y="447.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (19 samples, 0.04%)</title><rect x="891.7" y="261" width="0.5" height="15.0" fill="rgb(242,127,33)" rx="2" ry="2" />
<text  x="894.70" y="271.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::~_Variant_storage (5 samples, 0.01%)</title><rect x="318.3" y="197" width="0.2" height="15.0" fill="rgb(247,85,24)" rx="2" ry="2" />
<text  x="321.33" y="207.5" ></text>
</g>
<g >
<title>locator::effective_replication_map::get_natural_endpoints_without_node_being_replaced (6 samples, 0.01%)</title><rect x="1074.2" y="325" width="0.1" height="15.0" fill="rgb(242,210,10)" rx="2" ry="2" />
<text  x="1077.19" y="335.5" ></text>
</g>
<g >
<title>perf_simple_que (49,388 samples, 100.00%)</title><rect x="10.0" y="645" width="1180.0" height="15.0" fill="rgb(205,100,22)" rx="2" ry="2" />
<text  x="13.00" y="655.5" >perf_simple_que</text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_Optional_payload_base (35 samples, 0.07%)</title><rect x="940.3" y="341" width="0.8" height="15.0" fill="rgb(250,216,0)" rx="2" ry="2" />
<text  x="943.25" y="351.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (7 samples, 0.01%)</title><rect x="77.3" y="389" width="0.2" height="15.0" fill="rgb(237,143,40)" rx="2" ry="2" />
<text  x="80.31" y="399.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::~_Variant_storage (6 samples, 0.01%)</title><rect x="899.2" y="293" width="0.2" height="15.0" fill="rgb(233,157,50)" rx="2" ry="2" />
<text  x="902.23" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (15 samples, 0.03%)</title><rect x="53.3" y="469" width="0.4" height="15.0" fill="rgb(215,39,6)" rx="2" ry="2" />
<text  x="56.34" y="479.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_singular (5,640 samples, 11.42%)</title><rect x="965.2" y="373" width="134.7" height="15.0" fill="rgb(250,225,21)" rx="2" ry="2" />
<text  x="968.20" y="383.5" >service::storage_..</text>
</g>
<g >
<title>cql3_parser::CqlParser::relation (21 samples, 0.04%)</title><rect x="20.3" y="341" width="0.5" height="15.0" fill="rgb(227,176,35)" rx="2" ry="2" />
<text  x="23.30" y="351.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::abstract_read_executor (149 samples, 0.30%)</title><rect x="1068.9" y="309" width="3.5" height="15.0" fill="rgb(248,197,14)" rx="2" ry="2" />
<text  x="1071.89" y="319.5" ></text>
</g>
<g >
<title>cql3::statements::raw::update_statement::prepare_internal (24 samples, 0.05%)</title><rect x="21.5" y="437" width="0.6" height="15.0" fill="rgb(234,93,46)" rx="2" ry="2" />
<text  x="24.54" y="447.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (90 samples, 0.18%)</title><rect x="659.0" y="469" width="2.1" height="15.0" fill="rgb(206,92,28)" rx="2" ry="2" />
<text  x="661.97" y="479.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::~small_vector (9 samples, 0.02%)</title><rect x="1174.1" y="421" width="0.2" height="15.0" fill="rgb(253,33,45)" rx="2" ry="2" />
<text  x="1177.11" y="431.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;, service::storage_proxy::query_result_local (8 samples, 0.02%)</title><rect x="23.4" y="517" width="0.2" height="15.0" fill="rgb(237,207,31)" rx="2" ry="2" />
<text  x="26.40" y="527.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::clear (10 samples, 0.02%)</title><rect x="817.3" y="341" width="0.3" height="15.0" fill="rgb(224,11,2)" rx="2" ry="2" />
<text  x="820.35" y="351.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (62 samples, 0.13%)</title><rect x="194.9" y="117" width="1.5" height="15.0" fill="rgb(230,195,38)" rx="2" ry="2" />
<text  x="197.88" y="127.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::~_Variant_storage (6 samples, 0.01%)</title><rect x="416.3" y="245" width="0.2" height="15.0" fill="rgb(246,81,33)" rx="2" ry="2" />
<text  x="419.34" y="255.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (24 samples, 0.05%)</title><rect x="623.6" y="469" width="0.5" height="15.0" fill="rgb(248,76,12)" rx="2" ry="2" />
<text  x="626.56" y="479.5" ></text>
</g>
<g >
<title>seastar::promise&lt;void&gt;::promise (12 samples, 0.02%)</title><rect x="1028.9" y="165" width="0.3" height="15.0" fill="rgb(210,41,43)" rx="2" ry="2" />
<text  x="1031.89" y="175.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (153 samples, 0.31%)</title><rect x="35.3" y="469" width="3.6" height="15.0" fill="rgb(235,101,21)" rx="2" ry="2" />
<text  x="38.28" y="479.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (9 samples, 0.02%)</title><rect x="325.8" y="181" width="0.2" height="15.0" fill="rgb(243,181,1)" rx="2" ry="2" />
<text  x="328.83" y="191.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::_Move_ctor_base (12 samples, 0.02%)</title><rect x="309.0" y="165" width="0.3" height="15.0" fill="rgb(228,187,45)" rx="2" ry="2" />
<text  x="311.99" y="175.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (375 samples, 0.76%)</title><rect x="661.2" y="501" width="9.0" height="15.0" fill="rgb(220,214,7)" rx="2" ry="2" />
<text  x="664.21" y="511.5" ></text>
</g>
<g >
<title>operator new (47 samples, 0.10%)</title><rect x="852.1" y="437" width="1.2" height="15.0" fill="rgb(248,4,45)" rx="2" ry="2" />
<text  x="855.14" y="447.5" ></text>
</g>
<g >
<title>operator new (7 samples, 0.01%)</title><rect x="899.8" y="309" width="0.2" height="15.0" fill="rgb(219,89,15)" rx="2" ry="2" />
<text  x="902.80" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (9 samples, 0.02%)</title><rect x="410.2" y="229" width="0.2" height="15.0" fill="rgb(234,85,7)" rx="2" ry="2" />
<text  x="413.15" y="239.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (12 samples, 0.02%)</title><rect x="921.0" y="341" width="0.3" height="15.0" fill="rgb(217,176,32)" rx="2" ry="2" />
<text  x="923.99" y="351.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (16 samples, 0.03%)</title><rect x="610.1" y="405" width="0.4" height="15.0" fill="rgb(223,8,22)" rx="2" ry="2" />
<text  x="613.11" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (16 samples, 0.03%)</title><rect x="761.9" y="357" width="0.4" height="15.0" fill="rgb(230,134,20)" rx="2" ry="2" />
<text  x="764.90" y="367.5" ></text>
</g>
<g >
<title>cql3::restrictions::(anonymous namespace)::range_from_bytes (12 samples, 0.02%)</title><rect x="873.4" y="421" width="0.3" height="15.0" fill="rgb(244,180,6)" rx="2" ry="2" />
<text  x="876.43" y="431.5" ></text>
</g>
<g >
<title>cql3::statements::raw::modification_statement::prepare (24 samples, 0.05%)</title><rect x="21.5" y="453" width="0.6" height="15.0" fill="rgb(213,161,31)" rx="2" ry="2" />
<text  x="24.54" y="463.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_last_fragment_kind, 4ul&gt;::~small_vector (11 samples, 0.02%)</title><rect x="582.1" y="373" width="0.2" height="15.0" fill="rgb(206,37,38)" rx="2" ry="2" />
<text  x="585.08" y="383.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (7 samples, 0.01%)</title><rect x="508.9" y="197" width="0.1" height="15.0" fill="rgb(230,206,29)" rx="2" ry="2" />
<text  x="511.87" y="207.5" ></text>
</g>
<g >
<title>TLS init function for cql3::query_options::specific_options::DEFAULT (7 samples, 0.01%)</title><rect x="716.9" y="453" width="0.2" height="15.0" fill="rgb(210,139,9)" rx="2" ry="2" />
<text  x="719.91" y="463.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (7 samples, 0.01%)</title><rect x="687.4" y="453" width="0.1" height="15.0" fill="rgb(226,8,53)" rx="2" ry="2" />
<text  x="690.37" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (62 samples, 0.13%)</title><rect x="748.5" y="389" width="1.5" height="15.0" fill="rgb(221,214,40)" rx="2" ry="2" />
<text  x="751.49" y="399.5" ></text>
</g>
<g >
<title>mutation_querier::mutation_querier (96 samples, 0.19%)</title><rect x="307.7" y="181" width="2.3" height="15.0" fill="rgb(205,208,38)" rx="2" ry="2" />
<text  x="310.72" y="191.5" ></text>
</g>
<g >
<title>operator new (6 samples, 0.01%)</title><rect x="277.4" y="293" width="0.1" height="15.0" fill="rgb(228,137,19)" rx="2" ry="2" />
<text  x="280.38" y="303.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;bool  (19 samples, 0.04%)</title><rect x="613.7" y="405" width="0.4" height="15.0" fill="rgb(221,117,44)" rx="2" ry="2" />
<text  x="616.69" y="415.5" ></text>
</g>
<g >
<title>sstring_hash::operator (31 samples, 0.06%)</title><rect x="1060.1" y="293" width="0.8" height="15.0" fill="rgb(223,187,31)" rx="2" ry="2" />
<text  x="1063.14" y="303.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (7 samples, 0.01%)</title><rect x="685.3" y="453" width="0.2" height="15.0" fill="rgb(218,117,15)" rx="2" ry="2" />
<text  x="688.30" y="463.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;gms::inet_address*, __gnu_cxx::__ops::_Iter_pred&lt;std::unary_negate&lt;std::binder1st&lt;std::_Mem_fn&lt;bool  (48 samples, 0.10%)</title><rect x="1092.3" y="309" width="1.1" height="15.0" fill="rgb(237,23,8)" rx="2" ry="2" />
<text  x="1095.26" y="319.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (112 samples, 0.23%)</title><rect x="658.5" y="485" width="2.7" height="15.0" fill="rgb(248,70,9)" rx="2" ry="2" />
<text  x="661.49" y="495.5" ></text>
</g>
<g >
<title>service::abstract_read_resolver::done (11 samples, 0.02%)</title><rect x="690.9" y="453" width="0.3" height="15.0" fill="rgb(217,50,16)" rx="2" ry="2" />
<text  x="693.91" y="463.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::pop_front (245 samples, 0.50%)</title><rect x="70.9" y="405" width="5.8" height="15.0" fill="rgb(207,210,14)" rx="2" ry="2" />
<text  x="73.85" y="415.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::operator (8 samples, 0.02%)</title><rect x="265.2" y="341" width="0.2" height="15.0" fill="rgb(254,157,43)" rx="2" ry="2" />
<text  x="268.20" y="351.5" ></text>
</g>
<g >
<title>std::__push_heap&lt;mutation_reader_merger::reader_and_fragment*, long, mutation_reader_merger::reader_and_fragment, __gnu_cxx::__ops::_Iter_comp_val&lt;mutation_reader_merger::reader_heap_compare&gt; &gt; (18 samples, 0.04%)</title><rect x="141.5" y="229" width="0.4" height="15.0" fill="rgb(245,61,37)" rx="2" ry="2" />
<text  x="144.48" y="239.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (8 samples, 0.02%)</title><rect x="964.5" y="373" width="0.2" height="15.0" fill="rgb(223,9,49)" rx="2" ry="2" />
<text  x="967.50" y="383.5" ></text>
</g>
<g >
<title>seastar::schedule (5 samples, 0.01%)</title><rect x="1144.1" y="501" width="0.1" height="15.0" fill="rgb(215,2,7)" rx="2" ry="2" />
<text  x="1147.05" y="511.5" ></text>
</g>
<g >
<title>std::__optional_hash_call_base&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, true&gt;::operator (30 samples, 0.06%)</title><rect x="814.0" y="293" width="0.7" height="15.0" fill="rgb(221,75,15)" rx="2" ry="2" />
<text  x="816.98" y="303.5" ></text>
</g>
<g >
<title>__dynamic_cast (21 samples, 0.04%)</title><rect x="872.1" y="421" width="0.5" height="15.0" fill="rgb(220,199,7)" rx="2" ry="2" />
<text  x="875.13" y="431.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::build_partition_keys (10 samples, 0.02%)</title><rect x="859.6" y="389" width="0.2" height="15.0" fill="rgb(218,197,38)" rx="2" ry="2" />
<text  x="862.59" y="399.5" ></text>
</g>
<g >
<title>utils::config_file::named_value&lt;unsigned long&gt;::the_value (13 samples, 0.03%)</title><rect x="1133.9" y="405" width="0.3" height="15.0" fill="rgb(209,84,52)" rx="2" ry="2" />
<text  x="1136.90" y="415.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;query::result_digest, 3ul&gt;::~small_vector (16 samples, 0.03%)</title><rect x="694.0" y="469" width="0.4" height="15.0" fill="rgb(211,92,50)" rx="2" ry="2" />
<text  x="696.97" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%)</title><rect x="660.9" y="405" width="0.2" height="15.0" fill="rgb(243,97,0)" rx="2" ry="2" />
<text  x="663.95" y="415.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (7 samples, 0.01%)</title><rect x="416.8" y="325" width="0.2" height="15.0" fill="rgb(220,175,31)" rx="2" ry="2" />
<text  x="419.82" y="335.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::digest_read_result&gt;::then_wrapped_nrvo&lt;void, service::abstract_read_executor::execute (111 samples, 0.22%)</title><rect x="980.5" y="325" width="2.6" height="15.0" fill="rgb(243,153,41)" rx="2" ry="2" />
<text  x="983.46" y="335.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (36 samples, 0.07%)</title><rect x="1102.0" y="389" width="0.8" height="15.0" fill="rgb(220,29,45)" rx="2" ry="2" />
<text  x="1104.96" y="399.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector (5 samples, 0.01%)</title><rect x="1063.8" y="325" width="0.1" height="15.0" fill="rgb(215,96,4)" rx="2" ry="2" />
<text  x="1066.80" y="335.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_requests (8 samples, 0.02%)</title><rect x="1048.7" y="357" width="0.2" height="15.0" fill="rgb(218,125,17)" rx="2" ry="2" />
<text  x="1051.70" y="367.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;cql_transport::messages::result_message::rows, false&gt;::make&lt;cql3::result&gt; (78 samples, 0.16%)</title><rect x="650.8" y="469" width="1.9" height="15.0" fill="rgb(224,130,48)" rx="2" ry="2" />
<text  x="653.82" y="479.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::get_promise (7 samples, 0.01%)</title><rect x="996.5" y="277" width="0.2" height="15.0" fill="rgb(206,161,41)" rx="2" ry="2" />
<text  x="999.54" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (26 samples, 0.05%)</title><rect x="37.1" y="421" width="0.6" height="15.0" fill="rgb(209,167,17)" rx="2" ry="2" />
<text  x="40.09" y="431.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::on_read_resolved (9 samples, 0.02%)</title><rect x="690.7" y="453" width="0.2" height="15.0" fill="rgb(239,78,29)" rx="2" ry="2" />
<text  x="693.70" y="463.5" ></text>
</g>
<g >
<title>service::storage_proxy::sort_endpoints_by_proximity (80 samples, 0.16%)</title><rect x="1093.4" y="325" width="1.9" height="15.0" fill="rgb(243,25,43)" rx="2" ry="2" />
<text  x="1096.40" y="335.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::digest_read_result&gt;::schedule&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::execute (94 samples, 0.19%)</title><rect x="980.8" y="309" width="2.2" height="15.0" fill="rgb(228,118,22)" rx="2" ry="2" />
<text  x="983.77" y="319.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (29 samples, 0.06%)</title><rect x="940.4" y="325" width="0.7" height="15.0" fill="rgb(246,136,54)" rx="2" ry="2" />
<text  x="943.40" y="335.5" ></text>
</g>
<g >
<title>reader_permit::consume (6 samples, 0.01%)</title><rect x="161.1" y="197" width="0.1" height="15.0" fill="rgb(245,153,25)" rx="2" ry="2" />
<text  x="164.10" y="207.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt; &gt;, seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (78 samples, 0.16%)</title><rect x="803.1" y="261" width="1.8" height="15.0" fill="rgb(250,38,40)" rx="2" ry="2" />
<text  x="806.06" y="271.5" ></text>
</g>
<g >
<title>mutation_partition_view::do_accept&lt;partition_builder&gt; (10 samples, 0.02%)</title><rect x="1140.6" y="245" width="0.2" height="15.0" fill="rgb(248,190,31)" rx="2" ry="2" />
<text  x="1143.59" y="255.5" ></text>
</g>
<g >
<title>locator::token_metadata_impl::first_token_index (319 samples, 0.65%)</title><rect x="1077.0" y="261" width="7.7" height="15.0" fill="rgb(230,35,6)" rx="2" ry="2" />
<text  x="1080.04" y="271.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (21 samples, 0.04%)</title><rect x="677.7" y="453" width="0.5" height="15.0" fill="rgb(208,80,7)" rx="2" ry="2" />
<text  x="680.70" y="463.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::get0 (10 samples, 0.02%)</title><rect x="698.2" y="453" width="0.3" height="15.0" fill="rgb(248,227,21)" rx="2" ry="2" />
<text  x="701.25" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::emplace_back&lt;flat_mutation_reader&gt; (9 samples, 0.02%)</title><rect x="430.2" y="357" width="0.2" height="15.0" fill="rgb(235,21,3)" rx="2" ry="2" />
<text  x="433.22" y="367.5" ></text>
</g>
<g >
<title>operator new (103 samples, 0.21%)</title><rect x="1017.2" y="245" width="2.5" height="15.0" fill="rgb(223,3,33)" rx="2" ry="2" />
<text  x="1020.23" y="255.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::schedule&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (55 samples, 0.11%)</title><rect x="829.7" y="389" width="1.3" height="15.0" fill="rgb(229,197,31)" rx="2" ry="2" />
<text  x="832.70" y="399.5" ></text>
</g>
<g >
<title>freeze (11 samples, 0.02%)</title><rect x="1141.5" y="197" width="0.3" height="15.0" fill="rgb(208,206,31)" rx="2" ry="2" />
<text  x="1144.52" y="207.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (5 samples, 0.01%)</title><rect x="1042.1" y="229" width="0.1" height="15.0" fill="rgb(206,120,53)" rx="2" ry="2" />
<text  x="1045.13" y="239.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (22 samples, 0.04%)</title><rect x="348.5" y="149" width="0.5" height="15.0" fill="rgb(208,114,44)" rx="2" ry="2" />
<text  x="351.51" y="159.5" ></text>
</g>
<g >
<title>std::_Optional_base_impl&lt;query::querier&lt; (55 samples, 0.11%)</title><rect x="618.0" y="421" width="1.4" height="15.0" fill="rgb(239,217,23)" rx="2" ry="2" />
<text  x="621.04" y="431.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::_M_create_storage (44 samples, 0.09%)</title><rect x="935.7" y="389" width="1.1" height="15.0" fill="rgb(234,31,53)" rx="2" ry="2" />
<text  x="938.74" y="399.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::_Copy_ctor_base (11 samples, 0.02%)</title><rect x="313.1" y="165" width="0.2" height="15.0" fill="rgb(207,35,26)" rx="2" ry="2" />
<text  x="316.05" y="175.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (26 samples, 0.05%)</title><rect x="1059.2" y="261" width="0.6" height="15.0" fill="rgb(244,130,51)" rx="2" ry="2" />
<text  x="1062.16" y="271.5" ></text>
</g>
<g >
<title>bound_view::from_range_start&lt;nonwrapping_interval&gt; (38 samples, 0.08%)</title><rect x="243.0" y="197" width="0.9" height="15.0" fill="rgb(207,150,46)" rx="2" ry="2" />
<text  x="246.00" y="207.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (19 samples, 0.04%)</title><rect x="1141.5" y="309" width="0.5" height="15.0" fill="rgb(209,179,27)" rx="2" ry="2" />
<text  x="1144.52" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::disable_abort_on_alloc_failure_temporarily (6 samples, 0.01%)</title><rect x="520.7" y="325" width="0.1" height="15.0" fill="rgb(249,15,24)" rx="2" ry="2" />
<text  x="523.68" y="335.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (43 samples, 0.09%)</title><rect x="802.0" y="245" width="1.1" height="15.0" fill="rgb(207,97,51)" rx="2" ry="2" />
<text  x="805.03" y="255.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::set&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; (7 samples, 0.01%)</title><rect x="606.2" y="421" width="0.2" height="15.0" fill="rgb(218,22,42)" rx="2" ry="2" />
<text  x="609.24" y="431.5" ></text>
</g>
<g >
<title>seastar::app_template::run_deprecated (48,315 samples, 97.83%)</title><rect x="23.1" y="565" width="1154.4" height="15.0" fill="rgb(240,144,26)" rx="2" ry="2" />
<text  x="26.09" y="575.5" >seastar::app_template::run_deprecated</text>
</g>
<g >
<title>seastar::memory::allocate (60 samples, 0.12%)</title><rect x="1033.0" y="197" width="1.4" height="15.0" fill="rgb(206,139,13)" rx="2" ry="2" />
<text  x="1036.00" y="207.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (7 samples, 0.01%)</title><rect x="1028.0" y="133" width="0.1" height="15.0" fill="rgb(252,164,24)" rx="2" ry="2" />
<text  x="1030.96" y="143.5" ></text>
</g>
<g >
<title>database::query (1,116 samples, 2.26%)</title><rect x="1009.9" y="261" width="26.6" height="15.0" fill="rgb(211,45,31)" rx="2" ry="2" />
<text  x="1012.85" y="271.5" >d..</text>
</g>
<g >
<title>seastar::memory::allocate (71 samples, 0.14%)</title><rect x="994.6" y="245" width="1.7" height="15.0" fill="rgb(230,1,17)" rx="2" ry="2" />
<text  x="997.58" y="255.5" ></text>
</g>
<g >
<title>std::default_delete&lt;mutation_fragment::data&gt;::operator (38 samples, 0.08%)</title><rect x="410.8" y="245" width="0.9" height="15.0" fill="rgb(235,70,7)" rx="2" ry="2" />
<text  x="413.82" y="255.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (72 samples, 0.15%)</title><rect x="147.2" y="261" width="1.8" height="15.0" fill="rgb(245,22,3)" rx="2" ry="2" />
<text  x="150.24" y="271.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (6 samples, 0.01%)</title><rect x="550.3" y="421" width="0.2" height="15.0" fill="rgb(246,28,47)" rx="2" ry="2" />
<text  x="553.33" y="431.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::process_results (440 samples, 0.89%)</title><rect x="642.2" y="485" width="10.5" height="15.0" fill="rgb(206,24,22)" rx="2" ry="2" />
<text  x="645.17" y="495.5" ></text>
</g>
<g >
<title>std::default_delete&lt;cql3::expr::expression::impl&gt;::operator (15 samples, 0.03%)</title><rect x="899.1" y="309" width="0.4" height="15.0" fill="rgb(237,77,7)" rx="2" ry="2" />
<text  x="902.13" y="319.5" ></text>
</g>
<g >
<title>operator new (39 samples, 0.08%)</title><rect x="1158.3" y="389" width="1.0" height="15.0" fill="rgb(251,202,38)" rx="2" ry="2" />
<text  x="1161.32" y="399.5" ></text>
</g>
<g >
<title>row_cache::make_reader (477 samples, 0.97%)</title><rect x="523.2" y="341" width="11.4" height="15.0" fill="rgb(234,169,41)" rx="2" ry="2" />
<text  x="526.21" y="351.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (13 samples, 0.03%)</title><rect x="1118.8" y="373" width="0.3" height="15.0" fill="rgb(233,162,37)" rx="2" ry="2" />
<text  x="1121.82" y="383.5" ></text>
</g>
<g >
<title>std::make_unique&lt;seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::entry, reader_concurrency_semaphore::entry, seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;&amp;, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;&amp;&gt; (12 samples, 0.02%)</title><rect x="1029.4" y="181" width="0.3" height="15.0" fill="rgb(242,172,25)" rx="2" ry="2" />
<text  x="1032.37" y="191.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (19 samples, 0.04%)</title><rect x="294.7" y="245" width="0.4" height="15.0" fill="rgb(205,195,12)" rx="2" ry="2" />
<text  x="297.68" y="255.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (9 samples, 0.02%)</title><rect x="599.2" y="437" width="0.2" height="15.0" fill="rgb(214,133,0)" rx="2" ry="2" />
<text  x="602.19" y="447.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, flat_mutation_reader::impl::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (22 samples, 0.04%)</title><rect x="682.2" y="389" width="0.5" height="15.0" fill="rgb(218,212,45)" rx="2" ry="2" />
<text  x="685.17" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::vector (123 samples, 0.25%)</title><rect x="1114.0" y="389" width="2.9" height="15.0" fill="rgb(216,198,32)" rx="2" ry="2" />
<text  x="1116.97" y="399.5" ></text>
</g>
<g >
<title>ser::after_qr_cell__value&lt;bytes_ostream&gt;::skip_ttl (91 samples, 0.18%)</title><rect x="352.2" y="165" width="2.1" height="15.0" fill="rgb(212,229,43)" rx="2" ry="2" />
<text  x="355.16" y="175.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (182 samples, 0.37%)</title><rect x="792.0" y="165" width="4.4" height="15.0" fill="rgb(229,153,25)" rx="2" ry="2" />
<text  x="795.02" y="175.5" ></text>
</g>
<g >
<title>compound_type&lt; (176 samples, 0.36%)</title><rect x="482.6" y="213" width="4.2" height="15.0" fill="rgb(237,211,49)" rx="2" ry="2" />
<text  x="485.59" y="223.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mTokens (13 samples, 0.03%)</title><rect x="17.7" y="261" width="0.4" height="15.0" fill="rgb(214,40,50)" rx="2" ry="2" />
<text  x="20.74" y="271.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;, nonwrapping_interval&lt;managed_bytes&gt; &gt;::~_Variant_storage (11 samples, 0.02%)</title><rect x="934.8" y="405" width="0.2" height="15.0" fill="rgb(217,74,20)" rx="2" ry="2" />
<text  x="937.76" y="415.5" ></text>
</g>
<g >
<title>flat_mutation_reader::close (593 samples, 1.20%)</title><rect x="556.1" y="341" width="14.2" height="15.0" fill="rgb(247,89,2)" rx="2" ry="2" />
<text  x="559.09" y="351.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (6 samples, 0.01%)</title><rect x="816.7" y="357" width="0.1" height="15.0" fill="rgb(217,224,50)" rx="2" ry="2" />
<text  x="819.66" y="367.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (7 samples, 0.01%)</title><rect x="1042.2" y="277" width="0.2" height="15.0" fill="rgb(224,189,10)" rx="2" ry="2" />
<text  x="1045.25" y="287.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (152 samples, 0.31%)</title><rect x="1185.2" y="613" width="3.7" height="15.0" fill="rgb(226,111,29)" rx="2" ry="2" />
<text  x="1188.25" y="623.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (16 samples, 0.03%)</title><rect x="22.7" y="613" width="0.4" height="15.0" fill="rgb(220,83,38)" rx="2" ry="2" />
<text  x="25.69" y="623.5" ></text>
</g>
<g >
<title>std::optional&lt;clustering_key_prefix&gt;::operator=&lt;clustering_key_prefix&amp;&gt; (30 samples, 0.06%)</title><rect x="392.2" y="213" width="0.7" height="15.0" fill="rgb(235,87,19)" rx="2" ry="2" />
<text  x="395.23" y="223.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (3,804 samples, 7.70%)</title><rect x="303.9" y="245" width="90.9" height="15.0" fill="rgb(229,227,44)" rx="2" ry="2" />
<text  x="306.95" y="255.5" >flat_mutat..</text>
</g>
<g >
<title>service::storage_proxy::do_mutate (37 samples, 0.07%)</title><rect x="1141.1" y="341" width="0.9" height="15.0" fill="rgb(220,33,22)" rx="2" ry="2" />
<text  x="1144.09" y="351.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;tracking_allocator&lt;mutation_fragment&gt; &gt;::_S_destroy&lt;tracking_allocator&lt;mutation_fragment&gt;, mutation_fragment&gt; (19 samples, 0.04%)</title><rect x="136.7" y="229" width="0.5" height="15.0" fill="rgb(222,83,47)" rx="2" ry="2" />
<text  x="139.73" y="239.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (23 samples, 0.05%)</title><rect x="156.6" y="165" width="0.6" height="15.0" fill="rgb(242,179,49)" rx="2" ry="2" />
<text  x="159.63" y="175.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (14 samples, 0.03%)</title><rect x="930.3" y="373" width="0.3" height="15.0" fill="rgb(252,70,14)" rx="2" ry="2" />
<text  x="933.29" y="383.5" ></text>
</g>
<g >
<title>query_result_builder::consume_new_partition (463 samples, 0.94%)</title><rect x="307.2" y="197" width="11.1" height="15.0" fill="rgb(231,193,50)" rx="2" ry="2" />
<text  x="310.25" y="207.5" ></text>
</g>
<g >
<title>reader_selector::has_new_readers (18 samples, 0.04%)</title><rect x="130.0" y="261" width="0.5" height="15.0" fill="rgb(237,187,7)" rx="2" ry="2" />
<text  x="133.04" y="271.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment (135 samples, 0.27%)</title><rect x="505.8" y="213" width="3.2" height="15.0" fill="rgb(253,109,0)" rx="2" ry="2" />
<text  x="508.82" y="223.5" ></text>
</g>
<g >
<title>mutation_fragment::consume&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (19 samples, 0.04%)</title><rect x="682.2" y="341" width="0.4" height="15.0" fill="rgb(253,34,50)" rx="2" ry="2" />
<text  x="685.19" y="351.5" ></text>
</g>
<g >
<title>bound_view::from_range&lt;nonwrapping_interval&gt; (33 samples, 0.07%)</title><rect x="218.1" y="133" width="0.8" height="15.0" fill="rgb(232,193,13)" rx="2" ry="2" />
<text  x="221.10" y="143.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (14 samples, 0.03%)</title><rect x="1041.9" y="245" width="0.3" height="15.0" fill="rgb(230,189,48)" rx="2" ry="2" />
<text  x="1044.91" y="255.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_4findERKNS5_10expressionENS5_6oper_tEEUlRS7_E_EES8_SE_T_EUlSG_E_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_8constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_11conjunctionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_12column_valueEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_5tokenEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13function_callEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4castEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_15field_selectionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4nullEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13bind_variableEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_16untyped_constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_17tuple_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_22collection_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSO_S6_SS_SW_S10_S14_S18_S1C_S1G_S1K_S1O_S1S_SK_S1W_S20_S24_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES29_S2C_ (17 samples, 0.03%)</title><rect x="877.5" y="405" width="0.4" height="15.0" fill="rgb(219,2,53)" rx="2" ry="2" />
<text  x="880.49" y="415.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::take (10 samples, 0.02%)</title><rect x="412.5" y="261" width="0.3" height="15.0" fill="rgb(249,185,6)" rx="2" ry="2" />
<text  x="415.52" y="271.5" ></text>
</g>
<g >
<title>memtable::apply (27 samples, 0.05%)</title><rect x="1140.3" y="261" width="0.6" height="15.0" fill="rgb(229,66,35)" rx="2" ry="2" />
<text  x="1143.26" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::allocate_large (13 samples, 0.03%)</title><rect x="547.9" y="293" width="0.3" height="15.0" fill="rgb(239,52,38)" rx="2" ry="2" />
<text  x="550.91" y="303.5" ></text>
</g>
<g >
<title>bplus::searcher&lt;dht::ring_position, long, dht::raw_token_less_comparator, 16ul,  (51 samples, 0.10%)</title><rect x="464.9" y="293" width="1.2" height="15.0" fill="rgb(235,86,47)" rx="2" ry="2" />
<text  x="467.91" y="303.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;query::result_digest, 3ul&gt;::emplace_back&lt;query::result_digest const&gt; (26 samples, 0.05%)</title><rect x="702.7" y="437" width="0.6" height="15.0" fill="rgb(252,167,2)" rx="2" ry="2" />
<text  x="705.71" y="447.5" ></text>
</g>
<g >
<title>reader_permit::impl::impl (37 samples, 0.07%)</title><rect x="1034.5" y="213" width="0.9" height="15.0" fill="rgb(244,82,45)" rx="2" ry="2" />
<text  x="1037.51" y="223.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::impl (22 samples, 0.04%)</title><rect x="497.8" y="277" width="0.6" height="15.0" fill="rgb(208,5,39)" rx="2" ry="2" />
<text  x="500.84" y="287.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (14 samples, 0.03%)</title><rect x="1041.1" y="277" width="0.4" height="15.0" fill="rgb(244,11,24)" rx="2" ry="2" />
<text  x="1044.13" y="287.5" ></text>
</g>
<g >
<title>utils::fb_utilities::get_broadcast_address (6 samples, 0.01%)</title><rect x="1048.2" y="293" width="0.2" height="15.0" fill="rgb(241,79,54)" rx="2" ry="2" />
<text  x="1051.22" y="303.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::get0 (5 samples, 0.01%)</title><rect x="43.8" y="485" width="0.1" height="15.0" fill="rgb(247,142,3)" rx="2" ry="2" />
<text  x="46.81" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (25 samples, 0.05%)</title><rect x="545.7" y="341" width="0.6" height="15.0" fill="rgb(242,33,9)" rx="2" ry="2" />
<text  x="548.72" y="351.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::do_refresh_state (506 samples, 1.02%)</title><rect x="234.6" y="229" width="12.1" height="15.0" fill="rgb(208,97,25)" rx="2" ry="2" />
<text  x="237.57" y="239.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::~small_vector (9 samples, 0.02%)</title><rect x="449.5" y="293" width="0.2" height="15.0" fill="rgb(252,141,28)" rx="2" ry="2" />
<text  x="452.53" y="303.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;void&gt;::set_urgent_state (52 samples, 0.11%)</title><rect x="857.2" y="501" width="1.3" height="15.0" fill="rgb(214,51,15)" rx="2" ry="2" />
<text  x="860.23" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::vector (150 samples, 0.30%)</title><rect x="1042.7" y="277" width="3.6" height="15.0" fill="rgb(213,36,24)" rx="2" ry="2" />
<text  x="1045.68" y="287.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::set_urgent_state (28 samples, 0.06%)</title><rect x="638.9" y="485" width="0.7" height="15.0" fill="rgb(229,209,21)" rx="2" ry="2" />
<text  x="641.94" y="495.5" ></text>
</g>
<g >
<title>mutation_reader_merger::add_readers (132 samples, 0.27%)</title><rect x="443.0" y="277" width="3.1" height="15.0" fill="rgb(222,37,38)" rx="2" ry="2" />
<text  x="445.98" y="287.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (6 samples, 0.01%)</title><rect x="18.3" y="341" width="0.1" height="15.0" fill="rgb(223,146,41)" rx="2" ry="2" />
<text  x="21.29" y="351.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_last_fragment_kind, 4ul&gt;::~small_vector (5 samples, 0.01%)</title><rect x="580.6" y="357" width="0.1" height="15.0" fill="rgb(216,134,32)" rx="2" ry="2" />
<text  x="583.60" y="367.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (38 samples, 0.08%)</title><rect x="792.7" y="149" width="0.9" height="15.0" fill="rgb(226,31,31)" rx="2" ry="2" />
<text  x="795.74" y="159.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::find&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (126 samples, 0.26%)</title><rect x="820.3" y="325" width="3.0" height="15.0" fill="rgb(235,109,0)" rx="2" ry="2" />
<text  x="823.34" y="335.5" ></text>
</g>
<g >
<title>validation::validate_keyspace (94 samples, 0.19%)</title><rect x="823.5" y="373" width="2.2" height="15.0" fill="rgb(216,183,45)" rx="2" ry="2" />
<text  x="826.47" y="383.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::take (6 samples, 0.01%)</title><rect x="412.8" y="277" width="0.1" height="15.0" fill="rgb(213,153,0)" rx="2" ry="2" />
<text  x="415.75" y="287.5" ></text>
</g>
<g >
<title>seastar::promise&lt;void&gt;::promise (6 samples, 0.01%)</title><rect x="1030.6" y="197" width="0.1" height="15.0" fill="rgb(253,202,6)" rx="2" ry="2" />
<text  x="1033.57" y="207.5" ></text>
</g>
<g >
<title>partition_snapshot::~partition_snapshot (46 samples, 0.09%)</title><rect x="566.9" y="261" width="1.1" height="15.0" fill="rgb(253,101,53)" rx="2" ry="2" />
<text  x="569.93" y="271.5" ></text>
</g>
<g >
<title>service::endpoints_to_replica_ids (5 samples, 0.01%)</title><rect x="1152.3" y="485" width="0.2" height="15.0" fill="rgb(244,71,49)" rx="2" ry="2" />
<text  x="1155.35" y="495.5" ></text>
</g>
<g >
<title>cql3::query_processor::process_authorized_statement (234 samples, 0.47%)</title><rect x="745.1" y="421" width="5.6" height="15.0" fill="rgb(222,165,27)" rx="2" ry="2" />
<text  x="748.07" y="431.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::range_tombstone_accumulator (175 samples, 0.35%)</title><rect x="544.1" y="389" width="4.2" height="15.0" fill="rgb(221,132,20)" rx="2" ry="2" />
<text  x="547.09" y="399.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_max_result_size (9 samples, 0.02%)</title><rect x="1139.5" y="437" width="0.2" height="15.0" fill="rgb(206,167,35)" rx="2" ry="2" />
<text  x="1142.47" y="447.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::query_processor::process_authorized_statement (104 samples, 0.21%)</title><rect x="637.9" y="501" width="2.5" height="15.0" fill="rgb(241,187,46)" rx="2" ry="2" />
<text  x="640.89" y="511.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (11 samples, 0.02%)</title><rect x="705.4" y="405" width="0.3" height="15.0" fill="rgb(244,23,49)" rx="2" ry="2" />
<text  x="708.39" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_move_assign (9 samples, 0.02%)</title><rect x="447.5" y="277" width="0.2" height="15.0" fill="rgb(221,98,8)" rx="2" ry="2" />
<text  x="450.47" y="287.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (53 samples, 0.11%)</title><rect x="238.1" y="165" width="1.3" height="15.0" fill="rgb(230,113,33)" rx="2" ry="2" />
<text  x="241.15" y="175.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (63 samples, 0.13%)</title><rect x="738.4" y="325" width="1.5" height="15.0" fill="rgb(214,183,39)" rx="2" ry="2" />
<text  x="741.39" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (99 samples, 0.20%)</title><rect x="1017.3" y="229" width="2.4" height="15.0" fill="rgb(233,48,38)" rx="2" ry="2" />
<text  x="1020.33" y="239.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::get_promise (5 samples, 0.01%)</title><rect x="1038.4" y="261" width="0.1" height="15.0" fill="rgb(238,128,35)" rx="2" ry="2" />
<text  x="1041.35" y="271.5" ></text>
</g>
<g >
<title>database::find_keyspace (6 samples, 0.01%)</title><rect x="968.8" y="357" width="0.1" height="15.0" fill="rgb(232,226,47)" rx="2" ry="2" />
<text  x="971.76" y="367.5" ></text>
</g>
<g >
<title>seastar::reactor::del_timer (9 samples, 0.02%)</title><rect x="702.2" y="405" width="0.2" height="15.0" fill="rgb(226,165,30)" rx="2" ry="2" />
<text  x="705.19" y="415.5" ></text>
</g>
<g >
<title>cql3::statements::update_statement::add_update_for_key (9 samples, 0.02%)</title><rect x="859.8" y="357" width="0.2" height="15.0" fill="rgb(214,119,52)" rx="2" ry="2" />
<text  x="862.83" y="367.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (5 samples, 0.01%)</title><rect x="745.0" y="389" width="0.1" height="15.0" fill="rgb(246,63,50)" rx="2" ry="2" />
<text  x="747.96" y="399.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (5 samples, 0.01%)</title><rect x="173.0" y="133" width="0.1" height="15.0" fill="rgb(239,18,24)" rx="2" ry="2" />
<text  x="175.99" y="143.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;service::never_speculating_read_executor, true&gt;::make&lt;seastar::lw_shared_ptr&lt;schema const&gt;&amp;, seastar::lw_shared_ptr&lt;table&gt;&amp;, seastar::shared_ptr&lt;service::storage_proxy&gt;&amp;, seastar::lw_shared_ptr&lt;query::read_command&gt;&amp;, nonwrapping_interval&lt;dht::ring_position&gt;, db::consistency_level&amp;, utils::small_vector&lt;gms::inet_address, 3ul&gt;, tracing::trace_state_ptr, service_permit&gt; (369 samples, 0.75%)</title><rect x="1065.2" y="341" width="8.8" height="15.0" fill="rgb(250,63,21)" rx="2" ry="2" />
<text  x="1068.19" y="351.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::insertToken (10 samples, 0.02%)</title><rect x="16.7" y="309" width="0.2" height="15.0" fill="rgb(251,22,0)" rx="2" ry="2" />
<text  x="19.69" y="319.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::then_wrapped_common&lt;true, void, service::abstract_read_executor::make_data_requests (177 samples, 0.36%)</title><rect x="993.2" y="309" width="4.2" height="15.0" fill="rgb(213,11,49)" rx="2" ry="2" />
<text  x="996.15" y="319.5" ></text>
</g>
<g >
<title>std::hash&lt;wrapping_interval&lt;dht::token&gt; &gt;::operator (7 samples, 0.01%)</title><rect x="1099.1" y="341" width="0.2" height="15.0" fill="rgb(214,75,13)" rx="2" ry="2" />
<text  x="1102.09" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (35 samples, 0.07%)</title><rect x="849.5" y="421" width="0.8" height="15.0" fill="rgb(250,227,12)" rx="2" ry="2" />
<text  x="852.46" y="431.5" ></text>
</g>
<g >
<title>dht::minimum_token (12 samples, 0.02%)</title><rect x="438.1" y="325" width="0.3" height="15.0" fill="rgb(237,153,50)" rx="2" ry="2" />
<text  x="441.10" y="335.5" ></text>
</g>
<g >
<title>locator::i_endpoint_snitch::get_local_snitch_ptr (6 samples, 0.01%)</title><rect x="1094.1" y="309" width="0.1" height="15.0" fill="rgb(215,62,47)" rx="2" ry="2" />
<text  x="1097.07" y="319.5" ></text>
</g>
<g >
<title>partition_snapshot::version_count (14 samples, 0.03%)</title><rect x="215.8" y="149" width="0.3" height="15.0" fill="rgb(246,171,22)" rx="2" ry="2" />
<text  x="218.76" y="159.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::term (29 samples, 0.06%)</title><rect x="19.4" y="309" width="0.7" height="15.0" fill="rgb(231,96,51)" rx="2" ry="2" />
<text  x="22.41" y="319.5" ></text>
</g>
<g >
<title>seastar::internal::coroutine_traits_base&lt;void&gt;::promise_type::run_and_dispose (5 samples, 0.01%)</title><rect x="25.1" y="517" width="0.1" height="15.0" fill="rgb(227,89,19)" rx="2" ry="2" />
<text  x="28.05" y="527.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_token (8 samples, 0.02%)</title><rect x="942.2" y="405" width="0.2" height="15.0" fill="rgb(223,50,47)" rx="2" ry="2" />
<text  x="945.16" y="415.5" ></text>
</g>
<g >
<title>__dynamic_cast (17 samples, 0.03%)</title><rect x="12.3" y="581" width="0.4" height="15.0" fill="rgb(250,142,52)" rx="2" ry="2" />
<text  x="15.27" y="591.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (22 samples, 0.04%)</title><rect x="1024.0" y="165" width="0.5" height="15.0" fill="rgb(231,203,4)" rx="2" ry="2" />
<text  x="1027.02" y="175.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value, std::allocator&lt;cql3::raw_value&gt; &gt;::vector (97 samples, 0.20%)</title><rect x="851.5" y="469" width="2.3" height="15.0" fill="rgb(234,112,51)" rx="2" ry="2" />
<text  x="854.47" y="479.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally&lt;single_node_cql_env::execute_prepared_with_qo (11 samples, 0.02%)</title><rect x="717.4" y="453" width="0.3" height="15.0" fill="rgb(215,88,39)" rx="2" ry="2" />
<text  x="720.41" y="463.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;mutation_fragment_merger&lt;mutation_reader_merger&gt;::operator (15 samples, 0.03%)</title><rect x="283.0" y="357" width="0.4" height="15.0" fill="rgb(248,107,7)" rx="2" ry="2" />
<text  x="286.00" y="367.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (43 samples, 0.09%)</title><rect x="920.0" y="325" width="1.0" height="15.0" fill="rgb(207,35,47)" rx="2" ry="2" />
<text  x="922.97" y="335.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::get0 (23 samples, 0.05%)</title><rect x="412.2" y="277" width="0.6" height="15.0" fill="rgb(228,226,25)" rx="2" ry="2" />
<text  x="415.21" y="287.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_28has_slice_or_needs_filteringERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES28_S2B_ (5 samples, 0.01%)</title><rect x="943.5" y="357" width="0.1" height="15.0" fill="rgb(242,218,5)" rx="2" ry="2" />
<text  x="946.50" y="367.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (22 samples, 0.04%)</title><rect x="298.0" y="261" width="0.5" height="15.0" fill="rgb(244,48,50)" rx="2" ry="2" />
<text  x="301.02" y="271.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_impl&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (5,287 samples, 10.71%)</title><rect x="290.4" y="325" width="126.3" height="15.0" fill="rgb(223,151,18)" rx="2" ry="2" />
<text  x="293.40" y="335.5" >seastar::intern..</text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (5 samples, 0.01%)</title><rect x="531.0" y="277" width="0.2" height="15.0" fill="rgb(227,126,46)" rx="2" ry="2" />
<text  x="534.05" y="287.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (28 samples, 0.06%)</title><rect x="1016.4" y="213" width="0.7" height="15.0" fill="rgb(248,103,23)" rx="2" ry="2" />
<text  x="1019.45" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt;::_M_check_len (6 samples, 0.01%)</title><rect x="246.5" y="181" width="0.2" height="15.0" fill="rgb(211,54,30)" rx="2" ry="2" />
<text  x="249.51" y="191.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::on_permit_destroyed (16 samples, 0.03%)</title><rect x="64.8" y="421" width="0.4" height="15.0" fill="rgb(232,11,36)" rx="2" ry="2" />
<text  x="67.79" y="431.5" ></text>
</g>
<g >
<title>std::__find_if&lt;gms::inet_address*, __gnu_cxx::__ops::_Iter_equals_val&lt;gms::inet_address const&gt; &gt; (11 samples, 0.02%)</title><rect x="1094.9" y="309" width="0.3" height="15.0" fill="rgb(250,99,36)" rx="2" ry="2" />
<text  x="1097.91" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::~vector (9 samples, 0.02%)</title><rect x="458.4" y="325" width="0.3" height="15.0" fill="rgb(243,34,39)" rx="2" ry="2" />
<text  x="461.44" y="335.5" ></text>
</g>
<g >
<title>mutation_reader_merger::maybe_add_readers_at_partition_boundary (49 samples, 0.10%)</title><rect x="129.4" y="293" width="1.1" height="15.0" fill="rgb(215,76,12)" rx="2" ry="2" />
<text  x="132.37" y="303.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::local (20 samples, 0.04%)</title><rect x="1064.6" y="341" width="0.5" height="15.0" fill="rgb(230,119,21)" rx="2" ry="2" />
<text  x="1067.61" y="351.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;compact_for_query&lt; (5 samples, 0.01%)</title><rect x="417.1" y="341" width="0.1" height="15.0" fill="rgb(209,210,36)" rx="2" ry="2" />
<text  x="420.08" y="351.5" ></text>
</g>
<g >
<title>database::apply_with_commitlog (34 samples, 0.07%)</title><rect x="1140.1" y="325" width="0.8" height="15.0" fill="rgb(212,57,47)" rx="2" ry="2" />
<text  x="1143.14" y="335.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;bytes_ostream::chunk, std::default_delete&lt;bytes_ostream::chunk&gt; &gt;::~unique_ptr (99 samples, 0.20%)</title><rect x="36.5" y="437" width="2.4" height="15.0" fill="rgb(219,216,30)" rx="2" ry="2" />
<text  x="39.50" y="447.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::find (9 samples, 0.02%)</title><rect x="951.9" y="341" width="0.3" height="15.0" fill="rgb(240,137,41)" rx="2" ry="2" />
<text  x="954.94" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::allocate_aligned (113 samples, 0.23%)</title><rect x="191.9" y="37" width="2.7" height="15.0" fill="rgb(239,78,40)" rx="2" ry="2" />
<text  x="194.87" y="47.5" ></text>
</g>
<g >
<title>seastar::semaphore_units&lt;seastar::semaphore_default_exception_factory, std::chrono::_V2::steady_clock&gt;::return_all (16 samples, 0.03%)</title><rect x="36.1" y="437" width="0.4" height="15.0" fill="rgb(226,0,40)" rx="2" ry="2" />
<text  x="39.09" y="447.5" ></text>
</g>
<g >
<title>reader_permit::mark_unused (21 samples, 0.04%)</title><rect x="65.9" y="453" width="0.5" height="15.0" fill="rgb(217,207,3)" rx="2" ry="2" />
<text  x="68.93" y="463.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (5 samples, 0.01%)</title><rect x="671.3" y="485" width="0.1" height="15.0" fill="rgb(235,22,5)" rx="2" ry="2" />
<text  x="674.32" y="495.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (20 samples, 0.04%)</title><rect x="65.2" y="421" width="0.4" height="15.0" fill="rgb(206,181,15)" rx="2" ry="2" />
<text  x="68.17" y="431.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;std::tuple&lt;std::optional&lt;clustering_key_prefix&gt; &gt; &gt; &gt;::satisfy_with_result_of&lt;seastar::future&lt;mutation_fragment*&gt;::then_impl_nrvo&lt;query::consume_page&lt; (25 samples, 0.05%)</title><rect x="682.1" y="485" width="0.6" height="15.0" fill="rgb(224,98,9)" rx="2" ry="2" />
<text  x="685.14" y="495.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;query::querier&lt; (13 samples, 0.03%)</title><rect x="83.6" y="453" width="0.3" height="15.0" fill="rgb(219,64,1)" rx="2" ry="2" />
<text  x="86.61" y="463.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (100 samples, 0.20%)</title><rect x="342.8" y="165" width="2.4" height="15.0" fill="rgb(253,27,30)" rx="2" ry="2" />
<text  x="345.85" y="175.5" ></text>
</g>
<g >
<title>partition_key_view::legacy_tri_compare (308 samples, 0.62%)</title><rect x="480.3" y="245" width="7.3" height="15.0" fill="rgb(208,144,31)" rx="2" ry="2" />
<text  x="483.25" y="255.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (11 samples, 0.02%)</title><rect x="349.0" y="165" width="0.3" height="15.0" fill="rgb(241,62,14)" rx="2" ry="2" />
<text  x="352.03" y="175.5" ></text>
</g>
<g >
<title>std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;std::optional&lt;auth::resource&gt; &gt;, seastar::future&lt;bool&gt; &gt; &gt;::operator (34 samples, 0.07%)</title><rect x="809.7" y="309" width="0.8" height="15.0" fill="rgb(219,123,23)" rx="2" ry="2" />
<text  x="812.70" y="319.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (5 samples, 0.01%)</title><rect x="18.7" y="309" width="0.1" height="15.0" fill="rgb(208,84,5)" rx="2" ry="2" />
<text  x="21.72" y="319.5" ></text>
</g>
<g >
<title>std::hash&lt;std::basic_string_view&lt;signed char, std::char_traits&lt;signed char&gt; &gt; &gt;::operator (65 samples, 0.13%)</title><rect x="741.1" y="277" width="1.6" height="15.0" fill="rgb(241,179,53)" rx="2" ry="2" />
<text  x="744.13" y="287.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::emplace_mutation_fragment (41 samples, 0.08%)</title><rect x="151.4" y="245" width="1.0" height="15.0" fill="rgb(220,4,40)" rx="2" ry="2" />
<text  x="154.44" y="255.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_M_reset (6 samples, 0.01%)</title><rect x="732.8" y="389" width="0.1" height="15.0" fill="rgb(216,98,37)" rx="2" ry="2" />
<text  x="735.79" y="399.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;schema const&gt;::operator= (12 samples, 0.02%)</title><rect x="1005.0" y="261" width="0.3" height="15.0" fill="rgb(237,221,13)" rx="2" ry="2" />
<text  x="1007.98" y="271.5" ></text>
</g>
<g >
<title>operator delete (27 samples, 0.05%)</title><rect x="670.7" y="485" width="0.6" height="15.0" fill="rgb(243,215,49)" rx="2" ry="2" />
<text  x="673.67" y="495.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperationDifferentiator (60 samples, 0.12%)</title><rect x="18.8" y="341" width="1.5" height="15.0" fill="rgb(224,218,15)" rx="2" ry="2" />
<text  x="21.84" y="351.5" ></text>
</g>
<g >
<title>service::client_state::has_column_family_access (2,759 samples, 5.59%)</title><rect x="759.8" y="405" width="66.0" height="15.0" fill="rgb(211,53,10)" rx="2" ry="2" />
<text  x="762.84" y="415.5" >service..</text>
</g>
<g >
<title>memtable::upgrade_entry (11 samples, 0.02%)</title><rect x="515.3" y="325" width="0.3" height="15.0" fill="rgb(229,105,32)" rx="2" ry="2" />
<text  x="518.30" y="335.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (6 samples, 0.01%)</title><rect x="1048.6" y="325" width="0.1" height="15.0" fill="rgb(239,49,30)" rx="2" ry="2" />
<text  x="1051.56" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (45 samples, 0.09%)</title><rect x="504.0" y="181" width="1.1" height="15.0" fill="rgb(206,164,12)" rx="2" ry="2" />
<text  x="507.05" y="191.5" ></text>
</g>
<g >
<title>basic_atomic_cell_view&lt; (8 samples, 0.02%)</title><rect x="325.6" y="181" width="0.2" height="15.0" fill="rgb(209,193,44)" rx="2" ry="2" />
<text  x="328.64" y="191.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::process_where_clause (13 samples, 0.03%)</title><rect x="21.7" y="421" width="0.3" height="15.0" fill="rgb(234,27,8)" rx="2" ry="2" />
<text  x="24.68" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (95 samples, 0.19%)</title><rect x="969.9" y="341" width="2.2" height="15.0" fill="rgb(228,143,8)" rx="2" ry="2" />
<text  x="972.86" y="351.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::needs_post_query_ordering (50 samples, 0.10%)</title><rect x="647.6" y="469" width="1.2" height="15.0" fill="rgb(248,10,32)" rx="2" ry="2" />
<text  x="650.64" y="479.5" ></text>
</g>
<g >
<title>__tls_init (14 samples, 0.03%)</title><rect x="147.4" y="245" width="0.3" height="15.0" fill="rgb(236,75,29)" rx="2" ry="2" />
<text  x="150.38" y="255.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (24 samples, 0.05%)</title><rect x="204.5" y="149" width="0.6" height="15.0" fill="rgb(206,182,24)" rx="2" ry="2" />
<text  x="207.48" y="159.5" ></text>
</g>
<g >
<title>utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::lru_entry::touch (44 samples, 0.09%)</title><rect x="734.4" y="309" width="1.0" height="15.0" fill="rgb(243,19,51)" rx="2" ry="2" />
<text  x="737.37" y="319.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt;::construct&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; (5 samples, 0.01%)</title><rect x="246.4" y="181" width="0.1" height="15.0" fill="rgb(226,196,52)" rx="2" ry="2" />
<text  x="249.39" y="191.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (226 samples, 0.46%)</title><rect x="206.3" y="133" width="5.4" height="15.0" fill="rgb(220,109,37)" rx="2" ry="2" />
<text  x="209.28" y="143.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::drop_unneeded_tombstones (5 samples, 0.01%)</title><rect x="368.2" y="213" width="0.2" height="15.0" fill="rgb(220,33,47)" rx="2" ry="2" />
<text  x="371.24" y="223.5" ></text>
</g>
<g >
<title>std::optional&lt;clustering_key_prefix&gt;::operator=&lt;clustering_key_prefix const&amp;&gt; (6 samples, 0.01%)</title><rect x="230.7" y="229" width="0.1" height="15.0" fill="rgb(253,94,45)" rx="2" ry="2" />
<text  x="233.67" y="239.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::lower_bound&lt;mutation_partition, schema const&amp;, nonwrapping_interval&lt;clustering_key_prefix&gt; const&amp;&gt; (18 samples, 0.04%)</title><rect x="217.3" y="149" width="0.4" height="15.0" fill="rgb(243,191,23)" rx="2" ry="2" />
<text  x="220.29" y="159.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (35 samples, 0.07%)</title><rect x="1140.1" y="389" width="0.9" height="15.0" fill="rgb(216,86,41)" rx="2" ry="2" />
<text  x="1143.14" y="399.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::get (12 samples, 0.02%)</title><rect x="319.5" y="197" width="0.2" height="15.0" fill="rgb(236,122,48)" rx="2" ry="2" />
<text  x="322.45" y="207.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::has_token (13 samples, 0.03%)</title><rect x="646.6" y="421" width="0.3" height="15.0" fill="rgb(238,110,30)" rx="2" ry="2" />
<text  x="649.59" y="431.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::future&lt;void&gt;  (38 samples, 0.08%)</title><rect x="1141.1" y="357" width="0.9" height="15.0" fill="rgb(224,163,1)" rx="2" ry="2" />
<text  x="1144.07" y="367.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (171 samples, 0.35%)</title><rect x="721.5" y="373" width="4.1" height="15.0" fill="rgb(211,206,28)" rx="2" ry="2" />
<text  x="724.49" y="383.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (8 samples, 0.02%)</title><rect x="569.5" y="309" width="0.2" height="15.0" fill="rgb(239,175,49)" rx="2" ry="2" />
<text  x="572.51" y="319.5" ></text>
</g>
<g >
<title>std::pair&lt;auth::authenticated_user, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;::pair (25 samples, 0.05%)</title><rect x="736.5" y="373" width="0.6" height="15.0" fill="rgb(247,147,30)" rx="2" ry="2" />
<text  x="739.52" y="383.5" ></text>
</g>
<g >
<title>reader_permit::used_guard::~used_guard (10 samples, 0.02%)</title><rect x="682.8" y="485" width="0.2" height="15.0" fill="rgb(249,212,45)" rx="2" ry="2" />
<text  x="685.76" y="495.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (68 samples, 0.14%)</title><rect x="734.0" y="341" width="1.6" height="15.0" fill="rgb(237,176,46)" rx="2" ry="2" />
<text  x="737.01" y="351.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::set&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt; (28 samples, 0.06%)</title><rect x="689.0" y="437" width="0.7" height="15.0" fill="rgb(242,38,20)" rx="2" ry="2" />
<text  x="692.00" y="447.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;mutation_querier, false, false&gt;::_Optional_base (5 samples, 0.01%)</title><rect x="422.6" y="389" width="0.1" height="15.0" fill="rgb(213,61,39)" rx="2" ry="2" />
<text  x="425.60" y="399.5" ></text>
</g>
<g >
<title>cql3::query_processor::parse_statement (216 samples, 0.44%)</title><rect x="16.4" y="469" width="5.1" height="15.0" fill="rgb(253,13,11)" rx="2" ry="2" />
<text  x="19.36" y="479.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::future (18 samples, 0.04%)</title><rect x="975.4" y="357" width="0.4" height="15.0" fill="rgb(236,144,37)" rx="2" ry="2" />
<text  x="978.35" y="367.5" ></text>
</g>
<g >
<title>operator delete (30 samples, 0.06%)</title><rect x="518.5" y="325" width="0.7" height="15.0" fill="rgb(247,33,31)" rx="2" ry="2" />
<text  x="521.48" y="335.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::~resource_units (10 samples, 0.02%)</title><rect x="410.4" y="245" width="0.2" height="15.0" fill="rgb(252,112,17)" rx="2" ry="2" />
<text  x="413.37" y="255.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (13 samples, 0.03%)</title><rect x="552.2" y="421" width="0.3" height="15.0" fill="rgb(242,85,42)" rx="2" ry="2" />
<text  x="555.17" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (7 samples, 0.01%)</title><rect x="211.2" y="85" width="0.1" height="15.0" fill="rgb(247,37,17)" rx="2" ry="2" />
<text  x="214.15" y="95.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (39 samples, 0.08%)</title><rect x="465.2" y="277" width="0.9" height="15.0" fill="rgb(229,142,27)" rx="2" ry="2" />
<text  x="468.20" y="287.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_range_tombstone (19 samples, 0.04%)</title><rect x="152.6" y="245" width="0.4" height="15.0" fill="rgb(237,145,37)" rx="2" ry="2" />
<text  x="155.57" y="255.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;query::result_memory_limiter::new_data_read (35 samples, 0.07%)</title><rect x="602.2" y="437" width="0.9" height="15.0" fill="rgb(230,8,11)" rx="2" ry="2" />
<text  x="605.22" y="447.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::deallocate (56 samples, 0.11%)</title><rect x="281.2" y="309" width="1.3" height="15.0" fill="rgb(222,89,33)" rx="2" ry="2" />
<text  x="284.16" y="319.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::pop_mutation_fragment (29 samples, 0.06%)</title><rect x="126.4" y="309" width="0.7" height="15.0" fill="rgb(240,88,18)" rx="2" ry="2" />
<text  x="129.40" y="319.5" ></text>
</g>
<g >
<title>range_tombstone_stream::empty (8 samples, 0.02%)</title><rect x="230.3" y="229" width="0.2" height="15.0" fill="rgb(248,0,4)" rx="2" ry="2" />
<text  x="233.26" y="239.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (22 samples, 0.04%)</title><rect x="749.4" y="373" width="0.6" height="15.0" fill="rgb(215,134,50)" rx="2" ry="2" />
<text  x="752.45" y="383.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_impl&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (22 samples, 0.04%)</title><rect x="682.2" y="405" width="0.5" height="15.0" fill="rgb(253,62,37)" rx="2" ry="2" />
<text  x="685.17" y="415.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_one (497 samples, 1.01%)</title><rect x="132.9" y="277" width="11.9" height="15.0" fill="rgb(239,227,47)" rx="2" ry="2" />
<text  x="135.93" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (11 samples, 0.02%)</title><rect x="84.3" y="453" width="0.3" height="15.0" fill="rgb(216,180,15)" rx="2" ry="2" />
<text  x="87.33" y="463.5" ></text>
</g>
<g >
<title>memtable::upgrade_entry (22 samples, 0.04%)</title><rect x="521.4" y="341" width="0.5" height="15.0" fill="rgb(231,30,20)" rx="2" ry="2" />
<text  x="524.39" y="351.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (20 samples, 0.04%)</title><rect x="1100.4" y="357" width="0.4" height="15.0" fill="rgb(245,59,27)" rx="2" ry="2" />
<text  x="1103.36" y="367.5" ></text>
</g>
<g >
<title>auth::data_resource_view::table (7 samples, 0.01%)</title><rect x="799.0" y="117" width="0.1" height="15.0" fill="rgb(218,30,7)" rx="2" ry="2" />
<text  x="801.95" y="127.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;, service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (19 samples, 0.04%)</title><rect x="1141.5" y="261" width="0.5" height="15.0" fill="rgb(236,193,0)" rx="2" ry="2" />
<text  x="1144.52" y="271.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::execution_loop (24,364 samples, 49.33%)</title><rect x="46.0" y="501" width="582.1" height="15.0" fill="rgb(212,17,28)" rx="2" ry="2" />
<text  x="48.98" y="511.5" >reader_concurrency_semaphore::execution_loop</text>
</g>
<g >
<title>managed_bytes::managed_bytes (24 samples, 0.05%)</title><rect x="172.5" y="149" width="0.6" height="15.0" fill="rgb(242,187,43)" rx="2" ry="2" />
<text  x="175.54" y="159.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::~merging_reader (5 samples, 0.01%)</title><rect x="1175.3" y="437" width="0.1" height="15.0" fill="rgb(250,132,6)" rx="2" ry="2" />
<text  x="1178.33" y="447.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (5 samples, 0.01%)</title><rect x="508.7" y="197" width="0.1" height="15.0" fill="rgb(250,131,50)" rx="2" ry="2" />
<text  x="511.71" y="207.5" ></text>
</g>
<g >
<title>__tls_init (8 samples, 0.02%)</title><rect x="501.0" y="229" width="0.2" height="15.0" fill="rgb(205,135,18)" rx="2" ry="2" />
<text  x="504.01" y="239.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (7 samples, 0.01%)</title><rect x="921.3" y="389" width="0.1" height="15.0" fill="rgb(235,217,8)" rx="2" ry="2" />
<text  x="924.28" y="399.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;position_in_partition&gt;::_M_reset (12 samples, 0.02%)</title><rect x="246.8" y="229" width="0.3" height="15.0" fill="rgb(220,209,3)" rx="2" ry="2" />
<text  x="249.82" y="239.5" ></text>
</g>
<g >
<title>partition_version_ref::operator (35 samples, 0.07%)</title><rect x="511.4" y="229" width="0.8" height="15.0" fill="rgb(254,208,27)" rx="2" ry="2" />
<text  x="514.41" y="239.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (131 samples, 0.27%)</title><rect x="408.6" y="261" width="3.1" height="15.0" fill="rgb(220,22,44)" rx="2" ry="2" />
<text  x="411.60" y="271.5" ></text>
</g>
<g >
<title>operator new (27 samples, 0.05%)</title><rect x="904.6" y="325" width="0.6" height="15.0" fill="rgb(238,60,50)" rx="2" ry="2" />
<text  x="907.60" y="335.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::get_promise (10 samples, 0.02%)</title><rect x="1123.1" y="421" width="0.3" height="15.0" fill="rgb(241,107,17)" rx="2" ry="2" />
<text  x="1126.15" y="431.5" ></text>
</g>
<g >
<title>ser::writer_of_qr_partition&lt;bytes_ostream&gt;::skip_key (24 samples, 0.05%)</title><rect x="312.5" y="165" width="0.6" height="15.0" fill="rgb(206,61,47)" rx="2" ry="2" />
<text  x="315.48" y="175.5" ></text>
</g>
<g >
<title>__libc_start_main (48,315 samples, 97.83%)</title><rect x="23.1" y="629" width="1154.4" height="15.0" fill="rgb(215,180,52)" rx="2" ry="2" />
<text  x="26.09" y="639.5" >__libc_start_main</text>
</g>
<g >
<title>std::construct_at&lt;mutation_fragment, schema const&amp;, reader_permit&amp;, partition_start&gt; (187 samples, 0.38%)</title><rect x="505.2" y="229" width="4.5" height="15.0" fill="rgb(230,17,15)" rx="2" ry="2" />
<text  x="508.22" y="239.5" ></text>
</g>
<g >
<title>operator delete (23 samples, 0.05%)</title><rect x="31.6" y="485" width="0.5" height="15.0" fill="rgb(223,226,35)" rx="2" ry="2" />
<text  x="34.55" y="495.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_state&lt;std::tuple&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (12 samples, 0.02%)</title><rect x="291.7" y="293" width="0.3" height="15.0" fill="rgb(242,166,17)" rx="2" ry="2" />
<text  x="294.69" y="303.5" ></text>
</g>
<g >
<title>seastar::lambda_task&lt;seastar::execution_stage::flush (11,854 samples, 24.00%)</title><rect x="859.2" y="501" width="283.2" height="15.0" fill="rgb(227,197,25)" rx="2" ry="2" />
<text  x="862.19" y="511.5" >seastar::lambda_task&lt;seastar::executio..</text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::read_next (56 samples, 0.11%)</title><rect x="252.3" y="261" width="1.4" height="15.0" fill="rgb(244,89,31)" rx="2" ry="2" />
<text  x="255.32" y="271.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (44 samples, 0.09%)</title><rect x="677.1" y="469" width="1.1" height="15.0" fill="rgb(234,97,27)" rx="2" ry="2" />
<text  x="680.15" y="479.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::local (8 samples, 0.02%)</title><rect x="838.9" y="421" width="0.2" height="15.0" fill="rgb(250,182,28)" rx="2" ry="2" />
<text  x="841.90" y="431.5" ></text>
</g>
<g >
<title>write_fragmented&lt;managed_bytes_basic_view&lt; (6 samples, 0.01%)</title><rect x="896.4" y="277" width="0.1" height="15.0" fill="rgb(218,13,4)" rx="2" ry="2" />
<text  x="899.39" y="287.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (9 samples, 0.02%)</title><rect x="850.9" y="469" width="0.2" height="15.0" fill="rgb(232,186,53)" rx="2" ry="2" />
<text  x="853.89" y="479.5" ></text>
</g>
<g >
<title>bytes_ostream::linearize (13 samples, 0.03%)</title><rect x="592.6" y="405" width="0.3" height="15.0" fill="rgb(212,18,46)" rx="2" ry="2" />
<text  x="595.62" y="415.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_Optional_payload_base (6 samples, 0.01%)</title><rect x="102.6" y="405" width="0.1" height="15.0" fill="rgb(240,95,14)" rx="2" ry="2" />
<text  x="105.58" y="415.5" ></text>
</g>
<g >
<title>operator delete (64 samples, 0.13%)</title><rect x="408.8" y="245" width="1.6" height="15.0" fill="rgb(254,117,45)" rx="2" ry="2" />
<text  x="411.84" y="255.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::term&gt;::~shared_ptr (22 samples, 0.04%)</title><rect x="1129.8" y="421" width="0.5" height="15.0" fill="rgb(219,138,30)" rx="2" ry="2" />
<text  x="1132.77" y="431.5" ></text>
</g>
<g >
<title>__dynamic_cast (15 samples, 0.03%)</title><rect x="643.8" y="469" width="0.4" height="15.0" fill="rgb(205,117,49)" rx="2" ry="2" />
<text  x="646.84" y="479.5" ></text>
</g>
<g >
<title>seastar::future&lt;std::tuple&lt;std::optional&lt;clustering_key_prefix&gt; &gt; &gt;::then_impl&lt;query::querier&lt; (27 samples, 0.05%)</title><rect x="540.2" y="421" width="0.7" height="15.0" fill="rgb(220,198,48)" rx="2" ry="2" />
<text  x="543.22" y="431.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (10 samples, 0.02%)</title><rect x="161.0" y="213" width="0.2" height="15.0" fill="rgb(208,31,15)" rx="2" ry="2" />
<text  x="164.00" y="223.5" ></text>
</g>
<g >
<title>db::block_for (12 samples, 0.02%)</title><rect x="1063.5" y="325" width="0.3" height="15.0" fill="rgb(234,199,7)" rx="2" ry="2" />
<text  x="1066.51" y="335.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (71 samples, 0.14%)</title><rect x="273.9" y="309" width="1.7" height="15.0" fill="rgb(254,155,22)" rx="2" ry="2" />
<text  x="276.92" y="319.5" ></text>
</g>
<g >
<title>reader_selector::has_new_readers (10 samples, 0.02%)</title><rect x="448.3" y="293" width="0.2" height="15.0" fill="rgb(238,104,31)" rx="2" ry="2" />
<text  x="451.28" y="303.5" ></text>
</g>
<g >
<title>std::__equal&lt;true&gt;::equal&lt;char&gt; (52 samples, 0.11%)</title><rect x="795.0" y="117" width="1.3" height="15.0" fill="rgb(226,52,21)" rx="2" ry="2" />
<text  x="798.01" y="127.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_restrictions::size (8 samples, 0.02%)</title><rect x="946.1" y="405" width="0.2" height="15.0" fill="rgb(207,150,17)" rx="2" ry="2" />
<text  x="949.08" y="415.5" ></text>
</g>
<g >
<title>std::__optional_hash_call_base&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, true&gt;::operator (16 samples, 0.03%)</title><rect x="814.9" y="277" width="0.3" height="15.0" fill="rgb(227,9,4)" rx="2" ry="2" />
<text  x="817.86" y="287.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::lower_bound&lt;mutation_partition, schema const&amp;, nonwrapping_interval&lt;clustering_key_prefix&gt; const&amp;&gt; (5 samples, 0.01%)</title><rect x="219.7" y="165" width="0.1" height="15.0" fill="rgb(213,70,22)" rx="2" ry="2" />
<text  x="222.70" y="175.5" ></text>
</g>
<g >
<title>ser::after_qr_cell__timestamp&lt;bytes_ostream&gt;::skip_expiry (5 samples, 0.01%)</title><rect x="330.9" y="181" width="0.1" height="15.0" fill="rgb(230,157,48)" rx="2" ry="2" />
<text  x="333.85" y="191.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::fetch (14 samples, 0.03%)</title><rect x="858.7" y="469" width="0.3" height="15.0" fill="rgb(226,150,54)" rx="2" ry="2" />
<text  x="861.71" y="479.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (5,347 samples, 10.83%)</title><rect x="289.7" y="373" width="127.8" height="15.0" fill="rgb(223,190,6)" rx="2" ry="2" />
<text  x="292.73" y="383.5" >flat_mutation_re..</text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%)</title><rect x="614.8" y="373" width="0.1" height="15.0" fill="rgb(247,17,22)" rx="2" ry="2" />
<text  x="617.77" y="383.5" ></text>
</g>
<g >
<title>operator delete (21 samples, 0.04%)</title><rect x="806.4" y="277" width="0.5" height="15.0" fill="rgb(240,109,45)" rx="2" ry="2" />
<text  x="809.43" y="287.5" ></text>
</g>
<g >
<title>atomic_cell_or_collection::external_memory_usage (11 samples, 0.02%)</title><rect x="208.1" y="117" width="0.3" height="15.0" fill="rgb(205,124,3)" rx="2" ry="2" />
<text  x="211.14" y="127.5" ></text>
</g>
<g >
<title>seastar::internal::coroutine_traits_base&lt;service::storage_proxy_coordinator_query_result&gt;::promise_type::run_and_dispose (11 samples, 0.02%)</title><rect x="24.5" y="517" width="0.2" height="15.0" fill="rgb(230,83,41)" rx="2" ry="2" />
<text  x="27.45" y="527.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (10 samples, 0.02%)</title><rect x="623.2" y="437" width="0.2" height="15.0" fill="rgb(214,152,37)" rx="2" ry="2" />
<text  x="626.18" y="447.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (25 samples, 0.05%)</title><rect x="1122.4" y="421" width="0.6" height="15.0" fill="rgb(242,138,1)" rx="2" ry="2" />
<text  x="1125.36" y="431.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::leaf_node::allocate (5 samples, 0.01%)</title><rect x="174.1" y="133" width="0.1" height="15.0" fill="rgb(217,72,9)" rx="2" ry="2" />
<text  x="177.07" y="143.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (7 samples, 0.01%)</title><rect x="47.8" y="485" width="0.1" height="15.0" fill="rgb(225,214,52)" rx="2" ry="2" />
<text  x="50.77" y="495.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::get_mutations (11 samples, 0.02%)</title><rect x="859.8" y="389" width="0.3" height="15.0" fill="rgb(241,62,38)" rx="2" ry="2" />
<text  x="862.83" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (51 samples, 0.10%)</title><rect x="847.3" y="341" width="1.3" height="15.0" fill="rgb(247,82,49)" rx="2" ry="2" />
<text  x="850.33" y="351.5" ></text>
</g>
<g >
<title>seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;::swap (31 samples, 0.06%)</title><rect x="735.7" y="373" width="0.7" height="15.0" fill="rgb(209,21,39)" rx="2" ry="2" />
<text  x="738.71" y="383.5" ></text>
</g>
<g >
<title>operator new (65 samples, 0.13%)</title><rect x="778.9" y="277" width="1.5" height="15.0" fill="rgb(213,192,38)" rx="2" ry="2" />
<text  x="781.86" y="287.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::guard (9 samples, 0.02%)</title><rect x="528.3" y="309" width="0.2" height="15.0" fill="rgb(240,140,30)" rx="2" ry="2" />
<text  x="531.27" y="319.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (12 samples, 0.02%)</title><rect x="313.3" y="165" width="0.3" height="15.0" fill="rgb(251,107,19)" rx="2" ry="2" />
<text  x="316.31" y="175.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;service::storage_proxy::unique_response_handler*, service::storage_proxy::mutate_begin (16 samples, 0.03%)</title><rect x="1141.1" y="277" width="0.4" height="15.0" fill="rgb(239,24,22)" rx="2" ry="2" />
<text  x="1144.12" y="287.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;flat_mutation_reader  (6 samples, 0.01%)</title><rect x="428.3" y="389" width="0.2" height="15.0" fill="rgb(239,220,24)" rx="2" ry="2" />
<text  x="431.31" y="399.5" ></text>
</g>
<g >
<title>std::uniform_int_distribution&lt;unsigned long&gt;::operator (63 samples, 0.13%)</title><rect x="854.0" y="453" width="1.6" height="15.0" fill="rgb(226,151,24)" rx="2" ry="2" />
<text  x="857.05" y="463.5" ></text>
</g>
<g >
<title>managed_bytes::free_chain (8 samples, 0.02%)</title><rect x="407.7" y="213" width="0.2" height="15.0" fill="rgb(242,207,12)" rx="2" ry="2" />
<text  x="410.67" y="223.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (7 samples, 0.01%)</title><rect x="1138.6" y="421" width="0.2" height="15.0" fill="rgb(211,35,21)" rx="2" ry="2" />
<text  x="1141.63" y="431.5" ></text>
</g>
<g >
<title>dht::shard_of (16 samples, 0.03%)</title><rect x="998.8" y="293" width="0.4" height="15.0" fill="rgb(218,78,8)" rx="2" ry="2" />
<text  x="1001.81" y="303.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::~merging_reader (488 samples, 0.99%)</title><rect x="570.7" y="389" width="11.6" height="15.0" fill="rgb(240,78,10)" rx="2" ry="2" />
<text  x="573.68" y="399.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::inet_address (12 samples, 0.02%)</title><rect x="1064.2" y="341" width="0.2" height="15.0" fill="rgb(226,47,34)" rx="2" ry="2" />
<text  x="1067.16" y="351.5" ></text>
</g>
<g >
<title>range_tombstone_stream::empty (6 samples, 0.01%)</title><rect x="227.9" y="213" width="0.2" height="15.0" fill="rgb(223,200,43)" rx="2" ry="2" />
<text  x="230.95" y="223.5" ></text>
</g>
<g >
<title>query::result::builder::build (70 samples, 0.14%)</title><rect x="591.4" y="437" width="1.6" height="15.0" fill="rgb(210,9,27)" rx="2" ry="2" />
<text  x="594.35" y="447.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (450 samples, 0.91%)</title><rect x="1178.1" y="629" width="10.8" height="15.0" fill="rgb(242,47,10)" rx="2" ry="2" />
<text  x="1181.13" y="639.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (35 samples, 0.07%)</title><rect x="1140.1" y="437" width="0.9" height="15.0" fill="rgb(238,137,6)" rx="2" ry="2" />
<text  x="1143.14" y="447.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::merging_reader (218 samples, 0.44%)</title><rect x="451.4" y="293" width="5.2" height="15.0" fill="rgb(238,70,53)" rx="2" ry="2" />
<text  x="454.39" y="303.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::has_slice_or_needs_filtering (17 samples, 0.03%)</title><rect x="943.5" y="373" width="0.4" height="15.0" fill="rgb(215,109,12)" rx="2" ry="2" />
<text  x="946.45" y="383.5" ></text>
</g>
<g >
<title>locator::simple_snitch::sort_by_proximity (25 samples, 0.05%)</title><rect x="1074.4" y="325" width="0.6" height="15.0" fill="rgb(234,23,51)" rx="2" ry="2" />
<text  x="1077.43" y="335.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;bool  (64 samples, 0.13%)</title><rect x="1175.9" y="517" width="1.5" height="15.0" fill="rgb(223,19,36)" rx="2" ry="2" />
<text  x="1178.90" y="527.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;std::pair&lt;seastar::shared_ptr&lt;service::abstract_read_executor&gt;, nonwrapping_interval&lt;dht::token&gt; &gt;, 1ul&gt;::emplace_back&lt;seastar::shared_ptr&lt;service::abstract_read_executor&gt;&amp;, nonwrapping_interval&lt;dht::token&gt; &gt; (15 samples, 0.03%)</title><rect x="1099.5" y="357" width="0.4" height="15.0" fill="rgb(242,70,39)" rx="2" ry="2" />
<text  x="1102.52" y="367.5" ></text>
</g>
<g >
<title>operator delete (21 samples, 0.04%)</title><rect x="560.7" y="277" width="0.5" height="15.0" fill="rgb(218,122,43)" rx="2" ry="2" />
<text  x="563.72" y="287.5" ></text>
</g>
<g >
<title>database::query (145 samples, 0.29%)</title><rect x="41.9" y="501" width="3.4" height="15.0" fill="rgb(226,212,6)" rx="2" ry="2" />
<text  x="44.87" y="511.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (5,330 samples, 10.79%)</title><rect x="289.9" y="357" width="127.3" height="15.0" fill="rgb(235,177,21)" rx="2" ry="2" />
<text  x="292.85" y="367.5" >flat_mutation_r..</text>
</g>
<g >
<title>managed_bytes::operator= (42 samples, 0.09%)</title><rect x="294.2" y="261" width="1.1" height="15.0" fill="rgb(247,107,31)" rx="2" ry="2" />
<text  x="297.25" y="271.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;mutation_querier, false, false&gt;::_Optional_base (5 samples, 0.01%)</title><rect x="418.9" y="325" width="0.1" height="15.0" fill="rgb(228,83,7)" rx="2" ry="2" />
<text  x="421.87" y="335.5" ></text>
</g>
<g >
<title>database::query (19 samples, 0.04%)</title><rect x="1002.8" y="277" width="0.5" height="15.0" fill="rgb(219,98,32)" rx="2" ry="2" />
<text  x="1005.83" y="287.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::~holder (16 samples, 0.03%)</title><rect x="559.0" y="309" width="0.3" height="15.0" fill="rgb(249,77,13)" rx="2" ry="2" />
<text  x="561.95" y="319.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;compact_for_query&lt; (10 samples, 0.02%)</title><rect x="416.5" y="293" width="0.2" height="15.0" fill="rgb(210,5,53)" rx="2" ry="2" />
<text  x="419.48" y="303.5" ></text>
</g>
<g >
<title>gms::gossiper::is_alive (17 samples, 0.03%)</title><rect x="1092.9" y="261" width="0.5" height="15.0" fill="rgb(219,165,6)" rx="2" ry="2" />
<text  x="1095.95" y="271.5" ></text>
</g>
<g >
<title>service::client_state::set_keyspace (5 samples, 0.01%)</title><rect x="833.4" y="437" width="0.1" height="15.0" fill="rgb(248,223,34)" rx="2" ry="2" />
<text  x="836.43" y="447.5" ></text>
</g>
<g >
<title>database::has_keyspace (88 samples, 0.18%)</title><rect x="823.6" y="357" width="2.1" height="15.0" fill="rgb(206,55,42)" rx="2" ry="2" />
<text  x="826.61" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (34 samples, 0.07%)</title><rect x="457.6" y="309" width="0.8" height="15.0" fill="rgb(243,7,15)" rx="2" ry="2" />
<text  x="460.55" y="319.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (9 samples, 0.02%)</title><rect x="262.0" y="325" width="0.2" height="15.0" fill="rgb(212,223,10)" rx="2" ry="2" />
<text  x="264.97" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (8 samples, 0.02%)</title><rect x="282.2" y="277" width="0.2" height="15.0" fill="rgb(215,80,43)" rx="2" ry="2" />
<text  x="285.21" y="287.5" ></text>
</g>
<g >
<title>operator delete (45 samples, 0.09%)</title><rect x="281.3" y="293" width="1.1" height="15.0" fill="rgb(229,62,44)" rx="2" ry="2" />
<text  x="284.32" y="303.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;auth::resource_kind, std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;auth::resource_kind&gt;, std::hash&lt;auth::resource_kind&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (18 samples, 0.04%)</title><rect x="764.8" y="325" width="0.4" height="15.0" fill="rgb(247,175,26)" rx="2" ry="2" />
<text  x="767.79" y="335.5" ></text>
</g>
<g >
<title>seastar::futurize_invoke&lt;seastar::future&lt;void&gt;  (5,303 samples, 10.74%)</title><rect x="290.3" y="341" width="126.7" height="15.0" fill="rgb(206,141,51)" rx="2" ry="2" />
<text  x="293.28" y="351.5" >seastar::futuri..</text>
</g>
<g >
<title>nonwrapping_interval&lt;dht::ring_position&gt;::nonwrapping_interval (67 samples, 0.14%)</title><rect x="922.7" y="373" width="1.6" height="15.0" fill="rgb(232,99,16)" rx="2" ry="2" />
<text  x="925.74" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::~vector (28 samples, 0.06%)</title><rect x="634.1" y="469" width="0.7" height="15.0" fill="rgb(208,137,7)" rx="2" ry="2" />
<text  x="637.09" y="479.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (28 samples, 0.06%)</title><rect x="590.0" y="389" width="0.7" height="15.0" fill="rgb(207,188,29)" rx="2" ry="2" />
<text  x="593.04" y="399.5" ></text>
</g>
<g >
<title>db::assure_sufficient_live_nodes&lt;utils::small_vector&lt;gms::inet_address, 3ul&gt;, std::array&lt;gms::inet_address, 0ul&gt; &gt; (7 samples, 0.01%)</title><rect x="968.9" y="357" width="0.2" height="15.0" fill="rgb(226,65,9)" rx="2" ry="2" />
<text  x="971.90" y="367.5" ></text>
</g>
<g >
<title>service::storage_proxy::create_write_response_handler_helper (8 samples, 0.02%)</title><rect x="1141.8" y="213" width="0.2" height="15.0" fill="rgb(224,183,20)" rx="2" ry="2" />
<text  x="1144.79" y="223.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (5 samples, 0.01%)</title><rect x="410.7" y="245" width="0.1" height="15.0" fill="rgb(221,37,44)" rx="2" ry="2" />
<text  x="413.70" y="255.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (23 samples, 0.05%)</title><rect x="1058.6" y="261" width="0.6" height="15.0" fill="rgb(234,102,49)" rx="2" ry="2" />
<text  x="1061.62" y="271.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::emplace_back&lt;unsigned int const&amp;&gt; (8 samples, 0.02%)</title><rect x="1138.4" y="421" width="0.2" height="15.0" fill="rgb(228,101,39)" rx="2" ry="2" />
<text  x="1141.37" y="431.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::abstract_read_executor&gt;::~shared_ptr (8 samples, 0.02%)</title><rect x="707.2" y="485" width="0.1" height="15.0" fill="rgb(220,9,18)" rx="2" ry="2" />
<text  x="710.16" y="495.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;service::digest_read_result&gt;::set_value&lt;service::digest_read_result&gt; (14 samples, 0.03%)</title><rect x="700.9" y="421" width="0.4" height="15.0" fill="rgb(239,128,49)" rx="2" ry="2" />
<text  x="703.92" y="431.5" ></text>
</g>
<g >
<title>seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;::swap (35 samples, 0.07%)</title><rect x="719.6" y="405" width="0.8" height="15.0" fill="rgb(220,114,44)" rx="2" ry="2" />
<text  x="722.61" y="415.5" ></text>
</g>
<g >
<title>std::forward_as_tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const&amp;, auth::resource&gt; (6 samples, 0.01%)</title><rect x="815.5" y="389" width="0.2" height="15.0" fill="rgb(208,185,33)" rx="2" ry="2" />
<text  x="818.51" y="399.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;cql3::query_processor&gt;::local (13 samples, 0.03%)</title><rect x="831.9" y="437" width="0.3" height="15.0" fill="rgb(225,5,5)" rx="2" ry="2" />
<text  x="834.88" y="447.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (48 samples, 0.10%)</title><rect x="738.7" y="309" width="1.1" height="15.0" fill="rgb(249,96,33)" rx="2" ry="2" />
<text  x="741.67" y="319.5" ></text>
</g>
<g >
<title>__tls_init (7 samples, 0.01%)</title><rect x="488.5" y="309" width="0.2" height="15.0" fill="rgb(211,67,54)" rx="2" ry="2" />
<text  x="491.54" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_S_do_relocate (5 samples, 0.01%)</title><rect x="537.2" y="325" width="0.1" height="15.0" fill="rgb(248,62,54)" rx="2" ry="2" />
<text  x="540.19" y="335.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (371 samples, 0.75%)</title><rect x="791.7" y="181" width="8.8" height="15.0" fill="rgb(240,165,6)" rx="2" ry="2" />
<text  x="794.67" y="191.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (8 samples, 0.02%)</title><rect x="515.1" y="325" width="0.2" height="15.0" fill="rgb(250,43,28)" rx="2" ry="2" />
<text  x="518.11" y="335.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (23 samples, 0.05%)</title><rect x="1177.5" y="629" width="0.5" height="15.0" fill="rgb(235,29,34)" rx="2" ry="2" />
<text  x="1180.48" y="639.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::take (7 samples, 0.01%)</title><rect x="283.4" y="357" width="0.1" height="15.0" fill="rgb(216,45,48)" rx="2" ry="2" />
<text  x="286.35" y="367.5" ></text>
</g>
<g >
<title>mutation_fragment::visit&lt;mutation_fragment::calculate_memory_usage (16 samples, 0.03%)</title><rect x="212.0" y="165" width="0.3" height="15.0" fill="rgb(206,67,24)" rx="2" ry="2" />
<text  x="214.96" y="175.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;managed_bytes&gt;::operator= (7 samples, 0.01%)</title><rect x="900.7" y="309" width="0.2" height="15.0" fill="rgb(220,52,26)" rx="2" ry="2" />
<text  x="903.69" y="319.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (10 samples, 0.02%)</title><rect x="1031.6" y="213" width="0.2" height="15.0" fill="rgb(211,212,10)" rx="2" ry="2" />
<text  x="1034.57" y="223.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (24 samples, 0.05%)</title><rect x="814.0" y="277" width="0.6" height="15.0" fill="rgb(234,155,26)" rx="2" ry="2" />
<text  x="817.03" y="287.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (10 samples, 0.02%)</title><rect x="1142.5" y="501" width="0.2" height="15.0" fill="rgb(233,78,24)" rx="2" ry="2" />
<text  x="1145.50" y="511.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (28 samples, 0.06%)</title><rect x="648.9" y="469" width="0.7" height="15.0" fill="rgb(244,117,37)" rx="2" ry="2" />
<text  x="651.93" y="479.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, flat_mutation_reader, reader_concurrency_semaphore::inactive_read_handle&gt;::_Move_ctor_base (15 samples, 0.03%)</title><rect x="618.6" y="389" width="0.4" height="15.0" fill="rgb(215,196,52)" rx="2" ry="2" />
<text  x="621.64" y="399.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::set_urgent_state (7 samples, 0.01%)</title><rect x="857.0" y="501" width="0.2" height="15.0" fill="rgb(222,183,42)" rx="2" ry="2" />
<text  x="859.99" y="511.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::statement_restrictions (11 samples, 0.02%)</title><rect x="21.7" y="405" width="0.3" height="15.0" fill="rgb(230,119,44)" rx="2" ry="2" />
<text  x="24.71" y="415.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::clear (7 samples, 0.01%)</title><rect x="662.8" y="469" width="0.2" height="15.0" fill="rgb(253,137,40)" rx="2" ry="2" />
<text  x="665.84" y="479.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::~small_vector (12 samples, 0.02%)</title><rect x="581.8" y="373" width="0.3" height="15.0" fill="rgb(229,202,47)" rx="2" ry="2" />
<text  x="584.79" y="383.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::operator= (5 samples, 0.01%)</title><rect x="827.2" y="421" width="0.2" height="15.0" fill="rgb(217,223,51)" rx="2" ry="2" />
<text  x="830.24" y="431.5" ></text>
</g>
<g >
<title>std::default_delete&lt;nonwrapping_interval&lt;dht::ring_position&gt; const&gt;::operator (8 samples, 0.02%)</title><rect x="587.4" y="405" width="0.2" height="15.0" fill="rgb(239,111,53)" rx="2" ry="2" />
<text  x="590.41" y="415.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (35 samples, 0.07%)</title><rect x="1140.1" y="421" width="0.9" height="15.0" fill="rgb(252,141,46)" rx="2" ry="2" />
<text  x="1143.14" y="431.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, flat_mutation_reader::impl::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (5,055 samples, 10.24%)</title><rect x="292.2" y="309" width="120.8" height="15.0" fill="rgb(214,15,42)" rx="2" ry="2" />
<text  x="295.24" y="319.5" >std::__invoke_i..</text>
</g>
<g >
<title>operator new (69 samples, 0.14%)</title><rect x="981.2" y="293" width="1.6" height="15.0" fill="rgb(242,50,52)" rx="2" ry="2" />
<text  x="984.18" y="303.5" ></text>
</g>
<g >
<title>operator new (62 samples, 0.13%)</title><rect x="748.5" y="405" width="1.5" height="15.0" fill="rgb(209,145,13)" rx="2" ry="2" />
<text  x="751.49" y="415.5" ></text>
</g>
<g >
<title>std::default_delete&lt;bytes_ostream::chunk&gt;::operator (48 samples, 0.10%)</title><rect x="37.7" y="421" width="1.2" height="15.0" fill="rgb(246,218,45)" rx="2" ry="2" />
<text  x="40.72" y="431.5" ></text>
</g>
<g >
<title>read_simple&lt;long, managed_bytes_basic_view&lt; (51 samples, 0.10%)</title><rect x="387.3" y="165" width="1.2" height="15.0" fill="rgb(211,224,34)" rx="2" ry="2" />
<text  x="390.26" y="175.5" ></text>
</g>
<g >
<title>seastar::internal::uninitialized_wrapper_base&lt;service::storage_proxy_coordinator_query_result, false&gt;::uninitialized_set&lt;service::storage_proxy_coordinator_query_result&gt; (15 samples, 0.03%)</title><rect x="1151.0" y="469" width="0.4" height="15.0" fill="rgb(210,189,12)" rx="2" ry="2" />
<text  x="1154.03" y="479.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_nodes (6 samples, 0.01%)</title><rect x="1104.9" y="373" width="0.1" height="15.0" fill="rgb(252,72,12)" rx="2" ry="2" />
<text  x="1107.90" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (24 samples, 0.05%)</title><rect x="995.7" y="229" width="0.6" height="15.0" fill="rgb(218,133,33)" rx="2" ry="2" />
<text  x="998.71" y="239.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;bool&gt;::move_it (11 samples, 0.02%)</title><rect x="770.1" y="341" width="0.3" height="15.0" fill="rgb(221,206,45)" rx="2" ry="2" />
<text  x="773.14" y="351.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (6 samples, 0.01%)</title><rect x="1031.3" y="213" width="0.2" height="15.0" fill="rgb(215,221,24)" rx="2" ry="2" />
<text  x="1034.33" y="223.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::deallocate (6 samples, 0.01%)</title><rect x="557.2" y="293" width="0.1" height="15.0" fill="rgb(247,110,5)" rx="2" ry="2" />
<text  x="560.18" y="303.5" ></text>
</g>
<g >
<title>partition_snapshot::get_change_mark (38 samples, 0.08%)</title><rect x="226.0" y="149" width="0.9" height="15.0" fill="rgb(234,69,2)" rx="2" ry="2" />
<text  x="229.04" y="159.5" ></text>
</g>
<g >
<title>ser::after_qr_cell__value&lt;bytes_ostream&gt;::skip_ttl (5 samples, 0.01%)</title><rect x="331.0" y="181" width="0.1" height="15.0" fill="rgb(234,152,44)" rx="2" ry="2" />
<text  x="333.97" y="191.5" ></text>
</g>
<g >
<title>row::external_memory_usage (5 samples, 0.01%)</title><rect x="214.2" y="165" width="0.1" height="15.0" fill="rgb(246,195,52)" rx="2" ry="2" />
<text  x="217.21" y="175.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (30 samples, 0.06%)</title><rect x="859.4" y="469" width="0.7" height="15.0" fill="rgb(238,113,30)" rx="2" ry="2" />
<text  x="862.40" y="479.5" ></text>
</g>
<g >
<title>service::get_local_priority_manager (11 samples, 0.02%)</title><rect x="83.2" y="453" width="0.2" height="15.0" fill="rgb(210,150,44)" rx="2" ry="2" />
<text  x="86.18" y="463.5" ></text>
</g>
<g >
<title>locator::token_metadata::get_host_id_if_known (52 samples, 0.11%)</title><rect x="1153.3" y="453" width="1.2" height="15.0" fill="rgb(250,87,7)" rx="2" ry="2" />
<text  x="1156.28" y="463.5" ></text>
</g>
<g >
<title>locator::effective_replication_map::get_natural_endpoints_without_node_being_replaced (655 samples, 1.33%)</title><rect x="1076.5" y="309" width="15.6" height="15.0" fill="rgb(216,103,28)" rx="2" ry="2" />
<text  x="1079.49" y="319.5" ></text>
</g>
<g >
<title>std::optional&lt;mutation_querier&gt;::emplace&lt;mutation_querier&gt; (44 samples, 0.09%)</title><rect x="317.3" y="181" width="1.0" height="15.0" fill="rgb(216,221,50)" rx="2" ry="2" />
<text  x="320.26" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::~vector (23 samples, 0.05%)</title><rect x="447.7" y="277" width="0.5" height="15.0" fill="rgb(222,13,2)" rx="2" ry="2" />
<text  x="450.69" y="287.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (59 samples, 0.12%)</title><rect x="315.8" y="181" width="1.5" height="15.0" fill="rgb(205,127,5)" rx="2" ry="2" />
<text  x="318.85" y="191.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (12 samples, 0.02%)</title><rect x="532.4" y="245" width="0.2" height="15.0" fill="rgb(253,205,48)" rx="2" ry="2" />
<text  x="535.36" y="255.5" ></text>
</g>
<g >
<title>utils::timed_rate_moving_average_and_histogram::mark&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; (51 samples, 0.10%)</title><rect x="673.0" y="469" width="1.2" height="15.0" fill="rgb(242,63,26)" rx="2" ry="2" />
<text  x="675.97" y="479.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (4,554 samples, 9.22%)</title><rect x="145.4" y="309" width="108.8" height="15.0" fill="rgb(251,143,42)" rx="2" ry="2" />
<text  x="148.40" y="319.5" >partition_sna..</text>
</g>
<g >
<title>cql3_parser::CqlParser::value (5 samples, 0.01%)</title><rect x="20.6" y="309" width="0.1" height="15.0" fill="rgb(208,83,15)" rx="2" ry="2" />
<text  x="23.58" y="319.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::query_processor::process_authorized_statement (5 samples, 0.01%)</title><rect x="23.6" y="517" width="0.1" height="15.0" fill="rgb(244,125,48)" rx="2" ry="2" />
<text  x="26.59" y="527.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::disable_abort_on_alloc_failure_temporarily (21 samples, 0.04%)</title><rect x="534.6" y="341" width="0.5" height="15.0" fill="rgb(236,178,34)" rx="2" ry="2" />
<text  x="537.61" y="351.5" ></text>
</g>
<g >
<title>reader_permit::consume (6 samples, 0.01%)</title><rect x="157.2" y="181" width="0.1" height="15.0" fill="rgb(223,135,2)" rx="2" ry="2" />
<text  x="160.18" y="191.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureIvE9then_implIZZN5query12consume_pageIL19emit_only_live_rows1E20query_result_builderEEDaR20flat_mutation_readerNS_13lw_shared_ptrI22compact_mutation_stateIXT_EL20compact_for_sstables0EEEERKNS3_15partition_sliceEOT0_mjNSt6chrono10time_pointI8gc_clockNSJ_8durationIlSt5ratioILl1ELl1EEEEEEENUlP17mutation_fragmentE_clESS_EUlDpOT_E_NS0_ISt5tupleIJSt8optionalI21clustering_key_prefixEEEEEEESH_OT_ (47 samples, 0.10%)</title><rect x="288.1" y="373" width="1.1" height="15.0" fill="rgb(205,107,4)" rx="2" ry="2" />
<text  x="291.11" y="383.5" ></text>
</g>
<g >
<title>operator delete (16 samples, 0.03%)</title><rect x="1169.8" y="453" width="0.4" height="15.0" fill="rgb(211,85,36)" rx="2" ry="2" />
<text  x="1172.79" y="463.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_erase_at_end (24 samples, 0.05%)</title><rect x="365.9" y="197" width="0.5" height="15.0" fill="rgb(251,92,22)" rx="2" ry="2" />
<text  x="368.85" y="207.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (283 samples, 0.57%)</title><rect x="187.9" y="85" width="6.8" height="15.0" fill="rgb(235,8,12)" rx="2" ry="2" />
<text  x="190.90" y="95.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (7 samples, 0.01%)</title><rect x="485.7" y="181" width="0.2" height="15.0" fill="rgb(249,193,12)" rx="2" ry="2" />
<text  x="488.75" y="191.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_restrictions::empty (32 samples, 0.06%)</title><rect x="945.3" y="405" width="0.8" height="15.0" fill="rgb(227,4,53)" rx="2" ry="2" />
<text  x="948.32" y="415.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::abstract_read_executor&gt;::~shared_ptr (9 samples, 0.02%)</title><rect x="978.1" y="357" width="0.2" height="15.0" fill="rgb(217,157,2)" rx="2" ry="2" />
<text  x="981.10" y="367.5" ></text>
</g>
<g >
<title>std::apply&lt;auth::permissions_cache::get (697 samples, 1.41%)</title><rect x="784.4" y="261" width="16.7" height="15.0" fill="rgb(234,37,23)" rx="2" ry="2" />
<text  x="787.45" y="271.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;auth::resource, auth::resource, std::allocator&lt;auth::resource&gt;, std::__detail::_Identity, std::equal_to&lt;auth::resource&gt;, std::hash&lt;auth::resource&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;::_M_find_before_node (14 samples, 0.03%)</title><rect x="812.4" y="341" width="0.3" height="15.0" fill="rgb(230,72,6)" rx="2" ry="2" />
<text  x="815.40" y="351.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::~abstract_read_executor (115 samples, 0.23%)</title><rect x="1171.6" y="437" width="2.7" height="15.0" fill="rgb(244,46,13)" rx="2" ry="2" />
<text  x="1174.58" y="447.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (12 samples, 0.02%)</title><rect x="1122.7" y="405" width="0.3" height="15.0" fill="rgb(224,51,27)" rx="2" ry="2" />
<text  x="1125.67" y="415.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (18 samples, 0.04%)</title><rect x="681.2" y="485" width="0.4" height="15.0" fill="rgb(227,166,51)" rx="2" ry="2" />
<text  x="684.19" y="495.5" ></text>
</g>
<g >
<title>absl::hash_internal::HashState::combine_contiguous (9 samples, 0.02%)</title><rect x="843.3" y="325" width="0.3" height="15.0" fill="rgb(230,101,44)" rx="2" ry="2" />
<text  x="846.34" y="335.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (8 samples, 0.02%)</title><rect x="1128.5" y="389" width="0.2" height="15.0" fill="rgb(230,218,33)" rx="2" ry="2" />
<text  x="1131.52" y="399.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (25 samples, 0.05%)</title><rect x="326.6" y="181" width="0.6" height="15.0" fill="rgb(243,154,35)" rx="2" ry="2" />
<text  x="329.57" y="191.5" ></text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt;&amp;&gt; (20 samples, 0.04%)</title><rect x="842.5" y="357" width="0.5" height="15.0" fill="rgb(237,114,25)" rx="2" ry="2" />
<text  x="845.53" y="367.5" ></text>
</g>
<g >
<title>seastar::app_template::run (48,315 samples, 97.83%)</title><rect x="23.1" y="581" width="1154.4" height="15.0" fill="rgb(245,128,35)" rx="2" ry="2" />
<text  x="26.09" y="591.5" >seastar::app_template::run</text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::~vector (11 samples, 0.02%)</title><rect x="442.7" y="261" width="0.3" height="15.0" fill="rgb(234,94,24)" rx="2" ry="2" />
<text  x="445.72" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value, std::allocator&lt;cql3::raw_value&gt; &gt;::_M_range_initialize&lt;cql3::raw_value const*&gt; (86 samples, 0.17%)</title><rect x="851.7" y="453" width="2.1" height="15.0" fill="rgb(226,165,52)" rx="2" ry="2" />
<text  x="854.73" y="463.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::get_static_row (172 samples, 0.35%)</title><rect x="248.2" y="245" width="4.1" height="15.0" fill="rgb(226,63,25)" rx="2" ry="2" />
<text  x="251.16" y="255.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt;::~_Variant_storage (5 samples, 0.01%)</title><rect x="901.7" y="341" width="0.2" height="15.0" fill="rgb(207,115,18)" rx="2" ry="2" />
<text  x="904.74" y="351.5" ></text>
</g>
<g >
<title>std::make_unique&lt;empty_flat_reader, seastar::lw_shared_ptr&lt;schema const&gt;, reader_permit&gt; (98 samples, 0.20%)</title><rect x="531.2" y="277" width="2.3" height="15.0" fill="rgb(225,129,47)" rx="2" ry="2" />
<text  x="534.17" y="287.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;seastar::future&lt;void&gt; &gt;  (16 samples, 0.03%)</title><rect x="1175.1" y="469" width="0.4" height="15.0" fill="rgb(254,110,29)" rx="2" ry="2" />
<text  x="1178.12" y="479.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::move_it (54 samples, 0.11%)</title><rect x="679.0" y="469" width="1.3" height="15.0" fill="rgb(211,228,42)" rx="2" ry="2" />
<text  x="682.01" y="479.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (6 samples, 0.01%)</title><rect x="800.6" y="197" width="0.1" height="15.0" fill="rgb(211,69,9)" rx="2" ry="2" />
<text  x="803.55" y="207.5" ></text>
</g>
<g >
<title>bytes_view_hasher::update (10 samples, 0.02%)</title><rect x="742.4" y="261" width="0.3" height="15.0" fill="rgb(216,135,27)" rx="2" ry="2" />
<text  x="745.45" y="271.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;mutation_reader_merger::operator (27 samples, 0.05%)</title><rect x="263.8" y="325" width="0.6" height="15.0" fill="rgb(215,139,30)" rx="2" ry="2" />
<text  x="266.79" y="335.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (8 samples, 0.02%)</title><rect x="407.9" y="213" width="0.1" height="15.0" fill="rgb(227,101,43)" rx="2" ry="2" />
<text  x="410.86" y="223.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (12 samples, 0.02%)</title><rect x="1097.2" y="357" width="0.3" height="15.0" fill="rgb(208,77,21)" rx="2" ry="2" />
<text  x="1100.18" y="367.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_Optional_payload_base (10 samples, 0.02%)</title><rect x="744.8" y="405" width="0.3" height="15.0" fill="rgb(208,71,49)" rx="2" ry="2" />
<text  x="747.84" y="415.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (11 samples, 0.02%)</title><rect x="260.9" y="309" width="0.2" height="15.0" fill="rgb(220,54,19)" rx="2" ry="2" />
<text  x="263.87" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_List_node_header::_List_node_header (9 samples, 0.02%)</title><rect x="456.1" y="277" width="0.2" height="15.0" fill="rgb(221,181,2)" rx="2" ry="2" />
<text  x="459.10" y="287.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (23 samples, 0.05%)</title><rect x="327.2" y="181" width="0.5" height="15.0" fill="rgb(238,105,40)" rx="2" ry="2" />
<text  x="330.17" y="191.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (5 samples, 0.01%)</title><rect x="864.2" y="469" width="0.1" height="15.0" fill="rgb(227,194,44)" rx="2" ry="2" />
<text  x="867.20" y="479.5" ></text>
</g>
<g >
<title>utils::fb_utilities::get_broadcast_address (6 samples, 0.01%)</title><rect x="1095.2" y="309" width="0.1" height="15.0" fill="rgb(253,126,11)" rx="2" ry="2" />
<text  x="1098.17" y="319.5" ></text>
</g>
<g >
<title>seastar::future&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry_ptr&gt;::then_impl&lt;utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (7 samples, 0.01%)</title><rect x="731.3" y="389" width="0.2" height="15.0" fill="rgb(249,213,47)" rx="2" ry="2" />
<text  x="734.31" y="399.5" ></text>
</g>
<g >
<title>operator new (24 samples, 0.05%)</title><rect x="156.6" y="181" width="0.6" height="15.0" fill="rgb(223,81,48)" rx="2" ry="2" />
<text  x="159.60" y="191.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::size (6 samples, 0.01%)</title><rect x="945.2" y="405" width="0.1" height="15.0" fill="rgb(206,106,5)" rx="2" ry="2" />
<text  x="948.17" y="415.5" ></text>
</g>
<g >
<title>absl::container_internal::operator== (14 samples, 0.03%)</title><rect x="820.0" y="325" width="0.3" height="15.0" fill="rgb(205,150,31)" rx="2" ry="2" />
<text  x="822.98" y="335.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment (13 samples, 0.03%)</title><rect x="150.9" y="245" width="0.3" height="15.0" fill="rgb(206,10,23)" rx="2" ry="2" />
<text  x="153.92" y="255.5" ></text>
</g>
<g >
<title>operator new (7 samples, 0.01%)</title><rect x="1122.2" y="421" width="0.2" height="15.0" fill="rgb(207,6,46)" rx="2" ry="2" />
<text  x="1125.19" y="431.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (23 samples, 0.05%)</title><rect x="682.2" y="453" width="0.5" height="15.0" fill="rgb(236,225,11)" rx="2" ry="2" />
<text  x="685.17" y="463.5" ></text>
</g>
<g >
<title>ser::writer_of_query_result&lt;bytes_ostream&gt;::start_partitions (20 samples, 0.04%)</title><rect x="596.6" y="405" width="0.5" height="15.0" fill="rgb(244,175,15)" rx="2" ry="2" />
<text  x="599.63" y="415.5" ></text>
</g>
<g >
<title>database::find_uuid (223 samples, 0.45%)</title><rect x="753.8" y="389" width="5.3" height="15.0" fill="rgb(232,211,33)" rx="2" ry="2" />
<text  x="756.82" y="399.5" ></text>
</g>
<g >
<title>compound_type&lt; (8 samples, 0.02%)</title><rect x="909.2" y="389" width="0.2" height="15.0" fill="rgb(217,225,40)" rx="2" ry="2" />
<text  x="912.19" y="399.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::on_permit_destroyed (8 samples, 0.02%)</title><rect x="64.0" y="437" width="0.2" height="15.0" fill="rgb(228,196,17)" rx="2" ry="2" />
<text  x="67.00" y="447.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::get0 (13 samples, 0.03%)</title><rect x="118.2" y="373" width="0.3" height="15.0" fill="rgb(241,47,0)" rx="2" ry="2" />
<text  x="121.16" y="383.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::execute (211 samples, 0.43%)</title><rect x="686.1" y="469" width="5.1" height="15.0" fill="rgb(246,107,1)" rx="2" ry="2" />
<text  x="689.13" y="479.5" ></text>
</g>
<g >
<title>std::optional&lt;query::querier&lt; (72 samples, 0.15%)</title><rect x="617.6" y="437" width="1.8" height="15.0" fill="rgb(226,34,33)" rx="2" ry="2" />
<text  x="620.63" y="447.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (335 samples, 0.68%)</title><rect x="541.4" y="405" width="8.0" height="15.0" fill="rgb(209,11,17)" rx="2" ry="2" />
<text  x="544.39" y="415.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (5 samples, 0.01%)</title><rect x="737.0" y="341" width="0.1" height="15.0" fill="rgb(245,208,6)" rx="2" ry="2" />
<text  x="740.00" y="351.5" ></text>
</g>
<g >
<title>schema::column_at (62 samples, 0.13%)</title><rect x="201.4" y="117" width="1.5" height="15.0" fill="rgb(230,123,39)" rx="2" ry="2" />
<text  x="204.38" y="127.5" ></text>
</g>
<g >
<title>std::optional&lt;clustering_key_prefix&gt;::operator=&lt;clustering_key_prefix const&amp;&gt; (27 samples, 0.05%)</title><rect x="228.8" y="213" width="0.6" height="15.0" fill="rgb(228,107,9)" rx="2" ry="2" />
<text  x="231.76" y="223.5" ></text>
</g>
<g >
<title>absl::hash_internal::AbslHashValue&lt;absl::hash_internal::HashState&gt; (16 samples, 0.03%)</title><rect x="843.2" y="341" width="0.4" height="15.0" fill="rgb(210,146,2)" rx="2" ry="2" />
<text  x="846.18" y="351.5" ></text>
</g>
<g >
<title>seastar::chunked_fifo&lt;seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::entry, 128ul&gt;::emplace_back&lt;reader_concurrency_semaphore::entry, seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;&amp;, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;&amp;&gt; (171 samples, 0.35%)</title><rect x="1025.2" y="181" width="4.1" height="15.0" fill="rgb(247,34,47)" rx="2" ry="2" />
<text  x="1028.19" y="191.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::operator= (17 samples, 0.03%)</title><rect x="699.5" y="437" width="0.4" height="15.0" fill="rgb(224,137,9)" rx="2" ry="2" />
<text  x="702.49" y="447.5" ></text>
</g>
<g >
<title>std::function&lt;flat_mutation_reader  (8 samples, 0.02%)</title><rect x="539.7" y="405" width="0.2" height="15.0" fill="rgb(213,68,20)" rx="2" ry="2" />
<text  x="542.74" y="415.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (16 samples, 0.03%)</title><rect x="22.7" y="565" width="0.4" height="15.0" fill="rgb(222,62,44)" rx="2" ry="2" />
<text  x="25.69" y="575.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (26 samples, 0.05%)</title><rect x="220.3" y="165" width="0.6" height="15.0" fill="rgb(208,202,18)" rx="2" ry="2" />
<text  x="223.30" y="175.5" ></text>
</g>
<g >
<title>absl::hash_internal::AbslHashValue&lt;absl::hash_internal::HashState&gt; (31 samples, 0.06%)</title><rect x="836.7" y="357" width="0.7" height="15.0" fill="rgb(212,175,51)" rx="2" ry="2" />
<text  x="839.65" y="367.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::trivial_direct_move&lt;16ul&gt; (6 samples, 0.01%)</title><rect x="1027.7" y="133" width="0.1" height="15.0" fill="rgb(221,71,54)" rx="2" ry="2" />
<text  x="1030.65" y="143.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (6 samples, 0.01%)</title><rect x="617.4" y="437" width="0.1" height="15.0" fill="rgb(238,84,41)" rx="2" ry="2" />
<text  x="620.37" y="447.5" ></text>
</g>
<g >
<title>frozen_mutation::frozen_mutation (9 samples, 0.02%)</title><rect x="1141.5" y="181" width="0.2" height="15.0" fill="rgb(242,190,30)" rx="2" ry="2" />
<text  x="1144.52" y="191.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (11 samples, 0.02%)</title><rect x="268.8" y="309" width="0.2" height="15.0" fill="rgb(219,146,4)" rx="2" ry="2" />
<text  x="271.76" y="319.5" ></text>
</g>
<g >
<title>nonwrapping_interval&lt;dht::ring_position&gt;::nonwrapping_interval (5 samples, 0.01%)</title><rect x="924.5" y="389" width="0.1" height="15.0" fill="rgb(244,203,30)" rx="2" ry="2" />
<text  x="927.46" y="399.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (5,743 samples, 11.63%)</title><rect x="124.6" y="325" width="137.3" height="15.0" fill="rgb(209,0,20)" rx="2" ry="2" />
<text  x="127.64" y="335.5" >mutation_reader_m..</text>
</g>
<g >
<title>mutation_fragment::mutation_fragment (14 samples, 0.03%)</title><rect x="502.9" y="229" width="0.4" height="15.0" fill="rgb(233,156,32)" rx="2" ry="2" />
<text  x="505.93" y="239.5" ></text>
</g>
<g >
<title>database::apply_in_memory (32 samples, 0.06%)</title><rect x="1140.1" y="293" width="0.8" height="15.0" fill="rgb(208,155,16)" rx="2" ry="2" />
<text  x="1143.14" y="303.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::close (10 samples, 0.02%)</title><rect x="570.3" y="341" width="0.2" height="15.0" fill="rgb(225,56,24)" rx="2" ry="2" />
<text  x="573.28" y="351.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_create_nodes (80 samples, 0.16%)</title><rect x="546.4" y="357" width="1.9" height="15.0" fill="rgb(242,188,52)" rx="2" ry="2" />
<text  x="549.36" y="367.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::clear (9 samples, 0.02%)</title><rect x="629.6" y="485" width="0.2" height="15.0" fill="rgb(235,213,18)" rx="2" ry="2" />
<text  x="632.55" y="495.5" ></text>
</g>
<g >
<title>TLS init function for cql3::statements::select_statement::_default_parameters (6 samples, 0.01%)</title><rect x="746.2" y="405" width="0.2" height="15.0" fill="rgb(224,91,7)" rx="2" ry="2" />
<text  x="749.25" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (9 samples, 0.02%)</title><rect x="637.5" y="485" width="0.2" height="15.0" fill="rgb(231,62,51)" rx="2" ry="2" />
<text  x="640.46" y="495.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::query_state&gt;::~shared_ptr (13 samples, 0.03%)</title><rect x="665.0" y="485" width="0.3" height="15.0" fill="rgb(218,192,40)" rx="2" ry="2" />
<text  x="668.01" y="495.5" ></text>
</g>
<g >
<title>utils::fb_utilities::get_broadcast_address (6 samples, 0.01%)</title><rect x="1047.1" y="277" width="0.1" height="15.0" fill="rgb(235,179,54)" rx="2" ry="2" />
<text  x="1050.05" y="287.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (7 samples, 0.01%)</title><rect x="78.8" y="453" width="0.2" height="15.0" fill="rgb(214,147,15)" rx="2" ry="2" />
<text  x="81.79" y="463.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (7 samples, 0.01%)</title><rect x="1173.1" y="421" width="0.2" height="15.0" fill="rgb(213,142,21)" rx="2" ry="2" />
<text  x="1176.11" y="431.5" ></text>
</g>
<g >
<title>operator new (25 samples, 0.05%)</title><rect x="98.4" y="437" width="0.6" height="15.0" fill="rgb(205,79,48)" rx="2" ry="2" />
<text  x="101.45" y="447.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::~timer (49 samples, 0.10%)</title><rect x="74.1" y="389" width="1.2" height="15.0" fill="rgb(253,113,44)" rx="2" ry="2" />
<text  x="77.10" y="399.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (5 samples, 0.01%)</title><rect x="552.7" y="421" width="0.2" height="15.0" fill="rgb(230,146,27)" rx="2" ry="2" />
<text  x="555.74" y="431.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextToken (50 samples, 0.10%)</title><rect x="16.9" y="293" width="1.2" height="15.0" fill="rgb(222,106,15)" rx="2" ry="2" />
<text  x="19.93" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::~vector (5 samples, 0.01%)</title><rect x="905.8" y="357" width="0.1" height="15.0" fill="rgb(253,195,8)" rx="2" ry="2" />
<text  x="908.80" y="367.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::invoke&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (474 samples, 0.96%)</title><rect x="271.6" y="341" width="11.3" height="15.0" fill="rgb(208,138,38)" rx="2" ry="2" />
<text  x="274.62" y="351.5" ></text>
</g>
<g >
<title>std::hash&lt;auth::resource&gt;::operator (106 samples, 0.21%)</title><rect x="812.8" y="341" width="2.5" height="15.0" fill="rgb(209,167,22)" rx="2" ry="2" />
<text  x="815.76" y="351.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (32 samples, 0.06%)</title><rect x="757.8" y="325" width="0.8" height="15.0" fill="rgb(245,88,30)" rx="2" ry="2" />
<text  x="760.79" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::_M_range_initialize&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; const*&gt; (110 samples, 0.22%)</title><rect x="1114.3" y="373" width="2.6" height="15.0" fill="rgb(248,131,37)" rx="2" ry="2" />
<text  x="1117.28" y="383.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_emplace&lt;nonwrapping_interval&lt;dht::token&gt;, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; (318 samples, 0.64%)</title><rect x="1155.7" y="469" width="7.6" height="15.0" fill="rgb(253,130,19)" rx="2" ry="2" />
<text  x="1158.67" y="479.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (206 samples, 0.42%)</title><rect x="16.5" y="405" width="4.9" height="15.0" fill="rgb(205,110,24)" rx="2" ry="2" />
<text  x="19.52" y="415.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;::operator (100 samples, 0.20%)</title><rect x="723.1" y="325" width="2.4" height="15.0" fill="rgb(210,138,9)" rx="2" ry="2" />
<text  x="726.12" y="335.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (7 samples, 0.01%)</title><rect x="940.9" y="309" width="0.2" height="15.0" fill="rgb(236,44,45)" rx="2" ry="2" />
<text  x="943.92" y="319.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::digest_read_result&gt;::get0 (13 samples, 0.03%)</title><rect x="687.5" y="453" width="0.4" height="15.0" fill="rgb(235,218,35)" rx="2" ry="2" />
<text  x="690.54" y="463.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (66 samples, 0.13%)</title><rect x="1052.7" y="309" width="1.6" height="15.0" fill="rgb(213,2,53)" rx="2" ry="2" />
<text  x="1055.71" y="319.5" ></text>
</g>
<g >
<title>__strlen_avx2 (149 samples, 0.30%)</title><rect x="1012.7" y="245" width="3.6" height="15.0" fill="rgb(222,210,29)" rx="2" ry="2" />
<text  x="1015.69" y="255.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;std::_List_iterator&lt;flat_mutation_reader&gt;, mutation_reader_merger::close (668 samples, 1.35%)</title><rect x="554.6" y="357" width="15.9" height="15.0" fill="rgb(216,161,52)" rx="2" ry="2" />
<text  x="557.58" y="367.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (7 samples, 0.01%)</title><rect x="700.6" y="421" width="0.2" height="15.0" fill="rgb(209,16,21)" rx="2" ry="2" />
<text  x="703.61" y="431.5" ></text>
</g>
<g >
<title>auth::data_resource_view::table (14 samples, 0.03%)</title><rect x="813.5" y="309" width="0.3" height="15.0" fill="rgb(223,109,0)" rx="2" ry="2" />
<text  x="816.48" y="319.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;auth::resource, auth::resource, std::allocator&lt;auth::resource&gt;, std::__detail::_Identity, std::equal_to&lt;auth::resource&gt;, std::hash&lt;auth::resource&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;::find (167 samples, 0.34%)</title><rect x="811.3" y="357" width="4.0" height="15.0" fill="rgb(226,173,41)" rx="2" ry="2" />
<text  x="814.30" y="367.5" ></text>
</g>
<g >
<title>make_combined_reader (915 samples, 1.85%)</title><rect x="436.8" y="341" width="21.9" height="15.0" fill="rgb(218,21,19)" rx="2" ry="2" />
<text  x="439.79" y="351.5" >m..</text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_node (29 samples, 0.06%)</title><rect x="660.4" y="437" width="0.7" height="15.0" fill="rgb(251,167,27)" rx="2" ry="2" />
<text  x="663.42" y="447.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::forward_to (23 samples, 0.05%)</title><rect x="708.3" y="501" width="0.6" height="15.0" fill="rgb(222,92,5)" rx="2" ry="2" />
<text  x="711.33" y="511.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (483 samples, 0.98%)</title><rect x="306.9" y="213" width="11.6" height="15.0" fill="rgb(209,144,3)" rx="2" ry="2" />
<text  x="309.94" y="223.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (74 samples, 0.15%)</title><rect x="984.6" y="309" width="1.8" height="15.0" fill="rgb(234,102,10)" rx="2" ry="2" />
<text  x="987.60" y="319.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;query::result&gt;::operator= (7 samples, 0.01%)</title><rect x="53.1" y="469" width="0.2" height="15.0" fill="rgb(253,49,51)" rx="2" ry="2" />
<text  x="56.15" y="479.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (7 samples, 0.01%)</title><rect x="1030.0" y="197" width="0.2" height="15.0" fill="rgb(243,202,10)" rx="2" ry="2" />
<text  x="1033.02" y="207.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, auth::role_or_anonymous&amp;&amp;, auth::get_permissions (9 samples, 0.02%)</title><rect x="807.9" y="309" width="0.2" height="15.0" fill="rgb(245,154,27)" rx="2" ry="2" />
<text  x="810.86" y="319.5" ></text>
</g>
<g >
<title>abstract_type::bound_value_needs_to_be_reserialized (6 samples, 0.01%)</title><rect x="887.4" y="277" width="0.2" height="15.0" fill="rgb(254,133,30)" rx="2" ry="2" />
<text  x="890.45" y="287.5" ></text>
</g>
<g >
<title>operator new (19 samples, 0.04%)</title><rect x="621.8" y="389" width="0.4" height="15.0" fill="rgb(242,108,32)" rx="2" ry="2" />
<text  x="624.79" y="399.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::add_raw_update (7 samples, 0.01%)</title><rect x="19.2" y="309" width="0.2" height="15.0" fill="rgb(213,105,20)" rx="2" ry="2" />
<text  x="22.25" y="319.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (7 samples, 0.01%)</title><rect x="1064.4" y="341" width="0.2" height="15.0" fill="rgb(217,82,36)" rx="2" ry="2" />
<text  x="1067.45" y="351.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment&lt;schema const&amp;, rows_entry const&amp;&gt; (11 samples, 0.02%)</title><rect x="169.0" y="197" width="0.3" height="15.0" fill="rgb(251,23,24)" rx="2" ry="2" />
<text  x="172.03" y="207.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment&lt;schema const&amp;, rows_entry const&amp;&gt; (1,786 samples, 3.62%)</title><rect x="171.8" y="181" width="42.7" height="15.0" fill="rgb(242,75,9)" rx="2" ry="2" />
<text  x="174.80" y="191.5" >muta..</text>
</g>
<g >
<title>flat_mutation_reader::impl::pop_mutation_fragment (30 samples, 0.06%)</title><rect x="257.7" y="277" width="0.7" height="15.0" fill="rgb(229,9,37)" rx="2" ry="2" />
<text  x="260.67" y="287.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (5 samples, 0.01%)</title><rect x="714.9" y="437" width="0.1" height="15.0" fill="rgb(218,157,29)" rx="2" ry="2" />
<text  x="717.85" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::vector (16 samples, 0.03%)</title><rect x="1119.9" y="405" width="0.3" height="15.0" fill="rgb(241,192,25)" rx="2" ry="2" />
<text  x="1122.85" y="415.5" ></text>
</g>
<g >
<title>ser::serializer&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;::write_fragmented&lt;bytes_ostream, fragment_range&lt;managed_bytes_basic_view&lt; (212 samples, 0.43%)</title><rect x="354.5" y="165" width="5.1" height="15.0" fill="rgb(211,74,9)" rx="2" ry="2" />
<text  x="357.53" y="175.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::~guard (8 samples, 0.02%)</title><rect x="488.7" y="325" width="0.2" height="15.0" fill="rgb(216,29,46)" rx="2" ry="2" />
<text  x="491.71" y="335.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (11 samples, 0.02%)</title><rect x="269.7" y="341" width="0.3" height="15.0" fill="rgb(250,116,17)" rx="2" ry="2" />
<text  x="272.73" y="351.5" ></text>
</g>
<g >
<title>seastar::preempt_io_context::reset_preemption_monitor (8 samples, 0.02%)</title><rect x="1142.7" y="501" width="0.2" height="15.0" fill="rgb(232,12,33)" rx="2" ry="2" />
<text  x="1145.74" y="511.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (11 samples, 0.02%)</title><rect x="1101.6" y="389" width="0.2" height="15.0" fill="rgb(217,63,18)" rx="2" ry="2" />
<text  x="1104.57" y="399.5" ></text>
</g>
<g >
<title>range_tombstone_list::slice (173 samples, 0.35%)</title><rect x="239.8" y="213" width="4.1" height="15.0" fill="rgb(210,43,19)" rx="2" ry="2" />
<text  x="242.77" y="223.5" ></text>
</g>
<g >
<title>utils::phased_barrier::operation::~operation (10 samples, 0.02%)</title><rect x="45.1" y="485" width="0.2" height="15.0" fill="rgb(252,48,13)" rx="2" ry="2" />
<text  x="48.10" y="495.5" ></text>
</g>
<g >
<title>skip_empty_fragments&lt;managed_bytes_basic_view&lt; (6 samples, 0.01%)</title><rect x="482.4" y="197" width="0.2" height="15.0" fill="rgb(247,118,12)" rx="2" ry="2" />
<text  x="485.45" y="207.5" ></text>
</g>
<g >
<title>mutation_reader_merger::mutation_reader_merger (6 samples, 0.01%)</title><rect x="457.3" y="325" width="0.2" height="15.0" fill="rgb(252,199,23)" rx="2" ry="2" />
<text  x="460.31" y="335.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;signed char, std::char_traits&lt;signed char&gt; &gt;::substr (6 samples, 0.01%)</title><rect x="911.4" y="341" width="0.2" height="15.0" fill="rgb(247,116,20)" rx="2" ry="2" />
<text  x="914.44" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_insert&lt;flat_mutation_reader&gt; (71 samples, 0.14%)</title><rect x="443.7" y="261" width="1.7" height="15.0" fill="rgb(242,35,29)" rx="2" ry="2" />
<text  x="446.70" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (62 samples, 0.13%)</title><rect x="1114.5" y="341" width="1.5" height="15.0" fill="rgb(248,55,37)" rx="2" ry="2" />
<text  x="1117.50" y="351.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (8 samples, 0.02%)</title><rect x="622.6" y="421" width="0.2" height="15.0" fill="rgb(208,192,36)" rx="2" ry="2" />
<text  x="625.60" y="431.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (5 samples, 0.01%)</title><rect x="513.5" y="277" width="0.2" height="15.0" fill="rgb(240,145,15)" rx="2" ry="2" />
<text  x="516.53" y="287.5" ></text>
</g>
<g >
<title>database::get_reader_concurrency_semaphore (5 samples, 0.01%)</title><rect x="1017.1" y="245" width="0.1" height="15.0" fill="rgb(221,31,24)" rx="2" ry="2" />
<text  x="1020.11" y="255.5" ></text>
</g>
<g >
<title>query_result_builder::consume_end_of_partition (60 samples, 0.12%)</title><rect x="302.5" y="229" width="1.4" height="15.0" fill="rgb(226,158,45)" rx="2" ry="2" />
<text  x="305.52" y="239.5" ></text>
</g>
<g >
<title>read_simple&lt;long, managed_bytes_basic_view&lt; (141 samples, 0.29%)</title><rect x="383.1" y="149" width="3.4" height="15.0" fill="rgb(218,48,0)" rx="2" ry="2" />
<text  x="386.10" y="159.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (16 samples, 0.03%)</title><rect x="695.9" y="469" width="0.4" height="15.0" fill="rgb(238,179,2)" rx="2" ry="2" />
<text  x="698.90" y="479.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::leaf_node::free (34 samples, 0.07%)</title><rect x="406.7" y="213" width="0.8" height="15.0" fill="rgb(230,115,13)" rx="2" ry="2" />
<text  x="409.73" y="223.5" ></text>
</g>
<g >
<title>table::estimate_read_memory_cost (8 samples, 0.02%)</title><rect x="1039.6" y="261" width="0.2" height="15.0" fill="rgb(226,228,16)" rx="2" ry="2" />
<text  x="1042.57" y="271.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector (61 samples, 0.12%)</title><rect x="1165.0" y="469" width="1.5" height="15.0" fill="rgb(232,122,25)" rx="2" ry="2" />
<text  x="1168.03" y="479.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry&gt;::operator= (8 samples, 0.02%)</title><rect x="742.8" y="357" width="0.1" height="15.0" fill="rgb(213,68,7)" rx="2" ry="2" />
<text  x="745.76" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (50 samples, 0.10%)</title><rect x="713.5" y="405" width="1.2" height="15.0" fill="rgb(249,193,42)" rx="2" ry="2" />
<text  x="716.47" y="415.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take (5 samples, 0.01%)</title><rect x="688.4" y="437" width="0.1" height="15.0" fill="rgb(234,126,9)" rx="2" ry="2" />
<text  x="691.38" y="447.5" ></text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;void&gt;, database*, seastar::lw_shared_ptr&lt;schema const&gt;, frozen_mutation const&amp;, tracing::trace_state_ptr, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, seastar::bool_class&lt;db::force_sync_tag&gt; &gt;::make_stage_for_group (35 samples, 0.07%)</title><rect x="1140.1" y="405" width="0.9" height="15.0" fill="rgb(222,0,34)" rx="2" ry="2" />
<text  x="1143.14" y="415.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::remove_if&lt;row::compact_and_expire (920 samples, 1.86%)</title><rect x="369.4" y="197" width="21.9" height="15.0" fill="rgb(220,212,39)" rx="2" ry="2" />
<text  x="372.37" y="207.5" >c..</text>
</g>
<g >
<title>cql3::restrictions::single_column_restrictions::size (16 samples, 0.03%)</title><rect x="875.3" y="421" width="0.4" height="15.0" fill="rgb(209,105,3)" rx="2" ry="2" />
<text  x="878.29" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::splice (7 samples, 0.01%)</title><rect x="139.9" y="245" width="0.2" height="15.0" fill="rgb(213,165,43)" rx="2" ry="2" />
<text  x="142.93" y="255.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (47 samples, 0.10%)</title><rect x="837.8" y="405" width="1.1" height="15.0" fill="rgb(233,47,35)" rx="2" ry="2" />
<text  x="840.75" y="415.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (7 samples, 0.01%)</title><rect x="1098.9" y="341" width="0.2" height="15.0" fill="rgb(231,163,28)" rx="2" ry="2" />
<text  x="1101.92" y="351.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::execute (469 samples, 0.95%)</title><rect x="683.2" y="501" width="11.2" height="15.0" fill="rgb(216,86,9)" rx="2" ry="2" />
<text  x="686.17" y="511.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;tracking_allocator&lt;mutation_fragment&gt; &gt;::_S_destroy&lt;tracking_allocator&lt;mutation_fragment&gt;, mutation_fragment&gt; (9 samples, 0.02%)</title><rect x="137.3" y="245" width="0.2" height="15.0" fill="rgb(221,64,43)" rx="2" ry="2" />
<text  x="140.28" y="255.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (9 samples, 0.02%)</title><rect x="1029.0" y="149" width="0.2" height="15.0" fill="rgb(253,196,9)" rx="2" ry="2" />
<text  x="1031.96" y="159.5" ></text>
</g>
<g >
<title>seastar::memory::allocate_aligned (5 samples, 0.01%)</title><rect x="199.8" y="85" width="0.1" height="15.0" fill="rgb(231,92,41)" rx="2" ry="2" />
<text  x="202.75" y="95.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_Optional_payload_base (17 samples, 0.03%)</title><rect x="1041.8" y="261" width="0.4" height="15.0" fill="rgb(226,101,5)" rx="2" ry="2" />
<text  x="1044.84" y="271.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::digest_read_result&gt;::set&lt;service::digest_read_result&gt; (11 samples, 0.02%)</title><rect x="701.0" y="405" width="0.3" height="15.0" fill="rgb(223,194,2)" rx="2" ry="2" />
<text  x="703.99" y="415.5" ></text>
</g>
<g >
<title>absl::container_internal::operator== (12 samples, 0.02%)</title><rect x="834.2" y="389" width="0.3" height="15.0" fill="rgb(233,107,31)" rx="2" ry="2" />
<text  x="837.19" y="399.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::~small_vector (13 samples, 0.03%)</title><rect x="579.5" y="357" width="0.3" height="15.0" fill="rgb(212,163,6)" rx="2" ry="2" />
<text  x="582.45" y="367.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (238 samples, 0.48%)</title><rect x="401.0" y="213" width="5.7" height="15.0" fill="rgb(228,87,51)" rx="2" ry="2" />
<text  x="404.05" y="223.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_Optional_payload_base (5 samples, 0.01%)</title><rect x="1095.8" y="341" width="0.1" height="15.0" fill="rgb(231,186,43)" rx="2" ry="2" />
<text  x="1098.79" y="351.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (154 samples, 0.31%)</title><rect x="413.0" y="309" width="3.7" height="15.0" fill="rgb(224,122,37)" rx="2" ry="2" />
<text  x="416.04" y="319.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::EqualElement&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (32 samples, 0.06%)</title><rect x="755.7" y="325" width="0.8" height="15.0" fill="rgb(233,196,37)" rx="2" ry="2" />
<text  x="758.71" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::vector (5 samples, 0.01%)</title><rect x="907.0" y="373" width="0.1" height="15.0" fill="rgb(230,52,53)" rx="2" ry="2" />
<text  x="909.99" y="383.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_construct&lt;interval_bound&lt;dht::ring_position&gt; const&amp;&gt; (29 samples, 0.06%)</title><rect x="609.8" y="437" width="0.7" height="15.0" fill="rgb(228,65,26)" rx="2" ry="2" />
<text  x="612.80" y="447.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (9 samples, 0.02%)</title><rect x="424.6" y="405" width="0.2" height="15.0" fill="rgb(211,138,17)" rx="2" ry="2" />
<text  x="427.58" y="415.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::free (14 samples, 0.03%)</title><rect x="406.4" y="197" width="0.3" height="15.0" fill="rgb(225,4,0)" rx="2" ry="2" />
<text  x="409.40" y="207.5" ></text>
</g>
<g >
<title>logalloc::segment_pool::refill_emergency_reserve (5 samples, 0.01%)</title><rect x="529.4" y="293" width="0.1" height="15.0" fill="rgb(215,214,5)" rx="2" ry="2" />
<text  x="532.37" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (9 samples, 0.02%)</title><rect x="639.6" y="485" width="0.2" height="15.0" fill="rgb(224,117,28)" rx="2" ry="2" />
<text  x="642.61" y="495.5" ></text>
</g>
<g >
<title>operator delete (29 samples, 0.06%)</title><rect x="803.2" y="245" width="0.7" height="15.0" fill="rgb(215,192,52)" rx="2" ry="2" />
<text  x="806.21" y="255.5" ></text>
</g>
<g >
<title>seastar::deferred_action&lt;table::query (10 samples, 0.02%)</title><rect x="79.0" y="453" width="0.2" height="15.0" fill="rgb(215,203,6)" rx="2" ry="2" />
<text  x="81.98" y="463.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;enum_set&lt;super_enum&lt;auth::permission,  (10 samples, 0.02%)</title><rect x="805.3" y="277" width="0.2" height="15.0" fill="rgb(238,12,35)" rx="2" ry="2" />
<text  x="808.31" y="287.5" ></text>
</g>
<g >
<title>read_simple&lt;unsigned short, managed_bytes_basic_view&lt; (7 samples, 0.01%)</title><rect x="913.9" y="341" width="0.1" height="15.0" fill="rgb(247,160,16)" rx="2" ry="2" />
<text  x="916.85" y="351.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (8 samples, 0.02%)</title><rect x="588.7" y="405" width="0.2" height="15.0" fill="rgb(228,14,16)" rx="2" ry="2" />
<text  x="591.67" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (19 samples, 0.04%)</title><rect x="40.8" y="469" width="0.5" height="15.0" fill="rgb(228,61,30)" rx="2" ry="2" />
<text  x="43.80" y="479.5" ></text>
</g>
<g >
<title>std::optional&lt;reader_concurrency_semaphore::entry&gt;::optional&lt;reader_concurrency_semaphore::entry, true&gt; (23 samples, 0.05%)</title><rect x="1027.8" y="149" width="0.5" height="15.0" fill="rgb(207,204,36)" rx="2" ry="2" />
<text  x="1030.79" y="159.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (14 samples, 0.03%)</title><rect x="591.0" y="389" width="0.3" height="15.0" fill="rgb(210,11,33)" rx="2" ry="2" />
<text  x="593.99" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (8 samples, 0.02%)</title><rect x="612.7" y="405" width="0.2" height="15.0" fill="rgb(243,136,29)" rx="2" ry="2" />
<text  x="615.66" y="415.5" ></text>
</g>
<g >
<title>db::block_for (18 samples, 0.04%)</title><rect x="1062.2" y="341" width="0.5" height="15.0" fill="rgb(205,75,4)" rx="2" ry="2" />
<text  x="1065.25" y="351.5" ></text>
</g>
<g >
<title>ser::qr_clustered_row__cells&lt;bytes_ostream&gt;::start_cells (27 samples, 0.05%)</title><rect x="331.3" y="181" width="0.7" height="15.0" fill="rgb(253,13,44)" rx="2" ry="2" />
<text  x="334.33" y="191.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::clear (5 samples, 0.01%)</title><rect x="810.4" y="277" width="0.1" height="15.0" fill="rgb(241,130,20)" rx="2" ry="2" />
<text  x="813.40" y="287.5" ></text>
</g>
<g >
<title>operator new (52 samples, 0.11%)</title><rect x="847.3" y="357" width="1.3" height="15.0" fill="rgb(241,198,14)" rx="2" ry="2" />
<text  x="850.31" y="367.5" ></text>
</g>
<g >
<title>global_schema_ptr::get (7 samples, 0.01%)</title><rect x="1036.5" y="261" width="0.2" height="15.0" fill="rgb(244,88,33)" rx="2" ry="2" />
<text  x="1039.51" y="271.5" ></text>
</g>
<g >
<title>std::__make_heap&lt;__gnu_cxx::__normal_iterator&lt;boost::iterator_range&lt;boost::intrusive::tree_iterator&lt;boost::intrusive::mhtraits&lt;range_tombstone_entry, boost::intrusive::set_member_hook&lt;boost::intrusive::link_mode&lt; (5 samples, 0.01%)</title><rect x="243.9" y="213" width="0.1" height="15.0" fill="rgb(219,36,23)" rx="2" ry="2" />
<text  x="246.91" y="223.5" ></text>
</g>
<g >
<title>nonwrapping_interval&lt;clustering_key_prefix&gt;::nonwrapping_interval (62 samples, 0.13%)</title><rect x="1110.4" y="373" width="1.5" height="15.0" fill="rgb(234,213,19)" rx="2" ry="2" />
<text  x="1113.41" y="383.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;::operator== (21 samples, 0.04%)</title><rect x="722.4" y="309" width="0.5" height="15.0" fill="rgb(231,111,22)" rx="2" ry="2" />
<text  x="725.38" y="319.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (5 samples, 0.01%)</title><rect x="18.7" y="325" width="0.1" height="15.0" fill="rgb(252,175,36)" rx="2" ry="2" />
<text  x="21.72" y="335.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (26 samples, 0.05%)</title><rect x="607.7" y="437" width="0.6" height="15.0" fill="rgb(229,211,50)" rx="2" ry="2" />
<text  x="610.67" y="447.5" ></text>
</g>
<g >
<title>operator delete (17 samples, 0.03%)</title><rect x="586.9" y="405" width="0.4" height="15.0" fill="rgb(221,217,12)" rx="2" ry="2" />
<text  x="589.88" y="415.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (16 samples, 0.03%)</title><rect x="1104.3" y="389" width="0.4" height="15.0" fill="rgb(248,76,5)" rx="2" ry="2" />
<text  x="1107.30" y="399.5" ></text>
</g>
<g >
<title>row::row (6 samples, 0.01%)</title><rect x="251.1" y="213" width="0.2" height="15.0" fill="rgb(226,46,6)" rx="2" ry="2" />
<text  x="254.15" y="223.5" ></text>
</g>
<g >
<title>TLS init function for cql3::query_options::specific_options::DEFAULT (6 samples, 0.01%)</title><rect x="712.5" y="469" width="0.1" height="15.0" fill="rgb(253,179,30)" rx="2" ry="2" />
<text  x="715.46" y="479.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (5 samples, 0.01%)</title><rect x="72.8" y="389" width="0.1" height="15.0" fill="rgb(207,67,49)" rx="2" ry="2" />
<text  x="75.81" y="399.5" ></text>
</g>
<g >
<title>boost::intrusive::bstree_impl&lt;boost::intrusive::mhtraits&lt;range_tombstone_entry, boost::intrusive::set_member_hook&lt;boost::intrusive::link_mode&lt; (13 samples, 0.03%)</title><rect x="568.1" y="277" width="0.3" height="15.0" fill="rgb(228,146,10)" rx="2" ry="2" />
<text  x="571.08" y="287.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (11,451 samples, 23.19%)</title><rect x="866.3" y="453" width="273.5" height="15.0" fill="rgb(248,218,37)" rx="2" ry="2" />
<text  x="869.26" y="463.5" >seastar::noncopyable_function&lt;seasta..</text>
</g>
<g >
<title>[[vdso]] (257 samples, 0.52%)</title><rect x="1179.1" y="613" width="6.1" height="15.0" fill="rgb(208,85,9)" rx="2" ry="2" />
<text  x="1182.11" y="623.5" ></text>
</g>
<g >
<title>reader_permit::set_max_result_size (5 samples, 0.01%)</title><rect x="66.6" y="453" width="0.1" height="15.0" fill="rgb(254,150,2)" rx="2" ry="2" />
<text  x="69.55" y="463.5" ></text>
</g>
<g >
<title>auth::data_resource_view::data_resource_view (5 samples, 0.01%)</title><rect x="797.7" y="133" width="0.2" height="15.0" fill="rgb(245,150,9)" rx="2" ry="2" />
<text  x="800.73" y="143.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::get_promise (6 samples, 0.01%)</title><rect x="963.5" y="373" width="0.1" height="15.0" fill="rgb(209,193,36)" rx="2" ry="2" />
<text  x="966.50" y="383.5" ></text>
</g>
<g >
<title>locator::token_metadata_impl::first_token_index (25 samples, 0.05%)</title><rect x="1084.7" y="277" width="0.6" height="15.0" fill="rgb(224,184,11)" rx="2" ry="2" />
<text  x="1087.71" y="287.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::make_ready&lt; (5 samples, 0.01%)</title><rect x="81.5" y="453" width="0.2" height="15.0" fill="rgb(205,212,46)" rx="2" ry="2" />
<text  x="84.53" y="463.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (7 samples, 0.01%)</title><rect x="18.9" y="325" width="0.1" height="15.0" fill="rgb(235,173,29)" rx="2" ry="2" />
<text  x="21.86" y="335.5" ></text>
</g>
<g >
<title>cql3::query_options::query_options (196 samples, 0.40%)</title><rect x="844.7" y="437" width="4.7" height="15.0" fill="rgb(219,126,37)" rx="2" ry="2" />
<text  x="847.71" y="447.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::visit&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (304 samples, 0.62%)</title><rect x="400.9" y="229" width="7.2" height="15.0" fill="rgb(214,77,11)" rx="2" ry="2" />
<text  x="403.88" y="239.5" ></text>
</g>
<g >
<title>dht::tri_compare (119 samples, 0.24%)</title><rect x="1081.8" y="229" width="2.9" height="15.0" fill="rgb(250,59,44)" rx="2" ry="2" />
<text  x="1084.82" y="239.5" ></text>
</g>
<g >
<title>table::query (22,552 samples, 45.66%)</title><rect x="84.7" y="453" width="538.8" height="15.0" fill="rgb(247,77,35)" rx="2" ry="2" />
<text  x="87.69" y="463.5" >table::query</text>
</g>
<g >
<title>locator::token_metadata::first_token (5 samples, 0.01%)</title><rect x="1091.8" y="293" width="0.1" height="15.0" fill="rgb(219,190,9)" rx="2" ry="2" />
<text  x="1094.78" y="303.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (10 samples, 0.02%)</title><rect x="831.0" y="389" width="0.3" height="15.0" fill="rgb(219,128,39)" rx="2" ry="2" />
<text  x="834.02" y="399.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_last_fragment_kind, 4ul&gt;::small_vector (5 samples, 0.01%)</title><rect x="456.5" y="277" width="0.1" height="15.0" fill="rgb(215,63,42)" rx="2" ry="2" />
<text  x="459.48" y="287.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::allocate (112 samples, 0.23%)</title><rect x="278.2" y="293" width="2.7" height="15.0" fill="rgb(218,158,48)" rx="2" ry="2" />
<text  x="281.22" y="303.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (19 samples, 0.04%)</title><rect x="794.6" y="117" width="0.4" height="15.0" fill="rgb(250,192,24)" rx="2" ry="2" />
<text  x="797.56" y="127.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_state&lt;std::tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;, seastar::future&lt;void&gt; &gt;::do_with_state&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const&amp;, auth::resource&gt; (75 samples, 0.15%)</title><rect x="762.3" y="373" width="1.8" height="15.0" fill="rgb(252,135,11)" rx="2" ry="2" />
<text  x="765.28" y="383.5" ></text>
</g>
<g >
<title>skip_empty_fragments&lt;managed_bytes_basic_view&lt; (8 samples, 0.02%)</title><rect x="893.9" y="245" width="0.2" height="15.0" fill="rgb(226,17,5)" rx="2" ry="2" />
<text  x="896.88" y="255.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (24 samples, 0.05%)</title><rect x="462.7" y="309" width="0.6" height="15.0" fill="rgb(246,121,27)" rx="2" ry="2" />
<text  x="465.69" y="319.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_M_reset (5 samples, 0.01%)</title><rect x="590.8" y="389" width="0.1" height="15.0" fill="rgb(215,4,15)" rx="2" ry="2" />
<text  x="593.75" y="399.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (5 samples, 0.01%)</title><rect x="891.6" y="261" width="0.1" height="15.0" fill="rgb(216,73,17)" rx="2" ry="2" />
<text  x="894.56" y="271.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_result_local (1,951 samples, 3.95%)</title><rect x="1000.2" y="293" width="46.7" height="15.0" fill="rgb(214,140,40)" rx="2" ry="2" />
<text  x="1003.25" y="303.5" >serv..</text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_token (22 samples, 0.04%)</title><rect x="646.4" y="437" width="0.6" height="15.0" fill="rgb(233,155,1)" rx="2" ry="2" />
<text  x="649.45" y="447.5" ></text>
</g>
<g >
<title>operator delete (32 samples, 0.06%)</title><rect x="1121.4" y="421" width="0.8" height="15.0" fill="rgb(231,82,13)" rx="2" ry="2" />
<text  x="1124.43" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (6 samples, 0.01%)</title><rect x="43.7" y="469" width="0.1" height="15.0" fill="rgb(244,173,31)" rx="2" ry="2" />
<text  x="46.66" y="479.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (78 samples, 0.16%)</title><rect x="489.0" y="325" width="1.9" height="15.0" fill="rgb(224,10,19)" rx="2" ry="2" />
<text  x="492.02" y="335.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (6 samples, 0.01%)</title><rect x="902.8" y="341" width="0.2" height="15.0" fill="rgb(225,109,31)" rx="2" ry="2" />
<text  x="905.84" y="351.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_Optional_payload_base (12 samples, 0.02%)</title><rect x="1116.6" y="341" width="0.3" height="15.0" fill="rgb(229,78,28)" rx="2" ry="2" />
<text  x="1119.63" y="351.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::set&lt;&gt; (16 samples, 0.03%)</title><rect x="32.5" y="469" width="0.3" height="15.0" fill="rgb(207,215,10)" rx="2" ry="2" />
<text  x="35.46" y="479.5" ></text>
</g>
<g >
<title>basic_atomic_cell_view&lt; (159 samples, 0.32%)</title><rect x="345.2" y="165" width="3.8" height="15.0" fill="rgb(214,73,12)" rx="2" ry="2" />
<text  x="348.23" y="175.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::check_access (3,156 samples, 6.39%)</title><rect x="750.7" y="421" width="75.4" height="15.0" fill="rgb(232,90,54)" rx="2" ry="2" />
<text  x="753.67" y="431.5" >cql3::st..</text>
</g>
<g >
<title>logalloc::basic_region_impl::set_reclaiming_enabled (6 samples, 0.01%)</title><rect x="530.4" y="309" width="0.1" height="15.0" fill="rgb(232,25,7)" rx="2" ry="2" />
<text  x="533.40" y="319.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_prepared (4,276 samples, 8.66%)</title><rect x="726.6" y="437" width="102.1" height="15.0" fill="rgb(249,31,23)" rx="2" ry="2" />
<text  x="729.56" y="447.5" >cql3::query_..</text>
</g>
<g >
<title>cql3::selection::simple_selection::is_aggregate (25 samples, 0.05%)</title><rect x="867.5" y="437" width="0.6" height="15.0" fill="rgb(233,10,30)" rx="2" ry="2" />
<text  x="870.52" y="447.5" ></text>
</g>
<g >
<title>database::find_column_family (36 samples, 0.07%)</title><rect x="1016.3" y="245" width="0.8" height="15.0" fill="rgb(242,177,50)" rx="2" ry="2" />
<text  x="1019.25" y="255.5" ></text>
</g>
<g >
<title>write_cell&lt;ser::qr_clustered_row__cells__cells&lt;bytes_ostream&gt; &gt; (5 samples, 0.01%)</title><rect x="682.4" y="261" width="0.1" height="15.0" fill="rgb(208,179,39)" rx="2" ry="2" />
<text  x="685.38" y="271.5" ></text>
</g>
<g >
<title>seastar::internal::repeater&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (20 samples, 0.04%)</title><rect x="858.7" y="501" width="0.4" height="15.0" fill="rgb(247,191,3)" rx="2" ry="2" />
<text  x="861.66" y="511.5" ></text>
</g>
<g >
<title>table::make_reader (4,483 samples, 9.08%)</title><rect x="430.5" y="357" width="107.1" height="15.0" fill="rgb(217,127,33)" rx="2" ry="2" />
<text  x="433.46" y="367.5" >table::make_r..</text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::timer (16 samples, 0.03%)</title><rect x="1027.4" y="149" width="0.4" height="15.0" fill="rgb(205,222,31)" rx="2" ry="2" />
<text  x="1030.41" y="159.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (64 samples, 0.13%)</title><rect x="778.9" y="261" width="1.5" height="15.0" fill="rgb(253,150,24)" rx="2" ry="2" />
<text  x="781.88" y="271.5" ></text>
</g>
<g >
<title>antlr3::CyclicDFA&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, cql3_parser::CqlLexer&gt;::predict&lt;cql3_parser::CqlLexerCyclicDFA44&gt; (8 samples, 0.02%)</title><rect x="17.8" y="245" width="0.2" height="15.0" fill="rgb(219,193,52)" rx="2" ry="2" />
<text  x="20.84" y="255.5" ></text>
</g>
<g >
<title>managed_bytes::external_memory_usage (19 samples, 0.04%)</title><rect x="505.4" y="213" width="0.4" height="15.0" fill="rgb(243,176,8)" rx="2" ry="2" />
<text  x="508.36" y="223.5" ></text>
</g>
<g >
<title>seastar::gate::enter (5 samples, 0.01%)</title><rect x="604.8" y="437" width="0.1" height="15.0" fill="rgb(225,60,38)" rx="2" ry="2" />
<text  x="607.78" y="447.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt;::_M_reset (5 samples, 0.01%)</title><rect x="569.7" y="309" width="0.1" height="15.0" fill="rgb(249,106,5)" rx="2" ry="2" />
<text  x="572.70" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (21 samples, 0.04%)</title><rect x="1033.9" y="181" width="0.5" height="15.0" fill="rgb(248,92,35)" rx="2" ry="2" />
<text  x="1036.93" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::vector (71 samples, 0.14%)</title><rect x="904.1" y="357" width="1.7" height="15.0" fill="rgb(234,62,1)" rx="2" ry="2" />
<text  x="907.10" y="367.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (97 samples, 0.20%)</title><rect x="301.6" y="245" width="2.3" height="15.0" fill="rgb(251,145,47)" rx="2" ry="2" />
<text  x="304.63" y="255.5" ></text>
</g>
<g >
<title>db::system_keyspace_make (5 samples, 0.01%)</title><rect x="45.4" y="501" width="0.2" height="15.0" fill="rgb(219,111,20)" rx="2" ry="2" />
<text  x="48.43" y="511.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_prepared (642 samples, 1.30%)</title><rect x="729.7" y="421" width="15.4" height="15.0" fill="rgb(237,85,32)" rx="2" ry="2" />
<text  x="732.74" y="431.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_destroy_data_aux (15 samples, 0.03%)</title><rect x="616.2" y="373" width="0.3" height="15.0" fill="rgb(217,9,35)" rx="2" ry="2" />
<text  x="619.18" y="383.5" ></text>
</g>
<g >
<title>query::partition_slice::row_ranges (17 samples, 0.03%)</title><rect x="520.1" y="325" width="0.4" height="15.0" fill="rgb(233,97,28)" rx="2" ry="2" />
<text  x="523.13" y="335.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::clear (16 samples, 0.03%)</title><rect x="956.8" y="389" width="0.4" height="15.0" fill="rgb(226,141,17)" rx="2" ry="2" />
<text  x="959.83" y="399.5" ></text>
</g>
<g >
<title>service::abstract_read_resolver::abstract_read_resolver (97 samples, 0.20%)</title><rect x="987.8" y="293" width="2.3" height="15.0" fill="rgb(233,200,0)" rx="2" ry="2" />
<text  x="990.80" y="303.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, enum_set&lt;super_enum&lt;auth::permission,  (693 samples, 1.40%)</title><rect x="784.5" y="245" width="16.6" height="15.0" fill="rgb(229,173,53)" rx="2" ry="2" />
<text  x="787.55" y="255.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (189 samples, 0.38%)</title><rect x="738.2" y="341" width="4.5" height="15.0" fill="rgb(223,135,14)" rx="2" ry="2" />
<text  x="741.22" y="351.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (10 samples, 0.02%)</title><rect x="174.2" y="133" width="0.2" height="15.0" fill="rgb(239,90,10)" rx="2" ry="2" />
<text  x="177.19" y="143.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (65 samples, 0.13%)</title><rect x="278.8" y="261" width="1.6" height="15.0" fill="rgb(249,84,47)" rx="2" ry="2" />
<text  x="281.81" y="271.5" ></text>
</g>
<g >
<title>row_marker::compact_and_expire (8 samples, 0.02%)</title><rect x="391.3" y="213" width="0.2" height="15.0" fill="rgb(211,196,10)" rx="2" ry="2" />
<text  x="394.35" y="223.5" ></text>
</g>
<g >
<title>service::client_state::set_keyspace (146 samples, 0.30%)</title><rect x="840.5" y="421" width="3.5" height="15.0" fill="rgb(248,214,47)" rx="2" ry="2" />
<text  x="843.50" y="431.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (6 samples, 0.01%)</title><rect x="954.2" y="405" width="0.1" height="15.0" fill="rgb(209,213,49)" rx="2" ry="2" />
<text  x="957.21" y="415.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::impl (24 samples, 0.05%)</title><rect x="531.8" y="245" width="0.6" height="15.0" fill="rgb(213,119,27)" rx="2" ry="2" />
<text  x="534.79" y="255.5" ></text>
</g>
<g >
<title>_ZN7seastar8futurizeIvE22satisfy_with_result_ofIZZNS_6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE14then_impl_nrvoIZNS9_14discard_resultEvEUlDpOT_E_NS3_IvEEEET0_OT_ENKUlONS_8internal22promise_base_with_typeIvEERSE_ONS_12future_stateIS8_EEE_clESM_SN_SQ_EUlvE_EEvSM_SI_ (5 samples, 0.01%)</title><rect x="31.4" y="485" width="0.2" height="15.0" fill="rgb(220,156,20)" rx="2" ry="2" />
<text  x="34.43" y="495.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (38 samples, 0.08%)</title><rect x="1141.1" y="373" width="0.9" height="15.0" fill="rgb(228,130,48)" rx="2" ry="2" />
<text  x="1144.07" y="383.5" ></text>
</g>
<g >
<title>validation::validate_column_family (334 samples, 0.68%)</title><rect x="817.7" y="389" width="8.0" height="15.0" fill="rgb(213,183,3)" rx="2" ry="2" />
<text  x="820.73" y="399.5" ></text>
</g>
<g >
<title>_ZSt5applyIZN7seastar8internal12do_with_implIRKNS0_13basic_sstringIcjLj15ELb1EEEN4auth8resourceEJZNK7service12client_state24has_column_family_accessERK8databaseS6_S6_NS7_10permissionENS7_12command_desc4typeEE3$_4EEEDaOT_OT0_DpOT1_EUlDpOT_E_St5tupleIJS6_OS8_EEEDcSJ_SL_ (102 samples, 0.21%)</title><rect x="761.7" y="389" width="2.4" height="15.0" fill="rgb(248,175,9)" rx="2" ry="2" />
<text  x="764.66" y="399.5" ></text>
</g>
<g >
<title>dht::tri_compare (6 samples, 0.01%)</title><rect x="487.7" y="277" width="0.1" height="15.0" fill="rgb(253,19,54)" rx="2" ry="2" />
<text  x="490.71" y="287.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::update_and_check (12 samples, 0.02%)</title><rect x="329.1" y="181" width="0.3" height="15.0" fill="rgb(243,203,17)" rx="2" ry="2" />
<text  x="332.11" y="191.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (57 samples, 0.12%)</title><rect x="912.5" y="341" width="1.4" height="15.0" fill="rgb(251,69,46)" rx="2" ry="2" />
<text  x="915.49" y="351.5" ></text>
</g>
<g >
<title>bplus::tree&lt;long, intrusive_array&lt;memtable_entry&gt;, dht::raw_token_less_comparator, 16ul,  (500 samples, 1.01%)</title><rect x="463.9" y="309" width="12.0" height="15.0" fill="rgb(230,85,28)" rx="2" ry="2" />
<text  x="466.91" y="319.5" ></text>
</g>
<g >
<title>partition_snapshot::slide_to_oldest (27 samples, 0.05%)</title><rect x="565.8" y="277" width="0.7" height="15.0" fill="rgb(238,126,52)" rx="2" ry="2" />
<text  x="568.83" y="287.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (19 samples, 0.04%)</title><rect x="756.0" y="309" width="0.5" height="15.0" fill="rgb(237,89,23)" rx="2" ry="2" />
<text  x="759.02" y="319.5" ></text>
</g>
<g >
<title>flat_mutation_reader::peek (7,116 samples, 14.41%)</title><rect x="115.9" y="405" width="170.0" height="15.0" fill="rgb(247,216,26)" rx="2" ry="2" />
<text  x="118.89" y="415.5" >flat_mutation_reader::..</text>
</g>
<g >
<title>query::result_memory_accounter::result_memory_accounter (12 samples, 0.02%)</title><rect x="596.3" y="405" width="0.3" height="15.0" fill="rgb(234,91,11)" rx="2" ry="2" />
<text  x="599.34" y="415.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;flat_mutation_reader::peek (6 samples, 0.01%)</title><rect x="423.0" y="405" width="0.2" height="15.0" fill="rgb(214,58,50)" rx="2" ry="2" />
<text  x="426.03" y="415.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit_slot&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::memory_usage&lt;row::external_memory_usage (124 samples, 0.25%)</title><rect x="208.4" y="117" width="3.0" height="15.0" fill="rgb(224,120,29)" rx="2" ry="2" />
<text  x="211.40" y="127.5" ></text>
</g>
<g >
<title>posix_memalign (83 samples, 0.17%)</title><rect x="197.8" y="85" width="2.0" height="15.0" fill="rgb(209,19,17)" rx="2" ry="2" />
<text  x="200.77" y="95.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::fetch (5,943 samples, 12.03%)</title><rect x="123.2" y="341" width="142.0" height="15.0" fill="rgb(223,118,17)" rx="2" ry="2" />
<text  x="126.20" y="351.5" >mutation_fragment_..</text>
</g>
<g >
<title>query::result::builder::build (27 samples, 0.05%)</title><rect x="62.6" y="453" width="0.6" height="15.0" fill="rgb(249,91,17)" rx="2" ry="2" />
<text  x="65.56" y="463.5" ></text>
</g>
<g >
<title>utils::approx_exponential_histogram&lt;512ul, 33554432ul, 4ul&gt;::add (9 samples, 0.02%)</title><rect x="672.7" y="469" width="0.2" height="15.0" fill="rgb(214,92,37)" rx="2" ry="2" />
<text  x="675.70" y="479.5" ></text>
</g>
<g >
<title>auth::data_resource_view::table (6 samples, 0.01%)</title><rect x="768.8" y="357" width="0.2" height="15.0" fill="rgb(231,116,44)" rx="2" ry="2" />
<text  x="771.85" y="367.5" ></text>
</g>
<g >
<title>mutation_querier::query_static_row (32 samples, 0.06%)</title><rect x="328.1" y="165" width="0.7" height="15.0" fill="rgb(217,7,30)" rx="2" ry="2" />
<text  x="331.08" y="175.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (5 samples, 0.01%)</title><rect x="610.4" y="389" width="0.1" height="15.0" fill="rgb(237,71,15)" rx="2" ry="2" />
<text  x="613.37" y="399.5" ></text>
</g>
<g >
<title>position_in_partition_view::for_range_end (12 samples, 0.02%)</title><rect x="232.5" y="245" width="0.3" height="15.0" fill="rgb(234,218,2)" rx="2" ry="2" />
<text  x="235.51" y="255.5" ></text>
</g>
<g >
<title>database::find_schema (83 samples, 0.17%)</title><rect x="751.8" y="389" width="2.0" height="15.0" fill="rgb(250,186,52)" rx="2" ry="2" />
<text  x="754.84" y="399.5" ></text>
</g>
<g >
<title>std::hash&lt;auth::resource&gt;::hash_data (91 samples, 0.18%)</title><rect x="813.1" y="325" width="2.2" height="15.0" fill="rgb(220,125,38)" rx="2" ry="2" />
<text  x="816.10" y="335.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::emplace_back&lt;mutation_fragment&gt; (16 samples, 0.03%)</title><rect x="259.4" y="277" width="0.4" height="15.0" fill="rgb(243,66,45)" rx="2" ry="2" />
<text  x="262.44" y="287.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::take_value (11 samples, 0.02%)</title><rect x="271.4" y="341" width="0.2" height="15.0" fill="rgb(214,13,48)" rx="2" ry="2" />
<text  x="274.36" y="351.5" ></text>
</g>
<g >
<title>query::querier_base::close (7 samples, 0.01%)</title><rect x="62.2" y="453" width="0.1" height="15.0" fill="rgb(235,112,52)" rx="2" ry="2" />
<text  x="65.16" y="463.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::pop_mutation_fragment (47 samples, 0.10%)</title><rect x="136.2" y="245" width="1.1" height="15.0" fill="rgb(247,117,36)" rx="2" ry="2" />
<text  x="139.15" y="255.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (11 samples, 0.02%)</title><rect x="1016.9" y="197" width="0.2" height="15.0" fill="rgb(215,162,48)" rx="2" ry="2" />
<text  x="1019.85" y="207.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_next (750 samples, 1.52%)</title><rect x="127.5" y="309" width="17.9" height="15.0" fill="rgb(237,73,13)" rx="2" ry="2" />
<text  x="130.48" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::at (70 samples, 0.14%)</title><rect x="1052.6" y="325" width="1.7" height="15.0" fill="rgb(208,18,35)" rx="2" ry="2" />
<text  x="1055.62" y="335.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;nonwrapping_interval&lt;dht::ring_position&gt; const*, nonwrapping_interval&lt;dht::ring_position&gt;*&gt; (53 samples, 0.11%)</title><rect x="939.8" y="373" width="1.3" height="15.0" fill="rgb(224,212,5)" rx="2" ry="2" />
<text  x="942.82" y="383.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (40 samples, 0.08%)</title><rect x="481.5" y="197" width="0.9" height="15.0" fill="rgb(250,32,51)" rx="2" ry="2" />
<text  x="484.49" y="207.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_restrictions::size (7 samples, 0.01%)</title><rect x="647.4" y="453" width="0.1" height="15.0" fill="rgb(222,58,24)" rx="2" ry="2" />
<text  x="650.38" y="463.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_wrapped_common&lt;false, seastar::future&lt;void&gt;, seastar::future&lt;void&gt;::handle_exception&lt;service::abstract_read_executor::execute (13 samples, 0.03%)</title><rect x="688.2" y="453" width="0.3" height="15.0" fill="rgb(224,106,33)" rx="2" ry="2" />
<text  x="691.19" y="463.5" ></text>
</g>
<g >
<title>list_reader_selector::create_new_readers (9 samples, 0.02%)</title><rect x="441.2" y="293" width="0.2" height="15.0" fill="rgb(215,223,6)" rx="2" ry="2" />
<text  x="444.19" y="303.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (9 samples, 0.02%)</title><rect x="577.2" y="341" width="0.2" height="15.0" fill="rgb(240,138,10)" rx="2" ry="2" />
<text  x="580.16" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (52 samples, 0.11%)</title><rect x="389.4" y="149" width="1.3" height="15.0" fill="rgb(233,48,44)" rx="2" ry="2" />
<text  x="392.41" y="159.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::make_partition_slice (644 samples, 1.30%)</title><rect x="1105.7" y="421" width="15.4" height="15.0" fill="rgb(252,106,9)" rx="2" ry="2" />
<text  x="1108.71" y="431.5" ></text>
</g>
<g >
<title>utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;::lru_entry::touch (25 samples, 0.05%)</title><rect x="725.6" y="405" width="0.6" height="15.0" fill="rgb(254,128,2)" rx="2" ry="2" />
<text  x="728.63" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (25 samples, 0.05%)</title><rect x="982.2" y="261" width="0.6" height="15.0" fill="rgb(220,2,9)" rx="2" ry="2" />
<text  x="985.23" y="271.5" ></text>
</g>
<g >
<title>std::optional&lt;position_in_partition&gt;::operator=&lt;position_in_partition&gt; (15 samples, 0.03%)</title><rect x="230.8" y="229" width="0.4" height="15.0" fill="rgb(208,22,35)" rx="2" ry="2" />
<text  x="233.81" y="239.5" ></text>
</g>
<g >
<title>ser::writer_of_std__optional__qr_cell&lt;bytes_ostream&gt;::write (81 samples, 0.16%)</title><rect x="362.3" y="165" width="1.9" height="15.0" fill="rgb(242,191,10)" rx="2" ry="2" />
<text  x="365.27" y="175.5" ></text>
</g>
<g >
<title>reader_permit::impl::mark_used (9 samples, 0.02%)</title><rect x="63.5" y="453" width="0.2" height="15.0" fill="rgb(213,7,33)" rx="2" ry="2" />
<text  x="66.52" y="463.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::get_mutations (28 samples, 0.06%)</title><rect x="859.4" y="405" width="0.7" height="15.0" fill="rgb(245,70,19)" rx="2" ry="2" />
<text  x="862.42" y="415.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::has_available_units (6 samples, 0.01%)</title><rect x="398.5" y="197" width="0.1" height="15.0" fill="rgb(236,184,21)" rx="2" ry="2" />
<text  x="401.49" y="207.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::get_at (22 samples, 0.04%)</title><rect x="326.0" y="181" width="0.6" height="15.0" fill="rgb(250,89,18)" rx="2" ry="2" />
<text  x="329.05" y="191.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (379 samples, 0.77%)</title><rect x="791.5" y="197" width="9.1" height="15.0" fill="rgb(230,82,11)" rx="2" ry="2" />
<text  x="794.50" y="207.5" ></text>
</g>
<g >
<title>dht::ring_position_tri_compare (445 samples, 0.90%)</title><rect x="477.1" y="277" width="10.6" height="15.0" fill="rgb(243,195,22)" rx="2" ry="2" />
<text  x="480.07" y="287.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;compact_mutation_state&lt; (393 samples, 0.80%)</title><rect x="540.9" y="421" width="9.4" height="15.0" fill="rgb(233,195,14)" rx="2" ry="2" />
<text  x="543.94" y="431.5" ></text>
</g>
<g >
<title>operator delete (23 samples, 0.05%)</title><rect x="667.4" y="453" width="0.6" height="15.0" fill="rgb(215,129,11)" rx="2" ry="2" />
<text  x="670.40" y="463.5" ></text>
</g>
<g >
<title>query_state::query_state (233 samples, 0.47%)</title><rect x="593.5" y="437" width="5.6" height="15.0" fill="rgb(207,34,42)" rx="2" ry="2" />
<text  x="596.55" y="447.5" ></text>
</g>
<g >
<title>std::construct_at&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::entry&gt; (60 samples, 0.12%)</title><rect x="77.1" y="405" width="1.4" height="15.0" fill="rgb(222,114,14)" rx="2" ry="2" />
<text  x="80.07" y="415.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (20 samples, 0.04%)</title><rect x="435.8" y="341" width="0.5" height="15.0" fill="rgb(227,31,35)" rx="2" ry="2" />
<text  x="438.81" y="351.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::untyped_constant&gt; (5 samples, 0.01%)</title><rect x="19.6" y="261" width="0.1" height="15.0" fill="rgb(233,184,42)" rx="2" ry="2" />
<text  x="22.58" y="271.5" ></text>
</g>
<g >
<title>compound_type&lt; (80 samples, 0.16%)</title><rect x="912.2" y="357" width="1.9" height="15.0" fill="rgb(212,51,43)" rx="2" ry="2" />
<text  x="915.20" y="367.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reclaiming_disabled&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_range_tombstone (181 samples, 0.37%)</title><rect x="223.3" y="197" width="4.3" height="15.0" fill="rgb(226,100,19)" rx="2" ry="2" />
<text  x="226.29" y="207.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::then_impl&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (519 samples, 1.05%)</title><rect x="270.6" y="357" width="12.4" height="15.0" fill="rgb(231,109,33)" rx="2" ry="2" />
<text  x="273.59" y="367.5" ></text>
</g>
<g >
<title>std::__lower_bound&lt;__gnu_cxx::__normal_iterator&lt;dht::token const*, std::vector&lt;dht::token, std::allocator&lt;dht::token&gt; &gt; &gt;, dht::token, __gnu_cxx::__ops::_Iter_less_val&gt; (259 samples, 0.52%)</title><rect x="1078.5" y="245" width="6.2" height="15.0" fill="rgb(253,183,5)" rx="2" ry="2" />
<text  x="1081.47" y="255.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, std::optional&lt;auth::resource&gt;&amp;&amp;, service::client_state::check_has_permission (12 samples, 0.02%)</title><rect x="808.4" y="325" width="0.3" height="15.0" fill="rgb(206,128,35)" rx="2" ry="2" />
<text  x="811.41" y="335.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::maybe_decay_reserve (5 samples, 0.01%)</title><rect x="488.9" y="325" width="0.1" height="15.0" fill="rgb(213,10,24)" rx="2" ry="2" />
<text  x="491.90" y="335.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::operator (80 samples, 0.16%)</title><rect x="267.1" y="325" width="1.9" height="15.0" fill="rgb(249,116,39)" rx="2" ry="2" />
<text  x="270.11" y="335.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (125 samples, 0.25%)</title><rect x="631.8" y="485" width="3.0" height="15.0" fill="rgb(240,153,22)" rx="2" ry="2" />
<text  x="634.78" y="495.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;,  (232 samples, 0.47%)</title><rect x="720.8" y="421" width="5.5" height="15.0" fill="rgb(252,156,40)" rx="2" ry="2" />
<text  x="723.78" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::~vector (5 samples, 0.01%)</title><rect x="442.6" y="245" width="0.1" height="15.0" fill="rgb(253,177,21)" rx="2" ry="2" />
<text  x="445.60" y="255.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (8 samples, 0.02%)</title><rect x="884.0" y="309" width="0.2" height="15.0" fill="rgb(238,227,19)" rx="2" ry="2" />
<text  x="886.96" y="319.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (25 samples, 0.05%)</title><rect x="269.1" y="325" width="0.6" height="15.0" fill="rgb(242,1,36)" rx="2" ry="2" />
<text  x="272.14" y="335.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::do_get_limit (11 samples, 0.02%)</title><rect x="1105.3" y="405" width="0.3" height="15.0" fill="rgb(210,187,36)" rx="2" ry="2" />
<text  x="1108.33" y="415.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (74 samples, 0.15%)</title><rect x="1167.5" y="485" width="1.8" height="15.0" fill="rgb(218,136,42)" rx="2" ry="2" />
<text  x="1170.52" y="495.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::validate (7 samples, 0.01%)</title><rect x="826.1" y="421" width="0.2" height="15.0" fill="rgb(236,79,15)" rx="2" ry="2" />
<text  x="829.12" y="431.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::with_permit (655 samples, 1.33%)</title><rect x="1019.7" y="245" width="15.7" height="15.0" fill="rgb(251,179,6)" rx="2" ry="2" />
<text  x="1022.74" y="255.5" ></text>
</g>
<g >
<title>cql3::expr::possible_lhs_values (25 samples, 0.05%)</title><rect x="872.8" y="421" width="0.6" height="15.0" fill="rgb(235,9,42)" rx="2" ry="2" />
<text  x="875.83" y="431.5" ></text>
</g>
<g >
<title>reader_permit::consume (22 samples, 0.04%)</title><rect x="280.4" y="277" width="0.5" height="15.0" fill="rgb(212,5,30)" rx="2" ry="2" />
<text  x="283.37" y="287.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (35 samples, 0.07%)</title><rect x="1140.1" y="453" width="0.9" height="15.0" fill="rgb(214,49,20)" rx="2" ry="2" />
<text  x="1143.14" y="463.5" ></text>
</g>
<g >
<title>sched_setaffinity@@GLIBC_2.3.4 (44 samples, 0.09%)</title><rect x="1188.9" y="629" width="1.1" height="15.0" fill="rgb(238,155,17)" rx="2" ry="2" />
<text  x="1191.90" y="639.5" ></text>
</g>
<g >
<title>seastar::reactor::run (48,314 samples, 97.83%)</title><rect x="23.1" y="549" width="1154.3" height="15.0" fill="rgb(222,30,15)" rx="2" ry="2" />
<text  x="26.09" y="559.5" >seastar::reactor::run</text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_clustering_bounds (314 samples, 0.64%)</title><rect x="1109.4" y="405" width="7.5" height="15.0" fill="rgb(226,59,16)" rx="2" ry="2" />
<text  x="1112.41" y="415.5" ></text>
</g>
<g >
<title>empty_flat_reader::empty_flat_reader (51 samples, 0.10%)</title><rect x="531.6" y="261" width="1.2" height="15.0" fill="rgb(252,83,53)" rx="2" ry="2" />
<text  x="534.60" y="271.5" ></text>
</g>
<g >
<title>seastar::internal::awaiter&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::await_suspend&lt;seastar::internal::coroutine_traits_base&lt;service::storage_proxy_coordinator_query_result&gt;::promise_type&gt; (10 samples, 0.02%)</title><rect x="964.1" y="373" width="0.3" height="15.0" fill="rgb(229,43,46)" rx="2" ry="2" />
<text  x="967.14" y="383.5" ></text>
</g>
<g >
<title>query::querier&lt; (18,611 samples, 37.68%)</title><rect x="108.2" y="437" width="444.7" height="15.0" fill="rgb(238,28,26)" rx="2" ry="2" />
<text  x="111.20" y="447.5" >query::querier&lt;</text>
</g>
<g >
<title>mutation_reader_merger::operator (214 samples, 0.43%)</title><rect x="255.3" y="293" width="5.1" height="15.0" fill="rgb(228,150,44)" rx="2" ry="2" />
<text  x="258.26" y="303.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; const*, std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt; &gt;, nonwrapping_interval&lt;clustering_key_prefix&gt;*&gt; (52 samples, 0.11%)</title><rect x="103.8" y="405" width="1.2" height="15.0" fill="rgb(213,0,38)" rx="2" ry="2" />
<text  x="106.80" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (14 samples, 0.03%)</title><rect x="1121.9" y="405" width="0.3" height="15.0" fill="rgb(226,74,6)" rx="2" ry="2" />
<text  x="1124.86" y="415.5" ></text>
</g>
<g >
<title>std::__equal&lt;true&gt;::equal&lt;signed char&gt; (6 samples, 0.01%)</title><rect x="739.6" y="293" width="0.1" height="15.0" fill="rgb(221,143,1)" rx="2" ry="2" />
<text  x="742.60" y="303.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector (10 samples, 0.02%)</title><rect x="1073.8" y="325" width="0.2" height="15.0" fill="rgb(209,24,50)" rx="2" ry="2" />
<text  x="1076.76" y="335.5" ></text>
</g>
<g >
<title>cql3::statements::raw::modification_statement::prepare (27 samples, 0.05%)</title><rect x="21.5" y="469" width="0.7" height="15.0" fill="rgb(239,178,38)" rx="2" ry="2" />
<text  x="24.54" y="479.5" ></text>
</g>
<g >
<title>reader_permit::impl::~impl (15 samples, 0.03%)</title><rect x="51.2" y="469" width="0.3" height="15.0" fill="rgb(228,13,41)" rx="2" ry="2" />
<text  x="54.19" y="479.5" ></text>
</g>
<g >
<title>query_result_builder::consume_new_partition (9 samples, 0.02%)</title><rect x="365.4" y="213" width="0.2" height="15.0" fill="rgb(234,77,29)" rx="2" ry="2" />
<text  x="368.40" y="223.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::clear (8 samples, 0.02%)</title><rect x="259.8" y="277" width="0.2" height="15.0" fill="rgb(238,208,33)" rx="2" ry="2" />
<text  x="262.82" y="287.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::partition_snapshot_flat_reader&lt;memtable&amp;&gt; (736 samples, 1.49%)</title><rect x="496.7" y="293" width="17.6" height="15.0" fill="rgb(219,13,32)" rx="2" ry="2" />
<text  x="499.71" y="303.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::allocate (60 samples, 0.12%)</title><rect x="503.8" y="213" width="1.4" height="15.0" fill="rgb(248,79,26)" rx="2" ry="2" />
<text  x="506.76" y="223.5" ></text>
</g>
<g >
<title>utils::timed_rate_moving_average_and_histogram::mark (56 samples, 0.11%)</title><rect x="600.0" y="421" width="1.3" height="15.0" fill="rgb(226,222,0)" rx="2" ry="2" />
<text  x="603.00" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (48 samples, 0.10%)</title><rect x="444.2" y="229" width="1.2" height="15.0" fill="rgb(216,53,22)" rx="2" ry="2" />
<text  x="447.25" y="239.5" ></text>
</g>
<g >
<title>schema::column_at (13 samples, 0.03%)</title><rect x="211.4" y="117" width="0.3" height="15.0" fill="rgb(245,110,2)" rx="2" ry="2" />
<text  x="214.37" y="127.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (6 samples, 0.01%)</title><rect x="420.6" y="357" width="0.1" height="15.0" fill="rgb(252,86,15)" rx="2" ry="2" />
<text  x="423.57" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value, std::allocator&lt;cql3::raw_value&gt; &gt;::~vector (5 samples, 0.01%)</title><rect x="850.3" y="437" width="0.1" height="15.0" fill="rgb(253,40,9)" rx="2" ry="2" />
<text  x="853.32" y="447.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::operator (15 samples, 0.03%)</title><rect x="858.7" y="485" width="0.3" height="15.0" fill="rgb(233,116,20)" rx="2" ry="2" />
<text  x="861.68" y="495.5" ></text>
</g>
<g >
<title>std::push_heap&lt;mutation_reader_merger::reader_and_fragment*, mutation_reader_merger::reader_heap_compare&gt; (81 samples, 0.16%)</title><rect x="140.5" y="245" width="1.9" height="15.0" fill="rgb(230,138,54)" rx="2" ry="2" />
<text  x="143.45" y="255.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (16 samples, 0.03%)</title><rect x="740.2" y="277" width="0.4" height="15.0" fill="rgb(221,83,45)" rx="2" ry="2" />
<text  x="743.20" y="287.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::small_vector (20 samples, 0.04%)</title><rect x="453.6" y="261" width="0.5" height="15.0" fill="rgb(211,3,22)" rx="2" ry="2" />
<text  x="456.61" y="271.5" ></text>
</g>
<g >
<title>main (48,315 samples, 97.83%)</title><rect x="23.1" y="613" width="1154.4" height="15.0" fill="rgb(223,94,44)" rx="2" ry="2" />
<text  x="26.09" y="623.5" >main</text>
</g>
<g >
<title>clustering_row::clustering_row (1,353 samples, 2.74%)</title><rect x="172.1" y="165" width="32.4" height="15.0" fill="rgb(238,194,7)" rx="2" ry="2" />
<text  x="175.13" y="175.5" >cl..</text>
</g>
<g >
<title>std::pair&lt;auth::role_or_anonymous, auth::resource&gt;::pair (5 samples, 0.01%)</title><rect x="784.0" y="245" width="0.1" height="15.0" fill="rgb(234,156,4)" rx="2" ry="2" />
<text  x="787.02" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value_view, std::allocator&lt;cql3::raw_value_view&gt; &gt;::_M_realloc_insert&lt;cql3::raw_value_view&gt; (9 samples, 0.02%)</title><rect x="846.1" y="389" width="0.2" height="15.0" fill="rgb(246,88,38)" rx="2" ry="2" />
<text  x="849.07" y="399.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEE4$_44ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_45ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_43ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_46ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_47ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_48ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_49ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_50ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_51ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_52ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_53ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_54ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_55ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_56ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_57ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_58EERS4_IJNSF_11conjunctionENSF_15binary_operatorENSF_12column_valueENSF_5tokenENSF_21unresolved_identifierENSF_25column_mutation_attributeENSF_13function_callENSF_4castENSF_15field_selectionENSF_4nullENSF_13bind_variableENSF_16untyped_constantENSF_8constantENSF_17tuple_constructorENSF_22collection_constructorENSF_20usertype_constructorEEEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES16_S1O_ (1,151 samples, 2.33%)</title><rect x="879.6" y="389" width="27.5" height="15.0" fill="rgb(239,205,13)" rx="2" ry="2" />
<text  x="882.61" y="399.5" >_..</text>
</g>
<g >
<title>_ZN7seastar12continuationINS_8internal22promise_base_with_typeIvEEZNS_6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE14discard_resultEvEUlDpOT_E_ZNSA_14then_impl_nrvoISE_NS4_IvEEEET0_OT_EUlOS3_RSE_ONS_12future_stateIS9_EEE_S9_E15run_and_disposeEv (438 samples, 0.89%)</title><rect x="31.3" y="501" width="10.5" height="15.0" fill="rgb(206,219,20)" rx="2" ry="2" />
<text  x="34.29" y="511.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (16 samples, 0.03%)</title><rect x="921.4" y="389" width="0.4" height="15.0" fill="rgb(222,13,41)" rx="2" ry="2" />
<text  x="924.45" y="399.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;query::result_memory_accounter&gt;::take (9 samples, 0.02%)</title><rect x="601.6" y="421" width="0.2" height="15.0" fill="rgb(254,121,3)" rx="2" ry="2" />
<text  x="604.60" y="431.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (8 samples, 0.02%)</title><rect x="989.1" y="261" width="0.2" height="15.0" fill="rgb(205,106,0)" rx="2" ry="2" />
<text  x="992.11" y="271.5" ></text>
</g>
<g >
<title>utils::fb_utilities::get_broadcast_address (8 samples, 0.02%)</title><rect x="1093.2" y="245" width="0.2" height="15.0" fill="rgb(245,109,1)" rx="2" ry="2" />
<text  x="1096.16" y="255.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::pop_clustering_row (12 samples, 0.02%)</title><rect x="221.1" y="197" width="0.3" height="15.0" fill="rgb(237,29,44)" rx="2" ry="2" />
<text  x="224.11" y="207.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (5 samples, 0.01%)</title><rect x="590.9" y="389" width="0.1" height="15.0" fill="rgb(218,47,15)" rx="2" ry="2" />
<text  x="593.87" y="399.5" ></text>
</g>
<g >
<title>seastar::lambda_task&lt;seastar::execution_stage::flush (5 samples, 0.01%)</title><rect x="25.5" y="517" width="0.1" height="15.0" fill="rgb(223,164,45)" rx="2" ry="2" />
<text  x="28.48" y="527.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;flat_mutation_reader::impl::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (5 samples, 0.01%)</title><rect x="292.1" y="309" width="0.1" height="15.0" fill="rgb(223,203,10)" rx="2" ry="2" />
<text  x="295.07" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (61 samples, 0.12%)</title><rect x="1036.8" y="245" width="1.5" height="15.0" fill="rgb(239,209,47)" rx="2" ry="2" />
<text  x="1039.85" y="255.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;service::storage_proxy_coordinator_query_result&gt;, seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::finally_body&lt;service::storage_proxy::do_query (501 samples, 1.01%)</title><rect x="670.2" y="501" width="11.9" height="15.0" fill="rgb(240,84,50)" rx="2" ry="2" />
<text  x="673.17" y="511.5" ></text>
</g>
<g >
<title>seastar::reactor::add_timer (9 samples, 0.02%)</title><rect x="987.5" y="293" width="0.2" height="15.0" fill="rgb(253,144,6)" rx="2" ry="2" />
<text  x="990.49" y="303.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::clear (8 samples, 0.02%)</title><rect x="805.0" y="245" width="0.2" height="15.0" fill="rgb(213,183,37)" rx="2" ry="2" />
<text  x="808.04" y="255.5" ></text>
</g>
<g >
<title>dht::ring_position::as_decorated_key (48 samples, 0.10%)</title><rect x="462.2" y="325" width="1.2" height="15.0" fill="rgb(210,77,12)" rx="2" ry="2" />
<text  x="465.21" y="335.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (14 samples, 0.03%)</title><rect x="33.7" y="485" width="0.4" height="15.0" fill="rgb(215,152,49)" rx="2" ry="2" />
<text  x="36.75" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, std::allocator&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; &gt;::~vector (7 samples, 0.01%)</title><rect x="41.5" y="469" width="0.2" height="15.0" fill="rgb(250,226,44)" rx="2" ry="2" />
<text  x="44.49" y="479.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (10 samples, 0.02%)</title><rect x="1139.9" y="453" width="0.2" height="15.0" fill="rgb(236,11,39)" rx="2" ry="2" />
<text  x="1142.90" y="463.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::find (25 samples, 0.05%)</title><rect x="951.6" y="373" width="0.6" height="15.0" fill="rgb(214,19,1)" rx="2" ry="2" />
<text  x="954.55" y="383.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (17 samples, 0.03%)</title><rect x="893.5" y="229" width="0.4" height="15.0" fill="rgb(254,79,40)" rx="2" ry="2" />
<text  x="896.47" y="239.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_map&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::at&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt; &gt; (203 samples, 0.41%)</title><rect x="754.0" y="373" width="4.8" height="15.0" fill="rgb(215,38,12)" rx="2" ry="2" />
<text  x="756.99" y="383.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (57 samples, 0.12%)</title><rect x="423.4" y="421" width="1.4" height="15.0" fill="rgb(246,166,44)" rx="2" ry="2" />
<text  x="426.43" y="431.5" ></text>
</g>
<g >
<title>cql_transport::messages::result_message::rows::rows (9 samples, 0.02%)</title><rect x="652.0" y="437" width="0.2" height="15.0" fill="rgb(216,228,8)" rx="2" ry="2" />
<text  x="655.01" y="447.5" ></text>
</g>
<g >
<title>operator delete (31 samples, 0.06%)</title><rect x="587.9" y="405" width="0.8" height="15.0" fill="rgb(247,48,46)" rx="2" ry="2" />
<text  x="590.93" y="415.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;utils::small_vector&lt;service::storage_proxy::unique_response_handler, 1ul&gt; &gt; &gt;::invoke&lt;service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;, service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (19 samples, 0.04%)</title><rect x="1141.5" y="277" width="0.5" height="15.0" fill="rgb(225,125,42)" rx="2" ry="2" />
<text  x="1144.52" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (65 samples, 0.13%)</title><rect x="981.3" y="277" width="1.5" height="15.0" fill="rgb(252,87,16)" rx="2" ry="2" />
<text  x="984.28" y="287.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;single_node_cql_env::core_local_state&gt;::local (6 samples, 0.01%)</title><rect x="832.3" y="437" width="0.1" height="15.0" fill="rgb(242,153,12)" rx="2" ry="2" />
<text  x="835.28" y="447.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::get_at (8 samples, 0.02%)</title><rect x="319.0" y="197" width="0.2" height="15.0" fill="rgb(253,68,52)" rx="2" ry="2" />
<text  x="322.00" y="207.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (30 samples, 0.06%)</title><rect x="735.7" y="357" width="0.7" height="15.0" fill="rgb(211,147,22)" rx="2" ry="2" />
<text  x="738.73" y="367.5" ></text>
</g>
<g >
<title>reader_permit::impl::~impl (63 samples, 0.13%)</title><rect x="64.2" y="437" width="1.5" height="15.0" fill="rgb(220,177,33)" rx="2" ry="2" />
<text  x="67.19" y="447.5" ></text>
</g>
<g >
<title>std::hash&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::operator (5 samples, 0.01%)</title><rect x="758.6" y="325" width="0.1" height="15.0" fill="rgb(239,221,49)" rx="2" ry="2" />
<text  x="761.55" y="335.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (19 samples, 0.04%)</title><rect x="559.9" y="277" width="0.5" height="15.0" fill="rgb(248,157,53)" rx="2" ry="2" />
<text  x="562.93" y="287.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;boost::iterator_range&lt;mutation_fragment*&gt; &gt;::take_value (28 samples, 0.06%)</title><rect x="264.4" y="325" width="0.7" height="15.0" fill="rgb(221,220,9)" rx="2" ry="2" />
<text  x="267.43" y="335.5" ></text>
</g>
<g >
<title>logalloc::basic_region_impl::set_reclaiming_enabled (7 samples, 0.01%)</title><rect x="224.6" y="181" width="0.1" height="15.0" fill="rgb(254,80,45)" rx="2" ry="2" />
<text  x="227.58" y="191.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;query::result&gt;::make&lt;query::result&gt; (12 samples, 0.02%)</title><rect x="81.7" y="453" width="0.2" height="15.0" fill="rgb(221,124,33)" rx="2" ry="2" />
<text  x="84.65" y="463.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::~_Variant_storage (7 samples, 0.01%)</title><rect x="883.8" y="309" width="0.2" height="15.0" fill="rgb(214,217,40)" rx="2" ry="2" />
<text  x="886.79" y="319.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt;::~_Variant_storage (10 samples, 0.02%)</title><rect x="894.4" y="277" width="0.2" height="15.0" fill="rgb(237,39,24)" rx="2" ry="2" />
<text  x="897.40" y="287.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (15 samples, 0.03%)</title><rect x="414.0" y="293" width="0.3" height="15.0" fill="rgb(213,44,50)" rx="2" ry="2" />
<text  x="416.97" y="303.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (7 samples, 0.01%)</title><rect x="265.4" y="341" width="0.2" height="15.0" fill="rgb(236,85,20)" rx="2" ry="2" />
<text  x="268.39" y="351.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::~impl (64 samples, 0.13%)</title><rect x="570.8" y="373" width="1.5" height="15.0" fill="rgb(235,39,46)" rx="2" ry="2" />
<text  x="573.76" y="383.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::move_it (12 samples, 0.02%)</title><rect x="963.9" y="373" width="0.2" height="15.0" fill="rgb(211,81,11)" rx="2" ry="2" />
<text  x="966.86" y="383.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::operator (8 samples, 0.02%)</title><rect x="800.3" y="149" width="0.2" height="15.0" fill="rgb(254,87,37)" rx="2" ry="2" />
<text  x="803.34" y="159.5" ></text>
</g>
<g >
<title>std::__equal&lt;true&gt;::equal&lt;signed char&gt; (6 samples, 0.01%)</title><rect x="739.4" y="277" width="0.2" height="15.0" fill="rgb(252,158,51)" rx="2" ry="2" />
<text  x="742.41" y="287.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;gms::inet_address, std::pair&lt;gms::inet_address const, table::cache_hit_rate&gt;, std::allocator&lt;std::pair&lt;gms::inet_address const, table::cache_hit_rate&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;gms::inet_address&gt;, std::hash&lt;gms::inet_address&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (25 samples, 0.05%)</title><rect x="705.1" y="421" width="0.6" height="15.0" fill="rgb(244,156,40)" rx="2" ry="2" />
<text  x="708.06" y="431.5" ></text>
</g>
<g >
<title>seastar::sprint&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; (8 samples, 0.02%)</title><rect x="16.1" y="517" width="0.2" height="15.0" fill="rgb(233,20,25)" rx="2" ry="2" />
<text  x="19.09" y="527.5" ></text>
</g>
<g >
<title>bound_view::from_range_start&lt;nonwrapping_interval&gt; (20 samples, 0.04%)</title><rect x="242.2" y="181" width="0.5" height="15.0" fill="rgb(222,86,10)" rx="2" ry="2" />
<text  x="245.21" y="191.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureIN5utils15timestamped_valINS_11checked_ptrINS_8weak_ptrIN4cql310statements18prepared_statementEEENS_25default_null_deref_actionEEENS5_40authorized_prepared_statements_cache_keyENS5_41authorized_prepared_statements_cache_sizeESt4hashISB_ESt8equal_toISB_ENS5_36authorized_prepared_statements_cache50authorized_prepared_statements_cache_stats_updaterEE9value_ptrEE9then_implIZNSL_14discard_resultEvEUlDpOT_E_NS0_IvEEEET0_OT_ (9 samples, 0.02%)</title><rect x="731.0" y="389" width="0.2" height="15.0" fill="rgb(251,111,54)" rx="2" ry="2" />
<text  x="734.00" y="399.5" ></text>
</g>
<g >
<title>absl::container_internal::operator== (12 samples, 0.02%)</title><rect x="841.4" y="373" width="0.3" height="15.0" fill="rgb(250,21,53)" rx="2" ry="2" />
<text  x="844.39" y="383.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::push_mutation_fragment&lt;mutation_fragment&gt; (399 samples, 0.81%)</title><rect x="273.0" y="325" width="9.5" height="15.0" fill="rgb(250,5,30)" rx="2" ry="2" />
<text  x="275.96" y="335.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_Optional_payload_base (24 samples, 0.05%)</title><rect x="1071.4" y="293" width="0.6" height="15.0" fill="rgb(245,76,49)" rx="2" ry="2" />
<text  x="1074.42" y="303.5" ></text>
</g>
<g >
<title>cql3::to_managed_bytes_opt (20 samples, 0.04%)</title><rect x="902.1" y="357" width="0.5" height="15.0" fill="rgb(252,57,22)" rx="2" ry="2" />
<text  x="905.07" y="367.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (56 samples, 0.11%)</title><rect x="105.3" y="421" width="1.3" height="15.0" fill="rgb(228,151,1)" rx="2" ry="2" />
<text  x="108.26" y="431.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (52 samples, 0.11%)</title><rect x="1103.8" y="405" width="1.3" height="15.0" fill="rgb(233,56,47)" rx="2" ry="2" />
<text  x="1106.84" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt;::push_back (5 samples, 0.01%)</title><rect x="1154.7" y="453" width="0.1" height="15.0" fill="rgb(244,170,14)" rx="2" ry="2" />
<text  x="1157.66" y="463.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::lower_bound&lt;mutation_partition, schema const&amp;, nonwrapping_interval&lt;clustering_key_prefix&gt; const&amp;&gt; (114 samples, 0.23%)</title><rect x="236.7" y="213" width="2.7" height="15.0" fill="rgb(210,76,37)" rx="2" ry="2" />
<text  x="239.69" y="223.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_read_executor (2,007 samples, 4.06%)</title><rect x="1048.9" y="357" width="47.9" height="15.0" fill="rgb(205,189,11)" rx="2" ry="2" />
<text  x="1051.89" y="367.5" >serv..</text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (11 samples, 0.02%)</title><rect x="819.4" y="293" width="0.2" height="15.0" fill="rgb(231,216,22)" rx="2" ry="2" />
<text  x="822.36" y="303.5" ></text>
</g>
<g >
<title>mutation_partition::lower_bound (16 samples, 0.03%)</title><rect x="217.3" y="133" width="0.4" height="15.0" fill="rgb(240,1,17)" rx="2" ry="2" />
<text  x="220.34" y="143.5" ></text>
</g>
<g >
<title>service::storage_proxy::create_write_response_handler (19 samples, 0.04%)</title><rect x="1141.5" y="229" width="0.5" height="15.0" fill="rgb(214,130,41)" rx="2" ry="2" />
<text  x="1144.52" y="239.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_insert_unique_node (97 samples, 0.20%)</title><rect x="1157.0" y="453" width="2.3" height="15.0" fill="rgb(219,57,37)" rx="2" ry="2" />
<text  x="1159.96" y="463.5" ></text>
</g>
<g >
<title>utils::tuple_hash::hash_impl&lt;2ul, auth::resource_kind, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (50 samples, 0.10%)</title><rect x="799.1" y="117" width="1.2" height="15.0" fill="rgb(217,47,1)" rx="2" ry="2" />
<text  x="802.12" y="127.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (13 samples, 0.03%)</title><rect x="82.6" y="453" width="0.3" height="15.0" fill="rgb(218,165,25)" rx="2" ry="2" />
<text  x="85.61" y="463.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (16 samples, 0.03%)</title><rect x="22.7" y="581" width="0.4" height="15.0" fill="rgb(235,189,11)" rx="2" ry="2" />
<text  x="25.69" y="591.5" ></text>
</g>
<g >
<title>nonwrapping_interval&lt;dht::ring_position&gt;::make_singular (95 samples, 0.19%)</title><rect x="922.2" y="389" width="2.3" height="15.0" fill="rgb(253,198,21)" rx="2" ry="2" />
<text  x="925.19" y="399.5" ></text>
</g>
<g >
<title>seastar::future&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (94 samples, 0.19%)</title><rect x="786.2" y="213" width="2.2" height="15.0" fill="rgb(248,140,41)" rx="2" ry="2" />
<text  x="789.17" y="223.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (24 samples, 0.05%)</title><rect x="1160.1" y="405" width="0.6" height="15.0" fill="rgb(240,24,42)" rx="2" ry="2" />
<text  x="1163.13" y="415.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;void&gt;, database*, seastar::lw_shared_ptr&lt;schema const&gt;, frozen_mutation const&amp;, tracing::trace_state_ptr, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, seastar::bool_class&lt;db::force_sync_tag&gt; &gt;::do_flush (35 samples, 0.07%)</title><rect x="1140.1" y="485" width="0.9" height="15.0" fill="rgb(234,94,49)" rx="2" ry="2" />
<text  x="1143.14" y="495.5" ></text>
</g>
<g >
<title>reader_permit::consume (6 samples, 0.01%)</title><rect x="213.5" y="133" width="0.1" height="15.0" fill="rgb(238,76,18)" rx="2" ry="2" />
<text  x="216.47" y="143.5" ></text>
</g>
<g >
<title>partition_snapshot::static_row (25 samples, 0.05%)</title><rect x="251.5" y="229" width="0.6" height="15.0" fill="rgb(221,105,27)" rx="2" ry="2" />
<text  x="254.53" y="239.5" ></text>
</g>
<g >
<title>locator::abstract_replication_strategy::get_natural_endpoints (626 samples, 1.27%)</title><rect x="1076.8" y="293" width="15.0" height="15.0" fill="rgb(236,226,25)" rx="2" ry="2" />
<text  x="1079.82" y="303.5" ></text>
</g>
<g >
<title>auth::resource::resource (88 samples, 0.18%)</title><rect x="764.1" y="389" width="2.1" height="15.0" fill="rgb(240,154,18)" rx="2" ry="2" />
<text  x="767.09" y="399.5" ></text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (12 samples, 0.02%)</title><rect x="15.5" y="613" width="0.3" height="15.0" fill="rgb(244,201,41)" rx="2" ry="2" />
<text  x="18.54" y="623.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (14 samples, 0.03%)</title><rect x="621.2" y="373" width="0.4" height="15.0" fill="rgb(254,208,49)" rx="2" ry="2" />
<text  x="624.22" y="383.5" ></text>
</g>
<g >
<title>row::row (1,312 samples, 2.66%)</title><rect x="173.1" y="149" width="31.4" height="15.0" fill="rgb(206,146,49)" rx="2" ry="2" />
<text  x="176.11" y="159.5" >ro..</text>
</g>
<g >
<title>compact_mutation_state&lt; (69 samples, 0.14%)</title><rect x="293.8" y="277" width="1.7" height="15.0" fill="rgb(225,216,17)" rx="2" ry="2" />
<text  x="296.84" y="287.5" ></text>
</g>
<g >
<title>seastar::future&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry_ptr&gt;::then_impl&lt;utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (84 samples, 0.17%)</title><rect x="733.7" y="373" width="2.0" height="15.0" fill="rgb(224,211,2)" rx="2" ry="2" />
<text  x="736.65" y="383.5" ></text>
</g>
<g >
<title>query::querier_base::querier_base (5 samples, 0.01%)</title><rect x="583.4" y="437" width="0.2" height="15.0" fill="rgb(247,133,52)" rx="2" ry="2" />
<text  x="586.44" y="447.5" ></text>
</g>
<g >
<title>operator delete (19 samples, 0.04%)</title><rect x="635.4" y="485" width="0.5" height="15.0" fill="rgb(247,56,15)" rx="2" ry="2" />
<text  x="638.43" y="495.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (6 samples, 0.01%)</title><rect x="458.7" y="341" width="0.1" height="15.0" fill="rgb(212,133,16)" rx="2" ry="2" />
<text  x="461.70" y="351.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;interval_bound&lt;dht::ring_position&gt;, false, false&gt;::_Optional_base (6 samples, 0.01%)</title><rect x="1045.4" y="245" width="0.1" height="15.0" fill="rgb(232,197,27)" rx="2" ry="2" />
<text  x="1048.38" y="255.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (10 samples, 0.02%)</title><rect x="282.6" y="325" width="0.3" height="15.0" fill="rgb(232,182,25)" rx="2" ry="2" />
<text  x="285.64" y="335.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (16 samples, 0.03%)</title><rect x="931.6" y="389" width="0.4" height="15.0" fill="rgb(235,213,24)" rx="2" ry="2" />
<text  x="934.60" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (10 samples, 0.02%)</title><rect x="519.0" y="309" width="0.2" height="15.0" fill="rgb(220,87,11)" rx="2" ry="2" />
<text  x="521.96" y="319.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_destroy_data_aux (10 samples, 0.02%)</title><rect x="368.0" y="165" width="0.2" height="15.0" fill="rgb(222,14,5)" rx="2" ry="2" />
<text  x="371.00" y="175.5" ></text>
</g>
<g >
<title>operator new (46 samples, 0.09%)</title><rect x="537.6" y="405" width="1.1" height="15.0" fill="rgb(237,40,53)" rx="2" ry="2" />
<text  x="540.64" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (22 samples, 0.04%)</title><rect x="597.9" y="357" width="0.5" height="15.0" fill="rgb(212,40,10)" rx="2" ry="2" />
<text  x="600.92" y="367.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (103 samples, 0.21%)</title><rect x="911.7" y="373" width="2.5" height="15.0" fill="rgb(230,78,23)" rx="2" ry="2" />
<text  x="914.72" y="383.5" ></text>
</g>
<g >
<title>utils::tuple_hash::operator (167 samples, 0.34%)</title><rect x="796.5" y="165" width="4.0" height="15.0" fill="rgb(216,229,52)" rx="2" ry="2" />
<text  x="799.54" y="175.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_range_tombstone (208 samples, 0.42%)</title><rect x="223.0" y="213" width="4.9" height="15.0" fill="rgb(244,2,17)" rx="2" ry="2" />
<text  x="225.98" y="223.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::indirect_move (5 samples, 0.01%)</title><rect x="1028.5" y="165" width="0.1" height="15.0" fill="rgb(251,182,26)" rx="2" ry="2" />
<text  x="1031.46" y="175.5" ></text>
</g>
<g >
<title>std::variant&lt;query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::operator=&lt;query::noop_hasher&gt; (7 samples, 0.01%)</title><rect x="596.2" y="389" width="0.1" height="15.0" fill="rgb(241,28,54)" rx="2" ry="2" />
<text  x="599.18" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value_view, std::allocator&lt;cql3::raw_value_view&gt; &gt;::~vector (22 samples, 0.04%)</title><rect x="669.6" y="453" width="0.5" height="15.0" fill="rgb(244,33,53)" rx="2" ry="2" />
<text  x="672.60" y="463.5" ></text>
</g>
<g >
<title>ser::qr_partition__rows&lt;bytes_ostream&gt;::add (29 samples, 0.06%)</title><rect x="332.0" y="181" width="0.7" height="15.0" fill="rgb(216,38,36)" rx="2" ry="2" />
<text  x="334.97" y="191.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_internal&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt; &gt; (16 samples, 0.03%)</title><rect x="1141.1" y="293" width="0.4" height="15.0" fill="rgb(243,183,40)" rx="2" ry="2" />
<text  x="1144.12" y="303.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::needs_post_query_ordering (17 samples, 0.03%)</title><rect x="641.8" y="485" width="0.4" height="15.0" fill="rgb(229,217,18)" rx="2" ry="2" />
<text  x="644.76" y="495.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (26 samples, 0.05%)</title><rect x="828.0" y="405" width="0.6" height="15.0" fill="rgb(239,31,43)" rx="2" ry="2" />
<text  x="830.98" y="415.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_M_move_assign (10 samples, 0.02%)</title><rect x="1110.7" y="357" width="0.2" height="15.0" fill="rgb(235,207,0)" rx="2" ry="2" />
<text  x="1113.68" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (69 samples, 0.14%)</title><rect x="961.2" y="357" width="1.7" height="15.0" fill="rgb(225,35,22)" rx="2" ry="2" />
<text  x="964.23" y="367.5" ></text>
</g>
<g >
<title>database::find_uuid (161 samples, 0.33%)</title><rect x="819.6" y="357" width="3.9" height="15.0" fill="rgb(234,212,28)" rx="2" ry="2" />
<text  x="822.62" y="367.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::push_mutation_fragment&lt;schema const&amp;, reader_permit&amp;, partition_start&gt; (18 samples, 0.04%)</title><rect x="499.1" y="261" width="0.4" height="15.0" fill="rgb(238,131,30)" rx="2" ry="2" />
<text  x="502.05" y="271.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::got_response (108 samples, 0.22%)</title><rect x="700.1" y="437" width="2.6" height="15.0" fill="rgb(240,173,36)" rx="2" ry="2" />
<text  x="703.13" y="447.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, enum_set&lt;super_enum&lt;auth::permission,  (70 samples, 0.14%)</title><rect x="786.6" y="181" width="1.7" height="15.0" fill="rgb(245,157,41)" rx="2" ry="2" />
<text  x="789.65" y="191.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take (10 samples, 0.02%)</title><rect x="743.4" y="405" width="0.2" height="15.0" fill="rgb(244,86,16)" rx="2" ry="2" />
<text  x="746.35" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::_M_range_initialize&lt;managed_bytes const*&gt; (6 samples, 0.01%)</title><rect x="904.0" y="357" width="0.1" height="15.0" fill="rgb(250,19,3)" rx="2" ry="2" />
<text  x="906.96" y="367.5" ></text>
</g>
<g >
<title>std::type_info::operator== (10 samples, 0.02%)</title><rect x="1071.1" y="277" width="0.3" height="15.0" fill="rgb(230,182,30)" rx="2" ry="2" />
<text  x="1074.11" y="287.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (284 samples, 0.58%)</title><rect x="15.9" y="581" width="6.7" height="15.0" fill="rgb(239,112,9)" rx="2" ry="2" />
<text  x="18.85" y="591.5" ></text>
</g>
<g >
<title>std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt; &gt;, seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (32 samples, 0.06%)</title><rect x="804.1" y="245" width="0.8" height="15.0" fill="rgb(214,209,29)" rx="2" ry="2" />
<text  x="807.14" y="255.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::__do_dyncast (50 samples, 0.10%)</title><rect x="10.6" y="581" width="1.2" height="15.0" fill="rgb(206,212,20)" rx="2" ry="2" />
<text  x="13.60" y="591.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (6 samples, 0.01%)</title><rect x="653.6" y="485" width="0.1" height="15.0" fill="rgb(245,45,13)" rx="2" ry="2" />
<text  x="656.59" y="495.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (5 samples, 0.01%)</title><rect x="417.5" y="373" width="0.1" height="15.0" fill="rgb(206,170,28)" rx="2" ry="2" />
<text  x="420.49" y="383.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (7 samples, 0.01%)</title><rect x="532.6" y="245" width="0.2" height="15.0" fill="rgb(247,188,9)" rx="2" ry="2" />
<text  x="535.65" y="255.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (39 samples, 0.08%)</title><rect x="890.6" y="261" width="1.0" height="15.0" fill="rgb(220,146,0)" rx="2" ry="2" />
<text  x="893.63" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (8 samples, 0.02%)</title><rect x="44.5" y="485" width="0.1" height="15.0" fill="rgb(213,65,45)" rx="2" ry="2" />
<text  x="47.45" y="495.5" ></text>
</g>
<g >
<title>row::external_memory_usage (252 samples, 0.51%)</title><rect x="205.9" y="149" width="6.0" height="15.0" fill="rgb(247,216,10)" rx="2" ry="2" />
<text  x="208.87" y="159.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (62 samples, 0.13%)</title><rect x="752.3" y="341" width="1.5" height="15.0" fill="rgb(226,147,3)" rx="2" ry="2" />
<text  x="755.31" y="351.5" ></text>
</g>
<g >
<title>operator new (53 samples, 0.11%)</title><rect x="837.6" y="421" width="1.3" height="15.0" fill="rgb(220,195,11)" rx="2" ry="2" />
<text  x="840.61" y="431.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (20 samples, 0.04%)</title><rect x="570.9" y="357" width="0.5" height="15.0" fill="rgb(247,20,21)" rx="2" ry="2" />
<text  x="573.95" y="367.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (6 samples, 0.01%)</title><rect x="929.0" y="373" width="0.2" height="15.0" fill="rgb(216,229,28)" rx="2" ry="2" />
<text  x="932.05" y="383.5" ></text>
</g>
<g >
<title>partition_key::legacy_tri_compare (338 samples, 0.68%)</title><rect x="479.5" y="261" width="8.1" height="15.0" fill="rgb(244,207,35)" rx="2" ry="2" />
<text  x="482.53" y="271.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::clear (7 samples, 0.01%)</title><rect x="963.7" y="373" width="0.2" height="15.0" fill="rgb(219,144,37)" rx="2" ry="2" />
<text  x="966.69" y="383.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (16 samples, 0.03%)</title><rect x="574.5" y="357" width="0.3" height="15.0" fill="rgb(246,2,34)" rx="2" ry="2" />
<text  x="577.46" y="367.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_construct&lt;interval_bound&lt;dht::ring_position&gt; const&amp;&gt; (41 samples, 0.08%)</title><rect x="940.1" y="357" width="1.0" height="15.0" fill="rgb(215,158,50)" rx="2" ry="2" />
<text  x="943.11" y="367.5" ></text>
</g>
<g >
<title>std::__equal&lt;true&gt;::equal&lt;char&gt; (15 samples, 0.03%)</title><rect x="793.2" y="117" width="0.4" height="15.0" fill="rgb(228,198,34)" rx="2" ry="2" />
<text  x="796.22" y="127.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (38 samples, 0.08%)</title><rect x="1141.1" y="421" width="0.9" height="15.0" fill="rgb(223,75,21)" rx="2" ry="2" />
<text  x="1144.07" y="431.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::cql_statement&gt;::~shared_ptr (5 samples, 0.01%)</title><rect x="832.4" y="437" width="0.1" height="15.0" fill="rgb(227,165,41)" rx="2" ry="2" />
<text  x="835.43" y="447.5" ></text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (20 samples, 0.04%)</title><rect x="11.8" y="581" width="0.5" height="15.0" fill="rgb(231,23,1)" rx="2" ry="2" />
<text  x="14.79" y="591.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (22 samples, 0.04%)</title><rect x="928.0" y="325" width="0.5" height="15.0" fill="rgb(211,27,14)" rx="2" ry="2" />
<text  x="930.97" y="335.5" ></text>
</g>
<g >
<title>schema::column_at (71 samples, 0.14%)</title><rect x="209.6" y="101" width="1.7" height="15.0" fill="rgb(240,49,49)" rx="2" ry="2" />
<text  x="212.62" y="111.5" ></text>
</g>
<g >
<title>utils::murmur_hash::hash3_x64_128&lt;legacy_compound_view&lt;compound_type&lt; (248 samples, 0.50%)</title><rect x="915.4" y="373" width="5.9" height="15.0" fill="rgb(245,81,8)" rx="2" ry="2" />
<text  x="918.36" y="383.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (5 samples, 0.01%)</title><rect x="824.8" y="277" width="0.1" height="15.0" fill="rgb(252,73,45)" rx="2" ry="2" />
<text  x="827.76" y="287.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (19 samples, 0.04%)</title><rect x="236.8" y="197" width="0.5" height="15.0" fill="rgb(205,123,52)" rx="2" ry="2" />
<text  x="239.83" y="207.5" ></text>
</g>
<g >
<title>bplus::searcher&lt;dht::ring_position, long, dht::raw_token_less_comparator, 16ul,  (39 samples, 0.08%)</title><rect x="527.0" y="277" width="0.9" height="15.0" fill="rgb(217,18,3)" rx="2" ry="2" />
<text  x="530.01" y="287.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (14 samples, 0.03%)</title><rect x="137.5" y="245" width="0.3" height="15.0" fill="rgb(225,106,32)" rx="2" ry="2" />
<text  x="140.49" y="255.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;std::optional&lt;auth::resource&gt; &gt;, seastar::future&lt;bool&gt; &gt;, std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;std::optional&lt;auth::resource&gt; &gt;, seastar::future&lt;bool&gt; &gt; &gt; &gt;::~unique_ptr (76 samples, 0.15%)</title><rect x="808.7" y="325" width="1.8" height="15.0" fill="rgb(205,76,21)" rx="2" ry="2" />
<text  x="811.72" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (38 samples, 0.08%)</title><rect x="1158.3" y="373" width="1.0" height="15.0" fill="rgb(248,206,30)" rx="2" ry="2" />
<text  x="1161.34" y="383.5" ></text>
</g>
<g >
<title>operator new (26 samples, 0.05%)</title><rect x="517.6" y="277" width="0.7" height="15.0" fill="rgb(229,43,29)" rx="2" ry="2" />
<text  x="520.64" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (13 samples, 0.03%)</title><rect x="514.7" y="309" width="0.3" height="15.0" fill="rgb(219,149,53)" rx="2" ry="2" />
<text  x="517.73" y="319.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::need_filtering (218 samples, 0.44%)</title><rect x="941.2" y="421" width="5.2" height="15.0" fill="rgb(250,97,38)" rx="2" ry="2" />
<text  x="944.16" y="431.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::execute (2,935 samples, 5.94%)</title><rect x="978.6" y="357" width="70.1" height="15.0" fill="rgb(208,156,40)" rx="2" ry="2" />
<text  x="981.58" y="367.5" >service..</text>
</g>
<g >
<title>std::__make_heap&lt;__gnu_cxx::__normal_iterator&lt;boost::iterator_range&lt;boost::intrusive::tree_iterator&lt;boost::intrusive::mhtraits&lt;range_tombstone_entry, boost::intrusive::set_member_hook&lt;boost::intrusive::link_mode&lt; (7 samples, 0.01%)</title><rect x="219.0" y="149" width="0.1" height="15.0" fill="rgb(248,152,34)" rx="2" ry="2" />
<text  x="221.96" y="159.5" ></text>
</g>
<g >
<title>mutation_partition::upper_bound (8 samples, 0.02%)</title><rect x="217.8" y="133" width="0.2" height="15.0" fill="rgb(239,227,24)" rx="2" ry="2" />
<text  x="220.77" y="143.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_destroy_data (25 samples, 0.05%)</title><rect x="615.9" y="389" width="0.6" height="15.0" fill="rgb(244,11,15)" rx="2" ry="2" />
<text  x="618.94" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (5 samples, 0.01%)</title><rect x="850.2" y="405" width="0.1" height="15.0" fill="rgb(239,176,16)" rx="2" ry="2" />
<text  x="853.18" y="415.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::with_ready_permit (11 samples, 0.02%)</title><rect x="1030.9" y="213" width="0.3" height="15.0" fill="rgb(227,37,7)" rx="2" ry="2" />
<text  x="1033.90" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::~vector (21 samples, 0.04%)</title><rect x="1137.6" y="421" width="0.5" height="15.0" fill="rgb(250,78,49)" rx="2" ry="2" />
<text  x="1140.60" y="431.5" ></text>
</g>
<g >
<title>std::pair&lt;auth::role_or_anonymous, auth::resource&gt;::pair&lt;auth::role_or_anonymous, auth::resource, true&gt; (69 samples, 0.14%)</title><rect x="801.4" y="261" width="1.7" height="15.0" fill="rgb(228,87,42)" rx="2" ry="2" />
<text  x="804.41" y="271.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::clear (110 samples, 0.22%)</title><rect x="365.6" y="213" width="2.6" height="15.0" fill="rgb(250,192,15)" rx="2" ry="2" />
<text  x="368.62" y="223.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::signal (5 samples, 0.01%)</title><rect x="560.4" y="277" width="0.1" height="15.0" fill="rgb(237,17,5)" rx="2" ry="2" />
<text  x="563.39" y="287.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (76 samples, 0.15%)</title><rect x="237.6" y="181" width="1.8" height="15.0" fill="rgb(209,116,17)" rx="2" ry="2" />
<text  x="240.60" y="191.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (10 samples, 0.02%)</title><rect x="1128.7" y="389" width="0.3" height="15.0" fill="rgb(219,73,1)" rx="2" ry="2" />
<text  x="1131.72" y="399.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::lru_entry, boost::intrusive::list_node_traits&lt;void*&gt;,  (23 samples, 0.05%)</title><rect x="734.9" y="293" width="0.5" height="15.0" fill="rgb(218,181,16)" rx="2" ry="2" />
<text  x="737.87" y="303.5" ></text>
</g>
<g >
<title>local_schema_registry (22 samples, 0.04%)</title><rect x="969.3" y="357" width="0.5" height="15.0" fill="rgb(220,76,37)" rx="2" ry="2" />
<text  x="972.28" y="367.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::future (12 samples, 0.02%)</title><rect x="975.0" y="357" width="0.3" height="15.0" fill="rgb(237,127,9)" rx="2" ry="2" />
<text  x="978.04" y="367.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (10 samples, 0.02%)</title><rect x="295.3" y="261" width="0.2" height="15.0" fill="rgb(243,133,23)" rx="2" ry="2" />
<text  x="298.25" y="271.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;void&gt;::set_value&lt;&gt; (6 samples, 0.01%)</title><rect x="706.5" y="485" width="0.2" height="15.0" fill="rgb(220,87,38)" rx="2" ry="2" />
<text  x="709.54" y="495.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const*, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;*&gt; (25 samples, 0.05%)</title><rect x="789.9" y="181" width="0.6" height="15.0" fill="rgb(229,127,5)" rx="2" ry="2" />
<text  x="792.92" y="191.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::pop_mutation_fragment (59 samples, 0.12%)</title><rect x="298.5" y="261" width="1.5" height="15.0" fill="rgb(228,212,5)" rx="2" ry="2" />
<text  x="301.55" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (28 samples, 0.06%)</title><rect x="420.8" y="357" width="0.7" height="15.0" fill="rgb(250,34,42)" rx="2" ry="2" />
<text  x="423.78" y="367.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::has_token (7 samples, 0.01%)</title><rect x="944.9" y="389" width="0.2" height="15.0" fill="rgb(215,212,8)" rx="2" ry="2" />
<text  x="947.94" y="399.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::~holder (12 samples, 0.02%)</title><rect x="562.2" y="293" width="0.2" height="15.0" fill="rgb(205,151,47)" rx="2" ry="2" />
<text  x="565.15" y="303.5" ></text>
</g>
<g >
<title>operator delete (13 samples, 0.03%)</title><rect x="628.7" y="485" width="0.3" height="15.0" fill="rgb(235,83,41)" rx="2" ry="2" />
<text  x="631.67" y="495.5" ></text>
</g>
<g >
<title>query::result::builder::builder (146 samples, 0.30%)</title><rect x="595.4" y="421" width="3.5" height="15.0" fill="rgb(219,162,41)" rx="2" ry="2" />
<text  x="598.44" y="431.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (202 samples, 0.41%)</title><rect x="16.6" y="389" width="4.8" height="15.0" fill="rgb(240,138,12)" rx="2" ry="2" />
<text  x="19.57" y="399.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (452 samples, 0.92%)</title><rect x="67.7" y="421" width="10.8" height="15.0" fill="rgb(221,172,4)" rx="2" ry="2" />
<text  x="70.72" y="431.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (13 samples, 0.03%)</title><rect x="1151.1" y="453" width="0.3" height="15.0" fill="rgb(238,27,11)" rx="2" ry="2" />
<text  x="1154.08" y="463.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::needs_filtering (5 samples, 0.01%)</title><rect x="874.5" y="421" width="0.2" height="15.0" fill="rgb(212,74,33)" rx="2" ry="2" />
<text  x="877.55" y="431.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (6 samples, 0.01%)</title><rect x="765.7" y="357" width="0.2" height="15.0" fill="rgb(236,10,26)" rx="2" ry="2" />
<text  x="768.74" y="367.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::value_ptr&gt;::future_state&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry_ptr&gt; (50 samples, 0.10%)</title><rect x="734.3" y="325" width="1.2" height="15.0" fill="rgb(211,110,38)" rx="2" ry="2" />
<text  x="737.30" y="335.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;tracking_allocator&lt;mutation_fragment&gt; &gt;::_S_destroy&lt;tracking_allocator&lt;mutation_fragment&gt;, mutation_fragment&gt; (13 samples, 0.03%)</title><rect x="299.4" y="245" width="0.3" height="15.0" fill="rgb(227,218,19)" rx="2" ry="2" />
<text  x="302.43" y="255.5" ></text>
</g>
<g >
<title>operator new (53 samples, 0.11%)</title><rect x="713.4" y="421" width="1.3" height="15.0" fill="rgb(227,135,23)" rx="2" ry="2" />
<text  x="716.42" y="431.5" ></text>
</g>
<g >
<title>operator delete (27 samples, 0.05%)</title><rect x="1147.8" y="485" width="0.7" height="15.0" fill="rgb(248,100,23)" rx="2" ry="2" />
<text  x="1150.83" y="495.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::read_next (6 samples, 0.01%)</title><rect x="858.8" y="373" width="0.1" height="15.0" fill="rgb(212,153,37)" rx="2" ry="2" />
<text  x="861.80" y="383.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql_transport::messages::result_message::rows&gt;::shared_ptr_count_for&lt;cql3::result&gt; (45 samples, 0.09%)</title><rect x="651.5" y="453" width="1.1" height="15.0" fill="rgb(214,74,33)" rx="2" ry="2" />
<text  x="654.54" y="463.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::impl&gt;::_S_destroy&lt;seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::impl, mutation_fragment&gt; (14 samples, 0.03%)</title><rect x="277.6" y="293" width="0.3" height="15.0" fill="rgb(225,52,54)" rx="2" ry="2" />
<text  x="280.60" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::at (43 samples, 0.09%)</title><rect x="818.6" y="325" width="1.0" height="15.0" fill="rgb(229,78,27)" rx="2" ry="2" />
<text  x="821.59" y="335.5" ></text>
</g>
<g >
<title>compact_mutation&lt; (15 samples, 0.03%)</title><rect x="418.6" y="341" width="0.4" height="15.0" fill="rgb(253,175,28)" rx="2" ry="2" />
<text  x="421.63" y="351.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (35 samples, 0.07%)</title><rect x="1070.5" y="293" width="0.9" height="15.0" fill="rgb(217,171,54)" rx="2" ry="2" />
<text  x="1073.51" y="303.5" ></text>
</g>
<g >
<title>executor&lt;test_read (6,021 samples, 12.19%)</title><rect x="711.7" y="485" width="143.9" height="15.0" fill="rgb(236,91,34)" rx="2" ry="2" />
<text  x="714.70" y="495.5" >executor&lt;test_read</text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (68 samples, 0.14%)</title><rect x="16.6" y="357" width="1.6" height="15.0" fill="rgb(222,158,22)" rx="2" ry="2" />
<text  x="19.57" y="367.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (36 samples, 0.07%)</title><rect x="762.9" y="341" width="0.9" height="15.0" fill="rgb(224,55,31)" rx="2" ry="2" />
<text  x="765.90" y="351.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::~unique_ptr (5 samples, 0.01%)</title><rect x="901.9" y="341" width="0.1" height="15.0" fill="rgb(217,147,32)" rx="2" ry="2" />
<text  x="904.93" y="351.5" ></text>
</g>
<g >
<title>cql3::restrictions::partition_key_restrictions::needs_filtering (116 samples, 0.23%)</title><rect x="942.4" y="405" width="2.7" height="15.0" fill="rgb(252,70,34)" rx="2" ry="2" />
<text  x="945.35" y="415.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (19 samples, 0.04%)</title><rect x="916.5" y="357" width="0.5" height="15.0" fill="rgb(251,71,35)" rx="2" ry="2" />
<text  x="919.50" y="367.5" ></text>
</g>
<g >
<title>mutation_reader_merger::close (8 samples, 0.02%)</title><rect x="1175.1" y="421" width="0.2" height="15.0" fill="rgb(220,133,6)" rx="2" ry="2" />
<text  x="1178.14" y="431.5" ></text>
</g>
<g >
<title>operator new (16 samples, 0.03%)</title><rect x="761.9" y="373" width="0.4" height="15.0" fill="rgb(234,77,33)" rx="2" ry="2" />
<text  x="764.90" y="383.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_Optional_payload_base (11 samples, 0.02%)</title><rect x="1046.0" y="213" width="0.2" height="15.0" fill="rgb(247,84,17)" rx="2" ry="2" />
<text  x="1048.95" y="223.5" ></text>
</g>
<g >
<title>std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;auth::role_or_anonymous&gt;, seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (16 samples, 0.03%)</title><rect x="807.1" y="277" width="0.4" height="15.0" fill="rgb(224,25,7)" rx="2" ry="2" />
<text  x="810.08" y="287.5" ></text>
</g>
<g >
<title>logalloc::basic_region_impl::set_reclaiming_enabled (7 samples, 0.01%)</title><rect x="249.1" y="213" width="0.2" height="15.0" fill="rgb(234,192,27)" rx="2" ry="2" />
<text  x="252.09" y="223.5" ></text>
</g>
<g >
<title>operator new (74 samples, 0.15%)</title><rect x="1123.8" y="405" width="1.8" height="15.0" fill="rgb(205,140,20)" rx="2" ry="2" />
<text  x="1126.82" y="415.5" ></text>
</g>
<g >
<title>empty_flat_reader::close (14 samples, 0.03%)</title><rect x="555.7" y="341" width="0.3" height="15.0" fill="rgb(237,184,6)" rx="2" ry="2" />
<text  x="558.68" y="351.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;std::tuple&lt;seastar::lw_shared_ptr&lt;query::result&gt;, cache_temperature&gt; &gt;::clear (5 samples, 0.01%)</title><rect x="1038.5" y="261" width="0.1" height="15.0" fill="rgb(225,221,46)" rx="2" ry="2" />
<text  x="1041.47" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_insert&lt;flat_mutation_reader&gt; (13 samples, 0.03%)</title><rect x="447.2" y="277" width="0.3" height="15.0" fill="rgb(222,218,19)" rx="2" ry="2" />
<text  x="450.16" y="287.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_Optional_payload_base (29 samples, 0.06%)</title><rect x="1111.0" y="357" width="0.7" height="15.0" fill="rgb(218,177,20)" rx="2" ry="2" />
<text  x="1113.96" y="367.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (6 samples, 0.01%)</title><rect x="569.4" y="309" width="0.1" height="15.0" fill="rgb(235,40,44)" rx="2" ry="2" />
<text  x="572.37" y="319.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::entry::entry (89 samples, 0.18%)</title><rect x="1022.4" y="197" width="2.1" height="15.0" fill="rgb(238,21,23)" rx="2" ry="2" />
<text  x="1025.42" y="207.5" ></text>
</g>
<g >
<title>operator new (14 samples, 0.03%)</title><rect x="621.2" y="389" width="0.4" height="15.0" fill="rgb(209,187,41)" rx="2" ry="2" />
<text  x="624.22" y="399.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (67 samples, 0.14%)</title><rect x="106.6" y="437" width="1.6" height="15.0" fill="rgb(221,160,37)" rx="2" ry="2" />
<text  x="109.60" y="447.5" ></text>
</g>
<g >
<title>mutation_fragment::visit&lt;partition_snapshot_read_accounter&amp;&gt; (38 samples, 0.08%)</title><rect x="151.5" y="229" width="0.9" height="15.0" fill="rgb(247,98,34)" rx="2" ry="2" />
<text  x="154.51" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value_view, std::allocator&lt;cql3::raw_value_view&gt; &gt;::emplace_back&lt;cql3::raw_value_view&gt; (105 samples, 0.21%)</title><rect x="846.3" y="389" width="2.5" height="15.0" fill="rgb(244,191,40)" rx="2" ry="2" />
<text  x="849.28" y="399.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (5 samples, 0.01%)</title><rect x="534.4" y="325" width="0.1" height="15.0" fill="rgb(220,115,2)" rx="2" ry="2" />
<text  x="537.39" y="335.5" ></text>
</g>
<g >
<title>utils::array_search_gt (8 samples, 0.02%)</title><rect x="474.8" y="277" width="0.1" height="15.0" fill="rgb(254,151,29)" rx="2" ry="2" />
<text  x="477.76" y="287.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (6 samples, 0.01%)</title><rect x="937.1" y="389" width="0.2" height="15.0" fill="rgb(210,76,30)" rx="2" ry="2" />
<text  x="940.15" y="399.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::selection::selection const&gt;::~shared_ptr (6 samples, 0.01%)</title><rect x="657.2" y="485" width="0.2" height="15.0" fill="rgb(252,135,15)" rx="2" ry="2" />
<text  x="660.25" y="495.5" ></text>
</g>
<g >
<title>mutation_querier::consume (1,861 samples, 3.77%)</title><rect x="319.7" y="197" width="44.5" height="15.0" fill="rgb(248,164,36)" rx="2" ry="2" />
<text  x="322.74" y="207.5" >muta..</text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (8 samples, 0.02%)</title><rect x="627.1" y="485" width="0.2" height="15.0" fill="rgb(217,54,28)" rx="2" ry="2" />
<text  x="630.12" y="495.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;tracking_allocator&lt;mutation_fragment&gt; &gt;::_S_destroy&lt;tracking_allocator&lt;mutation_fragment&gt;, mutation_fragment&gt; (6 samples, 0.01%)</title><rect x="258.2" y="261" width="0.1" height="15.0" fill="rgb(236,87,20)" rx="2" ry="2" />
<text  x="261.17" y="271.5" ></text>
</g>
<g >
<title>cql3::constants::marker::to_expression (113 samples, 0.23%)</title><rect x="881.7" y="325" width="2.7" height="15.0" fill="rgb(238,35,42)" rx="2" ry="2" />
<text  x="884.67" y="335.5" ></text>
</g>
<g >
<title>compare_unsigned&lt;managed_bytes_basic_view&lt; (56 samples, 0.11%)</title><rect x="481.3" y="213" width="1.3" height="15.0" fill="rgb(232,67,37)" rx="2" ry="2" />
<text  x="484.25" y="223.5" ></text>
</g>
<g >
<title>TLS init function for cql3::statements::select_statement::_default_parameters (5 samples, 0.01%)</title><rect x="746.5" y="389" width="0.1" height="15.0" fill="rgb(241,37,11)" rx="2" ry="2" />
<text  x="749.46" y="399.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::~resource_units (9 samples, 0.02%)</title><rect x="411.1" y="229" width="0.2" height="15.0" fill="rgb(224,108,18)" rx="2" ry="2" />
<text  x="414.11" y="239.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (202 samples, 0.41%)</title><rect x="737.9" y="357" width="4.9" height="15.0" fill="rgb(216,193,19)" rx="2" ry="2" />
<text  x="740.93" y="367.5" ></text>
</g>
<g >
<title>service::storage_proxy::query (6,205 samples, 12.56%)</title><rect x="954.7" y="405" width="148.2" height="15.0" fill="rgb(214,151,31)" rx="2" ry="2" />
<text  x="957.66" y="415.5" >service::storage_p..</text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_construct&lt;interval_bound&lt;dht::ring_position&gt; const&amp;&gt; (16 samples, 0.03%)</title><rect x="1045.8" y="229" width="0.4" height="15.0" fill="rgb(250,115,37)" rx="2" ry="2" />
<text  x="1048.83" y="239.5" ></text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt;&amp;&gt; (72 samples, 0.15%)</title><rect x="1058.1" y="293" width="1.7" height="15.0" fill="rgb(216,151,53)" rx="2" ry="2" />
<text  x="1061.07" y="303.5" ></text>
</g>
<g >
<title>list_reader_selector::list_reader_selector (10 samples, 0.02%)</title><rect x="436.3" y="341" width="0.2" height="15.0" fill="rgb(214,28,1)" rx="2" ry="2" />
<text  x="439.29" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (26 samples, 0.05%)</title><rect x="212.4" y="149" width="0.6" height="15.0" fill="rgb(229,142,14)" rx="2" ry="2" />
<text  x="215.37" y="159.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (9 samples, 0.02%)</title><rect x="1099.9" y="373" width="0.3" height="15.0" fill="rgb(207,136,16)" rx="2" ry="2" />
<text  x="1102.95" y="383.5" ></text>
</g>
<g >
<title>operator delete (28 samples, 0.06%)</title><rect x="661.5" y="485" width="0.7" height="15.0" fill="rgb(216,77,11)" rx="2" ry="2" />
<text  x="664.50" y="495.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::emplace_back&lt;mutation_reader_merger::reader_and_fragment&gt; (8 samples, 0.02%)</title><rect x="260.7" y="293" width="0.1" height="15.0" fill="rgb(207,160,7)" rx="2" ry="2" />
<text  x="263.66" y="303.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::execute (7 samples, 0.01%)</title><rect x="688.0" y="437" width="0.2" height="15.0" fill="rgb(252,79,2)" rx="2" ry="2" />
<text  x="691.02" y="447.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (14 samples, 0.03%)</title><rect x="482.1" y="181" width="0.3" height="15.0" fill="rgb(215,9,33)" rx="2" ry="2" />
<text  x="485.11" y="191.5" ></text>
</g>
<g >
<title>std::default_delete&lt;query::partition_slice const&gt;::operator (11 samples, 0.02%)</title><rect x="586.3" y="421" width="0.2" height="15.0" fill="rgb(243,29,35)" rx="2" ry="2" />
<text  x="589.29" y="431.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (8 samples, 0.02%)</title><rect x="816.8" y="357" width="0.2" height="15.0" fill="rgb(243,34,49)" rx="2" ry="2" />
<text  x="819.80" y="367.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (10 samples, 0.02%)</title><rect x="1095.6" y="341" width="0.2" height="15.0" fill="rgb(253,167,20)" rx="2" ry="2" />
<text  x="1098.55" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (7 samples, 0.01%)</title><rect x="588.5" y="389" width="0.2" height="15.0" fill="rgb(208,20,34)" rx="2" ry="2" />
<text  x="591.51" y="399.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_partition_key_ranges (2,717 samples, 5.50%)</title><rect x="876.2" y="421" width="65.0" height="15.0" fill="rgb(254,125,28)" rx="2" ry="2" />
<text  x="879.24" y="431.5" >cql3::r..</text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (5 samples, 0.01%)</title><rect x="285.7" y="373" width="0.2" height="15.0" fill="rgb(250,179,39)" rx="2" ry="2" />
<text  x="288.74" y="383.5" ></text>
</g>
<g >
<title>operator delete (27 samples, 0.05%)</title><rect x="446.1" y="277" width="0.7" height="15.0" fill="rgb(205,19,48)" rx="2" ry="2" />
<text  x="449.13" y="287.5" ></text>
</g>
<g >
<title>bytes_ostream::chunk::~chunk (43 samples, 0.09%)</title><rect x="37.8" y="405" width="1.0" height="15.0" fill="rgb(213,102,44)" rx="2" ry="2" />
<text  x="40.79" y="415.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (5 samples, 0.01%)</title><rect x="899.4" y="293" width="0.1" height="15.0" fill="rgb(249,35,11)" rx="2" ry="2" />
<text  x="902.37" y="303.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (35 samples, 0.07%)</title><rect x="1140.1" y="373" width="0.9" height="15.0" fill="rgb(236,43,6)" rx="2" ry="2" />
<text  x="1143.14" y="383.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (14 samples, 0.03%)</title><rect x="799.3" y="85" width="0.3" height="15.0" fill="rgb(231,217,4)" rx="2" ry="2" />
<text  x="802.29" y="95.5" ></text>
</g>
<g >
<title>std::make_unique&lt;empty_flat_reader, seastar::lw_shared_ptr&lt;schema const&gt;, reader_permit&gt; (6 samples, 0.01%)</title><rect x="533.9" y="293" width="0.1" height="15.0" fill="rgb(244,94,1)" rx="2" ry="2" />
<text  x="536.87" y="303.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::pop_mutation_fragment (5 samples, 0.01%)</title><rect x="411.7" y="277" width="0.1" height="15.0" fill="rgb(244,177,30)" rx="2" ry="2" />
<text  x="414.73" y="287.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::has_slice_or_needs_filtering (20 samples, 0.04%)</title><rect x="646.0" y="421" width="0.4" height="15.0" fill="rgb(230,61,25)" rx="2" ry="2" />
<text  x="648.97" y="431.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (80 samples, 0.16%)</title><rect x="786.4" y="197" width="1.9" height="15.0" fill="rgb(206,53,17)" rx="2" ry="2" />
<text  x="789.41" y="207.5" ></text>
</g>
<g >
<title>allocation_strategy::get_standard_migrator&lt;blob_storage&gt; (24 samples, 0.05%)</title><rect x="190.1" y="53" width="0.6" height="15.0" fill="rgb(234,50,23)" rx="2" ry="2" />
<text  x="193.13" y="63.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (7 samples, 0.01%)</title><rect x="73.9" y="389" width="0.2" height="15.0" fill="rgb(238,142,37)" rx="2" ry="2" />
<text  x="76.94" y="399.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::_M_create_storage (19 samples, 0.04%)</title><rect x="101.1" y="421" width="0.4" height="15.0" fill="rgb(230,145,33)" rx="2" ry="2" />
<text  x="104.05" y="431.5" ></text>
</g>
<g >
<title>seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::expand (5 samples, 0.01%)</title><rect x="282.5" y="325" width="0.1" height="15.0" fill="rgb(221,18,40)" rx="2" ry="2" />
<text  x="285.52" y="335.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;compact_for_query&lt; (64 samples, 0.13%)</title><rect x="415.0" y="277" width="1.5" height="15.0" fill="rgb(247,110,11)" rx="2" ry="2" />
<text  x="417.95" y="287.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::find&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (13 samples, 0.03%)</title><rect x="758.8" y="373" width="0.3" height="15.0" fill="rgb(232,217,23)" rx="2" ry="2" />
<text  x="761.84" y="383.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (5 samples, 0.01%)</title><rect x="141.4" y="213" width="0.1" height="15.0" fill="rgb(206,25,17)" rx="2" ry="2" />
<text  x="144.36" y="223.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (108 samples, 0.22%)</title><rect x="396.5" y="229" width="2.5" height="15.0" fill="rgb(209,212,17)" rx="2" ry="2" />
<text  x="399.46" y="239.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (10 samples, 0.02%)</title><rect x="430.0" y="357" width="0.2" height="15.0" fill="rgb(249,84,54)" rx="2" ry="2" />
<text  x="432.98" y="367.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (35 samples, 0.07%)</title><rect x="789.8" y="197" width="0.8" height="15.0" fill="rgb(249,49,28)" rx="2" ry="2" />
<text  x="792.75" y="207.5" ></text>
</g>
<g >
<title>bound_view::from_range_end&lt;nonwrapping_interval&gt; (34 samples, 0.07%)</title><rect x="241.4" y="181" width="0.8" height="15.0" fill="rgb(205,167,19)" rx="2" ry="2" />
<text  x="244.40" y="191.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::at (64 samples, 0.13%)</title><rect x="752.3" y="357" width="1.5" height="15.0" fill="rgb(241,172,4)" rx="2" ry="2" />
<text  x="755.27" y="367.5" ></text>
</g>
<g >
<title>std::visit&lt;overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::has_token (6 samples, 0.01%)</title><rect x="878.8" y="389" width="0.2" height="15.0" fill="rgb(234,193,35)" rx="2" ry="2" />
<text  x="881.82" y="399.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;database&gt;::~shared_ptr (5 samples, 0.01%)</title><rect x="1039.5" y="261" width="0.1" height="15.0" fill="rgb(212,70,25)" rx="2" ry="2" />
<text  x="1042.45" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (20 samples, 0.04%)</title><rect x="631.0" y="485" width="0.5" height="15.0" fill="rgb(232,107,53)" rx="2" ry="2" />
<text  x="634.01" y="495.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::clear (5 samples, 0.01%)</title><rect x="393.2" y="229" width="0.1" height="15.0" fill="rgb(220,172,5)" rx="2" ry="2" />
<text  x="396.21" y="239.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::arm (5 samples, 0.01%)</title><rect x="1027.3" y="149" width="0.1" height="15.0" fill="rgb(235,159,19)" rx="2" ry="2" />
<text  x="1030.29" y="159.5" ></text>
</g>
<g >
<title>antlr3::IntStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::_LA (5 samples, 0.01%)</title><rect x="17.5" y="245" width="0.1" height="15.0" fill="rgb(210,178,45)" rx="2" ry="2" />
<text  x="20.45" y="255.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::add_data (187 samples, 0.38%)</title><rect x="698.9" y="453" width="4.4" height="15.0" fill="rgb(249,121,38)" rx="2" ry="2" />
<text  x="701.87" y="463.5" ></text>
</g>
<g >
<title>database::do_apply (34 samples, 0.07%)</title><rect x="1140.1" y="341" width="0.8" height="15.0" fill="rgb(253,172,25)" rx="2" ry="2" />
<text  x="1143.14" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::~vector (11 samples, 0.02%)</title><rect x="575.4" y="341" width="0.2" height="15.0" fill="rgb(220,195,53)" rx="2" ry="2" />
<text  x="578.37" y="351.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::contains&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (83 samples, 0.17%)</title><rect x="823.7" y="341" width="2.0" height="15.0" fill="rgb(238,208,1)" rx="2" ry="2" />
<text  x="826.70" y="351.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (11 samples, 0.02%)</title><rect x="292.6" y="293" width="0.3" height="15.0" fill="rgb(223,95,41)" rx="2" ry="2" />
<text  x="295.65" y="303.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::clear (9 samples, 0.02%)</title><rect x="715.4" y="469" width="0.3" height="15.0" fill="rgb(223,2,19)" rx="2" ry="2" />
<text  x="718.45" y="479.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::size (6 samples, 0.01%)</title><rect x="644.4" y="469" width="0.1" height="15.0" fill="rgb(242,185,25)" rx="2" ry="2" />
<text  x="647.39" y="479.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::push_back (198 samples, 0.40%)</title><rect x="1024.9" y="197" width="4.8" height="15.0" fill="rgb(245,220,15)" rx="2" ry="2" />
<text  x="1027.93" y="207.5" ></text>
</g>
<g >
<title>read_simple&lt;unsigned short, managed_bytes_basic_view&lt; (15 samples, 0.03%)</title><rect x="487.2" y="213" width="0.3" height="15.0" fill="rgb(215,26,46)" rx="2" ry="2" />
<text  x="490.18" y="223.5" ></text>
</g>
<g >
<title>skip_empty_fragments&lt;managed_bytes_basic_view&lt; (9 samples, 0.02%)</title><rect x="892.2" y="261" width="0.2" height="15.0" fill="rgb(235,146,33)" rx="2" ry="2" />
<text  x="895.16" y="271.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::move_it (31 samples, 0.06%)</title><rect x="975.9" y="357" width="0.8" height="15.0" fill="rgb(231,161,53)" rx="2" ry="2" />
<text  x="978.92" y="367.5" ></text>
</g>
<g >
<title>seastar::future&lt;boost::iterator_range&lt;mutation_fragment*&gt; &gt;::then_impl&lt;mutation_fragment_merger&lt;mutation_reader_merger&gt;::fetch (15 samples, 0.03%)</title><rect x="265.6" y="341" width="0.3" height="15.0" fill="rgb(236,206,46)" rx="2" ry="2" />
<text  x="268.55" y="351.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;nonwrapping_interval&lt;dht::ring_position&gt; const, std::default_delete&lt;nonwrapping_interval&lt;dht::ring_position&gt; const&gt; &gt;::~unique_ptr (44 samples, 0.09%)</title><rect x="586.5" y="421" width="1.1" height="15.0" fill="rgb(239,149,12)" rx="2" ry="2" />
<text  x="589.55" y="431.5" ></text>
</g>
<g >
<title>bytes_view_hasher::update (20 samples, 0.04%)</title><rect x="725.0" y="293" width="0.5" height="15.0" fill="rgb(218,3,9)" rx="2" ry="2" />
<text  x="728.03" y="303.5" ></text>
</g>
<g >
<title>utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (423 samples, 0.86%)</title><rect x="790.6" y="213" width="10.1" height="15.0" fill="rgb(207,223,52)" rx="2" ry="2" />
<text  x="793.59" y="223.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;partition_key, false, false&gt;::_Optional_base (14 samples, 0.03%)</title><rect x="551.6" y="405" width="0.3" height="15.0" fill="rgb(240,42,5)" rx="2" ry="2" />
<text  x="554.57" y="415.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::need_filtering (120 samples, 0.24%)</title><rect x="644.8" y="469" width="2.8" height="15.0" fill="rgb(214,96,18)" rx="2" ry="2" />
<text  x="647.77" y="479.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (41 samples, 0.08%)</title><rect x="1100.2" y="373" width="1.0" height="15.0" fill="rgb(210,59,6)" rx="2" ry="2" />
<text  x="1103.21" y="383.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (3,711 samples, 7.51%)</title><rect x="304.3" y="229" width="88.7" height="15.0" fill="rgb(212,14,14)" rx="2" ry="2" />
<text  x="307.33" y="239.5" >compact_mu..</text>
</g>
<g >
<title>service::digest_read_resolver::digest_read_resolver (143 samples, 0.29%)</title><rect x="986.7" y="309" width="3.4" height="15.0" fill="rgb(250,116,31)" rx="2" ry="2" />
<text  x="989.70" y="319.5" ></text>
</g>
<g >
<title>__tls_init (6 samples, 0.01%)</title><rect x="146.9" y="245" width="0.2" height="15.0" fill="rgb(239,111,22)" rx="2" ry="2" />
<text  x="149.93" y="255.5" ></text>
</g>
<g >
<title>dht::tri_compare (44 samples, 0.09%)</title><rect x="1077.4" y="245" width="1.1" height="15.0" fill="rgb(205,6,4)" rx="2" ry="2" />
<text  x="1080.42" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;managed_bytes&gt;::allocate (5 samples, 0.01%)</title><rect x="935.6" y="389" width="0.1" height="15.0" fill="rgb(220,14,37)" rx="2" ry="2" />
<text  x="938.57" y="399.5" ></text>
</g>
<g >
<title>cql3::restrictions::clustering_key_restrictions::needs_filtering (10 samples, 0.02%)</title><rect x="873.7" y="421" width="0.3" height="15.0" fill="rgb(233,35,46)" rx="2" ry="2" />
<text  x="876.71" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt;::reserve (37 samples, 0.07%)</title><rect x="1154.8" y="453" width="0.9" height="15.0" fill="rgb(217,31,35)" rx="2" ry="2" />
<text  x="1157.78" y="463.5" ></text>
</g>
<g >
<title>reader_permit::consume_memory (28 samples, 0.06%)</title><rect x="213.0" y="165" width="0.7" height="15.0" fill="rgb(246,85,0)" rx="2" ry="2" />
<text  x="216.04" y="175.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::set_value&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; (16 samples, 0.03%)</title><rect x="606.0" y="437" width="0.4" height="15.0" fill="rgb(241,95,13)" rx="2" ry="2" />
<text  x="609.02" y="447.5" ></text>
</g>
<g >
<title>seastar::app_template::run (48,315 samples, 97.83%)</title><rect x="23.1" y="597" width="1154.4" height="15.0" fill="rgb(207,18,34)" rx="2" ry="2" />
<text  x="26.09" y="607.5" >seastar::app_template::run</text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (92 samples, 0.19%)</title><rect x="674.9" y="453" width="2.2" height="15.0" fill="rgb(226,118,31)" rx="2" ry="2" />
<text  x="677.88" y="463.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_Optional_payload_base (20 samples, 0.04%)</title><rect x="930.1" y="389" width="0.5" height="15.0" fill="rgb(254,137,9)" rx="2" ry="2" />
<text  x="933.15" y="399.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;query::result_memory_accounter&gt;::clear (22 samples, 0.04%)</title><rect x="79.6" y="453" width="0.5" height="15.0" fill="rgb(226,198,51)" rx="2" ry="2" />
<text  x="82.62" y="463.5" ></text>
</g>
<g >
<title>bplus::tree&lt;long, intrusive_array&lt;cache_entry&gt;, dht::raw_token_less_comparator, 16ul,  (9 samples, 0.02%)</title><rect x="527.9" y="277" width="0.3" height="15.0" fill="rgb(205,70,16)" rx="2" ry="2" />
<text  x="530.94" y="287.5" ></text>
</g>
<g >
<title>seastar::reactor::service_highres_timer (20 samples, 0.04%)</title><rect x="1176.8" y="453" width="0.5" height="15.0" fill="rgb(234,37,8)" rx="2" ry="2" />
<text  x="1179.84" y="463.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_Optional_payload_base (15 samples, 0.03%)</title><rect x="1072.4" y="309" width="0.4" height="15.0" fill="rgb(234,4,47)" rx="2" ry="2" />
<text  x="1075.45" y="319.5" ></text>
</g>
<g >
<title>bplus::tree&lt;long, intrusive_array&lt;memtable_entry&gt;, dht::raw_token_less_comparator, 16ul,  (402 samples, 0.81%)</title><rect x="466.1" y="293" width="9.6" height="15.0" fill="rgb(208,140,38)" rx="2" ry="2" />
<text  x="469.13" y="303.5" ></text>
</g>
<g >
<title>query::querier_base::close (16 samples, 0.03%)</title><rect x="1175.1" y="485" width="0.4" height="15.0" fill="rgb(243,144,32)" rx="2" ry="2" />
<text  x="1178.12" y="495.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::small_vector (26 samples, 0.05%)</title><rect x="454.1" y="261" width="0.6" height="15.0" fill="rgb(208,88,33)" rx="2" ry="2" />
<text  x="457.09" y="271.5" ></text>
</g>
<g >
<title>operator new (31 samples, 0.06%)</title><rect x="420.7" y="373" width="0.8" height="15.0" fill="rgb(224,48,51)" rx="2" ry="2" />
<text  x="423.71" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (30 samples, 0.06%)</title><rect x="1019.0" y="213" width="0.7" height="15.0" fill="rgb(220,222,16)" rx="2" ry="2" />
<text  x="1021.98" y="223.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (26 samples, 0.05%)</title><rect x="606.8" y="405" width="0.6" height="15.0" fill="rgb(253,182,42)" rx="2" ry="2" />
<text  x="609.76" y="415.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::get_promise (9 samples, 0.02%)</title><rect x="1008.7" y="277" width="0.2" height="15.0" fill="rgb(245,167,52)" rx="2" ry="2" />
<text  x="1011.66" y="287.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (6 samples, 0.01%)</title><rect x="739.3" y="277" width="0.1" height="15.0" fill="rgb(213,14,34)" rx="2" ry="2" />
<text  x="742.27" y="287.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::push_mutation_fragment&lt;mutation_fragment&gt; (204 samples, 0.41%)</title><rect x="153.5" y="229" width="4.8" height="15.0" fill="rgb(225,134,49)" rx="2" ry="2" />
<text  x="156.45" y="239.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (16 samples, 0.03%)</title><rect x="660.0" y="437" width="0.4" height="15.0" fill="rgb(248,164,53)" rx="2" ry="2" />
<text  x="663.04" y="447.5" ></text>
</g>
<g >
<title>std::__optional_hash_call_base&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, true&gt;::operator (18 samples, 0.04%)</title><rect x="799.2" y="101" width="0.4" height="15.0" fill="rgb(246,156,51)" rx="2" ry="2" />
<text  x="802.19" y="111.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_nodes (87 samples, 0.18%)</title><rect x="659.0" y="453" width="2.1" height="15.0" fill="rgb(242,144,46)" rx="2" ry="2" />
<text  x="662.04" y="463.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_9has_tokenERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES28_S2B_ (5 samples, 0.01%)</title><rect x="646.8" y="389" width="0.1" height="15.0" fill="rgb(235,143,47)" rx="2" ry="2" />
<text  x="649.76" y="399.5" ></text>
</g>
<g >
<title>dht::tri_compare (17 samples, 0.03%)</title><rect x="1091.1" y="245" width="0.4" height="15.0" fill="rgb(206,84,53)" rx="2" ry="2" />
<text  x="1094.11" y="255.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (6 samples, 0.01%)</title><rect x="898.9" y="293" width="0.1" height="15.0" fill="rgb(244,142,22)" rx="2" ry="2" />
<text  x="901.89" y="303.5" ></text>
</g>
<g >
<title>std::forward_as_tuple&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt; &gt; (8 samples, 0.02%)</title><rect x="801.1" y="261" width="0.2" height="15.0" fill="rgb(223,14,47)" rx="2" ry="2" />
<text  x="804.10" y="271.5" ></text>
</g>
<g >
<title>operator new (18 samples, 0.04%)</title><rect x="650.2" y="453" width="0.5" height="15.0" fill="rgb(230,90,34)" rx="2" ry="2" />
<text  x="653.25" y="463.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::maybe_drop_from (7 samples, 0.01%)</title><rect x="318.5" y="213" width="0.1" height="15.0" fill="rgb(239,21,25)" rx="2" ry="2" />
<text  x="321.48" y="223.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_Optional_payload_base (10 samples, 0.02%)</title><rect x="1116.0" y="357" width="0.2" height="15.0" fill="rgb(213,73,0)" rx="2" ry="2" />
<text  x="1119.01" y="367.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (30 samples, 0.06%)</title><rect x="859.4" y="453" width="0.7" height="15.0" fill="rgb(251,135,46)" rx="2" ry="2" />
<text  x="862.40" y="463.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::take_value (6 samples, 0.01%)</title><rect x="143.8" y="261" width="0.2" height="15.0" fill="rgb(222,138,45)" rx="2" ry="2" />
<text  x="146.82" y="271.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (27 samples, 0.05%)</title><rect x="719.8" y="389" width="0.6" height="15.0" fill="rgb(208,66,32)" rx="2" ry="2" />
<text  x="722.80" y="399.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, auth::role_or_anonymous&amp;&amp;, auth::get_permissions (5 samples, 0.01%)</title><rect x="808.1" y="309" width="0.1" height="15.0" fill="rgb(206,48,21)" rx="2" ry="2" />
<text  x="811.08" y="319.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (19 samples, 0.04%)</title><rect x="229.0" y="197" width="0.4" height="15.0" fill="rgb(252,89,3)" rx="2" ry="2" />
<text  x="231.95" y="207.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (34 samples, 0.07%)</title><rect x="691.7" y="485" width="0.8" height="15.0" fill="rgb(215,52,29)" rx="2" ry="2" />
<text  x="694.72" y="495.5" ></text>
</g>
<g >
<title>seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;::swap (52 samples, 0.11%)</title><rect x="731.6" y="389" width="1.2" height="15.0" fill="rgb(249,148,31)" rx="2" ry="2" />
<text  x="734.55" y="399.5" ></text>
</g>
<g >
<title>operator delete (34 samples, 0.07%)</title><rect x="415.0" y="261" width="0.8" height="15.0" fill="rgb(228,210,28)" rx="2" ry="2" />
<text  x="418.02" y="271.5" ></text>
</g>
<g >
<title>std::make_unique&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;, seastar::lw_shared_ptr&lt;schema const&gt;, reader_permit, dht::decorated_key, partition_snapshot_ptr&amp;, query::clustering_key_filter_ranges, bool&amp;, logalloc::region&amp;, logalloc::allocating_section&amp;, boost::any, memtable&amp;&gt; (864 samples, 1.75%)</title><rect x="494.1" y="309" width="20.6" height="15.0" fill="rgb(253,44,9)" rx="2" ry="2" />
<text  x="497.08" y="319.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (9 samples, 0.02%)</title><rect x="217.5" y="117" width="0.2" height="15.0" fill="rgb(230,84,1)" rx="2" ry="2" />
<text  x="220.51" y="127.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (9 samples, 0.02%)</title><rect x="1127.6" y="373" width="0.2" height="15.0" fill="rgb(227,222,48)" rx="2" ry="2" />
<text  x="1130.62" y="383.5" ></text>
</g>
<g >
<title>utils::tuple_hash::hash_impl&lt;1ul, auth::resource_kind, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (24 samples, 0.05%)</title><rect x="814.7" y="293" width="0.6" height="15.0" fill="rgb(215,133,14)" rx="2" ry="2" />
<text  x="817.70" y="303.5" ></text>
</g>
<g >
<title>std::apply&lt;service::client_state::has_column_family_access (2,058 samples, 4.17%)</title><rect x="766.3" y="389" width="49.2" height="15.0" fill="rgb(219,138,48)" rx="2" ry="2" />
<text  x="769.32" y="399.5" >std:..</text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (9 samples, 0.02%)</title><rect x="519.9" y="325" width="0.2" height="15.0" fill="rgb(209,23,36)" rx="2" ry="2" />
<text  x="522.91" y="335.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::get_per_partition_limit (9 samples, 0.02%)</title><rect x="1116.9" y="405" width="0.3" height="15.0" fill="rgb(244,117,34)" rx="2" ry="2" />
<text  x="1119.94" y="415.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::find (9 samples, 0.02%)</title><rect x="648.6" y="405" width="0.2" height="15.0" fill="rgb(250,90,14)" rx="2" ry="2" />
<text  x="651.57" y="415.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::digest_read_result&gt;::then_wrapped_common&lt;true, void, service::abstract_read_executor::execute (122 samples, 0.25%)</title><rect x="980.3" y="341" width="2.9" height="15.0" fill="rgb(241,185,51)" rx="2" ry="2" />
<text  x="983.27" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (26 samples, 0.05%)</title><rect x="405.0" y="165" width="0.7" height="15.0" fill="rgb(224,100,34)" rx="2" ry="2" />
<text  x="408.04" y="175.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally&lt;single_node_cql_env::execute_prepared_with_qo (106 samples, 0.21%)</title><rect x="828.9" y="437" width="2.5" height="15.0" fill="rgb(229,118,27)" rx="2" ry="2" />
<text  x="831.89" y="447.5" ></text>
</g>
<g >
<title>operator new (72 samples, 0.15%)</title><rect x="994.6" y="261" width="1.7" height="15.0" fill="rgb(213,176,42)" rx="2" ry="2" />
<text  x="997.56" y="271.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (5 samples, 0.01%)</title><rect x="931.9" y="373" width="0.1" height="15.0" fill="rgb(226,2,29)" rx="2" ry="2" />
<text  x="934.87" y="383.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;reader_concurrency_semaphore::entry&gt; &gt;::destroy&lt;reader_concurrency_semaphore::entry&gt; (15 samples, 0.03%)</title><rect x="627.7" y="469" width="0.4" height="15.0" fill="rgb(235,95,27)" rx="2" ry="2" />
<text  x="630.74" y="479.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;reader_permit::impl, boost::intrusive::list_node_traits&lt;void*&gt;,  (7 samples, 0.01%)</title><rect x="1035.0" y="181" width="0.2" height="15.0" fill="rgb(252,216,24)" rx="2" ry="2" />
<text  x="1038.01" y="191.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (12 samples, 0.02%)</title><rect x="616.6" y="421" width="0.3" height="15.0" fill="rgb(219,150,13)" rx="2" ry="2" />
<text  x="619.63" y="431.5" ></text>
</g>
<g >
<title>operator delete (31 samples, 0.06%)</title><rect x="903.1" y="357" width="0.7" height="15.0" fill="rgb(238,27,49)" rx="2" ry="2" />
<text  x="906.10" y="367.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;std::optional&lt;auth::resource&gt; &gt;, seastar::future&lt;bool&gt; &gt;, std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;std::optional&lt;auth::resource&gt; &gt;, seastar::future&lt;bool&gt; &gt; &gt; &gt;::~unique_ptr (5 samples, 0.01%)</title><rect x="811.1" y="341" width="0.1" height="15.0" fill="rgb(210,200,12)" rx="2" ry="2" />
<text  x="814.09" y="351.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_one (207 samples, 0.42%)</title><rect x="137.9" y="261" width="4.9" height="15.0" fill="rgb(243,131,10)" rx="2" ry="2" />
<text  x="140.87" y="271.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::signal (17 samples, 0.03%)</title><rect x="398.6" y="213" width="0.4" height="15.0" fill="rgb(252,69,43)" rx="2" ry="2" />
<text  x="401.63" y="223.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (22 samples, 0.04%)</title><rect x="904.7" y="309" width="0.5" height="15.0" fill="rgb(233,131,1)" rx="2" ry="2" />
<text  x="907.72" y="319.5" ></text>
</g>
<g >
<title>bplus::tree&lt;long, intrusive_array&lt;cache_entry&gt;, dht::raw_token_less_comparator, 16ul,  (70 samples, 0.14%)</title><rect x="526.6" y="293" width="1.7" height="15.0" fill="rgb(228,137,5)" rx="2" ry="2" />
<text  x="529.60" y="303.5" ></text>
</g>
<g >
<title>operator delete (16 samples, 0.03%)</title><rect x="665.9" y="469" width="0.4" height="15.0" fill="rgb(230,154,43)" rx="2" ry="2" />
<text  x="668.87" y="479.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::operator (5 samples, 0.01%)</title><rect x="835.8" y="357" width="0.1" height="15.0" fill="rgb(231,73,45)" rx="2" ry="2" />
<text  x="838.79" y="367.5" ></text>
</g>
<g >
<title>mutation_fragment::consume&lt;flat_mutation_reader::impl::consumer_adapter&lt;sstables::sstable_writer&gt; &gt; (5 samples, 0.01%)</title><rect x="22.9" y="485" width="0.1" height="15.0" fill="rgb(211,163,35)" rx="2" ry="2" />
<text  x="25.88" y="495.5" ></text>
</g>
<g >
<title>mutation_querier::consume_end_of_stream (40 samples, 0.08%)</title><rect x="302.7" y="213" width="0.9" height="15.0" fill="rgb(228,138,8)" rx="2" ry="2" />
<text  x="305.66" y="223.5" ></text>
</g>
<g >
<title>locator::i_endpoint_snitch::snitch_instance (14 samples, 0.03%)</title><rect x="1094.2" y="309" width="0.3" height="15.0" fill="rgb(232,216,28)" rx="2" ry="2" />
<text  x="1097.22" y="319.5" ></text>
</g>
<g >
<title>mutation_fragment::destroy_data (6 samples, 0.01%)</title><rect x="412.1" y="277" width="0.1" height="15.0" fill="rgb(231,41,45)" rx="2" ry="2" />
<text  x="415.06" y="287.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::bool_class&lt;mutation_reader_merger::needs_merge_tag&gt; &gt;::take_value (7 samples, 0.01%)</title><rect x="144.8" y="277" width="0.2" height="15.0" fill="rgb(246,94,53)" rx="2" ry="2" />
<text  x="147.80" y="287.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::do_flush (11,720 samples, 23.73%)</title><rect x="860.1" y="485" width="280.0" height="15.0" fill="rgb(244,76,9)" rx="2" ry="2" />
<text  x="863.12" y="495.5" >seastar::concrete_execution_stage&lt;sea..</text>
</g>
<g >
<title>operator new (43 samples, 0.09%)</title><rect x="839.5" y="405" width="1.0" height="15.0" fill="rgb(224,164,30)" rx="2" ry="2" />
<text  x="842.45" y="415.5" ></text>
</g>
<g >
<title>db::validate_for_read (18 samples, 0.04%)</title><rect x="1138.9" y="437" width="0.5" height="15.0" fill="rgb(220,125,43)" rx="2" ry="2" />
<text  x="1141.94" y="447.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;void&gt;::set_urgent_state (19 samples, 0.04%)</title><rect x="48.1" y="485" width="0.4" height="15.0" fill="rgb(218,110,52)" rx="2" ry="2" />
<text  x="51.08" y="495.5" ></text>
</g>
<g >
<title>query_result_builder::consume (9 samples, 0.02%)</title><rect x="682.3" y="293" width="0.2" height="15.0" fill="rgb(230,7,38)" rx="2" ry="2" />
<text  x="685.31" y="303.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::~__si_class_type_info (225 samples, 0.46%)</title><rect x="10.2" y="613" width="5.3" height="15.0" fill="rgb(235,116,18)" rx="2" ry="2" />
<text  x="13.17" y="623.5" ></text>
</g>
<g >
<title>seastar::reactor_backend_aio::await_events (35 samples, 0.07%)</title><rect x="1176.5" y="485" width="0.9" height="15.0" fill="rgb(226,53,20)" rx="2" ry="2" />
<text  x="1179.55" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (6 samples, 0.01%)</title><rect x="1170.0" y="437" width="0.2" height="15.0" fill="rgb(247,151,16)" rx="2" ry="2" />
<text  x="1173.03" y="447.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (9 samples, 0.02%)</title><rect x="1046.0" y="197" width="0.2" height="15.0" fill="rgb(225,2,21)" rx="2" ry="2" />
<text  x="1049.00" y="207.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reserve&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (11 samples, 0.02%)</title><rect x="858.7" y="405" width="0.3" height="15.0" fill="rgb(223,134,36)" rx="2" ry="2" />
<text  x="861.73" y="415.5" ></text>
</g>
<g >
<title>nonwrapping_interval&lt;clustering_key_prefix&gt;::make_open_ended_both_sides (139 samples, 0.28%)</title><rect x="1110.2" y="389" width="3.3" height="15.0" fill="rgb(246,135,18)" rx="2" ry="2" />
<text  x="1113.15" y="399.5" ></text>
</g>
<g >
<title>db::is_datacenter_local (5 samples, 0.01%)</title><rect x="969.2" y="357" width="0.1" height="15.0" fill="rgb(244,41,53)" rx="2" ry="2" />
<text  x="972.16" y="367.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (6 samples, 0.01%)</title><rect x="194.7" y="101" width="0.2" height="15.0" fill="rgb(231,51,30)" rx="2" ry="2" />
<text  x="197.74" y="111.5" ></text>
</g>
<g >
<title>std::pair&lt;auth::role_or_anonymous, auth::resource&gt;::pair (58 samples, 0.12%)</title><rect x="789.2" y="213" width="1.4" height="15.0" fill="rgb(250,148,14)" rx="2" ry="2" />
<text  x="792.20" y="223.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_map&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::at&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt; &gt; (157 samples, 0.32%)</title><rect x="819.7" y="341" width="3.7" height="15.0" fill="rgb(239,5,37)" rx="2" ry="2" />
<text  x="822.69" y="351.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::execute (8 samples, 0.02%)</title><rect x="982.8" y="293" width="0.2" height="15.0" fill="rgb(215,162,11)" rx="2" ry="2" />
<text  x="985.83" y="303.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (8 samples, 0.02%)</title><rect x="804.4" y="213" width="0.2" height="15.0" fill="rgb(234,22,7)" rx="2" ry="2" />
<text  x="807.42" y="223.5" ></text>
</g>
<g >
<title>tombstone::operator&lt;=&gt; (5 samples, 0.01%)</title><rect x="391.8" y="181" width="0.1" height="15.0" fill="rgb(214,159,3)" rx="2" ry="2" />
<text  x="394.75" y="191.5" ></text>
</g>
<g >
<title>service::abstract_read_resolver::~abstract_read_resolver (18 samples, 0.04%)</title><rect x="693.5" y="469" width="0.5" height="15.0" fill="rgb(227,33,53)" rx="2" ry="2" />
<text  x="696.54" y="479.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (164 samples, 0.33%)</title><rect x="395.1" y="245" width="3.9" height="15.0" fill="rgb(207,106,5)" rx="2" ry="2" />
<text  x="398.12" y="255.5" ></text>
</g>
<g >
<title>seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;::swap (43 samples, 0.09%)</title><rect x="743.6" y="405" width="1.1" height="15.0" fill="rgb(250,148,15)" rx="2" ry="2" />
<text  x="746.64" y="415.5" ></text>
</g>
<g >
<title>reader_permit::consume (7 samples, 0.01%)</title><rect x="214.0" y="149" width="0.2" height="15.0" fill="rgb(227,34,27)" rx="2" ry="2" />
<text  x="217.02" y="159.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (10 samples, 0.02%)</title><rect x="150.7" y="245" width="0.2" height="15.0" fill="rgb(232,191,21)" rx="2" ry="2" />
<text  x="153.68" y="255.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (5 samples, 0.01%)</title><rect x="1119.7" y="405" width="0.2" height="15.0" fill="rgb(223,85,48)" rx="2" ry="2" />
<text  x="1122.73" y="415.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (6 samples, 0.01%)</title><rect x="654.2" y="469" width="0.2" height="15.0" fill="rgb(251,82,49)" rx="2" ry="2" />
<text  x="657.21" y="479.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (16 samples, 0.03%)</title><rect x="1030.2" y="197" width="0.4" height="15.0" fill="rgb(225,100,5)" rx="2" ry="2" />
<text  x="1033.18" y="207.5" ></text>
</g>
<g >
<title>utils::tuple_hash::operator (104 samples, 0.21%)</title><rect x="723.0" y="341" width="2.5" height="15.0" fill="rgb(208,168,42)" rx="2" ry="2" />
<text  x="726.05" y="351.5" ></text>
</g>
<g >
<title>__tls_init (9 samples, 0.02%)</title><rect x="498.8" y="261" width="0.3" height="15.0" fill="rgb(248,226,51)" rx="2" ry="2" />
<text  x="501.84" y="271.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::allocate (42 samples, 0.09%)</title><rect x="156.3" y="197" width="1.0" height="15.0" fill="rgb(229,23,3)" rx="2" ry="2" />
<text  x="159.32" y="207.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::set_urgent_state (27 samples, 0.05%)</title><rect x="636.8" y="485" width="0.7" height="15.0" fill="rgb(248,218,12)" rx="2" ry="2" />
<text  x="639.82" y="495.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::entry::entry (5 samples, 0.01%)</title><rect x="1029.4" y="165" width="0.1" height="15.0" fill="rgb(244,197,12)" rx="2" ry="2" />
<text  x="1032.42" y="175.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::clear (12 samples, 0.02%)</title><rect x="450.1" y="277" width="0.3" height="15.0" fill="rgb(210,60,45)" rx="2" ry="2" />
<text  x="453.07" y="287.5" ></text>
</g>
<g >
<title>operator delete (30 samples, 0.06%)</title><rect x="571.5" y="341" width="0.8" height="15.0" fill="rgb(235,173,47)" rx="2" ry="2" />
<text  x="574.54" y="351.5" ></text>
</g>
<g >
<title>bplus::tree&lt;long, intrusive_array&lt;memtable_entry&gt;, dht::raw_token_less_comparator, 16ul,  (7 samples, 0.01%)</title><rect x="1140.3" y="197" width="0.2" height="15.0" fill="rgb(238,226,2)" rx="2" ry="2" />
<text  x="1143.33" y="207.5" ></text>
</g>
<g >
<title>cql3::raw_value_view::raw_value_view (83 samples, 0.17%)</title><rect x="899.5" y="325" width="2.0" height="15.0" fill="rgb(240,2,51)" rx="2" ry="2" />
<text  x="902.52" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::stats (28 samples, 0.06%)</title><rect x="500.5" y="245" width="0.7" height="15.0" fill="rgb(220,97,46)" rx="2" ry="2" />
<text  x="503.54" y="255.5" ></text>
</g>
<g >
<title>seastar::memory::stats (36 samples, 0.07%)</title><rect x="490.0" y="309" width="0.9" height="15.0" fill="rgb(247,76,32)" rx="2" ry="2" />
<text  x="493.02" y="319.5" ></text>
</g>
<g >
<title>operator new (71 samples, 0.14%)</title><rect x="882.0" y="309" width="1.7" height="15.0" fill="rgb(247,87,52)" rx="2" ry="2" />
<text  x="884.95" y="319.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;auth::resource&gt;::_Optional_payload_base (40 samples, 0.08%)</title><rect x="772.9" y="293" width="0.9" height="15.0" fill="rgb(241,129,22)" rx="2" ry="2" />
<text  x="775.86" y="303.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (6 samples, 0.01%)</title><rect x="392.8" y="181" width="0.1" height="15.0" fill="rgb(253,35,54)" rx="2" ry="2" />
<text  x="395.80" y="191.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume_in_thread&lt;sstables::sstable_writer&gt; (14 samples, 0.03%)</title><rect x="22.7" y="549" width="0.3" height="15.0" fill="rgb(206,214,44)" rx="2" ry="2" />
<text  x="25.69" y="559.5" ></text>
</g>
<g >
<title>operator delete (46 samples, 0.09%)</title><rect x="564.7" y="277" width="1.1" height="15.0" fill="rgb(205,23,42)" rx="2" ry="2" />
<text  x="567.73" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value, std::allocator&lt;cql3::raw_value&gt; &gt;::~vector (6 samples, 0.01%)</title><rect x="849.2" y="421" width="0.2" height="15.0" fill="rgb(244,157,30)" rx="2" ry="2" />
<text  x="852.25" y="431.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;::_Tuple_impl&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const&amp;, auth::resource, void&gt; (52 samples, 0.11%)</title><rect x="762.5" y="357" width="1.3" height="15.0" fill="rgb(216,132,42)" rx="2" ry="2" />
<text  x="765.52" y="367.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (347 samples, 0.70%)</title><rect x="399.9" y="245" width="8.2" height="15.0" fill="rgb(233,28,3)" rx="2" ry="2" />
<text  x="402.85" y="255.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (7 samples, 0.01%)</title><rect x="836.1" y="341" width="0.1" height="15.0" fill="rgb(239,219,9)" rx="2" ry="2" />
<text  x="839.08" y="351.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (7 samples, 0.01%)</title><rect x="420.0" y="373" width="0.2" height="15.0" fill="rgb(237,37,50)" rx="2" ry="2" />
<text  x="423.02" y="383.5" ></text>
</g>
<g >
<title>free (6 samples, 0.01%)</title><rect x="402.2" y="197" width="0.2" height="15.0" fill="rgb(254,19,2)" rx="2" ry="2" />
<text  x="405.22" y="207.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (14 samples, 0.03%)</title><rect x="1149.7" y="469" width="0.3" height="15.0" fill="rgb(216,81,20)" rx="2" ry="2" />
<text  x="1152.67" y="479.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::arm (10 samples, 0.02%)</title><rect x="989.9" y="277" width="0.2" height="15.0" fill="rgb(243,172,53)" rx="2" ry="2" />
<text  x="992.88" y="287.5" ></text>
</g>
<g >
<title>free (109 samples, 0.22%)</title><rect x="403.1" y="181" width="2.6" height="15.0" fill="rgb(225,185,50)" rx="2" ry="2" />
<text  x="406.05" y="191.5" ></text>
</g>
<g >
<title>std::function&lt;bool  (17 samples, 0.03%)</title><rect x="549.0" y="389" width="0.4" height="15.0" fill="rgb(205,57,8)" rx="2" ry="2" />
<text  x="551.99" y="399.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (73 samples, 0.15%)</title><rect x="823.9" y="325" width="1.7" height="15.0" fill="rgb(252,150,36)" rx="2" ry="2" />
<text  x="826.87" y="335.5" ></text>
</g>
<g >
<title>operator delete (39 samples, 0.08%)</title><rect x="157.4" y="197" width="0.9" height="15.0" fill="rgb(246,106,52)" rx="2" ry="2" />
<text  x="160.37" y="207.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;partition_key, false, false&gt;::_Optional_base (6 samples, 0.01%)</title><rect x="1071.9" y="277" width="0.1" height="15.0" fill="rgb(206,113,22)" rx="2" ry="2" />
<text  x="1074.85" y="287.5" ></text>
</g>
<g >
<title>seastar::repeat&lt;flat_mutation_reader::impl::consume_pausable&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (4,906 samples, 9.93%)</title><rect x="295.8" y="293" width="117.2" height="15.0" fill="rgb(215,157,50)" rx="2" ry="2" />
<text  x="298.80" y="303.5" >seastar::repea..</text>
</g>
<g >
<title>partition_snapshot::version_count (15 samples, 0.03%)</title><rect x="226.5" y="133" width="0.4" height="15.0" fill="rgb(248,177,40)" rx="2" ry="2" />
<text  x="229.54" y="143.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value, std::allocator&lt;cql3::raw_value&gt; &gt;::~vector (26 samples, 0.05%)</title><rect x="669.0" y="453" width="0.6" height="15.0" fill="rgb(226,220,36)" rx="2" ry="2" />
<text  x="671.98" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (14 samples, 0.03%)</title><rect x="568.9" y="293" width="0.3" height="15.0" fill="rgb(245,68,16)" rx="2" ry="2" />
<text  x="571.89" y="303.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, std::pair&lt;auth::role_or_anonymous, auth::resource&gt;&amp;&amp;, auth::permissions_cache::get (5 samples, 0.01%)</title><rect x="805.8" y="277" width="0.1" height="15.0" fill="rgb(211,23,25)" rx="2" ry="2" />
<text  x="808.76" y="287.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::contains&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (97 samples, 0.20%)</title><rect x="841.3" y="389" width="2.3" height="15.0" fill="rgb(252,39,13)" rx="2" ry="2" />
<text  x="844.29" y="399.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (27 samples, 0.05%)</title><rect x="357.2" y="149" width="0.7" height="15.0" fill="rgb(236,54,4)" rx="2" ry="2" />
<text  x="360.23" y="159.5" ></text>
</g>
<g >
<title>schema::registry_entry (5 samples, 0.01%)</title><rect x="1008.5" y="277" width="0.2" height="15.0" fill="rgb(251,225,53)" rx="2" ry="2" />
<text  x="1011.54" y="287.5" ></text>
</g>
<g >
<title>operator delete (27 samples, 0.05%)</title><rect x="43.2" y="485" width="0.6" height="15.0" fill="rgb(230,78,41)" rx="2" ry="2" />
<text  x="46.16" y="495.5" ></text>
</g>
<g >
<title>partition_snapshot::slide_to_oldest (15 samples, 0.03%)</title><rect x="564.1" y="293" width="0.3" height="15.0" fill="rgb(218,11,7)" rx="2" ry="2" />
<text  x="567.09" y="303.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (6 samples, 0.01%)</title><rect x="810.6" y="325" width="0.1" height="15.0" fill="rgb(245,168,27)" rx="2" ry="2" />
<text  x="813.59" y="335.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_28has_slice_or_needs_filteringERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES28_S2B_ (6 samples, 0.01%)</title><rect x="942.8" y="389" width="0.2" height="15.0" fill="rgb(227,42,4)" rx="2" ry="2" />
<text  x="945.83" y="399.5" ></text>
</g>
<g >
<title>partition_snapshot::get_change_mark (47 samples, 0.10%)</title><rect x="215.0" y="165" width="1.2" height="15.0" fill="rgb(238,89,38)" rx="2" ry="2" />
<text  x="218.04" y="175.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::fillBuffer (66 samples, 0.13%)</title><rect x="16.6" y="325" width="1.6" height="15.0" fill="rgb(252,182,28)" rx="2" ry="2" />
<text  x="19.59" y="335.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::digest_read_result&gt;::clear (10 samples, 0.02%)</title><rect x="983.2" y="341" width="0.3" height="15.0" fill="rgb(246,1,45)" rx="2" ry="2" />
<text  x="986.23" y="351.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_last_fragment_kind, 4ul&gt;::small_vector (39 samples, 0.08%)</title><rect x="454.7" y="261" width="0.9" height="15.0" fill="rgb(224,15,33)" rx="2" ry="2" />
<text  x="457.71" y="271.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE8scheduleINS_8internal22promise_base_with_typeIvEEZNS6_14discard_resultEvEUlDpOT_E_ZNS6_14then_impl_nrvoISE_NS0_IvEEEET0_OT_EUlOSA_RSE_ONS_12future_stateIS5_EEE_EEvSJ_OSH_OT1_ (71 samples, 0.14%)</title><rect x="713.1" y="437" width="1.7" height="15.0" fill="rgb(210,171,25)" rx="2" ry="2" />
<text  x="716.11" y="447.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (15 samples, 0.03%)</title><rect x="921.8" y="389" width="0.4" height="15.0" fill="rgb(223,218,17)" rx="2" ry="2" />
<text  x="924.83" y="399.5" ></text>
</g>
<g >
<title>seastar::internal::awaiter&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::awaiter (9 samples, 0.02%)</title><rect x="976.7" y="357" width="0.2" height="15.0" fill="rgb(250,38,52)" rx="2" ry="2" />
<text  x="979.71" y="367.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::lsa_partition_reader (29 samples, 0.06%)</title><rect x="512.8" y="277" width="0.7" height="15.0" fill="rgb(245,139,27)" rx="2" ry="2" />
<text  x="515.79" y="287.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;service::query_state&gt;::~shared_ptr_count_for (42 samples, 0.09%)</title><rect x="665.3" y="485" width="1.0" height="15.0" fill="rgb(222,25,7)" rx="2" ry="2" />
<text  x="668.32" y="495.5" ></text>
</g>
<g >
<title>operator new (31 samples, 0.06%)</title><rect x="419.0" y="341" width="0.7" height="15.0" fill="rgb(254,121,38)" rx="2" ry="2" />
<text  x="421.99" y="351.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::check_queue_size (14 samples, 0.03%)</title><rect x="1022.1" y="197" width="0.3" height="15.0" fill="rgb(219,97,47)" rx="2" ry="2" />
<text  x="1025.08" y="207.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (7 samples, 0.01%)</title><rect x="578.7" y="325" width="0.1" height="15.0" fill="rgb(225,120,32)" rx="2" ry="2" />
<text  x="581.66" y="335.5" ></text>
</g>
<g >
<title>auth::permissions_cache::get (1,012 samples, 2.05%)</title><rect x="781.1" y="277" width="24.1" height="15.0" fill="rgb(230,131,54)" rx="2" ry="2" />
<text  x="784.06" y="287.5" >a..</text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_M_reset (11 samples, 0.02%)</title><rect x="1113.5" y="389" width="0.3" height="15.0" fill="rgb(236,118,10)" rx="2" ry="2" />
<text  x="1116.52" y="399.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::take_value (5 samples, 0.01%)</title><rect x="145.0" y="277" width="0.2" height="15.0" fill="rgb(222,192,5)" rx="2" ry="2" />
<text  x="148.04" y="287.5" ></text>
</g>
<g >
<title>service::client_state::ensure_has_permission (1,759 samples, 3.56%)</title><rect x="769.2" y="357" width="42.0" height="15.0" fill="rgb(240,123,18)" rx="2" ry="2" />
<text  x="772.18" y="367.5" >ser..</text>
</g>
<g >
<title>seastar::future&lt;void&gt;::operator= (8 samples, 0.02%)</title><rect x="831.4" y="437" width="0.2" height="15.0" fill="rgb(222,32,39)" rx="2" ry="2" />
<text  x="834.45" y="447.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::emplace_back&lt;mutation_reader_merger::reader_and_fragment&gt; (12 samples, 0.02%)</title><rect x="260.0" y="277" width="0.3" height="15.0" fill="rgb(252,98,27)" rx="2" ry="2" />
<text  x="263.01" y="287.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (12 samples, 0.02%)</title><rect x="631.5" y="485" width="0.3" height="15.0" fill="rgb(241,144,11)" rx="2" ry="2" />
<text  x="634.49" y="495.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;, seastar::future&lt;void&gt; &gt;, std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;, seastar::future&lt;void&gt; &gt; &gt; &gt;::~unique_ptr (79 samples, 0.16%)</title><rect x="815.7" y="389" width="1.9" height="15.0" fill="rgb(240,212,53)" rx="2" ry="2" />
<text  x="818.72" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt;::_M_realloc_insert&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; (28 samples, 0.06%)</title><rect x="244.3" y="213" width="0.7" height="15.0" fill="rgb(239,94,42)" rx="2" ry="2" />
<text  x="247.31" y="223.5" ></text>
</g>
<g >
<title>std::type_info::operator== (5 samples, 0.01%)</title><rect x="1000.1" y="277" width="0.1" height="15.0" fill="rgb(223,120,7)" rx="2" ry="2" />
<text  x="1003.13" y="287.5" ></text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt;&amp;&gt; (29 samples, 0.06%)</title><rect x="835.7" y="373" width="0.7" height="15.0" fill="rgb(220,155,13)" rx="2" ry="2" />
<text  x="838.75" y="383.5" ></text>
</g>
<g >
<title>operator new (75 samples, 0.15%)</title><rect x="961.1" y="373" width="1.8" height="15.0" fill="rgb(218,91,49)" rx="2" ry="2" />
<text  x="964.09" y="383.5" ></text>
</g>
<g >
<title>operator delete (19 samples, 0.04%)</title><rect x="638.2" y="485" width="0.4" height="15.0" fill="rgb(254,142,11)" rx="2" ry="2" />
<text  x="641.18" y="495.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (27 samples, 0.05%)</title><rect x="400.2" y="229" width="0.7" height="15.0" fill="rgb(230,195,33)" rx="2" ry="2" />
<text  x="403.24" y="239.5" ></text>
</g>
<g >
<title>schema::position (6 samples, 0.01%)</title><rect x="1123.0" y="421" width="0.1" height="15.0" fill="rgb(237,116,32)" rx="2" ry="2" />
<text  x="1126.01" y="431.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (7 samples, 0.01%)</title><rect x="765.3" y="341" width="0.2" height="15.0" fill="rgb(222,62,30)" rx="2" ry="2" />
<text  x="768.29" y="351.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (13 samples, 0.03%)</title><rect x="824.6" y="293" width="0.3" height="15.0" fill="rgb(212,59,52)" rx="2" ry="2" />
<text  x="827.64" y="303.5" ></text>
</g>
<g >
<title>auth::get_permissions (1,216 samples, 2.46%)</title><rect x="778.4" y="309" width="29.1" height="15.0" fill="rgb(209,49,16)" rx="2" ry="2" />
<text  x="781.40" y="319.5" >au..</text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (13 samples, 0.03%)</title><rect x="840.2" y="373" width="0.3" height="15.0" fill="rgb(250,42,40)" rx="2" ry="2" />
<text  x="843.17" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::~vector (14 samples, 0.03%)</title><rect x="1046.3" y="277" width="0.3" height="15.0" fill="rgb(252,203,14)" rx="2" ry="2" />
<text  x="1049.26" y="287.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;::operator (79 samples, 0.16%)</title><rect x="740.8" y="293" width="1.9" height="15.0" fill="rgb(240,13,36)" rx="2" ry="2" />
<text  x="743.80" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (60 samples, 0.12%)</title><rect x="1007.0" y="245" width="1.4" height="15.0" fill="rgb(208,123,21)" rx="2" ry="2" />
<text  x="1009.98" y="255.5" ></text>
</g>
<g >
<title>read_simple&lt;unsigned short, managed_bytes_basic_view&lt; (5 samples, 0.01%)</title><rect x="915.2" y="373" width="0.1" height="15.0" fill="rgb(225,99,54)" rx="2" ry="2" />
<text  x="918.21" y="383.5" ></text>
</g>
<g >
<title>seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;::swap (29 samples, 0.06%)</title><rect x="827.9" y="421" width="0.7" height="15.0" fill="rgb(212,217,22)" rx="2" ry="2" />
<text  x="830.91" y="431.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (13 samples, 0.03%)</title><rect x="584.4" y="405" width="0.4" height="15.0" fill="rgb(249,86,42)" rx="2" ry="2" />
<text  x="587.45" y="415.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_prepared_with_qo (5,291 samples, 10.71%)</title><rect x="717.8" y="453" width="126.4" height="15.0" fill="rgb(252,77,29)" rx="2" ry="2" />
<text  x="720.77" y="463.5" >single_node_cql..</text>
</g>
<g >
<title>seastar::future_state&lt;service::digest_read_result&gt;::move_it (7 samples, 0.01%)</title><rect x="685.7" y="469" width="0.2" height="15.0" fill="rgb(243,121,0)" rx="2" ry="2" />
<text  x="688.70" y="479.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_restrictions::size (7 samples, 0.01%)</title><rect x="644.5" y="469" width="0.2" height="15.0" fill="rgb(207,18,52)" rx="2" ry="2" />
<text  x="647.54" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (8 samples, 0.02%)</title><rect x="653.4" y="469" width="0.2" height="15.0" fill="rgb(235,149,37)" rx="2" ry="2" />
<text  x="656.40" y="479.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (5 samples, 0.01%)</title><rect x="1031.8" y="213" width="0.1" height="15.0" fill="rgb(209,88,0)" rx="2" ry="2" />
<text  x="1034.81" y="223.5" ></text>
</g>
<g >
<title>compound_type&lt; (6 samples, 0.01%)</title><rect x="543.6" y="341" width="0.2" height="15.0" fill="rgb(212,6,7)" rx="2" ry="2" />
<text  x="546.64" y="351.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::get0 (5 samples, 0.01%)</title><rect x="293.1" y="293" width="0.1" height="15.0" fill="rgb(224,64,52)" rx="2" ry="2" />
<text  x="296.10" y="303.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::emplace_back&lt;gms::inet_address const&amp;&gt; (12 samples, 0.02%)</title><rect x="705.9" y="453" width="0.3" height="15.0" fill="rgb(219,225,36)" rx="2" ry="2" />
<text  x="708.89" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (24 samples, 0.05%)</title><rect x="900.1" y="277" width="0.5" height="15.0" fill="rgb(251,73,19)" rx="2" ry="2" />
<text  x="903.07" y="287.5" ></text>
</g>
<g >
<title>seastar::reactor::do_run (48,314 samples, 97.83%)</title><rect x="23.1" y="533" width="1154.3" height="15.0" fill="rgb(252,99,20)" rx="2" ry="2" />
<text  x="26.09" y="543.5" >seastar::reactor::do_run</text>
</g>
<g >
<title>seastar::memory::allocate (12 samples, 0.02%)</title><rect x="98.8" y="421" width="0.2" height="15.0" fill="rgb(249,118,32)" rx="2" ry="2" />
<text  x="101.76" y="431.5" ></text>
</g>
<g >
<title>posix_memalign (138 samples, 0.28%)</title><rect x="191.3" y="53" width="3.3" height="15.0" fill="rgb(238,134,4)" rx="2" ry="2" />
<text  x="194.27" y="63.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::clear (8 samples, 0.02%)</title><rect x="800.8" y="197" width="0.2" height="15.0" fill="rgb(251,76,38)" rx="2" ry="2" />
<text  x="803.84" y="207.5" ></text>
</g>
<g >
<title>service::client_state::get_timestamp (15 samples, 0.03%)</title><rect x="1130.3" y="421" width="0.4" height="15.0" fill="rgb(217,118,4)" rx="2" ry="2" />
<text  x="1133.32" y="431.5" ></text>
</g>
<g >
<title>logalloc::basic_region_impl::set_reclaiming_enabled (8 samples, 0.02%)</title><rect x="227.6" y="197" width="0.2" height="15.0" fill="rgb(247,187,25)" rx="2" ry="2" />
<text  x="230.61" y="207.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (7 samples, 0.01%)</title><rect x="18.9" y="309" width="0.1" height="15.0" fill="rgb(218,151,3)" rx="2" ry="2" />
<text  x="21.86" y="319.5" ></text>
</g>
<g >
<title>seastar::internal::do_until_state&lt;executor&lt;test_read (13 samples, 0.03%)</title><rect x="25.2" y="517" width="0.3" height="15.0" fill="rgb(236,6,7)" rx="2" ry="2" />
<text  x="28.17" y="527.5" ></text>
</g>
<g >
<title>empty_flat_reader::~empty_flat_reader (36 samples, 0.07%)</title><rect x="556.7" y="325" width="0.8" height="15.0" fill="rgb(237,80,51)" rx="2" ry="2" />
<text  x="559.68" y="335.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_destroy_data_aux (13 samples, 0.03%)</title><rect x="367.7" y="149" width="0.3" height="15.0" fill="rgb(230,2,45)" rx="2" ry="2" />
<text  x="370.69" y="159.5" ></text>
</g>
<g >
<title>abstract_type::validate&lt;managed_bytes_basic_view&lt; (30 samples, 0.06%)</title><rect x="885.5" y="293" width="0.7" height="15.0" fill="rgb(248,72,54)" rx="2" ry="2" />
<text  x="888.49" y="303.5" ></text>
</g>
<g >
<title>auth::data_resource_view::keyspace (15 samples, 0.03%)</title><rect x="798.6" y="117" width="0.4" height="15.0" fill="rgb(227,214,42)" rx="2" ry="2" />
<text  x="801.59" y="127.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (26 samples, 0.05%)</title><rect x="772.0" y="293" width="0.6" height="15.0" fill="rgb(206,120,12)" rx="2" ry="2" />
<text  x="775.00" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (5 samples, 0.01%)</title><rect x="954.4" y="405" width="0.2" height="15.0" fill="rgb(224,154,31)" rx="2" ry="2" />
<text  x="957.44" y="415.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_4findERKNS5_10expressionENS5_6oper_tEEUlRS7_E_EES8_SE_T_EUlSG_E_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_8constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_11conjunctionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_12column_valueEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_5tokenEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13function_callEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4castEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_15field_selectionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4nullEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13bind_variableEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_16untyped_constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_17tuple_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_22collection_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSO_S6_SS_SW_S10_S14_S18_S1C_S1G_S1K_S1O_S1S_SK_S1W_S20_S24_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES29_S2C_ (7 samples, 0.01%)</title><rect x="648.0" y="437" width="0.1" height="15.0" fill="rgb(235,67,45)" rx="2" ry="2" />
<text  x="650.95" y="447.5" ></text>
</g>
<g >
<title>operator delete (60 samples, 0.12%)</title><rect x="562.7" y="293" width="1.4" height="15.0" fill="rgb(222,62,30)" rx="2" ry="2" />
<text  x="565.66" y="303.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (5 samples, 0.01%)</title><rect x="927.3" y="341" width="0.1" height="15.0" fill="rgb(212,35,26)" rx="2" ry="2" />
<text  x="930.28" y="351.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::needs_post_query_ordering (48 samples, 0.10%)</title><rect x="951.0" y="405" width="1.2" height="15.0" fill="rgb(224,29,37)" rx="2" ry="2" />
<text  x="954.00" y="415.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::do_execute (11,329 samples, 22.94%)</title><rect x="868.1" y="437" width="270.7" height="15.0" fill="rgb(240,67,32)" rx="2" ry="2" />
<text  x="871.12" y="447.5" >cql3::statements::select_statement::..</text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::~timer (7 samples, 0.01%)</title><rect x="693.8" y="453" width="0.2" height="15.0" fill="rgb(232,136,21)" rx="2" ry="2" />
<text  x="696.80" y="463.5" ></text>
</g>
<g >
<title>cql3::attributes::is_timeout_set (13 samples, 0.03%)</title><rect x="950.4" y="405" width="0.3" height="15.0" fill="rgb(226,2,16)" rx="2" ry="2" />
<text  x="953.36" y="415.5" ></text>
</g>
<g >
<title>locator::token_metadata::first_token (329 samples, 0.67%)</title><rect x="1076.8" y="277" width="7.9" height="15.0" fill="rgb(219,180,39)" rx="2" ry="2" />
<text  x="1079.85" y="287.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::move_it (6 samples, 0.01%)</title><rect x="709.4" y="501" width="0.1" height="15.0" fill="rgb(230,16,19)" rx="2" ry="2" />
<text  x="712.40" y="511.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (5 samples, 0.01%)</title><rect x="822.2" y="277" width="0.1" height="15.0" fill="rgb(231,220,19)" rx="2" ry="2" />
<text  x="825.15" y="287.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::impl (16 samples, 0.03%)</title><rect x="452.1" y="277" width="0.4" height="15.0" fill="rgb(248,4,15)" rx="2" ry="2" />
<text  x="455.08" y="287.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (8 samples, 0.02%)</title><rect x="514.3" y="293" width="0.2" height="15.0" fill="rgb(205,169,33)" rx="2" ry="2" />
<text  x="517.30" y="303.5" ></text>
</g>
<g >
<title>seastar::deferred_action&lt;table::query (69 samples, 0.14%)</title><rect x="599.7" y="437" width="1.6" height="15.0" fill="rgb(215,14,52)" rx="2" ry="2" />
<text  x="602.69" y="447.5" ></text>
</g>
<g >
<title>allocation_strategy::get_standard_migrator&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::leaf_node&gt; (19 samples, 0.04%)</title><rect x="197.1" y="85" width="0.4" height="15.0" fill="rgb(254,158,30)" rx="2" ry="2" />
<text  x="200.08" y="95.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureINS_10bool_classIN22mutation_reader_merger15needs_merge_tagEEEE9then_implIZNS5_14discard_resultEvEUlDpOT_E_NS0_IvEEEET0_OT_ (28 samples, 0.06%)</title><rect x="132.2" y="277" width="0.6" height="15.0" fill="rgb(224,204,32)" rx="2" ry="2" />
<text  x="135.16" y="287.5" ></text>
</g>
<g >
<title>read_simple&lt;unsigned short, managed_bytes_basic_view&lt; (25 samples, 0.05%)</title><rect x="486.2" y="197" width="0.6" height="15.0" fill="rgb(219,139,30)" rx="2" ry="2" />
<text  x="489.18" y="207.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%)</title><rect x="446.7" y="261" width="0.1" height="15.0" fill="rgb(231,217,17)" rx="2" ry="2" />
<text  x="449.66" y="271.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (28 samples, 0.06%)</title><rect x="832.8" y="421" width="0.6" height="15.0" fill="rgb(237,59,17)" rx="2" ry="2" />
<text  x="835.76" y="431.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_pausable&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (8 samples, 0.02%)</title><rect x="292.9" y="293" width="0.2" height="15.0" fill="rgb(223,147,22)" rx="2" ry="2" />
<text  x="295.91" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (42 samples, 0.09%)</title><rect x="839.5" y="389" width="1.0" height="15.0" fill="rgb(250,133,14)" rx="2" ry="2" />
<text  x="842.47" y="399.5" ></text>
</g>
<g >
<title>row::compact_and_expire (953 samples, 1.93%)</title><rect x="368.6" y="213" width="22.7" height="15.0" fill="rgb(242,61,52)" rx="2" ry="2" />
<text  x="371.58" y="223.5" >r..</text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (7 samples, 0.01%)</title><rect x="565.7" y="261" width="0.1" height="15.0" fill="rgb(248,1,12)" rx="2" ry="2" />
<text  x="568.67" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%)</title><rect x="803.8" y="229" width="0.1" height="15.0" fill="rgb(242,107,44)" rx="2" ry="2" />
<text  x="806.78" y="239.5" ></text>
</g>
<g >
<title>tracing::global_trace_state_ptr::global_trace_state_ptr (14 samples, 0.03%)</title><rect x="1047.9" y="293" width="0.3" height="15.0" fill="rgb(232,106,15)" rx="2" ry="2" />
<text  x="1050.89" y="303.5" ></text>
</g>
<g >
<title>write_fragmented&lt;managed_bytes_basic_view&lt; (44 samples, 0.09%)</title><rect x="927.6" y="341" width="1.0" height="15.0" fill="rgb(249,34,49)" rx="2" ry="2" />
<text  x="930.59" y="351.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::then_wrapped_nrvo&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (79 samples, 0.16%)</title><rect x="829.4" y="405" width="1.9" height="15.0" fill="rgb(227,210,54)" rx="2" ry="2" />
<text  x="832.37" y="415.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;, seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::finally_body&lt;seastar::smp::submit_to&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (270 samples, 0.55%)</title><rect x="628.3" y="501" width="6.5" height="15.0" fill="rgb(220,208,39)" rx="2" ry="2" />
<text  x="631.34" y="511.5" ></text>
</g>
<g >
<title>service::get_local_priority_manager (19 samples, 0.04%)</title><rect x="608.3" y="437" width="0.4" height="15.0" fill="rgb(223,190,52)" rx="2" ry="2" />
<text  x="611.29" y="447.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::clear (76 samples, 0.15%)</title><rect x="366.4" y="197" width="1.8" height="15.0" fill="rgb(225,165,48)" rx="2" ry="2" />
<text  x="369.43" y="207.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::cancel (18 samples, 0.04%)</title><rect x="702.0" y="421" width="0.4" height="15.0" fill="rgb(221,18,45)" rx="2" ry="2" />
<text  x="704.97" y="431.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;managed_bytes&gt;::make&lt;managed_bytes&gt; (30 samples, 0.06%)</title><rect x="900.0" y="309" width="0.7" height="15.0" fill="rgb(232,112,33)" rx="2" ry="2" />
<text  x="902.97" y="319.5" ></text>
</g>
<g >
<title>cql3::authorized_prepared_statements_cache::insert (522 samples, 1.06%)</title><rect x="730.5" y="405" width="12.4" height="15.0" fill="rgb(249,48,31)" rx="2" ry="2" />
<text  x="733.48" y="415.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (5 samples, 0.01%)</title><rect x="149.0" y="261" width="0.1" height="15.0" fill="rgb(216,50,32)" rx="2" ry="2" />
<text  x="152.03" y="271.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (6 samples, 0.01%)</title><rect x="19.9" y="245" width="0.1" height="15.0" fill="rgb(239,45,13)" rx="2" ry="2" />
<text  x="22.87" y="255.5" ></text>
</g>
<g >
<title>operator new (26 samples, 0.05%)</title><rect x="782.2" y="245" width="0.6" height="15.0" fill="rgb(207,108,21)" rx="2" ry="2" />
<text  x="785.18" y="255.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::get0 (12 samples, 0.02%)</title><rect x="79.3" y="453" width="0.3" height="15.0" fill="rgb(234,119,5)" rx="2" ry="2" />
<text  x="82.34" y="463.5" ></text>
</g>
<g >
<title>utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::get_or_load&lt;utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (244 samples, 0.49%)</title><rect x="737.1" y="373" width="5.8" height="15.0" fill="rgb(247,131,12)" rx="2" ry="2" />
<text  x="740.12" y="383.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (5 samples, 0.01%)</title><rect x="630.0" y="485" width="0.1" height="15.0" fill="rgb(237,86,27)" rx="2" ry="2" />
<text  x="633.01" y="495.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::metadata&gt;::~shared_ptr (12 samples, 0.02%)</title><rect x="649.6" y="469" width="0.3" height="15.0" fill="rgb(225,122,53)" rx="2" ry="2" />
<text  x="652.62" y="479.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_push_back_aux&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (6 samples, 0.01%)</title><rect x="16.8" y="261" width="0.1" height="15.0" fill="rgb(229,183,17)" rx="2" ry="2" />
<text  x="19.79" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (29 samples, 0.06%)</title><rect x="202.9" y="117" width="0.7" height="15.0" fill="rgb(251,92,3)" rx="2" ry="2" />
<text  x="205.93" y="127.5" ></text>
</g>
<g >
<title>bound_view::from_range_end&lt;nonwrapping_interval&gt; (9 samples, 0.02%)</title><rect x="218.4" y="117" width="0.2" height="15.0" fill="rgb(241,175,41)" rx="2" ry="2" />
<text  x="221.41" y="127.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (24 samples, 0.05%)</title><rect x="817.0" y="357" width="0.6" height="15.0" fill="rgb(254,46,52)" rx="2" ry="2" />
<text  x="820.02" y="367.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit_slot&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::memory_usage&lt;row::external_memory_usage (5 samples, 0.01%)</title><rect x="211.8" y="133" width="0.1" height="15.0" fill="rgb(227,45,17)" rx="2" ry="2" />
<text  x="214.77" y="143.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (45 samples, 0.09%)</title><rect x="1143.0" y="501" width="1.1" height="15.0" fill="rgb(236,83,19)" rx="2" ry="2" />
<text  x="1145.98" y="511.5" ></text>
</g>
<g >
<title>ser::qr_partition__static_row&lt;bytes_ostream&gt;::qr_partition__static_row (16 samples, 0.03%)</title><rect x="313.6" y="181" width="0.4" height="15.0" fill="rgb(228,19,42)" rx="2" ry="2" />
<text  x="316.60" y="191.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (9 samples, 0.02%)</title><rect x="35.0" y="453" width="0.2" height="15.0" fill="rgb(219,56,25)" rx="2" ry="2" />
<text  x="38.02" y="463.5" ></text>
</g>
<g >
<title>operator new (133 samples, 0.27%)</title><rect x="1005.3" y="277" width="3.1" height="15.0" fill="rgb(252,42,50)" rx="2" ry="2" />
<text  x="1008.26" y="287.5" ></text>
</g>
<g >
<title>operator new (29 samples, 0.06%)</title><rect x="506.8" y="197" width="0.7" height="15.0" fill="rgb(214,98,49)" rx="2" ry="2" />
<text  x="509.77" y="207.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::do_fill_buffer (3,546 samples, 7.18%)</title><rect x="149.1" y="261" width="84.8" height="15.0" fill="rgb(213,209,20)" rx="2" ry="2" />
<text  x="152.15" y="271.5" >partition..</text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, database::query (12 samples, 0.02%)</title><rect x="682.7" y="501" width="0.3" height="15.0" fill="rgb(250,130,40)" rx="2" ry="2" />
<text  x="685.74" y="511.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::alloc (163 samples, 0.33%)</title><rect x="190.8" y="69" width="3.9" height="15.0" fill="rgb(232,112,23)" rx="2" ry="2" />
<text  x="193.77" y="79.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reserve&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (4,497 samples, 9.11%)</title><rect x="146.5" y="277" width="107.4" height="15.0" fill="rgb(233,191,1)" rx="2" ry="2" />
<text  x="149.47" y="287.5" >logalloc::all..</text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (6 samples, 0.01%)</title><rect x="666.1" y="453" width="0.2" height="15.0" fill="rgb(241,175,28)" rx="2" ry="2" />
<text  x="669.11" y="463.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (28 samples, 0.06%)</title><rect x="679.2" y="437" width="0.7" height="15.0" fill="rgb(218,54,37)" rx="2" ry="2" />
<text  x="682.23" y="447.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;,  (191 samples, 0.39%)</title><rect x="721.0" y="405" width="4.6" height="15.0" fill="rgb(227,133,10)" rx="2" ry="2" />
<text  x="724.02" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (34 samples, 0.07%)</title><rect x="32.9" y="485" width="0.8" height="15.0" fill="rgb(254,30,27)" rx="2" ry="2" />
<text  x="35.94" y="495.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (24 samples, 0.05%)</title><rect x="493.4" y="309" width="0.6" height="15.0" fill="rgb(228,101,23)" rx="2" ry="2" />
<text  x="496.39" y="319.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_M_reset (11 samples, 0.02%)</title><rect x="40.1" y="437" width="0.3" height="15.0" fill="rgb(214,47,18)" rx="2" ry="2" />
<text  x="43.13" y="447.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::operator== (5 samples, 0.01%)</title><rect x="796.4" y="165" width="0.1" height="15.0" fill="rgb(208,39,5)" rx="2" ry="2" />
<text  x="799.42" y="175.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (14 samples, 0.03%)</title><rect x="202.5" y="101" width="0.4" height="15.0" fill="rgb(228,55,21)" rx="2" ry="2" />
<text  x="205.53" y="111.5" ></text>
</g>
<g >
<title>ser::qr_partition__static_row&lt;bytes_ostream&gt;::qr_partition__static_row (8 samples, 0.02%)</title><rect x="308.1" y="165" width="0.2" height="15.0" fill="rgb(241,179,45)" rx="2" ry="2" />
<text  x="311.13" y="175.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::then_wrapped_common&lt;true, void, service::abstract_read_executor::make_data_requests (6 samples, 0.01%)</title><rect x="991.2" y="325" width="0.2" height="15.0" fill="rgb(242,0,53)" rx="2" ry="2" />
<text  x="994.24" y="335.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;clustering_key_prefix&gt;::_M_reset (6 samples, 0.01%)</title><rect x="421.9" y="373" width="0.1" height="15.0" fill="rgb(219,26,44)" rx="2" ry="2" />
<text  x="424.86" y="383.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (19 samples, 0.04%)</title><rect x="39.2" y="453" width="0.4" height="15.0" fill="rgb(212,199,46)" rx="2" ry="2" />
<text  x="42.17" y="463.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (8 samples, 0.02%)</title><rect x="1158.0" y="405" width="0.2" height="15.0" fill="rgb(228,135,4)" rx="2" ry="2" />
<text  x="1160.96" y="415.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;query::querier&lt; (258 samples, 0.52%)</title><rect x="610.9" y="437" width="6.1" height="15.0" fill="rgb(254,165,10)" rx="2" ry="2" />
<text  x="613.87" y="447.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (40 samples, 0.08%)</title><rect x="743.7" y="389" width="1.0" height="15.0" fill="rgb(229,59,21)" rx="2" ry="2" />
<text  x="746.71" y="399.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::response_count (6 samples, 0.01%)</title><rect x="702.5" y="421" width="0.2" height="15.0" fill="rgb(231,81,49)" rx="2" ry="2" />
<text  x="705.55" y="431.5" ></text>
</g>
<g >
<title>dht::murmur3_partitioner::get_token (498 samples, 1.01%)</title><rect x="909.4" y="389" width="11.9" height="15.0" fill="rgb(241,206,20)" rx="2" ry="2" />
<text  x="912.38" y="399.5" ></text>
</g>
<g >
<title>auth::permissions_cache::get (6 samples, 0.01%)</title><rect x="780.6" y="293" width="0.1" height="15.0" fill="rgb(209,80,8)" rx="2" ry="2" />
<text  x="783.56" y="303.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::clear (6 samples, 0.01%)</title><rect x="1150.2" y="485" width="0.2" height="15.0" fill="rgb(209,26,42)" rx="2" ry="2" />
<text  x="1153.22" y="495.5" ></text>
</g>
<g >
<title>operator new (17 samples, 0.03%)</title><rect x="651.0" y="453" width="0.4" height="15.0" fill="rgb(249,36,11)" rx="2" ry="2" />
<text  x="654.01" y="463.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;dht::ring_position&gt;::wrapping_interval (47 samples, 0.10%)</title><rect x="923.2" y="357" width="1.1" height="15.0" fill="rgb(206,220,46)" rx="2" ry="2" />
<text  x="926.22" y="367.5" ></text>
</g>
<g >
<title>utils::loading_shared_values&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater, 256ul&gt;::find&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt; &gt; (188 samples, 0.38%)</title><rect x="721.1" y="389" width="4.5" height="15.0" fill="rgb(233,142,14)" rx="2" ry="2" />
<text  x="724.09" y="399.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (6 samples, 0.01%)</title><rect x="520.9" y="325" width="0.2" height="15.0" fill="rgb(241,149,47)" rx="2" ry="2" />
<text  x="523.94" y="335.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate_to_raw_view (883 samples, 1.79%)</title><rect x="881.0" y="357" width="21.0" height="15.0" fill="rgb(216,47,19)" rx="2" ry="2" />
<text  x="883.95" y="367.5" ></text>
</g>
<g >
<title>seastar::promise&lt;void&gt;::promise (43 samples, 0.09%)</title><rect x="77.5" y="389" width="1.0" height="15.0" fill="rgb(243,6,18)" rx="2" ry="2" />
<text  x="80.47" y="399.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::emplace_back&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; const&amp;&gt; (15 samples, 0.03%)</title><rect x="765.2" y="357" width="0.4" height="15.0" fill="rgb(222,190,24)" rx="2" ry="2" />
<text  x="768.22" y="367.5" ></text>
</g>
<g >
<title>create_partitions (275 samples, 0.56%)</title><rect x="16.1" y="533" width="6.5" height="15.0" fill="rgb(229,164,3)" rx="2" ry="2" />
<text  x="19.07" y="543.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::take_value (18 samples, 0.04%)</title><rect x="52.6" y="469" width="0.5" height="15.0" fill="rgb(222,178,54)" rx="2" ry="2" />
<text  x="55.65" y="479.5" ></text>
</g>
<g >
<title>seastar::weakly_referencable&lt;cql3::statements::prepared_statement&gt;::weak_from_this (11 samples, 0.02%)</title><rect x="720.4" y="405" width="0.3" height="15.0" fill="rgb(237,186,20)" rx="2" ry="2" />
<text  x="723.44" y="415.5" ></text>
</g>
<g >
<title>double_decker&lt;long, memtable_entry, dht::raw_token_less_comparator, dht::ring_position_comparator, 16,  (7 samples, 0.01%)</title><rect x="1140.3" y="213" width="0.2" height="15.0" fill="rgb(246,170,43)" rx="2" ry="2" />
<text  x="1143.33" y="223.5" ></text>
</g>
<g >
<title>utils::tuple_hash::operator (39 samples, 0.08%)</title><rect x="822.4" y="309" width="0.9" height="15.0" fill="rgb(237,122,34)" rx="2" ry="2" />
<text  x="825.41" y="319.5" ></text>
</g>
<g >
<title>auth::data_resource_view::data_resource_view (5 samples, 0.01%)</title><rect x="813.0" y="325" width="0.1" height="15.0" fill="rgb(226,77,36)" rx="2" ry="2" />
<text  x="815.95" y="335.5" ></text>
</g>
<g >
<title>db::assure_sufficient_live_nodes&lt;utils::small_vector&lt;gms::inet_address, 3ul&gt;, std::array&lt;gms::inet_address, 0ul&gt; &gt; (16 samples, 0.03%)</title><rect x="1061.9" y="341" width="0.3" height="15.0" fill="rgb(236,108,47)" rx="2" ry="2" />
<text  x="1064.86" y="351.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::on_new_range (571 samples, 1.16%)</title><rect x="234.0" y="261" width="13.6" height="15.0" fill="rgb(250,146,17)" rx="2" ry="2" />
<text  x="236.97" y="271.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::operator= (24 samples, 0.05%)</title><rect x="1148.5" y="485" width="0.6" height="15.0" fill="rgb(226,214,5)" rx="2" ry="2" />
<text  x="1151.50" y="495.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (6 samples, 0.01%)</title><rect x="773.1" y="277" width="0.1" height="15.0" fill="rgb(213,42,28)" rx="2" ry="2" />
<text  x="776.08" y="287.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::emplace_back&lt;unsigned int const&amp;&gt; (17 samples, 0.03%)</title><rect x="1120.6" y="405" width="0.4" height="15.0" fill="rgb(211,65,52)" rx="2" ry="2" />
<text  x="1123.62" y="415.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::do_fill_buffer (10 samples, 0.02%)</title><rect x="858.7" y="389" width="0.3" height="15.0" fill="rgb(213,42,42)" rx="2" ry="2" />
<text  x="861.73" y="399.5" ></text>
</g>
<g >
<title>seastar::internal::do_until_state&lt;executor&lt;test_read (6,115 samples, 12.38%)</title><rect x="710.2" y="501" width="146.1" height="15.0" fill="rgb(206,26,11)" rx="2" ry="2" />
<text  x="713.19" y="511.5" >seastar::internal:..</text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (132 samples, 0.27%)</title><rect x="917.8" y="341" width="3.2" height="15.0" fill="rgb(224,99,34)" rx="2" ry="2" />
<text  x="920.84" y="351.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_live_sorted_endpoints (893 samples, 1.81%)</title><rect x="1074.2" y="341" width="21.3" height="15.0" fill="rgb(210,136,17)" rx="2" ry="2" />
<text  x="1077.17" y="351.5" >s..</text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (11 samples, 0.02%)</title><rect x="448.0" y="261" width="0.2" height="15.0" fill="rgb(226,39,15)" rx="2" ry="2" />
<text  x="450.97" y="271.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (33 samples, 0.07%)</title><rect x="527.2" y="261" width="0.7" height="15.0" fill="rgb(236,121,49)" rx="2" ry="2" />
<text  x="530.15" y="271.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (6 samples, 0.01%)</title><rect x="680.1" y="437" width="0.2" height="15.0" fill="rgb(227,15,31)" rx="2" ry="2" />
<text  x="683.14" y="447.5" ></text>
</g>
<g >
<title>schema_registry::learn (5 samples, 0.01%)</title><rect x="45.4" y="469" width="0.2" height="15.0" fill="rgb(215,135,42)" rx="2" ry="2" />
<text  x="48.43" y="479.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_token (14 samples, 0.03%)</title><rect x="878.6" y="405" width="0.4" height="15.0" fill="rgb(251,167,23)" rx="2" ry="2" />
<text  x="881.63" y="415.5" ></text>
</g>
<g >
<title>std::__make_heap&lt;__gnu_cxx::__normal_iterator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position*, std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::heap_compare&gt; &gt; (8 samples, 0.02%)</title><rect x="247.3" y="229" width="0.2" height="15.0" fill="rgb(222,54,8)" rx="2" ry="2" />
<text  x="250.28" y="239.5" ></text>
</g>
<g >
<title>operator delete (28 samples, 0.06%)</title><rect x="694.6" y="485" width="0.7" height="15.0" fill="rgb(241,6,5)" rx="2" ry="2" />
<text  x="697.61" y="495.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;service::query_state, false&gt;::make&lt;service::client_state&amp;, service_permit&gt; (51 samples, 0.10%)</title><rect x="839.3" y="421" width="1.2" height="15.0" fill="rgb(210,35,25)" rx="2" ry="2" />
<text  x="842.28" y="431.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;service::digest_read_resolver, false&gt;::make&lt;seastar::lw_shared_ptr&lt;schema const&gt;&amp;, db::consistency_level&amp;, unsigned long&amp;, unsigned long, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;&amp;&gt; (248 samples, 0.50%)</title><rect x="984.2" y="341" width="5.9" height="15.0" fill="rgb(247,216,46)" rx="2" ry="2" />
<text  x="987.21" y="351.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (43 samples, 0.09%)</title><rect x="199.9" y="117" width="1.0" height="15.0" fill="rgb(212,144,19)" rx="2" ry="2" />
<text  x="202.87" y="127.5" ></text>
</g>
<g >
<title>cql3::statements::update_statement::execute_operations_for_key (9 samples, 0.02%)</title><rect x="859.8" y="341" width="0.2" height="15.0" fill="rgb(248,159,52)" rx="2" ry="2" />
<text  x="862.83" y="351.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (10 samples, 0.02%)</title><rect x="319.2" y="197" width="0.2" height="15.0" fill="rgb(212,69,37)" rx="2" ry="2" />
<text  x="322.19" y="207.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (5 samples, 0.01%)</title><rect x="113.0" y="421" width="0.2" height="15.0" fill="rgb(241,53,7)" rx="2" ry="2" />
<text  x="116.05" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (30 samples, 0.06%)</title><rect x="419.0" y="325" width="0.7" height="15.0" fill="rgb(243,90,2)" rx="2" ry="2" />
<text  x="422.01" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (11 samples, 0.02%)</title><rect x="933.4" y="389" width="0.2" height="15.0" fill="rgb(249,71,20)" rx="2" ry="2" />
<text  x="936.37" y="399.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::maybe_drop_from (6 samples, 0.01%)</title><rect x="369.2" y="197" width="0.2" height="15.0" fill="rgb(213,11,24)" rx="2" ry="2" />
<text  x="372.22" y="207.5" ></text>
</g>
<g >
<title>seastar::do_until&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (4,538 samples, 9.19%)</title><rect x="145.8" y="293" width="108.4" height="15.0" fill="rgb(226,0,1)" rx="2" ry="2" />
<text  x="148.78" y="303.5" >seastar::do_u..</text>
</g>
<g >
<title>list_reader_selector::create_new_readers (43 samples, 0.09%)</title><rect x="442.0" y="277" width="1.0" height="15.0" fill="rgb(207,179,24)" rx="2" ry="2" />
<text  x="444.95" y="287.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_M_reset (7 samples, 0.01%)</title><rect x="744.7" y="405" width="0.1" height="15.0" fill="rgb(234,205,53)" rx="2" ry="2" />
<text  x="747.67" y="415.5" ></text>
</g>
<g >
<title>bytes_view_hasher::finalize (38 samples, 0.08%)</title><rect x="724.1" y="293" width="0.9" height="15.0" fill="rgb(209,77,30)" rx="2" ry="2" />
<text  x="727.12" y="303.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (31 samples, 0.06%)</title><rect x="309.3" y="165" width="0.7" height="15.0" fill="rgb(251,20,13)" rx="2" ry="2" />
<text  x="312.28" y="175.5" ></text>
</g>
<g >
<title>database::find_column_family (8 samples, 0.02%)</title><rect x="968.6" y="357" width="0.2" height="15.0" fill="rgb(215,5,39)" rx="2" ry="2" />
<text  x="971.56" y="367.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (50 samples, 0.10%)</title><rect x="731.6" y="373" width="1.2" height="15.0" fill="rgb(243,229,13)" rx="2" ry="2" />
<text  x="734.60" y="383.5" ></text>
</g>
<g >
<title>absl::container_internal::probe_seq&lt;16ul&gt;::probe_seq (33 samples, 0.07%)</title><rect x="1055.0" y="309" width="0.8" height="15.0" fill="rgb(217,85,51)" rx="2" ry="2" />
<text  x="1058.03" y="319.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt; &gt;::invoke&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (1,301 samples, 2.63%)</title><rect x="1009.0" y="277" width="31.1" height="15.0" fill="rgb(229,98,22)" rx="2" ry="2" />
<text  x="1012.01" y="287.5" >se..</text>
</g>
<g >
<title>cql3::statements::select_statement::get_timeout (14 samples, 0.03%)</title><rect x="950.7" y="405" width="0.3" height="15.0" fill="rgb(249,59,36)" rx="2" ry="2" />
<text  x="953.67" y="415.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_nodes (7 samples, 0.01%)</title><rect x="1169.1" y="469" width="0.2" height="15.0" fill="rgb(223,114,15)" rx="2" ry="2" />
<text  x="1172.12" y="479.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::maybe_refresh_state (217 samples, 0.44%)</title><rect x="214.8" y="181" width="5.2" height="15.0" fill="rgb(213,50,25)" rx="2" ry="2" />
<text  x="217.78" y="191.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;cql3::raw_value const*, cql3::raw_value*&gt; (20 samples, 0.04%)</title><rect x="853.3" y="437" width="0.5" height="15.0" fill="rgb(237,219,49)" rx="2" ry="2" />
<text  x="856.31" y="447.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (5 samples, 0.01%)</title><rect x="44.6" y="485" width="0.2" height="15.0" fill="rgb(253,78,7)" rx="2" ry="2" />
<text  x="47.64" y="495.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.01%)</title><rect x="113.4" y="421" width="0.1" height="15.0" fill="rgb(236,205,53)" rx="2" ry="2" />
<text  x="116.43" y="431.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;void&gt;::set_value&lt;&gt; (23 samples, 0.05%)</title><rect x="32.3" y="485" width="0.5" height="15.0" fill="rgb(244,67,40)" rx="2" ry="2" />
<text  x="35.29" y="495.5" ></text>
</g>
<g >
<title>abstract_type::bound_value_needs_to_be_reserialized (12 samples, 0.02%)</title><rect x="885.2" y="293" width="0.3" height="15.0" fill="rgb(238,58,24)" rx="2" ry="2" />
<text  x="888.20" y="303.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::clear (25 samples, 0.05%)</title><rect x="654.5" y="485" width="0.6" height="15.0" fill="rgb(206,103,24)" rx="2" ry="2" />
<text  x="657.50" y="495.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;std::function&lt;flat_mutation_reader  (27 samples, 0.05%)</title><rect x="621.0" y="405" width="0.7" height="15.0" fill="rgb(216,85,16)" rx="2" ry="2" />
<text  x="624.03" y="415.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_destroy_data (24 samples, 0.05%)</title><rect x="367.4" y="165" width="0.6" height="15.0" fill="rgb(205,141,27)" rx="2" ry="2" />
<text  x="370.43" y="175.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;bytes_ostream::chunk, std::default_delete&lt;bytes_ostream::chunk&gt; &gt;::~unique_ptr (14 samples, 0.03%)</title><rect x="619.4" y="437" width="0.3" height="15.0" fill="rgb(214,82,15)" rx="2" ry="2" />
<text  x="622.35" y="447.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (20 samples, 0.04%)</title><rect x="663.6" y="469" width="0.5" height="15.0" fill="rgb(224,177,22)" rx="2" ry="2" />
<text  x="666.65" y="479.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;query::result&gt;::make&lt;query::result&gt; (46 samples, 0.09%)</title><rect x="606.4" y="437" width="1.1" height="15.0" fill="rgb(242,181,26)" rx="2" ry="2" />
<text  x="609.40" y="447.5" ></text>
</g>
<g >
<title>std::__optional_hash_call_base&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, true&gt;::operator (18 samples, 0.04%)</title><rect x="799.9" y="85" width="0.4" height="15.0" fill="rgb(211,60,27)" rx="2" ry="2" />
<text  x="802.88" y="95.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::key_is_in_relation (41 samples, 0.08%)</title><rect x="647.9" y="453" width="0.9" height="15.0" fill="rgb(209,107,6)" rx="2" ry="2" />
<text  x="650.86" y="463.5" ></text>
</g>
<g >
<title>abstract_type::without_reversed (10 samples, 0.02%)</title><rect x="907.3" y="389" width="0.2" height="15.0" fill="rgb(245,199,32)" rx="2" ry="2" />
<text  x="910.28" y="399.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (11 samples, 0.02%)</title><rect x="1151.8" y="485" width="0.2" height="15.0" fill="rgb(245,111,24)" rx="2" ry="2" />
<text  x="1154.77" y="495.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_singular (587 samples, 1.19%)</title><rect x="1152.5" y="485" width="14.0" height="15.0" fill="rgb(253,13,16)" rx="2" ry="2" />
<text  x="1155.46" y="495.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (11,530 samples, 23.35%)</title><rect x="864.4" y="469" width="275.4" height="15.0" fill="rgb(238,120,46)" rx="2" ry="2" />
<text  x="867.37" y="479.5" >seastar::noncopyable_function&lt;seasta..</text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::trivial_direct_move&lt;16ul&gt; (11 samples, 0.02%)</title><rect x="1026.4" y="149" width="0.3" height="15.0" fill="rgb(224,209,22)" rx="2" ry="2" />
<text  x="1029.41" y="159.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (13 samples, 0.03%)</title><rect x="551.0" y="421" width="0.3" height="15.0" fill="rgb(238,46,10)" rx="2" ry="2" />
<text  x="554.00" y="431.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::modification_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::do_flush (31 samples, 0.06%)</title><rect x="859.4" y="485" width="0.7" height="15.0" fill="rgb(229,133,30)" rx="2" ry="2" />
<text  x="862.38" y="495.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (25 samples, 0.05%)</title><rect x="538.7" y="405" width="0.6" height="15.0" fill="rgb(217,74,26)" rx="2" ry="2" />
<text  x="541.74" y="415.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::abstract_read_executor&gt;::~shared_ptr (6 samples, 0.01%)</title><rect x="983.6" y="341" width="0.2" height="15.0" fill="rgb(251,163,44)" rx="2" ry="2" />
<text  x="986.62" y="351.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_pausable&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (22 samples, 0.04%)</title><rect x="682.2" y="357" width="0.5" height="15.0" fill="rgb(254,211,41)" rx="2" ry="2" />
<text  x="685.17" y="367.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::forward_to (7 samples, 0.01%)</title><rect x="1142.0" y="485" width="0.1" height="15.0" fill="rgb(249,27,1)" rx="2" ry="2" />
<text  x="1144.98" y="495.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (12 samples, 0.02%)</title><rect x="486.5" y="181" width="0.3" height="15.0" fill="rgb(241,208,10)" rx="2" ry="2" />
<text  x="489.49" y="191.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (18 samples, 0.04%)</title><rect x="902.6" y="357" width="0.4" height="15.0" fill="rgb(231,30,27)" rx="2" ry="2" />
<text  x="905.55" y="367.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (2,165 samples, 4.38%)</title><rect x="169.4" y="197" width="51.7" height="15.0" fill="rgb(214,148,39)" rx="2" ry="2" />
<text  x="172.39" y="207.5" >parti..</text>
</g>
<g >
<title>utils::phased_barrier::start (6 samples, 0.01%)</title><rect x="1040.0" y="261" width="0.1" height="15.0" fill="rgb(228,80,19)" rx="2" ry="2" />
<text  x="1042.96" y="271.5" ></text>
</g>
<g >
<title>reader_permit::consume (12 samples, 0.02%)</title><rect x="508.4" y="181" width="0.3" height="15.0" fill="rgb(208,210,53)" rx="2" ry="2" />
<text  x="511.42" y="191.5" ></text>
</g>
<g >
<title>mutation_querier::consume_end_of_stream (6 samples, 0.01%)</title><rect x="302.3" y="229" width="0.2" height="15.0" fill="rgb(208,3,54)" rx="2" ry="2" />
<text  x="305.32" y="239.5" ></text>
</g>
<g >
<title>utils::tuple_hash::operator (50 samples, 0.10%)</title><rect x="757.5" y="341" width="1.2" height="15.0" fill="rgb(248,15,46)" rx="2" ry="2" />
<text  x="760.48" y="351.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;managed_bytes&gt;::dispose (19 samples, 0.04%)</title><rect x="906.5" y="373" width="0.4" height="15.0" fill="rgb(252,47,5)" rx="2" ry="2" />
<text  x="909.47" y="383.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (11 samples, 0.02%)</title><rect x="258.4" y="277" width="0.3" height="15.0" fill="rgb(207,66,53)" rx="2" ry="2" />
<text  x="261.43" y="287.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reclaiming_disabled&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (2,274 samples, 4.60%)</title><rect x="167.4" y="213" width="54.4" height="15.0" fill="rgb(219,62,18)" rx="2" ry="2" />
<text  x="170.43" y="223.5" >logal..</text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::EqualElement&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt;&amp;&gt; (62 samples, 0.13%)</title><rect x="755.7" y="341" width="1.4" height="15.0" fill="rgb(238,65,48)" rx="2" ry="2" />
<text  x="758.66" y="351.5" ></text>
</g>
<g >
<title>std::forward_as_tuple&lt;auth::role_or_anonymous, auth::get_permissions (10 samples, 0.02%)</title><rect x="807.6" y="309" width="0.2" height="15.0" fill="rgb(207,66,48)" rx="2" ry="2" />
<text  x="810.58" y="319.5" ></text>
</g>
<g >
<title>range_tombstone_stream::get_next (19 samples, 0.04%)</title><rect x="226.9" y="165" width="0.5" height="15.0" fill="rgb(220,97,11)" rx="2" ry="2" />
<text  x="229.94" y="175.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (7 samples, 0.01%)</title><rect x="285.9" y="405" width="0.2" height="15.0" fill="rgb(212,79,24)" rx="2" ry="2" />
<text  x="288.91" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (5 samples, 0.01%)</title><rect x="1119.2" y="389" width="0.2" height="15.0" fill="rgb(237,26,31)" rx="2" ry="2" />
<text  x="1122.23" y="399.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (213 samples, 0.43%)</title><rect x="16.4" y="437" width="5.1" height="15.0" fill="rgb(216,71,40)" rx="2" ry="2" />
<text  x="19.40" y="447.5" ></text>
</g>
<g >
<title>std::default_delete&lt;cql3::query_options&gt;::operator (124 samples, 0.25%)</title><rect x="667.2" y="469" width="2.9" height="15.0" fill="rgb(234,19,50)" rx="2" ry="2" />
<text  x="670.16" y="479.5" ></text>
</g>
<g >
<title>operator new (31 samples, 0.06%)</title><rect x="103.0" y="389" width="0.7" height="15.0" fill="rgb(222,103,22)" rx="2" ry="2" />
<text  x="105.99" y="399.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::clear (9 samples, 0.02%)</title><rect x="261.4" y="309" width="0.2" height="15.0" fill="rgb(241,17,46)" rx="2" ry="2" />
<text  x="264.37" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::~vector (8 samples, 0.02%)</title><rect x="537.3" y="341" width="0.2" height="15.0" fill="rgb(212,177,19)" rx="2" ry="2" />
<text  x="540.31" y="351.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::query_options, std::default_delete&lt;cql3::query_options&gt; &gt;::~unique_ptr (6 samples, 0.01%)</title><rect x="844.0" y="437" width="0.1" height="15.0" fill="rgb(222,188,34)" rx="2" ry="2" />
<text  x="846.99" y="447.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;reader_concurrency_semaphore::entry&gt;::_M_reset (53 samples, 0.11%)</title><rect x="75.3" y="389" width="1.2" height="15.0" fill="rgb(230,106,39)" rx="2" ry="2" />
<text  x="78.27" y="399.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (152 samples, 0.31%)</title><rect x="180.5" y="101" width="3.6" height="15.0" fill="rgb(236,87,26)" rx="2" ry="2" />
<text  x="183.50" y="111.5" ></text>
</g>
<g >
<title>operator delete (25 samples, 0.05%)</title><rect x="632.7" y="469" width="0.6" height="15.0" fill="rgb(245,17,28)" rx="2" ry="2" />
<text  x="635.68" y="479.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (11 samples, 0.02%)</title><rect x="82.9" y="453" width="0.3" height="15.0" fill="rgb(243,171,6)" rx="2" ry="2" />
<text  x="85.92" y="463.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (20 samples, 0.04%)</title><rect x="522.7" y="341" width="0.5" height="15.0" fill="rgb(226,207,19)" rx="2" ry="2" />
<text  x="525.68" y="351.5" ></text>
</g>
<g >
<title>sstring_hash::operator (33 samples, 0.07%)</title><rect x="836.6" y="373" width="0.8" height="15.0" fill="rgb(236,201,0)" rx="2" ry="2" />
<text  x="839.63" y="383.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;partition_snapshot&gt;::make&lt;seastar::lw_shared_ptr&lt;schema const&gt;&amp;, logalloc::region&amp;, mutation_cleaner&amp;, partition_entry*, cache_tracker*&amp;, unsigned long&amp;&gt; (7 samples, 0.01%)</title><rect x="518.3" y="309" width="0.2" height="15.0" fill="rgb(222,206,0)" rx="2" ry="2" />
<text  x="521.31" y="319.5" ></text>
</g>
<g >
<title>mutation_partition::lower_bound (26 samples, 0.05%)</title><rect x="235.9" y="213" width="0.6" height="15.0" fill="rgb(208,214,24)" rx="2" ry="2" />
<text  x="238.90" y="223.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::do_execute (30 samples, 0.06%)</title><rect x="859.4" y="437" width="0.7" height="15.0" fill="rgb(212,183,21)" rx="2" ry="2" />
<text  x="862.40" y="447.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (103 samples, 0.21%)</title><rect x="1117.2" y="405" width="2.5" height="15.0" fill="rgb(246,2,0)" rx="2" ry="2" />
<text  x="1120.25" y="415.5" ></text>
</g>
<g >
<title>managed_bytes::free_chain (152 samples, 0.31%)</title><rect x="402.4" y="197" width="3.6" height="15.0" fill="rgb(228,109,21)" rx="2" ry="2" />
<text  x="405.36" y="207.5" ></text>
</g>
<g >
<title>bytes_view_hasher::update (6 samples, 0.01%)</title><rect x="723.2" y="309" width="0.1" height="15.0" fill="rgb(208,95,32)" rx="2" ry="2" />
<text  x="726.19" y="319.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (15 samples, 0.03%)</title><rect x="52.3" y="469" width="0.3" height="15.0" fill="rgb(253,138,21)" rx="2" ry="2" />
<text  x="55.27" y="479.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (15 samples, 0.03%)</title><rect x="1104.7" y="389" width="0.3" height="15.0" fill="rgb(209,107,45)" rx="2" ry="2" />
<text  x="1107.68" y="399.5" ></text>
</g>
<g >
<title>flush_reader::fill_buffer (8 samples, 0.02%)</title><rect x="22.7" y="485" width="0.2" height="15.0" fill="rgb(227,43,21)" rx="2" ry="2" />
<text  x="25.69" y="495.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_live_endpoints (768 samples, 1.56%)</title><rect x="1075.1" y="325" width="18.3" height="15.0" fill="rgb(251,183,6)" rx="2" ry="2" />
<text  x="1078.05" y="335.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE9then_implIZNS6_14discard_resultEvEUlDpOT_E_NS0_IvEEEET0_OT_ (101 samples, 0.20%)</title><rect x="712.7" y="469" width="2.4" height="15.0" fill="rgb(206,87,17)" rx="2" ry="2" />
<text  x="715.65" y="479.5" ></text>
</g>
<g >
<title>std::__lower_bound&lt;__gnu_cxx::__normal_iterator&lt;long*, std::vector&lt;long, std::allocator&lt;long&gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_less_val&gt; (42 samples, 0.09%)</title><rect x="1163.9" y="453" width="1.0" height="15.0" fill="rgb(237,79,53)" rx="2" ry="2" />
<text  x="1166.93" y="463.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (5 samples, 0.01%)</title><rect x="695.3" y="485" width="0.1" height="15.0" fill="rgb(224,86,23)" rx="2" ry="2" />
<text  x="698.28" y="495.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (41 samples, 0.08%)</title><rect x="100.1" y="421" width="1.0" height="15.0" fill="rgb(254,0,12)" rx="2" ry="2" />
<text  x="103.07" y="431.5" ></text>
</g>
<g >
<title>single_node_cql_env::local_qp (5 samples, 0.01%)</title><rect x="844.2" y="453" width="0.1" height="15.0" fill="rgb(241,204,2)" rx="2" ry="2" />
<text  x="847.18" y="463.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (5 samples, 0.01%)</title><rect x="765.5" y="341" width="0.1" height="15.0" fill="rgb(210,227,7)" rx="2" ry="2" />
<text  x="768.46" y="351.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (9 samples, 0.02%)</title><rect x="394.9" y="245" width="0.2" height="15.0" fill="rgb(221,207,6)" rx="2" ry="2" />
<text  x="397.91" y="255.5" ></text>
</g>
<g >
<title>std::function&lt;seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (11 samples, 0.02%)</title><rect x="788.9" y="213" width="0.3" height="15.0" fill="rgb(207,39,9)" rx="2" ry="2" />
<text  x="791.94" y="223.5" ></text>
</g>
<g >
<title>read_simple&lt;unsigned short, managed_bytes_basic_view&lt; (6 samples, 0.01%)</title><rect x="911.6" y="357" width="0.1" height="15.0" fill="rgb(254,206,46)" rx="2" ry="2" />
<text  x="914.58" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (24 samples, 0.05%)</title><rect x="536.6" y="309" width="0.6" height="15.0" fill="rgb(205,65,27)" rx="2" ry="2" />
<text  x="539.61" y="319.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::~result_memory_accounter (5 samples, 0.01%)</title><rect x="593.4" y="437" width="0.1" height="15.0" fill="rgb(251,74,2)" rx="2" ry="2" />
<text  x="596.36" y="447.5" ></text>
</g>
<g >
<title>seastar::logger::log&lt;dht::token const&amp;, utils::small_vector&lt;gms::inet_address, 3ul&gt;&amp;, utils::small_vector&lt;gms::inet_address, 3ul&gt;&amp;, db::read_repair_decision&amp;&gt; (9 samples, 0.02%)</title><rect x="1063.9" y="341" width="0.3" height="15.0" fill="rgb(237,198,0)" rx="2" ry="2" />
<text  x="1066.94" y="351.5" ></text>
</g>
<g >
<title>tracing::add_table_name (11 samples, 0.02%)</title><rect x="1138.1" y="421" width="0.3" height="15.0" fill="rgb(227,130,27)" rx="2" ry="2" />
<text  x="1141.11" y="431.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (47 samples, 0.10%)</title><rect x="1118.0" y="389" width="1.1" height="15.0" fill="rgb(247,225,26)" rx="2" ry="2" />
<text  x="1121.01" y="399.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (12 samples, 0.02%)</title><rect x="277.9" y="293" width="0.3" height="15.0" fill="rgb(228,157,53)" rx="2" ry="2" />
<text  x="280.93" y="303.5" ></text>
</g>
<g >
<title>partition_snapshot::versions (5 samples, 0.01%)</title><rect x="236.6" y="213" width="0.1" height="15.0" fill="rgb(225,139,10)" rx="2" ry="2" />
<text  x="239.57" y="223.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::metadata&gt;::~shared_ptr (10 samples, 0.02%)</title><rect x="657.0" y="485" width="0.2" height="15.0" fill="rgb(230,144,41)" rx="2" ry="2" />
<text  x="660.01" y="495.5" ></text>
</g>
<g >
<title>partition_key_view::legacy_form (30 samples, 0.06%)</title><rect x="929.2" y="389" width="0.7" height="15.0" fill="rgb(246,2,53)" rx="2" ry="2" />
<text  x="932.21" y="399.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextTokenStr (47 samples, 0.10%)</title><rect x="17.0" y="277" width="1.1" height="15.0" fill="rgb(209,127,1)" rx="2" ry="2" />
<text  x="19.98" y="287.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (62 samples, 0.13%)</title><rect x="584.8" y="421" width="1.4" height="15.0" fill="rgb(208,195,6)" rx="2" ry="2" />
<text  x="587.76" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_next_bkt (58 samples, 0.12%)</title><rect x="1161.6" y="453" width="1.4" height="15.0" fill="rgb(252,182,38)" rx="2" ry="2" />
<text  x="1164.59" y="463.5" ></text>
</g>
<g >
<title>service::client_state::check_has_permission (1,688 samples, 3.42%)</title><rect x="770.5" y="341" width="40.3" height="15.0" fill="rgb(224,192,44)" rx="2" ry="2" />
<text  x="773.47" y="351.5" >ser..</text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::clear (12 samples, 0.02%)</title><rect x="804.6" y="213" width="0.3" height="15.0" fill="rgb(230,137,12)" rx="2" ry="2" />
<text  x="807.61" y="223.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::set_callback (17 samples, 0.03%)</title><rect x="855.6" y="485" width="0.4" height="15.0" fill="rgb(238,55,17)" rx="2" ry="2" />
<text  x="858.60" y="495.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (11 samples, 0.02%)</title><rect x="658.7" y="469" width="0.3" height="15.0" fill="rgb(230,113,10)" rx="2" ry="2" />
<text  x="661.70" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (48 samples, 0.10%)</title><rect x="1159.6" y="421" width="1.1" height="15.0" fill="rgb(208,158,52)" rx="2" ry="2" />
<text  x="1162.56" y="431.5" ></text>
</g>
<g >
<title>std::make_unique&lt;merging_reader&lt;mutation_reader_merger&gt;, seastar::lw_shared_ptr&lt;schema const&gt;&amp;, reader_permit, seastar::bool_class&lt;streamed_mutation::forwarding_tag&gt;&amp;, mutation_reader_merger&gt; (277 samples, 0.56%)</title><rect x="450.6" y="309" width="6.6" height="15.0" fill="rgb(228,75,53)" rx="2" ry="2" />
<text  x="453.62" y="319.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_prepared (5,652 samples, 11.44%)</title><rect x="715.7" y="469" width="135.0" height="15.0" fill="rgb(214,70,35)" rx="2" ry="2" />
<text  x="718.66" y="479.5" >single_node_cql_e..</text>
</g>
<g >
<title>service::storage_proxy_stats::split_stats::get_ep_stat (14 samples, 0.03%)</title><rect x="1046.9" y="293" width="0.3" height="15.0" fill="rgb(205,185,38)" rx="2" ry="2" />
<text  x="1049.86" y="303.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::set_value&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt; (36 samples, 0.07%)</title><rect x="688.8" y="453" width="0.9" height="15.0" fill="rgb(226,110,27)" rx="2" ry="2" />
<text  x="691.81" y="463.5" ></text>
</g>
<g >
<title>operator delete (21 samples, 0.04%)</title><rect x="815.9" y="373" width="0.5" height="15.0" fill="rgb(232,57,29)" rx="2" ry="2" />
<text  x="818.89" y="383.5" ></text>
</g>
<g >
<title>std::__make_heap&lt;__gnu_cxx::__normal_iterator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position*, std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::heap_compare&gt; &gt; (5 samples, 0.01%)</title><rect x="219.1" y="149" width="0.2" height="15.0" fill="rgb(224,157,20)" rx="2" ry="2" />
<text  x="222.13" y="159.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (11 samples, 0.02%)</title><rect x="858.7" y="437" width="0.3" height="15.0" fill="rgb(242,25,45)" rx="2" ry="2" />
<text  x="861.73" y="447.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::find (18 samples, 0.04%)</title><rect x="951.7" y="357" width="0.5" height="15.0" fill="rgb(228,194,54)" rx="2" ry="2" />
<text  x="954.72" y="367.5" ></text>
</g>
<g >
<title>seastar::gate::enter (15 samples, 0.03%)</title><rect x="1035.4" y="245" width="0.4" height="15.0" fill="rgb(230,92,44)" rx="2" ry="2" />
<text  x="1038.39" y="255.5" ></text>
</g>
<g >
<title>flat_mutation_reader::close (1,257 samples, 2.55%)</title><rect x="553.2" y="405" width="30.1" height="15.0" fill="rgb(228,180,12)" rx="2" ry="2" />
<text  x="556.22" y="415.5" >fl..</text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (15 samples, 0.03%)</title><rect x="698.5" y="453" width="0.4" height="15.0" fill="rgb(215,192,22)" rx="2" ry="2" />
<text  x="701.51" y="463.5" ></text>
</g>
<g >
<title>operator new (28 samples, 0.06%)</title><rect x="519.2" y="325" width="0.7" height="15.0" fill="rgb(214,204,14)" rx="2" ry="2" />
<text  x="522.20" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (91 samples, 0.18%)</title><rect x="1043.2" y="229" width="2.1" height="15.0" fill="rgb(231,224,43)" rx="2" ry="2" />
<text  x="1046.16" y="239.5" ></text>
</g>
<g >
<title>cql3::to_managed_bytes_opt (16 samples, 0.03%)</title><rect x="906.0" y="373" width="0.3" height="15.0" fill="rgb(247,168,22)" rx="2" ry="2" />
<text  x="908.97" y="383.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (6 samples, 0.01%)</title><rect x="841.1" y="405" width="0.1" height="15.0" fill="rgb(249,112,37)" rx="2" ry="2" />
<text  x="844.05" y="415.5" ></text>
</g>
<g >
<title>absl::hash_internal::HashState::combine_contiguous (17 samples, 0.03%)</title><rect x="1060.4" y="261" width="0.4" height="15.0" fill="rgb(238,158,43)" rx="2" ry="2" />
<text  x="1063.43" y="271.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::deallocate (41 samples, 0.08%)</title><rect x="157.3" y="213" width="1.0" height="15.0" fill="rgb(234,72,9)" rx="2" ry="2" />
<text  x="160.34" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_move_assign (11 samples, 0.02%)</title><rect x="442.5" y="261" width="0.2" height="15.0" fill="rgb(208,171,42)" rx="2" ry="2" />
<text  x="445.45" y="271.5" ></text>
</g>
<g >
<title>operator delete (43 samples, 0.09%)</title><rect x="589.0" y="389" width="1.0" height="15.0" fill="rgb(215,161,12)" rx="2" ry="2" />
<text  x="592.01" y="399.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (6 samples, 0.01%)</title><rect x="807.2" y="261" width="0.2" height="15.0" fill="rgb(210,40,25)" rx="2" ry="2" />
<text  x="810.24" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (7 samples, 0.01%)</title><rect x="405.7" y="181" width="0.1" height="15.0" fill="rgb(218,160,0)" rx="2" ry="2" />
<text  x="408.66" y="191.5" ></text>
</g>
<g >
<title>posix_memalign (5 samples, 0.01%)</title><rect x="197.6" y="101" width="0.1" height="15.0" fill="rgb(214,142,52)" rx="2" ry="2" />
<text  x="200.60" y="111.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_data_requests (410 samples, 0.83%)</title><rect x="696.5" y="469" width="9.8" height="15.0" fill="rgb(224,45,33)" rx="2" ry="2" />
<text  x="699.48" y="479.5" ></text>
</g>
<g >
<title>database::apply_with_commitlog (32 samples, 0.06%)</title><rect x="1140.1" y="309" width="0.8" height="15.0" fill="rgb(235,213,35)" rx="2" ry="2" />
<text  x="1143.14" y="319.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;seastar::future&lt;void&gt; &gt;  (1,267 samples, 2.57%)</title><rect x="553.2" y="421" width="30.2" height="15.0" fill="rgb(231,205,13)" rx="2" ry="2" />
<text  x="556.17" y="431.5" >st..</text>
</g>
<g >
<title>std::__apply_impl&lt;seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (35 samples, 0.07%)</title><rect x="1140.1" y="469" width="0.9" height="15.0" fill="rgb(235,122,53)" rx="2" ry="2" />
<text  x="1143.14" y="479.5" ></text>
</g>
<g >
<title>query::digester::digester (22 samples, 0.04%)</title><rect x="595.8" y="405" width="0.5" height="15.0" fill="rgb(228,63,45)" rx="2" ry="2" />
<text  x="598.82" y="415.5" ></text>
</g>
<g >
<title>std::variant&lt;query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::operator=&lt;query::noop_hasher&gt; (5 samples, 0.01%)</title><rect x="598.8" y="405" width="0.1" height="15.0" fill="rgb(209,226,34)" rx="2" ry="2" />
<text  x="601.81" y="415.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (25 samples, 0.05%)</title><rect x="682.1" y="469" width="0.6" height="15.0" fill="rgb(240,43,36)" rx="2" ry="2" />
<text  x="685.14" y="479.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::_Copy_ctor_base (16 samples, 0.03%)</title><rect x="314.3" y="181" width="0.4" height="15.0" fill="rgb(231,126,2)" rx="2" ry="2" />
<text  x="317.32" y="191.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::then_impl&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (26 samples, 0.05%)</title><rect x="118.5" y="373" width="0.6" height="15.0" fill="rgb(215,4,26)" rx="2" ry="2" />
<text  x="121.47" y="383.5" ></text>
</g>
<g >
<title>operator new (24 samples, 0.05%)</title><rect x="900.1" y="293" width="0.5" height="15.0" fill="rgb(230,52,21)" rx="2" ry="2" />
<text  x="903.07" y="303.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (68 samples, 0.14%)</title><rect x="528.8" y="309" width="1.6" height="15.0" fill="rgb(252,44,9)" rx="2" ry="2" />
<text  x="531.78" y="319.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::operator (51 samples, 0.10%)</title><rect x="747.1" y="373" width="1.2" height="15.0" fill="rgb(210,195,23)" rx="2" ry="2" />
<text  x="750.13" y="383.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::restrictions::multi_column_restriction&gt;::~shared_ptr (6 samples, 0.01%)</title><rect x="1129.6" y="421" width="0.2" height="15.0" fill="rgb(241,160,49)" rx="2" ry="2" />
<text  x="1132.62" y="431.5" ></text>
</g>
<g >
<title>malloc (22 samples, 0.04%)</title><rect x="597.9" y="373" width="0.5" height="15.0" fill="rgb(215,64,48)" rx="2" ry="2" />
<text  x="600.92" y="383.5" ></text>
</g>
<g >
<title>boost::intrusive::bstbase&lt;boost::intrusive::mhtraits&lt;range_tombstone_entry, boost::intrusive::set_member_hook&lt;boost::intrusive::link_mode&lt; (7 samples, 0.01%)</title><rect x="562.4" y="293" width="0.2" height="15.0" fill="rgb(249,27,22)" rx="2" ry="2" />
<text  x="565.44" y="303.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;service::storage_proxy_coordinator_query_result&gt;::set_value&lt;service::storage_proxy_coordinator_query_result&gt; (38 samples, 0.08%)</title><rect x="1150.5" y="485" width="0.9" height="15.0" fill="rgb(206,204,26)" rx="2" ry="2" />
<text  x="1153.51" y="495.5" ></text>
</g>
<g >
<title>double_decker&lt;long, cache_entry, dht::raw_token_less_comparator, dht::ring_position_comparator, 16,  (91 samples, 0.18%)</title><rect x="526.1" y="309" width="2.2" height="15.0" fill="rgb(233,152,20)" rx="2" ry="2" />
<text  x="529.10" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (27 samples, 0.05%)</title><rect x="971.5" y="325" width="0.6" height="15.0" fill="rgb(230,34,23)" rx="2" ry="2" />
<text  x="974.48" y="335.5" ></text>
</g>
<g >
<title>single_node_cql_env::make_query_state (436 samples, 0.88%)</title><rect x="833.6" y="437" width="10.4" height="15.0" fill="rgb(247,171,53)" rx="2" ry="2" />
<text  x="836.57" y="447.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;single_node_cql_env::core_local_state&gt;::local (8 samples, 0.02%)</title><rect x="839.1" y="421" width="0.2" height="15.0" fill="rgb(235,205,21)" rx="2" ry="2" />
<text  x="842.09" y="431.5" ></text>
</g>
<g >
<title>operator delete (32 samples, 0.06%)</title><rect x="615.1" y="373" width="0.8" height="15.0" fill="rgb(210,52,8)" rx="2" ry="2" />
<text  x="618.15" y="383.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (10 samples, 0.02%)</title><rect x="678.8" y="469" width="0.2" height="15.0" fill="rgb(229,178,22)" rx="2" ry="2" />
<text  x="681.77" y="479.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::entry::entry (92 samples, 0.19%)</title><rect x="1026.1" y="165" width="2.2" height="15.0" fill="rgb(227,69,15)" rx="2" ry="2" />
<text  x="1029.15" y="175.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (15 samples, 0.03%)</title><rect x="1119.4" y="389" width="0.3" height="15.0" fill="rgb(211,37,20)" rx="2" ry="2" />
<text  x="1122.35" y="399.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate (431 samples, 0.87%)</title><rect x="886.2" y="293" width="10.3" height="15.0" fill="rgb(236,185,23)" rx="2" ry="2" />
<text  x="889.23" y="303.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::got_cl (14 samples, 0.03%)</title><rect x="691.2" y="469" width="0.3" height="15.0" fill="rgb(206,226,39)" rx="2" ry="2" />
<text  x="694.17" y="479.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_Optional_payload_base (15 samples, 0.03%)</title><rect x="789.3" y="197" width="0.4" height="15.0" fill="rgb(245,166,53)" rx="2" ry="2" />
<text  x="792.35" y="207.5" ></text>
</g>
<g >
<title>__tls_init (10 samples, 0.02%)</title><rect x="490.6" y="293" width="0.3" height="15.0" fill="rgb(224,196,5)" rx="2" ry="2" />
<text  x="493.64" y="303.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::_Move_ctor_base (20 samples, 0.04%)</title><rect x="314.7" y="181" width="0.5" height="15.0" fill="rgb(239,202,17)" rx="2" ry="2" />
<text  x="317.70" y="191.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_token (16 samples, 0.03%)</title><rect x="944.4" y="357" width="0.3" height="15.0" fill="rgb(242,193,20)" rx="2" ry="2" />
<text  x="947.36" y="367.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (5 samples, 0.01%)</title><rect x="863.9" y="437" width="0.1" height="15.0" fill="rgb(235,34,24)" rx="2" ry="2" />
<text  x="866.92" y="447.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;dht::decorated_key&gt;::_M_reset (5 samples, 0.01%)</title><rect x="394.4" y="229" width="0.1" height="15.0" fill="rgb(241,68,30)" rx="2" ry="2" />
<text  x="397.41" y="239.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;void&gt;, service::storage_proxy*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt;, db::consistency_level, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, tracing::trace_state_ptr, service_permit, bool, seastar::lw_shared_ptr&lt;cdc::operation_result_tracker&gt; &gt;::do_flush (42 samples, 0.09%)</title><rect x="1141.0" y="485" width="1.0" height="15.0" fill="rgb(234,168,36)" rx="2" ry="2" />
<text  x="1143.97" y="495.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (34 samples, 0.07%)</title><rect x="1127.0" y="389" width="0.8" height="15.0" fill="rgb(211,209,46)" rx="2" ry="2" />
<text  x="1130.02" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (24 samples, 0.05%)</title><rect x="664.4" y="485" width="0.5" height="15.0" fill="rgb(239,56,17)" rx="2" ry="2" />
<text  x="667.37" y="495.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEE4$_44ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_45ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_43ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_46ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_47ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_48ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_49ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_50ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_51ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_52ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_53ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_54ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_55ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_56ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_57ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_58EERS4_IJNSF_11conjunctionENSF_15binary_operatorENSF_12column_valueENSF_5tokenENSF_21unresolved_identifierENSF_25column_mutation_attributeENSF_13function_callENSF_4castENSF_15field_selectionENSF_4nullENSF_13bind_variableENSF_16untyped_constantENSF_8constantENSF_17tuple_constructorENSF_22collection_constructorENSF_20usertype_constructorEEEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES16_S1O_ (14 samples, 0.03%)</title><rect x="878.0" y="405" width="0.3" height="15.0" fill="rgb(254,0,14)" rx="2" ry="2" />
<text  x="880.96" y="415.5" ></text>
</g>
<g >
<title>ser::after_qr_cell__timestamp&lt;bytes_ostream&gt;::skip_expiry (120 samples, 0.24%)</title><rect x="349.3" y="165" width="2.9" height="15.0" fill="rgb(218,67,7)" rx="2" ry="2" />
<text  x="352.30" y="175.5" ></text>
</g>
<g >
<title>seastar::memory::stats (38 samples, 0.08%)</title><rect x="529.5" y="293" width="0.9" height="15.0" fill="rgb(208,214,54)" rx="2" ry="2" />
<text  x="532.49" y="303.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (7 samples, 0.01%)</title><rect x="629.3" y="469" width="0.2" height="15.0" fill="rgb(247,61,19)" rx="2" ry="2" />
<text  x="632.34" y="479.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::close (717 samples, 1.45%)</title><rect x="553.6" y="389" width="17.1" height="15.0" fill="rgb(224,219,47)" rx="2" ry="2" />
<text  x="556.55" y="399.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;query::result&gt;::operator= (24 samples, 0.05%)</title><rect x="81.9" y="453" width="0.6" height="15.0" fill="rgb(236,201,19)" rx="2" ry="2" />
<text  x="84.94" y="463.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (8 samples, 0.02%)</title><rect x="637.7" y="485" width="0.2" height="15.0" fill="rgb(237,148,30)" rx="2" ry="2" />
<text  x="640.68" y="495.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt;::_Copy_ctor_base (13 samples, 0.03%)</title><rect x="853.4" y="421" width="0.3" height="15.0" fill="rgb(213,153,27)" rx="2" ry="2" />
<text  x="856.36" y="431.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (5 samples, 0.01%)</title><rect x="739.0" y="277" width="0.1" height="15.0" fill="rgb(238,5,22)" rx="2" ry="2" />
<text  x="741.98" y="287.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::move_it (19 samples, 0.04%)</title><rect x="759.2" y="405" width="0.5" height="15.0" fill="rgb(236,21,41)" rx="2" ry="2" />
<text  x="762.22" y="415.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (41 samples, 0.08%)</title><rect x="892.9" y="245" width="1.0" height="15.0" fill="rgb(210,121,36)" rx="2" ry="2" />
<text  x="895.90" y="255.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;service::storage_proxy_coordinator_query_result&gt;::set_urgent_state (83 samples, 0.17%)</title><rect x="678.3" y="485" width="2.0" height="15.0" fill="rgb(247,168,27)" rx="2" ry="2" />
<text  x="681.32" y="495.5" ></text>
</g>
<g >
<title>cql3::query_options::prepare (5 samples, 0.01%)</title><rect x="717.1" y="453" width="0.1" height="15.0" fill="rgb(241,213,45)" rx="2" ry="2" />
<text  x="720.10" y="463.5" ></text>
</g>
<g >
<title>cql3::attributes::is_timeout_set (5 samples, 0.01%)</title><rect x="950.9" y="389" width="0.1" height="15.0" fill="rgb(206,27,22)" rx="2" ry="2" />
<text  x="953.88" y="399.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::~partition_snapshot_flat_reader (6 samples, 0.01%)</title><rect x="1175.2" y="373" width="0.1" height="15.0" fill="rgb(236,207,29)" rx="2" ry="2" />
<text  x="1178.19" y="383.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (13 samples, 0.03%)</title><rect x="856.4" y="501" width="0.3" height="15.0" fill="rgb(217,80,53)" rx="2" ry="2" />
<text  x="859.41" y="511.5" ></text>
</g>
<g >
<title>operator new (34 samples, 0.07%)</title><rect x="936.0" y="373" width="0.8" height="15.0" fill="rgb(228,69,10)" rx="2" ry="2" />
<text  x="938.95" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::vector (8 samples, 0.02%)</title><rect x="1137.4" y="421" width="0.2" height="15.0" fill="rgb(234,165,5)" rx="2" ry="2" />
<text  x="1140.41" y="431.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (16 samples, 0.03%)</title><rect x="486.8" y="213" width="0.4" height="15.0" fill="rgb(253,206,17)" rx="2" ry="2" />
<text  x="489.80" y="223.5" ></text>
</g>
<g >
<title>[unknown] (6 samples, 0.01%)</title><rect x="10.0" y="613" width="0.2" height="15.0" fill="rgb(221,92,17)" rx="2" ry="2" />
<text  x="13.02" y="623.5" ></text>
</g>
<g >
<title>seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::expand (219 samples, 0.44%)</title><rect x="275.7" y="309" width="5.2" height="15.0" fill="rgb(212,118,14)" rx="2" ry="2" />
<text  x="278.66" y="319.5" ></text>
</g>
<g >
<title>std::_Optional_base_impl&lt;query::querier&lt; (8 samples, 0.02%)</title><rect x="609.6" y="437" width="0.1" height="15.0" fill="rgb(250,38,4)" rx="2" ry="2" />
<text  x="612.56" y="447.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (26 samples, 0.05%)</title><rect x="392.3" y="197" width="0.6" height="15.0" fill="rgb(235,223,34)" rx="2" ry="2" />
<text  x="395.33" y="207.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (8 samples, 0.02%)</title><rect x="327.9" y="165" width="0.2" height="15.0" fill="rgb(205,196,50)" rx="2" ry="2" />
<text  x="330.87" y="175.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::_M_range_initialize&lt;managed_bytes const*&gt; (58 samples, 0.12%)</title><rect x="904.4" y="341" width="1.4" height="15.0" fill="rgb(241,12,15)" rx="2" ry="2" />
<text  x="907.41" y="351.5" ></text>
</g>
<g >
<title>position_in_partition_view::for_range_end (34 samples, 0.07%)</title><rect x="229.4" y="229" width="0.8" height="15.0" fill="rgb(235,203,53)" rx="2" ry="2" />
<text  x="232.40" y="239.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::operator (6 samples, 0.01%)</title><rect x="1058.1" y="277" width="0.1" height="15.0" fill="rgb(233,21,53)" rx="2" ry="2" />
<text  x="1061.09" y="287.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_pausable_in_thread&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;sstables::sstable_writer&gt; &gt;, flat_mutation_reader::no_filter&gt; (14 samples, 0.03%)</title><rect x="22.7" y="501" width="0.3" height="15.0" fill="rgb(221,34,36)" rx="2" ry="2" />
<text  x="25.69" y="511.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::find&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (171 samples, 0.35%)</title><rect x="754.6" y="357" width="4.1" height="15.0" fill="rgb(238,144,38)" rx="2" ry="2" />
<text  x="757.58" y="367.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;managed_bytes const*, managed_bytes*&gt; (22 samples, 0.04%)</title><rect x="905.3" y="325" width="0.5" height="15.0" fill="rgb(211,37,25)" rx="2" ry="2" />
<text  x="908.27" y="335.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector (15 samples, 0.03%)</title><rect x="1072.8" y="309" width="0.4" height="15.0" fill="rgb(225,225,27)" rx="2" ry="2" />
<text  x="1075.81" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (19 samples, 0.04%)</title><rect x="532.9" y="245" width="0.4" height="15.0" fill="rgb(250,36,0)" rx="2" ry="2" />
<text  x="535.86" y="255.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::clone&lt;row::row (1,222 samples, 2.47%)</title><rect x="174.4" y="133" width="29.2" height="15.0" fill="rgb(244,196,46)" rx="2" ry="2" />
<text  x="177.43" y="143.5" >co..</text>
</g>
<g >
<title>seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::expand (63 samples, 0.13%)</title><rect x="155.8" y="213" width="1.5" height="15.0" fill="rgb(232,8,8)" rx="2" ry="2" />
<text  x="158.82" y="223.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (28 samples, 0.06%)</title><rect x="756.5" y="325" width="0.6" height="15.0" fill="rgb(247,32,11)" rx="2" ry="2" />
<text  x="759.47" y="335.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (11 samples, 0.02%)</title><rect x="800.0" y="69" width="0.3" height="15.0" fill="rgb(234,172,19)" rx="2" ry="2" />
<text  x="803.00" y="79.5" ></text>
</g>
<g >
<title>database::has_keyspace (162 samples, 0.33%)</title><rect x="833.7" y="421" width="3.9" height="15.0" fill="rgb(247,25,17)" rx="2" ry="2" />
<text  x="836.74" y="431.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (444 samples, 0.90%)</title><rect x="184.1" y="101" width="10.6" height="15.0" fill="rgb(251,184,29)" rx="2" ry="2" />
<text  x="187.13" y="111.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;bytes_ostream::chunk, std::default_delete&lt;bytes_ostream::chunk&gt; &gt;::~unique_ptr (6 samples, 0.01%)</title><rect x="598.5" y="373" width="0.1" height="15.0" fill="rgb(223,166,12)" rx="2" ry="2" />
<text  x="601.47" y="383.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::~timer (7 samples, 0.01%)</title><rect x="76.9" y="405" width="0.1" height="15.0" fill="rgb(226,208,38)" rx="2" ry="2" />
<text  x="79.85" y="415.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (13 samples, 0.03%)</title><rect x="763.8" y="357" width="0.3" height="15.0" fill="rgb(244,44,12)" rx="2" ry="2" />
<text  x="766.76" y="367.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (11 samples, 0.02%)</title><rect x="514.0" y="277" width="0.2" height="15.0" fill="rgb(253,193,11)" rx="2" ry="2" />
<text  x="516.96" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (31 samples, 0.06%)</title><rect x="680.4" y="485" width="0.8" height="15.0" fill="rgb(243,160,51)" rx="2" ry="2" />
<text  x="683.45" y="495.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_last_fragment_kind, 4ul&gt;::emplace_back&lt;std::_List_iterator&lt;flat_mutation_reader&gt;, mutation_fragment::kind&gt; (8 samples, 0.02%)</title><rect x="261.7" y="309" width="0.2" height="15.0" fill="rgb(208,99,8)" rx="2" ry="2" />
<text  x="264.66" y="319.5" ></text>
</g>
<g >
<title>operator delete (26 samples, 0.05%)</title><rect x="582.6" y="389" width="0.6" height="15.0" fill="rgb(212,50,5)" rx="2" ry="2" />
<text  x="585.56" y="399.5" ></text>
</g>
<g >
<title>ser::writer_of_qr_clustered_row&lt;bytes_ostream&gt;::skip_key (21 samples, 0.04%)</title><rect x="332.8" y="181" width="0.5" height="15.0" fill="rgb(211,99,40)" rx="2" ry="2" />
<text  x="335.81" y="191.5" ></text>
</g>
<g >
<title>std::chrono::_V2::system_clock::now (7 samples, 0.01%)</title><rect x="1134.8" y="421" width="0.2" height="15.0" fill="rgb(214,49,42)" rx="2" ry="2" />
<text  x="1137.83" y="431.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (25 samples, 0.05%)</title><rect x="773.2" y="277" width="0.6" height="15.0" fill="rgb(238,38,18)" rx="2" ry="2" />
<text  x="776.22" y="287.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::move_it (10 samples, 0.02%)</title><rect x="629.8" y="485" width="0.2" height="15.0" fill="rgb(229,168,38)" rx="2" ry="2" />
<text  x="632.77" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (9 samples, 0.02%)</title><rect x="561.0" y="261" width="0.2" height="15.0" fill="rgb(228,68,17)" rx="2" ry="2" />
<text  x="564.01" y="271.5" ></text>
</g>
<g >
<title>seastar::internal::uninitialized_wrapper_base&lt;service::storage_proxy_coordinator_query_result, false&gt;::uninitialized_set&lt;service::storage_proxy_coordinator_query_result&gt; (35 samples, 0.07%)</title><rect x="679.1" y="453" width="0.8" height="15.0" fill="rgb(214,27,44)" rx="2" ry="2" />
<text  x="682.06" y="463.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;service::abstract_read_executor::execute (14 samples, 0.03%)</title><rect x="687.9" y="453" width="0.3" height="15.0" fill="rgb(232,27,47)" rx="2" ry="2" />
<text  x="690.85" y="463.5" ></text>
</g>
<g >
<title>atomic_cell_or_collection::copy (18 samples, 0.04%)</title><rect x="173.4" y="133" width="0.4" height="15.0" fill="rgb(211,130,38)" rx="2" ry="2" />
<text  x="176.40" y="143.5" ></text>
</g>
<g >
<title>database::add_column_family (5 samples, 0.01%)</title><rect x="45.4" y="485" width="0.2" height="15.0" fill="rgb(248,223,12)" rx="2" ry="2" />
<text  x="48.43" y="495.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (10 samples, 0.02%)</title><rect x="488.0" y="325" width="0.2" height="15.0" fill="rgb(241,167,27)" rx="2" ry="2" />
<text  x="490.97" y="335.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (5 samples, 0.01%)</title><rect x="678.2" y="485" width="0.1" height="15.0" fill="rgb(216,156,13)" rx="2" ry="2" />
<text  x="681.20" y="495.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::deallocate (33 samples, 0.07%)</title><rect x="571.5" y="357" width="0.8" height="15.0" fill="rgb(250,224,45)" rx="2" ry="2" />
<text  x="574.50" y="367.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (18 samples, 0.04%)</title><rect x="671.4" y="485" width="0.5" height="15.0" fill="rgb(247,33,4)" rx="2" ry="2" />
<text  x="674.44" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (21 samples, 0.04%)</title><rect x="1170.2" y="453" width="0.5" height="15.0" fill="rgb(229,96,11)" rx="2" ry="2" />
<text  x="1173.19" y="463.5" ></text>
</g>
<g >
<title>operator new (80 samples, 0.16%)</title><rect x="158.7" y="213" width="1.9" height="15.0" fill="rgb(254,108,45)" rx="2" ry="2" />
<text  x="161.73" y="223.5" ></text>
</g>
<g >
<title>operator new (27 samples, 0.05%)</title><rect x="772.0" y="309" width="0.6" height="15.0" fill="rgb(208,12,53)" rx="2" ry="2" />
<text  x="774.98" y="319.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt; &gt;::satisfy_with_result_of&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::then_wrapped_nrvo&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (75 samples, 0.15%)</title><rect x="662.4" y="485" width="1.8" height="15.0" fill="rgb(221,108,50)" rx="2" ry="2" />
<text  x="665.41" y="495.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::trivial_direct_destroy (53 samples, 0.11%)</title><rect x="71.5" y="389" width="1.3" height="15.0" fill="rgb(217,135,1)" rx="2" ry="2" />
<text  x="74.55" y="399.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_M_reset (5 samples, 0.01%)</title><rect x="552.0" y="421" width="0.1" height="15.0" fill="rgb(246,213,38)" rx="2" ry="2" />
<text  x="555.00" y="431.5" ></text>
</g>
<g >
<title>TLS init function for bound_view::_empty_prefix (7 samples, 0.01%)</title><rect x="242.0" y="165" width="0.2" height="15.0" fill="rgb(220,149,46)" rx="2" ry="2" />
<text  x="245.04" y="175.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (80 samples, 0.16%)</title><rect x="1066.2" y="309" width="1.9" height="15.0" fill="rgb(250,98,53)" rx="2" ry="2" />
<text  x="1069.17" y="319.5" ></text>
</g>
<g >
<title>schema::column_at (91 samples, 0.18%)</title><rect x="388.5" y="165" width="2.2" height="15.0" fill="rgb(248,111,2)" rx="2" ry="2" />
<text  x="391.48" y="175.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (7 samples, 0.01%)</title><rect x="576.6" y="341" width="0.2" height="15.0" fill="rgb(208,163,30)" rx="2" ry="2" />
<text  x="579.63" y="351.5" ></text>
</g>
<g >
<title>partition_snapshot::~partition_snapshot (12 samples, 0.02%)</title><rect x="566.5" y="277" width="0.3" height="15.0" fill="rgb(227,84,17)" rx="2" ry="2" />
<text  x="569.48" y="287.5" ></text>
</g>
<g >
<title>partition_snapshot::partition_tombstone (25 samples, 0.05%)</title><rect x="510.8" y="229" width="0.6" height="15.0" fill="rgb(244,155,16)" rx="2" ry="2" />
<text  x="513.81" y="239.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_slice_or_needs_filtering (6 samples, 0.01%)</title><rect x="943.7" y="357" width="0.2" height="15.0" fill="rgb(216,143,22)" rx="2" ry="2" />
<text  x="946.72" y="367.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (9 samples, 0.02%)</title><rect x="600.3" y="405" width="0.2" height="15.0" fill="rgb(228,155,25)" rx="2" ry="2" />
<text  x="603.33" y="415.5" ></text>
</g>
<g >
<title>std::hash&lt;auth::resource&gt;::hash_data (101 samples, 0.20%)</title><rect x="797.9" y="133" width="2.4" height="15.0" fill="rgb(221,185,22)" rx="2" ry="2" />
<text  x="800.90" y="143.5" ></text>
</g>
<g >
<title>__start_context (284 samples, 0.58%)</title><rect x="15.9" y="613" width="6.7" height="15.0" fill="rgb(222,80,8)" rx="2" ry="2" />
<text  x="18.85" y="623.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (23 samples, 0.05%)</title><rect x="492.5" y="277" width="0.5" height="15.0" fill="rgb(215,130,16)" rx="2" ry="2" />
<text  x="495.48" y="287.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;::basic_sstring (5 samples, 0.01%)</title><rect x="853.5" y="405" width="0.2" height="15.0" fill="rgb(222,110,23)" rx="2" ry="2" />
<text  x="856.55" y="415.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::size (26 samples, 0.05%)</title><rect x="874.7" y="421" width="0.6" height="15.0" fill="rgb(208,125,51)" rx="2" ry="2" />
<text  x="877.67" y="431.5" ></text>
</g>
<g >
<title>operator new (50 samples, 0.10%)</title><rect x="503.9" y="197" width="1.2" height="15.0" fill="rgb(235,103,28)" rx="2" ry="2" />
<text  x="506.93" y="207.5" ></text>
</g>
<g >
<title>mutation_querier::consume (8 samples, 0.02%)</title><rect x="682.3" y="277" width="0.2" height="15.0" fill="rgb(233,2,54)" rx="2" ry="2" />
<text  x="685.31" y="287.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_28has_slice_or_needs_filteringERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES28_S2B_ (6 samples, 0.01%)</title><rect x="645.6" y="437" width="0.1" height="15.0" fill="rgb(222,28,19)" rx="2" ry="2" />
<text  x="648.56" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (6 samples, 0.01%)</title><rect x="51.0" y="453" width="0.2" height="15.0" fill="rgb(253,22,38)" rx="2" ry="2" />
<text  x="54.05" y="463.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (11 samples, 0.02%)</title><rect x="44.8" y="485" width="0.2" height="15.0" fill="rgb(208,72,6)" rx="2" ry="2" />
<text  x="47.76" y="495.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (9 samples, 0.02%)</title><rect x="934.2" y="405" width="0.2" height="15.0" fill="rgb(211,50,21)" rx="2" ry="2" />
<text  x="937.23" y="415.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const*, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;*&gt; (11 samples, 0.02%)</title><rect x="774.5" y="309" width="0.3" height="15.0" fill="rgb(220,129,22)" rx="2" ry="2" />
<text  x="777.51" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (6 samples, 0.01%)</title><rect x="666.9" y="453" width="0.1" height="15.0" fill="rgb(243,161,48)" rx="2" ry="2" />
<text  x="669.85" y="463.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_Optional_payload_base (14 samples, 0.03%)</title><rect x="1073.4" y="325" width="0.3" height="15.0" fill="rgb(251,204,51)" rx="2" ry="2" />
<text  x="1076.36" y="335.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (8 samples, 0.02%)</title><rect x="682.8" y="453" width="0.2" height="15.0" fill="rgb(236,18,44)" rx="2" ry="2" />
<text  x="685.81" y="463.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (5 samples, 0.01%)</title><rect x="817.2" y="341" width="0.1" height="15.0" fill="rgb(254,221,33)" rx="2" ry="2" />
<text  x="820.23" y="351.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (10 samples, 0.02%)</title><rect x="788.7" y="213" width="0.2" height="15.0" fill="rgb(235,185,44)" rx="2" ry="2" />
<text  x="791.65" y="223.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (6 samples, 0.01%)</title><rect x="927.4" y="341" width="0.1" height="15.0" fill="rgb(252,176,36)" rx="2" ry="2" />
<text  x="930.40" y="351.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (11 samples, 0.02%)</title><rect x="776.9" y="309" width="0.3" height="15.0" fill="rgb(218,144,16)" rx="2" ry="2" />
<text  x="779.95" y="319.5" ></text>
</g>
<g >
<title>db::filter_for_query (52 samples, 0.11%)</title><rect x="1062.7" y="341" width="1.2" height="15.0" fill="rgb(240,130,33)" rx="2" ry="2" />
<text  x="1065.68" y="351.5" ></text>
</g>
<g >
<title>operator new (62 samples, 0.13%)</title><rect x="1114.5" y="357" width="1.5" height="15.0" fill="rgb(238,190,51)" rx="2" ry="2" />
<text  x="1117.50" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::vector (144 samples, 0.29%)</title><rect x="937.6" y="405" width="3.5" height="15.0" fill="rgb(239,221,27)" rx="2" ry="2" />
<text  x="940.65" y="415.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::get_value (5 samples, 0.01%)</title><rect x="709.7" y="501" width="0.1" height="15.0" fill="rgb(244,118,35)" rx="2" ry="2" />
<text  x="712.69" y="511.5" ></text>
</g>
<g >
<title>free (18 samples, 0.04%)</title><rect x="36.6" y="421" width="0.4" height="15.0" fill="rgb(210,6,17)" rx="2" ry="2" />
<text  x="39.62" y="431.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (24,093 samples, 48.78%)</title><rect x="48.5" y="485" width="575.7" height="15.0" fill="rgb(214,137,47)" rx="2" ry="2" />
<text  x="51.54" y="495.5" >seastar::noncopyable_function&lt;seastar::future&lt;void&gt; </text>
</g>
<g >
<title>query::result_memory_accounter::check (10 samples, 0.02%)</title><rect x="303.7" y="213" width="0.2" height="15.0" fill="rgb(226,134,12)" rx="2" ry="2" />
<text  x="306.66" y="223.5" ></text>
</g>
<g >
<title>std::__find_if&lt;gms::inet_address*, __gnu_cxx::__ops::_Iter_pred&lt;std::unary_negate&lt;std::binder1st&lt;std::_Mem_fn&lt;bool  (40 samples, 0.08%)</title><rect x="1092.4" y="293" width="1.0" height="15.0" fill="rgb(233,155,2)" rx="2" ry="2" />
<text  x="1095.42" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::~vector (21 samples, 0.04%)</title><rect x="578.9" y="357" width="0.5" height="15.0" fill="rgb(225,67,32)" rx="2" ry="2" />
<text  x="581.86" y="367.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (228 samples, 0.46%)</title><rect x="1055.8" y="309" width="5.5" height="15.0" fill="rgb(246,167,24)" rx="2" ry="2" />
<text  x="1058.82" y="319.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::storage_proxy&gt;::~shared_ptr (12 samples, 0.02%)</title><rect x="1152.1" y="485" width="0.2" height="15.0" fill="rgb(249,183,33)" rx="2" ry="2" />
<text  x="1155.06" y="495.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (15 samples, 0.03%)</title><rect x="40.4" y="453" width="0.3" height="15.0" fill="rgb(232,127,23)" rx="2" ry="2" />
<text  x="43.39" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (21 samples, 0.04%)</title><rect x="782.3" y="229" width="0.5" height="15.0" fill="rgb(247,87,17)" rx="2" ry="2" />
<text  x="785.30" y="239.5" ></text>
</g>
<g >
<title>operator new (15 samples, 0.03%)</title><rect x="830.5" y="373" width="0.3" height="15.0" fill="rgb(221,149,17)" rx="2" ry="2" />
<text  x="833.49" y="383.5" ></text>
</g>
<g >
<title>make_stable_flattened_mutations_consumer&lt;compact_for_query&lt; (101 samples, 0.20%)</title><rect x="417.6" y="373" width="2.4" height="15.0" fill="rgb(246,219,7)" rx="2" ry="2" />
<text  x="420.61" y="383.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;void&gt;::set_value&lt;&gt; (5 samples, 0.01%)</title><rect x="858.5" y="501" width="0.1" height="15.0" fill="rgb(252,227,36)" rx="2" ry="2" />
<text  x="861.47" y="511.5" ></text>
</g>
<g >
<title>ser::qr_partition__static_row&lt;bytes_ostream&gt;::start_cells (28 samples, 0.06%)</title><rect x="308.3" y="165" width="0.7" height="15.0" fill="rgb(217,127,13)" rx="2" ry="2" />
<text  x="311.32" y="175.5" ></text>
</g>
<g >
<title>operator new (49 samples, 0.10%)</title><rect x="444.2" y="245" width="1.2" height="15.0" fill="rgb(210,158,34)" rx="2" ry="2" />
<text  x="447.22" y="255.5" ></text>
</g>
<g >
<title>make_combined_reader (757 samples, 1.53%)</title><rect x="439.2" y="325" width="18.1" height="15.0" fill="rgb(251,58,3)" rx="2" ry="2" />
<text  x="442.23" y="335.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (23,851 samples, 48.29%)</title><rect x="53.7" y="469" width="569.9" height="15.0" fill="rgb(208,196,37)" rx="2" ry="2" />
<text  x="56.70" y="479.5" >seastar::noncopyable_function&lt;seastar::future&lt;void&gt; </text>
</g>
<g >
<title>operator new (68 samples, 0.14%)</title><rect x="1036.7" y="261" width="1.6" height="15.0" fill="rgb(252,221,48)" rx="2" ry="2" />
<text  x="1039.68" y="271.5" ></text>
</g>
<g >
<title>operator new (77 samples, 0.16%)</title><rect x="546.4" y="341" width="1.8" height="15.0" fill="rgb(252,198,3)" rx="2" ry="2" />
<text  x="549.39" y="351.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE9then_implIZNS6_14discard_resultEvEUlDpOT_E_NS0_IvEEEET0_OT_ (13 samples, 0.03%)</title><rect x="711.4" y="485" width="0.3" height="15.0" fill="rgb(233,62,31)" rx="2" ry="2" />
<text  x="714.39" y="495.5" ></text>
</g>
<g >
<title>write_cell&lt;ser::qr_clustered_row__cells__cells&lt;bytes_ostream&gt; &gt; (1,271 samples, 2.57%)</title><rect x="333.8" y="181" width="30.4" height="15.0" fill="rgb(241,188,19)" rx="2" ry="2" />
<text  x="336.84" y="191.5" >wr..</text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::~partition_snapshot_flat_reader (5 samples, 0.01%)</title><rect x="1175.2" y="357" width="0.1" height="15.0" fill="rgb(235,196,38)" rx="2" ry="2" />
<text  x="1178.21" y="367.5" ></text>
</g>
<g >
<title>std::function&lt;bool  (8 samples, 0.02%)</title><rect x="550.1" y="405" width="0.2" height="15.0" fill="rgb(222,78,4)" rx="2" ry="2" />
<text  x="553.14" y="415.5" ></text>
</g>
<g >
<title>logalloc::basic_region_impl::set_reclaiming_enabled (15 samples, 0.03%)</title><rect x="168.7" y="197" width="0.3" height="15.0" fill="rgb(243,39,39)" rx="2" ry="2" />
<text  x="171.67" y="207.5" ></text>
</g>
<g >
<title>std::variant&lt;fragmented_temporary_buffer::view, managed_bytes_basic_view&lt; (25 samples, 0.05%)</title><rect x="900.9" y="309" width="0.6" height="15.0" fill="rgb(213,194,28)" rx="2" ry="2" />
<text  x="903.90" y="319.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (5 samples, 0.01%)</title><rect x="853.7" y="421" width="0.1" height="15.0" fill="rgb(212,19,32)" rx="2" ry="2" />
<text  x="856.67" y="431.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (6 samples, 0.01%)</title><rect x="762.6" y="341" width="0.2" height="15.0" fill="rgb(242,78,21)" rx="2" ry="2" />
<text  x="765.64" y="351.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (8 samples, 0.02%)</title><rect x="722.5" y="293" width="0.2" height="15.0" fill="rgb(244,35,18)" rx="2" ry="2" />
<text  x="725.52" y="303.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (19 samples, 0.04%)</title><rect x="1141.5" y="245" width="0.5" height="15.0" fill="rgb(224,177,3)" rx="2" ry="2" />
<text  x="1144.52" y="255.5" ></text>
</g>
<g >
<title>seastar::reactor::del_timer (14 samples, 0.03%)</title><rect x="74.9" y="373" width="0.4" height="15.0" fill="rgb(211,87,7)" rx="2" ry="2" />
<text  x="77.94" y="383.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reserve&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::partition_snapshot_flat_reader&lt;memtable&amp;&gt; (599 samples, 1.21%)</title><rect x="498.5" y="277" width="14.3" height="15.0" fill="rgb(223,80,20)" rx="2" ry="2" />
<text  x="501.48" y="287.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;bool  (16 samples, 0.03%)</title><rect x="548.6" y="389" width="0.4" height="15.0" fill="rgb(242,124,1)" rx="2" ry="2" />
<text  x="551.61" y="399.5" ></text>
</g>
<g >
<title>absl::container_internal::operator== (5 samples, 0.01%)</title><rect x="823.7" y="325" width="0.1" height="15.0" fill="rgb(214,214,25)" rx="2" ry="2" />
<text  x="826.73" y="335.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::deallocate (27 samples, 0.05%)</title><rect x="560.6" y="293" width="0.7" height="15.0" fill="rgb(242,50,22)" rx="2" ry="2" />
<text  x="563.65" y="303.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_pausable&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (4,799 samples, 9.72%)</title><rect x="297.1" y="277" width="114.6" height="15.0" fill="rgb(213,221,19)" rx="2" ry="2" />
<text  x="300.07" y="287.5" >flat_mutation_..</text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_Optional_payload_base (16 samples, 0.03%)</title><rect x="104.7" y="389" width="0.3" height="15.0" fill="rgb(213,178,27)" rx="2" ry="2" />
<text  x="107.66" y="399.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate (27 samples, 0.05%)</title><rect x="884.5" y="309" width="0.7" height="15.0" fill="rgb(215,13,14)" rx="2" ry="2" />
<text  x="887.54" y="319.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;dht::decorated_key&gt;::_M_reset (6 samples, 0.01%)</title><rect x="417.3" y="357" width="0.1" height="15.0" fill="rgb(210,47,0)" rx="2" ry="2" />
<text  x="420.27" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::stats (5 samples, 0.01%)</title><rect x="520.8" y="325" width="0.1" height="15.0" fill="rgb(220,35,16)" rx="2" ry="2" />
<text  x="523.82" y="335.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::set&lt;service::storage_proxy_coordinator_query_result&gt; (18 samples, 0.04%)</title><rect x="1150.6" y="469" width="0.4" height="15.0" fill="rgb(233,27,16)" rx="2" ry="2" />
<text  x="1153.60" y="479.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_singular (1,210 samples, 2.45%)</title><rect x="1145.5" y="501" width="28.9" height="15.0" fill="rgb(213,3,35)" rx="2" ry="2" />
<text  x="1148.51" y="511.5" >se..</text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (17 samples, 0.03%)</title><rect x="787.8" y="133" width="0.4" height="15.0" fill="rgb(253,143,10)" rx="2" ry="2" />
<text  x="790.79" y="143.5" ></text>
</g>
<g >
<title>bplus::searcher&lt;dht::ring_position, long, dht::raw_token_less_comparator, 16ul,  (182 samples, 0.37%)</title><rect x="470.4" y="277" width="4.4" height="15.0" fill="rgb(237,23,51)" rx="2" ry="2" />
<text  x="473.41" y="287.5" ></text>
</g>
<g >
<title>seastar::future&lt;query::result_memory_accounter&gt;::get0 (5 samples, 0.01%)</title><rect x="79.2" y="453" width="0.1" height="15.0" fill="rgb(217,160,39)" rx="2" ry="2" />
<text  x="82.22" y="463.5" ></text>
</g>
<g >
<title>make_partition_snapshot_flat_reader_from_snp_schema (1,004 samples, 2.03%)</title><rect x="491.1" y="325" width="23.9" height="15.0" fill="rgb(218,87,7)" rx="2" ry="2" />
<text  x="494.05" y="335.5" >m..</text>
</g>
<g >
<title>cql3::statements::select_statement::execute (6,621 samples, 13.41%)</title><rect x="946.9" y="421" width="158.2" height="15.0" fill="rgb(226,152,23)" rx="2" ry="2" />
<text  x="949.89" y="431.5" >cql3::statements::se..</text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;service::storage_proxy_coordinator_query_result&gt;, seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::finally_body&lt;service::storage_proxy::do_query (11 samples, 0.02%)</title><rect x="23.9" y="517" width="0.2" height="15.0" fill="rgb(221,193,33)" rx="2" ry="2" />
<text  x="26.86" y="527.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (6 samples, 0.01%)</title><rect x="220.8" y="149" width="0.1" height="15.0" fill="rgb(220,67,54)" rx="2" ry="2" />
<text  x="223.78" y="159.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (69 samples, 0.14%)</title><rect x="154.0" y="197" width="1.7" height="15.0" fill="rgb(240,149,44)" rx="2" ry="2" />
<text  x="157.05" y="207.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::find_and_unlink_span_reclaiming (5 samples, 0.01%)</title><rect x="548.1" y="261" width="0.1" height="15.0" fill="rgb(209,110,6)" rx="2" ry="2" />
<text  x="551.06" y="271.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (313 samples, 0.63%)</title><rect x="99.1" y="437" width="7.5" height="15.0" fill="rgb(229,188,43)" rx="2" ry="2" />
<text  x="102.12" y="447.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::get_promise (9 samples, 0.02%)</title><rect x="750.0" y="405" width="0.2" height="15.0" fill="rgb(227,190,54)" rx="2" ry="2" />
<text  x="752.97" y="415.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_e5391f1eed1c0aa1965864b177f1772e13a61139] (7 samples, 0.01%)</title><rect x="99.9" y="421" width="0.2" height="15.0" fill="rgb(226,103,51)" rx="2" ry="2" />
<text  x="102.91" y="431.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::clear (17 samples, 0.03%)</title><rect x="580.2" y="341" width="0.4" height="15.0" fill="rgb(212,55,44)" rx="2" ry="2" />
<text  x="583.19" y="351.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;std::function&lt;std::function&lt;partition_presence_checker_result  (30 samples, 0.06%)</title><rect x="621.7" y="405" width="0.7" height="15.0" fill="rgb(212,118,32)" rx="2" ry="2" />
<text  x="624.67" y="415.5" ></text>
</g>
<g >
<title>partition_key_view::legacy_form (40 samples, 0.08%)</title><rect x="914.3" y="373" width="0.9" height="15.0" fill="rgb(232,152,11)" rx="2" ry="2" />
<text  x="917.26" y="383.5" ></text>
</g>
<g >
<title>schema::column_at (16 samples, 0.03%)</title><rect x="364.3" y="197" width="0.4" height="15.0" fill="rgb(244,100,32)" rx="2" ry="2" />
<text  x="367.35" y="207.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::local (8 samples, 0.02%)</title><rect x="1129.4" y="421" width="0.2" height="15.0" fill="rgb(252,48,35)" rx="2" ry="2" />
<text  x="1132.43" y="431.5" ></text>
</g>
<g >
<title>operator new (6 samples, 0.01%)</title><rect x="214.5" y="181" width="0.2" height="15.0" fill="rgb(212,195,44)" rx="2" ry="2" />
<text  x="217.54" y="191.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (26 samples, 0.05%)</title><rect x="1067.5" y="293" width="0.6" height="15.0" fill="rgb(224,173,53)" rx="2" ry="2" />
<text  x="1070.46" y="303.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::get0 (16 samples, 0.03%)</title><rect x="601.8" y="437" width="0.4" height="15.0" fill="rgb(254,141,20)" rx="2" ry="2" />
<text  x="604.84" y="447.5" ></text>
</g>
<g >
<title>seastar::reactor::del_timer (21 samples, 0.04%)</title><rect x="73.4" y="389" width="0.5" height="15.0" fill="rgb(220,67,19)" rx="2" ry="2" />
<text  x="76.43" y="399.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_allocate_buckets (45 samples, 0.09%)</title><rect x="1158.2" y="405" width="1.1" height="15.0" fill="rgb(226,226,4)" rx="2" ry="2" />
<text  x="1161.18" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (11 samples, 0.02%)</title><rect x="563.8" y="277" width="0.3" height="15.0" fill="rgb(209,131,23)" rx="2" ry="2" />
<text  x="566.83" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (17 samples, 0.03%)</title><rect x="620.2" y="437" width="0.4" height="15.0" fill="rgb(247,44,53)" rx="2" ry="2" />
<text  x="623.19" y="447.5" ></text>
</g>
<g >
<title>bytes_view_hasher::finalize (32 samples, 0.06%)</title><rect x="741.7" y="261" width="0.7" height="15.0" fill="rgb(246,185,51)" rx="2" ry="2" />
<text  x="744.68" y="271.5" ></text>
</g>
<g >
<title>mutation_fragment::consume&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (6 samples, 0.01%)</title><rect x="411.9" y="277" width="0.2" height="15.0" fill="rgb(249,134,15)" rx="2" ry="2" />
<text  x="414.92" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (124 samples, 0.25%)</title><rect x="1005.5" y="261" width="2.9" height="15.0" fill="rgb(227,85,17)" rx="2" ry="2" />
<text  x="1008.45" y="271.5" ></text>
</g>
<g >
<title>operator delete (49 samples, 0.10%)</title><rect x="575.6" y="357" width="1.2" height="15.0" fill="rgb(251,66,44)" rx="2" ry="2" />
<text  x="578.63" y="367.5" ></text>
</g>
<g >
<title>[unknown] (225 samples, 0.46%)</title><rect x="10.2" y="597" width="5.3" height="15.0" fill="rgb(217,65,30)" rx="2" ry="2" />
<text  x="13.17" y="607.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_M_reset (5 samples, 0.01%)</title><rect x="1134.6" y="421" width="0.1" height="15.0" fill="rgb(228,171,7)" rx="2" ry="2" />
<text  x="1137.62" y="431.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;nonwrapping_interval&lt;dht::ring_position&gt; const*, nonwrapping_interval&lt;dht::ring_position&gt;*&gt; (30 samples, 0.06%)</title><rect x="1045.5" y="245" width="0.8" height="15.0" fill="rgb(216,215,33)" rx="2" ry="2" />
<text  x="1048.55" y="255.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (158 samples, 0.32%)</title><rect x="721.8" y="357" width="3.7" height="15.0" fill="rgb(205,19,30)" rx="2" ry="2" />
<text  x="724.76" y="367.5" ></text>
</g>
<g >
<title>operator delete (25 samples, 0.05%)</title><rect x="666.4" y="469" width="0.6" height="15.0" fill="rgb(209,184,54)" rx="2" ry="2" />
<text  x="669.40" y="479.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (5 samples, 0.01%)</title><rect x="130.6" y="293" width="0.1" height="15.0" fill="rgb(213,220,5)" rx="2" ry="2" />
<text  x="133.56" y="303.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (6 samples, 0.01%)</title><rect x="540.0" y="421" width="0.1" height="15.0" fill="rgb(219,208,50)" rx="2" ry="2" />
<text  x="542.98" y="431.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (16 samples, 0.03%)</title><rect x="228.4" y="213" width="0.4" height="15.0" fill="rgb(212,113,40)" rx="2" ry="2" />
<text  x="231.38" y="223.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (28 samples, 0.06%)</title><rect x="1053.6" y="293" width="0.7" height="15.0" fill="rgb(236,15,49)" rx="2" ry="2" />
<text  x="1056.62" y="303.5" ></text>
</g>
<g >
<title>mutation_querier::query_static_row (10 samples, 0.02%)</title><rect x="328.8" y="181" width="0.3" height="15.0" fill="rgb(215,48,20)" rx="2" ry="2" />
<text  x="331.84" y="191.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::has_token (24 samples, 0.05%)</title><rect x="944.2" y="373" width="0.6" height="15.0" fill="rgb(221,190,2)" rx="2" ry="2" />
<text  x="947.19" y="383.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::iterator_at (5 samples, 0.01%)</title><rect x="758.7" y="357" width="0.1" height="15.0" fill="rgb(222,195,47)" rx="2" ry="2" />
<text  x="761.69" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (27 samples, 0.05%)</title><rect x="953.3" y="373" width="0.7" height="15.0" fill="rgb(242,151,46)" rx="2" ry="2" />
<text  x="956.35" y="383.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_in_thread&lt;sstables::sstable_writer, flat_mutation_reader::no_filter&gt; (14 samples, 0.03%)</title><rect x="22.7" y="517" width="0.3" height="15.0" fill="rgb(215,174,19)" rx="2" ry="2" />
<text  x="25.69" y="527.5" ></text>
</g>
<g >
<title>make_empty_flat_reader (144 samples, 0.29%)</title><rect x="530.6" y="309" width="3.5" height="15.0" fill="rgb(224,127,49)" rx="2" ry="2" />
<text  x="533.62" y="319.5" ></text>
</g>
<g >
<title>query::partition_slice::row_ranges (6 samples, 0.01%)</title><rect x="311.9" y="165" width="0.1" height="15.0" fill="rgb(216,49,1)" rx="2" ry="2" />
<text  x="314.88" y="175.5" ></text>
</g>
<g >
<title>std::__make_heap&lt;__gnu_cxx::__normal_iterator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position*, std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::heap_compare&gt; &gt; (12 samples, 0.02%)</title><rect x="244.0" y="213" width="0.3" height="15.0" fill="rgb(232,4,50)" rx="2" ry="2" />
<text  x="247.03" y="223.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (9 samples, 0.02%)</title><rect x="39.6" y="453" width="0.2" height="15.0" fill="rgb(237,227,51)" rx="2" ry="2" />
<text  x="42.63" y="463.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (39 samples, 0.08%)</title><rect x="657.5" y="485" width="0.9" height="15.0" fill="rgb(223,226,51)" rx="2" ry="2" />
<text  x="660.51" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::~vector (21 samples, 0.04%)</title><rect x="936.8" y="405" width="0.5" height="15.0" fill="rgb(212,56,17)" rx="2" ry="2" />
<text  x="939.79" y="415.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (22 samples, 0.04%)</title><rect x="508.2" y="197" width="0.5" height="15.0" fill="rgb(245,42,42)" rx="2" ry="2" />
<text  x="511.18" y="207.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::~guard (10 samples, 0.02%)</title><rect x="528.5" y="309" width="0.2" height="15.0" fill="rgb(216,51,28)" rx="2" ry="2" />
<text  x="531.49" y="319.5" ></text>
</g>
<g >
<title>service::client_state::has_column_family_access (7 samples, 0.01%)</title><rect x="22.2" y="469" width="0.2" height="15.0" fill="rgb(253,96,13)" rx="2" ry="2" />
<text  x="25.23" y="479.5" ></text>
</g>
<g >
<title>std::optional&lt;query::querier&lt; (5 samples, 0.01%)</title><rect x="84.0" y="453" width="0.1" height="15.0" fill="rgb(215,16,44)" rx="2" ry="2" />
<text  x="86.97" y="463.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEENK4$_43clERKNSF_15binary_operatorEEUlRKNSF_12column_valueEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_17tuple_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlNSF_5tokenEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlSS_E_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_11conjunctionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_8constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_21unresolved_identifierEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_25column_mutation_attributeEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13function_callEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4castEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_15field_selectionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4nullEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13bind_variableEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_16untyped_constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_22collection_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_20usertype_constructorEE_EERS4_IJS14_SQ_ST_S11_S1C_S1G_S1K_S1O_S1S_S1W_S20_S24_S18_SX_S28_S2C_EEEJEEESt16integer_sequenceImJLm2EEEE14__visit_invokeES2H_S2J_ (1,087 samples, 2.20%)</title><rect x="879.9" y="373" width="26.0" height="15.0" fill="rgb(233,190,34)" rx="2" ry="2" />
<text  x="882.95" y="383.5" >_..</text>
</g>
<g >
<title>seastar::future&lt;void&gt;::set_callback (11 samples, 0.02%)</title><rect x="708.9" y="501" width="0.3" height="15.0" fill="rgb(231,190,31)" rx="2" ry="2" />
<text  x="711.90" y="511.5" ></text>
</g>
<g >
<title>seastar::internal::awaiter&lt;query::result_memory_accounter&gt;::awaiter (6 samples, 0.01%)</title><rect x="81.3" y="453" width="0.1" height="15.0" fill="rgb(231,177,9)" rx="2" ry="2" />
<text  x="84.30" y="463.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (26 samples, 0.05%)</title><rect x="653.7" y="485" width="0.7" height="15.0" fill="rgb(241,183,23)" rx="2" ry="2" />
<text  x="656.73" y="495.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_Optional_payload_base (7 samples, 0.01%)</title><rect x="1099.3" y="357" width="0.1" height="15.0" fill="rgb(232,123,19)" rx="2" ry="2" />
<text  x="1102.26" y="367.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE14then_impl_nrvoIZNS6_14discard_resultEvEUlDpOT_E_NS0_IvEEEET0_OT_ (94 samples, 0.19%)</title><rect x="712.8" y="453" width="2.2" height="15.0" fill="rgb(246,19,50)" rx="2" ry="2" />
<text  x="715.77" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (13 samples, 0.03%)</title><rect x="780.1" y="245" width="0.3" height="15.0" fill="rgb(219,60,23)" rx="2" ry="2" />
<text  x="783.10" y="255.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (26 samples, 0.05%)</title><rect x="938.8" y="357" width="0.7" height="15.0" fill="rgb(244,95,31)" rx="2" ry="2" />
<text  x="941.84" y="367.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (5 samples, 0.01%)</title><rect x="756.4" y="293" width="0.1" height="15.0" fill="rgb(237,155,39)" rx="2" ry="2" />
<text  x="759.35" y="303.5" ></text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;void&gt;, service::storage_proxy*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt;, db::consistency_level, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, tracing::trace_state_ptr, service_permit, bool, seastar::lw_shared_ptr&lt;cdc::operation_result_tracker&gt; &gt;::make_stage_for_group (38 samples, 0.08%)</title><rect x="1141.1" y="405" width="0.9" height="15.0" fill="rgb(223,55,23)" rx="2" ry="2" />
<text  x="1144.07" y="415.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (6 samples, 0.01%)</title><rect x="426.9" y="405" width="0.2" height="15.0" fill="rgb(249,97,33)" rx="2" ry="2" />
<text  x="429.92" y="415.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_initialize_map (14 samples, 0.03%)</title><rect x="548.3" y="389" width="0.3" height="15.0" fill="rgb(216,70,25)" rx="2" ry="2" />
<text  x="551.27" y="399.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (8 samples, 0.02%)</title><rect x="554.4" y="357" width="0.2" height="15.0" fill="rgb(250,45,51)" rx="2" ry="2" />
<text  x="557.39" y="367.5" ></text>
</g>
<g >
<title>dht::tri_compare (84 samples, 0.17%)</title><rect x="477.5" y="261" width="2.0" height="15.0" fill="rgb(220,64,25)" rx="2" ry="2" />
<text  x="480.53" y="271.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::~impl (76 samples, 0.15%)</title><rect x="559.5" y="309" width="1.8" height="15.0" fill="rgb(226,48,14)" rx="2" ry="2" />
<text  x="562.48" y="319.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::enqueue_waiter (422 samples, 0.85%)</title><rect x="1020.8" y="213" width="10.1" height="15.0" fill="rgb(220,214,7)" rx="2" ry="2" />
<text  x="1023.77" y="223.5" ></text>
</g>
<g >
<title>flat_mutation_reader::peek (13 samples, 0.03%)</title><rect x="112.7" y="421" width="0.3" height="15.0" fill="rgb(233,136,48)" rx="2" ry="2" />
<text  x="115.74" y="431.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::EqualElement&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (31 samples, 0.06%)</title><rect x="821.2" y="293" width="0.7" height="15.0" fill="rgb(226,77,0)" rx="2" ry="2" />
<text  x="824.20" y="303.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (6 samples, 0.01%)</title><rect x="830.8" y="373" width="0.2" height="15.0" fill="rgb(234,36,15)" rx="2" ry="2" />
<text  x="833.85" y="383.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (6 samples, 0.01%)</title><rect x="247.9" y="245" width="0.2" height="15.0" fill="rgb(232,130,23)" rx="2" ry="2" />
<text  x="250.94" y="255.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (207 samples, 0.42%)</title><rect x="16.5" y="421" width="4.9" height="15.0" fill="rgb(217,47,42)" rx="2" ry="2" />
<text  x="19.50" y="431.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (7 samples, 0.01%)</title><rect x="1028.7" y="165" width="0.1" height="15.0" fill="rgb(208,130,33)" rx="2" ry="2" />
<text  x="1031.68" y="175.5" ></text>
</g>
<g >
<title>reader_permit::impl::on_permit_inactive (6 samples, 0.01%)</title><rect x="1024.5" y="197" width="0.2" height="15.0" fill="rgb(215,208,52)" rx="2" ry="2" />
<text  x="1027.54" y="207.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (7 samples, 0.01%)</title><rect x="988.8" y="261" width="0.2" height="15.0" fill="rgb(244,140,50)" rx="2" ry="2" />
<text  x="991.85" y="271.5" ></text>
</g>
<g >
<title>reader_selector::~reader_selector (12 samples, 0.02%)</title><rect x="575.1" y="341" width="0.3" height="15.0" fill="rgb(226,184,10)" rx="2" ry="2" />
<text  x="578.08" y="351.5" ></text>
</g>
<g >
<title>database::find_column_family (49 samples, 0.10%)</title><rect x="818.4" y="341" width="1.2" height="15.0" fill="rgb(205,123,38)" rx="2" ry="2" />
<text  x="821.45" y="351.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;abstract_type const&gt;::~shared_ptr (9 samples, 0.02%)</title><rect x="897.1" y="293" width="0.2" height="15.0" fill="rgb(245,92,47)" rx="2" ry="2" />
<text  x="900.13" y="303.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (9 samples, 0.02%)</title><rect x="801.7" y="229" width="0.2" height="15.0" fill="rgb(211,82,19)" rx="2" ry="2" />
<text  x="804.70" y="239.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_Optional_payload_base (8 samples, 0.02%)</title><rect x="539.6" y="405" width="0.1" height="15.0" fill="rgb(235,162,41)" rx="2" ry="2" />
<text  x="542.55" y="415.5" ></text>
</g>
<g >
<title>reader_permit::consume (6 samples, 0.01%)</title><rect x="507.9" y="165" width="0.1" height="15.0" fill="rgb(210,203,54)" rx="2" ry="2" />
<text  x="510.87" y="175.5" ></text>
</g>
<g >
<title>abstract_type::validate&lt;managed_bytes_basic_view&lt; (24 samples, 0.05%)</title><rect x="887.6" y="277" width="0.6" height="15.0" fill="rgb(253,202,30)" rx="2" ry="2" />
<text  x="890.59" y="287.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::range_or_slice_eq_null (6 samples, 0.01%)</title><rect x="859.4" y="389" width="0.2" height="15.0" fill="rgb(227,36,26)" rx="2" ry="2" />
<text  x="862.42" y="399.5" ></text>
</g>
<g >
<title>_ZSt13__invoke_implISt10unique_ptrIN7seastar8internal13do_with_stateISt5tupleIJN20flat_mutation_reader4impl16consumer_adapterI35stable_flattened_mutations_consumerI17compact_for_queryIL19emit_only_live_rows1EN5query27clustering_position_trackerI20query_result_builderEEEEEEEENS1_6futureIvEEEESt14default_deleteISL_EEZNS2_12do_with_implISH_ZNS6_7consumeISG_EEDaT_EUlRSH_E_JEEEDaOSR_OT0_DpOT1_EUlDpOT_E_JSH_EESR_St14__invoke_otherSW_SZ_ (53 samples, 0.11%)</title><rect x="290.7" y="309" width="1.3" height="15.0" fill="rgb(218,123,43)" rx="2" ry="2" />
<text  x="293.74" y="319.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::emplace_back&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;&amp;&gt; (25 samples, 0.05%)</title><rect x="765.6" y="373" width="0.6" height="15.0" fill="rgb(243,225,22)" rx="2" ry="2" />
<text  x="768.60" y="383.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::clear (25 samples, 0.05%)</title><rect x="283.5" y="357" width="0.6" height="15.0" fill="rgb(210,152,28)" rx="2" ry="2" />
<text  x="286.52" y="367.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (6 samples, 0.01%)</title><rect x="1038.8" y="261" width="0.1" height="15.0" fill="rgb(224,5,28)" rx="2" ry="2" />
<text  x="1041.78" y="271.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (8 samples, 0.02%)</title><rect x="741.5" y="261" width="0.2" height="15.0" fill="rgb(243,142,33)" rx="2" ry="2" />
<text  x="744.49" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (14 samples, 0.03%)</title><rect x="714.3" y="389" width="0.4" height="15.0" fill="rgb(210,47,48)" rx="2" ry="2" />
<text  x="717.33" y="399.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned char, std::pair&lt;unsigned char const, std::optional&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned char const, std::optional&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned char&gt;, std::hash&lt;unsigned char&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::~_Hashtable (40 samples, 0.08%)</title><rect x="668.0" y="453" width="1.0" height="15.0" fill="rgb(235,70,38)" rx="2" ry="2" />
<text  x="671.02" y="463.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::key_is_in_relation (37 samples, 0.07%)</title><rect x="951.3" y="389" width="0.9" height="15.0" fill="rgb(245,182,47)" rx="2" ry="2" />
<text  x="954.27" y="399.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_max_result_size (148 samples, 0.30%)</title><rect x="1130.7" y="421" width="3.5" height="15.0" fill="rgb(243,9,21)" rx="2" ry="2" />
<text  x="1133.68" y="431.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (5 samples, 0.01%)</title><rect x="1101.8" y="389" width="0.2" height="15.0" fill="rgb(231,84,43)" rx="2" ry="2" />
<text  x="1104.84" y="399.5" ></text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::EqualElement&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt;&amp;&gt; (53 samples, 0.11%)</title><rect x="821.0" y="309" width="1.3" height="15.0" fill="rgb(229,158,4)" rx="2" ry="2" />
<text  x="824.01" y="319.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_initialize_map (163 samples, 0.33%)</title><rect x="544.4" y="373" width="3.9" height="15.0" fill="rgb(219,143,22)" rx="2" ry="2" />
<text  x="547.38" y="383.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (80 samples, 0.16%)</title><rect x="841.7" y="373" width="1.9" height="15.0" fill="rgb(217,21,48)" rx="2" ry="2" />
<text  x="844.70" y="383.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (18 samples, 0.04%)</title><rect x="509.1" y="213" width="0.4" height="15.0" fill="rgb(206,177,41)" rx="2" ry="2" />
<text  x="512.11" y="223.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::execute (88 samples, 0.18%)</title><rect x="746.4" y="405" width="2.1" height="15.0" fill="rgb(245,77,53)" rx="2" ry="2" />
<text  x="749.39" y="415.5" ></text>
</g>
<g >
<title>flat_mutation_reader::close (7 samples, 0.01%)</title><rect x="1175.2" y="389" width="0.1" height="15.0" fill="rgb(254,209,6)" rx="2" ry="2" />
<text  x="1178.16" y="399.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (6 samples, 0.01%)</title><rect x="1028.2" y="117" width="0.1" height="15.0" fill="rgb(225,224,12)" rx="2" ry="2" />
<text  x="1031.20" y="127.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::~guard (7 samples, 0.01%)</title><rect x="147.1" y="261" width="0.1" height="15.0" fill="rgb(217,150,1)" rx="2" ry="2" />
<text  x="150.07" y="271.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::inet_address (28 samples, 0.06%)</title><rect x="977.1" y="357" width="0.7" height="15.0" fill="rgb(253,37,0)" rx="2" ry="2" />
<text  x="980.12" y="367.5" ></text>
</g>
<g >
<title>mutation_reader_merger::maybe_add_readers (7 samples, 0.01%)</title><rect x="129.2" y="293" width="0.2" height="15.0" fill="rgb(207,30,48)" rx="2" ry="2" />
<text  x="132.20" y="303.5" ></text>
</g>
</g>
</svg>
