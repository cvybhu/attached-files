<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="710" onload="init(evt)" viewBox="0 0 1200 710" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="710.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="693" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="693" > </text>
<g id="frames">
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (9 samples, 0.02%)</title><rect x="1041.9" y="277" width="0.2" height="15.0" fill="rgb(240,78,34)" rx="2" ry="2" />
<text  x="1044.87" y="287.5" ></text>
</g>
<g >
<title>std::default_delete&lt;query::partition_slice const&gt;::operator (6 samples, 0.01%)</title><rect x="581.6" y="421" width="0.2" height="15.0" fill="rgb(215,67,48)" rx="2" ry="2" />
<text  x="584.63" y="431.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::clear (23 samples, 0.05%)</title><rect x="652.4" y="485" width="0.6" height="15.0" fill="rgb(238,153,48)" rx="2" ry="2" />
<text  x="655.45" y="495.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (5 samples, 0.01%)</title><rect x="736.1" y="277" width="0.1" height="15.0" fill="rgb(240,98,47)" rx="2" ry="2" />
<text  x="739.07" y="287.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::operator= (12 samples, 0.03%)</title><rect x="697.8" y="437" width="0.3" height="15.0" fill="rgb(227,45,11)" rx="2" ry="2" />
<text  x="700.78" y="447.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;enum_set&lt;super_enum&lt;auth::permission,  (5 samples, 0.01%)</title><rect x="800.7" y="309" width="0.1" height="15.0" fill="rgb(251,147,35)" rx="2" ry="2" />
<text  x="803.72" y="319.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_requests (2,453 samples, 5.15%)</title><rect x="991.3" y="341" width="60.7" height="15.0" fill="rgb(211,38,13)" rx="2" ry="2" />
<text  x="994.26" y="351.5" >servic..</text>
</g>
<g >
<title>operator delete (50 samples, 0.10%)</title><rect x="795.6" y="245" width="1.3" height="15.0" fill="rgb(248,17,5)" rx="2" ry="2" />
<text  x="798.62" y="255.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::move_it (9 samples, 0.02%)</title><rect x="661.9" y="453" width="0.2" height="15.0" fill="rgb(240,148,0)" rx="2" ry="2" />
<text  x="664.88" y="463.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (10 samples, 0.02%)</title><rect x="479.1" y="213" width="0.3" height="15.0" fill="rgb(219,144,6)" rx="2" ry="2" />
<text  x="482.14" y="223.5" ></text>
</g>
<g >
<title>partition_snapshot::~partition_snapshot (31 samples, 0.07%)</title><rect x="560.6" y="261" width="0.7" height="15.0" fill="rgb(219,217,49)" rx="2" ry="2" />
<text  x="563.55" y="271.5" ></text>
</g>
<g >
<title>partition_key_view::legacy_form (12 samples, 0.03%)</title><rect x="914.8" y="373" width="0.3" height="15.0" fill="rgb(245,61,14)" rx="2" ry="2" />
<text  x="917.82" y="383.5" ></text>
</g>
<g >
<title>double_decker&lt;long, cache_entry, dht::raw_token_less_comparator, dht::ring_position_comparator, 16,  (6 samples, 0.01%)</title><rect x="521.6" y="325" width="0.2" height="15.0" fill="rgb(250,73,40)" rx="2" ry="2" />
<text  x="524.63" y="335.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (5 samples, 0.01%)</title><rect x="562.7" y="293" width="0.2" height="15.0" fill="rgb(242,59,49)" rx="2" ry="2" />
<text  x="565.73" y="303.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::deallocate (44 samples, 0.09%)</title><rect x="147.4" y="213" width="1.0" height="15.0" fill="rgb(235,35,25)" rx="2" ry="2" />
<text  x="150.35" y="223.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::on_new_range (410 samples, 0.86%)</title><rect x="142.2" y="245" width="10.1" height="15.0" fill="rgb(231,22,4)" rx="2" ry="2" />
<text  x="145.15" y="255.5" ></text>
</g>
<g >
<title>partition_snapshot::versions (5 samples, 0.01%)</title><rect x="231.4" y="213" width="0.1" height="15.0" fill="rgb(232,156,35)" rx="2" ry="2" />
<text  x="234.42" y="223.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::forward_to (23 samples, 0.05%)</title><rect x="860.1" y="469" width="0.6" height="15.0" fill="rgb(243,100,23)" rx="2" ry="2" />
<text  x="863.10" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::~vector (5 samples, 0.01%)</title><rect x="905.0" y="373" width="0.1" height="15.0" fill="rgb(251,33,40)" rx="2" ry="2" />
<text  x="908.02" y="383.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_esft&lt;partition_snapshot&gt;::dispose (7 samples, 0.01%)</title><rect x="562.1" y="293" width="0.2" height="15.0" fill="rgb(211,157,2)" rx="2" ry="2" />
<text  x="565.14" y="303.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::emplace_back&lt;mutation_fragment&gt; (5 samples, 0.01%)</title><rect x="259.3" y="309" width="0.1" height="15.0" fill="rgb(215,185,53)" rx="2" ry="2" />
<text  x="262.30" y="319.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (10 samples, 0.02%)</title><rect x="540.2" y="341" width="0.2" height="15.0" fill="rgb(212,54,15)" rx="2" ry="2" />
<text  x="543.15" y="351.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (6 samples, 0.01%)</title><rect x="348.7" y="165" width="0.1" height="15.0" fill="rgb(249,215,17)" rx="2" ry="2" />
<text  x="351.69" y="175.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (7 samples, 0.01%)</title><rect x="162.1" y="181" width="0.2" height="15.0" fill="rgb(207,74,9)" rx="2" ry="2" />
<text  x="165.09" y="191.5" ></text>
</g>
<g >
<title>row::external_memory_usage (246 samples, 0.52%)</title><rect x="199.9" y="149" width="6.1" height="15.0" fill="rgb(246,118,3)" rx="2" ry="2" />
<text  x="202.92" y="159.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_Optional_payload_base (14 samples, 0.03%)</title><rect x="95.8" y="389" width="0.4" height="15.0" fill="rgb(226,93,13)" rx="2" ry="2" />
<text  x="98.85" y="399.5" ></text>
</g>
<g >
<title>seastar::reactor::run_some_tasks (46,502 samples, 97.58%)</title><rect x="24.6" y="517" width="1151.4" height="15.0" fill="rgb(221,33,16)" rx="2" ry="2" />
<text  x="27.56" y="527.5" >seastar::reactor::run_some_tasks</text>
</g>
<g >
<title>row::row (32 samples, 0.07%)</title><rect x="247.1" y="197" width="0.8" height="15.0" fill="rgb(244,169,24)" rx="2" ry="2" />
<text  x="250.12" y="207.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::abstract_read_executor&gt;::~shared_ptr (7 samples, 0.01%)</title><rect x="1145.7" y="501" width="0.1" height="15.0" fill="rgb(218,53,45)" rx="2" ry="2" />
<text  x="1148.65" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_clear (92 samples, 0.19%)</title><rect x="571.9" y="357" width="2.3" height="15.0" fill="rgb(206,184,33)" rx="2" ry="2" />
<text  x="574.94" y="367.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE14then_impl_nrvoIZNS6_14discard_resultEvEUlDpOT_E_NS0_IvEEEET0_OT_ (89 samples, 0.19%)</title><rect x="711.0" y="453" width="2.2" height="15.0" fill="rgb(231,202,15)" rx="2" ry="2" />
<text  x="714.01" y="463.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (5 samples, 0.01%)</title><rect x="819.9" y="341" width="0.1" height="15.0" fill="rgb(249,78,53)" rx="2" ry="2" />
<text  x="822.91" y="351.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;std::tuple&lt;std::optional&lt;clustering_key_prefix&gt; &gt; &gt; &gt;::satisfy_with_result_of&lt;seastar::future&lt;mutation_fragment*&gt;::then_impl_nrvo&lt;query::consume_page&lt; (27 samples, 0.06%)</title><rect x="680.6" y="485" width="0.6" height="15.0" fill="rgb(245,123,1)" rx="2" ry="2" />
<text  x="683.55" y="495.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::~guard (8 samples, 0.02%)</title><rect x="498.9" y="261" width="0.2" height="15.0" fill="rgb(247,101,25)" rx="2" ry="2" />
<text  x="501.95" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (25 samples, 0.05%)</title><rect x="937.2" y="357" width="0.7" height="15.0" fill="rgb(247,142,39)" rx="2" ry="2" />
<text  x="940.23" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (8 samples, 0.02%)</title><rect x="1134.2" y="421" width="0.2" height="15.0" fill="rgb(252,145,27)" rx="2" ry="2" />
<text  x="1137.19" y="431.5" ></text>
</g>
<g >
<title>fmt::v7::basic_printf_context&lt;fmt::v7::detail::buffer_appender&lt;char&gt;, char&gt;::format&lt;fmt::v7::printf_arg_formatter&lt;fmt::v7::detail::buffer_appender&lt;char&gt;, char&gt; &gt; (5 samples, 0.01%)</title><rect x="15.2" y="501" width="0.1" height="15.0" fill="rgb(251,197,15)" rx="2" ry="2" />
<text  x="18.18" y="511.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;managed_bytes&gt;::operator= (7 samples, 0.01%)</title><rect x="897.4" y="309" width="0.2" height="15.0" fill="rgb(206,17,45)" rx="2" ry="2" />
<text  x="900.41" y="319.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (281 samples, 0.59%)</title><rect x="478.7" y="229" width="6.9" height="15.0" fill="rgb(252,86,5)" rx="2" ry="2" />
<text  x="481.69" y="239.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperationDifferentiator (66 samples, 0.14%)</title><rect x="17.7" y="341" width="1.6" height="15.0" fill="rgb(254,219,28)" rx="2" ry="2" />
<text  x="20.68" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (7 samples, 0.01%)</title><rect x="665.6" y="453" width="0.1" height="15.0" fill="rgb(243,211,42)" rx="2" ry="2" />
<text  x="668.57" y="463.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::do_flush (11,499 samples, 24.13%)</title><rect x="857.0" y="485" width="284.8" height="15.0" fill="rgb(233,28,7)" rx="2" ry="2" />
<text  x="860.03" y="495.5" >seastar::concrete_execution_stage&lt;seas..</text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::~small_vector (22 samples, 0.05%)</title><rect x="444.0" y="293" width="0.5" height="15.0" fill="rgb(238,119,14)" rx="2" ry="2" />
<text  x="447.00" y="303.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (20 samples, 0.04%)</title><rect x="1133.3" y="389" width="0.5" height="15.0" fill="rgb(226,95,8)" rx="2" ry="2" />
<text  x="1136.34" y="399.5" ></text>
</g>
<g >
<title>absl::hash_internal::AbslHashValue&lt;absl::hash_internal::HashState&gt; (21 samples, 0.04%)</title><rect x="831.9" y="357" width="0.6" height="15.0" fill="rgb(250,37,16)" rx="2" ry="2" />
<text  x="834.94" y="367.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::lru_entry, boost::intrusive::list_node_traits&lt;void*&gt;,  (20 samples, 0.04%)</title><rect x="731.2" y="293" width="0.5" height="15.0" fill="rgb(215,56,33)" rx="2" ry="2" />
<text  x="734.24" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (35 samples, 0.07%)</title><rect x="953.8" y="373" width="0.9" height="15.0" fill="rgb(232,99,8)" rx="2" ry="2" />
<text  x="956.85" y="383.5" ></text>
</g>
<g >
<title>ser::writer_of_query_result&lt;bytes_ostream&gt;::start_partitions (12 samples, 0.03%)</title><rect x="592.4" y="405" width="0.3" height="15.0" fill="rgb(232,42,36)" rx="2" ry="2" />
<text  x="595.42" y="415.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_Optional_payload_base (26 samples, 0.05%)</title><rect x="931.0" y="389" width="0.6" height="15.0" fill="rgb(244,167,50)" rx="2" ry="2" />
<text  x="933.97" y="399.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::make_data_requests (490 samples, 1.03%)</title><rect x="692.3" y="501" width="12.1" height="15.0" fill="rgb(221,162,48)" rx="2" ry="2" />
<text  x="695.26" y="511.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (12 samples, 0.03%)</title><rect x="746.0" y="373" width="0.3" height="15.0" fill="rgb(246,65,2)" rx="2" ry="2" />
<text  x="749.00" y="383.5" ></text>
</g>
<g >
<title>std::operator==&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; (7 samples, 0.01%)</title><rect x="736.8" y="293" width="0.2" height="15.0" fill="rgb(207,162,31)" rx="2" ry="2" />
<text  x="739.83" y="303.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::clear (11 samples, 0.02%)</title><rect x="256.8" y="277" width="0.3" height="15.0" fill="rgb(235,154,11)" rx="2" ry="2" />
<text  x="259.83" y="287.5" ></text>
</g>
<g >
<title>std::__push_heap&lt;mutation_reader_merger::reader_and_fragment*, long, mutation_reader_merger::reader_and_fragment, __gnu_cxx::__ops::_Iter_comp_val&lt;mutation_reader_merger::reader_heap_compare&gt; &gt; (5 samples, 0.01%)</title><rect x="129.4" y="245" width="0.1" height="15.0" fill="rgb(241,54,27)" rx="2" ry="2" />
<text  x="132.35" y="255.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::operator= (18 samples, 0.04%)</title><rect x="821.6" y="405" width="0.4" height="15.0" fill="rgb(223,206,10)" rx="2" ry="2" />
<text  x="824.59" y="415.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (20 samples, 0.04%)</title><rect x="1177.7" y="629" width="0.5" height="15.0" fill="rgb(250,25,42)" rx="2" ry="2" />
<text  x="1180.72" y="639.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::~partition_snapshot_flat_reader (6 samples, 0.01%)</title><rect x="1175.4" y="373" width="0.1" height="15.0" fill="rgb(243,85,14)" rx="2" ry="2" />
<text  x="1178.37" y="383.5" ></text>
</g>
<g >
<title>cql3::statements::raw::modification_statement::prepare (36 samples, 0.08%)</title><rect x="20.5" y="469" width="0.9" height="15.0" fill="rgb(249,88,27)" rx="2" ry="2" />
<text  x="23.52" y="479.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_M_reset (7 samples, 0.01%)</title><rect x="925.6" y="341" width="0.2" height="15.0" fill="rgb(227,0,27)" rx="2" ry="2" />
<text  x="928.64" y="351.5" ></text>
</g>
<g >
<title>mutation_reader_merger::~mutation_reader_merger (5 samples, 0.01%)</title><rect x="577.4" y="389" width="0.1" height="15.0" fill="rgb(207,3,46)" rx="2" ry="2" />
<text  x="580.39" y="399.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (7 samples, 0.01%)</title><rect x="626.9" y="485" width="0.2" height="15.0" fill="rgb(250,143,43)" rx="2" ry="2" />
<text  x="629.94" y="495.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::set_callback (8 samples, 0.02%)</title><rect x="706.9" y="501" width="0.2" height="15.0" fill="rgb(241,143,50)" rx="2" ry="2" />
<text  x="709.87" y="511.5" ></text>
</g>
<g >
<title>seastar::future_state_base::any::operator= (7 samples, 0.01%)</title><rect x="822.0" y="405" width="0.2" height="15.0" fill="rgb(207,5,51)" rx="2" ry="2" />
<text  x="825.04" y="415.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (12 samples, 0.03%)</title><rect x="923.4" y="389" width="0.3" height="15.0" fill="rgb(207,135,11)" rx="2" ry="2" />
<text  x="926.36" y="399.5" ></text>
</g>
<g >
<title>logalloc::basic_region_impl::set_reclaiming_enabled (13 samples, 0.03%)</title><rect x="159.3" y="197" width="0.4" height="15.0" fill="rgb(211,184,14)" rx="2" ry="2" />
<text  x="162.34" y="207.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;service::query_state, false&gt;::make&lt;service::client_state&amp;, service_permit&gt; (59 samples, 0.12%)</title><rect x="834.6" y="421" width="1.5" height="15.0" fill="rgb(228,142,0)" rx="2" ry="2" />
<text  x="837.59" y="431.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::CqlParser (5 samples, 0.01%)</title><rect x="15.5" y="421" width="0.1" height="15.0" fill="rgb(230,48,47)" rx="2" ry="2" />
<text  x="18.52" y="431.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::never_speculating_read_executor&gt;::~shared_ptr (8 samples, 0.02%)</title><rect x="976.8" y="357" width="0.2" height="15.0" fill="rgb(213,41,19)" rx="2" ry="2" />
<text  x="979.78" y="367.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (31 samples, 0.07%)</title><rect x="64.9" y="389" width="0.8" height="15.0" fill="rgb(242,82,25)" rx="2" ry="2" />
<text  x="67.95" y="399.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::contains&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (106 samples, 0.22%)</title><rect x="836.9" y="389" width="2.6" height="15.0" fill="rgb(237,33,42)" rx="2" ry="2" />
<text  x="839.90" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (9 samples, 0.02%)</title><rect x="796.6" y="229" width="0.3" height="15.0" fill="rgb(236,5,44)" rx="2" ry="2" />
<text  x="799.63" y="239.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (27 samples, 0.06%)</title><rect x="655.3" y="485" width="0.6" height="15.0" fill="rgb(236,77,0)" rx="2" ry="2" />
<text  x="658.27" y="495.5" ></text>
</g>
<g >
<title>bytes_ostream::view (29 samples, 0.06%)</title><rect x="588.8" y="405" width="0.7" height="15.0" fill="rgb(217,210,14)" rx="2" ry="2" />
<text  x="591.76" y="415.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::~merging_reader (5 samples, 0.01%)</title><rect x="1175.5" y="437" width="0.2" height="15.0" fill="rgb(224,19,50)" rx="2" ry="2" />
<text  x="1178.54" y="447.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (25 samples, 0.05%)</title><rect x="274.4" y="293" width="0.7" height="15.0" fill="rgb(217,164,21)" rx="2" ry="2" />
<text  x="277.43" y="303.5" ></text>
</g>
<g >
<title>utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::lru_entry::touch (40 samples, 0.08%)</title><rect x="730.7" y="309" width="1.0" height="15.0" fill="rgb(235,163,38)" rx="2" ry="2" />
<text  x="733.74" y="319.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (15 samples, 0.03%)</title><rect x="286.2" y="405" width="0.3" height="15.0" fill="rgb(238,58,53)" rx="2" ry="2" />
<text  x="289.17" y="415.5" ></text>
</g>
<g >
<title>database::query (16 samples, 0.03%)</title><rect x="1003.7" y="277" width="0.4" height="15.0" fill="rgb(251,32,54)" rx="2" ry="2" />
<text  x="1006.67" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (22 samples, 0.05%)</title><rect x="603.8" y="405" width="0.5" height="15.0" fill="rgb(208,62,6)" rx="2" ry="2" />
<text  x="606.76" y="415.5" ></text>
</g>
<g >
<title>bplus::tree&lt;long, intrusive_array&lt;memtable_entry&gt;, dht::raw_token_less_comparator, 16ul,  (7 samples, 0.01%)</title><rect x="457.9" y="325" width="0.1" height="15.0" fill="rgb(209,153,11)" rx="2" ry="2" />
<text  x="460.87" y="335.5" ></text>
</g>
<g >
<title>query::partition_slice::row_ranges (11 samples, 0.02%)</title><rect x="317.0" y="213" width="0.3" height="15.0" fill="rgb(229,202,15)" rx="2" ry="2" />
<text  x="320.02" y="223.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::move_it (8 samples, 0.02%)</title><rect x="626.7" y="485" width="0.2" height="15.0" fill="rgb(212,18,42)" rx="2" ry="2" />
<text  x="629.74" y="495.5" ></text>
</g>
<g >
<title>std::__equal&lt;true&gt;::equal&lt;char&gt; (9 samples, 0.02%)</title><rect x="786.7" y="117" width="0.3" height="15.0" fill="rgb(227,73,52)" rx="2" ry="2" />
<text  x="789.73" y="127.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (11 samples, 0.02%)</title><rect x="779.4" y="229" width="0.2" height="15.0" fill="rgb(209,101,11)" rx="2" ry="2" />
<text  x="782.37" y="239.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_prepared (12 samples, 0.03%)</title><rect x="852.8" y="485" width="0.3" height="15.0" fill="rgb(219,198,12)" rx="2" ry="2" />
<text  x="855.77" y="495.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::move_it (6 samples, 0.01%)</title><rect x="694.4" y="469" width="0.1" height="15.0" fill="rgb(220,48,11)" rx="2" ry="2" />
<text  x="697.37" y="479.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt;::_M_reset (6 samples, 0.01%)</title><rect x="227.0" y="245" width="0.2" height="15.0" fill="rgb(226,162,26)" rx="2" ry="2" />
<text  x="230.01" y="255.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::_Move_ctor_base (8 samples, 0.02%)</title><rect x="315.1" y="181" width="0.2" height="15.0" fill="rgb(229,72,53)" rx="2" ry="2" />
<text  x="318.07" y="191.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;compact_for_query&lt; (5 samples, 0.01%)</title><rect x="417.5" y="389" width="0.1" height="15.0" fill="rgb(254,122,43)" rx="2" ry="2" />
<text  x="420.48" y="399.5" ></text>
</g>
<g >
<title>seastar::timer_set&lt;seastar::timer&lt;std::chrono::_V2::steady_clock&gt;, &amp;seastar::timer&lt;std::chrono::_V2::steady_clock&gt;::_link&gt;::expire (17 samples, 0.04%)</title><rect x="1177.0" y="437" width="0.4" height="15.0" fill="rgb(238,35,11)" rx="2" ry="2" />
<text  x="1179.95" y="447.5" ></text>
</g>
<g >
<title>seastar::reactor::add_timer (30 samples, 0.06%)</title><rect x="1027.2" y="149" width="0.7" height="15.0" fill="rgb(225,227,7)" rx="2" ry="2" />
<text  x="1030.19" y="159.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (46 samples, 0.10%)</title><rect x="794.4" y="245" width="1.1" height="15.0" fill="rgb(209,193,17)" rx="2" ry="2" />
<text  x="797.38" y="255.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_allocate_buckets (31 samples, 0.07%)</title><rect x="1159.0" y="405" width="0.8" height="15.0" fill="rgb(217,49,53)" rx="2" ry="2" />
<text  x="1162.05" y="415.5" ></text>
</g>
<g >
<title>seastar::future&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (91 samples, 0.19%)</title><rect x="780.3" y="213" width="2.2" height="15.0" fill="rgb(228,98,16)" rx="2" ry="2" />
<text  x="783.29" y="223.5" ></text>
</g>
<g >
<title>std::type_info::operator== (10 samples, 0.02%)</title><rect x="696.6" y="437" width="0.3" height="15.0" fill="rgb(233,218,32)" rx="2" ry="2" />
<text  x="699.62" y="447.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::allocate (42 samples, 0.09%)</title><rect x="146.3" y="197" width="1.0" height="15.0" fill="rgb(242,86,26)" rx="2" ry="2" />
<text  x="149.29" y="207.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (150 samples, 0.31%)</title><rect x="390.7" y="245" width="3.7" height="15.0" fill="rgb(219,151,32)" rx="2" ry="2" />
<text  x="393.66" y="255.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (17 samples, 0.04%)</title><rect x="795.1" y="213" width="0.4" height="15.0" fill="rgb(221,36,22)" rx="2" ry="2" />
<text  x="798.07" y="223.5" ></text>
</g>
<g >
<title>list_reader_selector::~list_reader_selector (37 samples, 0.08%)</title><rect x="567.8" y="373" width="1.0" height="15.0" fill="rgb(242,79,26)" rx="2" ry="2" />
<text  x="570.83" y="383.5" ></text>
</g>
<g >
<title>reader_permit::consume_memory (5 samples, 0.01%)</title><rect x="508.2" y="213" width="0.1" height="15.0" fill="rgb(240,142,18)" rx="2" ry="2" />
<text  x="511.18" y="223.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (24 samples, 0.05%)</title><rect x="630.4" y="469" width="0.6" height="15.0" fill="rgb(219,112,7)" rx="2" ry="2" />
<text  x="633.36" y="479.5" ></text>
</g>
<g >
<title>operator new (110 samples, 0.23%)</title><rect x="983.5" y="325" width="2.7" height="15.0" fill="rgb(243,144,4)" rx="2" ry="2" />
<text  x="986.51" y="335.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (7 samples, 0.01%)</title><rect x="546.2" y="421" width="0.1" height="15.0" fill="rgb(253,104,49)" rx="2" ry="2" />
<text  x="549.17" y="431.5" ></text>
</g>
<g >
<title>seastar::app_template::run_deprecated (46,660 samples, 97.91%)</title><rect x="22.3" y="565" width="1155.4" height="15.0" fill="rgb(224,18,50)" rx="2" ry="2" />
<text  x="25.31" y="575.5" >seastar::app_template::run_deprecated</text>
</g>
<g >
<title>std::pair&lt;auth::role_or_anonymous, auth::resource&gt;::pair&lt;auth::role_or_anonymous, auth::resource, true&gt; (69 samples, 0.14%)</title><rect x="793.8" y="261" width="1.7" height="15.0" fill="rgb(205,211,43)" rx="2" ry="2" />
<text  x="796.81" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::at (50 samples, 0.10%)</title><rect x="812.1" y="325" width="1.3" height="15.0" fill="rgb(228,22,25)" rx="2" ry="2" />
<text  x="815.13" y="335.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (35 samples, 0.07%)</title><rect x="1128.0" y="421" width="0.8" height="15.0" fill="rgb(208,15,15)" rx="2" ry="2" />
<text  x="1130.97" y="431.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (6 samples, 0.01%)</title><rect x="402.4" y="213" width="0.1" height="15.0" fill="rgb(232,213,13)" rx="2" ry="2" />
<text  x="405.35" y="223.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (7 samples, 0.01%)</title><rect x="1124.8" y="405" width="0.2" height="15.0" fill="rgb(253,42,5)" rx="2" ry="2" />
<text  x="1127.80" y="415.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::EqualElement&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (23 samples, 0.05%)</title><rect x="814.7" y="293" width="0.6" height="15.0" fill="rgb(253,132,35)" rx="2" ry="2" />
<text  x="817.71" y="303.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::move_it (53 samples, 0.11%)</title><rect x="677.8" y="469" width="1.3" height="15.0" fill="rgb(216,207,17)" rx="2" ry="2" />
<text  x="680.78" y="479.5" ></text>
</g>
<g >
<title>seastar::future&lt;std::tuple&lt;std::optional&lt;clustering_key_prefix&gt; &gt; &gt;::then_impl&lt;query::querier&lt; (5 samples, 0.01%)</title><rect x="599.0" y="437" width="0.2" height="15.0" fill="rgb(243,102,35)" rx="2" ry="2" />
<text  x="602.03" y="447.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (5 samples, 0.01%)</title><rect x="891.5" y="277" width="0.1" height="15.0" fill="rgb(233,58,13)" rx="2" ry="2" />
<text  x="894.47" y="287.5" ></text>
</g>
<g >
<title>bound_view::from_range_start&lt;nonwrapping_interval&gt; (6 samples, 0.01%)</title><rect x="212.4" y="117" width="0.2" height="15.0" fill="rgb(229,164,0)" rx="2" ry="2" />
<text  x="215.40" y="127.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (215 samples, 0.45%)</title><rect x="734.8" y="357" width="5.3" height="15.0" fill="rgb(233,221,16)" rx="2" ry="2" />
<text  x="737.75" y="367.5" ></text>
</g>
<g >
<title>reader_permit::impl::mark_unused (406 samples, 0.85%)</title><rect x="61.5" y="437" width="10.0" height="15.0" fill="rgb(227,103,26)" rx="2" ry="2" />
<text  x="64.46" y="447.5" ></text>
</g>
<g >
<title>operator new (11 samples, 0.02%)</title><rect x="90.3" y="437" width="0.3" height="15.0" fill="rgb(211,83,23)" rx="2" ry="2" />
<text  x="93.33" y="447.5" ></text>
</g>
<g >
<title>partition_key_view::legacy_tri_compare (295 samples, 0.62%)</title><rect x="478.3" y="245" width="7.3" height="15.0" fill="rgb(225,25,21)" rx="2" ry="2" />
<text  x="481.35" y="255.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (6 samples, 0.01%)</title><rect x="839.6" y="405" width="0.2" height="15.0" fill="rgb(250,190,44)" rx="2" ry="2" />
<text  x="842.62" y="415.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_one (504 samples, 1.06%)</title><rect x="122.7" y="277" width="12.5" height="15.0" fill="rgb(229,71,39)" rx="2" ry="2" />
<text  x="125.74" y="287.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::query_processor::process_authorized_statement (5 samples, 0.01%)</title><rect x="22.9" y="517" width="0.1" height="15.0" fill="rgb(226,209,46)" rx="2" ry="2" />
<text  x="25.90" y="527.5" ></text>
</g>
<g >
<title>compound_type&lt; (144 samples, 0.30%)</title><rect x="926.3" y="373" width="3.6" height="15.0" fill="rgb(229,36,41)" rx="2" ry="2" />
<text  x="929.29" y="383.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::_Move_ctor_base (9 samples, 0.02%)</title><rect x="316.4" y="149" width="0.3" height="15.0" fill="rgb(207,57,20)" rx="2" ry="2" />
<text  x="319.43" y="159.5" ></text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (15 samples, 0.03%)</title><rect x="14.5" y="613" width="0.4" height="15.0" fill="rgb(211,213,30)" rx="2" ry="2" />
<text  x="17.51" y="623.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::emplace_back&lt;unsigned int const&amp;&gt; (5 samples, 0.01%)</title><rect x="1139.9" y="421" width="0.2" height="15.0" fill="rgb(244,8,43)" rx="2" ry="2" />
<text  x="1142.93" y="431.5" ></text>
</g>
<g >
<title>std::default_delete&lt;cql3::expr::expression::impl&gt;::operator (17 samples, 0.04%)</title><rect x="895.5" y="309" width="0.4" height="15.0" fill="rgb(220,196,30)" rx="2" ry="2" />
<text  x="898.46" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_clear (23 samples, 0.05%)</title><rect x="576.6" y="373" width="0.6" height="15.0" fill="rgb(227,65,24)" rx="2" ry="2" />
<text  x="579.65" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (8 samples, 0.02%)</title><rect x="554.7" y="261" width="0.2" height="15.0" fill="rgb(217,33,19)" rx="2" ry="2" />
<text  x="557.69" y="271.5" ></text>
</g>
<g >
<title>database::find_column_family (58 samples, 0.12%)</title><rect x="748.4" y="373" width="1.5" height="15.0" fill="rgb(230,197,36)" rx="2" ry="2" />
<text  x="751.42" y="383.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_token (41 samples, 0.09%)</title><rect x="874.9" y="405" width="1.0" height="15.0" fill="rgb(245,197,7)" rx="2" ry="2" />
<text  x="877.88" y="415.5" ></text>
</g>
<g >
<title>partition_snapshot::version_count (13 samples, 0.03%)</title><rect x="220.9" y="133" width="0.3" height="15.0" fill="rgb(246,117,18)" rx="2" ry="2" />
<text  x="223.87" y="143.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (20 samples, 0.04%)</title><rect x="1130.9" y="373" width="0.5" height="15.0" fill="rgb(248,116,31)" rx="2" ry="2" />
<text  x="1133.92" y="383.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_no_esft&lt;std::function&lt;std::function&lt;partition_presence_checker_result  (12 samples, 0.03%)</title><rect x="618.9" y="389" width="0.3" height="15.0" fill="rgb(236,151,30)" rx="2" ry="2" />
<text  x="621.89" y="399.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_last_fragment_kind, 4ul&gt;::~small_vector (12 samples, 0.03%)</title><rect x="576.2" y="357" width="0.3" height="15.0" fill="rgb(249,143,29)" rx="2" ry="2" />
<text  x="579.18" y="367.5" ></text>
</g>
<g >
<title>memtable::upgrade_entry (13 samples, 0.03%)</title><rect x="514.2" y="325" width="0.3" height="15.0" fill="rgb(237,10,4)" rx="2" ry="2" />
<text  x="517.23" y="335.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::modification_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::do_flush (45 samples, 0.09%)</title><rect x="855.9" y="485" width="1.1" height="15.0" fill="rgb(229,63,36)" rx="2" ry="2" />
<text  x="858.91" y="495.5" ></text>
</g>
<g >
<title>auth::data_resource_view::keyspace (10 samples, 0.02%)</title><rect x="806.5" y="309" width="0.3" height="15.0" fill="rgb(207,25,23)" rx="2" ry="2" />
<text  x="809.54" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (62 samples, 0.13%)</title><rect x="542.4" y="325" width="1.5" height="15.0" fill="rgb(237,41,17)" rx="2" ry="2" />
<text  x="545.38" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (45 samples, 0.09%)</title><rect x="843.6" y="341" width="1.1" height="15.0" fill="rgb(212,151,19)" rx="2" ry="2" />
<text  x="846.61" y="351.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (10 samples, 0.02%)</title><rect x="1151.6" y="453" width="0.3" height="15.0" fill="rgb(238,11,52)" rx="2" ry="2" />
<text  x="1154.62" y="463.5" ></text>
</g>
<g >
<title>operator new (36 samples, 0.08%)</title><rect x="902.6" y="325" width="0.9" height="15.0" fill="rgb(242,128,19)" rx="2" ry="2" />
<text  x="905.59" y="335.5" ></text>
</g>
<g >
<title>bytes_view_hasher::finalize (42 samples, 0.09%)</title><rect x="738.6" y="261" width="1.1" height="15.0" fill="rgb(232,60,44)" rx="2" ry="2" />
<text  x="741.64" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (14 samples, 0.03%)</title><rect x="73.8" y="453" width="0.4" height="15.0" fill="rgb(215,132,26)" rx="2" ry="2" />
<text  x="76.81" y="463.5" ></text>
</g>
<g >
<title>reader_permit::impl::impl (27 samples, 0.06%)</title><rect x="1035.7" y="213" width="0.7" height="15.0" fill="rgb(220,153,1)" rx="2" ry="2" />
<text  x="1038.73" y="223.5" ></text>
</g>
<g >
<title>utils::loading_shared_values&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater, 256ul&gt;::find&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt; &gt; (168 samples, 0.35%)</title><rect x="718.5" y="389" width="4.1" height="15.0" fill="rgb(228,77,11)" rx="2" ry="2" />
<text  x="721.46" y="399.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::execute (189 samples, 0.40%)</title><rect x="684.4" y="469" width="4.7" height="15.0" fill="rgb(239,134,18)" rx="2" ry="2" />
<text  x="687.41" y="479.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (5 samples, 0.01%)</title><rect x="625.0" y="453" width="0.1" height="15.0" fill="rgb(232,22,8)" rx="2" ry="2" />
<text  x="628.01" y="463.5" ></text>
</g>
<g >
<title>cql3::query_processor::process_authorized_statement (206 samples, 0.43%)</title><rect x="741.7" y="421" width="5.1" height="15.0" fill="rgb(230,52,12)" rx="2" ry="2" />
<text  x="744.66" y="431.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_Optional_payload_base (11 samples, 0.02%)</title><rect x="1102.6" y="357" width="0.2" height="15.0" fill="rgb(251,113,52)" rx="2" ry="2" />
<text  x="1105.57" y="367.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_esft&lt;partition_snapshot&gt;::dispose (35 samples, 0.07%)</title><rect x="560.5" y="277" width="0.8" height="15.0" fill="rgb(240,89,10)" rx="2" ry="2" />
<text  x="563.46" y="287.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::_M_create_storage (36 samples, 0.08%)</title><rect x="937.0" y="389" width="0.9" height="15.0" fill="rgb(246,176,45)" rx="2" ry="2" />
<text  x="939.98" y="399.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::clear (8 samples, 0.02%)</title><rect x="707.7" y="501" width="0.2" height="15.0" fill="rgb(244,97,19)" rx="2" ry="2" />
<text  x="710.71" y="511.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::emplace_back&lt;mutation_fragment&gt; (22 samples, 0.05%)</title><rect x="256.3" y="277" width="0.5" height="15.0" fill="rgb(225,138,14)" rx="2" ry="2" />
<text  x="259.28" y="287.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (5 samples, 0.01%)</title><rect x="151.9" y="213" width="0.1" height="15.0" fill="rgb(213,132,27)" rx="2" ry="2" />
<text  x="154.89" y="223.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, flat_mutation_reader, reader_concurrency_semaphore::inactive_read_handle&gt;::~_Variant_storage (23 samples, 0.05%)</title><rect x="579.5" y="421" width="0.5" height="15.0" fill="rgb(221,211,0)" rx="2" ry="2" />
<text  x="582.47" y="431.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::digest_read_result&gt;::then_wrapped_nrvo&lt;void, service::abstract_read_executor::execute (108 samples, 0.23%)</title><rect x="979.3" y="325" width="2.6" height="15.0" fill="rgb(219,141,12)" rx="2" ry="2" />
<text  x="982.25" y="335.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;schema_registry_entry&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;schema_registry_entry&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (42 samples, 0.09%)</title><rect x="972.5" y="309" width="1.0" height="15.0" fill="rgb(214,195,8)" rx="2" ry="2" />
<text  x="975.49" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (58 samples, 0.12%)</title><rect x="278.3" y="261" width="1.4" height="15.0" fill="rgb(252,86,48)" rx="2" ry="2" />
<text  x="281.27" y="271.5" ></text>
</g>
<g >
<title>partition_key::legacy_tri_compare (333 samples, 0.70%)</title><rect x="477.4" y="261" width="8.2" height="15.0" fill="rgb(242,214,8)" rx="2" ry="2" />
<text  x="480.40" y="271.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::has_token (36 samples, 0.08%)</title><rect x="945.7" y="373" width="0.9" height="15.0" fill="rgb(226,55,4)" rx="2" ry="2" />
<text  x="948.75" y="383.5" ></text>
</g>
<g >
<title>schema::get_sharder (5 samples, 0.01%)</title><rect x="1009.2" y="277" width="0.1" height="15.0" fill="rgb(234,55,53)" rx="2" ry="2" />
<text  x="1012.19" y="287.5" ></text>
</g>
<g >
<title>std::apply&lt;service::client_state::has_column_family_access (1,848 samples, 3.88%)</title><rect x="762.6" y="389" width="45.7" height="15.0" fill="rgb(230,225,3)" rx="2" ry="2" />
<text  x="765.59" y="399.5" >std:..</text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::deallocate (33 samples, 0.07%)</title><rect x="567.0" y="357" width="0.8" height="15.0" fill="rgb(210,2,33)" rx="2" ry="2" />
<text  x="570.02" y="367.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::push_mutation_fragment&lt;mutation_fragment&gt; (217 samples, 0.46%)</title><rect x="143.1" y="229" width="5.3" height="15.0" fill="rgb(226,69,45)" rx="2" ry="2" />
<text  x="146.07" y="239.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (10 samples, 0.02%)</title><rect x="508.7" y="213" width="0.3" height="15.0" fill="rgb(227,179,37)" rx="2" ry="2" />
<text  x="511.70" y="223.5" ></text>
</g>
<g >
<title>utils::config_file::named_value&lt;unsigned long&gt;::the_value (7 samples, 0.01%)</title><rect x="1137.0" y="405" width="0.2" height="15.0" fill="rgb(246,167,46)" rx="2" ry="2" />
<text  x="1140.01" y="415.5" ></text>
</g>
<g >
<title>__tls_init (15 samples, 0.03%)</title><rect x="138.1" y="245" width="0.4" height="15.0" fill="rgb(219,69,43)" rx="2" ry="2" />
<text  x="141.09" y="255.5" ></text>
</g>
<g >
<title>operator new (50 samples, 0.10%)</title><rect x="438.0" y="245" width="1.3" height="15.0" fill="rgb(249,198,17)" rx="2" ry="2" />
<text  x="441.03" y="255.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (63 samples, 0.13%)</title><rect x="770.5" y="309" width="1.6" height="15.0" fill="rgb(244,157,44)" rx="2" ry="2" />
<text  x="773.53" y="319.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;bool  (57 samples, 0.12%)</title><rect x="1176.2" y="517" width="1.4" height="15.0" fill="rgb(252,226,5)" rx="2" ry="2" />
<text  x="1179.18" y="527.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (10 samples, 0.02%)</title><rect x="520.2" y="341" width="0.3" height="15.0" fill="rgb(250,74,18)" rx="2" ry="2" />
<text  x="523.24" y="351.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;std::function&lt;flat_mutation_reader  (35 samples, 0.07%)</title><rect x="617.5" y="405" width="0.8" height="15.0" fill="rgb(223,166,0)" rx="2" ry="2" />
<text  x="620.46" y="415.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::with_permit (608 samples, 1.28%)</title><rect x="1021.4" y="245" width="15.0" height="15.0" fill="rgb(248,65,14)" rx="2" ry="2" />
<text  x="1024.37" y="255.5" ></text>
</g>
<g >
<title>operator delete (83 samples, 0.17%)</title><rect x="88.3" y="437" width="2.0" height="15.0" fill="rgb(226,32,44)" rx="2" ry="2" />
<text  x="91.27" y="447.5" ></text>
</g>
<g >
<title>query::querier_base::close (1,295 samples, 2.72%)</title><rect x="546.6" y="437" width="32.1" height="15.0" fill="rgb(231,196,34)" rx="2" ry="2" />
<text  x="549.64" y="447.5" >qu..</text>
</g>
<g >
<title>seastar::memory::allocate (17 samples, 0.04%)</title><rect x="515.7" y="261" width="0.4" height="15.0" fill="rgb(234,69,53)" rx="2" ry="2" />
<text  x="518.71" y="271.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureIN5utils15timestamped_valINS_11checked_ptrINS_8weak_ptrIN4cql310statements18prepared_statementEEENS_25default_null_deref_actionEEENS5_40authorized_prepared_statements_cache_keyENS5_41authorized_prepared_statements_cache_sizeESt4hashISB_ESt8equal_toISB_ENS5_36authorized_prepared_statements_cache50authorized_prepared_statements_cache_stats_updaterEE9value_ptrEE9then_implIZNSL_14discard_resultEvEUlDpOT_E_NS0_IvEEEET0_OT_ (8 samples, 0.02%)</title><rect x="727.4" y="389" width="0.2" height="15.0" fill="rgb(254,206,54)" rx="2" ry="2" />
<text  x="730.42" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::stats (40 samples, 0.08%)</title><rect x="138.5" y="245" width="1.0" height="15.0" fill="rgb(247,173,35)" rx="2" ry="2" />
<text  x="141.51" y="255.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (5,866 samples, 12.31%)</title><rect x="114.3" y="325" width="145.2" height="15.0" fill="rgb(233,144,17)" rx="2" ry="2" />
<text  x="117.27" y="335.5" >mutation_reader_me..</text>
</g>
<g >
<title>seastar::gate::leave (7 samples, 0.01%)</title><rect x="601.9" y="437" width="0.2" height="15.0" fill="rgb(254,82,35)" rx="2" ry="2" />
<text  x="604.93" y="447.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt;::~_Variant_storage (9 samples, 0.02%)</title><rect x="847.9" y="469" width="0.2" height="15.0" fill="rgb(240,131,3)" rx="2" ry="2" />
<text  x="850.92" y="479.5" ></text>
</g>
<g >
<title>seastar::reactor::add_timer (22 samples, 0.05%)</title><rect x="990.3" y="277" width="0.6" height="15.0" fill="rgb(208,118,11)" rx="2" ry="2" />
<text  x="993.32" y="287.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::digest_read_result&gt;::clear (5 samples, 0.01%)</title><rect x="683.3" y="485" width="0.1" height="15.0" fill="rgb(231,171,19)" rx="2" ry="2" />
<text  x="686.32" y="495.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;void&gt;::set_urgent_state (32 samples, 0.07%)</title><rect x="854.3" y="501" width="0.8" height="15.0" fill="rgb(231,21,26)" rx="2" ry="2" />
<text  x="857.30" y="511.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_Optional_payload_base (18 samples, 0.04%)</title><rect x="1072.0" y="293" width="0.5" height="15.0" fill="rgb(214,10,42)" rx="2" ry="2" />
<text  x="1075.03" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::vector (81 samples, 0.17%)</title><rect x="901.9" y="357" width="2.1" height="15.0" fill="rgb(217,103,36)" rx="2" ry="2" />
<text  x="904.95" y="367.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (5 samples, 0.01%)</title><rect x="116.6" y="293" width="0.1" height="15.0" fill="rgb(250,88,50)" rx="2" ry="2" />
<text  x="119.60" y="303.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;std::tuple&lt;std::optional&lt;clustering_key_prefix&gt; &gt; &gt;::clear (8 samples, 0.02%)</title><rect x="601.6" y="437" width="0.2" height="15.0" fill="rgb(245,173,14)" rx="2" ry="2" />
<text  x="604.61" y="447.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::get0 (28 samples, 0.06%)</title><rect x="107.7" y="373" width="0.7" height="15.0" fill="rgb(251,26,34)" rx="2" ry="2" />
<text  x="110.69" y="383.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::push_mutation_fragment&lt;mutation_fragment&gt; (401 samples, 0.84%)</title><rect x="272.4" y="325" width="10.0" height="15.0" fill="rgb(244,114,48)" rx="2" ry="2" />
<text  x="275.43" y="335.5" ></text>
</g>
<g >
<title>row_cache::do_make_reader (381 samples, 0.80%)</title><rect x="522.0" y="325" width="9.5" height="15.0" fill="rgb(229,72,20)" rx="2" ry="2" />
<text  x="525.03" y="335.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::iterator::operator* (6 samples, 0.01%)</title><rect x="1061.8" y="309" width="0.1" height="15.0" fill="rgb(227,57,44)" rx="2" ry="2" />
<text  x="1064.78" y="319.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::query_state&gt;::~shared_ptr (12 samples, 0.03%)</title><rect x="827.7" y="437" width="0.3" height="15.0" fill="rgb(235,124,51)" rx="2" ry="2" />
<text  x="830.73" y="447.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (9 samples, 0.02%)</title><rect x="98.6" y="421" width="0.2" height="15.0" fill="rgb(243,31,4)" rx="2" ry="2" />
<text  x="101.60" y="431.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (5 samples, 0.01%)</title><rect x="267.2" y="325" width="0.1" height="15.0" fill="rgb(234,79,23)" rx="2" ry="2" />
<text  x="270.18" y="335.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::got_response (84 samples, 0.18%)</title><rect x="698.3" y="437" width="2.1" height="15.0" fill="rgb(245,22,54)" rx="2" ry="2" />
<text  x="701.33" y="447.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (8 samples, 0.02%)</title><rect x="607.8" y="437" width="0.2" height="15.0" fill="rgb(237,126,33)" rx="2" ry="2" />
<text  x="610.85" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (14 samples, 0.03%)</title><rect x="636.4" y="485" width="0.4" height="15.0" fill="rgb(227,67,25)" rx="2" ry="2" />
<text  x="639.45" y="495.5" ></text>
</g>
<g >
<title>operator new (53 samples, 0.11%)</title><rect x="879.4" y="309" width="1.3" height="15.0" fill="rgb(241,216,10)" rx="2" ry="2" />
<text  x="882.39" y="319.5" ></text>
</g>
<g >
<title>__tls_init (11 samples, 0.02%)</title><rect x="487.5" y="309" width="0.3" height="15.0" fill="rgb(248,175,28)" rx="2" ry="2" />
<text  x="490.51" y="319.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (14 samples, 0.03%)</title><rect x="792.1" y="85" width="0.3" height="15.0" fill="rgb(210,201,14)" rx="2" ry="2" />
<text  x="795.08" y="95.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (6 samples, 0.01%)</title><rect x="794.1" y="229" width="0.2" height="15.0" fill="rgb(224,63,44)" rx="2" ry="2" />
<text  x="797.13" y="239.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (20 samples, 0.04%)</title><rect x="541.8" y="341" width="0.5" height="15.0" fill="rgb(250,182,27)" rx="2" ry="2" />
<text  x="544.78" y="351.5" ></text>
</g>
<g >
<title>table::query (31 samples, 0.07%)</title><rect x="1175.2" y="501" width="0.8" height="15.0" fill="rgb(216,217,45)" rx="2" ry="2" />
<text  x="1178.19" y="511.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reclaiming_disabled&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (5 samples, 0.01%)</title><rect x="855.2" y="341" width="0.2" height="15.0" fill="rgb(229,33,21)" rx="2" ry="2" />
<text  x="858.24" y="351.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;reader_concurrency_semaphore::entry&gt;::_M_reset (7 samples, 0.01%)</title><rect x="68.6" y="405" width="0.2" height="15.0" fill="rgb(229,11,13)" rx="2" ry="2" />
<text  x="71.61" y="415.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::set_urgent_state (6 samples, 0.01%)</title><rect x="854.1" y="501" width="0.1" height="15.0" fill="rgb(212,163,54)" rx="2" ry="2" />
<text  x="857.06" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_need_rehash (40 samples, 0.08%)</title><rect x="1161.3" y="453" width="1.0" height="15.0" fill="rgb(215,152,8)" rx="2" ry="2" />
<text  x="1164.30" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%)</title><rect x="895.2" y="293" width="0.2" height="15.0" fill="rgb(241,141,51)" rx="2" ry="2" />
<text  x="898.24" y="303.5" ></text>
</g>
<g >
<title>operator delete (72 samples, 0.15%)</title><rect x="556.3" y="293" width="1.8" height="15.0" fill="rgb(226,57,47)" rx="2" ry="2" />
<text  x="559.30" y="303.5" ></text>
</g>
<g >
<title>std::apply&lt;service::client_state::has_column_family_access (8 samples, 0.02%)</title><rect x="820.0" y="405" width="0.2" height="15.0" fill="rgb(217,42,27)" rx="2" ry="2" />
<text  x="823.03" y="415.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (10 samples, 0.02%)</title><rect x="1174.8" y="501" width="0.2" height="15.0" fill="rgb(244,47,26)" rx="2" ry="2" />
<text  x="1177.80" y="511.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql_transport::messages::result_message::rows&gt;::shared_ptr_count_for&lt;cql3::result&gt; (44 samples, 0.09%)</title><rect x="649.0" y="453" width="1.1" height="15.0" fill="rgb(234,172,46)" rx="2" ry="2" />
<text  x="652.00" y="463.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_28has_slice_or_needs_filteringERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES28_S2B_ (13 samples, 0.03%)</title><rect x="642.9" y="437" width="0.4" height="15.0" fill="rgb(223,79,46)" rx="2" ry="2" />
<text  x="645.94" y="447.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;schema_registry_entry&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;schema_registry_entry&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (5 samples, 0.01%)</title><rect x="973.8" y="341" width="0.1" height="15.0" fill="rgb(241,20,14)" rx="2" ry="2" />
<text  x="976.78" y="351.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;seastar::future&lt;void&gt; &gt;  (1,290 samples, 2.71%)</title><rect x="546.8" y="421" width="31.9" height="15.0" fill="rgb(220,83,41)" rx="2" ry="2" />
<text  x="549.76" y="431.5" >st..</text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (7 samples, 0.01%)</title><rect x="690.8" y="453" width="0.2" height="15.0" fill="rgb(214,170,9)" rx="2" ry="2" />
<text  x="693.80" y="463.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::storage_proxy&gt;::~shared_ptr (17 samples, 0.04%)</title><rect x="1064.8" y="341" width="0.4" height="15.0" fill="rgb(218,196,47)" rx="2" ry="2" />
<text  x="1067.78" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (44 samples, 0.09%)</title><rect x="711.7" y="405" width="1.0" height="15.0" fill="rgb(211,45,24)" rx="2" ry="2" />
<text  x="714.65" y="415.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::has_available_units (6 samples, 0.01%)</title><rect x="274.9" y="277" width="0.2" height="15.0" fill="rgb(238,131,2)" rx="2" ry="2" />
<text  x="277.90" y="287.5" ></text>
</g>
<g >
<title>std::function&lt;seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (8 samples, 0.02%)</title><rect x="782.9" y="213" width="0.2" height="15.0" fill="rgb(220,10,52)" rx="2" ry="2" />
<text  x="785.89" y="223.5" ></text>
</g>
<g >
<title>absl::hash_internal::HashState::combine_contiguous (14 samples, 0.03%)</title><rect x="832.1" y="341" width="0.4" height="15.0" fill="rgb(236,42,6)" rx="2" ry="2" />
<text  x="835.12" y="351.5" ></text>
</g>
<g >
<title>seastar::chunked_fifo&lt;seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::entry, 128ul&gt;::emplace_back&lt;reader_concurrency_semaphore::entry, seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;&amp;, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;&amp;&gt; (188 samples, 0.39%)</title><rect x="1025.2" y="181" width="4.7" height="15.0" fill="rgb(228,71,26)" rx="2" ry="2" />
<text  x="1028.23" y="191.5" ></text>
</g>
<g >
<title>range_tombstone_list::slice (176 samples, 0.37%)</title><rect x="236.1" y="213" width="4.3" height="15.0" fill="rgb(240,7,21)" rx="2" ry="2" />
<text  x="239.08" y="223.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_partition_key_ranges (7 samples, 0.01%)</title><rect x="856.2" y="373" width="0.2" height="15.0" fill="rgb(254,170,13)" rx="2" ry="2" />
<text  x="859.24" y="383.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (9 samples, 0.02%)</title><rect x="1158.8" y="405" width="0.2" height="15.0" fill="rgb(244,130,5)" rx="2" ry="2" />
<text  x="1161.78" y="415.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (33 samples, 0.07%)</title><rect x="828.1" y="421" width="0.8" height="15.0" fill="rgb(232,22,3)" rx="2" ry="2" />
<text  x="831.08" y="431.5" ></text>
</g>
<g >
<title>query_result_builder::consume_new_partition (367 samples, 0.77%)</title><rect x="307.7" y="197" width="9.1" height="15.0" fill="rgb(253,167,46)" rx="2" ry="2" />
<text  x="310.74" y="207.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;std::_List_iterator&lt;flat_mutation_reader&gt;, mutation_reader_merger::close (705 samples, 1.48%)</title><rect x="548.1" y="357" width="17.5" height="15.0" fill="rgb(218,158,46)" rx="2" ry="2" />
<text  x="551.15" y="367.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::statements::raw::update_statement, cql3::cf_name, std::unique_ptr&lt;cql3::attributes::raw, std::default_delete&lt;cql3::attributes::raw&gt; &gt;, std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;, std::vector&lt;seastar::shared_ptr&lt;cql3::relation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::relation&gt; &gt; &gt;, std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, seastar::lw_shared_ptr&lt;cql3::column_condition::raw&gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, seastar::lw_shared_ptr&lt;cql3::column_condition::raw&gt; &gt; &gt; &gt;, bool&amp;&gt; (5 samples, 0.01%)</title><rect x="19.9" y="357" width="0.1" height="15.0" fill="rgb(244,59,18)" rx="2" ry="2" />
<text  x="22.86" y="367.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_live_sorted_endpoints (884 samples, 1.86%)</title><rect x="1076.0" y="341" width="21.9" height="15.0" fill="rgb(236,119,29)" rx="2" ry="2" />
<text  x="1079.00" y="351.5" >s..</text>
</g>
<g >
<title>position_in_partition_view::position_in_partition_view (9 samples, 0.02%)</title><rect x="224.7" y="213" width="0.2" height="15.0" fill="rgb(210,13,9)" rx="2" ry="2" />
<text  x="227.69" y="223.5" ></text>
</g>
<g >
<title>__tls_init (8 samples, 0.02%)</title><rect x="457.0" y="325" width="0.2" height="15.0" fill="rgb(227,69,23)" rx="2" ry="2" />
<text  x="460.05" y="335.5" ></text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt;&amp;&gt; (28 samples, 0.06%)</title><rect x="838.2" y="357" width="0.7" height="15.0" fill="rgb(248,31,13)" rx="2" ry="2" />
<text  x="841.21" y="367.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (364 samples, 0.76%)</title><rect x="61.7" y="421" width="9.0" height="15.0" fill="rgb(242,73,41)" rx="2" ry="2" />
<text  x="64.73" y="431.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::clear (25 samples, 0.05%)</title><rect x="133.4" y="261" width="0.7" height="15.0" fill="rgb(208,110,11)" rx="2" ry="2" />
<text  x="136.44" y="271.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (8 samples, 0.02%)</title><rect x="419.1" y="405" width="0.2" height="15.0" fill="rgb(234,43,41)" rx="2" ry="2" />
<text  x="422.14" y="415.5" ></text>
</g>
<g >
<title>make_partition_snapshot_flat_reader_from_snp_schema (994 samples, 2.09%)</title><rect x="489.3" y="325" width="24.6" height="15.0" fill="rgb(224,64,8)" rx="2" ry="2" />
<text  x="492.27" y="335.5" >m..</text>
</g>
<g >
<title>range_tombstone_list::~range_tombstone_list (31 samples, 0.07%)</title><rect x="561.3" y="293" width="0.8" height="15.0" fill="rgb(253,26,3)" rx="2" ry="2" />
<text  x="564.35" y="303.5" ></text>
</g>
<g >
<title>dht::tri_compare (110 samples, 0.23%)</title><rect x="474.7" y="261" width="2.7" height="15.0" fill="rgb(214,73,31)" rx="2" ry="2" />
<text  x="477.68" y="271.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;mutation_reader_merger::operator (57 samples, 0.12%)</title><rect x="261.2" y="325" width="1.4" height="15.0" fill="rgb(232,225,45)" rx="2" ry="2" />
<text  x="264.23" y="335.5" ></text>
</g>
<g >
<title>cql3::query_options::prepare (5 samples, 0.01%)</title><rect x="723.7" y="437" width="0.1" height="15.0" fill="rgb(226,19,42)" rx="2" ry="2" />
<text  x="726.71" y="447.5" ></text>
</g>
<g >
<title>std::__optional_hash_call_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, true&gt;::operator (42 samples, 0.09%)</title><rect x="789.5" y="149" width="1.1" height="15.0" fill="rgb(210,31,38)" rx="2" ry="2" />
<text  x="792.53" y="159.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (38 samples, 0.08%)</title><rect x="833.0" y="405" width="0.9" height="15.0" fill="rgb(214,176,51)" rx="2" ry="2" />
<text  x="835.96" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%)</title><rect x="901.1" y="341" width="0.1" height="15.0" fill="rgb(227,111,28)" rx="2" ry="2" />
<text  x="904.05" y="351.5" ></text>
</g>
<g >
<title>utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::touch (5 samples, 0.01%)</title><rect x="731.7" y="309" width="0.2" height="15.0" fill="rgb(223,180,8)" rx="2" ry="2" />
<text  x="734.73" y="319.5" ></text>
</g>
<g >
<title>std::optional&lt;clustering_key_prefix&gt;::operator=&lt;clustering_key_prefix const&amp;&gt; (27 samples, 0.06%)</title><rect x="223.1" y="213" width="0.7" height="15.0" fill="rgb(245,214,47)" rx="2" ry="2" />
<text  x="226.15" y="223.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::pop_mutation_fragment (22 samples, 0.05%)</title><rect x="125.7" y="245" width="0.6" height="15.0" fill="rgb(237,29,27)" rx="2" ry="2" />
<text  x="128.71" y="255.5" ></text>
</g>
<g >
<title>seastar::reactor::del_timer (11 samples, 0.02%)</title><rect x="699.8" y="405" width="0.2" height="15.0" fill="rgb(205,29,42)" rx="2" ry="2" />
<text  x="702.77" y="415.5" ></text>
</g>
<g >
<title>std::function&lt;bool  (13 samples, 0.03%)</title><rect x="544.1" y="389" width="0.3" height="15.0" fill="rgb(242,124,19)" rx="2" ry="2" />
<text  x="547.06" y="399.5" ></text>
</g>
<g >
<title>database::query (1,056 samples, 2.22%)</title><rect x="1011.1" y="261" width="26.1" height="15.0" fill="rgb(232,62,31)" rx="2" ry="2" />
<text  x="1014.07" y="271.5" >d..</text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (32 samples, 0.07%)</title><rect x="719.0" y="341" width="0.7" height="15.0" fill="rgb(226,0,18)" rx="2" ry="2" />
<text  x="721.96" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (27 samples, 0.06%)</title><rect x="150.4" y="181" width="0.7" height="15.0" fill="rgb(217,41,49)" rx="2" ry="2" />
<text  x="153.45" y="191.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::move_it (130 samples, 0.27%)</title><rect x="673.8" y="485" width="3.2" height="15.0" fill="rgb(223,223,23)" rx="2" ry="2" />
<text  x="676.81" y="495.5" ></text>
</g>
<g >
<title>sstring_hash::operator (28 samples, 0.06%)</title><rect x="1061.0" y="293" width="0.7" height="15.0" fill="rgb(221,64,14)" rx="2" ry="2" />
<text  x="1064.04" y="303.5" ></text>
</g>
<g >
<title>query::querier&lt; (18 samples, 0.04%)</title><rect x="57.5" y="453" width="0.5" height="15.0" fill="rgb(234,213,48)" rx="2" ry="2" />
<text  x="60.52" y="463.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (5 samples, 0.01%)</title><rect x="126.1" y="229" width="0.2" height="15.0" fill="rgb(218,86,49)" rx="2" ry="2" />
<text  x="129.13" y="239.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (9 samples, 0.02%)</title><rect x="557.9" y="277" width="0.2" height="15.0" fill="rgb(218,59,38)" rx="2" ry="2" />
<text  x="560.86" y="287.5" ></text>
</g>
<g >
<title>seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;::swap (34 samples, 0.07%)</title><rect x="732.3" y="373" width="0.9" height="15.0" fill="rgb(238,223,50)" rx="2" ry="2" />
<text  x="735.33" y="383.5" ></text>
</g>
<g >
<title>sstring_hash::operator (12 samples, 0.03%)</title><rect x="819.5" y="309" width="0.3" height="15.0" fill="rgb(215,156,50)" rx="2" ry="2" />
<text  x="822.51" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (27 samples, 0.06%)</title><rect x="960.2" y="341" width="0.7" height="15.0" fill="rgb(254,135,0)" rx="2" ry="2" />
<text  x="963.24" y="351.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::value (23 samples, 0.05%)</title><rect x="18.6" y="293" width="0.6" height="15.0" fill="rgb(220,6,35)" rx="2" ry="2" />
<text  x="21.62" y="303.5" ></text>
</g>
<g >
<title>cql3::restrictions::partition_key_restrictions::needs_filtering (151 samples, 0.32%)</title><rect x="943.3" y="405" width="3.8" height="15.0" fill="rgb(223,14,44)" rx="2" ry="2" />
<text  x="946.35" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::stats (36 samples, 0.08%)</title><rect x="499.7" y="245" width="0.9" height="15.0" fill="rgb(207,158,36)" rx="2" ry="2" />
<text  x="502.69" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::~vector (18 samples, 0.04%)</title><rect x="937.9" y="405" width="0.4" height="15.0" fill="rgb(232,52,47)" rx="2" ry="2" />
<text  x="940.88" y="415.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::operator (68 samples, 0.14%)</title><rect x="124.8" y="261" width="1.7" height="15.0" fill="rgb(240,103,5)" rx="2" ry="2" />
<text  x="127.85" y="271.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::lower_bound&lt;mutation_partition, schema const&amp;, nonwrapping_interval&lt;clustering_key_prefix&gt; const&amp;&gt; (117 samples, 0.25%)</title><rect x="231.5" y="213" width="2.9" height="15.0" fill="rgb(221,55,54)" rx="2" ry="2" />
<text  x="234.54" y="223.5" ></text>
</g>
<g >
<title>operator new (20 samples, 0.04%)</title><rect x="647.6" y="453" width="0.5" height="15.0" fill="rgb(223,110,39)" rx="2" ry="2" />
<text  x="650.64" y="463.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::execute (13 samples, 0.03%)</title><rect x="981.4" y="293" width="0.4" height="15.0" fill="rgb(248,86,11)" rx="2" ry="2" />
<text  x="984.43" y="303.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;auth::resource, auth::resource, std::allocator&lt;auth::resource&gt;, std::__detail::_Identity, std::equal_to&lt;auth::resource&gt;, std::hash&lt;auth::resource&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;::find (150 samples, 0.31%)</title><rect x="804.5" y="357" width="3.7" height="15.0" fill="rgb(222,137,53)" rx="2" ry="2" />
<text  x="807.46" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::_M_range_initialize&lt;nonwrapping_interval&lt;dht::ring_position&gt; const*&gt; (113 samples, 0.24%)</title><rect x="939.2" y="389" width="2.8" height="15.0" fill="rgb(222,104,5)" rx="2" ry="2" />
<text  x="942.24" y="399.5" ></text>
</g>
<g >
<title>flat_mutation_reader::close (1,254 samples, 2.63%)</title><rect x="547.0" y="405" width="31.1" height="15.0" fill="rgb(216,212,54)" rx="2" ry="2" />
<text  x="550.03" y="415.5" >fl..</text>
</g>
<g >
<title>cql3::raw_value::make_value (6 samples, 0.01%)</title><rect x="893.4" y="293" width="0.1" height="15.0" fill="rgb(232,206,23)" rx="2" ry="2" />
<text  x="896.38" y="303.5" ></text>
</g>
<g >
<title>seastar::do_until&lt;flush_reader::fill_buffer (6 samples, 0.01%)</title><rect x="21.9" y="469" width="0.2" height="15.0" fill="rgb(237,205,31)" rx="2" ry="2" />
<text  x="24.94" y="479.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::drop_unneeded_tombstones (20 samples, 0.04%)</title><rect x="367.2" y="197" width="0.5" height="15.0" fill="rgb(231,109,14)" rx="2" ry="2" />
<text  x="370.16" y="207.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_construct&lt;interval_bound&lt;dht::ring_position&gt; const&amp;&gt; (32 samples, 0.07%)</title><rect x="607.1" y="437" width="0.7" height="15.0" fill="rgb(236,18,30)" rx="2" ry="2" />
<text  x="610.06" y="447.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::__do_dyncast (80 samples, 0.17%)</title><rect x="10.3" y="581" width="2.0" height="15.0" fill="rgb(219,57,45)" rx="2" ry="2" />
<text  x="13.35" y="591.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (10 samples, 0.02%)</title><rect x="597.5" y="405" width="0.3" height="15.0" fill="rgb(232,61,28)" rx="2" ry="2" />
<text  x="600.52" y="415.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::get_at (18 samples, 0.04%)</title><rect x="325.0" y="181" width="0.4" height="15.0" fill="rgb(249,155,11)" rx="2" ry="2" />
<text  x="327.97" y="191.5" ></text>
</g>
<g >
<title>operator new (45 samples, 0.09%)</title><rect x="745.2" y="405" width="1.1" height="15.0" fill="rgb(233,154,6)" rx="2" ry="2" />
<text  x="748.18" y="415.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consumer_adapter&lt;sstables::sstable_writer&gt;::consume (5 samples, 0.01%)</title><rect x="22.1" y="469" width="0.1" height="15.0" fill="rgb(240,14,42)" rx="2" ry="2" />
<text  x="25.08" y="479.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;tracking_allocator&lt;mutation_fragment&gt; &gt;::_S_destroy&lt;tracking_allocator&lt;mutation_fragment&gt;, mutation_fragment&gt; (5 samples, 0.01%)</title><rect x="116.5" y="293" width="0.1" height="15.0" fill="rgb(236,141,48)" rx="2" ry="2" />
<text  x="119.48" y="303.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (28 samples, 0.06%)</title><rect x="294.5" y="245" width="0.7" height="15.0" fill="rgb(248,164,48)" rx="2" ry="2" />
<text  x="297.51" y="255.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (6 samples, 0.01%)</title><rect x="450.3" y="277" width="0.1" height="15.0" fill="rgb(235,225,54)" rx="2" ry="2" />
<text  x="453.27" y="287.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::update_and_check (11 samples, 0.02%)</title><rect x="328.6" y="181" width="0.2" height="15.0" fill="rgb(223,11,20)" rx="2" ry="2" />
<text  x="331.56" y="191.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::operator= (6 samples, 0.01%)</title><rect x="704.6" y="501" width="0.1" height="15.0" fill="rgb(230,60,39)" rx="2" ry="2" />
<text  x="707.57" y="511.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (15 samples, 0.03%)</title><rect x="633.9" y="485" width="0.4" height="15.0" fill="rgb(221,179,32)" rx="2" ry="2" />
<text  x="636.90" y="495.5" ></text>
</g>
<g >
<title>compound_type&lt; (127 samples, 0.27%)</title><rect x="911.2" y="357" width="3.1" height="15.0" fill="rgb(234,130,49)" rx="2" ry="2" />
<text  x="914.16" y="367.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::clear (19 samples, 0.04%)</title><rect x="961.1" y="373" width="0.5" height="15.0" fill="rgb(207,72,30)" rx="2" ry="2" />
<text  x="964.13" y="383.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (23,061 samples, 48.39%)</title><rect x="49.8" y="485" width="571.0" height="15.0" fill="rgb(238,111,16)" rx="2" ry="2" />
<text  x="52.77" y="495.5" >seastar::noncopyable_function&lt;seastar::future&lt;void&gt; </text>
</g>
<g >
<title>cql3::query_processor::parse_statement (206 samples, 0.43%)</title><rect x="15.4" y="469" width="5.1" height="15.0" fill="rgb(228,81,1)" rx="2" ry="2" />
<text  x="18.42" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (88 samples, 0.18%)</title><rect x="966.9" y="341" width="2.2" height="15.0" fill="rgb(232,90,21)" rx="2" ry="2" />
<text  x="969.87" y="351.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;partition_key, false, false&gt;::_Optional_base (8 samples, 0.02%)</title><rect x="1073.4" y="325" width="0.2" height="15.0" fill="rgb(251,202,20)" rx="2" ry="2" />
<text  x="1076.40" y="335.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (280 samples, 0.59%)</title><rect x="14.9" y="581" width="6.9" height="15.0" fill="rgb(225,215,28)" rx="2" ry="2" />
<text  x="17.88" y="591.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (20 samples, 0.04%)</title><rect x="484.9" y="213" width="0.5" height="15.0" fill="rgb(218,53,0)" rx="2" ry="2" />
<text  x="487.91" y="223.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_construct&lt;interval_bound&lt;dht::ring_position&gt; const&amp;&gt; (26 samples, 0.05%)</title><rect x="1047.2" y="229" width="0.6" height="15.0" fill="rgb(251,50,33)" rx="2" ry="2" />
<text  x="1050.20" y="239.5" ></text>
</g>
<g >
<title>make_combined_reader (951 samples, 2.00%)</title><rect x="430.0" y="341" width="23.6" height="15.0" fill="rgb(223,29,27)" rx="2" ry="2" />
<text  x="433.03" y="351.5" >m..</text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;nonwrapping_interval&lt;dht::ring_position&gt; const*, nonwrapping_interval&lt;dht::ring_position&gt;*&gt; (5 samples, 0.01%)</title><rect x="939.1" y="389" width="0.1" height="15.0" fill="rgb(226,27,16)" rx="2" ry="2" />
<text  x="942.11" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (7 samples, 0.01%)</title><rect x="90.4" y="421" width="0.2" height="15.0" fill="rgb(215,7,18)" rx="2" ry="2" />
<text  x="93.43" y="431.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (50 samples, 0.10%)</title><rect x="887.6" y="261" width="1.2" height="15.0" fill="rgb(234,196,44)" rx="2" ry="2" />
<text  x="890.58" y="271.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (11 samples, 0.02%)</title><rect x="1100.0" y="357" width="0.3" height="15.0" fill="rgb(252,22,53)" rx="2" ry="2" />
<text  x="1103.04" y="367.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::read_next (2,996 samples, 6.29%)</title><rect x="152.3" y="245" width="74.2" height="15.0" fill="rgb(254,45,19)" rx="2" ry="2" />
<text  x="155.31" y="255.5" >partitio..</text>
</g>
<g >
<title>std::__optional_hash_call_base&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, true&gt;::operator (19 samples, 0.04%)</title><rect x="806.9" y="293" width="0.5" height="15.0" fill="rgb(251,83,31)" rx="2" ry="2" />
<text  x="809.93" y="303.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt; &gt;::invoke&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (1,279 samples, 2.68%)</title><rect x="1009.6" y="277" width="31.7" height="15.0" fill="rgb(207,105,8)" rx="2" ry="2" />
<text  x="1012.63" y="287.5" >se..</text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::cql_statement&gt;::~shared_ptr (10 samples, 0.02%)</title><rect x="827.5" y="437" width="0.2" height="15.0" fill="rgb(210,126,52)" rx="2" ry="2" />
<text  x="830.49" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (26 samples, 0.05%)</title><rect x="593.9" y="357" width="0.6" height="15.0" fill="rgb(224,167,18)" rx="2" ry="2" />
<text  x="596.88" y="367.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;nonwrapping_interval&lt;dht::ring_position&gt; const, std::default_delete&lt;nonwrapping_interval&lt;dht::ring_position&gt; const&gt; &gt;::~unique_ptr (42 samples, 0.09%)</title><rect x="581.8" y="421" width="1.0" height="15.0" fill="rgb(221,226,7)" rx="2" ry="2" />
<text  x="584.78" y="431.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (7 samples, 0.01%)</title><rect x="1137.4" y="421" width="0.2" height="15.0" fill="rgb(206,171,51)" rx="2" ry="2" />
<text  x="1140.41" y="431.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::clear (8 samples, 0.02%)</title><rect x="860.7" y="469" width="0.2" height="15.0" fill="rgb(220,195,11)" rx="2" ry="2" />
<text  x="863.67" y="479.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;seastar::semaphore_units&lt;seastar::semaphore_default_exception_factory, std::chrono::_V2::steady_clock&gt; &gt;::dispose (8 samples, 0.02%)</title><rect x="664.8" y="469" width="0.2" height="15.0" fill="rgb(250,131,5)" rx="2" ry="2" />
<text  x="667.80" y="479.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::fetch (15 samples, 0.03%)</title><rect x="855.2" y="469" width="0.3" height="15.0" fill="rgb(223,166,31)" rx="2" ry="2" />
<text  x="858.17" y="479.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::emplace_mutation_fragment (27 samples, 0.06%)</title><rect x="141.3" y="245" width="0.7" height="15.0" fill="rgb(229,229,20)" rx="2" ry="2" />
<text  x="144.31" y="255.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (5 samples, 0.01%)</title><rect x="67.7" y="373" width="0.1" height="15.0" fill="rgb(218,90,50)" rx="2" ry="2" />
<text  x="70.67" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (13 samples, 0.03%)</title><rect x="825.1" y="357" width="0.3" height="15.0" fill="rgb(239,159,17)" rx="2" ry="2" />
<text  x="828.11" y="367.5" ></text>
</g>
<g >
<title>bound_view::from_range_start&lt;nonwrapping_interval&gt; (51 samples, 0.11%)</title><rect x="239.2" y="197" width="1.2" height="15.0" fill="rgb(231,211,14)" rx="2" ry="2" />
<text  x="242.17" y="207.5" ></text>
</g>
<g >
<title>seastar::internal::awaiter&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::awaiter (12 samples, 0.03%)</title><rect x="975.5" y="357" width="0.3" height="15.0" fill="rgb(222,57,19)" rx="2" ry="2" />
<text  x="978.49" y="367.5" ></text>
</g>
<g >
<title>std::_Optional_base_impl&lt;query::querier&lt; (53 samples, 0.11%)</title><rect x="615.3" y="421" width="1.3" height="15.0" fill="rgb(207,80,44)" rx="2" ry="2" />
<text  x="618.33" y="431.5" ></text>
</g>
<g >
<title>basic_atomic_cell_view&lt; (14 samples, 0.03%)</title><rect x="370.8" y="181" width="0.4" height="15.0" fill="rgb(229,70,24)" rx="2" ry="2" />
<text  x="373.83" y="191.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (11 samples, 0.02%)</title><rect x="1030.7" y="197" width="0.2" height="15.0" fill="rgb(216,94,2)" rx="2" ry="2" />
<text  x="1033.66" y="207.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;locator::snitch_ptr&gt;::local (27 samples, 0.06%)</title><rect x="1076.8" y="325" width="0.7" height="15.0" fill="rgb(216,209,24)" rx="2" ry="2" />
<text  x="1079.84" y="335.5" ></text>
</g>
<g >
<title>nonwrapping_interval&lt;clustering_key_prefix&gt;::make_open_ended_both_sides (193 samples, 0.41%)</title><rect x="1113.2" y="389" width="4.8" height="15.0" fill="rgb(205,132,22)" rx="2" ry="2" />
<text  x="1116.19" y="399.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (12 samples, 0.03%)</title><rect x="619.9" y="437" width="0.3" height="15.0" fill="rgb(240,46,49)" rx="2" ry="2" />
<text  x="622.86" y="447.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::take (9 samples, 0.02%)</title><rect x="1150.3" y="469" width="0.2" height="15.0" fill="rgb(219,228,24)" rx="2" ry="2" />
<text  x="1153.31" y="479.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_M_move_assign (6 samples, 0.01%)</title><rect x="1114.0" y="357" width="0.1" height="15.0" fill="rgb(252,88,20)" rx="2" ry="2" />
<text  x="1116.98" y="367.5" ></text>
</g>
<g >
<title>locator::token_metadata_impl::first_token_index (284 samples, 0.60%)</title><rect x="1079.4" y="261" width="7.0" height="15.0" fill="rgb(209,101,53)" rx="2" ry="2" />
<text  x="1082.39" y="271.5" ></text>
</g>
<g >
<title>utils::array_search_gt (19 samples, 0.04%)</title><rect x="470.5" y="277" width="0.5" height="15.0" fill="rgb(211,175,44)" rx="2" ry="2" />
<text  x="473.55" y="287.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::process_results (453 samples, 0.95%)</title><rect x="639.0" y="485" width="11.2" height="15.0" fill="rgb(205,110,22)" rx="2" ry="2" />
<text  x="642.00" y="495.5" ></text>
</g>
<g >
<title>partition_version_ref::operator (12 samples, 0.03%)</title><rect x="510.8" y="229" width="0.3" height="15.0" fill="rgb(252,20,11)" rx="2" ry="2" />
<text  x="513.76" y="239.5" ></text>
</g>
<g >
<title>absl::hash_internal::HashState::combine_contiguous (18 samples, 0.04%)</title><rect x="1061.3" y="261" width="0.4" height="15.0" fill="rgb(240,36,2)" rx="2" ry="2" />
<text  x="1064.29" y="271.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_data_request (2,177 samples, 4.57%)</title><rect x="997.5" y="309" width="53.9" height="15.0" fill="rgb(211,127,52)" rx="2" ry="2" />
<text  x="1000.50" y="319.5" >servi..</text>
</g>
<g >
<title>seastar::internal::do_with_state&lt;std::tuple&lt;std::optional&lt;auth::resource&gt; &gt;, seastar::future&lt;bool&gt; &gt;::do_with_state&lt;std::optional&lt;auth::resource&gt; &gt; (42 samples, 0.09%)</title><rect x="768.9" y="309" width="1.0" height="15.0" fill="rgb(217,60,33)" rx="2" ry="2" />
<text  x="771.88" y="319.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;seastar::future&lt;void&gt; &gt;  (15 samples, 0.03%)</title><rect x="1175.3" y="469" width="0.4" height="15.0" fill="rgb(250,188,12)" rx="2" ry="2" />
<text  x="1178.32" y="479.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;std::tuple&lt;std::optional&lt;clustering_key_prefix&gt; &gt; &gt;, query::consume_page&lt; (27 samples, 0.06%)</title><rect x="680.6" y="501" width="0.6" height="15.0" fill="rgb(210,213,49)" rx="2" ry="2" />
<text  x="683.55" y="511.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::allocate (7 samples, 0.01%)</title><rect x="280.5" y="309" width="0.2" height="15.0" fill="rgb(220,23,51)" rx="2" ry="2" />
<text  x="283.52" y="319.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_restrictions::empty (8 samples, 0.02%)</title><rect x="947.3" y="405" width="0.2" height="15.0" fill="rgb(229,105,9)" rx="2" ry="2" />
<text  x="950.33" y="415.5" ></text>
</g>
<g >
<title>std::forward_as_tuple&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, auth::permissions_cache::get (5 samples, 0.01%)</title><rect x="798.9" y="277" width="0.1" height="15.0" fill="rgb(213,84,6)" rx="2" ry="2" />
<text  x="801.86" y="287.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (6 samples, 0.01%)</title><rect x="777.0" y="229" width="0.2" height="15.0" fill="rgb(221,224,51)" rx="2" ry="2" />
<text  x="780.05" y="239.5" ></text>
</g>
<g >
<title>__tls_init (9 samples, 0.02%)</title><rect x="499.4" y="245" width="0.2" height="15.0" fill="rgb(220,100,3)" rx="2" ry="2" />
<text  x="502.39" y="255.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reclaiming_disabled&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_range_tombstone (213 samples, 0.45%)</title><rect x="216.7" y="197" width="5.3" height="15.0" fill="rgb(251,59,48)" rx="2" ry="2" />
<text  x="219.74" y="207.5" ></text>
</g>
<g >
<title>db::block_for (9 samples, 0.02%)</title><rect x="1062.9" y="341" width="0.2" height="15.0" fill="rgb(229,8,22)" rx="2" ry="2" />
<text  x="1065.92" y="351.5" ></text>
</g>
<g >
<title>bplus::tree&lt;long, intrusive_array&lt;memtable_entry&gt;, dht::raw_token_less_comparator, 16ul,  (440 samples, 0.92%)</title><rect x="462.1" y="293" width="10.9" height="15.0" fill="rgb(233,224,3)" rx="2" ry="2" />
<text  x="465.13" y="303.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (6 samples, 0.01%)</title><rect x="1056.2" y="325" width="0.2" height="15.0" fill="rgb(240,96,1)" rx="2" ry="2" />
<text  x="1059.24" y="335.5" ></text>
</g>
<g >
<title>seastar::internal::uninitialized_wrapper_base&lt;service::storage_proxy_coordinator_query_result, false&gt;::uninitialized_set&lt;service::storage_proxy_coordinator_query_result&gt; (34 samples, 0.07%)</title><rect x="677.8" y="453" width="0.9" height="15.0" fill="rgb(254,219,2)" rx="2" ry="2" />
<text  x="680.83" y="463.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const*, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;*&gt; (35 samples, 0.07%)</title><rect x="794.6" y="229" width="0.9" height="15.0" fill="rgb(208,97,28)" rx="2" ry="2" />
<text  x="797.63" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::~vector (8 samples, 0.02%)</title><rect x="904.0" y="357" width="0.1" height="15.0" fill="rgb(211,38,1)" rx="2" ry="2" />
<text  x="906.95" y="367.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;seastar::future&lt;void&gt; &gt;  (34 samples, 0.07%)</title><rect x="613.8" y="437" width="0.9" height="15.0" fill="rgb(221,16,42)" rx="2" ry="2" />
<text  x="616.82" y="447.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (18 samples, 0.04%)</title><rect x="255.0" y="277" width="0.5" height="15.0" fill="rgb(230,73,38)" rx="2" ry="2" />
<text  x="258.04" y="287.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::operator= (14 samples, 0.03%)</title><rect x="860.3" y="453" width="0.4" height="15.0" fill="rgb(228,18,30)" rx="2" ry="2" />
<text  x="863.32" y="463.5" ></text>
</g>
<g >
<title>query::result::builder::add_partition (104 samples, 0.22%)</title><rect x="311.1" y="181" width="2.6" height="15.0" fill="rgb(238,44,45)" rx="2" ry="2" />
<text  x="314.08" y="191.5" ></text>
</g>
<g >
<title>schema::position (6 samples, 0.01%)</title><rect x="935.2" y="405" width="0.1" height="15.0" fill="rgb(247,91,39)" rx="2" ry="2" />
<text  x="938.20" y="415.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (5 samples, 0.01%)</title><rect x="606.0" y="437" width="0.2" height="15.0" fill="rgb(249,64,40)" rx="2" ry="2" />
<text  x="609.04" y="447.5" ></text>
</g>
<g >
<title>ser::qr_partition__rows&lt;bytes_ostream&gt;::add (8 samples, 0.02%)</title><rect x="363.1" y="197" width="0.2" height="15.0" fill="rgb(217,204,41)" rx="2" ry="2" />
<text  x="366.13" y="207.5" ></text>
</g>
<g >
<title>dht::tri_compare (113 samples, 0.24%)</title><rect x="1083.6" y="229" width="2.8" height="15.0" fill="rgb(244,134,29)" rx="2" ry="2" />
<text  x="1086.62" y="239.5" ></text>
</g>
<g >
<title>std::__find_if&lt;gms::inet_address*, __gnu_cxx::__ops::_Iter_pred&lt;std::unary_negate&lt;std::binder1st&lt;std::_Mem_fn&lt;bool  (40 samples, 0.08%)</title><rect x="1094.1" y="293" width="1.0" height="15.0" fill="rgb(249,192,15)" rx="2" ry="2" />
<text  x="1097.07" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::disable_abort_on_alloc_failure_temporarily (5 samples, 0.01%)</title><rect x="518.8" y="325" width="0.2" height="15.0" fill="rgb(217,60,6)" rx="2" ry="2" />
<text  x="521.83" y="335.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::find&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (112 samples, 0.24%)</title><rect x="813.9" y="325" width="2.8" height="15.0" fill="rgb(219,167,2)" rx="2" ry="2" />
<text  x="816.94" y="335.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::query_options, std::default_delete&lt;cql3::query_options&gt; &gt;::~unique_ptr (186 samples, 0.39%)</title><rect x="665.0" y="485" width="4.7" height="15.0" fill="rgb(210,75,22)" rx="2" ry="2" />
<text  x="668.05" y="495.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (13 samples, 0.03%)</title><rect x="815.0" y="277" width="0.3" height="15.0" fill="rgb(212,191,40)" rx="2" ry="2" />
<text  x="817.96" y="287.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_read_executor (1,924 samples, 4.04%)</title><rect x="1052.2" y="357" width="47.6" height="15.0" fill="rgb(232,176,33)" rx="2" ry="2" />
<text  x="1055.15" y="367.5" >serv..</text>
</g>
<g >
<title>utils::small_vector&lt;query::result_digest, 3ul&gt;::emplace_back&lt;query::result_digest const&gt; (19 samples, 0.04%)</title><rect x="700.5" y="437" width="0.4" height="15.0" fill="rgb(219,219,17)" rx="2" ry="2" />
<text  x="703.46" y="447.5" ></text>
</g>
<g >
<title>service::storage_proxy::send_to_live_endpoints (8 samples, 0.02%)</title><rect x="1142.4" y="261" width="0.2" height="15.0" fill="rgb(245,224,49)" rx="2" ry="2" />
<text  x="1145.38" y="271.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;partition_key, false, false&gt;::_Optional_base (5 samples, 0.01%)</title><rect x="1072.4" y="277" width="0.1" height="15.0" fill="rgb(206,206,27)" rx="2" ry="2" />
<text  x="1075.36" y="287.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reserve&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::partition_snapshot_flat_reader&lt;memtable&amp;&gt; (552 samples, 1.16%)</title><rect x="497.8" y="277" width="13.6" height="15.0" fill="rgb(233,13,36)" rx="2" ry="2" />
<text  x="500.76" y="287.5" ></text>
</g>
<g >
<title>service::client_state::get_timestamp (6 samples, 0.01%)</title><rect x="1134.7" y="421" width="0.2" height="15.0" fill="rgb(240,55,10)" rx="2" ry="2" />
<text  x="1137.73" y="431.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (16 samples, 0.03%)</title><rect x="407.0" y="229" width="0.4" height="15.0" fill="rgb(251,50,14)" rx="2" ry="2" />
<text  x="409.98" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::~vector (5 samples, 0.01%)</title><rect x="436.3" y="245" width="0.1" height="15.0" fill="rgb(236,115,46)" rx="2" ry="2" />
<text  x="439.25" y="255.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (9 samples, 0.02%)</title><rect x="165.2" y="133" width="0.2" height="15.0" fill="rgb(212,104,46)" rx="2" ry="2" />
<text  x="168.21" y="143.5" ></text>
</g>
<g >
<title>utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::touch (5 samples, 0.01%)</title><rect x="732.0" y="325" width="0.1" height="15.0" fill="rgb(253,27,19)" rx="2" ry="2" />
<text  x="734.98" y="335.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (5 samples, 0.01%)</title><rect x="759.4" y="357" width="0.2" height="15.0" fill="rgb(234,215,9)" rx="2" ry="2" />
<text  x="762.44" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (9 samples, 0.02%)</title><rect x="451.1" y="277" width="0.2" height="15.0" fill="rgb(239,49,44)" rx="2" ry="2" />
<text  x="454.06" y="287.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::find&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (7 samples, 0.01%)</title><rect x="816.8" y="341" width="0.1" height="15.0" fill="rgb(217,20,38)" rx="2" ry="2" />
<text  x="819.77" y="351.5" ></text>
</g>
<g >
<title>bytes_view_hasher::update (11 samples, 0.02%)</title><rect x="739.7" y="261" width="0.3" height="15.0" fill="rgb(233,29,31)" rx="2" ry="2" />
<text  x="742.68" y="271.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::clear (9 samples, 0.02%)</title><rect x="259.1" y="309" width="0.2" height="15.0" fill="rgb(237,89,39)" rx="2" ry="2" />
<text  x="262.08" y="319.5" ></text>
</g>
<g >
<title>reader_permit::used_guard::~used_guard (6 samples, 0.01%)</title><rect x="51.7" y="469" width="0.2" height="15.0" fill="rgb(222,98,10)" rx="2" ry="2" />
<text  x="54.72" y="479.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::on_read_resolved (9 samples, 0.02%)</title><rect x="688.7" y="453" width="0.3" height="15.0" fill="rgb(226,121,16)" rx="2" ry="2" />
<text  x="691.75" y="463.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (6 samples, 0.01%)</title><rect x="1139.4" y="405" width="0.1" height="15.0" fill="rgb(237,0,7)" rx="2" ry="2" />
<text  x="1142.36" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (94 samples, 0.20%)</title><rect x="1044.5" y="229" width="2.3" height="15.0" fill="rgb(251,219,49)" rx="2" ry="2" />
<text  x="1047.47" y="239.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_destroy_data (27 samples, 0.06%)</title><rect x="366.1" y="165" width="0.6" height="15.0" fill="rgb(216,91,38)" rx="2" ry="2" />
<text  x="369.05" y="175.5" ></text>
</g>
<g >
<title>service::never_speculating_read_executor::~never_speculating_read_executor (101 samples, 0.21%)</title><rect x="1172.2" y="453" width="2.5" height="15.0" fill="rgb(251,93,29)" rx="2" ry="2" />
<text  x="1175.20" y="463.5" ></text>
</g>
<g >
<title>service::client_state::set_keyspace (152 samples, 0.32%)</title><rect x="836.1" y="421" width="3.7" height="15.0" fill="rgb(253,117,25)" rx="2" ry="2" />
<text  x="839.05" y="431.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::~small_vector (8 samples, 0.02%)</title><rect x="1174.3" y="421" width="0.2" height="15.0" fill="rgb(242,205,11)" rx="2" ry="2" />
<text  x="1177.30" y="431.5" ></text>
</g>
<g >
<title>mutation_fragment::consume&lt;flat_mutation_reader::impl::consumer_adapter&lt;sstables::sstable_writer&gt; &gt; (6 samples, 0.01%)</title><rect x="22.1" y="485" width="0.1" height="15.0" fill="rgb(218,170,49)" rx="2" ry="2" />
<text  x="25.08" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (36 samples, 0.08%)</title><rect x="291.2" y="277" width="0.9" height="15.0" fill="rgb(254,152,47)" rx="2" ry="2" />
<text  x="294.20" y="287.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (5 samples, 0.01%)</title><rect x="769.7" y="261" width="0.2" height="15.0" fill="rgb(238,53,23)" rx="2" ry="2" />
<text  x="772.74" y="271.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;auth::resource&gt;::_M_reset (7 samples, 0.01%)</title><rect x="803.0" y="293" width="0.1" height="15.0" fill="rgb(254,102,41)" rx="2" ry="2" />
<text  x="805.97" y="303.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit_slot&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::memory_usage&lt;row::external_memory_usage (131 samples, 0.27%)</title><rect x="202.3" y="117" width="3.2" height="15.0" fill="rgb(254,211,52)" rx="2" ry="2" />
<text  x="205.30" y="127.5" ></text>
</g>
<g >
<title>partition_key::from_range&lt;std::vector&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, std::allocator&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt; &gt; (58 samples, 0.12%)</title><rect x="539.1" y="373" width="1.4" height="15.0" fill="rgb(206,108,39)" rx="2" ry="2" />
<text  x="542.09" y="383.5" ></text>
</g>
<g >
<title>mutation_querier::query_static_row (31 samples, 0.07%)</title><rect x="327.7" y="165" width="0.8" height="15.0" fill="rgb(211,86,10)" rx="2" ry="2" />
<text  x="330.69" y="175.5" ></text>
</g>
<g >
<title>utils::approx_exponential_histogram&lt;512ul, 33554432ul, 4ul&gt;::add (9 samples, 0.02%)</title><rect x="672.0" y="469" width="0.2" height="15.0" fill="rgb(232,28,17)" rx="2" ry="2" />
<text  x="675.01" y="479.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (5 samples, 0.01%)</title><rect x="1094.8" y="245" width="0.1" height="15.0" fill="rgb(249,36,38)" rx="2" ry="2" />
<text  x="1097.77" y="255.5" ></text>
</g>
<g >
<title>operator new (44 samples, 0.09%)</title><rect x="534.5" y="405" width="1.1" height="15.0" fill="rgb(212,59,35)" rx="2" ry="2" />
<text  x="537.53" y="415.5" ></text>
</g>
<g >
<title>perf_simple_que (47,653 samples, 100.00%)</title><rect x="10.0" y="645" width="1180.0" height="15.0" fill="rgb(210,120,44)" rx="2" ry="2" />
<text  x="13.00" y="655.5" >perf_simple_que</text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::merging_reader (214 samples, 0.45%)</title><rect x="445.5" y="293" width="5.3" height="15.0" fill="rgb(245,96,19)" rx="2" ry="2" />
<text  x="448.46" y="303.5" ></text>
</g>
<g >
<title>bplus::tree&lt;long, intrusive_array&lt;cache_entry&gt;, dht::raw_token_less_comparator, 16ul,  (10 samples, 0.02%)</title><rect x="525.9" y="277" width="0.3" height="15.0" fill="rgb(239,118,26)" rx="2" ry="2" />
<text  x="528.94" y="287.5" ></text>
</g>
<g >
<title>_ZSt5applyIZN7seastar8internal12do_with_implISt4pairIN4auth17role_or_anonymousENS4_8resourceEEZNS4_17permissions_cache3getERKS5_RKS6_E3$_0JEEEDaOT_OT0_DpOT1_EUlDpOT_E_St5tupleIJOS7_EEEDcSF_SH_ (70 samples, 0.15%)</title><rect x="776.3" y="261" width="1.7" height="15.0" fill="rgb(239,117,3)" rx="2" ry="2" />
<text  x="779.30" y="271.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (14 samples, 0.03%)</title><rect x="680.7" y="325" width="0.3" height="15.0" fill="rgb(233,25,46)" rx="2" ry="2" />
<text  x="683.70" y="335.5" ></text>
</g>
<g >
<title>operator new (91 samples, 0.19%)</title><rect x="966.8" y="357" width="2.3" height="15.0" fill="rgb(245,224,1)" rx="2" ry="2" />
<text  x="969.82" y="367.5" ></text>
</g>
<g >
<title>seastar::schedule (6 samples, 0.01%)</title><rect x="1144.8" y="501" width="0.2" height="15.0" fill="rgb(254,125,10)" rx="2" ry="2" />
<text  x="1147.83" y="511.5" ></text>
</g>
<g >
<title>seastar::preempt_io_context::reset_preemption_monitor (7 samples, 0.01%)</title><rect x="1144.1" y="501" width="0.2" height="15.0" fill="rgb(232,44,15)" rx="2" ry="2" />
<text  x="1147.12" y="511.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (5 samples, 0.01%)</title><rect x="758.6" y="341" width="0.1" height="15.0" fill="rgb(209,159,1)" rx="2" ry="2" />
<text  x="761.62" y="351.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::push_mutation_fragment&lt;schema const&amp;, reader_permit&amp;, partition_start&gt; (14 samples, 0.03%)</title><rect x="498.4" y="261" width="0.3" height="15.0" fill="rgb(238,105,3)" rx="2" ry="2" />
<text  x="501.40" y="271.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, flat_mutation_reader::impl::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (6 samples, 0.01%)</title><rect x="411.4" y="325" width="0.1" height="15.0" fill="rgb(247,172,18)" rx="2" ry="2" />
<text  x="414.36" y="335.5" ></text>
</g>
<g >
<title>cql3::raw_value::to_view (15 samples, 0.03%)</title><rect x="841.6" y="389" width="0.3" height="15.0" fill="rgb(209,141,23)" rx="2" ry="2" />
<text  x="844.55" y="399.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (13 samples, 0.03%)</title><rect x="815.3" y="293" width="0.3" height="15.0" fill="rgb(215,208,42)" rx="2" ry="2" />
<text  x="818.30" y="303.5" ></text>
</g>
<g >
<title>operator delete (35 samples, 0.07%)</title><rect x="147.6" y="197" width="0.8" height="15.0" fill="rgb(233,72,25)" rx="2" ry="2" />
<text  x="150.55" y="207.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (6 samples, 0.01%)</title><rect x="702.7" y="405" width="0.2" height="15.0" fill="rgb(248,198,54)" rx="2" ry="2" />
<text  x="705.71" y="415.5" ></text>
</g>
<g >
<title>bound_view::from_range&lt;nonwrapping_interval&gt; (105 samples, 0.22%)</title><rect x="236.4" y="197" width="2.6" height="15.0" fill="rgb(235,88,25)" rx="2" ry="2" />
<text  x="239.42" y="207.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (5 samples, 0.01%)</title><rect x="102.8" y="421" width="0.1" height="15.0" fill="rgb(222,40,0)" rx="2" ry="2" />
<text  x="105.78" y="431.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (3,502 samples, 7.35%)</title><rect x="303.8" y="245" width="86.7" height="15.0" fill="rgb(220,175,53)" rx="2" ry="2" />
<text  x="306.80" y="255.5" >flat_mutat..</text>
</g>
<g >
<title>write_fragmented&lt;managed_bytes_basic_view&lt; (79 samples, 0.17%)</title><rect x="889.4" y="261" width="1.9" height="15.0" fill="rgb(231,82,17)" rx="2" ry="2" />
<text  x="892.37" y="271.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::leaf_node::allocate (89 samples, 0.19%)</title><rect x="192.4" y="117" width="2.2" height="15.0" fill="rgb(249,89,45)" rx="2" ry="2" />
<text  x="195.40" y="127.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (94 samples, 0.20%)</title><rect x="482.0" y="197" width="2.3" height="15.0" fill="rgb(246,123,27)" rx="2" ry="2" />
<text  x="484.99" y="207.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::local (10 samples, 0.02%)</title><rect x="1136.8" y="405" width="0.2" height="15.0" fill="rgb(227,188,9)" rx="2" ry="2" />
<text  x="1139.76" y="415.5" ></text>
</g>
<g >
<title>clustering_row::external_memory_usage (273 samples, 0.57%)</title><rect x="199.3" y="165" width="6.7" height="15.0" fill="rgb(233,117,1)" rx="2" ry="2" />
<text  x="202.25" y="175.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (11 samples, 0.02%)</title><rect x="996.6" y="245" width="0.3" height="15.0" fill="rgb(231,58,30)" rx="2" ry="2" />
<text  x="999.59" y="255.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_erase_at_end (20 samples, 0.04%)</title><rect x="364.4" y="197" width="0.5" height="15.0" fill="rgb(209,222,41)" rx="2" ry="2" />
<text  x="367.39" y="207.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (39 samples, 0.08%)</title><rect x="418.0" y="421" width="0.9" height="15.0" fill="rgb(216,158,48)" rx="2" ry="2" />
<text  x="420.98" y="431.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (32 samples, 0.07%)</title><rect x="651.5" y="485" width="0.7" height="15.0" fill="rgb(238,36,20)" rx="2" ry="2" />
<text  x="654.46" y="495.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (22 samples, 0.05%)</title><rect x="566.3" y="341" width="0.6" height="15.0" fill="rgb(238,182,44)" rx="2" ry="2" />
<text  x="569.32" y="351.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (7 samples, 0.01%)</title><rect x="825.8" y="389" width="0.2" height="15.0" fill="rgb(205,193,39)" rx="2" ry="2" />
<text  x="828.83" y="399.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;::lru_entry, boost::intrusive::list_node_traits&lt;void*&gt;,  (15 samples, 0.03%)</title><rect x="723.1" y="389" width="0.4" height="15.0" fill="rgb(231,47,26)" rx="2" ry="2" />
<text  x="726.09" y="399.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (13 samples, 0.03%)</title><rect x="315.4" y="181" width="0.3" height="15.0" fill="rgb(206,39,43)" rx="2" ry="2" />
<text  x="318.36" y="191.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;query::result&gt;::operator= (5 samples, 0.01%)</title><rect x="73.6" y="453" width="0.1" height="15.0" fill="rgb(246,134,40)" rx="2" ry="2" />
<text  x="76.56" y="463.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;schema const&gt;::operator= (15 samples, 0.03%)</title><rect x="1041.5" y="277" width="0.4" height="15.0" fill="rgb(225,102,45)" rx="2" ry="2" />
<text  x="1044.50" y="287.5" ></text>
</g>
<g >
<title>__tls_init (5 samples, 0.01%)</title><rect x="498.8" y="245" width="0.1" height="15.0" fill="rgb(212,129,15)" rx="2" ry="2" />
<text  x="501.82" y="255.5" ></text>
</g>
<g >
<title>seastar::memory::stats (30 samples, 0.06%)</title><rect x="527.8" y="293" width="0.8" height="15.0" fill="rgb(222,54,35)" rx="2" ry="2" />
<text  x="530.82" y="303.5" ></text>
</g>
<g >
<title>write_fragmented&lt;managed_bytes_basic_view&lt; (40 samples, 0.08%)</title><rect x="928.6" y="341" width="1.0" height="15.0" fill="rgb(244,115,27)" rx="2" ry="2" />
<text  x="931.59" y="351.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::emplace_back&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;&amp;&gt; (38 samples, 0.08%)</title><rect x="761.4" y="373" width="1.0" height="15.0" fill="rgb(212,188,26)" rx="2" ry="2" />
<text  x="764.45" y="383.5" ></text>
</g>
<g >
<title>partition_key_view::legacy_form (32 samples, 0.07%)</title><rect x="929.9" y="389" width="0.8" height="15.0" fill="rgb(219,122,33)" rx="2" ry="2" />
<text  x="932.93" y="399.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (43 samples, 0.09%)</title><rect x="1166.9" y="485" width="1.1" height="15.0" fill="rgb(208,10,14)" rx="2" ry="2" />
<text  x="1169.92" y="495.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (21 samples, 0.04%)</title><rect x="535.6" y="405" width="0.5" height="15.0" fill="rgb(227,8,25)" rx="2" ry="2" />
<text  x="538.62" y="415.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::inet_address (13 samples, 0.03%)</title><rect x="976.0" y="357" width="0.3" height="15.0" fill="rgb(209,98,1)" rx="2" ry="2" />
<text  x="979.01" y="367.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::future (5 samples, 0.01%)</title><rect x="978.8" y="341" width="0.1" height="15.0" fill="rgb(240,148,54)" rx="2" ry="2" />
<text  x="981.76" y="351.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::clear (22 samples, 0.05%)</title><rect x="575.6" y="341" width="0.6" height="15.0" fill="rgb(206,119,44)" rx="2" ry="2" />
<text  x="578.63" y="351.5" ></text>
</g>
<g >
<title>std::hash&lt;auth::resource&gt;::hash_data (73 samples, 0.15%)</title><rect x="791.0" y="133" width="1.8" height="15.0" fill="rgb(214,199,20)" rx="2" ry="2" />
<text  x="794.04" y="143.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;compact_for_query&lt; (14 samples, 0.03%)</title><rect x="416.8" y="373" width="0.4" height="15.0" fill="rgb(242,199,16)" rx="2" ry="2" />
<text  x="419.81" y="383.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (16 samples, 0.03%)</title><rect x="825.4" y="373" width="0.4" height="15.0" fill="rgb(253,112,19)" rx="2" ry="2" />
<text  x="828.43" y="383.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql3::metadata&gt;::~shared_ptr_count_for (5 samples, 0.01%)</title><rect x="33.5" y="485" width="0.2" height="15.0" fill="rgb(249,156,31)" rx="2" ry="2" />
<text  x="36.55" y="495.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_internal&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt; &gt; (29 samples, 0.06%)</title><rect x="1142.4" y="325" width="0.7" height="15.0" fill="rgb(221,18,4)" rx="2" ry="2" />
<text  x="1145.36" y="335.5" ></text>
</g>
<g >
<title>std::default_delete&lt;seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::entry&gt;::operator (5 samples, 0.01%)</title><rect x="67.8" y="389" width="0.1" height="15.0" fill="rgb(250,57,35)" rx="2" ry="2" />
<text  x="70.79" y="399.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;reader_permit::impl, true&gt;::make&lt;reader_concurrency_semaphore&amp;, schema const* const&amp;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;&amp;, reader_resources&amp;, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;&amp;&gt; (111 samples, 0.23%)</title><rect x="1033.7" y="229" width="2.7" height="15.0" fill="rgb(253,19,27)" rx="2" ry="2" />
<text  x="1036.68" y="239.5" ></text>
</g>
<g >
<title>compact_mutation&lt; (11 samples, 0.02%)</title><rect x="414.4" y="341" width="0.3" height="15.0" fill="rgb(241,195,0)" rx="2" ry="2" />
<text  x="417.39" y="351.5" ></text>
</g>
<g >
<title>seastar::app_template::run (46,660 samples, 97.91%)</title><rect x="22.3" y="597" width="1155.4" height="15.0" fill="rgb(206,26,14)" rx="2" ry="2" />
<text  x="25.31" y="607.5" >seastar::app_template::run</text>
</g>
<g >
<title>cql3::statements::modification_statement::apply_updates (20 samples, 0.04%)</title><rect x="856.5" y="373" width="0.5" height="15.0" fill="rgb(213,181,6)" rx="2" ry="2" />
<text  x="859.48" y="383.5" ></text>
</g>
<g >
<title>mutation_fragment::visit&lt;mutation_fragment::calculate_memory_usage (5 samples, 0.01%)</title><rect x="208.4" y="181" width="0.2" height="15.0" fill="rgb(243,180,47)" rx="2" ry="2" />
<text  x="211.44" y="191.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::has_available_units (8 samples, 0.02%)</title><rect x="143.5" y="197" width="0.2" height="15.0" fill="rgb(216,141,33)" rx="2" ry="2" />
<text  x="146.54" y="207.5" ></text>
</g>
<g >
<title>std::default_delete&lt;mutation_fragment::data&gt;::operator (8 samples, 0.02%)</title><rect x="403.0" y="261" width="0.2" height="15.0" fill="rgb(225,141,21)" rx="2" ry="2" />
<text  x="405.99" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value, std::allocator&lt;cql3::raw_value&gt; &gt;::~vector (25 samples, 0.05%)</title><rect x="668.3" y="453" width="0.6" height="15.0" fill="rgb(254,14,16)" rx="2" ry="2" />
<text  x="671.29" y="463.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_Optional_payload_base (17 samples, 0.04%)</title><rect x="1114.2" y="357" width="0.4" height="15.0" fill="rgb(207,6,31)" rx="2" ry="2" />
<text  x="1117.20" y="367.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (11 samples, 0.02%)</title><rect x="936.2" y="405" width="0.3" height="15.0" fill="rgb(208,75,54)" rx="2" ry="2" />
<text  x="939.24" y="415.5" ></text>
</g>
<g >
<title>make_combined_reader (791 samples, 1.66%)</title><rect x="432.1" y="325" width="19.6" height="15.0" fill="rgb(250,60,5)" rx="2" ry="2" />
<text  x="435.07" y="335.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::_M_create_storage (38 samples, 0.08%)</title><rect x="94.0" y="405" width="0.9" height="15.0" fill="rgb(250,163,20)" rx="2" ry="2" />
<text  x="96.97" y="415.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (284 samples, 0.60%)</title><rect x="250.7" y="293" width="7.0" height="15.0" fill="rgb(208,110,30)" rx="2" ry="2" />
<text  x="253.66" y="303.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (8 samples, 0.02%)</title><rect x="1105.5" y="373" width="0.2" height="15.0" fill="rgb(252,116,36)" rx="2" ry="2" />
<text  x="1108.46" y="383.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;std::tuple&lt;seastar::lw_shared_ptr&lt;query::result&gt;, cache_temperature&gt; &gt;::set_value&lt;std::tuple&lt;seastar::lw_shared_ptr&lt;query::result&gt;, cache_temperature&gt; &gt; (7 samples, 0.01%)</title><rect x="44.2" y="485" width="0.2" height="15.0" fill="rgb(252,13,8)" rx="2" ry="2" />
<text  x="47.20" y="495.5" ></text>
</g>
<g >
<title>partition_entry::read (6 samples, 0.01%)</title><rect x="518.2" y="325" width="0.1" height="15.0" fill="rgb(252,166,22)" rx="2" ry="2" />
<text  x="521.16" y="335.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (11 samples, 0.02%)</title><rect x="513.3" y="293" width="0.2" height="15.0" fill="rgb(240,141,53)" rx="2" ry="2" />
<text  x="516.26" y="303.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::has_token (5 samples, 0.01%)</title><rect x="946.9" y="389" width="0.1" height="15.0" fill="rgb(206,199,27)" rx="2" ry="2" />
<text  x="949.91" y="399.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mHEXNUMBER (11 samples, 0.02%)</title><rect x="16.3" y="261" width="0.3" height="15.0" fill="rgb(229,127,33)" rx="2" ry="2" />
<text  x="19.31" y="271.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;std::optional&lt;auth::resource&gt; &gt;, seastar::future&lt;bool&gt; &gt;, std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;std::optional&lt;auth::resource&gt; &gt;, seastar::future&lt;bool&gt; &gt; &gt; &gt;::~unique_ptr (75 samples, 0.16%)</title><rect x="801.6" y="325" width="1.8" height="15.0" fill="rgb(222,143,53)" rx="2" ry="2" />
<text  x="804.59" y="335.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;cql3::query_processor&gt;::local (8 samples, 0.02%)</title><rect x="827.1" y="437" width="0.2" height="15.0" fill="rgb(211,128,24)" rx="2" ry="2" />
<text  x="830.07" y="447.5" ></text>
</g>
<g >
<title>mutation_partition::lower_bound (83 samples, 0.17%)</title><rect x="232.4" y="197" width="2.0" height="15.0" fill="rgb(246,150,45)" rx="2" ry="2" />
<text  x="235.39" y="207.5" ></text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;void&gt;, database*, seastar::lw_shared_ptr&lt;schema const&gt;, frozen_mutation const&amp;, tracing::trace_state_ptr, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, seastar::bool_class&lt;db::force_sync_tag&gt; &gt;::make_stage_for_group (20 samples, 0.04%)</title><rect x="1141.8" y="405" width="0.5" height="15.0" fill="rgb(215,42,33)" rx="2" ry="2" />
<text  x="1144.79" y="415.5" ></text>
</g>
<g >
<title>locator::token_metadata::first_token (299 samples, 0.63%)</title><rect x="1079.2" y="277" width="7.4" height="15.0" fill="rgb(234,191,4)" rx="2" ry="2" />
<text  x="1082.19" y="287.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::take_value (7 samples, 0.01%)</title><rect x="134.1" y="261" width="0.1" height="15.0" fill="rgb(249,57,7)" rx="2" ry="2" />
<text  x="137.06" y="271.5" ></text>
</g>
<g >
<title>dht::tri_compare (35 samples, 0.07%)</title><rect x="1079.7" y="245" width="0.8" height="15.0" fill="rgb(218,163,5)" rx="2" ry="2" />
<text  x="1082.66" y="255.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::clear (8 samples, 0.02%)</title><rect x="575.0" y="341" width="0.2" height="15.0" fill="rgb(245,22,11)" rx="2" ry="2" />
<text  x="577.97" y="351.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (14 samples, 0.03%)</title><rect x="508.3" y="213" width="0.4" height="15.0" fill="rgb(205,145,43)" rx="2" ry="2" />
<text  x="511.31" y="223.5" ></text>
</g>
<g >
<title>cql3::statements::update_statement::execute_operations_for_key (15 samples, 0.03%)</title><rect x="856.5" y="341" width="0.4" height="15.0" fill="rgb(225,88,7)" rx="2" ry="2" />
<text  x="859.48" y="351.5" ></text>
</g>
<g >
<title>std::default_delete&lt;nonwrapping_interval&lt;dht::ring_position&gt; const&gt;::operator (7 samples, 0.01%)</title><rect x="582.6" y="405" width="0.2" height="15.0" fill="rgb(207,101,6)" rx="2" ry="2" />
<text  x="585.64" y="415.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (6 samples, 0.01%)</title><rect x="649.9" y="437" width="0.1" height="15.0" fill="rgb(235,78,17)" rx="2" ry="2" />
<text  x="652.87" y="447.5" ></text>
</g>
<g >
<title>_ZN7seastar8futurizeIvE22satisfy_with_result_ofIZZNS_6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE14then_impl_nrvoIZNS9_14discard_resultEvEUlDpOT_E_NS3_IvEEEET0_OT_ENKUlONS_8internal22promise_base_with_typeIvEERSE_ONS_12future_stateIS8_EEE_clESM_SN_SQ_EUlvE_EEvSM_SI_ (7 samples, 0.01%)</title><rect x="30.4" y="485" width="0.2" height="15.0" fill="rgb(219,34,42)" rx="2" ry="2" />
<text  x="33.40" y="495.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (31 samples, 0.07%)</title><rect x="1142.3" y="373" width="0.8" height="15.0" fill="rgb(246,126,18)" rx="2" ry="2" />
<text  x="1145.31" y="383.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (6 samples, 0.01%)</title><rect x="651.3" y="485" width="0.2" height="15.0" fill="rgb(215,38,8)" rx="2" ry="2" />
<text  x="654.31" y="495.5" ></text>
</g>
<g >
<title>partition_snapshot::version_count (9 samples, 0.02%)</title><rect x="209.9" y="149" width="0.2" height="15.0" fill="rgb(216,152,12)" rx="2" ry="2" />
<text  x="212.88" y="159.5" ></text>
</g>
<g >
<title>operator new (23 samples, 0.05%)</title><rect x="757.8" y="373" width="0.6" height="15.0" fill="rgb(251,39,9)" rx="2" ry="2" />
<text  x="760.78" y="383.5" ></text>
</g>
<g >
<title>sstring_hash::operator (22 samples, 0.05%)</title><rect x="831.9" y="373" width="0.6" height="15.0" fill="rgb(221,116,11)" rx="2" ry="2" />
<text  x="834.92" y="383.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (10 samples, 0.02%)</title><rect x="572.3" y="341" width="0.2" height="15.0" fill="rgb(215,148,15)" rx="2" ry="2" />
<text  x="575.29" y="351.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (14 samples, 0.03%)</title><rect x="988.4" y="261" width="0.4" height="15.0" fill="rgb(239,47,17)" rx="2" ry="2" />
<text  x="991.44" y="271.5" ></text>
</g>
<g >
<title>query_result_builder::consume_end_of_partition (69 samples, 0.14%)</title><rect x="302.1" y="229" width="1.7" height="15.0" fill="rgb(208,164,32)" rx="2" ry="2" />
<text  x="305.09" y="239.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::operator (39 samples, 0.08%)</title><rect x="789.6" y="133" width="0.9" height="15.0" fill="rgb(210,130,21)" rx="2" ry="2" />
<text  x="792.55" y="143.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (28 samples, 0.06%)</title><rect x="566.2" y="357" width="0.7" height="15.0" fill="rgb(223,132,37)" rx="2" ry="2" />
<text  x="569.22" y="367.5" ></text>
</g>
<g >
<title>utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::get_or_load&lt;utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (258 samples, 0.54%)</title><rect x="733.8" y="373" width="6.4" height="15.0" fill="rgb(245,82,3)" rx="2" ry="2" />
<text  x="736.79" y="383.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (56 samples, 0.12%)</title><rect x="15.7" y="341" width="1.4" height="15.0" fill="rgb(207,119,33)" rx="2" ry="2" />
<text  x="18.67" y="351.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;query::result&gt;::operator= (5 samples, 0.01%)</title><rect x="698.0" y="421" width="0.1" height="15.0" fill="rgb(230,225,33)" rx="2" ry="2" />
<text  x="700.96" y="431.5" ></text>
</g>
<g >
<title>absl::container_internal::operator== (10 samples, 0.02%)</title><rect x="837.0" y="373" width="0.2" height="15.0" fill="rgb(242,81,2)" rx="2" ry="2" />
<text  x="840.00" y="383.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (18 samples, 0.04%)</title><rect x="654.4" y="485" width="0.4" height="15.0" fill="rgb(225,110,38)" rx="2" ry="2" />
<text  x="657.35" y="495.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE8scheduleINS_8internal22promise_base_with_typeIvEEZNS6_14discard_resultEvEUlDpOT_E_ZNS6_14then_impl_nrvoISE_NS0_IvEEEET0_OT_EUlOSA_RSE_ONS_12future_stateIS5_EEE_EEvSJ_OSH_OT1_ (5 samples, 0.01%)</title><rect x="713.2" y="453" width="0.1" height="15.0" fill="rgb(206,44,45)" rx="2" ry="2" />
<text  x="716.21" y="463.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::_Copy_ctor_base (5 samples, 0.01%)</title><rect x="314.9" y="181" width="0.2" height="15.0" fill="rgb(213,47,26)" rx="2" ry="2" />
<text  x="317.94" y="191.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (16 samples, 0.03%)</title><rect x="679.3" y="485" width="0.4" height="15.0" fill="rgb(239,92,13)" rx="2" ry="2" />
<text  x="682.29" y="495.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (10 samples, 0.02%)</title><rect x="514.0" y="325" width="0.2" height="15.0" fill="rgb(232,19,30)" rx="2" ry="2" />
<text  x="516.98" y="335.5" ></text>
</g>
<g >
<title>cql3::constants::setter::execute (11 samples, 0.02%)</title><rect x="856.5" y="309" width="0.3" height="15.0" fill="rgb(221,189,7)" rx="2" ry="2" />
<text  x="859.48" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::emplace_back&lt;flat_mutation_reader&gt; (7 samples, 0.01%)</title><rect x="423.9" y="357" width="0.1" height="15.0" fill="rgb(224,186,32)" rx="2" ry="2" />
<text  x="426.87" y="367.5" ></text>
</g>
<g >
<title>utils::murmur_hash::hash3_x64_128&lt;legacy_compound_view&lt;compound_type&lt; (269 samples, 0.56%)</title><rect x="916.0" y="373" width="6.6" height="15.0" fill="rgb(242,222,54)" rx="2" ry="2" />
<text  x="918.99" y="383.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (8 samples, 0.02%)</title><rect x="530.3" y="229" width="0.2" height="15.0" fill="rgb(241,86,14)" rx="2" ry="2" />
<text  x="533.27" y="239.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (8 samples, 0.02%)</title><rect x="689.3" y="485" width="0.2" height="15.0" fill="rgb(226,178,44)" rx="2" ry="2" />
<text  x="692.34" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::~vector (27 samples, 0.06%)</title><rect x="452.9" y="325" width="0.7" height="15.0" fill="rgb(205,99,10)" rx="2" ry="2" />
<text  x="455.91" y="335.5" ></text>
</g>
<g >
<title>cql3::query_options::query_options (196 samples, 0.41%)</title><rect x="840.5" y="437" width="4.9" height="15.0" fill="rgb(252,61,5)" rx="2" ry="2" />
<text  x="843.54" y="447.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (195 samples, 0.41%)</title><rect x="15.7" y="421" width="4.8" height="15.0" fill="rgb(214,111,40)" rx="2" ry="2" />
<text  x="18.67" y="431.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (14 samples, 0.03%)</title><rect x="831.3" y="357" width="0.4" height="15.0" fill="rgb(223,127,11)" rx="2" ry="2" />
<text  x="834.35" y="367.5" ></text>
</g>
<g >
<title>row_cache::make_reader (453 samples, 0.95%)</title><rect x="520.6" y="341" width="11.2" height="15.0" fill="rgb(252,29,44)" rx="2" ry="2" />
<text  x="523.56" y="351.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::small_vector (5 samples, 0.01%)</title><rect x="450.5" y="277" width="0.2" height="15.0" fill="rgb(248,114,25)" rx="2" ry="2" />
<text  x="453.54" y="287.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::get_promise (5 samples, 0.01%)</title><rect x="997.1" y="293" width="0.1" height="15.0" fill="rgb(228,212,6)" rx="2" ry="2" />
<text  x="1000.11" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (14 samples, 0.03%)</title><rect x="703.8" y="485" width="0.3" height="15.0" fill="rgb(240,219,24)" rx="2" ry="2" />
<text  x="706.78" y="495.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_emplace&lt;nonwrapping_interval&lt;dht::token&gt;, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; (291 samples, 0.61%)</title><rect x="1156.7" y="469" width="7.2" height="15.0" fill="rgb(216,161,18)" rx="2" ry="2" />
<text  x="1159.67" y="479.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, flat_mutation_reader::impl::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (21 samples, 0.04%)</title><rect x="680.6" y="389" width="0.6" height="15.0" fill="rgb(233,159,48)" rx="2" ry="2" />
<text  x="683.65" y="399.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (54 samples, 0.11%)</title><rect x="889.9" y="245" width="1.3" height="15.0" fill="rgb(219,38,16)" rx="2" ry="2" />
<text  x="892.89" y="255.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_destroy_data_aux (17 samples, 0.04%)</title><rect x="366.3" y="149" width="0.4" height="15.0" fill="rgb(243,220,53)" rx="2" ry="2" />
<text  x="369.30" y="159.5" ></text>
</g>
<g >
<title>atomic_cell_or_collection::copy (751 samples, 1.58%)</title><rect x="171.5" y="117" width="18.6" height="15.0" fill="rgb(238,133,52)" rx="2" ry="2" />
<text  x="174.50" y="127.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_locally (7 samples, 0.01%)</title><rect x="1142.4" y="213" width="0.2" height="15.0" fill="rgb(212,115,42)" rx="2" ry="2" />
<text  x="1145.38" y="223.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::maybe_decay_reserve (14 samples, 0.03%)</title><rect x="159.0" y="197" width="0.3" height="15.0" fill="rgb(211,143,7)" rx="2" ry="2" />
<text  x="161.99" y="207.5" ></text>
</g>
<g >
<title>schema_registry::get_entry (15 samples, 0.03%)</title><rect x="973.9" y="357" width="0.4" height="15.0" fill="rgb(237,193,6)" rx="2" ry="2" />
<text  x="976.90" y="367.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (39 samples, 0.08%)</title><rect x="310.0" y="165" width="1.0" height="15.0" fill="rgb(209,9,41)" rx="2" ry="2" />
<text  x="313.04" y="175.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reclaiming_disabled&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::get_static_row (134 samples, 0.28%)</title><rect x="245.0" y="229" width="3.3" height="15.0" fill="rgb(235,137,43)" rx="2" ry="2" />
<text  x="247.99" y="239.5" ></text>
</g>
<g >
<title>mutation_fragment::destroy_data (331 samples, 0.69%)</title><rect x="394.6" y="261" width="8.2" height="15.0" fill="rgb(245,151,26)" rx="2" ry="2" />
<text  x="397.58" y="271.5" ></text>
</g>
<g >
<title>service::client_state::check_has_permission (1,508 samples, 3.16%)</title><rect x="766.4" y="341" width="37.4" height="15.0" fill="rgb(240,107,35)" rx="2" ry="2" />
<text  x="769.45" y="351.5" >ser..</text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;schema_registry_entry&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;schema_registry_entry&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (91 samples, 0.19%)</title><rect x="971.3" y="325" width="2.2" height="15.0" fill="rgb(247,217,5)" rx="2" ry="2" />
<text  x="974.28" y="335.5" ></text>
</g>
<g >
<title>operator new (94 samples, 0.20%)</title><rect x="1044.5" y="245" width="2.3" height="15.0" fill="rgb(212,205,28)" rx="2" ry="2" />
<text  x="1047.47" y="255.5" ></text>
</g>
<g >
<title>read_simple&lt;long, managed_bytes_basic_view&lt; (41 samples, 0.09%)</title><rect x="383.7" y="165" width="1.0" height="15.0" fill="rgb(244,210,23)" rx="2" ry="2" />
<text  x="386.73" y="175.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::free (11 samples, 0.02%)</title><rect x="401.3" y="197" width="0.3" height="15.0" fill="rgb(218,110,19)" rx="2" ry="2" />
<text  x="404.29" y="207.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::maybe_drop_from (6 samples, 0.01%)</title><rect x="368.5" y="197" width="0.1" height="15.0" fill="rgb(249,117,7)" rx="2" ry="2" />
<text  x="371.48" y="207.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::pop_front (144 samples, 0.30%)</title><rect x="64.4" y="405" width="3.5" height="15.0" fill="rgb(206,132,12)" rx="2" ry="2" />
<text  x="67.35" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (25 samples, 0.05%)</title><rect x="206.4" y="149" width="0.6" height="15.0" fill="rgb(208,146,50)" rx="2" ry="2" />
<text  x="209.39" y="159.5" ></text>
</g>
<g >
<title>operator new (22 samples, 0.05%)</title><rect x="1156.1" y="437" width="0.6" height="15.0" fill="rgb(211,42,8)" rx="2" ry="2" />
<text  x="1159.13" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (14 samples, 0.03%)</title><rect x="1127.5" y="405" width="0.4" height="15.0" fill="rgb(214,56,24)" rx="2" ry="2" />
<text  x="1130.53" y="415.5" ></text>
</g>
<g >
<title>main (46,660 samples, 97.91%)</title><rect x="22.3" y="613" width="1155.4" height="15.0" fill="rgb(230,16,13)" rx="2" ry="2" />
<text  x="25.31" y="623.5" >main</text>
</g>
<g >
<title>position_in_partition::position_in_partition (60 samples, 0.13%)</title><rect x="222.3" y="229" width="1.5" height="15.0" fill="rgb(224,108,44)" rx="2" ry="2" />
<text  x="225.33" y="239.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::deallocate (28 samples, 0.06%)</title><rect x="554.2" y="293" width="0.7" height="15.0" fill="rgb(229,137,38)" rx="2" ry="2" />
<text  x="557.19" y="303.5" ></text>
</g>
<g >
<title>mutation_reader_merger::close (736 samples, 1.54%)</title><rect x="547.4" y="373" width="18.2" height="15.0" fill="rgb(236,67,41)" rx="2" ry="2" />
<text  x="550.38" y="383.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::~unique_ptr (54 samples, 0.11%)</title><rect x="894.5" y="325" width="1.4" height="15.0" fill="rgb(216,128,26)" rx="2" ry="2" />
<text  x="897.54" y="335.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (8 samples, 0.02%)</title><rect x="1033.4" y="229" width="0.2" height="15.0" fill="rgb(215,147,33)" rx="2" ry="2" />
<text  x="1036.41" y="239.5" ></text>
</g>
<g >
<title>cql3::raw_value_view::raw_value_view (95 samples, 0.20%)</title><rect x="896.0" y="325" width="2.4" height="15.0" fill="rgb(238,210,52)" rx="2" ry="2" />
<text  x="899.00" y="335.5" ></text>
</g>
<g >
<title>seastar::sprint&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; (5 samples, 0.01%)</title><rect x="15.2" y="517" width="0.1" height="15.0" fill="rgb(250,130,19)" rx="2" ry="2" />
<text  x="18.18" y="527.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::constant (9 samples, 0.02%)</title><rect x="19.0" y="277" width="0.2" height="15.0" fill="rgb(212,0,51)" rx="2" ry="2" />
<text  x="21.96" y="287.5" ></text>
</g>
<g >
<title>row_tombstone::apply (22 samples, 0.05%)</title><rect x="386.7" y="213" width="0.5" height="15.0" fill="rgb(228,53,35)" rx="2" ry="2" />
<text  x="389.68" y="223.5" ></text>
</g>
<g >
<title>std::hash&lt;auth::resource&gt;::hash_data (83 samples, 0.17%)</title><rect x="806.0" y="325" width="2.1" height="15.0" fill="rgb(241,162,21)" rx="2" ry="2" />
<text  x="809.04" y="335.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (25 samples, 0.05%)</title><rect x="387.7" y="197" width="0.6" height="15.0" fill="rgb(226,84,20)" rx="2" ry="2" />
<text  x="390.69" y="207.5" ></text>
</g>
<g >
<title>reader_permit::consume (14 samples, 0.03%)</title><rect x="507.6" y="181" width="0.3" height="15.0" fill="rgb(218,135,12)" rx="2" ry="2" />
<text  x="510.59" y="191.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::build_partition_keys (9 samples, 0.02%)</title><rect x="856.2" y="389" width="0.2" height="15.0" fill="rgb(235,74,50)" rx="2" ry="2" />
<text  x="859.21" y="399.5" ></text>
</g>
<g >
<title>std::apply&lt;auth::permissions_cache::get (613 samples, 1.29%)</title><rect x="778.5" y="261" width="15.2" height="15.0" fill="rgb(225,209,6)" rx="2" ry="2" />
<text  x="781.48" y="271.5" ></text>
</g>
<g >
<title>logalloc::basic_region_impl::set_reclaiming_enabled (8 samples, 0.02%)</title><rect x="509.9" y="229" width="0.2" height="15.0" fill="rgb(213,123,9)" rx="2" ry="2" />
<text  x="512.87" y="239.5" ></text>
</g>
<g >
<title>seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;::swap (44 samples, 0.09%)</title><rect x="727.9" y="389" width="1.1" height="15.0" fill="rgb(247,54,48)" rx="2" ry="2" />
<text  x="730.92" y="399.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (12 samples, 0.03%)</title><rect x="1103.3" y="373" width="0.3" height="15.0" fill="rgb(217,103,25)" rx="2" ry="2" />
<text  x="1106.26" y="383.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (30 samples, 0.06%)</title><rect x="687.9" y="453" width="0.7" height="15.0" fill="rgb(219,42,23)" rx="2" ry="2" />
<text  x="690.90" y="463.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::clear (5 samples, 0.01%)</title><rect x="626.6" y="485" width="0.1" height="15.0" fill="rgb(250,116,50)" rx="2" ry="2" />
<text  x="629.62" y="495.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_28has_slice_or_needs_filteringERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES28_S2B_ (21 samples, 0.04%)</title><rect x="943.9" y="389" width="0.6" height="15.0" fill="rgb(217,40,34)" rx="2" ry="2" />
<text  x="946.94" y="399.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::operator (5 samples, 0.01%)</title><rect x="838.4" y="341" width="0.1" height="15.0" fill="rgb(254,17,23)" rx="2" ry="2" />
<text  x="841.36" y="351.5" ></text>
</g>
<g >
<title>compound_wrapper&lt;partition_key, partition_key_view&gt;::make_empty (73 samples, 0.15%)</title><rect x="538.9" y="389" width="1.8" height="15.0" fill="rgb(238,108,24)" rx="2" ry="2" />
<text  x="541.91" y="399.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (12 samples, 0.03%)</title><rect x="1016.9" y="197" width="0.3" height="15.0" fill="rgb(207,181,41)" rx="2" ry="2" />
<text  x="1019.89" y="207.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::deallocate (7 samples, 0.01%)</title><rect x="283.0" y="325" width="0.2" height="15.0" fill="rgb(252,59,0)" rx="2" ry="2" />
<text  x="286.05" y="335.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (17 samples, 0.04%)</title><rect x="678.7" y="453" width="0.4" height="15.0" fill="rgb(207,2,41)" rx="2" ry="2" />
<text  x="681.67" y="463.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_one (7 samples, 0.01%)</title><rect x="120.1" y="293" width="0.1" height="15.0" fill="rgb(214,10,46)" rx="2" ry="2" />
<text  x="123.07" y="303.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;tracking_allocator&lt;mutation_fragment&gt; &gt;::_S_destroy&lt;tracking_allocator&lt;mutation_fragment&gt;, mutation_fragment&gt; (8 samples, 0.02%)</title><rect x="298.6" y="245" width="0.2" height="15.0" fill="rgb(249,174,40)" rx="2" ry="2" />
<text  x="301.57" y="255.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (20 samples, 0.04%)</title><rect x="720.6" y="293" width="0.5" height="15.0" fill="rgb(234,16,39)" rx="2" ry="2" />
<text  x="723.59" y="303.5" ></text>
</g>
<g >
<title>operator new (21 samples, 0.04%)</title><rect x="506.2" y="197" width="0.5" height="15.0" fill="rgb(241,131,24)" rx="2" ry="2" />
<text  x="509.20" y="207.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::clone&lt;row::row (1,322 samples, 2.77%)</title><rect x="165.9" y="133" width="32.8" height="15.0" fill="rgb(250,14,49)" rx="2" ry="2" />
<text  x="168.93" y="143.5" >co..</text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (44 samples, 0.09%)</title><rect x="855.9" y="453" width="1.1" height="15.0" fill="rgb(223,205,27)" rx="2" ry="2" />
<text  x="858.94" y="463.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;bytes_ostream::chunk, std::default_delete&lt;bytes_ostream::chunk&gt; &gt;::~unique_ptr (7 samples, 0.01%)</title><rect x="38.6" y="389" width="0.2" height="15.0" fill="rgb(229,6,5)" rx="2" ry="2" />
<text  x="41.60" y="399.5" ></text>
</g>
<g >
<title>query::result::builder::builder (152 samples, 0.32%)</title><rect x="591.3" y="421" width="3.7" height="15.0" fill="rgb(216,105,53)" rx="2" ry="2" />
<text  x="594.28" y="431.5" ></text>
</g>
<g >
<title>nonwrapping_interval&lt;clustering_key_prefix&gt;::nonwrapping_interval (23 samples, 0.05%)</title><rect x="1118.0" y="389" width="0.5" height="15.0" fill="rgb(228,142,0)" rx="2" ry="2" />
<text  x="1120.97" y="399.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt;::~_Variant_storage (15 samples, 0.03%)</title><rect x="668.5" y="437" width="0.4" height="15.0" fill="rgb(217,150,23)" rx="2" ry="2" />
<text  x="671.52" y="447.5" ></text>
</g>
<g >
<title>cql3::constants::marker::to_expression (129 samples, 0.27%)</title><rect x="878.4" y="325" width="3.2" height="15.0" fill="rgb(213,44,42)" rx="2" ry="2" />
<text  x="881.45" y="335.5" ></text>
</g>
<g >
<title>managed_bytes::external_memory_usage (14 samples, 0.03%)</title><rect x="504.8" y="213" width="0.3" height="15.0" fill="rgb(205,103,0)" rx="2" ry="2" />
<text  x="507.77" y="223.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (87 samples, 0.18%)</title><rect x="817.7" y="325" width="2.1" height="15.0" fill="rgb(227,53,38)" rx="2" ry="2" />
<text  x="820.68" y="335.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_data_requests (355 samples, 0.74%)</title><rect x="694.6" y="469" width="8.8" height="15.0" fill="rgb(241,11,10)" rx="2" ry="2" />
<text  x="697.59" y="479.5" ></text>
</g>
<g >
<title>list_reader_selector::~list_reader_selector (27 samples, 0.06%)</title><rect x="570.1" y="357" width="0.7" height="15.0" fill="rgb(240,58,23)" rx="2" ry="2" />
<text  x="573.14" y="367.5" ></text>
</g>
<g >
<title>list_reader_selector::create_new_readers (45 samples, 0.09%)</title><rect x="435.6" y="277" width="1.1" height="15.0" fill="rgb(228,42,45)" rx="2" ry="2" />
<text  x="438.56" y="287.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (83 samples, 0.17%)</title><rect x="1168.1" y="485" width="2.0" height="15.0" fill="rgb(240,7,35)" rx="2" ry="2" />
<text  x="1171.06" y="495.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;, service::storage_proxy::query_result_local (10 samples, 0.02%)</title><rect x="22.7" y="517" width="0.2" height="15.0" fill="rgb(214,33,47)" rx="2" ry="2" />
<text  x="25.65" y="527.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::~small_vector (34 samples, 0.07%)</title><rect x="575.3" y="357" width="0.9" height="15.0" fill="rgb(226,0,14)" rx="2" ry="2" />
<text  x="578.34" y="367.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (78 samples, 0.16%)</title><rect x="911.8" y="341" width="2.0" height="15.0" fill="rgb(237,30,30)" rx="2" ry="2" />
<text  x="914.83" y="351.5" ></text>
</g>
<g >
<title>std::push_heap&lt;mutation_reader_merger::reader_and_fragment*, mutation_reader_merger::reader_heap_compare&gt; (12 samples, 0.03%)</title><rect x="134.2" y="261" width="0.3" height="15.0" fill="rgb(225,187,5)" rx="2" ry="2" />
<text  x="137.23" y="271.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_M_move_assign (35 samples, 0.07%)</title><rect x="1115.7" y="373" width="0.9" height="15.0" fill="rgb(235,105,44)" rx="2" ry="2" />
<text  x="1118.74" y="383.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::operator= (26 samples, 0.05%)</title><rect x="1148.7" y="485" width="0.6" height="15.0" fill="rgb(218,132,31)" rx="2" ry="2" />
<text  x="1151.70" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::stats (6 samples, 0.01%)</title><rect x="519.0" y="325" width="0.1" height="15.0" fill="rgb(239,55,9)" rx="2" ry="2" />
<text  x="521.95" y="335.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (16 samples, 0.03%)</title><rect x="737.3" y="277" width="0.4" height="15.0" fill="rgb(213,140,31)" rx="2" ry="2" />
<text  x="740.33" y="287.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (8 samples, 0.02%)</title><rect x="135.5" y="277" width="0.2" height="15.0" fill="rgb(240,7,45)" rx="2" ry="2" />
<text  x="138.49" y="287.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;std::optional&lt;clustering_key_prefix&gt; &gt;::dispose (5 samples, 0.01%)</title><rect x="416.5" y="373" width="0.1" height="15.0" fill="rgb(254,148,41)" rx="2" ry="2" />
<text  x="419.51" y="383.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_pausable&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (6 samples, 0.01%)</title><rect x="293.2" y="293" width="0.2" height="15.0" fill="rgb(206,47,14)" rx="2" ry="2" />
<text  x="296.23" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (8 samples, 0.02%)</title><rect x="1138.4" y="421" width="0.2" height="15.0" fill="rgb(228,23,14)" rx="2" ry="2" />
<text  x="1141.42" y="431.5" ></text>
</g>
<g >
<title>std::construct_at&lt;mutation_fragment, schema const&amp;, reader_permit&amp;, partition_start&gt; (176 samples, 0.37%)</title><rect x="504.6" y="229" width="4.4" height="15.0" fill="rgb(215,119,48)" rx="2" ry="2" />
<text  x="507.59" y="239.5" ></text>
</g>
<g >
<title>flush_reader::fill_buffer (6 samples, 0.01%)</title><rect x="21.9" y="485" width="0.2" height="15.0" fill="rgb(224,140,33)" rx="2" ry="2" />
<text  x="24.94" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (5 samples, 0.01%)</title><rect x="205.4" y="101" width="0.1" height="15.0" fill="rgb(222,74,2)" rx="2" ry="2" />
<text  x="208.42" y="111.5" ></text>
</g>
<g >
<title>bytes_ostream::linearize (21 samples, 0.04%)</title><rect x="588.2" y="405" width="0.6" height="15.0" fill="rgb(205,173,35)" rx="2" ry="2" />
<text  x="591.24" y="415.5" ></text>
</g>
<g >
<title>std::hash&lt;gms::inet_address&gt;::operator (9 samples, 0.02%)</title><rect x="1155.5" y="421" width="0.2" height="15.0" fill="rgb(242,137,33)" rx="2" ry="2" />
<text  x="1158.51" y="431.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_state&lt;std::tuple&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt; &gt;, seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (40 samples, 0.08%)</title><rect x="777.0" y="245" width="1.0" height="15.0" fill="rgb(224,16,10)" rx="2" ry="2" />
<text  x="780.00" y="255.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (256 samples, 0.54%)</title><rect x="538.1" y="405" width="6.3" height="15.0" fill="rgb(226,159,5)" rx="2" ry="2" />
<text  x="541.10" y="415.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE9then_implIZNS6_14discard_resultEvEUlDpOT_E_NS0_IvEEEET0_OT_ (14 samples, 0.03%)</title><rect x="709.3" y="485" width="0.4" height="15.0" fill="rgb(239,179,30)" rx="2" ry="2" />
<text  x="712.35" y="495.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (5 samples, 0.01%)</title><rect x="748.6" y="341" width="0.1" height="15.0" fill="rgb(251,8,0)" rx="2" ry="2" />
<text  x="751.57" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (16 samples, 0.03%)</title><rect x="617.6" y="373" width="0.4" height="15.0" fill="rgb(239,185,40)" rx="2" ry="2" />
<text  x="620.58" y="383.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, enum_set&lt;super_enum&lt;auth::permission,  (555 samples, 1.16%)</title><rect x="779.8" y="229" width="13.8" height="15.0" fill="rgb(217,75,46)" rx="2" ry="2" />
<text  x="782.82" y="239.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;::operator== (16 samples, 0.03%)</title><rect x="719.3" y="309" width="0.4" height="15.0" fill="rgb(226,136,43)" rx="2" ry="2" />
<text  x="722.30" y="319.5" ></text>
</g>
<g >
<title>table::query (21,991 samples, 46.15%)</title><rect x="76.0" y="453" width="544.6" height="15.0" fill="rgb(250,120,36)" rx="2" ry="2" />
<text  x="79.02" y="463.5" >table::query</text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_M_reset (8 samples, 0.02%)</title><rect x="924.7" y="357" width="0.2" height="15.0" fill="rgb(240,105,39)" rx="2" ry="2" />
<text  x="927.65" y="367.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_token (51 samples, 0.11%)</title><rect x="945.5" y="389" width="1.3" height="15.0" fill="rgb(210,173,13)" rx="2" ry="2" />
<text  x="948.53" y="399.5" ></text>
</g>
<g >
<title>make_empty_flat_reader (104 samples, 0.22%)</title><rect x="528.8" y="309" width="2.6" height="15.0" fill="rgb(246,37,13)" rx="2" ry="2" />
<text  x="531.81" y="319.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (14 samples, 0.03%)</title><rect x="1039.7" y="261" width="0.3" height="15.0" fill="rgb(222,74,35)" rx="2" ry="2" />
<text  x="1042.67" y="271.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;::basic_sstring (5 samples, 0.01%)</title><rect x="733.3" y="357" width="0.2" height="15.0" fill="rgb(247,194,37)" rx="2" ry="2" />
<text  x="736.34" y="367.5" ></text>
</g>
<g >
<title>cql3::statements::raw::update_statement::prepare_internal (29 samples, 0.06%)</title><rect x="20.6" y="437" width="0.7" height="15.0" fill="rgb(218,203,49)" rx="2" ry="2" />
<text  x="23.57" y="447.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (23 samples, 0.05%)</title><rect x="553.5" y="293" width="0.6" height="15.0" fill="rgb(215,5,30)" rx="2" ry="2" />
<text  x="556.50" y="303.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate (491 samples, 1.03%)</title><rect x="881.6" y="325" width="12.2" height="15.0" fill="rgb(230,125,2)" rx="2" ry="2" />
<text  x="884.64" y="335.5" ></text>
</g>
<g >
<title>dht::ring_position_tri_compare (455 samples, 0.95%)</title><rect x="474.4" y="277" width="11.2" height="15.0" fill="rgb(242,57,31)" rx="2" ry="2" />
<text  x="477.38" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (8 samples, 0.02%)</title><rect x="410.4" y="245" width="0.2" height="15.0" fill="rgb(247,71,2)" rx="2" ry="2" />
<text  x="413.42" y="255.5" ></text>
</g>
<g >
<title>operator delete (26 samples, 0.05%)</title><rect x="658.1" y="421" width="0.7" height="15.0" fill="rgb(215,3,43)" rx="2" ry="2" />
<text  x="661.14" y="431.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::execute (90 samples, 0.19%)</title><rect x="743.0" y="405" width="2.2" height="15.0" fill="rgb(210,136,41)" rx="2" ry="2" />
<text  x="745.95" y="415.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;clustering_key_prefix&gt;::_M_move_assign (11 samples, 0.02%)</title><rect x="537.4" y="405" width="0.3" height="15.0" fill="rgb(233,141,14)" rx="2" ry="2" />
<text  x="540.43" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (11 samples, 0.02%)</title><rect x="544.5" y="389" width="0.3" height="15.0" fill="rgb(216,40,22)" rx="2" ry="2" />
<text  x="547.51" y="399.5" ></text>
</g>
<g >
<title>nonwrapping_interval&lt;clustering_key_prefix&gt;::make_open_ended_both_sides (17 samples, 0.04%)</title><rect x="1122.4" y="405" width="0.5" height="15.0" fill="rgb(250,13,31)" rx="2" ry="2" />
<text  x="1125.45" y="415.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_slice_or_needs_filtering (14 samples, 0.03%)</title><rect x="643.7" y="405" width="0.4" height="15.0" fill="rgb(209,208,54)" rx="2" ry="2" />
<text  x="646.73" y="415.5" ></text>
</g>
<g >
<title>cql3::restrictions::clustering_key_restrictions::needs_filtering (6 samples, 0.01%)</title><rect x="641.5" y="469" width="0.1" height="15.0" fill="rgb(232,152,26)" rx="2" ry="2" />
<text  x="644.48" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_insert&lt;flat_mutation_reader&gt; (76 samples, 0.16%)</title><rect x="437.4" y="261" width="1.9" height="15.0" fill="rgb(206,51,1)" rx="2" ry="2" />
<text  x="440.39" y="271.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (12 samples, 0.03%)</title><rect x="1060.2" y="261" width="0.3" height="15.0" fill="rgb(226,187,48)" rx="2" ry="2" />
<text  x="1063.25" y="271.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (21 samples, 0.04%)</title><rect x="932.3" y="389" width="0.5" height="15.0" fill="rgb(251,14,29)" rx="2" ry="2" />
<text  x="935.33" y="399.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (554 samples, 1.16%)</title><rect x="176.3" y="101" width="13.7" height="15.0" fill="rgb(251,172,0)" rx="2" ry="2" />
<text  x="179.30" y="111.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (6 samples, 0.01%)</title><rect x="932.7" y="373" width="0.1" height="15.0" fill="rgb(224,40,24)" rx="2" ry="2" />
<text  x="935.70" y="383.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt;::_Move_ctor_base (18 samples, 0.04%)</title><rect x="891.7" y="277" width="0.4" height="15.0" fill="rgb(206,103,13)" rx="2" ry="2" />
<text  x="894.69" y="287.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (25 samples, 0.05%)</title><rect x="680.6" y="469" width="0.6" height="15.0" fill="rgb(220,187,29)" rx="2" ry="2" />
<text  x="683.57" y="479.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector (12 samples, 0.03%)</title><rect x="1063.8" y="325" width="0.3" height="15.0" fill="rgb(241,115,54)" rx="2" ry="2" />
<text  x="1066.79" y="335.5" ></text>
</g>
<g >
<title>ser::serializer&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;::write_fragmented&lt;bytes_ostream, fragment_range&lt;managed_bytes_basic_view&lt; (177 samples, 0.37%)</title><rect x="353.1" y="165" width="4.4" height="15.0" fill="rgb(208,87,49)" rx="2" ry="2" />
<text  x="356.12" y="175.5" ></text>
</g>
<g >
<title>service::storage_proxy::query (6,100 samples, 12.80%)</title><rect x="955.2" y="405" width="151.0" height="15.0" fill="rgb(253,160,48)" rx="2" ry="2" />
<text  x="958.18" y="415.5" >service::storage_pr..</text>
</g>
<g >
<title>service::client_state::has_access (5 samples, 0.01%)</title><rect x="21.6" y="437" width="0.1" height="15.0" fill="rgb(226,49,49)" rx="2" ry="2" />
<text  x="24.56" y="447.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (8 samples, 0.02%)</title><rect x="956.3" y="389" width="0.2" height="15.0" fill="rgb(223,36,24)" rx="2" ry="2" />
<text  x="959.27" y="399.5" ></text>
</g>
<g >
<title>validation::validate_column_family (354 samples, 0.74%)</title><rect x="811.3" y="389" width="8.7" height="15.0" fill="rgb(254,78,53)" rx="2" ry="2" />
<text  x="814.27" y="399.5" ></text>
</g>
<g >
<title>seastar::future&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry_ptr&gt;::then_impl&lt;utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (89 samples, 0.19%)</title><rect x="729.9" y="373" width="2.2" height="15.0" fill="rgb(209,119,33)" rx="2" ry="2" />
<text  x="732.90" y="383.5" ></text>
</g>
<g >
<title>locator::token_metadata_impl::first_token_index (7 samples, 0.01%)</title><rect x="1086.6" y="277" width="0.2" height="15.0" fill="rgb(251,202,15)" rx="2" ry="2" />
<text  x="1089.59" y="287.5" ></text>
</g>
<g >
<title>reader_permit::impl::on_permit_inactive (9 samples, 0.02%)</title><rect x="1031.7" y="213" width="0.2" height="15.0" fill="rgb(222,196,43)" rx="2" ry="2" />
<text  x="1034.67" y="223.5" ></text>
</g>
<g >
<title>seastar::internal::do_until_state&lt;executor&lt;test_read (11 samples, 0.02%)</title><rect x="24.1" y="517" width="0.3" height="15.0" fill="rgb(208,84,18)" rx="2" ry="2" />
<text  x="27.09" y="527.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.29] (20 samples, 0.04%)</title><rect x="596.9" y="405" width="0.5" height="15.0" fill="rgb(242,110,9)" rx="2" ry="2" />
<text  x="599.88" y="415.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::drop_expired_front (31 samples, 0.07%)</title><rect x="63.6" y="405" width="0.8" height="15.0" fill="rgb(223,44,12)" rx="2" ry="2" />
<text  x="66.58" y="415.5" ></text>
</g>
<g >
<title>service::never_speculating_read_executor::never_speculating_read_executor (190 samples, 0.40%)</title><rect x="1068.7" y="325" width="4.7" height="15.0" fill="rgb(253,27,50)" rx="2" ry="2" />
<text  x="1071.69" y="335.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::digest_read_resolver&gt;::~shared_ptr (11 samples, 0.02%)</title><rect x="992.1" y="325" width="0.3" height="15.0" fill="rgb(232,123,17)" rx="2" ry="2" />
<text  x="995.13" y="335.5" ></text>
</g>
<g >
<title>local_schema_registry (11 samples, 0.02%)</title><rect x="966.5" y="357" width="0.3" height="15.0" fill="rgb(248,210,10)" rx="2" ry="2" />
<text  x="969.55" y="367.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_clustering_bounds (47 samples, 0.10%)</title><rect x="871.6" y="421" width="1.2" height="15.0" fill="rgb(223,37,35)" rx="2" ry="2" />
<text  x="874.61" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_allocate_node&lt;nonwrapping_interval&lt;dht::token&gt;, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; (56 samples, 0.12%)</title><rect x="1159.9" y="453" width="1.4" height="15.0" fill="rgb(235,121,40)" rx="2" ry="2" />
<text  x="1162.91" y="463.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (32 samples, 0.07%)</title><rect x="163.3" y="149" width="0.8" height="15.0" fill="rgb(251,222,17)" rx="2" ry="2" />
<text  x="166.30" y="159.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (28 samples, 0.06%)</title><rect x="822.9" y="405" width="0.6" height="15.0" fill="rgb(238,99,23)" rx="2" ry="2" />
<text  x="825.86" y="415.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;void&gt;::set_urgent_state (39 samples, 0.08%)</title><rect x="48.8" y="485" width="1.0" height="15.0" fill="rgb(254,136,53)" rx="2" ry="2" />
<text  x="51.80" y="495.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (5 samples, 0.01%)</title><rect x="554.1" y="293" width="0.1" height="15.0" fill="rgb(245,56,8)" rx="2" ry="2" />
<text  x="557.07" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (108 samples, 0.23%)</title><rect x="983.5" y="309" width="2.7" height="15.0" fill="rgb(247,195,2)" rx="2" ry="2" />
<text  x="986.54" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (39 samples, 0.08%)</title><rect x="1008.2" y="245" width="1.0" height="15.0" fill="rgb(210,146,20)" rx="2" ry="2" />
<text  x="1011.22" y="255.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (11 samples, 0.02%)</title><rect x="1123.8" y="373" width="0.3" height="15.0" fill="rgb(211,179,21)" rx="2" ry="2" />
<text  x="1126.79" y="383.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector (13 samples, 0.03%)</title><rect x="1072.5" y="293" width="0.3" height="15.0" fill="rgb(226,214,14)" rx="2" ry="2" />
<text  x="1075.51" y="303.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (424 samples, 0.89%)</title><rect x="1178.3" y="629" width="10.5" height="15.0" fill="rgb(216,198,41)" rx="2" ry="2" />
<text  x="1181.31" y="639.5" ></text>
</g>
<g >
<title>compound_type&lt; (10 samples, 0.02%)</title><rect x="908.1" y="389" width="0.2" height="15.0" fill="rgb(222,20,14)" rx="2" ry="2" />
<text  x="911.09" y="399.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::clear (17 samples, 0.04%)</title><rect x="793.1" y="197" width="0.5" height="15.0" fill="rgb(221,4,7)" rx="2" ry="2" />
<text  x="796.14" y="207.5" ></text>
</g>
<g >
<title>cql3::operation::set_value::prepare (13 samples, 0.03%)</title><rect x="20.6" y="421" width="0.3" height="15.0" fill="rgb(216,185,12)" rx="2" ry="2" />
<text  x="23.62" y="431.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::digest_read_result&gt;::clear (7 samples, 0.01%)</title><rect x="982.1" y="341" width="0.1" height="15.0" fill="rgb(242,122,9)" rx="2" ry="2" />
<text  x="985.05" y="351.5" ></text>
</g>
<g >
<title>operator new (52 samples, 0.11%)</title><rect x="834.7" y="405" width="1.3" height="15.0" fill="rgb(218,22,26)" rx="2" ry="2" />
<text  x="837.74" y="415.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::pop_mutation_fragment (58 samples, 0.12%)</title><rect x="297.6" y="261" width="1.4" height="15.0" fill="rgb(215,213,29)" rx="2" ry="2" />
<text  x="300.61" y="271.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::node_size (6 samples, 0.01%)</title><rect x="199.7" y="149" width="0.2" height="15.0" fill="rgb(240,129,24)" rx="2" ry="2" />
<text  x="202.75" y="159.5" ></text>
</g>
<g >
<title>skip_empty_fragments&lt;managed_bytes_basic_view&lt; (5 samples, 0.01%)</title><rect x="928.5" y="341" width="0.1" height="15.0" fill="rgb(232,140,5)" rx="2" ry="2" />
<text  x="931.47" y="351.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate_to_raw_view (5 samples, 0.01%)</title><rect x="904.1" y="373" width="0.2" height="15.0" fill="rgb(240,116,44)" rx="2" ry="2" />
<text  x="907.15" y="383.5" ></text>
</g>
<g >
<title>visit&lt;(anonymous namespace)::validate_visitor&lt;managed_bytes_basic_view&lt; (26 samples, 0.05%)</title><rect x="884.6" y="261" width="0.6" height="15.0" fill="rgb(205,113,24)" rx="2" ry="2" />
<text  x="887.56" y="271.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;void&gt;::set_value&lt;&gt; (5 samples, 0.01%)</title><rect x="703.7" y="485" width="0.1" height="15.0" fill="rgb(209,212,5)" rx="2" ry="2" />
<text  x="706.65" y="495.5" ></text>
</g>
<g >
<title>operator delete (67 samples, 0.14%)</title><rect x="572.5" y="341" width="1.7" height="15.0" fill="rgb(213,50,49)" rx="2" ry="2" />
<text  x="575.54" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (9 samples, 0.02%)</title><rect x="934.4" y="389" width="0.2" height="15.0" fill="rgb(206,93,27)" rx="2" ry="2" />
<text  x="937.38" y="399.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_M_reset (52 samples, 0.11%)</title><rect x="1116.6" y="373" width="1.3" height="15.0" fill="rgb(212,24,44)" rx="2" ry="2" />
<text  x="1119.61" y="383.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_Optional_payload_base (13 samples, 0.03%)</title><rect x="733.5" y="357" width="0.3" height="15.0" fill="rgb(240,76,17)" rx="2" ry="2" />
<text  x="736.47" y="367.5" ></text>
</g>
<g >
<title>bytes_view_hasher::update (8 samples, 0.02%)</title><rect x="720.1" y="309" width="0.2" height="15.0" fill="rgb(246,211,21)" rx="2" ry="2" />
<text  x="723.07" y="319.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (20 samples, 0.04%)</title><rect x="355.8" y="149" width="0.5" height="15.0" fill="rgb(246,157,29)" rx="2" ry="2" />
<text  x="358.82" y="159.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (57 samples, 0.12%)</title><rect x="15.7" y="373" width="1.4" height="15.0" fill="rgb(243,57,2)" rx="2" ry="2" />
<text  x="18.67" y="383.5" ></text>
</g>
<g >
<title>partition_entry::read (51 samples, 0.11%)</title><rect x="514.9" y="309" width="1.3" height="15.0" fill="rgb(253,107,27)" rx="2" ry="2" />
<text  x="517.92" y="319.5" ></text>
</g>
<g >
<title>compound_type&lt; (101 samples, 0.21%)</title><rect x="927.1" y="357" width="2.5" height="15.0" fill="rgb(233,34,28)" rx="2" ry="2" />
<text  x="930.08" y="367.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (224 samples, 0.47%)</title><rect x="396.0" y="213" width="5.6" height="15.0" fill="rgb(211,11,47)" rx="2" ry="2" />
<text  x="399.01" y="223.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::~disable_abort_on_alloc_failure_temporarily (5 samples, 0.01%)</title><rect x="248.2" y="213" width="0.1" height="15.0" fill="rgb(254,129,19)" rx="2" ry="2" />
<text  x="251.18" y="223.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::digest_read_result&gt;::then_wrapped_common&lt;true, void, service::abstract_read_executor::execute (123 samples, 0.26%)</title><rect x="979.0" y="341" width="3.0" height="15.0" fill="rgb(225,147,13)" rx="2" ry="2" />
<text  x="981.95" y="351.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (85 samples, 0.18%)</title><rect x="487.0" y="325" width="2.1" height="15.0" fill="rgb(240,209,20)" rx="2" ry="2" />
<text  x="489.99" y="335.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (6 samples, 0.01%)</title><rect x="564.3" y="309" width="0.2" height="15.0" fill="rgb(246,120,39)" rx="2" ry="2" />
<text  x="567.34" y="319.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::whereClause (18 samples, 0.04%)</title><rect x="19.4" y="357" width="0.4" height="15.0" fill="rgb(246,166,9)" rx="2" ry="2" />
<text  x="22.36" y="367.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::at (21 samples, 0.04%)</title><rect x="1098.2" y="341" width="0.5" height="15.0" fill="rgb(245,169,34)" rx="2" ry="2" />
<text  x="1101.21" y="351.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (31 samples, 0.07%)</title><rect x="1142.3" y="389" width="0.8" height="15.0" fill="rgb(241,161,35)" rx="2" ry="2" />
<text  x="1145.31" y="399.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, std::optional&lt;auth::resource&gt;&amp;&amp;, service::client_state::check_has_permission (5 samples, 0.01%)</title><rect x="801.5" y="325" width="0.1" height="15.0" fill="rgb(215,90,32)" rx="2" ry="2" />
<text  x="804.46" y="335.5" ></text>
</g>
<g >
<title>seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;::swap (37 samples, 0.08%)</title><rect x="740.6" y="405" width="0.9" height="15.0" fill="rgb(235,79,16)" rx="2" ry="2" />
<text  x="743.57" y="415.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (6 samples, 0.01%)</title><rect x="1101.9" y="341" width="0.2" height="15.0" fill="rgb(246,58,17)" rx="2" ry="2" />
<text  x="1104.92" y="351.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (10 samples, 0.02%)</title><rect x="284.3" y="357" width="0.2" height="15.0" fill="rgb(239,0,10)" rx="2" ry="2" />
<text  x="287.26" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (12 samples, 0.03%)</title><rect x="648.6" y="437" width="0.3" height="15.0" fill="rgb(206,193,15)" rx="2" ry="2" />
<text  x="651.56" y="447.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (5 samples, 0.01%)</title><rect x="17.8" y="309" width="0.1" height="15.0" fill="rgb(218,84,1)" rx="2" ry="2" />
<text  x="20.80" y="319.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::digest_read_result&gt;::get0 (9 samples, 0.02%)</title><rect x="685.9" y="453" width="0.2" height="15.0" fill="rgb(220,112,8)" rx="2" ry="2" />
<text  x="688.87" y="463.5" ></text>
</g>
<g >
<title>ser::safe_serialize_as_uint32&lt;bytes_ostream&gt; (8 samples, 0.02%)</title><rect x="352.9" y="165" width="0.2" height="15.0" fill="rgb(248,85,11)" rx="2" ry="2" />
<text  x="355.93" y="175.5" ></text>
</g>
<g >
<title>schema::column_at (56 samples, 0.12%)</title><rect x="328.8" y="181" width="1.4" height="15.0" fill="rgb(248,220,17)" rx="2" ry="2" />
<text  x="331.83" y="191.5" ></text>
</g>
<g >
<title>operator delete (30 samples, 0.06%)</title><rect x="894.6" y="309" width="0.8" height="15.0" fill="rgb(234,33,25)" rx="2" ry="2" />
<text  x="897.62" y="319.5" ></text>
</g>
<g >
<title>utils::approx_exponential_histogram&lt;512ul, 33554432ul, 4ul&gt;::add (9 samples, 0.02%)</title><rect x="596.3" y="421" width="0.2" height="15.0" fill="rgb(251,225,18)" rx="2" ry="2" />
<text  x="599.29" y="431.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::~_Deque_base (9 samples, 0.02%)</title><rect x="610.4" y="405" width="0.2" height="15.0" fill="rgb(209,114,12)" rx="2" ry="2" />
<text  x="613.35" y="415.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (52 samples, 0.11%)</title><rect x="233.2" y="165" width="1.2" height="15.0" fill="rgb(213,62,48)" rx="2" ry="2" />
<text  x="236.15" y="175.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (10 samples, 0.02%)</title><rect x="562.9" y="293" width="0.2" height="15.0" fill="rgb(230,130,15)" rx="2" ry="2" />
<text  x="565.86" y="303.5" ></text>
</g>
<g >
<title>std::forward_as_tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const&amp;, auth::resource&gt; (5 samples, 0.01%)</title><rect x="808.4" y="389" width="0.1" height="15.0" fill="rgb(240,66,6)" rx="2" ry="2" />
<text  x="811.40" y="399.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (4,970 samples, 10.43%)</title><rect x="289.9" y="373" width="123.1" height="15.0" fill="rgb(235,164,32)" rx="2" ry="2" />
<text  x="292.91" y="383.5" >flat_mutation_r..</text>
</g>
<g >
<title>make_stable_flattened_mutations_consumer&lt;compact_for_query&lt; (91 samples, 0.19%)</title><rect x="413.4" y="373" width="2.2" height="15.0" fill="rgb(239,98,35)" rx="2" ry="2" />
<text  x="416.37" y="383.5" ></text>
</g>
<g >
<title>std::__find_if&lt;gms::inet_address*, __gnu_cxx::__ops::_Iter_equals_val&lt;gms::inet_address const&gt; &gt; (36 samples, 0.08%)</title><rect x="1096.7" y="309" width="0.9" height="15.0" fill="rgb(209,170,25)" rx="2" ry="2" />
<text  x="1099.70" y="319.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment&lt;schema const&amp;, rows_entry const&amp;&gt; (1,865 samples, 3.91%)</title><rect x="162.3" y="181" width="46.1" height="15.0" fill="rgb(246,131,30)" rx="2" ry="2" />
<text  x="165.26" y="191.5" >muta..</text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (47 samples, 0.10%)</title><rect x="748.7" y="341" width="1.2" height="15.0" fill="rgb(242,4,11)" rx="2" ry="2" />
<text  x="751.69" y="351.5" ></text>
</g>
<g >
<title>mutation_reader_merger::close (8 samples, 0.02%)</title><rect x="1175.3" y="421" width="0.2" height="15.0" fill="rgb(236,158,8)" rx="2" ry="2" />
<text  x="1178.32" y="431.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (8 samples, 0.02%)</title><rect x="691.0" y="469" width="0.2" height="15.0" fill="rgb(236,86,41)" rx="2" ry="2" />
<text  x="694.00" y="479.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;single_node_cql_env::core_local_state&gt;::local (6 samples, 0.01%)</title><rect x="827.3" y="437" width="0.2" height="15.0" fill="rgb(248,210,4)" rx="2" ry="2" />
<text  x="830.34" y="447.5" ></text>
</g>
<g >
<title>operator delete (30 samples, 0.06%)</title><rect x="670.0" y="485" width="0.7" height="15.0" fill="rgb(213,111,1)" rx="2" ry="2" />
<text  x="673.00" y="495.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;void&gt;::satisfy_with_result_of&lt;seastar::future&lt;service::digest_read_result&gt;::then_wrapped_nrvo&lt;void, service::abstract_read_executor::execute (237 samples, 0.50%)</title><rect x="683.5" y="485" width="5.8" height="15.0" fill="rgb(233,143,18)" rx="2" ry="2" />
<text  x="686.47" y="495.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::get0 (19 samples, 0.04%)</title><rect x="71.9" y="453" width="0.5" height="15.0" fill="rgb(239,41,41)" rx="2" ry="2" />
<text  x="74.88" y="463.5" ></text>
</g>
<g >
<title>bound_view::from_range&lt;nonwrapping_interval&gt; (35 samples, 0.07%)</title><rect x="211.7" y="133" width="0.9" height="15.0" fill="rgb(244,42,11)" rx="2" ry="2" />
<text  x="214.69" y="143.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (11,264 samples, 23.64%)</title><rect x="862.5" y="453" width="279.0" height="15.0" fill="rgb(232,54,38)" rx="2" ry="2" />
<text  x="865.55" y="463.5" >seastar::noncopyable_function&lt;seastar..</text>
</g>
<g >
<title>cql3::query_options::fill_value_views (143 samples, 0.30%)</title><rect x="841.4" y="405" width="3.5" height="15.0" fill="rgb(219,172,21)" rx="2" ry="2" />
<text  x="844.38" y="415.5" ></text>
</g>
<g >
<title>operator delete (23 samples, 0.05%)</title><rect x="1170.8" y="453" width="0.6" height="15.0" fill="rgb(226,163,24)" rx="2" ry="2" />
<text  x="1173.78" y="463.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (75 samples, 0.16%)</title><rect x="1122.9" y="405" width="1.8" height="15.0" fill="rgb(230,7,47)" rx="2" ry="2" />
<text  x="1125.87" y="415.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (5 samples, 0.01%)</title><rect x="531.6" y="325" width="0.1" height="15.0" fill="rgb(209,135,54)" rx="2" ry="2" />
<text  x="534.56" y="335.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::trivial_direct_move&lt;8ul&gt; (31 samples, 0.07%)</title><rect x="988.8" y="261" width="0.8" height="15.0" fill="rgb(217,57,52)" rx="2" ry="2" />
<text  x="991.79" y="271.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (20 samples, 0.04%)</title><rect x="853.2" y="501" width="0.5" height="15.0" fill="rgb(215,224,54)" rx="2" ry="2" />
<text  x="856.24" y="511.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (12 samples, 0.03%)</title><rect x="738.3" y="261" width="0.3" height="15.0" fill="rgb(229,108,5)" rx="2" ry="2" />
<text  x="741.34" y="271.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::make_ready&lt; (10 samples, 0.02%)</title><rect x="853.7" y="501" width="0.3" height="15.0" fill="rgb(233,71,35)" rx="2" ry="2" />
<text  x="856.73" y="511.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (14 samples, 0.03%)</title><rect x="680.7" y="309" width="0.3" height="15.0" fill="rgb(231,178,33)" rx="2" ry="2" />
<text  x="683.70" y="319.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::clear (5 samples, 0.01%)</title><rect x="707.3" y="501" width="0.1" height="15.0" fill="rgb(222,128,21)" rx="2" ry="2" />
<text  x="710.29" y="511.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnFamilyName (6 samples, 0.01%)</title><rect x="17.3" y="357" width="0.1" height="15.0" fill="rgb(252,93,8)" rx="2" ry="2" />
<text  x="20.28" y="367.5" ></text>
</g>
<g >
<title>ser::writer_of_std__optional__qr_cell&lt;bytes_ostream&gt;::write (88 samples, 0.18%)</title><rect x="360.2" y="165" width="2.2" height="15.0" fill="rgb(206,26,11)" rx="2" ry="2" />
<text  x="363.21" y="175.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (5 samples, 0.01%)</title><rect x="408.3" y="277" width="0.2" height="15.0" fill="rgb(230,61,6)" rx="2" ry="2" />
<text  x="411.34" y="287.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_result_local (1,951 samples, 4.09%)</title><rect x="1000.7" y="293" width="48.3" height="15.0" fill="rgb(223,40,26)" rx="2" ry="2" />
<text  x="1003.67" y="303.5" >serv..</text>
</g>
<g >
<title>reader_permit::impl::on_admission (35 samples, 0.07%)</title><rect x="62.7" y="405" width="0.9" height="15.0" fill="rgb(240,129,53)" rx="2" ry="2" />
<text  x="65.72" y="415.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (95 samples, 0.20%)</title><rect x="988.0" y="277" width="2.3" height="15.0" fill="rgb(243,172,18)" rx="2" ry="2" />
<text  x="990.97" y="287.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (32 samples, 0.07%)</title><rect x="1103.6" y="373" width="0.8" height="15.0" fill="rgb(216,156,48)" rx="2" ry="2" />
<text  x="1106.58" y="383.5" ></text>
</g>
<g >
<title>seastar::reactor_backend_aio::await_events (32 samples, 0.07%)</title><rect x="1176.7" y="485" width="0.8" height="15.0" fill="rgb(209,33,8)" rx="2" ry="2" />
<text  x="1179.73" y="495.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::get_mutations (20 samples, 0.04%)</title><rect x="856.5" y="389" width="0.5" height="15.0" fill="rgb(234,110,42)" rx="2" ry="2" />
<text  x="859.48" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value_view, std::allocator&lt;cql3::raw_value_view&gt; &gt;::~vector (26 samples, 0.05%)</title><rect x="668.9" y="453" width="0.7" height="15.0" fill="rgb(214,10,35)" rx="2" ry="2" />
<text  x="671.91" y="463.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (11 samples, 0.02%)</title><rect x="545.3" y="421" width="0.2" height="15.0" fill="rgb(211,229,8)" rx="2" ry="2" />
<text  x="548.25" y="431.5" ></text>
</g>
<g >
<title>boost::intrusive::bstbase&lt;boost::intrusive::mhtraits&lt;range_tombstone_entry, boost::intrusive::set_member_hook&lt;boost::intrusive::link_mode&lt; (6 samples, 0.01%)</title><rect x="553.1" y="309" width="0.1" height="15.0" fill="rgb(242,208,41)" rx="2" ry="2" />
<text  x="556.08" y="319.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (6 samples, 0.01%)</title><rect x="802.8" y="293" width="0.2" height="15.0" fill="rgb(217,220,21)" rx="2" ry="2" />
<text  x="805.82" y="303.5" ></text>
</g>
<g >
<title>abstract_type::without_reversed (7 samples, 0.01%)</title><rect x="906.3" y="389" width="0.2" height="15.0" fill="rgb(207,63,27)" rx="2" ry="2" />
<text  x="909.28" y="399.5" ></text>
</g>
<g >
<title>std::pair&lt;auth::authenticated_user, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;::pair (11 samples, 0.02%)</title><rect x="729.1" y="389" width="0.2" height="15.0" fill="rgb(230,23,12)" rx="2" ry="2" />
<text  x="732.06" y="399.5" ></text>
</g>
<g >
<title>reader_permit::impl::on_permit_inactive (6 samples, 0.01%)</title><rect x="1024.7" y="197" width="0.1" height="15.0" fill="rgb(216,83,46)" rx="2" ry="2" />
<text  x="1027.69" y="207.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;dht::token, std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt;, std::allocator&lt;std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;dht::token&gt;, std::hash&lt;dht::token&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (193 samples, 0.41%)</title><rect x="1087.8" y="261" width="4.8" height="15.0" fill="rgb(206,122,43)" rx="2" ry="2" />
<text  x="1090.83" y="271.5" ></text>
</g>
<g >
<title>mutation_reader_merger::maybe_add_readers_at_partition_boundary (16 samples, 0.03%)</title><rect x="116.7" y="309" width="0.4" height="15.0" fill="rgb(239,183,34)" rx="2" ry="2" />
<text  x="119.72" y="319.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;schema const&gt;::operator= (10 samples, 0.02%)</title><rect x="1005.8" y="261" width="0.2" height="15.0" fill="rgb(253,163,52)" rx="2" ry="2" />
<text  x="1008.80" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (31 samples, 0.07%)</title><rect x="968.3" y="325" width="0.8" height="15.0" fill="rgb(228,211,52)" rx="2" ry="2" />
<text  x="971.28" y="335.5" ></text>
</g>
<g >
<title>std::type_info::operator== (7 samples, 0.01%)</title><rect x="1173.9" y="405" width="0.2" height="15.0" fill="rgb(230,178,36)" rx="2" ry="2" />
<text  x="1176.93" y="415.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (6 samples, 0.01%)</title><rect x="987.8" y="277" width="0.2" height="15.0" fill="rgb(208,132,48)" rx="2" ry="2" />
<text  x="990.82" y="287.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (28 samples, 0.06%)</title><rect x="758.7" y="341" width="0.7" height="15.0" fill="rgb(241,226,42)" rx="2" ry="2" />
<text  x="761.75" y="351.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::key_is_in_relation (31 samples, 0.07%)</title><rect x="645.2" y="453" width="0.8" height="15.0" fill="rgb(211,127,29)" rx="2" ry="2" />
<text  x="648.22" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::~vector (22 samples, 0.05%)</title><rect x="574.2" y="357" width="0.6" height="15.0" fill="rgb(225,49,29)" rx="2" ry="2" />
<text  x="577.22" y="367.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (20 samples, 0.04%)</title><rect x="39.4" y="453" width="0.5" height="15.0" fill="rgb(208,4,53)" rx="2" ry="2" />
<text  x="42.39" y="463.5" ></text>
</g>
<g >
<title>sstring_hash::operator (13 samples, 0.03%)</title><rect x="839.1" y="357" width="0.3" height="15.0" fill="rgb(248,132,26)" rx="2" ry="2" />
<text  x="842.12" y="367.5" ></text>
</g>
<g >
<title>posix_memalign (40 samples, 0.08%)</title><rect x="193.6" y="85" width="1.0" height="15.0" fill="rgb(238,196,36)" rx="2" ry="2" />
<text  x="196.61" y="95.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (17 samples, 0.04%)</title><rect x="1132.9" y="373" width="0.4" height="15.0" fill="rgb(232,187,5)" rx="2" ry="2" />
<text  x="1135.92" y="383.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (17 samples, 0.04%)</title><rect x="932.8" y="405" width="0.5" height="15.0" fill="rgb(234,113,0)" rx="2" ry="2" />
<text  x="935.85" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (21 samples, 0.04%)</title><rect x="40.2" y="453" width="0.6" height="15.0" fill="rgb(213,227,36)" rx="2" ry="2" />
<text  x="43.23" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::allocate_large (6 samples, 0.01%)</title><rect x="543.7" y="293" width="0.2" height="15.0" fill="rgb(210,127,2)" rx="2" ry="2" />
<text  x="546.72" y="303.5" ></text>
</g>
<g >
<title>memtable_entry::snapshot (74 samples, 0.16%)</title><rect x="514.5" y="325" width="1.9" height="15.0" fill="rgb(220,218,33)" rx="2" ry="2" />
<text  x="517.55" y="335.5" ></text>
</g>
<g >
<title>mutation_reader_merger::~mutation_reader_merger (312 samples, 0.65%)</title><rect x="568.8" y="373" width="7.7" height="15.0" fill="rgb(247,127,7)" rx="2" ry="2" />
<text  x="571.75" y="383.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql_transport::messages::result_message::rows&gt;::~shared_ptr_count_for (337 samples, 0.71%)</title><rect x="33.7" y="485" width="8.3" height="15.0" fill="rgb(240,0,40)" rx="2" ry="2" />
<text  x="36.67" y="495.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::deallocate (67 samples, 0.14%)</title><rect x="280.7" y="309" width="1.7" height="15.0" fill="rgb(234,93,21)" rx="2" ry="2" />
<text  x="283.70" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (19 samples, 0.04%)</title><rect x="846.8" y="405" width="0.4" height="15.0" fill="rgb(236,107,21)" rx="2" ry="2" />
<text  x="849.78" y="415.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::allocate (46 samples, 0.10%)</title><rect x="503.4" y="213" width="1.1" height="15.0" fill="rgb(215,138,6)" rx="2" ry="2" />
<text  x="506.35" y="223.5" ></text>
</g>
<g >
<title>database::find_column_family (66 samples, 0.14%)</title><rect x="1056.0" y="341" width="1.7" height="15.0" fill="rgb(223,228,8)" rx="2" ry="2" />
<text  x="1059.04" y="351.5" ></text>
</g>
<g >
<title>auth::data_resource_view::data_resource_view (7 samples, 0.01%)</title><rect x="790.6" y="133" width="0.2" height="15.0" fill="rgb(210,31,54)" rx="2" ry="2" />
<text  x="793.64" y="143.5" ></text>
</g>
<g >
<title>seastar::repeat&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (7,089 samples, 14.88%)</title><rect x="109.0" y="373" width="175.5" height="15.0" fill="rgb(237,93,52)" rx="2" ry="2" />
<text  x="111.97" y="383.5" >seastar::repeat&lt;mergin..</text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (13 samples, 0.03%)</title><rect x="210.9" y="117" width="0.4" height="15.0" fill="rgb(215,180,13)" rx="2" ry="2" />
<text  x="213.94" y="127.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;utils::small_vector&lt;service::storage_proxy::unique_response_handler, 1ul&gt; &gt; &gt;::invoke&lt;service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;, service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (19 samples, 0.04%)</title><rect x="1142.6" y="277" width="0.5" height="15.0" fill="rgb(239,54,40)" rx="2" ry="2" />
<text  x="1145.61" y="287.5" ></text>
</g>
<g >
<title>std::construct_at&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::entry&gt; (10 samples, 0.02%)</title><rect x="71.3" y="421" width="0.2" height="15.0" fill="rgb(223,5,10)" rx="2" ry="2" />
<text  x="74.26" y="431.5" ></text>
</g>
<g >
<title>cql3::to_managed_bytes_opt (12 samples, 0.03%)</title><rect x="899.7" y="357" width="0.3" height="15.0" fill="rgb(248,148,0)" rx="2" ry="2" />
<text  x="902.74" y="367.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (13 samples, 0.03%)</title><rect x="1060.5" y="261" width="0.4" height="15.0" fill="rgb(210,145,16)" rx="2" ry="2" />
<text  x="1063.55" y="271.5" ></text>
</g>
<g >
<title>operator new (45 samples, 0.09%)</title><rect x="1160.2" y="437" width="1.1" height="15.0" fill="rgb(254,144,23)" rx="2" ry="2" />
<text  x="1163.19" y="447.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (5 samples, 0.01%)</title><rect x="540.4" y="357" width="0.1" height="15.0" fill="rgb(208,50,23)" rx="2" ry="2" />
<text  x="543.40" y="367.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (206 samples, 0.43%)</title><rect x="735.0" y="341" width="5.1" height="15.0" fill="rgb(247,44,42)" rx="2" ry="2" />
<text  x="737.95" y="351.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::clear (15 samples, 0.03%)</title><rect x="389.3" y="229" width="0.3" height="15.0" fill="rgb(253,193,31)" rx="2" ry="2" />
<text  x="392.28" y="239.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIN7seastar10shared_ptrIN4cql34termEEEEER18overloaded_functorIJZNS6_4expr12prepare_termERKNSB_10expressionER8databaseRKNS4_13basic_sstringIcjLj15ELb1EEENS4_13lw_shared_ptrINS6_20column_specificationEEEE3$_0ZNSB_12prepare_termESE_SG_SK_SN_E3$_1ZNSB_12prepare_termESE_SG_SK_SN_E3$_2ZNSB_12prepare_termESE_SG_SK_SN_E3$_3ZNSB_12prepare_termESE_SG_SK_SN_E3$_4ZNSB_12prepare_termESE_SG_SK_SN_E3$_5ZNSB_12prepare_termESE_SG_SK_SN_E3$_6ZNSB_12prepare_termESE_SG_SK_SN_E3$_7ZNSB_12prepare_termESE_SG_SK_SN_E3$_8ZNSB_12prepare_termESE_SG_SK_SN_E3$_9ZNSB_12prepare_termESE_SG_SK_SN_E4$_10ZNSB_12prepare_termESE_SG_SK_SN_E4$_11ZNSB_12prepare_termESE_SG_SK_SN_E4$_12ZNSB_12prepare_termESE_SG_SK_SN_E4$_13ZNSB_12prepare_termESE_SG_SK_SN_E4$_14ZNSB_12prepare_termESE_SG_SK_SN_E4$_15EERSt7variantIJNSB_11conjunctionENSB_15binary_operatorENSB_12column_valueENSB_5tokenENSB_21unresolved_identifierENSB_25column_mutation_attributeENSB_13function_callENSB_4castENSB_15field_selectionENSB_4nullENSB_13bind_variableENSB_16untyped_constantENSB_8constantENSB_17tuple_constructorENSB_22collection_constructorENSB_20usertype_constructorEEEEJEEESt16integer_sequenceImJLm11EEEE14__visit_invokeES15_S1O_ (8 samples, 0.02%)</title><rect x="20.7" y="389" width="0.2" height="15.0" fill="rgb(206,20,24)" rx="2" ry="2" />
<text  x="23.70" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (13 samples, 0.03%)</title><rect x="1035.4" y="181" width="0.3" height="15.0" fill="rgb(215,184,36)" rx="2" ry="2" />
<text  x="1038.36" y="191.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::digests_match (7 samples, 0.01%)</title><rect x="700.0" y="421" width="0.2" height="15.0" fill="rgb(248,177,37)" rx="2" ry="2" />
<text  x="703.04" y="431.5" ></text>
</g>
<g >
<title>utils::timed_rate_moving_average_and_histogram::mark (74 samples, 0.16%)</title><rect x="596.6" y="421" width="1.9" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="599.63" y="431.5" ></text>
</g>
<g >
<title>absl::hash_internal::AbslHashValue&lt;absl::hash_internal::HashState&gt; (12 samples, 0.03%)</title><rect x="839.1" y="341" width="0.3" height="15.0" fill="rgb(250,94,50)" rx="2" ry="2" />
<text  x="842.12" y="351.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment&lt;schema const&amp;, rows_entry const&amp;&gt; (5 samples, 0.01%)</title><rect x="159.7" y="197" width="0.1" height="15.0" fill="rgb(248,218,7)" rx="2" ry="2" />
<text  x="162.66" y="207.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::alloc (177 samples, 0.37%)</title><rect x="185.5" y="69" width="4.4" height="15.0" fill="rgb(239,160,32)" rx="2" ry="2" />
<text  x="188.51" y="79.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::validate (7 samples, 0.01%)</title><rect x="820.6" y="421" width="0.2" height="15.0" fill="rgb(226,114,14)" rx="2" ry="2" />
<text  x="823.63" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (11 samples, 0.02%)</title><rect x="44.4" y="485" width="0.2" height="15.0" fill="rgb(211,218,16)" rx="2" ry="2" />
<text  x="47.37" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::~vector (6 samples, 0.01%)</title><rect x="570.7" y="341" width="0.1" height="15.0" fill="rgb(252,27,2)" rx="2" ry="2" />
<text  x="573.66" y="351.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a21b1fbb2f481671c80560d96a8acc1cf916b468] (5 samples, 0.01%)</title><rect x="342.4" y="165" width="0.1" height="15.0" fill="rgb(240,19,18)" rx="2" ry="2" />
<text  x="345.38" y="175.5" ></text>
</g>
<g >
<title>utils::tuple_hash::operator (41 samples, 0.09%)</title><rect x="815.7" y="309" width="1.0" height="15.0" fill="rgb(207,136,51)" rx="2" ry="2" />
<text  x="818.70" y="319.5" ></text>
</g>
<g >
<title>cql3::authorized_prepared_statements_cache_key::hash (118 samples, 0.25%)</title><rect x="737.0" y="325" width="3.0" height="15.0" fill="rgb(221,116,49)" rx="2" ry="2" />
<text  x="740.03" y="335.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_last_fragment_kind, 4ul&gt;::small_vector (31 samples, 0.07%)</title><rect x="449.3" y="261" width="0.8" height="15.0" fill="rgb(244,68,44)" rx="2" ry="2" />
<text  x="452.30" y="271.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (23 samples, 0.05%)</title><rect x="134.5" y="261" width="0.6" height="15.0" fill="rgb(241,57,29)" rx="2" ry="2" />
<text  x="137.53" y="271.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (5 samples, 0.01%)</title><rect x="1097.5" y="293" width="0.1" height="15.0" fill="rgb(249,180,43)" rx="2" ry="2" />
<text  x="1100.47" y="303.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;std::pair&lt;seastar::shared_ptr&lt;service::abstract_read_executor&gt;, nonwrapping_interval&lt;dht::token&gt; &gt;, 1ul&gt;::clear (166 samples, 0.35%)</title><rect x="1170.6" y="469" width="4.1" height="15.0" fill="rgb(211,26,45)" rx="2" ry="2" />
<text  x="1173.59" y="479.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::move_it (6 samples, 0.01%)</title><rect x="633.7" y="469" width="0.2" height="15.0" fill="rgb(236,218,41)" rx="2" ry="2" />
<text  x="636.73" y="479.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::net::inet_address&gt;::operator (6 samples, 0.01%)</title><rect x="702.9" y="405" width="0.2" height="15.0" fill="rgb(236,166,19)" rx="2" ry="2" />
<text  x="705.93" y="415.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::alloc (43 samples, 0.09%)</title><rect x="193.5" y="101" width="1.1" height="15.0" fill="rgb(239,161,24)" rx="2" ry="2" />
<text  x="196.53" y="111.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;compact_for_query&lt; (8 samples, 0.02%)</title><rect x="415.4" y="357" width="0.2" height="15.0" fill="rgb(220,61,22)" rx="2" ry="2" />
<text  x="418.43" y="367.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperation (78 samples, 0.16%)</title><rect x="17.4" y="357" width="2.0" height="15.0" fill="rgb(219,33,38)" rx="2" ry="2" />
<text  x="20.43" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value_view, std::allocator&lt;cql3::raw_value_view&gt; &gt;::_M_realloc_insert&lt;cql3::raw_value_view&gt; (8 samples, 0.02%)</title><rect x="842.0" y="389" width="0.2" height="15.0" fill="rgb(247,166,2)" rx="2" ry="2" />
<text  x="845.02" y="399.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (5 samples, 0.01%)</title><rect x="1026.7" y="149" width="0.1" height="15.0" fill="rgb(236,133,41)" rx="2" ry="2" />
<text  x="1029.72" y="159.5" ></text>
</g>
<g >
<title>seastar::basic_semaphore&lt;seastar::semaphore_default_exception_factory, std::chrono::_V2::steady_clock&gt;::wait (7 samples, 0.01%)</title><rect x="71.6" y="453" width="0.1" height="15.0" fill="rgb(221,87,22)" rx="2" ry="2" />
<text  x="74.56" y="463.5" ></text>
</g>
<g >
<title>auth::data_resource_view::table (5 samples, 0.01%)</title><rect x="790.9" y="133" width="0.1" height="15.0" fill="rgb(241,50,8)" rx="2" ry="2" />
<text  x="793.91" y="143.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;,  (180 samples, 0.38%)</title><rect x="718.2" y="405" width="4.4" height="15.0" fill="rgb(237,64,11)" rx="2" ry="2" />
<text  x="721.16" y="415.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (27 samples, 0.06%)</title><rect x="781.7" y="133" width="0.7" height="15.0" fill="rgb(209,124,9)" rx="2" ry="2" />
<text  x="784.73" y="143.5" ></text>
</g>
<g >
<title>std::__equal&lt;false&gt;::equal&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;*, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const*&gt; (74 samples, 0.16%)</title><rect x="787.1" y="149" width="1.9" height="15.0" fill="rgb(228,9,11)" rx="2" ry="2" />
<text  x="790.15" y="159.5" ></text>
</g>
<g >
<title>auth::get_permissions (1,100 samples, 2.31%)</title><rect x="773.5" y="309" width="27.2" height="15.0" fill="rgb(229,156,18)" rx="2" ry="2" />
<text  x="776.48" y="319.5" >a..</text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;service::storage_proxy_coordinator_query_result&gt;, seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::finally_body&lt;service::storage_proxy::do_query (9 samples, 0.02%)</title><rect x="23.2" y="517" width="0.2" height="15.0" fill="rgb(250,18,50)" rx="2" ry="2" />
<text  x="26.17" y="527.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (20 samples, 0.04%)</title><rect x="131.8" y="229" width="0.4" height="15.0" fill="rgb(222,143,5)" rx="2" ry="2" />
<text  x="134.75" y="239.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_prepared (5,419 samples, 11.37%)</title><rect x="713.7" y="469" width="134.2" height="15.0" fill="rgb(249,78,45)" rx="2" ry="2" />
<text  x="716.71" y="479.5" >single_node_cql_..</text>
</g>
<g >
<title>seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::expand (11 samples, 0.02%)</title><rect x="282.5" y="325" width="0.3" height="15.0" fill="rgb(229,61,3)" rx="2" ry="2" />
<text  x="285.53" y="335.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_destroy_data_aux (6 samples, 0.01%)</title><rect x="613.0" y="373" width="0.1" height="15.0" fill="rgb(248,229,53)" rx="2" ry="2" />
<text  x="616.00" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (18 samples, 0.04%)</title><rect x="776.6" y="229" width="0.4" height="15.0" fill="rgb(237,0,38)" rx="2" ry="2" />
<text  x="779.55" y="239.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (10 samples, 0.02%)</title><rect x="1121.3" y="325" width="0.2" height="15.0" fill="rgb(209,93,39)" rx="2" ry="2" />
<text  x="1124.29" y="335.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (26 samples, 0.05%)</title><rect x="418.3" y="405" width="0.6" height="15.0" fill="rgb(240,170,31)" rx="2" ry="2" />
<text  x="421.30" y="415.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (5 samples, 0.01%)</title><rect x="892.0" y="261" width="0.1" height="15.0" fill="rgb(226,129,9)" rx="2" ry="2" />
<text  x="895.02" y="271.5" ></text>
</g>
<g >
<title>operator new (6 samples, 0.01%)</title><rect x="993.8" y="277" width="0.1" height="15.0" fill="rgb(217,128,5)" rx="2" ry="2" />
<text  x="996.76" y="287.5" ></text>
</g>
<g >
<title>cql3::restrictions::partition_key_restrictions::needs_filtering (15 samples, 0.03%)</title><rect x="870.3" y="421" width="0.3" height="15.0" fill="rgb(239,129,15)" rx="2" ry="2" />
<text  x="873.25" y="431.5" ></text>
</g>
<g >
<title>seastar::internal::do_until_state&lt;executor&lt;test_read (5,846 samples, 12.27%)</title><rect x="708.4" y="501" width="144.7" height="15.0" fill="rgb(237,103,10)" rx="2" ry="2" />
<text  x="711.38" y="511.5" >seastar::internal:..</text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_pausable_in_thread&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;sstables::sstable_writer&gt; &gt;, flat_mutation_reader::no_filter&gt; (12 samples, 0.03%)</title><rect x="21.9" y="501" width="0.3" height="15.0" fill="rgb(249,59,11)" rx="2" ry="2" />
<text  x="24.94" y="511.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::~_Deque_base (48 samples, 0.10%)</title><rect x="611.7" y="389" width="1.2" height="15.0" fill="rgb(207,208,17)" rx="2" ry="2" />
<text  x="614.69" y="399.5" ></text>
</g>
<g >
<title>cql3::query_options::get_value_at (5 samples, 0.01%)</title><rect x="893.3" y="293" width="0.1" height="15.0" fill="rgb(249,22,51)" rx="2" ry="2" />
<text  x="896.25" y="303.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (5 samples, 0.01%)</title><rect x="206.1" y="165" width="0.1" height="15.0" fill="rgb(229,22,27)" rx="2" ry="2" />
<text  x="209.09" y="175.5" ></text>
</g>
<g >
<title>visit&lt;(anonymous namespace)::from_string_visitor&gt; (6 samples, 0.01%)</title><rect x="20.7" y="357" width="0.2" height="15.0" fill="rgb(250,161,1)" rx="2" ry="2" />
<text  x="23.72" y="367.5" ></text>
</g>
<g >
<title>reader_permit::consume_memory (18 samples, 0.04%)</title><rect x="151.2" y="213" width="0.4" height="15.0" fill="rgb(246,160,9)" rx="2" ry="2" />
<text  x="154.19" y="223.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;std::_List_iterator&lt;flat_mutation_reader&gt;, mutation_reader_merger::close (8 samples, 0.02%)</title><rect x="1175.3" y="405" width="0.2" height="15.0" fill="rgb(242,203,11)" rx="2" ry="2" />
<text  x="1178.32" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (9 samples, 0.02%)</title><rect x="574.0" y="325" width="0.2" height="15.0" fill="rgb(221,13,51)" rx="2" ry="2" />
<text  x="576.98" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (35 samples, 0.07%)</title><rect x="494.1" y="277" width="0.9" height="15.0" fill="rgb(223,124,23)" rx="2" ry="2" />
<text  x="497.14" y="287.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_data_requests (2,388 samples, 5.01%)</title><rect x="992.5" y="325" width="59.1" height="15.0" fill="rgb(216,103,27)" rx="2" ry="2" />
<text  x="995.50" y="335.5" >servic..</text>
</g>
<g >
<title>compound_type&lt; (81 samples, 0.17%)</title><rect x="908.5" y="373" width="2.0" height="15.0" fill="rgb(219,57,6)" rx="2" ry="2" />
<text  x="911.53" y="383.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_slice_or_needs_filtering (30 samples, 0.06%)</title><rect x="643.3" y="437" width="0.8" height="15.0" fill="rgb(223,175,22)" rx="2" ry="2" />
<text  x="646.33" y="447.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (5 samples, 0.01%)</title><rect x="626.4" y="469" width="0.1" height="15.0" fill="rgb(232,200,28)" rx="2" ry="2" />
<text  x="629.37" y="479.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::trivial_direct_move&lt;16ul&gt; (7 samples, 0.01%)</title><rect x="1028.3" y="133" width="0.2" height="15.0" fill="rgb(243,75,12)" rx="2" ry="2" />
<text  x="1031.28" y="143.5" ></text>
</g>
<g >
<title>operator new (28 samples, 0.06%)</title><rect x="517.5" y="325" width="0.7" height="15.0" fill="rgb(207,130,53)" rx="2" ry="2" />
<text  x="520.47" y="335.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::find (13 samples, 0.03%)</title><rect x="952.4" y="341" width="0.3" height="15.0" fill="rgb(224,5,2)" rx="2" ry="2" />
<text  x="955.36" y="351.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (31 samples, 0.07%)</title><rect x="1142.3" y="437" width="0.8" height="15.0" fill="rgb(254,187,40)" rx="2" ry="2" />
<text  x="1145.31" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::stats (51 samples, 0.11%)</title><rect x="487.8" y="309" width="1.3" height="15.0" fill="rgb(232,104,22)" rx="2" ry="2" />
<text  x="490.83" y="319.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_Optional_payload_base (12 samples, 0.03%)</title><rect x="536.3" y="405" width="0.3" height="15.0" fill="rgb(238,60,40)" rx="2" ry="2" />
<text  x="539.29" y="415.5" ></text>
</g>
<g >
<title>service::abstract_read_resolver::abstract_read_resolver (156 samples, 0.33%)</title><rect x="987.3" y="293" width="3.9" height="15.0" fill="rgb(212,76,40)" rx="2" ry="2" />
<text  x="990.35" y="303.5" ></text>
</g>
<g >
<title>std::pair&lt;auth::role_or_anonymous, auth::resource&gt;::pair (7 samples, 0.01%)</title><rect x="777.2" y="229" width="0.2" height="15.0" fill="rgb(231,137,47)" rx="2" ry="2" />
<text  x="780.20" y="239.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (110 samples, 0.23%)</title><rect x="301.1" y="245" width="2.7" height="15.0" fill="rgb(247,109,49)" rx="2" ry="2" />
<text  x="304.08" y="255.5" ></text>
</g>
<g >
<title>seastar::future&lt;query::result_memory_accounter&gt;::get0 (23 samples, 0.05%)</title><rect x="598.5" y="437" width="0.5" height="15.0" fill="rgb(209,169,45)" rx="2" ry="2" />
<text  x="601.46" y="447.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::clear (118 samples, 0.25%)</title><rect x="363.9" y="213" width="2.9" height="15.0" fill="rgb(211,131,5)" rx="2" ry="2" />
<text  x="366.87" y="223.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (158 samples, 0.33%)</title><rect x="910.5" y="373" width="4.0" height="15.0" fill="rgb(211,223,22)" rx="2" ry="2" />
<text  x="913.54" y="383.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (83 samples, 0.17%)</title><rect x="780.4" y="197" width="2.1" height="15.0" fill="rgb(245,67,19)" rx="2" ry="2" />
<text  x="783.44" y="207.5" ></text>
</g>
<g >
<title>operator new (8 samples, 0.02%)</title><rect x="999.2" y="293" width="0.2" height="15.0" fill="rgb(243,197,31)" rx="2" ry="2" />
<text  x="1002.16" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::vector (164 samples, 0.34%)</title><rect x="92.1" y="421" width="4.1" height="15.0" fill="rgb(206,211,40)" rx="2" ry="2" />
<text  x="95.13" y="431.5" ></text>
</g>
<g >
<title>schema::column_at (14 samples, 0.03%)</title><rect x="386.2" y="181" width="0.4" height="15.0" fill="rgb(222,143,33)" rx="2" ry="2" />
<text  x="389.23" y="191.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::selection::selection const&gt;::~shared_ptr (6 samples, 0.01%)</title><rect x="655.0" y="485" width="0.1" height="15.0" fill="rgb(231,210,51)" rx="2" ry="2" />
<text  x="657.97" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (43 samples, 0.09%)</title><rect x="745.2" y="389" width="1.1" height="15.0" fill="rgb(241,178,8)" rx="2" ry="2" />
<text  x="748.23" y="399.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::result_memory_accounter (8 samples, 0.02%)</title><rect x="592.2" y="405" width="0.2" height="15.0" fill="rgb(205,159,8)" rx="2" ry="2" />
<text  x="595.22" y="415.5" ></text>
</g>
<g >
<title>read_simple&lt;unsigned short, managed_bytes_basic_view&lt; (21 samples, 0.04%)</title><rect x="484.3" y="197" width="0.5" height="15.0" fill="rgb(236,215,12)" rx="2" ry="2" />
<text  x="487.31" y="207.5" ></text>
</g>
<g >
<title>ser::query_result__partitions&lt;bytes_ostream&gt;::add (11 samples, 0.02%)</title><rect x="312.6" y="165" width="0.3" height="15.0" fill="rgb(213,219,47)" rx="2" ry="2" />
<text  x="315.59" y="175.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::on_new_range (653 samples, 1.37%)</title><rect x="228.1" y="261" width="16.2" height="15.0" fill="rgb(234,229,11)" rx="2" ry="2" />
<text  x="231.13" y="271.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;query::result_memory_accounter&gt;::move_it (15 samples, 0.03%)</title><rect x="600.8" y="437" width="0.4" height="15.0" fill="rgb(253,100,37)" rx="2" ry="2" />
<text  x="603.84" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (5 samples, 0.01%)</title><rect x="280.3" y="277" width="0.1" height="15.0" fill="rgb(209,122,51)" rx="2" ry="2" />
<text  x="283.32" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (17 samples, 0.04%)</title><rect x="506.3" y="181" width="0.4" height="15.0" fill="rgb(234,102,50)" rx="2" ry="2" />
<text  x="509.30" y="191.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (60 samples, 0.13%)</title><rect x="527.1" y="309" width="1.5" height="15.0" fill="rgb(211,166,14)" rx="2" ry="2" />
<text  x="530.08" y="319.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (5 samples, 0.01%)</title><rect x="1144.0" y="501" width="0.1" height="15.0" fill="rgb(251,86,51)" rx="2" ry="2" />
<text  x="1146.99" y="511.5" ></text>
</g>
<g >
<title>__tls_init (8 samples, 0.02%)</title><rect x="486.5" y="309" width="0.2" height="15.0" fill="rgb(208,194,41)" rx="2" ry="2" />
<text  x="489.47" y="319.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (6 samples, 0.01%)</title><rect x="910.3" y="341" width="0.2" height="15.0" fill="rgb(215,71,25)" rx="2" ry="2" />
<text  x="913.34" y="351.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment (144 samples, 0.30%)</title><rect x="148.4" y="229" width="3.6" height="15.0" fill="rgb(249,121,11)" rx="2" ry="2" />
<text  x="151.44" y="239.5" ></text>
</g>
<g >
<title>all (47,654 samples, 100%)</title><rect x="10.0" y="661" width="1180.0" height="15.0" fill="rgb(251,35,11)" rx="2" ry="2" />
<text  x="13.00" y="671.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_slice_or_needs_filtering (11 samples, 0.02%)</title><rect x="945.3" y="357" width="0.2" height="15.0" fill="rgb(206,121,29)" rx="2" ry="2" />
<text  x="948.25" y="367.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::clear (6 samples, 0.01%)</title><rect x="1150.6" y="485" width="0.2" height="15.0" fill="rgb(251,46,31)" rx="2" ry="2" />
<text  x="1153.63" y="495.5" ></text>
</g>
<g >
<title>seastar::internal::awaiter&lt;query::result_memory_accounter&gt;::awaiter (6 samples, 0.01%)</title><rect x="602.1" y="437" width="0.2" height="15.0" fill="rgb(242,126,41)" rx="2" ry="2" />
<text  x="605.10" y="447.5" ></text>
</g>
<g >
<title>basic_atomic_cell_view&lt; (166 samples, 0.35%)</title><rect x="344.6" y="165" width="4.1" height="15.0" fill="rgb(236,171,37)" rx="2" ry="2" />
<text  x="347.58" y="175.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (6 samples, 0.01%)</title><rect x="815.5" y="277" width="0.1" height="15.0" fill="rgb(206,229,4)" rx="2" ry="2" />
<text  x="818.48" y="287.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (5 samples, 0.01%)</title><rect x="855.2" y="357" width="0.2" height="15.0" fill="rgb(216,39,12)" rx="2" ry="2" />
<text  x="858.24" y="367.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::upper_bound&lt;mutation_partition, schema const&amp;, nonwrapping_interval&lt;clustering_key_prefix&gt; const&amp;&gt; (9 samples, 0.02%)</title><rect x="211.3" y="149" width="0.2" height="15.0" fill="rgb(225,14,53)" rx="2" ry="2" />
<text  x="214.26" y="159.5" ></text>
</g>
<g >
<title>logalloc::basic_region_impl::set_reclaiming_enabled (8 samples, 0.02%)</title><rect x="528.6" y="309" width="0.2" height="15.0" fill="rgb(251,0,0)" rx="2" ry="2" />
<text  x="531.56" y="319.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::partition_snapshot_flat_reader&lt;memtable&amp;&gt; (734 samples, 1.54%)</title><rect x="495.1" y="293" width="18.2" height="15.0" fill="rgb(253,2,7)" rx="2" ry="2" />
<text  x="498.08" y="303.5" ></text>
</g>
<g >
<title>mutation_querier::prepare_writers (9 samples, 0.02%)</title><rect x="303.3" y="197" width="0.2" height="15.0" fill="rgb(219,191,46)" rx="2" ry="2" />
<text  x="306.25" y="207.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_Optional_payload_base (5 samples, 0.01%)</title><rect x="778.4" y="261" width="0.1" height="15.0" fill="rgb(233,93,26)" rx="2" ry="2" />
<text  x="781.36" y="271.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_impl&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (4,869 samples, 10.22%)</title><rect x="290.8" y="325" width="120.6" height="15.0" fill="rgb(214,183,29)" rx="2" ry="2" />
<text  x="293.80" y="335.5" >seastar::intern..</text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (20 samples, 0.04%)</title><rect x="585.6" y="373" width="0.5" height="15.0" fill="rgb(213,32,49)" rx="2" ry="2" />
<text  x="588.64" y="383.5" ></text>
</g>
<g >
<title>bplus::searcher&lt;dht::ring_position, long, dht::raw_token_less_comparator, 16ul,  (197 samples, 0.41%)</title><rect x="465.7" y="277" width="4.8" height="15.0" fill="rgb(249,107,17)" rx="2" ry="2" />
<text  x="468.67" y="287.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;std::pair&lt;seastar::shared_ptr&lt;service::abstract_read_executor&gt;, nonwrapping_interval&lt;dht::token&gt; &gt;, 1ul&gt;::emplace_back&lt;seastar::shared_ptr&lt;service::abstract_read_executor&gt;&amp;, nonwrapping_interval&lt;dht::token&gt; &gt; (10 samples, 0.02%)</title><rect x="1103.0" y="357" width="0.3" height="15.0" fill="rgb(243,112,1)" rx="2" ry="2" />
<text  x="1106.01" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (40 samples, 0.08%)</title><rect x="534.6" y="389" width="1.0" height="15.0" fill="rgb(215,158,22)" rx="2" ry="2" />
<text  x="537.63" y="399.5" ></text>
</g>
<g >
<title>schema_registry::get_entry (168 samples, 0.35%)</title><rect x="969.4" y="341" width="4.1" height="15.0" fill="rgb(238,155,30)" rx="2" ry="2" />
<text  x="972.37" y="351.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_Optional_payload_base (16 samples, 0.03%)</title><rect x="783.2" y="197" width="0.4" height="15.0" fill="rgb(237,56,20)" rx="2" ry="2" />
<text  x="786.19" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_List_node_base::_M_hook (25 samples, 0.05%)</title><rect x="439.3" y="261" width="0.6" height="15.0" fill="rgb(220,84,39)" rx="2" ry="2" />
<text  x="442.27" y="271.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;, seastar::future&lt;void&gt; &gt;, std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;, seastar::future&lt;void&gt; &gt; &gt; &gt;::~unique_ptr (89 samples, 0.19%)</title><rect x="808.6" y="389" width="2.2" height="15.0" fill="rgb(227,215,36)" rx="2" ry="2" />
<text  x="811.59" y="399.5" ></text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::EqualElement&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt;&amp;&gt; (56 samples, 0.12%)</title><rect x="751.8" y="341" width="1.4" height="15.0" fill="rgb(245,44,50)" rx="2" ry="2" />
<text  x="754.77" y="351.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::do_wait_admission (446 samples, 0.94%)</title><rect x="1021.7" y="229" width="11.1" height="15.0" fill="rgb(226,13,50)" rx="2" ry="2" />
<text  x="1024.74" y="239.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (90 samples, 0.19%)</title><rect x="148.9" y="197" width="2.2" height="15.0" fill="rgb(205,210,19)" rx="2" ry="2" />
<text  x="151.89" y="207.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (13 samples, 0.03%)</title><rect x="631.3" y="453" width="0.3" height="15.0" fill="rgb(233,166,2)" rx="2" ry="2" />
<text  x="634.27" y="463.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;bool&gt;::take_value (6 samples, 0.01%)</title><rect x="764.9" y="357" width="0.1" height="15.0" fill="rgb(235,222,15)" rx="2" ry="2" />
<text  x="767.89" y="367.5" ></text>
</g>
<g >
<title>absl::container_internal::operator== (15 samples, 0.03%)</title><rect x="829.7" y="389" width="0.4" height="15.0" fill="rgb(211,108,18)" rx="2" ry="2" />
<text  x="832.69" y="399.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (8 samples, 0.02%)</title><rect x="771.1" y="293" width="0.2" height="15.0" fill="rgb(221,15,24)" rx="2" ry="2" />
<text  x="774.05" y="303.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (14 samples, 0.03%)</title><rect x="807.0" y="277" width="0.3" height="15.0" fill="rgb(206,134,6)" rx="2" ry="2" />
<text  x="809.98" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (13 samples, 0.03%)</title><rect x="880.4" y="277" width="0.3" height="15.0" fill="rgb(241,132,54)" rx="2" ry="2" />
<text  x="883.38" y="287.5" ></text>
</g>
<g >
<title>cql3::raw_value_view::raw_value_view (15 samples, 0.03%)</title><rect x="898.9" y="341" width="0.4" height="15.0" fill="rgb(251,124,45)" rx="2" ry="2" />
<text  x="901.95" y="351.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (9 samples, 0.02%)</title><rect x="1155.3" y="405" width="0.2" height="15.0" fill="rgb(235,89,32)" rx="2" ry="2" />
<text  x="1158.28" y="415.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;bool, bool  (25 samples, 0.05%)</title><rect x="1094.4" y="277" width="0.7" height="15.0" fill="rgb(232,105,27)" rx="2" ry="2" />
<text  x="1097.44" y="287.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (135 samples, 0.28%)</title><rect x="785.7" y="165" width="3.4" height="15.0" fill="rgb(207,228,12)" rx="2" ry="2" />
<text  x="788.74" y="175.5" ></text>
</g>
<g >
<title>allocation_strategy::alloc&lt;blob_storage&gt; (58 samples, 0.12%)</title><rect x="183.8" y="69" width="1.5" height="15.0" fill="rgb(229,17,28)" rx="2" ry="2" />
<text  x="186.83" y="79.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (14 samples, 0.03%)</title><rect x="671.7" y="469" width="0.3" height="15.0" fill="rgb(221,186,52)" rx="2" ry="2" />
<text  x="674.66" y="479.5" ></text>
</g>
<g >
<title>row::row (8 samples, 0.02%)</title><rect x="208.2" y="165" width="0.2" height="15.0" fill="rgb(214,33,44)" rx="2" ry="2" />
<text  x="211.19" y="175.5" ></text>
</g>
<g >
<title>seastar::internal::coroutine_traits_base&lt;service::storage_proxy_coordinator_query_result&gt;::promise_type::run_and_dispose (13 samples, 0.03%)</title><rect x="23.6" y="517" width="0.3" height="15.0" fill="rgb(234,219,27)" rx="2" ry="2" />
<text  x="26.57" y="527.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (312 samples, 0.65%)</title><rect x="395.0" y="245" width="7.7" height="15.0" fill="rgb(252,117,41)" rx="2" ry="2" />
<text  x="398.02" y="255.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;enum_set&lt;super_enum&lt;auth::permission,  (6 samples, 0.01%)</title><rect x="798.2" y="277" width="0.2" height="15.0" fill="rgb(252,186,22)" rx="2" ry="2" />
<text  x="801.22" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::_M_range_initialize&lt;nonwrapping_interval&lt;dht::ring_position&gt; const*&gt; (5 samples, 0.01%)</title><rect x="1043.9" y="277" width="0.1" height="15.0" fill="rgb(250,167,10)" rx="2" ry="2" />
<text  x="1046.91" y="287.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (8 samples, 0.02%)</title><rect x="1051.8" y="325" width="0.2" height="15.0" fill="rgb(247,106,40)" rx="2" ry="2" />
<text  x="1054.80" y="335.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;, service::storage_proxy::query_result_local (125 samples, 0.26%)</title><rect x="631.6" y="501" width="3.1" height="15.0" fill="rgb(227,76,40)" rx="2" ry="2" />
<text  x="634.60" y="511.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::~result_memory_accounter (7 samples, 0.01%)</title><rect x="58.4" y="453" width="0.2" height="15.0" fill="rgb(206,68,8)" rx="2" ry="2" />
<text  x="61.41" y="463.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector (13 samples, 0.03%)</title><rect x="1099.5" y="341" width="0.3" height="15.0" fill="rgb(251,226,22)" rx="2" ry="2" />
<text  x="1102.47" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (14 samples, 0.03%)</title><rect x="416.1" y="357" width="0.4" height="15.0" fill="rgb(241,139,15)" rx="2" ry="2" />
<text  x="419.12" y="367.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_Optional_payload_base (18 samples, 0.04%)</title><rect x="545.5" y="421" width="0.5" height="15.0" fill="rgb(231,119,32)" rx="2" ry="2" />
<text  x="548.52" y="431.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;signed char, std::char_traits&lt;signed char&gt; &gt;::substr (7 samples, 0.01%)</title><rect x="909.9" y="341" width="0.2" height="15.0" fill="rgb(246,149,0)" rx="2" ry="2" />
<text  x="912.94" y="351.5" ></text>
</g>
<g >
<title>database::find_column_family (53 samples, 0.11%)</title><rect x="812.1" y="341" width="1.3" height="15.0" fill="rgb(207,12,35)" rx="2" ry="2" />
<text  x="815.06" y="351.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;query::querier&lt; (10 samples, 0.02%)</title><rect x="74.9" y="453" width="0.2" height="15.0" fill="rgb(237,98,19)" rx="2" ry="2" />
<text  x="77.88" y="463.5" ></text>
</g>
<g >
<title>service::storage_proxy_stats::split_stats::get_ep_stat (13 samples, 0.03%)</title><rect x="701.0" y="453" width="0.3" height="15.0" fill="rgb(252,35,39)" rx="2" ry="2" />
<text  x="704.00" y="463.5" ></text>
</g>
<g >
<title>dht::shard_of (8 samples, 0.02%)</title><rect x="998.6" y="293" width="0.2" height="15.0" fill="rgb(226,206,16)" rx="2" ry="2" />
<text  x="1001.59" y="303.5" ></text>
</g>
<g >
<title>partition_snapshot::static_row (71 samples, 0.15%)</title><rect x="246.2" y="213" width="1.7" height="15.0" fill="rgb(236,134,37)" rx="2" ry="2" />
<text  x="249.15" y="223.5" ></text>
</g>
<g >
<title>reader_permit::impl::~impl (26 samples, 0.05%)</title><rect x="51.0" y="469" width="0.6" height="15.0" fill="rgb(253,68,32)" rx="2" ry="2" />
<text  x="53.96" y="479.5" ></text>
</g>
<g >
<title>reader_permit::consume (24 samples, 0.05%)</title><rect x="391.3" y="229" width="0.6" height="15.0" fill="rgb(244,223,20)" rx="2" ry="2" />
<text  x="394.26" y="239.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (44 samples, 0.09%)</title><rect x="783.6" y="197" width="1.1" height="15.0" fill="rgb(222,217,7)" rx="2" ry="2" />
<text  x="786.63" y="207.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (11 samples, 0.02%)</title><rect x="1128.1" y="405" width="0.2" height="15.0" fill="rgb(252,102,17)" rx="2" ry="2" />
<text  x="1131.07" y="415.5" ></text>
</g>
<g >
<title>clustering_row::clustering_row (12 samples, 0.03%)</title><rect x="161.7" y="181" width="0.3" height="15.0" fill="rgb(236,100,44)" rx="2" ry="2" />
<text  x="164.67" y="191.5" ></text>
</g>
<g >
<title>cql3::constants::setter::execute (15 samples, 0.03%)</title><rect x="856.5" y="325" width="0.4" height="15.0" fill="rgb(214,118,29)" rx="2" ry="2" />
<text  x="859.48" y="335.5" ></text>
</g>
<g >
<title>service::client_state::has_column_family_access (2,604 samples, 5.46%)</title><rect x="755.6" y="405" width="64.4" height="15.0" fill="rgb(214,182,51)" rx="2" ry="2" />
<text  x="758.55" y="415.5" >service..</text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%)</title><rect x="567.7" y="325" width="0.1" height="15.0" fill="rgb(220,206,41)" rx="2" ry="2" />
<text  x="570.69" y="335.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (43 samples, 0.09%)</title><rect x="585.1" y="389" width="1.0" height="15.0" fill="rgb(249,50,0)" rx="2" ry="2" />
<text  x="588.07" y="399.5" ></text>
</g>
<g >
<title>position_in_partition_view::for_range_end (44 samples, 0.09%)</title><rect x="223.8" y="229" width="1.1" height="15.0" fill="rgb(240,214,7)" rx="2" ry="2" />
<text  x="226.82" y="239.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;compact_for_query&lt; (8 samples, 0.02%)</title><rect x="412.5" y="341" width="0.2" height="15.0" fill="rgb(251,207,51)" rx="2" ry="2" />
<text  x="415.48" y="351.5" ></text>
</g>
<g >
<title>cql3::expr::possible_lhs_values (1,234 samples, 2.59%)</title><rect x="875.9" y="405" width="30.6" height="15.0" fill="rgb(228,112,46)" rx="2" ry="2" />
<text  x="878.90" y="415.5" >cq..</text>
</g>
<g >
<title>flat_mutation_reader::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (24 samples, 0.05%)</title><rect x="680.6" y="453" width="0.6" height="15.0" fill="rgb(240,16,0)" rx="2" ry="2" />
<text  x="683.60" y="463.5" ></text>
</g>
<g >
<title>operator delete (29 samples, 0.06%)</title><rect x="612.1" y="373" width="0.7" height="15.0" fill="rgb(243,200,11)" rx="2" ry="2" />
<text  x="615.08" y="383.5" ></text>
</g>
<g >
<title>std::default_delete&lt;compact_for_query&lt; (23 samples, 0.05%)</title><rect x="410.8" y="261" width="0.5" height="15.0" fill="rgb(211,142,12)" rx="2" ry="2" />
<text  x="413.77" y="271.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::result_memory_accounter (8 samples, 0.02%)</title><rect x="601.0" y="421" width="0.2" height="15.0" fill="rgb(241,185,3)" rx="2" ry="2" />
<text  x="604.02" y="431.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (9 samples, 0.02%)</title><rect x="214.7" y="149" width="0.3" height="15.0" fill="rgb(208,93,22)" rx="2" ry="2" />
<text  x="217.73" y="159.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (7 samples, 0.01%)</title><rect x="199.6" y="149" width="0.1" height="15.0" fill="rgb(231,181,6)" rx="2" ry="2" />
<text  x="202.58" y="159.5" ></text>
</g>
<g >
<title>locator::token_metadata::is_any_node_being_replaced (5 samples, 0.01%)</title><rect x="1093.2" y="293" width="0.1" height="15.0" fill="rgb(249,197,54)" rx="2" ry="2" />
<text  x="1096.21" y="303.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::operator (6,375 samples, 13.38%)</title><rect x="110.8" y="357" width="157.9" height="15.0" fill="rgb(238,225,42)" rx="2" ry="2" />
<text  x="113.81" y="367.5" >mutation_fragment_me..</text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (5 samples, 0.01%)</title><rect x="981.6" y="277" width="0.2" height="15.0" fill="rgb(220,181,38)" rx="2" ry="2" />
<text  x="984.63" y="287.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::done (9 samples, 0.02%)</title><rect x="589.5" y="421" width="0.2" height="15.0" fill="rgb(223,152,14)" rx="2" ry="2" />
<text  x="592.48" y="431.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;gms::inet_address, std::pair&lt;gms::inet_address const, utils::UUID&gt;, std::allocator&lt;std::pair&lt;gms::inet_address const, utils::UUID&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;gms::inet_address&gt;, std::hash&lt;gms::inet_address&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (64 samples, 0.13%)</title><rect x="1154.2" y="437" width="1.6" height="15.0" fill="rgb(217,96,44)" rx="2" ry="2" />
<text  x="1157.17" y="447.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;void&gt;, service::storage_proxy*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt;, db::consistency_level, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, tracing::trace_state_ptr, service_permit, bool, seastar::lw_shared_ptr&lt;cdc::operation_result_tracker&gt; &gt;::do_flush (31 samples, 0.07%)</title><rect x="1142.3" y="485" width="0.8" height="15.0" fill="rgb(209,198,15)" rx="2" ry="2" />
<text  x="1145.31" y="495.5" ></text>
</g>
<g >
<title>bplus::searcher&lt;dht::ring_position, long, dht::raw_token_less_comparator, 16ul,  (35 samples, 0.07%)</title><rect x="525.1" y="277" width="0.8" height="15.0" fill="rgb(225,199,35)" rx="2" ry="2" />
<text  x="528.07" y="287.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::abstract_read_executor&gt;::~shared_ptr (14 samples, 0.03%)</title><rect x="982.3" y="341" width="0.4" height="15.0" fill="rgb(248,90,46)" rx="2" ry="2" />
<text  x="985.32" y="351.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (5 samples, 0.01%)</title><rect x="421.9" y="373" width="0.1" height="15.0" fill="rgb(226,14,54)" rx="2" ry="2" />
<text  x="424.91" y="383.5" ></text>
</g>
<g >
<title>operator new (49 samples, 0.10%)</title><rect x="939.6" y="373" width="1.2" height="15.0" fill="rgb(232,115,40)" rx="2" ry="2" />
<text  x="942.63" y="383.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::pop_clustering_row (60 samples, 0.13%)</title><rect x="213.5" y="181" width="1.5" height="15.0" fill="rgb(209,143,9)" rx="2" ry="2" />
<text  x="216.47" y="191.5" ></text>
</g>
<g >
<title>seastar::weakly_referencable&lt;cql3::statements::prepared_statement&gt;::weak_from_this (10 samples, 0.02%)</title><rect x="717.7" y="405" width="0.2" height="15.0" fill="rgb(250,172,51)" rx="2" ry="2" />
<text  x="720.67" y="415.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (15 samples, 0.03%)</title><rect x="395.3" y="229" width="0.4" height="15.0" fill="rgb(227,178,18)" rx="2" ry="2" />
<text  x="398.32" y="239.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;cql3::raw_value const*, cql3::raw_value*&gt; (18 samples, 0.04%)</title><rect x="849.8" y="437" width="0.5" height="15.0" fill="rgb(252,214,8)" rx="2" ry="2" />
<text  x="852.85" y="447.5" ></text>
</g>
<g >
<title>operator new (32 samples, 0.07%)</title><rect x="94.1" y="389" width="0.8" height="15.0" fill="rgb(221,186,23)" rx="2" ry="2" />
<text  x="97.12" y="399.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;auth::resource&gt;::_Optional_payload_base (33 samples, 0.07%)</title><rect x="769.0" y="293" width="0.9" height="15.0" fill="rgb(238,26,54)" rx="2" ry="2" />
<text  x="772.05" y="303.5" ></text>
</g>
<g >
<title>operator new (46 samples, 0.10%)</title><rect x="843.6" y="357" width="1.1" height="15.0" fill="rgb(250,186,11)" rx="2" ry="2" />
<text  x="846.58" y="367.5" ></text>
</g>
<g >
<title>__tls_init (5 samples, 0.01%)</title><rect x="137.2" y="261" width="0.2" height="15.0" fill="rgb(207,62,3)" rx="2" ry="2" />
<text  x="140.23" y="271.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (8 samples, 0.02%)</title><rect x="712.7" y="421" width="0.2" height="15.0" fill="rgb(210,86,25)" rx="2" ry="2" />
<text  x="715.74" y="431.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::~__si_class_type_info (172 samples, 0.36%)</title><rect x="10.2" y="613" width="4.3" height="15.0" fill="rgb(239,40,19)" rx="2" ry="2" />
<text  x="13.25" y="623.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (76 samples, 0.16%)</title><rect x="735.2" y="325" width="1.8" height="15.0" fill="rgb(207,150,13)" rx="2" ry="2" />
<text  x="738.15" y="335.5" ></text>
</g>
<g >
<title>operator new (35 samples, 0.07%)</title><rect x="494.1" y="293" width="0.9" height="15.0" fill="rgb(217,212,18)" rx="2" ry="2" />
<text  x="497.14" y="303.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::set&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; (6 samples, 0.01%)</title><rect x="603.4" y="421" width="0.1" height="15.0" fill="rgb(227,33,34)" rx="2" ry="2" />
<text  x="606.39" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (22 samples, 0.05%)</title><rect x="757.8" y="357" width="0.6" height="15.0" fill="rgb(254,222,28)" rx="2" ry="2" />
<text  x="760.81" y="367.5" ></text>
</g>
<g >
<title>operator new (75 samples, 0.16%)</title><rect x="1033.8" y="213" width="1.9" height="15.0" fill="rgb(215,170,7)" rx="2" ry="2" />
<text  x="1036.83" y="223.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_range_tombstone (134 samples, 0.28%)</title><rect x="218.3" y="181" width="3.3" height="15.0" fill="rgb(226,47,20)" rx="2" ry="2" />
<text  x="221.27" y="191.5" ></text>
</g>
<g >
<title>std::make_unique&lt;seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::entry, reader_concurrency_semaphore::entry, seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;&amp;, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;&amp;&gt; (12 samples, 0.03%)</title><rect x="1030.0" y="181" width="0.3" height="15.0" fill="rgb(208,190,36)" rx="2" ry="2" />
<text  x="1033.04" y="191.5" ></text>
</g>
<g >
<title>std::type_info::operator== (7 samples, 0.01%)</title><rect x="1071.8" y="277" width="0.2" height="15.0" fill="rgb(234,60,44)" rx="2" ry="2" />
<text  x="1074.84" y="287.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (13 samples, 0.03%)</title><rect x="423.5" y="357" width="0.4" height="15.0" fill="rgb(240,98,4)" rx="2" ry="2" />
<text  x="426.55" y="367.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (38 samples, 0.08%)</title><rect x="267.3" y="325" width="0.9" height="15.0" fill="rgb(212,174,42)" rx="2" ry="2" />
<text  x="270.30" y="335.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;mutation_reader_merger::reader_and_last_fragment_kind*, mutation_reader_merger::prepare_next (6 samples, 0.01%)</title><rect x="258.8" y="309" width="0.2" height="15.0" fill="rgb(250,7,50)" rx="2" ry="2" />
<text  x="261.81" y="319.5" ></text>
</g>
<g >
<title>__start_context (12 samples, 0.03%)</title><rect x="21.9" y="597" width="0.3" height="15.0" fill="rgb(254,157,23)" rx="2" ry="2" />
<text  x="24.94" y="607.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (5 samples, 0.01%)</title><rect x="565.1" y="325" width="0.2" height="15.0" fill="rgb(224,6,28)" rx="2" ry="2" />
<text  x="568.14" y="335.5" ></text>
</g>
<g >
<title>schema_registry_entry::get_schema (10 samples, 0.02%)</title><rect x="973.5" y="341" width="0.3" height="15.0" fill="rgb(237,118,46)" rx="2" ry="2" />
<text  x="976.53" y="351.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (31 samples, 0.07%)</title><rect x="989.6" y="261" width="0.7" height="15.0" fill="rgb(226,148,7)" rx="2" ry="2" />
<text  x="992.55" y="271.5" ></text>
</g>
<g >
<title>std::__equal&lt;true&gt;::equal&lt;signed char&gt; (7 samples, 0.01%)</title><rect x="736.5" y="277" width="0.2" height="15.0" fill="rgb(239,152,6)" rx="2" ry="2" />
<text  x="739.54" y="287.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector (11 samples, 0.02%)</title><rect x="1074.5" y="325" width="0.3" height="15.0" fill="rgb(248,202,43)" rx="2" ry="2" />
<text  x="1077.54" y="335.5" ></text>
</g>
<g >
<title>std::hash&lt;std::basic_string_view&lt;signed char, std::char_traits&lt;signed char&gt; &gt; &gt;::operator (92 samples, 0.19%)</title><rect x="720.3" y="309" width="2.2" height="15.0" fill="rgb(253,166,51)" rx="2" ry="2" />
<text  x="723.27" y="319.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (12 samples, 0.03%)</title><rect x="1073.6" y="325" width="0.3" height="15.0" fill="rgb(219,18,25)" rx="2" ry="2" />
<text  x="1076.59" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (20 samples, 0.04%)</title><rect x="533.7" y="309" width="0.5" height="15.0" fill="rgb(248,48,16)" rx="2" ry="2" />
<text  x="536.66" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::_M_range_initialize&lt;nonwrapping_interval&lt;dht::ring_position&gt; const*&gt; (21 samples, 0.04%)</title><rect x="938.3" y="405" width="0.5" height="15.0" fill="rgb(211,17,38)" rx="2" ry="2" />
<text  x="941.32" y="415.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::~small_vector (15 samples, 0.03%)</title><rect x="574.8" y="357" width="0.4" height="15.0" fill="rgb(229,44,11)" rx="2" ry="2" />
<text  x="577.79" y="367.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (29 samples, 0.06%)</title><rect x="678.0" y="437" width="0.7" height="15.0" fill="rgb(232,198,41)" rx="2" ry="2" />
<text  x="680.95" y="447.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::operator== (23 samples, 0.05%)</title><rect x="786.4" y="133" width="0.6" height="15.0" fill="rgb(239,89,11)" rx="2" ry="2" />
<text  x="789.38" y="143.5" ></text>
</g>
<g >
<title>allocation_strategy::get_standard_migrator&lt;blob_storage&gt; (27 samples, 0.06%)</title><rect x="184.6" y="53" width="0.7" height="15.0" fill="rgb(219,107,17)" rx="2" ry="2" />
<text  x="187.60" y="63.5" ></text>
</g>
<g >
<title>database::find_column_family (10 samples, 0.02%)</title><rect x="966.0" y="357" width="0.3" height="15.0" fill="rgb(241,165,24)" rx="2" ry="2" />
<text  x="969.03" y="367.5" ></text>
</g>
<g >
<title>__strcmp_avx2 (66 samples, 0.14%)</title><rect x="12.9" y="581" width="1.6" height="15.0" fill="rgb(206,128,15)" rx="2" ry="2" />
<text  x="15.87" y="591.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (5 samples, 0.01%)</title><rect x="797.3" y="213" width="0.1" height="15.0" fill="rgb(218,204,30)" rx="2" ry="2" />
<text  x="800.25" y="223.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::query_options, db::consistency_level&amp;, std::vector&lt;cql3::raw_value, std::allocator&lt;cql3::raw_value&gt; &gt;, cql3::query_options::specific_options&gt; (7 samples, 0.01%)</title><rect x="848.2" y="469" width="0.2" height="15.0" fill="rgb(230,211,10)" rx="2" ry="2" />
<text  x="851.24" y="479.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::reserve (17 samples, 0.04%)</title><rect x="96.2" y="421" width="0.4" height="15.0" fill="rgb(234,130,52)" rx="2" ry="2" />
<text  x="99.20" y="431.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::clear (14 samples, 0.03%)</title><rect x="443.7" y="293" width="0.3" height="15.0" fill="rgb(253,12,51)" rx="2" ry="2" />
<text  x="446.65" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::~vector (7 samples, 0.01%)</title><rect x="534.2" y="341" width="0.2" height="15.0" fill="rgb(207,108,7)" rx="2" ry="2" />
<text  x="537.18" y="351.5" ></text>
</g>
<g >
<title>bound_view::from_range_end&lt;nonwrapping_interval&gt; (24 samples, 0.05%)</title><rect x="237.9" y="181" width="0.6" height="15.0" fill="rgb(249,62,4)" rx="2" ry="2" />
<text  x="240.93" y="191.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (30 samples, 0.06%)</title><rect x="1037.3" y="245" width="0.8" height="15.0" fill="rgb(238,86,0)" rx="2" ry="2" />
<text  x="1040.32" y="255.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::get0 (37 samples, 0.08%)</title><rect x="268.7" y="357" width="0.9" height="15.0" fill="rgb(227,31,7)" rx="2" ry="2" />
<text  x="271.66" y="367.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::small_vector (21 samples, 0.04%)</title><rect x="448.3" y="261" width="0.5" height="15.0" fill="rgb(242,219,28)" rx="2" ry="2" />
<text  x="451.26" y="271.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_result_local (7 samples, 0.01%)</title><rect x="1051.4" y="309" width="0.2" height="15.0" fill="rgb(248,43,9)" rx="2" ry="2" />
<text  x="1054.41" y="319.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;::basic_sstring (6 samples, 0.01%)</title><rect x="713.5" y="469" width="0.1" height="15.0" fill="rgb(247,122,39)" rx="2" ry="2" />
<text  x="716.46" y="479.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::deallocate (7 samples, 0.01%)</title><rect x="550.6" y="293" width="0.1" height="15.0" fill="rgb(216,186,19)" rx="2" ry="2" />
<text  x="553.55" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;managed_bytes&gt;::allocate (5 samples, 0.01%)</title><rect x="937.0" y="373" width="0.2" height="15.0" fill="rgb(226,74,34)" rx="2" ry="2" />
<text  x="940.03" y="383.5" ></text>
</g>
<g >
<title>operator delete (30 samples, 0.06%)</title><rect x="659.4" y="485" width="0.7" height="15.0" fill="rgb(205,60,17)" rx="2" ry="2" />
<text  x="662.38" y="495.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (22 samples, 0.05%)</title><rect x="626.0" y="485" width="0.5" height="15.0" fill="rgb(231,192,25)" rx="2" ry="2" />
<text  x="628.95" y="495.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::make_ready&lt; (10 samples, 0.02%)</title><rect x="48.5" y="485" width="0.3" height="15.0" fill="rgb(209,103,54)" rx="2" ry="2" />
<text  x="51.53" y="495.5" ></text>
</g>
<g >
<title>std::apply&lt;service::client_state::check_has_permission (1,163 samples, 2.44%)</title><rect x="772.5" y="325" width="28.8" height="15.0" fill="rgb(240,198,31)" rx="2" ry="2" />
<text  x="775.54" y="335.5" >st..</text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (89 samples, 0.19%)</title><rect x="837.3" y="373" width="2.2" height="15.0" fill="rgb(214,152,23)" rx="2" ry="2" />
<text  x="840.27" y="383.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (15 samples, 0.03%)</title><rect x="813.0" y="293" width="0.4" height="15.0" fill="rgb(251,94,40)" rx="2" ry="2" />
<text  x="816.00" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::emplace_back&lt;flat_mutation_reader&gt; (33 samples, 0.07%)</title><rect x="532.5" y="341" width="0.9" height="15.0" fill="rgb(218,102,17)" rx="2" ry="2" />
<text  x="535.55" y="351.5" ></text>
</g>
<g >
<title>seastar::internal::uninitialized_wrapper_base&lt;service::storage_proxy_coordinator_query_result, false&gt;::uninitialized_set&lt;service::storage_proxy_coordinator_query_result&gt; (5 samples, 0.01%)</title><rect x="679.1" y="485" width="0.2" height="15.0" fill="rgb(248,57,4)" rx="2" ry="2" />
<text  x="682.14" y="495.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::impl (21 samples, 0.04%)</title><rect x="529.9" y="245" width="0.6" height="15.0" fill="rgb(209,40,35)" rx="2" ry="2" />
<text  x="532.95" y="255.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (11 samples, 0.02%)</title><rect x="772.1" y="309" width="0.3" height="15.0" fill="rgb(215,199,44)" rx="2" ry="2" />
<text  x="775.09" y="319.5" ></text>
</g>
<g >
<title>cql3::prepared_statements_cache::find (286 samples, 0.60%)</title><rect x="716.6" y="437" width="7.1" height="15.0" fill="rgb(247,65,13)" rx="2" ry="2" />
<text  x="719.63" y="447.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::digest_read_result&gt;::set&lt;service::digest_read_result&gt; (16 samples, 0.03%)</title><rect x="698.8" y="405" width="0.4" height="15.0" fill="rgb(249,41,47)" rx="2" ry="2" />
<text  x="701.82" y="415.5" ></text>
</g>
<g >
<title>utils::basic_ihistogram&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt; &gt;::mark&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; (41 samples, 0.09%)</title><rect x="672.4" y="453" width="1.0" height="15.0" fill="rgb(210,191,51)" rx="2" ry="2" />
<text  x="675.43" y="463.5" ></text>
</g>
<g >
<title>seastar::internal::uninitialized_wrapper_base&lt;service::storage_proxy_coordinator_query_result, false&gt;::uninitialized_set&lt;service::storage_proxy_coordinator_query_result&gt; (87 samples, 0.18%)</title><rect x="674.0" y="469" width="2.1" height="15.0" fill="rgb(226,49,14)" rx="2" ry="2" />
<text  x="676.99" y="479.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::pop_mutation_fragment (39 samples, 0.08%)</title><rect x="254.1" y="277" width="0.9" height="15.0" fill="rgb(237,141,40)" rx="2" ry="2" />
<text  x="257.08" y="287.5" ></text>
</g>
<g >
<title>managed_bytes::free_chain (168 samples, 0.35%)</title><rect x="397.0" y="197" width="4.1" height="15.0" fill="rgb(210,8,50)" rx="2" ry="2" />
<text  x="399.95" y="207.5" ></text>
</g>
<g >
<title>seastar::lambda_task&lt;seastar::execution_stage::flush (11,640 samples, 24.43%)</title><rect x="855.7" y="501" width="288.2" height="15.0" fill="rgb(209,78,39)" rx="2" ry="2" />
<text  x="858.67" y="511.5" >seastar::lambda_task&lt;seastar::executio..</text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement::execute (861 samples, 1.81%)</title><rect x="637.6" y="501" width="21.4" height="15.0" fill="rgb(241,37,1)" rx="2" ry="2" />
<text  x="640.64" y="511.5" >s..</text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (21 samples, 0.04%)</title><rect x="326.3" y="181" width="0.5" height="15.0" fill="rgb(216,3,51)" rx="2" ry="2" />
<text  x="329.31" y="191.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (27 samples, 0.06%)</title><rect x="517.5" y="309" width="0.7" height="15.0" fill="rgb(250,128,40)" rx="2" ry="2" />
<text  x="520.49" y="319.5" ></text>
</g>
<g >
<title>tracing::global_trace_state_ptr::get (8 samples, 0.02%)</title><rect x="1048.4" y="277" width="0.2" height="15.0" fill="rgb(226,187,45)" rx="2" ry="2" />
<text  x="1051.44" y="287.5" ></text>
</g>
<g >
<title>database::find_schema (75 samples, 0.16%)</title><rect x="748.1" y="389" width="1.8" height="15.0" fill="rgb(253,189,43)" rx="2" ry="2" />
<text  x="751.08" y="399.5" ></text>
</g>
<g >
<title>operator new (61 samples, 0.13%)</title><rect x="278.2" y="277" width="1.5" height="15.0" fill="rgb(231,4,4)" rx="2" ry="2" />
<text  x="281.20" y="287.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (48 samples, 0.10%)</title><rect x="96.6" y="421" width="1.2" height="15.0" fill="rgb(213,212,25)" rx="2" ry="2" />
<text  x="99.62" y="431.5" ></text>
</g>
<g >
<title>mutation_fragment::consume&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (18 samples, 0.04%)</title><rect x="680.6" y="341" width="0.5" height="15.0" fill="rgb(208,37,2)" rx="2" ry="2" />
<text  x="683.65" y="351.5" ></text>
</g>
<g >
<title>cql3::restrictions::partition_key_restrictions::needs_filtering (83 samples, 0.17%)</title><rect x="642.7" y="453" width="2.0" height="15.0" fill="rgb(216,38,26)" rx="2" ry="2" />
<text  x="645.66" y="463.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;mutation_fragment_merger&lt;mutation_reader_merger&gt;::operator (199 samples, 0.42%)</title><rect x="263.3" y="341" width="4.9" height="15.0" fill="rgb(239,165,53)" rx="2" ry="2" />
<text  x="266.31" y="351.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;, service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (19 samples, 0.04%)</title><rect x="1142.6" y="293" width="0.5" height="15.0" fill="rgb(215,137,40)" rx="2" ry="2" />
<text  x="1145.61" y="303.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (5 samples, 0.01%)</title><rect x="19.0" y="245" width="0.2" height="15.0" fill="rgb(238,209,35)" rx="2" ry="2" />
<text  x="22.04" y="255.5" ></text>
</g>
<g >
<title>std::hash&lt;auth::resource&gt;::operator (93 samples, 0.20%)</title><rect x="790.6" y="149" width="2.3" height="15.0" fill="rgb(224,217,20)" rx="2" ry="2" />
<text  x="793.57" y="159.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_rehash (57 samples, 0.12%)</title><rect x="1158.4" y="437" width="1.4" height="15.0" fill="rgb(216,56,17)" rx="2" ry="2" />
<text  x="1161.40" y="447.5" ></text>
</g>
<g >
<title>mutation_reader_merger::maybe_add_readers (272 samples, 0.57%)</title><rect x="435.3" y="293" width="6.8" height="15.0" fill="rgb(221,115,2)" rx="2" ry="2" />
<text  x="438.33" y="303.5" ></text>
</g>
<g >
<title>free (14 samples, 0.03%)</title><rect x="401.7" y="197" width="0.3" height="15.0" fill="rgb(232,108,14)" rx="2" ry="2" />
<text  x="404.66" y="207.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::metadata const&gt;::~shared_ptr (6 samples, 0.01%)</title><rect x="33.3" y="485" width="0.2" height="15.0" fill="rgb(205,66,6)" rx="2" ry="2" />
<text  x="36.33" y="495.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;enum_set&lt;super_enum&lt;auth::permission,  (5 samples, 0.01%)</title><rect x="778.2" y="261" width="0.1" height="15.0" fill="rgb(210,74,23)" rx="2" ry="2" />
<text  x="781.16" y="271.5" ></text>
</g>
<g >
<title>std::__lower_bound&lt;__gnu_cxx::__normal_iterator&lt;dht::token const*, std::vector&lt;dht::token, std::allocator&lt;dht::token&gt; &gt; &gt;, dht::token, __gnu_cxx::__ops::_Iter_less_val&gt; (7 samples, 0.01%)</title><rect x="1086.4" y="261" width="0.2" height="15.0" fill="rgb(241,0,11)" rx="2" ry="2" />
<text  x="1089.42" y="271.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::need_filtering (127 samples, 0.27%)</title><rect x="641.9" y="469" width="3.1" height="15.0" fill="rgb(245,184,3)" rx="2" ry="2" />
<text  x="644.90" y="479.5" ></text>
</g>
<g >
<title>seastar::repeat&lt;flat_mutation_reader::impl::consume_pausable&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (21 samples, 0.04%)</title><rect x="680.6" y="373" width="0.6" height="15.0" fill="rgb(252,187,0)" rx="2" ry="2" />
<text  x="683.65" y="383.5" ></text>
</g>
<g >
<title>basic_atomic_cell_view&lt; (323 samples, 0.68%)</title><rect x="375.3" y="165" width="8.0" height="15.0" fill="rgb(217,146,8)" rx="2" ry="2" />
<text  x="378.26" y="175.5" ></text>
</g>
<g >
<title>utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (56 samples, 0.12%)</title><rect x="781.0" y="149" width="1.4" height="15.0" fill="rgb(243,121,24)" rx="2" ry="2" />
<text  x="784.01" y="159.5" ></text>
</g>
<g >
<title>schema::column_at (66 samples, 0.14%)</title><rect x="203.8" y="101" width="1.6" height="15.0" fill="rgb(243,70,32)" rx="2" ry="2" />
<text  x="206.79" y="111.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEENK4$_43clERKNSF_15binary_operatorEEUlRKNSF_12column_valueEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_17tuple_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlNSF_5tokenEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlSS_E_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_11conjunctionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_8constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_21unresolved_identifierEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_25column_mutation_attributeEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13function_callEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4castEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_15field_selectionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4nullEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13bind_variableEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_16untyped_constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_22collection_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_20usertype_constructorEE_EERS4_IJS14_SQ_ST_S11_S1C_S1G_S1K_S1O_S1S_S1W_S20_S24_S18_SX_S28_S2C_EEEJEEESt16integer_sequenceImJLm2EEEE14__visit_invokeES2H_S2J_ (46 samples, 0.10%)</title><rect x="905.1" y="389" width="1.2" height="15.0" fill="rgb(208,45,47)" rx="2" ry="2" />
<text  x="908.14" y="399.5" ></text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::EqualElement&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt;&amp;&gt; (40 samples, 0.08%)</title><rect x="814.6" y="309" width="1.0" height="15.0" fill="rgb(249,37,8)" rx="2" ry="2" />
<text  x="817.64" y="319.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::make_partition_slice (706 samples, 1.48%)</title><rect x="1108.6" y="421" width="17.4" height="15.0" fill="rgb(208,164,42)" rx="2" ry="2" />
<text  x="1111.56" y="431.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (10 samples, 0.02%)</title><rect x="695.9" y="453" width="0.3" height="15.0" fill="rgb(222,225,42)" rx="2" ry="2" />
<text  x="698.90" y="463.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (14 samples, 0.03%)</title><rect x="900.0" y="357" width="0.4" height="15.0" fill="rgb(225,94,19)" rx="2" ry="2" />
<text  x="903.04" y="367.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (9 samples, 0.02%)</title><rect x="287.0" y="389" width="0.2" height="15.0" fill="rgb(245,212,32)" rx="2" ry="2" />
<text  x="290.01" y="399.5" ></text>
</g>
<g >
<title>utils::phased_barrier::operation::~operation (10 samples, 0.02%)</title><rect x="45.1" y="485" width="0.3" height="15.0" fill="rgb(207,187,12)" rx="2" ry="2" />
<text  x="48.14" y="495.5" ></text>
</g>
<g >
<title>auth::resource::resource (61 samples, 0.13%)</title><rect x="759.9" y="373" width="1.5" height="15.0" fill="rgb(227,168,21)" rx="2" ry="2" />
<text  x="762.86" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::_M_range_check (7 samples, 0.01%)</title><rect x="1165.6" y="453" width="0.2" height="15.0" fill="rgb(221,229,45)" rx="2" ry="2" />
<text  x="1168.58" y="463.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::~partition_snapshot_flat_reader (6 samples, 0.01%)</title><rect x="565.5" y="341" width="0.1" height="15.0" fill="rgb(227,117,52)" rx="2" ry="2" />
<text  x="568.46" y="351.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (15 samples, 0.03%)</title><rect x="586.7" y="389" width="0.3" height="15.0" fill="rgb(250,54,29)" rx="2" ry="2" />
<text  x="589.68" y="399.5" ></text>
</g>
<g >
<title>std::optional&lt;dht::decorated_key&gt;::emplace&lt;dht::decorated_key&gt; (5 samples, 0.01%)</title><rect x="394.5" y="245" width="0.1" height="15.0" fill="rgb(215,103,17)" rx="2" ry="2" />
<text  x="397.45" y="255.5" ></text>
</g>
<g >
<title>ser::after_qr_cell__timestamp&lt;bytes_ostream&gt;::skip_expiry (92 samples, 0.19%)</title><rect x="348.8" y="165" width="2.3" height="15.0" fill="rgb(245,126,8)" rx="2" ry="2" />
<text  x="351.84" y="175.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (13 samples, 0.03%)</title><rect x="810.9" y="389" width="0.4" height="15.0" fill="rgb(205,126,23)" rx="2" ry="2" />
<text  x="813.95" y="399.5" ></text>
</g>
<g >
<title>operator new (81 samples, 0.17%)</title><rect x="1066.5" y="325" width="2.0" height="15.0" fill="rgb(227,155,40)" rx="2" ry="2" />
<text  x="1069.49" y="335.5" ></text>
</g>
<g >
<title>std::function&lt;flat_mutation_reader  (5 samples, 0.01%)</title><rect x="536.6" y="405" width="0.1" height="15.0" fill="rgb(216,60,37)" rx="2" ry="2" />
<text  x="539.58" y="415.5" ></text>
</g>
<g >
<title>operator new (18 samples, 0.04%)</title><rect x="618.4" y="389" width="0.4" height="15.0" fill="rgb(243,84,3)" rx="2" ry="2" />
<text  x="621.40" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (36 samples, 0.08%)</title><rect x="902.6" y="309" width="0.9" height="15.0" fill="rgb(213,165,54)" rx="2" ry="2" />
<text  x="905.59" y="319.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;service::abstract_read_executor::execute (14 samples, 0.03%)</title><rect x="686.1" y="453" width="0.3" height="15.0" fill="rgb(240,127,45)" rx="2" ry="2" />
<text  x="689.10" y="463.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_Optional_payload_base (20 samples, 0.04%)</title><rect x="607.4" y="421" width="0.4" height="15.0" fill="rgb(213,211,34)" rx="2" ry="2" />
<text  x="610.35" y="431.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (33 samples, 0.07%)</title><rect x="732.4" y="357" width="0.8" height="15.0" fill="rgb(247,85,48)" rx="2" ry="2" />
<text  x="735.35" y="367.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (9 samples, 0.02%)</title><rect x="836.5" y="405" width="0.2" height="15.0" fill="rgb(213,144,42)" rx="2" ry="2" />
<text  x="839.52" y="415.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (5 samples, 0.01%)</title><rect x="19.0" y="261" width="0.2" height="15.0" fill="rgb(226,129,14)" rx="2" ry="2" />
<text  x="22.04" y="271.5" ></text>
</g>
<g >
<title>seastar::reactor::del_timer (22 samples, 0.05%)</title><rect x="66.3" y="373" width="0.6" height="15.0" fill="rgb(224,88,10)" rx="2" ry="2" />
<text  x="69.33" y="383.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_M_reset (14 samples, 0.03%)</title><rect x="40.4" y="437" width="0.4" height="15.0" fill="rgb(220,23,2)" rx="2" ry="2" />
<text  x="43.41" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::~vector (18 samples, 0.04%)</title><rect x="441.6" y="277" width="0.4" height="15.0" fill="rgb(211,22,37)" rx="2" ry="2" />
<text  x="444.60" y="287.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::size (9 samples, 0.02%)</title><rect x="947.1" y="405" width="0.2" height="15.0" fill="rgb(221,139,23)" rx="2" ry="2" />
<text  x="950.11" y="415.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::impl&gt;::_S_destroy&lt;seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::impl, mutation_fragment&gt; (9 samples, 0.02%)</title><rect x="277.2" y="293" width="0.2" height="15.0" fill="rgb(231,217,3)" rx="2" ry="2" />
<text  x="280.18" y="303.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::~abstract_read_executor (87 samples, 0.18%)</title><rect x="1172.3" y="437" width="2.2" height="15.0" fill="rgb(239,183,48)" rx="2" ry="2" />
<text  x="1175.34" y="447.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::has_token (16 samples, 0.03%)</title><rect x="644.2" y="421" width="0.4" height="15.0" fill="rgb(214,177,44)" rx="2" ry="2" />
<text  x="647.20" y="431.5" ></text>
</g>
<g >
<title>allocation_strategy::alloc&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::leaf_node&gt; (24 samples, 0.05%)</title><rect x="192.6" y="101" width="0.6" height="15.0" fill="rgb(252,175,18)" rx="2" ry="2" />
<text  x="195.62" y="111.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (41 samples, 0.09%)</title><rect x="753.6" y="325" width="1.0" height="15.0" fill="rgb(235,37,5)" rx="2" ry="2" />
<text  x="756.60" y="335.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;mutation_querier&gt;::_M_reset (6 samples, 0.01%)</title><rect x="546.0" y="421" width="0.1" height="15.0" fill="rgb(226,91,11)" rx="2" ry="2" />
<text  x="548.97" y="431.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (21 samples, 0.04%)</title><rect x="1144.3" y="501" width="0.5" height="15.0" fill="rgb(249,184,50)" rx="2" ry="2" />
<text  x="1147.31" y="511.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_9has_tokenERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES28_S2B_ (9 samples, 0.02%)</title><rect x="874.3" y="405" width="0.2" height="15.0" fill="rgb(250,64,10)" rx="2" ry="2" />
<text  x="877.26" y="415.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (93 samples, 0.20%)</title><rect x="190.1" y="117" width="2.3" height="15.0" fill="rgb(247,71,48)" rx="2" ry="2" />
<text  x="193.09" y="127.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (9 samples, 0.02%)</title><rect x="497.5" y="261" width="0.2" height="15.0" fill="rgb(210,51,13)" rx="2" ry="2" />
<text  x="500.51" y="271.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::clear (16 samples, 0.03%)</title><rect x="797.4" y="213" width="0.4" height="15.0" fill="rgb(224,65,15)" rx="2" ry="2" />
<text  x="800.38" y="223.5" ></text>
</g>
<g >
<title>TLS init function for cql3::query_options::specific_options::DEFAULT (5 samples, 0.01%)</title><rect x="714.8" y="453" width="0.1" height="15.0" fill="rgb(217,33,3)" rx="2" ry="2" />
<text  x="717.82" y="463.5" ></text>
</g>
<g >
<title>reader_selector::~reader_selector (14 samples, 0.03%)</title><rect x="570.3" y="341" width="0.4" height="15.0" fill="rgb(215,137,52)" rx="2" ry="2" />
<text  x="573.31" y="351.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::get_static_row (149 samples, 0.31%)</title><rect x="244.8" y="245" width="3.7" height="15.0" fill="rgb(210,229,52)" rx="2" ry="2" />
<text  x="247.79" y="255.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (8 samples, 0.02%)</title><rect x="480.6" y="181" width="0.2" height="15.0" fill="rgb(242,196,4)" rx="2" ry="2" />
<text  x="483.57" y="191.5" ></text>
</g>
<g >
<title>seastar::future_state_base::any::operator= (5 samples, 0.01%)</title><rect x="852.6" y="485" width="0.2" height="15.0" fill="rgb(238,98,24)" rx="2" ry="2" />
<text  x="855.64" y="495.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (30 samples, 0.06%)</title><rect x="1169.1" y="469" width="0.7" height="15.0" fill="rgb(215,188,43)" rx="2" ry="2" />
<text  x="1172.08" y="479.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (90 samples, 0.19%)</title><rect x="1100.3" y="357" width="2.2" height="15.0" fill="rgb(236,11,40)" rx="2" ry="2" />
<text  x="1103.31" y="367.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::Parser (5 samples, 0.01%)</title><rect x="15.5" y="405" width="0.1" height="15.0" fill="rgb(236,167,31)" rx="2" ry="2" />
<text  x="18.52" y="415.5" ></text>
</g>
<g >
<title>nonwrapping_interval&lt;dht::ring_position&gt;::nonwrapping_interval (68 samples, 0.14%)</title><rect x="924.1" y="373" width="1.7" height="15.0" fill="rgb(218,22,29)" rx="2" ry="2" />
<text  x="927.13" y="383.5" ></text>
</g>
<g >
<title>cql3::query_options::get_value_at (47 samples, 0.10%)</title><rect x="885.3" y="277" width="1.1" height="15.0" fill="rgb(249,124,22)" rx="2" ry="2" />
<text  x="888.26" y="287.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (5 samples, 0.01%)</title><rect x="395.1" y="229" width="0.2" height="15.0" fill="rgb(235,116,23)" rx="2" ry="2" />
<text  x="398.15" y="239.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::constant&gt;  (473 samples, 0.99%)</title><rect x="882.1" y="309" width="11.7" height="15.0" fill="rgb(239,134,2)" rx="2" ry="2" />
<text  x="885.09" y="319.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (75 samples, 0.16%)</title><rect x="392.2" y="213" width="1.9" height="15.0" fill="rgb(248,97,16)" rx="2" ry="2" />
<text  x="395.20" y="223.5" ></text>
</g>
<g >
<title>operator new (16 samples, 0.03%)</title><rect x="617.6" y="389" width="0.4" height="15.0" fill="rgb(210,65,15)" rx="2" ry="2" />
<text  x="620.58" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::vector (5 samples, 0.01%)</title><rect x="1049.8" y="293" width="0.1" height="15.0" fill="rgb(222,202,7)" rx="2" ry="2" />
<text  x="1052.80" y="303.5" ></text>
</g>
<g >
<title>cql3::expr::prepare_term (10 samples, 0.02%)</title><rect x="20.6" y="405" width="0.3" height="15.0" fill="rgb(226,62,17)" rx="2" ry="2" />
<text  x="23.65" y="415.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::~merging_reader (12 samples, 0.03%)</title><rect x="578.4" y="405" width="0.3" height="15.0" fill="rgb(215,199,46)" rx="2" ry="2" />
<text  x="581.38" y="415.5" ></text>
</g>
<g >
<title>__start_context (280 samples, 0.59%)</title><rect x="14.9" y="613" width="6.9" height="15.0" fill="rgb(250,93,30)" rx="2" ry="2" />
<text  x="17.88" y="623.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::value_ptr&gt; &gt;::invoke&lt;utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (83 samples, 0.17%)</title><rect x="730.0" y="357" width="2.1" height="15.0" fill="rgb(212,133,37)" rx="2" ry="2" />
<text  x="733.05" y="367.5" ></text>
</g>
<g >
<title>operator delete (21 samples, 0.04%)</title><rect x="408.6" y="293" width="0.5" height="15.0" fill="rgb(234,198,26)" rx="2" ry="2" />
<text  x="411.62" y="303.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::get_per_partition_limit (11 samples, 0.02%)</title><rect x="1122.2" y="405" width="0.2" height="15.0" fill="rgb(225,39,29)" rx="2" ry="2" />
<text  x="1125.18" y="415.5" ></text>
</g>
<g >
<title>double_decker&lt;long, memtable_entry, dht::raw_token_less_comparator, dht::ring_position_comparator, 16,  (1,073 samples, 2.25%)</title><rect x="459.3" y="325" width="26.5" height="15.0" fill="rgb(237,212,30)" rx="2" ry="2" />
<text  x="462.25" y="335.5" >d..</text>
</g>
<g >
<title>utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (336 samples, 0.71%)</title><rect x="784.7" y="213" width="8.3" height="15.0" fill="rgb(250,219,9)" rx="2" ry="2" />
<text  x="787.72" y="223.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (21 samples, 0.04%)</title><rect x="1068.0" y="293" width="0.5" height="15.0" fill="rgb(234,207,31)" rx="2" ry="2" />
<text  x="1070.97" y="303.5" ></text>
</g>
<g >
<title>mutation_partition::lower_bound (24 samples, 0.05%)</title><rect x="230.8" y="213" width="0.6" height="15.0" fill="rgb(220,125,25)" rx="2" ry="2" />
<text  x="233.83" y="223.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (29 samples, 0.06%)</title><rect x="40.9" y="469" width="0.7" height="15.0" fill="rgb(237,156,50)" rx="2" ry="2" />
<text  x="43.93" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (14 samples, 0.03%)</title><rect x="385.8" y="149" width="0.4" height="15.0" fill="rgb(232,61,8)" rx="2" ry="2" />
<text  x="388.81" y="159.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;abstract_type const&gt;::~shared_ptr (10 samples, 0.02%)</title><rect x="880.7" y="309" width="0.2" height="15.0" fill="rgb(212,217,45)" rx="2" ry="2" />
<text  x="883.70" y="319.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::find (23 samples, 0.05%)</title><rect x="952.1" y="357" width="0.6" height="15.0" fill="rgb(233,98,34)" rx="2" ry="2" />
<text  x="955.11" y="367.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::clear (6 samples, 0.01%)</title><rect x="826.9" y="437" width="0.1" height="15.0" fill="rgb(234,198,16)" rx="2" ry="2" />
<text  x="829.87" y="447.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::insertToken (11 samples, 0.02%)</title><rect x="15.7" y="309" width="0.3" height="15.0" fill="rgb(244,25,10)" rx="2" ry="2" />
<text  x="18.72" y="319.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (5 samples, 0.01%)</title><rect x="17.2" y="341" width="0.1" height="15.0" fill="rgb(209,55,15)" rx="2" ry="2" />
<text  x="20.16" y="351.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;, seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::finally_body&lt;seastar::smp::submit_to&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (253 samples, 0.53%)</title><rect x="625.3" y="501" width="6.3" height="15.0" fill="rgb(236,15,34)" rx="2" ry="2" />
<text  x="628.33" y="511.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::partition_tombstone (60 samples, 0.13%)</title><rect x="509.6" y="245" width="1.5" height="15.0" fill="rgb(249,89,27)" rx="2" ry="2" />
<text  x="512.64" y="255.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (120 samples, 0.25%)</title><rect x="656.0" y="485" width="3.0" height="15.0" fill="rgb(211,107,53)" rx="2" ry="2" />
<text  x="658.99" y="495.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (6 samples, 0.01%)</title><rect x="831.5" y="341" width="0.2" height="15.0" fill="rgb(210,193,7)" rx="2" ry="2" />
<text  x="834.55" y="351.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (10 samples, 0.02%)</title><rect x="1106.0" y="389" width="0.2" height="15.0" fill="rgb(227,158,25)" rx="2" ry="2" />
<text  x="1108.98" y="399.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;partition_snapshot&gt;::make&lt;seastar::lw_shared_ptr&lt;schema const&gt;&amp;, logalloc::region&amp;, mutation_cleaner&amp;, partition_entry*, cache_tracker*&amp;, unsigned long&amp;&gt; (34 samples, 0.07%)</title><rect x="515.3" y="293" width="0.9" height="15.0" fill="rgb(252,98,47)" rx="2" ry="2" />
<text  x="518.34" y="303.5" ></text>
</g>
<g >
<title>reader_permit::used_guard::~used_guard (417 samples, 0.88%)</title><rect x="61.2" y="453" width="10.3" height="15.0" fill="rgb(220,149,15)" rx="2" ry="2" />
<text  x="64.18" y="463.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;auth::resource&gt;::_Optional_payload_base (6 samples, 0.01%)</title><rect x="769.9" y="309" width="0.2" height="15.0" fill="rgb(223,126,39)" rx="2" ry="2" />
<text  x="772.94" y="319.5" ></text>
</g>
<g >
<title>_ZN7seastar12continuationINS_8internal22promise_base_with_typeIvEEZNS_6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE14discard_resultEvEUlDpOT_E_ZNSA_14then_impl_nrvoISE_NS4_IvEEEET0_OT_EUlOS3_RSE_ONS_12future_stateIS9_EEE_S9_E15run_and_disposeEv (478 samples, 1.00%)</title><rect x="30.2" y="501" width="11.8" height="15.0" fill="rgb(237,101,5)" rx="2" ry="2" />
<text  x="33.18" y="511.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::~_Variant_storage (6 samples, 0.01%)</title><rect x="881.1" y="309" width="0.1" height="15.0" fill="rgb(222,27,39)" rx="2" ry="2" />
<text  x="884.10" y="319.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (44 samples, 0.09%)</title><rect x="855.9" y="469" width="1.1" height="15.0" fill="rgb(235,170,13)" rx="2" ry="2" />
<text  x="858.94" y="479.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (10 samples, 0.02%)</title><rect x="246.8" y="197" width="0.2" height="15.0" fill="rgb(210,219,7)" rx="2" ry="2" />
<text  x="249.80" y="207.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (25 samples, 0.05%)</title><rect x="777.4" y="229" width="0.6" height="15.0" fill="rgb(251,164,30)" rx="2" ry="2" />
<text  x="780.37" y="239.5" ></text>
</g>
<g >
<title>database::find_column_family (56 samples, 0.12%)</title><rect x="1015.8" y="245" width="1.4" height="15.0" fill="rgb(219,7,37)" rx="2" ry="2" />
<text  x="1018.80" y="255.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (8 samples, 0.02%)</title><rect x="786.5" y="117" width="0.2" height="15.0" fill="rgb(250,158,38)" rx="2" ry="2" />
<text  x="789.53" y="127.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt; &gt;::invoke&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (22 samples, 0.05%)</title><rect x="999.5" y="293" width="0.5" height="15.0" fill="rgb(205,71,24)" rx="2" ry="2" />
<text  x="1002.48" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (23 samples, 0.05%)</title><rect x="490.3" y="277" width="0.6" height="15.0" fill="rgb(224,131,40)" rx="2" ry="2" />
<text  x="493.33" y="287.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;signed char, std::char_traits&lt;signed char&gt; &gt;::substr (6 samples, 0.01%)</title><rect x="914.2" y="341" width="0.1" height="15.0" fill="rgb(224,1,9)" rx="2" ry="2" />
<text  x="917.15" y="351.5" ></text>
</g>
<g >
<title>table::add_coordinator_read_latency (5 samples, 0.01%)</title><rect x="1170.1" y="485" width="0.1" height="15.0" fill="rgb(216,153,45)" rx="2" ry="2" />
<text  x="1173.12" y="495.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;std::function&lt;flat_mutation_reader  (16 samples, 0.03%)</title><rect x="602.4" y="437" width="0.3" height="15.0" fill="rgb(240,200,9)" rx="2" ry="2" />
<text  x="605.35" y="447.5" ></text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;void&gt;, service::storage_proxy*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt;, db::consistency_level, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, tracing::trace_state_ptr, service_permit, bool, seastar::lw_shared_ptr&lt;cdc::operation_result_tracker&gt; &gt;::make_stage_for_group (31 samples, 0.07%)</title><rect x="1142.3" y="405" width="0.8" height="15.0" fill="rgb(219,39,40)" rx="2" ry="2" />
<text  x="1145.31" y="415.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;gms::inet_address, std::pair&lt;gms::inet_address const, table::cache_hit_rate&gt;, std::allocator&lt;std::pair&lt;gms::inet_address const, table::cache_hit_rate&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;gms::inet_address&gt;, std::hash&lt;gms::inet_address&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (12 samples, 0.03%)</title><rect x="702.6" y="421" width="0.3" height="15.0" fill="rgb(228,79,17)" rx="2" ry="2" />
<text  x="705.56" y="431.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::contains&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (135 samples, 0.28%)</title><rect x="829.5" y="405" width="3.3" height="15.0" fill="rgb(236,32,18)" rx="2" ry="2" />
<text  x="832.47" y="415.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::maybe_decay_reserve (7 samples, 0.01%)</title><rect x="217.7" y="181" width="0.2" height="15.0" fill="rgb(232,183,0)" rx="2" ry="2" />
<text  x="220.68" y="191.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_insert_unique_node (85 samples, 0.18%)</title><rect x="1157.8" y="453" width="2.1" height="15.0" fill="rgb(228,179,35)" rx="2" ry="2" />
<text  x="1160.76" y="463.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::schedule&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (46 samples, 0.10%)</title><rect x="824.7" y="389" width="1.1" height="15.0" fill="rgb(239,67,16)" rx="2" ry="2" />
<text  x="827.69" y="399.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (8 samples, 0.02%)</title><rect x="923.2" y="389" width="0.2" height="15.0" fill="rgb(210,138,8)" rx="2" ry="2" />
<text  x="926.17" y="399.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.01%)</title><rect x="842.4" y="373" width="0.1" height="15.0" fill="rgb(229,59,51)" rx="2" ry="2" />
<text  x="845.42" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (51 samples, 0.11%)</title><rect x="879.4" y="293" width="1.3" height="15.0" fill="rgb(227,123,5)" rx="2" ry="2" />
<text  x="882.44" y="303.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (14 samples, 0.03%)</title><rect x="259.6" y="325" width="0.3" height="15.0" fill="rgb(235,11,16)" rx="2" ry="2" />
<text  x="262.57" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (5 samples, 0.01%)</title><rect x="665.8" y="469" width="0.1" height="15.0" fill="rgb(230,1,25)" rx="2" ry="2" />
<text  x="668.77" y="479.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;query::read_command&gt;::make&lt;utils::UUID const&amp;, utils::UUID, query::partition_slice, query::max_result_size, query::row_limit, query::partition_limit, std::chrono::time_point&lt;gc_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt; &gt;&amp;, std::optional&lt;tracing::trace_info&gt;, utils::UUID, seastar::bool_class&lt;query::is_first_page_tag&gt; const&amp;, long&gt; (193 samples, 0.41%)</title><rect x="1129.4" y="421" width="4.8" height="15.0" fill="rgb(241,36,28)" rx="2" ry="2" />
<text  x="1132.41" y="431.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::deallocate (7 samples, 0.01%)</title><rect x="509.0" y="229" width="0.2" height="15.0" fill="rgb(249,46,26)" rx="2" ry="2" />
<text  x="512.00" y="239.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::~_Variant_storage (9 samples, 0.02%)</title><rect x="893.9" y="325" width="0.2" height="15.0" fill="rgb(232,126,25)" rx="2" ry="2" />
<text  x="896.90" y="335.5" ></text>
</g>
<g >
<title>seastar::promise&lt;void&gt;::promise (5 samples, 0.01%)</title><rect x="1031.1" y="197" width="0.1" height="15.0" fill="rgb(225,55,24)" rx="2" ry="2" />
<text  x="1034.10" y="207.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_allocate_buckets (5 samples, 0.01%)</title><rect x="1158.4" y="421" width="0.2" height="15.0" fill="rgb(240,26,30)" rx="2" ry="2" />
<text  x="1161.43" y="431.5" ></text>
</g>
<g >
<title>[unknown] (172 samples, 0.36%)</title><rect x="10.2" y="597" width="4.3" height="15.0" fill="rgb(254,187,29)" rx="2" ry="2" />
<text  x="13.25" y="607.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (7 samples, 0.01%)</title><rect x="518.7" y="325" width="0.1" height="15.0" fill="rgb(210,25,21)" rx="2" ry="2" />
<text  x="521.66" y="335.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (7 samples, 0.01%)</title><rect x="770.3" y="309" width="0.2" height="15.0" fill="rgb(241,193,17)" rx="2" ry="2" />
<text  x="773.34" y="319.5" ></text>
</g>
<g >
<title>dht::murmur3_partitioner::get_token (578 samples, 1.21%)</title><rect x="908.3" y="389" width="14.3" height="15.0" fill="rgb(231,139,54)" rx="2" ry="2" />
<text  x="911.33" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%)</title><rect x="32.1" y="485" width="0.1" height="15.0" fill="rgb(221,1,20)" rx="2" ry="2" />
<text  x="35.06" y="495.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (6 samples, 0.01%)</title><rect x="826.7" y="437" width="0.2" height="15.0" fill="rgb(209,97,9)" rx="2" ry="2" />
<text  x="829.72" y="447.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;position_in_partition&gt;::_M_reset (8 samples, 0.02%)</title><rect x="227.2" y="245" width="0.2" height="15.0" fill="rgb(220,95,37)" rx="2" ry="2" />
<text  x="230.16" y="255.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (12 samples, 0.03%)</title><rect x="676.7" y="453" width="0.3" height="15.0" fill="rgb(238,229,44)" rx="2" ry="2" />
<text  x="679.74" y="463.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_push_back_aux&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (6 samples, 0.01%)</title><rect x="15.8" y="261" width="0.2" height="15.0" fill="rgb(224,55,50)" rx="2" ry="2" />
<text  x="18.82" y="271.5" ></text>
</g>
<g >
<title>seastar::future&lt;std::tuple&lt;std::optional&lt;clustering_key_prefix&gt; &gt; &gt;::then_impl&lt;query::querier&lt; (34 samples, 0.07%)</title><rect x="536.9" y="421" width="0.8" height="15.0" fill="rgb(210,187,30)" rx="2" ry="2" />
<text  x="539.86" y="431.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::then_impl&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (20 samples, 0.04%)</title><rect x="108.4" y="373" width="0.5" height="15.0" fill="rgb(217,223,9)" rx="2" ry="2" />
<text  x="111.38" y="383.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_state&lt;std::tuple&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (9 samples, 0.02%)</title><rect x="292.1" y="293" width="0.2" height="15.0" fill="rgb(245,142,39)" rx="2" ry="2" />
<text  x="295.09" y="303.5" ></text>
</g>
<g >
<title>[unknown] (496 samples, 1.04%)</title><rect x="10.0" y="629" width="12.3" height="15.0" fill="rgb(229,51,26)" rx="2" ry="2" />
<text  x="13.02" y="639.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;tracking_allocator&lt;mutation_fragment&gt; &gt;::_S_destroy&lt;tracking_allocator&lt;mutation_fragment&gt;, mutation_fragment&gt; (8 samples, 0.02%)</title><rect x="126.3" y="245" width="0.2" height="15.0" fill="rgb(229,28,21)" rx="2" ry="2" />
<text  x="129.26" y="255.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_create_nodes (66 samples, 0.14%)</title><rect x="542.3" y="357" width="1.6" height="15.0" fill="rgb(216,111,50)" rx="2" ry="2" />
<text  x="545.30" y="367.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::clear (5 samples, 0.01%)</title><rect x="652.3" y="485" width="0.1" height="15.0" fill="rgb(244,33,1)" rx="2" ry="2" />
<text  x="655.27" y="495.5" ></text>
</g>
<g >
<title>nonwrapping_interval&lt;dht::ring_position&gt;::make_singular (97 samples, 0.20%)</title><rect x="923.7" y="389" width="2.4" height="15.0" fill="rgb(227,88,40)" rx="2" ry="2" />
<text  x="926.66" y="399.5" ></text>
</g>
<g >
<title>reader_permit::impl::mark_unused (5 samples, 0.01%)</title><rect x="681.2" y="469" width="0.2" height="15.0" fill="rgb(230,39,42)" rx="2" ry="2" />
<text  x="684.24" y="479.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;bytes_ostream::chunk, std::default_delete&lt;bytes_ostream::chunk&gt; &gt;::reset (7 samples, 0.01%)</title><rect x="594.8" y="389" width="0.2" height="15.0" fill="rgb(243,203,19)" rx="2" ry="2" />
<text  x="597.80" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::~vector (20 samples, 0.04%)</title><rect x="631.1" y="469" width="0.5" height="15.0" fill="rgb(209,108,18)" rx="2" ry="2" />
<text  x="634.10" y="479.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::schedule&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::make_data_requests (121 samples, 0.25%)</title><rect x="993.9" y="277" width="3.0" height="15.0" fill="rgb(236,206,42)" rx="2" ry="2" />
<text  x="996.91" y="287.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::operator (8 samples, 0.02%)</title><rect x="818.6" y="293" width="0.2" height="15.0" fill="rgb(218,45,43)" rx="2" ry="2" />
<text  x="821.57" y="303.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::clear (6 samples, 0.01%)</title><rect x="746.4" y="405" width="0.1" height="15.0" fill="rgb(225,61,46)" rx="2" ry="2" />
<text  x="749.37" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (27 samples, 0.06%)</title><rect x="32.2" y="485" width="0.7" height="15.0" fill="rgb(240,21,27)" rx="2" ry="2" />
<text  x="35.19" y="495.5" ></text>
</g>
<g >
<title>flat_mutation_reader::close (645 samples, 1.35%)</title><rect x="549.4" y="341" width="16.0" height="15.0" fill="rgb(230,177,7)" rx="2" ry="2" />
<text  x="552.39" y="351.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (47 samples, 0.10%)</title><rect x="1016.0" y="213" width="1.2" height="15.0" fill="rgb(234,46,36)" rx="2" ry="2" />
<text  x="1019.02" y="223.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (8 samples, 0.02%)</title><rect x="579.3" y="421" width="0.2" height="15.0" fill="rgb(219,79,7)" rx="2" ry="2" />
<text  x="582.27" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (11 samples, 0.02%)</title><rect x="659.8" y="469" width="0.3" height="15.0" fill="rgb(226,160,36)" rx="2" ry="2" />
<text  x="662.85" y="479.5" ></text>
</g>
<g >
<title>std::default_delete&lt;cql3::query_options&gt;::operator (144 samples, 0.30%)</title><rect x="666.0" y="469" width="3.6" height="15.0" fill="rgb(238,196,4)" rx="2" ry="2" />
<text  x="668.99" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%)</title><rect x="73.7" y="453" width="0.1" height="15.0" fill="rgb(225,42,42)" rx="2" ry="2" />
<text  x="76.69" y="463.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::operator (100 samples, 0.21%)</title><rect x="264.7" y="325" width="2.5" height="15.0" fill="rgb(224,159,19)" rx="2" ry="2" />
<text  x="267.70" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (50 samples, 0.10%)</title><rect x="1020.0" y="213" width="1.3" height="15.0" fill="rgb(222,214,24)" rx="2" ry="2" />
<text  x="1023.03" y="223.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (14 samples, 0.03%)</title><rect x="616.2" y="389" width="0.3" height="15.0" fill="rgb(208,40,51)" rx="2" ry="2" />
<text  x="619.19" y="399.5" ></text>
</g>
<g >
<title>database::has_keyspace (116 samples, 0.24%)</title><rect x="817.2" y="357" width="2.8" height="15.0" fill="rgb(223,162,27)" rx="2" ry="2" />
<text  x="820.16" y="367.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;, seastar::future&lt;void&gt; &gt;, std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;, seastar::future&lt;void&gt; &gt; &gt; &gt;::~unique_ptr (9 samples, 0.02%)</title><rect x="820.3" y="405" width="0.2" height="15.0" fill="rgb(214,196,18)" rx="2" ry="2" />
<text  x="823.31" y="415.5" ></text>
</g>
<g >
<title>compound_type&lt; (9 samples, 0.02%)</title><rect x="539.9" y="341" width="0.3" height="15.0" fill="rgb(207,190,53)" rx="2" ry="2" />
<text  x="542.93" y="351.5" ></text>
</g>
<g >
<title>bytes_view_hasher::update (14 samples, 0.03%)</title><rect x="722.2" y="293" width="0.3" height="15.0" fill="rgb(206,73,12)" rx="2" ry="2" />
<text  x="725.20" y="303.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (44 samples, 0.09%)</title><rect x="1107.0" y="405" width="1.1" height="15.0" fill="rgb(232,202,44)" rx="2" ry="2" />
<text  x="1110.05" y="415.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (6 samples, 0.01%)</title><rect x="446.2" y="261" width="0.1" height="15.0" fill="rgb(245,102,39)" rx="2" ry="2" />
<text  x="449.18" y="271.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (13 samples, 0.03%)</title><rect x="690.7" y="469" width="0.3" height="15.0" fill="rgb(209,227,7)" rx="2" ry="2" />
<text  x="693.65" y="479.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::~partition_snapshot_flat_reader (511 samples, 1.07%)</title><rect x="552.5" y="325" width="12.6" height="15.0" fill="rgb(251,115,42)" rx="2" ry="2" />
<text  x="555.48" y="335.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (8 samples, 0.02%)</title><rect x="1141.6" y="453" width="0.2" height="15.0" fill="rgb(242,173,5)" rx="2" ry="2" />
<text  x="1144.57" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (24 samples, 0.05%)</title><rect x="768.3" y="293" width="0.6" height="15.0" fill="rgb(209,213,25)" rx="2" ry="2" />
<text  x="771.28" y="303.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_map&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::at&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt; &gt; (179 samples, 0.38%)</title><rect x="1057.8" y="325" width="4.4" height="15.0" fill="rgb(216,48,6)" rx="2" ry="2" />
<text  x="1060.80" y="335.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (14 samples, 0.03%)</title><rect x="553.6" y="277" width="0.4" height="15.0" fill="rgb(211,59,42)" rx="2" ry="2" />
<text  x="556.65" y="287.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (6 samples, 0.01%)</title><rect x="1036.7" y="245" width="0.1" height="15.0" fill="rgb(224,108,19)" rx="2" ry="2" />
<text  x="1039.65" y="255.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;std::pair&lt;seastar::shared_ptr&lt;service::abstract_read_executor&gt;, nonwrapping_interval&lt;dht::token&gt; &gt;, 1ul&gt;::~small_vector (173 samples, 0.36%)</title><rect x="1170.4" y="485" width="4.3" height="15.0" fill="rgb(222,146,40)" rx="2" ry="2" />
<text  x="1173.41" y="495.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::entry::entry (100 samples, 0.21%)</title><rect x="1026.5" y="165" width="2.5" height="15.0" fill="rgb(223,167,5)" rx="2" ry="2" />
<text  x="1029.52" y="175.5" ></text>
</g>
<g >
<title>operator delete (25 samples, 0.05%)</title><rect x="665.1" y="469" width="0.6" height="15.0" fill="rgb(228,12,13)" rx="2" ry="2" />
<text  x="668.12" y="479.5" ></text>
</g>
<g >
<title>operator new (66 samples, 0.14%)</title><rect x="1129.8" y="405" width="1.6" height="15.0" fill="rgb(233,196,46)" rx="2" ry="2" />
<text  x="1132.78" y="415.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::get_promise (8 samples, 0.02%)</title><rect x="1129.2" y="421" width="0.2" height="15.0" fill="rgb(212,1,32)" rx="2" ry="2" />
<text  x="1132.18" y="431.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (21 samples, 0.04%)</title><rect x="793.0" y="213" width="0.6" height="15.0" fill="rgb(208,119,51)" rx="2" ry="2" />
<text  x="796.04" y="223.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;service::digest_read_resolver, false&gt;::make&lt;seastar::lw_shared_ptr&lt;schema const&gt;&amp;, db::consistency_level&amp;, unsigned long&amp;, unsigned long, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;&amp;&gt; (321 samples, 0.67%)</title><rect x="983.3" y="341" width="7.9" height="15.0" fill="rgb(253,205,38)" rx="2" ry="2" />
<text  x="986.26" y="351.5" ></text>
</g>
<g >
<title>query::result::builder::build (9 samples, 0.02%)</title><rect x="58.2" y="453" width="0.2" height="15.0" fill="rgb(228,191,4)" rx="2" ry="2" />
<text  x="61.19" y="463.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (19 samples, 0.04%)</title><rect x="1047.4" y="197" width="0.4" height="15.0" fill="rgb(244,188,19)" rx="2" ry="2" />
<text  x="1050.37" y="207.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE9then_implIZNS6_14discard_resultEvEUlDpOT_E_NS0_IvEEEET0_OT_ (103 samples, 0.22%)</title><rect x="710.8" y="469" width="2.6" height="15.0" fill="rgb(236,61,29)" rx="2" ry="2" />
<text  x="713.81" y="479.5" ></text>
</g>
<g >
<title>mutation_reader_merger::add_readers (143 samples, 0.30%)</title><rect x="436.7" y="277" width="3.5" height="15.0" fill="rgb(241,170,38)" rx="2" ry="2" />
<text  x="439.67" y="287.5" ></text>
</g>
<g >
<title>std::__optional_hash_call_base&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, true&gt;::operator (6 samples, 0.01%)</title><rect x="792.7" y="85" width="0.1" height="15.0" fill="rgb(237,25,8)" rx="2" ry="2" />
<text  x="795.67" y="95.5" ></text>
</g>
<g >
<title>utils::tuple_hash::operator (150 samples, 0.31%)</title><rect x="789.2" y="165" width="3.7" height="15.0" fill="rgb(228,23,15)" rx="2" ry="2" />
<text  x="792.23" y="175.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::clear (5 samples, 0.01%)</title><rect x="694.2" y="469" width="0.2" height="15.0" fill="rgb(206,103,17)" rx="2" ry="2" />
<text  x="697.24" y="479.5" ></text>
</g>
<g >
<title>std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;, seastar::future&lt;void&gt; &gt; &gt;::operator (42 samples, 0.09%)</title><rect x="809.7" y="373" width="1.0" height="15.0" fill="rgb(209,168,41)" rx="2" ry="2" />
<text  x="812.71" y="383.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (9 samples, 0.02%)</title><rect x="484.6" y="181" width="0.2" height="15.0" fill="rgb(242,91,1)" rx="2" ry="2" />
<text  x="487.61" y="191.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::mutation_fragment_merger (151 samples, 0.32%)</title><rect x="446.3" y="277" width="3.8" height="15.0" fill="rgb(224,39,23)" rx="2" ry="2" />
<text  x="449.33" y="287.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (32 samples, 0.07%)</title><rect x="1106.2" y="405" width="0.8" height="15.0" fill="rgb(246,61,2)" rx="2" ry="2" />
<text  x="1109.23" y="415.5" ></text>
</g>
<g >
<title>locator::abstract_replication_strategy::get_natural_endpoints (559 samples, 1.17%)</title><rect x="1079.1" y="293" width="13.8" height="15.0" fill="rgb(252,132,7)" rx="2" ry="2" />
<text  x="1082.09" y="303.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (9 samples, 0.02%)</title><rect x="881.2" y="309" width="0.3" height="15.0" fill="rgb(253,18,20)" rx="2" ry="2" />
<text  x="884.24" y="319.5" ></text>
</g>
<g >
<title>malloc (26 samples, 0.05%)</title><rect x="593.9" y="373" width="0.6" height="15.0" fill="rgb(250,37,48)" rx="2" ry="2" />
<text  x="596.88" y="383.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::~small_vector (8 samples, 0.02%)</title><rect x="451.4" y="309" width="0.2" height="15.0" fill="rgb(226,187,54)" rx="2" ry="2" />
<text  x="454.38" y="319.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (130 samples, 0.27%)</title><rect x="1058.6" y="309" width="3.2" height="15.0" fill="rgb(211,194,16)" rx="2" ry="2" />
<text  x="1061.56" y="319.5" ></text>
</g>
<g >
<title>std::__lower_bound&lt;__gnu_cxx::__normal_iterator&lt;long*, std::vector&lt;long, std::allocator&lt;long&gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_less_val&gt; (40 samples, 0.08%)</title><rect x="1164.6" y="453" width="1.0" height="15.0" fill="rgb(230,147,20)" rx="2" ry="2" />
<text  x="1167.59" y="463.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (38 samples, 0.08%)</title><rect x="214.0" y="165" width="1.0" height="15.0" fill="rgb(238,24,18)" rx="2" ry="2" />
<text  x="217.01" y="175.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_singular (1,153 samples, 2.42%)</title><rect x="1146.1" y="501" width="28.6" height="15.0" fill="rgb(246,148,53)" rx="2" ry="2" />
<text  x="1149.15" y="511.5" >se..</text>
</g>
<g >
<title>seastar::memory::allocate (81 samples, 0.17%)</title><rect x="994.4" y="245" width="2.0" height="15.0" fill="rgb(220,116,37)" rx="2" ry="2" />
<text  x="997.36" y="255.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_impl&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (24 samples, 0.05%)</title><rect x="680.6" y="405" width="0.6" height="15.0" fill="rgb(206,10,39)" rx="2" ry="2" />
<text  x="683.60" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (16 samples, 0.03%)</title><rect x="835.6" y="373" width="0.4" height="15.0" fill="rgb(234,167,23)" rx="2" ry="2" />
<text  x="838.63" y="383.5" ></text>
</g>
<g >
<title>operator delete (56 samples, 0.12%)</title><rect x="551.1" y="325" width="1.4" height="15.0" fill="rgb(241,120,43)" rx="2" ry="2" />
<text  x="554.07" y="335.5" ></text>
</g>
<g >
<title>operator new (23 samples, 0.05%)</title><rect x="541.7" y="357" width="0.6" height="15.0" fill="rgb(249,195,0)" rx="2" ry="2" />
<text  x="544.71" y="367.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::operator (12 samples, 0.03%)</title><rect x="1059.7" y="277" width="0.3" height="15.0" fill="rgb(249,59,47)" rx="2" ry="2" />
<text  x="1062.73" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (158 samples, 0.33%)</title><rect x="1017.4" y="229" width="3.9" height="15.0" fill="rgb(249,165,4)" rx="2" ry="2" />
<text  x="1020.36" y="239.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::query_options, std::default_delete&lt;cql3::query_options&gt; &gt;::~unique_ptr (20 samples, 0.04%)</title><rect x="847.4" y="453" width="0.5" height="15.0" fill="rgb(252,19,11)" rx="2" ry="2" />
<text  x="850.37" y="463.5" ></text>
</g>
<g >
<title>std::__optional_hash_call_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, true&gt;::operator (24 samples, 0.05%)</title><rect x="737.1" y="309" width="0.6" height="15.0" fill="rgb(252,84,32)" rx="2" ry="2" />
<text  x="740.13" y="319.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::~modification_statement (8 samples, 0.02%)</title><rect x="637.4" y="469" width="0.2" height="15.0" fill="rgb(251,138,44)" rx="2" ry="2" />
<text  x="640.44" y="479.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (17 samples, 0.04%)</title><rect x="222.7" y="213" width="0.4" height="15.0" fill="rgb(231,198,25)" rx="2" ry="2" />
<text  x="225.73" y="223.5" ></text>
</g>
<g >
<title>operator delete (32 samples, 0.07%)</title><rect x="801.8" y="309" width="0.8" height="15.0" fill="rgb(218,183,20)" rx="2" ry="2" />
<text  x="804.78" y="319.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (10 samples, 0.02%)</title><rect x="67.4" y="373" width="0.2" height="15.0" fill="rgb(232,131,22)" rx="2" ry="2" />
<text  x="70.37" y="383.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;partition_snapshot&gt;::make&lt;seastar::lw_shared_ptr&lt;schema const&gt;&amp;, logalloc::region&amp;, mutation_cleaner&amp;, partition_entry*, cache_tracker*&amp;, unsigned long&amp;&gt; (8 samples, 0.02%)</title><rect x="516.2" y="309" width="0.2" height="15.0" fill="rgb(219,54,24)" rx="2" ry="2" />
<text  x="519.18" y="319.5" ></text>
</g>
<g >
<title>operator new (26 samples, 0.05%)</title><rect x="849.1" y="437" width="0.7" height="15.0" fill="rgb(249,62,26)" rx="2" ry="2" />
<text  x="852.13" y="447.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (10 samples, 0.02%)</title><rect x="282.8" y="325" width="0.2" height="15.0" fill="rgb(248,75,24)" rx="2" ry="2" />
<text  x="285.80" y="335.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::do_execute (43 samples, 0.09%)</title><rect x="856.0" y="437" width="1.0" height="15.0" fill="rgb(228,85,39)" rx="2" ry="2" />
<text  x="858.96" y="447.5" ></text>
</g>
<g >
<title>locator::effective_replication_map::get_natural_endpoints_without_node_being_replaced (607 samples, 1.27%)</title><rect x="1078.6" y="309" width="15.0" height="15.0" fill="rgb(248,11,15)" rx="2" ry="2" />
<text  x="1081.60" y="319.5" ></text>
</g>
<g >
<title>service::client_state::has_column_family_access (7 samples, 0.01%)</title><rect x="21.5" y="469" width="0.2" height="15.0" fill="rgb(209,97,10)" rx="2" ry="2" />
<text  x="24.54" y="479.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (11 samples, 0.02%)</title><rect x="607.6" y="389" width="0.2" height="15.0" fill="rgb(252,72,22)" rx="2" ry="2" />
<text  x="610.58" y="399.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::~guard (11 samples, 0.02%)</title><rect x="486.7" y="325" width="0.2" height="15.0" fill="rgb(234,200,18)" rx="2" ry="2" />
<text  x="489.67" y="335.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::impl&gt;::_S_destroy&lt;seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::impl, mutation_fragment&gt; (9 samples, 0.02%)</title><rect x="146.0" y="197" width="0.3" height="15.0" fill="rgb(245,176,8)" rx="2" ry="2" />
<text  x="149.04" y="207.5" ></text>
</g>
<g >
<title>list_reader_selector::create_new_readers (11 samples, 0.02%)</title><rect x="435.0" y="293" width="0.3" height="15.0" fill="rgb(209,109,30)" rx="2" ry="2" />
<text  x="438.04" y="303.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (6 samples, 0.01%)</title><rect x="991.9" y="325" width="0.1" height="15.0" fill="rgb(226,197,5)" rx="2" ry="2" />
<text  x="994.88" y="335.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (6 samples, 0.01%)</title><rect x="719.4" y="293" width="0.2" height="15.0" fill="rgb(230,54,27)" rx="2" ry="2" />
<text  x="722.43" y="303.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (34 samples, 0.07%)</title><rect x="1132.5" y="389" width="0.8" height="15.0" fill="rgb(206,224,39)" rx="2" ry="2" />
<text  x="1135.50" y="399.5" ></text>
</g>
<g >
<title>operator new (26 samples, 0.05%)</title><rect x="241.9" y="181" width="0.6" height="15.0" fill="rgb(218,90,0)" rx="2" ry="2" />
<text  x="244.89" y="191.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (10 samples, 0.02%)</title><rect x="761.0" y="341" width="0.2" height="15.0" fill="rgb(230,45,35)" rx="2" ry="2" />
<text  x="763.95" y="351.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (41 samples, 0.09%)</title><rect x="909.1" y="357" width="1.0" height="15.0" fill="rgb(232,159,54)" rx="2" ry="2" />
<text  x="912.10" y="367.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;,  (226 samples, 0.47%)</title><rect x="717.9" y="421" width="5.6" height="15.0" fill="rgb(234,196,48)" rx="2" ry="2" />
<text  x="720.94" y="431.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::then_impl&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (551 samples, 1.16%)</title><rect x="269.6" y="357" width="13.6" height="15.0" fill="rgb(232,145,29)" rx="2" ry="2" />
<text  x="272.60" y="367.5" ></text>
</g>
<g >
<title>mutation_querier::consume_end_of_stream (46 samples, 0.10%)</title><rect x="302.3" y="213" width="1.2" height="15.0" fill="rgb(247,162,47)" rx="2" ry="2" />
<text  x="305.34" y="223.5" ></text>
</g>
<g >
<title>__dynamic_cast (54 samples, 0.11%)</title><rect x="868.6" y="421" width="1.4" height="15.0" fill="rgb(253,127,41)" rx="2" ry="2" />
<text  x="871.62" y="431.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (21 samples, 0.04%)</title><rect x="922.6" y="389" width="0.6" height="15.0" fill="rgb(237,176,54)" rx="2" ry="2" />
<text  x="925.65" y="399.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::clear (5 samples, 0.01%)</title><rect x="135.3" y="277" width="0.1" height="15.0" fill="rgb(219,154,5)" rx="2" ry="2" />
<text  x="138.27" y="287.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::local (18 samples, 0.04%)</title><rect x="1064.3" y="341" width="0.5" height="15.0" fill="rgb(230,47,11)" rx="2" ry="2" />
<text  x="1067.33" y="351.5" ></text>
</g>
<g >
<title>dht::tri_compare (10 samples, 0.02%)</title><rect x="1092.4" y="245" width="0.2" height="15.0" fill="rgb(205,163,26)" rx="2" ry="2" />
<text  x="1095.36" y="255.5" ></text>
</g>
<g >
<title>ser::qr_clustered_row__cells&lt;bytes_ostream&gt;::start_cells (19 samples, 0.04%)</title><rect x="330.6" y="181" width="0.5" height="15.0" fill="rgb(216,190,37)" rx="2" ry="2" />
<text  x="333.62" y="191.5" ></text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::operator (73 samples, 0.15%)</title><rect x="743.4" y="389" width="1.8" height="15.0" fill="rgb(216,140,53)" rx="2" ry="2" />
<text  x="746.37" y="399.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (13 samples, 0.03%)</title><rect x="429.3" y="341" width="0.3" height="15.0" fill="rgb(244,22,19)" rx="2" ry="2" />
<text  x="432.29" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_move_assign (7 samples, 0.01%)</title><rect x="441.4" y="277" width="0.2" height="15.0" fill="rgb(241,178,52)" rx="2" ry="2" />
<text  x="444.43" y="287.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (84 samples, 0.18%)</title><rect x="342.5" y="165" width="2.1" height="15.0" fill="rgb(224,54,0)" rx="2" ry="2" />
<text  x="345.50" y="175.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (25 samples, 0.05%)</title><rect x="231.8" y="197" width="0.6" height="15.0" fill="rgb(250,189,9)" rx="2" ry="2" />
<text  x="234.77" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (11 samples, 0.02%)</title><rect x="519.4" y="325" width="0.3" height="15.0" fill="rgb(224,201,12)" rx="2" ry="2" />
<text  x="522.43" y="335.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::invoke&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (6 samples, 0.01%)</title><rect x="284.1" y="357" width="0.1" height="15.0" fill="rgb(252,139,6)" rx="2" ry="2" />
<text  x="287.09" y="367.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (13 samples, 0.03%)</title><rect x="156.6" y="213" width="0.3" height="15.0" fill="rgb(243,138,12)" rx="2" ry="2" />
<text  x="159.61" y="223.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (5 samples, 0.01%)</title><rect x="98.8" y="421" width="0.1" height="15.0" fill="rgb(229,108,7)" rx="2" ry="2" />
<text  x="101.82" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (23 samples, 0.05%)</title><rect x="1160.7" y="405" width="0.6" height="15.0" fill="rgb(212,193,8)" rx="2" ry="2" />
<text  x="1163.71" y="415.5" ></text>
</g>
<g >
<title>database::find_uuid (144 samples, 0.30%)</title><rect x="813.4" y="357" width="3.5" height="15.0" fill="rgb(252,109,36)" rx="2" ry="2" />
<text  x="816.37" y="367.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::clear (7 samples, 0.01%)</title><rect x="575.2" y="357" width="0.1" height="15.0" fill="rgb(243,174,16)" rx="2" ry="2" />
<text  x="578.16" y="367.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (13 samples, 0.03%)</title><rect x="752.2" y="309" width="0.3" height="15.0" fill="rgb(221,66,7)" rx="2" ry="2" />
<text  x="755.21" y="319.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;void&gt;::satisfy_with_result_of&lt;seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::then_wrapped_nrvo&lt;void, service::abstract_read_executor::make_data_requests (409 samples, 0.86%)</title><rect x="693.5" y="485" width="10.1" height="15.0" fill="rgb(222,4,35)" rx="2" ry="2" />
<text  x="696.48" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (6 samples, 0.01%)</title><rect x="802.4" y="293" width="0.2" height="15.0" fill="rgb(231,35,8)" rx="2" ry="2" />
<text  x="805.43" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::find_and_unlink_span_reclaiming (5 samples, 0.01%)</title><rect x="543.7" y="261" width="0.1" height="15.0" fill="rgb(239,119,54)" rx="2" ry="2" />
<text  x="546.72" y="271.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;query::read_command&gt;::dispose (78 samples, 0.16%)</title><rect x="38.9" y="469" width="1.9" height="15.0" fill="rgb(207,187,7)" rx="2" ry="2" />
<text  x="41.90" y="479.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_node (33 samples, 0.07%)</title><rect x="658.0" y="437" width="0.8" height="15.0" fill="rgb(221,129,17)" rx="2" ry="2" />
<text  x="661.02" y="447.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::mutation_fragment_merger (8 samples, 0.02%)</title><rect x="450.8" y="293" width="0.2" height="15.0" fill="rgb(229,77,34)" rx="2" ry="2" />
<text  x="453.76" y="303.5" ></text>
</g>
<g >
<title>antlr3::IntStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::_LA (6 samples, 0.01%)</title><rect x="16.4" y="245" width="0.1" height="15.0" fill="rgb(235,57,46)" rx="2" ry="2" />
<text  x="19.36" y="255.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::digest_read_resolver&gt;::~shared_ptr (23 samples, 0.05%)</title><rect x="982.7" y="341" width="0.5" height="15.0" fill="rgb(223,43,40)" rx="2" ry="2" />
<text  x="985.67" y="351.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;std::function&lt;std::function&lt;partition_presence_checker_result  (6 samples, 0.01%)</title><rect x="602.7" y="437" width="0.2" height="15.0" fill="rgb(243,138,3)" rx="2" ry="2" />
<text  x="605.75" y="447.5" ></text>
</g>
<g >
<title>cql3::restrictions::clustering_key_restrictions::needs_filtering (7 samples, 0.01%)</title><rect x="870.1" y="421" width="0.2" height="15.0" fill="rgb(206,200,54)" rx="2" ry="2" />
<text  x="873.08" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_nodes (5 samples, 0.01%)</title><rect x="658.8" y="469" width="0.2" height="15.0" fill="rgb(236,223,49)" rx="2" ry="2" />
<text  x="661.83" y="479.5" ></text>
</g>
<g >
<title>flat_mutation_reader::peek (25 samples, 0.05%)</title><rect x="285.0" y="373" width="0.6" height="15.0" fill="rgb(250,53,12)" rx="2" ry="2" />
<text  x="287.96" y="383.5" ></text>
</g>
<g >
<title>std::uniform_int_distribution&lt;unsigned long&gt;::operator (57 samples, 0.12%)</title><rect x="850.5" y="453" width="1.4" height="15.0" fill="rgb(244,67,3)" rx="2" ry="2" />
<text  x="853.49" y="463.5" ></text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt;&amp;&gt; (24 samples, 0.05%)</title><rect x="831.1" y="373" width="0.6" height="15.0" fill="rgb(222,112,43)" rx="2" ry="2" />
<text  x="834.10" y="383.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_nodes (12 samples, 0.03%)</title><rect x="1169.8" y="469" width="0.3" height="15.0" fill="rgb(231,92,20)" rx="2" ry="2" />
<text  x="1172.82" y="479.5" ></text>
</g>
<g >
<title>operator delete (50 samples, 0.10%)</title><rect x="933.4" y="405" width="1.2" height="15.0" fill="rgb(217,51,19)" rx="2" ry="2" />
<text  x="936.37" y="415.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_wrapped_common&lt;false, seastar::future&lt;void&gt;, seastar::future&lt;void&gt;::handle_exception&lt;service::abstract_read_executor::execute (19 samples, 0.04%)</title><rect x="686.4" y="453" width="0.5" height="15.0" fill="rgb(219,183,36)" rx="2" ry="2" />
<text  x="689.44" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (21 samples, 0.04%)</title><rect x="543.4" y="309" width="0.5" height="15.0" fill="rgb(235,57,26)" rx="2" ry="2" />
<text  x="546.39" y="319.5" ></text>
</g>
<g >
<title>mutation_reader_merger::maybe_add_readers (26 samples, 0.05%)</title><rect x="119.4" y="277" width="0.6" height="15.0" fill="rgb(248,162,15)" rx="2" ry="2" />
<text  x="122.37" y="287.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (89 samples, 0.19%)</title><rect x="621.7" y="485" width="2.2" height="15.0" fill="rgb(253,220,41)" rx="2" ry="2" />
<text  x="624.69" y="495.5" ></text>
</g>
<g >
<title>std::chrono::_V2::system_clock::now (8 samples, 0.02%)</title><rect x="1137.7" y="421" width="0.2" height="15.0" fill="rgb(217,51,18)" rx="2" ry="2" />
<text  x="1140.70" y="431.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_live_endpoints (46 samples, 0.10%)</title><rect x="1074.9" y="341" width="1.1" height="15.0" fill="rgb(208,152,54)" rx="2" ry="2" />
<text  x="1077.86" y="351.5" ></text>
</g>
<g >
<title>mutation_fragment::operator= (35 samples, 0.07%)</title><rect x="156.1" y="229" width="0.8" height="15.0" fill="rgb(228,29,20)" rx="2" ry="2" />
<text  x="159.07" y="239.5" ></text>
</g>
<g >
<title>double_decker&lt;long, memtable_entry, dht::raw_token_less_comparator, dht::ring_position_comparator, 16,  (12 samples, 0.03%)</title><rect x="429.0" y="341" width="0.3" height="15.0" fill="rgb(209,86,6)" rx="2" ry="2" />
<text  x="431.97" y="351.5" ></text>
</g>
<g >
<title>table::as_mutation_source (102 samples, 0.21%)</title><rect x="617.2" y="437" width="2.5" height="15.0" fill="rgb(208,195,35)" rx="2" ry="2" />
<text  x="620.16" y="447.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;flat_mutation_reader::impl::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (85 samples, 0.18%)</title><rect x="293.4" y="293" width="2.1" height="15.0" fill="rgb(214,197,42)" rx="2" ry="2" />
<text  x="296.40" y="303.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::push_mutation_fragment&lt;mutation_fragment&gt; (26 samples, 0.05%)</title><rect x="140.4" y="245" width="0.6" height="15.0" fill="rgb(245,156,1)" rx="2" ry="2" />
<text  x="143.37" y="255.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (29 samples, 0.06%)</title><rect x="94.2" y="373" width="0.7" height="15.0" fill="rgb(207,133,48)" rx="2" ry="2" />
<text  x="97.19" y="383.5" ></text>
</g>
<g >
<title>partition_version_ref::operator (7 samples, 0.01%)</title><rect x="235.9" y="213" width="0.2" height="15.0" fill="rgb(229,38,53)" rx="2" ry="2" />
<text  x="238.90" y="223.5" ></text>
</g>
<g >
<title>seastar::chunked_fifo&lt;seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::entry, 128ul&gt;::emplace_back&lt;reader_concurrency_semaphore::entry, seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;&amp;, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;&amp;&gt; (6 samples, 0.01%)</title><rect x="1024.8" y="197" width="0.2" height="15.0" fill="rgb(227,123,39)" rx="2" ry="2" />
<text  x="1027.84" y="207.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (33 samples, 0.07%)</title><rect x="786.3" y="149" width="0.8" height="15.0" fill="rgb(230,203,29)" rx="2" ry="2" />
<text  x="789.28" y="159.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (5 samples, 0.01%)</title><rect x="924.5" y="357" width="0.2" height="15.0" fill="rgb(210,167,16)" rx="2" ry="2" />
<text  x="927.53" y="367.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (20 samples, 0.04%)</title><rect x="1128.3" y="405" width="0.5" height="15.0" fill="rgb(240,85,13)" rx="2" ry="2" />
<text  x="1131.34" y="415.5" ></text>
</g>
<g >
<title>operator new (24 samples, 0.05%)</title><rect x="768.3" y="309" width="0.6" height="15.0" fill="rgb(244,224,33)" rx="2" ry="2" />
<text  x="771.28" y="319.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::drop_unneeded_tombstones (12 samples, 0.03%)</title><rect x="366.8" y="213" width="0.3" height="15.0" fill="rgb(225,185,15)" rx="2" ry="2" />
<text  x="369.79" y="223.5" ></text>
</g>
<g >
<title>utils::config_file::named_value&lt;unsigned long&gt;::the_value (37 samples, 0.08%)</title><rect x="1135.8" y="389" width="1.0" height="15.0" fill="rgb(217,166,17)" rx="2" ry="2" />
<text  x="1138.85" y="399.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (5,242 samples, 11.00%)</title><rect x="287.4" y="389" width="129.8" height="15.0" fill="rgb(215,151,43)" rx="2" ry="2" />
<text  x="290.36" y="399.5" >query::consume_p..</text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (16 samples, 0.03%)</title><rect x="628.4" y="485" width="0.4" height="15.0" fill="rgb(223,145,24)" rx="2" ry="2" />
<text  x="631.40" y="495.5" ></text>
</g>
<g >
<title>std::construct_at&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::entry&gt; (75 samples, 0.16%)</title><rect x="68.9" y="405" width="1.8" height="15.0" fill="rgb(232,206,19)" rx="2" ry="2" />
<text  x="71.86" y="415.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;service::digest_read_resolver&gt;::~shared_ptr_count_for (64 samples, 0.13%)</title><rect x="690.5" y="485" width="1.6" height="15.0" fill="rgb(213,107,47)" rx="2" ry="2" />
<text  x="693.48" y="495.5" ></text>
</g>
<g >
<title>database::query (132 samples, 0.28%)</title><rect x="42.1" y="501" width="3.3" height="15.0" fill="rgb(241,153,20)" rx="2" ry="2" />
<text  x="45.12" y="511.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::result_memory_accounter (9 samples, 0.02%)</title><rect x="598.7" y="421" width="0.2" height="15.0" fill="rgb(231,127,6)" rx="2" ry="2" />
<text  x="601.71" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (5 samples, 0.01%)</title><rect x="546.3" y="421" width="0.2" height="15.0" fill="rgb(210,128,19)" rx="2" ry="2" />
<text  x="549.34" y="431.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::do_refresh_state (128 samples, 0.27%)</title><rect x="210.1" y="165" width="3.2" height="15.0" fill="rgb(228,213,53)" rx="2" ry="2" />
<text  x="213.15" y="175.5" ></text>
</g>
<g >
<title>boost::intrusive::bstree_impl&lt;boost::intrusive::mhtraits&lt;range_tombstone_entry, boost::intrusive::set_member_hook&lt;boost::intrusive::link_mode&lt; (6 samples, 0.01%)</title><rect x="556.1" y="293" width="0.2" height="15.0" fill="rgb(232,113,15)" rx="2" ry="2" />
<text  x="559.15" y="303.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::enqueue_waiter (357 samples, 0.75%)</title><rect x="1022.6" y="213" width="8.8" height="15.0" fill="rgb(248,201,45)" rx="2" ry="2" />
<text  x="1025.59" y="223.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::trivial_direct_move&lt;8ul&gt; (20 samples, 0.04%)</title><rect x="989.8" y="245" width="0.5" height="15.0" fill="rgb(214,138,9)" rx="2" ry="2" />
<text  x="992.83" y="255.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;compact_for_query&lt; (62 samples, 0.13%)</title><rect x="409.8" y="277" width="1.5" height="15.0" fill="rgb(240,69,18)" rx="2" ry="2" />
<text  x="412.80" y="287.5" ></text>
</g>
<g >
<title>operator delete (95 samples, 0.20%)</title><rect x="403.8" y="245" width="2.3" height="15.0" fill="rgb(216,203,3)" rx="2" ry="2" />
<text  x="406.79" y="255.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::cql_statement&gt;::~shared_ptr (10 samples, 0.02%)</title><rect x="822.5" y="421" width="0.2" height="15.0" fill="rgb(237,146,48)" rx="2" ry="2" />
<text  x="825.48" y="431.5" ></text>
</g>
<g >
<title>operator new (73 samples, 0.15%)</title><rect x="959.1" y="373" width="1.8" height="15.0" fill="rgb(245,122,2)" rx="2" ry="2" />
<text  x="962.10" y="383.5" ></text>
</g>
<g >
<title>utils::tuple_hash::hash_impl&lt;1ul, auth::resource_kind, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (28 samples, 0.06%)</title><rect x="807.4" y="293" width="0.7" height="15.0" fill="rgb(229,99,35)" rx="2" ry="2" />
<text  x="810.41" y="303.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;compact_mutation_state&lt; (123 samples, 0.26%)</title><rect x="610.1" y="421" width="3.0" height="15.0" fill="rgb(208,56,39)" rx="2" ry="2" />
<text  x="613.10" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (17 samples, 0.04%)</title><rect x="981.0" y="261" width="0.4" height="15.0" fill="rgb(206,183,51)" rx="2" ry="2" />
<text  x="984.01" y="271.5" ></text>
</g>
<g >
<title>bound_view::from_range_start&lt;nonwrapping_interval&gt; (20 samples, 0.04%)</title><rect x="238.5" y="181" width="0.5" height="15.0" fill="rgb(232,170,51)" rx="2" ry="2" />
<text  x="241.53" y="191.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::handle_exception&lt;cql3::query_processor::execute_prepared (15 samples, 0.03%)</title><rect x="740.2" y="405" width="0.3" height="15.0" fill="rgb(222,101,27)" rx="2" ry="2" />
<text  x="743.18" y="415.5" ></text>
</g>
<g >
<title>std::optional&lt;position_in_partition&gt;::operator=&lt;position_in_partition&gt; (22 samples, 0.05%)</title><rect x="225.4" y="229" width="0.6" height="15.0" fill="rgb(243,218,40)" rx="2" ry="2" />
<text  x="228.43" y="239.5" ></text>
</g>
<g >
<title>bplus::searcher&lt;dht::ring_position, long, dht::raw_token_less_comparator, 16ul,  (62 samples, 0.13%)</title><rect x="460.6" y="293" width="1.5" height="15.0" fill="rgb(227,102,20)" rx="2" ry="2" />
<text  x="463.59" y="303.5" ></text>
</g>
<g >
<title>service::endpoints_to_replica_ids (123 samples, 0.26%)</title><rect x="1153.6" y="469" width="3.1" height="15.0" fill="rgb(235,98,42)" rx="2" ry="2" />
<text  x="1156.62" y="479.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::abstract_read_executor (124 samples, 0.26%)</title><rect x="1069.8" y="309" width="3.0" height="15.0" fill="rgb(248,41,19)" rx="2" ry="2" />
<text  x="1072.76" y="319.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;query::result_memory_limiter::new_data_read (33 samples, 0.07%)</title><rect x="599.5" y="437" width="0.8" height="15.0" fill="rgb(243,58,1)" rx="2" ry="2" />
<text  x="602.48" y="447.5" ></text>
</g>
<g >
<title>seastar::future&lt;boost::iterator_range&lt;mutation_fragment*&gt; &gt;::then_impl&lt;mutation_fragment_merger&lt;mutation_reader_merger&gt;::fetch (8 samples, 0.02%)</title><rect x="263.1" y="341" width="0.2" height="15.0" fill="rgb(250,43,0)" rx="2" ry="2" />
<text  x="266.12" y="351.5" ></text>
</g>
<g >
<title>list_reader_selector::list_reader_selector (16 samples, 0.03%)</title><rect x="431.7" y="325" width="0.4" height="15.0" fill="rgb(213,100,51)" rx="2" ry="2" />
<text  x="434.67" y="335.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (14 samples, 0.03%)</title><rect x="1104.0" y="357" width="0.3" height="15.0" fill="rgb(239,16,1)" rx="2" ry="2" />
<text  x="1106.95" y="367.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::local (11 samples, 0.02%)</title><rect x="833.9" y="421" width="0.3" height="15.0" fill="rgb(235,152,28)" rx="2" ry="2" />
<text  x="836.95" y="431.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;reader_concurrency_semaphore::entry&gt; &gt;::destroy&lt;reader_concurrency_semaphore::entry&gt; (20 samples, 0.04%)</title><rect x="624.6" y="469" width="0.5" height="15.0" fill="rgb(209,135,13)" rx="2" ry="2" />
<text  x="627.64" y="479.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::indirect_move (7 samples, 0.01%)</title><rect x="1033.2" y="229" width="0.2" height="15.0" fill="rgb(207,161,42)" rx="2" ry="2" />
<text  x="1036.23" y="239.5" ></text>
</g>
<g >
<title>db::block_for (5 samples, 0.01%)</title><rect x="1063.7" y="325" width="0.1" height="15.0" fill="rgb(235,115,17)" rx="2" ry="2" />
<text  x="1066.67" y="335.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_locally (6 samples, 0.01%)</title><rect x="1142.4" y="197" width="0.2" height="15.0" fill="rgb(239,105,35)" rx="2" ry="2" />
<text  x="1145.41" y="207.5" ></text>
</g>
<g >
<title>std::optional&lt;clustering_key_prefix&gt;::operator=&lt;clustering_key_prefix const&amp;&gt; (11 samples, 0.02%)</title><rect x="225.2" y="229" width="0.2" height="15.0" fill="rgb(222,160,41)" rx="2" ry="2" />
<text  x="228.16" y="239.5" ></text>
</g>
<g >
<title>seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::expand (215 samples, 0.45%)</title><rect x="275.1" y="309" width="5.3" height="15.0" fill="rgb(206,114,31)" rx="2" ry="2" />
<text  x="278.12" y="319.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::query_options, std::default_delete&lt;cql3::query_options&gt; &gt;::~unique_ptr (7 samples, 0.01%)</title><rect x="839.8" y="437" width="0.2" height="15.0" fill="rgb(249,147,36)" rx="2" ry="2" />
<text  x="842.82" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (75 samples, 0.16%)</title><rect x="1033.8" y="197" width="1.9" height="15.0" fill="rgb(232,139,0)" rx="2" ry="2" />
<text  x="1036.83" y="207.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (6 samples, 0.01%)</title><rect x="277.4" y="293" width="0.2" height="15.0" fill="rgb(217,194,30)" rx="2" ry="2" />
<text  x="280.40" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (24 samples, 0.05%)</title><rect x="1152.0" y="485" width="0.6" height="15.0" fill="rgb(216,41,54)" rx="2" ry="2" />
<text  x="1155.02" y="495.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (15 samples, 0.03%)</title><rect x="855.2" y="453" width="0.3" height="15.0" fill="rgb(240,184,23)" rx="2" ry="2" />
<text  x="858.17" y="463.5" ></text>
</g>
<g >
<title>db::system_keyspace_make (5 samples, 0.01%)</title><rect x="45.5" y="501" width="0.2" height="15.0" fill="rgb(214,165,36)" rx="2" ry="2" />
<text  x="48.53" y="511.5" ></text>
</g>
<g >
<title>std::__make_heap&lt;__gnu_cxx::__normal_iterator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position*, std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::heap_compare&gt; &gt; (11 samples, 0.02%)</title><rect x="240.8" y="213" width="0.2" height="15.0" fill="rgb(249,154,25)" rx="2" ry="2" />
<text  x="243.76" y="223.5" ></text>
</g>
<g >
<title>reader_selector::has_new_readers (8 samples, 0.02%)</title><rect x="119.8" y="261" width="0.2" height="15.0" fill="rgb(221,157,19)" rx="2" ry="2" />
<text  x="122.82" y="271.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (6 samples, 0.01%)</title><rect x="736.4" y="277" width="0.1" height="15.0" fill="rgb(241,86,3)" rx="2" ry="2" />
<text  x="739.39" y="287.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (12 samples, 0.03%)</title><rect x="1107.4" y="389" width="0.3" height="15.0" fill="rgb(247,37,13)" rx="2" ry="2" />
<text  x="1110.42" y="399.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (12 samples, 0.03%)</title><rect x="491.5" y="309" width="0.3" height="15.0" fill="rgb(234,59,42)" rx="2" ry="2" />
<text  x="494.54" y="319.5" ></text>
</g>
<g >
<title>operator new (13 samples, 0.03%)</title><rect x="544.5" y="405" width="0.3" height="15.0" fill="rgb(211,100,54)" rx="2" ry="2" />
<text  x="547.46" y="415.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::~holder (11 samples, 0.02%)</title><rect x="555.6" y="293" width="0.3" height="15.0" fill="rgb(235,45,25)" rx="2" ry="2" />
<text  x="558.63" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (50 samples, 0.10%)</title><rect x="834.8" y="389" width="1.2" height="15.0" fill="rgb(218,42,4)" rx="2" ry="2" />
<text  x="837.79" y="399.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (6 samples, 0.01%)</title><rect x="733.6" y="341" width="0.2" height="15.0" fill="rgb(252,42,2)" rx="2" ry="2" />
<text  x="736.64" y="351.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (9 samples, 0.02%)</title><rect x="518.3" y="325" width="0.2" height="15.0" fill="rgb(253,67,12)" rx="2" ry="2" />
<text  x="521.31" y="335.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;nonwrapping_interval&lt;dht::ring_position&gt; const*, nonwrapping_interval&lt;dht::ring_position&gt;*&gt; (41 samples, 0.09%)</title><rect x="941.0" y="373" width="1.0" height="15.0" fill="rgb(226,76,31)" rx="2" ry="2" />
<text  x="944.02" y="383.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (13 samples, 0.03%)</title><rect x="57.2" y="453" width="0.3" height="15.0" fill="rgb(245,105,24)" rx="2" ry="2" />
<text  x="60.20" y="463.5" ></text>
</g>
<g >
<title>operator delete (28 samples, 0.06%)</title><rect x="558.6" y="277" width="0.7" height="15.0" fill="rgb(212,25,40)" rx="2" ry="2" />
<text  x="561.62" y="287.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (8 samples, 0.02%)</title><rect x="450.1" y="277" width="0.2" height="15.0" fill="rgb(253,108,31)" rx="2" ry="2" />
<text  x="453.07" y="287.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (12 samples, 0.03%)</title><rect x="623.9" y="485" width="0.3" height="15.0" fill="rgb(247,112,8)" rx="2" ry="2" />
<text  x="626.94" y="495.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (22 samples, 0.05%)</title><rect x="719.2" y="325" width="0.5" height="15.0" fill="rgb(216,209,31)" rx="2" ry="2" />
<text  x="722.20" y="335.5" ></text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt;&amp;&gt; (34 samples, 0.07%)</title><rect x="818.5" y="309" width="0.8" height="15.0" fill="rgb(207,214,23)" rx="2" ry="2" />
<text  x="821.47" y="319.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::process_where_clause (13 samples, 0.03%)</title><rect x="20.9" y="421" width="0.4" height="15.0" fill="rgb(244,154,52)" rx="2" ry="2" />
<text  x="23.94" y="431.5" ></text>
</g>
<g >
<title>schema::partition_key_size (6 samples, 0.01%)</title><rect x="1128.8" y="421" width="0.2" height="15.0" fill="rgb(224,183,15)" rx="2" ry="2" />
<text  x="1131.84" y="431.5" ></text>
</g>
<g >
<title>seastar::promise&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::promise (8 samples, 0.02%)</title><rect x="1143.7" y="485" width="0.2" height="15.0" fill="rgb(254,183,45)" rx="2" ry="2" />
<text  x="1146.67" y="495.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::allocate (117 samples, 0.25%)</title><rect x="277.6" y="293" width="2.8" height="15.0" fill="rgb(238,127,15)" rx="2" ry="2" />
<text  x="280.55" y="303.5" ></text>
</g>
<g >
<title>partition_snapshot::get_change_mark (9 samples, 0.02%)</title><rect x="208.7" y="181" width="0.2" height="15.0" fill="rgb(243,74,32)" rx="2" ry="2" />
<text  x="211.66" y="191.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (26 samples, 0.05%)</title><rect x="414.7" y="325" width="0.6" height="15.0" fill="rgb(234,144,39)" rx="2" ry="2" />
<text  x="417.68" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (10 samples, 0.02%)</title><rect x="712.5" y="389" width="0.2" height="15.0" fill="rgb(209,198,31)" rx="2" ry="2" />
<text  x="715.49" y="399.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (11 samples, 0.02%)</title><rect x="258.5" y="309" width="0.3" height="15.0" fill="rgb(247,44,49)" rx="2" ry="2" />
<text  x="261.53" y="319.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::fillBuffer (55 samples, 0.12%)</title><rect x="15.7" y="325" width="1.4" height="15.0" fill="rgb(253,102,24)" rx="2" ry="2" />
<text  x="18.70" y="335.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_range_tombstone (7 samples, 0.01%)</title><rect x="156.9" y="229" width="0.2" height="15.0" fill="rgb(209,53,2)" rx="2" ry="2" />
<text  x="159.94" y="239.5" ></text>
</g>
<g >
<title>intrusive_array&lt;memtable_entry&gt;::lower_bound&lt;dht::ring_position, dht::ring_position_comparator&gt; (513 samples, 1.08%)</title><rect x="473.1" y="309" width="12.7" height="15.0" fill="rgb(247,200,3)" rx="2" ry="2" />
<text  x="476.12" y="319.5" ></text>
</g>
<g >
<title>seastar::reactor::service_highres_timer (27 samples, 0.06%)</title><rect x="1176.8" y="453" width="0.7" height="15.0" fill="rgb(231,137,23)" rx="2" ry="2" />
<text  x="1179.80" y="463.5" ></text>
</g>
<g >
<title>frozen_mutation::frozen_mutation (11 samples, 0.02%)</title><rect x="1142.6" y="181" width="0.3" height="15.0" fill="rgb(225,185,17)" rx="2" ry="2" />
<text  x="1145.63" y="191.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (38 samples, 0.08%)</title><rect x="1105.0" y="389" width="1.0" height="15.0" fill="rgb(206,8,0)" rx="2" ry="2" />
<text  x="1108.04" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_clear (14 samples, 0.03%)</title><rect x="443.0" y="293" width="0.4" height="15.0" fill="rgb(228,70,16)" rx="2" ry="2" />
<text  x="446.01" y="303.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (17 samples, 0.04%)</title><rect x="632.7" y="485" width="0.4" height="15.0" fill="rgb(206,190,26)" rx="2" ry="2" />
<text  x="635.66" y="495.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_nodes (9 samples, 0.02%)</title><rect x="1169.6" y="453" width="0.2" height="15.0" fill="rgb(234,68,30)" rx="2" ry="2" />
<text  x="1172.60" y="463.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql_transport::messages::result_message&gt;::~shared_ptr (5 samples, 0.01%)</title><rect x="1145.5" y="501" width="0.2" height="15.0" fill="rgb(237,205,0)" rx="2" ry="2" />
<text  x="1148.53" y="511.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (9 samples, 0.02%)</title><rect x="1028.8" y="117" width="0.2" height="15.0" fill="rgb(214,224,23)" rx="2" ry="2" />
<text  x="1031.78" y="127.5" ></text>
</g>
<g >
<title>query::result::result (13 samples, 0.03%)</title><rect x="604.3" y="421" width="0.3" height="15.0" fill="rgb(239,19,32)" rx="2" ry="2" />
<text  x="607.31" y="431.5" ></text>
</g>
<g >
<title>std::optional&lt;position_in_partition&gt;::operator=&lt;position_in_partition&gt; (14 samples, 0.03%)</title><rect x="227.4" y="245" width="0.3" height="15.0" fill="rgb(247,74,43)" rx="2" ry="2" />
<text  x="230.36" y="255.5" ></text>
</g>
<g >
<title>std::__equal&lt;true&gt;::equal&lt;char&gt; (33 samples, 0.07%)</title><rect x="788.2" y="117" width="0.8" height="15.0" fill="rgb(243,34,27)" rx="2" ry="2" />
<text  x="791.17" y="127.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;gms::inet_address*, __gnu_cxx::__ops::_Iter_pred&lt;std::unary_negate&lt;std::binder1st&lt;std::_Mem_fn&lt;bool  (55 samples, 0.12%)</title><rect x="1093.8" y="309" width="1.3" height="15.0" fill="rgb(211,191,34)" rx="2" ry="2" />
<text  x="1096.78" y="319.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_map&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::at&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt; &gt; (130 samples, 0.27%)</title><rect x="813.5" y="341" width="3.3" height="15.0" fill="rgb(253,158,34)" rx="2" ry="2" />
<text  x="816.55" y="351.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (169 samples, 0.35%)</title><rect x="403.2" y="261" width="4.2" height="15.0" fill="rgb(216,228,29)" rx="2" ry="2" />
<text  x="406.19" y="271.5" ></text>
</g>
<g >
<title>std::__apply_impl&lt;seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (31 samples, 0.07%)</title><rect x="1142.3" y="469" width="0.8" height="15.0" fill="rgb(236,212,53)" rx="2" ry="2" />
<text  x="1145.31" y="479.5" ></text>
</g>
<g >
<title>mutation_source::mutation_source (82 samples, 0.17%)</title><rect x="617.3" y="421" width="2.0" height="15.0" fill="rgb(211,106,29)" rx="2" ry="2" />
<text  x="620.28" y="431.5" ></text>
</g>
<g >
<title>operator new (21 samples, 0.04%)</title><rect x="776.5" y="245" width="0.5" height="15.0" fill="rgb(243,76,5)" rx="2" ry="2" />
<text  x="779.48" y="255.5" ></text>
</g>
<g >
<title>operator delete (18 samples, 0.04%)</title><rect x="38.9" y="453" width="0.5" height="15.0" fill="rgb(207,192,31)" rx="2" ry="2" />
<text  x="41.95" y="463.5" ></text>
</g>
<g >
<title>reader_permit::consume (6 samples, 0.01%)</title><rect x="207.4" y="133" width="0.1" height="15.0" fill="rgb(251,38,23)" rx="2" ry="2" />
<text  x="210.38" y="143.5" ></text>
</g>
<g >
<title>table::make_reader (4,456 samples, 9.35%)</title><rect x="424.1" y="357" width="110.3" height="15.0" fill="rgb(223,31,42)" rx="2" ry="2" />
<text  x="427.09" y="367.5" >table::make_r..</text>
</g>
<g >
<title>reader_permit::~reader_permit (11 samples, 0.02%)</title><rect x="512.6" y="277" width="0.3" height="15.0" fill="rgb(250,118,23)" rx="2" ry="2" />
<text  x="515.59" y="287.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (66 samples, 0.14%)</title><rect x="780.8" y="165" width="1.6" height="15.0" fill="rgb(221,226,28)" rx="2" ry="2" />
<text  x="783.76" y="175.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::alloc (5 samples, 0.01%)</title><rect x="189.9" y="85" width="0.1" height="15.0" fill="rgb(226,84,29)" rx="2" ry="2" />
<text  x="192.89" y="95.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;service::digest_read_resolver&gt;::shared_ptr_count_for&lt;seastar::lw_shared_ptr&lt;schema const&gt;&amp;, db::consistency_level&amp;, unsigned long&amp;, unsigned long, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;&amp;&gt; (200 samples, 0.42%)</title><rect x="986.3" y="325" width="4.9" height="15.0" fill="rgb(243,137,21)" rx="2" ry="2" />
<text  x="989.26" y="335.5" ></text>
</g>
<g >
<title>cql3::raw_value_view::with_value&lt;cql3::raw_value_view::validate (6 samples, 0.01%)</title><rect x="891.3" y="277" width="0.2" height="15.0" fill="rgb(223,200,38)" rx="2" ry="2" />
<text  x="894.32" y="287.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;managed_bytes&gt;::make&lt;managed_bytes&gt; (19 samples, 0.04%)</title><rect x="898.4" y="325" width="0.4" height="15.0" fill="rgb(215,141,39)" rx="2" ry="2" />
<text  x="901.36" y="335.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::get_promise (5 samples, 0.01%)</title><rect x="713.0" y="437" width="0.1" height="15.0" fill="rgb(243,149,33)" rx="2" ry="2" />
<text  x="716.01" y="447.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (29 samples, 0.06%)</title><rect x="784.0" y="165" width="0.7" height="15.0" fill="rgb(245,56,27)" rx="2" ry="2" />
<text  x="787.01" y="175.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::query_options, db::consistency_level&amp;, std::vector&lt;cql3::raw_value, std::allocator&lt;cql3::raw_value&gt; &gt;, cql3::query_options::specific_options&gt; (292 samples, 0.61%)</title><rect x="840.1" y="453" width="7.3" height="15.0" fill="rgb(221,173,35)" rx="2" ry="2" />
<text  x="843.14" y="463.5" ></text>
</g>
<g >
<title>std::make_unique&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;, seastar::lw_shared_ptr&lt;schema const&gt;, reader_permit, dht::decorated_key, partition_snapshot_ptr&amp;, query::clustering_key_filter_ranges, bool&amp;, logalloc::region&amp;, logalloc::allocating_section&amp;, boost::any, memtable&amp;&gt; (881 samples, 1.85%)</title><rect x="491.9" y="309" width="21.9" height="15.0" fill="rgb(252,129,19)" rx="2" ry="2" />
<text  x="494.94" y="319.5" >s..</text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (7 samples, 0.01%)</title><rect x="798.6" y="261" width="0.1" height="15.0" fill="rgb(205,99,31)" rx="2" ry="2" />
<text  x="801.57" y="271.5" ></text>
</g>
<g >
<title>ser::qr_partition__static_row&lt;bytes_ostream&gt;::start_cells (29 samples, 0.06%)</title><rect x="309.1" y="165" width="0.7" height="15.0" fill="rgb(248,83,36)" rx="2" ry="2" />
<text  x="312.10" y="175.5" ></text>
</g>
<g >
<title>bound_view::from_range&lt;nonwrapping_interval&gt; (17 samples, 0.04%)</title><rect x="230.4" y="213" width="0.4" height="15.0" fill="rgb(229,164,47)" rx="2" ry="2" />
<text  x="233.41" y="223.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (28 samples, 0.06%)</title><rect x="355.1" y="149" width="0.7" height="15.0" fill="rgb(214,55,12)" rx="2" ry="2" />
<text  x="358.13" y="159.5" ></text>
</g>
<g >
<title>mutation_fragment::operator= (21 samples, 0.04%)</title><rect x="130.0" y="229" width="0.5" height="15.0" fill="rgb(212,92,46)" rx="2" ry="2" />
<text  x="133.00" y="239.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;::operator== (19 samples, 0.04%)</title><rect x="736.2" y="293" width="0.5" height="15.0" fill="rgb(228,203,3)" rx="2" ry="2" />
<text  x="739.24" y="303.5" ></text>
</g>
<g >
<title>sched_setaffinity@@GLIBC_2.3.4 (44 samples, 0.09%)</title><rect x="1188.8" y="629" width="1.1" height="15.0" fill="rgb(236,84,14)" rx="2" ry="2" />
<text  x="1191.81" y="639.5" ></text>
</g>
<g >
<title>operator new (24 samples, 0.05%)</title><rect x="603.7" y="421" width="0.6" height="15.0" fill="rgb(217,201,47)" rx="2" ry="2" />
<text  x="606.71" y="431.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;query::querier&lt; (223 samples, 0.47%)</title><rect x="608.1" y="437" width="5.6" height="15.0" fill="rgb(223,105,40)" rx="2" ry="2" />
<text  x="611.15" y="447.5" ></text>
</g>
<g >
<title>gms::gossiper::is_alive (14 samples, 0.03%)</title><rect x="1094.6" y="261" width="0.4" height="15.0" fill="rgb(249,181,16)" rx="2" ry="2" />
<text  x="1097.62" y="271.5" ></text>
</g>
<g >
<title>posix_memalign (148 samples, 0.31%)</title><rect x="186.1" y="53" width="3.7" height="15.0" fill="rgb(253,90,14)" rx="2" ry="2" />
<text  x="189.13" y="63.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::abstract_read_executor&gt;::~shared_ptr (9 samples, 0.02%)</title><rect x="976.5" y="357" width="0.2" height="15.0" fill="rgb(212,121,26)" rx="2" ry="2" />
<text  x="979.45" y="367.5" ></text>
</g>
<g >
<title>partition_version_ref::operator (5 samples, 0.01%)</title><rect x="221.1" y="117" width="0.1" height="15.0" fill="rgb(207,80,39)" rx="2" ry="2" />
<text  x="224.07" y="127.5" ></text>
</g>
<g >
<title>operator new (42 samples, 0.09%)</title><rect x="774.0" y="277" width="1.1" height="15.0" fill="rgb(233,88,51)" rx="2" ry="2" />
<text  x="777.03" y="287.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (8 samples, 0.02%)</title><rect x="257.7" y="293" width="0.2" height="15.0" fill="rgb(242,5,16)" rx="2" ry="2" />
<text  x="260.69" y="303.5" ></text>
</g>
<g >
<title>row_marker::compact_and_expire (6 samples, 0.01%)</title><rect x="389.7" y="229" width="0.2" height="15.0" fill="rgb(211,84,4)" rx="2" ry="2" />
<text  x="392.75" y="239.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::set_urgent_state (16 samples, 0.03%)</title><rect x="653.2" y="485" width="0.4" height="15.0" fill="rgb(212,108,50)" rx="2" ry="2" />
<text  x="656.24" y="495.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (4,945 samples, 10.38%)</title><rect x="290.2" y="357" width="122.5" height="15.0" fill="rgb(221,208,48)" rx="2" ry="2" />
<text  x="293.23" y="367.5" >flat_mutation_r..</text>
</g>
<g >
<title>mutation_reader_merger::prepare_one (260 samples, 0.55%)</title><rect x="126.6" y="261" width="6.4" height="15.0" fill="rgb(251,168,4)" rx="2" ry="2" />
<text  x="129.60" y="271.5" ></text>
</g>
<g >
<title>managed_bytes::external_memory_usage (18 samples, 0.04%)</title><rect x="203.3" y="101" width="0.5" height="15.0" fill="rgb(253,106,15)" rx="2" ry="2" />
<text  x="206.34" y="111.5" ></text>
</g>
<g >
<title>std::optional&lt;clustering_key_prefix&gt;::operator=&lt;clustering_key_prefix&amp;&gt; (36 samples, 0.08%)</title><rect x="387.4" y="213" width="0.9" height="15.0" fill="rgb(219,66,51)" rx="2" ry="2" />
<text  x="390.42" y="223.5" ></text>
</g>
<g >
<title>[unknown] (9 samples, 0.02%)</title><rect x="10.0" y="613" width="0.2" height="15.0" fill="rgb(247,201,16)" rx="2" ry="2" />
<text  x="13.02" y="623.5" ></text>
</g>
<g >
<title>std::__equal&lt;true&gt;::equal&lt;signed char&gt; (5 samples, 0.01%)</title><rect x="719.6" y="293" width="0.1" height="15.0" fill="rgb(205,128,25)" rx="2" ry="2" />
<text  x="722.57" y="303.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;, nonwrapping_interval&lt;managed_bytes&gt; &gt;::~_Variant_storage (20 samples, 0.04%)</title><rect x="935.7" y="405" width="0.5" height="15.0" fill="rgb(227,53,34)" rx="2" ry="2" />
<text  x="938.75" y="415.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_map&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::at&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt; &gt; (191 samples, 0.40%)</title><rect x="750.1" y="373" width="4.8" height="15.0" fill="rgb(243,155,42)" rx="2" ry="2" />
<text  x="753.13" y="383.5" ></text>
</g>
<g >
<title>std::function&lt;flat_mutation_reader  (4,553 samples, 9.55%)</title><rect x="421.8" y="389" width="112.7" height="15.0" fill="rgb(238,180,31)" rx="2" ry="2" />
<text  x="424.79" y="399.5" >std::function..</text>
</g>
<g >
<title>cql3::expr::evaluate (405 samples, 0.85%)</title><rect x="883.2" y="293" width="10.1" height="15.0" fill="rgb(207,48,45)" rx="2" ry="2" />
<text  x="886.23" y="303.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (7 samples, 0.01%)</title><rect x="624.8" y="453" width="0.2" height="15.0" fill="rgb(235,72,44)" rx="2" ry="2" />
<text  x="627.84" y="463.5" ></text>
</g>
<g >
<title>database::find_uuid (202 samples, 0.42%)</title><rect x="749.9" y="389" width="5.0" height="15.0" fill="rgb(225,19,44)" rx="2" ry="2" />
<text  x="752.93" y="399.5" ></text>
</g>
<g >
<title>partition_snapshot::slide_to_oldest (18 samples, 0.04%)</title><rect x="559.3" y="277" width="0.5" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="562.32" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;auth::resource_kind, std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;auth::resource_kind&gt;, std::hash&lt;auth::resource_kind&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::at (33 samples, 0.07%)</title><rect x="760.0" y="357" width="0.9" height="15.0" fill="rgb(231,216,9)" rx="2" ry="2" />
<text  x="763.04" y="367.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::insertToken (11 samples, 0.02%)</title><rect x="15.7" y="293" width="0.3" height="15.0" fill="rgb(220,126,15)" rx="2" ry="2" />
<text  x="18.72" y="303.5" ></text>
</g>
<g >
<title>logalloc::basic_region_impl::set_reclaiming_enabled (16 samples, 0.03%)</title><rect x="217.9" y="181" width="0.3" height="15.0" fill="rgb(232,16,51)" rx="2" ry="2" />
<text  x="220.85" y="191.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::clear (7 samples, 0.01%)</title><rect x="772.2" y="293" width="0.2" height="15.0" fill="rgb(241,162,13)" rx="2" ry="2" />
<text  x="775.19" y="303.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;auth::resource_kind, std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;auth::resource_kind&gt;, std::hash&lt;auth::resource_kind&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (9 samples, 0.02%)</title><rect x="760.6" y="325" width="0.3" height="15.0" fill="rgb(233,117,14)" rx="2" ry="2" />
<text  x="763.63" y="335.5" ></text>
</g>
<g >
<title>operator new (33 samples, 0.07%)</title><rect x="1037.2" y="261" width="0.9" height="15.0" fill="rgb(231,27,7)" rx="2" ry="2" />
<text  x="1040.24" y="271.5" ></text>
</g>
<g >
<title>operator new (17 samples, 0.04%)</title><rect x="530.7" y="261" width="0.4" height="15.0" fill="rgb(205,123,11)" rx="2" ry="2" />
<text  x="533.69" y="271.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;compact_mutation_state&lt; (283 samples, 0.59%)</title><rect x="537.8" y="421" width="7.0" height="15.0" fill="rgb(206,224,53)" rx="2" ry="2" />
<text  x="540.82" y="431.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::term (36 samples, 0.08%)</title><rect x="18.3" y="309" width="0.9" height="15.0" fill="rgb(238,93,35)" rx="2" ry="2" />
<text  x="21.34" y="319.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (223 samples, 0.47%)</title><rect x="200.3" y="133" width="5.6" height="15.0" fill="rgb(220,65,51)" rx="2" ry="2" />
<text  x="203.34" y="143.5" ></text>
</g>
<g >
<title>read_simple&lt;unsigned short, managed_bytes_basic_view&lt; (15 samples, 0.03%)</title><rect x="910.1" y="357" width="0.4" height="15.0" fill="rgb(227,82,32)" rx="2" ry="2" />
<text  x="913.12" y="367.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::execute (8 samples, 0.02%)</title><rect x="686.2" y="437" width="0.2" height="15.0" fill="rgb(236,14,10)" rx="2" ry="2" />
<text  x="689.25" y="447.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (18 samples, 0.04%)</title><rect x="749.4" y="325" width="0.5" height="15.0" fill="rgb(251,99,44)" rx="2" ry="2" />
<text  x="752.41" y="335.5" ></text>
</g>
<g >
<title>absl::hash_internal::AbslHashValue&lt;absl::hash_internal::HashState&gt; (28 samples, 0.06%)</title><rect x="1061.0" y="277" width="0.7" height="15.0" fill="rgb(248,99,21)" rx="2" ry="2" />
<text  x="1064.04" y="287.5" ></text>
</g>
<g >
<title>std::__push_heap&lt;mutation_reader_merger::reader_and_fragment*, long, mutation_reader_merger::reader_and_fragment, __gnu_cxx::__ops::_Iter_comp_val&lt;mutation_reader_merger::reader_heap_compare&gt; &gt; (50 samples, 0.10%)</title><rect x="130.5" y="229" width="1.3" height="15.0" fill="rgb(254,56,6)" rx="2" ry="2" />
<text  x="133.52" y="239.5" ></text>
</g>
<g >
<title>cql3::raw_value_view::make_temporary (124 samples, 0.26%)</title><rect x="895.9" y="341" width="3.0" height="15.0" fill="rgb(236,174,16)" rx="2" ry="2" />
<text  x="898.88" y="351.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reserve&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (13 samples, 0.03%)</title><rect x="855.2" y="405" width="0.3" height="15.0" fill="rgb(222,128,1)" rx="2" ry="2" />
<text  x="858.20" y="415.5" ></text>
</g>
<g >
<title>tests::random::get_int&lt;unsigned long&gt; (65 samples, 0.14%)</title><rect x="850.3" y="469" width="1.6" height="15.0" fill="rgb(247,48,2)" rx="2" ry="2" />
<text  x="853.29" y="479.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (33 samples, 0.07%)</title><rect x="1060.0" y="277" width="0.9" height="15.0" fill="rgb(242,141,17)" rx="2" ry="2" />
<text  x="1063.05" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::at (54 samples, 0.11%)</title><rect x="748.5" y="357" width="1.4" height="15.0" fill="rgb(222,109,53)" rx="2" ry="2" />
<text  x="751.52" y="367.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (8 samples, 0.02%)</title><rect x="819.1" y="277" width="0.2" height="15.0" fill="rgb(228,49,33)" rx="2" ry="2" />
<text  x="822.12" y="287.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::check_access (8 samples, 0.02%)</title><rect x="21.5" y="485" width="0.2" height="15.0" fill="rgb(214,2,13)" rx="2" ry="2" />
<text  x="24.51" y="495.5" ></text>
</g>
<g >
<title>TLS init function for bound_view::_empty_prefix (5 samples, 0.01%)</title><rect x="212.3" y="101" width="0.1" height="15.0" fill="rgb(247,199,45)" rx="2" ry="2" />
<text  x="215.28" y="111.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::on_permit_created (11 samples, 0.02%)</title><rect x="1036.1" y="197" width="0.3" height="15.0" fill="rgb(234,197,27)" rx="2" ry="2" />
<text  x="1039.08" y="207.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (9 samples, 0.02%)</title><rect x="783.4" y="181" width="0.2" height="15.0" fill="rgb(245,197,28)" rx="2" ry="2" />
<text  x="786.36" y="191.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (6 samples, 0.01%)</title><rect x="295.1" y="229" width="0.1" height="15.0" fill="rgb(218,21,40)" rx="2" ry="2" />
<text  x="298.06" y="239.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (17 samples, 0.04%)</title><rect x="318.1" y="197" width="0.4" height="15.0" fill="rgb(209,113,49)" rx="2" ry="2" />
<text  x="321.09" y="207.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::enqueue_waiter (5 samples, 0.01%)</title><rect x="1032.8" y="229" width="0.1" height="15.0" fill="rgb(230,47,41)" rx="2" ry="2" />
<text  x="1035.79" y="239.5" ></text>
</g>
<g >
<title>_ZSt5applyIZN7seastar8internal12do_with_implISt8optionalIN4auth8resourceEEZNK7service12client_state20check_has_permissionENS4_12command_descEE3$_7JEEEDaOT_OT0_DpOT1_EUlDpOT_E_St5tupleIJOS6_EEEDcSC_SE_ (77 samples, 0.16%)</title><rect x="768.2" y="325" width="1.9" height="15.0" fill="rgb(238,193,17)" rx="2" ry="2" />
<text  x="771.18" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (86 samples, 0.18%)</title><rect x="1119.4" y="341" width="2.1" height="15.0" fill="rgb(220,125,2)" rx="2" ry="2" />
<text  x="1122.40" y="351.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::read_next (7 samples, 0.01%)</title><rect x="855.2" y="373" width="0.2" height="15.0" fill="rgb(214,182,7)" rx="2" ry="2" />
<text  x="858.22" y="383.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (10 samples, 0.02%)</title><rect x="562.4" y="293" width="0.2" height="15.0" fill="rgb(217,218,21)" rx="2" ry="2" />
<text  x="565.36" y="303.5" ></text>
</g>
<g >
<title>std::make_unique&lt;merging_reader&lt;mutation_reader_merger&gt;, seastar::lw_shared_ptr&lt;schema const&gt;&amp;, reader_permit, seastar::bool_class&lt;streamed_mutation::forwarding_tag&gt;&amp;, mutation_reader_merger&gt; (261 samples, 0.55%)</title><rect x="444.9" y="309" width="6.5" height="15.0" fill="rgb(248,183,21)" rx="2" ry="2" />
<text  x="447.92" y="319.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;clustering_key_prefix&gt;::_M_reset (5 samples, 0.01%)</title><rect x="74.5" y="453" width="0.1" height="15.0" fill="rgb(228,180,46)" rx="2" ry="2" />
<text  x="77.46" y="463.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextToken (40 samples, 0.08%)</title><rect x="16.0" y="309" width="1.0" height="15.0" fill="rgb(228,120,19)" rx="2" ry="2" />
<text  x="18.99" y="319.5" ></text>
</g>
<g >
<title>__tls_init (8 samples, 0.02%)</title><rect x="527.6" y="293" width="0.2" height="15.0" fill="rgb(249,23,47)" rx="2" ry="2" />
<text  x="530.57" y="303.5" ></text>
</g>
<g >
<title>atomic_cell_or_collection::copy (15 samples, 0.03%)</title><rect x="164.8" y="133" width="0.4" height="15.0" fill="rgb(242,126,7)" rx="2" ry="2" />
<text  x="167.84" y="143.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::clone (33 samples, 0.07%)</title><rect x="490.2" y="309" width="0.8" height="15.0" fill="rgb(238,204,40)" rx="2" ry="2" />
<text  x="493.16" y="319.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (6 samples, 0.01%)</title><rect x="627.8" y="469" width="0.1" height="15.0" fill="rgb(251,146,11)" rx="2" ry="2" />
<text  x="630.78" y="479.5" ></text>
</g>
<g >
<title>ser::writer_of_std__optional__qr_cell&lt;bytes_ostream&gt;::write (12 samples, 0.03%)</title><rect x="332.5" y="181" width="0.3" height="15.0" fill="rgb(209,85,52)" rx="2" ry="2" />
<text  x="335.52" y="191.5" ></text>
</g>
<g >
<title>reader_permit::consume_memory (23 samples, 0.05%)</title><rect x="506.7" y="197" width="0.6" height="15.0" fill="rgb(230,145,24)" rx="2" ry="2" />
<text  x="509.72" y="207.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEE4$_44ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_45ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_43ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_46ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_47ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_48ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_49ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_50ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_51ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_52ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_53ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_54ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_55ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_56ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_57ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_58EERS4_IJNSF_11conjunctionENSF_15binary_operatorENSF_12column_valueENSF_5tokenENSF_21unresolved_identifierENSF_25column_mutation_attributeENSF_13function_callENSF_4castENSF_15field_selectionENSF_4nullENSF_13bind_variableENSF_16untyped_constantENSF_8constantENSF_17tuple_constructorENSF_22collection_constructorENSF_20usertype_constructorEEEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES16_S1O_ (1,165 samples, 2.44%)</title><rect x="876.3" y="389" width="28.8" height="15.0" fill="rgb(226,37,45)" rx="2" ry="2" />
<text  x="879.29" y="399.5" >_Z..</text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;flat_mutation_reader::peek (42 samples, 0.09%)</title><rect x="284.6" y="389" width="1.0" height="15.0" fill="rgb(208,199,20)" rx="2" ry="2" />
<text  x="287.58" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::allocate_aligned (133 samples, 0.28%)</title><rect x="186.5" y="37" width="3.3" height="15.0" fill="rgb(217,31,47)" rx="2" ry="2" />
<text  x="189.50" y="47.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (19 samples, 0.04%)</title><rect x="652.5" y="469" width="0.5" height="15.0" fill="rgb(246,100,1)" rx="2" ry="2" />
<text  x="655.54" y="479.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (7 samples, 0.01%)</title><rect x="60.8" y="437" width="0.1" height="15.0" fill="rgb(223,103,39)" rx="2" ry="2" />
<text  x="63.76" y="447.5" ></text>
</g>
<g >
<title>schema::column_at (15 samples, 0.03%)</title><rect x="362.5" y="197" width="0.4" height="15.0" fill="rgb(216,19,13)" rx="2" ry="2" />
<text  x="365.51" y="207.5" ></text>
</g>
<g >
<title>std::hash&lt;wrapping_interval&lt;dht::token&gt; &gt;::operator (19 samples, 0.04%)</title><rect x="1102.1" y="341" width="0.4" height="15.0" fill="rgb(232,226,53)" rx="2" ry="2" />
<text  x="1105.07" y="351.5" ></text>
</g>
<g >
<title>auth::data_resource_view::table (8 samples, 0.02%)</title><rect x="791.6" y="117" width="0.2" height="15.0" fill="rgb(205,108,10)" rx="2" ry="2" />
<text  x="794.63" y="127.5" ></text>
</g>
<g >
<title>std::optional&lt;reader_concurrency_semaphore::entry&gt;::optional&lt;reader_concurrency_semaphore::entry, true&gt; (22 samples, 0.05%)</title><rect x="1028.5" y="149" width="0.5" height="15.0" fill="rgb(218,143,30)" rx="2" ry="2" />
<text  x="1031.45" y="159.5" ></text>
</g>
<g >
<title>flat_mutation_reader::peek (7,285 samples, 15.29%)</title><rect x="105.4" y="405" width="180.4" height="15.0" fill="rgb(220,14,37)" rx="2" ry="2" />
<text  x="108.43" y="415.5" >flat_mutation_reader::p..</text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt;::_Copy_ctor_base (7 samples, 0.01%)</title><rect x="850.0" y="421" width="0.2" height="15.0" fill="rgb(224,180,38)" rx="2" ry="2" />
<text  x="853.02" y="431.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (63 samples, 0.13%)</title><rect x="580.0" y="421" width="1.6" height="15.0" fill="rgb(230,98,5)" rx="2" ry="2" />
<text  x="583.04" y="431.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::check (9 samples, 0.02%)</title><rect x="303.5" y="213" width="0.2" height="15.0" fill="rgb(216,106,53)" rx="2" ry="2" />
<text  x="306.50" y="223.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (35 samples, 0.07%)</title><rect x="194.6" y="117" width="0.9" height="15.0" fill="rgb(251,123,49)" rx="2" ry="2" />
<text  x="197.60" y="127.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;mutation_fragment_merger&lt;mutation_reader_merger&gt;::operator (6 samples, 0.01%)</title><rect x="283.2" y="357" width="0.2" height="15.0" fill="rgb(205,203,20)" rx="2" ry="2" />
<text  x="286.25" y="367.5" ></text>
</g>
<g >
<title>operator new (18 samples, 0.04%)</title><rect x="515.7" y="277" width="0.4" height="15.0" fill="rgb(249,213,8)" rx="2" ry="2" />
<text  x="518.69" y="287.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (9 samples, 0.02%)</title><rect x="803.6" y="325" width="0.2" height="15.0" fill="rgb(248,187,51)" rx="2" ry="2" />
<text  x="806.57" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (22 samples, 0.05%)</title><rect x="1156.1" y="421" width="0.6" height="15.0" fill="rgb(247,114,23)" rx="2" ry="2" />
<text  x="1159.13" y="431.5" ></text>
</g>
<g >
<title>db::is_serial_consistency (15 samples, 0.03%)</title><rect x="1140.5" y="437" width="0.4" height="15.0" fill="rgb(248,154,49)" rx="2" ry="2" />
<text  x="1143.53" y="447.5" ></text>
</g>
<g >
<title>service::client_state::validate_login (6 samples, 0.01%)</title><rect x="804.3" y="357" width="0.1" height="15.0" fill="rgb(232,150,50)" rx="2" ry="2" />
<text  x="807.26" y="367.5" ></text>
</g>
<g >
<title>absl::hash_internal::HashState::combine_contiguous (7 samples, 0.01%)</title><rect x="839.2" y="325" width="0.2" height="15.0" fill="rgb(208,138,24)" rx="2" ry="2" />
<text  x="842.25" y="335.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::digest_read_result&gt;::schedule&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::execute (87 samples, 0.18%)</title><rect x="979.6" y="309" width="2.2" height="15.0" fill="rgb(239,80,20)" rx="2" ry="2" />
<text  x="982.62" y="319.5" ></text>
</g>
<g >
<title>operator new (27 samples, 0.06%)</title><rect x="503.7" y="197" width="0.6" height="15.0" fill="rgb(206,202,46)" rx="2" ry="2" />
<text  x="506.65" y="207.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_Optional_payload_base (34 samples, 0.07%)</title><rect x="1042.7" y="261" width="0.8" height="15.0" fill="rgb(232,102,14)" rx="2" ry="2" />
<text  x="1045.69" y="271.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (41 samples, 0.09%)</title><rect x="728.0" y="373" width="1.0" height="15.0" fill="rgb(231,221,44)" rx="2" ry="2" />
<text  x="730.99" y="383.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;, service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (19 samples, 0.04%)</title><rect x="1142.6" y="261" width="0.5" height="15.0" fill="rgb(225,10,15)" rx="2" ry="2" />
<text  x="1145.61" y="271.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (39 samples, 0.08%)</title><rect x="604.8" y="437" width="0.9" height="15.0" fill="rgb(205,57,33)" rx="2" ry="2" />
<text  x="607.75" y="447.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;single_node_cql_env::core_local_state&gt;::local (15 samples, 0.03%)</title><rect x="834.2" y="421" width="0.4" height="15.0" fill="rgb(238,125,9)" rx="2" ry="2" />
<text  x="837.22" y="431.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (6 samples, 0.01%)</title><rect x="880.9" y="309" width="0.2" height="15.0" fill="rgb(222,84,14)" rx="2" ry="2" />
<text  x="883.95" y="319.5" ></text>
</g>
<g >
<title>dht::ring_position_comparator::operator (487 samples, 1.02%)</title><rect x="473.7" y="293" width="12.1" height="15.0" fill="rgb(220,223,43)" rx="2" ry="2" />
<text  x="476.74" y="303.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (8 samples, 0.02%)</title><rect x="74.2" y="453" width="0.2" height="15.0" fill="rgb(254,171,52)" rx="2" ry="2" />
<text  x="77.16" y="463.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (15 samples, 0.03%)</title><rect x="771.6" y="277" width="0.4" height="15.0" fill="rgb(226,173,21)" rx="2" ry="2" />
<text  x="774.65" y="287.5" ></text>
</g>
<g >
<title>bound_view::from_range_end&lt;nonwrapping_interval&gt; (6 samples, 0.01%)</title><rect x="239.0" y="197" width="0.2" height="15.0" fill="rgb(221,127,2)" rx="2" ry="2" />
<text  x="242.02" y="207.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::maybe_decay_reserve (5 samples, 0.01%)</title><rect x="527.0" y="309" width="0.1" height="15.0" fill="rgb(242,195,4)" rx="2" ry="2" />
<text  x="529.95" y="319.5" ></text>
</g>
<g >
<title>service::get_local_priority_manager (13 samples, 0.03%)</title><rect x="605.7" y="437" width="0.3" height="15.0" fill="rgb(229,114,23)" rx="2" ry="2" />
<text  x="608.72" y="447.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;bytes_ostream::chunk, std::default_delete&lt;bytes_ostream::chunk&gt; &gt;::~unique_ptr (22 samples, 0.05%)</title><rect x="75.4" y="453" width="0.5" height="15.0" fill="rgb(242,132,32)" rx="2" ry="2" />
<text  x="78.40" y="463.5" ></text>
</g>
<g >
<title>cql_transport::messages::result_message::rows::rows (5 samples, 0.01%)</title><rect x="648.4" y="453" width="0.1" height="15.0" fill="rgb(234,221,23)" rx="2" ry="2" />
<text  x="651.38" y="463.5" ></text>
</g>
<g >
<title>seastar::futurize_invoke&lt;seastar::future&lt;void&gt;  (4,914 samples, 10.31%)</title><rect x="290.7" y="341" width="121.7" height="15.0" fill="rgb(241,24,8)" rx="2" ry="2" />
<text  x="293.68" y="351.5" >seastar::futuri..</text>
</g>
<g >
<title>operator delete (40 samples, 0.08%)</title><rect x="33.9" y="469" width="1.0" height="15.0" fill="rgb(245,56,5)" rx="2" ry="2" />
<text  x="36.90" y="479.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.01%)</title><rect x="57.0" y="453" width="0.2" height="15.0" fill="rgb(220,164,25)" rx="2" ry="2" />
<text  x="60.05" y="463.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (31 samples, 0.07%)</title><rect x="1142.3" y="421" width="0.8" height="15.0" fill="rgb(253,144,31)" rx="2" ry="2" />
<text  x="1145.31" y="431.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (21 samples, 0.04%)</title><rect x="1141.8" y="421" width="0.5" height="15.0" fill="rgb(254,100,11)" rx="2" ry="2" />
<text  x="1144.79" y="431.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;auth::resource_kind, std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;auth::resource_kind&gt;, std::hash&lt;auth::resource_kind&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (29 samples, 0.06%)</title><rect x="760.1" y="341" width="0.8" height="15.0" fill="rgb(240,88,12)" rx="2" ry="2" />
<text  x="763.13" y="351.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (5 samples, 0.01%)</title><rect x="1000.1" y="293" width="0.2" height="15.0" fill="rgb(239,215,36)" rx="2" ry="2" />
<text  x="1003.13" y="303.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (56 samples, 0.12%)</title><rect x="381.9" y="133" width="1.4" height="15.0" fill="rgb(234,225,12)" rx="2" ry="2" />
<text  x="384.87" y="143.5" ></text>
</g>
<g >
<title>clustering_row::clustering_row (1,478 samples, 3.10%)</title><rect x="162.7" y="165" width="36.6" height="15.0" fill="rgb(205,190,32)" rx="2" ry="2" />
<text  x="165.66" y="175.5" >clu..</text>
</g>
<g >
<title>database::add_column_family (5 samples, 0.01%)</title><rect x="45.5" y="485" width="0.2" height="15.0" fill="rgb(231,32,0)" rx="2" ry="2" />
<text  x="48.53" y="495.5" ></text>
</g>
<g >
<title>operator new (30 samples, 0.06%)</title><rect x="452.0" y="325" width="0.7" height="15.0" fill="rgb(223,49,32)" rx="2" ry="2" />
<text  x="455.00" y="335.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (6 samples, 0.01%)</title><rect x="273.8" y="309" width="0.1" height="15.0" fill="rgb(250,5,48)" rx="2" ry="2" />
<text  x="276.79" y="319.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::value_ptr&gt;::future_state&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry_ptr&gt; (57 samples, 0.12%)</title><rect x="730.4" y="325" width="1.5" height="15.0" fill="rgb(223,80,22)" rx="2" ry="2" />
<text  x="733.45" y="335.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;boost::iterator_range&lt;mutation_fragment*&gt; &gt;::take_value (10 samples, 0.02%)</title><rect x="261.0" y="309" width="0.2" height="15.0" fill="rgb(251,14,44)" rx="2" ry="2" />
<text  x="263.99" y="319.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (19 samples, 0.04%)</title><rect x="1141.8" y="373" width="0.5" height="15.0" fill="rgb(215,199,17)" rx="2" ry="2" />
<text  x="1144.81" y="383.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (158 samples, 0.33%)</title><rect x="35.0" y="469" width="3.9" height="15.0" fill="rgb(236,85,4)" rx="2" ry="2" />
<text  x="37.98" y="479.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take (10 samples, 0.02%)</title><rect x="601.3" y="437" width="0.2" height="15.0" fill="rgb(216,203,29)" rx="2" ry="2" />
<text  x="604.26" y="447.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (17 samples, 0.04%)</title><rect x="1107.7" y="389" width="0.4" height="15.0" fill="rgb(245,107,54)" rx="2" ry="2" />
<text  x="1110.72" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (22 samples, 0.05%)</title><rect x="1046.3" y="213" width="0.5" height="15.0" fill="rgb(239,73,33)" rx="2" ry="2" />
<text  x="1049.26" y="223.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_construct&lt;interval_bound&lt;dht::ring_position&gt; const&amp;&gt; (23 samples, 0.05%)</title><rect x="941.4" y="357" width="0.6" height="15.0" fill="rgb(213,23,24)" rx="2" ry="2" />
<text  x="944.44" y="367.5" ></text>
</g>
<g >
<title>mutation_querier::prepare_writers (66 samples, 0.14%)</title><rect x="326.8" y="181" width="1.7" height="15.0" fill="rgb(251,6,7)" rx="2" ry="2" />
<text  x="329.83" y="191.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (23 samples, 0.05%)</title><rect x="60.2" y="421" width="0.6" height="15.0" fill="rgb(245,182,39)" rx="2" ry="2" />
<text  x="63.19" y="431.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::move_it (20 samples, 0.04%)</title><rect x="755.0" y="405" width="0.5" height="15.0" fill="rgb(227,169,42)" rx="2" ry="2" />
<text  x="757.98" y="415.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_singular (555 samples, 1.16%)</title><rect x="1153.2" y="485" width="13.7" height="15.0" fill="rgb(229,77,28)" rx="2" ry="2" />
<text  x="1156.18" y="495.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (12 samples, 0.03%)</title><rect x="21.9" y="581" width="0.3" height="15.0" fill="rgb(236,185,12)" rx="2" ry="2" />
<text  x="24.94" y="591.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (5 samples, 0.01%)</title><rect x="1133.9" y="389" width="0.2" height="15.0" fill="rgb(241,8,31)" rx="2" ry="2" />
<text  x="1136.94" y="399.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (32 samples, 0.07%)</title><rect x="1149.3" y="485" width="0.8" height="15.0" fill="rgb(246,88,44)" rx="2" ry="2" />
<text  x="1152.34" y="495.5" ></text>
</g>
<g >
<title>utils::fb_utilities::get_broadcast_address (6 samples, 0.01%)</title><rect x="701.2" y="437" width="0.1" height="15.0" fill="rgb(250,45,28)" rx="2" ry="2" />
<text  x="704.18" y="447.5" ></text>
</g>
<g >
<title>read_simple&lt;long, managed_bytes_basic_view&lt; (107 samples, 0.22%)</title><rect x="380.6" y="149" width="2.7" height="15.0" fill="rgb(207,38,39)" rx="2" ry="2" />
<text  x="383.61" y="159.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector (11 samples, 0.02%)</title><rect x="1092.7" y="277" width="0.2" height="15.0" fill="rgb(223,3,48)" rx="2" ry="2" />
<text  x="1095.66" y="287.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::operator= (18 samples, 0.04%)</title><rect x="826.3" y="437" width="0.4" height="15.0" fill="rgb(215,62,11)" rx="2" ry="2" />
<text  x="829.27" y="447.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (9 samples, 0.02%)</title><rect x="388.4" y="229" width="0.2" height="15.0" fill="rgb(235,142,38)" rx="2" ry="2" />
<text  x="391.41" y="239.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (23 samples, 0.05%)</title><rect x="52.8" y="469" width="0.6" height="15.0" fill="rgb(254,216,18)" rx="2" ry="2" />
<text  x="55.79" y="479.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::do_fill_buffer (3,568 samples, 7.49%)</title><rect x="139.7" y="261" width="88.3" height="15.0" fill="rgb(238,18,37)" rx="2" ry="2" />
<text  x="142.65" y="271.5" >partition_..</text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;service::query_state&gt;::~shared_ptr_count_for (45 samples, 0.09%)</title><rect x="663.9" y="485" width="1.1" height="15.0" fill="rgb(213,77,46)" rx="2" ry="2" />
<text  x="666.94" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::disable_abort_on_alloc_failure_temporarily (6 samples, 0.01%)</title><rect x="221.7" y="181" width="0.1" height="15.0" fill="rgb(229,209,27)" rx="2" ry="2" />
<text  x="224.69" y="191.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (5 samples, 0.01%)</title><rect x="44.0" y="485" width="0.2" height="15.0" fill="rgb(218,187,23)" rx="2" ry="2" />
<text  x="47.05" y="495.5" ></text>
</g>
<g >
<title>seastar::promise&lt;void&gt;::promise (16 samples, 0.03%)</title><rect x="68.1" y="405" width="0.4" height="15.0" fill="rgb(222,20,18)" rx="2" ry="2" />
<text  x="71.14" y="415.5" ></text>
</g>
<g >
<title>operator delete (30 samples, 0.06%)</title><rect x="900.4" y="357" width="0.8" height="15.0" fill="rgb(221,163,28)" rx="2" ry="2" />
<text  x="903.44" y="367.5" ></text>
</g>
<g >
<title>read_simple&lt;unsigned short, managed_bytes_basic_view&lt; (32 samples, 0.07%)</title><rect x="915.1" y="373" width="0.8" height="15.0" fill="rgb(245,133,42)" rx="2" ry="2" />
<text  x="918.12" y="383.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;query::result_digest, 3ul&gt;::~small_vector (13 samples, 0.03%)</title><rect x="691.7" y="469" width="0.4" height="15.0" fill="rgb(235,126,24)" rx="2" ry="2" />
<text  x="694.74" y="479.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;query::result_memory_accounter&gt;::clear (22 samples, 0.05%)</title><rect x="600.3" y="437" width="0.5" height="15.0" fill="rgb(208,1,1)" rx="2" ry="2" />
<text  x="603.30" y="447.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::at (52 samples, 0.11%)</title><rect x="1056.4" y="325" width="1.3" height="15.0" fill="rgb(208,124,24)" rx="2" ry="2" />
<text  x="1059.39" y="335.5" ></text>
</g>
<g >
<title>[[vdso]] (251 samples, 0.53%)</title><rect x="1179.1" y="613" width="6.2" height="15.0" fill="rgb(243,214,25)" rx="2" ry="2" />
<text  x="1182.13" y="623.5" ></text>
</g>
<g >
<title>operator delete (27 samples, 0.06%)</title><rect x="609.4" y="421" width="0.7" height="15.0" fill="rgb(210,69,31)" rx="2" ry="2" />
<text  x="612.43" y="431.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (9 samples, 0.02%)</title><rect x="761.9" y="357" width="0.2" height="15.0" fill="rgb(252,17,38)" rx="2" ry="2" />
<text  x="764.87" y="367.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (8 samples, 0.02%)</title><rect x="44.6" y="485" width="0.2" height="15.0" fill="rgb(232,197,52)" rx="2" ry="2" />
<text  x="47.64" y="495.5" ></text>
</g>
<g >
<title>mutation::set_clustered_cell (5 samples, 0.01%)</title><rect x="856.6" y="293" width="0.1" height="15.0" fill="rgb(214,214,44)" rx="2" ry="2" />
<text  x="859.58" y="303.5" ></text>
</g>
<g >
<title>std::operator==&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; (6 samples, 0.01%)</title><rect x="787.0" y="133" width="0.1" height="15.0" fill="rgb(226,217,46)" rx="2" ry="2" />
<text  x="789.95" y="143.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (7 samples, 0.01%)</title><rect x="268.5" y="341" width="0.2" height="15.0" fill="rgb(240,77,19)" rx="2" ry="2" />
<text  x="271.49" y="351.5" ></text>
</g>
<g >
<title>range_tombstone_list::slice (45 samples, 0.09%)</title><rect x="211.5" y="149" width="1.1" height="15.0" fill="rgb(207,97,39)" rx="2" ry="2" />
<text  x="214.49" y="159.5" ></text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt;&amp;&gt; (49 samples, 0.10%)</title><rect x="1059.7" y="293" width="1.2" height="15.0" fill="rgb(235,85,12)" rx="2" ry="2" />
<text  x="1062.65" y="303.5" ></text>
</g>
<g >
<title>std::type_info::operator== (5 samples, 0.01%)</title><rect x="671.9" y="453" width="0.1" height="15.0" fill="rgb(222,153,21)" rx="2" ry="2" />
<text  x="674.88" y="463.5" ></text>
</g>
<g >
<title>std::__detail::_List_node_header::_List_node_header (17 samples, 0.04%)</title><rect x="447.8" y="261" width="0.5" height="15.0" fill="rgb(218,211,54)" rx="2" ry="2" />
<text  x="450.84" y="271.5" ></text>
</g>
<g >
<title>utils::tuple_hash::operator (108 samples, 0.23%)</title><rect x="719.9" y="341" width="2.7" height="15.0" fill="rgb(227,74,49)" rx="2" ry="2" />
<text  x="722.90" y="351.5" ></text>
</g>
<g >
<title>operator new (28 samples, 0.06%)</title><rect x="896.6" y="293" width="0.7" height="15.0" fill="rgb(218,146,12)" rx="2" ry="2" />
<text  x="899.65" y="303.5" ></text>
</g>
<g >
<title>global_schema_ptr::global_schema_ptr (53 samples, 0.11%)</title><rect x="1004.7" y="277" width="1.3" height="15.0" fill="rgb(250,33,45)" rx="2" ry="2" />
<text  x="1007.73" y="287.5" ></text>
</g>
<g >
<title>bplus::tree&lt;long, intrusive_array&lt;cache_entry&gt;, dht::raw_token_less_comparator, 16ul,  (77 samples, 0.16%)</title><rect x="524.5" y="293" width="1.9" height="15.0" fill="rgb(253,16,7)" rx="2" ry="2" />
<text  x="527.53" y="303.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;query::result&gt;::dispose (123 samples, 0.26%)</title><rect x="35.8" y="453" width="3.0" height="15.0" fill="rgb(212,210,38)" rx="2" ry="2" />
<text  x="38.80" y="463.5" ></text>
</g>
<g >
<title>service::abstract_write_response_handler::apply_locally (7 samples, 0.01%)</title><rect x="1142.4" y="245" width="0.2" height="15.0" fill="rgb(250,14,37)" rx="2" ry="2" />
<text  x="1145.38" y="255.5" ></text>
</g>
<g >
<title>database::find_keyspace (5 samples, 0.01%)</title><rect x="966.3" y="357" width="0.1" height="15.0" fill="rgb(250,92,2)" rx="2" ry="2" />
<text  x="969.28" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value_view, std::allocator&lt;cql3::raw_value_view&gt; &gt;::emplace_back&lt;cql3::raw_value_view&gt; (109 samples, 0.23%)</title><rect x="842.2" y="389" width="2.7" height="15.0" fill="rgb(250,139,37)" rx="2" ry="2" />
<text  x="845.22" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (79 samples, 0.17%)</title><rect x="952.8" y="389" width="1.9" height="15.0" fill="rgb(236,95,15)" rx="2" ry="2" />
<text  x="955.76" y="399.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::clear (13 samples, 0.03%)</title><rect x="673.5" y="485" width="0.3" height="15.0" fill="rgb(222,134,42)" rx="2" ry="2" />
<text  x="676.49" y="495.5" ></text>
</g>
<g >
<title>seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;::swap (35 samples, 0.07%)</title><rect x="828.0" y="437" width="0.9" height="15.0" fill="rgb(248,176,2)" rx="2" ry="2" />
<text  x="831.03" y="447.5" ></text>
</g>
<g >
<title>std::apply&lt;auth::get_permissions (5 samples, 0.01%)</title><rect x="800.9" y="309" width="0.1" height="15.0" fill="rgb(249,35,2)" rx="2" ry="2" />
<text  x="803.92" y="319.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (10 samples, 0.02%)</title><rect x="535.9" y="389" width="0.2" height="15.0" fill="rgb(219,137,20)" rx="2" ry="2" />
<text  x="538.89" y="399.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::range_tombstone_accumulator (129 samples, 0.27%)</title><rect x="540.7" y="389" width="3.2" height="15.0" fill="rgb(227,36,1)" rx="2" ry="2" />
<text  x="543.74" y="399.5" ></text>
</g>
<g >
<title>seastar::deferred_action&lt;table::query (103 samples, 0.22%)</title><rect x="595.9" y="437" width="2.6" height="15.0" fill="rgb(227,99,6)" rx="2" ry="2" />
<text  x="598.91" y="447.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (10 samples, 0.02%)</title><rect x="683.7" y="469" width="0.3" height="15.0" fill="rgb(246,26,44)" rx="2" ry="2" />
<text  x="686.72" y="479.5" ></text>
</g>
<g >
<title>utils::tuple_hash::operator (88 samples, 0.18%)</title><rect x="737.8" y="309" width="2.2" height="15.0" fill="rgb(239,83,26)" rx="2" ry="2" />
<text  x="740.77" y="319.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (149 samples, 0.31%)</title><rect x="718.9" y="357" width="3.7" height="15.0" fill="rgb(242,16,9)" rx="2" ry="2" />
<text  x="721.88" y="367.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;managed_bytes&gt;::dispose (11 samples, 0.02%)</title><rect x="901.2" y="357" width="0.3" height="15.0" fill="rgb(225,188,13)" rx="2" ry="2" />
<text  x="904.18" y="367.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (16 samples, 0.03%)</title><rect x="133.0" y="261" width="0.4" height="15.0" fill="rgb(248,205,16)" rx="2" ry="2" />
<text  x="136.04" y="271.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_range_tombstone (231 samples, 0.48%)</title><rect x="216.6" y="213" width="5.7" height="15.0" fill="rgb(248,58,26)" rx="2" ry="2" />
<text  x="219.56" y="223.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (7 samples, 0.01%)</title><rect x="512.4" y="277" width="0.2" height="15.0" fill="rgb(251,131,20)" rx="2" ry="2" />
<text  x="515.42" y="287.5" ></text>
</g>
<g >
<title>std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;auth::role_or_anonymous&gt;, seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (22 samples, 0.05%)</title><rect x="800.2" y="277" width="0.5" height="15.0" fill="rgb(250,205,0)" rx="2" ry="2" />
<text  x="803.17" y="287.5" ></text>
</g>
<g >
<title>managed_bytes::operator= (13 samples, 0.03%)</title><rect x="1126.2" y="421" width="0.3" height="15.0" fill="rgb(240,40,40)" rx="2" ry="2" />
<text  x="1129.19" y="431.5" ></text>
</g>
<g >
<title>seastar::futurize_invoke&lt;seastar::future&lt;void&gt;  (24 samples, 0.05%)</title><rect x="680.6" y="421" width="0.6" height="15.0" fill="rgb(231,146,50)" rx="2" ry="2" />
<text  x="683.60" y="431.5" ></text>
</g>
<g >
<title>query::partition_slice::row_ranges (5 samples, 0.01%)</title><rect x="518.5" y="325" width="0.2" height="15.0" fill="rgb(211,183,48)" rx="2" ry="2" />
<text  x="521.53" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (66 samples, 0.14%)</title><rect x="1129.8" y="389" width="1.6" height="15.0" fill="rgb(205,188,52)" rx="2" ry="2" />
<text  x="1132.78" y="399.5" ></text>
</g>
<g >
<title>cql3::constants::marker::to_expression (7 samples, 0.01%)</title><rect x="877.8" y="341" width="0.2" height="15.0" fill="rgb(228,223,35)" rx="2" ry="2" />
<text  x="880.78" y="351.5" ></text>
</g>
<g >
<title>tracing::add_table_name (15 samples, 0.03%)</title><rect x="1139.6" y="421" width="0.3" height="15.0" fill="rgb(251,52,29)" rx="2" ry="2" />
<text  x="1142.56" y="431.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (111 samples, 0.23%)</title><rect x="628.8" y="485" width="2.8" height="15.0" fill="rgb(215,68,29)" rx="2" ry="2" />
<text  x="631.85" y="495.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::has_available_units (5 samples, 0.01%)</title><rect x="393.9" y="197" width="0.2" height="15.0" fill="rgb(248,136,34)" rx="2" ry="2" />
<text  x="396.93" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value_view, std::allocator&lt;cql3::raw_value_view&gt; &gt;::_M_check_len (7 samples, 0.01%)</title><rect x="844.7" y="357" width="0.2" height="15.0" fill="rgb(214,94,53)" rx="2" ry="2" />
<text  x="847.75" y="367.5" ></text>
</g>
<g >
<title>std::optional&lt;dht::decorated_key&gt;::emplace&lt;dht::decorated_key&gt; (17 samples, 0.04%)</title><rect x="390.1" y="229" width="0.4" height="15.0" fill="rgb(239,91,22)" rx="2" ry="2" />
<text  x="393.09" y="239.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_clustering_bounds (401 samples, 0.84%)</title><rect x="1112.1" y="405" width="10.0" height="15.0" fill="rgb(242,74,11)" rx="2" ry="2" />
<text  x="1115.12" y="415.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_restrictions::size (21 samples, 0.04%)</title><rect x="871.1" y="421" width="0.5" height="15.0" fill="rgb(230,199,2)" rx="2" ry="2" />
<text  x="874.09" y="431.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (7 samples, 0.01%)</title><rect x="881.5" y="309" width="0.1" height="15.0" fill="rgb(209,219,0)" rx="2" ry="2" />
<text  x="884.47" y="319.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (19 samples, 0.04%)</title><rect x="195.7" y="117" width="0.4" height="15.0" fill="rgb(239,186,30)" rx="2" ry="2" />
<text  x="198.66" y="127.5" ></text>
</g>
<g >
<title>mutation_reader_merger::mutation_reader_merger (11 samples, 0.02%)</title><rect x="451.7" y="325" width="0.2" height="15.0" fill="rgb(222,144,24)" rx="2" ry="2" />
<text  x="454.65" y="335.5" ></text>
</g>
<g >
<title>auth::permissions_cache::get (911 samples, 1.91%)</title><rect x="775.5" y="277" width="22.6" height="15.0" fill="rgb(206,79,25)" rx="2" ry="2" />
<text  x="778.54" y="287.5" >a..</text>
</g>
<g >
<title>read_simple&lt;unsigned short, managed_bytes_basic_view&lt; (16 samples, 0.03%)</title><rect x="913.8" y="341" width="0.4" height="15.0" fill="rgb(251,200,4)" rx="2" ry="2" />
<text  x="916.76" y="351.5" ></text>
</g>
<g >
<title>partition_snapshot::get_change_mark (41 samples, 0.09%)</title><rect x="220.3" y="149" width="1.0" height="15.0" fill="rgb(219,228,31)" rx="2" ry="2" />
<text  x="223.25" y="159.5" ></text>
</g>
<g >
<title>std::__detail::_List_node_base::_M_transfer (25 samples, 0.05%)</title><rect x="128.7" y="245" width="0.7" height="15.0" fill="rgb(240,41,15)" rx="2" ry="2" />
<text  x="131.73" y="255.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;::operator (83 samples, 0.17%)</title><rect x="737.9" y="293" width="2.1" height="15.0" fill="rgb(220,156,38)" rx="2" ry="2" />
<text  x="740.90" y="303.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt;::_Move_ctor_base (7 samples, 0.01%)</title><rect x="893.6" y="293" width="0.2" height="15.0" fill="rgb(243,45,19)" rx="2" ry="2" />
<text  x="896.60" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, std::allocator&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt;::~vector (8 samples, 0.02%)</title><rect x="540.5" y="373" width="0.2" height="15.0" fill="rgb(223,108,4)" rx="2" ry="2" />
<text  x="543.52" y="383.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::take_value (15 samples, 0.03%)</title><rect x="52.3" y="469" width="0.4" height="15.0" fill="rgb(245,107,25)" rx="2" ry="2" />
<text  x="55.32" y="479.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (12,713 samples, 26.68%)</title><rect x="103.2" y="421" width="314.8" height="15.0" fill="rgb(211,16,43)" rx="2" ry="2" />
<text  x="106.18" y="431.5" >query::consume_page&lt;</text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (7 samples, 0.01%)</title><rect x="559.1" y="261" width="0.2" height="15.0" fill="rgb(253,127,9)" rx="2" ry="2" />
<text  x="562.14" y="271.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (24 samples, 0.05%)</title><rect x="797.2" y="229" width="0.6" height="15.0" fill="rgb(222,148,34)" rx="2" ry="2" />
<text  x="800.18" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::~vector (8 samples, 0.02%)</title><rect x="1141.2" y="437" width="0.2" height="15.0" fill="rgb(210,180,11)" rx="2" ry="2" />
<text  x="1144.24" y="447.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::guard (8 samples, 0.02%)</title><rect x="498.7" y="261" width="0.2" height="15.0" fill="rgb(223,36,40)" rx="2" ry="2" />
<text  x="501.75" y="271.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::find (20 samples, 0.04%)</title><rect x="645.4" y="437" width="0.5" height="15.0" fill="rgb(221,124,38)" rx="2" ry="2" />
<text  x="648.44" y="447.5" ></text>
</g>
<g >
<title>bound_view::from_range_end&lt;nonwrapping_interval&gt; (9 samples, 0.02%)</title><rect x="224.5" y="213" width="0.2" height="15.0" fill="rgb(252,132,49)" rx="2" ry="2" />
<text  x="227.46" y="223.5" ></text>
</g>
<g >
<title>abstract_type::validate&lt;managed_bytes_basic_view&lt; (6 samples, 0.01%)</title><rect x="883.1" y="293" width="0.1" height="15.0" fill="rgb(252,106,10)" rx="2" ry="2" />
<text  x="886.08" y="303.5" ></text>
</g>
<g >
<title>std::visit&lt;overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::has_token (6 samples, 0.01%)</title><rect x="946.6" y="373" width="0.2" height="15.0" fill="rgb(222,32,44)" rx="2" ry="2" />
<text  x="949.64" y="383.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;reader_concurrency_semaphore::entry&gt;::_M_reset (37 samples, 0.08%)</title><rect x="66.9" y="389" width="0.9" height="15.0" fill="rgb(240,59,51)" rx="2" ry="2" />
<text  x="69.88" y="399.5" ></text>
</g>
<g >
<title>seastar::future_state_base::any::operator= (7 samples, 0.01%)</title><rect x="821.9" y="389" width="0.1" height="15.0" fill="rgb(213,109,37)" rx="2" ry="2" />
<text  x="824.87" y="399.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (31 samples, 0.07%)</title><rect x="1142.3" y="453" width="0.8" height="15.0" fill="rgb(234,77,5)" rx="2" ry="2" />
<text  x="1145.31" y="463.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (6 samples, 0.01%)</title><rect x="685.7" y="453" width="0.2" height="15.0" fill="rgb(224,194,42)" rx="2" ry="2" />
<text  x="688.73" y="463.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::make_data_requests (20 samples, 0.04%)</title><rect x="996.4" y="261" width="0.5" height="15.0" fill="rgb(225,64,42)" rx="2" ry="2" />
<text  x="999.36" y="271.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (5 samples, 0.01%)</title><rect x="809.9" y="357" width="0.2" height="15.0" fill="rgb(239,138,37)" rx="2" ry="2" />
<text  x="812.93" y="367.5" ></text>
</g>
<g >
<title>operator new (6 samples, 0.01%)</title><rect x="276.9" y="293" width="0.2" height="15.0" fill="rgb(246,179,40)" rx="2" ry="2" />
<text  x="279.93" y="303.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (269 samples, 0.56%)</title><rect x="15.2" y="565" width="6.6" height="15.0" fill="rgb(218,201,45)" rx="2" ry="2" />
<text  x="18.15" y="575.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (5 samples, 0.01%)</title><rect x="17.2" y="357" width="0.1" height="15.0" fill="rgb(233,202,17)" rx="2" ry="2" />
<text  x="20.16" y="367.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_state&lt;std::tuple&lt;auth::role_or_anonymous&gt;, seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (7 samples, 0.01%)</title><rect x="775.1" y="277" width="0.1" height="15.0" fill="rgb(213,208,32)" rx="2" ry="2" />
<text  x="778.07" y="287.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::clear (5 samples, 0.01%)</title><rect x="956.5" y="389" width="0.2" height="15.0" fill="rgb(245,85,53)" rx="2" ry="2" />
<text  x="959.55" y="399.5" ></text>
</g>
<g >
<title>auth::resource::parent (91 samples, 0.19%)</title><rect x="770.1" y="325" width="2.3" height="15.0" fill="rgb(219,163,51)" rx="2" ry="2" />
<text  x="773.11" y="335.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_initialize_map (116 samples, 0.24%)</title><rect x="541.1" y="373" width="2.8" height="15.0" fill="rgb(210,157,34)" rx="2" ry="2" />
<text  x="544.07" y="383.5" ></text>
</g>
<g >
<title>utils::estimated_histogram::add (59 samples, 0.12%)</title><rect x="1164.3" y="469" width="1.5" height="15.0" fill="rgb(249,201,30)" rx="2" ry="2" />
<text  x="1167.30" y="479.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (7 samples, 0.01%)</title><rect x="388.1" y="181" width="0.2" height="15.0" fill="rgb(223,82,18)" rx="2" ry="2" />
<text  x="391.14" y="191.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;dht::token, std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt;, std::allocator&lt;std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;dht::token&gt;, std::hash&lt;dht::token&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (236 samples, 0.50%)</title><rect x="1086.8" y="277" width="5.8" height="15.0" fill="rgb(246,192,49)" rx="2" ry="2" />
<text  x="1089.77" y="287.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (3,378 samples, 7.09%)</title><rect x="304.8" y="229" width="83.6" height="15.0" fill="rgb(249,29,21)" rx="2" ry="2" />
<text  x="307.76" y="239.5" >compact_m..</text>
</g>
<g >
<title>reader_permit::consume (25 samples, 0.05%)</title><rect x="279.7" y="277" width="0.6" height="15.0" fill="rgb(211,132,18)" rx="2" ry="2" />
<text  x="282.71" y="287.5" ></text>
</g>
<g >
<title>operator delete (19 samples, 0.04%)</title><rect x="440.2" y="277" width="0.5" height="15.0" fill="rgb(253,100,0)" rx="2" ry="2" />
<text  x="443.21" y="287.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::arm (5 samples, 0.01%)</title><rect x="1027.9" y="149" width="0.2" height="15.0" fill="rgb(237,196,40)" rx="2" ry="2" />
<text  x="1030.93" y="159.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;bytes_ostream::chunk, std::default_delete&lt;bytes_ostream::chunk&gt; &gt;::~unique_ptr (94 samples, 0.20%)</title><rect x="36.5" y="437" width="2.3" height="15.0" fill="rgb(229,132,39)" rx="2" ry="2" />
<text  x="39.52" y="447.5" ></text>
</g>
<g >
<title>operator delete (44 samples, 0.09%)</title><rect x="650.2" y="485" width="1.1" height="15.0" fill="rgb(238,214,28)" rx="2" ry="2" />
<text  x="653.22" y="495.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (205 samples, 0.43%)</title><rect x="15.4" y="437" width="5.1" height="15.0" fill="rgb(250,84,18)" rx="2" ry="2" />
<text  x="18.42" y="447.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (22,910 samples, 48.08%)</title><rect x="53.4" y="469" width="567.3" height="15.0" fill="rgb(209,137,21)" rx="2" ry="2" />
<text  x="56.36" y="479.5" >seastar::noncopyable_function&lt;seastar::future&lt;void&gt; </text>
</g>
<g >
<title>mutation_source::make_reader (4,620 samples, 9.69%)</title><rect x="420.1" y="405" width="114.4" height="15.0" fill="rgb(230,143,32)" rx="2" ry="2" />
<text  x="423.13" y="415.5" >mutation_sourc..</text>
</g>
<g >
<title>operator new (22 samples, 0.05%)</title><rect x="1159.2" y="389" width="0.5" height="15.0" fill="rgb(231,172,0)" rx="2" ry="2" />
<text  x="1162.20" y="399.5" ></text>
</g>
<g >
<title>mutation_partition::upper_bound (6 samples, 0.01%)</title><rect x="211.3" y="133" width="0.2" height="15.0" fill="rgb(254,138,25)" rx="2" ry="2" />
<text  x="214.34" y="143.5" ></text>
</g>
<g >
<title>write_cell&lt;ser::qr_clustered_row__cells__cells&lt;bytes_ostream&gt; &gt; (7 samples, 0.01%)</title><rect x="363.3" y="197" width="0.2" height="15.0" fill="rgb(214,54,50)" rx="2" ry="2" />
<text  x="366.33" y="207.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (5 samples, 0.01%)</title><rect x="117.1" y="309" width="0.1" height="15.0" fill="rgb(212,82,15)" rx="2" ry="2" />
<text  x="120.12" y="319.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;signed char, std::char_traits&lt;signed char&gt; &gt;::substr (14 samples, 0.03%)</title><rect x="484.0" y="181" width="0.3" height="15.0" fill="rgb(254,149,41)" rx="2" ry="2" />
<text  x="486.97" y="191.5" ></text>
</g>
<g >
<title>mutation_partition_view::do_accept&lt;partition_builder&gt; (6 samples, 0.01%)</title><rect x="1142.0" y="245" width="0.2" height="15.0" fill="rgb(233,64,32)" rx="2" ry="2" />
<text  x="1145.04" y="255.5" ></text>
</g>
<g >
<title>operator new (6 samples, 0.01%)</title><rect x="103.0" y="421" width="0.2" height="15.0" fill="rgb(221,195,15)" rx="2" ry="2" />
<text  x="106.03" y="431.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextTokenStr (37 samples, 0.08%)</title><rect x="16.1" y="277" width="0.9" height="15.0" fill="rgb(221,109,47)" rx="2" ry="2" />
<text  x="19.07" y="287.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (6 samples, 0.01%)</title><rect x="831.4" y="341" width="0.1" height="15.0" fill="rgb(212,39,5)" rx="2" ry="2" />
<text  x="834.40" y="351.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_restrictions::size (7 samples, 0.01%)</title><rect x="947.5" y="405" width="0.2" height="15.0" fill="rgb(223,192,48)" rx="2" ry="2" />
<text  x="950.53" y="415.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_token (19 samples, 0.04%)</title><rect x="946.2" y="357" width="0.4" height="15.0" fill="rgb(235,53,34)" rx="2" ry="2" />
<text  x="949.17" y="367.5" ></text>
</g>
<g >
<title>row::row (1,420 samples, 2.98%)</title><rect x="164.1" y="149" width="35.2" height="15.0" fill="rgb(218,123,49)" rx="2" ry="2" />
<text  x="167.09" y="159.5" >ro..</text>
</g>
<g >
<title>seastar::future_state&lt;enum_set&lt;super_enum&lt;auth::permission,  (5 samples, 0.01%)</title><rect x="772.4" y="325" width="0.1" height="15.0" fill="rgb(219,80,3)" rx="2" ry="2" />
<text  x="775.39" y="335.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::guard (9 samples, 0.02%)</title><rect x="526.4" y="309" width="0.3" height="15.0" fill="rgb(252,112,54)" rx="2" ry="2" />
<text  x="529.43" y="319.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (20 samples, 0.04%)</title><rect x="1141.8" y="389" width="0.5" height="15.0" fill="rgb(248,1,45)" rx="2" ry="2" />
<text  x="1144.79" y="399.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::abstract_read_executor&gt;::~shared_ptr (19 samples, 0.04%)</title><rect x="1171.7" y="453" width="0.5" height="15.0" fill="rgb(239,109,48)" rx="2" ry="2" />
<text  x="1174.70" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, std::allocator&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; &gt;::~vector (8 samples, 0.02%)</title><rect x="41.8" y="469" width="0.2" height="15.0" fill="rgb(250,24,17)" rx="2" ry="2" />
<text  x="44.82" y="479.5" ></text>
</g>
<g >
<title>utils::timed_rate_moving_average_and_histogram::mark (12 samples, 0.03%)</title><rect x="620.3" y="437" width="0.3" height="15.0" fill="rgb(238,82,53)" rx="2" ry="2" />
<text  x="623.26" y="447.5" ></text>
</g>
<g >
<title>locator::i_endpoint_snitch::get_local_snitch_ptr (13 samples, 0.03%)</title><rect x="1076.2" y="325" width="0.3" height="15.0" fill="rgb(220,143,50)" rx="2" ry="2" />
<text  x="1079.19" y="335.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (12 samples, 0.03%)</title><rect x="21.9" y="565" width="0.3" height="15.0" fill="rgb(232,133,36)" rx="2" ry="2" />
<text  x="24.94" y="575.5" ></text>
</g>
<g >
<title>utils::approx_exponential_histogram&lt;512ul, 33554432ul, 4ul&gt;::find_bucket_index (8 samples, 0.02%)</title><rect x="672.0" y="453" width="0.2" height="15.0" fill="rgb(237,228,31)" rx="2" ry="2" />
<text  x="675.03" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (27 samples, 0.06%)</title><rect x="653.7" y="485" width="0.7" height="15.0" fill="rgb(207,205,27)" rx="2" ry="2" />
<text  x="656.68" y="495.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::guard (22 samples, 0.05%)</title><rect x="486.1" y="325" width="0.6" height="15.0" fill="rgb(232,79,38)" rx="2" ry="2" />
<text  x="489.12" y="335.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (18 samples, 0.04%)</title><rect x="223.4" y="197" width="0.4" height="15.0" fill="rgb(245,92,4)" rx="2" ry="2" />
<text  x="226.37" y="207.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (11 samples, 0.02%)</title><rect x="1133.6" y="373" width="0.2" height="15.0" fill="rgb(205,54,25)" rx="2" ry="2" />
<text  x="1136.57" y="383.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (10 samples, 0.02%)</title><rect x="585.4" y="373" width="0.2" height="15.0" fill="rgb(228,14,12)" rx="2" ry="2" />
<text  x="588.39" y="383.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::remove_if&lt;row::compact_and_expire (608 samples, 1.28%)</title><rect x="371.2" y="181" width="15.0" height="15.0" fill="rgb(250,200,19)" rx="2" ry="2" />
<text  x="374.18" y="191.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (25 samples, 0.05%)</title><rect x="704.7" y="501" width="0.6" height="15.0" fill="rgb(241,220,20)" rx="2" ry="2" />
<text  x="707.72" y="511.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::take (6 samples, 0.01%)</title><rect x="696.4" y="437" width="0.1" height="15.0" fill="rgb(234,136,35)" rx="2" ry="2" />
<text  x="699.40" y="447.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;interval_bound&lt;dht::ring_position&gt;, false, false&gt;::_Optional_base (7 samples, 0.01%)</title><rect x="1049.3" y="293" width="0.2" height="15.0" fill="rgb(246,220,29)" rx="2" ry="2" />
<text  x="1052.28" y="303.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_state&lt;std::tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;, seastar::future&lt;void&gt; &gt;::do_with_state&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const&amp;, auth::resource&gt; (49 samples, 0.10%)</title><rect x="758.4" y="373" width="1.2" height="15.0" fill="rgb(213,52,38)" rx="2" ry="2" />
<text  x="761.35" y="383.5" ></text>
</g>
<g >
<title>reader_permit::consume (7 samples, 0.01%)</title><rect x="504.3" y="197" width="0.2" height="15.0" fill="rgb(241,62,5)" rx="2" ry="2" />
<text  x="507.32" y="207.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (11,322 samples, 23.76%)</title><rect x="861.1" y="469" width="280.4" height="15.0" fill="rgb(232,193,37)" rx="2" ry="2" />
<text  x="864.11" y="479.5" >seastar::noncopyable_function&lt;seastar..</text>
</g>
<g >
<title>seastar::internal::promise_base::clear (8 samples, 0.02%)</title><rect x="800.4" y="261" width="0.2" height="15.0" fill="rgb(247,170,17)" rx="2" ry="2" />
<text  x="803.37" y="271.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::net::inet_address&gt;::operator (5 samples, 0.01%)</title><rect x="1155.6" y="405" width="0.1" height="15.0" fill="rgb(239,166,52)" rx="2" ry="2" />
<text  x="1158.61" y="415.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (5 samples, 0.01%)</title><rect x="752.7" y="309" width="0.2" height="15.0" fill="rgb(226,58,16)" rx="2" ry="2" />
<text  x="755.73" y="319.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (81 samples, 0.17%)</title><rect x="471.0" y="277" width="2.0" height="15.0" fill="rgb(226,191,50)" rx="2" ry="2" />
<text  x="474.02" y="287.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::partition_snapshot_flat_reader&lt;memtable&amp;&gt; (11 samples, 0.02%)</title><rect x="491.3" y="309" width="0.2" height="15.0" fill="rgb(225,224,51)" rx="2" ry="2" />
<text  x="494.27" y="319.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (8 samples, 0.02%)</title><rect x="646.6" y="453" width="0.2" height="15.0" fill="rgb(224,93,8)" rx="2" ry="2" />
<text  x="649.55" y="463.5" ></text>
</g>
<g >
<title>utils::tuple_hash::operator (56 samples, 0.12%)</title><rect x="753.4" y="341" width="1.4" height="15.0" fill="rgb(241,177,38)" rx="2" ry="2" />
<text  x="756.37" y="351.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::untyped_constant&gt; (6 samples, 0.01%)</title><rect x="18.7" y="277" width="0.2" height="15.0" fill="rgb(234,108,5)" rx="2" ry="2" />
<text  x="21.72" y="287.5" ></text>
</g>
<g >
<title>service::storage_proxy::create_write_response_handler_helper (6 samples, 0.01%)</title><rect x="1142.9" y="213" width="0.2" height="15.0" fill="rgb(231,169,43)" rx="2" ry="2" />
<text  x="1145.93" y="223.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::execute_without_condition (43 samples, 0.09%)</title><rect x="856.0" y="421" width="1.0" height="15.0" fill="rgb(247,197,8)" rx="2" ry="2" />
<text  x="858.96" y="431.5" ></text>
</g>
<g >
<title>std::__optional_hash_call_base&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, true&gt;::operator (18 samples, 0.04%)</title><rect x="807.7" y="277" width="0.4" height="15.0" fill="rgb(217,44,25)" rx="2" ry="2" />
<text  x="810.65" y="287.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::response_count (7 samples, 0.01%)</title><rect x="700.2" y="421" width="0.2" height="15.0" fill="rgb(234,191,11)" rx="2" ry="2" />
<text  x="703.21" y="431.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::impl (20 samples, 0.04%)</title><rect x="445.8" y="277" width="0.5" height="15.0" fill="rgb(230,24,40)" rx="2" ry="2" />
<text  x="448.83" y="287.5" ></text>
</g>
<g >
<title>operator new (20 samples, 0.04%)</title><rect x="533.7" y="325" width="0.5" height="15.0" fill="rgb(217,63,1)" rx="2" ry="2" />
<text  x="536.66" y="335.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (9 samples, 0.02%)</title><rect x="1033.0" y="229" width="0.2" height="15.0" fill="rgb(206,164,4)" rx="2" ry="2" />
<text  x="1036.01" y="239.5" ></text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (11 samples, 0.02%)</title><rect x="12.3" y="581" width="0.3" height="15.0" fill="rgb(250,21,13)" rx="2" ry="2" />
<text  x="15.33" y="591.5" ></text>
</g>
<g >
<title>mutation_fragment::visit&lt;partition_snapshot_read_accounter&amp;&gt; (24 samples, 0.05%)</title><rect x="141.4" y="229" width="0.6" height="15.0" fill="rgb(239,176,21)" rx="2" ry="2" />
<text  x="144.39" y="239.5" ></text>
</g>
<g >
<title>reader_permit::impl::mark_used (13 samples, 0.03%)</title><rect x="58.7" y="453" width="0.3" height="15.0" fill="rgb(245,226,54)" rx="2" ry="2" />
<text  x="61.66" y="463.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_Optional_payload_base (10 samples, 0.02%)</title><rect x="794.0" y="245" width="0.3" height="15.0" fill="rgb(210,203,47)" rx="2" ry="2" />
<text  x="797.03" y="255.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;signed char, std::char_traits&lt;signed char&gt; &gt;::substr (17 samples, 0.04%)</title><rect x="913.3" y="325" width="0.5" height="15.0" fill="rgb(214,183,20)" rx="2" ry="2" />
<text  x="916.34" y="335.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (9 samples, 0.02%)</title><rect x="818.9" y="277" width="0.2" height="15.0" fill="rgb(222,116,47)" rx="2" ry="2" />
<text  x="821.89" y="287.5" ></text>
</g>
<g >
<title>absl::container_internal::operator== (21 samples, 0.04%)</title><rect x="1058.0" y="309" width="0.5" height="15.0" fill="rgb(247,207,31)" rx="2" ry="2" />
<text  x="1060.99" y="319.5" ></text>
</g>
<g >
<title>mutation_querier::consume (1,760 samples, 3.69%)</title><rect x="318.8" y="197" width="43.6" height="15.0" fill="rgb(225,206,39)" rx="2" ry="2" />
<text  x="321.80" y="207.5" >muta..</text>
</g>
<g >
<title>mutation_reader_merger::prepare_next (745 samples, 1.56%)</title><rect x="117.2" y="309" width="18.5" height="15.0" fill="rgb(251,80,12)" rx="2" ry="2" />
<text  x="120.24" y="319.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (87 samples, 0.18%)</title><rect x="143.4" y="213" width="2.1" height="15.0" fill="rgb(241,69,13)" rx="2" ry="2" />
<text  x="146.39" y="223.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;position_in_partition&gt;::_M_reset (22 samples, 0.05%)</title><rect x="243.8" y="245" width="0.5" height="15.0" fill="rgb(240,195,45)" rx="2" ry="2" />
<text  x="246.75" y="255.5" ></text>
</g>
<g >
<title>cql3::authorized_prepared_statements_cache::insert (543 samples, 1.14%)</title><rect x="726.7" y="405" width="13.5" height="15.0" fill="rgb(228,151,16)" rx="2" ry="2" />
<text  x="729.73" y="415.5" ></text>
</g>
<g >
<title>seastar::future&lt;utils::small_vector&lt;service::storage_proxy::unique_response_handler, 1ul&gt; &gt;::then_impl&lt;service::storage_proxy::mutate_internal&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt; &gt; (10 samples, 0.02%)</title><rect x="1142.4" y="309" width="0.2" height="15.0" fill="rgb(224,40,14)" rx="2" ry="2" />
<text  x="1145.36" y="319.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, flat_mutation_reader::impl::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (4,678 samples, 9.82%)</title><rect x="292.6" y="309" width="115.9" height="15.0" fill="rgb(223,140,42)" rx="2" ry="2" />
<text  x="295.63" y="319.5" >std::__invoke_..</text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::set_urgent_state (22 samples, 0.05%)</title><rect x="661.6" y="469" width="0.5" height="15.0" fill="rgb(239,209,38)" rx="2" ry="2" />
<text  x="664.58" y="479.5" ></text>
</g>
<g >
<title>seastar::promise&lt;void&gt;::promise (12 samples, 0.03%)</title><rect x="1028.7" y="133" width="0.3" height="15.0" fill="rgb(211,134,51)" rx="2" ry="2" />
<text  x="1031.70" y="143.5" ></text>
</g>
<g >
<title>operator delete (12 samples, 0.03%)</title><rect x="45.8" y="501" width="0.3" height="15.0" fill="rgb(215,87,26)" rx="2" ry="2" />
<text  x="48.76" y="511.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (6 samples, 0.01%)</title><rect x="317.9" y="197" width="0.2" height="15.0" fill="rgb(227,194,11)" rx="2" ry="2" />
<text  x="320.94" y="207.5" ></text>
</g>
<g >
<title>operator delete (23 samples, 0.05%)</title><rect x="50.4" y="469" width="0.5" height="15.0" fill="rgb(233,168,38)" rx="2" ry="2" />
<text  x="53.36" y="479.5" ></text>
</g>
<g >
<title>flat_mutation_reader::close (8 samples, 0.02%)</title><rect x="1175.3" y="389" width="0.2" height="15.0" fill="rgb(217,105,42)" rx="2" ry="2" />
<text  x="1178.32" y="399.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (13 samples, 0.03%)</title><rect x="163.8" y="133" width="0.3" height="15.0" fill="rgb(245,147,4)" rx="2" ry="2" />
<text  x="166.77" y="143.5" ></text>
</g>
<g >
<title>locator::token_metadata::first_token (11 samples, 0.02%)</title><rect x="1092.9" y="293" width="0.3" height="15.0" fill="rgb(250,206,52)" rx="2" ry="2" />
<text  x="1095.93" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (49 samples, 0.10%)</title><rect x="939.6" y="357" width="1.2" height="15.0" fill="rgb(234,153,23)" rx="2" ry="2" />
<text  x="942.63" y="367.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::with_ready_permit (10 samples, 0.02%)</title><rect x="1031.4" y="213" width="0.3" height="15.0" fill="rgb(239,137,15)" rx="2" ry="2" />
<text  x="1034.43" y="223.5" ></text>
</g>
<g >
<title>do_cql_test (269 samples, 0.56%)</title><rect x="15.2" y="549" width="6.6" height="15.0" fill="rgb(230,27,38)" rx="2" ry="2" />
<text  x="18.15" y="559.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (19 samples, 0.04%)</title><rect x="1142.6" y="309" width="0.5" height="15.0" fill="rgb(231,121,0)" rx="2" ry="2" />
<text  x="1145.61" y="319.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (10 samples, 0.02%)</title><rect x="193.2" y="101" width="0.3" height="15.0" fill="rgb(231,123,18)" rx="2" ry="2" />
<text  x="196.24" y="111.5" ></text>
</g>
<g >
<title>bytes_view_hasher::finalize (45 samples, 0.09%)</title><rect x="721.1" y="293" width="1.1" height="15.0" fill="rgb(246,13,24)" rx="2" ry="2" />
<text  x="724.09" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;mutation_fragment&gt;::allocate (7 samples, 0.01%)</title><rect x="278.0" y="277" width="0.2" height="15.0" fill="rgb(234,34,14)" rx="2" ry="2" />
<text  x="281.02" y="287.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::get_promise (16 samples, 0.03%)</title><rect x="821.0" y="421" width="0.4" height="15.0" fill="rgb(233,202,45)" rx="2" ry="2" />
<text  x="823.97" y="431.5" ></text>
</g>
<g >
<title>std::hash&lt;auth::resource&gt;::operator (97 samples, 0.20%)</title><rect x="805.8" y="341" width="2.4" height="15.0" fill="rgb(207,17,52)" rx="2" ry="2" />
<text  x="808.77" y="351.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::future (5 samples, 0.01%)</title><rect x="745.0" y="373" width="0.1" height="15.0" fill="rgb(240,194,2)" rx="2" ry="2" />
<text  x="748.01" y="383.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::iterator_at (5 samples, 0.01%)</title><rect x="831.7" y="373" width="0.1" height="15.0" fill="rgb(240,181,47)" rx="2" ry="2" />
<text  x="834.72" y="383.5" ></text>
</g>
<g >
<title>compare_unsigned&lt;managed_bytes_basic_view&lt; (59 samples, 0.12%)</title><rect x="479.4" y="213" width="1.4" height="15.0" fill="rgb(245,52,33)" rx="2" ry="2" />
<text  x="482.39" y="223.5" ></text>
</g>
<g >
<title>range_tombstone_list::~range_tombstone_list (46 samples, 0.10%)</title><rect x="563.2" y="309" width="1.1" height="15.0" fill="rgb(230,39,7)" rx="2" ry="2" />
<text  x="566.15" y="319.5" ></text>
</g>
<g >
<title>database::apply_with_commitlog (18 samples, 0.04%)</title><rect x="1141.8" y="325" width="0.5" height="15.0" fill="rgb(226,43,6)" rx="2" ry="2" />
<text  x="1144.84" y="335.5" ></text>
</g>
<g >
<title>seastar::promise&lt;void&gt;::promise (36 samples, 0.08%)</title><rect x="620.8" y="485" width="0.9" height="15.0" fill="rgb(238,186,49)" rx="2" ry="2" />
<text  x="623.80" y="495.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::reset_state (618 samples, 1.30%)</title><rect x="228.4" y="245" width="15.4" height="15.0" fill="rgb(217,51,12)" rx="2" ry="2" />
<text  x="231.45" y="255.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (7 samples, 0.01%)</title><rect x="1043.4" y="229" width="0.1" height="15.0" fill="rgb(235,188,33)" rx="2" ry="2" />
<text  x="1046.36" y="239.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (5 samples, 0.01%)</title><rect x="631.0" y="469" width="0.1" height="15.0" fill="rgb(211,76,44)" rx="2" ry="2" />
<text  x="633.95" y="479.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (29 samples, 0.06%)</title><rect x="1042.8" y="245" width="0.7" height="15.0" fill="rgb(236,178,45)" rx="2" ry="2" />
<text  x="1045.82" y="255.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_Optional_payload_base (23 samples, 0.05%)</title><rect x="1047.3" y="213" width="0.5" height="15.0" fill="rgb(242,57,35)" rx="2" ry="2" />
<text  x="1050.27" y="223.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::move_it (10 samples, 0.02%)</title><rect x="975.0" y="357" width="0.3" height="15.0" fill="rgb(207,175,44)" rx="2" ry="2" />
<text  x="978.02" y="367.5" ></text>
</g>
<g >
<title>reader_permit::consume_resources (14 samples, 0.03%)</title><rect x="506.9" y="181" width="0.3" height="15.0" fill="rgb(221,13,2)" rx="2" ry="2" />
<text  x="509.90" y="191.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_destroy_data (11 samples, 0.02%)</title><rect x="612.9" y="389" width="0.2" height="15.0" fill="rgb(252,70,40)" rx="2" ry="2" />
<text  x="615.88" y="399.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (10 samples, 0.02%)</title><rect x="293.0" y="293" width="0.2" height="15.0" fill="rgb(229,184,21)" rx="2" ry="2" />
<text  x="295.98" y="303.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (10 samples, 0.02%)</title><rect x="579.8" y="405" width="0.2" height="15.0" fill="rgb(235,97,48)" rx="2" ry="2" />
<text  x="582.79" y="415.5" ></text>
</g>
<g >
<title>operator delete (13 samples, 0.03%)</title><rect x="664.5" y="469" width="0.3" height="15.0" fill="rgb(208,118,16)" rx="2" ry="2" />
<text  x="667.48" y="479.5" ></text>
</g>
<g >
<title>operator delete (52 samples, 0.11%)</title><rect x="1126.6" y="421" width="1.3" height="15.0" fill="rgb(228,164,28)" rx="2" ry="2" />
<text  x="1129.58" y="431.5" ></text>
</g>
<g >
<title>query::result::builder::build (106 samples, 0.22%)</title><rect x="587.1" y="437" width="2.6" height="15.0" fill="rgb(214,199,13)" rx="2" ry="2" />
<text  x="590.07" y="447.5" ></text>
</g>
<g >
<title>database::has_keyspace (147 samples, 0.31%)</title><rect x="829.2" y="421" width="3.7" height="15.0" fill="rgb(205,91,42)" rx="2" ry="2" />
<text  x="832.22" y="431.5" ></text>
</g>
<g >
<title>reader_selector::has_new_readers (23 samples, 0.05%)</title><rect x="440.7" y="277" width="0.6" height="15.0" fill="rgb(205,200,47)" rx="2" ry="2" />
<text  x="443.68" y="287.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_pausable&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (21 samples, 0.04%)</title><rect x="680.6" y="357" width="0.6" height="15.0" fill="rgb(240,219,20)" rx="2" ry="2" />
<text  x="683.65" y="367.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (5 samples, 0.01%)</title><rect x="1138.1" y="421" width="0.2" height="15.0" fill="rgb(240,78,54)" rx="2" ry="2" />
<text  x="1141.15" y="431.5" ></text>
</g>
<g >
<title>__dynamic_cast (11 samples, 0.02%)</title><rect x="12.6" y="581" width="0.3" height="15.0" fill="rgb(252,91,9)" rx="2" ry="2" />
<text  x="15.60" y="591.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_pausable&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (4,484 samples, 9.41%)</title><rect x="296.3" y="277" width="111.1" height="15.0" fill="rgb(211,74,18)" rx="2" ry="2" />
<text  x="299.35" y="287.5" >flat_mutation..</text>
</g>
<g >
<title>operator new (28 samples, 0.06%)</title><rect x="937.2" y="373" width="0.7" height="15.0" fill="rgb(232,13,37)" rx="2" ry="2" />
<text  x="940.16" y="383.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (10 samples, 0.02%)</title><rect x="1043.7" y="277" width="0.2" height="15.0" fill="rgb(254,182,15)" rx="2" ry="2" />
<text  x="1046.66" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::_M_range_initialize&lt;managed_bytes const*&gt; (75 samples, 0.16%)</title><rect x="902.1" y="341" width="1.9" height="15.0" fill="rgb(244,71,17)" rx="2" ry="2" />
<text  x="905.09" y="351.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const*, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;*&gt; (27 samples, 0.06%)</title><rect x="771.4" y="293" width="0.6" height="15.0" fill="rgb(249,92,28)" rx="2" ry="2" />
<text  x="774.35" y="303.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (11 samples, 0.02%)</title><rect x="602.9" y="437" width="0.3" height="15.0" fill="rgb(228,101,44)" rx="2" ry="2" />
<text  x="605.90" y="447.5" ></text>
</g>
<g >
<title>ser::safe_serialize_as_uint32&lt;bytes_ostream&gt; (48 samples, 0.10%)</title><rect x="356.3" y="149" width="1.2" height="15.0" fill="rgb(242,18,7)" rx="2" ry="2" />
<text  x="359.32" y="159.5" ></text>
</g>
<g >
<title>auth::resource::resource (114 samples, 0.24%)</title><rect x="759.6" y="389" width="2.8" height="15.0" fill="rgb(234,148,24)" rx="2" ry="2" />
<text  x="762.57" y="399.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::get0 (16 samples, 0.03%)</title><rect x="1150.1" y="485" width="0.4" height="15.0" fill="rgb(250,71,49)" rx="2" ry="2" />
<text  x="1153.13" y="495.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (308 samples, 0.65%)</title><rect x="785.3" y="197" width="7.6" height="15.0" fill="rgb(205,229,22)" rx="2" ry="2" />
<text  x="788.32" y="207.5" ></text>
</g>
<g >
<title>std::make_unique&lt;empty_flat_reader, seastar::lw_shared_ptr&lt;schema const&gt;, reader_permit&gt; (77 samples, 0.16%)</title><rect x="529.3" y="277" width="1.9" height="15.0" fill="rgb(211,91,6)" rx="2" ry="2" />
<text  x="532.28" y="287.5" ></text>
</g>
<g >
<title>row::compact_and_expire (5 samples, 0.01%)</title><rect x="680.9" y="293" width="0.1" height="15.0" fill="rgb(233,1,11)" rx="2" ry="2" />
<text  x="683.92" y="303.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::then_wrapped_common&lt;true, void, service::abstract_read_executor::make_data_requests (158 samples, 0.33%)</title><rect x="993.3" y="309" width="3.9" height="15.0" fill="rgb(228,17,5)" rx="2" ry="2" />
<text  x="996.32" y="319.5" ></text>
</g>
<g >
<title>operator new (13 samples, 0.03%)</title><rect x="451.0" y="293" width="0.3" height="15.0" fill="rgb(238,126,28)" rx="2" ry="2" />
<text  x="453.96" y="303.5" ></text>
</g>
<g >
<title>utils::phased_barrier::start (12 samples, 0.03%)</title><rect x="1036.9" y="245" width="0.3" height="15.0" fill="rgb(207,53,26)" rx="2" ry="2" />
<text  x="1039.92" y="255.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (27 samples, 0.06%)</title><rect x="789.8" y="117" width="0.6" height="15.0" fill="rgb(209,156,13)" rx="2" ry="2" />
<text  x="792.77" y="127.5" ></text>
</g>
<g >
<title>database::get_unlimited_query_max_result_size (67 samples, 0.14%)</title><rect x="1135.1" y="405" width="1.7" height="15.0" fill="rgb(233,183,27)" rx="2" ry="2" />
<text  x="1138.10" y="415.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::operator (49 samples, 0.10%)</title><rect x="743.7" y="373" width="1.2" height="15.0" fill="rgb(213,218,38)" rx="2" ry="2" />
<text  x="746.72" y="383.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_partition_key_ranges (2,798 samples, 5.87%)</title><rect x="872.8" y="421" width="69.3" height="15.0" fill="rgb(240,3,49)" rx="2" ry="2" />
<text  x="875.78" y="431.5" >cql3::r..</text>
</g>
<g >
<title>tombstone::apply (13 samples, 0.03%)</title><rect x="386.9" y="197" width="0.3" height="15.0" fill="rgb(238,122,50)" rx="2" ry="2" />
<text  x="389.85" y="207.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::set_urgent_state (27 samples, 0.06%)</title><rect x="635.8" y="485" width="0.6" height="15.0" fill="rgb(248,160,51)" rx="2" ry="2" />
<text  x="638.76" y="495.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::partition_snapshot_flat_reader&lt;memtable&amp;&gt; (430 samples, 0.90%)</title><rect x="500.7" y="261" width="10.7" height="15.0" fill="rgb(246,36,16)" rx="2" ry="2" />
<text  x="503.73" y="271.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (21 samples, 0.04%)</title><rect x="1141.8" y="453" width="0.5" height="15.0" fill="rgb(217,115,35)" rx="2" ry="2" />
<text  x="1144.79" y="463.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_initialize_map (5 samples, 0.01%)</title><rect x="543.9" y="389" width="0.2" height="15.0" fill="rgb(223,146,27)" rx="2" ry="2" />
<text  x="546.94" y="399.5" ></text>
</g>
<g >
<title>database::find_keyspace (196 samples, 0.41%)</title><rect x="1057.7" y="341" width="4.8" height="15.0" fill="rgb(213,92,5)" rx="2" ry="2" />
<text  x="1060.67" y="351.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_4findERKNS5_10expressionENS5_6oper_tEEUlRS7_E_EES8_SE_T_EUlSG_E_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_8constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_11conjunctionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_12column_valueEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_5tokenEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13function_callEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4castEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_15field_selectionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4nullEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13bind_variableEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_16untyped_constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_17tuple_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_22collection_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSO_S6_SS_SW_S10_S14_S18_S1C_S1G_S1K_S1O_S1S_SK_S1W_S20_S24_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES29_S2C_ (5 samples, 0.01%)</title><rect x="951.8" y="373" width="0.1" height="15.0" fill="rgb(246,98,6)" rx="2" ry="2" />
<text  x="954.82" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::~vector (12 samples, 0.03%)</title><rect x="436.4" y="261" width="0.3" height="15.0" fill="rgb(226,48,12)" rx="2" ry="2" />
<text  x="439.37" y="271.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::leaf_node::allocate (5 samples, 0.01%)</title><rect x="165.4" y="133" width="0.2" height="15.0" fill="rgb(246,16,16)" rx="2" ry="2" />
<text  x="168.43" y="143.5" ></text>
</g>
<g >
<title>service::storage_proxy::sort_endpoints_by_proximity (103 samples, 0.22%)</title><rect x="1095.1" y="325" width="2.6" height="15.0" fill="rgb(219,92,42)" rx="2" ry="2" />
<text  x="1098.14" y="335.5" ></text>
</g>
<g >
<title>executor&lt;test_read (5,743 samples, 12.05%)</title><rect x="709.7" y="485" width="142.2" height="15.0" fill="rgb(219,203,53)" rx="2" ry="2" />
<text  x="712.69" y="495.5" >executor&lt;test_read</text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (27 samples, 0.06%)</title><rect x="769.2" y="277" width="0.7" height="15.0" fill="rgb(222,24,9)" rx="2" ry="2" />
<text  x="772.20" y="287.5" ></text>
</g>
<g >
<title>std::push_heap&lt;mutation_reader_merger::reader_and_fragment*, mutation_reader_merger::reader_heap_compare&gt; (112 samples, 0.24%)</title><rect x="129.5" y="245" width="2.7" height="15.0" fill="rgb(227,168,45)" rx="2" ry="2" />
<text  x="132.48" y="255.5" ></text>
</g>
<g >
<title>cql3::raw_value::make_value (198 samples, 0.42%)</title><rect x="886.4" y="277" width="4.9" height="15.0" fill="rgb(246,195,38)" rx="2" ry="2" />
<text  x="889.42" y="287.5" ></text>
</g>
<g >
<title>std::__equal&lt;true&gt;::equal&lt;signed char&gt; (5 samples, 0.01%)</title><rect x="736.7" y="293" width="0.1" height="15.0" fill="rgb(214,65,36)" rx="2" ry="2" />
<text  x="739.71" y="303.5" ></text>
</g>
<g >
<title>seastar::hrtimer_aio_completion::complete_with (29 samples, 0.06%)</title><rect x="1176.8" y="469" width="0.7" height="15.0" fill="rgb(247,213,46)" rx="2" ry="2" />
<text  x="1179.75" y="479.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (8 samples, 0.02%)</title><rect x="39.7" y="437" width="0.2" height="15.0" fill="rgb(232,47,24)" rx="2" ry="2" />
<text  x="42.69" y="447.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;clustering_key_prefix&gt;::_M_reset (7 samples, 0.01%)</title><rect x="606.9" y="437" width="0.2" height="15.0" fill="rgb(242,85,16)" rx="2" ry="2" />
<text  x="609.88" y="447.5" ></text>
</g>
<g >
<title>seastar::do_until&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (4,552 samples, 9.55%)</title><rect x="136.2" y="293" width="112.7" height="15.0" fill="rgb(232,165,5)" rx="2" ry="2" />
<text  x="139.21" y="303.5" >seastar::do_u..</text>
</g>
<g >
<title>schema::column_at (20 samples, 0.04%)</title><rect x="198.8" y="133" width="0.5" height="15.0" fill="rgb(214,173,10)" rx="2" ry="2" />
<text  x="201.76" y="143.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (7 samples, 0.01%)</title><rect x="294.0" y="261" width="0.2" height="15.0" fill="rgb(238,166,30)" rx="2" ry="2" />
<text  x="297.04" y="271.5" ></text>
</g>
<g >
<title>mutation_fragment::visit&lt;mutation_fragment::calculate_memory_usage (6 samples, 0.01%)</title><rect x="206.2" y="165" width="0.2" height="15.0" fill="rgb(238,169,43)" rx="2" ry="2" />
<text  x="209.21" y="175.5" ></text>
</g>
<g >
<title>dht::ring_position::as_decorated_key (49 samples, 0.10%)</title><rect x="458.0" y="325" width="1.3" height="15.0" fill="rgb(247,216,27)" rx="2" ry="2" />
<text  x="461.04" y="335.5" ></text>
</g>
<g >
<title>std::optional&lt;mutation_querier&gt;::emplace&lt;mutation_querier&gt; (46 samples, 0.10%)</title><rect x="315.7" y="181" width="1.1" height="15.0" fill="rgb(221,177,5)" rx="2" ry="2" />
<text  x="318.68" y="191.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::metadata&gt;::~shared_ptr (15 samples, 0.03%)</title><rect x="646.8" y="469" width="0.4" height="15.0" fill="rgb(236,132,10)" rx="2" ry="2" />
<text  x="649.80" y="479.5" ></text>
</g>
<g >
<title>seastar::reactor::run (46,659 samples, 97.91%)</title><rect x="22.3" y="549" width="1155.4" height="15.0" fill="rgb(215,121,11)" rx="2" ry="2" />
<text  x="25.31" y="559.5" >seastar::reactor::run</text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::~partition_snapshot_flat_reader (5 samples, 0.01%)</title><rect x="1175.4" y="357" width="0.1" height="15.0" fill="rgb(217,15,23)" rx="2" ry="2" />
<text  x="1178.37" y="367.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::storage_proxy&gt;::~shared_ptr (16 samples, 0.03%)</title><rect x="1152.7" y="485" width="0.4" height="15.0" fill="rgb(236,216,33)" rx="2" ry="2" />
<text  x="1155.73" y="495.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;auth::role_or_anonymous&gt;, seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (55 samples, 0.12%)</title><rect x="799.4" y="293" width="1.3" height="15.0" fill="rgb(228,40,22)" rx="2" ry="2" />
<text  x="802.36" y="303.5" ></text>
</g>
<g >
<title>query::digester::digester (23 samples, 0.05%)</title><rect x="591.7" y="405" width="0.5" height="15.0" fill="rgb(235,113,5)" rx="2" ry="2" />
<text  x="594.66" y="415.5" ></text>
</g>
<g >
<title>table::do_apply&lt;frozen_mutation const&amp;, seastar::lw_shared_ptr&lt;schema const&gt; const&amp;&gt; (15 samples, 0.03%)</title><rect x="1141.9" y="277" width="0.4" height="15.0" fill="rgb(248,84,32)" rx="2" ry="2" />
<text  x="1144.89" y="287.5" ></text>
</g>
<g >
<title>std::optional&lt;query::querier&lt; (67 samples, 0.14%)</title><rect x="615.0" y="437" width="1.6" height="15.0" fill="rgb(252,79,23)" rx="2" ry="2" />
<text  x="617.98" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_insert&lt;flat_mutation_reader&gt; (7 samples, 0.01%)</title><rect x="441.3" y="277" width="0.1" height="15.0" fill="rgb(232,81,33)" rx="2" ry="2" />
<text  x="444.25" y="287.5" ></text>
</g>
<g >
<title>query::querier&lt; (18,080 samples, 37.94%)</title><rect x="98.9" y="437" width="447.7" height="15.0" fill="rgb(227,108,27)" rx="2" ry="2" />
<text  x="101.94" y="447.5" >query::querier&lt;</text>
</g>
<g >
<title>ser::qr_partition__rows&lt;bytes_ostream&gt;::add (18 samples, 0.04%)</title><rect x="331.1" y="181" width="0.4" height="15.0" fill="rgb(215,92,39)" rx="2" ry="2" />
<text  x="334.09" y="191.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (16 samples, 0.03%)</title><rect x="670.8" y="485" width="0.4" height="15.0" fill="rgb(213,164,24)" rx="2" ry="2" />
<text  x="673.82" y="495.5" ></text>
</g>
<g >
<title>utils::array_search_gt (5 samples, 0.01%)</title><rect x="465.9" y="261" width="0.1" height="15.0" fill="rgb(234,102,31)" rx="2" ry="2" />
<text  x="468.87" y="271.5" ></text>
</g>
<g >
<title>atomic_cell_or_collection::external_memory_usage (8 samples, 0.02%)</title><rect x="202.1" y="117" width="0.2" height="15.0" fill="rgb(210,194,14)" rx="2" ry="2" />
<text  x="205.10" y="127.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (7,179 samples, 15.06%)</title><rect x="106.8" y="389" width="177.8" height="15.0" fill="rgb(213,224,28)" rx="2" ry="2" />
<text  x="109.82" y="399.5" >merging_reader&lt;mutation..</text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::~small_vector (10 samples, 0.02%)</title><rect x="443.4" y="293" width="0.3" height="15.0" fill="rgb(217,155,49)" rx="2" ry="2" />
<text  x="446.41" y="303.5" ></text>
</g>
<g >
<title>operator new (88 samples, 0.18%)</title><rect x="1119.4" y="357" width="2.1" height="15.0" fill="rgb(221,141,6)" rx="2" ry="2" />
<text  x="1122.35" y="367.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (47 samples, 0.10%)</title><rect x="812.2" y="309" width="1.2" height="15.0" fill="rgb(235,186,25)" rx="2" ry="2" />
<text  x="815.21" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (12 samples, 0.03%)</title><rect x="329.9" y="165" width="0.3" height="15.0" fill="rgb(211,200,19)" rx="2" ry="2" />
<text  x="332.92" y="175.5" ></text>
</g>
<g >
<title>std::__find_if&lt;gms::inet_address*, __gnu_cxx::__ops::_Iter_equals_val&lt;gms::inet_address const&gt; &gt; (7 samples, 0.01%)</title><rect x="1097.7" y="325" width="0.2" height="15.0" fill="rgb(229,122,8)" rx="2" ry="2" />
<text  x="1100.69" y="335.5" ></text>
</g>
<g >
<title>database::find_schema (219 samples, 0.46%)</title><rect x="811.5" y="373" width="5.4" height="15.0" fill="rgb(244,45,35)" rx="2" ry="2" />
<text  x="814.52" y="383.5" ></text>
</g>
<g >
<title>table::set_hit_rate (69 samples, 0.14%)</title><rect x="701.5" y="453" width="1.7" height="15.0" fill="rgb(229,207,48)" rx="2" ry="2" />
<text  x="704.47" y="463.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (5 samples, 0.01%)</title><rect x="935.4" y="405" width="0.1" height="15.0" fill="rgb(219,189,42)" rx="2" ry="2" />
<text  x="938.40" y="415.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (6 samples, 0.01%)</title><rect x="780.1" y="213" width="0.1" height="15.0" fill="rgb(219,2,41)" rx="2" ry="2" />
<text  x="783.07" y="223.5" ></text>
</g>
<g >
<title>locator::simple_snitch::sort_by_proximity (13 samples, 0.03%)</title><rect x="1076.5" y="325" width="0.3" height="15.0" fill="rgb(216,221,53)" rx="2" ry="2" />
<text  x="1079.52" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (10 samples, 0.02%)</title><rect x="651.1" y="469" width="0.2" height="15.0" fill="rgb(214,80,36)" rx="2" ry="2" />
<text  x="654.06" y="479.5" ></text>
</g>
<g >
<title>reader_permit::set_max_result_size (6 samples, 0.01%)</title><rect x="61.0" y="453" width="0.2" height="15.0" fill="rgb(206,192,18)" rx="2" ry="2" />
<text  x="64.03" y="463.5" ></text>
</g>
<g >
<title>operator new (6 samples, 0.01%)</title><rect x="491.1" y="309" width="0.2" height="15.0" fill="rgb(237,80,51)" rx="2" ry="2" />
<text  x="494.12" y="319.5" ></text>
</g>
<g >
<title>std::get&lt;2ul, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; (7 samples, 0.01%)</title><rect x="1138.0" y="421" width="0.1" height="15.0" fill="rgb(209,150,48)" rx="2" ry="2" />
<text  x="1140.98" y="431.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (16 samples, 0.03%)</title><rect x="418.9" y="421" width="0.4" height="15.0" fill="rgb(245,8,16)" rx="2" ry="2" />
<text  x="421.94" y="431.5" ></text>
</g>
<g >
<title>std::default_delete&lt;bytes_ostream::chunk&gt;::operator (45 samples, 0.09%)</title><rect x="37.7" y="421" width="1.1" height="15.0" fill="rgb(245,194,5)" rx="2" ry="2" />
<text  x="40.73" y="431.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_pausable&lt;flush_reader::fill_buffer (5 samples, 0.01%)</title><rect x="22.0" y="437" width="0.1" height="15.0" fill="rgb(214,25,31)" rx="2" ry="2" />
<text  x="24.96" y="447.5" ></text>
</g>
<g >
<title>__strlen_avx2 (107 samples, 0.22%)</title><rect x="1013.2" y="245" width="2.6" height="15.0" fill="rgb(227,201,28)" rx="2" ry="2" />
<text  x="1016.15" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (6 samples, 0.01%)</title><rect x="1124.2" y="389" width="0.1" height="15.0" fill="rgb(248,135,4)" rx="2" ry="2" />
<text  x="1127.16" y="399.5" ></text>
</g>
<g >
<title>utils::basic_ihistogram&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt; &gt;::set_latency (7 samples, 0.01%)</title><rect x="619.7" y="437" width="0.2" height="15.0" fill="rgb(244,108,8)" rx="2" ry="2" />
<text  x="622.69" y="447.5" ></text>
</g>
<g >
<title>__tls_init (5 samples, 0.01%)</title><rect x="498.3" y="261" width="0.1" height="15.0" fill="rgb(208,74,3)" rx="2" ry="2" />
<text  x="501.28" y="271.5" ></text>
</g>
<g >
<title>__tls_init (8 samples, 0.02%)</title><rect x="498.9" y="245" width="0.2" height="15.0" fill="rgb(243,49,26)" rx="2" ry="2" />
<text  x="501.95" y="255.5" ></text>
</g>
<g >
<title>ser::writer_of_qr_partition&lt;bytes_ostream&gt;::skip_key (24 samples, 0.05%)</title><rect x="312.9" y="165" width="0.6" height="15.0" fill="rgb(211,217,30)" rx="2" ry="2" />
<text  x="315.86" y="175.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector (10 samples, 0.02%)</title><rect x="1073.1" y="309" width="0.3" height="15.0" fill="rgb(214,219,16)" rx="2" ry="2" />
<text  x="1076.15" y="319.5" ></text>
</g>
<g >
<title>operator new (75 samples, 0.16%)</title><rect x="845.4" y="437" width="1.8" height="15.0" fill="rgb(219,30,3)" rx="2" ry="2" />
<text  x="848.39" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt;::emplace_back&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; (65 samples, 0.14%)</title><rect x="241.1" y="213" width="1.6" height="15.0" fill="rgb(240,167,9)" rx="2" ry="2" />
<text  x="244.08" y="223.5" ></text>
</g>
<g >
<title>std::__lower_bound&lt;__gnu_cxx::__normal_iterator&lt;long*, std::vector&lt;long, std::allocator&lt;long&gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_less_val&gt; (5 samples, 0.01%)</title><rect x="1164.0" y="469" width="0.1" height="15.0" fill="rgb(213,105,15)" rx="2" ry="2" />
<text  x="1167.02" y="479.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (19 samples, 0.04%)</title><rect x="32.9" y="485" width="0.4" height="15.0" fill="rgb(211,5,25)" rx="2" ry="2" />
<text  x="35.86" y="495.5" ></text>
</g>
<g >
<title>operator delete (16 samples, 0.03%)</title><rect x="632.2" y="485" width="0.4" height="15.0" fill="rgb(225,131,12)" rx="2" ry="2" />
<text  x="635.22" y="495.5" ></text>
</g>
<g >
<title>query::querier_base::querier_base (6 samples, 0.01%)</title><rect x="615.2" y="421" width="0.1" height="15.0" fill="rgb(215,205,54)" rx="2" ry="2" />
<text  x="618.15" y="431.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;partition_key, false, false&gt;::_Optional_base (7 samples, 0.01%)</title><rect x="545.8" y="405" width="0.2" height="15.0" fill="rgb(250,89,50)" rx="2" ry="2" />
<text  x="548.80" y="415.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::push_back (11 samples, 0.02%)</title><rect x="15.7" y="277" width="0.3" height="15.0" fill="rgb(215,18,9)" rx="2" ry="2" />
<text  x="18.72" y="287.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_rehash_aux (51 samples, 0.11%)</title><rect x="1158.6" y="421" width="1.2" height="15.0" fill="rgb(206,158,28)" rx="2" ry="2" />
<text  x="1161.55" y="431.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEE4$_44ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_45ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_43ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_46ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_47ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_48ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_49ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_50ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_51ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_52ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_53ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_54ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_55ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_56ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_57ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_58EERS4_IJNSF_11conjunctionENSF_15binary_operatorENSF_12column_valueENSF_5tokenENSF_21unresolved_identifierENSF_25column_mutation_attributeENSF_13function_callENSF_4castENSF_15field_selectionENSF_4nullENSF_13bind_variableENSF_16untyped_constantENSF_8constantENSF_17tuple_constructorENSF_22collection_constructorENSF_20usertype_constructorEEEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES16_S1O_ (9 samples, 0.02%)</title><rect x="874.5" y="405" width="0.2" height="15.0" fill="rgb(242,68,45)" rx="2" ry="2" />
<text  x="877.48" y="415.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;flat_mutation_reader  (5 samples, 0.01%)</title><rect x="602.6" y="421" width="0.1" height="15.0" fill="rgb(232,127,51)" rx="2" ry="2" />
<text  x="605.62" y="431.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (10 samples, 0.02%)</title><rect x="268.2" y="341" width="0.3" height="15.0" fill="rgb(243,114,32)" rx="2" ry="2" />
<text  x="271.24" y="351.5" ></text>
</g>
<g >
<title>auth::data_resource_view::data_resource_view (6 samples, 0.01%)</title><rect x="805.5" y="341" width="0.2" height="15.0" fill="rgb(218,108,48)" rx="2" ry="2" />
<text  x="808.52" y="351.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (28 samples, 0.06%)</title><rect x="621.0" y="469" width="0.7" height="15.0" fill="rgb(223,187,30)" rx="2" ry="2" />
<text  x="624.00" y="479.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (13 samples, 0.03%)</title><rect x="855.2" y="437" width="0.3" height="15.0" fill="rgb(211,115,24)" rx="2" ry="2" />
<text  x="858.20" y="447.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (11 samples, 0.02%)</title><rect x="652.6" y="453" width="0.3" height="15.0" fill="rgb(217,90,36)" rx="2" ry="2" />
<text  x="655.62" y="463.5" ></text>
</g>
<g >
<title>std::default_delete&lt;query::partition_slice const&gt;::operator (127 samples, 0.27%)</title><rect x="583.9" y="405" width="3.1" height="15.0" fill="rgb(210,76,12)" rx="2" ry="2" />
<text  x="586.90" y="415.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::clone (17 samples, 0.04%)</title><rect x="457.2" y="325" width="0.5" height="15.0" fill="rgb(237,71,2)" rx="2" ry="2" />
<text  x="460.25" y="335.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::storage_proxy&gt;::~shared_ptr (5 samples, 0.01%)</title><rect x="977.0" y="357" width="0.1" height="15.0" fill="rgb(233,150,7)" rx="2" ry="2" />
<text  x="979.97" y="367.5" ></text>
</g>
<g >
<title>operator delete (27 samples, 0.06%)</title><rect x="56.4" y="453" width="0.6" height="15.0" fill="rgb(241,1,16)" rx="2" ry="2" />
<text  x="59.38" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (47 samples, 0.10%)</title><rect x="438.1" y="229" width="1.2" height="15.0" fill="rgb(253,163,34)" rx="2" ry="2" />
<text  x="441.11" y="239.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::lower_bound&lt;mutation_partition, schema const&amp;, nonwrapping_interval&lt;clustering_key_prefix&gt; const&amp;&gt; (18 samples, 0.04%)</title><rect x="242.7" y="229" width="0.4" height="15.0" fill="rgb(217,86,52)" rx="2" ry="2" />
<text  x="245.69" y="239.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (71 samples, 0.15%)</title><rect x="959.1" y="357" width="1.8" height="15.0" fill="rgb(215,5,24)" rx="2" ry="2" />
<text  x="962.15" y="367.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (12 samples, 0.03%)</title><rect x="696.6" y="453" width="0.3" height="15.0" fill="rgb(242,9,39)" rx="2" ry="2" />
<text  x="699.57" y="463.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::clear (6 samples, 0.01%)</title><rect x="660.2" y="485" width="0.1" height="15.0" fill="rgb(241,199,8)" rx="2" ry="2" />
<text  x="663.17" y="495.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (24 samples, 0.05%)</title><rect x="1168.5" y="469" width="0.6" height="15.0" fill="rgb(250,196,13)" rx="2" ry="2" />
<text  x="1171.48" y="479.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;service::storage_proxy::unique_response_handler*, service::storage_proxy::mutate_begin (10 samples, 0.02%)</title><rect x="1142.4" y="277" width="0.2" height="15.0" fill="rgb(219,176,16)" rx="2" ry="2" />
<text  x="1145.36" y="287.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (17 samples, 0.04%)</title><rect x="838.5" y="341" width="0.4" height="15.0" fill="rgb(244,205,50)" rx="2" ry="2" />
<text  x="841.48" y="351.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, fragmented_temporary_buffer::view, managed_bytes_basic_view&lt; (12 samples, 0.03%)</title><rect x="892.8" y="277" width="0.3" height="15.0" fill="rgb(210,220,44)" rx="2" ry="2" />
<text  x="895.78" y="287.5" ></text>
</g>
<g >
<title>__tls_init (12 samples, 0.03%)</title><rect x="139.2" y="229" width="0.3" height="15.0" fill="rgb(248,192,31)" rx="2" ry="2" />
<text  x="142.21" y="239.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::signal (13 samples, 0.03%)</title><rect x="394.1" y="213" width="0.3" height="15.0" fill="rgb(218,32,34)" rx="2" ry="2" />
<text  x="397.06" y="223.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (8 samples, 0.02%)</title><rect x="797.9" y="261" width="0.2" height="15.0" fill="rgb(209,193,17)" rx="2" ry="2" />
<text  x="800.90" y="271.5" ></text>
</g>
<g >
<title>operator new (14 samples, 0.03%)</title><rect x="648.5" y="453" width="0.4" height="15.0" fill="rgb(235,79,8)" rx="2" ry="2" />
<text  x="651.51" y="463.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::then_wrapped_nrvo&lt;void, service::abstract_read_executor::make_data_requests (146 samples, 0.31%)</title><rect x="993.5" y="293" width="3.6" height="15.0" fill="rgb(215,179,54)" rx="2" ry="2" />
<text  x="996.49" y="303.5" ></text>
</g>
<g >
<title>empty_flat_reader::empty_flat_reader (41 samples, 0.09%)</title><rect x="529.6" y="261" width="1.0" height="15.0" fill="rgb(221,205,49)" rx="2" ry="2" />
<text  x="532.63" y="271.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (13 samples, 0.03%)</title><rect x="613.2" y="421" width="0.3" height="15.0" fill="rgb(240,97,10)" rx="2" ry="2" />
<text  x="616.20" y="431.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (259 samples, 0.54%)</title><rect x="15.3" y="501" width="6.4" height="15.0" fill="rgb(250,122,31)" rx="2" ry="2" />
<text  x="18.30" y="511.5" ></text>
</g>
<g >
<title>seastar::future&lt;boost::iterator_range&lt;mutation_fragment*&gt; &gt;::then_impl&lt;mutation_fragment_merger&lt;mutation_reader_merger&gt;::fetch (53 samples, 0.11%)</title><rect x="259.9" y="325" width="1.3" height="15.0" fill="rgb(233,216,24)" rx="2" ry="2" />
<text  x="262.92" y="335.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_prepared (4,033 samples, 8.46%)</title><rect x="723.8" y="437" width="99.9" height="15.0" fill="rgb(235,108,7)" rx="2" ry="2" />
<text  x="726.83" y="447.5" >cql3::query_..</text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (2,369 samples, 4.97%)</title><rect x="157.1" y="229" width="58.7" height="15.0" fill="rgb(225,89,35)" rx="2" ry="2" />
<text  x="160.11" y="239.5" >partit..</text>
</g>
<g >
<title>cql3::statements::select_statement::execute (6,472 samples, 13.58%)</title><rect x="947.9" y="421" width="160.2" height="15.0" fill="rgb(240,74,51)" rx="2" ry="2" />
<text  x="950.88" y="431.5" >cql3::statements::se..</text>
</g>
<g >
<title>reader_selector::has_new_readers (19 samples, 0.04%)</title><rect x="442.1" y="293" width="0.4" height="15.0" fill="rgb(221,196,7)" rx="2" ry="2" />
<text  x="445.07" y="303.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::get_promise (6 samples, 0.01%)</title><rect x="954.7" y="405" width="0.2" height="15.0" fill="rgb(247,37,14)" rx="2" ry="2" />
<text  x="957.71" y="415.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::digest_read_resolver (194 samples, 0.41%)</title><rect x="986.4" y="309" width="4.8" height="15.0" fill="rgb(230,113,9)" rx="2" ry="2" />
<text  x="989.41" y="319.5" ></text>
</g>
<g >
<title>cql3::query_options::query_options (166 samples, 0.35%)</title><rect x="841.0" y="421" width="4.1" height="15.0" fill="rgb(222,174,45)" rx="2" ry="2" />
<text  x="844.01" y="431.5" ></text>
</g>
<g >
<title>cql3::statements::prepared_statement::checked_weak_from_this (49 samples, 0.10%)</title><rect x="716.7" y="421" width="1.2" height="15.0" fill="rgb(218,163,9)" rx="2" ry="2" />
<text  x="719.70" y="431.5" ></text>
</g>
<g >
<title>position_in_partition::position_in_partition (8 samples, 0.02%)</title><rect x="226.5" y="245" width="0.2" height="15.0" fill="rgb(254,38,44)" rx="2" ry="2" />
<text  x="229.49" y="255.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (41 samples, 0.09%)</title><rect x="985.2" y="293" width="1.0" height="15.0" fill="rgb(226,34,15)" rx="2" ry="2" />
<text  x="988.19" y="303.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (7 samples, 0.01%)</title><rect x="928.1" y="341" width="0.2" height="15.0" fill="rgb(240,21,20)" rx="2" ry="2" />
<text  x="931.12" y="351.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::set&lt;service::storage_proxy_coordinator_query_result&gt; (23 samples, 0.05%)</title><rect x="1150.9" y="469" width="0.6" height="15.0" fill="rgb(248,36,22)" rx="2" ry="2" />
<text  x="1153.93" y="479.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_token (7 samples, 0.01%)</title><rect x="644.4" y="405" width="0.2" height="15.0" fill="rgb(208,27,12)" rx="2" ry="2" />
<text  x="647.42" y="415.5" ></text>
</g>
<g >
<title>abstract_type::from_string (6 samples, 0.01%)</title><rect x="20.7" y="373" width="0.2" height="15.0" fill="rgb(231,88,53)" rx="2" ry="2" />
<text  x="23.72" y="383.5" ></text>
</g>
<g >
<title>schema::get_partitioner (17 samples, 0.04%)</title><rect x="934.7" y="405" width="0.4" height="15.0" fill="rgb(234,196,2)" rx="2" ry="2" />
<text  x="937.71" y="415.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (184 samples, 0.39%)</title><rect x="466.0" y="261" width="4.5" height="15.0" fill="rgb(239,201,49)" rx="2" ry="2" />
<text  x="468.99" y="271.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (10 samples, 0.02%)</title><rect x="39.4" y="437" width="0.3" height="15.0" fill="rgb(209,33,52)" rx="2" ry="2" />
<text  x="42.44" y="447.5" ></text>
</g>
<g >
<title>operator new (93 samples, 0.20%)</title><rect x="148.8" y="213" width="2.3" height="15.0" fill="rgb(236,13,6)" rx="2" ry="2" />
<text  x="151.81" y="223.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::emplace_back&lt;std::_List_iterator&lt;flat_mutation_reader&gt; const&amp;, mutation_fragment&gt; (5 samples, 0.01%)</title><rect x="135.1" y="261" width="0.1" height="15.0" fill="rgb(239,33,15)" rx="2" ry="2" />
<text  x="138.10" y="271.5" ></text>
</g>
<g >
<title>_ZSt13__invoke_implISt10unique_ptrIN7seastar8internal13do_with_stateISt5tupleIJN20flat_mutation_reader4impl16consumer_adapterI35stable_flattened_mutations_consumerI17compact_for_queryIL19emit_only_live_rows1EN5query27clustering_position_trackerI20query_result_builderEEEEEEEENS1_6futureIvEEEESt14default_deleteISL_EEZNS2_12do_with_implISH_ZNS6_7consumeISG_EEDaT_EUlRSH_E_JEEEDaOSR_OT0_DpOT1_EUlDpOT_E_JSH_EESR_St14__invoke_otherSW_SZ_ (56 samples, 0.12%)</title><rect x="291.0" y="309" width="1.4" height="15.0" fill="rgb(222,70,0)" rx="2" ry="2" />
<text  x="294.00" y="319.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureIvE9then_implIZZN5query12consume_pageIL19emit_only_live_rows1E20query_result_builderEEDaR20flat_mutation_readerNS_13lw_shared_ptrI22compact_mutation_stateIXT_EL20compact_for_sstables0EEEERKNS3_15partition_sliceEOT0_mjNSt6chrono10time_pointI8gc_clockNSJ_8durationIlSt5ratioILl1ELl1EEEEEEENUlP17mutation_fragmentE_clESS_EUlDpOT_E_NS0_ISt5tupleIJSt8optionalI21clustering_key_prefixEEEEEEESH_OT_ (41 samples, 0.09%)</title><rect x="288.3" y="373" width="1.0" height="15.0" fill="rgb(206,164,49)" rx="2" ry="2" />
<text  x="291.30" y="383.5" ></text>
</g>
<g >
<title>absl::container_internal::operator== (12 samples, 0.03%)</title><rect x="817.3" y="325" width="0.3" height="15.0" fill="rgb(250,90,21)" rx="2" ry="2" />
<text  x="820.31" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (7 samples, 0.01%)</title><rect x="774.9" y="245" width="0.2" height="15.0" fill="rgb(210,64,34)" rx="2" ry="2" />
<text  x="777.89" y="255.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (42 samples, 0.09%)</title><rect x="774.0" y="261" width="1.1" height="15.0" fill="rgb(212,99,27)" rx="2" ry="2" />
<text  x="777.03" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (28 samples, 0.06%)</title><rect x="452.0" y="309" width="0.7" height="15.0" fill="rgb(220,29,9)" rx="2" ry="2" />
<text  x="455.05" y="319.5" ></text>
</g>
<g >
<title>absl::hash_internal::AbslHashValue&lt;absl::hash_internal::HashState&gt; (10 samples, 0.02%)</title><rect x="819.5" y="293" width="0.3" height="15.0" fill="rgb(218,6,3)" rx="2" ry="2" />
<text  x="822.51" y="303.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;service::storage_proxy_coordinator_query_result&gt;, seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::finally_body&lt;service::storage_proxy::do_query (440 samples, 0.92%)</title><rect x="669.7" y="501" width="10.9" height="15.0" fill="rgb(249,198,47)" rx="2" ry="2" />
<text  x="672.66" y="511.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, flat_mutation_reader, reader_concurrency_semaphore::inactive_read_handle&gt;::_Move_ctor_base (9 samples, 0.02%)</title><rect x="616.0" y="389" width="0.2" height="15.0" fill="rgb(233,62,6)" rx="2" ry="2" />
<text  x="618.97" y="399.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::maybe_refresh_state (183 samples, 0.38%)</title><rect x="208.9" y="181" width="4.6" height="15.0" fill="rgb(248,172,22)" rx="2" ry="2" />
<text  x="211.94" y="191.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (6 samples, 0.01%)</title><rect x="56.9" y="437" width="0.1" height="15.0" fill="rgb(233,91,48)" rx="2" ry="2" />
<text  x="59.90" y="447.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::digest_read_resolver&gt;::~shared_ptr (7 samples, 0.01%)</title><rect x="690.3" y="485" width="0.2" height="15.0" fill="rgb(239,48,47)" rx="2" ry="2" />
<text  x="693.31" y="495.5" ></text>
</g>
<g >
<title>std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;std::optional&lt;auth::resource&gt; &gt;, seastar::future&lt;bool&gt; &gt; &gt;::operator (32 samples, 0.07%)</title><rect x="802.7" y="309" width="0.7" height="15.0" fill="rgb(209,104,11)" rx="2" ry="2" />
<text  x="805.65" y="319.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::emplace_back&lt;mutation_reader_merger::reader_and_fragment&gt; (19 samples, 0.04%)</title><rect x="258.1" y="293" width="0.4" height="15.0" fill="rgb(232,62,36)" rx="2" ry="2" />
<text  x="261.06" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::_M_range_initialize&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; const*&gt; (6 samples, 0.01%)</title><rect x="1118.6" y="389" width="0.2" height="15.0" fill="rgb(235,210,11)" rx="2" ry="2" />
<text  x="1121.64" y="399.5" ></text>
</g>
<g >
<title>reader_permit::consume_memory (25 samples, 0.05%)</title><rect x="207.0" y="165" width="0.6" height="15.0" fill="rgb(244,133,40)" rx="2" ry="2" />
<text  x="210.03" y="175.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (13 samples, 0.03%)</title><rect x="1171.4" y="453" width="0.3" height="15.0" fill="rgb(212,21,2)" rx="2" ry="2" />
<text  x="1174.38" y="463.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally&lt;single_node_cql_env::execute_prepared_with_qo (88 samples, 0.18%)</title><rect x="824.0" y="437" width="2.2" height="15.0" fill="rgb(247,127,14)" rx="2" ry="2" />
<text  x="827.00" y="447.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (11 samples, 0.02%)</title><rect x="678.8" y="437" width="0.3" height="15.0" fill="rgb(249,98,52)" rx="2" ry="2" />
<text  x="681.82" y="447.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (19 samples, 0.04%)</title><rect x="383.3" y="165" width="0.4" height="15.0" fill="rgb(205,150,20)" rx="2" ry="2" />
<text  x="386.26" y="175.5" ></text>
</g>
<g >
<title>skip_empty_fragments&lt;managed_bytes_basic_view&lt; (6 samples, 0.01%)</title><rect x="929.4" y="325" width="0.2" height="15.0" fill="rgb(226,184,15)" rx="2" ry="2" />
<text  x="932.43" y="335.5" ></text>
</g>
<g >
<title>ser::writer_of_qr_cell&lt;bytes_ostream&gt;::skip_timestamp (5 samples, 0.01%)</title><rect x="331.6" y="181" width="0.2" height="15.0" fill="rgb(229,60,47)" rx="2" ry="2" />
<text  x="334.63" y="191.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (5 samples, 0.01%)</title><rect x="520.1" y="341" width="0.1" height="15.0" fill="rgb(205,33,45)" rx="2" ry="2" />
<text  x="523.12" y="351.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reserve&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::fill_buffer (5 samples, 0.01%)</title><rect x="22.0" y="389" width="0.1" height="15.0" fill="rgb(234,174,53)" rx="2" ry="2" />
<text  x="24.96" y="399.5" ></text>
</g>
<g >
<title>seastar::reactor::do_run (46,658 samples, 97.91%)</title><rect x="22.3" y="533" width="1155.3" height="15.0" fill="rgb(215,74,16)" rx="2" ry="2" />
<text  x="25.31" y="543.5" >seastar::reactor::do_run</text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (17 samples, 0.04%)</title><rect x="634.3" y="485" width="0.4" height="15.0" fill="rgb(243,17,54)" rx="2" ry="2" />
<text  x="637.27" y="495.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt;  (6 samples, 0.01%)</title><rect x="14.9" y="565" width="0.2" height="15.0" fill="rgb(247,69,31)" rx="2" ry="2" />
<text  x="17.93" y="575.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;service::storage_proxy_coordinator_query_result&gt;::set_value&lt;service::storage_proxy_coordinator_query_result&gt; (43 samples, 0.09%)</title><rect x="1150.8" y="485" width="1.1" height="15.0" fill="rgb(237,40,27)" rx="2" ry="2" />
<text  x="1153.83" y="495.5" ></text>
</g>
<g >
<title>dht::shard_of (26 samples, 0.05%)</title><rect x="1004.1" y="277" width="0.6" height="15.0" fill="rgb(236,128,53)" rx="2" ry="2" />
<text  x="1007.06" y="287.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::get_promise (5 samples, 0.01%)</title><rect x="961.0" y="373" width="0.1" height="15.0" fill="rgb(245,173,15)" rx="2" ry="2" />
<text  x="964.00" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (7 samples, 0.01%)</title><rect x="849.6" y="405" width="0.2" height="15.0" fill="rgb(249,60,21)" rx="2" ry="2" />
<text  x="852.60" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::vector (14 samples, 0.03%)</title><rect x="1138.6" y="421" width="0.4" height="15.0" fill="rgb(236,165,12)" rx="2" ry="2" />
<text  x="1141.62" y="431.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (7 samples, 0.01%)</title><rect x="459.0" y="293" width="0.2" height="15.0" fill="rgb(219,29,44)" rx="2" ry="2" />
<text  x="461.98" y="303.5" ></text>
</g>
<g >
<title>bytes_ostream::chunk::~chunk (38 samples, 0.08%)</title><rect x="37.8" y="405" width="1.0" height="15.0" fill="rgb(238,149,45)" rx="2" ry="2" />
<text  x="40.83" y="415.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (58 samples, 0.12%)</title><rect x="499.1" y="261" width="1.5" height="15.0" fill="rgb(222,84,8)" rx="2" ry="2" />
<text  x="502.15" y="271.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (9 samples, 0.02%)</title><rect x="267.0" y="309" width="0.2" height="15.0" fill="rgb(243,133,17)" rx="2" ry="2" />
<text  x="269.95" y="319.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_M_copy_assign (10 samples, 0.02%)</title><rect x="798.5" y="277" width="0.2" height="15.0" fill="rgb(217,176,12)" rx="2" ry="2" />
<text  x="801.49" y="287.5" ></text>
</g>
<g >
<title>bplus::tree&lt;long, intrusive_array&lt;memtable_entry&gt;, dht::raw_token_less_comparator, 16ul,  (537 samples, 1.13%)</title><rect x="459.8" y="309" width="13.3" height="15.0" fill="rgb(215,119,54)" rx="2" ry="2" />
<text  x="462.77" y="319.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (48 samples, 0.10%)</title><rect x="1056.5" y="309" width="1.2" height="15.0" fill="rgb(244,101,2)" rx="2" ry="2" />
<text  x="1059.48" y="319.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const*, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;*&gt; (35 samples, 0.07%)</title><rect x="783.9" y="181" width="0.8" height="15.0" fill="rgb(223,161,9)" rx="2" ry="2" />
<text  x="786.86" y="191.5" ></text>
</g>
<g >
<title>bplus::searcher&lt;dht::ring_position, long, dht::raw_token_less_comparator, 16ul,  (7 samples, 0.01%)</title><rect x="524.4" y="293" width="0.1" height="15.0" fill="rgb(216,204,48)" rx="2" ry="2" />
<text  x="527.35" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (10 samples, 0.02%)</title><rect x="282.1" y="277" width="0.2" height="15.0" fill="rgb(224,106,52)" rx="2" ry="2" />
<text  x="285.06" y="287.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_Optional_payload_base (8 samples, 0.02%)</title><rect x="1121.9" y="341" width="0.2" height="15.0" fill="rgb(220,99,9)" rx="2" ry="2" />
<text  x="1124.86" y="351.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::impl (32 samples, 0.07%)</title><rect x="496.9" y="277" width="0.8" height="15.0" fill="rgb(205,58,39)" rx="2" ry="2" />
<text  x="499.94" y="287.5" ></text>
</g>
<g >
<title>seastar::repeat&lt;flat_mutation_reader::impl::consume_pausable&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (4,561 samples, 9.57%)</title><rect x="295.5" y="293" width="113.0" height="15.0" fill="rgb(239,188,52)" rx="2" ry="2" />
<text  x="298.53" y="303.5" >seastar::repe..</text>
</g>
<g >
<title>range_tombstone_stream::get_next (13 samples, 0.03%)</title><rect x="221.3" y="165" width="0.3" height="15.0" fill="rgb(254,187,8)" rx="2" ry="2" />
<text  x="224.27" y="175.5" ></text>
</g>
<g >
<title>mutation_source::make_reader (5 samples, 0.01%)</title><rect x="102.9" y="421" width="0.1" height="15.0" fill="rgb(253,173,52)" rx="2" ry="2" />
<text  x="105.91" y="431.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (24 samples, 0.05%)</title><rect x="289.3" y="373" width="0.6" height="15.0" fill="rgb(247,108,2)" rx="2" ry="2" />
<text  x="292.31" y="383.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::lower_bound&lt;mutation_partition, schema const&amp;, nonwrapping_interval&lt;clustering_key_prefix&gt; const&amp;&gt; (26 samples, 0.05%)</title><rect x="210.6" y="149" width="0.7" height="15.0" fill="rgb(227,152,25)" rx="2" ry="2" />
<text  x="213.62" y="159.5" ></text>
</g>
<g >
<title>double_decker&lt;long, cache_entry, dht::raw_token_less_comparator, dht::ring_position_comparator, 16,  (94 samples, 0.20%)</title><rect x="524.1" y="309" width="2.3" height="15.0" fill="rgb(249,217,49)" rx="2" ry="2" />
<text  x="527.11" y="319.5" ></text>
</g>
<g >
<title>auth::data_resource_view::table (5 samples, 0.01%)</title><rect x="764.8" y="357" width="0.1" height="15.0" fill="rgb(232,154,35)" rx="2" ry="2" />
<text  x="767.77" y="367.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::~merging_reader (468 samples, 0.98%)</title><rect x="565.8" y="389" width="11.6" height="15.0" fill="rgb(250,175,27)" rx="2" ry="2" />
<text  x="568.78" y="399.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::~resource_units (18 samples, 0.04%)</title><rect x="406.5" y="229" width="0.5" height="15.0" fill="rgb(246,6,16)" rx="2" ry="2" />
<text  x="409.54" y="239.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (10 samples, 0.02%)</title><rect x="838.6" y="325" width="0.2" height="15.0" fill="rgb(249,15,53)" rx="2" ry="2" />
<text  x="841.56" y="335.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::query_options, std::default_delete&lt;cql3::query_options&gt; &gt;::~unique_ptr (13 samples, 0.03%)</title><rect x="848.4" y="469" width="0.3" height="15.0" fill="rgb(224,199,30)" rx="2" ry="2" />
<text  x="851.41" y="479.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (17 samples, 0.04%)</title><rect x="693.8" y="469" width="0.4" height="15.0" fill="rgb(230,128,34)" rx="2" ry="2" />
<text  x="696.82" y="479.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;cql_transport::messages::result_message::rows, false&gt;::make&lt;cql3::result&gt; (78 samples, 0.16%)</title><rect x="648.2" y="469" width="2.0" height="15.0" fill="rgb(205,55,3)" rx="2" ry="2" />
<text  x="651.24" y="479.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::set&lt;&gt; (16 samples, 0.03%)</title><rect x="31.7" y="469" width="0.4" height="15.0" fill="rgb(249,43,22)" rx="2" ry="2" />
<text  x="34.67" y="479.5" ></text>
</g>
<g >
<title>allocation_strategy::alloc&lt;blob_storage&gt; (41 samples, 0.09%)</title><rect x="181.0" y="85" width="1.0" height="15.0" fill="rgb(243,113,31)" rx="2" ry="2" />
<text  x="183.98" y="95.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (18 samples, 0.04%)</title><rect x="607.4" y="405" width="0.4" height="15.0" fill="rgb(250,100,23)" rx="2" ry="2" />
<text  x="610.40" y="415.5" ></text>
</g>
<g >
<title>cql3::restrictions::(anonymous namespace)::range_from_bytes (1,018 samples, 2.14%)</title><rect x="906.5" y="405" width="25.2" height="15.0" fill="rgb(219,4,38)" rx="2" ry="2" />
<text  x="909.45" y="415.5" >c..</text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt;::allocate (6 samples, 0.01%)</title><rect x="93.2" y="405" width="0.2" height="15.0" fill="rgb(234,100,49)" rx="2" ry="2" />
<text  x="96.22" y="415.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (14 samples, 0.03%)</title><rect x="327.2" y="165" width="0.4" height="15.0" fill="rgb(249,121,20)" rx="2" ry="2" />
<text  x="330.22" y="175.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (80 samples, 0.17%)</title><rect x="1066.5" y="309" width="2.0" height="15.0" fill="rgb(213,125,22)" rx="2" ry="2" />
<text  x="1069.51" y="319.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::lsa_partition_reader (36 samples, 0.08%)</title><rect x="511.4" y="277" width="0.9" height="15.0" fill="rgb(241,102,43)" rx="2" ry="2" />
<text  x="514.43" y="287.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::trivial_direct_move&lt;16ul&gt; (11 samples, 0.02%)</title><rect x="1026.8" y="149" width="0.3" height="15.0" fill="rgb(234,4,16)" rx="2" ry="2" />
<text  x="1029.84" y="159.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::leaf_node::free (20 samples, 0.04%)</title><rect x="401.6" y="213" width="0.5" height="15.0" fill="rgb(228,201,31)" rx="2" ry="2" />
<text  x="404.56" y="223.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_singular (5,676 samples, 11.91%)</title><rect x="962.7" y="373" width="140.6" height="15.0" fill="rgb(218,49,1)" rx="2" ry="2" />
<text  x="965.71" y="383.5" >service::storage_..</text>
</g>
<g >
<title>seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;::basic_sstring (5 samples, 0.01%)</title><rect x="715.2" y="453" width="0.2" height="15.0" fill="rgb(221,64,44)" rx="2" ry="2" />
<text  x="718.24" y="463.5" ></text>
</g>
<g >
<title>database::get_reader_concurrency_semaphore (5 samples, 0.01%)</title><rect x="1017.2" y="245" width="0.1" height="15.0" fill="rgb(237,112,46)" rx="2" ry="2" />
<text  x="1020.19" y="255.5" ></text>
</g>
<g >
<title>operator new (79 samples, 0.17%)</title><rect x="952.8" y="405" width="1.9" height="15.0" fill="rgb(244,205,29)" rx="2" ry="2" />
<text  x="955.76" y="415.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (19 samples, 0.04%)</title><rect x="636.8" y="485" width="0.5" height="15.0" fill="rgb(212,48,8)" rx="2" ry="2" />
<text  x="639.80" y="495.5" ></text>
</g>
<g >
<title>operator new (38 samples, 0.08%)</title><rect x="291.1" y="293" width="1.0" height="15.0" fill="rgb(237,54,47)" rx="2" ry="2" />
<text  x="294.15" y="303.5" ></text>
</g>
<g >
<title>seastar::do_until&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (13 samples, 0.03%)</title><rect x="855.2" y="421" width="0.3" height="15.0" fill="rgb(214,63,44)" rx="2" ry="2" />
<text  x="858.20" y="431.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_token (22 samples, 0.05%)</title><rect x="644.1" y="437" width="0.5" height="15.0" fill="rgb(215,186,20)" rx="2" ry="2" />
<text  x="647.08" y="447.5" ></text>
</g>
<g >
<title>operator new (27 samples, 0.06%)</title><rect x="414.7" y="341" width="0.6" height="15.0" fill="rgb(232,196,21)" rx="2" ry="2" />
<text  x="417.66" y="351.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::remove_if&lt;row::compact_and_expire (725 samples, 1.52%)</title><rect x="368.6" y="197" width="18.0" height="15.0" fill="rgb(248,180,19)" rx="2" ry="2" />
<text  x="371.63" y="207.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_M_reset (9 samples, 0.02%)</title><rect x="925.8" y="373" width="0.2" height="15.0" fill="rgb(223,207,16)" rx="2" ry="2" />
<text  x="928.82" y="383.5" ></text>
</g>
<g >
<title>service::storage_proxy::do_mutate (31 samples, 0.07%)</title><rect x="1142.3" y="341" width="0.8" height="15.0" fill="rgb(241,122,35)" rx="2" ry="2" />
<text  x="1145.31" y="351.5" ></text>
</g>
<g >
<title>tracing::global_trace_state_ptr::global_trace_state_ptr (14 samples, 0.03%)</title><rect x="1048.6" y="277" width="0.4" height="15.0" fill="rgb(252,92,11)" rx="2" ry="2" />
<text  x="1051.63" y="287.5" ></text>
</g>
<g >
<title>operator delete (51 samples, 0.11%)</title><rect x="281.0" y="293" width="1.3" height="15.0" fill="rgb(241,95,33)" rx="2" ry="2" />
<text  x="284.04" y="303.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (9 samples, 0.02%)</title><rect x="892.6" y="277" width="0.2" height="15.0" fill="rgb(208,153,11)" rx="2" ry="2" />
<text  x="895.56" y="287.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::free (8 samples, 0.02%)</title><rect x="400.9" y="181" width="0.2" height="15.0" fill="rgb(236,228,19)" rx="2" ry="2" />
<text  x="403.91" y="191.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::get_limit (16 samples, 0.03%)</title><rect x="1108.1" y="421" width="0.4" height="15.0" fill="rgb(206,206,40)" rx="2" ry="2" />
<text  x="1111.14" y="431.5" ></text>
</g>
<g >
<title>partition_snapshot::~partition_snapshot (20 samples, 0.04%)</title><rect x="559.8" y="277" width="0.5" height="15.0" fill="rgb(242,147,24)" rx="2" ry="2" />
<text  x="562.76" y="287.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::~holder (23 samples, 0.05%)</title><rect x="552.5" y="309" width="0.6" height="15.0" fill="rgb(252,8,45)" rx="2" ry="2" />
<text  x="555.51" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt;::reserve (30 samples, 0.06%)</title><rect x="1155.9" y="453" width="0.8" height="15.0" fill="rgb(250,110,42)" rx="2" ry="2" />
<text  x="1158.93" y="463.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_M_reset (6 samples, 0.01%)</title><rect x="800.6" y="261" width="0.1" height="15.0" fill="rgb(208,155,50)" rx="2" ry="2" />
<text  x="803.57" y="271.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (14 samples, 0.03%)</title><rect x="676.4" y="453" width="0.3" height="15.0" fill="rgb(238,31,4)" rx="2" ry="2" />
<text  x="679.39" y="463.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::do_get_limit (5 samples, 0.01%)</title><rect x="1122.1" y="405" width="0.1" height="15.0" fill="rgb(209,157,5)" rx="2" ry="2" />
<text  x="1125.05" y="415.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;interval_bound&lt;dht::ring_position&gt;, false, false&gt;::_Optional_base (5 samples, 0.01%)</title><rect x="941.3" y="357" width="0.1" height="15.0" fill="rgb(218,224,4)" rx="2" ry="2" />
<text  x="944.32" y="367.5" ></text>
</g>
<g >
<title>operator delete (41 samples, 0.09%)</title><rect x="570.8" y="357" width="1.0" height="15.0" fill="rgb(222,31,37)" rx="2" ry="2" />
<text  x="573.81" y="367.5" ></text>
</g>
<g >
<title>std::queue&lt;reader_concurrency_semaphore::entry, seastar::circular_buffer&lt;reader_concurrency_semaphore::entry, std::allocator&lt;reader_concurrency_semaphore::entry&gt; &gt; &gt;::pop (34 samples, 0.07%)</title><rect x="624.3" y="485" width="0.8" height="15.0" fill="rgb(228,179,39)" rx="2" ry="2" />
<text  x="627.29" y="495.5" ></text>
</g>
<g >
<title>operator delete (28 samples, 0.06%)</title><rect x="808.9" y="373" width="0.7" height="15.0" fill="rgb(239,218,16)" rx="2" ry="2" />
<text  x="811.92" y="383.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (11 samples, 0.02%)</title><rect x="519.1" y="325" width="0.3" height="15.0" fill="rgb(245,87,25)" rx="2" ry="2" />
<text  x="522.10" y="335.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (19 samples, 0.04%)</title><rect x="1142.6" y="245" width="0.5" height="15.0" fill="rgb(254,82,33)" rx="2" ry="2" />
<text  x="1145.61" y="255.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::take_value (6 samples, 0.01%)</title><rect x="271.0" y="341" width="0.1" height="15.0" fill="rgb(229,21,34)" rx="2" ry="2" />
<text  x="273.96" y="351.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (102 samples, 0.21%)</title><rect x="391.9" y="229" width="2.5" height="15.0" fill="rgb(213,216,6)" rx="2" ry="2" />
<text  x="394.85" y="239.5" ></text>
</g>
<g >
<title>std::default_delete&lt;mutation_fragment::data&gt;::operator (41 samples, 0.09%)</title><rect x="406.4" y="245" width="1.0" height="15.0" fill="rgb(230,99,25)" rx="2" ry="2" />
<text  x="409.36" y="255.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (29 samples, 0.06%)</title><rect x="646.0" y="469" width="0.8" height="15.0" fill="rgb(218,120,21)" rx="2" ry="2" />
<text  x="649.03" y="479.5" ></text>
</g>
<g >
<title>operator new (62 samples, 0.13%)</title><rect x="542.4" y="341" width="1.5" height="15.0" fill="rgb(227,54,51)" rx="2" ry="2" />
<text  x="545.38" y="351.5" ></text>
</g>
<g >
<title>logalloc::basic_region_impl::set_reclaiming_enabled (6 samples, 0.01%)</title><rect x="222.0" y="197" width="0.2" height="15.0" fill="rgb(244,153,4)" rx="2" ry="2" />
<text  x="225.01" y="207.5" ></text>
</g>
<g >
<title>service::abstract_read_resolver::done (5 samples, 0.01%)</title><rect x="689.0" y="453" width="0.1" height="15.0" fill="rgb(222,96,20)" rx="2" ry="2" />
<text  x="691.97" y="463.5" ></text>
</g>
<g >
<title>locator::abstract_replication_strategy::get_natural_endpoints (9 samples, 0.02%)</title><rect x="1078.4" y="309" width="0.2" height="15.0" fill="rgb(208,136,48)" rx="2" ry="2" />
<text  x="1081.37" y="319.5" ></text>
</g>
<g >
<title>seastar::internal::uninitialized_wrapper_base&lt;service::storage_proxy_coordinator_query_result, false&gt;::uninitialized_set&lt;service::storage_proxy_coordinator_query_result&gt; (15 samples, 0.03%)</title><rect x="1151.5" y="469" width="0.4" height="15.0" fill="rgb(212,22,3)" rx="2" ry="2" />
<text  x="1154.50" y="479.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;mutation_reader_merger::operator (386 samples, 0.81%)</title><rect x="249.0" y="309" width="9.5" height="15.0" fill="rgb(251,164,30)" rx="2" ry="2" />
<text  x="251.98" y="319.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::forward_to (43 samples, 0.09%)</title><rect x="705.8" y="501" width="1.0" height="15.0" fill="rgb(245,19,35)" rx="2" ry="2" />
<text  x="708.76" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::at (49 samples, 0.10%)</title><rect x="1016.0" y="229" width="1.2" height="15.0" fill="rgb(244,81,1)" rx="2" ry="2" />
<text  x="1018.97" y="239.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;abstract_type const&gt;::~shared_ptr (6 samples, 0.01%)</title><rect x="895.6" y="277" width="0.2" height="15.0" fill="rgb(234,215,37)" rx="2" ry="2" />
<text  x="898.63" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (42 samples, 0.09%)</title><rect x="1160.2" y="421" width="1.1" height="15.0" fill="rgb(245,89,31)" rx="2" ry="2" />
<text  x="1163.24" y="431.5" ></text>
</g>
<g >
<title>memtable::upgrade_entry (5 samples, 0.01%)</title><rect x="519.7" y="341" width="0.1" height="15.0" fill="rgb(220,41,7)" rx="2" ry="2" />
<text  x="522.70" y="351.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::cancel (16 samples, 0.03%)</title><rect x="699.6" y="421" width="0.4" height="15.0" fill="rgb(237,71,21)" rx="2" ry="2" />
<text  x="702.64" y="431.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; const*, std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt; &gt;, nonwrapping_interval&lt;clustering_key_prefix&gt;*&gt; (52 samples, 0.11%)</title><rect x="94.9" y="405" width="1.3" height="15.0" fill="rgb(226,204,40)" rx="2" ry="2" />
<text  x="97.91" y="415.5" ></text>
</g>
<g >
<title>seastar::reactor::do_expire_lowres_timers (7 samples, 0.01%)</title><rect x="1176.4" y="501" width="0.1" height="15.0" fill="rgb(206,132,6)" rx="2" ry="2" />
<text  x="1179.36" y="511.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::close (12 samples, 0.03%)</title><rect x="578.1" y="405" width="0.3" height="15.0" fill="rgb(236,93,39)" rx="2" ry="2" />
<text  x="581.09" y="415.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry_ptr&gt;::clear (5 samples, 0.01%)</title><rect x="732.1" y="373" width="0.1" height="15.0" fill="rgb(211,103,23)" rx="2" ry="2" />
<text  x="735.10" y="383.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (33 samples, 0.07%)</title><rect x="815.9" y="293" width="0.8" height="15.0" fill="rgb(208,2,39)" rx="2" ry="2" />
<text  x="818.87" y="303.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;service::never_speculating_read_executor, true&gt;::make&lt;seastar::lw_shared_ptr&lt;schema const&gt;&amp;, seastar::lw_shared_ptr&lt;table&gt;&amp;, seastar::shared_ptr&lt;service::storage_proxy&gt;&amp;, seastar::lw_shared_ptr&lt;query::read_command&gt;&amp;, nonwrapping_interval&lt;dht::ring_position&gt;, db::consistency_level&amp;, utils::small_vector&lt;gms::inet_address, 3ul&gt;, tracing::trace_state_ptr, service_permit&gt; (388 samples, 0.81%)</title><rect x="1065.2" y="341" width="9.6" height="15.0" fill="rgb(215,166,38)" rx="2" ry="2" />
<text  x="1068.20" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (11 samples, 0.02%)</title><rect x="666.7" y="437" width="0.3" height="15.0" fill="rgb(252,36,34)" rx="2" ry="2" />
<text  x="669.73" y="447.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt; &gt;::satisfy_with_result_of&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::then_wrapped_nrvo&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (91 samples, 0.19%)</title><rect x="660.4" y="485" width="2.2" height="15.0" fill="rgb(210,132,54)" rx="2" ry="2" />
<text  x="663.37" y="495.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (5 samples, 0.01%)</title><rect x="652.1" y="469" width="0.1" height="15.0" fill="rgb(233,51,15)" rx="2" ry="2" />
<text  x="655.12" y="479.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::visit&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (283 samples, 0.59%)</title><rect x="395.7" y="229" width="7.0" height="15.0" fill="rgb(242,105,44)" rx="2" ry="2" />
<text  x="398.69" y="239.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (10 samples, 0.02%)</title><rect x="614.7" y="437" width="0.2" height="15.0" fill="rgb(210,226,13)" rx="2" ry="2" />
<text  x="617.66" y="447.5" ></text>
</g>
<g >
<title>std::__make_heap&lt;__gnu_cxx::__normal_iterator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position*, std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::heap_compare&gt; &gt; (8 samples, 0.02%)</title><rect x="243.5" y="229" width="0.2" height="15.0" fill="rgb(239,166,22)" rx="2" ry="2" />
<text  x="246.48" y="239.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (21 samples, 0.04%)</title><rect x="1159.2" y="373" width="0.5" height="15.0" fill="rgb(243,96,9)" rx="2" ry="2" />
<text  x="1162.22" y="383.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::maybe_decay_reserve (6 samples, 0.01%)</title><rect x="157.3" y="213" width="0.1" height="15.0" fill="rgb(236,38,11)" rx="2" ry="2" />
<text  x="160.26" y="223.5" ></text>
</g>
<g >
<title>abstract_type::bound_value_needs_to_be_reserialized (6 samples, 0.01%)</title><rect x="884.3" y="277" width="0.1" height="15.0" fill="rgb(240,48,39)" rx="2" ry="2" />
<text  x="887.27" y="287.5" ></text>
</g>
<g >
<title>seastar::promise&lt;void&gt;::promise (23 samples, 0.05%)</title><rect x="1024.1" y="181" width="0.6" height="15.0" fill="rgb(207,176,26)" rx="2" ry="2" />
<text  x="1027.12" y="191.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::do_fill_buffer (8 samples, 0.02%)</title><rect x="855.2" y="389" width="0.2" height="15.0" fill="rgb(224,220,3)" rx="2" ry="2" />
<text  x="858.22" y="399.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::query_options, std::default_delete&lt;cql3::query_options&gt; &gt;::~unique_ptr (5 samples, 0.01%)</title><rect x="826.1" y="421" width="0.1" height="15.0" fill="rgb(225,201,52)" rx="2" ry="2" />
<text  x="829.05" y="431.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::untyped_constant&gt; (6 samples, 0.01%)</title><rect x="18.7" y="261" width="0.2" height="15.0" fill="rgb(240,175,52)" rx="2" ry="2" />
<text  x="21.72" y="271.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::entry::entry (5 samples, 0.01%)</title><rect x="1030.1" y="165" width="0.1" height="15.0" fill="rgb(222,1,0)" rx="2" ry="2" />
<text  x="1033.11" y="175.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::take (6 samples, 0.01%)</title><rect x="283.4" y="357" width="0.1" height="15.0" fill="rgb(233,27,53)" rx="2" ry="2" />
<text  x="286.40" y="367.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;managed_bytes const*, managed_bytes*&gt; (18 samples, 0.04%)</title><rect x="903.5" y="325" width="0.5" height="15.0" fill="rgb(224,112,16)" rx="2" ry="2" />
<text  x="906.51" y="335.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::set_value&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; (13 samples, 0.03%)</title><rect x="603.2" y="437" width="0.3" height="15.0" fill="rgb(235,124,0)" rx="2" ry="2" />
<text  x="606.22" y="447.5" ></text>
</g>
<g >
<title>seastar::repeat&lt;flat_mutation_reader::impl::consume_pausable&lt;flush_reader::fill_buffer (5 samples, 0.01%)</title><rect x="22.0" y="453" width="0.1" height="15.0" fill="rgb(205,94,30)" rx="2" ry="2" />
<text  x="24.96" y="463.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (26 samples, 0.05%)</title><rect x="1123.4" y="389" width="0.7" height="15.0" fill="rgb(234,94,16)" rx="2" ry="2" />
<text  x="1126.42" y="399.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::add_data (164 samples, 0.34%)</title><rect x="696.9" y="453" width="4.0" height="15.0" fill="rgb(210,160,42)" rx="2" ry="2" />
<text  x="699.87" y="463.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;gms::inet_address, std::pair&lt;gms::inet_address const, utils::UUID&gt;, std::allocator&lt;std::pair&lt;gms::inet_address const, utils::UUID&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;gms::inet_address&gt;, std::hash&lt;gms::inet_address&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (18 samples, 0.04%)</title><rect x="1155.1" y="421" width="0.4" height="15.0" fill="rgb(252,81,54)" rx="2" ry="2" />
<text  x="1158.06" y="431.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::clear (8 samples, 0.02%)</title><rect x="803.2" y="277" width="0.2" height="15.0" fill="rgb(206,95,45)" rx="2" ry="2" />
<text  x="806.25" y="287.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::pop_back (7 samples, 0.01%)</title><rect x="257.5" y="277" width="0.2" height="15.0" fill="rgb(242,84,19)" rx="2" ry="2" />
<text  x="260.52" y="287.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (76 samples, 0.16%)</title><rect x="137.6" y="261" width="1.9" height="15.0" fill="rgb(224,51,44)" rx="2" ry="2" />
<text  x="140.62" y="271.5" ></text>
</g>
<g >
<title>partition_snapshot::get_change_mark (41 samples, 0.09%)</title><rect x="209.1" y="165" width="1.0" height="15.0" fill="rgb(207,95,25)" rx="2" ry="2" />
<text  x="212.13" y="175.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (15 samples, 0.03%)</title><rect x="1173.7" y="421" width="0.4" height="15.0" fill="rgb(238,26,49)" rx="2" ry="2" />
<text  x="1176.73" y="431.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::_Move_ctor_base (9 samples, 0.02%)</title><rect x="309.8" y="165" width="0.2" height="15.0" fill="rgb(215,88,42)" rx="2" ry="2" />
<text  x="312.82" y="175.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%)</title><rect x="584.9" y="373" width="0.2" height="15.0" fill="rgb(252,91,43)" rx="2" ry="2" />
<text  x="587.94" y="383.5" ></text>
</g>
<g >
<title>seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;::swap (33 samples, 0.07%)</title><rect x="822.7" y="421" width="0.8" height="15.0" fill="rgb(241,166,1)" rx="2" ry="2" />
<text  x="825.73" y="431.5" ></text>
</g>
<g >
<title>mutation_querier::mutation_querier (109 samples, 0.23%)</title><rect x="308.3" y="181" width="2.7" height="15.0" fill="rgb(227,163,7)" rx="2" ry="2" />
<text  x="311.31" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value_view, std::allocator&lt;cql3::raw_value_view&gt; &gt;::emplace_back&lt;cql3::raw_value_view&gt; (5 samples, 0.01%)</title><rect x="845.0" y="405" width="0.1" height="15.0" fill="rgb(250,126,34)" rx="2" ry="2" />
<text  x="847.99" y="415.5" ></text>
</g>
<g >
<title>std::_Optional_base_impl&lt;mutation_querier, std::_Optional_base&lt;mutation_querier, false, false&gt; &gt;::_M_construct&lt;mutation_querier&gt; (31 samples, 0.07%)</title><rect x="314.1" y="181" width="0.8" height="15.0" fill="rgb(227,216,30)" rx="2" ry="2" />
<text  x="317.12" y="191.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser&lt;std::_Mem_fn&lt;std::unique_ptr&lt;cql3::statements::raw::parsed_statement, std::default_delete&lt;cql3::statements::raw::parsed_statement&gt; &gt;  (206 samples, 0.43%)</title><rect x="15.4" y="453" width="5.1" height="15.0" fill="rgb(239,25,2)" rx="2" ry="2" />
<text  x="18.42" y="463.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; const*, nonwrapping_interval&lt;clustering_key_prefix&gt;*&gt; (17 samples, 0.04%)</title><rect x="1121.6" y="357" width="0.5" height="15.0" fill="rgb(219,228,7)" rx="2" ry="2" />
<text  x="1124.63" y="367.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;bytes_ostream::chunk, std::default_delete&lt;bytes_ostream::chunk&gt; &gt;::~unique_ptr (7 samples, 0.01%)</title><rect x="616.6" y="437" width="0.2" height="15.0" fill="rgb(211,82,53)" rx="2" ry="2" />
<text  x="619.64" y="447.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate_to_raw_view (892 samples, 1.87%)</title><rect x="877.6" y="357" width="22.1" height="15.0" fill="rgb(213,127,7)" rx="2" ry="2" />
<text  x="880.58" y="367.5" >c..</text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (116 samples, 0.24%)</title><rect x="408.5" y="309" width="2.9" height="15.0" fill="rgb(242,106,3)" rx="2" ry="2" />
<text  x="411.49" y="319.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cident (7 samples, 0.01%)</title><rect x="17.5" y="341" width="0.2" height="15.0" fill="rgb(228,31,33)" rx="2" ry="2" />
<text  x="20.50" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (10 samples, 0.02%)</title><rect x="1159.5" y="357" width="0.2" height="15.0" fill="rgb(254,147,49)" rx="2" ry="2" />
<text  x="1162.49" y="367.5" ></text>
</g>
<g >
<title>std::__apply_impl&lt;seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (21 samples, 0.04%)</title><rect x="1141.8" y="469" width="0.5" height="15.0" fill="rgb(245,146,31)" rx="2" ry="2" />
<text  x="1144.79" y="479.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (16 samples, 0.03%)</title><rect x="662.1" y="469" width="0.4" height="15.0" fill="rgb(208,225,34)" rx="2" ry="2" />
<text  x="665.13" y="479.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::find (29 samples, 0.06%)</title><rect x="952.0" y="373" width="0.7" height="15.0" fill="rgb(225,91,49)" rx="2" ry="2" />
<text  x="954.96" y="383.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;std::tuple&lt;seastar::lw_shared_ptr&lt;query::result&gt;, cache_temperature&gt; &gt;::set&lt;std::tuple&lt;seastar::lw_shared_ptr&lt;query::result&gt;, cache_temperature&gt; &gt; (5 samples, 0.01%)</title><rect x="44.2" y="469" width="0.2" height="15.0" fill="rgb(224,162,52)" rx="2" ry="2" />
<text  x="47.25" y="479.5" ></text>
</g>
<g >
<title>flat_mutation_reader::close (15 samples, 0.03%)</title><rect x="1175.3" y="453" width="0.4" height="15.0" fill="rgb(245,17,25)" rx="2" ry="2" />
<text  x="1178.32" y="463.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;locator::snitch_ptr&gt;::local (25 samples, 0.05%)</title><rect x="1096.1" y="309" width="0.6" height="15.0" fill="rgb(232,2,23)" rx="2" ry="2" />
<text  x="1099.08" y="319.5" ></text>
</g>
<g >
<title>operator new (162 samples, 0.34%)</title><rect x="1017.3" y="245" width="4.0" height="15.0" fill="rgb(216,41,33)" rx="2" ry="2" />
<text  x="1020.31" y="255.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::normalColumnOperation (55 samples, 0.12%)</title><rect x="17.9" y="325" width="1.4" height="15.0" fill="rgb(232,197,30)" rx="2" ry="2" />
<text  x="20.95" y="335.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::need_filtering (232 samples, 0.49%)</title><rect x="942.1" y="421" width="5.7" height="15.0" fill="rgb(252,114,42)" rx="2" ry="2" />
<text  x="945.06" y="431.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;query::result&gt;::make&lt;query::result&gt; (44 samples, 0.09%)</title><rect x="603.6" y="437" width="1.1" height="15.0" fill="rgb(205,203,46)" rx="2" ry="2" />
<text  x="606.59" y="447.5" ></text>
</g>
<g >
<title>operator delete (20 samples, 0.04%)</title><rect x="554.4" y="277" width="0.5" height="15.0" fill="rgb(217,107,19)" rx="2" ry="2" />
<text  x="557.39" y="287.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::clear (11 samples, 0.02%)</title><rect x="444.3" y="277" width="0.2" height="15.0" fill="rgb(245,113,40)" rx="2" ry="2" />
<text  x="447.27" y="287.5" ></text>
</g>
<g >
<title>operator delete (25 samples, 0.05%)</title><rect x="567.2" y="341" width="0.6" height="15.0" fill="rgb(224,177,42)" rx="2" ry="2" />
<text  x="570.19" y="351.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (76 samples, 0.16%)</title><rect x="730.2" y="341" width="1.9" height="15.0" fill="rgb(229,206,15)" rx="2" ry="2" />
<text  x="733.22" y="351.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (6 samples, 0.01%)</title><rect x="402.1" y="213" width="0.1" height="15.0" fill="rgb(242,79,4)" rx="2" ry="2" />
<text  x="405.05" y="223.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume_in_thread&lt;sstables::sstable_writer, flat_mutation_reader::no_filter&gt; (12 samples, 0.03%)</title><rect x="21.9" y="533" width="0.3" height="15.0" fill="rgb(229,7,11)" rx="2" ry="2" />
<text  x="24.94" y="543.5" ></text>
</g>
<g >
<title>service::storage_proxy::sort_endpoints_by_proximity (7 samples, 0.01%)</title><rect x="1097.9" y="341" width="0.2" height="15.0" fill="rgb(229,201,29)" rx="2" ry="2" />
<text  x="1100.89" y="351.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (30 samples, 0.06%)</title><rect x="525.2" y="261" width="0.7" height="15.0" fill="rgb(230,128,25)" rx="2" ry="2" />
<text  x="528.19" y="271.5" ></text>
</g>
<g >
<title>query::querier_base::close (8 samples, 0.02%)</title><rect x="58.0" y="453" width="0.2" height="15.0" fill="rgb(220,213,20)" rx="2" ry="2" />
<text  x="60.96" y="463.5" ></text>
</g>
<g >
<title>__libc_start_main (46,660 samples, 97.91%)</title><rect x="22.3" y="629" width="1155.4" height="15.0" fill="rgb(205,44,15)" rx="2" ry="2" />
<text  x="25.31" y="639.5" >__libc_start_main</text>
</g>
<g >
<title>query::result_memory_accounter::check_local_limit (7 samples, 0.01%)</title><rect x="303.6" y="197" width="0.1" height="15.0" fill="rgb(238,142,35)" rx="2" ry="2" />
<text  x="306.55" y="207.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::has_slice_or_needs_filtering (28 samples, 0.06%)</title><rect x="944.8" y="373" width="0.7" height="15.0" fill="rgb(240,65,6)" rx="2" ry="2" />
<text  x="947.83" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::allocate_aligned (36 samples, 0.08%)</title><rect x="193.7" y="69" width="0.9" height="15.0" fill="rgb(251,158,30)" rx="2" ry="2" />
<text  x="196.71" y="79.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;std::tuple&lt;seastar::lw_shared_ptr&lt;query::result&gt;, cache_temperature&gt; &gt;::clear (6 samples, 0.01%)</title><rect x="1039.3" y="261" width="0.1" height="15.0" fill="rgb(247,24,44)" rx="2" ry="2" />
<text  x="1042.30" y="271.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::get_local_service (13 samples, 0.03%)</title><rect x="1042.1" y="277" width="0.3" height="15.0" fill="rgb(236,127,21)" rx="2" ry="2" />
<text  x="1045.10" y="287.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::push_mutation_fragment&lt;mutation_fragment&gt; (11 samples, 0.02%)</title><rect x="270.7" y="341" width="0.3" height="15.0" fill="rgb(253,164,32)" rx="2" ry="2" />
<text  x="273.69" y="351.5" ></text>
</g>
<g >
<title>_ZSt5applyIZN7seastar8internal12do_with_implIN4auth17role_or_anonymousEZNS3_15get_permissionsERKNS3_7serviceERKNS3_18authenticated_userERKNS3_8resourceEE3$_9JEEEDaOT_OT0_DpOT1_EUlDpOT_E_St5tupleIJOS4_EEEDcSG_SI_ (55 samples, 0.12%)</title><rect x="773.9" y="293" width="1.4" height="15.0" fill="rgb(237,19,44)" rx="2" ry="2" />
<text  x="776.90" y="303.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (11 samples, 0.02%)</title><rect x="1032.3" y="213" width="0.3" height="15.0" fill="rgb(234,160,19)" rx="2" ry="2" />
<text  x="1035.34" y="223.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (16 samples, 0.03%)</title><rect x="660.7" y="469" width="0.4" height="15.0" fill="rgb(214,120,11)" rx="2" ry="2" />
<text  x="663.67" y="479.5" ></text>
</g>
<g >
<title>partition_key::from_range&lt;std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt; const&amp;&gt; (155 samples, 0.33%)</title><rect x="926.1" y="389" width="3.8" height="15.0" fill="rgb(252,160,7)" rx="2" ry="2" />
<text  x="929.09" y="399.5" ></text>
</g>
<g >
<title>reader_permit::consume_resources (20 samples, 0.04%)</title><rect x="207.1" y="149" width="0.5" height="15.0" fill="rgb(253,54,16)" rx="2" ry="2" />
<text  x="210.10" y="159.5" ></text>
</g>
<g >
<title>reader_permit::impl::~impl (79 samples, 0.17%)</title><rect x="59.0" y="453" width="1.9" height="15.0" fill="rgb(224,178,8)" rx="2" ry="2" />
<text  x="61.98" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%)</title><rect x="401.9" y="181" width="0.1" height="15.0" fill="rgb(214,45,45)" rx="2" ry="2" />
<text  x="404.88" y="191.5" ></text>
</g>
<g >
<title>std::__copy_n_a&lt;legacy_compound_view&lt;compound_type&lt; (201 samples, 0.42%)</title><rect x="917.7" y="357" width="4.9" height="15.0" fill="rgb(228,215,43)" rx="2" ry="2" />
<text  x="920.67" y="367.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::~impl (67 samples, 0.14%)</title><rect x="553.2" y="309" width="1.7" height="15.0" fill="rgb(219,132,32)" rx="2" ry="2" />
<text  x="556.22" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (19 samples, 0.04%)</title><rect x="647.7" y="437" width="0.4" height="15.0" fill="rgb(231,77,24)" rx="2" ry="2" />
<text  x="650.67" y="447.5" ></text>
</g>
<g >
<title>sstring_hash::operator (13 samples, 0.03%)</title><rect x="832.5" y="389" width="0.3" height="15.0" fill="rgb(254,63,17)" rx="2" ry="2" />
<text  x="835.49" y="399.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (10 samples, 0.02%)</title><rect x="69.0" y="389" width="0.3" height="15.0" fill="rgb(221,209,24)" rx="2" ry="2" />
<text  x="72.03" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt;::emplace_back&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; (19 samples, 0.04%)</title><rect x="212.8" y="149" width="0.5" height="15.0" fill="rgb(229,161,27)" rx="2" ry="2" />
<text  x="215.85" y="159.5" ></text>
</g>
<g >
<title>operator new (82 samples, 0.17%)</title><rect x="994.3" y="261" width="2.1" height="15.0" fill="rgb(245,85,38)" rx="2" ry="2" />
<text  x="997.33" y="271.5" ></text>
</g>
<g >
<title>operator delete (51 samples, 0.11%)</title><rect x="681.7" y="485" width="1.3" height="15.0" fill="rgb(249,16,42)" rx="2" ry="2" />
<text  x="684.74" y="495.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::signal (5 samples, 0.01%)</title><rect x="391.1" y="229" width="0.2" height="15.0" fill="rgb(238,164,51)" rx="2" ry="2" />
<text  x="394.13" y="239.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (7 samples, 0.01%)</title><rect x="595.2" y="437" width="0.2" height="15.0" fill="rgb(226,136,29)" rx="2" ry="2" />
<text  x="598.20" y="447.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (9 samples, 0.02%)</title><rect x="1030.4" y="197" width="0.2" height="15.0" fill="rgb(245,4,42)" rx="2" ry="2" />
<text  x="1033.36" y="207.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (147 samples, 0.31%)</title><rect x="172.7" y="101" width="3.6" height="15.0" fill="rgb(235,224,52)" rx="2" ry="2" />
<text  x="175.66" y="111.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (6 samples, 0.01%)</title><rect x="1137.3" y="421" width="0.1" height="15.0" fill="rgb(235,141,2)" rx="2" ry="2" />
<text  x="1140.26" y="431.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (94 samples, 0.20%)</title><rect x="830.2" y="389" width="2.3" height="15.0" fill="rgb(244,219,11)" rx="2" ry="2" />
<text  x="833.16" y="399.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt;::~_Variant_storage (7 samples, 0.01%)</title><rect x="899.4" y="341" width="0.1" height="15.0" fill="rgb(254,56,47)" rx="2" ry="2" />
<text  x="902.37" y="351.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::constant&gt;  (17 samples, 0.04%)</title><rect x="894.1" y="325" width="0.4" height="15.0" fill="rgb(208,114,49)" rx="2" ry="2" />
<text  x="897.12" y="335.5" ></text>
</g>
<g >
<title>make_flat_mutation_reader&lt;empty_flat_reader, seastar::lw_shared_ptr&lt;schema const&gt;, reader_permit&gt; (95 samples, 0.20%)</title><rect x="528.9" y="293" width="2.4" height="15.0" fill="rgb(220,14,13)" rx="2" ry="2" />
<text  x="531.93" y="303.5" ></text>
</g>
<g >
<title>utils::tuple_hash::hash_impl&lt;2ul, auth::resource_kind, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (36 samples, 0.08%)</title><rect x="792.0" y="117" width="0.8" height="15.0" fill="rgb(233,130,46)" rx="2" ry="2" />
<text  x="794.95" y="127.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::set_urgent_state (32 samples, 0.07%)</title><rect x="627.2" y="485" width="0.8" height="15.0" fill="rgb(235,92,12)" rx="2" ry="2" />
<text  x="630.19" y="495.5" ></text>
</g>
<g >
<title>operator new (54 samples, 0.11%)</title><rect x="980.1" y="293" width="1.3" height="15.0" fill="rgb(208,82,9)" rx="2" ry="2" />
<text  x="983.09" y="303.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::drop_expired_front (7 samples, 0.01%)</title><rect x="71.1" y="421" width="0.1" height="15.0" fill="rgb(214,101,0)" rx="2" ry="2" />
<text  x="74.06" y="431.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (32 samples, 0.07%)</title><rect x="676.2" y="469" width="0.8" height="15.0" fill="rgb(239,196,19)" rx="2" ry="2" />
<text  x="679.24" y="479.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::future&lt;void&gt;  (31 samples, 0.07%)</title><rect x="1142.3" y="357" width="0.8" height="15.0" fill="rgb(247,111,10)" rx="2" ry="2" />
<text  x="1145.31" y="367.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::relation (15 samples, 0.03%)</title><rect x="19.4" y="341" width="0.4" height="15.0" fill="rgb(253,124,39)" rx="2" ry="2" />
<text  x="22.41" y="351.5" ></text>
</g>
<g >
<title>boost::intrusive::bstbase&lt;boost::intrusive::mhtraits&lt;range_tombstone_entry, boost::intrusive::set_member_hook&lt;boost::intrusive::link_mode&lt; (10 samples, 0.02%)</title><rect x="555.9" y="293" width="0.2" height="15.0" fill="rgb(249,71,26)" rx="2" ry="2" />
<text  x="558.90" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::_M_range_initialize&lt;managed_bytes const*&gt; (16 samples, 0.03%)</title><rect x="901.5" y="357" width="0.4" height="15.0" fill="rgb(224,59,29)" rx="2" ry="2" />
<text  x="904.55" y="367.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;position_in_partition&gt;::_M_reset (5 samples, 0.01%)</title><rect x="564.7" y="309" width="0.1" height="15.0" fill="rgb(223,195,17)" rx="2" ry="2" />
<text  x="567.69" y="319.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::on_permit_unused (12 samples, 0.03%)</title><rect x="70.7" y="421" width="0.3" height="15.0" fill="rgb(219,39,28)" rx="2" ry="2" />
<text  x="73.74" y="431.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::reserve (6 samples, 0.01%)</title><rect x="97.7" y="405" width="0.1" height="15.0" fill="rgb(226,109,47)" rx="2" ry="2" />
<text  x="100.66" y="415.5" ></text>
</g>
<g >
<title>mutation_reader_merger::mutation_reader_merger (371 samples, 0.78%)</title><rect x="433.4" y="309" width="9.2" height="15.0" fill="rgb(252,122,23)" rx="2" ry="2" />
<text  x="436.43" y="319.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::close (745 samples, 1.56%)</title><rect x="547.3" y="389" width="18.5" height="15.0" fill="rgb(249,44,7)" rx="2" ry="2" />
<text  x="550.33" y="399.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (13 samples, 0.03%)</title><rect x="941.7" y="325" width="0.3" height="15.0" fill="rgb(220,28,40)" rx="2" ry="2" />
<text  x="944.69" y="335.5" ></text>
</g>
<g >
<title>operator new (15 samples, 0.03%)</title><rect x="416.1" y="373" width="0.4" height="15.0" fill="rgb(238,203,28)" rx="2" ry="2" />
<text  x="419.09" y="383.5" ></text>
</g>
<g >
<title>database::apply_with_commitlog (16 samples, 0.03%)</title><rect x="1141.9" y="309" width="0.4" height="15.0" fill="rgb(245,10,37)" rx="2" ry="2" />
<text  x="1144.86" y="319.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (14 samples, 0.03%)</title><rect x="60.4" y="405" width="0.3" height="15.0" fill="rgb(246,30,46)" rx="2" ry="2" />
<text  x="63.37" y="415.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_28has_slice_or_needs_filteringERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES28_S2B_ (5 samples, 0.01%)</title><rect x="945.1" y="357" width="0.1" height="15.0" fill="rgb(219,26,19)" rx="2" ry="2" />
<text  x="948.06" y="367.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (12 samples, 0.03%)</title><rect x="825.5" y="357" width="0.3" height="15.0" fill="rgb(246,92,45)" rx="2" ry="2" />
<text  x="828.53" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (12 samples, 0.03%)</title><rect x="34.6" y="453" width="0.3" height="15.0" fill="rgb(207,37,43)" rx="2" ry="2" />
<text  x="37.59" y="463.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;std::optional&lt;auth::resource&gt; &gt;, seastar::future&lt;bool&gt; &gt;, std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;std::optional&lt;auth::resource&gt; &gt;, seastar::future&lt;bool&gt; &gt; &gt; &gt;::~unique_ptr (6 samples, 0.01%)</title><rect x="804.1" y="341" width="0.2" height="15.0" fill="rgb(253,195,26)" rx="2" ry="2" />
<text  x="807.11" y="351.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (75 samples, 0.16%)</title><rect x="674.3" y="453" width="1.8" height="15.0" fill="rgb(250,24,42)" rx="2" ry="2" />
<text  x="677.29" y="463.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (6 samples, 0.01%)</title><rect x="244.6" y="245" width="0.1" height="15.0" fill="rgb(210,202,33)" rx="2" ry="2" />
<text  x="247.59" y="255.5" ></text>
</g>
<g >
<title>validation::validate_keyspace (123 samples, 0.26%)</title><rect x="817.0" y="373" width="3.0" height="15.0" fill="rgb(238,197,6)" rx="2" ry="2" />
<text  x="819.99" y="383.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEENK4$_43clERKNSF_15binary_operatorEEUlRKNSF_12column_valueEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_17tuple_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlNSF_5tokenEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlSS_E_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_11conjunctionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_8constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_21unresolved_identifierEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_25column_mutation_attributeEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13function_callEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4castEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_15field_selectionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4nullEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13bind_variableEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_16untyped_constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_22collection_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_20usertype_constructorEE_EERS4_IJS14_SQ_ST_S11_S1C_S1G_S1K_S1O_S1S_S1W_S20_S24_S18_SX_S28_S2C_EEEJEEESt16integer_sequenceImJLm2EEEE14__visit_invokeES2H_S2J_ (1,112 samples, 2.33%)</title><rect x="876.6" y="373" width="27.5" height="15.0" fill="rgb(242,44,3)" rx="2" ry="2" />
<text  x="879.61" y="383.5" >_..</text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_M_reset (10 samples, 0.02%)</title><rect x="1074.3" y="325" width="0.2" height="15.0" fill="rgb(239,190,5)" rx="2" ry="2" />
<text  x="1077.29" y="335.5" ></text>
</g>
<g >
<title>empty_flat_reader::~empty_flat_reader (38 samples, 0.08%)</title><rect x="550.0" y="325" width="0.9" height="15.0" fill="rgb(248,188,25)" rx="2" ry="2" />
<text  x="552.98" y="335.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (11 samples, 0.02%)</title><rect x="699.3" y="421" width="0.3" height="15.0" fill="rgb(239,133,25)" rx="2" ry="2" />
<text  x="702.32" y="431.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (12 samples, 0.03%)</title><rect x="1140.1" y="421" width="0.3" height="15.0" fill="rgb(221,207,51)" rx="2" ry="2" />
<text  x="1143.13" y="431.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::get0 (16 samples, 0.03%)</title><rect x="696.2" y="453" width="0.3" height="15.0" fill="rgb(206,110,28)" rx="2" ry="2" />
<text  x="699.15" y="463.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (30 samples, 0.06%)</title><rect x="740.7" y="389" width="0.8" height="15.0" fill="rgb(226,78,52)" rx="2" ry="2" />
<text  x="743.75" y="399.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (19 samples, 0.04%)</title><rect x="890.8" y="229" width="0.4" height="15.0" fill="rgb(248,196,31)" rx="2" ry="2" />
<text  x="893.75" y="239.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_slice_or_needs_filtering (38 samples, 0.08%)</title><rect x="944.6" y="389" width="0.9" height="15.0" fill="rgb(250,190,8)" rx="2" ry="2" />
<text  x="947.59" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (10 samples, 0.02%)</title><rect x="39.9" y="453" width="0.3" height="15.0" fill="rgb(227,175,14)" rx="2" ry="2" />
<text  x="42.91" y="463.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (16 samples, 0.03%)</title><rect x="413.0" y="373" width="0.4" height="15.0" fill="rgb(234,45,26)" rx="2" ry="2" />
<text  x="415.97" y="383.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::get_timeout (19 samples, 0.04%)</title><rect x="951.0" y="405" width="0.5" height="15.0" fill="rgb(253,97,38)" rx="2" ry="2" />
<text  x="954.05" y="415.5" ></text>
</g>
<g >
<title>operator delete (24 samples, 0.05%)</title><rect x="611.1" y="389" width="0.6" height="15.0" fill="rgb(239,103,18)" rx="2" ry="2" />
<text  x="614.07" y="399.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::term&gt;::~shared_ptr (5 samples, 0.01%)</title><rect x="1134.5" y="421" width="0.1" height="15.0" fill="rgb(240,150,5)" rx="2" ry="2" />
<text  x="1137.51" y="431.5" ></text>
</g>
<g >
<title>locator::token_metadata::get_host_id_if_known (68 samples, 0.14%)</title><rect x="1154.1" y="453" width="1.7" height="15.0" fill="rgb(230,31,17)" rx="2" ry="2" />
<text  x="1157.10" y="463.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (8 samples, 0.02%)</title><rect x="931.8" y="405" width="0.2" height="15.0" fill="rgb(233,31,23)" rx="2" ry="2" />
<text  x="934.76" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (6 samples, 0.01%)</title><rect x="577.8" y="373" width="0.2" height="15.0" fill="rgb(242,228,45)" rx="2" ry="2" />
<text  x="580.84" y="383.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::~holder (8 samples, 0.02%)</title><rect x="457.7" y="325" width="0.2" height="15.0" fill="rgb(218,40,33)" rx="2" ry="2" />
<text  x="460.67" y="335.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::key_is_in_relation (45 samples, 0.09%)</title><rect x="951.6" y="389" width="1.2" height="15.0" fill="rgb(218,81,30)" rx="2" ry="2" />
<text  x="954.64" y="399.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_last_fragment_kind, 4ul&gt;::emplace_back&lt;std::_List_iterator&lt;flat_mutation_reader&gt;, mutation_fragment::kind&gt; (13 samples, 0.03%)</title><rect x="439.9" y="261" width="0.3" height="15.0" fill="rgb(205,180,12)" rx="2" ry="2" />
<text  x="442.89" y="271.5" ></text>
</g>
<g >
<title>managed_bytes::operator= (36 samples, 0.08%)</title><rect x="932.0" y="405" width="0.8" height="15.0" fill="rgb(219,34,54)" rx="2" ry="2" />
<text  x="934.96" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::~disable_abort_on_alloc_failure_temporarily (7 samples, 0.01%)</title><rect x="221.8" y="181" width="0.2" height="15.0" fill="rgb(225,94,37)" rx="2" ry="2" />
<text  x="224.84" y="191.5" ></text>
</g>
<g >
<title>operator delete (15 samples, 0.03%)</title><rect x="657.4" y="437" width="0.3" height="15.0" fill="rgb(249,102,16)" rx="2" ry="2" />
<text  x="660.37" y="447.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::operator= (33 samples, 0.07%)</title><rect x="821.4" y="421" width="0.8" height="15.0" fill="rgb(253,45,29)" rx="2" ry="2" />
<text  x="824.40" y="431.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (57 samples, 0.12%)</title><rect x="15.7" y="357" width="1.4" height="15.0" fill="rgb(205,105,24)" rx="2" ry="2" />
<text  x="18.67" y="367.5" ></text>
</g>
<g >
<title>cql3::statements::update_statement::add_update_for_key (18 samples, 0.04%)</title><rect x="856.5" y="357" width="0.4" height="15.0" fill="rgb(216,200,20)" rx="2" ry="2" />
<text  x="859.48" y="367.5" ></text>
</g>
<g >
<title>seastar::internal::repeater&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (18 samples, 0.04%)</title><rect x="855.2" y="501" width="0.4" height="15.0" fill="rgb(230,51,43)" rx="2" ry="2" />
<text  x="858.17" y="511.5" ></text>
</g>
<g >
<title>operator delete (25 samples, 0.05%)</title><rect x="410.0" y="261" width="0.6" height="15.0" fill="rgb(211,37,53)" rx="2" ry="2" />
<text  x="413.00" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (6 samples, 0.01%)</title><rect x="571.7" y="341" width="0.1" height="15.0" fill="rgb(218,97,12)" rx="2" ry="2" />
<text  x="574.67" y="351.5" ></text>
</g>
<g >
<title>seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::expand (6 samples, 0.01%)</title><rect x="511.1" y="245" width="0.2" height="15.0" fill="rgb(224,28,25)" rx="2" ry="2" />
<text  x="514.13" y="255.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (11 samples, 0.02%)</title><rect x="90.1" y="421" width="0.2" height="15.0" fill="rgb(249,140,44)" rx="2" ry="2" />
<text  x="93.05" y="431.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (8 samples, 0.02%)</title><rect x="195.5" y="117" width="0.2" height="15.0" fill="rgb(208,158,53)" rx="2" ry="2" />
<text  x="198.47" y="127.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (140 samples, 0.29%)</title><rect x="1185.3" y="613" width="3.5" height="15.0" fill="rgb(232,162,47)" rx="2" ry="2" />
<text  x="1188.34" y="623.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::_M_create_storage (5 samples, 0.01%)</title><rect x="935.6" y="405" width="0.1" height="15.0" fill="rgb(214,218,15)" rx="2" ry="2" />
<text  x="938.62" y="415.5" ></text>
</g>
<g >
<title>empty_flat_reader::close (10 samples, 0.02%)</title><rect x="549.1" y="341" width="0.2" height="15.0" fill="rgb(230,195,4)" rx="2" ry="2" />
<text  x="552.09" y="351.5" ></text>
</g>
<g >
<title>mutation_partition::upper_bound (50 samples, 0.10%)</title><rect x="234.7" y="197" width="1.2" height="15.0" fill="rgb(241,145,45)" rx="2" ry="2" />
<text  x="237.66" y="207.5" ></text>
</g>
<g >
<title>seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;::swap (31 samples, 0.07%)</title><rect x="716.9" y="405" width="0.8" height="15.0" fill="rgb(237,190,10)" rx="2" ry="2" />
<text  x="719.90" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (15 samples, 0.03%)</title><rect x="618.5" y="373" width="0.3" height="15.0" fill="rgb(221,176,50)" rx="2" ry="2" />
<text  x="621.47" y="383.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (22 samples, 0.05%)</title><rect x="1057.1" y="293" width="0.6" height="15.0" fill="rgb(219,82,28)" rx="2" ry="2" />
<text  x="1060.13" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (54 samples, 0.11%)</title><rect x="980.1" y="277" width="1.3" height="15.0" fill="rgb(234,42,41)" rx="2" ry="2" />
<text  x="983.09" y="287.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume_in_thread&lt;sstables::sstable_writer&gt; (12 samples, 0.03%)</title><rect x="21.9" y="549" width="0.3" height="15.0" fill="rgb(248,127,11)" rx="2" ry="2" />
<text  x="24.94" y="559.5" ></text>
</g>
<g >
<title>partition_snapshot::partition_tombstone (28 samples, 0.06%)</title><rect x="510.1" y="229" width="0.7" height="15.0" fill="rgb(216,88,20)" rx="2" ry="2" />
<text  x="513.07" y="239.5" ></text>
</g>
<g >
<title>database::do_apply (19 samples, 0.04%)</title><rect x="1141.8" y="341" width="0.5" height="15.0" fill="rgb(217,135,19)" rx="2" ry="2" />
<text  x="1144.81" y="351.5" ></text>
</g>
<g >
<title>ser::writer_of_query_result&lt;bytes_ostream&gt;::writer_of_query_result (93 samples, 0.20%)</title><rect x="592.7" y="405" width="2.3" height="15.0" fill="rgb(226,125,34)" rx="2" ry="2" />
<text  x="595.72" y="415.5" ></text>
</g>
<g >
<title>cql_transport::messages::result_message::rows::rows (19 samples, 0.04%)</title><rect x="649.4" y="437" width="0.5" height="15.0" fill="rgb(250,194,7)" rx="2" ry="2" />
<text  x="652.40" y="447.5" ></text>
</g>
<g >
<title>compound_type&lt; (164 samples, 0.34%)</title><rect x="480.8" y="213" width="4.1" height="15.0" fill="rgb(243,83,41)" rx="2" ry="2" />
<text  x="483.85" y="223.5" ></text>
</g>
<g >
<title>query_result_builder::consume_new_partition (15 samples, 0.03%)</title><rect x="363.5" y="213" width="0.4" height="15.0" fill="rgb(225,212,8)" rx="2" ry="2" />
<text  x="366.50" y="223.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::execute (5 samples, 0.01%)</title><rect x="692.1" y="485" width="0.1" height="15.0" fill="rgb(251,42,27)" rx="2" ry="2" />
<text  x="695.06" y="495.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (11 samples, 0.02%)</title><rect x="48.3" y="485" width="0.2" height="15.0" fill="rgb(215,118,37)" rx="2" ry="2" />
<text  x="51.26" y="495.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (118 samples, 0.25%)</title><rect x="17.1" y="373" width="2.9" height="15.0" fill="rgb(230,19,5)" rx="2" ry="2" />
<text  x="20.08" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::vector (13 samples, 0.03%)</title><rect x="904.7" y="373" width="0.3" height="15.0" fill="rgb(213,118,2)" rx="2" ry="2" />
<text  x="907.69" y="383.5" ></text>
</g>
<g >
<title>mutation_reader_merger::maybe_add_readers (32 samples, 0.07%)</title><rect x="432.6" y="309" width="0.8" height="15.0" fill="rgb(244,222,25)" rx="2" ry="2" />
<text  x="435.63" y="319.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, enum_set&lt;super_enum&lt;auth::permission,  (609 samples, 1.28%)</title><rect x="778.6" y="245" width="15.1" height="15.0" fill="rgb(229,130,36)" rx="2" ry="2" />
<text  x="781.58" y="255.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned char, std::pair&lt;unsigned char const, std::optional&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned char const, std::optional&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned char&gt;, std::hash&lt;unsigned char&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::clear (30 samples, 0.06%)</title><rect x="667.5" y="437" width="0.7" height="15.0" fill="rgb(254,125,31)" rx="2" ry="2" />
<text  x="670.45" y="447.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (6 samples, 0.01%)</title><rect x="597.4" y="405" width="0.1" height="15.0" fill="rgb(232,193,1)" rx="2" ry="2" />
<text  x="600.38" y="415.5" ></text>
</g>
<g >
<title>std::pair&lt;auth::authenticated_user, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;::pair (24 samples, 0.05%)</title><rect x="733.2" y="373" width="0.6" height="15.0" fill="rgb(217,86,21)" rx="2" ry="2" />
<text  x="736.19" y="383.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (6 samples, 0.01%)</title><rect x="295.2" y="245" width="0.2" height="15.0" fill="rgb(220,214,0)" rx="2" ry="2" />
<text  x="298.21" y="255.5" ></text>
</g>
<g >
<title>cql3::query_options::prepare (5 samples, 0.01%)</title><rect x="715.0" y="453" width="0.1" height="15.0" fill="rgb(252,205,6)" rx="2" ry="2" />
<text  x="717.99" y="463.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::get0 (21 samples, 0.04%)</title><rect x="407.7" y="277" width="0.5" height="15.0" fill="rgb(229,214,52)" rx="2" ry="2" />
<text  x="410.72" y="287.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;bytes_ostream::chunk, std::default_delete&lt;bytes_ostream::chunk&gt; &gt;::~unique_ptr (6 samples, 0.01%)</title><rect x="594.6" y="373" width="0.1" height="15.0" fill="rgb(254,15,4)" rx="2" ry="2" />
<text  x="597.58" y="383.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (7 samples, 0.01%)</title><rect x="860.9" y="469" width="0.1" height="15.0" fill="rgb(245,128,7)" rx="2" ry="2" />
<text  x="863.87" y="479.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (12 samples, 0.03%)</title><rect x="227.7" y="245" width="0.3" height="15.0" fill="rgb(252,77,40)" rx="2" ry="2" />
<text  x="230.71" y="255.5" ></text>
</g>
<g >
<title>auth::data_resource_view::keyspace (13 samples, 0.03%)</title><rect x="791.3" y="117" width="0.3" height="15.0" fill="rgb(237,172,10)" rx="2" ry="2" />
<text  x="794.31" y="127.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (11 samples, 0.02%)</title><rect x="31.1" y="469" width="0.3" height="15.0" fill="rgb(224,91,17)" rx="2" ry="2" />
<text  x="34.12" y="479.5" ></text>
</g>
<g >
<title>ser::after_qr_cell__value&lt;bytes_ostream&gt;::skip_ttl (73 samples, 0.15%)</title><rect x="351.1" y="165" width="1.8" height="15.0" fill="rgb(238,211,19)" rx="2" ry="2" />
<text  x="354.12" y="175.5" ></text>
</g>
<g >
<title>operator delete (17 samples, 0.04%)</title><rect x="415.7" y="373" width="0.4" height="15.0" fill="rgb(247,188,45)" rx="2" ry="2" />
<text  x="418.67" y="383.5" ></text>
</g>
<g >
<title>query::clustering_position_tracker&lt;query_result_builder&gt;::consume_new_partition (6 samples, 0.01%)</title><rect x="307.5" y="197" width="0.2" height="15.0" fill="rgb(248,4,30)" rx="2" ry="2" />
<text  x="310.51" y="207.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::clear (8 samples, 0.02%)</title><rect x="387.2" y="213" width="0.2" height="15.0" fill="rgb(225,71,27)" rx="2" ry="2" />
<text  x="390.22" y="223.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (191 samples, 0.40%)</title><rect x="15.7" y="389" width="4.7" height="15.0" fill="rgb(224,191,25)" rx="2" ry="2" />
<text  x="18.67" y="399.5" ></text>
</g>
<g >
<title>tombstone::operator&lt;=&gt; (8 samples, 0.02%)</title><rect x="387.0" y="181" width="0.2" height="15.0" fill="rgb(221,120,43)" rx="2" ry="2" />
<text  x="389.97" y="191.5" ></text>
</g>
<g >
<title>query_result_builder::consume (6 samples, 0.01%)</title><rect x="680.8" y="293" width="0.1" height="15.0" fill="rgb(206,116,38)" rx="2" ry="2" />
<text  x="683.77" y="303.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::got_cl (8 samples, 0.02%)</title><rect x="689.1" y="469" width="0.2" height="15.0" fill="rgb(214,205,1)" rx="2" ry="2" />
<text  x="692.09" y="479.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (12 samples, 0.03%)</title><rect x="803.1" y="293" width="0.3" height="15.0" fill="rgb(207,140,22)" rx="2" ry="2" />
<text  x="806.15" y="303.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_Optional_payload_base (21 samples, 0.04%)</title><rect x="93.4" y="405" width="0.6" height="15.0" fill="rgb(239,16,11)" rx="2" ry="2" />
<text  x="96.45" y="415.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (5 samples, 0.01%)</title><rect x="17.8" y="325" width="0.1" height="15.0" fill="rgb(226,62,33)" rx="2" ry="2" />
<text  x="20.80" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (11 samples, 0.02%)</title><rect x="657.7" y="437" width="0.3" height="15.0" fill="rgb(244,3,2)" rx="2" ry="2" />
<text  x="660.74" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::~vector (24 samples, 0.05%)</title><rect x="1047.8" y="277" width="0.6" height="15.0" fill="rgb(230,46,32)" rx="2" ry="2" />
<text  x="1050.84" y="287.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (5 samples, 0.01%)</title><rect x="652.9" y="453" width="0.1" height="15.0" fill="rgb(218,96,26)" rx="2" ry="2" />
<text  x="655.89" y="463.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;flat_mutation_reader  (4,535 samples, 9.52%)</title><rect x="422.1" y="373" width="112.3" height="15.0" fill="rgb(210,138,16)" rx="2" ry="2" />
<text  x="425.14" y="383.5" >std::_Functio..</text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::arm (14 samples, 0.03%)</title><rect x="990.9" y="277" width="0.3" height="15.0" fill="rgb(242,118,32)" rx="2" ry="2" />
<text  x="993.87" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::_M_range_initialize&lt;nonwrapping_interval&lt;dht::ring_position&gt; const*&gt; (145 samples, 0.30%)</title><rect x="1044.3" y="261" width="3.5" height="15.0" fill="rgb(219,138,51)" rx="2" ry="2" />
<text  x="1047.25" y="271.5" ></text>
</g>
<g >
<title>mutation_partition_serializer::write_serialized&lt;ser::writer_of_mutation_partition&lt;bytes_ostream&gt; &gt; (6 samples, 0.01%)</title><rect x="1142.7" y="165" width="0.1" height="15.0" fill="rgb(235,44,23)" rx="2" ry="2" />
<text  x="1145.68" y="175.5" ></text>
</g>
<g >
<title>seastar::semaphore_units&lt;seastar::semaphore_default_exception_factory, std::chrono::_V2::steady_clock&gt;::return_all (13 samples, 0.03%)</title><rect x="36.0" y="437" width="0.3" height="15.0" fill="rgb(234,153,11)" rx="2" ry="2" />
<text  x="39.00" y="447.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (7 samples, 0.01%)</title><rect x="1148.5" y="485" width="0.2" height="15.0" fill="rgb(253,10,8)" rx="2" ry="2" />
<text  x="1151.52" y="495.5" ></text>
</g>
<g >
<title>query::querier_base::~querier_base (334 samples, 0.70%)</title><rect x="578.8" y="437" width="8.3" height="15.0" fill="rgb(225,49,15)" rx="2" ry="2" />
<text  x="581.80" y="447.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::forward_to (16 samples, 0.03%)</title><rect x="1143.1" y="485" width="0.4" height="15.0" fill="rgb(217,89,0)" rx="2" ry="2" />
<text  x="1146.08" y="495.5" ></text>
</g>
<g >
<title>query::querier_base::close (15 samples, 0.03%)</title><rect x="1175.3" y="485" width="0.4" height="15.0" fill="rgb(212,166,21)" rx="2" ry="2" />
<text  x="1178.32" y="495.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (6 samples, 0.01%)</title><rect x="582.4" y="405" width="0.2" height="15.0" fill="rgb(227,156,24)" rx="2" ry="2" />
<text  x="585.42" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (116 samples, 0.24%)</title><rect x="1006.3" y="261" width="2.9" height="15.0" fill="rgb(247,99,20)" rx="2" ry="2" />
<text  x="1009.32" y="271.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (383 samples, 0.80%)</title><rect x="307.4" y="213" width="9.4" height="15.0" fill="rgb(226,67,51)" rx="2" ry="2" />
<text  x="310.36" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (9 samples, 0.02%)</title><rect x="586.5" y="389" width="0.2" height="15.0" fill="rgb(220,210,46)" rx="2" ry="2" />
<text  x="589.46" y="399.5" ></text>
</g>
<g >
<title>service::shared_mutation::shared_mutation (12 samples, 0.03%)</title><rect x="1142.6" y="213" width="0.3" height="15.0" fill="rgb(211,226,18)" rx="2" ry="2" />
<text  x="1145.63" y="223.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (17 samples, 0.04%)</title><rect x="207.7" y="165" width="0.4" height="15.0" fill="rgb(235,180,41)" rx="2" ry="2" />
<text  x="210.67" y="175.5" ></text>
</g>
<g >
<title>seastar::do_until&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::fill_buffer (5 samples, 0.01%)</title><rect x="22.0" y="405" width="0.1" height="15.0" fill="rgb(206,34,19)" rx="2" ry="2" />
<text  x="24.96" y="415.5" ></text>
</g>
<g >
<title>seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::expand (64 samples, 0.13%)</title><rect x="502.9" y="229" width="1.6" height="15.0" fill="rgb(215,196,54)" rx="2" ry="2" />
<text  x="505.91" y="239.5" ></text>
</g>
<g >
<title>position_in_partition_view::for_range_end (8 samples, 0.02%)</title><rect x="226.7" y="245" width="0.2" height="15.0" fill="rgb(221,140,43)" rx="2" ry="2" />
<text  x="229.69" y="255.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (40 samples, 0.08%)</title><rect x="569.1" y="357" width="1.0" height="15.0" fill="rgb(205,174,29)" rx="2" ry="2" />
<text  x="572.15" y="367.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::do_refresh_state (564 samples, 1.18%)</title><rect x="228.7" y="229" width="14.0" height="15.0" fill="rgb(237,36,48)" rx="2" ry="2" />
<text  x="231.72" y="239.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::storage_proxy::send_to_live_endpoints (5 samples, 0.01%)</title><rect x="704.4" y="501" width="0.1" height="15.0" fill="rgb(254,90,18)" rx="2" ry="2" />
<text  x="707.40" y="511.5" ></text>
</g>
<g >
<title>utils::config_file::named_value&lt;bool&gt;::the_value (25 samples, 0.05%)</title><rect x="1098.7" y="341" width="0.6" height="15.0" fill="rgb(230,199,31)" rx="2" ry="2" />
<text  x="1101.73" y="351.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;std::function&lt;flat_mutation_reader  (7 samples, 0.01%)</title><rect x="619.3" y="421" width="0.2" height="15.0" fill="rgb(249,215,42)" rx="2" ry="2" />
<text  x="622.31" y="431.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (5 samples, 0.01%)</title><rect x="1152.6" y="485" width="0.1" height="15.0" fill="rgb(247,137,53)" rx="2" ry="2" />
<text  x="1155.61" y="495.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (7 samples, 0.01%)</title><rect x="1030.9" y="197" width="0.2" height="15.0" fill="rgb(244,46,6)" rx="2" ry="2" />
<text  x="1033.93" y="207.5" ></text>
</g>
<g >
<title>std::__optional_hash_call_base&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, true&gt;::operator (16 samples, 0.03%)</title><rect x="792.0" y="101" width="0.4" height="15.0" fill="rgb(208,210,47)" rx="2" ry="2" />
<text  x="795.03" y="111.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (71 samples, 0.15%)</title><rect x="378.9" y="149" width="1.7" height="15.0" fill="rgb(241,50,49)" rx="2" ry="2" />
<text  x="381.85" y="159.5" ></text>
</g>
<g >
<title>std::__make_heap&lt;__gnu_cxx::__normal_iterator&lt;boost::iterator_range&lt;boost::intrusive::tree_iterator&lt;boost::intrusive::mhtraits&lt;range_tombstone_entry, boost::intrusive::set_member_hook&lt;boost::intrusive::link_mode&lt; (13 samples, 0.03%)</title><rect x="240.4" y="213" width="0.4" height="15.0" fill="rgb(252,201,13)" rx="2" ry="2" />
<text  x="243.43" y="223.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (17 samples, 0.04%)</title><rect x="1124.3" y="389" width="0.4" height="15.0" fill="rgb(224,183,26)" rx="2" ry="2" />
<text  x="1127.31" y="399.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt; &gt;, seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (93 samples, 0.20%)</title><rect x="795.5" y="261" width="2.3" height="15.0" fill="rgb(248,212,38)" rx="2" ry="2" />
<text  x="798.52" y="271.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::emplace_back&lt;mutation_reader_merger::reader_and_fragment&gt; (17 samples, 0.04%)</title><rect x="257.1" y="277" width="0.4" height="15.0" fill="rgb(207,101,13)" rx="2" ry="2" />
<text  x="260.10" y="287.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (9 samples, 0.02%)</title><rect x="888.8" y="261" width="0.2" height="15.0" fill="rgb(251,150,21)" rx="2" ry="2" />
<text  x="891.82" y="271.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (129 samples, 0.27%)</title><rect x="558.2" y="293" width="3.1" height="15.0" fill="rgb(232,155,19)" rx="2" ry="2" />
<text  x="561.15" y="303.5" ></text>
</g>
<g >
<title>std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (85 samples, 0.18%)</title><rect x="409.2" y="293" width="2.1" height="15.0" fill="rgb(247,76,2)" rx="2" ry="2" />
<text  x="412.23" y="303.5" ></text>
</g>
<g >
<title>from_hex (6 samples, 0.01%)</title><rect x="20.7" y="341" width="0.2" height="15.0" fill="rgb(247,79,27)" rx="2" ry="2" />
<text  x="23.72" y="351.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;cql3::metadata, false&gt;::make&lt;cql3::metadata&amp;&gt; (31 samples, 0.07%)</title><rect x="647.5" y="469" width="0.7" height="15.0" fill="rgb(249,184,1)" rx="2" ry="2" />
<text  x="650.47" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value, std::allocator&lt;cql3::raw_value&gt; &gt;::vector (63 samples, 0.13%)</title><rect x="848.7" y="469" width="1.6" height="15.0" fill="rgb(251,134,48)" rx="2" ry="2" />
<text  x="851.73" y="479.5" ></text>
</g>
<g >
<title>std::get&lt;2ul, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; (6 samples, 0.01%)</title><rect x="936.6" y="405" width="0.1" height="15.0" fill="rgb(243,30,54)" rx="2" ry="2" />
<text  x="939.56" y="415.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (22 samples, 0.05%)</title><rect x="787.6" y="117" width="0.6" height="15.0" fill="rgb(219,192,15)" rx="2" ry="2" />
<text  x="790.62" y="127.5" ></text>
</g>
<g >
<title>utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;::lru_entry::touch (34 samples, 0.07%)</title><rect x="722.6" y="405" width="0.9" height="15.0" fill="rgb(215,144,8)" rx="2" ry="2" />
<text  x="725.62" y="415.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::get0 (13 samples, 0.03%)</title><rect x="599.2" y="437" width="0.3" height="15.0" fill="rgb(231,107,44)" rx="2" ry="2" />
<text  x="602.16" y="447.5" ></text>
</g>
<g >
<title>ser::writer_of_qr_clustered_row&lt;bytes_ostream&gt;::skip_key (31 samples, 0.07%)</title><rect x="331.8" y="181" width="0.7" height="15.0" fill="rgb(213,189,31)" rx="2" ry="2" />
<text  x="334.76" y="191.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (18 samples, 0.04%)</title><rect x="297.2" y="261" width="0.4" height="15.0" fill="rgb(220,118,33)" rx="2" ry="2" />
<text  x="300.16" y="271.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;partition_key, false, false&gt;::_Optional_base (5 samples, 0.01%)</title><rect x="1074.2" y="309" width="0.1" height="15.0" fill="rgb(245,103,37)" rx="2" ry="2" />
<text  x="1077.16" y="319.5" ></text>
</g>
<g >
<title>partition_snapshot::partition_tombstone (13 samples, 0.03%)</title><rect x="509.3" y="245" width="0.3" height="15.0" fill="rgb(223,190,52)" rx="2" ry="2" />
<text  x="512.32" y="255.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (11 samples, 0.02%)</title><rect x="1062.2" y="325" width="0.3" height="15.0" fill="rgb(222,115,20)" rx="2" ry="2" />
<text  x="1065.23" y="335.5" ></text>
</g>
<g >
<title>_ZSt5applyIZN7seastar8internal12do_with_implIRKNS0_13basic_sstringIcjLj15ELb1EEEN4auth8resourceEJZNK7service12client_state24has_column_family_accessERK8databaseS6_S6_NS7_10permissionENS7_12command_desc4typeEE3$_4EEEDaOT_OT0_DpOT1_EUlDpOT_E_St5tupleIJS6_OS8_EEEDcSJ_SL_ (77 samples, 0.16%)</title><rect x="757.7" y="389" width="1.9" height="15.0" fill="rgb(230,52,30)" rx="2" ry="2" />
<text  x="760.66" y="399.5" ></text>
</g>
<g >
<title>mutation_fragment::visit&lt;mutation_fragment::calculate_memory_usage (6 samples, 0.01%)</title><rect x="506.1" y="197" width="0.1" height="15.0" fill="rgb(234,136,37)" rx="2" ry="2" />
<text  x="509.05" y="207.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_prepared_with_qo (5,027 samples, 10.55%)</title><rect x="715.5" y="453" width="124.5" height="15.0" fill="rgb(251,163,36)" rx="2" ry="2" />
<text  x="718.51" y="463.5" >single_node_cql..</text>
</g>
<g >
<title>seastar::memory::allocate (24 samples, 0.05%)</title><rect x="849.2" y="421" width="0.6" height="15.0" fill="rgb(244,29,49)" rx="2" ry="2" />
<text  x="852.18" y="431.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (7 samples, 0.01%)</title><rect x="917.5" y="357" width="0.2" height="15.0" fill="rgb(221,203,2)" rx="2" ry="2" />
<text  x="920.50" y="367.5" ></text>
</g>
<g >
<title>global_schema_ptr::global_schema_ptr (11 samples, 0.02%)</title><rect x="998.8" y="293" width="0.3" height="15.0" fill="rgb(250,95,47)" rx="2" ry="2" />
<text  x="1001.81" y="303.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_digest_requests (7 samples, 0.01%)</title><rect x="1051.6" y="325" width="0.2" height="15.0" fill="rgb(209,211,19)" rx="2" ry="2" />
<text  x="1054.63" y="335.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (9 samples, 0.02%)</title><rect x="1103.7" y="357" width="0.3" height="15.0" fill="rgb(229,228,17)" rx="2" ry="2" />
<text  x="1106.73" y="367.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (25 samples, 0.05%)</title><rect x="348.1" y="149" width="0.6" height="15.0" fill="rgb(206,61,54)" rx="2" ry="2" />
<text  x="351.07" y="159.5" ></text>
</g>
<g >
<title>seastar::gate::enter (5 samples, 0.01%)</title><rect x="601.8" y="437" width="0.1" height="15.0" fill="rgb(229,69,10)" rx="2" ry="2" />
<text  x="604.81" y="447.5" ></text>
</g>
<g >
<title>sstring_hash::operator (11 samples, 0.02%)</title><rect x="1062.0" y="309" width="0.2" height="15.0" fill="rgb(208,190,29)" rx="2" ry="2" />
<text  x="1064.96" y="319.5" ></text>
</g>
<g >
<title>absl::container_internal::operator== (5 samples, 0.01%)</title><rect x="829.3" y="405" width="0.2" height="15.0" fill="rgb(211,47,38)" rx="2" ry="2" />
<text  x="832.34" y="415.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment (120 samples, 0.25%)</title><rect x="505.1" y="213" width="3.0" height="15.0" fill="rgb(252,47,26)" rx="2" ry="2" />
<text  x="508.11" y="223.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (8 samples, 0.02%)</title><rect x="914.0" y="325" width="0.2" height="15.0" fill="rgb(206,102,42)" rx="2" ry="2" />
<text  x="916.96" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (35 samples, 0.07%)</title><rect x="197.8" y="117" width="0.9" height="15.0" fill="rgb(223,23,1)" rx="2" ry="2" />
<text  x="200.79" y="127.5" ></text>
</g>
<g >
<title>std::hash&lt;std::basic_string_view&lt;signed char, std::char_traits&lt;signed char&gt; &gt; &gt;::operator (81 samples, 0.17%)</title><rect x="737.9" y="277" width="2.1" height="15.0" fill="rgb(209,185,40)" rx="2" ry="2" />
<text  x="740.95" y="287.5" ></text>
</g>
<g >
<title>row::compact_and_expire (764 samples, 1.60%)</title><rect x="367.7" y="213" width="18.9" height="15.0" fill="rgb(229,25,27)" rx="2" ry="2" />
<text  x="370.66" y="223.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (7 samples, 0.01%)</title><rect x="65.8" y="389" width="0.2" height="15.0" fill="rgb(212,99,3)" rx="2" ry="2" />
<text  x="68.79" y="399.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (162 samples, 0.34%)</title><rect x="918.5" y="341" width="4.0" height="15.0" fill="rgb(223,172,51)" rx="2" ry="2" />
<text  x="921.54" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (25 samples, 0.05%)</title><rect x="503.7" y="181" width="0.6" height="15.0" fill="rgb(233,130,4)" rx="2" ry="2" />
<text  x="506.70" y="191.5" ></text>
</g>
<g >
<title>operator delete (29 samples, 0.06%)</title><rect x="666.3" y="453" width="0.7" height="15.0" fill="rgb(210,189,27)" rx="2" ry="2" />
<text  x="669.29" y="463.5" ></text>
</g>
<g >
<title>TLS init function for bound_view::_empty_prefix (45 samples, 0.09%)</title><rect x="236.8" y="181" width="1.1" height="15.0" fill="rgb(252,80,7)" rx="2" ry="2" />
<text  x="239.82" y="191.5" ></text>
</g>
<g >
<title>seastar::promise&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::promise (12 samples, 0.03%)</title><rect x="1141.5" y="469" width="0.3" height="15.0" fill="rgb(210,157,44)" rx="2" ry="2" />
<text  x="1144.47" y="479.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (34 samples, 0.07%)</title><rect x="411.5" y="325" width="0.9" height="15.0" fill="rgb(239,107,20)" rx="2" ry="2" />
<text  x="414.51" y="335.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_erase_at_end (70 samples, 0.15%)</title><rect x="365.1" y="181" width="1.7" height="15.0" fill="rgb(230,165,1)" rx="2" ry="2" />
<text  x="368.06" y="191.5" ></text>
</g>
<g >
<title>mutation_partition::lower_bound (22 samples, 0.05%)</title><rect x="210.7" y="133" width="0.6" height="15.0" fill="rgb(230,64,53)" rx="2" ry="2" />
<text  x="213.72" y="143.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::get_promise (7 samples, 0.01%)</title><rect x="1009.4" y="277" width="0.1" height="15.0" fill="rgb(226,128,27)" rx="2" ry="2" />
<text  x="1012.36" y="287.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (5 samples, 0.01%)</title><rect x="803.4" y="325" width="0.2" height="15.0" fill="rgb(231,122,31)" rx="2" ry="2" />
<text  x="806.44" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::~vector (41 samples, 0.09%)</title><rect x="1049.9" y="293" width="1.0" height="15.0" fill="rgb(208,147,17)" rx="2" ry="2" />
<text  x="1052.92" y="303.5" ></text>
</g>
<g >
<title>bound_view::from_range_end&lt;nonwrapping_interval&gt; (12 samples, 0.03%)</title><rect x="212.1" y="117" width="0.3" height="15.0" fill="rgb(227,155,4)" rx="2" ry="2" />
<text  x="215.11" y="127.5" ></text>
</g>
<g >
<title>absl::hash_internal::HashState::combine_contiguous (9 samples, 0.02%)</title><rect x="819.5" y="277" width="0.3" height="15.0" fill="rgb(210,4,15)" rx="2" ry="2" />
<text  x="822.54" y="287.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (72 samples, 0.15%)</title><rect x="143.7" y="197" width="1.8" height="15.0" fill="rgb(210,141,46)" rx="2" ry="2" />
<text  x="146.74" y="207.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::clear (5 samples, 0.01%)</title><rect x="635.5" y="485" width="0.1" height="15.0" fill="rgb(254,103,23)" rx="2" ry="2" />
<text  x="638.46" y="495.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::range_or_slice_eq_null (6 samples, 0.01%)</title><rect x="856.1" y="389" width="0.1" height="15.0" fill="rgb(205,51,8)" rx="2" ry="2" />
<text  x="859.06" y="399.5" ></text>
</g>
<g >
<title>database::find_schema (297 samples, 0.62%)</title><rect x="747.6" y="405" width="7.3" height="15.0" fill="rgb(208,165,5)" rx="2" ry="2" />
<text  x="750.58" y="415.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::timer (16 samples, 0.03%)</title><rect x="1028.1" y="149" width="0.4" height="15.0" fill="rgb(240,152,51)" rx="2" ry="2" />
<text  x="1031.06" y="159.5" ></text>
</g>
<g >
<title>boost::intrusive::bstree_impl&lt;boost::intrusive::mhtraits&lt;range_tombstone_entry, boost::intrusive::set_member_hook&lt;boost::intrusive::link_mode&lt; (26 samples, 0.05%)</title><rect x="561.5" y="277" width="0.6" height="15.0" fill="rgb(243,131,23)" rx="2" ry="2" />
<text  x="564.47" y="287.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (20 samples, 0.04%)</title><rect x="679.7" y="485" width="0.5" height="15.0" fill="rgb(207,215,33)" rx="2" ry="2" />
<text  x="682.68" y="495.5" ></text>
</g>
<g >
<title>operator delete (29 samples, 0.06%)</title><rect x="692.6" y="485" width="0.7" height="15.0" fill="rgb(229,77,22)" rx="2" ry="2" />
<text  x="695.56" y="495.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (63 samples, 0.13%)</title><rect x="293.8" y="277" width="1.6" height="15.0" fill="rgb(233,182,34)" rx="2" ry="2" />
<text  x="296.84" y="287.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (72 samples, 0.15%)</title><rect x="232.7" y="181" width="1.7" height="15.0" fill="rgb(217,29,41)" rx="2" ry="2" />
<text  x="235.66" y="191.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;service::abstract_read_executor::execute (5 samples, 0.01%)</title><rect x="684.0" y="469" width="0.2" height="15.0" fill="rgb(235,5,23)" rx="2" ry="2" />
<text  x="687.04" y="479.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (7 samples, 0.01%)</title><rect x="141.0" y="245" width="0.2" height="15.0" fill="rgb(205,85,6)" rx="2" ry="2" />
<text  x="144.01" y="255.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (12 samples, 0.03%)</title><rect x="21.9" y="613" width="0.3" height="15.0" fill="rgb(206,104,1)" rx="2" ry="2" />
<text  x="24.94" y="623.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::partition_slice const, std::default_delete&lt;query::partition_slice const&gt; &gt;::~unique_ptr (172 samples, 0.36%)</title><rect x="582.8" y="421" width="4.3" height="15.0" fill="rgb(243,223,1)" rx="2" ry="2" />
<text  x="585.82" y="431.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (46 samples, 0.10%)</title><rect x="97.8" y="437" width="1.1" height="15.0" fill="rgb(216,100,40)" rx="2" ry="2" />
<text  x="100.81" y="447.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (13 samples, 0.03%)</title><rect x="892.2" y="277" width="0.4" height="15.0" fill="rgb(239,165,50)" rx="2" ry="2" />
<text  x="895.24" y="287.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::abstract_read_executor&gt;::~shared_ptr (8 samples, 0.02%)</title><rect x="704.1" y="485" width="0.2" height="15.0" fill="rgb(211,174,8)" rx="2" ry="2" />
<text  x="707.12" y="495.5" ></text>
</g>
<g >
<title>service::abstract_read_resolver::~abstract_read_resolver (20 samples, 0.04%)</title><rect x="691.2" y="469" width="0.5" height="15.0" fill="rgb(226,157,28)" rx="2" ry="2" />
<text  x="694.25" y="479.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql3::statements::update_statement&gt;::~shared_ptr_count_for (8 samples, 0.02%)</title><rect x="637.4" y="485" width="0.2" height="15.0" fill="rgb(216,81,28)" rx="2" ry="2" />
<text  x="640.44" y="495.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;void&gt;, database*, seastar::lw_shared_ptr&lt;schema const&gt;, frozen_mutation const&amp;, tracing::trace_state_ptr, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, seastar::bool_class&lt;db::force_sync_tag&gt; &gt;::do_flush (22 samples, 0.05%)</title><rect x="1141.8" y="485" width="0.5" height="15.0" fill="rgb(211,154,48)" rx="2" ry="2" />
<text  x="1144.76" y="495.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (5 samples, 0.01%)</title><rect x="1029.2" y="165" width="0.1" height="15.0" fill="rgb(249,29,52)" rx="2" ry="2" />
<text  x="1032.20" y="175.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;interval_bound&lt;dht::ring_position&gt;, false, false&gt;::_Optional_base (28 samples, 0.06%)</title><rect x="606.2" y="437" width="0.7" height="15.0" fill="rgb(243,157,50)" rx="2" ry="2" />
<text  x="609.17" y="447.5" ></text>
</g>
<g >
<title>operator delete (11 samples, 0.02%)</title><rect x="625.7" y="485" width="0.3" height="15.0" fill="rgb(217,213,0)" rx="2" ry="2" />
<text  x="628.68" y="495.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::partition_slice, std::default_delete&lt;query::partition_slice&gt; &gt;::~unique_ptr (7 samples, 0.01%)</title><rect x="532.3" y="341" width="0.2" height="15.0" fill="rgb(236,44,53)" rx="2" ry="2" />
<text  x="535.33" y="351.5" ></text>
</g>
<g >
<title>memtable::make_flat_reader (2,667 samples, 5.60%)</title><rect x="453.7" y="341" width="66.0" height="15.0" fill="rgb(225,175,8)" rx="2" ry="2" />
<text  x="456.66" y="351.5" >memtabl..</text>
</g>
<g >
<title>reader_permit::impl::signal (41 samples, 0.09%)</title><rect x="274.1" y="309" width="1.0" height="15.0" fill="rgb(238,29,22)" rx="2" ry="2" />
<text  x="277.06" y="319.5" ></text>
</g>
<g >
<title>operator new (26 samples, 0.05%)</title><rect x="206.4" y="165" width="0.6" height="15.0" fill="rgb(254,172,53)" rx="2" ry="2" />
<text  x="209.36" y="175.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (5 samples, 0.01%)</title><rect x="889.1" y="261" width="0.1" height="15.0" fill="rgb(221,97,12)" rx="2" ry="2" />
<text  x="892.12" y="271.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (36 samples, 0.08%)</title><rect x="325.4" y="181" width="0.9" height="15.0" fill="rgb(235,219,10)" rx="2" ry="2" />
<text  x="328.42" y="191.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;nonwrapping_interval&lt;dht::ring_position&gt; const*, nonwrapping_interval&lt;dht::ring_position&gt;*&gt; (41 samples, 0.09%)</title><rect x="1046.8" y="245" width="1.0" height="15.0" fill="rgb(237,189,26)" rx="2" ry="2" />
<text  x="1049.83" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value_view, std::allocator&lt;cql3::raw_value_view&gt; &gt;::_M_realloc_insert&lt;cql3::raw_value_view&gt; (92 samples, 0.19%)</title><rect x="842.6" y="373" width="2.3" height="15.0" fill="rgb(205,165,33)" rx="2" ry="2" />
<text  x="845.64" y="383.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_next_bkt (60 samples, 0.13%)</title><rect x="1162.3" y="453" width="1.5" height="15.0" fill="rgb(209,85,35)" rx="2" ry="2" />
<text  x="1165.29" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::vector (132 samples, 0.28%)</title><rect x="1118.8" y="389" width="3.3" height="15.0" fill="rgb(253,85,46)" rx="2" ry="2" />
<text  x="1121.78" y="399.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (13 samples, 0.03%)</title><rect x="87.9" y="437" width="0.3" height="15.0" fill="rgb(238,8,23)" rx="2" ry="2" />
<text  x="90.90" y="447.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;flat_mutation_reader  (15 samples, 0.03%)</title><rect x="421.4" y="389" width="0.4" height="15.0" fill="rgb(251,211,33)" rx="2" ry="2" />
<text  x="424.42" y="399.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (6 samples, 0.01%)</title><rect x="68.0" y="405" width="0.1" height="15.0" fill="rgb(234,160,53)" rx="2" ry="2" />
<text  x="70.99" y="415.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::get (12 samples, 0.03%)</title><rect x="318.5" y="197" width="0.3" height="15.0" fill="rgb(206,7,19)" rx="2" ry="2" />
<text  x="321.51" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_nodes (90 samples, 0.19%)</title><rect x="656.6" y="453" width="2.2" height="15.0" fill="rgb(236,197,20)" rx="2" ry="2" />
<text  x="659.61" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (25 samples, 0.05%)</title><rect x="400.2" y="165" width="0.6" height="15.0" fill="rgb(208,45,31)" rx="2" ry="2" />
<text  x="403.20" y="175.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (12 samples, 0.03%)</title><rect x="762.1" y="357" width="0.3" height="15.0" fill="rgb(222,115,48)" rx="2" ry="2" />
<text  x="765.09" y="367.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;mutation_querier, false, false&gt;::_Optional_base (6 samples, 0.01%)</title><rect x="417.8" y="405" width="0.2" height="15.0" fill="rgb(216,197,6)" rx="2" ry="2" />
<text  x="420.80" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::~disable_abort_on_alloc_failure_temporarily (5 samples, 0.01%)</title><rect x="215.3" y="197" width="0.1" height="15.0" fill="rgb(237,171,1)" rx="2" ry="2" />
<text  x="218.25" y="207.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_in_thread&lt;sstables::sstable_writer, flat_mutation_reader::no_filter&gt; (12 samples, 0.03%)</title><rect x="21.9" y="517" width="0.3" height="15.0" fill="rgb(233,35,11)" rx="2" ry="2" />
<text  x="24.94" y="527.5" ></text>
</g>
<g >
<title>create_partitions (268 samples, 0.56%)</title><rect x="15.2" y="533" width="6.6" height="15.0" fill="rgb(254,87,54)" rx="2" ry="2" />
<text  x="18.15" y="543.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (6 samples, 0.01%)</title><rect x="582.3" y="389" width="0.1" height="15.0" fill="rgb(205,140,8)" rx="2" ry="2" />
<text  x="585.27" y="399.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (24 samples, 0.05%)</title><rect x="1071.4" y="293" width="0.6" height="15.0" fill="rgb(233,143,6)" rx="2" ry="2" />
<text  x="1074.42" y="303.5" ></text>
</g>
<g >
<title>db::filter_for_query (38 samples, 0.08%)</title><rect x="1063.1" y="341" width="1.0" height="15.0" fill="rgb(225,92,10)" rx="2" ry="2" />
<text  x="1066.15" y="351.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_no_esft&lt;query::read_command&gt;::shared_ptr_no_esft&lt;utils::UUID const&amp;, utils::UUID, query::partition_slice, query::max_result_size, query::row_limit, query::partition_limit, std::chrono::time_point&lt;gc_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt; &gt;&amp;, std::optional&lt;tracing::trace_info&gt;, utils::UUID, seastar::bool_class&lt;query::is_first_page_tag&gt; const&amp;, long&gt; (107 samples, 0.22%)</title><rect x="1131.5" y="405" width="2.7" height="15.0" fill="rgb(235,39,37)" rx="2" ry="2" />
<text  x="1134.51" y="415.5" ></text>
</g>
<g >
<title>std::variant&lt;fragmented_temporary_buffer::view, managed_bytes_basic_view&lt; (29 samples, 0.06%)</title><rect x="897.6" y="309" width="0.8" height="15.0" fill="rgb(220,228,49)" rx="2" ry="2" />
<text  x="900.64" y="319.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (11 samples, 0.02%)</title><rect x="656.2" y="469" width="0.3" height="15.0" fill="rgb(216,86,12)" rx="2" ry="2" />
<text  x="659.18" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::allocate_large_and_trim (6 samples, 0.01%)</title><rect x="543.7" y="277" width="0.2" height="15.0" fill="rgb(209,133,33)" rx="2" ry="2" />
<text  x="546.72" y="287.5" ></text>
</g>
<g >
<title>std::_Optional_base_impl&lt;mutation_querier, std::_Optional_base&lt;mutation_querier, false, false&gt; &gt;::_M_construct&lt;mutation_querier&gt; (41 samples, 0.09%)</title><rect x="315.7" y="165" width="1.0" height="15.0" fill="rgb(238,196,48)" rx="2" ry="2" />
<text  x="318.73" y="175.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (280 samples, 0.59%)</title><rect x="14.9" y="597" width="6.9" height="15.0" fill="rgb(229,78,34)" rx="2" ry="2" />
<text  x="17.88" y="607.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::~impl (29 samples, 0.06%)</title><rect x="550.0" y="309" width="0.7" height="15.0" fill="rgb(214,160,45)" rx="2" ry="2" />
<text  x="553.01" y="319.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE8scheduleINS_8internal22promise_base_with_typeIvEEZNS6_14discard_resultEvEUlDpOT_E_ZNS6_14then_impl_nrvoISE_NS0_IvEEEET0_OT_EUlOSA_RSE_ONS_12future_stateIS5_EEE_EEvSJ_OSH_OT1_ (71 samples, 0.15%)</title><rect x="711.2" y="437" width="1.8" height="15.0" fill="rgb(244,155,50)" rx="2" ry="2" />
<text  x="714.21" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (7 samples, 0.01%)</title><rect x="630.2" y="453" width="0.1" height="15.0" fill="rgb(253,94,49)" rx="2" ry="2" />
<text  x="633.16" y="463.5" ></text>
</g>
<g >
<title>absl::container_internal::operator== (11 samples, 0.02%)</title><rect x="813.6" y="325" width="0.3" height="15.0" fill="rgb(253,88,52)" rx="2" ry="2" />
<text  x="816.65" y="335.5" ></text>
</g>
<g >
<title>operator delete (35 samples, 0.07%)</title><rect x="582.9" y="405" width="0.9" height="15.0" fill="rgb(228,58,42)" rx="2" ry="2" />
<text  x="585.91" y="415.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::fetch (6,057 samples, 12.71%)</title><rect x="112.9" y="341" width="150.0" height="15.0" fill="rgb(205,229,27)" rx="2" ry="2" />
<text  x="115.93" y="351.5" >mutation_fragment_m..</text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_Optional_payload_base (16 samples, 0.03%)</title><rect x="1073.9" y="325" width="0.4" height="15.0" fill="rgb(232,79,9)" rx="2" ry="2" />
<text  x="1076.89" y="335.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::~deque (94 samples, 0.20%)</title><rect x="610.8" y="405" width="2.3" height="15.0" fill="rgb(253,144,18)" rx="2" ry="2" />
<text  x="613.82" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (13 samples, 0.03%)</title><rect x="205.1" y="85" width="0.3" height="15.0" fill="rgb(238,18,26)" rx="2" ry="2" />
<text  x="208.10" y="95.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (24 samples, 0.05%)</title><rect x="717.1" y="389" width="0.6" height="15.0" fill="rgb(219,108,40)" rx="2" ry="2" />
<text  x="720.07" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::~vector (11 samples, 0.02%)</title><rect x="936.0" y="389" width="0.2" height="15.0" fill="rgb(228,34,16)" rx="2" ry="2" />
<text  x="938.97" y="399.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (5 samples, 0.01%)</title><rect x="530.5" y="245" width="0.1" height="15.0" fill="rgb(212,180,21)" rx="2" ry="2" />
<text  x="533.52" y="255.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (51 samples, 0.11%)</title><rect x="735.7" y="309" width="1.3" height="15.0" fill="rgb(240,133,16)" rx="2" ry="2" />
<text  x="738.74" y="319.5" ></text>
</g>
<g >
<title>schema::column_at (57 samples, 0.12%)</title><rect x="384.7" y="165" width="1.5" height="15.0" fill="rgb(217,40,32)" rx="2" ry="2" />
<text  x="387.75" y="175.5" ></text>
</g>
<g >
<title>std::variant&lt;query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::operator=&lt;query::noop_hasher&gt; (7 samples, 0.01%)</title><rect x="592.1" y="389" width="0.1" height="15.0" fill="rgb(248,133,20)" rx="2" ry="2" />
<text  x="595.05" y="399.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (9 samples, 0.02%)</title><rect x="961.8" y="373" width="0.2" height="15.0" fill="rgb(215,48,32)" rx="2" ry="2" />
<text  x="964.80" y="383.5" ></text>
</g>
<g >
<title>service::storage_proxy::create_write_response_handler (19 samples, 0.04%)</title><rect x="1142.6" y="229" width="0.5" height="15.0" fill="rgb(231,90,26)" rx="2" ry="2" />
<text  x="1145.61" y="239.5" ></text>
</g>
<g >
<title>db::block_for (5 samples, 0.01%)</title><rect x="1062.8" y="325" width="0.1" height="15.0" fill="rgb(205,169,25)" rx="2" ry="2" />
<text  x="1065.80" y="335.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::find (15 samples, 0.03%)</title><rect x="645.6" y="421" width="0.3" height="15.0" fill="rgb(241,103,0)" rx="2" ry="2" />
<text  x="648.56" y="431.5" ></text>
</g>
<g >
<title>std::pair&lt;auth::role_or_anonymous, auth::resource&gt;::pair (66 samples, 0.14%)</title><rect x="783.1" y="213" width="1.6" height="15.0" fill="rgb(216,214,18)" rx="2" ry="2" />
<text  x="786.09" y="223.5" ></text>
</g>
<g >
<title>mutation_reader_merger::~mutation_reader_merger (82 samples, 0.17%)</title><rect x="442.6" y="309" width="2.0" height="15.0" fill="rgb(222,50,43)" rx="2" ry="2" />
<text  x="445.61" y="319.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::clear (77 samples, 0.16%)</title><rect x="364.9" y="197" width="1.9" height="15.0" fill="rgb(237,183,25)" rx="2" ry="2" />
<text  x="367.89" y="207.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;boost::iterator_range&lt;mutation_fragment*&gt; &gt;::take_value (6 samples, 0.01%)</title><rect x="262.6" y="325" width="0.2" height="15.0" fill="rgb(253,152,41)" rx="2" ry="2" />
<text  x="265.64" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;mutation_fragment&gt;::allocate (6 samples, 0.01%)</title><rect x="276.8" y="293" width="0.1" height="15.0" fill="rgb(240,150,3)" rx="2" ry="2" />
<text  x="279.78" y="303.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::execute (434 samples, 0.91%)</title><rect x="681.5" y="501" width="10.8" height="15.0" fill="rgb(242,159,40)" rx="2" ry="2" />
<text  x="684.52" y="511.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;::operator (6 samples, 0.01%)</title><rect x="719.7" y="341" width="0.2" height="15.0" fill="rgb(239,165,22)" rx="2" ry="2" />
<text  x="722.75" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (6 samples, 0.01%)</title><rect x="693.1" y="469" width="0.2" height="15.0" fill="rgb(229,22,6)" rx="2" ry="2" />
<text  x="696.13" y="479.5" ></text>
</g>
<g >
<title>seastar::reactor_backend_aio::reap_kernel_completions (34 samples, 0.07%)</title><rect x="1176.7" y="501" width="0.8" height="15.0" fill="rgb(252,97,50)" rx="2" ry="2" />
<text  x="1179.68" y="511.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;clustering_key_prefix, false, false&gt;::_Optional_base (10 samples, 0.02%)</title><rect x="225.7" y="213" width="0.3" height="15.0" fill="rgb(218,15,41)" rx="2" ry="2" />
<text  x="228.73" y="223.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::push_static_row (171 samples, 0.36%)</title><rect x="244.3" y="261" width="4.2" height="15.0" fill="rgb(212,91,13)" rx="2" ry="2" />
<text  x="247.30" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (28 samples, 0.06%)</title><rect x="662.9" y="485" width="0.7" height="15.0" fill="rgb(252,47,36)" rx="2" ry="2" />
<text  x="665.92" y="495.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (64 samples, 0.13%)</title><rect x="921.0" y="325" width="1.5" height="15.0" fill="rgb(212,14,21)" rx="2" ry="2" />
<text  x="923.96" y="335.5" ></text>
</g>
<g >
<title>write_cell&lt;ser::qr_clustered_row__cells__cells&lt;bytes_ostream&gt; &gt; (1,193 samples, 2.50%)</title><rect x="332.8" y="181" width="29.6" height="15.0" fill="rgb(234,184,0)" rx="2" ry="2" />
<text  x="335.84" y="191.5" >wr..</text>
</g>
<g >
<title>operator new (24 samples, 0.05%)</title><rect x="490.3" y="293" width="0.6" height="15.0" fill="rgb(243,127,28)" rx="2" ry="2" />
<text  x="493.31" y="303.5" ></text>
</g>
<g >
<title>compound_type&lt; (49 samples, 0.10%)</title><rect x="539.2" y="357" width="1.2" height="15.0" fill="rgb(212,127,17)" rx="2" ry="2" />
<text  x="542.18" y="367.5" ></text>
</g>
<g >
<title>posix_memalign (7 samples, 0.01%)</title><rect x="185.3" y="69" width="0.2" height="15.0" fill="rgb(217,201,10)" rx="2" ry="2" />
<text  x="188.34" y="79.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::~vector (24 samples, 0.05%)</title><rect x="1139.0" y="421" width="0.6" height="15.0" fill="rgb(239,228,38)" rx="2" ry="2" />
<text  x="1141.97" y="431.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::get_promise (6 samples, 0.01%)</title><rect x="824.5" y="389" width="0.2" height="15.0" fill="rgb(221,48,23)" rx="2" ry="2" />
<text  x="827.54" y="399.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (8 samples, 0.02%)</title><rect x="929.6" y="357" width="0.2" height="15.0" fill="rgb(248,196,18)" rx="2" ry="2" />
<text  x="932.58" y="367.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::set_callback (20 samples, 0.04%)</title><rect x="852.1" y="485" width="0.4" height="15.0" fill="rgb(253,109,21)" rx="2" ry="2" />
<text  x="855.05" y="495.5" ></text>
</g>
<g >
<title>query_state::query_state (213 samples, 0.45%)</title><rect x="589.8" y="437" width="5.3" height="15.0" fill="rgb(209,67,32)" rx="2" ry="2" />
<text  x="592.85" y="447.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (247 samples, 0.52%)</title><rect x="15.4" y="485" width="6.1" height="15.0" fill="rgb(219,101,26)" rx="2" ry="2" />
<text  x="18.40" y="495.5" ></text>
</g>
<g >
<title>locator::i_endpoint_snitch::snitch_instance (5 samples, 0.01%)</title><rect x="1095.9" y="309" width="0.1" height="15.0" fill="rgb(235,61,23)" rx="2" ry="2" />
<text  x="1098.86" y="319.5" ></text>
</g>
<g >
<title>operator delete (22 samples, 0.05%)</title><rect x="629.8" y="469" width="0.5" height="15.0" fill="rgb(212,91,52)" rx="2" ry="2" />
<text  x="632.79" y="479.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::future (27 samples, 0.06%)</title><rect x="974.3" y="357" width="0.6" height="15.0" fill="rgb(211,81,16)" rx="2" ry="2" />
<text  x="977.27" y="367.5" ></text>
</g>
<g >
<title>std::hash&lt;gms::inet_address&gt;::operator (9 samples, 0.02%)</title><rect x="702.9" y="421" width="0.2" height="15.0" fill="rgb(219,67,19)" rx="2" ry="2" />
<text  x="705.86" y="431.5" ></text>
</g>
<g >
<title>mutation_reader_merger::maybe_add_readers_at_partition_boundary (49 samples, 0.10%)</title><rect x="118.9" y="293" width="1.2" height="15.0" fill="rgb(247,108,33)" rx="2" ry="2" />
<text  x="121.85" y="303.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;dht::ring_position&gt;::wrapping_interval (39 samples, 0.08%)</title><rect x="924.9" y="357" width="0.9" height="15.0" fill="rgb(240,191,22)" rx="2" ry="2" />
<text  x="927.85" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (10 samples, 0.02%)</title><rect x="564.8" y="309" width="0.3" height="15.0" fill="rgb(243,126,52)" rx="2" ry="2" />
<text  x="567.84" y="319.5" ></text>
</g>
<g >
<title>clustering_row::external_memory_usage (5 samples, 0.01%)</title><rect x="162.0" y="181" width="0.1" height="15.0" fill="rgb(205,31,4)" rx="2" ry="2" />
<text  x="164.96" y="191.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureINS_10bool_classIN22mutation_reader_merger15needs_merge_tagEEEE9then_implIZNS5_14discard_resultEvEUlDpOT_E_NS0_IvEEEET0_OT_ (23 samples, 0.05%)</title><rect x="122.0" y="277" width="0.5" height="15.0" fill="rgb(234,198,21)" rx="2" ry="2" />
<text  x="124.97" y="287.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::emplace_back&lt;unsigned int const&amp;&gt; (24 samples, 0.05%)</title><rect x="1125.3" y="405" width="0.6" height="15.0" fill="rgb(209,160,36)" rx="2" ry="2" />
<text  x="1128.32" y="415.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (4,573 samples, 9.60%)</title><rect x="135.7" y="309" width="113.2" height="15.0" fill="rgb(205,19,22)" rx="2" ry="2" />
<text  x="138.69" y="319.5" >partition_sna..</text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (5 samples, 0.01%)</title><rect x="1049.5" y="293" width="0.1" height="15.0" fill="rgb(220,194,13)" rx="2" ry="2" />
<text  x="1052.48" y="303.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::push_back (5 samples, 0.01%)</title><rect x="1031.9" y="213" width="0.1" height="15.0" fill="rgb(210,62,19)" rx="2" ry="2" />
<text  x="1034.90" y="223.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_internal&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt; &gt; (10 samples, 0.02%)</title><rect x="1142.4" y="293" width="0.2" height="15.0" fill="rgb(218,40,37)" rx="2" ry="2" />
<text  x="1145.36" y="303.5" ></text>
</g>
<g >
<title>std::apply&lt;service::client_state::has_column_family_access (6 samples, 0.01%)</title><rect x="21.5" y="453" width="0.2" height="15.0" fill="rgb(214,223,8)" rx="2" ry="2" />
<text  x="24.54" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (16 samples, 0.03%)</title><rect x="405.7" y="229" width="0.4" height="15.0" fill="rgb(211,2,40)" rx="2" ry="2" />
<text  x="408.74" y="239.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::add_raw_update (7 samples, 0.01%)</title><rect x="18.2" y="309" width="0.1" height="15.0" fill="rgb(234,131,5)" rx="2" ry="2" />
<text  x="21.17" y="319.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;mutation_querier&gt;::_M_reset (7 samples, 0.01%)</title><rect x="417.3" y="389" width="0.2" height="15.0" fill="rgb(230,156,40)" rx="2" ry="2" />
<text  x="420.31" y="399.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (5 samples, 0.01%)</title><rect x="620.7" y="469" width="0.1" height="15.0" fill="rgb(218,165,51)" rx="2" ry="2" />
<text  x="623.65" y="479.5" ></text>
</g>
<g >
<title>service::storage_proxy::new_read_repair_decision (10 samples, 0.02%)</title><rect x="1099.8" y="357" width="0.2" height="15.0" fill="rgb(248,102,49)" rx="2" ry="2" />
<text  x="1102.79" y="367.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (25 samples, 0.05%)</title><rect x="507.3" y="197" width="0.6" height="15.0" fill="rgb(222,52,39)" rx="2" ry="2" />
<text  x="510.32" y="207.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::clear (32 samples, 0.07%)</title><rect x="255.5" y="277" width="0.8" height="15.0" fill="rgb(243,208,54)" rx="2" ry="2" />
<text  x="258.49" y="287.5" ></text>
</g>
<g >
<title>reader_permit::used_guard::~used_guard (5 samples, 0.01%)</title><rect x="681.2" y="485" width="0.2" height="15.0" fill="rgb(213,35,5)" rx="2" ry="2" />
<text  x="684.24" y="495.5" ></text>
</g>
<g >
<title>std::apply&lt;auth::get_permissions (963 samples, 2.02%)</title><rect x="775.4" y="293" width="23.9" height="15.0" fill="rgb(222,227,43)" rx="2" ry="2" />
<text  x="778.41" y="303.5" >s..</text>
</g>
<g >
<title>operator delete (19 samples, 0.04%)</title><rect x="43.4" y="485" width="0.4" height="15.0" fill="rgb(205,153,49)" rx="2" ry="2" />
<text  x="46.38" y="495.5" ></text>
</g>
<g >
<title>freeze (11 samples, 0.02%)</title><rect x="1142.6" y="197" width="0.3" height="15.0" fill="rgb(239,84,37)" rx="2" ry="2" />
<text  x="1145.63" y="207.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::check_access (2,981 samples, 6.26%)</title><rect x="746.8" y="421" width="73.8" height="15.0" fill="rgb(251,53,16)" rx="2" ry="2" />
<text  x="749.76" y="431.5" >cql3::st..</text>
</g>
<g >
<title>std::make_unique&lt;compact_for_query&lt; (61 samples, 0.13%)</title><rect x="413.9" y="357" width="1.5" height="15.0" fill="rgb(206,140,22)" rx="2" ry="2" />
<text  x="416.91" y="367.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (25 samples, 0.05%)</title><rect x="752.5" y="325" width="0.7" height="15.0" fill="rgb(205,36,16)" rx="2" ry="2" />
<text  x="755.53" y="335.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;managed_bytes&gt;::dispose (8 samples, 0.02%)</title><rect x="904.4" y="373" width="0.2" height="15.0" fill="rgb(216,75,32)" rx="2" ry="2" />
<text  x="907.40" y="383.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate (724 samples, 1.52%)</title><rect x="878.0" y="341" width="17.9" height="15.0" fill="rgb(251,210,41)" rx="2" ry="2" />
<text  x="880.95" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (25 samples, 0.05%)</title><rect x="689.7" y="485" width="0.6" height="15.0" fill="rgb(241,113,36)" rx="2" ry="2" />
<text  x="692.69" y="495.5" ></text>
</g>
<g >
<title>std::type_info::operator== (5 samples, 0.01%)</title><rect x="1042.0" y="261" width="0.1" height="15.0" fill="rgb(209,121,45)" rx="2" ry="2" />
<text  x="1044.97" y="271.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (11 samples, 0.02%)</title><rect x="1032.0" y="213" width="0.3" height="15.0" fill="rgb(239,33,54)" rx="2" ry="2" />
<text  x="1035.02" y="223.5" ></text>
</g>
<g >
<title>cql3::selection::simple_selection::is_aggregate (8 samples, 0.02%)</title><rect x="863.8" y="437" width="0.2" height="15.0" fill="rgb(245,89,40)" rx="2" ry="2" />
<text  x="866.79" y="447.5" ></text>
</g>
<g >
<title>tracing::global_trace_state_ptr::global_trace_state_ptr (13 samples, 0.03%)</title><rect x="1051.0" y="293" width="0.3" height="15.0" fill="rgb(252,7,51)" rx="2" ry="2" />
<text  x="1054.01" y="303.5" ></text>
</g>
<g >
<title>schema::get_partitioner (9 samples, 0.02%)</title><rect x="930.7" y="389" width="0.2" height="15.0" fill="rgb(205,151,26)" rx="2" ry="2" />
<text  x="933.72" y="399.5" ></text>
</g>
<g >
<title>service::storage_proxy::do_query (5,971 samples, 12.53%)</title><rect x="956.7" y="389" width="147.9" height="15.0" fill="rgb(216,136,32)" rx="2" ry="2" />
<text  x="959.74" y="399.5" >service::storage_p..</text>
</g>
<g >
<title>service::client_state::ensure_has_permission (1,582 samples, 3.32%)</title><rect x="765.1" y="357" width="39.2" height="15.0" fill="rgb(205,64,41)" rx="2" ry="2" />
<text  x="768.09" y="367.5" >ser..</text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;std::function&lt;std::function&lt;partition_presence_checker_result  (35 samples, 0.07%)</title><rect x="618.3" y="405" width="0.9" height="15.0" fill="rgb(218,163,29)" rx="2" ry="2" />
<text  x="621.32" y="415.5" ></text>
</g>
<g >
<title>seastar::schedule_urgent (22 samples, 0.05%)</title><rect x="1145.0" y="501" width="0.5" height="15.0" fill="rgb(209,77,11)" rx="2" ry="2" />
<text  x="1147.98" y="511.5" ></text>
</g>
<g >
<title>ser::writer_of_qr_cell&lt;bytes_ostream&gt;::skip_timestamp (109 samples, 0.23%)</title><rect x="357.5" y="165" width="2.7" height="15.0" fill="rgb(213,28,20)" rx="2" ry="2" />
<text  x="360.51" y="175.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (15 samples, 0.03%)</title><rect x="165.6" y="133" width="0.3" height="15.0" fill="rgb(241,27,11)" rx="2" ry="2" />
<text  x="168.55" y="143.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::digest_read_result&gt;::schedule&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::execute (5 samples, 0.01%)</title><rect x="979.1" y="325" width="0.2" height="15.0" fill="rgb(207,192,5)" rx="2" ry="2" />
<text  x="982.13" y="335.5" ></text>
</g>
<g >
<title>std::optional&lt;query::querier&lt; (11 samples, 0.02%)</title><rect x="75.1" y="453" width="0.3" height="15.0" fill="rgb(220,56,40)" rx="2" ry="2" />
<text  x="78.12" y="463.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (6 samples, 0.01%)</title><rect x="215.5" y="213" width="0.1" height="15.0" fill="rgb(228,57,25)" rx="2" ry="2" />
<text  x="218.50" y="223.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;managed_bytes&gt;::make&lt;managed_bytes&gt; (40 samples, 0.08%)</title><rect x="896.4" y="309" width="1.0" height="15.0" fill="rgb(217,223,39)" rx="2" ry="2" />
<text  x="899.42" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;gms::inet_address, std::pair&lt;gms::inet_address const, table::cache_hit_rate&gt;, std::allocator&lt;std::pair&lt;gms::inet_address const, table::cache_hit_rate&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;gms::inet_address&gt;, std::hash&lt;gms::inet_address&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::operator[] (62 samples, 0.13%)</title><rect x="701.6" y="437" width="1.6" height="15.0" fill="rgb(241,125,4)" rx="2" ry="2" />
<text  x="704.62" y="447.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (17 samples, 0.04%)</title><rect x="931.2" y="373" width="0.4" height="15.0" fill="rgb(214,27,37)" rx="2" ry="2" />
<text  x="934.19" y="383.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::take (11 samples, 0.02%)</title><rect x="408.0" y="261" width="0.2" height="15.0" fill="rgb(240,25,6)" rx="2" ry="2" />
<text  x="410.97" y="271.5" ></text>
</g>
<g >
<title>schema::position (8 samples, 0.02%)</title><rect x="1129.0" y="421" width="0.2" height="15.0" fill="rgb(245,201,23)" rx="2" ry="2" />
<text  x="1131.99" y="431.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::then_wrapped_common&lt;false, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (69 samples, 0.14%)</title><rect x="824.3" y="421" width="1.7" height="15.0" fill="rgb(216,38,9)" rx="2" ry="2" />
<text  x="827.29" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_move_assign (14 samples, 0.03%)</title><rect x="436.0" y="261" width="0.4" height="15.0" fill="rgb(226,175,25)" rx="2" ry="2" />
<text  x="439.03" y="271.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::clear (6 samples, 0.01%)</title><rect x="811.1" y="373" width="0.2" height="15.0" fill="rgb(253,44,33)" rx="2" ry="2" />
<text  x="814.12" y="383.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (24 samples, 0.05%)</title><rect x="680.6" y="437" width="0.6" height="15.0" fill="rgb(226,148,9)" rx="2" ry="2" />
<text  x="683.60" y="447.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (8 samples, 0.02%)</title><rect x="483.8" y="181" width="0.2" height="15.0" fill="rgb(218,210,33)" rx="2" ry="2" />
<text  x="486.77" y="191.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;service::storage_proxy_coordinator_query_result&gt;::set_urgent_state (80 samples, 0.17%)</title><rect x="677.2" y="485" width="1.9" height="15.0" fill="rgb(230,26,19)" rx="2" ry="2" />
<text  x="680.16" y="495.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::on_permit_destroyed (14 samples, 0.03%)</title><rect x="59.8" y="421" width="0.4" height="15.0" fill="rgb(219,62,51)" rx="2" ry="2" />
<text  x="62.85" y="431.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (195 samples, 0.41%)</title><rect x="15.7" y="405" width="4.8" height="15.0" fill="rgb(229,3,25)" rx="2" ry="2" />
<text  x="18.67" y="415.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (319 samples, 0.67%)</title><rect x="182.0" y="85" width="7.9" height="15.0" fill="rgb(243,175,31)" rx="2" ry="2" />
<text  x="185.00" y="95.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::close (9 samples, 0.02%)</title><rect x="1175.3" y="437" width="0.2" height="15.0" fill="rgb(251,18,14)" rx="2" ry="2" />
<text  x="1178.32" y="447.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned char, std::pair&lt;unsigned char const, std::optional&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned char const, std::optional&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned char&gt;, std::hash&lt;unsigned char&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::~_Hashtable (41 samples, 0.09%)</title><rect x="667.2" y="453" width="1.0" height="15.0" fill="rgb(246,114,21)" rx="2" ry="2" />
<text  x="670.23" y="463.5" ></text>
</g>
<g >
<title>allocation_strategy::get_standard_migrator&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::leaf_node&gt; (6 samples, 0.01%)</title><rect x="193.1" y="85" width="0.1" height="15.0" fill="rgb(219,6,39)" rx="2" ry="2" />
<text  x="196.06" y="95.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (6 samples, 0.01%)</title><rect x="698.5" y="421" width="0.2" height="15.0" fill="rgb(253,75,17)" rx="2" ry="2" />
<text  x="701.50" y="431.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (8 samples, 0.02%)</title><rect x="1029.3" y="165" width="0.2" height="15.0" fill="rgb(242,71,30)" rx="2" ry="2" />
<text  x="1032.32" y="175.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (7 samples, 0.01%)</title><rect x="1029.0" y="165" width="0.2" height="15.0" fill="rgb(229,203,25)" rx="2" ry="2" />
<text  x="1032.00" y="175.5" ></text>
</g>
<g >
<title>operator new (28 samples, 0.06%)</title><rect x="146.4" y="181" width="0.7" height="15.0" fill="rgb(225,62,51)" rx="2" ry="2" />
<text  x="149.44" y="191.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::pop_mutation_fragment (31 samples, 0.07%)</title><rect x="116.0" y="309" width="0.7" height="15.0" fill="rgb(207,47,43)" rx="2" ry="2" />
<text  x="118.96" y="319.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::emplace_back&lt;gms::inet_address const&amp;&gt; (8 samples, 0.02%)</title><rect x="703.2" y="453" width="0.2" height="15.0" fill="rgb(205,217,23)" rx="2" ry="2" />
<text  x="706.18" y="463.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (27 samples, 0.06%)</title><rect x="810.1" y="357" width="0.6" height="15.0" fill="rgb(245,7,9)" rx="2" ry="2" />
<text  x="813.08" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (13 samples, 0.03%)</title><rect x="1125.0" y="405" width="0.3" height="15.0" fill="rgb(205,41,42)" rx="2" ry="2" />
<text  x="1128.00" y="415.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_no_esft&lt;std::function&lt;flat_mutation_reader  (13 samples, 0.03%)</title><rect x="618.0" y="389" width="0.3" height="15.0" fill="rgb(236,63,37)" rx="2" ry="2" />
<text  x="621.00" y="399.5" ></text>
</g>
<g >
<title>seastar::gate::leave (5 samples, 0.01%)</title><rect x="60.1" y="405" width="0.1" height="15.0" fill="rgb(245,228,33)" rx="2" ry="2" />
<text  x="63.07" y="415.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::get_local_service (42 samples, 0.09%)</title><rect x="1040.1" y="261" width="1.0" height="15.0" fill="rgb(212,215,9)" rx="2" ry="2" />
<text  x="1043.07" y="271.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_live_endpoints (712 samples, 1.49%)</title><rect x="1077.5" y="325" width="17.6" height="15.0" fill="rgb(243,182,32)" rx="2" ry="2" />
<text  x="1080.51" y="335.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (13 samples, 0.03%)</title><rect x="807.8" y="261" width="0.3" height="15.0" fill="rgb(230,31,9)" rx="2" ry="2" />
<text  x="810.75" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (16 samples, 0.03%)</title><rect x="628.0" y="485" width="0.4" height="15.0" fill="rgb(251,147,4)" rx="2" ry="2" />
<text  x="631.01" y="495.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::maybe_refresh_state (51 samples, 0.11%)</title><rect x="220.0" y="165" width="1.3" height="15.0" fill="rgb(224,11,20)" rx="2" ry="2" />
<text  x="223.01" y="175.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::set_urgent_state (18 samples, 0.04%)</title><rect x="633.4" y="485" width="0.5" height="15.0" fill="rgb(235,108,53)" rx="2" ry="2" />
<text  x="636.43" y="495.5" ></text>
</g>
<g >
<title>schema_registry::learn (5 samples, 0.01%)</title><rect x="45.5" y="469" width="0.2" height="15.0" fill="rgb(224,40,5)" rx="2" ry="2" />
<text  x="48.53" y="479.5" ></text>
</g>
<g >
<title>schema::column_at (67 samples, 0.14%)</title><rect x="196.1" y="117" width="1.7" height="15.0" fill="rgb(226,220,31)" rx="2" ry="2" />
<text  x="199.13" y="127.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::clear (18 samples, 0.04%)</title><rect x="283.5" y="357" width="0.5" height="15.0" fill="rgb(225,57,5)" rx="2" ry="2" />
<text  x="286.54" y="367.5" ></text>
</g>
<g >
<title>operator delete (44 samples, 0.09%)</title><rect x="516.4" y="325" width="1.1" height="15.0" fill="rgb(238,163,41)" rx="2" ry="2" />
<text  x="519.38" y="335.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::check_local_limit (9 samples, 0.02%)</title><rect x="328.6" y="165" width="0.2" height="15.0" fill="rgb(249,211,30)" rx="2" ry="2" />
<text  x="331.61" y="175.5" ></text>
</g>
<g >
<title>operator new (14 samples, 0.03%)</title><rect x="825.1" y="373" width="0.3" height="15.0" fill="rgb(252,198,51)" rx="2" ry="2" />
<text  x="828.08" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::vector (129 samples, 0.27%)</title><rect x="938.8" y="405" width="3.2" height="15.0" fill="rgb(221,226,22)" rx="2" ry="2" />
<text  x="941.84" y="415.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::operator== (65 samples, 0.14%)</title><rect x="787.4" y="133" width="1.6" height="15.0" fill="rgb(217,98,45)" rx="2" ry="2" />
<text  x="790.37" y="143.5" ></text>
</g>
<g >
<title>db::assure_sufficient_live_nodes&lt;utils::small_vector&lt;gms::inet_address, 3ul&gt;, std::array&lt;gms::inet_address, 0ul&gt; &gt; (16 samples, 0.03%)</title><rect x="1062.5" y="341" width="0.4" height="15.0" fill="rgb(243,151,44)" rx="2" ry="2" />
<text  x="1065.53" y="351.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::node_size (6 samples, 0.01%)</title><rect x="205.9" y="133" width="0.1" height="15.0" fill="rgb(236,43,24)" rx="2" ry="2" />
<text  x="208.87" y="143.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (429 samples, 0.90%)</title><rect x="659.0" y="501" width="10.7" height="15.0" fill="rgb(238,200,4)" rx="2" ry="2" />
<text  x="662.03" y="511.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::fill_buffer (5 samples, 0.01%)</title><rect x="22.0" y="421" width="0.1" height="15.0" fill="rgb(209,31,17)" rx="2" ry="2" />
<text  x="24.96" y="431.5" ></text>
</g>
<g >
<title>seastar::repeat&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (5 samples, 0.01%)</title><rect x="285.7" y="389" width="0.1" height="15.0" fill="rgb(210,0,39)" rx="2" ry="2" />
<text  x="288.70" y="399.5" ></text>
</g>
<g >
<title>operator delete (19 samples, 0.04%)</title><rect x="581.9" y="405" width="0.5" height="15.0" fill="rgb(208,9,34)" rx="2" ry="2" />
<text  x="584.95" y="415.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::emplace_back&lt;std::_List_iterator&lt;flat_mutation_reader&gt; const&amp;, mutation_fragment&gt; (23 samples, 0.05%)</title><rect x="132.5" y="245" width="0.5" height="15.0" fill="rgb(233,199,9)" rx="2" ry="2" />
<text  x="135.47" y="255.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (21 samples, 0.04%)</title><rect x="226.0" y="229" width="0.5" height="15.0" fill="rgb(251,69,28)" rx="2" ry="2" />
<text  x="228.97" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::vector (154 samples, 0.32%)</title><rect x="1044.0" y="277" width="3.8" height="15.0" fill="rgb(222,51,37)" rx="2" ry="2" />
<text  x="1047.03" y="287.5" ></text>
</g>
<g >
<title>seastar::promise&lt;void&gt;::promise (58 samples, 0.12%)</title><rect x="69.3" y="389" width="1.4" height="15.0" fill="rgb(213,54,43)" rx="2" ry="2" />
<text  x="72.28" y="399.5" ></text>
</g>
<g >
<title>ser::qr_partition__static_row&lt;bytes_ostream&gt;::qr_partition__static_row (13 samples, 0.03%)</title><rect x="313.7" y="181" width="0.3" height="15.0" fill="rgb(234,40,27)" rx="2" ry="2" />
<text  x="316.65" y="191.5" ></text>
</g>
<g >
<title>single_node_cql_env::make_query_state (434 samples, 0.91%)</title><rect x="829.1" y="437" width="10.7" height="15.0" fill="rgb(211,66,48)" rx="2" ry="2" />
<text  x="832.07" y="447.5" ></text>
</g>
<g >
<title>ser::qr_clustered_row__cells&lt;bytes_ostream&gt;::start_cells (10 samples, 0.02%)</title><rect x="362.9" y="197" width="0.2" height="15.0" fill="rgb(241,162,39)" rx="2" ry="2" />
<text  x="365.88" y="207.5" ></text>
</g>
<g >
<title>absl::container_internal::operator== (12 samples, 0.03%)</title><rect x="750.5" y="357" width="0.3" height="15.0" fill="rgb(250,221,25)" rx="2" ry="2" />
<text  x="753.53" y="367.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::~impl (6 samples, 0.01%)</title><rect x="550.9" y="325" width="0.2" height="15.0" fill="rgb(235,67,7)" rx="2" ry="2" />
<text  x="553.92" y="335.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::set_value&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt; (28 samples, 0.06%)</title><rect x="687.2" y="453" width="0.7" height="15.0" fill="rgb(209,76,26)" rx="2" ry="2" />
<text  x="690.21" y="463.5" ></text>
</g>
<g >
<title>database::find_schema (62 samples, 0.13%)</title><rect x="811.8" y="357" width="1.6" height="15.0" fill="rgb(220,126,1)" rx="2" ry="2" />
<text  x="814.84" y="367.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (9 samples, 0.02%)</title><rect x="409.5" y="277" width="0.2" height="15.0" fill="rgb(220,204,42)" rx="2" ry="2" />
<text  x="412.46" y="287.5" ></text>
</g>
<g >
<title>free (17 samples, 0.04%)</title><rect x="36.6" y="421" width="0.5" height="15.0" fill="rgb(210,160,9)" rx="2" ry="2" />
<text  x="39.64" y="431.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::operator (8 samples, 0.02%)</title><rect x="122.5" y="277" width="0.2" height="15.0" fill="rgb(206,201,21)" rx="2" ry="2" />
<text  x="125.54" y="287.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (15 samples, 0.03%)</title><rect x="1104.6" y="389" width="0.4" height="15.0" fill="rgb(220,219,12)" rx="2" ry="2" />
<text  x="1107.65" y="399.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (25 samples, 0.05%)</title><rect x="461.5" y="277" width="0.6" height="15.0" fill="rgb(221,70,38)" rx="2" ry="2" />
<text  x="464.51" y="287.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mTokens (7 samples, 0.01%)</title><rect x="16.8" y="261" width="0.1" height="15.0" fill="rgb(245,184,5)" rx="2" ry="2" />
<text  x="19.76" y="271.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;std::vector&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::allocator&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, false, false&gt;::_Optional_base (5 samples, 0.01%)</title><rect x="845.1" y="421" width="0.1" height="15.0" fill="rgb(229,166,32)" rx="2" ry="2" />
<text  x="848.12" y="431.5" ></text>
</g>
<g >
<title>database::apply_in_memory (15 samples, 0.03%)</title><rect x="1141.9" y="293" width="0.4" height="15.0" fill="rgb(214,60,52)" rx="2" ry="2" />
<text  x="1144.89" y="303.5" ></text>
</g>
<g >
<title>ser::qr_partition__static_row&lt;bytes_ostream&gt;::qr_partition__static_row (19 samples, 0.04%)</title><rect x="308.6" y="165" width="0.5" height="15.0" fill="rgb(222,218,42)" rx="2" ry="2" />
<text  x="311.63" y="175.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::has_slice_or_needs_filtering (24 samples, 0.05%)</title><rect x="643.5" y="421" width="0.6" height="15.0" fill="rgb(233,64,10)" rx="2" ry="2" />
<text  x="646.48" y="431.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (261 samples, 0.55%)</title><rect x="15.3" y="517" width="6.5" height="15.0" fill="rgb(235,27,49)" rx="2" ry="2" />
<text  x="18.30" y="527.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;bool&gt;::move_it (7 samples, 0.01%)</title><rect x="766.1" y="341" width="0.2" height="15.0" fill="rgb(231,65,3)" rx="2" ry="2" />
<text  x="769.13" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::_M_range_initialize&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; const*&gt; (124 samples, 0.26%)</title><rect x="1119.0" y="373" width="3.1" height="15.0" fill="rgb(233,75,0)" rx="2" ry="2" />
<text  x="1121.98" y="383.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;mutation_reader_merger::reader_and_last_fragment_kind*, mutation_reader_merger::prepare_next (623 samples, 1.31%)</title><rect x="120.3" y="293" width="15.4" height="15.0" fill="rgb(205,197,54)" rx="2" ry="2" />
<text  x="123.26" y="303.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (5 samples, 0.01%)</title><rect x="810.2" y="341" width="0.1" height="15.0" fill="rgb(221,207,40)" rx="2" ry="2" />
<text  x="813.15" y="351.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reserve&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (4,521 samples, 9.49%)</title><rect x="136.8" y="277" width="112.0" height="15.0" fill="rgb(222,60,41)" rx="2" ry="2" />
<text  x="139.83" y="287.5" >logalloc::all..</text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::operator (16 samples, 0.03%)</title><rect x="855.2" y="485" width="0.4" height="15.0" fill="rgb(228,57,28)" rx="2" ry="2" />
<text  x="858.17" y="495.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_M_reset (8 samples, 0.02%)</title><rect x="586.2" y="389" width="0.2" height="15.0" fill="rgb(243,60,25)" rx="2" ry="2" />
<text  x="589.23" y="399.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_range_tombstone (265 samples, 0.56%)</title><rect x="215.8" y="229" width="6.5" height="15.0" fill="rgb(236,159,44)" rx="2" ry="2" />
<text  x="218.77" y="239.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (57 samples, 0.12%)</title><rect x="69.3" y="373" width="1.4" height="15.0" fill="rgb(218,91,3)" rx="2" ry="2" />
<text  x="72.30" y="383.5" ></text>
</g>
<g >
<title>seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::expand (69 samples, 0.14%)</title><rect x="145.6" y="213" width="1.7" height="15.0" fill="rgb(254,121,43)" rx="2" ry="2" />
<text  x="148.62" y="223.5" ></text>
</g>
<g >
<title>query_result_builder::consume (1,866 samples, 3.92%)</title><rect x="317.3" y="213" width="46.2" height="15.0" fill="rgb(209,8,35)" rx="2" ry="2" />
<text  x="320.29" y="223.5" >quer..</text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (5 samples, 0.01%)</title><rect x="576.5" y="373" width="0.1" height="15.0" fill="rgb(254,60,18)" rx="2" ry="2" />
<text  x="579.53" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (72 samples, 0.15%)</title><rect x="845.5" y="421" width="1.7" height="15.0" fill="rgb(252,118,27)" rx="2" ry="2" />
<text  x="848.46" y="431.5" ></text>
</g>
<g >
<title>managed_bytes::operator= (46 samples, 0.10%)</title><rect x="294.2" y="261" width="1.2" height="15.0" fill="rgb(214,60,31)" rx="2" ry="2" />
<text  x="297.22" y="271.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (7 samples, 0.01%)</title><rect x="401.1" y="197" width="0.2" height="15.0" fill="rgb(219,177,47)" rx="2" ry="2" />
<text  x="404.11" y="207.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::remove_if&lt;row::compact_and_expire (5 samples, 0.01%)</title><rect x="680.9" y="277" width="0.1" height="15.0" fill="rgb(218,84,6)" rx="2" ry="2" />
<text  x="683.92" y="287.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (8 samples, 0.02%)</title><rect x="151.7" y="213" width="0.2" height="15.0" fill="rgb(246,109,7)" rx="2" ry="2" />
<text  x="154.66" y="223.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (7 samples, 0.01%)</title><rect x="44.8" y="485" width="0.2" height="15.0" fill="rgb(212,180,41)" rx="2" ry="2" />
<text  x="47.84" y="495.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (2,234 samples, 4.69%)</title><rect x="159.8" y="197" width="55.4" height="15.0" fill="rgb(244,47,25)" rx="2" ry="2" />
<text  x="162.83" y="207.5" >parti..</text>
</g>
<g >
<title>query::querier_base::querier_base (4,744 samples, 9.96%)</title><rect x="419.3" y="421" width="117.5" height="15.0" fill="rgb(221,80,25)" rx="2" ry="2" />
<text  x="422.34" y="431.5" >query::querier..</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt;::construct&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; (11 samples, 0.02%)</title><rect x="213.0" y="133" width="0.3" height="15.0" fill="rgb(247,163,34)" rx="2" ry="2" />
<text  x="216.05" y="143.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (17 samples, 0.04%)</title><rect x="1000.3" y="293" width="0.4" height="15.0" fill="rgb(231,190,11)" rx="2" ry="2" />
<text  x="1003.25" y="303.5" ></text>
</g>
<g >
<title>reader_permit::impl::~impl (58 samples, 0.12%)</title><rect x="59.3" y="437" width="1.5" height="15.0" fill="rgb(252,216,12)" rx="2" ry="2" />
<text  x="62.33" y="447.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (13 samples, 0.03%)</title><rect x="683.0" y="485" width="0.3" height="15.0" fill="rgb(213,175,52)" rx="2" ry="2" />
<text  x="686.00" y="495.5" ></text>
</g>
<g >
<title>utils::tuple_hash::hash_impl&lt;2ul, auth::resource_kind, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (48 samples, 0.10%)</title><rect x="806.9" y="309" width="1.2" height="15.0" fill="rgb(215,147,4)" rx="2" ry="2" />
<text  x="809.91" y="319.5" ></text>
</g>
<g >
<title>seastar::basic_semaphore&lt;seastar::semaphore_default_exception_factory, std::chrono::_V2::steady_clock&gt;::signal (7 samples, 0.01%)</title><rect x="36.1" y="421" width="0.2" height="15.0" fill="rgb(247,214,26)" rx="2" ry="2" />
<text  x="39.15" y="431.5" ></text>
</g>
<g >
<title>__dynamic_cast (25 samples, 0.05%)</title><rect x="640.9" y="469" width="0.6" height="15.0" fill="rgb(214,115,38)" rx="2" ry="2" />
<text  x="643.86" y="479.5" ></text>
</g>
<g >
<title>basic_atomic_cell_view&lt; (7 samples, 0.01%)</title><rect x="324.7" y="181" width="0.2" height="15.0" fill="rgb(241,163,43)" rx="2" ry="2" />
<text  x="327.75" y="191.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (159 samples, 0.33%)</title><rect x="718.7" y="373" width="3.9" height="15.0" fill="rgb(246,23,53)" rx="2" ry="2" />
<text  x="721.68" y="383.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (7 samples, 0.01%)</title><rect x="928.3" y="341" width="0.2" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="931.29" y="351.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (12 samples, 0.03%)</title><rect x="1105.7" y="373" width="0.3" height="15.0" fill="rgb(242,213,1)" rx="2" ry="2" />
<text  x="1108.66" y="383.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (8 samples, 0.02%)</title><rect x="485.9" y="325" width="0.2" height="15.0" fill="rgb(250,85,2)" rx="2" ry="2" />
<text  x="488.92" y="335.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_prepared (630 samples, 1.32%)</title><rect x="726.1" y="421" width="15.6" height="15.0" fill="rgb(238,19,19)" rx="2" ry="2" />
<text  x="729.06" y="431.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (5 samples, 0.01%)</title><rect x="717.8" y="389" width="0.1" height="15.0" fill="rgb(240,82,3)" rx="2" ry="2" />
<text  x="720.79" y="399.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (21 samples, 0.04%)</title><rect x="1141.8" y="437" width="0.5" height="15.0" fill="rgb(211,179,12)" rx="2" ry="2" />
<text  x="1144.79" y="447.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::check_queue_size (10 samples, 0.02%)</title><rect x="1023.5" y="197" width="0.2" height="15.0" fill="rgb(219,167,35)" rx="2" ry="2" />
<text  x="1026.48" y="207.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::push_back (217 samples, 0.46%)</title><rect x="1025.0" y="197" width="5.4" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1027.99" y="207.5" ></text>
</g>
<g >
<title>cql3::statements::raw::modification_statement::prepare (32 samples, 0.07%)</title><rect x="20.6" y="453" width="0.8" height="15.0" fill="rgb(248,228,50)" rx="2" ry="2" />
<text  x="23.57" y="463.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (6 samples, 0.01%)</title><rect x="662.7" y="485" width="0.1" height="15.0" fill="rgb(222,20,45)" rx="2" ry="2" />
<text  x="665.67" y="495.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_construct&lt;interval_bound&lt;dht::ring_position&gt; const&amp;&gt; (40 samples, 0.08%)</title><rect x="1042.5" y="277" width="1.0" height="15.0" fill="rgb(244,1,30)" rx="2" ry="2" />
<text  x="1045.54" y="287.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::get_promise (5 samples, 0.01%)</title><rect x="996.9" y="277" width="0.1" height="15.0" fill="rgb(251,181,16)" rx="2" ry="2" />
<text  x="999.91" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::vector (47 samples, 0.10%)</title><rect x="936.7" y="405" width="1.2" height="15.0" fill="rgb(222,138,23)" rx="2" ry="2" />
<text  x="939.71" y="415.5" ></text>
</g>
<g >
<title>operator delete (25 samples, 0.05%)</title><rect x="1147.9" y="485" width="0.6" height="15.0" fill="rgb(211,227,41)" rx="2" ry="2" />
<text  x="1150.90" y="495.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::then_wrapped_nrvo&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (62 samples, 0.13%)</title><rect x="824.5" y="405" width="1.5" height="15.0" fill="rgb(223,107,37)" rx="2" ry="2" />
<text  x="827.47" y="415.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (7 samples, 0.01%)</title><rect x="761.2" y="341" width="0.2" height="15.0" fill="rgb(242,83,53)" rx="2" ry="2" />
<text  x="764.20" y="351.5" ></text>
</g>
<g >
<title>operator delete (13 samples, 0.03%)</title><rect x="35.4" y="453" width="0.4" height="15.0" fill="rgb(249,172,44)" rx="2" ry="2" />
<text  x="38.43" y="463.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (11 samples, 0.02%)</title><rect x="298.8" y="245" width="0.2" height="15.0" fill="rgb(237,76,38)" rx="2" ry="2" />
<text  x="301.77" y="255.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::~guard (12 samples, 0.03%)</title><rect x="526.7" y="309" width="0.3" height="15.0" fill="rgb(232,66,31)" rx="2" ry="2" />
<text  x="529.66" y="319.5" ></text>
</g>
<g >
<title>seastar::app_template::run (46,660 samples, 97.91%)</title><rect x="22.3" y="581" width="1155.4" height="15.0" fill="rgb(242,215,41)" rx="2" ry="2" />
<text  x="25.31" y="591.5" >seastar::app_template::run</text>
</g>
<g >
<title>cql3::statements::select_statement::needs_post_query_ordering (50 samples, 0.10%)</title><rect x="951.5" y="405" width="1.3" height="15.0" fill="rgb(221,120,0)" rx="2" ry="2" />
<text  x="954.52" y="415.5" ></text>
</g>
<g >
<title>operator new (127 samples, 0.27%)</title><rect x="1006.0" y="277" width="3.2" height="15.0" fill="rgb(245,82,42)" rx="2" ry="2" />
<text  x="1009.04" y="287.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (14 samples, 0.03%)</title><rect x="1024.3" y="165" width="0.4" height="15.0" fill="rgb(225,41,27)" rx="2" ry="2" />
<text  x="1027.34" y="175.5" ></text>
</g>
<g >
<title>partition_version_ref::operator* (8 samples, 0.02%)</title><rect x="560.3" y="277" width="0.2" height="15.0" fill="rgb(229,126,35)" rx="2" ry="2" />
<text  x="563.26" y="287.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (15 samples, 0.03%)</title><rect x="51.9" y="469" width="0.3" height="15.0" fill="rgb(233,212,40)" rx="2" ry="2" />
<text  x="54.87" y="479.5" ></text>
</g>
<g >
<title>nonwrapping_interval&lt;clustering_key_prefix&gt;::nonwrapping_interval (90 samples, 0.19%)</title><rect x="1113.5" y="373" width="2.2" height="15.0" fill="rgb(237,216,31)" rx="2" ry="2" />
<text  x="1116.51" y="383.5" ></text>
</g>
<g >
<title>reader_permit::consume_resources (13 samples, 0.03%)</title><rect x="151.3" y="197" width="0.3" height="15.0" fill="rgb(224,219,13)" rx="2" ry="2" />
<text  x="154.27" y="207.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;clustering_key_prefix&gt;::wrapping_interval (45 samples, 0.09%)</title><rect x="1114.6" y="357" width="1.1" height="15.0" fill="rgb(244,192,8)" rx="2" ry="2" />
<text  x="1117.63" y="367.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (5 samples, 0.01%)</title><rect x="941.9" y="309" width="0.1" height="15.0" fill="rgb(219,208,3)" rx="2" ry="2" />
<text  x="944.89" y="319.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (279 samples, 0.59%)</title><rect x="90.9" y="437" width="6.9" height="15.0" fill="rgb(236,205,24)" rx="2" ry="2" />
<text  x="93.90" y="447.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::query_processor::process_authorized_statement (118 samples, 0.25%)</title><rect x="634.7" y="501" width="2.9" height="15.0" fill="rgb(224,18,25)" rx="2" ry="2" />
<text  x="637.72" y="511.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, database::query (8 samples, 0.02%)</title><rect x="681.2" y="501" width="0.2" height="15.0" fill="rgb(208,83,39)" rx="2" ry="2" />
<text  x="684.22" y="511.5" ></text>
</g>
<g >
<title>query::result::result (72 samples, 0.15%)</title><rect x="587.7" y="421" width="1.8" height="15.0" fill="rgb(210,138,38)" rx="2" ry="2" />
<text  x="590.69" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (26 samples, 0.05%)</title><rect x="146.5" y="165" width="0.6" height="15.0" fill="rgb(251,88,3)" rx="2" ry="2" />
<text  x="149.49" y="175.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::splice (18 samples, 0.04%)</title><rect x="128.3" y="245" width="0.4" height="15.0" fill="rgb(214,180,38)" rx="2" ry="2" />
<text  x="131.29" y="255.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (5 samples, 0.01%)</title><rect x="782.5" y="213" width="0.2" height="15.0" fill="rgb(234,134,30)" rx="2" ry="2" />
<text  x="785.54" y="223.5" ></text>
</g>
<g >
<title>seastar::futurize_invoke&lt;seastar::future&lt;void&gt;  (6 samples, 0.01%)</title><rect x="412.7" y="357" width="0.1" height="15.0" fill="rgb(209,205,12)" rx="2" ry="2" />
<text  x="415.68" y="367.5" ></text>
</g>
<g >
<title>std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt; &gt;, seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (32 samples, 0.07%)</title><rect x="797.0" y="245" width="0.8" height="15.0" fill="rgb(233,153,15)" rx="2" ry="2" />
<text  x="799.98" y="255.5" ></text>
</g>
<g >
<title>reader_permit::consume (7 samples, 0.01%)</title><rect x="147.1" y="181" width="0.2" height="15.0" fill="rgb(209,64,49)" rx="2" ry="2" />
<text  x="150.13" y="191.5" ></text>
</g>
<g >
<title>query::querier_base::querier_base (40 samples, 0.08%)</title><rect x="615.6" y="405" width="0.9" height="15.0" fill="rgb(210,8,52)" rx="2" ry="2" />
<text  x="618.55" y="415.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::execute (3,021 samples, 6.34%)</title><rect x="977.2" y="357" width="74.8" height="15.0" fill="rgb(215,60,47)" rx="2" ry="2" />
<text  x="980.20" y="367.5" >service:..</text>
</g>
<g >
<title>flat_mutation_reader::impl::~impl (73 samples, 0.15%)</title><rect x="566.0" y="373" width="1.8" height="15.0" fill="rgb(212,159,9)" rx="2" ry="2" />
<text  x="569.03" y="383.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (9 samples, 0.02%)</title><rect x="132.2" y="245" width="0.3" height="15.0" fill="rgb(244,123,36)" rx="2" ry="2" />
<text  x="135.25" y="255.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::free (8 samples, 0.02%)</title><rect x="402.5" y="213" width="0.2" height="15.0" fill="rgb(220,90,22)" rx="2" ry="2" />
<text  x="405.50" y="223.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::emplace_back&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; const&amp;&gt; (21 samples, 0.04%)</title><rect x="760.9" y="357" width="0.5" height="15.0" fill="rgb(215,212,7)" rx="2" ry="2" />
<text  x="763.85" y="367.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_Optional_payload_base (10 samples, 0.02%)</title><rect x="1072.9" y="309" width="0.2" height="15.0" fill="rgb(222,181,14)" rx="2" ry="2" />
<text  x="1075.90" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value, std::allocator&lt;cql3::raw_value&gt; &gt;::~vector (6 samples, 0.01%)</title><rect x="845.2" y="421" width="0.2" height="15.0" fill="rgb(220,8,48)" rx="2" ry="2" />
<text  x="848.24" y="431.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (20 samples, 0.04%)</title><rect x="818.8" y="293" width="0.5" height="15.0" fill="rgb(212,49,43)" rx="2" ry="2" />
<text  x="821.82" y="303.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (12 samples, 0.03%)</title><rect x="90.6" y="437" width="0.3" height="15.0" fill="rgb(234,226,5)" rx="2" ry="2" />
<text  x="93.60" y="447.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::get0 (5 samples, 0.01%)</title><rect x="705.3" y="501" width="0.2" height="15.0" fill="rgb(252,202,0)" rx="2" ry="2" />
<text  x="708.34" y="511.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::execution_loop (23,385 samples, 49.07%)</title><rect x="46.1" y="501" width="579.0" height="15.0" fill="rgb(230,170,28)" rx="2" ry="2" />
<text  x="49.08" y="511.5" >reader_concurrency_semaphore::execution_loop</text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::get_at (14 samples, 0.03%)</title><rect x="317.6" y="197" width="0.3" height="15.0" fill="rgb(245,72,33)" rx="2" ry="2" />
<text  x="320.59" y="207.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (11 samples, 0.02%)</title><rect x="903.7" y="309" width="0.3" height="15.0" fill="rgb(216,56,40)" rx="2" ry="2" />
<text  x="906.68" y="319.5" ></text>
</g>
<g >
<title>operator delete (26 samples, 0.05%)</title><rect x="799.5" y="277" width="0.6" height="15.0" fill="rgb(205,122,18)" rx="2" ry="2" />
<text  x="802.48" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;gms::inet_address, std::pair&lt;gms::inet_address const, table::cache_hit_rate&gt;, std::allocator&lt;std::pair&lt;gms::inet_address const, table::cache_hit_rate&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;gms::inet_address&gt;, std::hash&lt;gms::inet_address&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::operator[] (6 samples, 0.01%)</title><rect x="701.3" y="453" width="0.2" height="15.0" fill="rgb(232,31,36)" rx="2" ry="2" />
<text  x="704.33" y="463.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, enum_set&lt;super_enum&lt;auth::permission,  (76 samples, 0.16%)</title><rect x="780.6" y="181" width="1.9" height="15.0" fill="rgb(242,178,51)" rx="2" ry="2" />
<text  x="783.61" y="191.5" ></text>
</g>
<g >
<title>utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;::touch (6 samples, 0.01%)</title><rect x="723.6" y="421" width="0.1" height="15.0" fill="rgb(219,127,33)" rx="2" ry="2" />
<text  x="726.56" y="431.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::upper_bound&lt;mutation_partition, schema const&amp;, nonwrapping_interval&lt;clustering_key_prefix&gt; const&amp;&gt; (59 samples, 0.12%)</title><rect x="234.4" y="213" width="1.5" height="15.0" fill="rgb(231,131,5)" rx="2" ry="2" />
<text  x="237.44" y="223.5" ></text>
</g>
<g >
<title>boost::intrusive::bstree_algorithms&lt;boost::intrusive::rbtree_node_traits&lt;void*, false&gt; &gt;::clear_and_dispose&lt;boost::intrusive::detail::node_disposer&lt;current_deleter&lt;range_tombstone_entry&gt; (11 samples, 0.02%)</title><rect x="561.8" y="261" width="0.3" height="15.0" fill="rgb(210,46,39)" rx="2" ry="2" />
<text  x="564.84" y="271.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;service::digest_read_result&gt;::set_value&lt;service::digest_read_result&gt; (17 samples, 0.04%)</title><rect x="698.8" y="421" width="0.4" height="15.0" fill="rgb(230,211,20)" rx="2" ry="2" />
<text  x="701.80" y="431.5" ></text>
</g>
<g >
<title>row::row (5 samples, 0.01%)</title><rect x="248.0" y="213" width="0.1" height="15.0" fill="rgb(208,84,31)" rx="2" ry="2" />
<text  x="250.99" y="223.5" ></text>
</g>
<g >
<title>skip_empty_fragments&lt;managed_bytes_basic_view&lt; (7 samples, 0.01%)</title><rect x="485.5" y="213" width="0.1" height="15.0" fill="rgb(210,63,11)" rx="2" ry="2" />
<text  x="488.48" y="223.5" ></text>
</g>
<g >
<title>schema::column_at (11 samples, 0.02%)</title><rect x="205.6" y="117" width="0.3" height="15.0" fill="rgb(211,33,33)" rx="2" ry="2" />
<text  x="208.59" y="127.5" ></text>
</g>
<g >
<title>service::client_state::set_keyspace (5 samples, 0.01%)</title><rect x="828.9" y="437" width="0.1" height="15.0" fill="rgb(232,6,52)" rx="2" ry="2" />
<text  x="831.90" y="447.5" ></text>
</g>
<g >
<title>utils::basic_ihistogram&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt; &gt;::mark&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; (24 samples, 0.05%)</title><rect x="597.9" y="405" width="0.6" height="15.0" fill="rgb(231,122,20)" rx="2" ry="2" />
<text  x="600.87" y="415.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::entry::entry (39 samples, 0.08%)</title><rect x="1023.7" y="197" width="1.0" height="15.0" fill="rgb(245,147,42)" rx="2" ry="2" />
<text  x="1026.72" y="207.5" ></text>
</g>
<g >
<title>cql3::statements::prepared_statement::checked_weak_from_this (5 samples, 0.01%)</title><rect x="823.7" y="437" width="0.1" height="15.0" fill="rgb(213,0,52)" rx="2" ry="2" />
<text  x="826.72" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (24 samples, 0.05%)</title><rect x="37.1" y="421" width="0.6" height="15.0" fill="rgb(250,82,32)" rx="2" ry="2" />
<text  x="40.14" y="431.5" ></text>
</g>
<g >
<title>seastar::future&lt;utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (13 samples, 0.03%)</title><rect x="779.0" y="229" width="0.3" height="15.0" fill="rgb(228,11,5)" rx="2" ry="2" />
<text  x="781.95" y="239.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_max_result_size (93 samples, 0.20%)</title><rect x="1134.9" y="421" width="2.3" height="15.0" fill="rgb(230,24,42)" rx="2" ry="2" />
<text  x="1137.88" y="431.5" ></text>
</g>
<g >
<title>service::client_state::has_access (1,804 samples, 3.79%)</title><rect x="763.6" y="373" width="44.7" height="15.0" fill="rgb(216,33,20)" rx="2" ry="2" />
<text  x="766.60" y="383.5" >serv..</text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::~_Variant_storage (11 samples, 0.02%)</title><rect x="895.5" y="293" width="0.3" height="15.0" fill="rgb(226,149,9)" rx="2" ry="2" />
<text  x="898.51" y="303.5" ></text>
</g>
<g >
<title>std::default_delete&lt;bytes_ostream::chunk&gt;::operator (8 samples, 0.02%)</title><rect x="36.3" y="437" width="0.2" height="15.0" fill="rgb(245,226,14)" rx="2" ry="2" />
<text  x="39.32" y="447.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::~partition_snapshot_flat_reader (331 samples, 0.69%)</title><rect x="554.9" y="309" width="8.2" height="15.0" fill="rgb(254,15,14)" rx="2" ry="2" />
<text  x="557.91" y="319.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (15 samples, 0.03%)</title><rect x="914.5" y="373" width="0.3" height="15.0" fill="rgb(246,39,54)" rx="2" ry="2" />
<text  x="917.45" y="383.5" ></text>
</g>
<g >
<title>memtable::apply (13 samples, 0.03%)</title><rect x="1141.9" y="261" width="0.3" height="15.0" fill="rgb(232,108,37)" rx="2" ry="2" />
<text  x="1144.89" y="271.5" ></text>
</g>
<g >
<title>mutation_partition::clustered_row (5 samples, 0.01%)</title><rect x="856.6" y="277" width="0.1" height="15.0" fill="rgb(229,182,23)" rx="2" ry="2" />
<text  x="859.58" y="287.5" ></text>
</g>
<g >
<title>query::partition_slice::row_ranges (24 samples, 0.05%)</title><rect x="388.6" y="229" width="0.6" height="15.0" fill="rgb(233,191,44)" rx="2" ry="2" />
<text  x="391.63" y="239.5" ></text>
</g>
<g >
<title>service::shared_mutation::apply_locally (7 samples, 0.01%)</title><rect x="1142.4" y="229" width="0.2" height="15.0" fill="rgb(231,4,54)" rx="2" ry="2" />
<text  x="1145.38" y="239.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reclaiming_disabled&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (2,343 samples, 4.92%)</title><rect x="157.4" y="213" width="58.0" height="15.0" fill="rgb(207,141,50)" rx="2" ry="2" />
<text  x="160.41" y="223.5" >logall..</text>
</g>
<g >
<title>cql3::statements::select_statement::needs_post_query_ordering (38 samples, 0.08%)</title><rect x="645.0" y="469" width="1.0" height="15.0" fill="rgb(218,153,51)" rx="2" ry="2" />
<text  x="648.04" y="479.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::set&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt; (21 samples, 0.04%)</title><rect x="687.4" y="437" width="0.5" height="15.0" fill="rgb(213,102,24)" rx="2" ry="2" />
<text  x="690.38" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (6 samples, 0.01%)</title><rect x="517.3" y="309" width="0.2" height="15.0" fill="rgb(225,146,22)" rx="2" ry="2" />
<text  x="520.32" y="319.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_4findERKNS5_10expressionENS5_6oper_tEEUlRS7_E_EES8_SE_T_EUlSG_E_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_8constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_11conjunctionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_12column_valueEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_5tokenEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13function_callEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4castEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_15field_selectionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4nullEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13bind_variableEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_16untyped_constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_17tuple_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_22collection_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSO_S6_SS_SW_S10_S14_S18_S1C_S1G_S1K_S1O_S1S_SK_S1W_S20_S24_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES29_S2C_ (7 samples, 0.01%)</title><rect x="645.8" y="389" width="0.1" height="15.0" fill="rgb(220,110,22)" rx="2" ry="2" />
<text  x="648.76" y="399.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (12 samples, 0.03%)</title><rect x="752.9" y="309" width="0.3" height="15.0" fill="rgb(209,195,52)" rx="2" ry="2" />
<text  x="755.85" y="319.5" ></text>
</g>
<g >
<title>partition_snapshot::versions (6 samples, 0.01%)</title><rect x="210.0" y="133" width="0.1" height="15.0" fill="rgb(231,14,31)" rx="2" ry="2" />
<text  x="212.95" y="143.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::do_get_limit (5 samples, 0.01%)</title><rect x="1108.4" y="405" width="0.1" height="15.0" fill="rgb(246,156,41)" rx="2" ry="2" />
<text  x="1111.36" y="415.5" ></text>
</g>
<g >
<title>abstract_type::bound_value_needs_to_be_reserialized (35 samples, 0.07%)</title><rect x="882.2" y="293" width="0.9" height="15.0" fill="rgb(218,218,5)" rx="2" ry="2" />
<text  x="885.21" y="303.5" ></text>
</g>
<g >
<title>service::storage_proxy_stats::split_stats::get_ep_stat (12 samples, 0.03%)</title><rect x="1049.0" y="293" width="0.3" height="15.0" fill="rgb(227,27,21)" rx="2" ry="2" />
<text  x="1051.98" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (17 samples, 0.04%)</title><rect x="530.7" y="245" width="0.4" height="15.0" fill="rgb(233,171,38)" rx="2" ry="2" />
<text  x="533.69" y="255.5" ></text>
</g>
<g >
<title>reader_permit::consume (10 samples, 0.02%)</title><rect x="507.0" y="165" width="0.2" height="15.0" fill="rgb(206,192,12)" rx="2" ry="2" />
<text  x="509.99" y="175.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;query::result_memory_accounter&gt;::clear (17 samples, 0.04%)</title><rect x="72.4" y="453" width="0.4" height="15.0" fill="rgb(229,60,10)" rx="2" ry="2" />
<text  x="75.42" y="463.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_nodes (8 samples, 0.02%)</title><rect x="1107.9" y="373" width="0.2" height="15.0" fill="rgb(247,25,0)" rx="2" ry="2" />
<text  x="1110.94" y="383.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::query_state&gt;::~shared_ptr (11 samples, 0.02%)</title><rect x="663.7" y="485" width="0.2" height="15.0" fill="rgb(249,130,49)" rx="2" ry="2" />
<text  x="666.66" y="495.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::invoke&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (489 samples, 1.03%)</title><rect x="271.1" y="341" width="12.1" height="15.0" fill="rgb(254,118,47)" rx="2" ry="2" />
<text  x="274.11" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value, std::allocator&lt;cql3::raw_value&gt; &gt;::_M_range_initialize&lt;cql3::raw_value const*&gt; (53 samples, 0.11%)</title><rect x="849.0" y="453" width="1.3" height="15.0" fill="rgb(235,77,8)" rx="2" ry="2" />
<text  x="851.98" y="463.5" ></text>
</g>
<g >
<title>bytes_ostream::alloc_new (57 samples, 0.12%)</title><rect x="593.3" y="389" width="1.4" height="15.0" fill="rgb(237,227,50)" rx="2" ry="2" />
<text  x="596.31" y="399.5" ></text>
</g>
<g >
<title>free (125 samples, 0.26%)</title><rect x="397.7" y="181" width="3.1" height="15.0" fill="rgb(216,192,46)" rx="2" ry="2" />
<text  x="400.72" y="191.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_map&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::at&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt; &gt; (5 samples, 0.01%)</title><rect x="1055.9" y="341" width="0.1" height="15.0" fill="rgb(239,59,14)" rx="2" ry="2" />
<text  x="1058.91" y="351.5" ></text>
</g>
<g >
<title>operator new (44 samples, 0.09%)</title><rect x="711.7" y="421" width="1.0" height="15.0" fill="rgb(220,90,15)" rx="2" ry="2" />
<text  x="714.65" y="431.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (20 samples, 0.04%)</title><rect x="91.6" y="421" width="0.5" height="15.0" fill="rgb(252,56,47)" rx="2" ry="2" />
<text  x="94.57" y="431.5" ></text>
</g>
<g >
<title>operator new (11 samples, 0.02%)</title><rect x="519.8" y="341" width="0.3" height="15.0" fill="rgb(217,167,8)" rx="2" ry="2" />
<text  x="522.85" y="351.5" ></text>
</g>
<g >
<title>seastar::future&lt;mutation_fragment*&gt;::then_impl&lt;query::consume_page&lt; (5,293 samples, 11.11%)</title><rect x="286.5" y="405" width="131.1" height="15.0" fill="rgb(213,11,49)" rx="2" ry="2" />
<text  x="289.54" y="415.5" >seastar::future&lt;..</text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (13 samples, 0.03%)</title><rect x="986.9" y="293" width="0.3" height="15.0" fill="rgb(249,53,10)" rx="2" ry="2" />
<text  x="989.88" y="303.5" ></text>
</g>
<g >
<title>std::type_info::operator== (7 samples, 0.01%)</title><rect x="1000.5" y="277" width="0.2" height="15.0" fill="rgb(224,143,0)" rx="2" ry="2" />
<text  x="1003.50" y="287.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::finally_body&lt;service::storage_proxy::do_query (90 samples, 0.19%)</title><rect x="671.2" y="485" width="2.2" height="15.0" fill="rgb(222,39,47)" rx="2" ry="2" />
<text  x="674.22" y="495.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (6 samples, 0.01%)</title><rect x="526.3" y="277" width="0.1" height="15.0" fill="rgb(242,105,12)" rx="2" ry="2" />
<text  x="529.28" y="287.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;::_Tuple_impl&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const&amp;, auth::resource, void&gt; (38 samples, 0.08%)</title><rect x="758.5" y="357" width="0.9" height="15.0" fill="rgb(213,132,25)" rx="2" ry="2" />
<text  x="761.50" y="367.5" ></text>
</g>
<g >
<title>utils::tuple_hash::hash_impl&lt;1ul, auth::resource_kind, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (17 samples, 0.04%)</title><rect x="792.4" y="101" width="0.4" height="15.0" fill="rgb(250,164,6)" rx="2" ry="2" />
<text  x="795.42" y="111.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;void&gt;::set_value&lt;&gt; (23 samples, 0.05%)</title><rect x="31.5" y="485" width="0.6" height="15.0" fill="rgb(230,28,38)" rx="2" ry="2" />
<text  x="34.49" y="495.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::clear (19 samples, 0.04%)</title><rect x="810.3" y="341" width="0.4" height="15.0" fill="rgb(232,36,3)" rx="2" ry="2" />
<text  x="813.28" y="351.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::push_mutation_fragment&lt;schema const&amp;, reader_permit&amp;, partition_start&gt; (306 samples, 0.64%)</title><rect x="501.6" y="245" width="7.6" height="15.0" fill="rgb(208,149,32)" rx="2" ry="2" />
<text  x="504.60" y="255.5" ></text>
</g>
<g >
<title>std::__lower_bound&lt;__gnu_cxx::__normal_iterator&lt;dht::token const*, std::vector&lt;dht::token, std::allocator&lt;dht::token&gt; &gt; &gt;, dht::token, __gnu_cxx::__ops::_Iter_less_val&gt; (238 samples, 0.50%)</title><rect x="1080.5" y="245" width="5.9" height="15.0" fill="rgb(206,192,36)" rx="2" ry="2" />
<text  x="1083.53" y="255.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_Optional_payload_base (17 samples, 0.04%)</title><rect x="941.6" y="341" width="0.4" height="15.0" fill="rgb(247,107,49)" rx="2" ry="2" />
<text  x="944.59" y="351.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (5 samples, 0.01%)</title><rect x="327.6" y="165" width="0.1" height="15.0" fill="rgb(216,62,53)" rx="2" ry="2" />
<text  x="330.57" y="175.5" ></text>
</g>
<g >
<title>operator delete (38 samples, 0.08%)</title><rect x="584.1" y="389" width="1.0" height="15.0" fill="rgb(220,147,19)" rx="2" ry="2" />
<text  x="587.13" y="399.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::take (17 samples, 0.04%)</title><rect x="269.2" y="341" width="0.4" height="15.0" fill="rgb(211,64,1)" rx="2" ry="2" />
<text  x="272.16" y="351.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (31 samples, 0.07%)</title><rect x="480.0" y="197" width="0.8" height="15.0" fill="rgb(227,139,54)" rx="2" ry="2" />
<text  x="483.00" y="207.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (7 samples, 0.01%)</title><rect x="667.3" y="437" width="0.2" height="15.0" fill="rgb(237,100,46)" rx="2" ry="2" />
<text  x="670.28" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt;::_M_realloc_insert&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; (51 samples, 0.11%)</title><rect x="241.4" y="197" width="1.3" height="15.0" fill="rgb(206,119,40)" rx="2" ry="2" />
<text  x="244.42" y="207.5" ></text>
</g>
<g >
<title>utils::timed_rate_moving_average_and_histogram::mark&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; (46 samples, 0.10%)</title><rect x="672.3" y="469" width="1.1" height="15.0" fill="rgb(227,32,52)" rx="2" ry="2" />
<text  x="675.30" y="479.5" ></text>
</g>
<g >
<title>database::has_keyspace (115 samples, 0.24%)</title><rect x="836.8" y="405" width="2.8" height="15.0" fill="rgb(240,225,16)" rx="2" ry="2" />
<text  x="839.77" y="415.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::with_permit (47 samples, 0.10%)</title><rect x="1038.1" y="261" width="1.1" height="15.0" fill="rgb(222,182,44)" rx="2" ry="2" />
<text  x="1041.06" y="271.5" ></text>
</g>
<g >
<title>std::__find_if&lt;gms::inet_address*, __gnu_cxx::__ops::_Iter_pred&lt;std::unary_negate&lt;std::binder1st&lt;std::_Mem_fn&lt;bool  (5 samples, 0.01%)</title><rect x="1093.7" y="309" width="0.1" height="15.0" fill="rgb(223,191,54)" rx="2" ry="2" />
<text  x="1096.65" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (5 samples, 0.01%)</title><rect x="513.8" y="309" width="0.1" height="15.0" fill="rgb(239,161,13)" rx="2" ry="2" />
<text  x="516.75" y="319.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextToken (39 samples, 0.08%)</title><rect x="16.0" y="293" width="1.0" height="15.0" fill="rgb(208,35,29)" rx="2" ry="2" />
<text  x="19.02" y="303.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (438 samples, 0.92%)</title><rect x="729.3" y="389" width="10.9" height="15.0" fill="rgb(211,197,3)" rx="2" ry="2" />
<text  x="732.33" y="399.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::~timer (37 samples, 0.08%)</title><rect x="66.0" y="389" width="0.9" height="15.0" fill="rgb(217,51,38)" rx="2" ry="2" />
<text  x="68.96" y="399.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (300 samples, 0.63%)</title><rect x="785.5" y="181" width="7.4" height="15.0" fill="rgb(227,201,20)" rx="2" ry="2" />
<text  x="788.52" y="191.5" ></text>
</g>
<g >
<title>ser::after_qr_cell__timestamp&lt;bytes_ostream&gt;::skip_expiry (6 samples, 0.01%)</title><rect x="330.2" y="181" width="0.2" height="15.0" fill="rgb(221,19,52)" rx="2" ry="2" />
<text  x="333.22" y="191.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::find&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (159 samples, 0.33%)</title><rect x="750.8" y="357" width="4.0" height="15.0" fill="rgb(237,58,9)" rx="2" ry="2" />
<text  x="753.82" y="367.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::clear (5 samples, 0.01%)</title><rect x="707.5" y="501" width="0.1" height="15.0" fill="rgb(237,194,45)" rx="2" ry="2" />
<text  x="710.47" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (10 samples, 0.02%)</title><rect x="197.5" y="101" width="0.3" height="15.0" fill="rgb(237,100,10)" rx="2" ry="2" />
<text  x="200.55" y="111.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (16 samples, 0.03%)</title><rect x="512.9" y="277" width="0.4" height="15.0" fill="rgb(254,169,25)" rx="2" ry="2" />
<text  x="515.86" y="287.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::EqualElement&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (28 samples, 0.06%)</title><rect x="751.8" y="325" width="0.7" height="15.0" fill="rgb(235,188,12)" rx="2" ry="2" />
<text  x="754.84" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (26 samples, 0.05%)</title><rect x="896.7" y="277" width="0.6" height="15.0" fill="rgb(246,201,49)" rx="2" ry="2" />
<text  x="899.70" y="287.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (23 samples, 0.05%)</title><rect x="928.9" y="325" width="0.5" height="15.0" fill="rgb(217,186,6)" rx="2" ry="2" />
<text  x="931.86" y="335.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::clear (15 samples, 0.03%)</title><rect x="661.1" y="469" width="0.4" height="15.0" fill="rgb(205,21,19)" rx="2" ry="2" />
<text  x="664.09" y="479.5" ></text>
</g>
<g >
<title>reader_permit::consume (13 samples, 0.03%)</title><rect x="207.8" y="149" width="0.3" height="15.0" fill="rgb(230,60,26)" rx="2" ry="2" />
<text  x="210.77" y="159.5" ></text>
</g>
<g >
<title>operator new (42 samples, 0.09%)</title><rect x="832.9" y="421" width="1.0" height="15.0" fill="rgb(249,194,10)" rx="2" ry="2" />
<text  x="835.86" y="431.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (8 samples, 0.02%)</title><rect x="619.5" y="421" width="0.2" height="15.0" fill="rgb(207,227,4)" rx="2" ry="2" />
<text  x="622.49" y="431.5" ></text>
</g>
<g >
<title>std::hash&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::operator (6 samples, 0.01%)</title><rect x="754.6" y="325" width="0.2" height="15.0" fill="rgb(245,16,0)" rx="2" ry="2" />
<text  x="757.61" y="335.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::do_execute (11,164 samples, 23.43%)</title><rect x="864.0" y="437" width="276.4" height="15.0" fill="rgb(236,116,34)" rx="2" ry="2" />
<text  x="866.99" y="447.5" >cql3::statements::select_statement::d..</text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::find (11 samples, 0.02%)</title><rect x="645.7" y="405" width="0.2" height="15.0" fill="rgb(233,173,49)" rx="2" ry="2" />
<text  x="648.66" y="415.5" ></text>
</g>
<g >
<title>operator delete (13 samples, 0.03%)</title><rect x="635.1" y="485" width="0.3" height="15.0" fill="rgb(210,175,44)" rx="2" ry="2" />
<text  x="638.11" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::reserve (33 samples, 0.07%)</title><rect x="533.4" y="341" width="0.8" height="15.0" fill="rgb(247,87,13)" rx="2" ry="2" />
<text  x="536.37" y="351.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::small_vector (21 samples, 0.04%)</title><rect x="448.8" y="261" width="0.5" height="15.0" fill="rgb(221,168,2)" rx="2" ry="2" />
<text  x="451.78" y="271.5" ></text>
</g>
<g >
<title>__tls_init (9 samples, 0.02%)</title><rect x="488.9" y="293" width="0.2" height="15.0" fill="rgb(234,127,5)" rx="2" ry="2" />
<text  x="491.87" y="303.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;dht::token, std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt;, std::allocator&lt;std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;dht::token&gt;, std::hash&lt;dht::token&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (11 samples, 0.02%)</title><rect x="1093.3" y="293" width="0.3" height="15.0" fill="rgb(251,152,51)" rx="2" ry="2" />
<text  x="1096.33" y="303.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (96 samples, 0.20%)</title><rect x="656.5" y="469" width="2.3" height="15.0" fill="rgb(228,189,32)" rx="2" ry="2" />
<text  x="659.46" y="479.5" ></text>
</g>
<g >
<title>schema_registry::get (195 samples, 0.41%)</title><rect x="969.1" y="357" width="4.8" height="15.0" fill="rgb(233,213,9)" rx="2" ry="2" />
<text  x="972.07" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (26 samples, 0.05%)</title><rect x="241.9" y="165" width="0.6" height="15.0" fill="rgb(240,120,3)" rx="2" ry="2" />
<text  x="244.89" y="175.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::guard (6 samples, 0.01%)</title><rect x="429.7" y="341" width="0.1" height="15.0" fill="rgb(235,42,17)" rx="2" ry="2" />
<text  x="432.69" y="351.5" ></text>
</g>
<g >
<title>std::visit&lt;overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::has_token (14 samples, 0.03%)</title><rect x="875.5" y="389" width="0.4" height="15.0" fill="rgb(212,126,6)" rx="2" ry="2" />
<text  x="878.55" y="399.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (16 samples, 0.03%)</title><rect x="531.9" y="341" width="0.4" height="15.0" fill="rgb(215,178,18)" rx="2" ry="2" />
<text  x="534.93" y="351.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::statement_restrictions (11 samples, 0.02%)</title><rect x="21.0" y="405" width="0.2" height="15.0" fill="rgb(211,130,31)" rx="2" ry="2" />
<text  x="23.97" y="415.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;mutation_querier, false, false&gt;::_Optional_base (13 samples, 0.03%)</title><rect x="544.9" y="421" width="0.3" height="15.0" fill="rgb(249,86,39)" rx="2" ry="2" />
<text  x="547.86" y="431.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (12 samples, 0.03%)</title><rect x="441.7" y="261" width="0.3" height="15.0" fill="rgb(223,9,20)" rx="2" ry="2" />
<text  x="444.75" y="271.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::size (15 samples, 0.03%)</title><rect x="870.7" y="421" width="0.4" height="15.0" fill="rgb(252,53,47)" rx="2" ry="2" />
<text  x="873.72" y="431.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::storage_proxy&gt;::~shared_ptr (22 samples, 0.05%)</title><rect x="962.1" y="373" width="0.5" height="15.0" fill="rgb(231,181,44)" rx="2" ry="2" />
<text  x="965.09" y="383.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::signal (5 samples, 0.01%)</title><rect x="273.9" y="309" width="0.2" height="15.0" fill="rgb(214,57,7)" rx="2" ry="2" />
<text  x="276.94" y="319.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::contains&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (108 samples, 0.23%)</title><rect x="817.2" y="341" width="2.7" height="15.0" fill="rgb(242,50,30)" rx="2" ry="2" />
<text  x="820.24" y="351.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::future&lt;void&gt;  (19 samples, 0.04%)</title><rect x="1141.8" y="357" width="0.5" height="15.0" fill="rgb(208,11,40)" rx="2" ry="2" />
<text  x="1144.81" y="367.5" ></text>
</g>
<g >
<title>ser::qr_clustered_row__cells&lt;bytes_ostream&gt;::qr_clustered_row__cells (7 samples, 0.01%)</title><rect x="330.4" y="181" width="0.2" height="15.0" fill="rgb(225,2,10)" rx="2" ry="2" />
<text  x="333.44" y="191.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;::operator (103 samples, 0.22%)</title><rect x="720.0" y="325" width="2.5" height="15.0" fill="rgb(249,2,12)" rx="2" ry="2" />
<text  x="723.00" y="335.5" ></text>
</g>
<g >
<title>operator delete (19 samples, 0.04%)</title><rect x="577.5" y="389" width="0.5" height="15.0" fill="rgb(242,27,51)" rx="2" ry="2" />
<text  x="580.52" y="399.5" ></text>
</g>
<g >
<title>seastar::basic_semaphore&lt;seastar::semaphore_default_exception_factory, std::chrono::_V2::steady_clock&gt;::wait (22 samples, 0.05%)</title><rect x="595.4" y="437" width="0.5" height="15.0" fill="rgb(253,186,19)" rx="2" ry="2" />
<text  x="598.37" y="447.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector (47 samples, 0.10%)</title><rect x="1165.8" y="469" width="1.1" height="15.0" fill="rgb(223,12,2)" rx="2" ry="2" />
<text  x="1168.76" y="479.5" ></text>
</g>
<g >
<title>std::__make_heap&lt;__gnu_cxx::__normal_iterator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position*, std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::heap_compare&gt; &gt; (6 samples, 0.01%)</title><rect x="212.7" y="149" width="0.1" height="15.0" fill="rgb(224,102,21)" rx="2" ry="2" />
<text  x="215.70" y="159.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (6 samples, 0.01%)</title><rect x="664.7" y="453" width="0.1" height="15.0" fill="rgb(213,129,18)" rx="2" ry="2" />
<text  x="667.65" y="463.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::get_mutations (40 samples, 0.08%)</title><rect x="856.0" y="405" width="1.0" height="15.0" fill="rgb(236,82,38)" rx="2" ry="2" />
<text  x="859.01" y="415.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::operator (21 samples, 0.04%)</title><rect x="737.2" y="293" width="0.5" height="15.0" fill="rgb(233,200,5)" rx="2" ry="2" />
<text  x="740.21" y="303.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (26 samples, 0.05%)</title><rect x="458.5" y="309" width="0.7" height="15.0" fill="rgb(254,180,23)" rx="2" ry="2" />
<text  x="461.51" y="319.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::operator== (14 samples, 0.03%)</title><rect x="735.9" y="293" width="0.3" height="15.0" fill="rgb(240,82,35)" rx="2" ry="2" />
<text  x="738.89" y="303.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_9has_tokenERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES28_S2B_ (11 samples, 0.02%)</title><rect x="946.3" y="341" width="0.3" height="15.0" fill="rgb(252,90,38)" rx="2" ry="2" />
<text  x="949.34" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (36 samples, 0.08%)</title><rect x="995.5" y="229" width="0.9" height="15.0" fill="rgb(236,48,31)" rx="2" ry="2" />
<text  x="998.47" y="239.5" ></text>
</g>
<g >
<title>mutation_fragment::consume&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (3,857 samples, 8.09%)</title><rect x="299.1" y="261" width="95.5" height="15.0" fill="rgb(238,71,5)" rx="2" ry="2" />
<text  x="302.07" y="271.5" >mutation_fr..</text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;flat_mutation_reader::peek (5 samples, 0.01%)</title><rect x="417.6" y="405" width="0.1" height="15.0" fill="rgb(221,224,52)" rx="2" ry="2" />
<text  x="420.60" y="415.5" ></text>
</g>
<g >
<title>operator delete (33 samples, 0.07%)</title><rect x="30.6" y="485" width="0.8" height="15.0" fill="rgb(207,36,44)" rx="2" ry="2" />
<text  x="33.58" y="495.5" ></text>
</g>
<g >
<title>abstract_type::validate&lt;managed_bytes_basic_view&lt; (32 samples, 0.07%)</title><rect x="884.4" y="277" width="0.8" height="15.0" fill="rgb(243,145,25)" rx="2" ry="2" />
<text  x="887.41" y="287.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (14 samples, 0.03%)</title><rect x="285.8" y="405" width="0.4" height="15.0" fill="rgb(223,196,30)" rx="2" ry="2" />
<text  x="288.82" y="415.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::tombstone_for_row (23 samples, 0.05%)</title><rect x="367.1" y="213" width="0.6" height="15.0" fill="rgb(232,106,42)" rx="2" ry="2" />
<text  x="370.09" y="223.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (6 samples, 0.01%)</title><rect x="657.6" y="421" width="0.1" height="15.0" fill="rgb(221,133,8)" rx="2" ry="2" />
<text  x="660.60" y="431.5" ></text>
</g>
</g>
</svg>
