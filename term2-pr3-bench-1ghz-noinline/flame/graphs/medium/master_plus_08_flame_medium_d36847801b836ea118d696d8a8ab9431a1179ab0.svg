<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="710" onload="init(evt)" viewBox="0 0 1200 710" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="710.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="693" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="693" > </text>
<g id="frames">
<g >
<title>ser::writer_of_std__optional__qr_cell&lt;bytes_ostream&gt;::write (79 samples, 0.16%)</title><rect x="359.7" y="165" width="1.9" height="15.0" fill="rgb(235,143,22)" rx="2" ry="2" />
<text  x="362.66" y="175.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::take_value (16 samples, 0.03%)</title><rect x="51.6" y="469" width="0.4" height="15.0" fill="rgb(229,66,21)" rx="2" ry="2" />
<text  x="54.63" y="479.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (384 samples, 0.79%)</title><rect x="308.3" y="213" width="9.3" height="15.0" fill="rgb(243,149,32)" rx="2" ry="2" />
<text  x="311.27" y="223.5" ></text>
</g>
<g >
<title>db::is_datacenter_local (7 samples, 0.01%)</title><rect x="972.4" y="357" width="0.1" height="15.0" fill="rgb(254,172,45)" rx="2" ry="2" />
<text  x="975.37" y="367.5" ></text>
</g>
<g >
<title>seastar::chunked_fifo&lt;seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::entry, 128ul&gt;::emplace_back&lt;reader_concurrency_semaphore::entry, seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;&amp;, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;&amp;&gt; (225 samples, 0.46%)</title><rect x="1029.5" y="181" width="5.4" height="15.0" fill="rgb(220,96,48)" rx="2" ry="2" />
<text  x="1032.47" y="191.5" ></text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::EqualElement&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt;&amp;&gt; (61 samples, 0.13%)</title><rect x="756.2" y="341" width="1.5" height="15.0" fill="rgb(247,37,29)" rx="2" ry="2" />
<text  x="759.21" y="351.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (6 samples, 0.01%)</title><rect x="693.0" y="453" width="0.2" height="15.0" fill="rgb(244,6,50)" rx="2" ry="2" />
<text  x="696.01" y="463.5" ></text>
</g>
<g >
<title>operator delete (28 samples, 0.06%)</title><rect x="814.8" y="373" width="0.7" height="15.0" fill="rgb(222,175,5)" rx="2" ry="2" />
<text  x="817.79" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (14 samples, 0.03%)</title><rect x="52.2" y="469" width="0.3" height="15.0" fill="rgb(239,50,53)" rx="2" ry="2" />
<text  x="55.16" y="479.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (16 samples, 0.03%)</title><rect x="862.0" y="453" width="0.4" height="15.0" fill="rgb(213,94,6)" rx="2" ry="2" />
<text  x="864.99" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::allocate_large_and_trim (5 samples, 0.01%)</title><rect x="974.8" y="293" width="0.1" height="15.0" fill="rgb(212,204,18)" rx="2" ry="2" />
<text  x="977.76" y="303.5" ></text>
</g>
<g >
<title>dht::sharder::shard_of (8 samples, 0.02%)</title><rect x="1003.3" y="293" width="0.2" height="15.0" fill="rgb(228,104,29)" rx="2" ry="2" />
<text  x="1006.26" y="303.5" ></text>
</g>
<g >
<title>operator new (27 samples, 0.06%)</title><rect x="762.4" y="373" width="0.6" height="15.0" fill="rgb(226,6,22)" rx="2" ry="2" />
<text  x="765.37" y="383.5" ></text>
</g>
<g >
<title>utils::phased_barrier::start (23 samples, 0.05%)</title><rect x="1041.9" y="245" width="0.5" height="15.0" fill="rgb(245,102,30)" rx="2" ry="2" />
<text  x="1044.86" y="255.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (5 samples, 0.01%)</title><rect x="121.7" y="293" width="0.2" height="15.0" fill="rgb(236,178,3)" rx="2" ry="2" />
<text  x="124.75" y="303.5" ></text>
</g>
<g >
<title>std::__make_heap&lt;__gnu_cxx::__normal_iterator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position*, std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::heap_compare&gt; &gt; (7 samples, 0.01%)</title><rect x="213.4" y="149" width="0.2" height="15.0" fill="rgb(231,103,16)" rx="2" ry="2" />
<text  x="216.45" y="159.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (33 samples, 0.07%)</title><rect x="862.7" y="469" width="0.8" height="15.0" fill="rgb(253,139,54)" rx="2" ry="2" />
<text  x="865.67" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::_M_range_initialize&lt;nonwrapping_interval&lt;dht::ring_position&gt; const*&gt; (103 samples, 0.21%)</title><rect x="943.1" y="389" width="2.6" height="15.0" fill="rgb(206,206,21)" rx="2" ry="2" />
<text  x="946.15" y="399.5" ></text>
</g>
<g >
<title>database::find_schema (309 samples, 0.64%)</title><rect x="752.1" y="405" width="7.5" height="15.0" fill="rgb(234,13,12)" rx="2" ry="2" />
<text  x="755.09" y="415.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (97 samples, 0.20%)</title><rect x="340.8" y="165" width="2.4" height="15.0" fill="rgb(208,161,24)" rx="2" ry="2" />
<text  x="343.83" y="175.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_pausable_in_thread&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;sstables::sstable_writer&gt; &gt;, flat_mutation_reader::no_filter&gt; (14 samples, 0.03%)</title><rect x="21.4" y="453" width="0.4" height="15.0" fill="rgb(254,53,18)" rx="2" ry="2" />
<text  x="24.45" y="463.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::impl (19 samples, 0.04%)</title><rect x="446.1" y="277" width="0.5" height="15.0" fill="rgb(225,169,23)" rx="2" ry="2" />
<text  x="449.13" y="287.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;auth::resource, auth::resource, std::allocator&lt;auth::resource&gt;, std::__detail::_Identity, std::equal_to&lt;auth::resource&gt;, std::hash&lt;auth::resource&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;::_M_find_before_node (9 samples, 0.02%)</title><rect x="811.6" y="341" width="0.2" height="15.0" fill="rgb(227,129,31)" rx="2" ry="2" />
<text  x="814.60" y="351.5" ></text>
</g>
<g >
<title>partition_key::from_range&lt;std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt; const&amp;&gt; (164 samples, 0.34%)</title><rect x="929.5" y="389" width="4.0" height="15.0" fill="rgb(232,38,38)" rx="2" ry="2" />
<text  x="932.46" y="399.5" ></text>
</g>
<g >
<title>[unknown] (14 samples, 0.03%)</title><rect x="21.4" y="581" width="0.4" height="15.0" fill="rgb(241,216,1)" rx="2" ry="2" />
<text  x="24.45" y="591.5" ></text>
</g>
<g >
<title>absl::container_internal::operator== (5 samples, 0.01%)</title><rect x="823.8" y="325" width="0.1" height="15.0" fill="rgb(236,133,35)" rx="2" ry="2" />
<text  x="826.82" y="335.5" ></text>
</g>
<g >
<title>mutation_source::mutation_source (91 samples, 0.19%)</title><rect x="620.6" y="421" width="2.2" height="15.0" fill="rgb(226,216,26)" rx="2" ry="2" />
<text  x="623.59" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::~vector (6 samples, 0.01%)</title><rect x="1055.6" y="293" width="0.2" height="15.0" fill="rgb(246,202,41)" rx="2" ry="2" />
<text  x="1058.65" y="303.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (6 samples, 0.01%)</title><rect x="655.7" y="453" width="0.1" height="15.0" fill="rgb(215,0,13)" rx="2" ry="2" />
<text  x="658.67" y="463.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::clear (5 samples, 0.01%)</title><rect x="867.8" y="469" width="0.1" height="15.0" fill="rgb(254,197,52)" rx="2" ry="2" />
<text  x="870.79" y="479.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::~holder (15 samples, 0.03%)</title><rect x="429.0" y="341" width="0.4" height="15.0" fill="rgb(249,203,29)" rx="2" ry="2" />
<text  x="432.03" y="351.5" ></text>
</g>
<g >
<title>operator new (32 samples, 0.07%)</title><rect x="905.2" y="293" width="0.7" height="15.0" fill="rgb(233,183,45)" rx="2" ry="2" />
<text  x="908.15" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (8 samples, 0.02%)</title><rect x="555.6" y="309" width="0.2" height="15.0" fill="rgb(213,156,41)" rx="2" ry="2" />
<text  x="558.56" y="319.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::response_count (6 samples, 0.01%)</title><rect x="702.8" y="405" width="0.1" height="15.0" fill="rgb(244,85,35)" rx="2" ry="2" />
<text  x="705.77" y="415.5" ></text>
</g>
<g >
<title>bound_view::from_range_end&lt;nonwrapping_interval&gt; (8 samples, 0.02%)</title><rect x="212.8" y="117" width="0.2" height="15.0" fill="rgb(236,209,29)" rx="2" ry="2" />
<text  x="215.84" y="127.5" ></text>
</g>
<g >
<title>global_schema_ptr::get (14 samples, 0.03%)</title><rect x="1042.4" y="261" width="0.4" height="15.0" fill="rgb(242,214,37)" rx="2" ry="2" />
<text  x="1045.42" y="271.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, flat_mutation_reader::impl::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (28 samples, 0.06%)</title><rect x="683.3" y="389" width="0.7" height="15.0" fill="rgb(210,226,27)" rx="2" ry="2" />
<text  x="686.34" y="399.5" ></text>
</g>
<g >
<title>operator delete (81 samples, 0.17%)</title><rect x="401.8" y="245" width="1.9" height="15.0" fill="rgb(238,44,26)" rx="2" ry="2" />
<text  x="404.75" y="255.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (9 samples, 0.02%)</title><rect x="743.4" y="261" width="0.2" height="15.0" fill="rgb(249,173,28)" rx="2" ry="2" />
<text  x="746.42" y="271.5" ></text>
</g>
<g >
<title>service::client_state::has_access (5 samples, 0.01%)</title><rect x="21.1" y="437" width="0.2" height="15.0" fill="rgb(240,100,52)" rx="2" ry="2" />
<text  x="24.13" y="447.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;managed_bytes&gt;::make&lt;managed_bytes&gt; (43 samples, 0.09%)</title><rect x="904.9" y="309" width="1.1" height="15.0" fill="rgb(229,36,27)" rx="2" ry="2" />
<text  x="907.93" y="319.5" ></text>
</g>
<g >
<title>database::find_column_family (49 samples, 0.10%)</title><rect x="1020.5" y="245" width="1.2" height="15.0" fill="rgb(250,136,24)" rx="2" ry="2" />
<text  x="1023.48" y="255.5" ></text>
</g>
<g >
<title>operator delete (26 samples, 0.05%)</title><rect x="667.5" y="469" width="0.7" height="15.0" fill="rgb(205,81,40)" rx="2" ry="2" />
<text  x="670.53" y="479.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (13 samples, 0.03%)</title><rect x="799.6" y="69" width="0.4" height="15.0" fill="rgb(205,224,2)" rx="2" ry="2" />
<text  x="802.64" y="79.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;std::function&lt;partition_presence_checker_result  (7 samples, 0.01%)</title><rect x="605.1" y="421" width="0.2" height="15.0" fill="rgb(211,75,42)" rx="2" ry="2" />
<text  x="608.13" y="431.5" ></text>
</g>
<g >
<title>service::get_local_priority_manager (11 samples, 0.02%)</title><rect x="608.5" y="437" width="0.3" height="15.0" fill="rgb(248,71,12)" rx="2" ry="2" />
<text  x="611.51" y="447.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;partition_snapshot&gt;::make&lt;seastar::lw_shared_ptr&lt;schema const&gt;&amp;, logalloc::region&amp;, mutation_cleaner&amp;, partition_entry*, cache_tracker*&amp;, unsigned long&amp;&gt; (56 samples, 0.12%)</title><rect x="512.4" y="293" width="1.3" height="15.0" fill="rgb(205,83,14)" rx="2" ry="2" />
<text  x="515.38" y="303.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (66 samples, 0.14%)</title><rect x="15.2" y="373" width="1.6" height="15.0" fill="rgb(218,204,37)" rx="2" ry="2" />
<text  x="18.24" y="383.5" ></text>
</g>
<g >
<title>row_tombstone::apply (22 samples, 0.05%)</title><rect x="385.3" y="213" width="0.5" height="15.0" fill="rgb(226,27,23)" rx="2" ry="2" />
<text  x="388.26" y="223.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::push_static_row (5 samples, 0.01%)</title><rect x="248.3" y="277" width="0.1" height="15.0" fill="rgb(225,24,45)" rx="2" ry="2" />
<text  x="251.28" y="287.5" ></text>
</g>
<g >
<title>operator new (23 samples, 0.05%)</title><rect x="943.9" y="373" width="0.6" height="15.0" fill="rgb(222,22,49)" rx="2" ry="2" />
<text  x="946.90" y="383.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::~_Variant_storage (5 samples, 0.01%)</title><rect x="409.9" y="261" width="0.2" height="15.0" fill="rgb(212,53,3)" rx="2" ry="2" />
<text  x="412.93" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%)</title><rect x="668.0" y="453" width="0.2" height="15.0" fill="rgb(253,6,37)" rx="2" ry="2" />
<text  x="671.04" y="463.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql3::metadata&gt;::shared_ptr_count_for&lt;cql3::metadata&amp;&gt; (9 samples, 0.02%)</title><rect x="650.9" y="453" width="0.2" height="15.0" fill="rgb(245,97,17)" rx="2" ry="2" />
<text  x="653.92" y="463.5" ></text>
</g>
<g >
<title>operator new (34 samples, 0.07%)</title><rect x="606.4" y="421" width="0.8" height="15.0" fill="rgb(212,149,7)" rx="2" ry="2" />
<text  x="609.37" y="431.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::deallocate (27 samples, 0.06%)</title><rect x="558.6" y="293" width="0.7" height="15.0" fill="rgb(250,82,31)" rx="2" ry="2" />
<text  x="561.61" y="303.5" ></text>
</g>
<g >
<title>cql3::expr::possible_lhs_values (1,216 samples, 2.51%)</title><rect x="883.1" y="405" width="29.6" height="15.0" fill="rgb(226,183,11)" rx="2" ry="2" />
<text  x="886.13" y="415.5" >cq..</text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (6 samples, 0.01%)</title><rect x="1001.1" y="245" width="0.1" height="15.0" fill="rgb(214,213,41)" rx="2" ry="2" />
<text  x="1004.07" y="255.5" ></text>
</g>
<g >
<title>std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;std::optional&lt;auth::resource&gt; &gt;, seastar::future&lt;bool&gt; &gt; &gt;::operator (37 samples, 0.08%)</title><rect x="809.0" y="309" width="0.9" height="15.0" fill="rgb(210,12,11)" rx="2" ry="2" />
<text  x="811.97" y="319.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::operator (5 samples, 0.01%)</title><rect x="845.6" y="341" width="0.1" height="15.0" fill="rgb(239,170,52)" rx="2" ry="2" />
<text  x="848.62" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::~vector (5 samples, 0.01%)</title><rect x="940.0" y="389" width="0.1" height="15.0" fill="rgb(228,82,52)" rx="2" ry="2" />
<text  x="942.98" y="399.5" ></text>
</g>
<g >
<title>__dynamic_cast (11 samples, 0.02%)</title><rect x="11.7" y="581" width="0.3" height="15.0" fill="rgb(238,57,48)" rx="2" ry="2" />
<text  x="14.70" y="591.5" ></text>
</g>
<g >
<title>operator new (14 samples, 0.03%)</title><rect x="517.2" y="341" width="0.4" height="15.0" fill="rgb(214,105,24)" rx="2" ry="2" />
<text  x="520.22" y="351.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::get_promise (9 samples, 0.02%)</title><rect x="960.0" y="389" width="0.2" height="15.0" fill="rgb(205,48,21)" rx="2" ry="2" />
<text  x="963.00" y="399.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (27 samples, 0.06%)</title><rect x="557.9" y="293" width="0.6" height="15.0" fill="rgb(236,5,11)" rx="2" ry="2" />
<text  x="560.88" y="303.5" ></text>
</g>
<g >
<title>operator delete (12 samples, 0.02%)</title><rect x="628.9" y="485" width="0.2" height="15.0" fill="rgb(245,40,42)" rx="2" ry="2" />
<text  x="631.85" y="495.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::emplace_back&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;&amp;&gt; (44 samples, 0.09%)</title><rect x="766.3" y="373" width="1.0" height="15.0" fill="rgb(241,160,5)" rx="2" ry="2" />
<text  x="769.27" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (12 samples, 0.02%)</title><rect x="692.0" y="485" width="0.3" height="15.0" fill="rgb(230,118,16)" rx="2" ry="2" />
<text  x="695.03" y="495.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextToken (44 samples, 0.09%)</title><rect x="15.6" y="293" width="1.1" height="15.0" fill="rgb(243,67,20)" rx="2" ry="2" />
<text  x="18.60" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::at (40 samples, 0.08%)</title><rect x="1020.7" y="229" width="1.0" height="15.0" fill="rgb(216,182,8)" rx="2" ry="2" />
<text  x="1023.70" y="239.5" ></text>
</g>
<g >
<title>operator new (28 samples, 0.06%)</title><rect x="450.2" y="293" width="0.7" height="15.0" fill="rgb(230,211,21)" rx="2" ry="2" />
<text  x="453.20" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (28 samples, 0.06%)</title><rect x="909.9" y="309" width="0.7" height="15.0" fill="rgb(237,78,12)" rx="2" ry="2" />
<text  x="912.92" y="319.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (26 samples, 0.05%)</title><rect x="264.2" y="325" width="0.7" height="15.0" fill="rgb(248,179,5)" rx="2" ry="2" />
<text  x="267.23" y="335.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;std::function&lt;std::function&lt;partition_presence_checker_result  (34 samples, 0.07%)</title><rect x="621.9" y="405" width="0.9" height="15.0" fill="rgb(219,206,41)" rx="2" ry="2" />
<text  x="624.93" y="415.5" ></text>
</g>
<g >
<title>abstract_type::without_reversed (14 samples, 0.03%)</title><rect x="881.6" y="405" width="0.4" height="15.0" fill="rgb(205,199,7)" rx="2" ry="2" />
<text  x="884.65" y="415.5" ></text>
</g>
<g >
<title>bound_view::from_range_start&lt;nonwrapping_interval&gt; (20 samples, 0.04%)</title><rect x="237.4" y="181" width="0.5" height="15.0" fill="rgb(224,178,24)" rx="2" ry="2" />
<text  x="240.44" y="191.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (7 samples, 0.01%)</title><rect x="295.0" y="229" width="0.2" height="15.0" fill="rgb(232,164,9)" rx="2" ry="2" />
<text  x="298.00" y="239.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (10 samples, 0.02%)</title><rect x="569.7" y="373" width="0.2" height="15.0" fill="rgb(220,62,30)" rx="2" ry="2" />
<text  x="572.66" y="383.5" ></text>
</g>
<g >
<title>__tls_init (7 samples, 0.01%)</title><rect x="524.7" y="293" width="0.2" height="15.0" fill="rgb(232,167,35)" rx="2" ry="2" />
<text  x="527.70" y="303.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reclaiming_disabled&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_range_tombstone (164 samples, 0.34%)</title><rect x="217.4" y="197" width="4.0" height="15.0" fill="rgb(252,111,0)" rx="2" ry="2" />
<text  x="220.40" y="207.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (23 samples, 0.05%)</title><rect x="62.8" y="437" width="0.6" height="15.0" fill="rgb(236,210,52)" rx="2" ry="2" />
<text  x="65.80" y="447.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::set_value&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; (18 samples, 0.04%)</title><rect x="605.7" y="437" width="0.4" height="15.0" fill="rgb(221,132,14)" rx="2" ry="2" />
<text  x="608.66" y="447.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (15 samples, 0.03%)</title><rect x="136.5" y="229" width="0.3" height="15.0" fill="rgb(232,161,43)" rx="2" ry="2" />
<text  x="139.48" y="239.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_max_result_size (98 samples, 0.20%)</title><rect x="1134.7" y="421" width="2.4" height="15.0" fill="rgb(208,189,25)" rx="2" ry="2" />
<text  x="1137.71" y="431.5" ></text>
</g>
<g >
<title>locator::i_endpoint_snitch::snitch_instance (8 samples, 0.02%)</title><rect x="1098.7" y="293" width="0.2" height="15.0" fill="rgb(224,17,50)" rx="2" ry="2" />
<text  x="1101.71" y="303.5" ></text>
</g>
<g >
<title>database::query (22 samples, 0.05%)</title><rect x="1008.3" y="277" width="0.5" height="15.0" fill="rgb(206,116,21)" rx="2" ry="2" />
<text  x="1011.30" y="287.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (12 samples, 0.02%)</title><rect x="1150.3" y="469" width="0.3" height="15.0" fill="rgb(215,207,13)" rx="2" ry="2" />
<text  x="1153.27" y="479.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_M_reset (6 samples, 0.01%)</title><rect x="1077.3" y="325" width="0.1" height="15.0" fill="rgb(224,197,32)" rx="2" ry="2" />
<text  x="1080.30" y="335.5" ></text>
</g>
<g >
<title>seastar::app_template::run (47,461 samples, 97.96%)</title><rect x="21.9" y="597" width="1155.9" height="15.0" fill="rgb(248,45,39)" rx="2" ry="2" />
<text  x="24.86" y="607.5" >seastar::app_template::run</text>
</g>
<g >
<title>reader_permit::consume (11 samples, 0.02%)</title><rect x="151.7" y="181" width="0.3" height="15.0" fill="rgb(217,34,33)" rx="2" ry="2" />
<text  x="154.73" y="191.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;void&gt;::set_value&lt;&gt; (16 samples, 0.03%)</title><rect x="31.4" y="485" width="0.4" height="15.0" fill="rgb(209,61,34)" rx="2" ry="2" />
<text  x="34.39" y="495.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_M_copy_assign (7 samples, 0.01%)</title><rect x="804.8" y="277" width="0.2" height="15.0" fill="rgb(231,170,23)" rx="2" ry="2" />
<text  x="807.80" y="287.5" ></text>
</g>
<g >
<title>std::visit&lt;overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::has_token (7 samples, 0.01%)</title><rect x="883.0" y="389" width="0.1" height="15.0" fill="rgb(254,106,29)" rx="2" ry="2" />
<text  x="885.96" y="399.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_nodes (8 samples, 0.02%)</title><rect x="1105.4" y="341" width="0.2" height="15.0" fill="rgb(232,32,22)" rx="2" ry="2" />
<text  x="1108.41" y="351.5" ></text>
</g>
<g >
<title>std::type_info::operator== (11 samples, 0.02%)</title><rect x="1074.7" y="277" width="0.3" height="15.0" fill="rgb(213,111,22)" rx="2" ry="2" />
<text  x="1077.74" y="287.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_rehash (62 samples, 0.13%)</title><rect x="1158.2" y="437" width="1.5" height="15.0" fill="rgb(250,26,24)" rx="2" ry="2" />
<text  x="1161.19" y="447.5" ></text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (10 samples, 0.02%)</title><rect x="14.3" y="613" width="0.2" height="15.0" fill="rgb(250,111,3)" rx="2" ry="2" />
<text  x="17.26" y="623.5" ></text>
</g>
<g >
<title>cql3::query_options::query_options (156 samples, 0.32%)</title><rect x="848.4" y="421" width="3.8" height="15.0" fill="rgb(242,152,32)" rx="2" ry="2" />
<text  x="851.35" y="431.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::clear (5 samples, 0.01%)</title><rect x="636.3" y="485" width="0.1" height="15.0" fill="rgb(253,171,3)" rx="2" ry="2" />
<text  x="639.30" y="495.5" ></text>
</g>
<g >
<title>std::make_unique&lt;compact_for_query&lt; (66 samples, 0.14%)</title><rect x="412.6" y="357" width="1.6" height="15.0" fill="rgb(212,163,17)" rx="2" ry="2" />
<text  x="415.64" y="367.5" ></text>
</g>
<g >
<title>row::compact_and_expire (7 samples, 0.01%)</title><rect x="683.8" y="293" width="0.1" height="15.0" fill="rgb(240,73,9)" rx="2" ry="2" />
<text  x="686.77" y="303.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (8 samples, 0.02%)</title><rect x="1148.8" y="485" width="0.2" height="15.0" fill="rgb(219,37,0)" rx="2" ry="2" />
<text  x="1151.79" y="495.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (8 samples, 0.02%)</title><rect x="568.9" y="325" width="0.2" height="15.0" fill="rgb(224,118,11)" rx="2" ry="2" />
<text  x="571.91" y="335.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (5 samples, 0.01%)</title><rect x="741.2" y="277" width="0.1" height="15.0" fill="rgb(226,107,50)" rx="2" ry="2" />
<text  x="744.21" y="287.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::find&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (169 samples, 0.35%)</title><rect x="755.2" y="357" width="4.1" height="15.0" fill="rgb(245,188,27)" rx="2" ry="2" />
<text  x="758.16" y="367.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (110 samples, 0.23%)</title><rect x="16.9" y="373" width="2.7" height="15.0" fill="rgb(231,224,18)" rx="2" ry="2" />
<text  x="19.89" y="383.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::allocate (125 samples, 0.26%)</title><rect x="274.6" y="293" width="3.1" height="15.0" fill="rgb(238,188,54)" rx="2" ry="2" />
<text  x="277.61" y="303.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (28 samples, 0.06%)</title><rect x="1132.3" y="373" width="0.7" height="15.0" fill="rgb(221,28,2)" rx="2" ry="2" />
<text  x="1135.32" y="383.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::clear (8 samples, 0.02%)</title><rect x="580.3" y="341" width="0.2" height="15.0" fill="rgb(252,196,15)" rx="2" ry="2" />
<text  x="583.26" y="351.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (52 samples, 0.11%)</title><rect x="294.0" y="277" width="1.2" height="15.0" fill="rgb(220,131,7)" rx="2" ry="2" />
<text  x="296.97" y="287.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (6 samples, 0.01%)</title><rect x="215.8" y="197" width="0.1" height="15.0" fill="rgb(237,118,37)" rx="2" ry="2" />
<text  x="218.76" y="207.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (10 samples, 0.02%)</title><rect x="51.4" y="469" width="0.2" height="15.0" fill="rgb(231,197,48)" rx="2" ry="2" />
<text  x="54.38" y="479.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::maybe_decay_reserve (8 samples, 0.02%)</title><rect x="160.7" y="213" width="0.2" height="15.0" fill="rgb(250,46,15)" rx="2" ry="2" />
<text  x="163.74" y="223.5" ></text>
</g>
<g >
<title>row::row (1,321 samples, 2.73%)</title><rect x="167.0" y="149" width="32.2" height="15.0" fill="rgb(236,113,42)" rx="2" ry="2" />
<text  x="170.00" y="159.5" >ro..</text>
</g>
<g >
<title>service::storage_proxy::query_singular (5,605 samples, 11.57%)</title><rect x="968.1" y="373" width="136.5" height="15.0" fill="rgb(234,218,19)" rx="2" ry="2" />
<text  x="971.11" y="383.5" >service::storage_..</text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::emplace_back&lt;std::_List_iterator&lt;flat_mutation_reader&gt; const&amp;, mutation_fragment&gt; (18 samples, 0.04%)</title><rect x="136.9" y="245" width="0.4" height="15.0" fill="rgb(206,196,48)" rx="2" ry="2" />
<text  x="139.90" y="255.5" ></text>
</g>
<g >
<title>cql3::authorized_prepared_statements_cache::insert (517 samples, 1.07%)</title><rect x="732.7" y="405" width="12.6" height="15.0" fill="rgb(237,190,22)" rx="2" ry="2" />
<text  x="735.68" y="415.5" ></text>
</g>
<g >
<title>cql3::raw_value_view::make_temporary (6 samples, 0.01%)</title><rect x="863.2" y="293" width="0.1" height="15.0" fill="rgb(229,57,16)" rx="2" ry="2" />
<text  x="866.16" y="303.5" ></text>
</g>
<g >
<title>database::find_uuid (173 samples, 0.36%)</title><rect x="819.3" y="357" width="4.2" height="15.0" fill="rgb(243,107,1)" rx="2" ry="2" />
<text  x="822.27" y="367.5" ></text>
</g>
<g >
<title>operator new (30 samples, 0.06%)</title><rect x="93.4" y="437" width="0.8" height="15.0" fill="rgb(218,188,49)" rx="2" ry="2" />
<text  x="96.45" y="447.5" ></text>
</g>
<g >
<title>std::variant&lt;fragmented_temporary_buffer::view, managed_bytes_basic_view&lt; (17 samples, 0.04%)</title><rect x="906.1" y="309" width="0.4" height="15.0" fill="rgb(210,65,17)" rx="2" ry="2" />
<text  x="909.12" y="319.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (27 samples, 0.06%)</title><rect x="784.1" y="229" width="0.7" height="15.0" fill="rgb(239,41,9)" rx="2" ry="2" />
<text  x="787.15" y="239.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (24 samples, 0.05%)</title><rect x="1061.7" y="293" width="0.6" height="15.0" fill="rgb(231,22,8)" rx="2" ry="2" />
<text  x="1064.71" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::find_and_unlink_span_reclaiming (7 samples, 0.01%)</title><rect x="543.8" y="261" width="0.2" height="15.0" fill="rgb(231,53,50)" rx="2" ry="2" />
<text  x="546.85" y="271.5" ></text>
</g>
<g >
<title>seastar::promise&lt;void&gt;::promise (74 samples, 0.15%)</title><rect x="71.7" y="389" width="1.8" height="15.0" fill="rgb(221,166,24)" rx="2" ry="2" />
<text  x="74.72" y="399.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (18 samples, 0.04%)</title><rect x="1144.6" y="501" width="0.4" height="15.0" fill="rgb(249,158,9)" rx="2" ry="2" />
<text  x="1147.55" y="511.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextTokenStr (41 samples, 0.08%)</title><rect x="15.7" y="277" width="1.0" height="15.0" fill="rgb(247,9,31)" rx="2" ry="2" />
<text  x="18.68" y="287.5" ></text>
</g>
<g >
<title>std::_Optional_base_impl&lt;mutation_querier, std::_Optional_base&lt;mutation_querier, false, false&gt; &gt;::_M_construct&lt;mutation_querier&gt; (10 samples, 0.02%)</title><rect x="314.9" y="181" width="0.2" height="15.0" fill="rgb(240,76,40)" rx="2" ry="2" />
<text  x="317.89" y="191.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::process_where_clause (15 samples, 0.03%)</title><rect x="20.4" y="421" width="0.4" height="15.0" fill="rgb(234,160,18)" rx="2" ry="2" />
<text  x="23.45" y="431.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::~holder (6 samples, 0.01%)</title><rect x="456.4" y="325" width="0.1" height="15.0" fill="rgb(214,13,0)" rx="2" ry="2" />
<text  x="459.36" y="335.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::clear (13 samples, 0.03%)</title><rect x="663.7" y="469" width="0.3" height="15.0" fill="rgb(207,98,39)" rx="2" ry="2" />
<text  x="666.66" y="479.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (65 samples, 0.13%)</title><rect x="71.9" y="373" width="1.6" height="15.0" fill="rgb(228,9,36)" rx="2" ry="2" />
<text  x="74.94" y="383.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::abstract_read_executor&gt;::~shared_ptr (6 samples, 0.01%)</title><rect x="967.6" y="373" width="0.1" height="15.0" fill="rgb(206,54,40)" rx="2" ry="2" />
<text  x="970.58" y="383.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (23 samples, 0.05%)</title><rect x="1049.2" y="245" width="0.5" height="15.0" fill="rgb(224,142,18)" rx="2" ry="2" />
<text  x="1052.17" y="255.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (14 samples, 0.03%)</title><rect x="926.9" y="389" width="0.3" height="15.0" fill="rgb(242,147,28)" rx="2" ry="2" />
<text  x="929.90" y="399.5" ></text>
</g>
<g >
<title>row_marker::compact_and_expire (11 samples, 0.02%)</title><rect x="387.5" y="229" width="0.2" height="15.0" fill="rgb(240,81,11)" rx="2" ry="2" />
<text  x="390.48" y="239.5" ></text>
</g>
<g >
<title>ser::writer_of_qr_cell&lt;bytes_ostream&gt;::skip_timestamp (98 samples, 0.20%)</title><rect x="357.3" y="165" width="2.4" height="15.0" fill="rgb(225,109,23)" rx="2" ry="2" />
<text  x="360.28" y="175.5" ></text>
</g>
<g >
<title>do_cql_test (275 samples, 0.57%)</title><rect x="14.7" y="549" width="6.7" height="15.0" fill="rgb(218,169,31)" rx="2" ry="2" />
<text  x="17.70" y="559.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment&lt;schema const&amp;, rows_entry const&amp;&gt; (1,783 samples, 3.68%)</title><rect x="165.4" y="181" width="43.4" height="15.0" fill="rgb(208,44,46)" rx="2" ry="2" />
<text  x="168.42" y="191.5" >muta..</text>
</g>
<g >
<title>std::_Function_handler&lt;bool  (62 samples, 0.13%)</title><rect x="1176.2" y="517" width="1.5" height="15.0" fill="rgb(237,180,4)" rx="2" ry="2" />
<text  x="1179.24" y="527.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;bytes_ostream::chunk, std::default_delete&lt;bytes_ostream::chunk&gt; &gt;::~unique_ptr (6 samples, 0.01%)</title><rect x="597.0" y="373" width="0.2" height="15.0" fill="rgb(247,228,23)" rx="2" ry="2" />
<text  x="600.04" y="383.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::modification_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::do_flush (35 samples, 0.07%)</title><rect x="862.6" y="485" width="0.9" height="15.0" fill="rgb(230,79,47)" rx="2" ry="2" />
<text  x="865.62" y="495.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_erase_at_end (37 samples, 0.08%)</title><rect x="362.9" y="197" width="0.9" height="15.0" fill="rgb(229,108,24)" rx="2" ry="2" />
<text  x="365.93" y="207.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (82 samples, 0.17%)</title><rect x="972.9" y="341" width="2.0" height="15.0" fill="rgb(251,38,6)" rx="2" ry="2" />
<text  x="975.89" y="351.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (58 samples, 0.12%)</title><rect x="1166.6" y="485" width="1.4" height="15.0" fill="rgb(208,27,17)" rx="2" ry="2" />
<text  x="1169.57" y="495.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::handle_exception&lt;cql3::query_processor::execute_prepared (13 samples, 0.03%)</title><rect x="745.3" y="405" width="0.4" height="15.0" fill="rgb(232,153,46)" rx="2" ry="2" />
<text  x="748.35" y="415.5" ></text>
</g>
<g >
<title>ser::qr_partition__static_row&lt;bytes_ostream&gt;::qr_partition__static_row (23 samples, 0.05%)</title><rect x="314.2" y="181" width="0.5" height="15.0" fill="rgb(208,30,1)" rx="2" ry="2" />
<text  x="317.16" y="191.5" ></text>
</g>
<g >
<title>__dynamic_cast (24 samples, 0.05%)</title><rect x="876.9" y="421" width="0.6" height="15.0" fill="rgb(215,217,0)" rx="2" ry="2" />
<text  x="879.95" y="431.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, std::pair&lt;auth::role_or_anonymous, auth::resource&gt;&amp;&amp;, auth::permissions_cache::get (6 samples, 0.01%)</title><rect x="805.3" y="277" width="0.1" height="15.0" fill="rgb(211,148,28)" rx="2" ry="2" />
<text  x="808.26" y="287.5" ></text>
</g>
<g >
<title>utils::tuple_hash::hash_impl&lt;1ul, auth::resource_kind, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (34 samples, 0.07%)</title><rect x="799.2" y="101" width="0.9" height="15.0" fill="rgb(211,54,26)" rx="2" ry="2" />
<text  x="802.22" y="111.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (21 samples, 0.04%)</title><rect x="76.2" y="453" width="0.5" height="15.0" fill="rgb(237,138,23)" rx="2" ry="2" />
<text  x="79.20" y="463.5" ></text>
</g>
<g >
<title>range_tombstone_stream::empty (5 samples, 0.01%)</title><rect x="221.6" y="213" width="0.1" height="15.0" fill="rgb(242,152,7)" rx="2" ry="2" />
<text  x="224.56" y="223.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (196 samples, 0.40%)</title><rect x="15.2" y="421" width="4.7" height="15.0" fill="rgb(234,220,37)" rx="2" ry="2" />
<text  x="18.16" y="431.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::get_mutations (31 samples, 0.06%)</title><rect x="862.7" y="405" width="0.8" height="15.0" fill="rgb(242,110,50)" rx="2" ry="2" />
<text  x="865.70" y="415.5" ></text>
</g>
<g >
<title>allocation_strategy::alloc&lt;blob_storage&gt; (45 samples, 0.09%)</title><rect x="184.3" y="69" width="1.1" height="15.0" fill="rgb(214,29,38)" rx="2" ry="2" />
<text  x="187.34" y="79.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;tracking_allocator&lt;mutation_fragment&gt; &gt;::_S_destroy&lt;tracking_allocator&lt;mutation_fragment&gt;, mutation_fragment&gt; (10 samples, 0.02%)</title><rect x="252.8" y="261" width="0.2" height="15.0" fill="rgb(231,115,8)" rx="2" ry="2" />
<text  x="255.76" y="271.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::allocate (5 samples, 0.01%)</title><rect x="505.5" y="229" width="0.1" height="15.0" fill="rgb(216,187,49)" rx="2" ry="2" />
<text  x="508.46" y="239.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_one (514 samples, 1.06%)</title><rect x="127.3" y="277" width="12.5" height="15.0" fill="rgb(206,160,41)" rx="2" ry="2" />
<text  x="130.33" y="287.5" ></text>
</g>
<g >
<title>seastar::repeat&lt;flat_mutation_reader::impl::consume_pausable&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (27 samples, 0.06%)</title><rect x="683.4" y="373" width="0.6" height="15.0" fill="rgb(232,122,19)" rx="2" ry="2" />
<text  x="686.36" y="383.5" ></text>
</g>
<g >
<title>seastar::internal::future_base::future_base (9 samples, 0.02%)</title><rect x="771.7" y="341" width="0.2" height="15.0" fill="rgb(225,200,45)" rx="2" ry="2" />
<text  x="774.73" y="351.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureIN5utils15timestamped_valINS_11checked_ptrINS_8weak_ptrIN4cql310statements18prepared_statementEEENS_25default_null_deref_actionEEENS5_40authorized_prepared_statements_cache_keyENS5_41authorized_prepared_statements_cache_sizeESt4hashISB_ESt8equal_toISB_ENS5_36authorized_prepared_statements_cache50authorized_prepared_statements_cache_stats_updaterEE9value_ptrEE9then_implIZNSL_14discard_resultEvEUlDpOT_E_NS0_IvEEEET0_OT_ (9 samples, 0.02%)</title><rect x="733.3" y="389" width="0.2" height="15.0" fill="rgb(251,211,9)" rx="2" ry="2" />
<text  x="736.29" y="399.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;partition_key, false, false&gt;::_Optional_base (6 samples, 0.01%)</title><rect x="1076.4" y="293" width="0.1" height="15.0" fill="rgb(218,201,51)" rx="2" ry="2" />
<text  x="1079.35" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (12 samples, 0.02%)</title><rect x="516.6" y="325" width="0.3" height="15.0" fill="rgb(222,2,28)" rx="2" ry="2" />
<text  x="519.62" y="335.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE14then_impl_nrvoIZNS6_14discard_resultEvEUlDpOT_E_NS0_IvEEEET0_OT_ (95 samples, 0.20%)</title><rect x="714.4" y="453" width="2.3" height="15.0" fill="rgb(225,57,50)" rx="2" ry="2" />
<text  x="717.37" y="463.5" ></text>
</g>
<g >
<title>reader_permit::consume_memory (20 samples, 0.04%)</title><rect x="155.1" y="213" width="0.5" height="15.0" fill="rgb(232,60,49)" rx="2" ry="2" />
<text  x="158.09" y="223.5" ></text>
</g>
<g >
<title>database::query (153 samples, 0.32%)</title><rect x="41.8" y="501" width="3.7" height="15.0" fill="rgb(244,181,46)" rx="2" ry="2" />
<text  x="44.76" y="511.5" ></text>
</g>
<g >
<title>seastar::app_template::run_deprecated (47,461 samples, 97.96%)</title><rect x="21.9" y="565" width="1155.9" height="15.0" fill="rgb(223,130,28)" rx="2" ry="2" />
<text  x="24.86" y="575.5" >seastar::app_template::run_deprecated</text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (7 samples, 0.01%)</title><rect x="993.3" y="277" width="0.2" height="15.0" fill="rgb(241,159,52)" rx="2" ry="2" />
<text  x="996.35" y="287.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (27 samples, 0.06%)</title><rect x="1142.1" y="437" width="0.6" height="15.0" fill="rgb(220,117,30)" rx="2" ry="2" />
<text  x="1145.07" y="447.5" ></text>
</g>
<g >
<title>utils::fb_utilities::get_broadcast_address (7 samples, 0.01%)</title><rect x="1056.0" y="293" width="0.2" height="15.0" fill="rgb(237,121,29)" rx="2" ry="2" />
<text  x="1059.01" y="303.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (5 samples, 0.01%)</title><rect x="1152.6" y="485" width="0.1" height="15.0" fill="rgb(217,183,25)" rx="2" ry="2" />
<text  x="1155.59" y="495.5" ></text>
</g>
<g >
<title>read_simple&lt;long, managed_bytes_basic_view&lt; (112 samples, 0.23%)</title><rect x="379.4" y="149" width="2.7" height="15.0" fill="rgb(250,120,46)" rx="2" ry="2" />
<text  x="382.39" y="159.5" ></text>
</g>
<g >
<title>absl::container_internal::probe_seq&lt;16ul&gt;::probe_seq (6 samples, 0.01%)</title><rect x="1065.1" y="293" width="0.1" height="15.0" fill="rgb(243,59,8)" rx="2" ry="2" />
<text  x="1068.10" y="303.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;query::result&gt;::operator= (6 samples, 0.01%)</title><rect x="699.9" y="421" width="0.1" height="15.0" fill="rgb(221,177,10)" rx="2" ry="2" />
<text  x="702.87" y="431.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;std::function&lt;std::function&lt;partition_presence_checker_result  (14 samples, 0.03%)</title><rect x="605.0" y="437" width="0.3" height="15.0" fill="rgb(207,156,8)" rx="2" ry="2" />
<text  x="607.96" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (15 samples, 0.03%)</title><rect x="843.2" y="373" width="0.3" height="15.0" fill="rgb(253,166,7)" rx="2" ry="2" />
<text  x="846.16" y="383.5" ></text>
</g>
<g >
<title>db::assure_sufficient_live_nodes&lt;utils::small_vector&lt;gms::inet_address, 3ul&gt;, std::array&lt;gms::inet_address, 0ul&gt; &gt; (10 samples, 0.02%)</title><rect x="1066.3" y="341" width="0.3" height="15.0" fill="rgb(222,150,39)" rx="2" ry="2" />
<text  x="1069.32" y="351.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::finally_body&lt;service::storage_proxy::do_query (109 samples, 0.22%)</title><rect x="673.7" y="485" width="2.6" height="15.0" fill="rgb(223,187,37)" rx="2" ry="2" />
<text  x="676.67" y="495.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (283 samples, 0.58%)</title><rect x="14.5" y="581" width="6.9" height="15.0" fill="rgb(249,150,46)" rx="2" ry="2" />
<text  x="17.51" y="591.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (6 samples, 0.01%)</title><rect x="514.6" y="309" width="0.2" height="15.0" fill="rgb(253,25,49)" rx="2" ry="2" />
<text  x="517.62" y="319.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_construct&lt;interval_bound&lt;dht::ring_position&gt; const&amp;&gt; (34 samples, 0.07%)</title><rect x="1048.9" y="277" width="0.8" height="15.0" fill="rgb(233,103,3)" rx="2" ry="2" />
<text  x="1051.90" y="287.5" ></text>
</g>
<g >
<title>utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (369 samples, 0.76%)</title><rect x="791.5" y="213" width="9.0" height="15.0" fill="rgb(223,202,16)" rx="2" ry="2" />
<text  x="794.53" y="223.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate (467 samples, 0.96%)</title><rect x="889.9" y="293" width="11.4" height="15.0" fill="rgb(236,73,21)" rx="2" ry="2" />
<text  x="892.88" y="303.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (6 samples, 0.01%)</title><rect x="630.9" y="469" width="0.2" height="15.0" fill="rgb(214,57,10)" rx="2" ry="2" />
<text  x="633.94" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (55 samples, 0.11%)</title><rect x="840.4" y="405" width="1.3" height="15.0" fill="rgb(247,2,37)" rx="2" ry="2" />
<text  x="843.36" y="415.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (6 samples, 0.01%)</title><rect x="740.9" y="277" width="0.1" height="15.0" fill="rgb(246,46,42)" rx="2" ry="2" />
<text  x="743.87" y="287.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;void&gt;::satisfy_with_result_of&lt;seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::then_wrapped_nrvo&lt;void, service::abstract_read_executor::make_data_requests (468 samples, 0.97%)</title><rect x="695.7" y="485" width="11.4" height="15.0" fill="rgb(212,55,2)" rx="2" ry="2" />
<text  x="698.68" y="495.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::clear (17 samples, 0.04%)</title><rect x="655.5" y="485" width="0.4" height="15.0" fill="rgb(227,154,11)" rx="2" ry="2" />
<text  x="658.52" y="495.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (13 samples, 0.03%)</title><rect x="634.4" y="453" width="0.3" height="15.0" fill="rgb(223,159,4)" rx="2" ry="2" />
<text  x="637.35" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (9 samples, 0.02%)</title><rect x="1122.9" y="389" width="0.2" height="15.0" fill="rgb(212,188,38)" rx="2" ry="2" />
<text  x="1125.87" y="399.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (52 samples, 0.11%)</title><rect x="232.1" y="165" width="1.2" height="15.0" fill="rgb(206,221,54)" rx="2" ry="2" />
<text  x="235.06" y="175.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (15 samples, 0.03%)</title><rect x="1035.5" y="197" width="0.4" height="15.0" fill="rgb(205,71,9)" rx="2" ry="2" />
<text  x="1038.51" y="207.5" ></text>
</g>
<g >
<title>dht::ring_position_comparator::operator (472 samples, 0.97%)</title><rect x="471.0" y="293" width="11.5" height="15.0" fill="rgb(229,205,54)" rx="2" ry="2" />
<text  x="474.04" y="303.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (11 samples, 0.02%)</title><rect x="1138.1" y="421" width="0.3" height="15.0" fill="rgb(214,180,46)" rx="2" ry="2" />
<text  x="1141.12" y="431.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::clear (17 samples, 0.04%)</title><rect x="444.3" y="277" width="0.4" height="15.0" fill="rgb(224,0,39)" rx="2" ry="2" />
<text  x="447.25" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (14 samples, 0.03%)</title><rect x="93.1" y="421" width="0.3" height="15.0" fill="rgb(227,4,50)" rx="2" ry="2" />
<text  x="96.10" y="431.5" ></text>
</g>
<g >
<title>table::as_mutation_source (108 samples, 0.22%)</title><rect x="620.4" y="437" width="2.7" height="15.0" fill="rgb(223,227,54)" rx="2" ry="2" />
<text  x="623.45" y="447.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEE4$_44ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_45ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_43ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_46ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_47ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_48ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_49ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_50ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_51ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_52ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_53ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_54ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_55ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_56ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_57ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_58EERS4_IJNSF_11conjunctionENSF_15binary_operatorENSF_12column_valueENSF_5tokenENSF_21unresolved_identifierENSF_25column_mutation_attributeENSF_13function_callENSF_4castENSF_15field_selectionENSF_4nullENSF_13bind_variableENSF_16untyped_constantENSF_8constantENSF_17tuple_constructorENSF_22collection_constructorENSF_20usertype_constructorEEEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES16_S1O_ (41 samples, 0.08%)</title><rect x="880.6" y="405" width="1.0" height="15.0" fill="rgb(205,202,33)" rx="2" ry="2" />
<text  x="883.60" y="415.5" ></text>
</g>
<g >
<title>schema::registry_entry (6 samples, 0.01%)</title><rect x="1014.7" y="277" width="0.1" height="15.0" fill="rgb(241,196,47)" rx="2" ry="2" />
<text  x="1017.66" y="287.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (5 samples, 0.01%)</title><rect x="67.9" y="389" width="0.1" height="15.0" fill="rgb(246,111,35)" rx="2" ry="2" />
<text  x="70.87" y="399.5" ></text>
</g>
<g >
<title>mutation_source::mutation_source (6 samples, 0.01%)</title><rect x="91.5" y="437" width="0.1" height="15.0" fill="rgb(237,69,27)" rx="2" ry="2" />
<text  x="94.50" y="447.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_Optional_payload_base (8 samples, 0.02%)</title><rect x="738.7" y="357" width="0.2" height="15.0" fill="rgb(211,144,8)" rx="2" ry="2" />
<text  x="741.75" y="367.5" ></text>
</g>
<g >
<title>operator delete (34 samples, 0.07%)</title><rect x="407.4" y="293" width="0.8" height="15.0" fill="rgb(253,89,50)" rx="2" ry="2" />
<text  x="410.40" y="303.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::key_is_in_relation (31 samples, 0.06%)</title><rect x="647.6" y="453" width="0.7" height="15.0" fill="rgb(240,174,51)" rx="2" ry="2" />
<text  x="650.56" y="463.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (8 samples, 0.02%)</title><rect x="17.7" y="325" width="0.2" height="15.0" fill="rgb(234,45,14)" rx="2" ry="2" />
<text  x="20.70" y="335.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (15 samples, 0.03%)</title><rect x="791.0" y="165" width="0.4" height="15.0" fill="rgb(240,171,25)" rx="2" ry="2" />
<text  x="794.04" y="175.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::insertToken (10 samples, 0.02%)</title><rect x="15.4" y="309" width="0.2" height="15.0" fill="rgb(222,167,0)" rx="2" ry="2" />
<text  x="18.36" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::_M_range_initialize&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; const*&gt; (5 samples, 0.01%)</title><rect x="1116.5" y="389" width="0.1" height="15.0" fill="rgb(207,111,27)" rx="2" ry="2" />
<text  x="1119.52" y="399.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (7 samples, 0.01%)</title><rect x="631.6" y="485" width="0.1" height="15.0" fill="rgb(249,61,53)" rx="2" ry="2" />
<text  x="634.55" y="495.5" ></text>
</g>
<g >
<title>__strcmp_avx2 (94 samples, 0.19%)</title><rect x="12.0" y="581" width="2.3" height="15.0" fill="rgb(207,97,3)" rx="2" ry="2" />
<text  x="14.97" y="591.5" ></text>
</g>
<g >
<title>std::operator==&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; (5 samples, 0.01%)</title><rect x="741.7" y="293" width="0.1" height="15.0" fill="rgb(254,157,27)" rx="2" ry="2" />
<text  x="744.69" y="303.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (18 samples, 0.04%)</title><rect x="725.6" y="293" width="0.5" height="15.0" fill="rgb(239,107,16)" rx="2" ry="2" />
<text  x="728.64" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::find_and_unlink_span_reclaiming (5 samples, 0.01%)</title><rect x="974.8" y="277" width="0.1" height="15.0" fill="rgb(241,125,0)" rx="2" ry="2" />
<text  x="977.76" y="287.5" ></text>
</g>
<g >
<title>bound_view::from_range_end&lt;nonwrapping_interval&gt; (5 samples, 0.01%)</title><rect x="237.9" y="197" width="0.2" height="15.0" fill="rgb(250,179,31)" rx="2" ry="2" />
<text  x="240.93" y="207.5" ></text>
</g>
<g >
<title>table::make_reader (4,506 samples, 9.30%)</title><rect x="423.7" y="357" width="109.8" height="15.0" fill="rgb(222,188,39)" rx="2" ry="2" />
<text  x="426.72" y="367.5" >table::make_r..</text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;seastar::future&lt;void&gt; &gt;  (1,439 samples, 2.97%)</title><rect x="548.7" y="421" width="35.1" height="15.0" fill="rgb(211,80,7)" rx="2" ry="2" />
<text  x="551.72" y="431.5" >st..</text>
</g>
<g >
<title>std::hash&lt;wrapping_interval&lt;dht::token&gt; &gt;::operator (8 samples, 0.02%)</title><rect x="1163.2" y="453" width="0.2" height="15.0" fill="rgb(234,196,31)" rx="2" ry="2" />
<text  x="1166.16" y="463.5" ></text>
</g>
<g >
<title>list_reader_selector::list_reader_selector (13 samples, 0.03%)</title><rect x="432.6" y="325" width="0.3" height="15.0" fill="rgb(229,76,33)" rx="2" ry="2" />
<text  x="435.61" y="335.5" ></text>
</g>
<g >
<title>partition_key::from_range&lt;std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt; const&amp;&gt; (34 samples, 0.07%)</title><rect x="937.9" y="405" width="0.8" height="15.0" fill="rgb(241,127,14)" rx="2" ry="2" />
<text  x="940.86" y="415.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (2,298 samples, 4.74%)</title><rect x="160.4" y="229" width="55.9" height="15.0" fill="rgb(235,124,38)" rx="2" ry="2" />
<text  x="163.35" y="239.5" >parti..</text>
</g>
<g >
<title>bound_view::from_range_start&lt;nonwrapping_interval&gt; (7 samples, 0.01%)</title><rect x="213.0" y="117" width="0.2" height="15.0" fill="rgb(218,143,38)" rx="2" ry="2" />
<text  x="216.04" y="127.5" ></text>
</g>
<g >
<title>service::client_state::get_timestamp (11 samples, 0.02%)</title><rect x="1134.4" y="421" width="0.3" height="15.0" fill="rgb(221,224,5)" rx="2" ry="2" />
<text  x="1137.44" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%)</title><rect x="559.1" y="261" width="0.1" height="15.0" fill="rgb(227,192,13)" rx="2" ry="2" />
<text  x="562.12" y="271.5" ></text>
</g>
<g >
<title>utils::tuple_hash::hash_impl&lt;2ul, auth::resource_kind, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (55 samples, 0.11%)</title><rect x="798.7" y="117" width="1.4" height="15.0" fill="rgb(236,191,4)" rx="2" ry="2" />
<text  x="801.71" y="127.5" ></text>
</g>
<g >
<title>seastar::reactor::run_some_tasks (47,281 samples, 97.59%)</title><rect x="24.5" y="517" width="1151.6" height="15.0" fill="rgb(216,38,43)" rx="2" ry="2" />
<text  x="27.54" y="527.5" >seastar::reactor::run_some_tasks</text>
</g>
<g >
<title>absl::container_internal::operator== (7 samples, 0.01%)</title><rect x="1062.7" y="309" width="0.2" height="15.0" fill="rgb(221,204,42)" rx="2" ry="2" />
<text  x="1065.69" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (18 samples, 0.04%)</title><rect x="1052.1" y="213" width="0.4" height="15.0" fill="rgb(231,17,27)" rx="2" ry="2" />
<text  x="1055.07" y="223.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::find (30 samples, 0.06%)</title><rect x="954.6" y="373" width="0.7" height="15.0" fill="rgb(226,20,22)" rx="2" ry="2" />
<text  x="957.62" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_clear (22 samples, 0.05%)</title><rect x="442.5" y="293" width="0.5" height="15.0" fill="rgb(243,130,2)" rx="2" ry="2" />
<text  x="445.47" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_nodes (74 samples, 0.15%)</title><rect x="659.9" y="453" width="1.8" height="15.0" fill="rgb(212,111,37)" rx="2" ry="2" />
<text  x="662.86" y="463.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::fillBuffer (62 samples, 0.13%)</title><rect x="15.3" y="325" width="1.5" height="15.0" fill="rgb(243,220,9)" rx="2" ry="2" />
<text  x="18.31" y="335.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::result_memory_accounter (6 samples, 0.01%)</title><rect x="594.9" y="405" width="0.2" height="15.0" fill="rgb(236,42,7)" rx="2" ry="2" />
<text  x="597.95" y="415.5" ></text>
</g>
<g >
<title>dht::ring_position::as_decorated_key (53 samples, 0.11%)</title><rect x="456.6" y="325" width="1.3" height="15.0" fill="rgb(212,40,28)" rx="2" ry="2" />
<text  x="459.58" y="335.5" ></text>
</g>
<g >
<title>absl::hash_internal::AbslHashValue&lt;absl::hash_internal::HashState&gt; (25 samples, 0.05%)</title><rect x="1065.4" y="277" width="0.6" height="15.0" fill="rgb(220,101,42)" rx="2" ry="2" />
<text  x="1068.44" y="287.5" ></text>
</g>
<g >
<title>database::find_uuid (5 samples, 0.01%)</title><rect x="759.6" y="405" width="0.1" height="15.0" fill="rgb(233,73,41)" rx="2" ry="2" />
<text  x="762.62" y="415.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (28 samples, 0.06%)</title><rect x="222.5" y="197" width="0.7" height="15.0" fill="rgb(237,226,22)" rx="2" ry="2" />
<text  x="225.51" y="207.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (9 samples, 0.02%)</title><rect x="408.0" y="277" width="0.2" height="15.0" fill="rgb(254,43,22)" rx="2" ry="2" />
<text  x="411.01" y="287.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (15 samples, 0.03%)</title><rect x="476.7" y="181" width="0.4" height="15.0" fill="rgb(238,95,54)" rx="2" ry="2" />
<text  x="479.74" y="191.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::statement_restrictions (12 samples, 0.02%)</title><rect x="20.5" y="405" width="0.3" height="15.0" fill="rgb(254,57,16)" rx="2" ry="2" />
<text  x="23.47" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (27 samples, 0.06%)</title><rect x="99.2" y="373" width="0.7" height="15.0" fill="rgb(243,227,6)" rx="2" ry="2" />
<text  x="102.22" y="383.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::impl (8 samples, 0.02%)</title><rect x="491.3" y="293" width="0.2" height="15.0" fill="rgb(212,181,16)" rx="2" ry="2" />
<text  x="494.33" y="303.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::trivial_direct_move&lt;8ul&gt; (9 samples, 0.02%)</title><rect x="995.1" y="245" width="0.2" height="15.0" fill="rgb(225,180,10)" rx="2" ry="2" />
<text  x="998.07" y="255.5" ></text>
</g>
<g >
<title>query::querier_base::close (13 samples, 0.03%)</title><rect x="1175.5" y="485" width="0.3" height="15.0" fill="rgb(247,49,46)" rx="2" ry="2" />
<text  x="1178.46" y="495.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_Optional_payload_base (8 samples, 0.02%)</title><rect x="1114.4" y="357" width="0.2" height="15.0" fill="rgb(247,18,20)" rx="2" ry="2" />
<text  x="1117.42" y="367.5" ></text>
</g>
<g >
<title>operator new (22 samples, 0.05%)</title><rect x="502.3" y="197" width="0.5" height="15.0" fill="rgb(221,27,39)" rx="2" ry="2" />
<text  x="505.27" y="207.5" ></text>
</g>
<g >
<title>utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::lru_entry::touch (37 samples, 0.08%)</title><rect x="736.4" y="309" width="0.9" height="15.0" fill="rgb(240,95,12)" rx="2" ry="2" />
<text  x="739.41" y="319.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;position_in_partition&gt;::_M_reset (11 samples, 0.02%)</title><rect x="226.5" y="245" width="0.2" height="15.0" fill="rgb(241,39,27)" rx="2" ry="2" />
<text  x="229.48" y="255.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (9 samples, 0.02%)</title><rect x="919.0" y="325" width="0.2" height="15.0" fill="rgb(252,205,40)" rx="2" ry="2" />
<text  x="921.99" y="335.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (20 samples, 0.04%)</title><rect x="1173.8" y="421" width="0.4" height="15.0" fill="rgb(241,96,26)" rx="2" ry="2" />
<text  x="1176.75" y="431.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (6 samples, 0.01%)</title><rect x="786.5" y="229" width="0.1" height="15.0" fill="rgb(238,82,27)" rx="2" ry="2" />
<text  x="789.49" y="239.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::check (13 samples, 0.03%)</title><rect x="303.3" y="213" width="0.3" height="15.0" fill="rgb(205,140,47)" rx="2" ry="2" />
<text  x="306.28" y="223.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::need_filtering (115 samples, 0.24%)</title><rect x="644.6" y="469" width="2.8" height="15.0" fill="rgb(246,215,36)" rx="2" ry="2" />
<text  x="647.56" y="479.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::pop_front (173 samples, 0.36%)</title><rect x="66.4" y="405" width="4.2" height="15.0" fill="rgb(212,174,42)" rx="2" ry="2" />
<text  x="69.39" y="415.5" ></text>
</g>
<g >
<title>empty_flat_reader::close (12 samples, 0.02%)</title><rect x="551.1" y="341" width="0.3" height="15.0" fill="rgb(249,107,46)" rx="2" ry="2" />
<text  x="554.13" y="351.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (21 samples, 0.04%)</title><rect x="535.4" y="389" width="0.6" height="15.0" fill="rgb(224,49,4)" rx="2" ry="2" />
<text  x="538.44" y="399.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;single_node_cql_env::core_local_state&gt;::local (11 samples, 0.02%)</title><rect x="842.1" y="421" width="0.2" height="15.0" fill="rgb(211,86,2)" rx="2" ry="2" />
<text  x="845.07" y="431.5" ></text>
</g>
<g >
<title>query::result::builder::build (6 samples, 0.01%)</title><rect x="59.2" y="453" width="0.1" height="15.0" fill="rgb(220,89,10)" rx="2" ry="2" />
<text  x="62.20" y="463.5" ></text>
</g>
<g >
<title>utils::config_file::named_value&lt;bool&gt;::the_value (9 samples, 0.02%)</title><rect x="1100.8" y="341" width="0.3" height="15.0" fill="rgb(247,198,2)" rx="2" ry="2" />
<text  x="1103.83" y="351.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (6 samples, 0.01%)</title><rect x="386.6" y="229" width="0.2" height="15.0" fill="rgb(212,16,1)" rx="2" ry="2" />
<text  x="389.62" y="239.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (30 samples, 0.06%)</title><rect x="40.4" y="469" width="0.8" height="15.0" fill="rgb(220,37,53)" rx="2" ry="2" />
<text  x="43.45" y="479.5" ></text>
</g>
<g >
<title>dht::ring_position::as_decorated_key (15 samples, 0.03%)</title><rect x="429.4" y="341" width="0.4" height="15.0" fill="rgb(242,91,26)" rx="2" ry="2" />
<text  x="432.39" y="351.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (5 samples, 0.01%)</title><rect x="103.2" y="421" width="0.1" height="15.0" fill="rgb(252,109,0)" rx="2" ry="2" />
<text  x="106.21" y="431.5" ></text>
</g>
<g >
<title>service::storage_proxy::sort_endpoints_by_proximity (92 samples, 0.19%)</title><rect x="1097.8" y="325" width="2.3" height="15.0" fill="rgb(236,200,32)" rx="2" ry="2" />
<text  x="1100.83" y="335.5" ></text>
</g>
<g >
<title>operator delete (20 samples, 0.04%)</title><rect x="633.0" y="469" width="0.5" height="15.0" fill="rgb(216,99,42)" rx="2" ry="2" />
<text  x="635.99" y="479.5" ></text>
</g>
<g >
<title>cql3::restrictions::clustering_key_restrictions::needs_filtering (14 samples, 0.03%)</title><rect x="878.1" y="421" width="0.3" height="15.0" fill="rgb(253,149,6)" rx="2" ry="2" />
<text  x="881.09" y="431.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::get0 (29 samples, 0.06%)</title><rect x="405.3" y="277" width="0.7" height="15.0" fill="rgb(236,228,10)" rx="2" ry="2" />
<text  x="408.33" y="287.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_clustering_bounds (347 samples, 0.72%)</title><rect x="1112.7" y="405" width="8.5" height="15.0" fill="rgb(217,20,17)" rx="2" ry="2" />
<text  x="1115.74" y="415.5" ></text>
</g>
<g >
<title>locator::token_metadata::get_host_id_if_known (55 samples, 0.11%)</title><rect x="1153.8" y="453" width="1.3" height="15.0" fill="rgb(247,93,6)" rx="2" ry="2" />
<text  x="1156.76" y="463.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (7 samples, 0.01%)</title><rect x="1047.3" y="277" width="0.2" height="15.0" fill="rgb(233,22,20)" rx="2" ry="2" />
<text  x="1050.34" y="287.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (5 samples, 0.01%)</title><rect x="17.0" y="325" width="0.1" height="15.0" fill="rgb(209,51,6)" rx="2" ry="2" />
<text  x="19.97" y="335.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (5 samples, 0.01%)</title><rect x="1067.6" y="341" width="0.1" height="15.0" fill="rgb(227,82,48)" rx="2" ry="2" />
<text  x="1070.61" y="351.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::execute (422 samples, 0.87%)</title><rect x="684.5" y="501" width="10.2" height="15.0" fill="rgb(219,35,43)" rx="2" ry="2" />
<text  x="687.46" y="511.5" ></text>
</g>
<g >
<title>locator::token_metadata::is_any_node_being_replaced (5 samples, 0.01%)</title><rect x="1095.2" y="293" width="0.2" height="15.0" fill="rgb(249,4,13)" rx="2" ry="2" />
<text  x="1098.23" y="303.5" ></text>
</g>
<g >
<title>seastar::reactor_backend_aio::reap_kernel_completions (38 samples, 0.08%)</title><rect x="1176.8" y="501" width="0.9" height="15.0" fill="rgb(224,145,16)" rx="2" ry="2" />
<text  x="1179.77" y="511.5" ></text>
</g>
<g >
<title>tracing::global_trace_state_ptr::get (15 samples, 0.03%)</title><rect x="1054.1" y="277" width="0.4" height="15.0" fill="rgb(216,206,47)" rx="2" ry="2" />
<text  x="1057.12" y="287.5" ></text>
</g>
<g >
<title>seastar::logger::log&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;&amp;&gt; (7 samples, 0.01%)</title><rect x="833.3" y="437" width="0.2" height="15.0" fill="rgb(207,80,41)" rx="2" ry="2" />
<text  x="836.35" y="447.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (42 samples, 0.09%)</title><rect x="270.7" y="293" width="1.0" height="15.0" fill="rgb(214,213,24)" rx="2" ry="2" />
<text  x="273.66" y="303.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_prepared_with_qo (5,254 samples, 10.84%)</title><rect x="719.3" y="453" width="128.0" height="15.0" fill="rgb(239,137,11)" rx="2" ry="2" />
<text  x="722.33" y="463.5" >single_node_cql_..</text>
</g>
<g >
<title>managed_bytes::managed_bytes (17 samples, 0.04%)</title><rect x="1053.2" y="197" width="0.4" height="15.0" fill="rgb(254,176,16)" rx="2" ry="2" />
<text  x="1056.17" y="207.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (6 samples, 0.01%)</title><rect x="422.7" y="357" width="0.1" height="15.0" fill="rgb(216,118,50)" rx="2" ry="2" />
<text  x="425.70" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (72 samples, 0.15%)</title><rect x="153.3" y="197" width="1.8" height="15.0" fill="rgb(244,138,38)" rx="2" ry="2" />
<text  x="156.31" y="207.5" ></text>
</g>
<g >
<title>operator delete (44 samples, 0.09%)</title><rect x="57.0" y="453" width="1.1" height="15.0" fill="rgb(254,213,31)" rx="2" ry="2" />
<text  x="60.03" y="463.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::digest_read_result&gt;::set&lt;service::digest_read_result&gt; (16 samples, 0.03%)</title><rect x="701.5" y="405" width="0.4" height="15.0" fill="rgb(244,45,41)" rx="2" ry="2" />
<text  x="704.51" y="415.5" ></text>
</g>
<g >
<title>logalloc::basic_region_impl::set_reclaiming_enabled (7 samples, 0.01%)</title><rect x="244.3" y="213" width="0.1" height="15.0" fill="rgb(234,0,15)" rx="2" ry="2" />
<text  x="247.26" y="223.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;query::result_memory_accounter&gt;::take (19 samples, 0.04%)</title><rect x="601.3" y="421" width="0.5" height="15.0" fill="rgb(205,186,43)" rx="2" ry="2" />
<text  x="604.33" y="431.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;clustering_key_prefix&gt;::wrapping_interval (5 samples, 0.01%)</title><rect x="1116.3" y="373" width="0.1" height="15.0" fill="rgb(215,64,28)" rx="2" ry="2" />
<text  x="1119.30" y="383.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::do_fill_buffer (5 samples, 0.01%)</title><rect x="248.2" y="277" width="0.1" height="15.0" fill="rgb(232,95,22)" rx="2" ry="2" />
<text  x="251.16" y="287.5" ></text>
</g>
<g >
<title>database::find_keyspace (165 samples, 0.34%)</title><rect x="1062.3" y="341" width="4.0" height="15.0" fill="rgb(222,116,13)" rx="2" ry="2" />
<text  x="1065.30" y="351.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (45 samples, 0.09%)</title><rect x="1141.0" y="437" width="1.1" height="15.0" fill="rgb(208,26,38)" rx="2" ry="2" />
<text  x="1143.97" y="447.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (7 samples, 0.01%)</title><rect x="293.0" y="293" width="0.2" height="15.0" fill="rgb(254,109,17)" rx="2" ry="2" />
<text  x="296.05" y="303.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (20 samples, 0.04%)</title><rect x="1047.9" y="277" width="0.5" height="15.0" fill="rgb(205,133,48)" rx="2" ry="2" />
<text  x="1050.88" y="287.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::query_processor::process_authorized_statement (119 samples, 0.25%)</title><rect x="638.0" y="501" width="2.9" height="15.0" fill="rgb(233,50,48)" rx="2" ry="2" />
<text  x="640.96" y="511.5" ></text>
</g>
<g >
<title>bound_view::from_range&lt;nonwrapping_interval&gt; (23 samples, 0.05%)</title><rect x="212.6" y="133" width="0.6" height="15.0" fill="rgb(245,157,41)" rx="2" ry="2" />
<text  x="215.65" y="143.5" ></text>
</g>
<g >
<title>seastar::future&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry_ptr&gt;::then_impl&lt;utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (76 samples, 0.16%)</title><rect x="735.7" y="373" width="1.9" height="15.0" fill="rgb(229,110,53)" rx="2" ry="2" />
<text  x="738.70" y="383.5" ></text>
</g>
<g >
<title>service::client_state::set_keyspace (144 samples, 0.30%)</title><rect x="843.7" y="421" width="3.5" height="15.0" fill="rgb(205,61,2)" rx="2" ry="2" />
<text  x="846.67" y="431.5" ></text>
</g>
<g >
<title>std::__equal&lt;true&gt;::equal&lt;char&gt; (7 samples, 0.01%)</title><rect x="741.0" y="277" width="0.2" height="15.0" fill="rgb(224,182,12)" rx="2" ry="2" />
<text  x="744.01" y="287.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::check_local_limit (5 samples, 0.01%)</title><rect x="328.0" y="165" width="0.1" height="15.0" fill="rgb(231,5,26)" rx="2" ry="2" />
<text  x="331.02" y="175.5" ></text>
</g>
<g >
<title>dht::tri_compare (5 samples, 0.01%)</title><rect x="1094.5" y="245" width="0.2" height="15.0" fill="rgb(251,29,1)" rx="2" ry="2" />
<text  x="1097.55" y="255.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::clear (21 samples, 0.04%)</title><rect x="281.1" y="357" width="0.5" height="15.0" fill="rgb(227,89,52)" rx="2" ry="2" />
<text  x="284.14" y="367.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (64 samples, 0.13%)</title><rect x="380.6" y="133" width="1.5" height="15.0" fill="rgb(216,63,49)" rx="2" ry="2" />
<text  x="383.56" y="143.5" ></text>
</g>
<g >
<title>seastar::memory::stats (33 samples, 0.07%)</title><rect x="143.7" y="245" width="0.8" height="15.0" fill="rgb(245,177,29)" rx="2" ry="2" />
<text  x="146.72" y="255.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::set_callback (16 samples, 0.03%)</title><rect x="859.2" y="485" width="0.4" height="15.0" fill="rgb(230,195,47)" rx="2" ry="2" />
<text  x="862.21" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt;::_M_check_len (5 samples, 0.01%)</title><rect x="240.8" y="181" width="0.1" height="15.0" fill="rgb(212,109,34)" rx="2" ry="2" />
<text  x="243.83" y="191.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (12 samples, 0.02%)</title><rect x="1159.4" y="357" width="0.3" height="15.0" fill="rgb(229,125,17)" rx="2" ry="2" />
<text  x="1162.36" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (28 samples, 0.06%)</title><rect x="451.8" y="309" width="0.7" height="15.0" fill="rgb(214,141,5)" rx="2" ry="2" />
<text  x="454.80" y="319.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;bool&gt;::take_value (12 samples, 0.02%)</title><rect x="770.2" y="357" width="0.3" height="15.0" fill="rgb(242,208,52)" rx="2" ry="2" />
<text  x="773.22" y="367.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (11 samples, 0.02%)</title><rect x="862.0" y="437" width="0.3" height="15.0" fill="rgb(253,58,52)" rx="2" ry="2" />
<text  x="865.04" y="447.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (180 samples, 0.37%)</title><rect x="723.1" y="373" width="4.4" height="15.0" fill="rgb(205,131,9)" rx="2" ry="2" />
<text  x="726.13" y="383.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (43 samples, 0.09%)</title><rect x="758.1" y="325" width="1.1" height="15.0" fill="rgb(225,144,25)" rx="2" ry="2" />
<text  x="761.13" y="335.5" ></text>
</g>
<g >
<title>seastar::reactor::run (47,460 samples, 97.96%)</title><rect x="21.9" y="549" width="1155.9" height="15.0" fill="rgb(240,67,39)" rx="2" ry="2" />
<text  x="24.86" y="559.5" >seastar::reactor::run</text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_nodes (5 samples, 0.01%)</title><rect x="1169.8" y="453" width="0.1" height="15.0" fill="rgb(211,14,43)" rx="2" ry="2" />
<text  x="1172.76" y="463.5" ></text>
</g>
<g >
<title>schema::column_at (23 samples, 0.05%)</title><rect x="205.8" y="117" width="0.6" height="15.0" fill="rgb(246,203,1)" rx="2" ry="2" />
<text  x="208.83" y="127.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::local (11 samples, 0.02%)</title><rect x="841.8" y="421" width="0.3" height="15.0" fill="rgb(215,197,18)" rx="2" ry="2" />
<text  x="844.80" y="431.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::future&lt;void&gt;  (44 samples, 0.09%)</title><rect x="1141.0" y="357" width="1.1" height="15.0" fill="rgb(220,2,34)" rx="2" ry="2" />
<text  x="1143.99" y="367.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (15 samples, 0.03%)</title><rect x="994.9" y="261" width="0.4" height="15.0" fill="rgb(211,106,2)" rx="2" ry="2" />
<text  x="997.93" y="271.5" ></text>
</g>
<g >
<title>locator::token_metadata_impl::first_token_index (294 samples, 0.61%)</title><rect x="1082.1" y="261" width="7.2" height="15.0" fill="rgb(251,226,15)" rx="2" ry="2" />
<text  x="1085.15" y="271.5" ></text>
</g>
<g >
<title>std::_Optional_base_impl&lt;mutation_querier, std::_Optional_base&lt;mutation_querier, false, false&gt; &gt;::_M_construct&lt;mutation_querier&gt; (47 samples, 0.10%)</title><rect x="316.3" y="165" width="1.1" height="15.0" fill="rgb(236,48,1)" rx="2" ry="2" />
<text  x="319.26" y="175.5" ></text>
</g>
<g >
<title>operator new (7 samples, 0.01%)</title><rect x="107.6" y="421" width="0.2" height="15.0" fill="rgb(245,13,40)" rx="2" ry="2" />
<text  x="110.65" y="431.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;gms::inet_address, std::pair&lt;gms::inet_address const, table::cache_hit_rate&gt;, std::allocator&lt;std::pair&lt;gms::inet_address const, table::cache_hit_rate&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;gms::inet_address&gt;, std::hash&lt;gms::inet_address&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (25 samples, 0.05%)</title><rect x="705.5" y="421" width="0.6" height="15.0" fill="rgb(242,196,34)" rx="2" ry="2" />
<text  x="708.52" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (22 samples, 0.05%)</title><rect x="773.6" y="293" width="0.5" height="15.0" fill="rgb(251,98,14)" rx="2" ry="2" />
<text  x="776.60" y="303.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::CqlParser (6 samples, 0.01%)</title><rect x="15.0" y="421" width="0.1" height="15.0" fill="rgb(247,141,44)" rx="2" ry="2" />
<text  x="17.99" y="431.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (105 samples, 0.22%)</title><rect x="896.0" y="245" width="2.5" height="15.0" fill="rgb(234,229,24)" rx="2" ry="2" />
<text  x="898.99" y="255.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_M_reset (30 samples, 0.06%)</title><rect x="1115.6" y="373" width="0.7" height="15.0" fill="rgb(214,143,24)" rx="2" ry="2" />
<text  x="1118.57" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (23 samples, 0.05%)</title><rect x="31.8" y="485" width="0.6" height="15.0" fill="rgb(230,140,23)" rx="2" ry="2" />
<text  x="34.85" y="495.5" ></text>
</g>
<g >
<title>range_tombstone_list::slice (35 samples, 0.07%)</title><rect x="212.5" y="149" width="0.8" height="15.0" fill="rgb(224,99,19)" rx="2" ry="2" />
<text  x="215.45" y="159.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (11 samples, 0.02%)</title><rect x="685.8" y="485" width="0.2" height="15.0" fill="rgb(241,85,15)" rx="2" ry="2" />
<text  x="688.77" y="495.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (207 samples, 0.43%)</title><rect x="14.9" y="437" width="5.0" height="15.0" fill="rgb(231,159,32)" rx="2" ry="2" />
<text  x="17.90" y="447.5" ></text>
</g>
<g >
<title>std::forward_as_tuple&lt;auth::role_or_anonymous&gt; (6 samples, 0.01%)</title><rect x="805.7" y="293" width="0.1" height="15.0" fill="rgb(239,8,44)" rx="2" ry="2" />
<text  x="808.68" y="303.5" ></text>
</g>
<g >
<title>utils::basic_ihistogram&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt; &gt;::mark&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; (17 samples, 0.04%)</title><rect x="600.5" y="405" width="0.4" height="15.0" fill="rgb(209,195,47)" rx="2" ry="2" />
<text  x="603.45" y="415.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;::basic_sstring (9 samples, 0.02%)</title><rect x="857.3" y="405" width="0.2" height="15.0" fill="rgb(254,4,31)" rx="2" ry="2" />
<text  x="860.29" y="415.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::push_mutation_fragment&lt;mutation_fragment&gt; (426 samples, 0.88%)</title><rect x="268.8" y="325" width="10.4" height="15.0" fill="rgb(228,16,31)" rx="2" ry="2" />
<text  x="271.81" y="335.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;service::storage_proxy_coordinator_query_result&gt;, seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::finally_body&lt;service::storage_proxy::do_query (456 samples, 0.94%)</title><rect x="672.1" y="501" width="11.1" height="15.0" fill="rgb(211,116,50)" rx="2" ry="2" />
<text  x="675.11" y="511.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::abstract_read_executor&gt;::~shared_ptr (15 samples, 0.03%)</title><rect x="1171.8" y="453" width="0.4" height="15.0" fill="rgb(252,184,20)" rx="2" ry="2" />
<text  x="1174.83" y="463.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (27 samples, 0.06%)</title><rect x="1142.1" y="373" width="0.6" height="15.0" fill="rgb(217,143,49)" rx="2" ry="2" />
<text  x="1145.07" y="383.5" ></text>
</g>
<g >
<title>mutation_fragment::operator= (34 samples, 0.07%)</title><rect x="159.5" y="229" width="0.8" height="15.0" fill="rgb(215,17,26)" rx="2" ry="2" />
<text  x="162.45" y="239.5" ></text>
</g>
<g >
<title>database::find_schema (71 samples, 0.15%)</title><rect x="752.6" y="389" width="1.7" height="15.0" fill="rgb(252,117,48)" rx="2" ry="2" />
<text  x="755.61" y="399.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (15 samples, 0.03%)</title><rect x="692.8" y="469" width="0.4" height="15.0" fill="rgb(250,149,43)" rx="2" ry="2" />
<text  x="695.79" y="479.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::emplace_back&lt;unsigned int const&amp;&gt; (27 samples, 0.06%)</title><rect x="1124.4" y="405" width="0.6" height="15.0" fill="rgb(249,41,16)" rx="2" ry="2" />
<text  x="1127.36" y="415.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::close (895 samples, 1.85%)</title><rect x="549.3" y="389" width="21.8" height="15.0" fill="rgb(209,158,52)" rx="2" ry="2" />
<text  x="552.25" y="399.5" >m..</text>
</g>
<g >
<title>seastar::thread_context::main (14 samples, 0.03%)</title><rect x="21.4" y="533" width="0.4" height="15.0" fill="rgb(233,4,8)" rx="2" ry="2" />
<text  x="24.45" y="543.5" ></text>
</g>
<g >
<title>mutation_querier::consume (1,731 samples, 3.57%)</title><rect x="319.4" y="197" width="42.2" height="15.0" fill="rgb(207,74,14)" rx="2" ry="2" />
<text  x="322.43" y="207.5" >mut..</text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::result_set, std::default_delete&lt;cql3::result_set&gt; &gt;::~unique_ptr (5 samples, 0.01%)</title><rect x="653.2" y="437" width="0.2" height="15.0" fill="rgb(210,53,26)" rx="2" ry="2" />
<text  x="656.23" y="447.5" ></text>
</g>
<g >
<title>mutation_fragment::consume&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (21 samples, 0.04%)</title><rect x="683.4" y="341" width="0.5" height="15.0" fill="rgb(211,15,12)" rx="2" ry="2" />
<text  x="686.43" y="351.5" ></text>
</g>
<g >
<title>std::make_unique&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;, seastar::lw_shared_ptr&lt;schema const&gt;, reader_permit, dht::decorated_key, partition_snapshot_ptr&amp;, query::clustering_key_filter_ranges, bool&amp;, logalloc::region&amp;, logalloc::allocating_section&amp;, boost::any, memtable&amp;&gt; (867 samples, 1.79%)</title><rect x="489.4" y="309" width="21.1" height="15.0" fill="rgb(238,68,52)" rx="2" ry="2" />
<text  x="492.38" y="319.5" ></text>
</g>
<g >
<title>partition_key::legacy_tri_compare (340 samples, 0.70%)</title><rect x="473.8" y="261" width="8.3" height="15.0" fill="rgb(253,93,53)" rx="2" ry="2" />
<text  x="476.82" y="271.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_last_fragment_kind, 4ul&gt;::~small_vector (12 samples, 0.02%)</title><rect x="582.3" y="373" width="0.3" height="15.0" fill="rgb(220,15,17)" rx="2" ry="2" />
<text  x="585.30" y="383.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.29] (15 samples, 0.03%)</title><rect x="10.2" y="581" width="0.3" height="15.0" fill="rgb(217,152,35)" rx="2" ry="2" />
<text  x="13.17" y="591.5" ></text>
</g>
<g >
<title>intrusive_array&lt;memtable_entry&gt;::lower_bound&lt;dht::ring_position, dht::ring_position_comparator&gt; (491 samples, 1.01%)</title><rect x="470.6" y="309" width="12.0" height="15.0" fill="rgb(219,227,16)" rx="2" ry="2" />
<text  x="473.61" y="319.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (5 samples, 0.01%)</title><rect x="73.7" y="453" width="0.1" height="15.0" fill="rgb(249,85,19)" rx="2" ry="2" />
<text  x="76.72" y="463.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::small_vector (10 samples, 0.02%)</title><rect x="447.9" y="261" width="0.2" height="15.0" fill="rgb(238,70,22)" rx="2" ry="2" />
<text  x="450.88" y="271.5" ></text>
</g>
<g >
<title>visit&lt;(anonymous namespace)::from_string_visitor&gt; (5 samples, 0.01%)</title><rect x="20.2" y="357" width="0.1" height="15.0" fill="rgb(225,121,25)" rx="2" ry="2" />
<text  x="23.21" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt;::allocate (16 samples, 0.03%)</title><rect x="98.1" y="405" width="0.4" height="15.0" fill="rgb(231,142,53)" rx="2" ry="2" />
<text  x="101.15" y="415.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::cql_statement&gt;::~shared_ptr (9 samples, 0.02%)</title><rect x="834.2" y="437" width="0.2" height="15.0" fill="rgb(212,26,6)" rx="2" ry="2" />
<text  x="837.15" y="447.5" ></text>
</g>
<g >
<title>operator delete (51 samples, 0.11%)</title><rect x="615.3" y="373" width="1.3" height="15.0" fill="rgb(231,221,32)" rx="2" ry="2" />
<text  x="618.33" y="383.5" ></text>
</g>
<g >
<title>service::abstract_read_resolver::~abstract_read_resolver (17 samples, 0.04%)</title><rect x="693.7" y="469" width="0.4" height="15.0" fill="rgb(216,205,49)" rx="2" ry="2" />
<text  x="696.66" y="479.5" ></text>
</g>
<g >
<title>cql3::query_processor::parse_statement (208 samples, 0.43%)</title><rect x="14.9" y="469" width="5.1" height="15.0" fill="rgb(207,130,54)" rx="2" ry="2" />
<text  x="17.90" y="479.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (5 samples, 0.01%)</title><rect x="611.1" y="437" width="0.1" height="15.0" fill="rgb(236,88,35)" rx="2" ry="2" />
<text  x="614.09" y="447.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_Optional_payload_base (19 samples, 0.04%)</title><rect x="610.6" y="421" width="0.5" height="15.0" fill="rgb(236,88,29)" rx="2" ry="2" />
<text  x="613.63" y="431.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;query::result_digest, 3ul&gt;::~small_vector (23 samples, 0.05%)</title><rect x="694.1" y="469" width="0.5" height="15.0" fill="rgb(236,60,24)" rx="2" ry="2" />
<text  x="697.08" y="479.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (5 samples, 0.01%)</title><rect x="17.2" y="245" width="0.1" height="15.0" fill="rgb(225,102,30)" rx="2" ry="2" />
<text  x="20.16" y="255.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::~partition_snapshot_flat_reader (349 samples, 0.72%)</title><rect x="559.3" y="309" width="8.5" height="15.0" fill="rgb(231,167,29)" rx="2" ry="2" />
<text  x="562.29" y="319.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (14 samples, 0.03%)</title><rect x="21.4" y="565" width="0.4" height="15.0" fill="rgb(207,88,2)" rx="2" ry="2" />
<text  x="24.45" y="575.5" ></text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt;&amp;&gt; (38 samples, 0.08%)</title><rect x="1064.2" y="293" width="0.9" height="15.0" fill="rgb(226,140,50)" rx="2" ry="2" />
<text  x="1067.17" y="303.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (68 samples, 0.14%)</title><rect x="95.4" y="421" width="1.6" height="15.0" fill="rgb(208,212,49)" rx="2" ry="2" />
<text  x="98.37" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (18 samples, 0.04%)</title><rect x="1044.0" y="229" width="0.4" height="15.0" fill="rgb(235,28,51)" rx="2" ry="2" />
<text  x="1046.98" y="239.5" ></text>
</g>
<g >
<title>mutation_reader_merger::mutation_reader_merger (313 samples, 0.65%)</title><rect x="433.7" y="309" width="7.7" height="15.0" fill="rgb(217,194,46)" rx="2" ry="2" />
<text  x="436.73" y="319.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;std::optional&lt;auth::resource&gt; &gt;, seastar::future&lt;bool&gt; &gt;, std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;std::optional&lt;auth::resource&gt; &gt;, seastar::future&lt;bool&gt; &gt; &gt; &gt;::~unique_ptr (72 samples, 0.15%)</title><rect x="808.2" y="325" width="1.7" height="15.0" fill="rgb(234,181,24)" rx="2" ry="2" />
<text  x="811.16" y="335.5" ></text>
</g>
<g >
<title>compound_type&lt; (5 samples, 0.01%)</title><rect x="540.2" y="341" width="0.2" height="15.0" fill="rgb(249,168,7)" rx="2" ry="2" />
<text  x="543.24" y="351.5" ></text>
</g>
<g >
<title>mutation_reader_merger::mutation_reader_merger (15 samples, 0.03%)</title><rect x="451.3" y="325" width="0.4" height="15.0" fill="rgb(219,106,43)" rx="2" ry="2" />
<text  x="454.32" y="335.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (7 samples, 0.01%)</title><rect x="825.2" y="277" width="0.1" height="15.0" fill="rgb(213,39,3)" rx="2" ry="2" />
<text  x="828.16" y="287.5" ></text>
</g>
<g >
<title>read_simple&lt;unsigned short, managed_bytes_basic_view&lt; (14 samples, 0.03%)</title><rect x="918.9" y="341" width="0.3" height="15.0" fill="rgb(238,193,9)" rx="2" ry="2" />
<text  x="921.86" y="351.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (415 samples, 0.86%)</title><rect x="735.2" y="389" width="10.1" height="15.0" fill="rgb(246,40,30)" rx="2" ry="2" />
<text  x="738.17" y="399.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, flat_mutation_reader::impl::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (4,660 samples, 9.62%)</title><rect x="292.8" y="309" width="113.5" height="15.0" fill="rgb(238,171,31)" rx="2" ry="2" />
<text  x="295.83" y="319.5" >std::__invoke_..</text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::find (13 samples, 0.03%)</title><rect x="882.0" y="405" width="0.3" height="15.0" fill="rgb(239,194,32)" rx="2" ry="2" />
<text  x="884.99" y="415.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (7 samples, 0.01%)</title><rect x="400.7" y="213" width="0.1" height="15.0" fill="rgb(226,25,16)" rx="2" ry="2" />
<text  x="403.68" y="223.5" ></text>
</g>
<g >
<title>cql3::operation::set_value::prepare (11 samples, 0.02%)</title><rect x="20.2" y="421" width="0.2" height="15.0" fill="rgb(210,20,54)" rx="2" ry="2" />
<text  x="23.16" y="431.5" ></text>
</g>
<g >
<title>std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;, seastar::future&lt;void&gt; &gt; &gt;::operator (44 samples, 0.09%)</title><rect x="815.7" y="373" width="1.0" height="15.0" fill="rgb(218,125,22)" rx="2" ry="2" />
<text  x="818.66" y="383.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (6 samples, 0.01%)</title><rect x="1100.4" y="341" width="0.2" height="15.0" fill="rgb(222,167,6)" rx="2" ry="2" />
<text  x="1103.42" y="351.5" ></text>
</g>
<g >
<title>operator delete (20 samples, 0.04%)</title><rect x="695.0" y="485" width="0.5" height="15.0" fill="rgb(208,36,37)" rx="2" ry="2" />
<text  x="697.98" y="495.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned char, std::pair&lt;unsigned char const, std::optional&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned char const, std::optional&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned char&gt;, std::hash&lt;unsigned char&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::clear (34 samples, 0.07%)</title><rect x="669.9" y="437" width="0.9" height="15.0" fill="rgb(213,43,38)" rx="2" ry="2" />
<text  x="672.94" y="447.5" ></text>
</g>
<g >
<title>abstract_type::without_reversed (6 samples, 0.01%)</title><rect x="891.8" y="277" width="0.2" height="15.0" fill="rgb(248,108,1)" rx="2" ry="2" />
<text  x="894.83" y="287.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_insert_unique_node (88 samples, 0.18%)</title><rect x="1157.6" y="453" width="2.2" height="15.0" fill="rgb(217,54,10)" rx="2" ry="2" />
<text  x="1160.63" y="463.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::_M_create_storage (11 samples, 0.02%)</title><rect x="97.0" y="421" width="0.3" height="15.0" fill="rgb(226,151,32)" rx="2" ry="2" />
<text  x="100.03" y="431.5" ></text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::operator (47 samples, 0.10%)</title><rect x="748.1" y="389" width="1.1" height="15.0" fill="rgb(252,157,38)" rx="2" ry="2" />
<text  x="751.10" y="399.5" ></text>
</g>
<g >
<title>utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;::touch (6 samples, 0.01%)</title><rect x="728.4" y="421" width="0.1" height="15.0" fill="rgb(225,23,18)" rx="2" ry="2" />
<text  x="731.40" y="431.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt; &gt;, seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (91 samples, 0.19%)</title><rect x="802.2" y="261" width="2.2" height="15.0" fill="rgb(223,194,12)" rx="2" ry="2" />
<text  x="805.20" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_clear (7 samples, 0.01%)</title><rect x="445.0" y="309" width="0.2" height="15.0" fill="rgb(240,22,45)" rx="2" ry="2" />
<text  x="447.98" y="319.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (10 samples, 0.02%)</title><rect x="1177.8" y="629" width="0.3" height="15.0" fill="rgb(239,118,37)" rx="2" ry="2" />
<text  x="1180.85" y="639.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::push_mutation_fragment&lt;schema const&amp;, reader_permit&amp;, partition_start&gt; (10 samples, 0.02%)</title><rect x="495.1" y="261" width="0.2" height="15.0" fill="rgb(236,89,19)" rx="2" ry="2" />
<text  x="498.06" y="271.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperation (72 samples, 0.15%)</title><rect x="17.4" y="357" width="1.7" height="15.0" fill="rgb(215,58,6)" rx="2" ry="2" />
<text  x="20.38" y="367.5" ></text>
</g>
<g >
<title>std::__optional_hash_call_base&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, true&gt;::operator (7 samples, 0.01%)</title><rect x="814.0" y="277" width="0.2" height="15.0" fill="rgb(236,81,1)" rx="2" ry="2" />
<text  x="817.01" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (114 samples, 0.24%)</title><rect x="1021.7" y="229" width="2.8" height="15.0" fill="rgb(239,154,31)" rx="2" ry="2" />
<text  x="1024.75" y="239.5" ></text>
</g>
<g >
<title>double_decker&lt;long, cache_entry, dht::raw_token_less_comparator, dht::ring_position_comparator, 16,  (92 samples, 0.19%)</title><rect x="522.2" y="309" width="2.2" height="15.0" fill="rgb(232,3,0)" rx="2" ry="2" />
<text  x="525.17" y="319.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::move_it (5 samples, 0.01%)</title><rect x="696.5" y="469" width="0.1" height="15.0" fill="rgb(251,223,21)" rx="2" ry="2" />
<text  x="699.46" y="479.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::clear (8 samples, 0.02%)</title><rect x="833.2" y="437" width="0.1" height="15.0" fill="rgb(225,113,11)" rx="2" ry="2" />
<text  x="836.15" y="447.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment (5 samples, 0.01%)</title><rect x="146.1" y="245" width="0.1" height="15.0" fill="rgb(228,190,29)" rx="2" ry="2" />
<text  x="149.06" y="255.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (20 samples, 0.04%)</title><rect x="530.7" y="341" width="0.5" height="15.0" fill="rgb(215,203,20)" rx="2" ry="2" />
<text  x="533.67" y="351.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;utils::small_vector&lt;service::storage_proxy::unique_response_handler, 1ul&gt; &gt; &gt;::invoke&lt;service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;, service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (15 samples, 0.03%)</title><rect x="1142.4" y="277" width="0.3" height="15.0" fill="rgb(223,134,51)" rx="2" ry="2" />
<text  x="1145.36" y="287.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (17 samples, 0.04%)</title><rect x="926.5" y="389" width="0.4" height="15.0" fill="rgb(225,99,1)" rx="2" ry="2" />
<text  x="929.49" y="399.5" ></text>
</g>
<g >
<title>skip_empty_fragments&lt;managed_bytes_basic_view&lt; (5 samples, 0.01%)</title><rect x="482.0" y="213" width="0.1" height="15.0" fill="rgb(235,161,27)" rx="2" ry="2" />
<text  x="484.98" y="223.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;void&gt;::set_urgent_state (17 samples, 0.04%)</title><rect x="48.8" y="485" width="0.5" height="15.0" fill="rgb(254,55,30)" rx="2" ry="2" />
<text  x="51.85" y="495.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (13 samples, 0.03%)</title><rect x="756.8" y="293" width="0.3" height="15.0" fill="rgb(219,207,13)" rx="2" ry="2" />
<text  x="759.80" y="303.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (18 samples, 0.04%)</title><rect x="509.2" y="277" width="0.5" height="15.0" fill="rgb(212,179,15)" rx="2" ry="2" />
<text  x="512.24" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::splice (16 samples, 0.03%)</title><rect x="133.7" y="245" width="0.4" height="15.0" fill="rgb(254,128,2)" rx="2" ry="2" />
<text  x="136.73" y="255.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (10 samples, 0.02%)</title><rect x="516.3" y="325" width="0.2" height="15.0" fill="rgb(227,151,25)" rx="2" ry="2" />
<text  x="519.30" y="335.5" ></text>
</g>
<g >
<title>[unknown] (14 samples, 0.03%)</title><rect x="21.4" y="597" width="0.4" height="15.0" fill="rgb(217,5,11)" rx="2" ry="2" />
<text  x="24.45" y="607.5" ></text>
</g>
<g >
<title>row_cache::make_reader (490 samples, 1.01%)</title><rect x="518.7" y="341" width="11.9" height="15.0" fill="rgb(220,87,49)" rx="2" ry="2" />
<text  x="521.66" y="351.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (5 samples, 0.01%)</title><rect x="934.0" y="357" width="0.2" height="15.0" fill="rgb(213,69,38)" rx="2" ry="2" />
<text  x="937.04" y="367.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;std::tuple&lt;std::optional&lt;clustering_key_prefix&gt; &gt; &gt; &gt;::satisfy_with_result_of&lt;seastar::future&lt;mutation_fragment*&gt;::then_impl_nrvo&lt;query::consume_page&lt; (32 samples, 0.07%)</title><rect x="683.3" y="485" width="0.7" height="15.0" fill="rgb(230,132,24)" rx="2" ry="2" />
<text  x="686.26" y="495.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;schema_registry_entry&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;schema_registry_entry&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (5 samples, 0.01%)</title><rect x="979.6" y="341" width="0.2" height="15.0" fill="rgb(229,109,49)" rx="2" ry="2" />
<text  x="982.63" y="351.5" ></text>
</g>
<g >
<title>seastar::gate::leave (5 samples, 0.01%)</title><rect x="45.4" y="469" width="0.1" height="15.0" fill="rgb(205,22,44)" rx="2" ry="2" />
<text  x="48.37" y="479.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_Optional_payload_base (7 samples, 0.01%)</title><rect x="801.2" y="245" width="0.2" height="15.0" fill="rgb(243,9,26)" rx="2" ry="2" />
<text  x="804.25" y="255.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;reader_concurrency_semaphore::entry&gt;::_M_reset (22 samples, 0.05%)</title><rect x="69.9" y="389" width="0.6" height="15.0" fill="rgb(220,72,4)" rx="2" ry="2" />
<text  x="72.92" y="399.5" ></text>
</g>
<g >
<title>__libc_start_main (47,461 samples, 97.96%)</title><rect x="21.9" y="629" width="1155.9" height="15.0" fill="rgb(224,199,1)" rx="2" ry="2" />
<text  x="24.86" y="639.5" >__libc_start_main</text>
</g>
<g >
<title>compound_type&lt; (68 samples, 0.14%)</title><rect x="914.8" y="373" width="1.6" height="15.0" fill="rgb(230,218,21)" rx="2" ry="2" />
<text  x="917.77" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::~vector (17 samples, 0.04%)</title><rect x="942.1" y="405" width="0.4" height="15.0" fill="rgb(222,191,30)" rx="2" ry="2" />
<text  x="945.05" y="415.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (67 samples, 0.14%)</title><rect x="735.9" y="341" width="1.7" height="15.0" fill="rgb(214,9,22)" rx="2" ry="2" />
<text  x="738.92" y="351.5" ></text>
</g>
<g >
<title>dht::murmur3_partitioner::get_token (467 samples, 0.96%)</title><rect x="914.6" y="389" width="11.4" height="15.0" fill="rgb(243,22,17)" rx="2" ry="2" />
<text  x="917.63" y="399.5" ></text>
</g>
<g >
<title>std::construct_at&lt;mutation_fragment, schema const&amp;, reader_permit&amp;, partition_start&gt; (182 samples, 0.38%)</title><rect x="501.0" y="229" width="4.5" height="15.0" fill="rgb(212,199,36)" rx="2" ry="2" />
<text  x="504.03" y="239.5" ></text>
</g>
<g >
<title>query::result::builder::build (63 samples, 0.13%)</title><rect x="590.9" y="437" width="1.5" height="15.0" fill="rgb(241,170,39)" rx="2" ry="2" />
<text  x="593.85" y="447.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_prepared (4,157 samples, 8.58%)</title><rect x="728.6" y="437" width="101.3" height="15.0" fill="rgb(213,146,36)" rx="2" ry="2" />
<text  x="731.64" y="447.5" >cql3::query_..</text>
</g>
<g >
<title>seastar::parallel_for_each&lt;std::_List_iterator&lt;flat_mutation_reader&gt;, mutation_reader_merger::close (793 samples, 1.64%)</title><rect x="550.3" y="357" width="19.4" height="15.0" fill="rgb(254,218,36)" rx="2" ry="2" />
<text  x="553.35" y="367.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (8 samples, 0.02%)</title><rect x="265.0" y="341" width="0.2" height="15.0" fill="rgb(211,197,43)" rx="2" ry="2" />
<text  x="267.96" y="351.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_digest_requests (6 samples, 0.01%)</title><rect x="1056.6" y="325" width="0.1" height="15.0" fill="rgb(217,142,16)" rx="2" ry="2" />
<text  x="1059.58" y="335.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (9 samples, 0.02%)</title><rect x="389.1" y="229" width="0.2" height="15.0" fill="rgb(221,196,35)" rx="2" ry="2" />
<text  x="392.08" y="239.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;,  (244 samples, 0.50%)</title><rect x="722.4" y="421" width="5.9" height="15.0" fill="rgb(231,188,11)" rx="2" ry="2" />
<text  x="725.38" y="431.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;query::result&gt;::make&lt;query::result&gt; (8 samples, 0.02%)</title><rect x="75.7" y="453" width="0.2" height="15.0" fill="rgb(239,20,37)" rx="2" ry="2" />
<text  x="78.67" y="463.5" ></text>
</g>
<g >
<title>utils::basic_ihistogram&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt; &gt;::mark&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; (47 samples, 0.10%)</title><rect x="675.2" y="453" width="1.1" height="15.0" fill="rgb(239,50,40)" rx="2" ry="2" />
<text  x="678.18" y="463.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::get_mutations (19 samples, 0.04%)</title><rect x="862.9" y="389" width="0.5" height="15.0" fill="rgb(229,32,34)" rx="2" ry="2" />
<text  x="865.94" y="399.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_Optional_payload_base (14 samples, 0.03%)</title><rect x="98.6" y="405" width="0.4" height="15.0" fill="rgb(233,90,8)" rx="2" ry="2" />
<text  x="101.63" y="415.5" ></text>
</g>
<g >
<title>reader_permit::impl::impl (35 samples, 0.07%)</title><rect x="1040.7" y="213" width="0.8" height="15.0" fill="rgb(224,94,49)" rx="2" ry="2" />
<text  x="1043.67" y="223.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (5 samples, 0.01%)</title><rect x="17.2" y="293" width="0.1" height="15.0" fill="rgb(214,138,9)" rx="2" ry="2" />
<text  x="20.16" y="303.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;service::digest_read_resolver&gt;::~shared_ptr_count_for (90 samples, 0.19%)</title><rect x="692.4" y="485" width="2.2" height="15.0" fill="rgb(210,185,42)" rx="2" ry="2" />
<text  x="695.45" y="495.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::move_it (5 samples, 0.01%)</title><rect x="663.5" y="453" width="0.1" height="15.0" fill="rgb(212,2,46)" rx="2" ry="2" />
<text  x="666.46" y="463.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (192 samples, 0.40%)</title><rect x="15.2" y="389" width="4.7" height="15.0" fill="rgb(232,118,19)" rx="2" ry="2" />
<text  x="18.21" y="399.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (7,020 samples, 14.49%)</title><rect x="111.5" y="389" width="171.0" height="15.0" fill="rgb(233,135,16)" rx="2" ry="2" />
<text  x="114.49" y="399.5" >merging_reader&lt;mutatio..</text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::constant&gt;  (532 samples, 1.10%)</title><rect x="889.4" y="309" width="13.0" height="15.0" fill="rgb(212,206,2)" rx="2" ry="2" />
<text  x="892.44" y="319.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (8 samples, 0.02%)</title><rect x="678.9" y="453" width="0.2" height="15.0" fill="rgb(227,39,42)" rx="2" ry="2" />
<text  x="681.90" y="463.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::net::inet_address&gt;::operator (7 samples, 0.01%)</title><rect x="706.2" y="421" width="0.2" height="15.0" fill="rgb(226,169,15)" rx="2" ry="2" />
<text  x="709.21" y="431.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_last_fragment_kind, 4ul&gt;::small_vector (34 samples, 0.07%)</title><rect x="448.5" y="261" width="0.8" height="15.0" fill="rgb(216,36,21)" rx="2" ry="2" />
<text  x="451.49" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (28 samples, 0.06%)</title><rect x="1023.8" y="213" width="0.7" height="15.0" fill="rgb(207,196,53)" rx="2" ry="2" />
<text  x="1026.84" y="223.5" ></text>
</g>
<g >
<title>operator delete (44 samples, 0.09%)</title><rect x="1126.1" y="421" width="1.1" height="15.0" fill="rgb(233,184,13)" rx="2" ry="2" />
<text  x="1129.14" y="431.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_last_fragment_kind, 4ul&gt;::~small_vector (5 samples, 0.01%)</title><rect x="451.2" y="309" width="0.1" height="15.0" fill="rgb(234,75,8)" rx="2" ry="2" />
<text  x="454.19" y="319.5" ></text>
</g>
<g >
<title>operator delete (27 samples, 0.06%)</title><rect x="638.3" y="485" width="0.7" height="15.0" fill="rgb(223,215,42)" rx="2" ry="2" />
<text  x="641.30" y="495.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (9 samples, 0.02%)</title><rect x="547.7" y="421" width="0.2" height="15.0" fill="rgb(250,161,44)" rx="2" ry="2" />
<text  x="550.67" y="431.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (29 samples, 0.06%)</title><rect x="1122.1" y="389" width="0.7" height="15.0" fill="rgb(253,171,47)" rx="2" ry="2" />
<text  x="1125.14" y="399.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (13 samples, 0.03%)</title><rect x="1122.5" y="373" width="0.3" height="15.0" fill="rgb(245,6,27)" rx="2" ry="2" />
<text  x="1125.53" y="383.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (27 samples, 0.06%)</title><rect x="915.3" y="357" width="0.7" height="15.0" fill="rgb(233,117,50)" rx="2" ry="2" />
<text  x="918.33" y="367.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (17 samples, 0.04%)</title><rect x="553.2" y="309" width="0.4" height="15.0" fill="rgb(206,31,26)" rx="2" ry="2" />
<text  x="556.17" y="319.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (27 samples, 0.06%)</title><rect x="1142.1" y="453" width="0.6" height="15.0" fill="rgb(216,11,24)" rx="2" ry="2" />
<text  x="1145.07" y="463.5" ></text>
</g>
<g >
<title>mutation_reader_merger::~mutation_reader_merger (7 samples, 0.01%)</title><rect x="582.7" y="389" width="0.2" height="15.0" fill="rgb(221,172,38)" rx="2" ry="2" />
<text  x="585.74" y="399.5" ></text>
</g>
<g >
<title>mutation_partition_view::do_accept&lt;partition_builder&gt; (14 samples, 0.03%)</title><rect x="1141.5" y="245" width="0.3" height="15.0" fill="rgb(238,213,16)" rx="2" ry="2" />
<text  x="1144.46" y="255.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::clear (14 samples, 0.03%)</title><rect x="804.0" y="213" width="0.4" height="15.0" fill="rgb(251,95,50)" rx="2" ry="2" />
<text  x="807.02" y="223.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::get0 (44 samples, 0.09%)</title><rect x="265.2" y="357" width="1.0" height="15.0" fill="rgb(234,102,49)" rx="2" ry="2" />
<text  x="268.16" y="367.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (11 samples, 0.02%)</title><rect x="705.9" y="405" width="0.2" height="15.0" fill="rgb(240,102,54)" rx="2" ry="2" />
<text  x="708.87" y="415.5" ></text>
</g>
<g >
<title>bytes_ostream::chunk::~chunk (25 samples, 0.05%)</title><rect x="37.3" y="405" width="0.6" height="15.0" fill="rgb(230,201,7)" rx="2" ry="2" />
<text  x="40.30" y="415.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::at (57 samples, 0.12%)</title><rect x="817.9" y="325" width="1.4" height="15.0" fill="rgb(230,23,28)" rx="2" ry="2" />
<text  x="820.88" y="335.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (5 samples, 0.01%)</title><rect x="655.8" y="453" width="0.1" height="15.0" fill="rgb(244,168,28)" rx="2" ry="2" />
<text  x="658.81" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (19 samples, 0.04%)</title><rect x="596.5" y="357" width="0.5" height="15.0" fill="rgb(234,101,13)" rx="2" ry="2" />
<text  x="599.50" y="367.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::find (12 samples, 0.02%)</title><rect x="955.1" y="341" width="0.2" height="15.0" fill="rgb(208,62,3)" rx="2" ry="2" />
<text  x="958.06" y="351.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::visit&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (330 samples, 0.68%)</title><rect x="393.0" y="229" width="8.0" height="15.0" fill="rgb(223,188,46)" rx="2" ry="2" />
<text  x="395.96" y="239.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;query::querier&lt; (245 samples, 0.51%)</title><rect x="611.4" y="437" width="6.0" height="15.0" fill="rgb(222,110,25)" rx="2" ry="2" />
<text  x="614.41" y="447.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::clear (20 samples, 0.04%)</title><rect x="137.9" y="261" width="0.5" height="15.0" fill="rgb(230,5,41)" rx="2" ry="2" />
<text  x="140.92" y="271.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_slice_or_needs_filtering (7 samples, 0.01%)</title><rect x="646.3" y="405" width="0.2" height="15.0" fill="rgb(227,20,14)" rx="2" ry="2" />
<text  x="649.31" y="415.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (6 samples, 0.01%)</title><rect x="520.0" y="325" width="0.1" height="15.0" fill="rgb(248,43,12)" rx="2" ry="2" />
<text  x="522.95" y="335.5" ></text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (12 samples, 0.02%)</title><rect x="11.4" y="581" width="0.3" height="15.0" fill="rgb(247,148,2)" rx="2" ry="2" />
<text  x="14.41" y="591.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;bytes_ostream::chunk, std::default_delete&lt;bytes_ostream::chunk&gt; &gt;::~unique_ptr (75 samples, 0.15%)</title><rect x="36.1" y="437" width="1.8" height="15.0" fill="rgb(205,81,29)" rx="2" ry="2" />
<text  x="39.11" y="447.5" ></text>
</g>
<g >
<title>std::make_unique&lt;compact_for_query&lt; (7 samples, 0.01%)</title><rect x="416.9" y="373" width="0.1" height="15.0" fill="rgb(221,33,21)" rx="2" ry="2" />
<text  x="419.85" y="383.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::digest_read_resolver&gt;::~shared_ptr (19 samples, 0.04%)</title><rect x="988.8" y="341" width="0.5" height="15.0" fill="rgb(233,137,23)" rx="2" ry="2" />
<text  x="991.84" y="351.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::entry::entry (54 samples, 0.11%)</title><rect x="1027.7" y="197" width="1.3" height="15.0" fill="rgb(220,22,17)" rx="2" ry="2" />
<text  x="1030.69" y="207.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (8 samples, 0.02%)</title><rect x="619.2" y="373" width="0.2" height="15.0" fill="rgb(218,64,51)" rx="2" ry="2" />
<text  x="622.23" y="383.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (8 samples, 0.02%)</title><rect x="440.9" y="261" width="0.2" height="15.0" fill="rgb(242,187,37)" rx="2" ry="2" />
<text  x="443.92" y="271.5" ></text>
</g>
<g >
<title>ser::serializer&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;::write_fragmented&lt;bytes_ostream, fragment_range&lt;managed_bytes_basic_view&lt; (6 samples, 0.01%)</title><rect x="331.2" y="181" width="0.1" height="15.0" fill="rgb(235,99,45)" rx="2" ry="2" />
<text  x="334.16" y="191.5" ></text>
</g>
<g >
<title>service::endpoints_to_replica_ids (105 samples, 0.22%)</title><rect x="1153.5" y="469" width="2.5" height="15.0" fill="rgb(230,99,14)" rx="2" ry="2" />
<text  x="1156.47" y="479.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::get_static_row (177 samples, 0.37%)</title><rect x="242.8" y="245" width="4.3" height="15.0" fill="rgb(214,229,16)" rx="2" ry="2" />
<text  x="245.75" y="255.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (14 samples, 0.03%)</title><rect x="921.7" y="357" width="0.4" height="15.0" fill="rgb(242,196,7)" rx="2" ry="2" />
<text  x="924.71" y="367.5" ></text>
</g>
<g >
<title>_ZSt5applyIZN7seastar8internal12do_with_implISt4pairIN4auth17role_or_anonymousENS4_8resourceEEZNS4_17permissions_cache3getERKS5_RKS6_E3$_0JEEEDaOT_OT0_DpOT1_EUlDpOT_E_St5tupleIJOS7_EEEDcSF_SH_ (76 samples, 0.16%)</title><rect x="783.0" y="261" width="1.9" height="15.0" fill="rgb(254,206,30)" rx="2" ry="2" />
<text  x="786.03" y="271.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (196 samples, 0.40%)</title><rect x="15.2" y="405" width="4.7" height="15.0" fill="rgb(236,211,19)" rx="2" ry="2" />
<text  x="18.16" y="415.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (12 samples, 0.02%)</title><rect x="627.1" y="485" width="0.3" height="15.0" fill="rgb(218,114,42)" rx="2" ry="2" />
<text  x="630.10" y="495.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (85 samples, 0.18%)</title><rect x="844.8" y="373" width="2.0" height="15.0" fill="rgb(230,167,11)" rx="2" ry="2" />
<text  x="847.77" y="383.5" ></text>
</g>
<g >
<title>std::type_info::operator== (6 samples, 0.01%)</title><rect x="1174.1" y="405" width="0.1" height="15.0" fill="rgb(236,128,51)" rx="2" ry="2" />
<text  x="1177.10" y="415.5" ></text>
</g>
<g >
<title>std::pair&lt;auth::authenticated_user, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;::pair (20 samples, 0.04%)</title><rect x="738.5" y="373" width="0.4" height="15.0" fill="rgb(234,49,4)" rx="2" ry="2" />
<text  x="741.45" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (22 samples, 0.05%)</title><rect x="987.3" y="261" width="0.5" height="15.0" fill="rgb(250,185,45)" rx="2" ry="2" />
<text  x="990.26" y="271.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reserve&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::partition_snapshot_flat_reader&lt;memtable&amp;&gt; (564 samples, 1.16%)</title><rect x="494.5" y="277" width="13.7" height="15.0" fill="rgb(208,4,19)" rx="2" ry="2" />
<text  x="497.48" y="287.5" ></text>
</g>
<g >
<title>compound_type&lt; (165 samples, 0.34%)</title><rect x="477.3" y="213" width="4.0" height="15.0" fill="rgb(206,160,13)" rx="2" ry="2" />
<text  x="480.33" y="223.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (23,611 samples, 48.74%)</title><rect x="49.3" y="485" width="575.0" height="15.0" fill="rgb(235,23,10)" rx="2" ry="2" />
<text  x="52.26" y="495.5" >seastar::noncopyable_function&lt;seastar::future&lt;void&gt; </text>
</g>
<g >
<title>query::querier_base::close (1,473 samples, 3.04%)</title><rect x="547.9" y="437" width="35.9" height="15.0" fill="rgb(205,69,16)" rx="2" ry="2" />
<text  x="550.89" y="447.5" >que..</text>
</g>
<g >
<title>cql3::statements::select_statement::do_get_limit (7 samples, 0.01%)</title><rect x="1121.4" y="389" width="0.1" height="15.0" fill="rgb(210,32,41)" rx="2" ry="2" />
<text  x="1124.36" y="399.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (7 samples, 0.01%)</title><rect x="816.3" y="341" width="0.2" height="15.0" fill="rgb(235,133,44)" rx="2" ry="2" />
<text  x="819.30" y="351.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (13 samples, 0.03%)</title><rect x="355.4" y="149" width="0.3" height="15.0" fill="rgb(249,124,29)" rx="2" ry="2" />
<text  x="358.38" y="159.5" ></text>
</g>
<g >
<title>utils::tuple_hash::operator (188 samples, 0.39%)</title><rect x="795.7" y="165" width="4.6" height="15.0" fill="rgb(211,130,12)" rx="2" ry="2" />
<text  x="798.69" y="175.5" ></text>
</g>
<g >
<title>basic_atomic_cell_view&lt; (337 samples, 0.70%)</title><rect x="373.9" y="165" width="8.2" height="15.0" fill="rgb(212,119,3)" rx="2" ry="2" />
<text  x="376.91" y="175.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::~merging_reader (8 samples, 0.02%)</title><rect x="1175.6" y="437" width="0.2" height="15.0" fill="rgb(216,118,13)" rx="2" ry="2" />
<text  x="1178.56" y="447.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate (759 samples, 1.57%)</title><rect x="885.9" y="341" width="18.5" height="15.0" fill="rgb(205,183,43)" rx="2" ry="2" />
<text  x="888.88" y="351.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (65 samples, 0.13%)</title><rect x="15.3" y="341" width="1.5" height="15.0" fill="rgb(243,41,24)" rx="2" ry="2" />
<text  x="18.26" y="351.5" ></text>
</g>
<g >
<title>seastar::gate::enter (10 samples, 0.02%)</title><rect x="1041.2" y="181" width="0.3" height="15.0" fill="rgb(224,111,46)" rx="2" ry="2" />
<text  x="1044.23" y="191.5" ></text>
</g>
<g >
<title>bytes_view_hasher::update (20 samples, 0.04%)</title><rect x="726.9" y="293" width="0.5" height="15.0" fill="rgb(213,88,35)" rx="2" ry="2" />
<text  x="729.93" y="303.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::~_Deque_base (60 samples, 0.12%)</title><rect x="615.1" y="389" width="1.5" height="15.0" fill="rgb(207,120,37)" rx="2" ry="2" />
<text  x="618.14" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (55 samples, 0.11%)</title><rect x="749.3" y="389" width="1.4" height="15.0" fill="rgb(210,135,54)" rx="2" ry="2" />
<text  x="752.32" y="399.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::move_it (10 samples, 0.02%)</title><rect x="630.0" y="485" width="0.2" height="15.0" fill="rgb(224,32,44)" rx="2" ry="2" />
<text  x="633.00" y="495.5" ></text>
</g>
<g >
<title>seastar::schedule_urgent (18 samples, 0.04%)</title><rect x="1145.1" y="501" width="0.4" height="15.0" fill="rgb(206,23,14)" rx="2" ry="2" />
<text  x="1148.11" y="511.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (30 samples, 0.06%)</title><rect x="1070.9" y="293" width="0.7" height="15.0" fill="rgb(254,49,9)" rx="2" ry="2" />
<text  x="1073.90" y="303.5" ></text>
</g>
<g >
<title>operator new (34 samples, 0.07%)</title><rect x="941.2" y="373" width="0.9" height="15.0" fill="rgb(250,45,6)" rx="2" ry="2" />
<text  x="944.22" y="383.5" ></text>
</g>
<g >
<title>std::__optional_hash_call_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, true&gt;::operator (20 samples, 0.04%)</title><rect x="742.0" y="309" width="0.5" height="15.0" fill="rgb(216,203,34)" rx="2" ry="2" />
<text  x="744.99" y="319.5" ></text>
</g>
<g >
<title>utils::timed_rate_moving_average_and_histogram::mark&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; (17 samples, 0.04%)</title><rect x="682.8" y="485" width="0.4" height="15.0" fill="rgb(223,188,7)" rx="2" ry="2" />
<text  x="685.80" y="495.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_rehash_aux (59 samples, 0.12%)</title><rect x="1158.3" y="421" width="1.4" height="15.0" fill="rgb(245,222,23)" rx="2" ry="2" />
<text  x="1161.26" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (10 samples, 0.02%)</title><rect x="1133.7" y="421" width="0.2" height="15.0" fill="rgb(236,83,46)" rx="2" ry="2" />
<text  x="1136.69" y="431.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::make_partition_slice (624 samples, 1.29%)</title><rect x="1110.0" y="421" width="15.2" height="15.0" fill="rgb(220,107,35)" rx="2" ry="2" />
<text  x="1112.96" y="431.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (27 samples, 0.06%)</title><rect x="1142.1" y="389" width="0.6" height="15.0" fill="rgb(251,140,47)" rx="2" ry="2" />
<text  x="1145.07" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (55 samples, 0.11%)</title><rect x="533.7" y="389" width="1.4" height="15.0" fill="rgb(206,128,45)" rx="2" ry="2" />
<text  x="536.74" y="399.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;::operator (105 samples, 0.22%)</title><rect x="724.9" y="325" width="2.5" height="15.0" fill="rgb(207,35,38)" rx="2" ry="2" />
<text  x="727.86" y="335.5" ></text>
</g>
<g >
<title>table::query (30 samples, 0.06%)</title><rect x="1175.3" y="501" width="0.7" height="15.0" fill="rgb(231,118,50)" rx="2" ry="2" />
<text  x="1178.29" y="511.5" ></text>
</g>
<g >
<title>std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (104 samples, 0.21%)</title><rect x="408.3" y="293" width="2.6" height="15.0" fill="rgb(245,151,16)" rx="2" ry="2" />
<text  x="411.33" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (23 samples, 0.05%)</title><rect x="633.6" y="469" width="0.5" height="15.0" fill="rgb(248,110,43)" rx="2" ry="2" />
<text  x="636.58" y="479.5" ></text>
</g>
<g >
<title>boost::intrusive::bstree_impl&lt;boost::intrusive::mhtraits&lt;range_tombstone_entry, boost::intrusive::set_member_hook&lt;boost::intrusive::link_mode&lt; (35 samples, 0.07%)</title><rect x="560.8" y="293" width="0.9" height="15.0" fill="rgb(229,57,4)" rx="2" ry="2" />
<text  x="563.85" y="303.5" ></text>
</g>
<g >
<title>operator new (94 samples, 0.19%)</title><rect x="989.6" y="325" width="2.3" height="15.0" fill="rgb(225,213,32)" rx="2" ry="2" />
<text  x="992.64" y="335.5" ></text>
</g>
<g >
<title>std::__equal&lt;false&gt;::equal&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;*, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const*&gt; (69 samples, 0.14%)</title><rect x="793.8" y="149" width="1.7" height="15.0" fill="rgb(218,53,23)" rx="2" ry="2" />
<text  x="796.84" y="159.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;flat_mutation_reader  (4,580 samples, 9.45%)</title><rect x="421.9" y="373" width="111.6" height="15.0" fill="rgb(236,13,20)" rx="2" ry="2" />
<text  x="424.92" y="383.5" >std::_Functio..</text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::has_slice_or_needs_filtering (16 samples, 0.03%)</title><rect x="947.6" y="373" width="0.4" height="15.0" fill="rgb(248,220,22)" rx="2" ry="2" />
<text  x="950.60" y="383.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::upper_bound&lt;mutation_partition, schema const&amp;, nonwrapping_interval&lt;clustering_key_prefix&gt; const&amp;&gt; (10 samples, 0.02%)</title><rect x="212.2" y="149" width="0.3" height="15.0" fill="rgb(249,55,52)" rx="2" ry="2" />
<text  x="215.21" y="159.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::future (6 samples, 0.01%)</title><rect x="966.6" y="373" width="0.2" height="15.0" fill="rgb(245,53,18)" rx="2" ry="2" />
<text  x="969.63" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (26 samples, 0.05%)</title><rect x="513.1" y="261" width="0.6" height="15.0" fill="rgb(210,138,11)" rx="2" ry="2" />
<text  x="516.08" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (16 samples, 0.03%)</title><rect x="403.3" y="229" width="0.4" height="15.0" fill="rgb(215,153,6)" rx="2" ry="2" />
<text  x="406.33" y="239.5" ></text>
</g>
<g >
<title>std::optional&lt;query::querier&lt; (79 samples, 0.16%)</title><rect x="617.8" y="437" width="2.0" height="15.0" fill="rgb(207,62,40)" rx="2" ry="2" />
<text  x="620.84" y="447.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::query_options, db::consistency_level&amp;, std::vector&lt;cql3::raw_value, std::allocator&lt;cql3::raw_value&gt; &gt;, cql3::query_options::specific_options&gt; (275 samples, 0.57%)</title><rect x="847.6" y="453" width="6.7" height="15.0" fill="rgb(228,134,33)" rx="2" ry="2" />
<text  x="850.57" y="463.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (6 samples, 0.01%)</title><rect x="297.3" y="261" width="0.1" height="15.0" fill="rgb(223,139,54)" rx="2" ry="2" />
<text  x="300.26" y="271.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (26 samples, 0.05%)</title><rect x="419.3" y="421" width="0.6" height="15.0" fill="rgb(217,223,23)" rx="2" ry="2" />
<text  x="422.26" y="431.5" ></text>
</g>
<g >
<title>[unknown] (487 samples, 1.01%)</title><rect x="10.0" y="629" width="11.9" height="15.0" fill="rgb(243,209,47)" rx="2" ry="2" />
<text  x="13.00" y="639.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::execute (59 samples, 0.12%)</title><rect x="747.8" y="405" width="1.4" height="15.0" fill="rgb(240,209,44)" rx="2" ry="2" />
<text  x="750.81" y="415.5" ></text>
</g>
<g >
<title>partition_version_ref::operator (31 samples, 0.06%)</title><rect x="233.6" y="213" width="0.8" height="15.0" fill="rgb(234,139,52)" rx="2" ry="2" />
<text  x="236.64" y="223.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (16 samples, 0.03%)</title><rect x="1108.6" y="389" width="0.4" height="15.0" fill="rgb(237,228,26)" rx="2" ry="2" />
<text  x="1111.58" y="399.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::range_tombstone_accumulator (126 samples, 0.26%)</title><rect x="541.0" y="389" width="3.1" height="15.0" fill="rgb(214,169,29)" rx="2" ry="2" />
<text  x="544.02" y="399.5" ></text>
</g>
<g >
<title>list_reader_selector::~list_reader_selector (31 samples, 0.06%)</title><rect x="572.8" y="373" width="0.7" height="15.0" fill="rgb(215,13,30)" rx="2" ry="2" />
<text  x="575.78" y="383.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::future&lt;void&gt;  (27 samples, 0.06%)</title><rect x="1142.1" y="357" width="0.6" height="15.0" fill="rgb(218,129,33)" rx="2" ry="2" />
<text  x="1145.07" y="367.5" ></text>
</g>
<g >
<title>sstring_hash::operator (41 samples, 0.08%)</title><rect x="838.8" y="373" width="1.0" height="15.0" fill="rgb(228,86,2)" rx="2" ry="2" />
<text  x="841.83" y="383.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (28 samples, 0.06%)</title><rect x="1106.4" y="389" width="0.6" height="15.0" fill="rgb(224,59,50)" rx="2" ry="2" />
<text  x="1109.36" y="399.5" ></text>
</g>
<g >
<title>seastar::internal::do_until_state&lt;executor&lt;test_read (6,109 samples, 12.61%)</title><rect x="711.5" y="501" width="148.8" height="15.0" fill="rgb(232,91,21)" rx="2" ry="2" />
<text  x="714.49" y="511.5" >seastar::internal::..</text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::~small_vector (19 samples, 0.04%)</title><rect x="443.1" y="293" width="0.5" height="15.0" fill="rgb(213,143,35)" rx="2" ry="2" />
<text  x="446.13" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (8 samples, 0.02%)</title><rect x="815.3" y="357" width="0.2" height="15.0" fill="rgb(249,71,6)" rx="2" ry="2" />
<text  x="818.28" y="367.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (7 samples, 0.01%)</title><rect x="786.3" y="229" width="0.2" height="15.0" fill="rgb(219,52,40)" rx="2" ry="2" />
<text  x="789.32" y="239.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::has_available_units (9 samples, 0.02%)</title><rect x="271.5" y="277" width="0.2" height="15.0" fill="rgb(253,13,46)" rx="2" ry="2" />
<text  x="274.47" y="287.5" ></text>
</g>
<g >
<title>operator delete (30 samples, 0.06%)</title><rect x="805.9" y="277" width="0.7" height="15.0" fill="rgb(217,183,8)" rx="2" ry="2" />
<text  x="808.90" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (117 samples, 0.24%)</title><rect x="1011.6" y="261" width="2.9" height="15.0" fill="rgb(238,190,21)" rx="2" ry="2" />
<text  x="1014.61" y="271.5" ></text>
</g>
<g >
<title>cql3::raw_value_view::with_value&lt;cql3::raw_value_view::validate (7 samples, 0.01%)</title><rect x="898.7" y="277" width="0.1" height="15.0" fill="rgb(252,11,32)" rx="2" ry="2" />
<text  x="901.67" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (8 samples, 0.02%)</title><rect x="590.5" y="389" width="0.2" height="15.0" fill="rgb(238,156,13)" rx="2" ry="2" />
<text  x="593.49" y="399.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (9 samples, 0.02%)</title><rect x="457.6" y="293" width="0.3" height="15.0" fill="rgb(245,143,36)" rx="2" ry="2" />
<text  x="460.65" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::~disable_abort_on_alloc_failure_temporarily (5 samples, 0.01%)</title><rect x="246.9" y="229" width="0.2" height="15.0" fill="rgb(251,162,31)" rx="2" ry="2" />
<text  x="249.94" y="239.5" ></text>
</g>
<g >
<title>query_state::query_state (201 samples, 0.41%)</title><rect x="592.7" y="437" width="4.9" height="15.0" fill="rgb(225,140,35)" rx="2" ry="2" />
<text  x="595.71" y="447.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::digest_read_resolver&gt;::~shared_ptr (8 samples, 0.02%)</title><rect x="997.4" y="325" width="0.2" height="15.0" fill="rgb(229,115,45)" rx="2" ry="2" />
<text  x="1000.36" y="335.5" ></text>
</g>
<g >
<title>bytes_view_hasher::finalize (39 samples, 0.08%)</title><rect x="743.6" y="261" width="1.0" height="15.0" fill="rgb(232,56,6)" rx="2" ry="2" />
<text  x="746.64" y="271.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::clear (7 samples, 0.01%)</title><rect x="580.5" y="357" width="0.1" height="15.0" fill="rgb(212,135,13)" rx="2" ry="2" />
<text  x="583.45" y="367.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (88 samples, 0.18%)</title><rect x="478.5" y="197" width="2.2" height="15.0" fill="rgb(225,35,7)" rx="2" ry="2" />
<text  x="481.52" y="207.5" ></text>
</g>
<g >
<title>database::get_unlimited_query_max_result_size (82 samples, 0.17%)</title><rect x="1134.8" y="405" width="2.0" height="15.0" fill="rgb(211,141,31)" rx="2" ry="2" />
<text  x="1137.78" y="415.5" ></text>
</g>
<g >
<title>reader_permit::consume (16 samples, 0.03%)</title><rect x="503.3" y="165" width="0.4" height="15.0" fill="rgb(247,13,53)" rx="2" ry="2" />
<text  x="506.32" y="175.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::execute (6,537 samples, 13.49%)</title><rect x="950.2" y="421" width="159.2" height="15.0" fill="rgb(248,188,24)" rx="2" ry="2" />
<text  x="953.19" y="431.5" >cql3::statements::se..</text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value, std::allocator&lt;cql3::raw_value&gt; &gt;::~vector (7 samples, 0.01%)</title><rect x="852.2" y="421" width="0.1" height="15.0" fill="rgb(248,173,45)" rx="2" ry="2" />
<text  x="855.15" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_next_bkt (49 samples, 0.10%)</title><rect x="1162.0" y="453" width="1.2" height="15.0" fill="rgb(222,2,9)" rx="2" ry="2" />
<text  x="1164.97" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (12 samples, 0.02%)</title><rect x="329.1" y="165" width="0.3" height="15.0" fill="rgb(221,220,24)" rx="2" ry="2" />
<text  x="332.07" y="175.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (12 samples, 0.02%)</title><rect x="637.4" y="485" width="0.2" height="15.0" fill="rgb(217,153,19)" rx="2" ry="2" />
<text  x="640.35" y="495.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (6 samples, 0.01%)</title><rect x="888.9" y="309" width="0.2" height="15.0" fill="rgb(207,177,10)" rx="2" ry="2" />
<text  x="891.93" y="319.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;std::tuple&lt;std::optional&lt;clustering_key_prefix&gt; &gt; &gt;::clear (7 samples, 0.01%)</title><rect x="604.1" y="437" width="0.2" height="15.0" fill="rgb(214,123,52)" rx="2" ry="2" />
<text  x="607.10" y="447.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (243 samples, 0.50%)</title><rect x="200.5" y="133" width="5.9" height="15.0" fill="rgb(225,208,22)" rx="2" ry="2" />
<text  x="203.47" y="143.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (70 samples, 0.14%)</title><rect x="677.0" y="453" width="1.7" height="15.0" fill="rgb(223,159,11)" rx="2" ry="2" />
<text  x="679.98" y="463.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (25 samples, 0.05%)</title><rect x="571.5" y="357" width="0.6" height="15.0" fill="rgb(237,145,46)" rx="2" ry="2" />
<text  x="574.52" y="367.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::do_fill_buffer (5 samples, 0.01%)</title><rect x="862.1" y="389" width="0.1" height="15.0" fill="rgb(252,35,54)" rx="2" ry="2" />
<text  x="865.06" y="399.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::deallocate (55 samples, 0.11%)</title><rect x="277.8" y="309" width="1.4" height="15.0" fill="rgb(218,30,5)" rx="2" ry="2" />
<text  x="280.85" y="319.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, enum_set&lt;super_enum&lt;auth::permission,  (581 samples, 1.20%)</title><rect x="786.8" y="229" width="14.1" height="15.0" fill="rgb(251,69,27)" rx="2" ry="2" />
<text  x="789.78" y="239.5" ></text>
</g>
<g >
<title>cql3::to_managed_bytes_opt (10 samples, 0.02%)</title><rect x="911.5" y="373" width="0.3" height="15.0" fill="rgb(229,167,38)" rx="2" ry="2" />
<text  x="914.51" y="383.5" ></text>
</g>
<g >
<title>std::hash&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::operator (5 samples, 0.01%)</title><rect x="757.8" y="341" width="0.2" height="15.0" fill="rgb(247,201,48)" rx="2" ry="2" />
<text  x="760.84" y="351.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_pausable&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (25 samples, 0.05%)</title><rect x="683.4" y="357" width="0.6" height="15.0" fill="rgb(214,89,23)" rx="2" ry="2" />
<text  x="686.38" y="367.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (81 samples, 0.17%)</title><rect x="824.0" y="325" width="1.9" height="15.0" fill="rgb(236,19,12)" rx="2" ry="2" />
<text  x="826.97" y="335.5" ></text>
</g>
<g >
<title>flush_reader::fill_buffer (10 samples, 0.02%)</title><rect x="21.4" y="437" width="0.3" height="15.0" fill="rgb(234,216,44)" rx="2" ry="2" />
<text  x="24.45" y="447.5" ></text>
</g>
<g >
<title>std::apply&lt;service::client_state::has_column_family_access (1,927 samples, 3.98%)</title><rect x="767.4" y="389" width="46.9" height="15.0" fill="rgb(243,127,47)" rx="2" ry="2" />
<text  x="770.39" y="399.5" >std:..</text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_9has_tokenERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES28_S2B_ (5 samples, 0.01%)</title><rect x="948.5" y="357" width="0.2" height="15.0" fill="rgb(249,58,4)" rx="2" ry="2" />
<text  x="951.53" y="367.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;service::digest_read_resolver&gt;::shared_ptr_count_for&lt;seastar::lw_shared_ptr&lt;schema const&gt;&amp;, db::consistency_level&amp;, unsigned long&amp;, unsigned long, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;&amp;&gt; (181 samples, 0.37%)</title><rect x="992.0" y="325" width="4.4" height="15.0" fill="rgb(218,91,4)" rx="2" ry="2" />
<text  x="995.01" y="335.5" ></text>
</g>
<g >
<title>utils::estimated_histogram::add (64 samples, 0.13%)</title><rect x="1163.9" y="469" width="1.5" height="15.0" fill="rgb(235,215,22)" rx="2" ry="2" />
<text  x="1166.89" y="479.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::~guard (10 samples, 0.02%)</title><rect x="524.6" y="309" width="0.3" height="15.0" fill="rgb(234,103,22)" rx="2" ry="2" />
<text  x="527.63" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (5 samples, 0.01%)</title><rect x="39.1" y="453" width="0.2" height="15.0" fill="rgb(241,179,32)" rx="2" ry="2" />
<text  x="42.13" y="463.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (27 samples, 0.06%)</title><rect x="326.0" y="181" width="0.7" height="15.0" fill="rgb(212,123,30)" rx="2" ry="2" />
<text  x="329.03" y="191.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::clear (6 samples, 0.01%)</title><rect x="695.5" y="485" width="0.2" height="15.0" fill="rgb(227,222,22)" rx="2" ry="2" />
<text  x="698.54" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (52 samples, 0.11%)</title><rect x="999.6" y="245" width="1.3" height="15.0" fill="rgb(240,31,39)" rx="2" ry="2" />
<text  x="1002.63" y="255.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (9 samples, 0.02%)</title><rect x="423.3" y="357" width="0.2" height="15.0" fill="rgb(207,94,48)" rx="2" ry="2" />
<text  x="426.26" y="367.5" ></text>
</g>
<g >
<title>std::optional&lt;clustering_key_prefix&gt;::operator=&lt;clustering_key_prefix const&amp;&gt; (12 samples, 0.02%)</title><rect x="224.6" y="229" width="0.3" height="15.0" fill="rgb(225,78,21)" rx="2" ry="2" />
<text  x="227.63" y="239.5" ></text>
</g>
<g >
<title>std::__lower_bound&lt;__gnu_cxx::__normal_iterator&lt;dht::token const*, std::vector&lt;dht::token, std::allocator&lt;dht::token&gt; &gt; &gt;, dht::token, __gnu_cxx::__ops::_Iter_less_val&gt; (8 samples, 0.02%)</title><rect x="1089.3" y="261" width="0.2" height="15.0" fill="rgb(238,126,11)" rx="2" ry="2" />
<text  x="1092.31" y="271.5" ></text>
</g>
<g >
<title>cql3::raw_value::make_value (25 samples, 0.05%)</title><rect x="901.4" y="293" width="0.6" height="15.0" fill="rgb(212,59,54)" rx="2" ry="2" />
<text  x="904.42" y="303.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::get_at (22 samples, 0.05%)</title><rect x="318.2" y="197" width="0.6" height="15.0" fill="rgb(218,80,3)" rx="2" ry="2" />
<text  x="321.23" y="207.5" ></text>
</g>
<g >
<title>reader_permit::set_max_result_size (9 samples, 0.02%)</title><rect x="63.5" y="453" width="0.2" height="15.0" fill="rgb(254,141,39)" rx="2" ry="2" />
<text  x="66.51" y="463.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::impl (28 samples, 0.06%)</title><rect x="493.5" y="277" width="0.7" height="15.0" fill="rgb(224,103,24)" rx="2" ry="2" />
<text  x="496.48" y="287.5" ></text>
</g>
<g >
<title>tracing::global_trace_state_ptr::global_trace_state_ptr (5 samples, 0.01%)</title><rect x="1054.5" y="277" width="0.1" height="15.0" fill="rgb(220,138,11)" rx="2" ry="2" />
<text  x="1057.48" y="287.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (7 samples, 0.01%)</title><rect x="166.8" y="133" width="0.2" height="15.0" fill="rgb(236,144,47)" rx="2" ry="2" />
<text  x="169.83" y="143.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (30 samples, 0.06%)</title><rect x="1105.0" y="373" width="0.7" height="15.0" fill="rgb(233,140,4)" rx="2" ry="2" />
<text  x="1107.97" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (81 samples, 0.17%)</title><rect x="1117.3" y="341" width="2.0" height="15.0" fill="rgb(242,48,26)" rx="2" ry="2" />
<text  x="1120.32" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (6 samples, 0.01%)</title><rect x="843.5" y="405" width="0.2" height="15.0" fill="rgb(250,188,21)" rx="2" ry="2" />
<text  x="846.53" y="415.5" ></text>
</g>
<g >
<title>absl::container_internal::operator== (6 samples, 0.01%)</title><rect x="836.4" y="389" width="0.1" height="15.0" fill="rgb(243,210,21)" rx="2" ry="2" />
<text  x="839.37" y="399.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (15 samples, 0.03%)</title><rect x="679.1" y="453" width="0.4" height="15.0" fill="rgb(243,191,10)" rx="2" ry="2" />
<text  x="682.10" y="463.5" ></text>
</g>
<g >
<title>basic_atomic_cell_view&lt; (157 samples, 0.32%)</title><rect x="343.2" y="165" width="3.8" height="15.0" fill="rgb(209,226,13)" rx="2" ry="2" />
<text  x="346.20" y="175.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (7 samples, 0.01%)</title><rect x="449.3" y="277" width="0.2" height="15.0" fill="rgb(238,12,30)" rx="2" ry="2" />
<text  x="452.32" y="287.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::set_urgent_state (16 samples, 0.03%)</title><rect x="664.2" y="469" width="0.4" height="15.0" fill="rgb(251,3,29)" rx="2" ry="2" />
<text  x="667.17" y="479.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (3,369 samples, 6.95%)</title><rect x="304.6" y="229" width="82.0" height="15.0" fill="rgb(246,158,22)" rx="2" ry="2" />
<text  x="307.57" y="239.5" >compact_m..</text>
</g>
<g >
<title>seastar::future_state_base::any::operator= (5 samples, 0.01%)</title><rect x="827.6" y="389" width="0.1" height="15.0" fill="rgb(246,198,24)" rx="2" ry="2" />
<text  x="830.55" y="399.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt;::_M_reset (6 samples, 0.01%)</title><rect x="567.1" y="293" width="0.1" height="15.0" fill="rgb(220,97,3)" rx="2" ry="2" />
<text  x="570.08" y="303.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::storage_proxy&gt;::~shared_ptr (6 samples, 0.01%)</title><rect x="960.5" y="389" width="0.1" height="15.0" fill="rgb(226,59,20)" rx="2" ry="2" />
<text  x="963.49" y="399.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::maybe_decay_reserve (6 samples, 0.01%)</title><rect x="218.2" y="181" width="0.1" height="15.0" fill="rgb(251,168,25)" rx="2" ry="2" />
<text  x="221.15" y="191.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::construct&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (5 samples, 0.01%)</title><rect x="15.4" y="261" width="0.1" height="15.0" fill="rgb(245,65,38)" rx="2" ry="2" />
<text  x="18.36" y="271.5" ></text>
</g>
<g >
<title>utils::tuple_hash::hash_impl&lt;2ul, auth::resource_kind, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (43 samples, 0.09%)</title><rect x="813.2" y="309" width="1.1" height="15.0" fill="rgb(228,35,25)" rx="2" ry="2" />
<text  x="816.20" y="319.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (12 samples, 0.02%)</title><rect x="700.9" y="421" width="0.3" height="15.0" fill="rgb(206,168,13)" rx="2" ry="2" />
<text  x="703.95" y="431.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (11,186 samples, 23.09%)</title><rect x="868.3" y="469" width="272.4" height="15.0" fill="rgb(241,100,2)" rx="2" ry="2" />
<text  x="871.27" y="479.5" >seastar::noncopyable_function&lt;seasta..</text>
</g>
<g >
<title>service::client_state::ensure_has_permission (1,647 samples, 3.40%)</title><rect x="770.6" y="357" width="40.1" height="15.0" fill="rgb(233,38,30)" rx="2" ry="2" />
<text  x="773.56" y="367.5" >ser..</text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (6 samples, 0.01%)</title><rect x="1143.8" y="485" width="0.1" height="15.0" fill="rgb(228,126,22)" rx="2" ry="2" />
<text  x="1146.77" y="495.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume_in_thread&lt;sstables::sstable_writer, flat_mutation_reader::no_filter&gt; (14 samples, 0.03%)</title><rect x="21.4" y="485" width="0.4" height="15.0" fill="rgb(216,54,42)" rx="2" ry="2" />
<text  x="24.45" y="495.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;nonwrapping_interval&lt;dht::ring_position&gt; const*, nonwrapping_interval&lt;dht::ring_position&gt;*&gt; (42 samples, 0.09%)</title><rect x="944.6" y="373" width="1.1" height="15.0" fill="rgb(212,170,38)" rx="2" ry="2" />
<text  x="947.63" y="383.5" ></text>
</g>
<g >
<title>operator new (43 samples, 0.09%)</title><rect x="715.1" y="421" width="1.1" height="15.0" fill="rgb(226,28,20)" rx="2" ry="2" />
<text  x="718.15" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_List_node_header::_List_node_header (16 samples, 0.03%)</title><rect x="447.5" y="261" width="0.4" height="15.0" fill="rgb(233,60,23)" rx="2" ry="2" />
<text  x="450.49" y="271.5" ></text>
</g>
<g >
<title>operator new (15 samples, 0.03%)</title><rect x="622.1" y="389" width="0.3" height="15.0" fill="rgb(225,177,13)" rx="2" ry="2" />
<text  x="625.08" y="399.5" ></text>
</g>
<g >
<title>seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::expand (56 samples, 0.12%)</title><rect x="499.6" y="229" width="1.3" height="15.0" fill="rgb(223,41,5)" rx="2" ry="2" />
<text  x="502.57" y="239.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (16 samples, 0.03%)</title><rect x="635.9" y="485" width="0.4" height="15.0" fill="rgb(237,95,21)" rx="2" ry="2" />
<text  x="638.89" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::~disable_abort_on_alloc_failure_temporarily (6 samples, 0.01%)</title><rect x="215.6" y="197" width="0.2" height="15.0" fill="rgb(242,93,36)" rx="2" ry="2" />
<text  x="218.62" y="207.5" ></text>
</g>
<g >
<title>std::function&lt;flat_mutation_reader  (4,604 samples, 9.50%)</title><rect x="421.5" y="389" width="112.1" height="15.0" fill="rgb(216,110,2)" rx="2" ry="2" />
<text  x="424.50" y="399.5" >std::function..</text>
</g>
<g >
<title>std::_Function_handler&lt;void  (275 samples, 0.57%)</title><rect x="14.7" y="565" width="6.7" height="15.0" fill="rgb(249,63,18)" rx="2" ry="2" />
<text  x="17.70" y="575.5" ></text>
</g>
<g >
<title>mutation_partition::lower_bound (13 samples, 0.03%)</title><rect x="229.9" y="213" width="0.4" height="15.0" fill="rgb(237,47,18)" rx="2" ry="2" />
<text  x="232.94" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_S_do_relocate (6 samples, 0.01%)</title><rect x="533.0" y="325" width="0.1" height="15.0" fill="rgb(227,224,0)" rx="2" ry="2" />
<text  x="535.98" y="335.5" ></text>
</g>
<g >
<title>schema::position (6 samples, 0.01%)</title><rect x="939.0" y="405" width="0.2" height="15.0" fill="rgb(235,223,31)" rx="2" ry="2" />
<text  x="942.03" y="415.5" ></text>
</g>
<g >
<title>empty_flat_reader::~empty_flat_reader (56 samples, 0.12%)</title><rect x="552.4" y="325" width="1.4" height="15.0" fill="rgb(212,111,36)" rx="2" ry="2" />
<text  x="555.40" y="335.5" ></text>
</g>
<g >
<title>abstract_type::validate&lt;managed_bytes_basic_view&lt; (5 samples, 0.01%)</title><rect x="889.7" y="293" width="0.2" height="15.0" fill="rgb(206,218,54)" rx="2" ry="2" />
<text  x="892.73" y="303.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;signed char, std::char_traits&lt;signed char&gt; &gt;::substr (9 samples, 0.02%)</title><rect x="480.4" y="181" width="0.3" height="15.0" fill="rgb(233,187,10)" rx="2" ry="2" />
<text  x="483.45" y="191.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (27 samples, 0.06%)</title><rect x="750.0" y="373" width="0.7" height="15.0" fill="rgb(239,40,31)" rx="2" ry="2" />
<text  x="753.00" y="383.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (48 samples, 0.10%)</title><rect x="740.6" y="309" width="1.2" height="15.0" fill="rgb(211,135,2)" rx="2" ry="2" />
<text  x="743.65" y="319.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (5 samples, 0.01%)</title><rect x="1038.5" y="229" width="0.1" height="15.0" fill="rgb(227,87,5)" rx="2" ry="2" />
<text  x="1041.45" y="239.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::value (7 samples, 0.01%)</title><rect x="19.3" y="309" width="0.2" height="15.0" fill="rgb(229,6,36)" rx="2" ry="2" />
<text  x="22.28" y="319.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::do_execute (11,014 samples, 22.73%)</title><rect x="871.8" y="437" width="268.3" height="15.0" fill="rgb(232,200,42)" rx="2" ry="2" />
<text  x="874.81" y="447.5" >cql3::statements::select_statement:..</text>
</g>
<g >
<title>service::digest_read_resolver::response_count (7 samples, 0.01%)</title><rect x="702.9" y="421" width="0.2" height="15.0" fill="rgb(211,99,40)" rx="2" ry="2" />
<text  x="705.92" y="431.5" ></text>
</g>
<g >
<title>ser::qr_partition__static_row&lt;bytes_ostream&gt;::start_cells (24 samples, 0.05%)</title><rect x="310.2" y="165" width="0.6" height="15.0" fill="rgb(233,157,24)" rx="2" ry="2" />
<text  x="313.22" y="175.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (6 samples, 0.01%)</title><rect x="1106.6" y="373" width="0.1" height="15.0" fill="rgb(207,202,12)" rx="2" ry="2" />
<text  x="1109.60" y="383.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;bool, bool  (24 samples, 0.05%)</title><rect x="1097.2" y="277" width="0.6" height="15.0" fill="rgb(226,208,35)" rx="2" ry="2" />
<text  x="1100.18" y="287.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;auth::resource_kind, std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;auth::resource_kind&gt;, std::hash&lt;auth::resource_kind&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (11 samples, 0.02%)</title><rect x="765.6" y="325" width="0.3" height="15.0" fill="rgb(247,165,3)" rx="2" ry="2" />
<text  x="768.61" y="335.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (41 samples, 0.08%)</title><rect x="476.1" y="197" width="1.0" height="15.0" fill="rgb(243,186,36)" rx="2" ry="2" />
<text  x="479.11" y="207.5" ></text>
</g>
<g >
<title>logalloc::basic_region_impl::set_reclaiming_enabled (8 samples, 0.02%)</title><rect x="506.3" y="229" width="0.2" height="15.0" fill="rgb(226,199,34)" rx="2" ry="2" />
<text  x="509.26" y="239.5" ></text>
</g>
<g >
<title>write_fragmented&lt;managed_bytes_basic_view&lt; (130 samples, 0.27%)</title><rect x="895.5" y="261" width="3.2" height="15.0" fill="rgb(206,147,37)" rx="2" ry="2" />
<text  x="898.51" y="271.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::impl&gt;::_S_destroy&lt;seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::impl, mutation_fragment&gt; (13 samples, 0.03%)</title><rect x="274.1" y="293" width="0.3" height="15.0" fill="rgb(240,225,4)" rx="2" ry="2" />
<text  x="277.07" y="303.5" ></text>
</g>
<g >
<title>reader_permit::impl::mark_used (17 samples, 0.04%)</title><rect x="59.6" y="453" width="0.4" height="15.0" fill="rgb(238,49,8)" rx="2" ry="2" />
<text  x="62.57" y="463.5" ></text>
</g>
<g >
<title>table::query (22,366 samples, 46.17%)</title><rect x="78.9" y="453" width="544.7" height="15.0" fill="rgb(242,118,30)" rx="2" ry="2" />
<text  x="81.86" y="463.5" >table::query</text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (10 samples, 0.02%)</title><rect x="1049.9" y="277" width="0.2" height="15.0" fill="rgb(209,29,6)" rx="2" ry="2" />
<text  x="1052.90" y="287.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (7 samples, 0.01%)</title><rect x="488.4" y="309" width="0.1" height="15.0" fill="rgb(233,218,29)" rx="2" ry="2" />
<text  x="491.36" y="319.5" ></text>
</g>
<g >
<title>perf_simple_que (48,446 samples, 100.00%)</title><rect x="10.0" y="645" width="1180.0" height="15.0" fill="rgb(232,118,17)" rx="2" ry="2" />
<text  x="13.00" y="655.5" >perf_simple_que</text>
</g>
<g >
<title>flat_mutation_reader::close (13 samples, 0.03%)</title><rect x="1175.5" y="453" width="0.3" height="15.0" fill="rgb(215,54,52)" rx="2" ry="2" />
<text  x="1178.46" y="463.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::query_state&gt;::~shared_ptr (7 samples, 0.01%)</title><rect x="666.0" y="485" width="0.1" height="15.0" fill="rgb(220,155,38)" rx="2" ry="2" />
<text  x="668.97" y="495.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_M_move_assign (19 samples, 0.04%)</title><rect x="1115.1" y="373" width="0.5" height="15.0" fill="rgb(213,180,27)" rx="2" ry="2" />
<text  x="1118.10" y="383.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::query_options, std::default_delete&lt;cql3::query_options&gt; &gt;::~unique_ptr (14 samples, 0.03%)</title><rect x="854.3" y="453" width="0.3" height="15.0" fill="rgb(246,36,12)" rx="2" ry="2" />
<text  x="857.27" y="463.5" ></text>
</g>
<g >
<title>database::has_keyspace (95 samples, 0.20%)</title><rect x="823.7" y="357" width="2.3" height="15.0" fill="rgb(242,134,19)" rx="2" ry="2" />
<text  x="826.70" y="367.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (5 samples, 0.01%)</title><rect x="992.7" y="293" width="0.1" height="15.0" fill="rgb(234,120,7)" rx="2" ry="2" />
<text  x="995.71" y="303.5" ></text>
</g>
<g >
<title>std::__equal&lt;true&gt;::equal&lt;char&gt; (29 samples, 0.06%)</title><rect x="794.8" y="117" width="0.7" height="15.0" fill="rgb(234,158,43)" rx="2" ry="2" />
<text  x="797.79" y="127.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (22 samples, 0.05%)</title><rect x="932.6" y="325" width="0.5" height="15.0" fill="rgb(253,117,27)" rx="2" ry="2" />
<text  x="935.58" y="335.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE9then_implIZNS6_14discard_resultEvEUlDpOT_E_NS0_IvEEEET0_OT_ (9 samples, 0.02%)</title><rect x="712.8" y="485" width="0.2" height="15.0" fill="rgb(228,195,28)" rx="2" ry="2" />
<text  x="715.78" y="495.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (59 samples, 0.12%)</title><rect x="143.1" y="261" width="1.4" height="15.0" fill="rgb(218,59,1)" rx="2" ry="2" />
<text  x="146.08" y="271.5" ></text>
</g>
<g >
<title>seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::expand (5 samples, 0.01%)</title><rect x="507.8" y="245" width="0.1" height="15.0" fill="rgb(236,113,53)" rx="2" ry="2" />
<text  x="510.82" y="255.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureIvE9then_implIZZN5query12consume_pageIL19emit_only_live_rows1E20query_result_builderEEDaR20flat_mutation_readerNS_13lw_shared_ptrI22compact_mutation_stateIXT_EL20compact_for_sstables0EEEERKNS3_15partition_sliceEOT0_mjNSt6chrono10time_pointI8gc_clockNSJ_8durationIlSt5ratioILl1ELl1EEEEEEENUlP17mutation_fragmentE_clESS_EUlDpOT_E_NS0_ISt5tupleIJSt8optionalI21clustering_key_prefixEEEEEEESH_OT_ (42 samples, 0.09%)</title><rect x="288.1" y="373" width="1.0" height="15.0" fill="rgb(232,2,28)" rx="2" ry="2" />
<text  x="291.10" y="383.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (5 samples, 0.01%)</title><rect x="589.9" y="373" width="0.1" height="15.0" fill="rgb(224,129,17)" rx="2" ry="2" />
<text  x="592.88" y="383.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_range_tombstone (110 samples, 0.23%)</title><rect x="218.5" y="181" width="2.6" height="15.0" fill="rgb(240,107,0)" rx="2" ry="2" />
<text  x="221.47" y="191.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (6 samples, 0.01%)</title><rect x="167.9" y="133" width="0.1" height="15.0" fill="rgb(232,0,15)" rx="2" ry="2" />
<text  x="170.85" y="143.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (5 samples, 0.01%)</title><rect x="634.1" y="469" width="0.2" height="15.0" fill="rgb(214,101,13)" rx="2" ry="2" />
<text  x="637.14" y="479.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (47 samples, 0.10%)</title><rect x="787.8" y="165" width="1.1" height="15.0" fill="rgb(205,164,37)" rx="2" ry="2" />
<text  x="790.78" y="175.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (17 samples, 0.04%)</title><rect x="325.6" y="181" width="0.4" height="15.0" fill="rgb(218,50,24)" rx="2" ry="2" />
<text  x="328.61" y="191.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (24 samples, 0.05%)</title><rect x="1171.2" y="453" width="0.6" height="15.0" fill="rgb(248,63,9)" rx="2" ry="2" />
<text  x="1174.25" y="463.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (318 samples, 0.66%)</title><rect x="792.5" y="181" width="7.8" height="15.0" fill="rgb(233,147,15)" rx="2" ry="2" />
<text  x="795.53" y="191.5" ></text>
</g>
<g >
<title>operator delete (19 samples, 0.04%)</title><rect x="666.7" y="469" width="0.4" height="15.0" fill="rgb(225,136,48)" rx="2" ry="2" />
<text  x="669.68" y="479.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_Optional_payload_base (22 samples, 0.05%)</title><rect x="1103.7" y="357" width="0.5" height="15.0" fill="rgb(254,98,44)" rx="2" ry="2" />
<text  x="1106.68" y="367.5" ></text>
</g>
<g >
<title>std::optional&lt;reader_concurrency_semaphore::entry&gt;::optional&lt;reader_concurrency_semaphore::entry, true&gt; (15 samples, 0.03%)</title><rect x="1033.7" y="149" width="0.4" height="15.0" fill="rgb(205,71,6)" rx="2" ry="2" />
<text  x="1036.73" y="159.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (9 samples, 0.02%)</title><rect x="318.8" y="197" width="0.2" height="15.0" fill="rgb(219,216,27)" rx="2" ry="2" />
<text  x="321.77" y="207.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const*, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;*&gt; (23 samples, 0.05%)</title><rect x="801.6" y="229" width="0.6" height="15.0" fill="rgb(222,206,21)" rx="2" ry="2" />
<text  x="804.64" y="239.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (6 samples, 0.01%)</title><rect x="1133.1" y="373" width="0.1" height="15.0" fill="rgb(216,134,7)" rx="2" ry="2" />
<text  x="1136.05" y="383.5" ></text>
</g>
<g >
<title>seastar::lambda_task&lt;seastar::execution_stage::flush (11,556 samples, 23.85%)</title><rect x="862.5" y="501" width="281.5" height="15.0" fill="rgb(235,224,28)" rx="2" ry="2" />
<text  x="865.50" y="511.5" >seastar::lambda_task&lt;seastar::executi..</text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (8 samples, 0.02%)</title><rect x="637.1" y="469" width="0.2" height="15.0" fill="rgb(225,186,8)" rx="2" ry="2" />
<text  x="640.08" y="479.5" ></text>
</g>
<g >
<title>operator delete (28 samples, 0.06%)</title><rect x="808.2" y="309" width="0.7" height="15.0" fill="rgb(239,107,42)" rx="2" ry="2" />
<text  x="811.19" y="319.5" ></text>
</g>
<g >
<title>flat_mutation_reader::close (724 samples, 1.49%)</title><rect x="551.6" y="341" width="17.7" height="15.0" fill="rgb(254,113,49)" rx="2" ry="2" />
<text  x="554.64" y="351.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::digest_read_result&gt;::clear (10 samples, 0.02%)</title><rect x="693.2" y="469" width="0.2" height="15.0" fill="rgb(226,228,8)" rx="2" ry="2" />
<text  x="696.15" y="479.5" ></text>
</g>
<g >
<title>std::__make_heap&lt;__gnu_cxx::__normal_iterator&lt;boost::iterator_range&lt;boost::intrusive::tree_iterator&lt;boost::intrusive::mhtraits&lt;range_tombstone_entry, boost::intrusive::set_member_hook&lt;boost::intrusive::link_mode&lt; (6 samples, 0.01%)</title><rect x="213.3" y="149" width="0.1" height="15.0" fill="rgb(248,80,52)" rx="2" ry="2" />
<text  x="216.30" y="159.5" ></text>
</g>
<g >
<title>std::optional&lt;dht::decorated_key&gt;::emplace&lt;dht::decorated_key&gt; (12 samples, 0.02%)</title><rect x="388.1" y="229" width="0.3" height="15.0" fill="rgb(237,81,31)" rx="2" ry="2" />
<text  x="391.06" y="239.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::allocate_large (14 samples, 0.03%)</title><rect x="543.7" y="293" width="0.4" height="15.0" fill="rgb(216,200,8)" rx="2" ry="2" />
<text  x="546.72" y="303.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt;::~_Variant_storage (10 samples, 0.02%)</title><rect x="902.2" y="293" width="0.2" height="15.0" fill="rgb(221,209,15)" rx="2" ry="2" />
<text  x="905.15" y="303.5" ></text>
</g>
<g >
<title>reader_permit::consume (7 samples, 0.01%)</title><rect x="208.2" y="133" width="0.2" height="15.0" fill="rgb(235,181,26)" rx="2" ry="2" />
<text  x="211.21" y="143.5" ></text>
</g>
<g >
<title>TLS init function for bound_view::_empty_prefix (10 samples, 0.02%)</title><rect x="237.2" y="165" width="0.2" height="15.0" fill="rgb(228,133,48)" rx="2" ry="2" />
<text  x="240.20" y="175.5" ></text>
</g>
<g >
<title>bound_view::from_range&lt;nonwrapping_interval&gt; (129 samples, 0.27%)</title><rect x="234.8" y="197" width="3.1" height="15.0" fill="rgb(208,211,29)" rx="2" ry="2" />
<text  x="237.79" y="207.5" ></text>
</g>
<g >
<title>db::commitlog::segment::allocate (5 samples, 0.01%)</title><rect x="1141.9" y="277" width="0.1" height="15.0" fill="rgb(251,215,29)" rx="2" ry="2" />
<text  x="1144.90" y="287.5" ></text>
</g>
<g >
<title>logalloc::segment_pool::refill_emergency_reserve (8 samples, 0.02%)</title><rect x="484.6" y="309" width="0.2" height="15.0" fill="rgb(246,125,32)" rx="2" ry="2" />
<text  x="487.64" y="319.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::leaf_node::allocate (13 samples, 0.03%)</title><rect x="168.0" y="133" width="0.3" height="15.0" fill="rgb(247,28,17)" rx="2" ry="2" />
<text  x="171.00" y="143.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::node_size (5 samples, 0.01%)</title><rect x="206.4" y="133" width="0.1" height="15.0" fill="rgb(213,210,46)" rx="2" ry="2" />
<text  x="209.39" y="143.5" ></text>
</g>
<g >
<title>std::hash&lt;std::basic_string_view&lt;signed char, std::char_traits&lt;signed char&gt; &gt; &gt;::operator (94 samples, 0.19%)</title><rect x="725.1" y="309" width="2.3" height="15.0" fill="rgb(223,211,11)" rx="2" ry="2" />
<text  x="728.13" y="319.5" ></text>
</g>
<g >
<title>schema::column_at (8 samples, 0.02%)</title><rect x="361.6" y="197" width="0.2" height="15.0" fill="rgb(244,209,1)" rx="2" ry="2" />
<text  x="364.63" y="207.5" ></text>
</g>
<g >
<title>seastar::deferred_action&lt;table::query (117 samples, 0.24%)</title><rect x="598.0" y="437" width="2.9" height="15.0" fill="rgb(221,189,47)" rx="2" ry="2" />
<text  x="601.01" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (27 samples, 0.06%)</title><rect x="291.0" y="277" width="0.7" height="15.0" fill="rgb(206,28,15)" rx="2" ry="2" />
<text  x="294.00" y="287.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::~_Variant_storage (8 samples, 0.02%)</title><rect x="888.5" y="309" width="0.2" height="15.0" fill="rgb(212,40,49)" rx="2" ry="2" />
<text  x="891.54" y="319.5" ></text>
</g>
<g >
<title>allocation_strategy::get_standard_migrator&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::leaf_node&gt; (10 samples, 0.02%)</title><rect x="193.1" y="85" width="0.3" height="15.0" fill="rgb(229,119,23)" rx="2" ry="2" />
<text  x="196.14" y="95.5" ></text>
</g>
<g >
<title>cql3::statements::update_statement::execute_operations_for_key (16 samples, 0.03%)</title><rect x="863.0" y="341" width="0.4" height="15.0" fill="rgb(251,135,43)" rx="2" ry="2" />
<text  x="865.97" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%)</title><rect x="36.5" y="405" width="0.1" height="15.0" fill="rgb(236,5,1)" rx="2" ry="2" />
<text  x="39.48" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (35 samples, 0.07%)</title><rect x="413.3" y="325" width="0.9" height="15.0" fill="rgb(223,181,24)" rx="2" ry="2" />
<text  x="416.32" y="335.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (11 samples, 0.02%)</title><rect x="899.5" y="277" width="0.3" height="15.0" fill="rgb(230,76,1)" rx="2" ry="2" />
<text  x="902.52" y="287.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::needs_post_query_ordering (39 samples, 0.08%)</title><rect x="954.4" y="405" width="1.0" height="15.0" fill="rgb(254,83,42)" rx="2" ry="2" />
<text  x="957.42" y="415.5" ></text>
</g>
<g >
<title>operator delete (30 samples, 0.06%)</title><rect x="662.0" y="485" width="0.8" height="15.0" fill="rgb(235,119,39)" rx="2" ry="2" />
<text  x="665.05" y="495.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::~unique_ptr (58 samples, 0.12%)</title><rect x="903.0" y="325" width="1.4" height="15.0" fill="rgb(215,22,1)" rx="2" ry="2" />
<text  x="905.96" y="335.5" ></text>
</g>
<g >
<title>absl::hash_internal::AbslHashValue&lt;absl::hash_internal::HashState&gt; (13 samples, 0.03%)</title><rect x="825.5" y="293" width="0.3" height="15.0" fill="rgb(233,89,4)" rx="2" ry="2" />
<text  x="828.50" y="303.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.29] (13 samples, 0.03%)</title><rect x="598.9" y="405" width="0.3" height="15.0" fill="rgb(214,104,26)" rx="2" ry="2" />
<text  x="601.92" y="415.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_push_back_aux&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (5 samples, 0.01%)</title><rect x="15.5" y="261" width="0.1" height="15.0" fill="rgb(226,148,43)" rx="2" ry="2" />
<text  x="18.48" y="271.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (27 samples, 0.06%)</title><rect x="721.5" y="389" width="0.7" height="15.0" fill="rgb(226,196,39)" rx="2" ry="2" />
<text  x="724.53" y="399.5" ></text>
</g>
<g >
<title>operator delete (25 samples, 0.05%)</title><rect x="635.3" y="485" width="0.6" height="15.0" fill="rgb(242,198,32)" rx="2" ry="2" />
<text  x="638.26" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (22 samples, 0.05%)</title><rect x="240.2" y="165" width="0.5" height="15.0" fill="rgb(224,178,19)" rx="2" ry="2" />
<text  x="243.19" y="175.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (7 samples, 0.01%)</title><rect x="669.8" y="437" width="0.1" height="15.0" fill="rgb(233,55,7)" rx="2" ry="2" />
<text  x="672.77" y="447.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (5,007 samples, 10.34%)</title><rect x="289.9" y="357" width="122.0" height="15.0" fill="rgb(229,129,50)" rx="2" ry="2" />
<text  x="292.91" y="367.5" >flat_mutation_r..</text>
</g>
<g >
<title>service::digest_read_resolver::add_data (196 samples, 0.40%)</title><rect x="699.0" y="453" width="4.8" height="15.0" fill="rgb(228,210,47)" rx="2" ry="2" />
<text  x="702.02" y="463.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (18 samples, 0.04%)</title><rect x="832.2" y="373" width="0.4" height="15.0" fill="rgb(239,216,34)" rx="2" ry="2" />
<text  x="835.20" y="383.5" ></text>
</g>
<g >
<title>utils::tuple_hash::operator (109 samples, 0.22%)</title><rect x="724.8" y="341" width="2.7" height="15.0" fill="rgb(234,185,31)" rx="2" ry="2" />
<text  x="727.81" y="351.5" ></text>
</g>
<g >
<title>utils::basic_ihistogram&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt; &gt;::set_latency (5 samples, 0.01%)</title><rect x="623.1" y="437" width="0.1" height="15.0" fill="rgb(246,188,35)" rx="2" ry="2" />
<text  x="626.08" y="447.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_internal&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt; &gt; (9 samples, 0.02%)</title><rect x="1142.1" y="293" width="0.2" height="15.0" fill="rgb(243,144,20)" rx="2" ry="2" />
<text  x="1145.12" y="303.5" ></text>
</g>
<g >
<title>seastar::internal::repeater&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (18 samples, 0.04%)</title><rect x="862.0" y="501" width="0.4" height="15.0" fill="rgb(208,55,42)" rx="2" ry="2" />
<text  x="864.99" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt;::emplace_back&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; (67 samples, 0.14%)</title><rect x="239.3" y="213" width="1.6" height="15.0" fill="rgb(226,225,26)" rx="2" ry="2" />
<text  x="242.32" y="223.5" ></text>
</g>
<g >
<title>operator new (69 samples, 0.14%)</title><rect x="886.5" y="309" width="1.7" height="15.0" fill="rgb(212,174,26)" rx="2" ry="2" />
<text  x="889.49" y="319.5" ></text>
</g>
<g >
<title>bytes_ostream::alloc_new (49 samples, 0.10%)</title><rect x="596.0" y="389" width="1.2" height="15.0" fill="rgb(208,92,31)" rx="2" ry="2" />
<text  x="598.99" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (6 samples, 0.01%)</title><rect x="662.6" y="469" width="0.2" height="15.0" fill="rgb(228,63,25)" rx="2" ry="2" />
<text  x="665.63" y="479.5" ></text>
</g>
<g >
<title>utils::timed_rate_moving_average_and_histogram::mark (94 samples, 0.19%)</title><rect x="598.6" y="421" width="2.3" height="15.0" fill="rgb(240,48,0)" rx="2" ry="2" />
<text  x="601.58" y="431.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (11 samples, 0.02%)</title><rect x="398.0" y="197" width="0.3" height="15.0" fill="rgb(219,134,50)" rx="2" ry="2" />
<text  x="401.00" y="207.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (5 samples, 0.01%)</title><rect x="406.2" y="277" width="0.1" height="15.0" fill="rgb(231,161,29)" rx="2" ry="2" />
<text  x="409.21" y="287.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (10 samples, 0.02%)</title><rect x="509.0" y="277" width="0.2" height="15.0" fill="rgb(253,113,27)" rx="2" ry="2" />
<text  x="511.99" y="287.5" ></text>
</g>
<g >
<title>query::querier_base::close (6 samples, 0.01%)</title><rect x="59.0" y="453" width="0.1" height="15.0" fill="rgb(241,228,6)" rx="2" ry="2" />
<text  x="61.96" y="463.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_range_tombstone (5 samples, 0.01%)</title><rect x="221.4" y="197" width="0.1" height="15.0" fill="rgb(230,62,35)" rx="2" ry="2" />
<text  x="224.39" y="207.5" ></text>
</g>
<g >
<title>mutation_reader_merger::maybe_add_readers (249 samples, 0.51%)</title><rect x="435.1" y="293" width="6.1" height="15.0" fill="rgb(214,224,42)" rx="2" ry="2" />
<text  x="438.09" y="303.5" ></text>
</g>
<g >
<title>seastar::internal::uninitialized_wrapper_base&lt;service::storage_proxy_coordinator_query_result, false&gt;::uninitialized_set&lt;service::storage_proxy_coordinator_query_result&gt; (6 samples, 0.01%)</title><rect x="681.8" y="485" width="0.1" height="15.0" fill="rgb(218,139,20)" rx="2" ry="2" />
<text  x="684.78" y="495.5" ></text>
</g>
<g >
<title>operator new (24 samples, 0.05%)</title><rect x="773.6" y="309" width="0.5" height="15.0" fill="rgb(250,27,54)" rx="2" ry="2" />
<text  x="776.55" y="319.5" ></text>
</g>
<g >
<title>visit&lt;(anonymous namespace)::validate_visitor&lt;managed_bytes_basic_view&lt; (26 samples, 0.05%)</title><rect x="891.2" y="261" width="0.6" height="15.0" fill="rgb(247,23,10)" rx="2" ry="2" />
<text  x="894.19" y="271.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (6 samples, 0.01%)</title><rect x="242.6" y="245" width="0.2" height="15.0" fill="rgb(217,130,22)" rx="2" ry="2" />
<text  x="245.60" y="255.5" ></text>
</g>
<g >
<title>range_tombstone_list::~range_tombstone_list (28 samples, 0.06%)</title><rect x="566.1" y="293" width="0.7" height="15.0" fill="rgb(205,1,25)" rx="2" ry="2" />
<text  x="569.11" y="303.5" ></text>
</g>
<g >
<title>partition_snapshot::version_count (14 samples, 0.03%)</title><rect x="220.4" y="133" width="0.3" height="15.0" fill="rgb(208,165,35)" rx="2" ry="2" />
<text  x="223.39" y="143.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::signal (5 samples, 0.01%)</title><rect x="271.7" y="293" width="0.1" height="15.0" fill="rgb(205,61,5)" rx="2" ry="2" />
<text  x="274.69" y="303.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::drop_unneeded_tombstones (7 samples, 0.01%)</title><rect x="365.9" y="213" width="0.2" height="15.0" fill="rgb(237,140,52)" rx="2" ry="2" />
<text  x="368.92" y="223.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::get_local_service (15 samples, 0.03%)</title><rect x="1048.4" y="277" width="0.3" height="15.0" fill="rgb(231,134,32)" rx="2" ry="2" />
<text  x="1051.37" y="287.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql3::statements::update_statement&gt;::~shared_ptr_count_for (6 samples, 0.01%)</title><rect x="640.7" y="485" width="0.2" height="15.0" fill="rgb(221,199,43)" rx="2" ry="2" />
<text  x="643.71" y="495.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (5 samples, 0.01%)</title><rect x="470.5" y="293" width="0.1" height="15.0" fill="rgb(238,173,53)" rx="2" ry="2" />
<text  x="473.46" y="303.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (22 samples, 0.05%)</title><rect x="482.7" y="325" width="0.5" height="15.0" fill="rgb(253,12,50)" rx="2" ry="2" />
<text  x="485.66" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::~vector (10 samples, 0.02%)</title><rect x="1140.5" y="437" width="0.2" height="15.0" fill="rgb(213,43,43)" rx="2" ry="2" />
<text  x="1143.48" y="447.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_partition_key_ranges (2,733 samples, 5.64%)</title><rect x="879.1" y="421" width="66.6" height="15.0" fill="rgb(210,107,24)" rx="2" ry="2" />
<text  x="882.09" y="431.5" >cql3::r..</text>
</g>
<g >
<title>cql3::statements::modification_statement::apply_updates (18 samples, 0.04%)</title><rect x="863.0" y="373" width="0.4" height="15.0" fill="rgb(230,99,37)" rx="2" ry="2" />
<text  x="865.97" y="383.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (6 samples, 0.01%)</title><rect x="945.5" y="309" width="0.2" height="15.0" fill="rgb(232,51,26)" rx="2" ry="2" />
<text  x="948.51" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (44 samples, 0.09%)</title><rect x="990.9" y="293" width="1.0" height="15.0" fill="rgb(208,93,26)" rx="2" ry="2" />
<text  x="993.86" y="303.5" ></text>
</g>
<g >
<title>mutation_reader_merger::maybe_add_readers_at_partition_boundary (18 samples, 0.04%)</title><rect x="121.9" y="309" width="0.4" height="15.0" fill="rgb(233,124,27)" rx="2" ry="2" />
<text  x="124.87" y="319.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::~deque (116 samples, 0.24%)</title><rect x="614.2" y="405" width="2.9" height="15.0" fill="rgb(229,45,46)" rx="2" ry="2" />
<text  x="617.24" y="415.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;std::tuple&lt;std::optional&lt;clustering_key_prefix&gt; &gt; &gt;, query::consume_page&lt; (32 samples, 0.07%)</title><rect x="683.3" y="501" width="0.7" height="15.0" fill="rgb(238,3,37)" rx="2" ry="2" />
<text  x="686.26" y="511.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (32 samples, 0.07%)</title><rect x="418.5" y="421" width="0.8" height="15.0" fill="rgb(252,149,21)" rx="2" ry="2" />
<text  x="421.48" y="431.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;partition_key, false, false&gt;::_Optional_base (9 samples, 0.02%)</title><rect x="1104.0" y="341" width="0.2" height="15.0" fill="rgb(254,43,33)" rx="2" ry="2" />
<text  x="1107.00" y="351.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (8 samples, 0.02%)</title><rect x="919.3" y="373" width="0.2" height="15.0" fill="rgb(236,112,53)" rx="2" ry="2" />
<text  x="922.33" y="383.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_max_result_size (5 samples, 0.01%)</title><rect x="1140.3" y="437" width="0.1" height="15.0" fill="rgb(205,21,1)" rx="2" ry="2" />
<text  x="1143.31" y="447.5" ></text>
</g>
<g >
<title>operator new (34 samples, 0.07%)</title><rect x="150.9" y="181" width="0.8" height="15.0" fill="rgb(226,126,25)" rx="2" ry="2" />
<text  x="153.90" y="191.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (278 samples, 0.57%)</title><rect x="249.3" y="293" width="6.7" height="15.0" fill="rgb(211,212,39)" rx="2" ry="2" />
<text  x="252.28" y="303.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::lsa_partition_reader (27 samples, 0.06%)</title><rect x="508.2" y="277" width="0.7" height="15.0" fill="rgb(222,168,4)" rx="2" ry="2" />
<text  x="511.21" y="287.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::trivial_direct_move&lt;8ul&gt; (27 samples, 0.06%)</title><rect x="994.3" y="261" width="0.6" height="15.0" fill="rgb(241,110,37)" rx="2" ry="2" />
<text  x="997.27" y="271.5" ></text>
</g>
<g >
<title>std::make_unique&lt;seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::entry, reader_concurrency_semaphore::entry, seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;&amp;, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;&amp;&gt; (11 samples, 0.02%)</title><rect x="1035.0" y="181" width="0.3" height="15.0" fill="rgb(209,76,7)" rx="2" ry="2" />
<text  x="1038.02" y="191.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (55 samples, 0.11%)</title><rect x="776.2" y="309" width="1.3" height="15.0" fill="rgb(230,118,8)" rx="2" ry="2" />
<text  x="779.16" y="319.5" ></text>
</g>
<g >
<title>seastar::internal::uninitialized_wrapper_base&lt;service::storage_proxy_coordinator_query_result, false&gt;::uninitialized_set&lt;service::storage_proxy_coordinator_query_result&gt; (36 samples, 0.07%)</title><rect x="680.5" y="453" width="0.8" height="15.0" fill="rgb(246,192,19)" rx="2" ry="2" />
<text  x="683.46" y="463.5" ></text>
</g>
<g >
<title>tracing::add_table_name (6 samples, 0.01%)</title><rect x="1139.6" y="421" width="0.2" height="15.0" fill="rgb(205,132,52)" rx="2" ry="2" />
<text  x="1142.63" y="431.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::clone&lt;row::row (1,208 samples, 2.49%)</title><rect x="168.7" y="133" width="29.4" height="15.0" fill="rgb(220,115,39)" rx="2" ry="2" />
<text  x="171.66" y="143.5" >co..</text>
</g>
<g >
<title>std::unique_ptr&lt;nonwrapping_interval&lt;dht::ring_position&gt; const, std::default_delete&lt;nonwrapping_interval&lt;dht::ring_position&gt; const&gt; &gt;::~unique_ptr (57 samples, 0.12%)</title><rect x="586.3" y="421" width="1.3" height="15.0" fill="rgb(235,213,25)" rx="2" ry="2" />
<text  x="589.25" y="431.5" ></text>
</g>
<g >
<title>operator delete (22 samples, 0.05%)</title><rect x="1170.7" y="453" width="0.5" height="15.0" fill="rgb(240,203,26)" rx="2" ry="2" />
<text  x="1173.71" y="463.5" ></text>
</g>
<g >
<title>ser::safe_serialize_as_uint32&lt;bytes_ostream&gt; (21 samples, 0.04%)</title><rect x="351.5" y="165" width="0.5" height="15.0" fill="rgb(216,38,35)" rx="2" ry="2" />
<text  x="354.45" y="175.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::result_set, std::default_delete&lt;cql3::result_set&gt; &gt;::~unique_ptr (6 samples, 0.01%)</title><rect x="41.3" y="469" width="0.2" height="15.0" fill="rgb(243,7,25)" rx="2" ry="2" />
<text  x="44.35" y="479.5" ></text>
</g>
<g >
<title>dht::tri_compare (97 samples, 0.20%)</title><rect x="1086.9" y="229" width="2.4" height="15.0" fill="rgb(210,27,26)" rx="2" ry="2" />
<text  x="1089.95" y="239.5" ></text>
</g>
<g >
<title>mutation_reader_merger::~mutation_reader_merger (139 samples, 0.29%)</title><rect x="441.4" y="309" width="3.3" height="15.0" fill="rgb(217,19,27)" rx="2" ry="2" />
<text  x="444.35" y="319.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (6 samples, 0.01%)</title><rect x="1066.2" y="325" width="0.1" height="15.0" fill="rgb(232,157,23)" rx="2" ry="2" />
<text  x="1069.17" y="335.5" ></text>
</g>
<g >
<title>list_reader_selector::create_new_readers (40 samples, 0.08%)</title><rect x="435.5" y="277" width="1.0" height="15.0" fill="rgb(235,139,35)" rx="2" ry="2" />
<text  x="438.48" y="287.5" ></text>
</g>
<g >
<title>database::query (1,074 samples, 2.22%)</title><rect x="1016.3" y="261" width="26.1" height="15.0" fill="rgb(237,98,9)" rx="2" ry="2" />
<text  x="1019.26" y="271.5" >d..</text>
</g>
<g >
<title>std::forward_as_tuple&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, auth::permissions_cache::get (5 samples, 0.01%)</title><rect x="805.1" y="277" width="0.1" height="15.0" fill="rgb(254,204,6)" rx="2" ry="2" />
<text  x="808.09" y="287.5" ></text>
</g>
<g >
<title>query::querier_base::~querier_base (289 samples, 0.60%)</title><rect x="583.8" y="437" width="7.1" height="15.0" fill="rgb(238,132,38)" rx="2" ry="2" />
<text  x="586.82" y="447.5" ></text>
</g>
<g >
<title>schema::get_partitioner (11 samples, 0.02%)</title><rect x="938.7" y="405" width="0.3" height="15.0" fill="rgb(237,222,21)" rx="2" ry="2" />
<text  x="941.69" y="415.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::do_refresh_state (137 samples, 0.28%)</title><rect x="210.6" y="165" width="3.3" height="15.0" fill="rgb(243,152,30)" rx="2" ry="2" />
<text  x="213.60" y="175.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (18 samples, 0.04%)</title><rect x="821.2" y="277" width="0.4" height="15.0" fill="rgb(230,183,45)" rx="2" ry="2" />
<text  x="824.19" y="287.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (5 samples, 0.01%)</title><rect x="17.0" y="309" width="0.1" height="15.0" fill="rgb(211,117,14)" rx="2" ry="2" />
<text  x="19.97" y="319.5" ></text>
</g>
<g >
<title>row_marker::compact_and_expire (11 samples, 0.02%)</title><rect x="385.0" y="213" width="0.3" height="15.0" fill="rgb(223,161,43)" rx="2" ry="2" />
<text  x="387.99" y="223.5" ></text>
</g>
<g >
<title>local_schema_registry (6 samples, 0.01%)</title><rect x="964.4" y="373" width="0.1" height="15.0" fill="rgb(248,155,35)" rx="2" ry="2" />
<text  x="967.39" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::vector (22 samples, 0.05%)</title><rect x="1123.8" y="405" width="0.5" height="15.0" fill="rgb(241,24,48)" rx="2" ry="2" />
<text  x="1126.77" y="415.5" ></text>
</g>
<g >
<title>range_tombstone_stream::empty (7 samples, 0.01%)</title><rect x="224.3" y="229" width="0.2" height="15.0" fill="rgb(241,142,4)" rx="2" ry="2" />
<text  x="227.31" y="239.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::~_Deque_base (9 samples, 0.02%)</title><rect x="613.8" y="405" width="0.3" height="15.0" fill="rgb(246,43,14)" rx="2" ry="2" />
<text  x="616.85" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt;::_M_realloc_insert&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; (53 samples, 0.11%)</title><rect x="239.7" y="197" width="1.2" height="15.0" fill="rgb(242,162,40)" rx="2" ry="2" />
<text  x="242.66" y="207.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (45 samples, 0.09%)</title><rect x="1141.0" y="453" width="1.1" height="15.0" fill="rgb(253,214,14)" rx="2" ry="2" />
<text  x="1143.97" y="463.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;compact_for_query&lt; (8 samples, 0.02%)</title><rect x="411.7" y="341" width="0.2" height="15.0" fill="rgb(253,163,0)" rx="2" ry="2" />
<text  x="414.66" y="351.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (21 samples, 0.04%)</title><rect x="94.2" y="437" width="0.5" height="15.0" fill="rgb(221,103,10)" rx="2" ry="2" />
<text  x="97.18" y="447.5" ></text>
</g>
<g >
<title>cql3::restrictions::partition_key_restrictions::needs_filtering (129 samples, 0.27%)</title><rect x="946.5" y="405" width="3.2" height="15.0" fill="rgb(210,88,11)" rx="2" ry="2" />
<text  x="949.53" y="415.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::operator (67 samples, 0.14%)</title><rect x="129.8" y="261" width="1.6" height="15.0" fill="rgb(238,169,35)" rx="2" ry="2" />
<text  x="132.76" y="271.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::get_timeout (10 samples, 0.02%)</title><rect x="954.2" y="405" width="0.2" height="15.0" fill="rgb(244,170,26)" rx="2" ry="2" />
<text  x="957.18" y="415.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::operator= (16 samples, 0.03%)</title><rect x="867.4" y="453" width="0.4" height="15.0" fill="rgb(210,86,53)" rx="2" ry="2" />
<text  x="870.40" y="463.5" ></text>
</g>
<g >
<title>mutation_partition::upper_bound (5 samples, 0.01%)</title><rect x="211.5" y="149" width="0.1" height="15.0" fill="rgb(228,94,9)" rx="2" ry="2" />
<text  x="214.45" y="159.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (5 samples, 0.01%)</title><rect x="623.2" y="437" width="0.1" height="15.0" fill="rgb(244,228,13)" rx="2" ry="2" />
<text  x="626.20" y="447.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_live_endpoints (13 samples, 0.03%)</title><rect x="1077.7" y="341" width="0.3" height="15.0" fill="rgb(229,106,27)" rx="2" ry="2" />
<text  x="1080.72" y="351.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (6 samples, 0.01%)</title><rect x="195.4" y="117" width="0.1" height="15.0" fill="rgb(218,66,7)" rx="2" ry="2" />
<text  x="198.40" y="127.5" ></text>
</g>
<g >
<title>seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;::swap (36 samples, 0.07%)</title><rect x="745.8" y="405" width="0.8" height="15.0" fill="rgb(246,6,42)" rx="2" ry="2" />
<text  x="748.76" y="415.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::set&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; (5 samples, 0.01%)</title><rect x="606.0" y="421" width="0.1" height="15.0" fill="rgb(223,36,2)" rx="2" ry="2" />
<text  x="608.98" y="431.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (124 samples, 0.26%)</title><rect x="631.7" y="485" width="3.1" height="15.0" fill="rgb(214,11,14)" rx="2" ry="2" />
<text  x="634.75" y="495.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment (122 samples, 0.25%)</title><rect x="501.6" y="213" width="2.9" height="15.0" fill="rgb(216,213,2)" rx="2" ry="2" />
<text  x="504.56" y="223.5" ></text>
</g>
<g >
<title>cql3::query_options::get_value_at (29 samples, 0.06%)</title><rect x="892.0" y="277" width="0.7" height="15.0" fill="rgb(225,19,17)" rx="2" ry="2" />
<text  x="894.97" y="287.5" ></text>
</g>
<g >
<title>std::apply&lt;service::client_state::has_column_family_access (6 samples, 0.01%)</title><rect x="826.1" y="405" width="0.1" height="15.0" fill="rgb(237,13,30)" rx="2" ry="2" />
<text  x="829.06" y="415.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::partition_snapshot_flat_reader&lt;memtable&amp;&gt; (722 samples, 1.49%)</title><rect x="492.2" y="293" width="17.6" height="15.0" fill="rgb(231,42,42)" rx="2" ry="2" />
<text  x="495.21" y="303.5" ></text>
</g>
<g >
<title>table::do_apply&lt;frozen_mutation const&amp;, seastar::lw_shared_ptr&lt;schema const&gt; const&amp;&gt; (35 samples, 0.07%)</title><rect x="1141.0" y="277" width="0.9" height="15.0" fill="rgb(247,124,31)" rx="2" ry="2" />
<text  x="1144.04" y="287.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (17 samples, 0.04%)</title><rect x="540.5" y="357" width="0.4" height="15.0" fill="rgb(216,228,38)" rx="2" ry="2" />
<text  x="543.48" y="367.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;std::pair&lt;seastar::shared_ptr&lt;service::abstract_read_executor&gt;, nonwrapping_interval&lt;dht::token&gt; &gt;, 1ul&gt;::~small_vector (185 samples, 0.38%)</title><rect x="1170.2" y="485" width="4.6" height="15.0" fill="rgb(252,124,23)" rx="2" ry="2" />
<text  x="1173.25" y="495.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_construct&lt;interval_bound&lt;dht::ring_position&gt; const&amp;&gt; (37 samples, 0.08%)</title><rect x="610.2" y="437" width="0.9" height="15.0" fill="rgb(244,125,19)" rx="2" ry="2" />
<text  x="613.19" y="447.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::get_promise (11 samples, 0.02%)</title><rect x="1128.3" y="421" width="0.3" height="15.0" fill="rgb(208,108,9)" rx="2" ry="2" />
<text  x="1131.30" y="431.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;gms::inet_address*, __gnu_cxx::__ops::_Iter_pred&lt;std::unary_negate&lt;std::binder1st&lt;std::_Mem_fn&lt;bool  (61 samples, 0.13%)</title><rect x="1096.3" y="309" width="1.5" height="15.0" fill="rgb(219,68,8)" rx="2" ry="2" />
<text  x="1099.35" y="319.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;bool&gt;::move_it (7 samples, 0.01%)</title><rect x="771.5" y="341" width="0.2" height="15.0" fill="rgb(245,36,44)" rx="2" ry="2" />
<text  x="774.51" y="351.5" ></text>
</g>
<g >
<title>clustering_row::clustering_row (1,373 samples, 2.83%)</title><rect x="165.7" y="165" width="33.5" height="15.0" fill="rgb(234,19,52)" rx="2" ry="2" />
<text  x="168.74" y="175.5" >cl..</text>
</g>
<g >
<title>std::hash&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;::operator (97 samples, 0.20%)</title><rect x="742.6" y="293" width="2.4" height="15.0" fill="rgb(209,159,29)" rx="2" ry="2" />
<text  x="745.60" y="303.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (6 samples, 0.01%)</title><rect x="382.1" y="165" width="0.2" height="15.0" fill="rgb(246,203,22)" rx="2" ry="2" />
<text  x="385.12" y="175.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::find (20 samples, 0.04%)</title><rect x="647.8" y="437" width="0.5" height="15.0" fill="rgb(233,104,39)" rx="2" ry="2" />
<text  x="650.82" y="447.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (29 samples, 0.06%)</title><rect x="683.3" y="437" width="0.7" height="15.0" fill="rgb(226,163,21)" rx="2" ry="2" />
<text  x="686.31" y="447.5" ></text>
</g>
<g >
<title>cql3::constants::marker::to_expression (15 samples, 0.03%)</title><rect x="885.5" y="341" width="0.4" height="15.0" fill="rgb(207,213,0)" rx="2" ry="2" />
<text  x="888.52" y="351.5" ></text>
</g>
<g >
<title>std::type_info::operator== (7 samples, 0.01%)</title><rect x="1004.6" y="277" width="0.2" height="15.0" fill="rgb(240,161,5)" rx="2" ry="2" />
<text  x="1007.62" y="287.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reserve&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (11 samples, 0.02%)</title><rect x="862.0" y="405" width="0.3" height="15.0" fill="rgb(207,162,45)" rx="2" ry="2" />
<text  x="865.04" y="415.5" ></text>
</g>
<g >
<title>utils::timed_rate_moving_average_and_histogram::mark&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; (59 samples, 0.12%)</title><rect x="674.9" y="469" width="1.4" height="15.0" fill="rgb(236,82,16)" rx="2" ry="2" />
<text  x="677.88" y="479.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;mutation_fragment&gt;::allocate (11 samples, 0.02%)</title><rect x="273.6" y="293" width="0.3" height="15.0" fill="rgb(242,4,52)" rx="2" ry="2" />
<text  x="276.63" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::~vector (17 samples, 0.04%)</title><rect x="440.7" y="277" width="0.4" height="15.0" fill="rgb(249,120,21)" rx="2" ry="2" />
<text  x="443.70" y="287.5" ></text>
</g>
<g >
<title>operator new (68 samples, 0.14%)</title><rect x="1050.9" y="245" width="1.6" height="15.0" fill="rgb(221,66,5)" rx="2" ry="2" />
<text  x="1053.85" y="255.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;, nonwrapping_interval&lt;managed_bytes&gt; &gt; (16 samples, 0.03%)</title><rect x="1137.7" y="421" width="0.3" height="15.0" fill="rgb(250,48,44)" rx="2" ry="2" />
<text  x="1140.66" y="431.5" ></text>
</g>
<g >
<title>operator delete (22 samples, 0.05%)</title><rect x="558.7" y="277" width="0.5" height="15.0" fill="rgb(222,141,23)" rx="2" ry="2" />
<text  x="561.70" y="287.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (12 samples, 0.02%)</title><rect x="860.4" y="501" width="0.3" height="15.0" fill="rgb(227,126,24)" rx="2" ry="2" />
<text  x="863.41" y="511.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;compact_for_query&lt; (85 samples, 0.18%)</title><rect x="408.8" y="277" width="2.1" height="15.0" fill="rgb(251,215,6)" rx="2" ry="2" />
<text  x="411.79" y="287.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (48 samples, 0.10%)</title><rect x="924.7" y="325" width="1.2" height="15.0" fill="rgb(214,58,39)" rx="2" ry="2" />
<text  x="927.73" y="335.5" ></text>
</g>
<g >
<title>seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;::swap (36 samples, 0.07%)</title><rect x="834.6" y="437" width="0.9" height="15.0" fill="rgb(237,95,33)" rx="2" ry="2" />
<text  x="837.59" y="447.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::on_permit_destroyed (19 samples, 0.04%)</title><rect x="61.9" y="421" width="0.5" height="15.0" fill="rgb(239,0,35)" rx="2" ry="2" />
<text  x="64.90" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::_S_do_relocate (6 samples, 0.01%)</title><rect x="18.0" y="245" width="0.1" height="15.0" fill="rgb(229,68,0)" rx="2" ry="2" />
<text  x="20.99" y="255.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (8 samples, 0.02%)</title><rect x="846.0" y="325" width="0.2" height="15.0" fill="rgb(212,37,30)" rx="2" ry="2" />
<text  x="848.96" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%)</title><rect x="403.8" y="245" width="0.1" height="15.0" fill="rgb(239,125,30)" rx="2" ry="2" />
<text  x="406.82" y="255.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::has_token (14 samples, 0.03%)</title><rect x="646.6" y="421" width="0.3" height="15.0" fill="rgb(235,111,53)" rx="2" ry="2" />
<text  x="649.58" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (26 samples, 0.05%)</title><rect x="36.6" y="421" width="0.7" height="15.0" fill="rgb(220,72,25)" rx="2" ry="2" />
<text  x="39.62" y="431.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::~guard (8 samples, 0.02%)</title><rect x="495.5" y="261" width="0.2" height="15.0" fill="rgb(252,117,41)" rx="2" ry="2" />
<text  x="498.47" y="271.5" ></text>
</g>
<g >
<title>std::_Optional_base_impl&lt;query::querier&lt; (63 samples, 0.13%)</title><rect x="618.2" y="421" width="1.6" height="15.0" fill="rgb(207,26,6)" rx="2" ry="2" />
<text  x="621.23" y="431.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::metadata&gt;::~shared_ptr (39 samples, 0.08%)</title><rect x="657.6" y="485" width="1.0" height="15.0" fill="rgb(252,178,51)" rx="2" ry="2" />
<text  x="660.62" y="495.5" ></text>
</g>
<g >
<title>operator new (19 samples, 0.04%)</title><rect x="650.5" y="453" width="0.4" height="15.0" fill="rgb(234,56,10)" rx="2" ry="2" />
<text  x="653.45" y="463.5" ></text>
</g>
<g >
<title>seastar::future&lt;query::result_memory_accounter&gt;::get0 (38 samples, 0.08%)</title><rect x="600.9" y="437" width="0.9" height="15.0" fill="rgb(239,131,11)" rx="2" ry="2" />
<text  x="603.86" y="447.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::execution_loop (23,902 samples, 49.34%)</title><rect x="46.2" y="501" width="582.2" height="15.0" fill="rgb(226,184,20)" rx="2" ry="2" />
<text  x="49.24" y="511.5" >reader_concurrency_semaphore::execution_loop</text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::constant&gt;  (10 samples, 0.02%)</title><rect x="902.6" y="325" width="0.3" height="15.0" fill="rgb(219,63,32)" rx="2" ry="2" />
<text  x="905.62" y="335.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_slice_or_needs_filtering (29 samples, 0.06%)</title><rect x="645.8" y="437" width="0.7" height="15.0" fill="rgb(243,68,37)" rx="2" ry="2" />
<text  x="648.78" y="447.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::cancel (11 samples, 0.02%)</title><rect x="702.4" y="421" width="0.3" height="15.0" fill="rgb(253,2,7)" rx="2" ry="2" />
<text  x="705.43" y="431.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (17 samples, 0.04%)</title><rect x="1151.8" y="453" width="0.4" height="15.0" fill="rgb(224,1,39)" rx="2" ry="2" />
<text  x="1154.76" y="463.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt;::construct&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; (9 samples, 0.02%)</title><rect x="213.7" y="133" width="0.2" height="15.0" fill="rgb(235,114,25)" rx="2" ry="2" />
<text  x="216.72" y="143.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::pop_back (14 samples, 0.03%)</title><rect x="255.7" y="277" width="0.3" height="15.0" fill="rgb(247,113,40)" rx="2" ry="2" />
<text  x="258.71" y="287.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;partition_key, false, false&gt;::_Optional_base (6 samples, 0.01%)</title><rect x="536.3" y="389" width="0.1" height="15.0" fill="rgb(238,5,6)" rx="2" ry="2" />
<text  x="539.30" y="399.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (5 samples, 0.01%)</title><rect x="845.8" y="325" width="0.2" height="15.0" fill="rgb(220,208,10)" rx="2" ry="2" />
<text  x="848.84" y="335.5" ></text>
</g>
<g >
<title>database_sstable_write_monitor::~database_sstable_write_monitor (14 samples, 0.03%)</title><rect x="21.4" y="613" width="0.4" height="15.0" fill="rgb(245,195,4)" rx="2" ry="2" />
<text  x="24.45" y="623.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::~result_memory_accounter (6 samples, 0.01%)</title><rect x="59.3" y="453" width="0.2" height="15.0" fill="rgb(238,127,49)" rx="2" ry="2" />
<text  x="62.35" y="463.5" ></text>
</g>
<g >
<title>dht::ring_position_tri_compare (425 samples, 0.88%)</title><rect x="471.8" y="277" width="10.4" height="15.0" fill="rgb(245,70,15)" rx="2" ry="2" />
<text  x="474.85" y="287.5" ></text>
</g>
<g >
<title>operator delete (18 samples, 0.04%)</title><rect x="50.3" y="469" width="0.5" height="15.0" fill="rgb(216,103,21)" rx="2" ry="2" />
<text  x="53.33" y="479.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, database::query (12 samples, 0.02%)</title><rect x="684.0" y="501" width="0.3" height="15.0" fill="rgb(209,69,20)" rx="2" ry="2" />
<text  x="687.04" y="511.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (11 samples, 0.02%)</title><rect x="1049.5" y="229" width="0.2" height="15.0" fill="rgb(253,93,32)" rx="2" ry="2" />
<text  x="1052.46" y="239.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::execute (177 samples, 0.37%)</title><rect x="687.2" y="469" width="4.3" height="15.0" fill="rgb(206,123,6)" rx="2" ry="2" />
<text  x="690.18" y="479.5" ></text>
</g>
<g >
<title>flat_mutation_reader::peek (15 samples, 0.03%)</title><rect x="282.8" y="373" width="0.4" height="15.0" fill="rgb(246,90,41)" rx="2" ry="2" />
<text  x="285.79" y="383.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::storage_proxy&gt;::~shared_ptr (9 samples, 0.02%)</title><rect x="1068.4" y="341" width="0.2" height="15.0" fill="rgb(222,88,33)" rx="2" ry="2" />
<text  x="1071.36" y="351.5" ></text>
</g>
<g >
<title>operator delete (36 samples, 0.07%)</title><rect x="278.2" y="293" width="0.9" height="15.0" fill="rgb(234,60,20)" rx="2" ry="2" />
<text  x="281.21" y="303.5" ></text>
</g>
<g >
<title>std::optional&lt;query::querier&lt; (7 samples, 0.01%)</title><rect x="78.0" y="453" width="0.2" height="15.0" fill="rgb(237,163,41)" rx="2" ry="2" />
<text  x="81.03" y="463.5" ></text>
</g>
<g >
<title>__tls_init (13 samples, 0.03%)</title><rect x="496.1" y="245" width="0.3" height="15.0" fill="rgb(223,24,33)" rx="2" ry="2" />
<text  x="499.13" y="255.5" ></text>
</g>
<g >
<title>seastar::memory::stats (37 samples, 0.08%)</title><rect x="496.5" y="245" width="0.9" height="15.0" fill="rgb(232,28,14)" rx="2" ry="2" />
<text  x="499.52" y="255.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (20 samples, 0.04%)</title><rect x="214.5" y="165" width="0.5" height="15.0" fill="rgb(209,196,19)" rx="2" ry="2" />
<text  x="217.50" y="175.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::~vector (10 samples, 0.02%)</title><rect x="575.7" y="341" width="0.2" height="15.0" fill="rgb(217,138,11)" rx="2" ry="2" />
<text  x="578.70" y="351.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::_Move_ctor_base (7 samples, 0.01%)</title><rect x="310.8" y="165" width="0.2" height="15.0" fill="rgb(243,33,25)" rx="2" ry="2" />
<text  x="313.80" y="175.5" ></text>
</g>
<g >
<title>ser::qr_partition__rows&lt;bytes_ostream&gt;::add (21 samples, 0.04%)</title><rect x="330.7" y="181" width="0.5" height="15.0" fill="rgb(235,215,47)" rx="2" ry="2" />
<text  x="333.65" y="191.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (31 samples, 0.06%)</title><rect x="934.9" y="389" width="0.8" height="15.0" fill="rgb(220,164,54)" rx="2" ry="2" />
<text  x="937.91" y="399.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (20 samples, 0.04%)</title><rect x="926.0" y="389" width="0.5" height="15.0" fill="rgb(217,50,21)" rx="2" ry="2" />
<text  x="929.00" y="399.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (6 samples, 0.01%)</title><rect x="684.1" y="453" width="0.2" height="15.0" fill="rgb(209,192,14)" rx="2" ry="2" />
<text  x="687.14" y="463.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;, service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (15 samples, 0.03%)</title><rect x="1142.4" y="261" width="0.3" height="15.0" fill="rgb(227,177,16)" rx="2" ry="2" />
<text  x="1145.36" y="271.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_restrictions::size (5 samples, 0.01%)</title><rect x="949.9" y="405" width="0.2" height="15.0" fill="rgb(249,130,33)" rx="2" ry="2" />
<text  x="952.94" y="415.5" ></text>
</g>
<g >
<title>db::commitlog::add_entry (7 samples, 0.01%)</title><rect x="1141.9" y="309" width="0.2" height="15.0" fill="rgb(221,224,40)" rx="2" ry="2" />
<text  x="1144.90" y="319.5" ></text>
</g>
<g >
<title>reader_permit::consume (22 samples, 0.05%)</title><rect x="277.1" y="277" width="0.5" height="15.0" fill="rgb(251,194,17)" rx="2" ry="2" />
<text  x="280.09" y="287.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (8 samples, 0.02%)</title><rect x="931.7" y="341" width="0.2" height="15.0" fill="rgb(208,182,42)" rx="2" ry="2" />
<text  x="934.75" y="351.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::move_it (5 samples, 0.01%)</title><rect x="710.2" y="501" width="0.1" height="15.0" fill="rgb(244,200,52)" rx="2" ry="2" />
<text  x="713.23" y="511.5" ></text>
</g>
<g >
<title>_ZSt13__invoke_implISt10unique_ptrIN7seastar8internal13do_with_stateISt5tupleIJN20flat_mutation_reader4impl16consumer_adapterI35stable_flattened_mutations_consumerI17compact_for_queryIL19emit_only_live_rows1EN5query27clustering_position_trackerI20query_result_builderEEEEEEEENS1_6futureIvEEEESt14default_deleteISL_EEZNS2_12do_with_implISH_ZNS6_7consumeISG_EEDaT_EUlRSH_E_JEEEDaOSR_OT0_DpOT1_EUlDpOT_E_JSH_EESR_St14__invoke_otherSW_SZ_ (74 samples, 0.15%)</title><rect x="290.8" y="309" width="1.8" height="15.0" fill="rgb(250,37,37)" rx="2" ry="2" />
<text  x="293.81" y="319.5" ></text>
</g>
<g >
<title>std::hash&lt;wrapping_interval&lt;dht::token&gt; &gt;::operator (8 samples, 0.02%)</title><rect x="1103.4" y="341" width="0.2" height="15.0" fill="rgb(211,169,43)" rx="2" ry="2" />
<text  x="1106.36" y="351.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (5 samples, 0.01%)</title><rect x="617.1" y="421" width="0.1" height="15.0" fill="rgb(246,149,12)" rx="2" ry="2" />
<text  x="620.09" y="431.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::operator (41 samples, 0.08%)</title><rect x="748.2" y="373" width="1.0" height="15.0" fill="rgb(205,185,46)" rx="2" ry="2" />
<text  x="751.20" y="383.5" ></text>
</g>
<g >
<title>seastar::future&lt;utils::small_vector&lt;service::storage_proxy::unique_response_handler, 1ul&gt; &gt;::then_impl&lt;service::storage_proxy::mutate_internal&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt; &gt; (10 samples, 0.02%)</title><rect x="1142.1" y="309" width="0.2" height="15.0" fill="rgb(237,145,49)" rx="2" ry="2" />
<text  x="1145.09" y="319.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::~timer (50 samples, 0.10%)</title><rect x="68.7" y="389" width="1.2" height="15.0" fill="rgb(245,174,1)" rx="2" ry="2" />
<text  x="71.70" y="399.5" ></text>
</g>
<g >
<title>std::hash&lt;auth::resource&gt;::hash_data (92 samples, 0.19%)</title><rect x="812.0" y="325" width="2.3" height="15.0" fill="rgb(205,153,5)" rx="2" ry="2" />
<text  x="815.01" y="335.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_nodes (5 samples, 0.01%)</title><rect x="1109.2" y="373" width="0.1" height="15.0" fill="rgb(212,20,47)" rx="2" ry="2" />
<text  x="1112.21" y="383.5" ></text>
</g>
<g >
<title>operator new (76 samples, 0.16%)</title><rect x="964.8" y="373" width="1.8" height="15.0" fill="rgb(208,187,21)" rx="2" ry="2" />
<text  x="967.78" y="383.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (5 samples, 0.01%)</title><rect x="270.3" y="309" width="0.2" height="15.0" fill="rgb(223,106,41)" rx="2" ry="2" />
<text  x="273.35" y="319.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;auth::resource&gt;::_M_reset (8 samples, 0.02%)</title><rect x="809.4" y="293" width="0.2" height="15.0" fill="rgb(207,36,46)" rx="2" ry="2" />
<text  x="812.38" y="303.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::take_value (6 samples, 0.01%)</title><rect x="138.4" y="261" width="0.2" height="15.0" fill="rgb(245,202,47)" rx="2" ry="2" />
<text  x="141.41" y="271.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::maybe_drop_from (8 samples, 0.02%)</title><rect x="317.6" y="213" width="0.2" height="15.0" fill="rgb(248,98,41)" rx="2" ry="2" />
<text  x="320.62" y="223.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (14 samples, 0.03%)</title><rect x="168.3" y="133" width="0.4" height="15.0" fill="rgb(212,14,21)" rx="2" ry="2" />
<text  x="171.32" y="143.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (14 samples, 0.03%)</title><rect x="916.1" y="341" width="0.3" height="15.0" fill="rgb(208,131,31)" rx="2" ry="2" />
<text  x="919.06" y="351.5" ></text>
</g>
<g >
<title>operator delete (36 samples, 0.07%)</title><rect x="563.6" y="277" width="0.9" height="15.0" fill="rgb(239,149,14)" rx="2" ry="2" />
<text  x="566.62" y="287.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::push_mutation_fragment&lt;schema const&amp;, reader_permit&amp;, partition_start&gt; (302 samples, 0.62%)</title><rect x="498.4" y="245" width="7.4" height="15.0" fill="rgb(237,118,21)" rx="2" ry="2" />
<text  x="501.42" y="255.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::timer (29 samples, 0.06%)</title><rect x="1033.0" y="149" width="0.7" height="15.0" fill="rgb(228,88,36)" rx="2" ry="2" />
<text  x="1036.02" y="159.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::get_promise (10 samples, 0.02%)</title><rect x="957.8" y="405" width="0.2" height="15.0" fill="rgb(226,81,41)" rx="2" ry="2" />
<text  x="960.76" y="415.5" ></text>
</g>
<g >
<title>reader_permit::impl::~impl (13 samples, 0.03%)</title><rect x="50.9" y="469" width="0.3" height="15.0" fill="rgb(242,151,51)" rx="2" ry="2" />
<text  x="53.89" y="479.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_range_tombstone (220 samples, 0.45%)</title><rect x="216.3" y="229" width="5.4" height="15.0" fill="rgb(217,140,15)" rx="2" ry="2" />
<text  x="219.32" y="239.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::operator== (12 samples, 0.02%)</title><rect x="793.4" y="133" width="0.2" height="15.0" fill="rgb(220,113,46)" rx="2" ry="2" />
<text  x="796.35" y="143.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::query_state&gt;::~shared_ptr (8 samples, 0.02%)</title><rect x="1145.9" y="501" width="0.2" height="15.0" fill="rgb(242,119,49)" rx="2" ry="2" />
<text  x="1148.94" y="511.5" ></text>
</g>
<g >
<title>TLS init function for bound_view::_empty_prefix (7 samples, 0.01%)</title><rect x="237.8" y="165" width="0.1" height="15.0" fill="rgb(208,28,53)" rx="2" ry="2" />
<text  x="240.76" y="175.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (91 samples, 0.19%)</title><rect x="483.6" y="325" width="2.2" height="15.0" fill="rgb(239,184,7)" rx="2" ry="2" />
<text  x="486.61" y="335.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;, seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::finally_body&lt;seastar::smp::submit_to&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (254 samples, 0.52%)</title><rect x="628.6" y="501" width="6.2" height="15.0" fill="rgb(220,132,31)" rx="2" ry="2" />
<text  x="631.61" y="511.5" ></text>
</g>
<g >
<title>query_result_builder::consume_end_of_partition (6 samples, 0.01%)</title><rect x="388.4" y="245" width="0.1" height="15.0" fill="rgb(240,163,22)" rx="2" ry="2" />
<text  x="391.35" y="255.5" ></text>
</g>
<g >
<title>boost::intrusive::bstbase&lt;boost::intrusive::mhtraits&lt;range_tombstone_entry, boost::intrusive::set_member_hook&lt;boost::intrusive::link_mode&lt; (19 samples, 0.04%)</title><rect x="560.2" y="293" width="0.5" height="15.0" fill="rgb(221,13,26)" rx="2" ry="2" />
<text  x="563.21" y="303.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_M_reset (5 samples, 0.01%)</title><rect x="1100.6" y="341" width="0.1" height="15.0" fill="rgb(229,45,53)" rx="2" ry="2" />
<text  x="1103.61" y="351.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_M_reset (6 samples, 0.01%)</title><rect x="590.3" y="389" width="0.1" height="15.0" fill="rgb(212,89,43)" rx="2" ry="2" />
<text  x="593.27" y="399.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (15 samples, 0.03%)</title><rect x="898.2" y="229" width="0.3" height="15.0" fill="rgb(250,12,54)" rx="2" ry="2" />
<text  x="901.18" y="239.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::size (5 samples, 0.01%)</title><rect x="878.6" y="421" width="0.1" height="15.0" fill="rgb(240,4,29)" rx="2" ry="2" />
<text  x="881.63" y="431.5" ></text>
</g>
<g >
<title>position_in_partition_view::position_in_partition_view (9 samples, 0.02%)</title><rect x="224.0" y="213" width="0.2" height="15.0" fill="rgb(233,25,36)" rx="2" ry="2" />
<text  x="227.02" y="223.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (7 samples, 0.01%)</title><rect x="419.6" y="405" width="0.1" height="15.0" fill="rgb(232,144,33)" rx="2" ry="2" />
<text  x="422.55" y="415.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::contains&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (158 samples, 0.33%)</title><rect x="836.2" y="405" width="3.9" height="15.0" fill="rgb(216,112,24)" rx="2" ry="2" />
<text  x="839.25" y="415.5" ></text>
</g>
<g >
<title>schema_registry::get_entry (11 samples, 0.02%)</title><rect x="979.8" y="357" width="0.2" height="15.0" fill="rgb(249,80,31)" rx="2" ry="2" />
<text  x="982.75" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::reserve (5 samples, 0.01%)</title><rect x="423.6" y="357" width="0.1" height="15.0" fill="rgb(212,81,9)" rx="2" ry="2" />
<text  x="426.60" y="367.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (21 samples, 0.04%)</title><rect x="571.6" y="341" width="0.5" height="15.0" fill="rgb(246,47,54)" rx="2" ry="2" />
<text  x="574.61" y="351.5" ></text>
</g>
<g >
<title>std::__detail::_List_node_header::_List_node_header (11 samples, 0.02%)</title><rect x="449.7" y="277" width="0.2" height="15.0" fill="rgb(212,7,21)" rx="2" ry="2" />
<text  x="452.66" y="287.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::emplace_back&lt;gms::inet_address const&amp;&gt; (16 samples, 0.03%)</title><rect x="706.5" y="453" width="0.4" height="15.0" fill="rgb(224,116,52)" rx="2" ry="2" />
<text  x="709.52" y="463.5" ></text>
</g>
<g >
<title>empty_flat_reader::empty_flat_reader (52 samples, 0.11%)</title><rect x="527.7" y="261" width="1.2" height="15.0" fill="rgb(243,59,44)" rx="2" ry="2" />
<text  x="530.67" y="271.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::value_ptr&gt;::future_state&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry_ptr&gt; (48 samples, 0.10%)</title><rect x="736.2" y="325" width="1.1" height="15.0" fill="rgb(232,3,42)" rx="2" ry="2" />
<text  x="739.17" y="335.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (15 samples, 0.03%)</title><rect x="225.3" y="229" width="0.4" height="15.0" fill="rgb(243,185,18)" rx="2" ry="2" />
<text  x="228.29" y="239.5" ></text>
</g>
<g >
<title>write_cell&lt;ser::qr_clustered_row__cells__cells&lt;bytes_ostream&gt; &gt; (10 samples, 0.02%)</title><rect x="362.1" y="197" width="0.3" height="15.0" fill="rgb(237,141,51)" rx="2" ry="2" />
<text  x="365.15" y="207.5" ></text>
</g>
<g >
<title>partition_key_view::legacy_form (7 samples, 0.01%)</title><rect x="919.5" y="373" width="0.2" height="15.0" fill="rgb(228,150,38)" rx="2" ry="2" />
<text  x="922.52" y="383.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::_Move_ctor_base (7 samples, 0.01%)</title><rect x="317.2" y="149" width="0.2" height="15.0" fill="rgb(247,82,53)" rx="2" ry="2" />
<text  x="320.18" y="159.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, enum_set&lt;super_enum&lt;auth::permission,  (638 samples, 1.32%)</title><rect x="785.5" y="245" width="15.5" height="15.0" fill="rgb(224,38,54)" rx="2" ry="2" />
<text  x="788.49" y="255.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::clear (9 samples, 0.02%)</title><rect x="960.2" y="389" width="0.2" height="15.0" fill="rgb(244,78,45)" rx="2" ry="2" />
<text  x="963.22" y="399.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (7 samples, 0.01%)</title><rect x="895.0" y="261" width="0.1" height="15.0" fill="rgb(209,149,47)" rx="2" ry="2" />
<text  x="897.97" y="271.5" ></text>
</g>
<g >
<title>service::storage_proxy::create_write_response_handler (14 samples, 0.03%)</title><rect x="1142.4" y="229" width="0.3" height="15.0" fill="rgb(239,58,51)" rx="2" ry="2" />
<text  x="1145.38" y="239.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (5 samples, 0.01%)</title><rect x="1137.3" y="421" width="0.1" height="15.0" fill="rgb(217,35,51)" rx="2" ry="2" />
<text  x="1140.27" y="431.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (5 samples, 0.01%)</title><rect x="248.0" y="261" width="0.2" height="15.0" fill="rgb(245,144,13)" rx="2" ry="2" />
<text  x="251.04" y="271.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::_M_create_storage (37 samples, 0.08%)</title><rect x="99.0" y="405" width="0.9" height="15.0" fill="rgb(244,184,28)" rx="2" ry="2" />
<text  x="101.97" y="415.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::~impl (28 samples, 0.06%)</title><rect x="552.5" y="309" width="0.7" height="15.0" fill="rgb(240,142,33)" rx="2" ry="2" />
<text  x="555.49" y="319.5" ></text>
</g>
<g >
<title>managed_bytes::operator= (17 samples, 0.04%)</title><rect x="1125.7" y="421" width="0.4" height="15.0" fill="rgb(235,121,42)" rx="2" ry="2" />
<text  x="1128.67" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (24 samples, 0.05%)</title><rect x="529.0" y="245" width="0.6" height="15.0" fill="rgb(209,99,32)" rx="2" ry="2" />
<text  x="531.99" y="255.5" ></text>
</g>
<g >
<title>dht::shard_of (38 samples, 0.08%)</title><rect x="1008.8" y="277" width="1.0" height="15.0" fill="rgb(253,99,2)" rx="2" ry="2" />
<text  x="1011.84" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (28 samples, 0.06%)</title><rect x="541.8" y="341" width="0.7" height="15.0" fill="rgb(220,57,10)" rx="2" ry="2" />
<text  x="544.85" y="351.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::get_promise (8 samples, 0.02%)</title><rect x="716.4" y="437" width="0.2" height="15.0" fill="rgb(237,37,20)" rx="2" ry="2" />
<text  x="719.36" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::~vector (24 samples, 0.05%)</title><rect x="1139.0" y="421" width="0.6" height="15.0" fill="rgb(212,192,54)" rx="2" ry="2" />
<text  x="1142.05" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (30 samples, 0.06%)</title><rect x="1158.9" y="373" width="0.8" height="15.0" fill="rgb(207,188,7)" rx="2" ry="2" />
<text  x="1161.92" y="383.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (9 samples, 0.02%)</title><rect x="958.1" y="405" width="0.2" height="15.0" fill="rgb(223,152,51)" rx="2" ry="2" />
<text  x="961.10" y="415.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (8 samples, 0.02%)</title><rect x="17.7" y="309" width="0.2" height="15.0" fill="rgb(207,84,50)" rx="2" ry="2" />
<text  x="20.70" y="319.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_4findERKNS5_10expressionENS5_6oper_tEEUlRS7_E_EES8_SE_T_EUlSG_E_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_8constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_11conjunctionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_12column_valueEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_5tokenEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13function_callEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4castEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_15field_selectionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4nullEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13bind_variableEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_16untyped_constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_17tuple_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_22collection_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSO_S6_SS_SW_S10_S14_S18_S1C_S1G_S1K_S1O_S1S_SK_S1W_S20_S24_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES29_S2C_ (6 samples, 0.01%)</title><rect x="648.2" y="389" width="0.1" height="15.0" fill="rgb(228,142,52)" rx="2" ry="2" />
<text  x="651.17" y="399.5" ></text>
</g>
<g >
<title>table::estimate_read_memory_cost (8 samples, 0.02%)</title><rect x="1046.7" y="261" width="0.2" height="15.0" fill="rgb(253,78,2)" rx="2" ry="2" />
<text  x="1049.71" y="271.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::~small_vector (7 samples, 0.01%)</title><rect x="582.1" y="373" width="0.2" height="15.0" fill="rgb(213,38,5)" rx="2" ry="2" />
<text  x="585.13" y="383.5" ></text>
</g>
<g >
<title>operator new (29 samples, 0.06%)</title><rect x="532.2" y="325" width="0.7" height="15.0" fill="rgb(238,227,30)" rx="2" ry="2" />
<text  x="535.23" y="335.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector (16 samples, 0.03%)</title><rect x="1076.5" y="309" width="0.4" height="15.0" fill="rgb(253,228,50)" rx="2" ry="2" />
<text  x="1079.52" y="319.5" ></text>
</g>
<g >
<title>operator new (27 samples, 0.06%)</title><rect x="99.2" y="389" width="0.7" height="15.0" fill="rgb(219,46,38)" rx="2" ry="2" />
<text  x="102.22" y="399.5" ></text>
</g>
<g >
<title>query_result_builder::consume_end_of_partition (71 samples, 0.15%)</title><rect x="301.9" y="229" width="1.7" height="15.0" fill="rgb(234,214,4)" rx="2" ry="2" />
<text  x="304.91" y="239.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take (9 samples, 0.02%)</title><rect x="603.7" y="437" width="0.2" height="15.0" fill="rgb(244,117,37)" rx="2" ry="2" />
<text  x="606.71" y="447.5" ></text>
</g>
<g >
<title>seastar::deferred_action&lt;table::query (6 samples, 0.01%)</title><rect x="73.9" y="453" width="0.2" height="15.0" fill="rgb(249,173,43)" rx="2" ry="2" />
<text  x="76.91" y="463.5" ></text>
</g>
<g >
<title>locator::token_metadata::first_token (6 samples, 0.01%)</title><rect x="1095.1" y="293" width="0.1" height="15.0" fill="rgb(251,210,3)" rx="2" ry="2" />
<text  x="1098.08" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (73 samples, 0.15%)</title><rect x="986.0" y="277" width="1.8" height="15.0" fill="rgb(232,178,3)" rx="2" ry="2" />
<text  x="989.01" y="287.5" ></text>
</g>
<g >
<title>service::client_state::set_keyspace (7 samples, 0.01%)</title><rect x="835.5" y="437" width="0.1" height="15.0" fill="rgb(231,10,16)" rx="2" ry="2" />
<text  x="838.47" y="447.5" ></text>
</g>
<g >
<title>std::apply&lt;auth::get_permissions (961 samples, 1.98%)</title><rect x="782.1" y="293" width="23.4" height="15.0" fill="rgb(220,75,36)" rx="2" ry="2" />
<text  x="785.10" y="303.5" >s..</text>
</g>
<g >
<title>operator new (62 samples, 0.13%)</title><rect x="850.1" y="357" width="1.5" height="15.0" fill="rgb(247,120,40)" rx="2" ry="2" />
<text  x="853.08" y="367.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (13 samples, 0.03%)</title><rect x="17.0" y="357" width="0.3" height="15.0" fill="rgb(244,5,10)" rx="2" ry="2" />
<text  x="19.97" y="367.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (6 samples, 0.01%)</title><rect x="790.4" y="181" width="0.1" height="15.0" fill="rgb(226,2,44)" rx="2" ry="2" />
<text  x="793.36" y="191.5" ></text>
</g>
<g >
<title>ser::qr_clustered_row__cells&lt;bytes_ostream&gt;::qr_clustered_row__cells (13 samples, 0.03%)</title><rect x="329.6" y="181" width="0.3" height="15.0" fill="rgb(211,228,47)" rx="2" ry="2" />
<text  x="332.63" y="191.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::forward_to (10 samples, 0.02%)</title><rect x="1142.7" y="485" width="0.3" height="15.0" fill="rgb(218,199,20)" rx="2" ry="2" />
<text  x="1145.72" y="495.5" ></text>
</g>
<g >
<title>cql3::prepared_statements_cache::find (309 samples, 0.64%)</title><rect x="721.0" y="437" width="7.5" height="15.0" fill="rgb(234,129,33)" rx="2" ry="2" />
<text  x="724.02" y="447.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::deallocate (31 samples, 0.06%)</title><rect x="152.1" y="213" width="0.8" height="15.0" fill="rgb(209,142,12)" rx="2" ry="2" />
<text  x="155.10" y="223.5" ></text>
</g>
<g >
<title>std::__make_heap&lt;__gnu_cxx::__normal_iterator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position*, std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::heap_compare&gt; &gt; (5 samples, 0.01%)</title><rect x="241.8" y="229" width="0.1" height="15.0" fill="rgb(246,211,31)" rx="2" ry="2" />
<text  x="244.75" y="239.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::operator== (57 samples, 0.12%)</title><rect x="794.1" y="133" width="1.4" height="15.0" fill="rgb(214,42,3)" rx="2" ry="2" />
<text  x="797.11" y="143.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (5,741 samples, 11.85%)</title><rect x="118.5" y="325" width="139.9" height="15.0" fill="rgb(207,154,11)" rx="2" ry="2" />
<text  x="121.53" y="335.5" >mutation_reader_m..</text>
</g>
<g >
<title>database::find_uuid (217 samples, 0.45%)</title><rect x="754.3" y="389" width="5.3" height="15.0" fill="rgb(232,165,9)" rx="2" ry="2" />
<text  x="757.34" y="399.5" ></text>
</g>
<g >
<title>cql3::raw_value_view::raw_value_view (78 samples, 0.16%)</title><rect x="904.6" y="325" width="1.9" height="15.0" fill="rgb(214,173,29)" rx="2" ry="2" />
<text  x="907.64" y="335.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (64 samples, 0.13%)</title><rect x="1107.8" y="405" width="1.6" height="15.0" fill="rgb(242,49,27)" rx="2" ry="2" />
<text  x="1110.85" y="415.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit_slot&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::memory_usage&lt;row::external_memory_usage (120 samples, 0.25%)</title><rect x="202.9" y="117" width="2.9" height="15.0" fill="rgb(232,229,40)" rx="2" ry="2" />
<text  x="205.90" y="127.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (8 samples, 0.02%)</title><rect x="254.2" y="261" width="0.2" height="15.0" fill="rgb(214,87,18)" rx="2" ry="2" />
<text  x="257.17" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (22 samples, 0.05%)</title><rect x="500.3" y="181" width="0.5" height="15.0" fill="rgb(243,75,23)" rx="2" ry="2" />
<text  x="503.27" y="191.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::leaf_node::free (54 samples, 0.11%)</title><rect x="398.5" y="213" width="1.3" height="15.0" fill="rgb(222,182,29)" rx="2" ry="2" />
<text  x="401.51" y="223.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (12,755 samples, 26.33%)</title><rect x="107.8" y="421" width="310.7" height="15.0" fill="rgb(251,206,32)" rx="2" ry="2" />
<text  x="110.82" y="431.5" >query::consume_page&lt;</text>
</g>
<g >
<title>operator new (129 samples, 0.27%)</title><rect x="1011.4" y="277" width="3.1" height="15.0" fill="rgb(254,26,27)" rx="2" ry="2" />
<text  x="1014.37" y="287.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::take (30 samples, 0.06%)</title><rect x="280.4" y="357" width="0.7" height="15.0" fill="rgb(220,135,35)" rx="2" ry="2" />
<text  x="283.41" y="367.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::term (34 samples, 0.07%)</title><rect x="18.2" y="309" width="0.8" height="15.0" fill="rgb(229,84,49)" rx="2" ry="2" />
<text  x="21.16" y="319.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::~partition_snapshot_flat_reader (540 samples, 1.11%)</title><rect x="555.8" y="325" width="13.1" height="15.0" fill="rgb(227,21,35)" rx="2" ry="2" />
<text  x="558.76" y="335.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;query::result_memory_accounter&gt;::clear (15 samples, 0.03%)</title><rect x="602.9" y="437" width="0.4" height="15.0" fill="rgb(217,177,20)" rx="2" ry="2" />
<text  x="605.89" y="447.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (13 samples, 0.03%)</title><rect x="766.7" y="357" width="0.3" height="15.0" fill="rgb(248,23,18)" rx="2" ry="2" />
<text  x="769.68" y="367.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (11 samples, 0.02%)</title><rect x="825.1" y="293" width="0.2" height="15.0" fill="rgb(237,85,31)" rx="2" ry="2" />
<text  x="828.07" y="303.5" ></text>
</g>
<g >
<title>seastar::internal::uninitialized_wrapper_base&lt;service::storage_proxy_coordinator_query_result, false&gt;::uninitialized_set&lt;service::storage_proxy_coordinator_query_result&gt; (19 samples, 0.04%)</title><rect x="1151.7" y="469" width="0.5" height="15.0" fill="rgb(236,66,14)" rx="2" ry="2" />
<text  x="1154.71" y="479.5" ></text>
</g>
<g >
<title>mutation_fragment::visit&lt;partition_snapshot_read_accounter&amp;&gt; (27 samples, 0.06%)</title><rect x="146.4" y="229" width="0.6" height="15.0" fill="rgb(247,205,41)" rx="2" ry="2" />
<text  x="149.37" y="239.5" ></text>
</g>
<g >
<title>mutation_fragment::operator= (24 samples, 0.05%)</title><rect x="135.4" y="229" width="0.6" height="15.0" fill="rgb(223,155,13)" rx="2" ry="2" />
<text  x="138.44" y="239.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (24 samples, 0.05%)</title><rect x="514.8" y="309" width="0.5" height="15.0" fill="rgb(229,226,45)" rx="2" ry="2" />
<text  x="517.76" y="319.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::mutation_fragment_merger (112 samples, 0.23%)</title><rect x="446.6" y="277" width="2.7" height="15.0" fill="rgb(209,216,0)" rx="2" ry="2" />
<text  x="449.59" y="287.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (20 samples, 0.04%)</title><rect x="816.2" y="357" width="0.5" height="15.0" fill="rgb(253,226,5)" rx="2" ry="2" />
<text  x="819.25" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt;::emplace_back&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; (13 samples, 0.03%)</title><rect x="213.6" y="149" width="0.3" height="15.0" fill="rgb(246,43,42)" rx="2" ry="2" />
<text  x="216.62" y="159.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (11 samples, 0.02%)</title><rect x="384.4" y="149" width="0.2" height="15.0" fill="rgb(214,45,0)" rx="2" ry="2" />
<text  x="387.36" y="159.5" ></text>
</g>
<g >
<title>std::__apply_impl&lt;seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (45 samples, 0.09%)</title><rect x="1141.0" y="469" width="1.1" height="15.0" fill="rgb(209,40,9)" rx="2" ry="2" />
<text  x="1143.97" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (21 samples, 0.04%)</title><rect x="831.7" y="357" width="0.5" height="15.0" fill="rgb(212,156,17)" rx="2" ry="2" />
<text  x="834.69" y="367.5" ></text>
</g>
<g >
<title>position_in_partition::position_in_partition (13 samples, 0.03%)</title><rect x="225.7" y="245" width="0.3" height="15.0" fill="rgb(252,75,41)" rx="2" ry="2" />
<text  x="228.65" y="255.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_Optional_payload_base (16 samples, 0.03%)</title><rect x="1076.1" y="309" width="0.4" height="15.0" fill="rgb(250,175,43)" rx="2" ry="2" />
<text  x="1079.11" y="319.5" ></text>
</g>
<g >
<title>operator new (40 samples, 0.08%)</title><rect x="856.0" y="437" width="1.0" height="15.0" fill="rgb(228,14,19)" rx="2" ry="2" />
<text  x="859.05" y="447.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::reserve (25 samples, 0.05%)</title><rect x="100.8" y="421" width="0.6" height="15.0" fill="rgb(225,97,41)" rx="2" ry="2" />
<text  x="103.80" y="431.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (13 samples, 0.03%)</title><rect x="215.0" y="181" width="0.3" height="15.0" fill="rgb(240,186,8)" rx="2" ry="2" />
<text  x="217.98" y="191.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;signed char, std::char_traits&lt;signed char&gt; &gt;::substr (5 samples, 0.01%)</title><rect x="915.9" y="341" width="0.1" height="15.0" fill="rgb(210,113,21)" rx="2" ry="2" />
<text  x="918.87" y="351.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (8 samples, 0.02%)</title><rect x="223.0" y="181" width="0.2" height="15.0" fill="rgb(239,84,2)" rx="2" ry="2" />
<text  x="226.00" y="191.5" ></text>
</g>
<g >
<title>db::commitlog::segment_manager::allocate_when_possible&lt;db::commitlog::add_entry (7 samples, 0.01%)</title><rect x="1141.9" y="293" width="0.2" height="15.0" fill="rgb(235,128,20)" rx="2" ry="2" />
<text  x="1144.90" y="303.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::digest_read_result&gt;::take (5 samples, 0.01%)</title><rect x="688.5" y="437" width="0.1" height="15.0" fill="rgb(216,83,50)" rx="2" ry="2" />
<text  x="691.45" y="447.5" ></text>
</g>
<g >
<title>mutation_reader_merger::close (6 samples, 0.01%)</title><rect x="582.6" y="389" width="0.1" height="15.0" fill="rgb(212,88,0)" rx="2" ry="2" />
<text  x="585.60" y="399.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_Optional_payload_base (15 samples, 0.03%)</title><rect x="536.1" y="405" width="0.3" height="15.0" fill="rgb(221,108,46)" rx="2" ry="2" />
<text  x="539.08" y="415.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_Optional_payload_base (17 samples, 0.04%)</title><rect x="945.2" y="341" width="0.5" height="15.0" fill="rgb(234,65,0)" rx="2" ry="2" />
<text  x="948.24" y="351.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_data_request (2,236 samples, 4.62%)</title><rect x="1001.7" y="309" width="54.5" height="15.0" fill="rgb(248,147,1)" rx="2" ry="2" />
<text  x="1004.72" y="319.5" >servi..</text>
</g>
<g >
<title>operator new (64 samples, 0.13%)</title><rect x="1128.9" y="405" width="1.5" height="15.0" fill="rgb(240,69,32)" rx="2" ry="2" />
<text  x="1131.87" y="415.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (19 samples, 0.04%)</title><rect x="753.8" y="325" width="0.5" height="15.0" fill="rgb(236,86,0)" rx="2" ry="2" />
<text  x="756.80" y="335.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_live_sorted_endpoints (5 samples, 0.01%)</title><rect x="1057.1" y="357" width="0.1" height="15.0" fill="rgb(232,32,9)" rx="2" ry="2" />
<text  x="1060.06" y="367.5" ></text>
</g>
<g >
<title>operator delete (31 samples, 0.06%)</title><rect x="587.9" y="405" width="0.7" height="15.0" fill="rgb(212,178,37)" rx="2" ry="2" />
<text  x="590.88" y="415.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (5 samples, 0.01%)</title><rect x="17.2" y="277" width="0.1" height="15.0" fill="rgb(240,30,23)" rx="2" ry="2" />
<text  x="20.16" y="287.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::with_permit (20 samples, 0.04%)</title><rect x="1044.4" y="261" width="0.5" height="15.0" fill="rgb(231,196,5)" rx="2" ry="2" />
<text  x="1047.42" y="271.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_token (5 samples, 0.01%)</title><rect x="946.4" y="405" width="0.1" height="15.0" fill="rgb(246,121,20)" rx="2" ry="2" />
<text  x="949.41" y="415.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::operator= (9 samples, 0.02%)</title><rect x="827.9" y="421" width="0.3" height="15.0" fill="rgb(217,136,10)" rx="2" ry="2" />
<text  x="830.94" y="431.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (8 samples, 0.02%)</title><rect x="587.4" y="389" width="0.2" height="15.0" fill="rgb(252,56,44)" rx="2" ry="2" />
<text  x="590.40" y="399.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (12 samples, 0.02%)</title><rect x="816.9" y="389" width="0.3" height="15.0" fill="rgb(229,91,17)" rx="2" ry="2" />
<text  x="819.86" y="399.5" ></text>
</g>
<g >
<title>seastar::reactor::del_timer (8 samples, 0.02%)</title><rect x="702.5" y="405" width="0.2" height="15.0" fill="rgb(224,122,2)" rx="2" ry="2" />
<text  x="705.50" y="415.5" ></text>
</g>
<g >
<title>cql3::query_options::fill_value_views (133 samples, 0.27%)</title><rect x="848.7" y="405" width="3.2" height="15.0" fill="rgb(219,131,1)" rx="2" ry="2" />
<text  x="851.69" y="415.5" ></text>
</g>
<g >
<title>database::find_schema (73 samples, 0.15%)</title><rect x="817.5" y="357" width="1.8" height="15.0" fill="rgb(230,86,23)" rx="2" ry="2" />
<text  x="820.49" y="367.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (6 samples, 0.01%)</title><rect x="803.9" y="213" width="0.1" height="15.0" fill="rgb(205,189,14)" rx="2" ry="2" />
<text  x="806.88" y="223.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (21 samples, 0.04%)</title><rect x="1004.3" y="293" width="0.5" height="15.0" fill="rgb(252,48,44)" rx="2" ry="2" />
<text  x="1007.28" y="303.5" ></text>
</g>
<g >
<title>read_simple&lt;unsigned short, managed_bytes_basic_view&lt; (17 samples, 0.04%)</title><rect x="916.0" y="357" width="0.4" height="15.0" fill="rgb(224,187,54)" rx="2" ry="2" />
<text  x="918.99" y="367.5" ></text>
</g>
<g >
<title>std::optional&lt;mutation_querier&gt;::emplace&lt;mutation_querier&gt; (54 samples, 0.11%)</title><rect x="316.2" y="181" width="1.3" height="15.0" fill="rgb(214,112,18)" rx="2" ry="2" />
<text  x="319.19" y="191.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (42 samples, 0.09%)</title><rect x="893.9" y="261" width="1.1" height="15.0" fill="rgb(254,207,47)" rx="2" ry="2" />
<text  x="896.95" y="271.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (16 samples, 0.03%)</title><rect x="279.6" y="325" width="0.3" height="15.0" fill="rgb(226,140,15)" rx="2" ry="2" />
<text  x="282.55" y="335.5" ></text>
</g>
<g >
<title>reader_permit::consume (5 samples, 0.01%)</title><rect x="155.5" y="181" width="0.1" height="15.0" fill="rgb(239,30,29)" rx="2" ry="2" />
<text  x="158.46" y="191.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (18 samples, 0.04%)</title><rect x="818.8" y="293" width="0.5" height="15.0" fill="rgb(217,215,53)" rx="2" ry="2" />
<text  x="821.83" y="303.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (5 samples, 0.01%)</title><rect x="707.1" y="485" width="0.1" height="15.0" fill="rgb(208,27,23)" rx="2" ry="2" />
<text  x="710.08" y="495.5" ></text>
</g>
<g >
<title>ser::writer_of_std__optional__qr_cell&lt;bytes_ostream&gt;::write (6 samples, 0.01%)</title><rect x="331.7" y="181" width="0.2" height="15.0" fill="rgb(218,16,48)" rx="2" ry="2" />
<text  x="334.75" y="191.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const*, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;*&gt; (34 samples, 0.07%)</title><rect x="776.6" y="293" width="0.9" height="15.0" fill="rgb(222,194,27)" rx="2" ry="2" />
<text  x="779.65" y="303.5" ></text>
</g>
<g >
<title>seastar::reactor::service_highres_timer (24 samples, 0.05%)</title><rect x="1177.0" y="453" width="0.6" height="15.0" fill="rgb(243,60,37)" rx="2" ry="2" />
<text  x="1180.04" y="463.5" ></text>
</g>
<g >
<title>mutation_fragment::operator= (39 samples, 0.08%)</title><rect x="132.7" y="245" width="0.9" height="15.0" fill="rgb(245,134,17)" rx="2" ry="2" />
<text  x="135.68" y="255.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (48 samples, 0.10%)</title><rect x="733.8" y="373" width="1.2" height="15.0" fill="rgb(230,218,45)" rx="2" ry="2" />
<text  x="736.83" y="383.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::read_next (2,841 samples, 5.86%)</title><rect x="156.5" y="245" width="69.2" height="15.0" fill="rgb(223,184,54)" rx="2" ry="2" />
<text  x="159.46" y="255.5" >partiti..</text>
</g>
<g >
<title>query::clustering_position_tracker&lt;query_result_builder&gt;::consume_new_partition (14 samples, 0.03%)</title><rect x="308.5" y="197" width="0.3" height="15.0" fill="rgb(245,223,23)" rx="2" ry="2" />
<text  x="311.49" y="207.5" ></text>
</g>
<g >
<title>nonwrapping_interval&lt;dht::ring_position&gt;::nonwrapping_interval (67 samples, 0.14%)</title><rect x="927.5" y="373" width="1.6" height="15.0" fill="rgb(228,143,41)" rx="2" ry="2" />
<text  x="930.51" y="383.5" ></text>
</g>
<g >
<title>std::type_info::operator== (5 samples, 0.01%)</title><rect x="674.4" y="453" width="0.1" height="15.0" fill="rgb(221,43,21)" rx="2" ry="2" />
<text  x="677.37" y="463.5" ></text>
</g>
<g >
<title>cql3::raw_value_view::make_temporary (95 samples, 0.20%)</title><rect x="904.4" y="341" width="2.3" height="15.0" fill="rgb(241,19,38)" rx="2" ry="2" />
<text  x="907.37" y="351.5" ></text>
</g>
<g >
<title>ser::writer_of_qr_partition&lt;bytes_ostream&gt;::skip_key (16 samples, 0.03%)</title><rect x="313.3" y="165" width="0.4" height="15.0" fill="rgb(242,181,6)" rx="2" ry="2" />
<text  x="316.34" y="175.5" ></text>
</g>
<g >
<title>absl::hash_internal::AbslHashValue&lt;absl::hash_internal::HashState&gt; (16 samples, 0.03%)</title><rect x="846.4" y="341" width="0.3" height="15.0" fill="rgb(205,104,13)" rx="2" ry="2" />
<text  x="849.35" y="351.5" ></text>
</g>
<g >
<title>std::make_unique&lt;empty_flat_reader, seastar::lw_shared_ptr&lt;schema const&gt;, reader_permit&gt; (97 samples, 0.20%)</title><rect x="527.4" y="277" width="2.4" height="15.0" fill="rgb(215,219,39)" rx="2" ry="2" />
<text  x="530.41" y="287.5" ></text>
</g>
<g >
<title>seastar::gate::enter (11 samples, 0.02%)</title><rect x="1042.2" y="229" width="0.2" height="15.0" fill="rgb(227,213,15)" rx="2" ry="2" />
<text  x="1045.16" y="239.5" ></text>
</g>
<g >
<title>database::apply_with_commitlog (36 samples, 0.07%)</title><rect x="1141.0" y="309" width="0.9" height="15.0" fill="rgb(224,72,22)" rx="2" ry="2" />
<text  x="1144.02" y="319.5" ></text>
</g>
<g >
<title>write_fragmented&lt;managed_bytes_basic_view&lt; (35 samples, 0.07%)</title><rect x="900.4" y="277" width="0.9" height="15.0" fill="rgb(245,104,19)" rx="2" ry="2" />
<text  x="903.40" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (10 samples, 0.02%)</title><rect x="50.5" y="453" width="0.3" height="15.0" fill="rgb(227,120,17)" rx="2" ry="2" />
<text  x="53.53" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%)</title><rect x="409.8" y="245" width="0.1" height="15.0" fill="rgb(243,15,30)" rx="2" ry="2" />
<text  x="412.76" y="255.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (5,345 samples, 11.03%)</title><rect x="287.1" y="389" width="130.1" height="15.0" fill="rgb(208,223,25)" rx="2" ry="2" />
<text  x="290.06" y="399.5" >query::consume_p..</text>
</g>
<g >
<title>std::_Hash_bytes (16 samples, 0.03%)</title><rect x="813.4" y="277" width="0.4" height="15.0" fill="rgb(246,19,3)" rx="2" ry="2" />
<text  x="816.42" y="287.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::allocate (38 samples, 0.08%)</title><rect x="500.0" y="213" width="0.9" height="15.0" fill="rgb(252,204,2)" rx="2" ry="2" />
<text  x="503.00" y="223.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::take_value (14 samples, 0.03%)</title><rect x="281.6" y="357" width="0.4" height="15.0" fill="rgb(244,173,41)" rx="2" ry="2" />
<text  x="284.65" y="367.5" ></text>
</g>
<g >
<title>database::apply_in_memory (36 samples, 0.07%)</title><rect x="1141.0" y="293" width="0.9" height="15.0" fill="rgb(238,148,42)" rx="2" ry="2" />
<text  x="1144.02" y="303.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::query_state&gt;::~shared_ptr (9 samples, 0.02%)</title><rect x="834.4" y="437" width="0.2" height="15.0" fill="rgb(231,169,39)" rx="2" ry="2" />
<text  x="837.37" y="447.5" ></text>
</g>
<g >
<title>operator new (24 samples, 0.05%)</title><rect x="831.6" y="373" width="0.6" height="15.0" fill="rgb(242,89,54)" rx="2" ry="2" />
<text  x="834.62" y="383.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_result_local (11 samples, 0.02%)</title><rect x="1056.2" y="309" width="0.3" height="15.0" fill="rgb(245,45,33)" rx="2" ry="2" />
<text  x="1059.19" y="319.5" ></text>
</g>
<g >
<title>std::forward_as_tuple&lt;std::optional&lt;auth::resource&gt; &gt; (7 samples, 0.01%)</title><rect x="807.9" y="325" width="0.1" height="15.0" fill="rgb(241,114,26)" rx="2" ry="2" />
<text  x="810.87" y="335.5" ></text>
</g>
<g >
<title>std::__find_if&lt;gms::inet_address*, __gnu_cxx::__ops::_Iter_pred&lt;std::unary_negate&lt;std::binder1st&lt;std::_Mem_fn&lt;bool  (7 samples, 0.01%)</title><rect x="1096.2" y="309" width="0.1" height="15.0" fill="rgb(221,136,47)" rx="2" ry="2" />
<text  x="1099.18" y="319.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (29 samples, 0.06%)</title><rect x="683.3" y="453" width="0.7" height="15.0" fill="rgb(208,193,33)" rx="2" ry="2" />
<text  x="686.31" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value_view, std::allocator&lt;cql3::raw_value_view&gt; &gt;::emplace_back&lt;cql3::raw_value_view&gt; (5 samples, 0.01%)</title><rect x="852.0" y="405" width="0.2" height="15.0" fill="rgb(231,18,21)" rx="2" ry="2" />
<text  x="855.03" y="415.5" ></text>
</g>
<g >
<title>seastar::future&lt;utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (18 samples, 0.04%)</title><rect x="785.8" y="229" width="0.4" height="15.0" fill="rgb(213,177,7)" rx="2" ry="2" />
<text  x="788.80" y="239.5" ></text>
</g>
<g >
<title>seastar::internal::future_base::set_coroutine (5 samples, 0.01%)</title><rect x="981.5" y="357" width="0.2" height="15.0" fill="rgb(242,135,3)" rx="2" ry="2" />
<text  x="984.53" y="367.5" ></text>
</g>
<g >
<title>tombstone::apply (5 samples, 0.01%)</title><rect x="386.5" y="213" width="0.1" height="15.0" fill="rgb(230,229,41)" rx="2" ry="2" />
<text  x="389.50" y="223.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (5 samples, 0.01%)</title><rect x="1055.5" y="293" width="0.1" height="15.0" fill="rgb(249,178,44)" rx="2" ry="2" />
<text  x="1058.45" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_move_assign (8 samples, 0.02%)</title><rect x="440.5" y="277" width="0.2" height="15.0" fill="rgb(252,53,21)" rx="2" ry="2" />
<text  x="443.50" y="287.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (7 samples, 0.01%)</title><rect x="122.3" y="309" width="0.2" height="15.0" fill="rgb(212,130,42)" rx="2" ry="2" />
<text  x="125.31" y="319.5" ></text>
</g>
<g >
<title>reader_permit::impl::on_admission (33 samples, 0.07%)</title><rect x="64.8" y="405" width="0.8" height="15.0" fill="rgb(252,5,8)" rx="2" ry="2" />
<text  x="67.83" y="415.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (13 samples, 0.03%)</title><rect x="475.5" y="213" width="0.3" height="15.0" fill="rgb(239,167,44)" rx="2" ry="2" />
<text  x="478.50" y="223.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::then_wrapped_common&lt;false, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (97 samples, 0.20%)</title><rect x="830.4" y="421" width="2.4" height="15.0" fill="rgb(219,107,13)" rx="2" ry="2" />
<text  x="833.42" y="431.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::clear (5 samples, 0.01%)</title><rect x="817.0" y="373" width="0.2" height="15.0" fill="rgb(232,131,17)" rx="2" ry="2" />
<text  x="820.03" y="383.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (88 samples, 0.18%)</title><rect x="624.9" y="485" width="2.2" height="15.0" fill="rgb(207,153,33)" rx="2" ry="2" />
<text  x="627.93" y="495.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (5 samples, 0.01%)</title><rect x="933.0" y="309" width="0.1" height="15.0" fill="rgb(209,77,45)" rx="2" ry="2" />
<text  x="935.99" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (6 samples, 0.01%)</title><rect x="673.1" y="469" width="0.2" height="15.0" fill="rgb(209,149,41)" rx="2" ry="2" />
<text  x="676.11" y="479.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::bool_class&lt;mutation_reader_merger::needs_merge_tag&gt; &gt;::take_value (5 samples, 0.01%)</title><rect x="127.1" y="261" width="0.1" height="15.0" fill="rgb(244,19,45)" rx="2" ry="2" />
<text  x="130.11" y="271.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reclaiming_disabled&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (5 samples, 0.01%)</title><rect x="159.3" y="229" width="0.2" height="15.0" fill="rgb(222,84,33)" rx="2" ry="2" />
<text  x="162.33" y="239.5" ></text>
</g>
<g >
<title>cql3::constants::setter::execute (5 samples, 0.01%)</title><rect x="863.0" y="309" width="0.1" height="15.0" fill="rgb(225,61,2)" rx="2" ry="2" />
<text  x="865.97" y="319.5" ></text>
</g>
<g >
<title>position_in_partition::position_in_partition (62 samples, 0.13%)</title><rect x="221.7" y="229" width="1.5" height="15.0" fill="rgb(247,215,28)" rx="2" ry="2" />
<text  x="224.68" y="239.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (303 samples, 0.63%)</title><rect x="537.9" y="405" width="7.4" height="15.0" fill="rgb(241,61,40)" rx="2" ry="2" />
<text  x="540.88" y="415.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (56 samples, 0.12%)</title><rect x="390.1" y="213" width="1.4" height="15.0" fill="rgb(227,143,31)" rx="2" ry="2" />
<text  x="393.13" y="223.5" ></text>
</g>
<g >
<title>std::default_delete&lt;cql3::expr::expression::impl&gt;::operator (13 samples, 0.03%)</title><rect x="904.1" y="309" width="0.3" height="15.0" fill="rgb(240,96,25)" rx="2" ry="2" />
<text  x="907.05" y="319.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_esft&lt;partition_snapshot&gt;::dispose (35 samples, 0.07%)</title><rect x="565.2" y="277" width="0.9" height="15.0" fill="rgb(231,4,26)" rx="2" ry="2" />
<text  x="568.23" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::vector (125 samples, 0.26%)</title><rect x="942.6" y="405" width="3.1" height="15.0" fill="rgb(252,45,46)" rx="2" ry="2" />
<text  x="945.61" y="415.5" ></text>
</g>
<g >
<title>skip_empty_fragments&lt;managed_bytes_basic_view&lt; (5 samples, 0.01%)</title><rect x="898.5" y="245" width="0.2" height="15.0" fill="rgb(217,197,40)" rx="2" ry="2" />
<text  x="901.55" y="255.5" ></text>
</g>
<g >
<title>clustering_row::external_memory_usage (305 samples, 0.63%)</title><rect x="199.2" y="165" width="7.4" height="15.0" fill="rgb(246,126,36)" rx="2" ry="2" />
<text  x="202.18" y="175.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (5 samples, 0.01%)</title><rect x="137.2" y="229" width="0.1" height="15.0" fill="rgb(236,163,46)" rx="2" ry="2" />
<text  x="140.21" y="239.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (12 samples, 0.02%)</title><rect x="673.4" y="485" width="0.3" height="15.0" fill="rgb(209,164,3)" rx="2" ry="2" />
<text  x="676.37" y="495.5" ></text>
</g>
<g >
<title>utils::tuple_hash::operator (40 samples, 0.08%)</title><rect x="822.4" y="309" width="1.0" height="15.0" fill="rgb(215,190,8)" rx="2" ry="2" />
<text  x="825.44" y="319.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (5 samples, 0.01%)</title><rect x="838.1" y="341" width="0.2" height="15.0" fill="rgb(246,226,4)" rx="2" ry="2" />
<text  x="841.15" y="351.5" ></text>
</g>
<g >
<title>cql3::restrictions::partition_key_restrictions::needs_filtering (5 samples, 0.01%)</title><rect x="644.2" y="469" width="0.1" height="15.0" fill="rgb(254,164,23)" rx="2" ry="2" />
<text  x="647.19" y="479.5" ></text>
</g>
<g >
<title>mutation_partition::upper_bound (6 samples, 0.01%)</title><rect x="212.3" y="133" width="0.2" height="15.0" fill="rgb(207,120,8)" rx="2" ry="2" />
<text  x="215.31" y="143.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (5 samples, 0.01%)</title><rect x="623.0" y="421" width="0.1" height="15.0" fill="rgb(223,200,5)" rx="2" ry="2" />
<text  x="625.96" y="431.5" ></text>
</g>
<g >
<title>seastar::repeat&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (6,948 samples, 14.34%)</title><rect x="113.2" y="373" width="169.3" height="15.0" fill="rgb(250,208,34)" rx="2" ry="2" />
<text  x="116.22" y="383.5" >seastar::repeat&lt;mergi..</text>
</g>
<g >
<title>reader_permit::resource_units::~resource_units (9 samples, 0.02%)</title><rect x="404.2" y="229" width="0.2" height="15.0" fill="rgb(221,62,1)" rx="2" ry="2" />
<text  x="407.16" y="239.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (33 samples, 0.07%)</title><rect x="862.7" y="453" width="0.8" height="15.0" fill="rgb(234,95,18)" rx="2" ry="2" />
<text  x="865.67" y="463.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (15 samples, 0.03%)</title><rect x="993.9" y="261" width="0.4" height="15.0" fill="rgb(248,217,13)" rx="2" ry="2" />
<text  x="996.91" y="271.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_data_requests (2,422 samples, 5.00%)</title><rect x="997.6" y="325" width="59.0" height="15.0" fill="rgb(222,173,37)" rx="2" ry="2" />
<text  x="1000.58" y="335.5" >servic..</text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (15 samples, 0.03%)</title><rect x="657.2" y="485" width="0.3" height="15.0" fill="rgb(234,115,18)" rx="2" ry="2" />
<text  x="660.15" y="495.5" ></text>
</g>
<g >
<title>std::default_delete&lt;compact_for_query&lt; (33 samples, 0.07%)</title><rect x="410.1" y="261" width="0.8" height="15.0" fill="rgb(252,48,35)" rx="2" ry="2" />
<text  x="413.06" y="271.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (25 samples, 0.05%)</title><rect x="504.8" y="213" width="0.6" height="15.0" fill="rgb(241,88,4)" rx="2" ry="2" />
<text  x="507.75" y="223.5" ></text>
</g>
<g >
<title>reader_selector::has_new_readers (6 samples, 0.01%)</title><rect x="124.4" y="261" width="0.1" height="15.0" fill="rgb(231,215,28)" rx="2" ry="2" />
<text  x="127.40" y="271.5" ></text>
</g>
<g >
<title>query_result_builder::consume_new_partition (14 samples, 0.03%)</title><rect x="362.4" y="213" width="0.3" height="15.0" fill="rgb(251,214,22)" rx="2" ry="2" />
<text  x="365.39" y="223.5" ></text>
</g>
<g >
<title>schema::column_at (50 samples, 0.10%)</title><rect x="328.1" y="181" width="1.3" height="15.0" fill="rgb(241,4,6)" rx="2" ry="2" />
<text  x="331.14" y="191.5" ></text>
</g>
<g >
<title>seastar::future_state_base::any::operator= (11 samples, 0.02%)</title><rect x="827.7" y="405" width="0.2" height="15.0" fill="rgb(209,37,44)" rx="2" ry="2" />
<text  x="830.67" y="415.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (5 samples, 0.01%)</title><rect x="156.2" y="229" width="0.1" height="15.0" fill="rgb(223,177,53)" rx="2" ry="2" />
<text  x="159.21" y="239.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (33 samples, 0.07%)</title><rect x="606.4" y="405" width="0.8" height="15.0" fill="rgb(250,15,39)" rx="2" ry="2" />
<text  x="609.39" y="415.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_prepared (615 samples, 1.27%)</title><rect x="731.8" y="421" width="15.0" height="15.0" fill="rgb(218,74,2)" rx="2" ry="2" />
<text  x="734.81" y="431.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureINS_10bool_classIN22mutation_reader_merger15needs_merge_tagEEEE9then_implIZNS5_14discard_resultEvEUlDpOT_E_NS0_IvEEEET0_OT_ (30 samples, 0.06%)</title><rect x="126.5" y="277" width="0.7" height="15.0" fill="rgb(231,226,3)" rx="2" ry="2" />
<text  x="129.50" y="287.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;partition_key, false, false&gt;::_Optional_base (12 samples, 0.02%)</title><rect x="1075.5" y="277" width="0.2" height="15.0" fill="rgb(230,24,43)" rx="2" ry="2" />
<text  x="1078.45" y="287.5" ></text>
</g>
<g >
<title>TLS init function for bound_view::_empty_prefix (61 samples, 0.13%)</title><rect x="235.0" y="181" width="1.5" height="15.0" fill="rgb(226,193,3)" rx="2" ry="2" />
<text  x="238.03" y="191.5" ></text>
</g>
<g >
<title>sstring_hash::operator (25 samples, 0.05%)</title><rect x="1065.4" y="293" width="0.6" height="15.0" fill="rgb(208,57,54)" rx="2" ry="2" />
<text  x="1068.44" y="303.5" ></text>
</g>
<g >
<title>database::find_column_family (56 samples, 0.12%)</title><rect x="752.9" y="373" width="1.4" height="15.0" fill="rgb(219,95,38)" rx="2" ry="2" />
<text  x="755.90" y="383.5" ></text>
</g>
<g >
<title>std::optional&lt;dht::decorated_key&gt;::emplace&lt;dht::decorated_key&gt; (16 samples, 0.03%)</title><rect x="391.7" y="245" width="0.4" height="15.0" fill="rgb(229,114,23)" rx="2" ry="2" />
<text  x="394.74" y="255.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;std::pair&lt;seastar::shared_ptr&lt;service::abstract_read_executor&gt;, nonwrapping_interval&lt;dht::token&gt; &gt;, 1ul&gt;::emplace_back&lt;seastar::shared_ptr&lt;service::abstract_read_executor&gt;&amp;, nonwrapping_interval&lt;dht::token&gt; &gt; (9 samples, 0.02%)</title><rect x="1104.4" y="357" width="0.2" height="15.0" fill="rgb(227,76,52)" rx="2" ry="2" />
<text  x="1107.36" y="367.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (18 samples, 0.04%)</title><rect x="32.4" y="485" width="0.4" height="15.0" fill="rgb(240,182,25)" rx="2" ry="2" />
<text  x="35.41" y="495.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mHEXNUMBER (23 samples, 0.05%)</title><rect x="15.9" y="261" width="0.5" height="15.0" fill="rgb(218,79,48)" rx="2" ry="2" />
<text  x="18.87" y="271.5" ></text>
</g>
<g >
<title>seastar::logger::log&lt;dht::token const&amp;, utils::small_vector&lt;gms::inet_address, 3ul&gt;&amp;, utils::small_vector&lt;gms::inet_address, 3ul&gt;&amp;, db::read_repair_decision&amp;&gt; (7 samples, 0.01%)</title><rect x="1067.4" y="341" width="0.1" height="15.0" fill="rgb(237,56,41)" rx="2" ry="2" />
<text  x="1070.36" y="351.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_next (766 samples, 1.58%)</title><rect x="122.5" y="309" width="18.6" height="15.0" fill="rgb(252,180,38)" rx="2" ry="2" />
<text  x="125.48" y="319.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::validate (8 samples, 0.02%)</title><rect x="826.8" y="421" width="0.2" height="15.0" fill="rgb(215,115,46)" rx="2" ry="2" />
<text  x="829.80" y="431.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (7 samples, 0.01%)</title><rect x="131.2" y="245" width="0.2" height="15.0" fill="rgb(210,103,15)" rx="2" ry="2" />
<text  x="134.22" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::~vector (7 samples, 0.01%)</title><rect x="911.2" y="357" width="0.2" height="15.0" fill="rgb(254,159,7)" rx="2" ry="2" />
<text  x="914.22" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (22 samples, 0.05%)</title><rect x="1129.9" y="373" width="0.5" height="15.0" fill="rgb(241,3,36)" rx="2" ry="2" />
<text  x="1132.89" y="383.5" ></text>
</g>
<g >
<title>cql3::to_managed_bytes_opt (25 samples, 0.05%)</title><rect x="907.3" y="357" width="0.6" height="15.0" fill="rgb(211,36,23)" rx="2" ry="2" />
<text  x="910.27" y="367.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (5 samples, 0.01%)</title><rect x="928.0" y="357" width="0.1" height="15.0" fill="rgb(249,35,39)" rx="2" ry="2" />
<text  x="930.97" y="367.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::get_promise (8 samples, 0.02%)</title><rect x="966.8" y="373" width="0.2" height="15.0" fill="rgb(217,87,11)" rx="2" ry="2" />
<text  x="969.77" y="383.5" ></text>
</g>
<g >
<title>cql3::statements::raw::modification_statement::prepare (36 samples, 0.07%)</title><rect x="20.0" y="453" width="0.9" height="15.0" fill="rgb(218,127,9)" rx="2" ry="2" />
<text  x="23.03" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (24 samples, 0.05%)</title><rect x="966.0" y="341" width="0.6" height="15.0" fill="rgb(211,84,20)" rx="2" ry="2" />
<text  x="968.97" y="351.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const*, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;*&gt; (22 samples, 0.05%)</title><rect x="790.9" y="181" width="0.5" height="15.0" fill="rgb(210,43,1)" rx="2" ry="2" />
<text  x="793.87" y="191.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (25 samples, 0.05%)</title><rect x="1107.2" y="405" width="0.6" height="15.0" fill="rgb(209,67,31)" rx="2" ry="2" />
<text  x="1110.16" y="415.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::execute (3,033 samples, 6.26%)</title><rect x="983.0" y="357" width="73.9" height="15.0" fill="rgb(217,227,52)" rx="2" ry="2" />
<text  x="986.04" y="367.5" >service:..</text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::trivial_direct_move&lt;16ul&gt; (8 samples, 0.02%)</title><rect x="1031.9" y="149" width="0.1" height="15.0" fill="rgb(254,226,29)" rx="2" ry="2" />
<text  x="1034.85" y="159.5" ></text>
</g>
<g >
<title>seastar::do_until&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (4,381 samples, 9.04%)</title><rect x="141.7" y="293" width="106.7" height="15.0" fill="rgb(229,82,39)" rx="2" ry="2" />
<text  x="144.70" y="303.5" >seastar::do_u..</text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::clear (5 samples, 0.01%)</title><rect x="443.0" y="293" width="0.1" height="15.0" fill="rgb(254,28,32)" rx="2" ry="2" />
<text  x="446.01" y="303.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::set&lt;&gt; (13 samples, 0.03%)</title><rect x="31.5" y="469" width="0.3" height="15.0" fill="rgb(248,24,8)" rx="2" ry="2" />
<text  x="34.46" y="479.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (35 samples, 0.07%)</title><rect x="1020.8" y="213" width="0.9" height="15.0" fill="rgb(207,161,9)" rx="2" ry="2" />
<text  x="1023.82" y="223.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::fetch (17 samples, 0.04%)</title><rect x="862.0" y="469" width="0.4" height="15.0" fill="rgb(213,172,11)" rx="2" ry="2" />
<text  x="864.99" y="479.5" ></text>
</g>
<g >
<title>tests::random::get_int&lt;unsigned long&gt; (63 samples, 0.13%)</title><rect x="857.7" y="469" width="1.5" height="15.0" fill="rgb(225,88,45)" rx="2" ry="2" />
<text  x="860.66" y="479.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::get_local_service (29 samples, 0.06%)</title><rect x="1045.9" y="261" width="0.7" height="15.0" fill="rgb(239,125,30)" rx="2" ry="2" />
<text  x="1048.93" y="271.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (10 samples, 0.02%)</title><rect x="803.6" y="229" width="0.2" height="15.0" fill="rgb(245,75,29)" rx="2" ry="2" />
<text  x="806.56" y="239.5" ></text>
</g>
<g >
<title>service::client_state::has_column_family_access (2,706 samples, 5.59%)</title><rect x="760.2" y="405" width="65.9" height="15.0" fill="rgb(247,15,19)" rx="2" ry="2" />
<text  x="763.16" y="415.5" >service..</text>
</g>
<g >
<title>std::optional&lt;position_in_partition&gt;::operator=&lt;position_in_partition&gt; (15 samples, 0.03%)</title><rect x="224.9" y="229" width="0.4" height="15.0" fill="rgb(225,16,8)" rx="2" ry="2" />
<text  x="227.92" y="239.5" ></text>
</g>
<g >
<title>operator new (58 samples, 0.12%)</title><rect x="542.7" y="341" width="1.4" height="15.0" fill="rgb(222,120,35)" rx="2" ry="2" />
<text  x="545.65" y="351.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (15 samples, 0.03%)</title><rect x="584.5" y="405" width="0.3" height="15.0" fill="rgb(242,19,49)" rx="2" ry="2" />
<text  x="587.47" y="415.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (5 samples, 0.01%)</title><rect x="1137.1" y="421" width="0.2" height="15.0" fill="rgb(205,206,39)" rx="2" ry="2" />
<text  x="1140.15" y="431.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (5 samples, 0.01%)</title><rect x="540.4" y="341" width="0.1" height="15.0" fill="rgb(248,55,27)" rx="2" ry="2" />
<text  x="543.36" y="351.5" ></text>
</g>
<g >
<title>service::client_state::check_has_permission (1,572 samples, 3.24%)</title><rect x="771.9" y="341" width="38.3" height="15.0" fill="rgb(254,106,7)" rx="2" ry="2" />
<text  x="774.94" y="351.5" >ser..</text>
</g>
<g >
<title>managed_bytes::operator= (30 samples, 0.06%)</title><rect x="294.4" y="261" width="0.8" height="15.0" fill="rgb(241,153,23)" rx="2" ry="2" />
<text  x="297.44" y="271.5" ></text>
</g>
<g >
<title>bound_view::from_range_start&lt;nonwrapping_interval&gt; (30 samples, 0.06%)</title><rect x="238.1" y="197" width="0.7" height="15.0" fill="rgb(242,135,15)" rx="2" ry="2" />
<text  x="241.05" y="207.5" ></text>
</g>
<g >
<title>logalloc::basic_region_impl::set_reclaiming_enabled (14 samples, 0.03%)</title><rect x="162.2" y="197" width="0.4" height="15.0" fill="rgb(215,114,39)" rx="2" ry="2" />
<text  x="165.23" y="207.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (11 samples, 0.02%)</title><rect x="552.8" y="293" width="0.2" height="15.0" fill="rgb(234,229,1)" rx="2" ry="2" />
<text  x="555.76" y="303.5" ></text>
</g>
<g >
<title>locator::token_metadata::first_token (316 samples, 0.65%)</title><rect x="1081.8" y="277" width="7.7" height="15.0" fill="rgb(209,78,0)" rx="2" ry="2" />
<text  x="1084.81" y="287.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::~impl (22 samples, 0.05%)</title><rect x="553.8" y="325" width="0.5" height="15.0" fill="rgb(226,174,53)" rx="2" ry="2" />
<text  x="556.76" y="335.5" ></text>
</g>
<g >
<title>service::client_state::has_access (1,883 samples, 3.89%)</title><rect x="768.4" y="373" width="45.9" height="15.0" fill="rgb(213,65,45)" rx="2" ry="2" />
<text  x="771.41" y="383.5" >serv..</text>
</g>
<g >
<title>seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;::basic_sstring (9 samples, 0.02%)</title><rect x="738.5" y="357" width="0.2" height="15.0" fill="rgb(205,8,11)" rx="2" ry="2" />
<text  x="741.53" y="367.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::term (8 samples, 0.02%)</title><rect x="19.3" y="325" width="0.2" height="15.0" fill="rgb(234,165,18)" rx="2" ry="2" />
<text  x="22.26" y="335.5" ></text>
</g>
<g >
<title>seastar::do_until&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (11 samples, 0.02%)</title><rect x="862.0" y="421" width="0.3" height="15.0" fill="rgb(227,170,49)" rx="2" ry="2" />
<text  x="865.04" y="431.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (5 samples, 0.01%)</title><rect x="17.6" y="293" width="0.1" height="15.0" fill="rgb(237,149,22)" rx="2" ry="2" />
<text  x="20.57" y="303.5" ></text>
</g>
<g >
<title>seastar::timer_set&lt;seastar::timer&lt;std::chrono::_V2::steady_clock&gt;, &amp;seastar::timer&lt;std::chrono::_V2::steady_clock&gt;::_link&gt;::expire (17 samples, 0.04%)</title><rect x="1177.2" y="437" width="0.4" height="15.0" fill="rgb(229,88,36)" rx="2" ry="2" />
<text  x="1180.19" y="447.5" ></text>
</g>
<g >
<title>basic_atomic_cell_view&lt; (6 samples, 0.01%)</title><rect x="324.9" y="181" width="0.2" height="15.0" fill="rgb(246,104,0)" rx="2" ry="2" />
<text  x="327.93" y="191.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::clear (37 samples, 0.08%)</title><rect x="139.9" y="277" width="0.9" height="15.0" fill="rgb(213,12,54)" rx="2" ry="2" />
<text  x="142.89" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value, std::allocator&lt;cql3::raw_value&gt; &gt;::vector (92 samples, 0.19%)</title><rect x="855.3" y="469" width="2.2" height="15.0" fill="rgb(233,119,50)" rx="2" ry="2" />
<text  x="858.29" y="479.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (72 samples, 0.15%)</title><rect x="495.7" y="261" width="1.7" height="15.0" fill="rgb(206,153,54)" rx="2" ry="2" />
<text  x="498.67" y="271.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;void&gt;, service::storage_proxy*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt;, db::consistency_level, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, tracing::trace_state_ptr, service_permit, bool, seastar::lw_shared_ptr&lt;cdc::operation_result_tracker&gt; &gt;::do_flush (27 samples, 0.06%)</title><rect x="1142.1" y="485" width="0.6" height="15.0" fill="rgb(236,226,37)" rx="2" ry="2" />
<text  x="1145.07" y="495.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::clear (5 samples, 0.01%)</title><rect x="1143.0" y="485" width="0.1" height="15.0" fill="rgb(216,179,44)" rx="2" ry="2" />
<text  x="1145.97" y="495.5" ></text>
</g>
<g >
<title>seastar::repeat&lt;flat_mutation_reader::impl::consume_pausable&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (4,546 samples, 9.38%)</title><rect x="295.6" y="293" width="110.7" height="15.0" fill="rgb(220,191,48)" rx="2" ry="2" />
<text  x="298.60" y="303.5" >seastar::repe..</text>
</g>
<g >
<title>logalloc::allocating_section::guard::guard (7 samples, 0.01%)</title><rect x="483.2" y="325" width="0.2" height="15.0" fill="rgb(243,219,17)" rx="2" ry="2" />
<text  x="486.20" y="335.5" ></text>
</g>
<g >
<title>operator delete (34 samples, 0.07%)</title><rect x="668.7" y="453" width="0.8" height="15.0" fill="rgb(233,95,30)" rx="2" ry="2" />
<text  x="671.70" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (15 samples, 0.03%)</title><rect x="715.8" y="389" width="0.4" height="15.0" fill="rgb(240,137,17)" rx="2" ry="2" />
<text  x="718.83" y="399.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (11 samples, 0.02%)</title><rect x="567.9" y="309" width="0.2" height="15.0" fill="rgb(228,212,42)" rx="2" ry="2" />
<text  x="570.86" y="319.5" ></text>
</g>
<g >
<title>mutation_querier::consume_end_of_stream (44 samples, 0.09%)</title><rect x="302.2" y="213" width="1.1" height="15.0" fill="rgb(249,127,24)" rx="2" ry="2" />
<text  x="305.18" y="223.5" ></text>
</g>
<g >
<title>seastar::internal::do_until_state&lt;executor&lt;test_read (12 samples, 0.02%)</title><rect x="23.8" y="517" width="0.3" height="15.0" fill="rgb(213,74,32)" rx="2" ry="2" />
<text  x="26.83" y="527.5" ></text>
</g>
<g >
<title>nonwrapping_interval&lt;dht::ring_position&gt;::nonwrapping_interval (8 samples, 0.02%)</title><rect x="929.3" y="389" width="0.2" height="15.0" fill="rgb(222,67,3)" rx="2" ry="2" />
<text  x="932.26" y="399.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (6 samples, 0.01%)</title><rect x="789.7" y="213" width="0.1" height="15.0" fill="rgb(219,98,49)" rx="2" ry="2" />
<text  x="792.68" y="223.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (12 samples, 0.02%)</title><rect x="937.6" y="389" width="0.3" height="15.0" fill="rgb(244,181,8)" rx="2" ry="2" />
<text  x="940.57" y="399.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_prepared (5,649 samples, 11.66%)</title><rect x="717.0" y="469" width="137.6" height="15.0" fill="rgb(210,175,29)" rx="2" ry="2" />
<text  x="720.05" y="479.5" >single_node_cql_e..</text>
</g>
<g >
<title>ser::qr_partition__static_row&lt;bytes_ostream&gt;::qr_partition__static_row (14 samples, 0.03%)</title><rect x="309.9" y="165" width="0.3" height="15.0" fill="rgb(238,53,36)" rx="2" ry="2" />
<text  x="312.88" y="175.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;bytes_ostream::chunk, std::default_delete&lt;bytes_ostream::chunk&gt; &gt;::~unique_ptr (21 samples, 0.04%)</title><rect x="78.2" y="453" width="0.5" height="15.0" fill="rgb(209,207,23)" rx="2" ry="2" />
<text  x="81.20" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (19 samples, 0.04%)</title><rect x="621.0" y="373" width="0.5" height="15.0" fill="rgb(206,66,43)" rx="2" ry="2" />
<text  x="624.01" y="383.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (17 samples, 0.04%)</title><rect x="253.1" y="277" width="0.4" height="15.0" fill="rgb(216,171,22)" rx="2" ry="2" />
<text  x="256.13" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::~vector (16 samples, 0.03%)</title><rect x="1138.5" y="421" width="0.4" height="15.0" fill="rgb(217,173,47)" rx="2" ry="2" />
<text  x="1141.51" y="431.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (27 samples, 0.06%)</title><rect x="1142.1" y="421" width="0.6" height="15.0" fill="rgb(216,164,6)" rx="2" ry="2" />
<text  x="1145.07" y="431.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, flat_mutation_reader, reader_concurrency_semaphore::inactive_read_handle&gt;::_Move_ctor_base (13 samples, 0.03%)</title><rect x="619.1" y="389" width="0.3" height="15.0" fill="rgb(210,60,4)" rx="2" ry="2" />
<text  x="622.11" y="399.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (28 samples, 0.06%)</title><rect x="599.2" y="405" width="0.7" height="15.0" fill="rgb(207,22,10)" rx="2" ry="2" />
<text  x="602.23" y="415.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (5 samples, 0.01%)</title><rect x="17.0" y="277" width="0.1" height="15.0" fill="rgb(206,41,44)" rx="2" ry="2" />
<text  x="19.97" y="287.5" ></text>
</g>
<g >
<title>ser::writer_of_query_result&lt;bytes_ostream&gt;::writer_of_query_result (70 samples, 0.14%)</title><rect x="595.7" y="405" width="1.7" height="15.0" fill="rgb(253,153,10)" rx="2" ry="2" />
<text  x="598.65" y="415.5" ></text>
</g>
<g >
<title>operator delete (25 samples, 0.05%)</title><rect x="661.0" y="421" width="0.6" height="15.0" fill="rgb(210,120,51)" rx="2" ry="2" />
<text  x="663.95" y="431.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (304 samples, 0.63%)</title><rect x="182.5" y="85" width="7.4" height="15.0" fill="rgb(206,104,10)" rx="2" ry="2" />
<text  x="185.52" y="95.5" ></text>
</g>
<g >
<title>std::__copy_n_a&lt;legacy_compound_view&lt;compound_type&lt; (162 samples, 0.33%)</title><rect x="922.1" y="357" width="3.9" height="15.0" fill="rgb(229,120,24)" rx="2" ry="2" />
<text  x="925.05" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (15 samples, 0.03%)</title><rect x="93.8" y="421" width="0.4" height="15.0" fill="rgb(248,84,18)" rx="2" ry="2" />
<text  x="96.81" y="431.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (12 samples, 0.02%)</title><rect x="867.9" y="469" width="0.3" height="15.0" fill="rgb(235,80,18)" rx="2" ry="2" />
<text  x="870.91" y="479.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (6 samples, 0.01%)</title><rect x="790.7" y="181" width="0.2" height="15.0" fill="rgb(211,118,51)" rx="2" ry="2" />
<text  x="793.72" y="191.5" ></text>
</g>
<g >
<title>bound_view::from_range&lt;nonwrapping_interval&gt; (14 samples, 0.03%)</title><rect x="229.6" y="213" width="0.3" height="15.0" fill="rgb(209,62,43)" rx="2" ry="2" />
<text  x="232.60" y="223.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;auth::role_or_anonymous&gt;, seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (55 samples, 0.11%)</title><rect x="805.9" y="293" width="1.3" height="15.0" fill="rgb(244,37,47)" rx="2" ry="2" />
<text  x="808.87" y="303.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::set_urgent_state (22 samples, 0.05%)</title><rect x="636.8" y="485" width="0.5" height="15.0" fill="rgb(223,19,20)" rx="2" ry="2" />
<text  x="639.79" y="495.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (14 samples, 0.03%)</title><rect x="38.7" y="437" width="0.4" height="15.0" fill="rgb(222,128,0)" rx="2" ry="2" />
<text  x="41.72" y="447.5" ></text>
</g>
<g >
<title>partition_key::from_range&lt;std::vector&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, std::allocator&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt; &gt; (86 samples, 0.18%)</title><rect x="538.8" y="373" width="2.1" height="15.0" fill="rgb(214,175,29)" rx="2" ry="2" />
<text  x="541.83" y="383.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::digest_read_result&gt;::future (31 samples, 0.06%)</title><rect x="980.1" y="357" width="0.8" height="15.0" fill="rgb(220,25,22)" rx="2" ry="2" />
<text  x="983.12" y="367.5" ></text>
</g>
<g >
<title>operator delete (26 samples, 0.05%)</title><rect x="414.8" y="373" width="0.7" height="15.0" fill="rgb(232,51,39)" rx="2" ry="2" />
<text  x="417.83" y="383.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::guard (7 samples, 0.01%)</title><rect x="495.3" y="261" width="0.2" height="15.0" fill="rgb(244,14,33)" rx="2" ry="2" />
<text  x="498.30" y="271.5" ></text>
</g>
<g >
<title>seastar::future&lt;std::tuple&lt;std::optional&lt;clustering_key_prefix&gt; &gt; &gt;::then_impl&lt;query::querier&lt; (5 samples, 0.01%)</title><rect x="601.8" y="437" width="0.1" height="15.0" fill="rgb(209,146,4)" rx="2" ry="2" />
<text  x="604.79" y="447.5" ></text>
</g>
<g >
<title>list_reader_selector::~list_reader_selector (23 samples, 0.05%)</title><rect x="575.4" y="357" width="0.5" height="15.0" fill="rgb(250,142,50)" rx="2" ry="2" />
<text  x="578.39" y="367.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;mutation_querier, false, false&gt;::_Optional_base (18 samples, 0.04%)</title><rect x="546.2" y="421" width="0.4" height="15.0" fill="rgb(251,202,14)" rx="2" ry="2" />
<text  x="549.18" y="431.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_slice_or_needs_filtering (23 samples, 0.05%)</title><rect x="947.4" y="389" width="0.6" height="15.0" fill="rgb(213,24,35)" rx="2" ry="2" />
<text  x="950.43" y="399.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::lower_bound&lt;mutation_partition, schema const&amp;, nonwrapping_interval&lt;clustering_key_prefix&gt; const&amp;&gt; (121 samples, 0.25%)</title><rect x="230.4" y="213" width="2.9" height="15.0" fill="rgb(221,207,26)" rx="2" ry="2" />
<text  x="233.38" y="223.5" ></text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;void&gt;, service::storage_proxy*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt;, db::consistency_level, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, tracing::trace_state_ptr, service_permit, bool, seastar::lw_shared_ptr&lt;cdc::operation_result_tracker&gt; &gt;::make_stage_for_group (27 samples, 0.06%)</title><rect x="1142.1" y="405" width="0.6" height="15.0" fill="rgb(222,214,41)" rx="2" ry="2" />
<text  x="1145.07" y="415.5" ></text>
</g>
<g >
<title>std::hash&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::operator (5 samples, 0.01%)</title><rect x="813.8" y="277" width="0.1" height="15.0" fill="rgb(212,181,35)" rx="2" ry="2" />
<text  x="816.81" y="287.5" ></text>
</g>
<g >
<title>mutation_partition::lower_bound (86 samples, 0.18%)</title><rect x="231.2" y="197" width="2.1" height="15.0" fill="rgb(229,16,17)" rx="2" ry="2" />
<text  x="234.23" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (20 samples, 0.04%)</title><rect x="197.6" y="117" width="0.5" height="15.0" fill="rgb(209,11,50)" rx="2" ry="2" />
<text  x="200.59" y="127.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::clone (34 samples, 0.07%)</title><rect x="487.4" y="309" width="0.8" height="15.0" fill="rgb(238,161,32)" rx="2" ry="2" />
<text  x="490.36" y="319.5" ></text>
</g>
<g >
<title>utils::timed_rate_moving_average_and_histogram::mark (6 samples, 0.01%)</title><rect x="623.5" y="437" width="0.1" height="15.0" fill="rgb(235,165,26)" rx="2" ry="2" />
<text  x="626.47" y="447.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;query::result_digest, 3ul&gt;::emplace_back&lt;query::result_digest const&gt; (19 samples, 0.04%)</title><rect x="703.3" y="437" width="0.5" height="15.0" fill="rgb(254,200,21)" rx="2" ry="2" />
<text  x="706.33" y="447.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_M_reset (7 samples, 0.01%)</title><rect x="807.0" y="261" width="0.2" height="15.0" fill="rgb(220,58,50)" rx="2" ry="2" />
<text  x="810.04" y="271.5" ></text>
</g>
<g >
<title>flat_mutation_reader::close (1,429 samples, 2.95%)</title><rect x="548.8" y="405" width="34.8" height="15.0" fill="rgb(212,201,28)" rx="2" ry="2" />
<text  x="551.79" y="415.5" >fl..</text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;void&gt;, database*, seastar::lw_shared_ptr&lt;schema const&gt;, frozen_mutation const&amp;, tracing::trace_state_ptr, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, seastar::bool_class&lt;db::force_sync_tag&gt; &gt;::do_flush (45 samples, 0.09%)</title><rect x="1141.0" y="485" width="1.1" height="15.0" fill="rgb(228,206,22)" rx="2" ry="2" />
<text  x="1143.97" y="495.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;cql3::metadata, false&gt;::make&lt;cql3::metadata&amp;&gt; (40 samples, 0.08%)</title><rect x="650.2" y="469" width="0.9" height="15.0" fill="rgb(248,29,8)" rx="2" ry="2" />
<text  x="653.16" y="479.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (64 samples, 0.13%)</title><rect x="740.3" y="325" width="1.5" height="15.0" fill="rgb(205,91,8)" rx="2" ry="2" />
<text  x="743.28" y="335.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (5 samples, 0.01%)</title><rect x="255.0" y="261" width="0.1" height="15.0" fill="rgb(227,129,45)" rx="2" ry="2" />
<text  x="258.03" y="271.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.01%)</title><rect x="620.7" y="405" width="0.1" height="15.0" fill="rgb(246,3,28)" rx="2" ry="2" />
<text  x="623.69" y="415.5" ></text>
</g>
<g >
<title>std::visit&lt;overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::has_token (11 samples, 0.02%)</title><rect x="949.4" y="389" width="0.3" height="15.0" fill="rgb(215,42,33)" rx="2" ry="2" />
<text  x="952.41" y="399.5" ></text>
</g>
<g >
<title>compound_type&lt; (8 samples, 0.02%)</title><rect x="914.4" y="389" width="0.2" height="15.0" fill="rgb(241,141,25)" rx="2" ry="2" />
<text  x="917.43" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (7 samples, 0.01%)</title><rect x="205.7" y="101" width="0.1" height="15.0" fill="rgb(219,49,27)" rx="2" ry="2" />
<text  x="208.66" y="111.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_destroy_data_aux (14 samples, 0.03%)</title><rect x="616.7" y="373" width="0.3" height="15.0" fill="rgb(233,21,16)" rx="2" ry="2" />
<text  x="619.67" y="383.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;query::read_command&gt;::dispose (93 samples, 0.19%)</title><rect x="38.0" y="469" width="2.3" height="15.0" fill="rgb(223,120,3)" rx="2" ry="2" />
<text  x="41.03" y="479.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::emplace_mutation_fragment (29 samples, 0.06%)</title><rect x="146.3" y="245" width="0.7" height="15.0" fill="rgb(218,144,42)" rx="2" ry="2" />
<text  x="149.32" y="255.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (28 samples, 0.06%)</title><rect x="38.4" y="453" width="0.7" height="15.0" fill="rgb(216,192,27)" rx="2" ry="2" />
<text  x="41.38" y="463.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::find (11 samples, 0.02%)</title><rect x="648.0" y="405" width="0.3" height="15.0" fill="rgb(226,157,39)" rx="2" ry="2" />
<text  x="651.04" y="415.5" ></text>
</g>
<g >
<title>std::push_heap&lt;mutation_reader_merger::reader_and_fragment*, mutation_reader_merger::reader_heap_compare&gt; (19 samples, 0.04%)</title><rect x="138.7" y="261" width="0.4" height="15.0" fill="rgb(208,19,27)" rx="2" ry="2" />
<text  x="141.65" y="271.5" ></text>
</g>
<g >
<title>__tls_init (11 samples, 0.02%)</title><rect x="525.2" y="293" width="0.3" height="15.0" fill="rgb(243,219,1)" rx="2" ry="2" />
<text  x="528.24" y="303.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_M_reset (7 samples, 0.01%)</title><rect x="1137.4" y="421" width="0.2" height="15.0" fill="rgb(242,88,1)" rx="2" ry="2" />
<text  x="1140.39" y="431.5" ></text>
</g>
<g >
<title>query::result::result (36 samples, 0.07%)</title><rect x="591.5" y="421" width="0.8" height="15.0" fill="rgb(249,105,0)" rx="2" ry="2" />
<text  x="594.46" y="431.5" ></text>
</g>
<g >
<title>validation::validate_column_family (364 samples, 0.75%)</title><rect x="817.2" y="389" width="8.8" height="15.0" fill="rgb(248,64,16)" rx="2" ry="2" />
<text  x="820.15" y="399.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::signal (7 samples, 0.01%)</title><rect x="62.6" y="405" width="0.2" height="15.0" fill="rgb(234,208,21)" rx="2" ry="2" />
<text  x="65.61" y="415.5" ></text>
</g>
<g >
<title>std::construct_at&lt;mutation_fragment, schema const&amp;, reader_permit&amp;, partition_start&gt; (5 samples, 0.01%)</title><rect x="507.9" y="245" width="0.2" height="15.0" fill="rgb(254,17,37)" rx="2" ry="2" />
<text  x="510.94" y="255.5" ></text>
</g>
<g >
<title>operator new (23 samples, 0.05%)</title><rect x="500.2" y="197" width="0.6" height="15.0" fill="rgb(246,20,15)" rx="2" ry="2" />
<text  x="503.25" y="207.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (14 samples, 0.03%)</title><rect x="546.7" y="421" width="0.4" height="15.0" fill="rgb(250,108,31)" rx="2" ry="2" />
<text  x="549.74" y="431.5" ></text>
</g>
<g >
<title>skip_empty_fragments&lt;managed_bytes_basic_view&lt; (9 samples, 0.02%)</title><rect x="477.1" y="197" width="0.2" height="15.0" fill="rgb(253,156,49)" rx="2" ry="2" />
<text  x="480.11" y="207.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (19 samples, 0.04%)</title><rect x="683.5" y="309" width="0.4" height="15.0" fill="rgb(208,189,14)" rx="2" ry="2" />
<text  x="686.48" y="319.5" ></text>
</g>
<g >
<title>compound_type&lt; (156 samples, 0.32%)</title><rect x="929.6" y="373" width="3.8" height="15.0" fill="rgb(236,196,39)" rx="2" ry="2" />
<text  x="932.60" y="383.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (73 samples, 0.15%)</title><rect x="993.5" y="277" width="1.8" height="15.0" fill="rgb(228,119,29)" rx="2" ry="2" />
<text  x="996.52" y="287.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (283 samples, 0.58%)</title><rect x="14.5" y="597" width="6.9" height="15.0" fill="rgb(248,190,36)" rx="2" ry="2" />
<text  x="17.51" y="607.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (13 samples, 0.03%)</title><rect x="660.6" y="437" width="0.3" height="15.0" fill="rgb(215,138,49)" rx="2" ry="2" />
<text  x="663.56" y="447.5" ></text>
</g>
<g >
<title>mutation_reader_merger::maybe_add_readers_at_partition_boundary (42 samples, 0.09%)</title><rect x="123.6" y="293" width="1.0" height="15.0" fill="rgb(226,223,3)" rx="2" ry="2" />
<text  x="126.62" y="303.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (6 samples, 0.01%)</title><rect x="1077.0" y="325" width="0.1" height="15.0" fill="rgb(249,98,38)" rx="2" ry="2" />
<text  x="1079.96" y="335.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_M_reset (5 samples, 0.01%)</title><rect x="1114.3" y="357" width="0.1" height="15.0" fill="rgb(222,77,51)" rx="2" ry="2" />
<text  x="1117.30" y="367.5" ></text>
</g>
<g >
<title>database::find_column_family (62 samples, 0.13%)</title><rect x="817.8" y="341" width="1.5" height="15.0" fill="rgb(232,73,47)" rx="2" ry="2" />
<text  x="820.76" y="351.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (33 samples, 0.07%)</title><rect x="101.4" y="421" width="0.8" height="15.0" fill="rgb(226,88,40)" rx="2" ry="2" />
<text  x="104.41" y="431.5" ></text>
</g>
<g >
<title>seastar::basic_semaphore&lt;seastar::semaphore_default_exception_factory, std::chrono::_V2::steady_clock&gt;::wait (9 samples, 0.02%)</title><rect x="597.8" y="437" width="0.2" height="15.0" fill="rgb(246,119,13)" rx="2" ry="2" />
<text  x="600.80" y="447.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt; &gt;::satisfy_with_result_of&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::then_wrapped_nrvo&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (91 samples, 0.19%)</title><rect x="662.9" y="485" width="2.3" height="15.0" fill="rgb(237,23,7)" rx="2" ry="2" />
<text  x="665.95" y="495.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (13 samples, 0.03%)</title><rect x="681.4" y="453" width="0.3" height="15.0" fill="rgb(251,64,54)" rx="2" ry="2" />
<text  x="684.39" y="463.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (13 samples, 0.03%)</title><rect x="44.9" y="485" width="0.3" height="15.0" fill="rgb(215,117,28)" rx="2" ry="2" />
<text  x="47.90" y="495.5" ></text>
</g>
<g >
<title>seastar::future&lt;boost::iterator_range&lt;mutation_fragment*&gt; &gt;::then_impl&lt;mutation_fragment_merger&lt;mutation_reader_merger&gt;::fetch (45 samples, 0.09%)</title><rect x="258.8" y="325" width="1.1" height="15.0" fill="rgb(206,129,39)" rx="2" ry="2" />
<text  x="261.80" y="335.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;schema_registry_entry&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;schema_registry_entry&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (108 samples, 0.22%)</title><rect x="977.0" y="325" width="2.6" height="15.0" fill="rgb(249,82,46)" rx="2" ry="2" />
<text  x="979.95" y="335.5" ></text>
</g>
<g >
<title>single_node_cql_env::make_query_state (474 samples, 0.98%)</title><rect x="835.6" y="437" width="11.6" height="15.0" fill="rgb(209,45,8)" rx="2" ry="2" />
<text  x="838.64" y="447.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::set&lt;service::storage_proxy_coordinator_query_result&gt; (16 samples, 0.03%)</title><rect x="1151.3" y="469" width="0.4" height="15.0" fill="rgb(234,40,46)" rx="2" ry="2" />
<text  x="1154.32" y="479.5" ></text>
</g>
<g >
<title>reader_selector::has_new_readers (10 samples, 0.02%)</title><rect x="440.1" y="277" width="0.3" height="15.0" fill="rgb(221,1,26)" rx="2" ry="2" />
<text  x="443.14" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (9 samples, 0.02%)</title><rect x="399.6" y="181" width="0.2" height="15.0" fill="rgb(215,105,50)" rx="2" ry="2" />
<text  x="402.58" y="191.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::digest_read_resolver (173 samples, 0.36%)</title><rect x="992.2" y="309" width="4.2" height="15.0" fill="rgb(225,19,53)" rx="2" ry="2" />
<text  x="995.20" y="319.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;clustering_key_prefix&gt;::_M_move_assign (7 samples, 0.01%)</title><rect x="537.3" y="405" width="0.2" height="15.0" fill="rgb(218,91,42)" rx="2" ry="2" />
<text  x="540.29" y="415.5" ></text>
</g>
<g >
<title>position_in_partition_view::for_range_end (15 samples, 0.03%)</title><rect x="226.0" y="245" width="0.3" height="15.0" fill="rgb(246,73,28)" rx="2" ry="2" />
<text  x="228.97" y="255.5" ></text>
</g>
<g >
<title>row_cache::do_make_reader (22 samples, 0.05%)</title><rect x="518.1" y="341" width="0.6" height="15.0" fill="rgb(244,192,23)" rx="2" ry="2" />
<text  x="521.13" y="351.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (8 samples, 0.02%)</title><rect x="581.6" y="373" width="0.2" height="15.0" fill="rgb(245,7,51)" rx="2" ry="2" />
<text  x="584.62" y="383.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (6 samples, 0.01%)</title><rect x="1041.6" y="245" width="0.2" height="15.0" fill="rgb(237,221,36)" rx="2" ry="2" />
<text  x="1044.64" y="255.5" ></text>
</g>
<g >
<title>flat_mutation_reader::peek (7,111 samples, 14.68%)</title><rect x="110.1" y="405" width="173.2" height="15.0" fill="rgb(217,23,46)" rx="2" ry="2" />
<text  x="113.08" y="415.5" >flat_mutation_reader::..</text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (16 samples, 0.03%)</title><rect x="579.6" y="325" width="0.3" height="15.0" fill="rgb(234,22,27)" rx="2" ry="2" />
<text  x="582.55" y="335.5" ></text>
</g>
<g >
<title>std::pair&lt;auth::role_or_anonymous, auth::resource&gt;::pair&lt;auth::role_or_anonymous, auth::resource, true&gt; (44 samples, 0.09%)</title><rect x="801.1" y="261" width="1.1" height="15.0" fill="rgb(223,183,41)" rx="2" ry="2" />
<text  x="804.12" y="271.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_initialize_map (14 samples, 0.03%)</title><rect x="544.1" y="389" width="0.3" height="15.0" fill="rgb(227,163,39)" rx="2" ry="2" />
<text  x="547.09" y="399.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (12 samples, 0.02%)</title><rect x="1105.3" y="357" width="0.3" height="15.0" fill="rgb(233,42,2)" rx="2" ry="2" />
<text  x="1108.31" y="367.5" ></text>
</g>
<g >
<title>operator delete (41 samples, 0.08%)</title><rect x="408.9" y="261" width="1.0" height="15.0" fill="rgb(233,81,10)" rx="2" ry="2" />
<text  x="411.89" y="271.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (266 samples, 0.55%)</title><rect x="14.8" y="501" width="6.5" height="15.0" fill="rgb(218,82,51)" rx="2" ry="2" />
<text  x="17.80" y="511.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%)</title><rect x="35.3" y="437" width="0.1" height="15.0" fill="rgb(210,171,38)" rx="2" ry="2" />
<text  x="38.26" y="447.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (5 samples, 0.01%)</title><rect x="494.4" y="277" width="0.1" height="15.0" fill="rgb(226,43,41)" rx="2" ry="2" />
<text  x="497.35" y="287.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;signed char, std::char_traits&lt;signed char&gt; &gt;::substr (12 samples, 0.02%)</title><rect x="918.6" y="325" width="0.3" height="15.0" fill="rgb(230,196,9)" rx="2" ry="2" />
<text  x="921.57" y="335.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_nodes (5 samples, 0.01%)</title><rect x="1106.9" y="357" width="0.1" height="15.0" fill="rgb(237,116,21)" rx="2" ry="2" />
<text  x="1109.92" y="367.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::then_wrapped_nrvo&lt;void, service::abstract_read_executor::make_data_requests (115 samples, 0.24%)</title><rect x="998.6" y="293" width="2.8" height="15.0" fill="rgb(217,201,1)" rx="2" ry="2" />
<text  x="1001.58" y="303.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (5 samples, 0.01%)</title><rect x="405.1" y="277" width="0.1" height="15.0" fill="rgb(242,72,46)" rx="2" ry="2" />
<text  x="408.06" y="287.5" ></text>
</g>
<g >
<title>allocation_strategy::alloc&lt;blob_storage&gt; (8 samples, 0.02%)</title><rect x="182.3" y="85" width="0.2" height="15.0" fill="rgb(241,103,38)" rx="2" ry="2" />
<text  x="185.32" y="95.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::merging_reader (187 samples, 0.39%)</title><rect x="445.6" y="293" width="4.6" height="15.0" fill="rgb(236,224,30)" rx="2" ry="2" />
<text  x="448.64" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (14 samples, 0.03%)</title><rect x="631.2" y="485" width="0.4" height="15.0" fill="rgb(237,217,43)" rx="2" ry="2" />
<text  x="634.21" y="495.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_one (240 samples, 0.50%)</title><rect x="131.5" y="261" width="5.8" height="15.0" fill="rgb(242,15,53)" rx="2" ry="2" />
<text  x="134.49" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (38 samples, 0.08%)</title><rect x="956.8" y="373" width="1.0" height="15.0" fill="rgb(205,162,22)" rx="2" ry="2" />
<text  x="959.84" y="383.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;tracking_allocator&lt;mutation_fragment&gt; &gt;::_S_destroy&lt;tracking_allocator&lt;mutation_fragment&gt;, mutation_fragment&gt; (13 samples, 0.03%)</title><rect x="298.6" y="245" width="0.3" height="15.0" fill="rgb(212,205,41)" rx="2" ry="2" />
<text  x="301.58" y="255.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (13 samples, 0.03%)</title><rect x="933.8" y="373" width="0.4" height="15.0" fill="rgb(219,112,22)" rx="2" ry="2" />
<text  x="936.84" y="383.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_singular (1,162 samples, 2.40%)</title><rect x="1146.5" y="501" width="28.3" height="15.0" fill="rgb(238,133,18)" rx="2" ry="2" />
<text  x="1149.45" y="511.5" >s..</text>
</g>
<g >
<title>auth::permissions_cache::get (918 samples, 1.89%)</title><rect x="782.2" y="277" width="22.4" height="15.0" fill="rgb(214,112,43)" rx="2" ry="2" />
<text  x="785.25" y="287.5" >a..</text>
</g>
<g >
<title>std::_Optional_payload_base&lt;clustering_key_prefix&gt;::_M_reset (9 samples, 0.02%)</title><rect x="416.6" y="373" width="0.2" height="15.0" fill="rgb(224,67,42)" rx="2" ry="2" />
<text  x="419.61" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (24 samples, 0.05%)</title><rect x="781.0" y="245" width="0.6" height="15.0" fill="rgb(229,8,49)" rx="2" ry="2" />
<text  x="784.03" y="255.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (11 samples, 0.02%)</title><rect x="57.8" y="437" width="0.3" height="15.0" fill="rgb(232,38,42)" rx="2" ry="2" />
<text  x="60.84" y="447.5" ></text>
</g>
<g >
<title>mutation_fragment::visit&lt;mutation_fragment::calculate_memory_usage (10 samples, 0.02%)</title><rect x="207.0" y="165" width="0.2" height="15.0" fill="rgb(241,95,15)" rx="2" ry="2" />
<text  x="210.00" y="175.5" ></text>
</g>
<g >
<title>partition_snapshot::get_change_mark (39 samples, 0.08%)</title><rect x="219.8" y="149" width="1.0" height="15.0" fill="rgb(249,159,54)" rx="2" ry="2" />
<text  x="222.83" y="159.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (51 samples, 0.11%)</title><rect x="723.5" y="341" width="1.3" height="15.0" fill="rgb(231,0,31)" rx="2" ry="2" />
<text  x="726.55" y="351.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (5 samples, 0.01%)</title><rect x="17.2" y="309" width="0.1" height="15.0" fill="rgb(228,210,21)" rx="2" ry="2" />
<text  x="20.16" y="319.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (11 samples, 0.02%)</title><rect x="1158.5" y="405" width="0.2" height="15.0" fill="rgb(237,116,47)" rx="2" ry="2" />
<text  x="1161.46" y="415.5" ></text>
</g>
<g >
<title>operator new (45 samples, 0.09%)</title><rect x="842.4" y="405" width="1.1" height="15.0" fill="rgb(221,36,46)" rx="2" ry="2" />
<text  x="845.43" y="415.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE9then_implIZNS6_14discard_resultEvEUlDpOT_E_NS0_IvEEEET0_OT_ (108 samples, 0.22%)</title><rect x="714.1" y="469" width="2.6" height="15.0" fill="rgb(217,66,16)" rx="2" ry="2" />
<text  x="717.07" y="479.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (7 samples, 0.01%)</title><rect x="193.4" y="101" width="0.2" height="15.0" fill="rgb(211,38,37)" rx="2" ry="2" />
<text  x="196.38" y="111.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::emplace_back&lt;mutation_reader_merger::reader_and_fragment&gt; (23 samples, 0.05%)</title><rect x="255.1" y="277" width="0.6" height="15.0" fill="rgb(207,179,37)" rx="2" ry="2" />
<text  x="258.15" y="287.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIN7seastar10shared_ptrIN4cql34termEEEEER18overloaded_functorIJZNS6_4expr12prepare_termERKNSB_10expressionER8databaseRKNS4_13basic_sstringIcjLj15ELb1EEENS4_13lw_shared_ptrINS6_20column_specificationEEEE3$_0ZNSB_12prepare_termESE_SG_SK_SN_E3$_1ZNSB_12prepare_termESE_SG_SK_SN_E3$_2ZNSB_12prepare_termESE_SG_SK_SN_E3$_3ZNSB_12prepare_termESE_SG_SK_SN_E3$_4ZNSB_12prepare_termESE_SG_SK_SN_E3$_5ZNSB_12prepare_termESE_SG_SK_SN_E3$_6ZNSB_12prepare_termESE_SG_SK_SN_E3$_7ZNSB_12prepare_termESE_SG_SK_SN_E3$_8ZNSB_12prepare_termESE_SG_SK_SN_E3$_9ZNSB_12prepare_termESE_SG_SK_SN_E4$_10ZNSB_12prepare_termESE_SG_SK_SN_E4$_11ZNSB_12prepare_termESE_SG_SK_SN_E4$_12ZNSB_12prepare_termESE_SG_SK_SN_E4$_13ZNSB_12prepare_termESE_SG_SK_SN_E4$_14ZNSB_12prepare_termESE_SG_SK_SN_E4$_15EERSt7variantIJNSB_11conjunctionENSB_15binary_operatorENSB_12column_valueENSB_5tokenENSB_21unresolved_identifierENSB_25column_mutation_attributeENSB_13function_callENSB_4castENSB_15field_selectionENSB_4nullENSB_13bind_variableENSB_16untyped_constantENSB_8constantENSB_17tuple_constructorENSB_22collection_constructorENSB_20usertype_constructorEEEEJEEESt16integer_sequenceImJLm11EEEE14__visit_invokeES15_S1O_ (8 samples, 0.02%)</title><rect x="20.2" y="389" width="0.2" height="15.0" fill="rgb(247,204,41)" rx="2" ry="2" />
<text  x="23.21" y="399.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (12 samples, 0.02%)</title><rect x="198.1" y="133" width="0.3" height="15.0" fill="rgb(219,119,46)" rx="2" ry="2" />
<text  x="201.08" y="143.5" ></text>
</g>
<g >
<title>seastar::promise&lt;void&gt;::promise (10 samples, 0.02%)</title><rect x="1033.9" y="133" width="0.2" height="15.0" fill="rgb(239,208,45)" rx="2" ry="2" />
<text  x="1036.85" y="143.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_no_esft&lt;query::read_command&gt;::shared_ptr_no_esft&lt;utils::UUID const&amp;, utils::UUID, query::partition_slice, query::max_result_size, query::row_limit, query::partition_limit, std::chrono::time_point&lt;gc_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt; &gt;&amp;, std::optional&lt;tracing::trace_info&gt;, utils::UUID, seastar::bool_class&lt;query::is_first_page_tag&gt; const&amp;, long&gt; (131 samples, 0.27%)</title><rect x="1130.5" y="405" width="3.2" height="15.0" fill="rgb(220,204,7)" rx="2" ry="2" />
<text  x="1133.50" y="415.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (5 samples, 0.01%)</title><rect x="656.0" y="485" width="0.1" height="15.0" fill="rgb(210,100,20)" rx="2" ry="2" />
<text  x="658.96" y="495.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (52 samples, 0.11%)</title><rect x="917.6" y="341" width="1.3" height="15.0" fill="rgb(212,157,9)" rx="2" ry="2" />
<text  x="920.60" y="351.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::clear (10 samples, 0.02%)</title><rect x="629.8" y="485" width="0.2" height="15.0" fill="rgb(234,1,32)" rx="2" ry="2" />
<text  x="632.75" y="495.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::with_permit (692 samples, 1.43%)</title><rect x="1024.7" y="245" width="16.9" height="15.0" fill="rgb(245,53,16)" rx="2" ry="2" />
<text  x="1027.72" y="255.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::allocate_on (5 samples, 0.01%)</title><rect x="1141.5" y="181" width="0.2" height="15.0" fill="rgb(244,127,1)" rx="2" ry="2" />
<text  x="1144.53" y="191.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (15 samples, 0.03%)</title><rect x="800.6" y="213" width="0.3" height="15.0" fill="rgb(214,159,16)" rx="2" ry="2" />
<text  x="803.56" y="223.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (14 samples, 0.03%)</title><rect x="610.8" y="405" width="0.3" height="15.0" fill="rgb(238,191,17)" rx="2" ry="2" />
<text  x="613.75" y="415.5" ></text>
</g>
<g >
<title>std::default_delete&lt;cql3::query_options&gt;::operator (147 samples, 0.30%)</title><rect x="668.5" y="469" width="3.6" height="15.0" fill="rgb(225,188,2)" rx="2" ry="2" />
<text  x="671.48" y="479.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (325 samples, 0.67%)</title><rect x="792.4" y="197" width="7.9" height="15.0" fill="rgb(211,132,6)" rx="2" ry="2" />
<text  x="795.40" y="207.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (12 samples, 0.02%)</title><rect x="1106.7" y="373" width="0.3" height="15.0" fill="rgb(221,67,9)" rx="2" ry="2" />
<text  x="1109.75" y="383.5" ></text>
</g>
<g >
<title>posix_memalign (148 samples, 0.31%)</title><rect x="186.2" y="53" width="3.6" height="15.0" fill="rgb(238,132,18)" rx="2" ry="2" />
<text  x="189.22" y="63.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_live_sorted_endpoints (910 samples, 1.88%)</title><rect x="1078.0" y="341" width="22.2" height="15.0" fill="rgb(248,106,37)" rx="2" ry="2" />
<text  x="1081.03" y="351.5" >s..</text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::metadata&gt;::~shared_ptr (11 samples, 0.02%)</title><rect x="649.7" y="469" width="0.3" height="15.0" fill="rgb(219,70,33)" rx="2" ry="2" />
<text  x="652.70" y="479.5" ></text>
</g>
<g >
<title>ser::safe_serialize_as_uint32&lt;bytes_ostream&gt; (65 samples, 0.13%)</title><rect x="355.7" y="149" width="1.6" height="15.0" fill="rgb(229,197,30)" rx="2" ry="2" />
<text  x="358.69" y="159.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;auth::resource_kind, std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;auth::resource_kind&gt;, std::hash&lt;auth::resource_kind&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::at (30 samples, 0.06%)</title><rect x="765.1" y="357" width="0.8" height="15.0" fill="rgb(214,185,26)" rx="2" ry="2" />
<text  x="768.15" y="367.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (15 samples, 0.03%)</title><rect x="945.3" y="325" width="0.4" height="15.0" fill="rgb(228,202,47)" rx="2" ry="2" />
<text  x="948.29" y="335.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;enum_set&lt;super_enum&lt;auth::permission,  (7 samples, 0.01%)</title><rect x="784.9" y="261" width="0.2" height="15.0" fill="rgb(241,221,11)" rx="2" ry="2" />
<text  x="787.93" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::emplace_back&lt;flat_mutation_reader&gt; (21 samples, 0.04%)</title><rect x="531.3" y="341" width="0.5" height="15.0" fill="rgb(238,118,34)" rx="2" ry="2" />
<text  x="534.28" y="351.5" ></text>
</g>
<g >
<title>std::__relocate_a&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;*, std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;*, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt; (5 samples, 0.01%)</title><rect x="18.0" y="229" width="0.1" height="15.0" fill="rgb(215,50,33)" rx="2" ry="2" />
<text  x="20.99" y="239.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (7 samples, 0.01%)</title><rect x="1105.7" y="373" width="0.2" height="15.0" fill="rgb(245,24,27)" rx="2" ry="2" />
<text  x="1108.70" y="383.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::forward_to (23 samples, 0.05%)</title><rect x="867.2" y="469" width="0.6" height="15.0" fill="rgb(251,178,6)" rx="2" ry="2" />
<text  x="870.23" y="479.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::reserve (5 samples, 0.01%)</title><rect x="791.4" y="181" width="0.1" height="15.0" fill="rgb(209,187,31)" rx="2" ry="2" />
<text  x="794.41" y="191.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::lru_entry, boost::intrusive::list_node_traits&lt;void*&gt;,  (16 samples, 0.03%)</title><rect x="736.9" y="293" width="0.4" height="15.0" fill="rgb(237,113,49)" rx="2" ry="2" />
<text  x="739.92" y="303.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (10 samples, 0.02%)</title><rect x="1021.4" y="197" width="0.3" height="15.0" fill="rgb(252,102,45)" rx="2" ry="2" />
<text  x="1024.43" y="207.5" ></text>
</g>
<g >
<title>operator new (26 samples, 0.05%)</title><rect x="528.9" y="261" width="0.7" height="15.0" fill="rgb(220,21,13)" rx="2" ry="2" />
<text  x="531.94" y="271.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (80 samples, 0.17%)</title><rect x="1121.6" y="405" width="2.0" height="15.0" fill="rgb(245,147,10)" rx="2" ry="2" />
<text  x="1124.63" y="415.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (13 samples, 0.03%)</title><rect x="311.0" y="165" width="0.3" height="15.0" fill="rgb(212,227,39)" rx="2" ry="2" />
<text  x="313.97" y="175.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::range_tombstone_accumulator (8 samples, 0.02%)</title><rect x="545.8" y="405" width="0.2" height="15.0" fill="rgb(221,190,48)" rx="2" ry="2" />
<text  x="548.79" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (29 samples, 0.06%)</title><rect x="783.2" y="229" width="0.7" height="15.0" fill="rgb(237,82,12)" rx="2" ry="2" />
<text  x="786.20" y="239.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment (5 samples, 0.01%)</title><rect x="499.4" y="229" width="0.1" height="15.0" fill="rgb(242,117,49)" rx="2" ry="2" />
<text  x="502.40" y="239.5" ></text>
</g>
<g >
<title>executor&lt;test_read (6,002 samples, 12.39%)</title><rect x="713.0" y="485" width="146.2" height="15.0" fill="rgb(251,143,5)" rx="2" ry="2" />
<text  x="716.00" y="495.5" >executor&lt;test_read</text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_M_move_assign (21 samples, 0.04%)</title><rect x="1113.8" y="357" width="0.5" height="15.0" fill="rgb(235,21,9)" rx="2" ry="2" />
<text  x="1116.79" y="367.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (5 samples, 0.01%)</title><rect x="889.1" y="309" width="0.1" height="15.0" fill="rgb(254,193,0)" rx="2" ry="2" />
<text  x="892.08" y="319.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (44 samples, 0.09%)</title><rect x="1131.9" y="389" width="1.1" height="15.0" fill="rgb(223,178,34)" rx="2" ry="2" />
<text  x="1134.93" y="399.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (13 samples, 0.03%)</title><rect x="1037.9" y="229" width="0.3" height="15.0" fill="rgb(234,219,24)" rx="2" ry="2" />
<text  x="1040.87" y="239.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::~small_vector (30 samples, 0.06%)</title><rect x="580.6" y="357" width="0.8" height="15.0" fill="rgb(234,107,40)" rx="2" ry="2" />
<text  x="583.62" y="367.5" ></text>
</g>
<g >
<title>table::make_reader (7 samples, 0.01%)</title><rect x="533.5" y="373" width="0.1" height="15.0" fill="rgb(213,199,53)" rx="2" ry="2" />
<text  x="536.47" y="383.5" ></text>
</g>
<g >
<title>seastar::execution_stage::flush (12 samples, 0.02%)</title><rect x="748.9" y="357" width="0.2" height="15.0" fill="rgb(208,229,36)" rx="2" ry="2" />
<text  x="751.85" y="367.5" ></text>
</g>
<g >
<title>__strlen_avx2 (106 samples, 0.22%)</title><rect x="1017.9" y="245" width="2.6" height="15.0" fill="rgb(232,199,3)" rx="2" ry="2" />
<text  x="1020.90" y="255.5" ></text>
</g>
<g >
<title>query::result::builder::add_partition (117 samples, 0.24%)</title><rect x="311.3" y="181" width="2.9" height="15.0" fill="rgb(245,184,42)" rx="2" ry="2" />
<text  x="314.31" y="191.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_nodes (7 samples, 0.01%)</title><rect x="679.3" y="437" width="0.2" height="15.0" fill="rgb(218,65,19)" rx="2" ry="2" />
<text  x="682.29" y="447.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (12 samples, 0.02%)</title><rect x="577.8" y="341" width="0.2" height="15.0" fill="rgb(233,19,12)" rx="2" ry="2" />
<text  x="580.75" y="351.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_Optional_payload_base (11 samples, 0.02%)</title><rect x="547.1" y="421" width="0.3" height="15.0" fill="rgb(234,226,34)" rx="2" ry="2" />
<text  x="550.09" y="431.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::do_execute (33 samples, 0.07%)</title><rect x="862.7" y="437" width="0.8" height="15.0" fill="rgb(242,128,13)" rx="2" ry="2" />
<text  x="865.67" y="447.5" ></text>
</g>
<g >
<title>std::__optional_hash_call_base&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, true&gt;::operator (19 samples, 0.04%)</title><rect x="798.7" y="101" width="0.5" height="15.0" fill="rgb(230,160,2)" rx="2" ry="2" />
<text  x="801.74" y="111.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (122 samples, 0.25%)</title><rect x="388.7" y="245" width="3.0" height="15.0" fill="rgb(208,80,1)" rx="2" ry="2" />
<text  x="391.72" y="255.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::clear (9 samples, 0.02%)</title><rect x="809.6" y="277" width="0.3" height="15.0" fill="rgb(211,202,54)" rx="2" ry="2" />
<text  x="812.65" y="287.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (27 samples, 0.06%)</title><rect x="737.8" y="357" width="0.7" height="15.0" fill="rgb(215,105,11)" rx="2" ry="2" />
<text  x="740.80" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (7 samples, 0.01%)</title><rect x="510.3" y="293" width="0.2" height="15.0" fill="rgb(225,214,10)" rx="2" ry="2" />
<text  x="513.33" y="303.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::~small_vector (11 samples, 0.02%)</title><rect x="580.2" y="357" width="0.3" height="15.0" fill="rgb(226,119,35)" rx="2" ry="2" />
<text  x="583.19" y="367.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;, service::storage_proxy::query_result_local (12 samples, 0.02%)</title><rect x="22.3" y="517" width="0.3" height="15.0" fill="rgb(251,75,3)" rx="2" ry="2" />
<text  x="25.30" y="527.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::clear (8 samples, 0.02%)</title><rect x="676.4" y="485" width="0.2" height="15.0" fill="rgb(232,3,30)" rx="2" ry="2" />
<text  x="679.39" y="495.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (5 samples, 0.01%)</title><rect x="550.2" y="357" width="0.1" height="15.0" fill="rgb(233,31,28)" rx="2" ry="2" />
<text  x="553.23" y="367.5" ></text>
</g>
<g >
<title>absl::hash_internal::AbslHashValue&lt;absl::hash_internal::HashState&gt; (38 samples, 0.08%)</title><rect x="838.8" y="357" width="1.0" height="15.0" fill="rgb(211,27,26)" rx="2" ry="2" />
<text  x="841.83" y="367.5" ></text>
</g>
<g >
<title>ser::query_result__partitions&lt;bytes_ostream&gt;::add (17 samples, 0.04%)</title><rect x="312.9" y="165" width="0.4" height="15.0" fill="rgb(245,202,0)" rx="2" ry="2" />
<text  x="315.92" y="175.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (6 samples, 0.01%)</title><rect x="685.6" y="469" width="0.2" height="15.0" fill="rgb(252,191,31)" rx="2" ry="2" />
<text  x="688.63" y="479.5" ></text>
</g>
<g >
<title>operator new (31 samples, 0.06%)</title><rect x="207.2" y="165" width="0.8" height="15.0" fill="rgb(212,19,9)" rx="2" ry="2" />
<text  x="210.24" y="175.5" ></text>
</g>
<g >
<title>reader_permit::used_guard::~used_guard (8 samples, 0.02%)</title><rect x="684.1" y="485" width="0.2" height="15.0" fill="rgb(213,182,9)" rx="2" ry="2" />
<text  x="687.12" y="495.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (8 samples, 0.02%)</title><rect x="1133.4" y="389" width="0.2" height="15.0" fill="rgb(206,180,43)" rx="2" ry="2" />
<text  x="1136.42" y="399.5" ></text>
</g>
<g >
<title>utils::array_search_gt (8 samples, 0.02%)</title><rect x="469.2" y="277" width="0.2" height="15.0" fill="rgb(233,124,36)" rx="2" ry="2" />
<text  x="472.22" y="287.5" ></text>
</g>
<g >
<title>operator delete (39 samples, 0.08%)</title><rect x="33.5" y="469" width="1.0" height="15.0" fill="rgb(206,135,12)" rx="2" ry="2" />
<text  x="36.50" y="479.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_token (6 samples, 0.01%)</title><rect x="646.8" y="405" width="0.1" height="15.0" fill="rgb(210,10,34)" rx="2" ry="2" />
<text  x="649.75" y="415.5" ></text>
</g>
<g >
<title>std::__apply_impl&lt;seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (27 samples, 0.06%)</title><rect x="1142.1" y="469" width="0.6" height="15.0" fill="rgb(226,12,33)" rx="2" ry="2" />
<text  x="1145.07" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (32 samples, 0.07%)</title><rect x="887.4" y="277" width="0.7" height="15.0" fill="rgb(247,39,43)" rx="2" ry="2" />
<text  x="890.37" y="287.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::operator== (14 samples, 0.03%)</title><rect x="740.8" y="293" width="0.4" height="15.0" fill="rgb(213,113,28)" rx="2" ry="2" />
<text  x="743.84" y="303.5" ></text>
</g>
<g >
<title>seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::expand (10 samples, 0.02%)</title><rect x="279.3" y="325" width="0.3" height="15.0" fill="rgb(254,59,7)" rx="2" ry="2" />
<text  x="282.31" y="335.5" ></text>
</g>
<g >
<title>operator delete (12 samples, 0.02%)</title><rect x="35.1" y="453" width="0.3" height="15.0" fill="rgb(225,157,38)" rx="2" ry="2" />
<text  x="38.09" y="463.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (8 samples, 0.02%)</title><rect x="789.3" y="213" width="0.2" height="15.0" fill="rgb(227,24,25)" rx="2" ry="2" />
<text  x="792.31" y="223.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_nodes (5 samples, 0.01%)</title><rect x="1169.9" y="469" width="0.1" height="15.0" fill="rgb(209,89,5)" rx="2" ry="2" />
<text  x="1172.88" y="479.5" ></text>
</g>
<g >
<title>reader_permit::consume (7 samples, 0.01%)</title><rect x="208.6" y="149" width="0.1" height="15.0" fill="rgb(233,18,40)" rx="2" ry="2" />
<text  x="211.55" y="159.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::~__si_class_type_info (168 samples, 0.35%)</title><rect x="10.2" y="613" width="4.1" height="15.0" fill="rgb(221,2,1)" rx="2" ry="2" />
<text  x="13.17" y="623.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (8 samples, 0.02%)</title><rect x="681.4" y="437" width="0.2" height="15.0" fill="rgb(223,114,10)" rx="2" ry="2" />
<text  x="684.41" y="447.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_last_fragment_kind, 4ul&gt;::~small_vector (9 samples, 0.02%)</title><rect x="581.4" y="357" width="0.2" height="15.0" fill="rgb(209,80,6)" rx="2" ry="2" />
<text  x="584.36" y="367.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (36 samples, 0.07%)</title><rect x="535.1" y="405" width="0.9" height="15.0" fill="rgb(217,149,54)" rx="2" ry="2" />
<text  x="538.08" y="415.5" ></text>
</g>
<g >
<title>gms::gossiper::is_alive (15 samples, 0.03%)</title><rect x="1096.8" y="277" width="0.4" height="15.0" fill="rgb(242,173,45)" rx="2" ry="2" />
<text  x="1099.81" y="287.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::cql_statement&gt;::~shared_ptr (5 samples, 0.01%)</title><rect x="1145.5" y="501" width="0.2" height="15.0" fill="rgb(254,147,16)" rx="2" ry="2" />
<text  x="1148.55" y="511.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::clear (5 samples, 0.01%)</title><rect x="1015.0" y="277" width="0.1" height="15.0" fill="rgb(227,202,41)" rx="2" ry="2" />
<text  x="1018.00" y="287.5" ></text>
</g>
<g >
<title>operator new (32 samples, 0.07%)</title><rect x="1158.9" y="389" width="0.8" height="15.0" fill="rgb(212,172,34)" rx="2" ry="2" />
<text  x="1161.87" y="399.5" ></text>
</g>
<g >
<title>dht::tri_compare (23 samples, 0.05%)</title><rect x="1083.1" y="245" width="0.5" height="15.0" fill="rgb(236,164,32)" rx="2" ry="2" />
<text  x="1086.07" y="255.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::operator (75 samples, 0.15%)</title><rect x="262.3" y="325" width="1.8" height="15.0" fill="rgb(228,166,6)" rx="2" ry="2" />
<text  x="265.31" y="335.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::digest_read_result&gt;::then_wrapped_common&lt;true, void, service::abstract_read_executor::execute (132 samples, 0.27%)</title><rect x="985.2" y="341" width="3.2" height="15.0" fill="rgb(215,201,14)" rx="2" ry="2" />
<text  x="988.16" y="351.5" ></text>
</g>
<g >
<title>locator::simple_snitch::sort_by_proximity (58 samples, 0.12%)</title><rect x="1078.5" y="325" width="1.4" height="15.0" fill="rgb(249,57,25)" rx="2" ry="2" />
<text  x="1081.52" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::~vector (10 samples, 0.02%)</title><rect x="436.1" y="245" width="0.3" height="15.0" fill="rgb(253,178,49)" rx="2" ry="2" />
<text  x="439.12" y="255.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reclaiming_disabled&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (2,260 samples, 4.66%)</title><rect x="160.9" y="213" width="55.1" height="15.0" fill="rgb(253,50,45)" rx="2" ry="2" />
<text  x="163.94" y="223.5" >logal..</text>
</g>
<g >
<title>reader_concurrency_semaphore::do_wait_admission (514 samples, 1.06%)</title><rect x="1025.3" y="229" width="12.5" height="15.0" fill="rgb(230,84,34)" rx="2" ry="2" />
<text  x="1028.28" y="239.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::check_access (3,104 samples, 6.41%)</title><rect x="751.1" y="421" width="75.6" height="15.0" fill="rgb(207,211,2)" rx="2" ry="2" />
<text  x="754.12" y="431.5" >cql3::st..</text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, flat_mutation_reader, reader_concurrency_semaphore::inactive_read_handle&gt;::~_Variant_storage (21 samples, 0.04%)</title><rect x="584.3" y="421" width="0.5" height="15.0" fill="rgb(225,208,33)" rx="2" ry="2" />
<text  x="587.33" y="431.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const*, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;*&gt; (16 samples, 0.03%)</title><rect x="775.7" y="309" width="0.4" height="15.0" fill="rgb(229,187,39)" rx="2" ry="2" />
<text  x="778.70" y="319.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector (11 samples, 0.02%)</title><rect x="1094.8" y="277" width="0.3" height="15.0" fill="rgb(208,159,1)" rx="2" ry="2" />
<text  x="1097.81" y="287.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (10 samples, 0.02%)</title><rect x="794.5" y="117" width="0.3" height="15.0" fill="rgb(253,221,37)" rx="2" ry="2" />
<text  x="797.55" y="127.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::local (7 samples, 0.01%)</title><rect x="1136.8" y="405" width="0.2" height="15.0" fill="rgb(231,73,32)" rx="2" ry="2" />
<text  x="1139.78" y="415.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (5 samples, 0.01%)</title><rect x="256.0" y="293" width="0.2" height="15.0" fill="rgb(207,217,1)" rx="2" ry="2" />
<text  x="259.05" y="303.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector (45 samples, 0.09%)</title><rect x="1165.5" y="469" width="1.1" height="15.0" fill="rgb(226,105,19)" rx="2" ry="2" />
<text  x="1168.47" y="479.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement::execute (858 samples, 1.77%)</title><rect x="640.9" y="501" width="20.9" height="15.0" fill="rgb(252,144,35)" rx="2" ry="2" />
<text  x="643.86" y="511.5" ></text>
</g>
<g >
<title>_ZSt5applyIZN7seastar8internal12do_with_implIRKNS0_13basic_sstringIcjLj15ELb1EEEN4auth8resourceEJZNK7service12client_state24has_column_family_accessERK8databaseS6_S6_NS7_10permissionENS7_12command_desc4typeEE3$_4EEEDaOT_OT0_DpOT1_EUlDpOT_E_St5tupleIJS6_OS8_EEEDcSJ_SL_ (100 samples, 0.21%)</title><rect x="762.3" y="389" width="2.4" height="15.0" fill="rgb(236,129,2)" rx="2" ry="2" />
<text  x="765.25" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (58 samples, 0.12%)</title><rect x="542.7" y="325" width="1.4" height="15.0" fill="rgb(249,142,17)" rx="2" ry="2" />
<text  x="545.65" y="335.5" ></text>
</g>
<g >
<title>operator new (33 samples, 0.07%)</title><rect x="541.7" y="357" width="0.8" height="15.0" fill="rgb(227,82,45)" rx="2" ry="2" />
<text  x="544.73" y="367.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (161 samples, 0.33%)</title><rect x="407.3" y="309" width="3.9" height="15.0" fill="rgb(240,25,18)" rx="2" ry="2" />
<text  x="410.30" y="319.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (10 samples, 0.02%)</title><rect x="802.0" y="213" width="0.2" height="15.0" fill="rgb(243,17,37)" rx="2" ry="2" />
<text  x="804.95" y="223.5" ></text>
</g>
<g >
<title>schema::get_sharder (6 samples, 0.01%)</title><rect x="1014.5" y="277" width="0.2" height="15.0" fill="rgb(249,221,52)" rx="2" ry="2" />
<text  x="1017.51" y="287.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.01%)</title><rect x="156.0" y="229" width="0.1" height="15.0" fill="rgb(212,40,7)" rx="2" ry="2" />
<text  x="159.02" y="239.5" ></text>
</g>
<g >
<title>operator delete (62 samples, 0.13%)</title><rect x="561.7" y="293" width="1.5" height="15.0" fill="rgb(223,88,33)" rx="2" ry="2" />
<text  x="564.70" y="303.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (32 samples, 0.07%)</title><rect x="658.8" y="485" width="0.7" height="15.0" fill="rgb(219,224,12)" rx="2" ry="2" />
<text  x="661.76" y="495.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_pausable&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (5 samples, 0.01%)</title><rect x="293.2" y="293" width="0.1" height="15.0" fill="rgb(213,24,52)" rx="2" ry="2" />
<text  x="296.22" y="303.5" ></text>
</g>
<g >
<title>mutation_reader_merger::close (832 samples, 1.72%)</title><rect x="549.4" y="373" width="20.3" height="15.0" fill="rgb(253,30,38)" rx="2" ry="2" />
<text  x="552.40" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (18 samples, 0.04%)</title><rect x="665.4" y="485" width="0.4" height="15.0" fill="rgb(241,93,5)" rx="2" ry="2" />
<text  x="668.39" y="495.5" ></text>
</g>
<g >
<title>partition_snapshot::~partition_snapshot (32 samples, 0.07%)</title><rect x="565.3" y="261" width="0.8" height="15.0" fill="rgb(211,18,21)" rx="2" ry="2" />
<text  x="568.30" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (17 samples, 0.04%)</title><rect x="651.5" y="437" width="0.4" height="15.0" fill="rgb(245,64,4)" rx="2" ry="2" />
<text  x="654.53" y="447.5" ></text>
</g>
<g >
<title>abstract_type::without_reversed (9 samples, 0.02%)</title><rect x="912.5" y="389" width="0.2" height="15.0" fill="rgb(253,13,37)" rx="2" ry="2" />
<text  x="915.53" y="399.5" ></text>
</g>
<g >
<title>dht::tri_compare (65 samples, 0.13%)</title><rect x="472.2" y="261" width="1.6" height="15.0" fill="rgb(240,140,33)" rx="2" ry="2" />
<text  x="475.24" y="271.5" ></text>
</g>
<g >
<title>mutation_querier::query_static_row (38 samples, 0.08%)</title><rect x="326.9" y="165" width="0.9" height="15.0" fill="rgb(238,224,50)" rx="2" ry="2" />
<text  x="329.85" y="175.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (11 samples, 0.02%)</title><rect x="1105.0" y="357" width="0.3" height="15.0" fill="rgb(213,92,48)" rx="2" ry="2" />
<text  x="1108.04" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (44 samples, 0.09%)</title><rect x="437.5" y="229" width="1.1" height="15.0" fill="rgb(251,82,10)" rx="2" ry="2" />
<text  x="440.53" y="239.5" ></text>
</g>
<g >
<title>mutation_fragment::destroy_data (367 samples, 0.76%)</title><rect x="392.1" y="261" width="9.0" height="15.0" fill="rgb(225,127,28)" rx="2" ry="2" />
<text  x="395.13" y="271.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (9 samples, 0.02%)</title><rect x="62.4" y="405" width="0.2" height="15.0" fill="rgb(234,181,41)" rx="2" ry="2" />
<text  x="65.39" y="415.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (27 samples, 0.06%)</title><rect x="1143.1" y="485" width="0.6" height="15.0" fill="rgb(211,113,21)" rx="2" ry="2" />
<text  x="1146.09" y="495.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::waiting_for (8 samples, 0.02%)</title><rect x="703.1" y="421" width="0.2" height="15.0" fill="rgb(213,62,3)" rx="2" ry="2" />
<text  x="706.09" y="431.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;std::pair&lt;seastar::shared_ptr&lt;service::abstract_read_executor&gt;, nonwrapping_interval&lt;dht::token&gt; &gt;, 1ul&gt;::clear (173 samples, 0.36%)</title><rect x="1170.5" y="469" width="4.3" height="15.0" fill="rgb(208,102,28)" rx="2" ry="2" />
<text  x="1173.54" y="479.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::operator= (30 samples, 0.06%)</title><rect x="827.2" y="421" width="0.7" height="15.0" fill="rgb(215,86,24)" rx="2" ry="2" />
<text  x="830.21" y="431.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;void&gt;::set_urgent_state (34 samples, 0.07%)</title><rect x="861.1" y="501" width="0.8" height="15.0" fill="rgb(248,76,1)" rx="2" ry="2" />
<text  x="864.07" y="511.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (21 samples, 0.04%)</title><rect x="656.6" y="485" width="0.6" height="15.0" fill="rgb(225,96,5)" rx="2" ry="2" />
<text  x="659.64" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value, std::allocator&lt;cql3::raw_value&gt; &gt;::~vector (5 samples, 0.01%)</title><rect x="857.5" y="469" width="0.2" height="15.0" fill="rgb(220,35,9)" rx="2" ry="2" />
<text  x="860.53" y="479.5" ></text>
</g>
<g >
<title>atomic_cell_or_collection::copy (682 samples, 1.41%)</title><rect x="173.6" y="117" width="16.6" height="15.0" fill="rgb(209,79,31)" rx="2" ry="2" />
<text  x="176.55" y="127.5" ></text>
</g>
<g >
<title>operator new (36 samples, 0.07%)</title><rect x="415.5" y="373" width="0.8" height="15.0" fill="rgb(219,182,33)" rx="2" ry="2" />
<text  x="418.46" y="383.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (6 samples, 0.01%)</title><rect x="160.1" y="213" width="0.2" height="15.0" fill="rgb(248,136,20)" rx="2" ry="2" />
<text  x="163.13" y="223.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (60 samples, 0.12%)</title><rect x="1038.9" y="197" width="1.5" height="15.0" fill="rgb(218,197,17)" rx="2" ry="2" />
<text  x="1041.89" y="207.5" ></text>
</g>
<g >
<title>utils::config_file::named_value&lt;unsigned long&gt;::the_value (6 samples, 0.01%)</title><rect x="1137.0" y="405" width="0.1" height="15.0" fill="rgb(236,9,3)" rx="2" ry="2" />
<text  x="1139.95" y="415.5" ></text>
</g>
<g >
<title>seastar::internal::future_base::future_base (12 samples, 0.02%)</title><rect x="759.8" y="405" width="0.3" height="15.0" fill="rgb(245,3,30)" rx="2" ry="2" />
<text  x="762.79" y="415.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; const*, nonwrapping_interval&lt;clustering_key_prefix&gt;*&gt; (32 samples, 0.07%)</title><rect x="1120.4" y="357" width="0.8" height="15.0" fill="rgb(228,91,6)" rx="2" ry="2" />
<text  x="1123.41" y="367.5" ></text>
</g>
<g >
<title>service::client_state::has_column_family_access (7 samples, 0.01%)</title><rect x="21.1" y="469" width="0.2" height="15.0" fill="rgb(244,114,25)" rx="2" ry="2" />
<text  x="24.11" y="479.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::take (8 samples, 0.02%)</title><rect x="698.4" y="437" width="0.2" height="15.0" fill="rgb(213,50,11)" rx="2" ry="2" />
<text  x="701.41" y="447.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (22 samples, 0.05%)</title><rect x="589.7" y="389" width="0.5" height="15.0" fill="rgb(232,86,35)" rx="2" ry="2" />
<text  x="592.69" y="399.5" ></text>
</g>
<g >
<title>tombstone::apply (14 samples, 0.03%)</title><rect x="385.4" y="197" width="0.3" height="15.0" fill="rgb(246,172,49)" rx="2" ry="2" />
<text  x="388.41" y="207.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;schema const&gt;::operator= (15 samples, 0.03%)</title><rect x="1047.5" y="277" width="0.4" height="15.0" fill="rgb(226,108,49)" rx="2" ry="2" />
<text  x="1050.51" y="287.5" ></text>
</g>
<g >
<title>locator::token_metadata_impl::first_token_index (16 samples, 0.03%)</title><rect x="1089.5" y="277" width="0.4" height="15.0" fill="rgb(205,209,6)" rx="2" ry="2" />
<text  x="1092.51" y="287.5" ></text>
</g>
<g >
<title>partition_snapshot::partition_tombstone (5 samples, 0.01%)</title><rect x="505.9" y="245" width="0.1" height="15.0" fill="rgb(222,124,25)" rx="2" ry="2" />
<text  x="508.90" y="255.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment (128 samples, 0.26%)</title><rect x="152.9" y="229" width="3.1" height="15.0" fill="rgb(225,35,34)" rx="2" ry="2" />
<text  x="155.85" y="239.5" ></text>
</g>
<g >
<title>cql3::restrictions::(anonymous namespace)::range_from_bytes (879 samples, 1.81%)</title><rect x="912.7" y="405" width="21.5" height="15.0" fill="rgb(248,116,39)" rx="2" ry="2" />
<text  x="915.75" y="415.5" >c..</text>
</g>
<g >
<title>partition_snapshot::slide_to_oldest (20 samples, 0.04%)</title><rect x="564.5" y="277" width="0.5" height="15.0" fill="rgb(220,89,42)" rx="2" ry="2" />
<text  x="567.50" y="287.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::execute (15 samples, 0.03%)</title><rect x="987.8" y="293" width="0.4" height="15.0" fill="rgb(242,199,54)" rx="2" ry="2" />
<text  x="990.79" y="303.5" ></text>
</g>
<g >
<title>std::__optional_hash_call_base&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, true&gt;::operator (24 samples, 0.05%)</title><rect x="799.5" y="85" width="0.6" height="15.0" fill="rgb(206,102,40)" rx="2" ry="2" />
<text  x="802.47" y="95.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (21 samples, 0.04%)</title><rect x="68.0" y="389" width="0.5" height="15.0" fill="rgb(219,192,28)" rx="2" ry="2" />
<text  x="70.99" y="399.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (12 samples, 0.02%)</title><rect x="70.1" y="373" width="0.3" height="15.0" fill="rgb(239,58,0)" rx="2" ry="2" />
<text  x="73.09" y="383.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::query_processor::process_authorized_statement (6 samples, 0.01%)</title><rect x="22.6" y="517" width="0.1" height="15.0" fill="rgb(245,171,0)" rx="2" ry="2" />
<text  x="25.59" y="527.5" ></text>
</g>
<g >
<title>auth::get_permissions (1,155 samples, 2.38%)</title><rect x="779.1" y="309" width="28.1" height="15.0" fill="rgb(218,156,42)" rx="2" ry="2" />
<text  x="782.08" y="319.5" >a..</text>
</g>
<g >
<title>std::hash&lt;auth::resource&gt;::hash_data (108 samples, 0.22%)</title><rect x="797.4" y="133" width="2.7" height="15.0" fill="rgb(229,193,19)" rx="2" ry="2" />
<text  x="800.42" y="143.5" ></text>
</g>
<g >
<title>operator new (82 samples, 0.17%)</title><rect x="972.9" y="357" width="2.0" height="15.0" fill="rgb(234,126,14)" rx="2" ry="2" />
<text  x="975.89" y="367.5" ></text>
</g>
<g >
<title>reader_permit::used_guard::~used_guard (410 samples, 0.85%)</title><rect x="63.7" y="453" width="10.0" height="15.0" fill="rgb(238,32,27)" rx="2" ry="2" />
<text  x="66.73" y="463.5" ></text>
</g>
<g >
<title>schema::column_at (70 samples, 0.14%)</title><rect x="382.9" y="165" width="1.7" height="15.0" fill="rgb(238,0,29)" rx="2" ry="2" />
<text  x="385.92" y="175.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (25 samples, 0.05%)</title><rect x="166.4" y="149" width="0.6" height="15.0" fill="rgb(227,220,10)" rx="2" ry="2" />
<text  x="169.39" y="159.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (16 samples, 0.03%)</title><rect x="294.8" y="245" width="0.4" height="15.0" fill="rgb(246,138,3)" rx="2" ry="2" />
<text  x="297.78" y="255.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::inet_address (13 samples, 0.03%)</title><rect x="981.8" y="357" width="0.3" height="15.0" fill="rgb(254,206,25)" rx="2" ry="2" />
<text  x="984.78" y="367.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;clustering_key_prefix&gt;::wrapping_interval (20 samples, 0.04%)</title><rect x="1114.6" y="357" width="0.5" height="15.0" fill="rgb(251,0,51)" rx="2" ry="2" />
<text  x="1117.62" y="367.5" ></text>
</g>
<g >
<title>seastar::promise&lt;void&gt;::promise (24 samples, 0.05%)</title><rect x="624.3" y="485" width="0.6" height="15.0" fill="rgb(235,113,42)" rx="2" ry="2" />
<text  x="627.34" y="495.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::iterator_at (7 samples, 0.01%)</title><rect x="1065.2" y="293" width="0.2" height="15.0" fill="rgb(207,14,28)" rx="2" ry="2" />
<text  x="1068.25" y="303.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (7 samples, 0.01%)</title><rect x="724.5" y="293" width="0.1" height="15.0" fill="rgb(212,171,40)" rx="2" ry="2" />
<text  x="727.47" y="303.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally&lt;single_node_cql_env::execute_prepared_with_qo (11 samples, 0.02%)</title><rect x="718.8" y="453" width="0.3" height="15.0" fill="rgb(207,61,14)" rx="2" ry="2" />
<text  x="721.85" y="463.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::lower_bound&lt;mutation_partition, schema const&amp;, nonwrapping_interval&lt;clustering_key_prefix&gt; const&amp;&gt; (15 samples, 0.03%)</title><rect x="240.9" y="229" width="0.4" height="15.0" fill="rgb(254,9,36)" rx="2" ry="2" />
<text  x="243.95" y="239.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (6 samples, 0.01%)</title><rect x="903.8" y="293" width="0.2" height="15.0" fill="rgb(207,64,36)" rx="2" ry="2" />
<text  x="906.81" y="303.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (5 samples, 0.01%)</title><rect x="557.8" y="293" width="0.1" height="15.0" fill="rgb(231,40,30)" rx="2" ry="2" />
<text  x="560.75" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (11 samples, 0.02%)</title><rect x="439.9" y="261" width="0.2" height="15.0" fill="rgb(212,22,4)" rx="2" ry="2" />
<text  x="442.87" y="271.5" ></text>
</g>
<g >
<title>service::storage_proxy_stats::split_stats::get_ep_stat (16 samples, 0.03%)</title><rect x="1054.6" y="293" width="0.4" height="15.0" fill="rgb(222,133,29)" rx="2" ry="2" />
<text  x="1057.60" y="303.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate_to_raw_view (900 samples, 1.86%)</title><rect x="885.3" y="357" width="21.9" height="15.0" fill="rgb(254,69,46)" rx="2" ry="2" />
<text  x="888.32" y="367.5" >c..</text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_range_tombstone (185 samples, 0.38%)</title><rect x="217.1" y="213" width="4.5" height="15.0" fill="rgb(247,21,6)" rx="2" ry="2" />
<text  x="220.05" y="223.5" ></text>
</g>
<g >
<title>service::storage_proxy::query (6,108 samples, 12.61%)</title><rect x="958.4" y="405" width="148.8" height="15.0" fill="rgb(240,220,6)" rx="2" ry="2" />
<text  x="961.39" y="415.5" >service::storage_pr..</text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value, std::allocator&lt;cql3::raw_value&gt; &gt;::~vector (14 samples, 0.03%)</title><rect x="670.8" y="453" width="0.4" height="15.0" fill="rgb(241,13,33)" rx="2" ry="2" />
<text  x="673.82" y="463.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::clear (9 samples, 0.02%)</title><rect x="967.0" y="373" width="0.2" height="15.0" fill="rgb(228,19,17)" rx="2" ry="2" />
<text  x="969.99" y="383.5" ></text>
</g>
<g >
<title>seastar::reactor::del_timer (31 samples, 0.06%)</title><rect x="69.2" y="373" width="0.7" height="15.0" fill="rgb(228,181,27)" rx="2" ry="2" />
<text  x="72.16" y="383.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (5 samples, 0.01%)</title><rect x="1004.2" y="293" width="0.1" height="15.0" fill="rgb(251,133,10)" rx="2" ry="2" />
<text  x="1007.16" y="303.5" ></text>
</g>
<g >
<title>std::forward_as_tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const&amp;, auth::resource&gt; (8 samples, 0.02%)</title><rect x="814.3" y="389" width="0.2" height="15.0" fill="rgb(206,49,29)" rx="2" ry="2" />
<text  x="817.35" y="399.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_destroy_data_aux (21 samples, 0.04%)</title><rect x="365.3" y="149" width="0.5" height="15.0" fill="rgb(236,153,15)" rx="2" ry="2" />
<text  x="368.31" y="159.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::get0 (8 samples, 0.02%)</title><rect x="74.2" y="453" width="0.2" height="15.0" fill="rgb(250,110,28)" rx="2" ry="2" />
<text  x="77.18" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (18 samples, 0.04%)</title><rect x="650.5" y="437" width="0.4" height="15.0" fill="rgb(248,75,19)" rx="2" ry="2" />
<text  x="653.48" y="447.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;auth::resource, auth::resource, std::allocator&lt;auth::resource&gt;, std::__detail::_Identity, std::equal_to&lt;auth::resource&gt;, std::hash&lt;auth::resource&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;::find (144 samples, 0.30%)</title><rect x="810.8" y="357" width="3.5" height="15.0" fill="rgb(238,156,48)" rx="2" ry="2" />
<text  x="813.77" y="367.5" ></text>
</g>
<g >
<title>absl::hash_internal::HashState::combine_contiguous (32 samples, 0.07%)</title><rect x="839.0" y="341" width="0.8" height="15.0" fill="rgb(218,119,39)" rx="2" ry="2" />
<text  x="841.97" y="351.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (14 samples, 0.03%)</title><rect x="1142.4" y="245" width="0.3" height="15.0" fill="rgb(220,215,29)" rx="2" ry="2" />
<text  x="1145.38" y="255.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::net::inet_address&gt;::operator (5 samples, 0.01%)</title><rect x="1154.9" y="421" width="0.1" height="15.0" fill="rgb(243,229,7)" rx="2" ry="2" />
<text  x="1157.90" y="431.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (17 samples, 0.04%)</title><rect x="698.6" y="453" width="0.4" height="15.0" fill="rgb(211,35,25)" rx="2" ry="2" />
<text  x="701.61" y="463.5" ></text>
</g>
<g >
<title>compound_wrapper&lt;partition_key, partition_key_view&gt;::make_empty (96 samples, 0.20%)</title><rect x="538.6" y="389" width="2.3" height="15.0" fill="rgb(208,198,0)" rx="2" ry="2" />
<text  x="541.59" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::~vector (6 samples, 0.01%)</title><rect x="580.0" y="357" width="0.2" height="15.0" fill="rgb(249,50,17)" rx="2" ry="2" />
<text  x="583.02" y="367.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::~timer (5 samples, 0.01%)</title><rect x="70.5" y="373" width="0.1" height="15.0" fill="rgb(209,116,7)" rx="2" ry="2" />
<text  x="73.48" y="383.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (119 samples, 0.25%)</title><rect x="916.4" y="373" width="2.9" height="15.0" fill="rgb(226,80,21)" rx="2" ry="2" />
<text  x="919.43" y="383.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::emplace_back&lt;std::_List_iterator&lt;flat_mutation_reader&gt; const&amp;, mutation_fragment&gt; (5 samples, 0.01%)</title><rect x="139.7" y="261" width="0.1" height="15.0" fill="rgb(219,15,48)" rx="2" ry="2" />
<text  x="142.72" y="271.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::check_queue_size (10 samples, 0.02%)</title><rect x="1027.4" y="197" width="0.3" height="15.0" fill="rgb(230,212,12)" rx="2" ry="2" />
<text  x="1030.44" y="207.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (13 samples, 0.03%)</title><rect x="297.4" y="261" width="0.3" height="15.0" fill="rgb(212,217,28)" rx="2" ry="2" />
<text  x="300.41" y="271.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt; &gt;::invoke&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (8 samples, 0.02%)</title><rect x="1003.8" y="293" width="0.2" height="15.0" fill="rgb(207,228,8)" rx="2" ry="2" />
<text  x="1006.84" y="303.5" ></text>
</g>
<g >
<title>query_result_builder::consume (6 samples, 0.01%)</title><rect x="387.1" y="229" width="0.1" height="15.0" fill="rgb(230,33,1)" rx="2" ry="2" />
<text  x="390.09" y="239.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_last_fragment_kind, 4ul&gt;::emplace_back&lt;std::_List_iterator&lt;flat_mutation_reader&gt;, mutation_fragment::kind&gt; (9 samples, 0.02%)</title><rect x="439.0" y="261" width="0.2" height="15.0" fill="rgb(234,61,44)" rx="2" ry="2" />
<text  x="442.02" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_clear (12 samples, 0.02%)</title><rect x="581.8" y="373" width="0.3" height="15.0" fill="rgb(232,102,41)" rx="2" ry="2" />
<text  x="584.82" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (14 samples, 0.03%)</title><rect x="397.5" y="165" width="0.3" height="15.0" fill="rgb(215,220,27)" rx="2" ry="2" />
<text  x="400.49" y="175.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (20 samples, 0.04%)</title><rect x="543.6" y="309" width="0.5" height="15.0" fill="rgb(228,80,4)" rx="2" ry="2" />
<text  x="546.58" y="319.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::has_token (34 samples, 0.07%)</title><rect x="948.3" y="373" width="0.8" height="15.0" fill="rgb(235,45,19)" rx="2" ry="2" />
<text  x="951.29" y="383.5" ></text>
</g>
<g >
<title>operator delete (74 samples, 0.15%)</title><rect x="91.6" y="437" width="1.8" height="15.0" fill="rgb(243,23,19)" rx="2" ry="2" />
<text  x="94.64" y="447.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;seastar::future&lt;void&gt; &gt;  (13 samples, 0.03%)</title><rect x="1175.5" y="469" width="0.3" height="15.0" fill="rgb(208,34,38)" rx="2" ry="2" />
<text  x="1178.46" y="479.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;dht::ring_position&gt;::wrapping_interval (42 samples, 0.09%)</title><rect x="928.1" y="357" width="1.0" height="15.0" fill="rgb(232,222,42)" rx="2" ry="2" />
<text  x="931.12" y="367.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (57 samples, 0.12%)</title><rect x="817.9" y="309" width="1.4" height="15.0" fill="rgb(235,33,30)" rx="2" ry="2" />
<text  x="820.88" y="319.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::term&gt;::~shared_ptr (5 samples, 0.01%)</title><rect x="1134.3" y="421" width="0.1" height="15.0" fill="rgb(237,192,26)" rx="2" ry="2" />
<text  x="1137.27" y="431.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (23 samples, 0.05%)</title><rect x="756.7" y="309" width="0.6" height="15.0" fill="rgb(235,122,18)" rx="2" ry="2" />
<text  x="759.72" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (15 samples, 0.03%)</title><rect x="1152.2" y="485" width="0.4" height="15.0" fill="rgb(249,95,30)" rx="2" ry="2" />
<text  x="1155.22" y="495.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::value (26 samples, 0.05%)</title><rect x="18.4" y="293" width="0.6" height="15.0" fill="rgb(245,122,29)" rx="2" ry="2" />
<text  x="21.35" y="303.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_requests (6 samples, 0.01%)</title><rect x="1056.9" y="357" width="0.2" height="15.0" fill="rgb(227,148,23)" rx="2" ry="2" />
<text  x="1059.92" y="367.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (5 samples, 0.01%)</title><rect x="1107.0" y="389" width="0.2" height="15.0" fill="rgb(224,111,41)" rx="2" ry="2" />
<text  x="1110.04" y="399.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (13 samples, 0.03%)</title><rect x="430.2" y="341" width="0.4" height="15.0" fill="rgb(246,10,38)" rx="2" ry="2" />
<text  x="433.25" y="351.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (9 samples, 0.02%)</title><rect x="274.4" y="293" width="0.2" height="15.0" fill="rgb(233,35,52)" rx="2" ry="2" />
<text  x="277.39" y="303.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (7 samples, 0.01%)</title><rect x="419.7" y="405" width="0.2" height="15.0" fill="rgb(213,223,37)" rx="2" ry="2" />
<text  x="422.73" y="415.5" ></text>
</g>
<g >
<title>std::function&lt;bool  (25 samples, 0.05%)</title><rect x="544.6" y="389" width="0.6" height="15.0" fill="rgb(211,153,1)" rx="2" ry="2" />
<text  x="547.60" y="399.5" ></text>
</g>
<g >
<title>logalloc::basic_region_impl::set_reclaiming_enabled (6 samples, 0.01%)</title><rect x="218.3" y="181" width="0.1" height="15.0" fill="rgb(224,65,41)" rx="2" ry="2" />
<text  x="221.30" y="191.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::remove_if&lt;row::compact_and_expire (5 samples, 0.01%)</title><rect x="683.8" y="261" width="0.1" height="15.0" fill="rgb(211,30,1)" rx="2" ry="2" />
<text  x="686.82" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (14 samples, 0.03%)</title><rect x="567.4" y="293" width="0.4" height="15.0" fill="rgb(245,73,24)" rx="2" ry="2" />
<text  x="570.45" y="303.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (22 samples, 0.05%)</title><rect x="690.3" y="453" width="0.5" height="15.0" fill="rgb(248,176,13)" rx="2" ry="2" />
<text  x="693.28" y="463.5" ></text>
</g>
<g >
<title>all (48,447 samples, 100%)</title><rect x="10.0" y="661" width="1180.0" height="15.0" fill="rgb(223,3,30)" rx="2" ry="2" />
<text  x="13.00" y="671.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::arm (12 samples, 0.02%)</title><rect x="996.1" y="277" width="0.3" height="15.0" fill="rgb(222,122,49)" rx="2" ry="2" />
<text  x="999.12" y="287.5" ></text>
</g>
<g >
<title>__tls_init (11 samples, 0.02%)</title><rect x="484.4" y="309" width="0.2" height="15.0" fill="rgb(228,166,18)" rx="2" ry="2" />
<text  x="487.37" y="319.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::do_refresh_state (525 samples, 1.08%)</title><rect x="228.2" y="229" width="12.7" height="15.0" fill="rgb(252,2,44)" rx="2" ry="2" />
<text  x="231.16" y="239.5" ></text>
</g>
<g >
<title>gms::gossiper::is_alive (8 samples, 0.02%)</title><rect x="1097.4" y="261" width="0.2" height="15.0" fill="rgb(248,166,17)" rx="2" ry="2" />
<text  x="1100.45" y="271.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;std::function&lt;flat_mutation_reader  (46 samples, 0.09%)</title><rect x="620.8" y="405" width="1.1" height="15.0" fill="rgb(228,1,10)" rx="2" ry="2" />
<text  x="623.81" y="415.5" ></text>
</g>
<g >
<title>write_fragmented&lt;managed_bytes_basic_view&lt; (48 samples, 0.10%)</title><rect x="932.1" y="341" width="1.2" height="15.0" fill="rgb(237,177,15)" rx="2" ry="2" />
<text  x="935.09" y="351.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_Optional_payload_base (26 samples, 0.05%)</title><rect x="1049.1" y="261" width="0.6" height="15.0" fill="rgb(212,83,39)" rx="2" ry="2" />
<text  x="1052.10" y="271.5" ></text>
</g>
<g >
<title>service::abstract_read_resolver::done (9 samples, 0.02%)</title><rect x="691.3" y="453" width="0.2" height="15.0" fill="rgb(232,183,32)" rx="2" ry="2" />
<text  x="694.28" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (16 samples, 0.03%)</title><rect x="707.3" y="485" width="0.4" height="15.0" fill="rgb(229,159,33)" rx="2" ry="2" />
<text  x="710.28" y="495.5" ></text>
</g>
<g >
<title>seastar::futurize_invoke&lt;seastar::future&lt;void&gt;  (4,976 samples, 10.27%)</title><rect x="290.2" y="341" width="121.2" height="15.0" fill="rgb(242,109,27)" rx="2" ry="2" />
<text  x="293.22" y="351.5" >seastar::futuri..</text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::contains&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (90 samples, 0.19%)</title><rect x="823.8" y="341" width="2.2" height="15.0" fill="rgb(249,69,45)" rx="2" ry="2" />
<text  x="826.80" y="351.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;dht::token, std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt;, std::allocator&lt;std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;dht::token&gt;, std::hash&lt;dht::token&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (196 samples, 0.40%)</title><rect x="1089.9" y="277" width="4.8" height="15.0" fill="rgb(218,102,9)" rx="2" ry="2" />
<text  x="1092.89" y="287.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (11 samples, 0.02%)</title><rect x="832.4" y="357" width="0.2" height="15.0" fill="rgb(250,202,53)" rx="2" ry="2" />
<text  x="835.37" y="367.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::push_mutation_fragment&lt;mutation_fragment&gt; (219 samples, 0.45%)</title><rect x="147.5" y="229" width="5.4" height="15.0" fill="rgb(254,97,5)" rx="2" ry="2" />
<text  x="150.52" y="239.5" ></text>
</g>
<g >
<title>nonwrapping_interval&lt;clustering_key_prefix&gt;::make_open_ended_both_sides (140 samples, 0.29%)</title><rect x="1113.0" y="389" width="3.4" height="15.0" fill="rgb(251,144,38)" rx="2" ry="2" />
<text  x="1116.01" y="399.5" ></text>
</g>
<g >
<title>operator new (29 samples, 0.06%)</title><rect x="451.8" y="325" width="0.7" height="15.0" fill="rgb(212,124,24)" rx="2" ry="2" />
<text  x="454.78" y="335.5" ></text>
</g>
<g >
<title>operator new (61 samples, 0.13%)</title><rect x="840.2" y="421" width="1.5" height="15.0" fill="rgb(209,81,45)" rx="2" ry="2" />
<text  x="843.22" y="431.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::emplace_back&lt;unsigned int const&amp;&gt; (9 samples, 0.02%)</title><rect x="1139.8" y="421" width="0.2" height="15.0" fill="rgb(228,9,13)" rx="2" ry="2" />
<text  x="1142.78" y="431.5" ></text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt;&amp;&gt; (25 samples, 0.05%)</title><rect x="845.6" y="357" width="0.6" height="15.0" fill="rgb(223,128,16)" rx="2" ry="2" />
<text  x="848.55" y="367.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_wrapped_common&lt;false, seastar::future&lt;void&gt;, seastar::future&lt;void&gt;::handle_exception&lt;service::abstract_read_executor::execute (12 samples, 0.02%)</title><rect x="688.8" y="453" width="0.3" height="15.0" fill="rgb(230,83,15)" rx="2" ry="2" />
<text  x="691.84" y="463.5" ></text>
</g>
<g >
<title>schema::position (11 samples, 0.02%)</title><rect x="1128.0" y="421" width="0.3" height="15.0" fill="rgb(234,124,10)" rx="2" ry="2" />
<text  x="1131.04" y="431.5" ></text>
</g>
<g >
<title>_ZSt5applyIZN7seastar8internal12do_with_implISt8optionalIN4auth8resourceEEZNK7service12client_state20check_has_permissionENS4_12command_descEE3$_7JEEEDaOT_OT0_DpOT1_EUlDpOT_E_St5tupleIJOS6_EEEDcSC_SE_ (65 samples, 0.13%)</title><rect x="773.4" y="325" width="1.6" height="15.0" fill="rgb(237,129,46)" rx="2" ry="2" />
<text  x="776.41" y="335.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::relation (15 samples, 0.03%)</title><rect x="19.1" y="341" width="0.4" height="15.0" fill="rgb(214,66,1)" rx="2" ry="2" />
<text  x="22.13" y="351.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (17 samples, 0.04%)</title><rect x="935.7" y="405" width="0.4" height="15.0" fill="rgb(241,52,7)" rx="2" ry="2" />
<text  x="938.69" y="415.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (5 samples, 0.01%)</title><rect x="809.3" y="293" width="0.1" height="15.0" fill="rgb(232,27,6)" rx="2" ry="2" />
<text  x="812.26" y="303.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (6 samples, 0.01%)</title><rect x="17.6" y="309" width="0.1" height="15.0" fill="rgb(233,223,41)" rx="2" ry="2" />
<text  x="20.55" y="319.5" ></text>
</g>
<g >
<title>std::hash&lt;std::basic_string_view&lt;signed char, std::char_traits&lt;signed char&gt; &gt; &gt;::operator (80 samples, 0.17%)</title><rect x="743.0" y="277" width="2.0" height="15.0" fill="rgb(245,208,32)" rx="2" ry="2" />
<text  x="746.01" y="287.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::schedule&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::make_data_requests (6 samples, 0.01%)</title><rect x="998.4" y="293" width="0.2" height="15.0" fill="rgb(239,6,31)" rx="2" ry="2" />
<text  x="1001.44" y="303.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (10 samples, 0.02%)</title><rect x="260.8" y="341" width="0.2" height="15.0" fill="rgb(247,147,21)" rx="2" ry="2" />
<text  x="263.80" y="351.5" ></text>
</g>
<g >
<title>operator new (21 samples, 0.04%)</title><rect x="545.3" y="405" width="0.5" height="15.0" fill="rgb(242,183,2)" rx="2" ry="2" />
<text  x="548.28" y="415.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::allocate (6 samples, 0.01%)</title><rect x="277.7" y="309" width="0.1" height="15.0" fill="rgb(254,212,36)" rx="2" ry="2" />
<text  x="280.70" y="319.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::timer (5 samples, 0.01%)</title><rect x="1034.8" y="165" width="0.1" height="15.0" fill="rgb(219,70,5)" rx="2" ry="2" />
<text  x="1037.82" y="175.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (7 samples, 0.01%)</title><rect x="528.8" y="245" width="0.1" height="15.0" fill="rgb(243,221,25)" rx="2" ry="2" />
<text  x="531.77" y="255.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::clone (12 samples, 0.02%)</title><rect x="456.1" y="325" width="0.3" height="15.0" fill="rgb(214,12,36)" rx="2" ry="2" />
<text  x="459.07" y="335.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;service::query_state&gt;::~shared_ptr_count_for (52 samples, 0.11%)</title><rect x="666.1" y="485" width="1.3" height="15.0" fill="rgb(250,114,7)" rx="2" ry="2" />
<text  x="669.14" y="495.5" ></text>
</g>
<g >
<title>operator new (19 samples, 0.04%)</title><rect x="621.0" y="389" width="0.5" height="15.0" fill="rgb(251,84,10)" rx="2" ry="2" />
<text  x="624.01" y="399.5" ></text>
</g>
<g >
<title>free (17 samples, 0.04%)</title><rect x="36.2" y="421" width="0.4" height="15.0" fill="rgb(237,175,13)" rx="2" ry="2" />
<text  x="39.18" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (28 samples, 0.06%)</title><rect x="154.4" y="181" width="0.7" height="15.0" fill="rgb(217,96,48)" rx="2" ry="2" />
<text  x="157.39" y="191.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt;::~_Variant_storage (7 samples, 0.01%)</title><rect x="899.4" y="277" width="0.1" height="15.0" fill="rgb(206,46,6)" rx="2" ry="2" />
<text  x="902.35" y="287.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::make_data_requests (13 samples, 0.03%)</title><rect x="1000.9" y="261" width="0.3" height="15.0" fill="rgb(225,91,40)" rx="2" ry="2" />
<text  x="1003.90" y="271.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::get_promise (8 samples, 0.02%)</title><rect x="1014.8" y="277" width="0.2" height="15.0" fill="rgb(208,227,53)" rx="2" ry="2" />
<text  x="1017.80" y="287.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::set_urgent_state (20 samples, 0.04%)</title><rect x="656.1" y="485" width="0.5" height="15.0" fill="rgb(253,215,32)" rx="2" ry="2" />
<text  x="659.08" y="495.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (7 samples, 0.01%)</title><rect x="610.9" y="389" width="0.2" height="15.0" fill="rgb(216,62,24)" rx="2" ry="2" />
<text  x="613.92" y="399.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (15 samples, 0.03%)</title><rect x="655.6" y="469" width="0.3" height="15.0" fill="rgb(213,169,14)" rx="2" ry="2" />
<text  x="658.57" y="479.5" ></text>
</g>
<g >
<title>clustering_row::external_memory_usage (24 samples, 0.05%)</title><rect x="164.7" y="181" width="0.6" height="15.0" fill="rgb(232,4,7)" rx="2" ry="2" />
<text  x="167.71" y="191.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::pop_mutation_fragment (58 samples, 0.12%)</title><rect x="297.7" y="261" width="1.4" height="15.0" fill="rgb(243,164,49)" rx="2" ry="2" />
<text  x="300.72" y="271.5" ></text>
</g>
<g >
<title>std::default_delete&lt;mutation_fragment::data&gt;::operator (5 samples, 0.01%)</title><rect x="401.3" y="261" width="0.2" height="15.0" fill="rgb(224,207,31)" rx="2" ry="2" />
<text  x="404.34" y="271.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::forward_to (5 samples, 0.01%)</title><rect x="48.3" y="485" width="0.1" height="15.0" fill="rgb(252,169,37)" rx="2" ry="2" />
<text  x="51.31" y="495.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_map&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::at&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt; &gt; (198 samples, 0.41%)</title><rect x="754.6" y="373" width="4.8" height="15.0" fill="rgb(209,198,53)" rx="2" ry="2" />
<text  x="757.58" y="383.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::process_results (468 samples, 0.97%)</title><rect x="642.1" y="485" width="11.4" height="15.0" fill="rgb(247,51,1)" rx="2" ry="2" />
<text  x="645.12" y="495.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (23 samples, 0.05%)</title><rect x="1168.7" y="469" width="0.6" height="15.0" fill="rgb(224,37,40)" rx="2" ry="2" />
<text  x="1171.71" y="479.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (6 samples, 0.01%)</title><rect x="1123.6" y="405" width="0.2" height="15.0" fill="rgb(220,159,9)" rx="2" ry="2" />
<text  x="1126.63" y="415.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (7 samples, 0.01%)</title><rect x="190.0" y="101" width="0.2" height="15.0" fill="rgb(205,63,21)" rx="2" ry="2" />
<text  x="192.99" y="111.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (21 samples, 0.04%)</title><rect x="1127.5" y="421" width="0.5" height="15.0" fill="rgb(243,87,17)" rx="2" ry="2" />
<text  x="1130.48" y="431.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (15 samples, 0.03%)</title><rect x="845.8" y="341" width="0.4" height="15.0" fill="rgb(218,34,33)" rx="2" ry="2" />
<text  x="848.79" y="351.5" ></text>
</g>
<g >
<title>bytes_view_hasher::update (5 samples, 0.01%)</title><rect x="725.0" y="309" width="0.1" height="15.0" fill="rgb(234,42,41)" rx="2" ry="2" />
<text  x="728.01" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (11 samples, 0.02%)</title><rect x="668.2" y="469" width="0.3" height="15.0" fill="rgb(209,109,44)" rx="2" ry="2" />
<text  x="671.21" y="479.5" ></text>
</g>
<g >
<title>seastar::reactor::del_timer (8 samples, 0.02%)</title><rect x="68.5" y="389" width="0.2" height="15.0" fill="rgb(214,101,2)" rx="2" ry="2" />
<text  x="71.50" y="399.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (31 samples, 0.06%)</title><rect x="834.7" y="421" width="0.8" height="15.0" fill="rgb(232,77,16)" rx="2" ry="2" />
<text  x="837.71" y="431.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (14 samples, 0.03%)</title><rect x="283.3" y="405" width="0.3" height="15.0" fill="rgb(210,74,35)" rx="2" ry="2" />
<text  x="286.28" y="415.5" ></text>
</g>
<g >
<title>operator new (68 samples, 0.14%)</title><rect x="1042.8" y="261" width="1.6" height="15.0" fill="rgb(248,164,22)" rx="2" ry="2" />
<text  x="1045.76" y="271.5" ></text>
</g>
<g >
<title>operator delete (35 samples, 0.07%)</title><rect x="588.8" y="389" width="0.9" height="15.0" fill="rgb(215,200,6)" rx="2" ry="2" />
<text  x="591.83" y="399.5" ></text>
</g>
<g >
<title>operator new (57 samples, 0.12%)</title><rect x="749.3" y="405" width="1.4" height="15.0" fill="rgb(240,43,50)" rx="2" ry="2" />
<text  x="752.27" y="415.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_state&lt;std::tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;, seastar::future&lt;void&gt; &gt;::do_with_state&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const&amp;, auth::resource&gt; (64 samples, 0.13%)</title><rect x="763.0" y="373" width="1.6" height="15.0" fill="rgb(227,174,23)" rx="2" ry="2" />
<text  x="766.03" y="383.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (6 samples, 0.01%)</title><rect x="833.0" y="437" width="0.2" height="15.0" fill="rgb(239,139,43)" rx="2" ry="2" />
<text  x="836.01" y="447.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::on_permit_created (20 samples, 0.04%)</title><rect x="1041.0" y="197" width="0.5" height="15.0" fill="rgb(208,137,52)" rx="2" ry="2" />
<text  x="1043.99" y="207.5" ></text>
</g>
<g >
<title>partition_version_ref::operator (20 samples, 0.04%)</title><rect x="507.2" y="229" width="0.5" height="15.0" fill="rgb(217,108,51)" rx="2" ry="2" />
<text  x="510.21" y="239.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (14 samples, 0.03%)</title><rect x="767.0" y="357" width="0.3" height="15.0" fill="rgb(210,151,49)" rx="2" ry="2" />
<text  x="770.00" y="367.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (86 samples, 0.18%)</title><rect x="147.9" y="213" width="2.1" height="15.0" fill="rgb(232,147,7)" rx="2" ry="2" />
<text  x="150.86" y="223.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (6 samples, 0.01%)</title><rect x="1125.0" y="405" width="0.2" height="15.0" fill="rgb(228,100,51)" rx="2" ry="2" />
<text  x="1128.02" y="415.5" ></text>
</g>
<g >
<title>database::get_unlimited_query_max_result_size (17 samples, 0.04%)</title><rect x="1125.2" y="421" width="0.4" height="15.0" fill="rgb(239,55,47)" rx="2" ry="2" />
<text  x="1128.19" y="431.5" ></text>
</g>
<g >
<title>std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;auth::role_or_anonymous&gt;, seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (22 samples, 0.05%)</title><rect x="806.7" y="277" width="0.5" height="15.0" fill="rgb(245,34,32)" rx="2" ry="2" />
<text  x="809.68" y="287.5" ></text>
</g>
<g >
<title>seastar::basic_semaphore&lt;seastar::semaphore_default_exception_factory, std::chrono::_V2::steady_clock&gt;::signal (10 samples, 0.02%)</title><rect x="35.9" y="421" width="0.2" height="15.0" fill="rgb(228,161,10)" rx="2" ry="2" />
<text  x="38.87" y="431.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (5 samples, 0.01%)</title><rect x="1034.3" y="165" width="0.1" height="15.0" fill="rgb(212,21,35)" rx="2" ry="2" />
<text  x="1037.26" y="175.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::_M_range_initialize&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; const*&gt; (175 samples, 0.36%)</title><rect x="1116.9" y="373" width="4.3" height="15.0" fill="rgb(227,186,36)" rx="2" ry="2" />
<text  x="1119.93" y="383.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::update_and_check (12 samples, 0.02%)</title><rect x="327.9" y="181" width="0.2" height="15.0" fill="rgb(208,159,21)" rx="2" ry="2" />
<text  x="330.85" y="191.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (5 samples, 0.01%)</title><rect x="510.8" y="325" width="0.1" height="15.0" fill="rgb(232,24,18)" rx="2" ry="2" />
<text  x="513.79" y="335.5" ></text>
</g>
<g >
<title>auth::resource::parent (106 samples, 0.22%)</title><rect x="775.1" y="325" width="2.5" height="15.0" fill="rgb(211,33,39)" rx="2" ry="2" />
<text  x="778.06" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (20 samples, 0.04%)</title><rect x="545.3" y="389" width="0.5" height="15.0" fill="rgb(241,121,16)" rx="2" ry="2" />
<text  x="548.31" y="399.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::on_new_range (596 samples, 1.23%)</title><rect x="227.8" y="261" width="14.6" height="15.0" fill="rgb(205,54,37)" rx="2" ry="2" />
<text  x="230.84" y="271.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::guard (9 samples, 0.02%)</title><rect x="524.4" y="309" width="0.2" height="15.0" fill="rgb(232,57,16)" rx="2" ry="2" />
<text  x="527.41" y="319.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;std::optional&lt;clustering_key_prefix&gt; &gt;::dispose (5 samples, 0.01%)</title><rect x="416.4" y="373" width="0.1" height="15.0" fill="rgb(238,1,7)" rx="2" ry="2" />
<text  x="419.41" y="383.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;query::result_memory_accounter&gt;::move_it (16 samples, 0.03%)</title><rect x="603.3" y="437" width="0.3" height="15.0" fill="rgb(242,212,54)" rx="2" ry="2" />
<text  x="606.25" y="447.5" ></text>
</g>
<g >
<title>database::do_apply (43 samples, 0.09%)</title><rect x="1141.0" y="341" width="1.1" height="15.0" fill="rgb(230,141,27)" rx="2" ry="2" />
<text  x="1144.02" y="351.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::clear (8 samples, 0.02%)</title><rect x="74.9" y="453" width="0.2" height="15.0" fill="rgb(223,65,35)" rx="2" ry="2" />
<text  x="77.86" y="463.5" ></text>
</g>
<g >
<title>operator new (23 samples, 0.05%)</title><rect x="240.2" y="181" width="0.5" height="15.0" fill="rgb(228,63,8)" rx="2" ry="2" />
<text  x="243.17" y="191.5" ></text>
</g>
<g >
<title>utils::loading_shared_values&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater, 256ul&gt;::find&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt; &gt; (193 samples, 0.40%)</title><rect x="722.8" y="389" width="4.7" height="15.0" fill="rgb(234,92,14)" rx="2" ry="2" />
<text  x="725.82" y="399.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;reader_permit::impl, true&gt;::make&lt;reader_concurrency_semaphore&amp;, schema const* const&amp;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;&amp;, reader_resources&amp;, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;&amp;&gt; (123 samples, 0.25%)</title><rect x="1038.6" y="229" width="3.0" height="15.0" fill="rgb(230,153,38)" rx="2" ry="2" />
<text  x="1041.58" y="239.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (15 samples, 0.03%)</title><rect x="853.8" y="405" width="0.4" height="15.0" fill="rgb(225,184,10)" rx="2" ry="2" />
<text  x="856.81" y="415.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::do_fill_buffer (3,414 samples, 7.05%)</title><rect x="144.6" y="261" width="83.2" height="15.0" fill="rgb(232,151,14)" rx="2" ry="2" />
<text  x="147.64" y="271.5" >partition..</text>
</g>
<g >
<title>make_partition_snapshot_flat_reader_from_snp_schema (1,018 samples, 2.10%)</title><rect x="486.0" y="325" width="24.8" height="15.0" fill="rgb(252,85,19)" rx="2" ry="2" />
<text  x="489.00" y="335.5" >m..</text>
</g>
<g >
<title>std::unique_ptr&lt;bytes_ostream::chunk, std::default_delete&lt;bytes_ostream::chunk&gt; &gt;::~unique_ptr (11 samples, 0.02%)</title><rect x="619.8" y="437" width="0.2" height="15.0" fill="rgb(246,56,1)" rx="2" ry="2" />
<text  x="622.77" y="447.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::size (6 samples, 0.01%)</title><rect x="949.7" y="405" width="0.1" height="15.0" fill="rgb(228,112,17)" rx="2" ry="2" />
<text  x="952.70" y="415.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::never_speculating_read_executor&gt;::~shared_ptr (5 samples, 0.01%)</title><rect x="982.7" y="357" width="0.1" height="15.0" fill="rgb(224,172,35)" rx="2" ry="2" />
<text  x="985.65" y="367.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_restrictions::size (5 samples, 0.01%)</title><rect x="647.2" y="453" width="0.1" height="15.0" fill="rgb(223,193,54)" rx="2" ry="2" />
<text  x="650.22" y="463.5" ></text>
</g>
<g >
<title>seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;::swap (32 samples, 0.07%)</title><rect x="721.4" y="405" width="0.8" height="15.0" fill="rgb(247,114,19)" rx="2" ry="2" />
<text  x="724.41" y="415.5" ></text>
</g>
<g >
<title>utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (38 samples, 0.08%)</title><rect x="788.0" y="149" width="0.9" height="15.0" fill="rgb(215,55,53)" rx="2" ry="2" />
<text  x="791.00" y="159.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_live_endpoints (732 samples, 1.51%)</title><rect x="1080.0" y="325" width="17.8" height="15.0" fill="rgb(248,153,9)" rx="2" ry="2" />
<text  x="1083.01" y="335.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::move_it (6 samples, 0.01%)</title><rect x="981.0" y="357" width="0.2" height="15.0" fill="rgb(234,97,6)" rx="2" ry="2" />
<text  x="984.02" y="367.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::clear (5 samples, 0.01%)</title><rect x="710.3" y="501" width="0.2" height="15.0" fill="rgb(220,51,3)" rx="2" ry="2" />
<text  x="713.35" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value_view, std::allocator&lt;cql3::raw_value_view&gt; &gt;::~vector (37 samples, 0.08%)</title><rect x="671.2" y="453" width="0.9" height="15.0" fill="rgb(207,55,12)" rx="2" ry="2" />
<text  x="674.16" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::emplace_back&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; (8 samples, 0.02%)</title><rect x="18.0" y="293" width="0.2" height="15.0" fill="rgb(234,64,16)" rx="2" ry="2" />
<text  x="20.96" y="303.5" ></text>
</g>
<g >
<title>seastar::hrtimer_aio_completion::complete_with (30 samples, 0.06%)</title><rect x="1176.9" y="469" width="0.7" height="15.0" fill="rgb(206,4,26)" rx="2" ry="2" />
<text  x="1179.90" y="479.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;mutation_reader_merger::reader_and_last_fragment_kind*, mutation_reader_merger::prepare_next (672 samples, 1.39%)</title><rect x="124.8" y="293" width="16.3" height="15.0" fill="rgb(218,74,35)" rx="2" ry="2" />
<text  x="127.77" y="303.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (7 samples, 0.01%)</title><rect x="488.2" y="309" width="0.2" height="15.0" fill="rgb(243,142,52)" rx="2" ry="2" />
<text  x="491.19" y="319.5" ></text>
</g>
<g >
<title>seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::expand (237 samples, 0.49%)</title><rect x="271.9" y="309" width="5.8" height="15.0" fill="rgb(246,124,25)" rx="2" ry="2" />
<text  x="274.88" y="319.5" ></text>
</g>
<g >
<title>free (106 samples, 0.22%)</title><rect x="395.2" y="181" width="2.6" height="15.0" fill="rgb(218,5,21)" rx="2" ry="2" />
<text  x="398.25" y="191.5" ></text>
</g>
<g >
<title>_ZSt5applyIZN7seastar8internal12do_with_implIN4auth17role_or_anonymousEZNS3_15get_permissionsERKNS3_7serviceERKNS3_18authenticated_userERKNS3_8resourceEE3$_9JEEEDaOT_OT0_DpOT1_EUlDpOT_E_St5tupleIJOS4_EEEDcSG_SI_ (88 samples, 0.18%)</title><rect x="779.6" y="293" width="2.1" height="15.0" fill="rgb(237,92,11)" rx="2" ry="2" />
<text  x="782.59" y="303.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::on_permit_created (12 samples, 0.02%)</title><rect x="1040.4" y="213" width="0.3" height="15.0" fill="rgb(246,197,44)" rx="2" ry="2" />
<text  x="1043.38" y="223.5" ></text>
</g>
<g >
<title>auth::data_resource_view::keyspace (11 samples, 0.02%)</title><rect x="812.8" y="309" width="0.3" height="15.0" fill="rgb(242,80,4)" rx="2" ry="2" />
<text  x="815.79" y="319.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;flat_mutation_reader::peek (6 samples, 0.01%)</title><rect x="417.3" y="405" width="0.2" height="15.0" fill="rgb(236,172,48)" rx="2" ry="2" />
<text  x="420.34" y="415.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;mutation_fragment&gt;::allocate (7 samples, 0.01%)</title><rect x="275.2" y="277" width="0.1" height="15.0" fill="rgb(207,173,21)" rx="2" ry="2" />
<text  x="278.17" y="287.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (28 samples, 0.06%)</title><rect x="459.5" y="277" width="0.7" height="15.0" fill="rgb(250,165,45)" rx="2" ry="2" />
<text  x="462.50" y="287.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::operator (7 samples, 0.01%)</title><rect x="800.1" y="149" width="0.2" height="15.0" fill="rgb(223,210,8)" rx="2" ry="2" />
<text  x="803.10" y="159.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (31 samples, 0.06%)</title><rect x="523.3" y="261" width="0.8" height="15.0" fill="rgb(214,142,9)" rx="2" ry="2" />
<text  x="526.34" y="271.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (14 samples, 0.03%)</title><rect x="319.0" y="197" width="0.3" height="15.0" fill="rgb(207,173,18)" rx="2" ry="2" />
<text  x="321.99" y="207.5" ></text>
</g>
<g >
<title>cql3::raw_value::to_view (6 samples, 0.01%)</title><rect x="849.0" y="389" width="0.1" height="15.0" fill="rgb(245,192,6)" rx="2" ry="2" />
<text  x="851.98" y="399.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (8 samples, 0.02%)</title><rect x="1064.9" y="261" width="0.2" height="15.0" fill="rgb(212,195,4)" rx="2" ry="2" />
<text  x="1067.90" y="271.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (11 samples, 0.02%)</title><rect x="1064.6" y="261" width="0.3" height="15.0" fill="rgb(208,155,25)" rx="2" ry="2" />
<text  x="1067.64" y="271.5" ></text>
</g>
<g >
<title>cql3::expr::possible_lhs_values (18 samples, 0.04%)</title><rect x="877.7" y="421" width="0.4" height="15.0" fill="rgb(223,8,49)" rx="2" ry="2" />
<text  x="880.65" y="431.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (5 samples, 0.01%)</title><rect x="847.0" y="405" width="0.2" height="15.0" fill="rgb(245,50,5)" rx="2" ry="2" />
<text  x="850.04" y="415.5" ></text>
</g>
<g >
<title>seastar::promise&lt;void&gt;::promise (10 samples, 0.02%)</title><rect x="1034.6" y="165" width="0.2" height="15.0" fill="rgb(225,125,20)" rx="2" ry="2" />
<text  x="1037.56" y="175.5" ></text>
</g>
<g >
<title>mutation_partition::upper_bound (10 samples, 0.02%)</title><rect x="233.4" y="197" width="0.2" height="15.0" fill="rgb(248,98,10)" rx="2" ry="2" />
<text  x="236.40" y="207.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::iterator_at (5 samples, 0.01%)</title><rect x="838.6" y="373" width="0.1" height="15.0" fill="rgb(228,111,0)" rx="2" ry="2" />
<text  x="841.58" y="383.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (204 samples, 0.42%)</title><rect x="740.0" y="341" width="5.0" height="15.0" fill="rgb(206,124,46)" rx="2" ry="2" />
<text  x="743.04" y="351.5" ></text>
</g>
<g >
<title>absl::container_internal::operator== (13 samples, 0.03%)</title><rect x="819.6" y="325" width="0.3" height="15.0" fill="rgb(237,161,52)" rx="2" ry="2" />
<text  x="822.56" y="335.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (37 samples, 0.08%)</title><rect x="796.1" y="117" width="0.9" height="15.0" fill="rgb(230,210,4)" rx="2" ry="2" />
<text  x="799.13" y="127.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_Optional_payload_base (12 samples, 0.02%)</title><rect x="1120.9" y="341" width="0.3" height="15.0" fill="rgb(242,72,24)" rx="2" ry="2" />
<text  x="1123.90" y="351.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::~abstract_read_executor (89 samples, 0.18%)</title><rect x="1172.4" y="437" width="2.1" height="15.0" fill="rgb(237,135,14)" rx="2" ry="2" />
<text  x="1175.37" y="447.5" ></text>
</g>
<g >
<title>local_schema_registry (12 samples, 0.02%)</title><rect x="972.5" y="357" width="0.3" height="15.0" fill="rgb(228,18,3)" rx="2" ry="2" />
<text  x="975.55" y="367.5" ></text>
</g>
<g >
<title>locator::abstract_replication_strategy::get_natural_endpoints (10 samples, 0.02%)</title><rect x="1081.1" y="309" width="0.2" height="15.0" fill="rgb(243,163,21)" rx="2" ry="2" />
<text  x="1084.08" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (43 samples, 0.09%)</title><rect x="715.1" y="405" width="1.1" height="15.0" fill="rgb(218,92,51)" rx="2" ry="2" />
<text  x="718.15" y="415.5" ></text>
</g>
<g >
<title>managed_bytes::external_memory_usage (16 samples, 0.03%)</title><rect x="203.7" y="101" width="0.4" height="15.0" fill="rgb(239,146,30)" rx="2" ry="2" />
<text  x="206.71" y="111.5" ></text>
</g>
<g >
<title>abstract_type::validate&lt;managed_bytes_basic_view&lt; (29 samples, 0.06%)</title><rect x="891.1" y="277" width="0.7" height="15.0" fill="rgb(207,98,27)" rx="2" ry="2" />
<text  x="894.12" y="287.5" ></text>
</g>
<g >
<title>std::apply&lt;service::client_state::check_has_permission (1,223 samples, 2.52%)</title><rect x="778.0" y="325" width="29.8" height="15.0" fill="rgb(252,123,32)" rx="2" ry="2" />
<text  x="781.01" y="335.5" >st..</text>
</g>
<g >
<title>bound_view::from_range_end&lt;nonwrapping_interval&gt; (38 samples, 0.08%)</title><rect x="236.5" y="181" width="0.9" height="15.0" fill="rgb(235,117,47)" rx="2" ry="2" />
<text  x="239.52" y="191.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::digest_read_result&gt;::then_wrapped_nrvo&lt;void, service::abstract_read_executor::execute (125 samples, 0.26%)</title><rect x="985.3" y="325" width="3.0" height="15.0" fill="rgb(222,139,6)" rx="2" ry="2" />
<text  x="988.28" y="335.5" ></text>
</g>
<g >
<title>database::query (6 samples, 0.01%)</title><rect x="21.9" y="517" width="0.2" height="15.0" fill="rgb(244,107,1)" rx="2" ry="2" />
<text  x="24.93" y="527.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (11 samples, 0.02%)</title><rect x="1126.9" y="405" width="0.3" height="15.0" fill="rgb(252,58,9)" rx="2" ry="2" />
<text  x="1129.94" y="415.5" ></text>
</g>
<g >
<title>std::push_heap&lt;mutation_reader_merger::reader_and_fragment*, mutation_reader_merger::reader_heap_compare&gt; (76 samples, 0.16%)</title><rect x="135.0" y="245" width="1.8" height="15.0" fill="rgb(216,88,5)" rx="2" ry="2" />
<text  x="138.00" y="255.5" ></text>
</g>
<g >
<title>sched_setaffinity@@GLIBC_2.3.4 (44 samples, 0.09%)</title><rect x="1188.9" y="629" width="1.1" height="15.0" fill="rgb(208,37,32)" rx="2" ry="2" />
<text  x="1191.88" y="639.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;void&gt;::satisfy_with_result_of&lt;seastar::future&lt;service::digest_read_result&gt;::then_wrapped_nrvo&lt;void, service::abstract_read_executor::execute (227 samples, 0.47%)</title><rect x="686.2" y="485" width="5.5" height="15.0" fill="rgb(226,221,28)" rx="2" ry="2" />
<text  x="689.16" y="495.5" ></text>
</g>
<g >
<title>ser::writer_of_query_result&lt;bytes_ostream&gt;::writer_of_query_result (6 samples, 0.01%)</title><rect x="597.5" y="421" width="0.1" height="15.0" fill="rgb(212,205,14)" rx="2" ry="2" />
<text  x="600.45" y="431.5" ></text>
</g>
<g >
<title>operator new (79 samples, 0.16%)</title><rect x="779.7" y="277" width="1.9" height="15.0" fill="rgb(225,222,51)" rx="2" ry="2" />
<text  x="782.69" y="287.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (23 samples, 0.05%)</title><rect x="664.6" y="469" width="0.5" height="15.0" fill="rgb(215,190,15)" rx="2" ry="2" />
<text  x="667.56" y="479.5" ></text>
</g>
<g >
<title>cql3::restrictions::partition_key_restrictions::needs_filtering (74 samples, 0.15%)</title><rect x="645.3" y="453" width="1.8" height="15.0" fill="rgb(252,199,0)" rx="2" ry="2" />
<text  x="648.34" y="463.5" ></text>
</g>
<g >
<title>seastar::promise&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::promise (10 samples, 0.02%)</title><rect x="1140.7" y="469" width="0.3" height="15.0" fill="rgb(232,223,23)" rx="2" ry="2" />
<text  x="1143.73" y="479.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; const*, std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt; &gt;, nonwrapping_interval&lt;clustering_key_prefix&gt;*&gt; (38 samples, 0.08%)</title><rect x="99.9" y="405" width="0.9" height="15.0" fill="rgb(205,116,27)" rx="2" ry="2" />
<text  x="102.88" y="415.5" ></text>
</g>
<g >
<title>operator delete (28 samples, 0.06%)</title><rect x="908.4" y="357" width="0.7" height="15.0" fill="rgb(225,71,43)" rx="2" ry="2" />
<text  x="911.39" y="367.5" ></text>
</g>
<g >
<title>partition_snapshot::partition_tombstone (31 samples, 0.06%)</title><rect x="506.5" y="229" width="0.7" height="15.0" fill="rgb(215,188,17)" rx="2" ry="2" />
<text  x="509.46" y="239.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::allocate_large_and_trim (11 samples, 0.02%)</title><rect x="543.8" y="277" width="0.2" height="15.0" fill="rgb(218,24,18)" rx="2" ry="2" />
<text  x="546.77" y="287.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::EqualElement&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (31 samples, 0.06%)</title><rect x="820.9" y="293" width="0.7" height="15.0" fill="rgb(250,194,5)" rx="2" ry="2" />
<text  x="823.88" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (74 samples, 0.15%)</title><rect x="852.4" y="421" width="1.8" height="15.0" fill="rgb(223,85,0)" rx="2" ry="2" />
<text  x="855.37" y="431.5" ></text>
</g>
<g >
<title>partition_snapshot::versions (5 samples, 0.01%)</title><rect x="220.6" y="117" width="0.1" height="15.0" fill="rgb(205,136,44)" rx="2" ry="2" />
<text  x="223.56" y="127.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::clear (9 samples, 0.02%)</title><rect x="257.9" y="309" width="0.3" height="15.0" fill="rgb(253,213,40)" rx="2" ry="2" />
<text  x="260.95" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (68 samples, 0.14%)</title><rect x="1050.9" y="229" width="1.6" height="15.0" fill="rgb(225,165,54)" rx="2" ry="2" />
<text  x="1053.85" y="239.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%)</title><rect x="909.0" y="341" width="0.1" height="15.0" fill="rgb(246,132,22)" rx="2" ry="2" />
<text  x="911.95" y="351.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (16 samples, 0.03%)</title><rect x="1142.3" y="309" width="0.4" height="15.0" fill="rgb(205,162,31)" rx="2" ry="2" />
<text  x="1145.33" y="319.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::clear (11 samples, 0.02%)</title><rect x="816.5" y="341" width="0.2" height="15.0" fill="rgb(215,73,47)" rx="2" ry="2" />
<text  x="819.47" y="351.5" ></text>
</g>
<g >
<title>operator delete (53 samples, 0.11%)</title><rect x="575.9" y="357" width="1.3" height="15.0" fill="rgb(231,203,20)" rx="2" ry="2" />
<text  x="578.95" y="367.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (212 samples, 0.44%)</title><rect x="739.9" y="357" width="5.2" height="15.0" fill="rgb(217,210,23)" rx="2" ry="2" />
<text  x="742.89" y="367.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (8 samples, 0.02%)</title><rect x="691.7" y="485" width="0.2" height="15.0" fill="rgb(229,154,6)" rx="2" ry="2" />
<text  x="694.69" y="495.5" ></text>
</g>
<g >
<title>locator::effective_replication_map::get_natural_endpoints_without_node_being_replaced (596 samples, 1.23%)</title><rect x="1081.3" y="309" width="14.5" height="15.0" fill="rgb(245,79,17)" rx="2" ry="2" />
<text  x="1084.32" y="319.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (6 samples, 0.01%)</title><rect x="566.9" y="293" width="0.2" height="15.0" fill="rgb(251,22,9)" rx="2" ry="2" />
<text  x="569.94" y="303.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_9has_tokenERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES28_S2B_ (15 samples, 0.03%)</title><rect x="947.0" y="389" width="0.4" height="15.0" fill="rgb(242,49,51)" rx="2" ry="2" />
<text  x="950.04" y="399.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::forward_to (20 samples, 0.04%)</title><rect x="709.2" y="501" width="0.5" height="15.0" fill="rgb(232,137,38)" rx="2" ry="2" />
<text  x="712.20" y="511.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (16 samples, 0.03%)</title><rect x="258.4" y="325" width="0.4" height="15.0" fill="rgb(207,90,29)" rx="2" ry="2" />
<text  x="261.41" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt;::reserve (35 samples, 0.07%)</title><rect x="1155.2" y="453" width="0.8" height="15.0" fill="rgb(228,108,2)" rx="2" ry="2" />
<text  x="1158.17" y="463.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::whereClause (15 samples, 0.03%)</title><rect x="19.1" y="357" width="0.4" height="15.0" fill="rgb(231,27,37)" rx="2" ry="2" />
<text  x="22.13" y="367.5" ></text>
</g>
<g >
<title>service::client_state::ensure_has_permission (5 samples, 0.01%)</title><rect x="21.1" y="421" width="0.2" height="15.0" fill="rgb(245,14,12)" rx="2" ry="2" />
<text  x="24.13" y="431.5" ></text>
</g>
<g >
<title>mutation_querier::consume (6 samples, 0.01%)</title><rect x="683.6" y="277" width="0.1" height="15.0" fill="rgb(245,71,43)" rx="2" ry="2" />
<text  x="686.58" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (8 samples, 0.02%)</title><rect x="669.3" y="437" width="0.2" height="15.0" fill="rgb(225,89,4)" rx="2" ry="2" />
<text  x="672.33" y="447.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::contains&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (104 samples, 0.21%)</title><rect x="844.4" y="389" width="2.5" height="15.0" fill="rgb(237,207,33)" rx="2" ry="2" />
<text  x="847.41" y="399.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (5 samples, 0.01%)</title><rect x="1034.1" y="165" width="0.2" height="15.0" fill="rgb(227,55,4)" rx="2" ry="2" />
<text  x="1037.14" y="175.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (6 samples, 0.01%)</title><rect x="766.0" y="341" width="0.2" height="15.0" fill="rgb(240,139,34)" rx="2" ry="2" />
<text  x="769.03" y="351.5" ></text>
</g>
<g >
<title>seastar::reactor::do_run (47,459 samples, 97.96%)</title><rect x="21.9" y="533" width="1155.9" height="15.0" fill="rgb(240,212,15)" rx="2" ry="2" />
<text  x="24.86" y="543.5" >seastar::reactor::do_run</text>
</g>
<g >
<title>cql3::selection::simple_selection::is_aggregate (5 samples, 0.01%)</title><rect x="871.7" y="437" width="0.1" height="15.0" fill="rgb(207,73,32)" rx="2" ry="2" />
<text  x="874.68" y="447.5" ></text>
</g>
<g >
<title>ser::after_qr_cell__value&lt;bytes_ostream&gt;::skip_ttl (63 samples, 0.13%)</title><rect x="349.9" y="165" width="1.6" height="15.0" fill="rgb(252,152,17)" rx="2" ry="2" />
<text  x="352.92" y="175.5" ></text>
</g>
<g >
<title>[unknown] (168 samples, 0.35%)</title><rect x="10.2" y="597" width="4.1" height="15.0" fill="rgb(238,207,37)" rx="2" ry="2" />
<text  x="13.17" y="607.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::entry::entry (104 samples, 0.21%)</title><rect x="1031.6" y="165" width="2.5" height="15.0" fill="rgb(245,61,34)" rx="2" ry="2" />
<text  x="1034.56" y="175.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_state&lt;std::tuple&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (32 samples, 0.07%)</title><rect x="291.7" y="293" width="0.7" height="15.0" fill="rgb(235,194,13)" rx="2" ry="2" />
<text  x="294.66" y="303.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (8 samples, 0.02%)</title><rect x="1034.6" y="149" width="0.2" height="15.0" fill="rgb(249,167,47)" rx="2" ry="2" />
<text  x="1037.61" y="159.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::operator (20 samples, 0.04%)</title><rect x="742.0" y="293" width="0.5" height="15.0" fill="rgb(234,172,48)" rx="2" ry="2" />
<text  x="744.99" y="303.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (6 samples, 0.01%)</title><rect x="898.9" y="277" width="0.2" height="15.0" fill="rgb(224,177,35)" rx="2" ry="2" />
<text  x="901.94" y="287.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;position_in_partition&gt;::_M_reset (17 samples, 0.04%)</title><rect x="568.4" y="309" width="0.4" height="15.0" fill="rgb(214,202,6)" rx="2" ry="2" />
<text  x="571.37" y="319.5" ></text>
</g>
<g >
<title>free (45 samples, 0.09%)</title><rect x="398.7" y="197" width="1.1" height="15.0" fill="rgb(220,150,10)" rx="2" ry="2" />
<text  x="401.71" y="207.5" ></text>
</g>
<g >
<title>bytes_view_hasher::update (15 samples, 0.03%)</title><rect x="744.6" y="261" width="0.4" height="15.0" fill="rgb(251,33,3)" rx="2" ry="2" />
<text  x="747.59" y="271.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (9 samples, 0.02%)</title><rect x="838.3" y="341" width="0.2" height="15.0" fill="rgb(236,165,43)" rx="2" ry="2" />
<text  x="841.27" y="351.5" ></text>
</g>
<g >
<title>mutation_partition::lower_bound (22 samples, 0.05%)</title><rect x="211.7" y="133" width="0.5" height="15.0" fill="rgb(242,169,40)" rx="2" ry="2" />
<text  x="214.67" y="143.5" ></text>
</g>
<g >
<title>reader_permit::consume (14 samples, 0.03%)</title><rect x="504.1" y="181" width="0.3" height="15.0" fill="rgb(251,206,40)" rx="2" ry="2" />
<text  x="507.07" y="191.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (5 samples, 0.01%)</title><rect x="757.6" y="309" width="0.1" height="15.0" fill="rgb(211,126,46)" rx="2" ry="2" />
<text  x="760.57" y="319.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::maybe_drop_from (32 samples, 0.07%)</title><rect x="367.1" y="197" width="0.7" height="15.0" fill="rgb(209,46,22)" rx="2" ry="2" />
<text  x="370.07" y="207.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (9 samples, 0.02%)</title><rect x="640.4" y="485" width="0.2" height="15.0" fill="rgb(241,100,51)" rx="2" ry="2" />
<text  x="643.40" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (13 samples, 0.03%)</title><rect x="856.7" y="405" width="0.3" height="15.0" fill="rgb(232,149,31)" rx="2" ry="2" />
<text  x="859.71" y="415.5" ></text>
</g>
<g >
<title>absl::hash_internal::HashState::combine_contiguous (10 samples, 0.02%)</title><rect x="825.6" y="277" width="0.2" height="15.0" fill="rgb(246,14,33)" rx="2" ry="2" />
<text  x="828.58" y="287.5" ></text>
</g>
<g >
<title>std::__optional_hash_call_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, true&gt;::operator (47 samples, 0.10%)</title><rect x="796.0" y="149" width="1.1" height="15.0" fill="rgb(212,48,27)" rx="2" ry="2" />
<text  x="798.96" y="159.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::~vector (12 samples, 0.02%)</title><rect x="533.1" y="341" width="0.3" height="15.0" fill="rgb(241,115,29)" rx="2" ry="2" />
<text  x="536.13" y="351.5" ></text>
</g>
<g >
<title>ser::after_qr_cell__value&lt;bytes_ostream&gt;::skip_ttl (9 samples, 0.02%)</title><rect x="329.4" y="181" width="0.2" height="15.0" fill="rgb(227,173,37)" rx="2" ry="2" />
<text  x="332.41" y="191.5" ></text>
</g>
<g >
<title>operator delete (24 samples, 0.05%)</title><rect x="152.2" y="197" width="0.6" height="15.0" fill="rgb(230,201,10)" rx="2" ry="2" />
<text  x="155.24" y="207.5" ></text>
</g>
<g >
<title>absl::container_internal::operator== (9 samples, 0.02%)</title><rect x="844.5" y="373" width="0.2" height="15.0" fill="rgb(205,228,26)" rx="2" ry="2" />
<text  x="847.53" y="383.5" ></text>
</g>
<g >
<title>absl::container_internal::operator== (5 samples, 0.01%)</title><rect x="754.5" y="373" width="0.1" height="15.0" fill="rgb(241,216,48)" rx="2" ry="2" />
<text  x="757.46" y="383.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (11,131 samples, 22.98%)</title><rect x="869.6" y="453" width="271.1" height="15.0" fill="rgb(212,131,44)" rx="2" ry="2" />
<text  x="872.61" y="463.5" >seastar::noncopyable_function&lt;seasta..</text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (18 samples, 0.04%)</title><rect x="788.5" y="133" width="0.4" height="15.0" fill="rgb(223,82,40)" rx="2" ry="2" />
<text  x="791.48" y="143.5" ></text>
</g>
<g >
<title>query::partition_slice::row_ranges (13 samples, 0.03%)</title><rect x="386.8" y="229" width="0.3" height="15.0" fill="rgb(254,152,42)" rx="2" ry="2" />
<text  x="389.77" y="239.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (10 samples, 0.02%)</title><rect x="637.6" y="485" width="0.3" height="15.0" fill="rgb(235,32,48)" rx="2" ry="2" />
<text  x="640.64" y="495.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (7 samples, 0.01%)</title><rect x="590.7" y="389" width="0.2" height="15.0" fill="rgb(245,54,11)" rx="2" ry="2" />
<text  x="593.68" y="399.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (13 samples, 0.03%)</title><rect x="888.2" y="309" width="0.3" height="15.0" fill="rgb(231,98,37)" rx="2" ry="2" />
<text  x="891.22" y="319.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_requests (2,483 samples, 5.13%)</title><rect x="996.4" y="341" width="60.5" height="15.0" fill="rgb(240,75,48)" rx="2" ry="2" />
<text  x="999.44" y="351.5" >servic..</text>
</g>
<g >
<title>query::querier_base::querier_base (49 samples, 0.10%)</title><rect x="618.4" y="405" width="1.2" height="15.0" fill="rgb(250,108,47)" rx="2" ry="2" />
<text  x="621.43" y="415.5" ></text>
</g>
<g >
<title>seastar::logger::log&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;&amp;&gt; (5 samples, 0.01%)</title><rect x="828.3" y="421" width="0.2" height="15.0" fill="rgb(206,0,13)" rx="2" ry="2" />
<text  x="831.33" y="431.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (9 samples, 0.02%)</title><rect x="590.0" y="373" width="0.2" height="15.0" fill="rgb(239,184,5)" rx="2" ry="2" />
<text  x="593.00" y="383.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::entry::entry (5 samples, 0.01%)</title><rect x="1035.1" y="165" width="0.1" height="15.0" fill="rgb(221,226,42)" rx="2" ry="2" />
<text  x="1038.12" y="175.5" ></text>
</g>
<g >
<title>utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (13 samples, 0.03%)</title><rect x="789.0" y="165" width="0.3" height="15.0" fill="rgb(213,168,43)" rx="2" ry="2" />
<text  x="791.97" y="175.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (526 samples, 1.09%)</title><rect x="177.2" y="101" width="12.8" height="15.0" fill="rgb(206,17,33)" rx="2" ry="2" />
<text  x="180.18" y="111.5" ></text>
</g>
<g >
<title>seastar::reactor::add_timer (34 samples, 0.07%)</title><rect x="995.3" y="277" width="0.8" height="15.0" fill="rgb(213,174,0)" rx="2" ry="2" />
<text  x="998.29" y="287.5" ></text>
</g>
<g >
<title>partition_snapshot::static_row (65 samples, 0.13%)</title><rect x="244.4" y="213" width="1.6" height="15.0" fill="rgb(220,76,32)" rx="2" ry="2" />
<text  x="247.43" y="223.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::drop_expired_front (31 samples, 0.06%)</title><rect x="65.6" y="405" width="0.8" height="15.0" fill="rgb(229,163,3)" rx="2" ry="2" />
<text  x="68.63" y="415.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::get0 (9 samples, 0.02%)</title><rect x="112.4" y="373" width="0.2" height="15.0" fill="rgb(231,29,50)" rx="2" ry="2" />
<text  x="115.42" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;managed_bytes&gt;::allocate (6 samples, 0.01%)</title><rect x="940.9" y="389" width="0.1" height="15.0" fill="rgb(241,115,31)" rx="2" ry="2" />
<text  x="943.86" y="399.5" ></text>
</g>
<g >
<title>operator delete (26 samples, 0.05%)</title><rect x="586.5" y="405" width="0.7" height="15.0" fill="rgb(234,155,46)" rx="2" ry="2" />
<text  x="589.52" y="415.5" ></text>
</g>
<g >
<title>seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;::swap (38 samples, 0.08%)</title><rect x="828.8" y="421" width="0.9" height="15.0" fill="rgb(232,14,36)" rx="2" ry="2" />
<text  x="831.77" y="431.5" ></text>
</g>
<g >
<title>database::find_schema (256 samples, 0.53%)</title><rect x="817.2" y="373" width="6.3" height="15.0" fill="rgb(208,92,52)" rx="2" ry="2" />
<text  x="820.25" y="383.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, flat_mutation_reader, reader_concurrency_semaphore::inactive_read_handle&gt;::_Move_ctor_base (5 samples, 0.01%)</title><rect x="619.6" y="405" width="0.2" height="15.0" fill="rgb(245,119,14)" rx="2" ry="2" />
<text  x="622.64" y="415.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (77 samples, 0.16%)</title><rect x="1168.1" y="485" width="1.9" height="15.0" fill="rgb(208,147,31)" rx="2" ry="2" />
<text  x="1171.13" y="495.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;auth::resource_kind, std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;auth::resource_kind&gt;, std::hash&lt;auth::resource_kind&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (28 samples, 0.06%)</title><rect x="765.2" y="341" width="0.7" height="15.0" fill="rgb(254,9,43)" rx="2" ry="2" />
<text  x="768.20" y="351.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (24 samples, 0.05%)</title><rect x="503.8" y="197" width="0.6" height="15.0" fill="rgb(206,38,31)" rx="2" ry="2" />
<text  x="506.83" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::_S_relocate (6 samples, 0.01%)</title><rect x="18.0" y="261" width="0.1" height="15.0" fill="rgb(225,54,40)" rx="2" ry="2" />
<text  x="20.99" y="271.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cident (5 samples, 0.01%)</title><rect x="17.4" y="341" width="0.2" height="15.0" fill="rgb(221,56,37)" rx="2" ry="2" />
<text  x="20.43" y="351.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned char, std::pair&lt;unsigned char const, std::optional&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned char const, std::optional&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned char&gt;, std::hash&lt;unsigned char&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::~_Hashtable (49 samples, 0.10%)</title><rect x="669.6" y="453" width="1.2" height="15.0" fill="rgb(246,114,10)" rx="2" ry="2" />
<text  x="672.57" y="463.5" ></text>
</g>
<g >
<title>operator new (35 samples, 0.07%)</title><rect x="413.3" y="341" width="0.9" height="15.0" fill="rgb(244,61,25)" rx="2" ry="2" />
<text  x="416.32" y="351.5" ></text>
</g>
<g >
<title>__start_context (14 samples, 0.03%)</title><rect x="21.4" y="549" width="0.4" height="15.0" fill="rgb(233,127,1)" rx="2" ry="2" />
<text  x="24.45" y="559.5" ></text>
</g>
<g >
<title>single_node_cql_env::local_qp (9 samples, 0.02%)</title><rect x="847.3" y="453" width="0.2" height="15.0" fill="rgb(225,75,47)" rx="2" ry="2" />
<text  x="850.30" y="463.5" ></text>
</g>
<g >
<title>__tls_init (6 samples, 0.01%)</title><rect x="497.3" y="229" width="0.1" height="15.0" fill="rgb(241,135,20)" rx="2" ry="2" />
<text  x="500.28" y="239.5" ></text>
</g>
<g >
<title>bplus::tree&lt;long, intrusive_array&lt;memtable_entry&gt;, dht::raw_token_less_comparator, 16ul,  (421 samples, 0.87%)</title><rect x="460.2" y="293" width="10.2" height="15.0" fill="rgb(216,119,9)" rx="2" ry="2" />
<text  x="463.18" y="303.5" ></text>
</g>
<g >
<title>range_tombstone_list::slice (7 samples, 0.01%)</title><rect x="241.3" y="229" width="0.2" height="15.0" fill="rgb(212,223,4)" rx="2" ry="2" />
<text  x="244.34" y="239.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (12 samples, 0.02%)</title><rect x="562.9" y="277" width="0.3" height="15.0" fill="rgb(236,58,18)" rx="2" ry="2" />
<text  x="565.92" y="287.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;std::tuple&lt;seastar::lw_shared_ptr&lt;query::result&gt;, cache_temperature&gt; &gt;::set&lt;std::tuple&lt;seastar::lw_shared_ptr&lt;query::result&gt;, cache_temperature&gt; &gt; (12 samples, 0.02%)</title><rect x="44.2" y="469" width="0.3" height="15.0" fill="rgb(240,45,33)" rx="2" ry="2" />
<text  x="47.17" y="479.5" ></text>
</g>
<g >
<title>seastar::future&lt;boost::iterator_range&lt;mutation_fragment*&gt; &gt;::then_impl&lt;mutation_fragment_merger&lt;mutation_reader_merger&gt;::fetch (6 samples, 0.01%)</title><rect x="261.0" y="341" width="0.2" height="15.0" fill="rgb(215,23,31)" rx="2" ry="2" />
<text  x="264.04" y="351.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::clear (13 samples, 0.03%)</title><rect x="443.3" y="277" width="0.3" height="15.0" fill="rgb(220,47,13)" rx="2" ry="2" />
<text  x="446.28" y="287.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (17 samples, 0.04%)</title><rect x="211.8" y="117" width="0.4" height="15.0" fill="rgb(252,71,42)" rx="2" ry="2" />
<text  x="214.79" y="127.5" ></text>
</g>
<g >
<title>locator::abstract_replication_strategy::get_natural_endpoints (548 samples, 1.13%)</title><rect x="1081.7" y="293" width="13.4" height="15.0" fill="rgb(238,133,45)" rx="2" ry="2" />
<text  x="1084.74" y="303.5" ></text>
</g>
<g >
<title>std::__lower_bound&lt;__gnu_cxx::__normal_iterator&lt;long*, std::vector&lt;long, std::allocator&lt;long&gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_less_val&gt; (54 samples, 0.11%)</title><rect x="1164.1" y="453" width="1.3" height="15.0" fill="rgb(234,121,29)" rx="2" ry="2" />
<text  x="1167.13" y="463.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;service::storage_proxy_coordinator_query_result&gt;, seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::finally_body&lt;service::storage_proxy::do_query (8 samples, 0.02%)</title><rect x="22.9" y="517" width="0.2" height="15.0" fill="rgb(248,90,1)" rx="2" ry="2" />
<text  x="25.91" y="527.5" ></text>
</g>
<g >
<title>seastar::future&lt;mutation_fragment*&gt;::then_impl&lt;query::consume_page&lt; (5,468 samples, 11.29%)</title><rect x="284.2" y="405" width="133.1" height="15.0" fill="rgb(205,143,3)" rx="2" ry="2" />
<text  x="287.16" y="415.5" >seastar::future&lt;..</text>
</g>
<g >
<title>seastar::reactor_backend_aio::await_events (35 samples, 0.07%)</title><rect x="1176.8" y="485" width="0.9" height="15.0" fill="rgb(231,14,3)" rx="2" ry="2" />
<text  x="1179.85" y="495.5" ></text>
</g>
<g >
<title>cql_transport::messages::result_message::rows::rows (17 samples, 0.04%)</title><rect x="652.6" y="437" width="0.4" height="15.0" fill="rgb(221,93,44)" rx="2" ry="2" />
<text  x="655.57" y="447.5" ></text>
</g>
<g >
<title>seastar::repeat&lt;flat_mutation_reader::impl::consume_pausable&lt;flush_reader::fill_buffer (6 samples, 0.01%)</title><rect x="21.5" y="405" width="0.2" height="15.0" fill="rgb(219,165,42)" rx="2" ry="2" />
<text  x="24.54" y="415.5" ></text>
</g>
<g >
<title>utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::get_or_load&lt;utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (260 samples, 0.54%)</title><rect x="738.9" y="373" width="6.4" height="15.0" fill="rgb(238,204,38)" rx="2" ry="2" />
<text  x="741.94" y="383.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::drop_unneeded_tombstones (13 samples, 0.03%)</title><rect x="366.2" y="197" width="0.4" height="15.0" fill="rgb(247,228,43)" rx="2" ry="2" />
<text  x="369.24" y="207.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (6 samples, 0.01%)</title><rect x="347.0" y="165" width="0.2" height="15.0" fill="rgb(246,13,20)" rx="2" ry="2" />
<text  x="350.02" y="175.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::remove_if&lt;row::compact_and_expire (704 samples, 1.45%)</title><rect x="367.8" y="197" width="17.2" height="15.0" fill="rgb(221,175,33)" rx="2" ry="2" />
<text  x="370.85" y="207.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::operator (5 samples, 0.01%)</title><rect x="112.3" y="373" width="0.1" height="15.0" fill="rgb(235,68,53)" rx="2" ry="2" />
<text  x="115.30" y="383.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt;::_M_reset (5 samples, 0.01%)</title><rect x="509.7" y="277" width="0.1" height="15.0" fill="rgb(221,127,20)" rx="2" ry="2" />
<text  x="512.67" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::vector (142 samples, 0.29%)</title><rect x="97.3" y="421" width="3.5" height="15.0" fill="rgb(220,213,29)" rx="2" ry="2" />
<text  x="100.34" y="431.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;std::_List_iterator&lt;flat_mutation_reader&gt;, mutation_reader_merger::close (47 samples, 0.10%)</title><rect x="569.9" y="373" width="1.2" height="15.0" fill="rgb(243,219,18)" rx="2" ry="2" />
<text  x="572.91" y="383.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::signal (8 samples, 0.02%)</title><rect x="391.5" y="213" width="0.2" height="15.0" fill="rgb(235,54,54)" rx="2" ry="2" />
<text  x="394.50" y="223.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (11 samples, 0.02%)</title><rect x="1144.1" y="501" width="0.3" height="15.0" fill="rgb(231,190,14)" rx="2" ry="2" />
<text  x="1147.09" y="511.5" ></text>
</g>
<g >
<title>operator new (82 samples, 0.17%)</title><rect x="1069.6" y="325" width="2.0" height="15.0" fill="rgb(223,156,23)" rx="2" ry="2" />
<text  x="1072.63" y="335.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::partition_snapshot_flat_reader&lt;memtable&amp;&gt; (432 samples, 0.89%)</title><rect x="497.6" y="261" width="10.5" height="15.0" fill="rgb(249,228,46)" rx="2" ry="2" />
<text  x="500.62" y="271.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (144 samples, 0.30%)</title><rect x="34.5" y="469" width="3.5" height="15.0" fill="rgb(234,106,16)" rx="2" ry="2" />
<text  x="37.53" y="479.5" ></text>
</g>
<g >
<title>std::default_delete&lt;seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::entry&gt;::operator (6 samples, 0.01%)</title><rect x="70.5" y="389" width="0.1" height="15.0" fill="rgb(240,7,20)" rx="2" ry="2" />
<text  x="73.45" y="399.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::make_ready&lt; (5 samples, 0.01%)</title><rect x="701.3" y="421" width="0.1" height="15.0" fill="rgb(236,188,54)" rx="2" ry="2" />
<text  x="704.29" y="431.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;flat_mutation_reader  (5 samples, 0.01%)</title><rect x="421.4" y="389" width="0.1" height="15.0" fill="rgb(214,186,21)" rx="2" ry="2" />
<text  x="424.38" y="399.5" ></text>
</g>
<g >
<title>seastar::semaphore_units&lt;seastar::semaphore_default_exception_factory, std::chrono::_V2::steady_clock&gt;::return_all (22 samples, 0.05%)</title><rect x="35.6" y="437" width="0.5" height="15.0" fill="rgb(251,150,32)" rx="2" ry="2" />
<text  x="38.57" y="447.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEE4$_44ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_45ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_43ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_46ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_47ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_48ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_49ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_50ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_51ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_52ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_53ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_54ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_55ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_56ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_57ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_58EERS4_IJNSF_11conjunctionENSF_15binary_operatorENSF_12column_valueENSF_5tokenENSF_21unresolved_identifierENSF_25column_mutation_attributeENSF_13function_callENSF_4castENSF_15field_selectionENSF_4nullENSF_13bind_variableENSF_16untyped_constantENSF_8constantENSF_17tuple_constructorENSF_22collection_constructorENSF_20usertype_constructorEEEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES16_S1O_ (1,183 samples, 2.44%)</title><rect x="883.6" y="389" width="28.9" height="15.0" fill="rgb(227,212,28)" rx="2" ry="2" />
<text  x="886.64" y="399.5" >_Z..</text>
</g>
<g >
<title>table::set_hit_rate (82 samples, 0.17%)</title><rect x="704.4" y="453" width="2.0" height="15.0" fill="rgb(247,121,15)" rx="2" ry="2" />
<text  x="707.43" y="463.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;query::result&gt;::make&lt;query::result&gt; (57 samples, 0.12%)</title><rect x="606.2" y="437" width="1.3" height="15.0" fill="rgb(241,197,26)" rx="2" ry="2" />
<text  x="609.15" y="447.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (76 samples, 0.16%)</title><rect x="389.8" y="229" width="1.9" height="15.0" fill="rgb(244,169,21)" rx="2" ry="2" />
<text  x="392.84" y="239.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (29 samples, 0.06%)</title><rect x="230.5" y="197" width="0.7" height="15.0" fill="rgb(223,23,33)" rx="2" ry="2" />
<text  x="233.52" y="207.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;partition_snapshot&gt;::make&lt;seastar::lw_shared_ptr&lt;schema const&gt;&amp;, logalloc::region&amp;, mutation_cleaner&amp;, partition_entry*, cache_tracker*&amp;, unsigned long&amp;&gt; (11 samples, 0.02%)</title><rect x="513.7" y="309" width="0.3" height="15.0" fill="rgb(209,215,21)" rx="2" ry="2" />
<text  x="516.74" y="319.5" ></text>
</g>
<g >
<title>operator delete (31 samples, 0.06%)</title><rect x="514.0" y="325" width="0.8" height="15.0" fill="rgb(206,207,44)" rx="2" ry="2" />
<text  x="517.01" y="335.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::remove_if&lt;row::compact_and_expire (609 samples, 1.26%)</title><rect x="369.9" y="181" width="14.8" height="15.0" fill="rgb(229,10,27)" rx="2" ry="2" />
<text  x="372.92" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_clear (110 samples, 0.23%)</title><rect x="577.3" y="357" width="2.7" height="15.0" fill="rgb(225,214,44)" rx="2" ry="2" />
<text  x="580.34" y="367.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::clear (86 samples, 0.18%)</title><rect x="363.8" y="197" width="2.1" height="15.0" fill="rgb(249,82,11)" rx="2" ry="2" />
<text  x="366.83" y="207.5" ></text>
</g>
<g >
<title>database::find_column_family (73 samples, 0.15%)</title><rect x="1060.5" y="341" width="1.8" height="15.0" fill="rgb(243,127,32)" rx="2" ry="2" />
<text  x="1063.52" y="351.5" ></text>
</g>
<g >
<title>service::never_speculating_read_executor::~never_speculating_read_executor (105 samples, 0.22%)</title><rect x="1172.2" y="453" width="2.6" height="15.0" fill="rgb(243,223,5)" rx="2" ry="2" />
<text  x="1175.20" y="463.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (15 samples, 0.03%)</title><rect x="624.6" y="469" width="0.3" height="15.0" fill="rgb(224,32,54)" rx="2" ry="2" />
<text  x="627.56" y="479.5" ></text>
</g>
<g >
<title>cql3::statements::update_statement::add_update_for_key (16 samples, 0.03%)</title><rect x="863.0" y="357" width="0.4" height="15.0" fill="rgb(237,199,13)" rx="2" ry="2" />
<text  x="865.97" y="367.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;mutation_reader_merger::operator (372 samples, 0.77%)</title><rect x="248.5" y="309" width="9.0" height="15.0" fill="rgb(238,182,23)" rx="2" ry="2" />
<text  x="251.47" y="319.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_destroy_data (17 samples, 0.04%)</title><rect x="616.6" y="389" width="0.4" height="15.0" fill="rgb(224,105,25)" rx="2" ry="2" />
<text  x="619.60" y="399.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::make_ready&lt; (15 samples, 0.03%)</title><rect x="75.3" y="453" width="0.3" height="15.0" fill="rgb(232,183,45)" rx="2" ry="2" />
<text  x="78.25" y="463.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::find (17 samples, 0.04%)</title><rect x="647.9" y="421" width="0.4" height="15.0" fill="rgb(211,136,6)" rx="2" ry="2" />
<text  x="650.90" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%)</title><rect x="1171.1" y="437" width="0.1" height="15.0" fill="rgb(237,144,28)" rx="2" ry="2" />
<text  x="1174.12" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (15 samples, 0.03%)</title><rect x="622.1" y="373" width="0.3" height="15.0" fill="rgb(214,24,0)" rx="2" ry="2" />
<text  x="625.08" y="383.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::clear (131 samples, 0.27%)</title><rect x="362.7" y="213" width="3.2" height="15.0" fill="rgb(219,87,45)" rx="2" ry="2" />
<text  x="365.73" y="223.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (42 samples, 0.09%)</title><rect x="285.8" y="389" width="1.0" height="15.0" fill="rgb(240,177,2)" rx="2" ry="2" />
<text  x="288.76" y="399.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (7 samples, 0.01%)</title><rect x="423.0" y="357" width="0.2" height="15.0" fill="rgb(246,209,52)" rx="2" ry="2" />
<text  x="425.99" y="367.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::operator (6,162 samples, 12.72%)</title><rect x="115.1" y="357" width="150.1" height="15.0" fill="rgb(211,139,46)" rx="2" ry="2" />
<text  x="118.07" y="367.5" >mutation_fragment_m..</text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (2,166 samples, 4.47%)</title><rect x="162.7" y="197" width="52.7" height="15.0" fill="rgb(213,221,13)" rx="2" ry="2" />
<text  x="165.67" y="207.5" >parti..</text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (26 samples, 0.05%)</title><rect x="418.6" y="405" width="0.7" height="15.0" fill="rgb(253,131,5)" rx="2" ry="2" />
<text  x="421.63" y="415.5" ></text>
</g>
<g >
<title>operator delete (23 samples, 0.05%)</title><rect x="30.6" y="485" width="0.5" height="15.0" fill="rgb(211,40,8)" rx="2" ry="2" />
<text  x="33.58" y="495.5" ></text>
</g>
<g >
<title>std::make_unique&lt;merging_reader&lt;mutation_reader_merger&gt;, seastar::lw_shared_ptr&lt;schema const&gt;&amp;, reader_permit, seastar::bool_class&lt;streamed_mutation::forwarding_tag&gt;&amp;, mutation_reader_merger&gt; (239 samples, 0.49%)</title><rect x="445.2" y="309" width="5.8" height="15.0" fill="rgb(234,47,0)" rx="2" ry="2" />
<text  x="448.15" y="319.5" ></text>
</g>
<g >
<title>absl::hash_internal::AbslHashValue&lt;absl::hash_internal::HashState&gt; (5 samples, 0.01%)</title><rect x="838.7" y="373" width="0.1" height="15.0" fill="rgb(218,136,46)" rx="2" ry="2" />
<text  x="841.71" y="383.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::push_mutation_fragment&lt;mutation_fragment&gt; (14 samples, 0.03%)</title><rect x="145.7" y="245" width="0.3" height="15.0" fill="rgb(211,111,12)" rx="2" ry="2" />
<text  x="148.69" y="255.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (9 samples, 0.02%)</title><rect x="1037.5" y="213" width="0.2" height="15.0" fill="rgb(215,198,10)" rx="2" ry="2" />
<text  x="1040.53" y="223.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::maybe_refresh_state (54 samples, 0.11%)</title><rect x="219.5" y="165" width="1.3" height="15.0" fill="rgb(230,28,7)" rx="2" ry="2" />
<text  x="222.47" y="175.5" ></text>
</g>
<g >
<title>query::result::builder::builder (131 samples, 0.27%)</title><rect x="594.2" y="421" width="3.2" height="15.0" fill="rgb(211,98,49)" rx="2" ry="2" />
<text  x="597.24" y="431.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt;::_Move_ctor_base (9 samples, 0.02%)</title><rect x="899.1" y="277" width="0.3" height="15.0" fill="rgb(246,76,27)" rx="2" ry="2" />
<text  x="902.13" y="287.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::invoke&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (510 samples, 1.05%)</title><rect x="267.6" y="341" width="12.4" height="15.0" fill="rgb(247,162,24)" rx="2" ry="2" />
<text  x="270.62" y="351.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_state&lt;std::tuple&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt; &gt;, seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (37 samples, 0.08%)</title><rect x="783.9" y="245" width="0.9" height="15.0" fill="rgb(230,226,43)" rx="2" ry="2" />
<text  x="786.90" y="255.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (17 samples, 0.04%)</title><rect x="763.2" y="341" width="0.5" height="15.0" fill="rgb(249,209,23)" rx="2" ry="2" />
<text  x="766.25" y="351.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::~modification_statement (6 samples, 0.01%)</title><rect x="640.7" y="469" width="0.2" height="15.0" fill="rgb(219,169,31)" rx="2" ry="2" />
<text  x="643.71" y="479.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (12 samples, 0.02%)</title><rect x="663.3" y="469" width="0.3" height="15.0" fill="rgb(210,43,18)" rx="2" ry="2" />
<text  x="666.31" y="479.5" ></text>
</g>
<g >
<title>query::result::result (14 samples, 0.03%)</title><rect x="607.2" y="421" width="0.3" height="15.0" fill="rgb(223,202,29)" rx="2" ry="2" />
<text  x="610.20" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (23 samples, 0.05%)</title><rect x="39.3" y="453" width="0.6" height="15.0" fill="rgb(216,207,5)" rx="2" ry="2" />
<text  x="42.35" y="463.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::allocate (53 samples, 0.11%)</title><rect x="150.7" y="197" width="1.3" height="15.0" fill="rgb(220,158,16)" rx="2" ry="2" />
<text  x="153.71" y="207.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;std::function&lt;flat_mutation_reader  (6 samples, 0.01%)</title><rect x="622.8" y="421" width="0.2" height="15.0" fill="rgb(246,172,42)" rx="2" ry="2" />
<text  x="625.81" y="431.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::check_queue_size (22 samples, 0.05%)</title><rect x="1025.9" y="213" width="0.5" height="15.0" fill="rgb(246,65,15)" rx="2" ry="2" />
<text  x="1028.86" y="223.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (39 samples, 0.08%)</title><rect x="856.1" y="421" width="0.9" height="15.0" fill="rgb(254,33,18)" rx="2" ry="2" />
<text  x="859.07" y="431.5" ></text>
</g>
<g >
<title>make_stable_flattened_mutations_consumer&lt;compact_for_query&lt; (101 samples, 0.21%)</title><rect x="412.2" y="373" width="2.5" height="15.0" fill="rgb(238,166,48)" rx="2" ry="2" />
<text  x="415.25" y="383.5" ></text>
</g>
<g >
<title>schema::column_at (33 samples, 0.07%)</title><rect x="198.4" y="133" width="0.8" height="15.0" fill="rgb(253,228,39)" rx="2" ry="2" />
<text  x="201.37" y="143.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;cql_transport::messages::result_message::rows, false&gt;::make&lt;cql3::result&gt; (93 samples, 0.19%)</title><rect x="651.1" y="469" width="2.3" height="15.0" fill="rgb(220,195,10)" rx="2" ry="2" />
<text  x="654.14" y="479.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::~guard (6 samples, 0.01%)</title><rect x="483.4" y="325" width="0.1" height="15.0" fill="rgb(208,73,1)" rx="2" ry="2" />
<text  x="486.37" y="335.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::do_flush (11,393 samples, 23.52%)</title><rect x="863.5" y="485" width="277.5" height="15.0" fill="rgb(209,92,30)" rx="2" ry="2" />
<text  x="866.48" y="495.5" >seastar::concrete_execution_stage&lt;sea..</text>
</g>
<g >
<title>seastar::future_state&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::take (8 samples, 0.02%)</title><rect x="405.8" y="261" width="0.2" height="15.0" fill="rgb(251,62,8)" rx="2" ry="2" />
<text  x="408.84" y="271.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;service::storage_proxy_coordinator_query_result&gt;::set_urgent_state (92 samples, 0.19%)</title><rect x="679.5" y="485" width="2.3" height="15.0" fill="rgb(207,118,3)" rx="2" ry="2" />
<text  x="682.54" y="495.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_Optional_payload_base (11 samples, 0.02%)</title><rect x="790.2" y="197" width="0.3" height="15.0" fill="rgb(237,164,32)" rx="2" ry="2" />
<text  x="793.24" y="207.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;query::querier&lt; (12 samples, 0.02%)</title><rect x="77.6" y="453" width="0.3" height="15.0" fill="rgb(243,133,33)" rx="2" ry="2" />
<text  x="80.59" y="463.5" ></text>
</g>
<g >
<title>operator new (76 samples, 0.16%)</title><rect x="852.3" y="437" width="1.9" height="15.0" fill="rgb(214,207,36)" rx="2" ry="2" />
<text  x="855.32" y="447.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::~guard (6 samples, 0.01%)</title><rect x="494.2" y="277" width="0.2" height="15.0" fill="rgb(224,17,31)" rx="2" ry="2" />
<text  x="497.21" y="287.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;service::storage_proxy::unique_response_handler*, service::storage_proxy::mutate_begin (9 samples, 0.02%)</title><rect x="1142.1" y="277" width="0.2" height="15.0" fill="rgb(227,82,17)" rx="2" ry="2" />
<text  x="1145.12" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::~vector (20 samples, 0.04%)</title><rect x="1053.6" y="277" width="0.5" height="15.0" fill="rgb(237,128,34)" rx="2" ry="2" />
<text  x="1056.63" y="287.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt;::_M_reset (5 samples, 0.01%)</title><rect x="247.8" y="261" width="0.1" height="15.0" fill="rgb(212,128,24)" rx="2" ry="2" />
<text  x="250.77" y="271.5" ></text>
</g>
<g >
<title>utils::approx_exponential_histogram&lt;512ul, 33554432ul, 4ul&gt;::add (10 samples, 0.02%)</title><rect x="674.6" y="469" width="0.2" height="15.0" fill="rgb(252,183,25)" rx="2" ry="2" />
<text  x="677.57" y="479.5" ></text>
</g>
<g >
<title>std::hash&lt;auth::resource&gt;::operator (100 samples, 0.21%)</title><rect x="811.8" y="341" width="2.5" height="15.0" fill="rgb(246,43,54)" rx="2" ry="2" />
<text  x="814.84" y="351.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_construct&lt;interval_bound&lt;dht::ring_position&gt; const&amp;&gt; (30 samples, 0.06%)</title><rect x="1052.8" y="229" width="0.8" height="15.0" fill="rgb(249,120,33)" rx="2" ry="2" />
<text  x="1055.85" y="239.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (28 samples, 0.06%)</title><rect x="450.2" y="277" width="0.7" height="15.0" fill="rgb(246,177,40)" rx="2" ry="2" />
<text  x="453.20" y="287.5" ></text>
</g>
<g >
<title>seastar::internal::awaiter&lt;query::result_memory_accounter&gt;::awaiter (5 samples, 0.01%)</title><rect x="604.4" y="437" width="0.2" height="15.0" fill="rgb(252,214,2)" rx="2" ry="2" />
<text  x="607.45" y="447.5" ></text>
</g>
<g >
<title>read_simple&lt;unsigned short, managed_bytes_basic_view&lt; (26 samples, 0.05%)</title><rect x="480.7" y="197" width="0.6" height="15.0" fill="rgb(235,164,40)" rx="2" ry="2" />
<text  x="483.67" y="207.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (59 samples, 0.12%)</title><rect x="1060.9" y="309" width="1.4" height="15.0" fill="rgb(206,91,24)" rx="2" ry="2" />
<text  x="1063.86" y="319.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;position_in_partition&gt;::_M_reset (7 samples, 0.01%)</title><rect x="567.2" y="293" width="0.2" height="15.0" fill="rgb(234,170,41)" rx="2" ry="2" />
<text  x="570.23" y="303.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::find (21 samples, 0.04%)</title><rect x="954.8" y="357" width="0.5" height="15.0" fill="rgb(220,93,33)" rx="2" ry="2" />
<text  x="957.84" y="367.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (8 samples, 0.02%)</title><rect x="816.0" y="357" width="0.2" height="15.0" fill="rgb(226,99,48)" rx="2" ry="2" />
<text  x="819.03" y="367.5" ></text>
</g>
<g >
<title>service::storage_proxy::do_query (5,971 samples, 12.32%)</title><rect x="960.6" y="389" width="145.5" height="15.0" fill="rgb(250,208,25)" rx="2" ry="2" />
<text  x="963.63" y="399.5" >service::storage_p..</text>
</g>
<g >
<title>__dynamic_cast (15 samples, 0.03%)</title><rect x="643.8" y="469" width="0.4" height="15.0" fill="rgb(249,97,12)" rx="2" ry="2" />
<text  x="646.81" y="479.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate_to_raw_view (5 samples, 0.01%)</title><rect x="911.4" y="373" width="0.1" height="15.0" fill="rgb(227,75,30)" rx="2" ry="2" />
<text  x="914.39" y="383.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::cql_statement&gt;::~shared_ptr (13 samples, 0.03%)</title><rect x="828.5" y="421" width="0.3" height="15.0" fill="rgb(239,137,54)" rx="2" ry="2" />
<text  x="831.45" y="431.5" ></text>
</g>
<g >
<title>operator new (98 samples, 0.20%)</title><rect x="955.4" y="405" width="2.4" height="15.0" fill="rgb(208,199,19)" rx="2" ry="2" />
<text  x="958.37" y="415.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::operator (6 samples, 0.01%)</title><rect x="837.8" y="357" width="0.2" height="15.0" fill="rgb(237,98,14)" rx="2" ry="2" />
<text  x="840.83" y="367.5" ></text>
</g>
<g >
<title>schema::column_at (64 samples, 0.13%)</title><rect x="204.1" y="101" width="1.6" height="15.0" fill="rgb(228,78,48)" rx="2" ry="2" />
<text  x="207.10" y="111.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const&amp;, auth::resource&amp;&amp;, service::client_state::has_column_family_access (6 samples, 0.01%)</title><rect x="814.5" y="389" width="0.2" height="15.0" fill="rgb(233,124,18)" rx="2" ry="2" />
<text  x="817.54" y="399.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (42 samples, 0.09%)</title><rect x="469.4" y="277" width="1.0" height="15.0" fill="rgb(241,75,11)" rx="2" ry="2" />
<text  x="472.41" y="287.5" ></text>
</g>
<g >
<title>operator delete (11 samples, 0.02%)</title><rect x="38.1" y="453" width="0.3" height="15.0" fill="rgb(225,58,53)" rx="2" ry="2" />
<text  x="41.11" y="463.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (45 samples, 0.09%)</title><rect x="1141.0" y="373" width="1.1" height="15.0" fill="rgb(215,129,11)" rx="2" ry="2" />
<text  x="1143.97" y="383.5" ></text>
</g>
<g >
<title>query::querier_base::querier_base (4,792 samples, 9.89%)</title><rect x="419.9" y="421" width="116.7" height="15.0" fill="rgb(231,10,30)" rx="2" ry="2" />
<text  x="422.90" y="431.5" >query::querier..</text>
</g>
<g >
<title>bplus::tree&lt;long, intrusive_array&lt;cache_entry&gt;, dht::raw_token_less_comparator, 16ul,  (75 samples, 0.15%)</title><rect x="522.6" y="293" width="1.8" height="15.0" fill="rgb(227,90,31)" rx="2" ry="2" />
<text  x="525.58" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (30 samples, 0.06%)</title><rect x="151.0" y="165" width="0.7" height="15.0" fill="rgb(220,55,50)" rx="2" ry="2" />
<text  x="154.00" y="175.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (35 samples, 0.07%)</title><rect x="828.8" y="405" width="0.9" height="15.0" fill="rgb(251,26,32)" rx="2" ry="2" />
<text  x="831.84" y="415.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry&gt;::operator= (9 samples, 0.02%)</title><rect x="745.1" y="357" width="0.2" height="15.0" fill="rgb(211,160,42)" rx="2" ry="2" />
<text  x="748.06" y="367.5" ></text>
</g>
<g >
<title>std::apply&lt;service::client_state::has_column_family_access (6 samples, 0.01%)</title><rect x="21.1" y="453" width="0.2" height="15.0" fill="rgb(235,113,18)" rx="2" ry="2" />
<text  x="24.11" y="463.5" ></text>
</g>
<g >
<title>locator::effective_replication_map::get_natural_endpoints_without_node_being_replaced (12 samples, 0.02%)</title><rect x="1078.1" y="325" width="0.3" height="15.0" fill="rgb(239,16,6)" rx="2" ry="2" />
<text  x="1081.11" y="335.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;position_in_partition&gt;::_M_reset (7 samples, 0.01%)</title><rect x="241.5" y="229" width="0.2" height="15.0" fill="rgb(237,105,32)" rx="2" ry="2" />
<text  x="244.51" y="239.5" ></text>
</g>
<g >
<title>abstract_type::from_string (5 samples, 0.01%)</title><rect x="20.2" y="373" width="0.1" height="15.0" fill="rgb(212,150,36)" rx="2" ry="2" />
<text  x="23.21" y="383.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::EqualElement&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (39 samples, 0.08%)</title><rect x="756.3" y="325" width="1.0" height="15.0" fill="rgb(229,79,50)" rx="2" ry="2" />
<text  x="759.33" y="335.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;compact_mutation_state&lt; (150 samples, 0.31%)</title><rect x="613.4" y="421" width="3.7" height="15.0" fill="rgb(221,202,7)" rx="2" ry="2" />
<text  x="616.41" y="431.5" ></text>
</g>
<g >
<title>service::never_speculating_read_executor::~never_speculating_read_executor (7 samples, 0.01%)</title><rect x="1170.4" y="469" width="0.1" height="15.0" fill="rgb(227,131,43)" rx="2" ry="2" />
<text  x="1173.37" y="479.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::alloc (46 samples, 0.09%)</title><rect x="193.6" y="101" width="1.2" height="15.0" fill="rgb(212,159,47)" rx="2" ry="2" />
<text  x="196.65" y="111.5" ></text>
</g>
<g >
<title>std::uniform_int_distribution&lt;unsigned long&gt;::operator (55 samples, 0.11%)</title><rect x="857.9" y="453" width="1.3" height="15.0" fill="rgb(249,96,44)" rx="2" ry="2" />
<text  x="860.85" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (31 samples, 0.06%)</title><rect x="905.2" y="277" width="0.7" height="15.0" fill="rgb(232,203,48)" rx="2" ry="2" />
<text  x="908.17" y="287.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (91 samples, 0.19%)</title><rect x="175.0" y="101" width="2.2" height="15.0" fill="rgb(240,217,44)" rx="2" ry="2" />
<text  x="177.97" y="111.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;service::digest_read_resolver, false&gt;::make&lt;seastar::lw_shared_ptr&lt;schema const&gt;&amp;, db::consistency_level&amp;, unsigned long&amp;, unsigned long, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;&amp;&gt; (290 samples, 0.60%)</title><rect x="989.4" y="341" width="7.0" height="15.0" fill="rgb(216,159,34)" rx="2" ry="2" />
<text  x="992.35" y="351.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (9 samples, 0.02%)</title><rect x="696.2" y="469" width="0.2" height="15.0" fill="rgb(245,163,50)" rx="2" ry="2" />
<text  x="699.20" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (65 samples, 0.13%)</title><rect x="275.5" y="261" width="1.6" height="15.0" fill="rgb(230,92,4)" rx="2" ry="2" />
<text  x="278.51" y="271.5" ></text>
</g>
<g >
<title>absl::container_internal::operator== (11 samples, 0.02%)</title><rect x="754.9" y="357" width="0.2" height="15.0" fill="rgb(254,36,46)" rx="2" ry="2" />
<text  x="757.87" y="367.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::clear (8 samples, 0.02%)</title><rect x="443.6" y="293" width="0.2" height="15.0" fill="rgb(217,189,17)" rx="2" ry="2" />
<text  x="446.59" y="303.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (5 samples, 0.01%)</title><rect x="942.3" y="389" width="0.2" height="15.0" fill="rgb(235,204,21)" rx="2" ry="2" />
<text  x="945.34" y="399.5" ></text>
</g>
<g >
<title>bplus::searcher&lt;dht::ring_position, long, dht::raw_token_less_comparator, 16ul,  (37 samples, 0.08%)</title><rect x="459.3" y="293" width="0.9" height="15.0" fill="rgb(210,111,20)" rx="2" ry="2" />
<text  x="462.28" y="303.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (6 samples, 0.01%)</title><rect x="597.6" y="437" width="0.2" height="15.0" fill="rgb(238,115,6)" rx="2" ry="2" />
<text  x="600.65" y="447.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::result_memory_accounter (13 samples, 0.03%)</title><rect x="601.0" y="421" width="0.3" height="15.0" fill="rgb(252,129,1)" rx="2" ry="2" />
<text  x="604.01" y="431.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::value_ptr&gt; &gt;::invoke&lt;utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (72 samples, 0.15%)</title><rect x="735.8" y="357" width="1.8" height="15.0" fill="rgb(209,117,47)" rx="2" ry="2" />
<text  x="738.80" y="367.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume_in_thread&lt;sstables::sstable_writer&gt; (14 samples, 0.03%)</title><rect x="21.4" y="501" width="0.4" height="15.0" fill="rgb(218,5,32)" rx="2" ry="2" />
<text  x="24.45" y="511.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (11 samples, 0.02%)</title><rect x="58.3" y="453" width="0.3" height="15.0" fill="rgb(231,72,6)" rx="2" ry="2" />
<text  x="61.32" y="463.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (11 samples, 0.02%)</title><rect x="257.5" y="309" width="0.3" height="15.0" fill="rgb(223,169,12)" rx="2" ry="2" />
<text  x="260.54" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (6 samples, 0.01%)</title><rect x="331.9" y="181" width="0.1" height="15.0" fill="rgb(252,5,52)" rx="2" ry="2" />
<text  x="334.90" y="191.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_singular (555 samples, 1.15%)</title><rect x="1153.1" y="485" width="13.5" height="15.0" fill="rgb(233,158,22)" rx="2" ry="2" />
<text  x="1156.05" y="495.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::operator= (12 samples, 0.02%)</title><rect x="827.4" y="405" width="0.3" height="15.0" fill="rgb(227,1,50)" rx="2" ry="2" />
<text  x="830.38" y="415.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;reader_concurrency_semaphore::entry&gt; &gt;::destroy&lt;reader_concurrency_semaphore::entry&gt; (20 samples, 0.04%)</title><rect x="627.9" y="469" width="0.5" height="15.0" fill="rgb(229,70,13)" rx="2" ry="2" />
<text  x="630.92" y="479.5" ></text>
</g>
<g >
<title>operator delete (34 samples, 0.07%)</title><rect x="802.3" y="245" width="0.8" height="15.0" fill="rgb(213,97,45)" rx="2" ry="2" />
<text  x="805.27" y="255.5" ></text>
</g>
<g >
<title>operator delete (60 samples, 0.12%)</title><rect x="554.3" y="325" width="1.5" height="15.0" fill="rgb(243,71,5)" rx="2" ry="2" />
<text  x="557.30" y="335.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (117 samples, 0.24%)</title><rect x="563.3" y="293" width="2.8" height="15.0" fill="rgb(211,160,0)" rx="2" ry="2" />
<text  x="566.26" y="303.5" ></text>
</g>
<g >
<title>operator new (29 samples, 0.06%)</title><rect x="487.5" y="293" width="0.7" height="15.0" fill="rgb(227,2,32)" rx="2" ry="2" />
<text  x="490.49" y="303.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_token (20 samples, 0.04%)</title><rect x="646.5" y="437" width="0.5" height="15.0" fill="rgb(227,25,26)" rx="2" ry="2" />
<text  x="649.48" y="447.5" ></text>
</g>
<g >
<title>make_empty_flat_reader (148 samples, 0.31%)</title><rect x="526.6" y="309" width="3.6" height="15.0" fill="rgb(207,7,53)" rx="2" ry="2" />
<text  x="529.63" y="319.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (28 samples, 0.06%)</title><rect x="457.2" y="309" width="0.7" height="15.0" fill="rgb(220,7,19)" rx="2" ry="2" />
<text  x="460.19" y="319.5" ></text>
</g>
<g >
<title>basic_atomic_cell_view&lt; (18 samples, 0.04%)</title><rect x="369.5" y="181" width="0.4" height="15.0" fill="rgb(243,6,34)" rx="2" ry="2" />
<text  x="372.48" y="191.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;service::storage_proxy_coordinator_query_result&gt;::set_value&lt;service::storage_proxy_coordinator_query_result&gt; (36 samples, 0.07%)</title><rect x="1151.3" y="485" width="0.9" height="15.0" fill="rgb(232,14,23)" rx="2" ry="2" />
<text  x="1154.30" y="495.5" ></text>
</g>
<g >
<title>validation::validate_column_family (9 samples, 0.02%)</title><rect x="826.5" y="405" width="0.2" height="15.0" fill="rgb(224,24,26)" rx="2" ry="2" />
<text  x="829.50" y="415.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::take (23 samples, 0.05%)</title><rect x="265.7" y="341" width="0.5" height="15.0" fill="rgb(236,116,39)" rx="2" ry="2" />
<text  x="268.67" y="351.5" ></text>
</g>
<g >
<title>reader_selector::has_new_readers (5 samples, 0.01%)</title><rect x="441.2" y="293" width="0.1" height="15.0" fill="rgb(248,46,40)" rx="2" ry="2" />
<text  x="444.16" y="303.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::maybe_refresh_state (205 samples, 0.42%)</title><rect x="209.2" y="181" width="5.0" height="15.0" fill="rgb(247,128,34)" rx="2" ry="2" />
<text  x="212.19" y="191.5" ></text>
</g>
<g >
<title>ser::qr_partition__rows&lt;bytes_ostream&gt;::add (5 samples, 0.01%)</title><rect x="362.0" y="197" width="0.1" height="15.0" fill="rgb(218,68,26)" rx="2" ry="2" />
<text  x="364.95" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::vector (7 samples, 0.01%)</title><rect x="620.2" y="437" width="0.1" height="15.0" fill="rgb(219,87,21)" rx="2" ry="2" />
<text  x="623.16" y="447.5" ></text>
</g>
<g >
<title>std::__push_heap&lt;mutation_reader_merger::reader_and_fragment*, long, mutation_reader_merger::reader_and_fragment, __gnu_cxx::__ops::_Iter_comp_val&lt;mutation_reader_merger::reader_heap_compare&gt; &gt; (19 samples, 0.04%)</title><rect x="136.0" y="229" width="0.5" height="15.0" fill="rgb(247,215,12)" rx="2" ry="2" />
<text  x="139.02" y="239.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (5 samples, 0.01%)</title><rect x="1101.5" y="357" width="0.2" height="15.0" fill="rgb(205,45,42)" rx="2" ry="2" />
<text  x="1104.54" y="367.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::check_access (7 samples, 0.01%)</title><rect x="21.1" y="485" width="0.2" height="15.0" fill="rgb(205,162,48)" rx="2" ry="2" />
<text  x="24.11" y="495.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (5 samples, 0.01%)</title><rect x="17.0" y="245" width="0.1" height="15.0" fill="rgb(238,200,13)" rx="2" ry="2" />
<text  x="19.97" y="255.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::take_value (8 samples, 0.02%)</title><rect x="140.8" y="277" width="0.2" height="15.0" fill="rgb(245,120,8)" rx="2" ry="2" />
<text  x="143.79" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (27 samples, 0.06%)</title><rect x="1160.4" y="405" width="0.7" height="15.0" fill="rgb(211,74,42)" rx="2" ry="2" />
<text  x="1163.41" y="415.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::digest_read_result&gt;::then_wrapped_nrvo&lt;void, service::abstract_read_executor::execute (9 samples, 0.02%)</title><rect x="988.4" y="341" width="0.2" height="15.0" fill="rgb(254,209,20)" rx="2" ry="2" />
<text  x="991.38" y="351.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::at (48 samples, 0.10%)</title><rect x="753.1" y="357" width="1.2" height="15.0" fill="rgb(242,115,15)" rx="2" ry="2" />
<text  x="756.09" y="367.5" ></text>
</g>
<g >
<title>operator delete (14 samples, 0.03%)</title><rect x="45.9" y="501" width="0.3" height="15.0" fill="rgb(236,12,5)" rx="2" ry="2" />
<text  x="48.88" y="511.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt; &gt;::invoke&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (1,319 samples, 2.72%)</title><rect x="1015.2" y="277" width="32.1" height="15.0" fill="rgb(218,32,31)" rx="2" ry="2" />
<text  x="1018.17" y="287.5" >se..</text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_emplace&lt;nonwrapping_interval&lt;dht::token&gt;, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; (301 samples, 0.62%)</title><rect x="1156.0" y="469" width="7.4" height="15.0" fill="rgb(224,213,10)" rx="2" ry="2" />
<text  x="1159.02" y="479.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;clustering_key_prefix, false, false&gt;::_Optional_base (6 samples, 0.01%)</title><rect x="225.1" y="213" width="0.2" height="15.0" fill="rgb(211,14,47)" rx="2" ry="2" />
<text  x="228.14" y="223.5" ></text>
</g>
<g >
<title>operator new (82 samples, 0.17%)</title><rect x="1117.3" y="357" width="2.0" height="15.0" fill="rgb(251,119,41)" rx="2" ry="2" />
<text  x="1120.30" y="367.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::initial_key_restrictions&lt;partition_key&gt;::merge_to (5 samples, 0.01%)</title><rect x="20.6" y="389" width="0.1" height="15.0" fill="rgb(232,128,32)" rx="2" ry="2" />
<text  x="23.57" y="399.5" ></text>
</g>
<g >
<title>operator delete (23 samples, 0.05%)</title><rect x="614.6" y="389" width="0.5" height="15.0" fill="rgb(216,130,18)" rx="2" ry="2" />
<text  x="617.55" y="399.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (79 samples, 0.16%)</title><rect x="659.7" y="469" width="2.0" height="15.0" fill="rgb(238,120,4)" rx="2" ry="2" />
<text  x="662.73" y="479.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::storage_proxy&gt;::~shared_ptr (11 samples, 0.02%)</title><rect x="1152.7" y="485" width="0.3" height="15.0" fill="rgb(231,193,25)" rx="2" ry="2" />
<text  x="1155.71" y="495.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (10 samples, 0.02%)</title><rect x="214.7" y="149" width="0.3" height="15.0" fill="rgb(218,78,48)" rx="2" ry="2" />
<text  x="217.74" y="159.5" ></text>
</g>
<g >
<title>[[vdso]] (266 samples, 0.55%)</title><rect x="1179.3" y="613" width="6.5" height="15.0" fill="rgb(224,165,48)" rx="2" ry="2" />
<text  x="1182.28" y="623.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;managed_bytes&gt;::dispose (5 samples, 0.01%)</title><rect x="909.1" y="357" width="0.1" height="15.0" fill="rgb(252,123,20)" rx="2" ry="2" />
<text  x="912.07" y="367.5" ></text>
</g>
<g >
<title>std::__find_if&lt;gms::inet_address*, __gnu_cxx::__ops::_Iter_equals_val&lt;gms::inet_address const&gt; &gt; (12 samples, 0.02%)</title><rect x="1099.5" y="309" width="0.3" height="15.0" fill="rgb(218,141,47)" rx="2" ry="2" />
<text  x="1102.52" y="319.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;bool&gt;::move_it (5 samples, 0.01%)</title><rect x="777.7" y="325" width="0.2" height="15.0" fill="rgb(205,176,41)" rx="2" ry="2" />
<text  x="780.74" y="335.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::constant (11 samples, 0.02%)</title><rect x="18.7" y="277" width="0.3" height="15.0" fill="rgb(206,171,2)" rx="2" ry="2" />
<text  x="21.70" y="287.5" ></text>
</g>
<g >
<title>nonwrapping_interval&lt;dht::ring_position&gt;::make_singular (83 samples, 0.17%)</title><rect x="927.2" y="389" width="2.1" height="15.0" fill="rgb(220,36,50)" rx="2" ry="2" />
<text  x="930.24" y="399.5" ></text>
</g>
<g >
<title>std::__equal&lt;true&gt;::equal&lt;char&gt; (6 samples, 0.01%)</title><rect x="793.5" y="117" width="0.1" height="15.0" fill="rgb(254,73,2)" rx="2" ry="2" />
<text  x="796.50" y="127.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;gms::inet_address, std::pair&lt;gms::inet_address const, utils::UUID&gt;, std::allocator&lt;std::pair&lt;gms::inet_address const, utils::UUID&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;gms::inet_address&gt;, std::hash&lt;gms::inet_address&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (46 samples, 0.09%)</title><rect x="1153.9" y="437" width="1.1" height="15.0" fill="rgb(243,227,13)" rx="2" ry="2" />
<text  x="1156.90" y="447.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (5 samples, 0.01%)</title><rect x="584.2" y="421" width="0.1" height="15.0" fill="rgb(252,127,14)" rx="2" ry="2" />
<text  x="587.20" y="431.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (26 samples, 0.05%)</title><rect x="821.7" y="293" width="0.6" height="15.0" fill="rgb(225,226,10)" rx="2" ry="2" />
<text  x="824.71" y="303.5" ></text>
</g>
<g >
<title>write_cell&lt;ser::qr_clustered_row__cells__cells&lt;bytes_ostream&gt; &gt; (1,213 samples, 2.50%)</title><rect x="332.0" y="181" width="29.6" height="15.0" fill="rgb(205,206,37)" rx="2" ry="2" />
<text  x="335.04" y="191.5" >wr..</text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;query::read_command&gt;::make&lt;utils::UUID const&amp;, utils::UUID, query::partition_slice, query::max_result_size, query::row_limit, query::partition_limit, std::chrono::time_point&lt;gc_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt; &gt;&amp;, std::optional&lt;tracing::trace_info&gt;, utils::UUID, seastar::bool_class&lt;query::is_first_page_tag&gt; const&amp;, long&gt; (207 samples, 0.43%)</title><rect x="1128.6" y="421" width="5.1" height="15.0" fill="rgb(217,43,31)" rx="2" ry="2" />
<text  x="1131.65" y="431.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (13 samples, 0.03%)</title><rect x="1133.0" y="389" width="0.3" height="15.0" fill="rgb(212,171,2)" rx="2" ry="2" />
<text  x="1136.01" y="399.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (5 samples, 0.01%)</title><rect x="1133.2" y="373" width="0.1" height="15.0" fill="rgb(212,10,39)" rx="2" ry="2" />
<text  x="1136.20" y="383.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::get_per_partition_limit (13 samples, 0.03%)</title><rect x="1121.2" y="405" width="0.3" height="15.0" fill="rgb(230,170,11)" rx="2" ry="2" />
<text  x="1124.22" y="415.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (269 samples, 0.56%)</title><rect x="14.8" y="517" width="6.6" height="15.0" fill="rgb(211,69,37)" rx="2" ry="2" />
<text  x="17.80" y="527.5" ></text>
</g>
<g >
<title>make_combined_reader (755 samples, 1.56%)</title><rect x="432.9" y="325" width="18.4" height="15.0" fill="rgb(236,173,25)" rx="2" ry="2" />
<text  x="435.93" y="335.5" ></text>
</g>
<g >
<title>seastar::promise&lt;void&gt;::promise (16 samples, 0.03%)</title><rect x="1028.6" y="181" width="0.4" height="15.0" fill="rgb(231,79,3)" rx="2" ry="2" />
<text  x="1031.61" y="191.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (14 samples, 0.03%)</title><rect x="1119.0" y="325" width="0.3" height="15.0" fill="rgb(211,31,20)" rx="2" ry="2" />
<text  x="1121.95" y="335.5" ></text>
</g>
<g >
<title>operator new (59 samples, 0.12%)</title><rect x="533.6" y="405" width="1.5" height="15.0" fill="rgb(230,80,3)" rx="2" ry="2" />
<text  x="536.64" y="415.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::enqueue_waiter (413 samples, 0.85%)</title><rect x="1026.4" y="213" width="10.1" height="15.0" fill="rgb(215,214,50)" rx="2" ry="2" />
<text  x="1029.40" y="223.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::~small_vector (6 samples, 0.01%)</title><rect x="1174.4" y="421" width="0.1" height="15.0" fill="rgb(228,40,35)" rx="2" ry="2" />
<text  x="1177.39" y="431.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;std::function&lt;flat_mutation_reader  (5 samples, 0.01%)</title><rect x="604.8" y="437" width="0.2" height="15.0" fill="rgb(232,89,34)" rx="2" ry="2" />
<text  x="607.83" y="447.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (5 samples, 0.01%)</title><rect x="430.7" y="341" width="0.1" height="15.0" fill="rgb(206,193,34)" rx="2" ry="2" />
<text  x="433.66" y="351.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (11 samples, 0.02%)</title><rect x="693.4" y="469" width="0.3" height="15.0" fill="rgb(234,13,40)" rx="2" ry="2" />
<text  x="696.40" y="479.5" ></text>
</g>
<g >
<title>tombstone::operator&lt;=&gt; (8 samples, 0.02%)</title><rect x="385.6" y="181" width="0.1" height="15.0" fill="rgb(248,51,24)" rx="2" ry="2" />
<text  x="388.55" y="191.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;interval_bound&lt;dht::ring_position&gt;, false, false&gt;::_Optional_base (35 samples, 0.07%)</title><rect x="608.9" y="437" width="0.8" height="15.0" fill="rgb(205,167,26)" rx="2" ry="2" />
<text  x="611.85" y="447.5" ></text>
</g>
<g >
<title>std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (40 samples, 0.08%)</title><rect x="406.3" y="309" width="1.0" height="15.0" fill="rgb(226,89,9)" rx="2" ry="2" />
<text  x="409.33" y="319.5" ></text>
</g>
<g >
<title>row::~row (6 samples, 0.01%)</title><rect x="246.5" y="213" width="0.1" height="15.0" fill="rgb(224,124,24)" rx="2" ry="2" />
<text  x="249.45" y="223.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_internal&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt; &gt; (26 samples, 0.05%)</title><rect x="1142.1" y="325" width="0.6" height="15.0" fill="rgb(209,163,51)" rx="2" ry="2" />
<text  x="1145.09" y="335.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::impl (24 samples, 0.05%)</title><rect x="528.0" y="245" width="0.6" height="15.0" fill="rgb(215,171,2)" rx="2" ry="2" />
<text  x="530.97" y="255.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, fragmented_temporary_buffer::view, managed_bytes_basic_view&lt; (20 samples, 0.04%)</title><rect x="899.9" y="277" width="0.5" height="15.0" fill="rgb(217,213,47)" rx="2" ry="2" />
<text  x="902.87" y="287.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (13 samples, 0.03%)</title><rect x="649.3" y="453" width="0.3" height="15.0" fill="rgb(251,74,32)" rx="2" ry="2" />
<text  x="652.31" y="463.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (132 samples, 0.27%)</title><rect x="1062.9" y="309" width="3.2" height="15.0" fill="rgb(241,89,15)" rx="2" ry="2" />
<text  x="1065.86" y="319.5" ></text>
</g>
<g >
<title>std::apply&lt;auth::permissions_cache::get (641 samples, 1.32%)</title><rect x="785.4" y="261" width="15.6" height="15.0" fill="rgb(219,22,4)" rx="2" ry="2" />
<text  x="788.41" y="271.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (124 samples, 0.26%)</title><rect x="300.6" y="245" width="3.0" height="15.0" fill="rgb(217,156,19)" rx="2" ry="2" />
<text  x="303.62" y="255.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::clear (6 samples, 0.01%)</title><rect x="655.3" y="485" width="0.2" height="15.0" fill="rgb(238,6,51)" rx="2" ry="2" />
<text  x="658.33" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::_M_range_initialize&lt;nonwrapping_interval&lt;dht::ring_position&gt; const*&gt; (6 samples, 0.01%)</title><rect x="942.5" y="405" width="0.1" height="15.0" fill="rgb(217,27,40)" rx="2" ry="2" />
<text  x="945.46" y="415.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (19 samples, 0.04%)</title><rect x="517.7" y="341" width="0.4" height="15.0" fill="rgb(252,222,19)" rx="2" ry="2" />
<text  x="520.66" y="351.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::move_it (59 samples, 0.12%)</title><rect x="680.3" y="469" width="1.4" height="15.0" fill="rgb(241,228,53)" rx="2" ry="2" />
<text  x="683.27" y="479.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::operator= (16 samples, 0.03%)</title><rect x="1149.0" y="485" width="0.4" height="15.0" fill="rgb(252,50,35)" rx="2" ry="2" />
<text  x="1151.98" y="495.5" ></text>
</g>
<g >
<title>db::filter_for_query (24 samples, 0.05%)</title><rect x="1066.7" y="341" width="0.6" height="15.0" fill="rgb(250,35,40)" rx="2" ry="2" />
<text  x="1069.71" y="351.5" ></text>
</g>
<g >
<title>seastar::schedule (5 samples, 0.01%)</title><rect x="1145.0" y="501" width="0.1" height="15.0" fill="rgb(236,211,17)" rx="2" ry="2" />
<text  x="1147.99" y="511.5" ></text>
</g>
<g >
<title>seastar::lambda_task&lt;seastar::execution_stage::flush (7 samples, 0.01%)</title><rect x="24.2" y="517" width="0.2" height="15.0" fill="rgb(229,2,19)" rx="2" ry="2" />
<text  x="27.20" y="527.5" ></text>
</g>
<g >
<title>seastar::memory::stats (41 samples, 0.08%)</title><rect x="484.8" y="309" width="1.0" height="15.0" fill="rgb(226,114,36)" rx="2" ry="2" />
<text  x="487.83" y="319.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::free (6 samples, 0.01%)</title><rect x="400.8" y="213" width="0.2" height="15.0" fill="rgb(215,141,46)" rx="2" ry="2" />
<text  x="403.85" y="223.5" ></text>
</g>
<g >
<title>skip_empty_fragments&lt;managed_bytes_basic_view&lt; (6 samples, 0.01%)</title><rect x="933.1" y="325" width="0.2" height="15.0" fill="rgb(253,89,10)" rx="2" ry="2" />
<text  x="936.11" y="335.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::then_impl&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (22 samples, 0.05%)</title><rect x="112.6" y="373" width="0.6" height="15.0" fill="rgb(218,44,13)" rx="2" ry="2" />
<text  x="115.64" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (68 samples, 0.14%)</title><rect x="886.5" y="293" width="1.6" height="15.0" fill="rgb(231,208,11)" rx="2" ry="2" />
<text  x="889.49" y="303.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (79 samples, 0.16%)</title><rect x="377.5" y="149" width="1.9" height="15.0" fill="rgb(253,173,45)" rx="2" ry="2" />
<text  x="380.47" y="159.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::emplace_back&lt;mutation_reader_merger::reader_and_fragment&gt; (30 samples, 0.06%)</title><rect x="256.5" y="293" width="0.7" height="15.0" fill="rgb(248,146,4)" rx="2" ry="2" />
<text  x="259.46" y="303.5" ></text>
</g>
<g >
<title>reader_permit::impl::mark_unused (406 samples, 0.84%)</title><rect x="63.8" y="437" width="9.9" height="15.0" fill="rgb(215,101,8)" rx="2" ry="2" />
<text  x="66.83" y="447.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (5 samples, 0.01%)</title><rect x="107.5" y="421" width="0.1" height="15.0" fill="rgb(229,193,12)" rx="2" ry="2" />
<text  x="110.52" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%)</title><rect x="616.5" y="357" width="0.1" height="15.0" fill="rgb(219,199,13)" rx="2" ry="2" />
<text  x="619.45" y="367.5" ></text>
</g>
<g >
<title>reader_permit::impl::~impl (139 samples, 0.29%)</title><rect x="60.0" y="453" width="3.4" height="15.0" fill="rgb(246,195,35)" rx="2" ry="2" />
<text  x="62.98" y="463.5" ></text>
</g>
<g >
<title>row::row (25 samples, 0.05%)</title><rect x="245.4" y="197" width="0.6" height="15.0" fill="rgb(213,94,38)" rx="2" ry="2" />
<text  x="248.41" y="207.5" ></text>
</g>
<g >
<title>memtable::make_flat_reader (2,632 samples, 5.43%)</title><rect x="452.8" y="341" width="64.1" height="15.0" fill="rgb(221,90,17)" rx="2" ry="2" />
<text  x="455.80" y="351.5" >memtabl..</text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql_transport::messages::result_message::rows&gt;::shared_ptr_count_for&lt;cql3::result&gt; (48 samples, 0.10%)</title><rect x="652.2" y="453" width="1.2" height="15.0" fill="rgb(220,161,2)" rx="2" ry="2" />
<text  x="655.18" y="463.5" ></text>
</g>
<g >
<title>managed_bytes::external_memory_usage (17 samples, 0.04%)</title><rect x="501.1" y="213" width="0.5" height="15.0" fill="rgb(230,156,8)" rx="2" ry="2" />
<text  x="504.15" y="223.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::~small_vector (9 samples, 0.02%)</title><rect x="451.0" y="309" width="0.2" height="15.0" fill="rgb(251,116,54)" rx="2" ry="2" />
<text  x="453.97" y="319.5" ></text>
</g>
<g >
<title>position_in_partition_view::for_range_end (43 samples, 0.09%)</title><rect x="223.2" y="229" width="1.0" height="15.0" fill="rgb(226,129,54)" rx="2" ry="2" />
<text  x="226.19" y="239.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;compact_for_query&lt; (19 samples, 0.04%)</title><rect x="414.2" y="357" width="0.5" height="15.0" fill="rgb(251,122,34)" rx="2" ry="2" />
<text  x="417.25" y="367.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (10 samples, 0.02%)</title><rect x="964.5" y="373" width="0.3" height="15.0" fill="rgb(250,89,1)" rx="2" ry="2" />
<text  x="967.53" y="383.5" ></text>
</g>
<g >
<title>seastar::do_until&lt;flush_reader::fill_buffer (10 samples, 0.02%)</title><rect x="21.4" y="421" width="0.3" height="15.0" fill="rgb(218,61,13)" rx="2" ry="2" />
<text  x="24.45" y="431.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (297 samples, 0.61%)</title><rect x="474.9" y="229" width="7.2" height="15.0" fill="rgb(241,39,31)" rx="2" ry="2" />
<text  x="477.87" y="239.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser&lt;std::_Mem_fn&lt;std::unique_ptr&lt;cql3::statements::raw::parsed_statement, std::default_delete&lt;cql3::statements::raw::parsed_statement&gt; &gt;  (208 samples, 0.43%)</title><rect x="14.9" y="453" width="5.1" height="15.0" fill="rgb(242,175,1)" rx="2" ry="2" />
<text  x="17.90" y="463.5" ></text>
</g>
<g >
<title>seastar::internal::future_base::set_coroutine (12 samples, 0.02%)</title><rect x="1045.2" y="261" width="0.3" height="15.0" fill="rgb(245,30,35)" rx="2" ry="2" />
<text  x="1048.18" y="271.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::~holder (12 samples, 0.02%)</title><rect x="559.9" y="293" width="0.3" height="15.0" fill="rgb(206,88,9)" rx="2" ry="2" />
<text  x="562.92" y="303.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (98 samples, 0.20%)</title><rect x="190.2" y="117" width="2.4" height="15.0" fill="rgb(231,35,9)" rx="2" ry="2" />
<text  x="193.17" y="127.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (9 samples, 0.02%)</title><rect x="1106.1" y="389" width="0.2" height="15.0" fill="rgb(218,138,6)" rx="2" ry="2" />
<text  x="1109.12" y="399.5" ></text>
</g>
<g >
<title>operator delete (14 samples, 0.03%)</title><rect x="613.1" y="421" width="0.3" height="15.0" fill="rgb(248,58,18)" rx="2" ry="2" />
<text  x="616.07" y="431.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (16 samples, 0.03%)</title><rect x="39.9" y="453" width="0.4" height="15.0" fill="rgb(240,71,2)" rx="2" ry="2" />
<text  x="42.91" y="463.5" ></text>
</g>
<g >
<title>bytes_view_hasher::finalize (35 samples, 0.07%)</title><rect x="726.1" y="293" width="0.8" height="15.0" fill="rgb(234,221,31)" rx="2" ry="2" />
<text  x="729.08" y="303.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (18 samples, 0.04%)</title><rect x="488.8" y="309" width="0.4" height="15.0" fill="rgb(219,92,16)" rx="2" ry="2" />
<text  x="491.80" y="319.5" ></text>
</g>
<g >
<title>std::__equal&lt;true&gt;::equal&lt;signed char&gt; (6 samples, 0.01%)</title><rect x="724.6" y="293" width="0.2" height="15.0" fill="rgb(236,164,45)" rx="2" ry="2" />
<text  x="727.64" y="303.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (10 samples, 0.02%)</title><rect x="298.9" y="245" width="0.2" height="15.0" fill="rgb(207,11,54)" rx="2" ry="2" />
<text  x="301.89" y="255.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::digest_read_result&gt;::future (5 samples, 0.01%)</title><rect x="985.0" y="341" width="0.2" height="15.0" fill="rgb(252,163,19)" rx="2" ry="2" />
<text  x="988.04" y="351.5" ></text>
</g>
<g >
<title>tracing::global_trace_state_ptr::global_trace_state_ptr (6 samples, 0.01%)</title><rect x="1055.9" y="293" width="0.1" height="15.0" fill="rgb(206,104,48)" rx="2" ry="2" />
<text  x="1058.87" y="303.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::pop_mutation_fragment (6 samples, 0.01%)</title><rect x="404.9" y="277" width="0.2" height="15.0" fill="rgb(215,20,48)" rx="2" ry="2" />
<text  x="407.92" y="287.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::set_urgent_state (27 samples, 0.06%)</title><rect x="639.4" y="485" width="0.7" height="15.0" fill="rgb(210,27,34)" rx="2" ry="2" />
<text  x="642.42" y="495.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (346 samples, 0.71%)</title><rect x="392.6" y="245" width="8.4" height="15.0" fill="rgb(251,27,5)" rx="2" ry="2" />
<text  x="395.62" y="255.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::clear (8 samples, 0.02%)</title><rect x="800.7" y="197" width="0.2" height="15.0" fill="rgb(219,183,51)" rx="2" ry="2" />
<text  x="803.73" y="207.5" ></text>
</g>
<g >
<title>reader_permit::consume (20 samples, 0.04%)</title><rect x="389.4" y="229" width="0.4" height="15.0" fill="rgb(241,107,7)" rx="2" ry="2" />
<text  x="392.35" y="239.5" ></text>
</g>
<g >
<title>mutation_reader_merger::~mutation_reader_merger (330 samples, 0.68%)</title><rect x="573.5" y="373" width="8.1" height="15.0" fill="rgb(205,77,45)" rx="2" ry="2" />
<text  x="576.54" y="383.5" ></text>
</g>
<g >
<title>memtable::find_or_create_partition_slow (10 samples, 0.02%)</title><rect x="1141.1" y="245" width="0.3" height="15.0" fill="rgb(210,37,46)" rx="2" ry="2" />
<text  x="1144.14" y="255.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take (5 samples, 0.01%)</title><rect x="745.5" y="389" width="0.2" height="15.0" fill="rgb(227,121,51)" rx="2" ry="2" />
<text  x="748.54" y="399.5" ></text>
</g>
<g >
<title>schema_registry::get_entry (179 samples, 0.37%)</title><rect x="975.2" y="341" width="4.4" height="15.0" fill="rgb(215,151,53)" rx="2" ry="2" />
<text  x="978.22" y="351.5" ></text>
</g>
<g >
<title>reader_permit::consume_resources (16 samples, 0.03%)</title><rect x="155.2" y="197" width="0.4" height="15.0" fill="rgb(250,134,48)" rx="2" ry="2" />
<text  x="158.19" y="207.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextToken (44 samples, 0.09%)</title><rect x="15.6" y="309" width="1.1" height="15.0" fill="rgb(211,28,51)" rx="2" ry="2" />
<text  x="18.60" y="319.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;service::abstract_read_executor::execute (11 samples, 0.02%)</title><rect x="688.6" y="453" width="0.2" height="15.0" fill="rgb(205,5,11)" rx="2" ry="2" />
<text  x="691.57" y="463.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::key_is_in_relation (34 samples, 0.07%)</title><rect x="954.5" y="389" width="0.9" height="15.0" fill="rgb(225,194,48)" rx="2" ry="2" />
<text  x="957.55" y="399.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (5 samples, 0.01%)</title><rect x="935.5" y="373" width="0.2" height="15.0" fill="rgb(254,37,29)" rx="2" ry="2" />
<text  x="938.55" y="383.5" ></text>
</g>
<g >
<title>cql3::query_options::query_options (181 samples, 0.37%)</title><rect x="847.9" y="437" width="4.4" height="15.0" fill="rgb(225,11,13)" rx="2" ry="2" />
<text  x="850.91" y="447.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (6 samples, 0.01%)</title><rect x="777.5" y="309" width="0.1" height="15.0" fill="rgb(223,171,19)" rx="2" ry="2" />
<text  x="780.50" y="319.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_slice_or_needs_filtering (5 samples, 0.01%)</title><rect x="947.9" y="357" width="0.1" height="15.0" fill="rgb(252,173,14)" rx="2" ry="2" />
<text  x="950.87" y="367.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (8 samples, 0.02%)</title><rect x="212.0" y="101" width="0.2" height="15.0" fill="rgb(253,225,0)" rx="2" ry="2" />
<text  x="215.01" y="111.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_impl&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (4,959 samples, 10.24%)</title><rect x="290.4" y="325" width="120.8" height="15.0" fill="rgb(252,224,24)" rx="2" ry="2" />
<text  x="293.44" y="335.5" >seastar::intern..</text>
</g>
<g >
<title>service::digest_read_resolver::digests_match (9 samples, 0.02%)</title><rect x="702.7" y="421" width="0.2" height="15.0" fill="rgb(250,199,5)" rx="2" ry="2" />
<text  x="705.70" y="431.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::partition_snapshot_flat_reader&lt;memtable&amp;&gt; (7 samples, 0.01%)</title><rect x="488.6" y="309" width="0.2" height="15.0" fill="rgb(226,139,27)" rx="2" ry="2" />
<text  x="491.63" y="319.5" ></text>
</g>
<g >
<title>read_simple&lt;unsigned short, managed_bytes_basic_view&lt; (11 samples, 0.02%)</title><rect x="919.7" y="373" width="0.3" height="15.0" fill="rgb(252,6,39)" rx="2" ry="2" />
<text  x="922.69" y="383.5" ></text>
</g>
<g >
<title>row::compact_and_expire (757 samples, 1.56%)</title><rect x="366.6" y="213" width="18.4" height="15.0" fill="rgb(248,10,22)" rx="2" ry="2" />
<text  x="369.55" y="223.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::push_static_row (194 samples, 0.40%)</title><rect x="242.4" y="261" width="4.7" height="15.0" fill="rgb(227,83,46)" rx="2" ry="2" />
<text  x="245.36" y="271.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::tombstone_for_row (19 samples, 0.04%)</title><rect x="366.1" y="213" width="0.5" height="15.0" fill="rgb(210,90,39)" rx="2" ry="2" />
<text  x="369.09" y="223.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::clear (6 samples, 0.01%)</title><rect x="1150.9" y="485" width="0.2" height="15.0" fill="rgb(232,7,51)" rx="2" ry="2" />
<text  x="1153.93" y="495.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (8 samples, 0.02%)</title><rect x="1056.7" y="325" width="0.2" height="15.0" fill="rgb(211,211,16)" rx="2" ry="2" />
<text  x="1059.72" y="335.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (7 samples, 0.01%)</title><rect x="1038.3" y="229" width="0.2" height="15.0" fill="rgb(207,106,41)" rx="2" ry="2" />
<text  x="1041.28" y="239.5" ></text>
</g>
<g >
<title>logalloc::basic_region_impl::set_reclaiming_enabled (6 samples, 0.01%)</title><rect x="519.7" y="325" width="0.2" height="15.0" fill="rgb(243,100,3)" rx="2" ry="2" />
<text  x="522.73" y="335.5" ></text>
</g>
<g >
<title>utils::config_file::named_value&lt;unsigned long&gt;::the_value (50 samples, 0.10%)</title><rect x="1135.6" y="389" width="1.2" height="15.0" fill="rgb(230,39,1)" rx="2" ry="2" />
<text  x="1138.56" y="399.5" ></text>
</g>
<g >
<title>schema_registry::get (200 samples, 0.41%)</title><rect x="974.9" y="357" width="4.9" height="15.0" fill="rgb(248,174,22)" rx="2" ry="2" />
<text  x="977.88" y="367.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (6 samples, 0.01%)</title><rect x="1045.5" y="261" width="0.1" height="15.0" fill="rgb(226,120,43)" rx="2" ry="2" />
<text  x="1048.47" y="271.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::pop_back (14 samples, 0.03%)</title><rect x="257.2" y="293" width="0.3" height="15.0" fill="rgb(238,22,12)" rx="2" ry="2" />
<text  x="260.19" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (62 samples, 0.13%)</title><rect x="1042.9" y="245" width="1.5" height="15.0" fill="rgb(236,97,37)" rx="2" ry="2" />
<text  x="1045.91" y="255.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::on_permit_destroyed (19 samples, 0.04%)</title><rect x="60.9" y="437" width="0.4" height="15.0" fill="rgb(238,213,17)" rx="2" ry="2" />
<text  x="63.88" y="447.5" ></text>
</g>
<g >
<title>TLS init function for cql3::statements::select_statement::_default_parameters (5 samples, 0.01%)</title><rect x="748.0" y="389" width="0.1" height="15.0" fill="rgb(254,90,27)" rx="2" ry="2" />
<text  x="750.98" y="399.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (7 samples, 0.01%)</title><rect x="256.2" y="293" width="0.1" height="15.0" fill="rgb(242,12,41)" rx="2" ry="2" />
<text  x="259.17" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (69 samples, 0.14%)</title><rect x="964.9" y="357" width="1.7" height="15.0" fill="rgb(254,132,27)" rx="2" ry="2" />
<text  x="967.87" y="367.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::~_Variant_storage (7 samples, 0.01%)</title><rect x="315.9" y="181" width="0.2" height="15.0" fill="rgb(250,59,14)" rx="2" ry="2" />
<text  x="318.94" y="191.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (5 samples, 0.01%)</title><rect x="854.7" y="469" width="0.1" height="15.0" fill="rgb(232,186,31)" rx="2" ry="2" />
<text  x="857.68" y="479.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (4,404 samples, 9.09%)</title><rect x="141.1" y="309" width="107.3" height="15.0" fill="rgb(236,122,11)" rx="2" ry="2" />
<text  x="144.14" y="319.5" >partition_sna..</text>
</g>
<g >
<title>ser::writer_of_qr_clustered_row&lt;bytes_ostream&gt;::skip_key (17 samples, 0.04%)</title><rect x="331.3" y="181" width="0.4" height="15.0" fill="rgb(229,163,24)" rx="2" ry="2" />
<text  x="334.34" y="191.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::guard (7 samples, 0.01%)</title><rect x="142.8" y="261" width="0.1" height="15.0" fill="rgb(228,172,48)" rx="2" ry="2" />
<text  x="145.77" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (12 samples, 0.02%)</title><rect x="640.1" y="485" width="0.3" height="15.0" fill="rgb(242,13,49)" rx="2" ry="2" />
<text  x="643.10" y="495.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::get_at (20 samples, 0.04%)</title><rect x="325.1" y="181" width="0.5" height="15.0" fill="rgb(228,69,19)" rx="2" ry="2" />
<text  x="328.12" y="191.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::on_new_range (380 samples, 0.78%)</title><rect x="147.2" y="245" width="9.3" height="15.0" fill="rgb(222,24,15)" rx="2" ry="2" />
<text  x="150.20" y="255.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperationDifferentiator (62 samples, 0.13%)</title><rect x="17.6" y="341" width="1.5" height="15.0" fill="rgb(223,174,37)" rx="2" ry="2" />
<text  x="20.55" y="351.5" ></text>
</g>
<g >
<title>service::storage_proxy::new_read_repair_decision (6 samples, 0.01%)</title><rect x="1101.4" y="357" width="0.1" height="15.0" fill="rgb(230,28,44)" rx="2" ry="2" />
<text  x="1104.39" y="367.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (15 samples, 0.03%)</title><rect x="1109.0" y="389" width="0.3" height="15.0" fill="rgb(236,171,41)" rx="2" ry="2" />
<text  x="1111.97" y="399.5" ></text>
</g>
<g >
<title>mutation_partition_serializer::write_serialized&lt;ser::writer_of_mutation_partition&lt;bytes_ostream&gt; &gt; (5 samples, 0.01%)</title><rect x="1142.4" y="165" width="0.1" height="15.0" fill="rgb(254,196,45)" rx="2" ry="2" />
<text  x="1145.41" y="175.5" ></text>
</g>
<g >
<title>managed_bytes::operator= (52 samples, 0.11%)</title><rect x="934.4" y="405" width="1.3" height="15.0" fill="rgb(250,228,45)" rx="2" ry="2" />
<text  x="937.43" y="415.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_Optional_payload_base (46 samples, 0.09%)</title><rect x="1119.3" y="357" width="1.1" height="15.0" fill="rgb(211,199,33)" rx="2" ry="2" />
<text  x="1122.29" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::~vector (20 samples, 0.04%)</title><rect x="634.3" y="469" width="0.5" height="15.0" fill="rgb(207,194,48)" rx="2" ry="2" />
<text  x="637.28" y="479.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_state&lt;std::tuple&lt;std::optional&lt;auth::resource&gt; &gt;, seastar::future&lt;bool&gt; &gt;::do_with_state&lt;std::optional&lt;auth::resource&gt; &gt; (32 samples, 0.07%)</title><rect x="774.1" y="309" width="0.8" height="15.0" fill="rgb(220,229,10)" rx="2" ry="2" />
<text  x="777.14" y="319.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (8 samples, 0.02%)</title><rect x="527.2" y="277" width="0.2" height="15.0" fill="rgb(253,128,24)" rx="2" ry="2" />
<text  x="530.21" y="287.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (5 samples, 0.01%)</title><rect x="17.0" y="293" width="0.1" height="15.0" fill="rgb(216,131,22)" rx="2" ry="2" />
<text  x="19.97" y="303.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_Optional_payload_base (17 samples, 0.04%)</title><rect x="933.7" y="389" width="0.5" height="15.0" fill="rgb(244,209,24)" rx="2" ry="2" />
<text  x="936.75" y="399.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (5 samples, 0.01%)</title><rect x="142.6" y="261" width="0.1" height="15.0" fill="rgb(245,207,42)" rx="2" ry="2" />
<text  x="145.57" y="271.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;cql3::query_processor&gt;::local (21 samples, 0.04%)</title><rect x="833.5" y="437" width="0.5" height="15.0" fill="rgb(211,171,20)" rx="2" ry="2" />
<text  x="836.52" y="447.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (10 samples, 0.02%)</title><rect x="48.5" y="485" width="0.2" height="15.0" fill="rgb(252,137,52)" rx="2" ry="2" />
<text  x="51.48" y="495.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::reset_state (571 samples, 1.18%)</title><rect x="228.0" y="245" width="13.9" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="231.04" y="255.5" ></text>
</g>
<g >
<title>seastar::internal::awaiter&lt;void&gt;::await_suspend&lt;seastar::internal::coroutine_traits_base&lt;std::tuple&lt;seastar::lw_shared_ptr&lt;query::result&gt;, cache_temperature&gt; &gt;::promise_type&gt; (5 samples, 0.01%)</title><rect x="1045.1" y="261" width="0.1" height="15.0" fill="rgb(241,196,16)" rx="2" ry="2" />
<text  x="1048.05" y="271.5" ></text>
</g>
<g >
<title>operator new (62 samples, 0.13%)</title><rect x="1038.9" y="213" width="1.5" height="15.0" fill="rgb(246,6,13)" rx="2" ry="2" />
<text  x="1041.87" y="223.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (22 samples, 0.05%)</title><rect x="515.4" y="325" width="0.5" height="15.0" fill="rgb(246,181,52)" rx="2" ry="2" />
<text  x="518.37" y="335.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;::operator== (23 samples, 0.05%)</title><rect x="724.2" y="309" width="0.6" height="15.0" fill="rgb(219,128,47)" rx="2" ry="2" />
<text  x="727.23" y="319.5" ></text>
</g>
<g >
<title>std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt; &gt;, seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (42 samples, 0.09%)</title><rect x="803.3" y="245" width="1.1" height="15.0" fill="rgb(211,155,38)" rx="2" ry="2" />
<text  x="806.34" y="255.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_4findERKNS5_10expressionENS5_6oper_tEEUlRS7_E_EES8_SE_T_EUlSG_E_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_8constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_11conjunctionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_12column_valueEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_5tokenEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13function_callEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4castEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_15field_selectionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4nullEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13bind_variableEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_16untyped_constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_17tuple_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_22collection_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSO_S6_SS_SW_S10_S14_S18_S1C_S1G_S1K_S1O_S1S_SK_S1W_S20_S24_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES29_S2C_ (6 samples, 0.01%)</title><rect x="647.7" y="437" width="0.1" height="15.0" fill="rgb(245,141,17)" rx="2" ry="2" />
<text  x="650.68" y="447.5" ></text>
</g>
<g >
<title>frozen_mutation::frozen_mutation (10 samples, 0.02%)</title><rect x="1142.4" y="181" width="0.2" height="15.0" fill="rgb(228,74,46)" rx="2" ry="2" />
<text  x="1145.38" y="191.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (19 samples, 0.04%)</title><rect x="838.0" y="357" width="0.5" height="15.0" fill="rgb(238,28,15)" rx="2" ry="2" />
<text  x="841.02" y="367.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (17 samples, 0.04%)</title><rect x="939.2" y="405" width="0.4" height="15.0" fill="rgb(209,17,54)" rx="2" ry="2" />
<text  x="942.23" y="415.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (5 samples, 0.01%)</title><rect x="867.7" y="437" width="0.1" height="15.0" fill="rgb(225,160,2)" rx="2" ry="2" />
<text  x="870.67" y="447.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reclaiming_disabled&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::get_static_row (164 samples, 0.34%)</title><rect x="242.8" y="229" width="4.0" height="15.0" fill="rgb(235,126,41)" rx="2" ry="2" />
<text  x="245.80" y="239.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::~impl (67 samples, 0.14%)</title><rect x="557.6" y="309" width="1.7" height="15.0" fill="rgb(245,62,53)" rx="2" ry="2" />
<text  x="560.63" y="319.5" ></text>
</g>
<g >
<title>seastar::internal::uninitialized_wrapper_base&lt;service::storage_proxy_coordinator_query_result, false&gt;::uninitialized_set&lt;service::storage_proxy_coordinator_query_result&gt; (78 samples, 0.16%)</title><rect x="676.8" y="469" width="1.9" height="15.0" fill="rgb(243,117,39)" rx="2" ry="2" />
<text  x="679.78" y="479.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::local (25 samples, 0.05%)</title><rect x="1067.7" y="341" width="0.6" height="15.0" fill="rgb(242,183,20)" rx="2" ry="2" />
<text  x="1070.73" y="351.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE8scheduleINS_8internal22promise_base_with_typeIvEEZNS6_14discard_resultEvEUlDpOT_E_ZNS6_14then_impl_nrvoISE_NS0_IvEEEET0_OT_EUlOSA_RSE_ONS_12future_stateIS5_EEE_EEvSJ_OSH_OT1_ (71 samples, 0.15%)</title><rect x="714.6" y="437" width="1.8" height="15.0" fill="rgb(227,130,41)" rx="2" ry="2" />
<text  x="717.63" y="447.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;, service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (15 samples, 0.03%)</title><rect x="1142.4" y="293" width="0.3" height="15.0" fill="rgb(245,94,46)" rx="2" ry="2" />
<text  x="1145.36" y="303.5" ></text>
</g>
<g >
<title>main (47,461 samples, 97.96%)</title><rect x="21.9" y="613" width="1155.9" height="15.0" fill="rgb(210,165,41)" rx="2" ry="2" />
<text  x="24.86" y="623.5" >main</text>
</g>
<g >
<title>operator delete (30 samples, 0.06%)</title><rect x="672.5" y="485" width="0.8" height="15.0" fill="rgb(206,203,23)" rx="2" ry="2" />
<text  x="675.52" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (62 samples, 0.13%)</title><rect x="850.1" y="341" width="1.5" height="15.0" fill="rgb(210,220,25)" rx="2" ry="2" />
<text  x="853.08" y="351.5" ></text>
</g>
<g >
<title>database::has_keyspace (174 samples, 0.36%)</title><rect x="836.0" y="421" width="4.2" height="15.0" fill="rgb(232,212,11)" rx="2" ry="2" />
<text  x="838.98" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_insert&lt;flat_mutation_reader&gt; (71 samples, 0.15%)</title><rect x="436.9" y="261" width="1.8" height="15.0" fill="rgb(209,90,46)" rx="2" ry="2" />
<text  x="439.92" y="271.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (9 samples, 0.02%)</title><rect x="509.9" y="293" width="0.3" height="15.0" fill="rgb(217,190,25)" rx="2" ry="2" />
<text  x="512.94" y="303.5" ></text>
</g>
<g >
<title>std::optional&lt;position_in_partition&gt;::operator=&lt;position_in_partition&gt; (29 samples, 0.06%)</title><rect x="226.7" y="245" width="0.8" height="15.0" fill="rgb(233,191,12)" rx="2" ry="2" />
<text  x="229.75" y="255.5" ></text>
</g>
<g >
<title>std::default_delete&lt;mutation_fragment::data&gt;::operator (37 samples, 0.08%)</title><rect x="404.0" y="245" width="0.9" height="15.0" fill="rgb(214,106,37)" rx="2" ry="2" />
<text  x="407.02" y="255.5" ></text>
</g>
<g >
<title>std::function&lt;seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (8 samples, 0.02%)</title><rect x="789.9" y="213" width="0.2" height="15.0" fill="rgb(216,85,13)" rx="2" ry="2" />
<text  x="792.90" y="223.5" ></text>
</g>
<g >
<title>flat_mutation_reader::close (25 samples, 0.05%)</title><rect x="548.1" y="421" width="0.6" height="15.0" fill="rgb(215,89,13)" rx="2" ry="2" />
<text  x="551.11" y="431.5" ></text>
</g>
<g >
<title>operator new (6 samples, 0.01%)</title><rect x="527.0" y="277" width="0.1" height="15.0" fill="rgb(212,78,26)" rx="2" ry="2" />
<text  x="529.99" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::vector (5 samples, 0.01%)</title><rect x="1138.4" y="421" width="0.1" height="15.0" fill="rgb(246,194,37)" rx="2" ry="2" />
<text  x="1141.39" y="431.5" ></text>
</g>
<g >
<title>bplus::tree&lt;long, intrusive_array&lt;memtable_entry&gt;, dht::raw_token_less_comparator, 16ul,  (498 samples, 1.03%)</title><rect x="458.5" y="309" width="12.1" height="15.0" fill="rgb(238,200,36)" rx="2" ry="2" />
<text  x="461.45" y="319.5" ></text>
</g>
<g >
<title>bplus::searcher&lt;dht::ring_position, long, dht::raw_token_less_comparator, 16ul,  (193 samples, 0.40%)</title><rect x="464.5" y="277" width="4.7" height="15.0" fill="rgb(241,24,47)" rx="2" ry="2" />
<text  x="467.52" y="287.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (13 samples, 0.03%)</title><rect x="222.0" y="213" width="0.3" height="15.0" fill="rgb(238,102,25)" rx="2" ry="2" />
<text  x="224.95" y="223.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::set_urgent_state (37 samples, 0.08%)</title><rect x="630.3" y="485" width="0.9" height="15.0" fill="rgb(246,222,22)" rx="2" ry="2" />
<text  x="633.31" y="495.5" ></text>
</g>
<g >
<title>std::__lower_bound&lt;__gnu_cxx::__normal_iterator&lt;long*, std::vector&lt;long, std::allocator&lt;long&gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_less_val&gt; (6 samples, 0.01%)</title><rect x="1163.5" y="469" width="0.2" height="15.0" fill="rgb(250,145,39)" rx="2" ry="2" />
<text  x="1166.55" y="479.5" ></text>
</g>
<g >
<title>double_decker&lt;long, memtable_entry, dht::raw_token_less_comparator, dht::ring_position_comparator, 16,  (1,014 samples, 2.09%)</title><rect x="457.9" y="325" width="24.7" height="15.0" fill="rgb(229,162,23)" rx="2" ry="2" />
<text  x="460.87" y="335.5" >d..</text>
</g>
<g >
<title>std::_Optional_payload_base&lt;dht::decorated_key&gt;::_Optional_payload_base (5 samples, 0.01%)</title><rect x="292.5" y="293" width="0.1" height="15.0" fill="rgb(206,167,21)" rx="2" ry="2" />
<text  x="295.49" y="303.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (5 samples, 0.01%)</title><rect x="716.2" y="421" width="0.1" height="15.0" fill="rgb(237,120,21)" rx="2" ry="2" />
<text  x="719.19" y="431.5" ></text>
</g>
<g >
<title>operator new (29 samples, 0.06%)</title><rect x="783.2" y="245" width="0.7" height="15.0" fill="rgb(237,109,18)" rx="2" ry="2" />
<text  x="786.20" y="255.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (27 samples, 0.06%)</title><rect x="822.6" y="293" width="0.6" height="15.0" fill="rgb(223,3,34)" rx="2" ry="2" />
<text  x="825.58" y="303.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (22 samples, 0.05%)</title><rect x="76.7" y="453" width="0.5" height="15.0" fill="rgb(218,88,14)" rx="2" ry="2" />
<text  x="79.71" y="463.5" ></text>
</g>
<g >
<title>malloc (19 samples, 0.04%)</title><rect x="596.5" y="373" width="0.5" height="15.0" fill="rgb(219,110,54)" rx="2" ry="2" />
<text  x="599.50" y="383.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::set_value&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt; (33 samples, 0.07%)</title><rect x="689.5" y="453" width="0.8" height="15.0" fill="rgb(242,77,42)" rx="2" ry="2" />
<text  x="692.47" y="463.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.01%)</title><rect x="10.0" y="613" width="0.1" height="15.0" fill="rgb(219,3,40)" rx="2" ry="2" />
<text  x="13.02" y="623.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (30 samples, 0.06%)</title><rect x="207.3" y="149" width="0.7" height="15.0" fill="rgb(229,43,17)" rx="2" ry="2" />
<text  x="210.26" y="159.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_Optional_payload_base (30 samples, 0.06%)</title><rect x="1075.0" y="293" width="0.7" height="15.0" fill="rgb(229,217,45)" rx="2" ry="2" />
<text  x="1078.01" y="303.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::storage_proxy&gt;::~shared_ptr (7 samples, 0.01%)</title><rect x="967.7" y="373" width="0.2" height="15.0" fill="rgb(224,71,22)" rx="2" ry="2" />
<text  x="970.72" y="383.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (40 samples, 0.08%)</title><rect x="790.6" y="197" width="0.9" height="15.0" fill="rgb(211,117,5)" rx="2" ry="2" />
<text  x="793.55" y="207.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (5 samples, 0.01%)</title><rect x="763.7" y="341" width="0.1" height="15.0" fill="rgb(208,36,43)" rx="2" ry="2" />
<text  x="766.66" y="351.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (5 samples, 0.01%)</title><rect x="17.0" y="229" width="0.1" height="15.0" fill="rgb(239,63,21)" rx="2" ry="2" />
<text  x="19.97" y="239.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::get0 (7 samples, 0.01%)</title><rect x="43.5" y="485" width="0.1" height="15.0" fill="rgb(226,154,28)" rx="2" ry="2" />
<text  x="46.47" y="495.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_create_nodes (64 samples, 0.13%)</title><rect x="542.5" y="357" width="1.6" height="15.0" fill="rgb(215,203,25)" rx="2" ry="2" />
<text  x="545.53" y="367.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (14 samples, 0.03%)</title><rect x="227.5" y="245" width="0.3" height="15.0" fill="rgb(214,97,4)" rx="2" ry="2" />
<text  x="230.45" y="255.5" ></text>
</g>
<g >
<title>create_partitions (275 samples, 0.57%)</title><rect x="14.7" y="533" width="6.7" height="15.0" fill="rgb(248,38,52)" rx="2" ry="2" />
<text  x="17.70" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (5 samples, 0.01%)</title><rect x="384.6" y="165" width="0.1" height="15.0" fill="rgb(208,166,17)" rx="2" ry="2" />
<text  x="387.63" y="175.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;bytes_ostream::chunk, std::default_delete&lt;bytes_ostream::chunk&gt; &gt;::reset (5 samples, 0.01%)</title><rect x="597.2" y="389" width="0.2" height="15.0" fill="rgb(242,146,52)" rx="2" ry="2" />
<text  x="600.24" y="399.5" ></text>
</g>
<g >
<title>operator delete (17 samples, 0.04%)</title><rect x="572.3" y="341" width="0.5" height="15.0" fill="rgb(232,216,9)" rx="2" ry="2" />
<text  x="575.34" y="351.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (6 samples, 0.01%)</title><rect x="1053.4" y="181" width="0.2" height="15.0" fill="rgb(238,90,39)" rx="2" ry="2" />
<text  x="1056.43" y="191.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt;::~_Variant_storage (5 samples, 0.01%)</title><rect x="906.9" y="341" width="0.2" height="15.0" fill="rgb(242,160,4)" rx="2" ry="2" />
<text  x="909.93" y="351.5" ></text>
</g>
<g >
<title>locator::i_endpoint_snitch::snitch_instance (6 samples, 0.01%)</title><rect x="1098.9" y="309" width="0.2" height="15.0" fill="rgb(231,12,39)" rx="2" ry="2" />
<text  x="1101.91" y="319.5" ></text>
</g>
<g >
<title>service::storage_proxy_stats::split_stats::get_ep_stat (15 samples, 0.03%)</title><rect x="703.9" y="453" width="0.4" height="15.0" fill="rgb(238,209,51)" rx="2" ry="2" />
<text  x="706.89" y="463.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_erase_at_end (72 samples, 0.15%)</title><rect x="364.2" y="181" width="1.7" height="15.0" fill="rgb(226,63,30)" rx="2" ry="2" />
<text  x="367.17" y="191.5" ></text>
</g>
<g >
<title>query::querier&lt; (15 samples, 0.03%)</title><rect x="58.6" y="453" width="0.4" height="15.0" fill="rgb(220,209,35)" rx="2" ry="2" />
<text  x="61.59" y="463.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (45 samples, 0.09%)</title><rect x="1141.0" y="389" width="1.1" height="15.0" fill="rgb(217,228,5)" rx="2" ry="2" />
<text  x="1143.97" y="399.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;position_in_partition&gt;::_M_reset (6 samples, 0.01%)</title><rect x="247.9" y="261" width="0.1" height="15.0" fill="rgb(211,211,40)" rx="2" ry="2" />
<text  x="250.89" y="271.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::deallocate (6 samples, 0.01%)</title><rect x="553.0" y="293" width="0.2" height="15.0" fill="rgb(237,214,12)" rx="2" ry="2" />
<text  x="556.03" y="303.5" ></text>
</g>
<g >
<title>reader_permit::impl::mark_used (5 samples, 0.01%)</title><rect x="50.8" y="469" width="0.1" height="15.0" fill="rgb(235,173,37)" rx="2" ry="2" />
<text  x="53.77" y="479.5" ></text>
</g>
<g >
<title>operator new (48 samples, 0.10%)</title><rect x="1159.9" y="437" width="1.2" height="15.0" fill="rgb(226,2,53)" rx="2" ry="2" />
<text  x="1162.90" y="447.5" ></text>
</g>
<g >
<title>query::digester::digester (17 samples, 0.04%)</title><rect x="594.5" y="405" width="0.4" height="15.0" fill="rgb(242,81,2)" rx="2" ry="2" />
<text  x="597.53" y="415.5" ></text>
</g>
<g >
<title>operator new (115 samples, 0.24%)</title><rect x="1021.7" y="245" width="2.8" height="15.0" fill="rgb(232,149,3)" rx="2" ry="2" />
<text  x="1024.75" y="255.5" ></text>
</g>
<g >
<title>std::__equal&lt;true&gt;::equal&lt;signed char&gt; (8 samples, 0.02%)</title><rect x="741.3" y="277" width="0.2" height="15.0" fill="rgb(245,90,31)" rx="2" ry="2" />
<text  x="744.33" y="287.5" ></text>
</g>
<g >
<title>cql3::raw_value_view::raw_value_view (6 samples, 0.01%)</title><rect x="906.7" y="341" width="0.1" height="15.0" fill="rgb(205,111,26)" rx="2" ry="2" />
<text  x="909.69" y="351.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_map&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::at&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt; &gt; (153 samples, 0.32%)</title><rect x="1062.4" y="325" width="3.8" height="15.0" fill="rgb(253,114,25)" rx="2" ry="2" />
<text  x="1065.44" y="335.5" ></text>
</g>
<g >
<title>memtable::upgrade_entry (10 samples, 0.02%)</title><rect x="516.9" y="341" width="0.3" height="15.0" fill="rgb(205,140,41)" rx="2" ry="2" />
<text  x="519.91" y="351.5" ></text>
</g>
<g >
<title>boost::intrusive::bstree_algorithms&lt;boost::intrusive::rbtree_node_traits&lt;void*, false&gt; &gt;::clear_and_dispose&lt;boost::intrusive::detail::node_disposer&lt;boost::intrusive::detail::null_disposer, boost::intrusive::mhtraits&lt;range_tombstone_entry, boost::intrusive::set_member_hook&lt;boost::intrusive::link_mode&lt; (7 samples, 0.01%)</title><rect x="560.7" y="293" width="0.1" height="15.0" fill="rgb(222,155,0)" rx="2" ry="2" />
<text  x="563.68" y="303.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (7 samples, 0.01%)</title><rect x="1140.8" y="453" width="0.2" height="15.0" fill="rgb(253,74,11)" rx="2" ry="2" />
<text  x="1143.80" y="463.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_allocate_node&lt;nonwrapping_interval&lt;dht::token&gt;, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; (52 samples, 0.11%)</title><rect x="1159.8" y="453" width="1.3" height="15.0" fill="rgb(249,139,20)" rx="2" ry="2" />
<text  x="1162.80" y="463.5" ></text>
</g>
<g >
<title>cql3::query_processor::process_authorized_statement (178 samples, 0.37%)</title><rect x="746.8" y="421" width="4.3" height="15.0" fill="rgb(222,30,28)" rx="2" ry="2" />
<text  x="749.78" y="431.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::__do_dyncast (36 samples, 0.07%)</title><rect x="10.5" y="581" width="0.9" height="15.0" fill="rgb(205,73,17)" rx="2" ry="2" />
<text  x="13.54" y="591.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (31 samples, 0.06%)</title><rect x="607.8" y="437" width="0.7" height="15.0" fill="rgb(227,24,0)" rx="2" ry="2" />
<text  x="610.76" y="447.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;compact_mutation_state&lt; (350 samples, 0.72%)</title><rect x="537.6" y="421" width="8.5" height="15.0" fill="rgb(222,19,19)" rx="2" ry="2" />
<text  x="540.59" y="431.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (9 samples, 0.02%)</title><rect x="195.5" y="117" width="0.3" height="15.0" fill="rgb(243,97,25)" rx="2" ry="2" />
<text  x="198.55" y="127.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql3::metadata&gt;::~shared_ptr_count_for (8 samples, 0.02%)</title><rect x="33.0" y="485" width="0.2" height="15.0" fill="rgb(239,109,18)" rx="2" ry="2" />
<text  x="35.97" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (13 samples, 0.03%)</title><rect x="205.3" y="85" width="0.4" height="15.0" fill="rgb(249,122,9)" rx="2" ry="2" />
<text  x="208.34" y="95.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;boost::iterator_range&lt;mutation_fragment*&gt; &gt;::take_value (10 samples, 0.02%)</title><rect x="260.4" y="325" width="0.3" height="15.0" fill="rgb(226,35,1)" rx="2" ry="2" />
<text  x="263.41" y="335.5" ></text>
</g>
<g >
<title>abstract_type::bound_value_needs_to_be_reserialized (7 samples, 0.01%)</title><rect x="889.6" y="293" width="0.1" height="15.0" fill="rgb(243,182,11)" rx="2" ry="2" />
<text  x="892.56" y="303.5" ></text>
</g>
<g >
<title>utils::phased_barrier::start (14 samples, 0.03%)</title><rect x="1047.0" y="261" width="0.3" height="15.0" fill="rgb(219,100,50)" rx="2" ry="2" />
<text  x="1049.95" y="271.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::push_mutation_fragment&lt;mutation_fragment&gt; (13 samples, 0.03%)</title><rect x="267.1" y="341" width="0.3" height="15.0" fill="rgb(207,57,40)" rx="2" ry="2" />
<text  x="270.13" y="351.5" ></text>
</g>
<g >
<title>absl::hash_internal::HashState::combine_contiguous (12 samples, 0.02%)</title><rect x="846.5" y="325" width="0.2" height="15.0" fill="rgb(223,94,32)" rx="2" ry="2" />
<text  x="849.45" y="335.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reserve&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (4,353 samples, 8.99%)</title><rect x="142.1" y="277" width="106.1" height="15.0" fill="rgb(222,107,38)" rx="2" ry="2" />
<text  x="145.13" y="287.5" >logalloc::al..</text>
</g>
<g >
<title>make_combined_reader (895 samples, 1.85%)</title><rect x="430.9" y="341" width="21.8" height="15.0" fill="rgb(215,140,50)" rx="2" ry="2" />
<text  x="433.88" y="351.5" >m..</text>
</g>
<g >
<title>operator new (74 samples, 0.15%)</title><rect x="986.0" y="293" width="1.8" height="15.0" fill="rgb(225,107,30)" rx="2" ry="2" />
<text  x="988.99" y="303.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_data_requests (422 samples, 0.87%)</title><rect x="696.7" y="469" width="10.2" height="15.0" fill="rgb(226,3,8)" rx="2" ry="2" />
<text  x="699.66" y="479.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (7 samples, 0.01%)</title><rect x="680.1" y="469" width="0.2" height="15.0" fill="rgb(212,150,42)" rx="2" ry="2" />
<text  x="683.10" y="479.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;nonwrapping_interval&lt;dht::ring_position&gt; const*, nonwrapping_interval&lt;dht::ring_position&gt;*&gt; (42 samples, 0.09%)</title><rect x="1052.6" y="245" width="1.0" height="15.0" fill="rgb(245,139,18)" rx="2" ry="2" />
<text  x="1055.60" y="255.5" ></text>
</g>
<g >
<title>sstring_hash::operator (20 samples, 0.04%)</title><rect x="846.3" y="357" width="0.5" height="15.0" fill="rgb(246,61,24)" rx="2" ry="2" />
<text  x="849.31" y="367.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::reserve (6 samples, 0.01%)</title><rect x="1094.7" y="277" width="0.1" height="15.0" fill="rgb(219,180,5)" rx="2" ry="2" />
<text  x="1097.67" y="287.5" ></text>
</g>
<g >
<title>seastar::futurize_invoke&lt;seastar::future&lt;void&gt;  (29 samples, 0.06%)</title><rect x="683.3" y="421" width="0.7" height="15.0" fill="rgb(231,211,37)" rx="2" ry="2" />
<text  x="686.31" y="431.5" ></text>
</g>
<g >
<title>managed_bytes::free_chain (149 samples, 0.31%)</title><rect x="394.4" y="197" width="3.6" height="15.0" fill="rgb(250,133,27)" rx="2" ry="2" />
<text  x="397.37" y="207.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (26 samples, 0.05%)</title><rect x="793.1" y="149" width="0.7" height="15.0" fill="rgb(227,98,49)" rx="2" ry="2" />
<text  x="796.13" y="159.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;cql3::query_processor&gt;::local (5 samples, 0.01%)</title><rect x="719.1" y="453" width="0.2" height="15.0" fill="rgb(229,69,26)" rx="2" ry="2" />
<text  x="722.14" y="463.5" ></text>
</g>
<g >
<title>partition_snapshot::get_change_mark (5 samples, 0.01%)</title><rect x="209.1" y="181" width="0.1" height="15.0" fill="rgb(249,23,22)" rx="2" ry="2" />
<text  x="212.07" y="191.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::untyped_constant&gt; (6 samples, 0.01%)</title><rect x="18.5" y="261" width="0.2" height="15.0" fill="rgb(218,123,32)" rx="2" ry="2" />
<text  x="21.52" y="271.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::restrictions::multi_column_restriction&gt;::~shared_ptr (11 samples, 0.02%)</title><rect x="1134.0" y="421" width="0.3" height="15.0" fill="rgb(251,126,3)" rx="2" ry="2" />
<text  x="1137.00" y="431.5" ></text>
</g>
<g >
<title>operator delete (37 samples, 0.08%)</title><rect x="439.2" y="277" width="0.9" height="15.0" fill="rgb(219,83,16)" rx="2" ry="2" />
<text  x="442.23" y="287.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (20 samples, 0.04%)</title><rect x="1123.1" y="389" width="0.5" height="15.0" fill="rgb(210,157,4)" rx="2" ry="2" />
<text  x="1126.09" y="399.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_impl&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (7 samples, 0.01%)</title><rect x="411.4" y="341" width="0.2" height="15.0" fill="rgb(226,23,12)" rx="2" ry="2" />
<text  x="414.42" y="351.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (123 samples, 0.25%)</title><rect x="792.6" y="165" width="3.0" height="15.0" fill="rgb(239,57,0)" rx="2" ry="2" />
<text  x="795.62" y="175.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;managed_bytes const*, managed_bytes*&gt; (25 samples, 0.05%)</title><rect x="910.6" y="325" width="0.6" height="15.0" fill="rgb(239,210,8)" rx="2" ry="2" />
<text  x="913.61" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (5 samples, 0.01%)</title><rect x="620.3" y="437" width="0.1" height="15.0" fill="rgb(235,170,46)" rx="2" ry="2" />
<text  x="623.33" y="447.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (6 samples, 0.01%)</title><rect x="141.0" y="277" width="0.1" height="15.0" fill="rgb(206,95,23)" rx="2" ry="2" />
<text  x="143.99" y="287.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::needs_post_query_ordering (39 samples, 0.08%)</title><rect x="647.4" y="469" width="0.9" height="15.0" fill="rgb(245,13,1)" rx="2" ry="2" />
<text  x="650.36" y="479.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::pop_mutation_fragment (35 samples, 0.07%)</title><rect x="252.2" y="277" width="0.9" height="15.0" fill="rgb(235,95,33)" rx="2" ry="2" />
<text  x="255.25" y="287.5" ></text>
</g>
<g >
<title>ser::writer_of_query_result&lt;bytes_ostream&gt;::start_partitions (23 samples, 0.05%)</title><rect x="595.1" y="405" width="0.6" height="15.0" fill="rgb(239,64,7)" rx="2" ry="2" />
<text  x="598.09" y="415.5" ></text>
</g>
<g >
<title>memtable::find_or_create_partition (6 samples, 0.01%)</title><rect x="1141.2" y="229" width="0.1" height="15.0" fill="rgb(231,124,13)" rx="2" ry="2" />
<text  x="1144.19" y="239.5" ></text>
</g>
<g >
<title>mutation_reader_merger::~mutation_reader_merger (6 samples, 0.01%)</title><rect x="1175.6" y="421" width="0.2" height="15.0" fill="rgb(249,152,35)" rx="2" ry="2" />
<text  x="1178.61" y="431.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::iterator::operator* (5 samples, 0.01%)</title><rect x="759.5" y="373" width="0.1" height="15.0" fill="rgb(228,161,48)" rx="2" ry="2" />
<text  x="762.50" y="383.5" ></text>
</g>
<g >
<title>reader_permit::consume_resources (14 samples, 0.03%)</title><rect x="208.1" y="149" width="0.3" height="15.0" fill="rgb(251,147,47)" rx="2" ry="2" />
<text  x="211.07" y="159.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_S_construct&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (5 samples, 0.01%)</title><rect x="15.4" y="245" width="0.1" height="15.0" fill="rgb(244,181,47)" rx="2" ry="2" />
<text  x="18.36" y="255.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::find&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (143 samples, 0.30%)</title><rect x="819.9" y="325" width="3.5" height="15.0" fill="rgb(219,156,43)" rx="2" ry="2" />
<text  x="822.93" y="335.5" ></text>
</g>
<g >
<title>row::external_memory_usage (271 samples, 0.56%)</title><rect x="200.0" y="149" width="6.6" height="15.0" fill="rgb(240,159,47)" rx="2" ry="2" />
<text  x="203.01" y="159.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::~holder (13 samples, 0.03%)</title><rect x="555.9" y="309" width="0.3" height="15.0" fill="rgb(230,45,6)" rx="2" ry="2" />
<text  x="558.88" y="319.5" ></text>
</g>
<g >
<title>posix_memalign (36 samples, 0.07%)</title><rect x="193.8" y="85" width="0.9" height="15.0" fill="rgb(235,179,4)" rx="2" ry="2" />
<text  x="196.82" y="95.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (51 samples, 0.11%)</title><rect x="102.2" y="437" width="1.3" height="15.0" fill="rgb(223,146,38)" rx="2" ry="2" />
<text  x="105.21" y="447.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::move_it (6 samples, 0.01%)</title><rect x="656.4" y="469" width="0.2" height="15.0" fill="rgb(223,216,51)" rx="2" ry="2" />
<text  x="659.42" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (6 samples, 0.01%)</title><rect x="547.5" y="421" width="0.1" height="15.0" fill="rgb(219,103,37)" rx="2" ry="2" />
<text  x="550.50" y="431.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (79 samples, 0.16%)</title><rect x="787.4" y="197" width="1.9" height="15.0" fill="rgb(235,3,54)" rx="2" ry="2" />
<text  x="790.36" y="207.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector (12 samples, 0.02%)</title><rect x="1075.8" y="293" width="0.3" height="15.0" fill="rgb(228,15,38)" rx="2" ry="2" />
<text  x="1078.79" y="303.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::on_read_resolved (10 samples, 0.02%)</title><rect x="691.0" y="453" width="0.3" height="15.0" fill="rgb(246,67,8)" rx="2" ry="2" />
<text  x="694.03" y="463.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (9 samples, 0.02%)</title><rect x="908.1" y="341" width="0.2" height="15.0" fill="rgb(249,59,5)" rx="2" ry="2" />
<text  x="911.10" y="351.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::move_it (5 samples, 0.01%)</title><rect x="631.1" y="469" width="0.1" height="15.0" fill="rgb(219,32,25)" rx="2" ry="2" />
<text  x="634.09" y="479.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_destroy_data (36 samples, 0.07%)</title><rect x="364.9" y="165" width="0.9" height="15.0" fill="rgb(217,89,8)" rx="2" ry="2" />
<text  x="367.95" y="175.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (6 samples, 0.01%)</title><rect x="553.6" y="309" width="0.1" height="15.0" fill="rgb(220,108,40)" rx="2" ry="2" />
<text  x="556.59" y="319.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::schedule&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (61 samples, 0.13%)</title><rect x="831.2" y="389" width="1.5" height="15.0" fill="rgb(207,35,1)" rx="2" ry="2" />
<text  x="834.18" y="399.5" ></text>
</g>
<g >
<title>cql3::statements::raw::update_statement::prepare_internal (31 samples, 0.06%)</title><rect x="20.1" y="437" width="0.7" height="15.0" fill="rgb(217,63,34)" rx="2" ry="2" />
<text  x="23.08" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (14 samples, 0.03%)</title><rect x="44.5" y="485" width="0.4" height="15.0" fill="rgb(238,157,20)" rx="2" ry="2" />
<text  x="47.51" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (26 samples, 0.05%)</title><rect x="762.4" y="357" width="0.6" height="15.0" fill="rgb(214,7,9)" rx="2" ry="2" />
<text  x="765.40" y="367.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::trivial_direct_move&lt;16ul&gt; (12 samples, 0.02%)</title><rect x="1033.4" y="133" width="0.3" height="15.0" fill="rgb(228,97,48)" rx="2" ry="2" />
<text  x="1036.44" y="143.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::take (6 samples, 0.01%)</title><rect x="406.1" y="277" width="0.1" height="15.0" fill="rgb(250,51,41)" rx="2" ry="2" />
<text  x="409.06" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::~disable_abort_on_alloc_failure_temporarily (7 samples, 0.01%)</title><rect x="246.6" y="213" width="0.2" height="15.0" fill="rgb(231,167,50)" rx="2" ry="2" />
<text  x="249.62" y="223.5" ></text>
</g>
<g >
<title>read_simple&lt;long, managed_bytes_basic_view&lt; (27 samples, 0.06%)</title><rect x="382.3" y="165" width="0.6" height="15.0" fill="rgb(252,148,19)" rx="2" ry="2" />
<text  x="385.26" y="175.5" ></text>
</g>
<g >
<title>query_result_builder::consume_new_partition (354 samples, 0.73%)</title><rect x="308.9" y="197" width="8.6" height="15.0" fill="rgb(236,195,47)" rx="2" ry="2" />
<text  x="311.88" y="207.5" ></text>
</g>
<g >
<title>utils::murmur_hash::hash3_x64_128&lt;legacy_compound_view&lt;compound_type&lt; (245 samples, 0.51%)</title><rect x="920.0" y="373" width="6.0" height="15.0" fill="rgb(229,217,18)" rx="2" ry="2" />
<text  x="923.03" y="383.5" ></text>
</g>
<g >
<title>cql3::statements::raw::modification_statement::prepare (44 samples, 0.09%)</title><rect x="20.0" y="469" width="1.0" height="15.0" fill="rgb(228,209,5)" rx="2" ry="2" />
<text  x="22.96" y="479.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::abstract_read_executor (139 samples, 0.29%)</title><rect x="1072.7" y="309" width="3.4" height="15.0" fill="rgb(210,9,2)" rx="2" ry="2" />
<text  x="1075.70" y="319.5" ></text>
</g>
<g >
<title>mutation_reader_merger::maybe_add_readers (21 samples, 0.04%)</title><rect x="124.0" y="277" width="0.5" height="15.0" fill="rgb(217,195,32)" rx="2" ry="2" />
<text  x="127.04" y="287.5" ></text>
</g>
<g >
<title>utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;::lru_entry::touch (32 samples, 0.07%)</title><rect x="727.5" y="405" width="0.8" height="15.0" fill="rgb(231,35,51)" rx="2" ry="2" />
<text  x="730.52" y="415.5" ></text>
</g>
<g >
<title>bplus::searcher&lt;dht::ring_position, long, dht::raw_token_less_comparator, 16ul,  (37 samples, 0.08%)</title><rect x="523.2" y="277" width="0.9" height="15.0" fill="rgb(208,45,5)" rx="2" ry="2" />
<text  x="526.19" y="287.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_9has_tokenERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES28_S2B_ (6 samples, 0.01%)</title><rect x="880.5" y="405" width="0.1" height="15.0" fill="rgb(247,56,46)" rx="2" ry="2" />
<text  x="883.45" y="415.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (5 samples, 0.01%)</title><rect x="673.3" y="485" width="0.1" height="15.0" fill="rgb(215,121,19)" rx="2" ry="2" />
<text  x="676.25" y="495.5" ></text>
</g>
<g >
<title>schema::column_at (10 samples, 0.02%)</title><rect x="384.7" y="181" width="0.3" height="15.0" fill="rgb(220,187,39)" rx="2" ry="2" />
<text  x="387.75" y="191.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::~_Variant_storage (6 samples, 0.01%)</title><rect x="77.9" y="453" width="0.1" height="15.0" fill="rgb(219,134,26)" rx="2" ry="2" />
<text  x="80.88" y="463.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (22 samples, 0.05%)</title><rect x="558.0" y="277" width="0.5" height="15.0" fill="rgb(252,84,28)" rx="2" ry="2" />
<text  x="560.97" y="287.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (7 samples, 0.01%)</title><rect x="757.1" y="293" width="0.2" height="15.0" fill="rgb(207,29,47)" rx="2" ry="2" />
<text  x="760.11" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (44 samples, 0.09%)</title><rect x="842.5" y="389" width="1.0" height="15.0" fill="rgb(212,162,21)" rx="2" ry="2" />
<text  x="845.46" y="399.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (6 samples, 0.01%)</title><rect x="659.6" y="469" width="0.1" height="15.0" fill="rgb(254,218,3)" rx="2" ry="2" />
<text  x="662.59" y="479.5" ></text>
</g>
<g >
<title>database::has_keyspace (111 samples, 0.23%)</title><rect x="844.3" y="405" width="2.7" height="15.0" fill="rgb(227,172,27)" rx="2" ry="2" />
<text  x="847.33" y="415.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (29 samples, 0.06%)</title><rect x="1027.9" y="181" width="0.7" height="15.0" fill="rgb(249,148,21)" rx="2" ry="2" />
<text  x="1030.91" y="191.5" ></text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::EqualElement&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt;&amp;&gt; (64 samples, 0.13%)</title><rect x="820.8" y="309" width="1.5" height="15.0" fill="rgb(238,73,29)" rx="2" ry="2" />
<text  x="823.78" y="319.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;position_in_partition&gt;::_M_reset (17 samples, 0.04%)</title><rect x="241.9" y="245" width="0.5" height="15.0" fill="rgb(251,95,35)" rx="2" ry="2" />
<text  x="244.95" y="255.5" ></text>
</g>
<g >
<title>__tls_init (5 samples, 0.01%)</title><rect x="526.3" y="277" width="0.2" height="15.0" fill="rgb(215,108,46)" rx="2" ry="2" />
<text  x="529.33" y="287.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEENK4$_43clERKNSF_15binary_operatorEEUlRKNSF_12column_valueEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_17tuple_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlNSF_5tokenEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlSS_E_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_11conjunctionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_8constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_21unresolved_identifierEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_25column_mutation_attributeEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13function_callEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4castEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_15field_selectionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4nullEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13bind_variableEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_16untyped_constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_22collection_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_20usertype_constructorEE_EERS4_IJS14_SQ_ST_S11_S1C_S1G_S1K_S1O_S1S_S1W_S20_S24_S18_SX_S28_S2C_EEEJEEESt16integer_sequenceImJLm2EEEE14__visit_invokeES2H_S2J_ (1,121 samples, 2.31%)</title><rect x="884.1" y="373" width="27.3" height="15.0" fill="rgb(221,67,2)" rx="2" ry="2" />
<text  x="887.08" y="383.5" >_..</text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (22 samples, 0.05%)</title><rect x="243.7" y="213" width="0.5" height="15.0" fill="rgb(251,97,47)" rx="2" ry="2" />
<text  x="246.68" y="223.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (11 samples, 0.02%)</title><rect x="681.9" y="485" width="0.3" height="15.0" fill="rgb(224,215,30)" rx="2" ry="2" />
<text  x="684.95" y="495.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (18 samples, 0.04%)</title><rect x="907.9" y="357" width="0.4" height="15.0" fill="rgb(248,163,35)" rx="2" ry="2" />
<text  x="910.88" y="367.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::get_promise (5 samples, 0.01%)</title><rect x="831.1" y="389" width="0.1" height="15.0" fill="rgb(219,223,22)" rx="2" ry="2" />
<text  x="834.06" y="399.5" ></text>
</g>
<g >
<title>operator new (29 samples, 0.06%)</title><rect x="909.9" y="325" width="0.7" height="15.0" fill="rgb(247,146,3)" rx="2" ry="2" />
<text  x="912.90" y="335.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (9 samples, 0.02%)</title><rect x="528.6" y="245" width="0.2" height="15.0" fill="rgb(210,180,5)" rx="2" ry="2" />
<text  x="531.55" y="255.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (7 samples, 0.01%)</title><rect x="802.9" y="229" width="0.2" height="15.0" fill="rgb(253,9,36)" rx="2" ry="2" />
<text  x="805.93" y="239.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::remove_if&lt;row::compact_and_expire (6 samples, 0.01%)</title><rect x="683.8" y="277" width="0.1" height="15.0" fill="rgb(249,87,33)" rx="2" ry="2" />
<text  x="686.80" y="287.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::~impl (65 samples, 0.13%)</title><rect x="571.2" y="373" width="1.6" height="15.0" fill="rgb(210,177,41)" rx="2" ry="2" />
<text  x="574.20" y="383.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::make_ready&lt; (7 samples, 0.01%)</title><rect x="860.7" y="501" width="0.2" height="15.0" fill="rgb(254,35,25)" rx="2" ry="2" />
<text  x="863.70" y="511.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::node_size (7 samples, 0.01%)</title><rect x="199.7" y="149" width="0.2" height="15.0" fill="rgb(253,198,15)" rx="2" ry="2" />
<text  x="202.71" y="159.5" ></text>
</g>
<g >
<title>partition_version_ref::operator* (5 samples, 0.01%)</title><rect x="507.7" y="229" width="0.1" height="15.0" fill="rgb(242,41,43)" rx="2" ry="2" />
<text  x="510.70" y="239.5" ></text>
</g>
<g >
<title>atomic_cell_or_collection::copy (22 samples, 0.05%)</title><rect x="167.3" y="133" width="0.6" height="15.0" fill="rgb(222,18,7)" rx="2" ry="2" />
<text  x="170.32" y="143.5" ></text>
</g>
<g >
<title>utils::fb_utilities::get_broadcast_address (5 samples, 0.01%)</title><rect x="704.1" y="437" width="0.2" height="15.0" fill="rgb(219,31,47)" rx="2" ry="2" />
<text  x="707.14" y="447.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (16 samples, 0.03%)</title><rect x="701.9" y="421" width="0.4" height="15.0" fill="rgb(239,21,42)" rx="2" ry="2" />
<text  x="704.94" y="431.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::get_limit (16 samples, 0.03%)</title><rect x="1109.4" y="421" width="0.4" height="15.0" fill="rgb(241,46,3)" rx="2" ry="2" />
<text  x="1112.40" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_List_node_base::_M_hook (15 samples, 0.03%)</title><rect x="438.7" y="261" width="0.3" height="15.0" fill="rgb(240,218,49)" rx="2" ry="2" />
<text  x="441.65" y="271.5" ></text>
</g>
<g >
<title>schema::get_partitioner (5 samples, 0.01%)</title><rect x="933.5" y="389" width="0.1" height="15.0" fill="rgb(224,189,17)" rx="2" ry="2" />
<text  x="936.53" y="399.5" ></text>
</g>
<g >
<title>seastar::internal::awaiter&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::awaiter (6 samples, 0.01%)</title><rect x="981.4" y="357" width="0.1" height="15.0" fill="rgb(212,28,19)" rx="2" ry="2" />
<text  x="984.39" y="367.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (6 samples, 0.01%)</title><rect x="1003.6" y="293" width="0.1" height="15.0" fill="rgb(219,167,7)" rx="2" ry="2" />
<text  x="1006.55" y="303.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;::basic_sstring (8 samples, 0.02%)</title><rect x="716.8" y="469" width="0.2" height="15.0" fill="rgb(241,193,5)" rx="2" ry="2" />
<text  x="719.78" y="479.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::lower_bound&lt;mutation_partition, schema const&amp;, nonwrapping_interval&lt;clustering_key_prefix&gt; const&amp;&gt; (25 samples, 0.05%)</title><rect x="211.6" y="149" width="0.6" height="15.0" fill="rgb(252,20,7)" rx="2" ry="2" />
<text  x="214.60" y="159.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (19 samples, 0.04%)</title><rect x="491.7" y="277" width="0.4" height="15.0" fill="rgb(219,71,1)" rx="2" ry="2" />
<text  x="494.67" y="287.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (12 samples, 0.02%)</title><rect x="155.6" y="213" width="0.3" height="15.0" fill="rgb(226,86,35)" rx="2" ry="2" />
<text  x="158.58" y="223.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt;::_Copy_ctor_base (15 samples, 0.03%)</title><rect x="857.1" y="421" width="0.4" height="15.0" fill="rgb(247,186,52)" rx="2" ry="2" />
<text  x="860.14" y="431.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;::lru_entry, boost::intrusive::list_node_traits&lt;void*&gt;,  (21 samples, 0.04%)</title><rect x="727.8" y="389" width="0.5" height="15.0" fill="rgb(222,119,43)" rx="2" ry="2" />
<text  x="730.79" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::allocate_aligned (139 samples, 0.29%)</title><rect x="186.4" y="37" width="3.4" height="15.0" fill="rgb(214,35,16)" rx="2" ry="2" />
<text  x="189.44" y="47.5" ></text>
</g>
<g >
<title>memtable::upgrade_entry (16 samples, 0.03%)</title><rect x="511.1" y="325" width="0.4" height="15.0" fill="rgb(209,114,21)" rx="2" ry="2" />
<text  x="514.11" y="335.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::query_options, std::default_delete&lt;cql3::query_options&gt; &gt;::~unique_ptr (14 samples, 0.03%)</title><rect x="854.9" y="469" width="0.3" height="15.0" fill="rgb(250,160,48)" rx="2" ry="2" />
<text  x="857.88" y="479.5" ></text>
</g>
<g >
<title>operator delete (25 samples, 0.05%)</title><rect x="582.9" y="389" width="0.6" height="15.0" fill="rgb(219,156,0)" rx="2" ry="2" />
<text  x="585.91" y="399.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (65 samples, 0.13%)</title><rect x="15.3" y="357" width="1.5" height="15.0" fill="rgb(239,113,9)" rx="2" ry="2" />
<text  x="18.26" y="367.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;schema const&gt;::operator= (17 samples, 0.04%)</title><rect x="1010.9" y="261" width="0.4" height="15.0" fill="rgb(235,179,28)" rx="2" ry="2" />
<text  x="1013.91" y="271.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (43 samples, 0.09%)</title><rect x="648.6" y="469" width="1.0" height="15.0" fill="rgb(226,198,36)" rx="2" ry="2" />
<text  x="651.58" y="479.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::add_raw_update (9 samples, 0.02%)</title><rect x="17.9" y="309" width="0.3" height="15.0" fill="rgb(250,202,21)" rx="2" ry="2" />
<text  x="20.94" y="319.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (45 samples, 0.09%)</title><rect x="1141.0" y="421" width="1.1" height="15.0" fill="rgb(221,14,13)" rx="2" ry="2" />
<text  x="1143.97" y="431.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;auth::resource&gt;::_Optional_payload_base (25 samples, 0.05%)</title><rect x="774.3" y="293" width="0.6" height="15.0" fill="rgb(248,15,5)" rx="2" ry="2" />
<text  x="777.31" y="303.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (5 samples, 0.01%)</title><rect x="1036.2" y="197" width="0.2" height="15.0" fill="rgb(232,181,4)" rx="2" ry="2" />
<text  x="1039.24" y="207.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (5 samples, 0.01%)</title><rect x="414.7" y="373" width="0.1" height="15.0" fill="rgb(227,175,43)" rx="2" ry="2" />
<text  x="417.71" y="383.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;compact_for_query&lt; (15 samples, 0.03%)</title><rect x="410.9" y="293" width="0.3" height="15.0" fill="rgb(219,106,48)" rx="2" ry="2" />
<text  x="413.86" y="303.5" ></text>
</g>
<g >
<title>seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;::swap (49 samples, 0.10%)</title><rect x="733.8" y="389" width="1.2" height="15.0" fill="rgb(246,11,2)" rx="2" ry="2" />
<text  x="736.80" y="399.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (397 samples, 0.82%)</title><rect x="63.9" y="421" width="9.7" height="15.0" fill="rgb(232,38,4)" rx="2" ry="2" />
<text  x="66.90" y="431.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (5 samples, 0.01%)</title><rect x="722.3" y="389" width="0.1" height="15.0" fill="rgb(232,81,53)" rx="2" ry="2" />
<text  x="725.26" y="399.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::get0 (15 samples, 0.03%)</title><rect x="1150.6" y="485" width="0.3" height="15.0" fill="rgb(220,166,32)" rx="2" ry="2" />
<text  x="1153.57" y="495.5" ></text>
</g>
<g >
<title>compound_type&lt; (103 samples, 0.21%)</title><rect x="930.7" y="357" width="2.6" height="15.0" fill="rgb(222,137,7)" rx="2" ry="2" />
<text  x="933.75" y="367.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_destroy_data (10 samples, 0.02%)</title><rect x="363.9" y="181" width="0.3" height="15.0" fill="rgb(205,28,33)" rx="2" ry="2" />
<text  x="366.92" y="191.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (13 samples, 0.03%)</title><rect x="940.1" y="405" width="0.3" height="15.0" fill="rgb(230,121,1)" rx="2" ry="2" />
<text  x="943.10" y="415.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (13 samples, 0.03%)</title><rect x="682.2" y="485" width="0.3" height="15.0" fill="rgb(206,41,37)" rx="2" ry="2" />
<text  x="685.22" y="495.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (24 samples, 0.05%)</title><rect x="137.3" y="261" width="0.6" height="15.0" fill="rgb(247,37,16)" rx="2" ry="2" />
<text  x="140.34" y="271.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.01%)</title><rect x="1157.4" y="453" width="0.1" height="15.0" fill="rgb(241,68,53)" rx="2" ry="2" />
<text  x="1160.39" y="463.5" ></text>
</g>
<g >
<title>seastar::preempt_io_context::reset_preemption_monitor (6 samples, 0.01%)</title><rect x="1144.4" y="501" width="0.1" height="15.0" fill="rgb(224,220,8)" rx="2" ry="2" />
<text  x="1147.36" y="511.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::check_local_limit (5 samples, 0.01%)</title><rect x="303.5" y="197" width="0.1" height="15.0" fill="rgb(228,151,32)" rx="2" ry="2" />
<text  x="306.47" y="207.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::emplace&lt;atomic_cell_or_collection, seastar::optimized_optional&lt;cell_hash&gt; &gt; (5 samples, 0.01%)</title><rect x="1141.5" y="197" width="0.2" height="15.0" fill="rgb(235,193,24)" rx="2" ry="2" />
<text  x="1144.53" y="207.5" ></text>
</g>
<g >
<title>cql3::query_options::get_value_at (7 samples, 0.01%)</title><rect x="901.3" y="293" width="0.1" height="15.0" fill="rgb(223,199,50)" rx="2" ry="2" />
<text  x="904.25" y="303.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (28 samples, 0.06%)</title><rect x="346.3" y="149" width="0.7" height="15.0" fill="rgb(253,130,48)" rx="2" ry="2" />
<text  x="349.34" y="159.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;gms::inet_address, std::pair&lt;gms::inet_address const, table::cache_hit_rate&gt;, std::allocator&lt;std::pair&lt;gms::inet_address const, table::cache_hit_rate&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;gms::inet_address&gt;, std::hash&lt;gms::inet_address&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::operator[] (77 samples, 0.16%)</title><rect x="704.5" y="437" width="1.9" height="15.0" fill="rgb(223,134,3)" rx="2" ry="2" />
<text  x="707.50" y="447.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (6 samples, 0.01%)</title><rect x="446.4" y="261" width="0.2" height="15.0" fill="rgb(236,171,10)" rx="2" ry="2" />
<text  x="449.44" y="271.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (19 samples, 0.04%)</title><rect x="774.5" y="277" width="0.4" height="15.0" fill="rgb(221,91,33)" rx="2" ry="2" />
<text  x="777.45" y="287.5" ></text>
</g>
<g >
<title>operator delete (30 samples, 0.06%)</title><rect x="653.5" y="485" width="0.8" height="15.0" fill="rgb(213,48,41)" rx="2" ry="2" />
<text  x="656.52" y="495.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (17 samples, 0.04%)</title><rect x="674.1" y="469" width="0.4" height="15.0" fill="rgb(244,145,45)" rx="2" ry="2" />
<text  x="677.08" y="479.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate (542 samples, 1.12%)</title><rect x="889.2" y="325" width="13.2" height="15.0" fill="rgb(211,34,4)" rx="2" ry="2" />
<text  x="892.20" y="335.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (49 samples, 0.10%)</title><rect x="1149.4" y="485" width="1.2" height="15.0" fill="rgb(224,0,3)" rx="2" ry="2" />
<text  x="1152.37" y="495.5" ></text>
</g>
<g >
<title>cql3::raw_value::make_value (246 samples, 0.51%)</title><rect x="892.7" y="277" width="6.0" height="15.0" fill="rgb(214,66,38)" rx="2" ry="2" />
<text  x="895.68" y="287.5" ></text>
</g>
<g >
<title>service::storage_proxy::do_mutate (27 samples, 0.06%)</title><rect x="1142.1" y="341" width="0.6" height="15.0" fill="rgb(234,157,23)" rx="2" ry="2" />
<text  x="1145.07" y="351.5" ></text>
</g>
<g >
<title>seastar::chunked_fifo&lt;seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::entry, 128ul&gt;::emplace_back&lt;reader_concurrency_semaphore::entry, seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;&amp;, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;&amp;&gt; (5 samples, 0.01%)</title><rect x="1029.1" y="197" width="0.1" height="15.0" fill="rgb(212,65,39)" rx="2" ry="2" />
<text  x="1032.13" y="207.5" ></text>
</g>
<g >
<title>mutation_querier::mutation_querier (75 samples, 0.15%)</title><rect x="309.5" y="181" width="1.8" height="15.0" fill="rgb(208,129,16)" rx="2" ry="2" />
<text  x="312.46" y="191.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (31 samples, 0.06%)</title><rect x="683.3" y="469" width="0.7" height="15.0" fill="rgb(249,201,48)" rx="2" ry="2" />
<text  x="686.29" y="479.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_initialize_map (119 samples, 0.25%)</title><rect x="541.2" y="373" width="2.9" height="15.0" fill="rgb(231,10,37)" rx="2" ry="2" />
<text  x="544.19" y="383.5" ></text>
</g>
<g >
<title>seastar::future&lt;query::result_memory_accounter&gt;::get0 (5 samples, 0.01%)</title><rect x="74.1" y="453" width="0.1" height="15.0" fill="rgb(220,227,35)" rx="2" ry="2" />
<text  x="77.06" y="463.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;clustering_key_prefix&gt;::_M_reset (10 samples, 0.02%)</title><rect x="609.9" y="437" width="0.3" height="15.0" fill="rgb(217,50,49)" rx="2" ry="2" />
<text  x="612.95" y="447.5" ></text>
</g>
<g >
<title>__start_context (283 samples, 0.58%)</title><rect x="14.5" y="613" width="6.9" height="15.0" fill="rgb(224,190,4)" rx="2" ry="2" />
<text  x="17.51" y="623.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::digest_read_result&gt;::get0 (8 samples, 0.02%)</title><rect x="688.4" y="453" width="0.2" height="15.0" fill="rgb(227,116,5)" rx="2" ry="2" />
<text  x="691.38" y="463.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (7 samples, 0.01%)</title><rect x="58.2" y="453" width="0.1" height="15.0" fill="rgb(251,90,35)" rx="2" ry="2" />
<text  x="61.15" y="463.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (55 samples, 0.11%)</title><rect x="574.0" y="357" width="1.4" height="15.0" fill="rgb(246,167,35)" rx="2" ry="2" />
<text  x="577.05" y="367.5" ></text>
</g>
<g >
<title>sstring_hash::operator (10 samples, 0.02%)</title><rect x="839.9" y="389" width="0.2" height="15.0" fill="rgb(244,219,16)" rx="2" ry="2" />
<text  x="842.85" y="399.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;compact_for_query&lt; (9 samples, 0.02%)</title><rect x="417.0" y="373" width="0.2" height="15.0" fill="rgb(248,217,35)" rx="2" ry="2" />
<text  x="420.02" y="383.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;query::result_memory_accounter&gt;::clear (16 samples, 0.03%)</title><rect x="74.4" y="453" width="0.4" height="15.0" fill="rgb(218,39,33)" rx="2" ry="2" />
<text  x="77.40" y="463.5" ></text>
</g>
<g >
<title>compact_mutation&lt; (7 samples, 0.01%)</title><rect x="413.1" y="341" width="0.2" height="15.0" fill="rgb(216,95,46)" rx="2" ry="2" />
<text  x="416.15" y="351.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::got_response (118 samples, 0.24%)</title><rect x="700.4" y="437" width="2.9" height="15.0" fill="rgb(208,143,11)" rx="2" ry="2" />
<text  x="703.41" y="447.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::then_wrapped_common&lt;true, void, service::abstract_read_executor::make_data_requests (130 samples, 0.27%)</title><rect x="998.3" y="309" width="3.2" height="15.0" fill="rgb(251,229,22)" rx="2" ry="2" />
<text  x="1001.29" y="319.5" ></text>
</g>
<g >
<title>mutation_fragment::consume&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (3,814 samples, 7.87%)</title><rect x="299.2" y="261" width="92.9" height="15.0" fill="rgb(207,185,16)" rx="2" ry="2" />
<text  x="302.23" y="271.5" >mutation_fr..</text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (46 samples, 0.09%)</title><rect x="354.3" y="149" width="1.1" height="15.0" fill="rgb(247,43,31)" rx="2" ry="2" />
<text  x="357.25" y="159.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::_Move_ctor_base (5 samples, 0.01%)</title><rect x="315.8" y="181" width="0.1" height="15.0" fill="rgb(222,89,49)" rx="2" ry="2" />
<text  x="318.82" y="191.5" ></text>
</g>
<g >
<title>mutation_fragment::visit&lt;mutation_fragment::calculate_memory_usage (7 samples, 0.01%)</title><rect x="208.8" y="181" width="0.2" height="15.0" fill="rgb(216,180,12)" rx="2" ry="2" />
<text  x="211.85" y="191.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (17 samples, 0.04%)</title><rect x="798.8" y="85" width="0.4" height="15.0" fill="rgb(210,142,19)" rx="2" ry="2" />
<text  x="801.76" y="95.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (46 samples, 0.09%)</title><rect x="1159.9" y="421" width="1.2" height="15.0" fill="rgb(247,89,33)" rx="2" ry="2" />
<text  x="1162.94" y="431.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (18 samples, 0.04%)</title><rect x="910.8" y="309" width="0.4" height="15.0" fill="rgb(250,181,9)" rx="2" ry="2" />
<text  x="913.78" y="319.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector (5 samples, 0.01%)</title><rect x="1170.1" y="485" width="0.1" height="15.0" fill="rgb(210,127,41)" rx="2" ry="2" />
<text  x="1173.10" y="495.5" ></text>
</g>
<g >
<title>bplus::tree&lt;long, intrusive_array&lt;cache_entry&gt;, dht::raw_token_less_comparator, 16ul,  (11 samples, 0.02%)</title><rect x="524.1" y="277" width="0.3" height="15.0" fill="rgb(226,227,19)" rx="2" ry="2" />
<text  x="527.09" y="287.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (70 samples, 0.14%)</title><rect x="231.6" y="181" width="1.7" height="15.0" fill="rgb(236,209,31)" rx="2" ry="2" />
<text  x="234.62" y="191.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (8 samples, 0.02%)</title><rect x="822.1" y="277" width="0.2" height="15.0" fill="rgb(213,153,29)" rx="2" ry="2" />
<text  x="825.14" y="287.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (6 samples, 0.01%)</title><rect x="1035.3" y="197" width="0.1" height="15.0" fill="rgb(208,31,12)" rx="2" ry="2" />
<text  x="1038.29" y="207.5" ></text>
</g>
<g >
<title>std::__find_if&lt;gms::inet_address*, __gnu_cxx::__ops::_Iter_pred&lt;std::unary_negate&lt;std::binder1st&lt;std::_Mem_fn&lt;bool  (53 samples, 0.11%)</title><rect x="1096.5" y="293" width="1.3" height="15.0" fill="rgb(229,125,49)" rx="2" ry="2" />
<text  x="1099.47" y="303.5" ></text>
</g>
<g >
<title>operator delete (17 samples, 0.04%)</title><rect x="1148.4" y="485" width="0.4" height="15.0" fill="rgb(207,164,0)" rx="2" ry="2" />
<text  x="1151.37" y="495.5" ></text>
</g>
<g >
<title>std::__make_heap&lt;__gnu_cxx::__normal_iterator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position*, std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::heap_compare&gt; &gt; (12 samples, 0.02%)</title><rect x="239.0" y="213" width="0.3" height="15.0" fill="rgb(239,51,27)" rx="2" ry="2" />
<text  x="242.00" y="223.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (8 samples, 0.02%)</title><rect x="800.3" y="197" width="0.2" height="15.0" fill="rgb(239,144,54)" rx="2" ry="2" />
<text  x="803.32" y="207.5" ></text>
</g>
<g >
<title>mutation_querier::prepare_writers (5 samples, 0.01%)</title><rect x="303.1" y="197" width="0.2" height="15.0" fill="rgb(214,21,27)" rx="2" ry="2" />
<text  x="306.13" y="207.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::do_wait_admission (7 samples, 0.01%)</title><rect x="1024.5" y="245" width="0.2" height="15.0" fill="rgb(238,155,45)" rx="2" ry="2" />
<text  x="1027.55" y="255.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;locator::snitch_ptr&gt;::local (18 samples, 0.04%)</title><rect x="1099.1" y="309" width="0.4" height="15.0" fill="rgb(248,9,13)" rx="2" ry="2" />
<text  x="1102.08" y="319.5" ></text>
</g>
<g >
<title>validation::validate_keyspace (104 samples, 0.21%)</title><rect x="823.5" y="373" width="2.5" height="15.0" fill="rgb(209,113,5)" rx="2" ry="2" />
<text  x="826.48" y="383.5" ></text>
</g>
<g >
<title>reader_permit::impl::mark_unused (7 samples, 0.01%)</title><rect x="684.1" y="469" width="0.2" height="15.0" fill="rgb(205,154,52)" rx="2" ry="2" />
<text  x="687.14" y="479.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (6 samples, 0.01%)</title><rect x="18.8" y="245" width="0.1" height="15.0" fill="rgb(238,7,23)" rx="2" ry="2" />
<text  x="21.79" y="255.5" ></text>
</g>
<g >
<title>utils::tuple_hash::operator (98 samples, 0.20%)</title><rect x="742.6" y="309" width="2.4" height="15.0" fill="rgb(210,214,23)" rx="2" ry="2" />
<text  x="745.57" y="319.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (90 samples, 0.19%)</title><rect x="659.6" y="485" width="2.2" height="15.0" fill="rgb(226,13,1)" rx="2" ry="2" />
<text  x="662.56" y="495.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (18 samples, 0.04%)</title><rect x="599.9" y="405" width="0.5" height="15.0" fill="rgb(237,54,20)" rx="2" ry="2" />
<text  x="602.91" y="415.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (9 samples, 0.02%)</title><rect x="245.1" y="197" width="0.2" height="15.0" fill="rgb(207,206,37)" rx="2" ry="2" />
<text  x="248.09" y="207.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;managed_bytes&gt;::operator= (5 samples, 0.01%)</title><rect x="906.0" y="309" width="0.1" height="15.0" fill="rgb(223,121,3)" rx="2" ry="2" />
<text  x="908.98" y="319.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::pop_clustering_row (33 samples, 0.07%)</title><rect x="214.2" y="181" width="0.8" height="15.0" fill="rgb(237,164,32)" rx="2" ry="2" />
<text  x="217.18" y="191.5" ></text>
</g>
<g >
<title>std::__optional_hash_call_base&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, true&gt;::operator (26 samples, 0.05%)</title><rect x="813.3" y="293" width="0.6" height="15.0" fill="rgb(214,74,13)" rx="2" ry="2" />
<text  x="816.30" y="303.5" ></text>
</g>
<g >
<title>service::storage_proxy::sort_endpoints_by_proximity (9 samples, 0.02%)</title><rect x="1100.2" y="341" width="0.2" height="15.0" fill="rgb(211,45,9)" rx="2" ry="2" />
<text  x="1103.20" y="351.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (63 samples, 0.13%)</title><rect x="524.9" y="309" width="1.6" height="15.0" fill="rgb(217,148,19)" rx="2" ry="2" />
<text  x="527.92" y="319.5" ></text>
</g>
<g >
<title>database::apply_with_commitlog (43 samples, 0.09%)</title><rect x="1141.0" y="325" width="1.1" height="15.0" fill="rgb(226,193,12)" rx="2" ry="2" />
<text  x="1144.02" y="335.5" ></text>
</g>
<g >
<title>operator new (53 samples, 0.11%)</title><rect x="999.6" y="261" width="1.3" height="15.0" fill="rgb(215,36,32)" rx="2" ry="2" />
<text  x="1002.61" y="271.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (11 samples, 0.02%)</title><rect x="698.0" y="453" width="0.2" height="15.0" fill="rgb(233,9,24)" rx="2" ry="2" />
<text  x="700.97" y="463.5" ></text>
</g>
<g >
<title>partition_snapshot::versions (5 samples, 0.01%)</title><rect x="210.4" y="133" width="0.1" height="15.0" fill="rgb(212,37,49)" rx="2" ry="2" />
<text  x="213.36" y="143.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::~small_vector (36 samples, 0.07%)</title><rect x="443.8" y="293" width="0.9" height="15.0" fill="rgb(225,223,49)" rx="2" ry="2" />
<text  x="446.79" y="303.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (31 samples, 0.06%)</title><rect x="678.7" y="469" width="0.8" height="15.0" fill="rgb(223,52,17)" rx="2" ry="2" />
<text  x="681.71" y="479.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::small_vector (15 samples, 0.03%)</title><rect x="448.1" y="261" width="0.4" height="15.0" fill="rgb(241,12,47)" rx="2" ry="2" />
<text  x="451.12" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::_M_range_initialize&lt;managed_bytes const*&gt; (68 samples, 0.14%)</title><rect x="909.6" y="341" width="1.6" height="15.0" fill="rgb(236,0,22)" rx="2" ry="2" />
<text  x="912.56" y="351.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;mutation_querier, false, false&gt;::_Optional_base (8 samples, 0.02%)</title><rect x="418.3" y="405" width="0.2" height="15.0" fill="rgb(243,179,27)" rx="2" ry="2" />
<text  x="421.26" y="415.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (29 samples, 0.06%)</title><rect x="801.5" y="245" width="0.7" height="15.0" fill="rgb(207,167,47)" rx="2" ry="2" />
<text  x="804.49" y="255.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::allocate_large (6 samples, 0.01%)</title><rect x="974.7" y="309" width="0.2" height="15.0" fill="rgb(219,17,39)" rx="2" ry="2" />
<text  x="977.74" y="319.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;flat_mutation_reader::peek (29 samples, 0.06%)</title><rect x="282.5" y="389" width="0.7" height="15.0" fill="rgb(213,4,44)" rx="2" ry="2" />
<text  x="285.48" y="399.5" ></text>
</g>
<g >
<title>utils::fb_utilities::get_broadcast_address (11 samples, 0.02%)</title><rect x="1099.8" y="309" width="0.3" height="15.0" fill="rgb(206,8,53)" rx="2" ry="2" />
<text  x="1102.81" y="319.5" ></text>
</g>
<g >
<title>from_hex (5 samples, 0.01%)</title><rect x="20.2" y="341" width="0.1" height="15.0" fill="rgb(205,41,15)" rx="2" ry="2" />
<text  x="23.21" y="351.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::result_memory_accounter (9 samples, 0.02%)</title><rect x="603.4" y="421" width="0.2" height="15.0" fill="rgb(249,147,47)" rx="2" ry="2" />
<text  x="606.42" y="431.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::upper_bound&lt;mutation_partition, schema const&amp;, nonwrapping_interval&lt;clustering_key_prefix&gt; const&amp;&gt; (13 samples, 0.03%)</title><rect x="233.3" y="213" width="0.3" height="15.0" fill="rgb(205,187,47)" rx="2" ry="2" />
<text  x="236.32" y="223.5" ></text>
</g>
<g >
<title>reader_permit::consume_resources (33 samples, 0.07%)</title><rect x="503.0" y="181" width="0.8" height="15.0" fill="rgb(243,208,53)" rx="2" ry="2" />
<text  x="505.95" y="191.5" ></text>
</g>
<g >
<title>range_tombstone_list::slice (180 samples, 0.37%)</title><rect x="234.4" y="213" width="4.4" height="15.0" fill="rgb(232,29,29)" rx="2" ry="2" />
<text  x="237.40" y="223.5" ></text>
</g>
<g >
<title>seastar::future&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (83 samples, 0.17%)</title><rect x="787.3" y="213" width="2.0" height="15.0" fill="rgb(236,119,18)" rx="2" ry="2" />
<text  x="790.29" y="223.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;service::never_speculating_read_executor, true&gt;::make&lt;seastar::lw_shared_ptr&lt;schema const&gt;&amp;, seastar::lw_shared_ptr&lt;table&gt;&amp;, seastar::shared_ptr&lt;service::storage_proxy&gt;&amp;, seastar::lw_shared_ptr&lt;query::read_command&gt;&amp;, nonwrapping_interval&lt;dht::ring_position&gt;, db::consistency_level&amp;, utils::small_vector&lt;gms::inet_address, 3ul&gt;, tracing::trace_state_ptr, service_permit&gt; (374 samples, 0.77%)</title><rect x="1068.6" y="341" width="9.1" height="15.0" fill="rgb(214,112,43)" rx="2" ry="2" />
<text  x="1071.58" y="351.5" ></text>
</g>
<g >
<title>auth::data_resource_view::table (9 samples, 0.02%)</title><rect x="770.0" y="357" width="0.2" height="15.0" fill="rgb(243,106,10)" rx="2" ry="2" />
<text  x="773.00" y="367.5" ></text>
</g>
<g >
<title>reader_permit::consume_memory (16 samples, 0.03%)</title><rect x="208.0" y="165" width="0.4" height="15.0" fill="rgb(215,225,30)" rx="2" ry="2" />
<text  x="211.02" y="175.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (33 samples, 0.07%)</title><rect x="941.2" y="357" width="0.9" height="15.0" fill="rgb(219,205,21)" rx="2" ry="2" />
<text  x="944.25" y="367.5" ></text>
</g>
<g >
<title>operator delete (18 samples, 0.04%)</title><rect x="43.0" y="485" width="0.5" height="15.0" fill="rgb(238,196,35)" rx="2" ry="2" />
<text  x="46.03" y="495.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_M_reset (13 samples, 0.03%)</title><rect x="39.6" y="437" width="0.3" height="15.0" fill="rgb(209,171,18)" rx="2" ry="2" />
<text  x="42.59" y="447.5" ></text>
</g>
<g >
<title>empty_flat_reader::~empty_flat_reader (9 samples, 0.02%)</title><rect x="551.4" y="341" width="0.2" height="15.0" fill="rgb(205,7,6)" rx="2" ry="2" />
<text  x="554.42" y="351.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;empty_flat_reader, std::default_delete&lt;empty_flat_reader&gt; &gt;::~unique_ptr (17 samples, 0.04%)</title><rect x="529.8" y="277" width="0.4" height="15.0" fill="rgb(231,20,27)" rx="2" ry="2" />
<text  x="532.77" y="287.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (3,478 samples, 7.18%)</title><rect x="303.6" y="245" width="84.8" height="15.0" fill="rgb(241,37,45)" rx="2" ry="2" />
<text  x="306.64" y="255.5" >flat_muta..</text>
</g>
<g >
<title>make_flat_mutation_reader&lt;empty_flat_reader, seastar::lw_shared_ptr&lt;schema const&gt;, reader_permit&gt; (141 samples, 0.29%)</title><rect x="526.7" y="293" width="3.5" height="15.0" fill="rgb(244,116,11)" rx="2" ry="2" />
<text  x="529.75" y="303.5" ></text>
</g>
<g >
<title>partition_key_view::legacy_tri_compare (309 samples, 0.64%)</title><rect x="474.6" y="245" width="7.5" height="15.0" fill="rgb(231,122,11)" rx="2" ry="2" />
<text  x="477.58" y="255.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::indirect_move (7 samples, 0.01%)</title><rect x="71.4" y="389" width="0.2" height="15.0" fill="rgb(245,5,31)" rx="2" ry="2" />
<text  x="74.43" y="399.5" ></text>
</g>
<g >
<title>query::querier&lt; (18,247 samples, 37.66%)</title><rect x="103.5" y="437" width="444.4" height="15.0" fill="rgb(251,121,46)" rx="2" ry="2" />
<text  x="106.46" y="447.5" >query::querier&lt;</text>
</g>
<g >
<title>seastar::internal::promise_base::clear (6 samples, 0.01%)</title><rect x="1037.0" y="213" width="0.2" height="15.0" fill="rgb(250,95,37)" rx="2" ry="2" />
<text  x="1040.04" y="223.5" ></text>
</g>
<g >
<title>query_result_builder::consume (1,820 samples, 3.76%)</title><rect x="318.1" y="213" width="44.3" height="15.0" fill="rgb(236,155,49)" rx="2" ry="2" />
<text  x="321.06" y="223.5" >quer..</text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::clear (13 samples, 0.03%)</title><rect x="581.0" y="341" width="0.4" height="15.0" fill="rgb(211,226,52)" rx="2" ry="2" />
<text  x="584.04" y="351.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (5,020 samples, 10.36%)</title><rect x="289.7" y="373" width="122.3" height="15.0" fill="rgb(240,45,0)" rx="2" ry="2" />
<text  x="292.71" y="383.5" >flat_mutation_r..</text>
</g>
<g >
<title>__tls_init (12 samples, 0.02%)</title><rect x="455.8" y="325" width="0.3" height="15.0" fill="rgb(252,222,4)" rx="2" ry="2" />
<text  x="458.77" y="335.5" ></text>
</g>
<g >
<title>ser::query_result__partitions&lt;bytes_ostream&gt;::add (6 samples, 0.01%)</title><rect x="314.7" y="181" width="0.2" height="15.0" fill="rgb(237,104,54)" rx="2" ry="2" />
<text  x="317.72" y="191.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_pausable&lt;flush_reader::fill_buffer (5 samples, 0.01%)</title><rect x="21.6" y="389" width="0.1" height="15.0" fill="rgb(237,177,23)" rx="2" ry="2" />
<text  x="24.57" y="399.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (45 samples, 0.09%)</title><rect x="753.2" y="341" width="1.1" height="15.0" fill="rgb(246,98,23)" rx="2" ry="2" />
<text  x="756.17" y="351.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::small_vector (7 samples, 0.01%)</title><rect x="450.0" y="277" width="0.1" height="15.0" fill="rgb(223,23,29)" rx="2" ry="2" />
<text  x="452.95" y="287.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::operator= (13 samples, 0.03%)</title><rect x="699.7" y="437" width="0.3" height="15.0" fill="rgb(206,106,1)" rx="2" ry="2" />
<text  x="702.70" y="447.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (6 samples, 0.01%)</title><rect x="568.1" y="309" width="0.2" height="15.0" fill="rgb(218,71,6)" rx="2" ry="2" />
<text  x="571.13" y="319.5" ></text>
</g>
<g >
<title>allocation_strategy::alloc&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::leaf_node&gt; (17 samples, 0.04%)</title><rect x="193.0" y="101" width="0.4" height="15.0" fill="rgb(234,143,3)" rx="2" ry="2" />
<text  x="195.97" y="111.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_no_esft&lt;std::function&lt;std::function&lt;partition_presence_checker_result  (12 samples, 0.02%)</title><rect x="622.5" y="389" width="0.3" height="15.0" fill="rgb(218,169,14)" rx="2" ry="2" />
<text  x="625.47" y="399.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::insertToken (10 samples, 0.02%)</title><rect x="15.4" y="293" width="0.2" height="15.0" fill="rgb(250,29,18)" rx="2" ry="2" />
<text  x="18.36" y="303.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (5 samples, 0.01%)</title><rect x="757.5" y="309" width="0.1" height="15.0" fill="rgb(242,203,49)" rx="2" ry="2" />
<text  x="760.45" y="319.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (25 samples, 0.05%)</title><rect x="776.9" y="277" width="0.6" height="15.0" fill="rgb(242,73,17)" rx="2" ry="2" />
<text  x="779.86" y="287.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::pop_mutation_fragment (36 samples, 0.07%)</title><rect x="130.3" y="245" width="0.9" height="15.0" fill="rgb(214,211,0)" rx="2" ry="2" />
<text  x="133.32" y="255.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;std::tuple&lt;seastar::lw_shared_ptr&lt;query::result&gt;, cache_temperature&gt; &gt;::set_value&lt;std::tuple&lt;seastar::lw_shared_ptr&lt;query::result&gt;, cache_temperature&gt; &gt; (17 samples, 0.04%)</title><rect x="44.1" y="485" width="0.4" height="15.0" fill="rgb(221,84,6)" rx="2" ry="2" />
<text  x="47.05" y="495.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (24 samples, 0.05%)</title><rect x="1064.5" y="277" width="0.6" height="15.0" fill="rgb(251,212,51)" rx="2" ry="2" />
<text  x="1067.52" y="287.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (12 samples, 0.02%)</title><rect x="1045.6" y="261" width="0.3" height="15.0" fill="rgb(212,83,23)" rx="2" ry="2" />
<text  x="1048.61" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::vector (187 samples, 0.39%)</title><rect x="1116.6" y="389" width="4.6" height="15.0" fill="rgb(240,150,38)" rx="2" ry="2" />
<text  x="1119.64" y="399.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate_to_raw_view (9 samples, 0.02%)</title><rect x="863.1" y="309" width="0.2" height="15.0" fill="rgb(229,218,8)" rx="2" ry="2" />
<text  x="866.09" y="319.5" ></text>
</g>
<g >
<title>dht::tri_compare (12 samples, 0.02%)</title><rect x="482.2" y="277" width="0.3" height="15.0" fill="rgb(230,31,5)" rx="2" ry="2" />
<text  x="485.20" y="287.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_9has_tokenERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES28_S2B_ (7 samples, 0.01%)</title><rect x="948.8" y="341" width="0.2" height="15.0" fill="rgb(211,104,4)" rx="2" ry="2" />
<text  x="951.80" y="351.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_prepared (13 samples, 0.03%)</title><rect x="859.8" y="485" width="0.3" height="15.0" fill="rgb(226,224,50)" rx="2" ry="2" />
<text  x="862.82" y="495.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::execute_without_condition (33 samples, 0.07%)</title><rect x="862.7" y="421" width="0.8" height="15.0" fill="rgb(216,118,41)" rx="2" ry="2" />
<text  x="865.67" y="431.5" ></text>
</g>
<g >
<title>boost::circular_buffer&lt;long, std::allocator&lt;long&gt; &gt;::push_back_impl&lt;long const&amp;&gt; (7 samples, 0.01%)</title><rect x="676.2" y="437" width="0.1" height="15.0" fill="rgb(248,140,8)" rx="2" ry="2" />
<text  x="679.15" y="447.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (127 samples, 0.26%)</title><rect x="1185.8" y="613" width="3.1" height="15.0" fill="rgb(231,189,29)" rx="2" ry="2" />
<text  x="1188.76" y="623.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally&lt;single_node_cql_env::execute_prepared_with_qo (116 samples, 0.24%)</title><rect x="830.1" y="437" width="2.8" height="15.0" fill="rgb(222,77,4)" rx="2" ry="2" />
<text  x="833.06" y="447.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (23,450 samples, 48.40%)</title><rect x="52.5" y="469" width="571.2" height="15.0" fill="rgb(220,26,53)" rx="2" ry="2" />
<text  x="55.50" y="479.5" >seastar::noncopyable_function&lt;seastar::future&lt;void&gt; </text>
</g>
<g >
<title>seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;::swap (31 samples, 0.06%)</title><rect x="737.7" y="373" width="0.8" height="15.0" fill="rgb(251,42,21)" rx="2" ry="2" />
<text  x="740.70" y="383.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (9 samples, 0.02%)</title><rect x="38.5" y="437" width="0.2" height="15.0" fill="rgb(208,97,3)" rx="2" ry="2" />
<text  x="41.50" y="447.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::clear (9 samples, 0.02%)</title><rect x="710.5" y="501" width="0.2" height="15.0" fill="rgb(251,127,15)" rx="2" ry="2" />
<text  x="713.52" y="511.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::fetch (5,894 samples, 12.17%)</title><rect x="117.1" y="341" width="143.6" height="15.0" fill="rgb(244,227,15)" rx="2" ry="2" />
<text  x="120.14" y="351.5" >mutation_fragment_..</text>
</g>
<g >
<title>locator::i_endpoint_snitch::get_local_snitch_ptr (5 samples, 0.01%)</title><rect x="1078.4" y="325" width="0.1" height="15.0" fill="rgb(230,25,1)" rx="2" ry="2" />
<text  x="1081.40" y="335.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (14 samples, 0.03%)</title><rect x="757.4" y="325" width="0.3" height="15.0" fill="rgb(254,20,5)" rx="2" ry="2" />
<text  x="760.36" y="335.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (11 samples, 0.02%)</title><rect x="895.1" y="261" width="0.3" height="15.0" fill="rgb(237,186,36)" rx="2" ry="2" />
<text  x="898.14" y="271.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;dht::decorated_key&gt;::_M_reset (9 samples, 0.02%)</title><rect x="387.8" y="229" width="0.2" height="15.0" fill="rgb(213,82,20)" rx="2" ry="2" />
<text  x="390.82" y="239.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (6 samples, 0.01%)</title><rect x="17.6" y="325" width="0.1" height="15.0" fill="rgb(230,153,16)" rx="2" ry="2" />
<text  x="20.55" y="335.5" ></text>
</g>
<g >
<title>boost::intrusive::bstbase&lt;boost::intrusive::mhtraits&lt;range_tombstone_entry, boost::intrusive::set_member_hook&lt;boost::intrusive::link_mode&lt; (59 samples, 0.12%)</title><rect x="556.2" y="309" width="1.4" height="15.0" fill="rgb(216,151,6)" rx="2" ry="2" />
<text  x="559.19" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value, std::allocator&lt;cql3::raw_value&gt; &gt;::_M_range_initialize&lt;cql3::raw_value const*&gt; (76 samples, 0.16%)</title><rect x="855.7" y="453" width="1.8" height="15.0" fill="rgb(220,114,13)" rx="2" ry="2" />
<text  x="858.68" y="463.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::query_options, std::default_delete&lt;cql3::query_options&gt; &gt;::~unique_ptr (192 samples, 0.40%)</title><rect x="667.4" y="485" width="4.7" height="15.0" fill="rgb(221,47,6)" rx="2" ry="2" />
<text  x="670.43" y="495.5" ></text>
</g>
<g >
<title>locator::token_metadata::is_any_node_being_replaced (14 samples, 0.03%)</title><rect x="1095.8" y="309" width="0.4" height="15.0" fill="rgb(219,0,10)" rx="2" ry="2" />
<text  x="1098.84" y="319.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::abstract_read_executor&gt;::~shared_ptr (6 samples, 0.01%)</title><rect x="988.7" y="341" width="0.1" height="15.0" fill="rgb(230,105,40)" rx="2" ry="2" />
<text  x="991.69" y="351.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::then_wrapped_nrvo&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (87 samples, 0.18%)</title><rect x="830.6" y="405" width="2.1" height="15.0" fill="rgb(244,95,26)" rx="2" ry="2" />
<text  x="833.62" y="415.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::schedule&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::make_data_requests (91 samples, 0.19%)</title><rect x="999.0" y="277" width="2.2" height="15.0" fill="rgb(243,215,12)" rx="2" ry="2" />
<text  x="1002.02" y="287.5" ></text>
</g>
<g >
<title>std::default_delete&lt;query::partition_slice const&gt;::operator (89 samples, 0.18%)</title><rect x="588.7" y="405" width="2.2" height="15.0" fill="rgb(240,140,17)" rx="2" ry="2" />
<text  x="591.69" y="415.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::move_it (118 samples, 0.24%)</title><rect x="676.6" y="485" width="2.9" height="15.0" fill="rgb(250,179,52)" rx="2" ry="2" />
<text  x="679.59" y="495.5" ></text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;void&gt;, database*, seastar::lw_shared_ptr&lt;schema const&gt;, frozen_mutation const&amp;, tracing::trace_state_ptr, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, seastar::bool_class&lt;db::force_sync_tag&gt; &gt;::make_stage_for_group (45 samples, 0.09%)</title><rect x="1141.0" y="405" width="1.1" height="15.0" fill="rgb(249,78,9)" rx="2" ry="2" />
<text  x="1143.97" y="415.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (425 samples, 0.88%)</title><rect x="661.8" y="501" width="10.3" height="15.0" fill="rgb(248,55,35)" rx="2" ry="2" />
<text  x="664.76" y="511.5" ></text>
</g>
<g >
<title>auth::resource::resource (109 samples, 0.22%)</title><rect x="764.7" y="389" width="2.6" height="15.0" fill="rgb(206,52,33)" rx="2" ry="2" />
<text  x="767.69" y="399.5" ></text>
</g>
<g >
<title>service::abstract_read_resolver::abstract_read_resolver (144 samples, 0.30%)</title><rect x="992.9" y="293" width="3.5" height="15.0" fill="rgb(210,192,19)" rx="2" ry="2" />
<text  x="995.91" y="303.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::_Copy_ctor_base (26 samples, 0.05%)</title><rect x="315.2" y="181" width="0.6" height="15.0" fill="rgb(253,209,26)" rx="2" ry="2" />
<text  x="318.19" y="191.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_4findERKNS5_10expressionENS5_6oper_tEEUlRS7_E_EES8_SE_T_EUlSG_E_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_8constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_11conjunctionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_12column_valueEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_5tokenEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13function_callEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4castEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_15field_selectionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4nullEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13bind_variableEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_16untyped_constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_17tuple_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_22collection_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSO_S6_SS_SW_S10_S14_S18_S1C_S1G_S1K_S1O_S1S_SK_S1W_S20_S24_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES29_S2C_ (6 samples, 0.01%)</title><rect x="955.2" y="325" width="0.1" height="15.0" fill="rgb(217,53,6)" rx="2" ry="2" />
<text  x="958.18" y="335.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (170 samples, 0.35%)</title><rect x="723.3" y="357" width="4.2" height="15.0" fill="rgb(227,109,33)" rx="2" ry="2" />
<text  x="726.33" y="367.5" ></text>
</g>
<g >
<title>reader_permit::consume_memory (39 samples, 0.08%)</title><rect x="502.8" y="197" width="1.0" height="15.0" fill="rgb(207,138,32)" rx="2" ry="2" />
<text  x="505.83" y="207.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql_transport::messages::result_message::rows&gt;::~shared_ptr_count_for (346 samples, 0.71%)</title><rect x="33.2" y="485" width="8.4" height="15.0" fill="rgb(240,102,20)" rx="2" ry="2" />
<text  x="36.16" y="495.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::push_back (10 samples, 0.02%)</title><rect x="15.4" y="277" width="0.2" height="15.0" fill="rgb(229,169,28)" rx="2" ry="2" />
<text  x="18.36" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::stats (37 samples, 0.08%)</title><rect x="525.6" y="293" width="0.9" height="15.0" fill="rgb(223,39,25)" rx="2" ry="2" />
<text  x="528.55" y="303.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;seastar::semaphore_units&lt;seastar::semaphore_default_exception_factory, std::chrono::_V2::steady_clock&gt; &gt;::dispose (10 samples, 0.02%)</title><rect x="667.1" y="469" width="0.3" height="15.0" fill="rgb(250,17,53)" rx="2" ry="2" />
<text  x="670.14" y="479.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;bool  (7 samples, 0.01%)</title><rect x="544.4" y="389" width="0.2" height="15.0" fill="rgb(210,214,45)" rx="2" ry="2" />
<text  x="547.43" y="399.5" ></text>
</g>
<g >
<title>compound_type&lt; (63 samples, 0.13%)</title><rect x="539.0" y="357" width="1.5" height="15.0" fill="rgb(228,126,5)" rx="2" ry="2" />
<text  x="541.95" y="367.5" ></text>
</g>
<g >
<title>cql3::authorized_prepared_statements_cache_key::hash (128 samples, 0.26%)</title><rect x="741.8" y="325" width="3.2" height="15.0" fill="rgb(254,153,24)" rx="2" ry="2" />
<text  x="744.84" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (16 samples, 0.03%)</title><rect x="1040.0" y="181" width="0.4" height="15.0" fill="rgb(247,63,34)" rx="2" ry="2" />
<text  x="1042.96" y="191.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (97 samples, 0.20%)</title><rect x="955.4" y="389" width="2.4" height="15.0" fill="rgb(212,69,35)" rx="2" ry="2" />
<text  x="958.40" y="399.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (19 samples, 0.04%)</title><rect x="683.5" y="325" width="0.4" height="15.0" fill="rgb(253,84,27)" rx="2" ry="2" />
<text  x="686.48" y="335.5" ></text>
</g>
<g >
<title>row::row (15 samples, 0.03%)</title><rect x="246.1" y="213" width="0.4" height="15.0" fill="rgb(233,32,32)" rx="2" ry="2" />
<text  x="249.09" y="223.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector (9 samples, 0.02%)</title><rect x="1101.2" y="341" width="0.2" height="15.0" fill="rgb(245,157,34)" rx="2" ry="2" />
<text  x="1104.17" y="351.5" ></text>
</g>
<g >
<title>boost::intrusive::bstree_algorithms&lt;boost::intrusive::rbtree_node_traits&lt;void*, false&gt; &gt;::clear_and_dispose&lt;boost::intrusive::detail::node_disposer&lt;boost::intrusive::detail::null_disposer, boost::intrusive::mhtraits&lt;range_tombstone_entry, boost::intrusive::set_member_hook&lt;boost::intrusive::link_mode&lt; (5 samples, 0.01%)</title><rect x="560.6" y="277" width="0.1" height="15.0" fill="rgb(216,156,43)" rx="2" ry="2" />
<text  x="563.55" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::_M_range_initialize&lt;nonwrapping_interval&lt;dht::ring_position&gt; const*&gt; (126 samples, 0.26%)</title><rect x="1050.6" y="261" width="3.0" height="15.0" fill="rgb(220,199,26)" rx="2" ry="2" />
<text  x="1053.56" y="271.5" ></text>
</g>
<g >
<title>antlr3::IntStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::_LA (7 samples, 0.01%)</title><rect x="16.2" y="245" width="0.1" height="15.0" fill="rgb(242,108,0)" rx="2" ry="2" />
<text  x="19.16" y="255.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (34 samples, 0.07%)</title><rect x="415.5" y="357" width="0.8" height="15.0" fill="rgb(239,103,41)" rx="2" ry="2" />
<text  x="418.51" y="367.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (6 samples, 0.01%)</title><rect x="444.8" y="309" width="0.1" height="15.0" fill="rgb(216,36,12)" rx="2" ry="2" />
<text  x="447.79" y="319.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (8 samples, 0.02%)</title><rect x="888.7" y="309" width="0.2" height="15.0" fill="rgb(249,70,35)" rx="2" ry="2" />
<text  x="891.73" y="319.5" ></text>
</g>
<g >
<title>seastar::future&lt;std::tuple&lt;std::optional&lt;clustering_key_prefix&gt; &gt; &gt;::then_impl&lt;query::querier&lt; (16 samples, 0.03%)</title><rect x="537.1" y="421" width="0.4" height="15.0" fill="rgb(210,30,10)" rx="2" ry="2" />
<text  x="540.07" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (22 samples, 0.05%)</title><rect x="502.3" y="181" width="0.5" height="15.0" fill="rgb(208,129,46)" rx="2" ry="2" />
<text  x="505.27" y="191.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::need_filtering (182 samples, 0.38%)</title><rect x="945.7" y="421" width="4.4" height="15.0" fill="rgb(252,117,26)" rx="2" ry="2" />
<text  x="948.66" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_node (32 samples, 0.07%)</title><rect x="660.9" y="437" width="0.8" height="15.0" fill="rgb(239,180,16)" rx="2" ry="2" />
<text  x="663.88" y="447.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;query::result_memory_limiter::new_data_read (23 samples, 0.05%)</title><rect x="602.3" y="437" width="0.6" height="15.0" fill="rgb(252,11,13)" rx="2" ry="2" />
<text  x="605.33" y="447.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::clear (7 samples, 0.01%)</title><rect x="639.0" y="485" width="0.2" height="15.0" fill="rgb(236,153,25)" rx="2" ry="2" />
<text  x="642.01" y="495.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (21 samples, 0.04%)</title><rect x="803.9" y="229" width="0.5" height="15.0" fill="rgb(210,157,1)" rx="2" ry="2" />
<text  x="806.85" y="239.5" ></text>
</g>
<g >
<title>ser::serializer&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;::write_fragmented&lt;bytes_ostream, fragment_range&lt;managed_bytes_basic_view&lt; (218 samples, 0.45%)</title><rect x="352.0" y="165" width="5.3" height="15.0" fill="rgb(239,135,46)" rx="2" ry="2" />
<text  x="354.97" y="175.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;flat_mutation_reader::impl::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (5 samples, 0.01%)</title><rect x="292.7" y="309" width="0.1" height="15.0" fill="rgb(247,121,46)" rx="2" ry="2" />
<text  x="295.68" y="319.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::digest_read_result&gt;::schedule&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::execute (98 samples, 0.20%)</title><rect x="985.8" y="309" width="2.4" height="15.0" fill="rgb(225,135,8)" rx="2" ry="2" />
<text  x="988.77" y="319.5" ></text>
</g>
<g >
<title>std::variant&lt;query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::operator=&lt;query::noop_hasher&gt; (9 samples, 0.02%)</title><rect x="594.7" y="389" width="0.2" height="15.0" fill="rgb(250,64,29)" rx="2" ry="2" />
<text  x="597.73" y="399.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (181 samples, 0.37%)</title><rect x="464.8" y="261" width="4.4" height="15.0" fill="rgb(252,46,12)" rx="2" ry="2" />
<text  x="467.81" y="271.5" ></text>
</g>
<g >
<title>seastar::future&lt;mutation_fragment*&gt;::then_impl&lt;query::consume_page&lt; (17 samples, 0.04%)</title><rect x="536.7" y="421" width="0.4" height="15.0" fill="rgb(209,212,22)" rx="2" ry="2" />
<text  x="539.66" y="431.5" ></text>
</g>
<g >
<title>operator new (9 samples, 0.02%)</title><rect x="855.5" y="453" width="0.2" height="15.0" fill="rgb(243,53,1)" rx="2" ry="2" />
<text  x="858.46" y="463.5" ></text>
</g>
<g >
<title>operator new (21 samples, 0.04%)</title><rect x="491.7" y="293" width="0.5" height="15.0" fill="rgb(239,157,10)" rx="2" ry="2" />
<text  x="494.65" y="303.5" ></text>
</g>
<g >
<title>std::__lower_bound&lt;__gnu_cxx::__normal_iterator&lt;dht::token const*, std::vector&lt;dht::token, std::allocator&lt;dht::token&gt; &gt; &gt;, dht::token, __gnu_cxx::__ops::_Iter_less_val&gt; (233 samples, 0.48%)</title><rect x="1083.6" y="245" width="5.7" height="15.0" fill="rgb(242,222,11)" rx="2" ry="2" />
<text  x="1086.64" y="255.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (5 samples, 0.01%)</title><rect x="103.3" y="421" width="0.2" height="15.0" fill="rgb(253,101,13)" rx="2" ry="2" />
<text  x="106.33" y="431.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::~merging_reader (474 samples, 0.98%)</title><rect x="571.1" y="389" width="11.5" height="15.0" fill="rgb(224,157,27)" rx="2" ry="2" />
<text  x="574.05" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::vector (142 samples, 0.29%)</title><rect x="1050.2" y="277" width="3.4" height="15.0" fill="rgb(223,81,37)" rx="2" ry="2" />
<text  x="1053.17" y="287.5" ></text>
</g>
<g >
<title>operator delete (78 samples, 0.16%)</title><rect x="578.0" y="341" width="1.9" height="15.0" fill="rgb(211,204,18)" rx="2" ry="2" />
<text  x="581.04" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value_view, std::allocator&lt;cql3::raw_value_view&gt; &gt;::emplace_back&lt;cql3::raw_value_view&gt; (111 samples, 0.23%)</title><rect x="849.2" y="389" width="2.7" height="15.0" fill="rgb(226,21,26)" rx="2" ry="2" />
<text  x="852.23" y="399.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::pop_mutation_fragment (42 samples, 0.09%)</title><rect x="120.8" y="309" width="1.1" height="15.0" fill="rgb(208,209,7)" rx="2" ry="2" />
<text  x="123.85" y="319.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;, seastar::future&lt;void&gt; &gt;, std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;, seastar::future&lt;void&gt; &gt; &gt; &gt;::~unique_ptr (87 samples, 0.18%)</title><rect x="814.7" y="389" width="2.1" height="15.0" fill="rgb(252,191,54)" rx="2" ry="2" />
<text  x="817.69" y="399.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::build_partition_keys (6 samples, 0.01%)</title><rect x="862.8" y="389" width="0.1" height="15.0" fill="rgb(248,109,10)" rx="2" ry="2" />
<text  x="865.77" y="399.5" ></text>
</g>
<g >
<title>range_tombstone_stream::get_next (15 samples, 0.03%)</title><rect x="220.8" y="165" width="0.3" height="15.0" fill="rgb(227,23,26)" rx="2" ry="2" />
<text  x="223.78" y="175.5" ></text>
</g>
<g >
<title>std::queue&lt;reader_concurrency_semaphore::entry, seastar::circular_buffer&lt;reader_concurrency_semaphore::entry, std::allocator&lt;reader_concurrency_semaphore::entry&gt; &gt; &gt;::pop (39 samples, 0.08%)</title><rect x="627.5" y="485" width="0.9" height="15.0" fill="rgb(206,191,15)" rx="2" ry="2" />
<text  x="630.46" y="495.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::set&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt; (23 samples, 0.05%)</title><rect x="689.7" y="437" width="0.6" height="15.0" fill="rgb(250,2,33)" rx="2" ry="2" />
<text  x="692.72" y="447.5" ></text>
</g>
<g >
<title>operator new (24 samples, 0.05%)</title><rect x="514.8" y="325" width="0.5" height="15.0" fill="rgb(211,183,12)" rx="2" ry="2" />
<text  x="517.76" y="335.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_token (48 samples, 0.10%)</title><rect x="948.0" y="389" width="1.2" height="15.0" fill="rgb(250,180,21)" rx="2" ry="2" />
<text  x="950.99" y="399.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (31 samples, 0.06%)</title><rect x="745.9" y="389" width="0.7" height="15.0" fill="rgb(208,105,27)" rx="2" ry="2" />
<text  x="748.88" y="399.5" ></text>
</g>
<g >
<title>ser::qr_clustered_row__cells&lt;bytes_ostream&gt;::start_cells (29 samples, 0.06%)</title><rect x="329.9" y="181" width="0.8" height="15.0" fill="rgb(222,73,52)" rx="2" ry="2" />
<text  x="332.95" y="191.5" ></text>
</g>
<g >
<title>compare_unsigned&lt;managed_bytes_basic_view&lt; (62 samples, 0.13%)</title><rect x="475.8" y="213" width="1.5" height="15.0" fill="rgb(218,189,18)" rx="2" ry="2" />
<text  x="478.82" y="223.5" ></text>
</g>
<g >
<title>seastar::reactor::add_timer (31 samples, 0.06%)</title><rect x="1032.2" y="149" width="0.7" height="15.0" fill="rgb(253,158,9)" rx="2" ry="2" />
<text  x="1035.19" y="159.5" ></text>
</g>
<g >
<title>service::shared_mutation::shared_mutation (10 samples, 0.02%)</title><rect x="1142.4" y="213" width="0.2" height="15.0" fill="rgb(239,26,43)" rx="2" ry="2" />
<text  x="1145.38" y="223.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::clear (34 samples, 0.07%)</title><rect x="253.5" y="277" width="0.9" height="15.0" fill="rgb(239,78,47)" rx="2" ry="2" />
<text  x="256.54" y="287.5" ></text>
</g>
<g >
<title>std::optional&lt;clustering_key_prefix&gt;::operator=&lt;clustering_key_prefix const&amp;&gt; (38 samples, 0.08%)</title><rect x="222.3" y="213" width="0.9" height="15.0" fill="rgb(206,118,2)" rx="2" ry="2" />
<text  x="225.27" y="223.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::operator (12 samples, 0.02%)</title><rect x="1064.2" y="277" width="0.3" height="15.0" fill="rgb(211,67,45)" rx="2" ry="2" />
<text  x="1067.20" y="287.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (25 samples, 0.05%)</title><rect x="139.1" y="261" width="0.6" height="15.0" fill="rgb(231,185,14)" rx="2" ry="2" />
<text  x="142.11" y="271.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::with_ready_permit (14 samples, 0.03%)</title><rect x="1036.5" y="213" width="0.3" height="15.0" fill="rgb(242,114,34)" rx="2" ry="2" />
<text  x="1039.51" y="223.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;mutation_fragment*&gt;::take_value (32 samples, 0.07%)</title><rect x="417.5" y="405" width="0.8" height="15.0" fill="rgb(249,128,27)" rx="2" ry="2" />
<text  x="420.48" y="415.5" ></text>
</g>
<g >
<title>mutation_reader_merger::add_readers (114 samples, 0.24%)</title><rect x="436.5" y="277" width="2.7" height="15.0" fill="rgb(243,143,13)" rx="2" ry="2" />
<text  x="439.46" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::_M_realloc_insert&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; (7 samples, 0.01%)</title><rect x="18.0" y="277" width="0.2" height="15.0" fill="rgb(217,57,51)" rx="2" ry="2" />
<text  x="20.99" y="287.5" ></text>
</g>
<g >
<title>std::default_delete&lt;nonwrapping_interval&lt;dht::ring_position&gt; const&gt;::operator (14 samples, 0.03%)</title><rect x="587.3" y="405" width="0.3" height="15.0" fill="rgb(249,18,38)" rx="2" ry="2" />
<text  x="590.30" y="415.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_result_local (2,045 samples, 4.22%)</title><rect x="1004.8" y="293" width="49.8" height="15.0" fill="rgb(219,62,22)" rx="2" ry="2" />
<text  x="1007.79" y="303.5" >servi..</text>
</g>
<g >
<title>flat_mutation_reader::upgrade_schema (18 samples, 0.04%)</title><rect x="429.8" y="341" width="0.4" height="15.0" fill="rgb(243,62,34)" rx="2" ry="2" />
<text  x="432.81" y="351.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::clear (18 samples, 0.04%)</title><rect x="254.7" y="277" width="0.4" height="15.0" fill="rgb(254,22,42)" rx="2" ry="2" />
<text  x="257.71" y="287.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (309 samples, 0.64%)</title><rect x="94.7" y="437" width="7.5" height="15.0" fill="rgb(206,5,9)" rx="2" ry="2" />
<text  x="97.69" y="447.5" ></text>
</g>
<g >
<title>allocation_strategy::get_standard_migrator&lt;blob_storage&gt; (24 samples, 0.05%)</title><rect x="184.9" y="53" width="0.5" height="15.0" fill="rgb(232,227,38)" rx="2" ry="2" />
<text  x="187.86" y="63.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::vector (76 samples, 0.16%)</title><rect x="909.4" y="357" width="1.8" height="15.0" fill="rgb(215,56,32)" rx="2" ry="2" />
<text  x="912.36" y="367.5" ></text>
</g>
<g >
<title>schema::column_at (73 samples, 0.15%)</title><rect x="195.8" y="117" width="1.7" height="15.0" fill="rgb(237,117,47)" rx="2" ry="2" />
<text  x="198.77" y="127.5" ></text>
</g>
<g >
<title>validation::validate_column_family (5 samples, 0.01%)</title><rect x="20.9" y="453" width="0.1" height="15.0" fill="rgb(236,116,53)" rx="2" ry="2" />
<text  x="23.91" y="463.5" ></text>
</g>
<g >
<title>std::__detail::_List_node_base::_M_transfer (35 samples, 0.07%)</title><rect x="134.1" y="245" width="0.9" height="15.0" fill="rgb(225,170,24)" rx="2" ry="2" />
<text  x="137.12" y="255.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::storage_proxy&gt;::~shared_ptr (7 samples, 0.01%)</title><rect x="982.8" y="357" width="0.1" height="15.0" fill="rgb(226,52,8)" rx="2" ry="2" />
<text  x="985.77" y="367.5" ></text>
</g>
<g >
<title>operator delete (29 samples, 0.06%)</title><rect x="903.3" y="309" width="0.7" height="15.0" fill="rgb(211,43,34)" rx="2" ry="2" />
<text  x="906.25" y="319.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_token (34 samples, 0.07%)</title><rect x="882.3" y="405" width="0.8" height="15.0" fill="rgb(214,171,0)" rx="2" ry="2" />
<text  x="885.30" y="415.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (8 samples, 0.02%)</title><rect x="510.9" y="325" width="0.2" height="15.0" fill="rgb(212,195,0)" rx="2" ry="2" />
<text  x="513.92" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::vector (63 samples, 0.13%)</title><rect x="940.5" y="405" width="1.6" height="15.0" fill="rgb(210,97,14)" rx="2" ry="2" />
<text  x="943.52" y="415.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::trivial_direct_destroy (26 samples, 0.05%)</title><rect x="67.2" y="389" width="0.7" height="15.0" fill="rgb(238,207,24)" rx="2" ry="2" />
<text  x="70.24" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::allocate_aligned (32 samples, 0.07%)</title><rect x="193.9" y="69" width="0.8" height="15.0" fill="rgb(213,98,8)" rx="2" ry="2" />
<text  x="196.92" y="79.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (36 samples, 0.07%)</title><rect x="1074.1" y="293" width="0.9" height="15.0" fill="rgb(240,192,37)" rx="2" ry="2" />
<text  x="1077.14" y="303.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_map&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::at&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt; &gt; (168 samples, 0.35%)</title><rect x="819.3" y="341" width="4.1" height="15.0" fill="rgb(229,167,15)" rx="2" ry="2" />
<text  x="822.34" y="351.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;::_Tuple_impl&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const&amp;, auth::resource, void&gt; (61 samples, 0.13%)</title><rect x="763.1" y="357" width="1.4" height="15.0" fill="rgb(253,81,39)" rx="2" ry="2" />
<text  x="766.05" y="367.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;, nonwrapping_interval&lt;managed_bytes&gt; &gt;::~_Variant_storage (10 samples, 0.02%)</title><rect x="939.9" y="405" width="0.2" height="15.0" fill="rgb(238,71,17)" rx="2" ry="2" />
<text  x="942.86" y="415.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (7 samples, 0.01%)</title><rect x="449.5" y="277" width="0.2" height="15.0" fill="rgb(242,19,3)" rx="2" ry="2" />
<text  x="452.49" y="287.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (38 samples, 0.08%)</title><rect x="654.4" y="485" width="0.9" height="15.0" fill="rgb(207,105,21)" rx="2" ry="2" />
<text  x="657.38" y="495.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::partition_tombstone (74 samples, 0.15%)</title><rect x="506.0" y="245" width="1.8" height="15.0" fill="rgb(227,135,45)" rx="2" ry="2" />
<text  x="509.02" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::~vector (5 samples, 0.01%)</title><rect x="452.6" y="325" width="0.1" height="15.0" fill="rgb(247,92,1)" rx="2" ry="2" />
<text  x="455.56" y="335.5" ></text>
</g>
<g >
<title>operator new (20 samples, 0.04%)</title><rect x="651.5" y="453" width="0.4" height="15.0" fill="rgb(232,209,34)" rx="2" ry="2" />
<text  x="654.45" y="463.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (54 samples, 0.11%)</title><rect x="584.8" y="421" width="1.4" height="15.0" fill="rgb(228,79,30)" rx="2" ry="2" />
<text  x="587.84" y="431.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;managed_bytes&gt;::dispose (14 samples, 0.03%)</title><rect x="911.9" y="373" width="0.4" height="15.0" fill="rgb(243,23,15)" rx="2" ry="2" />
<text  x="914.92" y="383.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::deallocate (22 samples, 0.05%)</title><rect x="572.2" y="357" width="0.6" height="15.0" fill="rgb(224,143,45)" rx="2" ry="2" />
<text  x="575.25" y="367.5" ></text>
</g>
<g >
<title>bound_view::from_range_end&lt;nonwrapping_interval&gt; (18 samples, 0.04%)</title><rect x="223.6" y="213" width="0.4" height="15.0" fill="rgb(222,12,9)" rx="2" ry="2" />
<text  x="226.58" y="223.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (13 samples, 0.03%)</title><rect x="742.1" y="277" width="0.3" height="15.0" fill="rgb(228,36,39)" rx="2" ry="2" />
<text  x="745.13" y="287.5" ></text>
</g>
<g >
<title>partition_snapshot::~partition_snapshot (9 samples, 0.02%)</title><rect x="565.0" y="277" width="0.2" height="15.0" fill="rgb(222,73,53)" rx="2" ry="2" />
<text  x="567.99" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_need_rehash (37 samples, 0.08%)</title><rect x="1161.1" y="453" width="0.9" height="15.0" fill="rgb(246,130,14)" rx="2" ry="2" />
<text  x="1164.06" y="463.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_restrictions::size (12 samples, 0.02%)</title><rect x="878.7" y="421" width="0.3" height="15.0" fill="rgb(213,209,42)" rx="2" ry="2" />
<text  x="881.75" y="431.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (8 samples, 0.02%)</title><rect x="628.2" y="453" width="0.2" height="15.0" fill="rgb(216,186,40)" rx="2" ry="2" />
<text  x="631.19" y="463.5" ></text>
</g>
<g >
<title>ser::after_qr_cell__timestamp&lt;bytes_ostream&gt;::skip_expiry (113 samples, 0.23%)</title><rect x="347.2" y="165" width="2.7" height="15.0" fill="rgb(216,151,32)" rx="2" ry="2" />
<text  x="350.17" y="175.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (39 samples, 0.08%)</title><rect x="1013.5" y="245" width="1.0" height="15.0" fill="rgb(220,143,32)" rx="2" ry="2" />
<text  x="1016.51" y="255.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (12 samples, 0.02%)</title><rect x="605.3" y="437" width="0.3" height="15.0" fill="rgb(246,57,13)" rx="2" ry="2" />
<text  x="608.30" y="447.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::result_set, std::default_delete&lt;cql3::result_set&gt; &gt;::~unique_ptr (5 samples, 0.01%)</title><rect x="653.4" y="469" width="0.1" height="15.0" fill="rgb(205,181,27)" rx="2" ry="2" />
<text  x="656.40" y="479.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::Parser (5 samples, 0.01%)</title><rect x="15.0" y="405" width="0.1" height="15.0" fill="rgb(254,68,10)" rx="2" ry="2" />
<text  x="18.02" y="415.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::move_it (10 samples, 0.02%)</title><rect x="710.8" y="501" width="0.3" height="15.0" fill="rgb(219,23,1)" rx="2" ry="2" />
<text  x="713.83" y="511.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;mutation_fragment_merger&lt;mutation_reader_merger&gt;::operator (10 samples, 0.02%)</title><rect x="280.1" y="357" width="0.3" height="15.0" fill="rgb(213,66,10)" rx="2" ry="2" />
<text  x="283.14" y="367.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (5 samples, 0.01%)</title><rect x="653.1" y="437" width="0.1" height="15.0" fill="rgb(247,107,8)" rx="2" ry="2" />
<text  x="656.06" y="447.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (53 samples, 0.11%)</title><rect x="270.5" y="309" width="1.3" height="15.0" fill="rgb(221,151,21)" rx="2" ry="2" />
<text  x="273.52" y="319.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::clear (9 samples, 0.02%)</title><rect x="810.0" y="309" width="0.2" height="15.0" fill="rgb(230,57,54)" rx="2" ry="2" />
<text  x="813.01" y="319.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;query::result&gt;::operator= (10 samples, 0.02%)</title><rect x="75.9" y="453" width="0.2" height="15.0" fill="rgb(241,150,32)" rx="2" ry="2" />
<text  x="78.86" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::~disable_abort_on_alloc_failure_temporarily (6 samples, 0.01%)</title><rect x="221.2" y="181" width="0.2" height="15.0" fill="rgb(221,229,8)" rx="2" ry="2" />
<text  x="224.24" y="191.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;tracking_allocator&lt;mutation_fragment&gt; &gt;::_S_destroy&lt;tracking_allocator&lt;mutation_fragment&gt;, mutation_fragment&gt; (8 samples, 0.02%)</title><rect x="121.6" y="293" width="0.1" height="15.0" fill="rgb(218,108,51)" rx="2" ry="2" />
<text  x="124.55" y="303.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (6 samples, 0.01%)</title><rect x="623.3" y="437" width="0.2" height="15.0" fill="rgb(251,228,7)" rx="2" ry="2" />
<text  x="626.32" y="447.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (26 samples, 0.05%)</title><rect x="194.8" y="117" width="0.6" height="15.0" fill="rgb(250,216,43)" rx="2" ry="2" />
<text  x="197.77" y="127.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::operator (18 samples, 0.04%)</title><rect x="862.0" y="485" width="0.4" height="15.0" fill="rgb(233,117,48)" rx="2" ry="2" />
<text  x="864.99" y="495.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;dht::token, std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt;, std::allocator&lt;std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;dht::token&gt;, std::hash&lt;dht::token&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (19 samples, 0.04%)</title><rect x="1095.4" y="293" width="0.4" height="15.0" fill="rgb(213,201,20)" rx="2" ry="2" />
<text  x="1098.35" y="303.5" ></text>
</g>
<g >
<title>service::storage_proxy::send_to_live_endpoints (7 samples, 0.01%)</title><rect x="1142.2" y="261" width="0.1" height="15.0" fill="rgb(251,81,43)" rx="2" ry="2" />
<text  x="1145.16" y="271.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::execute (6 samples, 0.01%)</title><rect x="688.7" y="437" width="0.1" height="15.0" fill="rgb(231,194,20)" rx="2" ry="2" />
<text  x="691.69" y="447.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::abstract_read_executor&gt;::~shared_ptr (6 samples, 0.01%)</title><rect x="707.7" y="485" width="0.1" height="15.0" fill="rgb(218,137,7)" rx="2" ry="2" />
<text  x="710.67" y="495.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::~guard (6 samples, 0.01%)</title><rect x="142.9" y="261" width="0.2" height="15.0" fill="rgb(215,116,34)" rx="2" ry="2" />
<text  x="145.94" y="271.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::take_value (7 samples, 0.01%)</title><rect x="267.4" y="341" width="0.2" height="15.0" fill="rgb(248,194,14)" rx="2" ry="2" />
<text  x="270.45" y="351.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (34 samples, 0.07%)</title><rect x="708.0" y="501" width="0.8" height="15.0" fill="rgb(216,201,16)" rx="2" ry="2" />
<text  x="711.01" y="511.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (15 samples, 0.03%)</title><rect x="1028.6" y="165" width="0.4" height="15.0" fill="rgb(217,218,28)" rx="2" ry="2" />
<text  x="1031.64" y="175.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::emplace_back&lt;mutation_fragment&gt; (14 samples, 0.03%)</title><rect x="254.4" y="277" width="0.3" height="15.0" fill="rgb(251,121,36)" rx="2" ry="2" />
<text  x="257.37" y="287.5" ></text>
</g>
<g >
<title>partition_builder::accept_row_cell (5 samples, 0.01%)</title><rect x="1141.5" y="229" width="0.2" height="15.0" fill="rgb(247,28,25)" rx="2" ry="2" />
<text  x="1144.53" y="239.5" ></text>
</g>
<g >
<title>operator new (72 samples, 0.15%)</title><rect x="275.3" y="277" width="1.8" height="15.0" fill="rgb(230,37,7)" rx="2" ry="2" />
<text  x="278.34" y="287.5" ></text>
</g>
<g >
<title>seastar::future&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry_ptr&gt;::then_impl&lt;utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (5 samples, 0.01%)</title><rect x="733.6" y="389" width="0.1" height="15.0" fill="rgb(253,109,35)" rx="2" ry="2" />
<text  x="736.61" y="399.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::push_back (248 samples, 0.51%)</title><rect x="1029.2" y="197" width="6.1" height="15.0" fill="rgb(232,12,23)" rx="2" ry="2" />
<text  x="1032.25" y="207.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (90 samples, 0.19%)</title><rect x="989.7" y="309" width="2.2" height="15.0" fill="rgb(210,141,11)" rx="2" ry="2" />
<text  x="992.74" y="319.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::got_cl (5 samples, 0.01%)</title><rect x="691.5" y="469" width="0.1" height="15.0" fill="rgb(232,192,25)" rx="2" ry="2" />
<text  x="694.50" y="479.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (78 samples, 0.16%)</title><rect x="1101.7" y="357" width="1.9" height="15.0" fill="rgb(206,137,40)" rx="2" ry="2" />
<text  x="1104.66" y="367.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::untyped_constant&gt; (6 samples, 0.01%)</title><rect x="18.5" y="277" width="0.2" height="15.0" fill="rgb(232,146,27)" rx="2" ry="2" />
<text  x="21.52" y="287.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::alloc (177 samples, 0.37%)</title><rect x="185.6" y="69" width="4.3" height="15.0" fill="rgb(231,211,30)" rx="2" ry="2" />
<text  x="188.61" y="79.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;query::result&gt;::dispose (105 samples, 0.22%)</title><rect x="35.4" y="453" width="2.5" height="15.0" fill="rgb(246,97,4)" rx="2" ry="2" />
<text  x="38.38" y="463.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;gms::inet_address, std::pair&lt;gms::inet_address const, table::cache_hit_rate&gt;, std::allocator&lt;std::pair&lt;gms::inet_address const, table::cache_hit_rate&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;gms::inet_address&gt;, std::hash&lt;gms::inet_address&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::operator[] (5 samples, 0.01%)</title><rect x="704.3" y="453" width="0.1" height="15.0" fill="rgb(221,115,32)" rx="2" ry="2" />
<text  x="707.26" y="463.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (33 samples, 0.07%)</title><rect x="680.5" y="437" width="0.8" height="15.0" fill="rgb(230,183,54)" rx="2" ry="2" />
<text  x="683.53" y="447.5" ></text>
</g>
<g >
<title>std::hash&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::operator (7 samples, 0.01%)</title><rect x="823.2" y="293" width="0.2" height="15.0" fill="rgb(220,124,0)" rx="2" ry="2" />
<text  x="826.24" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (22 samples, 0.05%)</title><rect x="943.9" y="357" width="0.6" height="15.0" fill="rgb(214,209,12)" rx="2" ry="2" />
<text  x="946.93" y="367.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (8 samples, 0.02%)</title><rect x="821.3" y="261" width="0.2" height="15.0" fill="rgb(229,200,51)" rx="2" ry="2" />
<text  x="824.34" y="271.5" ></text>
</g>
<g >
<title>__tls_init (5 samples, 0.01%)</title><rect x="485.7" y="293" width="0.1" height="15.0" fill="rgb(243,62,34)" rx="2" ry="2" />
<text  x="488.71" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_move_assign (21 samples, 0.04%)</title><rect x="435.8" y="261" width="0.6" height="15.0" fill="rgb(253,150,24)" rx="2" ry="2" />
<text  x="438.85" y="271.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;,  (197 samples, 0.41%)</title><rect x="722.7" y="405" width="4.8" height="15.0" fill="rgb(217,40,37)" rx="2" ry="2" />
<text  x="725.72" y="415.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;mutation_fragment_merger&lt;mutation_reader_merger&gt;::operator (151 samples, 0.31%)</title><rect x="261.2" y="341" width="3.7" height="15.0" fill="rgb(236,162,48)" rx="2" ry="2" />
<text  x="264.19" y="351.5" ></text>
</g>
<g >
<title>managed_bytes::external_memory_usage (5 samples, 0.01%)</title><rect x="206.6" y="165" width="0.1" height="15.0" fill="rgb(224,183,27)" rx="2" ry="2" />
<text  x="209.61" y="175.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (134 samples, 0.28%)</title><rect x="922.6" y="341" width="3.3" height="15.0" fill="rgb(254,50,51)" rx="2" ry="2" />
<text  x="925.64" y="351.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (71 samples, 0.15%)</title><rect x="148.1" y="197" width="1.8" height="15.0" fill="rgb(254,165,22)" rx="2" ry="2" />
<text  x="151.13" y="207.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;, service::storage_proxy::query_result_local (128 samples, 0.26%)</title><rect x="634.8" y="501" width="3.1" height="15.0" fill="rgb(210,86,53)" rx="2" ry="2" />
<text  x="637.79" y="511.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (22 samples, 0.05%)</title><rect x="283.6" y="405" width="0.6" height="15.0" fill="rgb(209,60,10)" rx="2" ry="2" />
<text  x="286.62" y="415.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (16 samples, 0.03%)</title><rect x="386.1" y="197" width="0.4" height="15.0" fill="rgb(225,139,19)" rx="2" ry="2" />
<text  x="389.11" y="207.5" ></text>
</g>
<g >
<title>nonwrapping_interval&lt;clustering_key_prefix&gt;::nonwrapping_interval (77 samples, 0.16%)</title><rect x="1113.2" y="373" width="1.9" height="15.0" fill="rgb(230,137,2)" rx="2" ry="2" />
<text  x="1116.23" y="383.5" ></text>
</g>
<g >
<title>cql3::expr::prepare_term (10 samples, 0.02%)</title><rect x="20.2" y="405" width="0.2" height="15.0" fill="rgb(252,138,1)" rx="2" ry="2" />
<text  x="23.18" y="415.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;service::query_state, false&gt;::make&lt;service::client_state&amp;, service_permit&gt; (55 samples, 0.11%)</title><rect x="842.3" y="421" width="1.4" height="15.0" fill="rgb(210,71,32)" rx="2" ry="2" />
<text  x="845.34" y="431.5" ></text>
</g>
<g >
<title>seastar::internal::coroutine_traits_base&lt;service::storage_proxy_coordinator_query_result&gt;::promise_type::run_and_dispose (13 samples, 0.03%)</title><rect x="23.4" y="517" width="0.3" height="15.0" fill="rgb(225,149,40)" rx="2" ry="2" />
<text  x="26.37" y="527.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (6 samples, 0.01%)</title><rect x="509.8" y="293" width="0.1" height="15.0" fill="rgb(214,193,23)" rx="2" ry="2" />
<text  x="512.80" y="303.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::abstract_read_executor&gt;::~shared_ptr (16 samples, 0.03%)</title><rect x="982.2" y="357" width="0.4" height="15.0" fill="rgb(250,158,3)" rx="2" ry="2" />
<text  x="985.19" y="367.5" ></text>
</g>
<g >
<title>utils::tuple_hash::operator (54 samples, 0.11%)</title><rect x="758.0" y="341" width="1.3" height="15.0" fill="rgb(219,212,11)" rx="2" ry="2" />
<text  x="760.96" y="351.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::set_callback (12 samples, 0.02%)</title><rect x="709.8" y="501" width="0.3" height="15.0" fill="rgb(238,67,47)" rx="2" ry="2" />
<text  x="712.79" y="511.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::get0 (17 samples, 0.04%)</title><rect x="601.9" y="437" width="0.4" height="15.0" fill="rgb(247,21,28)" rx="2" ry="2" />
<text  x="604.91" y="447.5" ></text>
</g>
<g >
<title>std::_Optional_base_impl&lt;query::querier&lt; (10 samples, 0.02%)</title><rect x="609.7" y="437" width="0.2" height="15.0" fill="rgb(221,159,46)" rx="2" ry="2" />
<text  x="612.71" y="447.5" ></text>
</g>
<g >
<title>seastar::promise&lt;void&gt;::promise (21 samples, 0.04%)</title><rect x="70.6" y="405" width="0.6" height="15.0" fill="rgb(217,194,30)" rx="2" ry="2" />
<text  x="73.65" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (12 samples, 0.02%)</title><rect x="197.3" y="101" width="0.2" height="15.0" fill="rgb(217,224,19)" rx="2" ry="2" />
<text  x="200.25" y="111.5" ></text>
</g>
<g >
<title>database::find_column_family (28 samples, 0.06%)</title><rect x="971.5" y="357" width="0.7" height="15.0" fill="rgb(208,205,53)" rx="2" ry="2" />
<text  x="974.55" y="367.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;mutation_reader_merger::operator (21 samples, 0.04%)</title><rect x="259.9" y="325" width="0.5" height="15.0" fill="rgb(221,221,50)" rx="2" ry="2" />
<text  x="262.90" y="335.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::emplace_back&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; const&amp;&gt; (12 samples, 0.02%)</title><rect x="765.9" y="357" width="0.3" height="15.0" fill="rgb(211,168,5)" rx="2" ry="2" />
<text  x="768.88" y="367.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::operator (45 samples, 0.09%)</title><rect x="796.0" y="133" width="1.1" height="15.0" fill="rgb(222,25,3)" rx="2" ry="2" />
<text  x="798.98" y="143.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (21 samples, 0.04%)</title><rect x="629.2" y="485" width="0.5" height="15.0" fill="rgb(208,193,44)" rx="2" ry="2" />
<text  x="632.17" y="495.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (216 samples, 0.45%)</title><rect x="393.2" y="213" width="5.3" height="15.0" fill="rgb(238,217,2)" rx="2" ry="2" />
<text  x="396.25" y="223.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (255 samples, 0.53%)</title><rect x="14.9" y="485" width="6.2" height="15.0" fill="rgb(213,165,30)" rx="2" ry="2" />
<text  x="17.90" y="495.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (19 samples, 0.04%)</title><rect x="480.8" y="181" width="0.5" height="15.0" fill="rgb(240,48,5)" rx="2" ry="2" />
<text  x="483.84" y="191.5" ></text>
</g>
<g >
<title>query_result_builder::consume (7 samples, 0.01%)</title><rect x="683.6" y="293" width="0.1" height="15.0" fill="rgb(224,192,2)" rx="2" ry="2" />
<text  x="686.56" y="303.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_token (17 samples, 0.04%)</title><rect x="948.7" y="357" width="0.4" height="15.0" fill="rgb(231,48,34)" rx="2" ry="2" />
<text  x="951.65" y="367.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;tracking_allocator&lt;mutation_fragment&gt; &gt;::_S_destroy&lt;tracking_allocator&lt;mutation_fragment&gt;, mutation_fragment&gt; (22 samples, 0.05%)</title><rect x="130.6" y="229" width="0.5" height="15.0" fill="rgb(227,141,24)" rx="2" ry="2" />
<text  x="133.56" y="239.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (11 samples, 0.02%)</title><rect x="810.0" y="325" width="0.2" height="15.0" fill="rgb(214,177,45)" rx="2" ry="2" />
<text  x="812.97" y="335.5" ></text>
</g>
<g >
<title>operator new (54 samples, 0.11%)</title><rect x="437.3" y="245" width="1.3" height="15.0" fill="rgb(213,132,48)" rx="2" ry="2" />
<text  x="440.29" y="255.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_allocate_buckets (40 samples, 0.08%)</title><rect x="1158.7" y="405" width="1.0" height="15.0" fill="rgb(247,210,48)" rx="2" ry="2" />
<text  x="1161.73" y="415.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (12 samples, 0.02%)</title><rect x="208.4" y="165" width="0.3" height="15.0" fill="rgb(214,105,33)" rx="2" ry="2" />
<text  x="211.43" y="175.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (29 samples, 0.06%)</title><rect x="532.2" y="309" width="0.7" height="15.0" fill="rgb(252,98,22)" rx="2" ry="2" />
<text  x="535.23" y="319.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (12 samples, 0.02%)</title><rect x="1035.9" y="197" width="0.3" height="15.0" fill="rgb(222,45,30)" rx="2" ry="2" />
<text  x="1038.87" y="207.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (5 samples, 0.01%)</title><rect x="814.1" y="261" width="0.1" height="15.0" fill="rgb(207,101,38)" rx="2" ry="2" />
<text  x="817.06" y="271.5" ></text>
</g>
<g >
<title>_ZN7seastar12continuationINS_8internal22promise_base_with_typeIvEEZNS_6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE14discard_resultEvEUlDpOT_E_ZNSA_14then_impl_nrvoISE_NS4_IvEEEET0_OT_EUlOS3_RSE_ONS_12future_stateIS9_EEE_S9_E15run_and_disposeEv (469 samples, 0.97%)</title><rect x="30.2" y="501" width="11.4" height="15.0" fill="rgb(243,142,2)" rx="2" ry="2" />
<text  x="33.22" y="511.5" ></text>
</g>
<g >
<title>compound_type&lt; (86 samples, 0.18%)</title><rect x="917.1" y="357" width="2.1" height="15.0" fill="rgb(224,215,5)" rx="2" ry="2" />
<text  x="920.13" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value_view, std::allocator&lt;cql3::raw_value_view&gt; &gt;::_M_realloc_insert&lt;cql3::raw_value_view&gt; (100 samples, 0.21%)</title><rect x="849.5" y="373" width="2.4" height="15.0" fill="rgb(250,110,8)" rx="2" ry="2" />
<text  x="852.50" y="383.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (12 samples, 0.02%)</title><rect x="809.6" y="293" width="0.3" height="15.0" fill="rgb(241,9,41)" rx="2" ry="2" />
<text  x="812.58" y="303.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::partition_slice const, std::default_delete&lt;query::partition_slice const&gt; &gt;::~unique_ptr (132 samples, 0.27%)</title><rect x="587.6" y="421" width="3.3" height="15.0" fill="rgb(238,179,10)" rx="2" ry="2" />
<text  x="590.64" y="431.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_in_thread&lt;sstables::sstable_writer, flat_mutation_reader::no_filter&gt; (14 samples, 0.03%)</title><rect x="21.4" y="469" width="0.4" height="15.0" fill="rgb(233,215,16)" rx="2" ry="2" />
<text  x="24.45" y="479.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_Optional_payload_base (8 samples, 0.02%)</title><rect x="1077.1" y="325" width="0.2" height="15.0" fill="rgb(231,16,26)" rx="2" ry="2" />
<text  x="1080.11" y="335.5" ></text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt;&amp;&gt; (16 samples, 0.03%)</title><rect x="824.9" y="309" width="0.4" height="15.0" fill="rgb(239,195,14)" rx="2" ry="2" />
<text  x="827.94" y="319.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (10 samples, 0.02%)</title><rect x="1037.2" y="213" width="0.3" height="15.0" fill="rgb(215,12,49)" rx="2" ry="2" />
<text  x="1040.24" y="223.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (28 samples, 0.06%)</title><rect x="623.7" y="469" width="0.6" height="15.0" fill="rgb(245,66,11)" rx="2" ry="2" />
<text  x="626.66" y="479.5" ></text>
</g>
<g >
<title>absl::hash_internal::HashState::combine_contiguous (19 samples, 0.04%)</title><rect x="1065.6" y="261" width="0.4" height="15.0" fill="rgb(251,30,32)" rx="2" ry="2" />
<text  x="1068.59" y="271.5" ></text>
</g>
<g >
<title>auth::resource::resource (50 samples, 0.10%)</title><rect x="765.0" y="373" width="1.2" height="15.0" fill="rgb(245,105,15)" rx="2" ry="2" />
<text  x="767.95" y="383.5" ></text>
</g>
<g >
<title>db::block_for (6 samples, 0.01%)</title><rect x="1066.6" y="341" width="0.1" height="15.0" fill="rgb(246,123,48)" rx="2" ry="2" />
<text  x="1069.56" y="351.5" ></text>
</g>
<g >
<title>std::type_info::operator== (6 samples, 0.01%)</title><rect x="698.9" y="437" width="0.1" height="15.0" fill="rgb(252,131,11)" rx="2" ry="2" />
<text  x="701.88" y="447.5" ></text>
</g>
<g >
<title>db::block_for (5 samples, 0.01%)</title><rect x="1067.1" y="325" width="0.1" height="15.0" fill="rgb(240,35,14)" rx="2" ry="2" />
<text  x="1070.12" y="335.5" ></text>
</g>
<g >
<title>operator new (27 samples, 0.06%)</title><rect x="291.0" y="293" width="0.7" height="15.0" fill="rgb(215,131,54)" rx="2" ry="2" />
<text  x="294.00" y="303.5" ></text>
</g>
<g >
<title>operator new (11 samples, 0.02%)</title><rect x="1127.2" y="421" width="0.3" height="15.0" fill="rgb(210,0,50)" rx="2" ry="2" />
<text  x="1130.21" y="431.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_construct&lt;interval_bound&lt;dht::ring_position&gt; const&amp;&gt; (27 samples, 0.06%)</title><rect x="945.0" y="357" width="0.7" height="15.0" fill="rgb(225,27,19)" rx="2" ry="2" />
<text  x="948.00" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (27 samples, 0.06%)</title><rect x="487.5" y="277" width="0.7" height="15.0" fill="rgb(216,61,5)" rx="2" ry="2" />
<text  x="490.53" y="287.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;service::digest_read_result&gt;::set_value&lt;service::digest_read_result&gt; (20 samples, 0.04%)</title><rect x="701.4" y="421" width="0.5" height="15.0" fill="rgb(229,68,41)" rx="2" ry="2" />
<text  x="704.41" y="431.5" ></text>
</g>
<g >
<title>partition_snapshot::version_count (8 samples, 0.02%)</title><rect x="210.3" y="149" width="0.2" height="15.0" fill="rgb(227,10,11)" rx="2" ry="2" />
<text  x="213.28" y="159.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (25 samples, 0.05%)</title><rect x="974.3" y="325" width="0.6" height="15.0" fill="rgb(215,167,34)" rx="2" ry="2" />
<text  x="977.27" y="335.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (6 samples, 0.01%)</title><rect x="18.8" y="261" width="0.1" height="15.0" fill="rgb(228,94,42)" rx="2" ry="2" />
<text  x="21.79" y="271.5" ></text>
</g>
<g >
<title>operator new (27 samples, 0.06%)</title><rect x="513.1" y="277" width="0.6" height="15.0" fill="rgb(234,117,30)" rx="2" ry="2" />
<text  x="516.06" y="287.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (16 samples, 0.03%)</title><rect x="62.4" y="421" width="0.4" height="15.0" fill="rgb(209,46,37)" rx="2" ry="2" />
<text  x="65.39" y="431.5" ></text>
</g>
<g >
<title>operator delete (43 samples, 0.09%)</title><rect x="684.7" y="485" width="1.1" height="15.0" fill="rgb(235,156,51)" rx="2" ry="2" />
<text  x="687.72" y="495.5" ></text>
</g>
<g >
<title>partition_entry::read (68 samples, 0.14%)</title><rect x="512.1" y="309" width="1.6" height="15.0" fill="rgb(254,93,29)" rx="2" ry="2" />
<text  x="515.09" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value_view, std::allocator&lt;cql3::raw_value_view&gt; &gt;::_M_check_len (11 samples, 0.02%)</title><rect x="851.7" y="357" width="0.2" height="15.0" fill="rgb(227,85,15)" rx="2" ry="2" />
<text  x="854.66" y="367.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::move_it (7 samples, 0.01%)</title><rect x="664.0" y="469" width="0.1" height="15.0" fill="rgb(209,171,0)" rx="2" ry="2" />
<text  x="666.97" y="479.5" ></text>
</g>
<g >
<title>__tls_init (5 samples, 0.01%)</title><rect x="144.4" y="229" width="0.1" height="15.0" fill="rgb(214,198,54)" rx="2" ry="2" />
<text  x="147.40" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;flat_mutation_reader&gt;::allocate (29 samples, 0.06%)</title><rect x="428.3" y="341" width="0.7" height="15.0" fill="rgb(230,134,20)" rx="2" ry="2" />
<text  x="431.32" y="351.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (5 samples, 0.01%)</title><rect x="840.1" y="405" width="0.1" height="15.0" fill="rgb(246,215,18)" rx="2" ry="2" />
<text  x="843.09" y="415.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;::operator== (14 samples, 0.03%)</title><rect x="741.2" y="293" width="0.3" height="15.0" fill="rgb(206,159,4)" rx="2" ry="2" />
<text  x="744.18" y="303.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (7 samples, 0.01%)</title><rect x="1033.9" y="117" width="0.2" height="15.0" fill="rgb(226,214,34)" rx="2" ry="2" />
<text  x="1036.92" y="127.5" ></text>
</g>
<g >
<title>global_schema_ptr::global_schema_ptr (62 samples, 0.13%)</title><rect x="1009.8" y="277" width="1.5" height="15.0" fill="rgb(238,80,19)" rx="2" ry="2" />
<text  x="1012.81" y="287.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::execute (10 samples, 0.02%)</title><rect x="23.1" y="517" width="0.2" height="15.0" fill="rgb(231,154,9)" rx="2" ry="2" />
<text  x="26.10" y="527.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (7 samples, 0.01%)</title><rect x="314.0" y="165" width="0.2" height="15.0" fill="rgb(216,145,54)" rx="2" ry="2" />
<text  x="316.99" y="175.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (14 samples, 0.03%)</title><rect x="821.8" y="277" width="0.3" height="15.0" fill="rgb(250,227,14)" rx="2" ry="2" />
<text  x="824.80" y="287.5" ></text>
</g>
<g >
<title>std::optional&lt;clustering_key_prefix&gt;::operator=&lt;clustering_key_prefix&amp;&gt; (26 samples, 0.05%)</title><rect x="385.9" y="213" width="0.6" height="15.0" fill="rgb(214,49,22)" rx="2" ry="2" />
<text  x="388.87" y="223.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (20 samples, 0.04%)</title><rect x="1155.5" y="421" width="0.5" height="15.0" fill="rgb(245,125,47)" rx="2" ry="2" />
<text  x="1158.54" y="431.5" ></text>
</g>
<g >
<title>operator delete (16 samples, 0.03%)</title><rect x="660.1" y="437" width="0.4" height="15.0" fill="rgb(242,108,43)" rx="2" ry="2" />
<text  x="663.15" y="447.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;enum_set&lt;super_enum&lt;auth::permission,  (7 samples, 0.01%)</title><rect x="807.2" y="309" width="0.2" height="15.0" fill="rgb(224,203,14)" rx="2" ry="2" />
<text  x="810.21" y="319.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::read_next (24 samples, 0.05%)</title><rect x="247.1" y="261" width="0.6" height="15.0" fill="rgb(219,15,14)" rx="2" ry="2" />
<text  x="250.09" y="271.5" ></text>
</g>
<g >
<title>std::hash&lt;auth::resource&gt;::operator (122 samples, 0.25%)</title><rect x="797.1" y="149" width="3.0" height="15.0" fill="rgb(231,215,35)" rx="2" ry="2" />
<text  x="800.13" y="159.5" ></text>
</g>
<g >
<title>memtable_entry::snapshot (103 samples, 0.21%)</title><rect x="511.5" y="325" width="2.5" height="15.0" fill="rgb(243,56,54)" rx="2" ry="2" />
<text  x="514.50" y="335.5" ></text>
</g>
<g >
<title>service::never_speculating_read_executor::never_speculating_read_executor (209 samples, 0.43%)</title><rect x="1071.8" y="325" width="5.1" height="15.0" fill="rgb(205,77,41)" rx="2" ry="2" />
<text  x="1074.82" y="335.5" ></text>
</g>
<g >
<title>bytes_view_hasher::update (12 samples, 0.02%)</title><rect x="742.7" y="277" width="0.3" height="15.0" fill="rgb(253,152,12)" rx="2" ry="2" />
<text  x="745.72" y="287.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::get0 (15 samples, 0.03%)</title><rect x="698.2" y="453" width="0.4" height="15.0" fill="rgb(221,161,51)" rx="2" ry="2" />
<text  x="701.24" y="463.5" ></text>
</g>
<g >
<title>reader_permit::mark_unused (5 samples, 0.01%)</title><rect x="63.4" y="453" width="0.1" height="15.0" fill="rgb(219,91,1)" rx="2" ry="2" />
<text  x="66.37" y="463.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (11 samples, 0.02%)</title><rect x="481.3" y="213" width="0.3" height="15.0" fill="rgb(236,119,52)" rx="2" ry="2" />
<text  x="484.35" y="223.5" ></text>
</g>
<g >
<title>managed_bytes::external_memory_usage (5 samples, 0.01%)</title><rect x="199.9" y="149" width="0.1" height="15.0" fill="rgb(214,137,10)" rx="2" ry="2" />
<text  x="202.88" y="159.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::at (63 samples, 0.13%)</title><rect x="1060.8" y="325" width="1.5" height="15.0" fill="rgb(223,217,34)" rx="2" ry="2" />
<text  x="1063.76" y="335.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::digest_read_result&gt;::move_it (6 samples, 0.01%)</title><rect x="686.8" y="469" width="0.2" height="15.0" fill="rgb(252,49,3)" rx="2" ry="2" />
<text  x="689.82" y="479.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::close (14 samples, 0.03%)</title><rect x="569.3" y="341" width="0.3" height="15.0" fill="rgb(239,136,35)" rx="2" ry="2" />
<text  x="572.27" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (80 samples, 0.17%)</title><rect x="1069.7" y="309" width="1.9" height="15.0" fill="rgb(233,83,10)" rx="2" ry="2" />
<text  x="1072.68" y="319.5" ></text>
</g>
<g >
<title>seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::expand (84 samples, 0.17%)</title><rect x="150.0" y="213" width="2.0" height="15.0" fill="rgb(239,149,44)" rx="2" ry="2" />
<text  x="152.95" y="223.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::_M_create_storage (42 samples, 0.09%)</title><rect x="941.0" y="389" width="1.1" height="15.0" fill="rgb(214,60,3)" rx="2" ry="2" />
<text  x="944.03" y="399.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (142 samples, 0.29%)</title><rect x="401.5" y="261" width="3.4" height="15.0" fill="rgb(231,71,19)" rx="2" ry="2" />
<text  x="404.46" y="271.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;dht::token, std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt;, std::allocator&lt;std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;dht::token&gt;, std::hash&lt;dht::token&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (154 samples, 0.32%)</title><rect x="1090.9" y="261" width="3.8" height="15.0" fill="rgb(215,81,26)" rx="2" ry="2" />
<text  x="1093.92" y="271.5" ></text>
</g>
<g >
<title>memtable::apply (33 samples, 0.07%)</title><rect x="1141.1" y="261" width="0.8" height="15.0" fill="rgb(234,30,6)" rx="2" ry="2" />
<text  x="1144.07" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (8 samples, 0.02%)</title><rect x="30.9" y="469" width="0.2" height="15.0" fill="rgb(241,63,27)" rx="2" ry="2" />
<text  x="33.95" y="479.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_read_executor (1,815 samples, 3.75%)</title><rect x="1057.2" y="357" width="44.2" height="15.0" fill="rgb(228,30,32)" rx="2" ry="2" />
<text  x="1060.18" y="367.5" >serv..</text>
</g>
<g >
<title>utils::approx_exponential_histogram&lt;512ul, 33554432ul, 4ul&gt;::add (6 samples, 0.01%)</title><rect x="598.4" y="421" width="0.1" height="15.0" fill="rgb(207,100,1)" rx="2" ry="2" />
<text  x="601.36" y="431.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (6 samples, 0.01%)</title><rect x="17.1" y="325" width="0.2" height="15.0" fill="rgb(247,81,32)" rx="2" ry="2" />
<text  x="20.14" y="335.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (5 samples, 0.01%)</title><rect x="654.3" y="485" width="0.1" height="15.0" fill="rgb(208,125,47)" rx="2" ry="2" />
<text  x="657.25" y="495.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (5 samples, 0.01%)</title><rect x="165.3" y="181" width="0.1" height="15.0" fill="rgb(224,148,7)" rx="2" ry="2" />
<text  x="168.30" y="191.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::_Copy_ctor_base (11 samples, 0.02%)</title><rect x="313.7" y="165" width="0.3" height="15.0" fill="rgb(241,105,26)" rx="2" ry="2" />
<text  x="316.73" y="175.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, enum_set&lt;super_enum&lt;auth::permission,  (68 samples, 0.14%)</title><rect x="787.6" y="181" width="1.7" height="15.0" fill="rgb(243,83,1)" rx="2" ry="2" />
<text  x="790.63" y="191.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (79 samples, 0.16%)</title><rect x="779.7" y="261" width="1.9" height="15.0" fill="rgb(214,143,48)" rx="2" ry="2" />
<text  x="782.69" y="271.5" ></text>
</g>
<g >
<title>std::__make_heap&lt;__gnu_cxx::__normal_iterator&lt;boost::iterator_range&lt;boost::intrusive::tree_iterator&lt;boost::intrusive::mhtraits&lt;range_tombstone_entry, boost::intrusive::set_member_hook&lt;boost::intrusive::link_mode&lt; (9 samples, 0.02%)</title><rect x="238.8" y="213" width="0.2" height="15.0" fill="rgb(207,97,7)" rx="2" ry="2" />
<text  x="241.78" y="223.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (13 samples, 0.03%)</title><rect x="17.0" y="341" width="0.3" height="15.0" fill="rgb(242,166,5)" rx="2" ry="2" />
<text  x="19.97" y="351.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (31 samples, 0.06%)</title><rect x="724.0" y="325" width="0.8" height="15.0" fill="rgb(217,147,54)" rx="2" ry="2" />
<text  x="727.04" y="335.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (11 samples, 0.02%)</title><rect x="412.0" y="373" width="0.2" height="15.0" fill="rgb(221,151,16)" rx="2" ry="2" />
<text  x="414.98" y="383.5" ></text>
</g>
<g >
<title>std::construct_at&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::entry&gt; (93 samples, 0.19%)</title><rect x="71.3" y="405" width="2.2" height="15.0" fill="rgb(246,186,50)" rx="2" ry="2" />
<text  x="74.26" y="415.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::normalColumnOperation (45 samples, 0.09%)</title><rect x="17.9" y="325" width="1.1" height="15.0" fill="rgb(244,152,40)" rx="2" ry="2" />
<text  x="20.94" y="335.5" ></text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt;&amp;&gt; (30 samples, 0.06%)</title><rect x="837.8" y="373" width="0.7" height="15.0" fill="rgb(229,110,46)" rx="2" ry="2" />
<text  x="840.76" y="383.5" ></text>
</g>
<g >
<title>__tls_init (10 samples, 0.02%)</title><rect x="143.4" y="245" width="0.3" height="15.0" fill="rgb(249,32,14)" rx="2" ry="2" />
<text  x="146.42" y="255.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::then_impl&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (570 samples, 1.18%)</title><rect x="266.3" y="357" width="13.8" height="15.0" fill="rgb(228,29,38)" rx="2" ry="2" />
<text  x="269.25" y="367.5" ></text>
</g>
<g >
<title>auth::data_resource_view::keyspace (18 samples, 0.04%)</title><rect x="798.0" y="117" width="0.5" height="15.0" fill="rgb(217,97,5)" rx="2" ry="2" />
<text  x="801.03" y="127.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (8 samples, 0.02%)</title><rect x="91.3" y="437" width="0.2" height="15.0" fill="rgb(210,29,2)" rx="2" ry="2" />
<text  x="94.30" y="447.5" ></text>
</g>
<g >
<title>cql3::constants::setter::execute (16 samples, 0.03%)</title><rect x="863.0" y="325" width="0.4" height="15.0" fill="rgb(212,220,47)" rx="2" ry="2" />
<text  x="865.97" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (64 samples, 0.13%)</title><rect x="1128.9" y="389" width="1.5" height="15.0" fill="rgb(242,224,46)" rx="2" ry="2" />
<text  x="1131.87" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (17 samples, 0.04%)</title><rect x="1000.5" y="229" width="0.4" height="15.0" fill="rgb(254,213,39)" rx="2" ry="2" />
<text  x="1003.48" y="239.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (22 samples, 0.05%)</title><rect x="404.4" y="229" width="0.5" height="15.0" fill="rgb(214,143,8)" rx="2" ry="2" />
<text  x="407.38" y="239.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::deallocate (8 samples, 0.02%)</title><rect x="505.6" y="229" width="0.2" height="15.0" fill="rgb(227,141,22)" rx="2" ry="2" />
<text  x="508.58" y="239.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (10 samples, 0.02%)</title><rect x="686.5" y="469" width="0.2" height="15.0" fill="rgb(238,176,21)" rx="2" ry="2" />
<text  x="689.45" y="479.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (9 samples, 0.02%)</title><rect x="295.4" y="293" width="0.2" height="15.0" fill="rgb(222,160,23)" rx="2" ry="2" />
<text  x="298.39" y="303.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (10 samples, 0.02%)</title><rect x="1127.6" y="405" width="0.2" height="15.0" fill="rgb(248,105,35)" rx="2" ry="2" />
<text  x="1130.57" y="415.5" ></text>
</g>
<g >
<title>mutation_querier::prepare_writers (45 samples, 0.09%)</title><rect x="326.7" y="181" width="1.1" height="15.0" fill="rgb(235,139,8)" rx="2" ry="2" />
<text  x="329.68" y="191.5" ></text>
</g>
<g >
<title>partition_snapshot::get_change_mark (38 samples, 0.08%)</title><rect x="209.7" y="165" width="0.9" height="15.0" fill="rgb(214,102,27)" rx="2" ry="2" />
<text  x="212.65" y="175.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::has_slice_or_needs_filtering (20 samples, 0.04%)</title><rect x="646.0" y="421" width="0.5" height="15.0" fill="rgb(227,179,40)" rx="2" ry="2" />
<text  x="649.00" y="431.5" ></text>
</g>
<g >
<title>dht::shard_of (17 samples, 0.04%)</title><rect x="1002.8" y="293" width="0.5" height="15.0" fill="rgb(252,209,28)" rx="2" ry="2" />
<text  x="1005.84" y="303.5" ></text>
</g>
<g >
<title>bytes_ostream::linearize (14 samples, 0.03%)</title><rect x="592.0" y="405" width="0.3" height="15.0" fill="rgb(245,73,31)" rx="2" ry="2" />
<text  x="595.00" y="415.5" ></text>
</g>
<g >
<title>reader_permit::impl::~impl (58 samples, 0.12%)</title><rect x="61.4" y="437" width="1.4" height="15.0" fill="rgb(240,106,40)" rx="2" ry="2" />
<text  x="64.39" y="447.5" ></text>
</g>
<g >
<title>cql3::statements::prepared_statement::checked_weak_from_this (47 samples, 0.10%)</title><rect x="721.2" y="421" width="1.2" height="15.0" fill="rgb(239,178,19)" rx="2" ry="2" />
<text  x="724.23" y="431.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (7 samples, 0.01%)</title><rect x="1034.4" y="165" width="0.2" height="15.0" fill="rgb(226,220,49)" rx="2" ry="2" />
<text  x="1037.39" y="175.5" ></text>
</g>
<g >
<title>seastar::weakly_referencable&lt;cql3::statements::prepared_statement&gt;::weak_from_this (8 samples, 0.02%)</title><rect x="722.2" y="405" width="0.2" height="15.0" fill="rgb(217,144,27)" rx="2" ry="2" />
<text  x="725.18" y="415.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (5 samples, 0.01%)</title><rect x="17.2" y="261" width="0.1" height="15.0" fill="rgb(222,136,11)" rx="2" ry="2" />
<text  x="20.16" y="271.5" ></text>
</g>
<g >
<title>operator new (76 samples, 0.16%)</title><rect x="153.2" y="213" width="1.9" height="15.0" fill="rgb(250,60,18)" rx="2" ry="2" />
<text  x="156.24" y="223.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (438 samples, 0.90%)</title><rect x="1178.2" y="629" width="10.7" height="15.0" fill="rgb(226,82,46)" rx="2" ry="2" />
<text  x="1181.19" y="639.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (14 samples, 0.03%)</title><rect x="21.4" y="517" width="0.4" height="15.0" fill="rgb(221,189,47)" rx="2" ry="2" />
<text  x="24.45" y="527.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_Optional_payload_base (21 samples, 0.04%)</title><rect x="1053.1" y="213" width="0.5" height="15.0" fill="rgb(209,13,8)" rx="2" ry="2" />
<text  x="1056.07" y="223.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (14 samples, 0.03%)</title><rect x="1055.1" y="293" width="0.3" height="15.0" fill="rgb(216,127,19)" rx="2" ry="2" />
<text  x="1058.06" y="303.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (14 samples, 0.03%)</title><rect x="199.4" y="149" width="0.3" height="15.0" fill="rgb(205,207,18)" rx="2" ry="2" />
<text  x="202.37" y="159.5" ></text>
</g>
<g >
<title>mutation_source::make_reader (4,633 samples, 9.56%)</title><rect x="420.8" y="405" width="112.8" height="15.0" fill="rgb(253,217,44)" rx="2" ry="2" />
<text  x="423.80" y="415.5" >mutation_sour..</text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (7 samples, 0.01%)</title><rect x="1127.8" y="405" width="0.2" height="15.0" fill="rgb(246,54,5)" rx="2" ry="2" />
<text  x="1130.82" y="415.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (24 samples, 0.05%)</title><rect x="289.1" y="373" width="0.6" height="15.0" fill="rgb(245,138,12)" rx="2" ry="2" />
<text  x="292.13" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::reserve (55 samples, 0.11%)</title><rect x="531.8" y="341" width="1.3" height="15.0" fill="rgb(221,124,2)" rx="2" ry="2" />
<text  x="534.79" y="351.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (11 samples, 0.02%)</title><rect x="206.7" y="165" width="0.3" height="15.0" fill="rgb(212,163,10)" rx="2" ry="2" />
<text  x="209.73" y="175.5" ></text>
</g>
<g >
<title>locator::i_endpoint_snitch::get_local_snitch_ptr (9 samples, 0.02%)</title><rect x="1098.7" y="309" width="0.2" height="15.0" fill="rgb(240,39,53)" rx="2" ry="2" />
<text  x="1101.69" y="319.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (25 samples, 0.05%)</title><rect x="1169.3" y="469" width="0.6" height="15.0" fill="rgb(246,11,6)" rx="2" ry="2" />
<text  x="1172.27" y="479.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;std::tuple&lt;seastar::lw_shared_ptr&lt;query::result&gt;, cache_temperature&gt; &gt;::get_value (5 samples, 0.01%)</title><rect x="711.1" y="501" width="0.1" height="15.0" fill="rgb(212,37,47)" rx="2" ry="2" />
<text  x="714.13" y="511.5" ></text>
</g>
<g >
<title>utils::tuple_hash::hash_impl&lt;1ul, auth::resource_kind, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (12 samples, 0.02%)</title><rect x="814.0" y="293" width="0.3" height="15.0" fill="rgb(236,38,17)" rx="2" ry="2" />
<text  x="816.96" y="303.5" ></text>
</g>
<g >
<title>abstract_type::bound_value_needs_to_be_reserialized (5 samples, 0.01%)</title><rect x="891.0" y="277" width="0.1" height="15.0" fill="rgb(229,154,30)" rx="2" ry="2" />
<text  x="894.00" y="287.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt;::~_Variant_storage (6 samples, 0.01%)</title><rect x="671.0" y="437" width="0.1" height="15.0" fill="rgb(207,111,16)" rx="2" ry="2" />
<text  x="673.99" y="447.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::operator= (5 samples, 0.01%)</title><rect x="859.6" y="485" width="0.1" height="15.0" fill="rgb(206,155,54)" rx="2" ry="2" />
<text  x="862.60" y="495.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector (10 samples, 0.02%)</title><rect x="1077.4" y="325" width="0.3" height="15.0" fill="rgb(210,213,47)" rx="2" ry="2" />
<text  x="1080.45" y="335.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (10 samples, 0.02%)</title><rect x="934.2" y="405" width="0.2" height="15.0" fill="rgb(240,160,5)" rx="2" ry="2" />
<text  x="937.18" y="415.5" ></text>
</g>
<g >
<title>sstring_hash::operator (16 samples, 0.03%)</title><rect x="825.5" y="309" width="0.4" height="15.0" fill="rgb(207,146,1)" rx="2" ry="2" />
<text  x="828.50" y="319.5" ></text>
</g>
<g >
<title>auth::data_resource_view::table (6 samples, 0.01%)</title><rect x="798.5" y="117" width="0.1" height="15.0" fill="rgb(244,193,40)" rx="2" ry="2" />
<text  x="801.47" y="127.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::make_data_requests (543 samples, 1.12%)</title><rect x="694.7" y="501" width="13.3" height="15.0" fill="rgb(234,0,38)" rx="2" ry="2" />
<text  x="697.73" y="511.5" ></text>
</g>
<g >
<title>std::pair&lt;auth::role_or_anonymous, auth::resource&gt;::pair (59 samples, 0.12%)</title><rect x="790.1" y="213" width="1.4" height="15.0" fill="rgb(230,125,40)" rx="2" ry="2" />
<text  x="793.09" y="223.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::leaf_node::allocate (91 samples, 0.19%)</title><rect x="192.6" y="117" width="2.2" height="15.0" fill="rgb(209,107,2)" rx="2" ry="2" />
<text  x="195.55" y="127.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;schema_registry_entry&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;schema_registry_entry&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (62 samples, 0.13%)</title><rect x="978.1" y="309" width="1.5" height="15.0" fill="rgb(215,83,8)" rx="2" ry="2" />
<text  x="981.07" y="319.5" ></text>
</g>
<g >
<title>cql3::constants::marker::to_expression (123 samples, 0.25%)</title><rect x="886.2" y="325" width="3.0" height="15.0" fill="rgb(223,78,10)" rx="2" ry="2" />
<text  x="889.20" y="335.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;cql3::raw_value const*, cql3::raw_value*&gt; (21 samples, 0.04%)</title><rect x="857.0" y="437" width="0.5" height="15.0" fill="rgb(213,48,28)" rx="2" ry="2" />
<text  x="860.02" y="447.5" ></text>
</g>
<g >
<title>seastar::app_template::run (47,461 samples, 97.96%)</title><rect x="21.9" y="581" width="1155.9" height="15.0" fill="rgb(229,154,29)" rx="2" ry="2" />
<text  x="24.86" y="591.5" >seastar::app_template::run</text>
</g>
<g >
<title>partition_snapshot::get_change_mark (6 samples, 0.01%)</title><rect x="219.3" y="165" width="0.2" height="15.0" fill="rgb(229,49,8)" rx="2" ry="2" />
<text  x="222.32" y="175.5" ></text>
</g>
<g >
<title>row::append_cell (5 samples, 0.01%)</title><rect x="1141.5" y="213" width="0.2" height="15.0" fill="rgb(222,186,43)" rx="2" ry="2" />
<text  x="1144.53" y="223.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (8 samples, 0.02%)</title><rect x="619.4" y="389" width="0.2" height="15.0" fill="rgb(205,111,17)" rx="2" ry="2" />
<text  x="622.42" y="399.5" ></text>
</g>
<g >
<title>read_simple&lt;unsigned short, managed_bytes_basic_view&lt; (15 samples, 0.03%)</title><rect x="481.6" y="213" width="0.4" height="15.0" fill="rgb(243,200,5)" rx="2" ry="2" />
<text  x="484.62" y="223.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (11 samples, 0.02%)</title><rect x="1104.6" y="373" width="0.3" height="15.0" fill="rgb(233,84,34)" rx="2" ry="2" />
<text  x="1107.63" y="383.5" ></text>
</g>
<g >
<title>operator new (21 samples, 0.04%)</title><rect x="1155.5" y="437" width="0.5" height="15.0" fill="rgb(210,104,54)" rx="2" ry="2" />
<text  x="1158.51" y="447.5" ></text>
</g>
<g >
<title>utils::phased_barrier::operation::~operation (7 samples, 0.01%)</title><rect x="45.3" y="485" width="0.2" height="15.0" fill="rgb(239,220,48)" rx="2" ry="2" />
<text  x="48.32" y="495.5" ></text>
</g>
<g >
<title>freeze (10 samples, 0.02%)</title><rect x="1142.4" y="197" width="0.2" height="15.0" fill="rgb(241,166,40)" rx="2" ry="2" />
<text  x="1145.38" y="207.5" ></text>
</g>
<g >
<title>seastar::semaphore_units&lt;seastar::semaphore_default_exception_factory, std::chrono::_V2::steady_clock&gt;::return_all (6 samples, 0.01%)</title><rect x="667.2" y="453" width="0.2" height="15.0" fill="rgb(254,223,8)" rx="2" ry="2" />
<text  x="670.24" y="463.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::has_available_units (5 samples, 0.01%)</title><rect x="149.7" y="181" width="0.2" height="15.0" fill="rgb(211,168,30)" rx="2" ry="2" />
<text  x="152.73" y="191.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (134 samples, 0.28%)</title><rect x="836.6" y="389" width="3.2" height="15.0" fill="rgb(240,195,29)" rx="2" ry="2" />
<text  x="839.56" y="399.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (5 samples, 0.01%)</title><rect x="17.0" y="261" width="0.1" height="15.0" fill="rgb(248,100,8)" rx="2" ry="2" />
<text  x="19.97" y="271.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (7 samples, 0.01%)</title><rect x="264.0" y="309" width="0.1" height="15.0" fill="rgb(218,58,43)" rx="2" ry="2" />
<text  x="266.97" y="319.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::invoke&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (6 samples, 0.01%)</title><rect x="282.0" y="357" width="0.1" height="15.0" fill="rgb(238,220,31)" rx="2" ry="2" />
<text  x="284.99" y="367.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::~_Variant_storage (6 samples, 0.01%)</title><rect x="904.1" y="293" width="0.2" height="15.0" fill="rgb(242,127,29)" rx="2" ry="2" />
<text  x="907.13" y="303.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (5 samples, 0.01%)</title><rect x="1154.7" y="405" width="0.1" height="15.0" fill="rgb(249,136,7)" rx="2" ry="2" />
<text  x="1157.71" y="415.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::free (8 samples, 0.02%)</title><rect x="398.3" y="197" width="0.2" height="15.0" fill="rgb(222,74,9)" rx="2" ry="2" />
<text  x="401.32" y="207.5" ></text>
</g>
<g >
<title>row_cache::do_make_reader (422 samples, 0.87%)</title><rect x="520.1" y="325" width="10.3" height="15.0" fill="rgb(220,224,48)" rx="2" ry="2" />
<text  x="523.10" y="335.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;gms::inet_address, std::pair&lt;gms::inet_address const, utils::UUID&gt;, std::allocator&lt;std::pair&lt;gms::inet_address const, utils::UUID&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;gms::inet_address&gt;, std::hash&lt;gms::inet_address&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (18 samples, 0.04%)</title><rect x="1154.4" y="421" width="0.4" height="15.0" fill="rgb(212,48,16)" rx="2" ry="2" />
<text  x="1157.39" y="431.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (6 samples, 0.01%)</title><rect x="515.9" y="325" width="0.2" height="15.0" fill="rgb(206,216,25)" rx="2" ry="2" />
<text  x="518.93" y="335.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::~node_head (30 samples, 0.06%)</title><rect x="399.9" y="213" width="0.7" height="15.0" fill="rgb(210,196,2)" rx="2" ry="2" />
<text  x="402.90" y="223.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (5 samples, 0.01%)</title><rect x="607.5" y="437" width="0.2" height="15.0" fill="rgb(207,199,4)" rx="2" ry="2" />
<text  x="610.54" y="447.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;compact_mutation_state&lt; (11 samples, 0.02%)</title><rect x="604.6" y="437" width="0.2" height="15.0" fill="rgb(245,53,44)" rx="2" ry="2" />
<text  x="607.57" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (12 samples, 0.02%)</title><rect x="510.5" y="309" width="0.3" height="15.0" fill="rgb(212,23,31)" rx="2" ry="2" />
<text  x="513.50" y="319.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_impl&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (29 samples, 0.06%)</title><rect x="683.3" y="405" width="0.7" height="15.0" fill="rgb(251,92,17)" rx="2" ry="2" />
<text  x="686.31" y="415.5" ></text>
</g>
<g >
<title>operator delete (68 samples, 0.14%)</title><rect x="936.2" y="405" width="1.7" height="15.0" fill="rgb(214,132,43)" rx="2" ry="2" />
<text  x="939.21" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::emplace_back&lt;flat_mutation_reader&gt; (5 samples, 0.01%)</title><rect x="423.5" y="357" width="0.1" height="15.0" fill="rgb(254,221,8)" rx="2" ry="2" />
<text  x="426.48" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%)</title><rect x="415.3" y="357" width="0.2" height="15.0" fill="rgb(219,34,28)" rx="2" ry="2" />
<text  x="418.34" y="367.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (7 samples, 0.01%)</title><rect x="388.5" y="245" width="0.2" height="15.0" fill="rgb(228,200,21)" rx="2" ry="2" />
<text  x="391.55" y="255.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (31 samples, 0.06%)</title><rect x="763.8" y="341" width="0.7" height="15.0" fill="rgb(245,70,26)" rx="2" ry="2" />
<text  x="766.79" y="351.5" ></text>
</g>
<g >
<title>reader_permit::impl::on_permit_inactive (5 samples, 0.01%)</title><rect x="1029.0" y="197" width="0.1" height="15.0" fill="rgb(244,49,48)" rx="2" ry="2" />
<text  x="1032.00" y="207.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (12 samples, 0.02%)</title><rect x="282.2" y="357" width="0.3" height="15.0" fill="rgb(210,165,25)" rx="2" ry="2" />
<text  x="285.16" y="367.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_pausable&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (4,452 samples, 9.19%)</title><rect x="296.5" y="277" width="108.4" height="15.0" fill="rgb(252,141,33)" rx="2" ry="2" />
<text  x="299.48" y="287.5" >flat_mutation..</text>
</g>
<g >
<title>std::default_delete&lt;bytes_ostream::chunk&gt;::operator (28 samples, 0.06%)</title><rect x="37.3" y="421" width="0.6" height="15.0" fill="rgb(249,177,4)" rx="2" ry="2" />
<text  x="40.25" y="431.5" ></text>
</g>
<g >
<title>boost::intrusive::bstree_impl&lt;boost::intrusive::mhtraits&lt;range_tombstone_entry, boost::intrusive::set_member_hook&lt;boost::intrusive::link_mode&lt; (17 samples, 0.04%)</title><rect x="566.4" y="277" width="0.4" height="15.0" fill="rgb(220,41,6)" rx="2" ry="2" />
<text  x="569.38" y="287.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_no_esft&lt;std::function&lt;flat_mutation_reader  (15 samples, 0.03%)</title><rect x="621.6" y="389" width="0.3" height="15.0" fill="rgb(206,142,30)" rx="2" ry="2" />
<text  x="624.57" y="399.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;flat_mutation_reader::impl::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (80 samples, 0.17%)</title><rect x="293.4" y="293" width="2.0" height="15.0" fill="rgb(232,227,31)" rx="2" ry="2" />
<text  x="296.44" y="303.5" ></text>
</g>
</g>
</svg>
