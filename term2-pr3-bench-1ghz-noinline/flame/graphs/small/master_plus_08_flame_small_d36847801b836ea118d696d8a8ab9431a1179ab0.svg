<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1014" onload="init(evt)" viewBox="0 0 1200 1014" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="1014.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="997" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="997" > </text>
<g id="frames">
<g >
<title>operator new (4 samples, 0.08%)</title><rect x="943.2" y="677" width="0.9" height="15.0" fill="rgb(209,202,19)" rx="2" ry="2" />
<text  x="946.22" y="687.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="513.6" y="565" width="0.3" height="15.0" fill="rgb(253,59,45)" rx="2" ry="2" />
<text  x="516.64" y="575.5" ></text>
</g>
<g >
<title>antlr3::CyclicDFA&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, cql3_parser::CqlLexer&gt;::predict&lt;cql3_parser::CqlLexerCyclicDFA44&gt; (14 samples, 0.27%)</title><rect x="31.7" y="549" width="3.1" height="15.0" fill="rgb(254,216,50)" rx="2" ry="2" />
<text  x="34.70" y="559.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_next (1 samples, 0.02%)</title><rect x="106.7" y="405" width="0.2" height="15.0" fill="rgb(210,45,9)" rx="2" ry="2" />
<text  x="109.66" y="415.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (4 samples, 0.08%)</title><rect x="46.7" y="517" width="0.9" height="15.0" fill="rgb(219,173,52)" rx="2" ry="2" />
<text  x="49.69" y="527.5" ></text>
</g>
<g >
<title>reader_permit::impl::mark_unused (39 samples, 0.74%)</title><rect x="128.4" y="741" width="8.7" height="15.0" fill="rgb(220,13,21)" rx="2" ry="2" />
<text  x="131.36" y="751.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (2 samples, 0.04%)</title><rect x="1059.6" y="613" width="0.4" height="15.0" fill="rgb(248,224,44)" rx="2" ry="2" />
<text  x="1062.56" y="623.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.09%)</title><rect x="996.2" y="565" width="1.2" height="15.0" fill="rgb(228,135,40)" rx="2" ry="2" />
<text  x="999.24" y="575.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (2 samples, 0.04%)</title><rect x="1095.6" y="693" width="0.4" height="15.0" fill="rgb(224,128,14)" rx="2" ry="2" />
<text  x="1098.58" y="703.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::read_next (1 samples, 0.02%)</title><rect x="869.2" y="677" width="0.2" height="15.0" fill="rgb(221,10,5)" rx="2" ry="2" />
<text  x="872.16" y="687.5" ></text>
</g>
<g >
<title>intrusive_array&lt;memtable_entry&gt;::intrusive_array&lt;seastar::lw_shared_ptr&lt;schema const&gt;&amp;, dht::decorated_key, mutation_partition&gt; (3 samples, 0.06%)</title><rect x="1124.0" y="469" width="0.7" height="15.0" fill="rgb(245,156,7)" rx="2" ry="2" />
<text  x="1127.00" y="479.5" ></text>
</g>
<g >
<title>from_hex (1 samples, 0.02%)</title><rect x="67.5" y="661" width="0.2" height="15.0" fill="rgb(237,65,38)" rx="2" ry="2" />
<text  x="70.50" y="671.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mHEXNUMBER (9 samples, 0.17%)</title><rect x="29.0" y="565" width="2.0" height="15.0" fill="rgb(214,93,21)" rx="2" ry="2" />
<text  x="32.02" y="575.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql_transport::messages::result_message::rows&gt;::~shared_ptr_count_for (37 samples, 0.70%)</title><rect x="93.7" y="789" width="8.3" height="15.0" fill="rgb(210,196,24)" rx="2" ry="2" />
<text  x="96.68" y="799.5" ></text>
</g>
<g >
<title>std::construct_at&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::entry&gt; (1 samples, 0.02%)</title><rect x="1029.1" y="517" width="0.3" height="15.0" fill="rgb(209,77,34)" rx="2" ry="2" />
<text  x="1032.13" y="527.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (3 samples, 0.06%)</title><rect x="39.3" y="517" width="0.7" height="15.0" fill="rgb(250,188,1)" rx="2" ry="2" />
<text  x="42.31" y="527.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.04%)</title><rect x="42.7" y="565" width="0.4" height="15.0" fill="rgb(224,191,47)" rx="2" ry="2" />
<text  x="45.67" y="575.5" ></text>
</g>
<g >
<title>clustering_row::clustering_row (136 samples, 2.58%)</title><rect x="223.7" y="469" width="30.4" height="15.0" fill="rgb(205,207,47)" rx="2" ry="2" />
<text  x="226.67" y="479.5" >cl..</text>
</g>
<g >
<title>reader_permit::signal (1 samples, 0.02%)</title><rect x="599.1" y="677" width="0.2" height="15.0" fill="rgb(220,174,23)" rx="2" ry="2" />
<text  x="602.11" y="687.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::~merging_reader (1 samples, 0.02%)</title><rect x="601.3" y="709" width="0.3" height="15.0" fill="rgb(215,131,7)" rx="2" ry="2" />
<text  x="604.34" y="719.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="121.2" y="757" width="0.2" height="15.0" fill="rgb(252,61,32)" rx="2" ry="2" />
<text  x="124.20" y="767.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::single_column_primary_key_restrictions (1 samples, 0.02%)</title><rect x="71.1" y="645" width="0.2" height="15.0" fill="rgb(223,39,13)" rx="2" ry="2" />
<text  x="74.08" y="655.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.02%)</title><rect x="55.2" y="373" width="0.2" height="15.0" fill="rgb(223,62,14)" rx="2" ry="2" />
<text  x="58.20" y="383.5" ></text>
</g>
<g >
<title>bytes_view_hasher::finalize (1 samples, 0.02%)</title><rect x="737.4" y="613" width="0.2" height="15.0" fill="rgb(239,121,9)" rx="2" ry="2" />
<text  x="740.38" y="623.5" ></text>
</g>
<g >
<title>allocation_strategy::destroy&lt;rows_entry&gt; (1 samples, 0.02%)</title><rect x="695.5" y="469" width="0.3" height="15.0" fill="rgb(239,147,47)" rx="2" ry="2" />
<text  x="698.54" y="479.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::storage_proxy&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="958.4" y="693" width="0.3" height="15.0" fill="rgb(228,87,23)" rx="2" ry="2" />
<text  x="961.43" y="703.5" ></text>
</g>
<g >
<title>std::make_unique&lt;seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::entry, reader_concurrency_semaphore::entry, seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;&amp;, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;&amp;&gt; (1 samples, 0.02%)</title><rect x="1027.6" y="501" width="0.2" height="15.0" fill="rgb(236,204,46)" rx="2" ry="2" />
<text  x="1030.57" y="511.5" ></text>
</g>
<g >
<title>partition_snapshot::versions (1 samples, 0.02%)</title><rect x="265.7" y="453" width="0.3" height="15.0" fill="rgb(223,170,13)" rx="2" ry="2" />
<text  x="268.73" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (2 samples, 0.04%)</title><rect x="1164.0" y="757" width="0.5" height="15.0" fill="rgb(249,113,15)" rx="2" ry="2" />
<text  x="1167.05" y="767.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::_Copy_ctor_base (2 samples, 0.04%)</title><rect x="354.3" y="469" width="0.5" height="15.0" fill="rgb(219,17,32)" rx="2" ry="2" />
<text  x="357.33" y="479.5" ></text>
</g>
<g >
<title>clustering_row::external_memory_usage (2 samples, 0.04%)</title><rect x="222.8" y="485" width="0.4" height="15.0" fill="rgb(214,226,13)" rx="2" ry="2" />
<text  x="225.78" y="495.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (2 samples, 0.04%)</title><rect x="45.1" y="581" width="0.5" height="15.0" fill="rgb(221,22,53)" rx="2" ry="2" />
<text  x="48.13" y="591.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_cachedSize (1 samples, 0.02%)</title><rect x="45.6" y="581" width="0.2" height="15.0" fill="rgb(232,3,12)" rx="2" ry="2" />
<text  x="48.57" y="591.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (2 samples, 0.04%)</title><rect x="95.9" y="725" width="0.5" height="15.0" fill="rgb(240,2,25)" rx="2" ry="2" />
<text  x="98.92" y="735.5" ></text>
</g>
<g >
<title>mutation_querier::consume_end_of_stream (4 samples, 0.08%)</title><rect x="344.5" y="517" width="0.9" height="15.0" fill="rgb(230,49,9)" rx="2" ry="2" />
<text  x="347.49" y="527.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (7 samples, 0.13%)</title><rect x="834.0" y="629" width="1.6" height="15.0" fill="rgb(226,75,2)" rx="2" ry="2" />
<text  x="837.03" y="639.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_allocate_node&lt;nonwrapping_interval&lt;dht::token&gt;, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; (4 samples, 0.08%)</title><rect x="1155.3" y="757" width="0.9" height="15.0" fill="rgb(248,114,14)" rx="2" ry="2" />
<text  x="1158.32" y="767.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (2 samples, 0.04%)</title><rect x="772.1" y="629" width="0.4" height="15.0" fill="rgb(214,119,37)" rx="2" ry="2" />
<text  x="775.06" y="639.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (1 samples, 0.02%)</title><rect x="647.9" y="773" width="0.2" height="15.0" fill="rgb(211,171,53)" rx="2" ry="2" />
<text  x="650.88" y="783.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_mutations_locally (2 samples, 0.04%)</title><rect x="106.7" y="709" width="0.4" height="15.0" fill="rgb(213,44,24)" rx="2" ry="2" />
<text  x="109.66" y="719.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::get_at (2 samples, 0.04%)</title><rect x="357.9" y="501" width="0.5" height="15.0" fill="rgb(246,84,24)" rx="2" ry="2" />
<text  x="360.91" y="511.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::maybe_decay_reserve (1 samples, 0.02%)</title><rect x="293.0" y="517" width="0.3" height="15.0" fill="rgb(251,105,42)" rx="2" ry="2" />
<text  x="296.03" y="527.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (2 samples, 0.04%)</title><rect x="816.4" y="517" width="0.4" height="15.0" fill="rgb(229,204,11)" rx="2" ry="2" />
<text  x="819.36" y="527.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_9has_tokenERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES28_S2B_ (1 samples, 0.02%)</title><rect x="895.8" y="693" width="0.2" height="15.0" fill="rgb(243,93,35)" rx="2" ry="2" />
<text  x="898.78" y="703.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (1 samples, 0.02%)</title><rect x="108.0" y="645" width="0.2" height="15.0" fill="rgb(224,188,36)" rx="2" ry="2" />
<text  x="111.00" y="655.5" ></text>
</g>
<g >
<title>query_result_builder::query_result_builder (1 samples, 0.02%)</title><rect x="121.9" y="757" width="0.2" height="15.0" fill="rgb(213,167,35)" rx="2" ry="2" />
<text  x="124.87" y="767.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::clear (5 samples, 0.09%)</title><rect x="198.4" y="581" width="1.1" height="15.0" fill="rgb(230,23,41)" rx="2" ry="2" />
<text  x="201.39" y="591.5" ></text>
</g>
<g >
<title>service::abstract_write_response_handler::signal (1 samples, 0.02%)</title><rect x="719.7" y="757" width="0.2" height="15.0" fill="rgb(227,60,8)" rx="2" ry="2" />
<text  x="722.70" y="767.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (35 samples, 0.66%)</title><rect x="1122.7" y="725" width="7.8" height="15.0" fill="rgb(225,108,19)" rx="2" ry="2" />
<text  x="1125.65" y="735.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_live_endpoints (77 samples, 1.46%)</title><rect x="1069.2" y="629" width="17.2" height="15.0" fill="rgb(219,63,17)" rx="2" ry="2" />
<text  x="1072.18" y="639.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.09%)</title><rect x="554.6" y="629" width="1.1" height="15.0" fill="rgb(234,83,30)" rx="2" ry="2" />
<text  x="557.58" y="639.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::digest_read_result&gt;::schedule&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::execute (15 samples, 0.28%)</title><rect x="980.6" y="613" width="3.3" height="15.0" fill="rgb(243,62,4)" rx="2" ry="2" />
<text  x="983.58" y="623.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.04%)</title><rect x="464.9" y="581" width="0.4" height="15.0" fill="rgb(232,68,47)" rx="2" ry="2" />
<text  x="467.86" y="591.5" ></text>
</g>
<g >
<title>std::has_facet&lt;std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="10.7" y="901" width="0.2" height="15.0" fill="rgb(237,21,29)" rx="2" ry="2" />
<text  x="13.67" y="911.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;tracking_allocator&lt;mutation_fragment&gt; &gt;::_S_destroy&lt;tracking_allocator&lt;mutation_fragment&gt;, mutation_fragment&gt; (1 samples, 0.02%)</title><rect x="78.7" y="773" width="0.2" height="15.0" fill="rgb(215,153,14)" rx="2" ry="2" />
<text  x="81.69" y="783.5" ></text>
</g>
<g >
<title>deletable_row::deletable_row (1 samples, 0.02%)</title><rect x="1126.9" y="469" width="0.2" height="15.0" fill="rgb(224,184,6)" rx="2" ry="2" />
<text  x="1129.91" y="479.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (2 samples, 0.04%)</title><rect x="44.7" y="501" width="0.4" height="15.0" fill="rgb(239,169,53)" rx="2" ry="2" />
<text  x="47.68" y="511.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_initialize_map (1 samples, 0.02%)</title><rect x="566.2" y="693" width="0.2" height="15.0" fill="rgb(206,196,54)" rx="2" ry="2" />
<text  x="569.22" y="703.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (9 samples, 0.17%)</title><rect x="685.9" y="757" width="2.0" height="15.0" fill="rgb(234,152,24)" rx="2" ry="2" />
<text  x="688.92" y="767.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;::~basic_sstring (1 samples, 0.02%)</title><rect x="862.4" y="757" width="0.3" height="15.0" fill="rgb(213,166,32)" rx="2" ry="2" />
<text  x="865.45" y="767.5" ></text>
</g>
<g >
<title>std::__equal&lt;true&gt;::equal&lt;char&gt; (1 samples, 0.02%)</title><rect x="76.7" y="485" width="0.2" height="15.0" fill="rgb(242,14,0)" rx="2" ry="2" />
<text  x="79.67" y="495.5" ></text>
</g>
<g >
<title>db::get_cdc_generation_mutations (1 samples, 0.02%)</title><rect x="105.3" y="805" width="0.2" height="15.0" fill="rgb(228,69,3)" rx="2" ry="2" />
<text  x="108.31" y="815.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::contains&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="74.2" y="709" width="0.2" height="15.0" fill="rgb(215,73,47)" rx="2" ry="2" />
<text  x="77.21" y="719.5" ></text>
</g>
<g >
<title>seastar::schedule (1 samples, 0.02%)</title><rect x="1168.7" y="789" width="0.3" height="15.0" fill="rgb(251,134,13)" rx="2" ry="2" />
<text  x="1171.74" y="799.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (5 samples, 0.09%)</title><rect x="1041.7" y="533" width="1.1" height="15.0" fill="rgb(207,58,48)" rx="2" ry="2" />
<text  x="1044.66" y="543.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="837.2" y="725" width="0.2" height="15.0" fill="rgb(232,110,5)" rx="2" ry="2" />
<text  x="840.16" y="735.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;seastar::file_impl&gt; &gt;, seastar::reactor::open_directory (1 samples, 0.02%)</title><rect x="682.8" y="805" width="0.2" height="15.0" fill="rgb(229,60,17)" rx="2" ry="2" />
<text  x="685.78" y="815.5" ></text>
</g>
<g >
<title>managed_bytes::operator= (1 samples, 0.02%)</title><rect x="872.5" y="677" width="0.2" height="15.0" fill="rgb(238,113,32)" rx="2" ry="2" />
<text  x="875.51" y="687.5" ></text>
</g>
<g >
<title>cql3::query_options::fill_value_views (18 samples, 0.34%)</title><rect x="856.0" y="709" width="4.0" height="15.0" fill="rgb(235,70,34)" rx="2" ry="2" />
<text  x="858.96" y="719.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const*, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;*&gt; (3 samples, 0.06%)</title><rect x="802.5" y="485" width="0.7" height="15.0" fill="rgb(248,15,12)" rx="2" ry="2" />
<text  x="805.48" y="495.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (2 samples, 0.04%)</title><rect x="44.7" y="469" width="0.4" height="15.0" fill="rgb(231,71,2)" rx="2" ry="2" />
<text  x="47.68" y="479.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.04%)</title><rect x="650.3" y="789" width="0.5" height="15.0" fill="rgb(250,41,15)" rx="2" ry="2" />
<text  x="653.34" y="799.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::set_callback (1 samples, 0.02%)</title><rect x="1132.1" y="549" width="0.2" height="15.0" fill="rgb(240,11,25)" rx="2" ry="2" />
<text  x="1135.05" y="559.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (2 samples, 0.04%)</title><rect x="634.7" y="773" width="0.4" height="15.0" fill="rgb(228,1,50)" rx="2" ry="2" />
<text  x="637.68" y="783.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (1 samples, 0.02%)</title><rect x="58.1" y="581" width="0.2" height="15.0" fill="rgb(247,4,17)" rx="2" ry="2" />
<text  x="61.10" y="591.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (13 samples, 0.25%)</title><rect x="231.3" y="405" width="2.9" height="15.0" fill="rgb(237,122,13)" rx="2" ry="2" />
<text  x="234.28" y="415.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;std::tuple&lt;std::optional&lt;clustering_key_prefix&gt; &gt; &gt;::take_value (1 samples, 0.02%)</title><rect x="558.8" y="709" width="0.3" height="15.0" fill="rgb(227,120,53)" rx="2" ry="2" />
<text  x="561.83" y="719.5" ></text>
</g>
<g >
<title>std::hash&lt;wrapping_interval&lt;dht::token&gt; &gt;::operator (2 samples, 0.04%)</title><rect x="1158.2" y="757" width="0.5" height="15.0" fill="rgb(223,180,26)" rx="2" ry="2" />
<text  x="1161.23" y="767.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (2 samples, 0.04%)</title><rect x="494.6" y="549" width="0.5" height="15.0" fill="rgb(217,19,23)" rx="2" ry="2" />
<text  x="497.62" y="559.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; const*, std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt; &gt;, nonwrapping_interval&lt;clustering_key_prefix&gt;*&gt; (5 samples, 0.09%)</title><rect x="159.2" y="709" width="1.2" height="15.0" fill="rgb(227,40,5)" rx="2" ry="2" />
<text  x="162.23" y="719.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (2 samples, 0.04%)</title><rect x="44.7" y="597" width="0.4" height="15.0" fill="rgb(228,58,38)" rx="2" ry="2" />
<text  x="47.68" y="607.5" ></text>
</g>
<g >
<title>std::vector&lt;seastar::shared_ptr&lt;cql3::relation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::relation&gt; &gt; &gt;::_M_move_assign (1 samples, 0.02%)</title><rect x="61.2" y="645" width="0.3" height="15.0" fill="rgb(210,224,32)" rx="2" ry="2" />
<text  x="64.24" y="655.5" ></text>
</g>
<g >
<title>service::client_state::ensure_has_permission (4 samples, 0.08%)</title><rect x="76.2" y="725" width="0.9" height="15.0" fill="rgb(248,223,6)" rx="2" ry="2" />
<text  x="79.23" y="735.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (3 samples, 0.06%)</title><rect x="922.4" y="661" width="0.7" height="15.0" fill="rgb(210,151,28)" rx="2" ry="2" />
<text  x="925.41" y="671.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (4 samples, 0.08%)</title><rect x="812.3" y="549" width="0.9" height="15.0" fill="rgb(246,4,0)" rx="2" ry="2" />
<text  x="815.33" y="559.5" ></text>
</g>
<g >
<title>operator new (10 samples, 0.19%)</title><rect x="211.6" y="517" width="2.2" height="15.0" fill="rgb(253,97,26)" rx="2" ry="2" />
<text  x="214.59" y="527.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.02%)</title><rect x="38.9" y="485" width="0.2" height="15.0" fill="rgb(248,60,38)" rx="2" ry="2" />
<text  x="41.86" y="495.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::operator (1 samples, 0.02%)</title><rect x="106.7" y="453" width="0.2" height="15.0" fill="rgb(206,111,49)" rx="2" ry="2" />
<text  x="109.66" y="463.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (3 samples, 0.06%)</title><rect x="39.3" y="597" width="0.7" height="15.0" fill="rgb(208,74,41)" rx="2" ry="2" />
<text  x="42.31" y="607.5" ></text>
</g>
<g >
<title>seastar::posix_file_impl::close (1 samples, 0.02%)</title><rect x="696.0" y="773" width="0.2" height="15.0" fill="rgb(222,222,29)" rx="2" ry="2" />
<text  x="698.98" y="783.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="53.9" y="549" width="0.2" height="15.0" fill="rgb(216,143,11)" rx="2" ry="2" />
<text  x="56.85" y="559.5" ></text>
</g>
<g >
<title>basic_atomic_cell_view&lt; (1 samples, 0.02%)</title><rect x="1135.2" y="405" width="0.2" height="15.0" fill="rgb(224,185,8)" rx="2" ry="2" />
<text  x="1138.18" y="415.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_istream (1 samples, 0.02%)</title><rect x="37.1" y="677" width="0.2" height="15.0" fill="rgb(242,125,50)" rx="2" ry="2" />
<text  x="40.07" y="687.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (2 samples, 0.04%)</title><rect x="94.3" y="757" width="0.5" height="15.0" fill="rgb(242,213,16)" rx="2" ry="2" />
<text  x="97.35" y="767.5" ></text>
</g>
<g >
<title>boost::dynamic_bitset&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::dynamic_bitset (1 samples, 0.02%)</title><rect x="73.1" y="677" width="0.2" height="15.0" fill="rgb(229,85,18)" rx="2" ry="2" />
<text  x="76.09" y="687.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (1 samples, 0.02%)</title><rect x="106.7" y="245" width="0.2" height="15.0" fill="rgb(249,163,19)" rx="2" ry="2" />
<text  x="109.66" y="255.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::_M_get_Tp_allocator (1 samples, 0.02%)</title><rect x="41.8" y="613" width="0.2" height="15.0" fill="rgb(223,44,1)" rx="2" ry="2" />
<text  x="44.77" y="623.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::set_urgent_state (3 samples, 0.06%)</title><rect x="640.7" y="789" width="0.7" height="15.0" fill="rgb(251,86,18)" rx="2" ry="2" />
<text  x="643.72" y="799.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (1 samples, 0.02%)</title><rect x="827.1" y="693" width="0.2" height="15.0" fill="rgb(241,117,19)" rx="2" ry="2" />
<text  x="830.10" y="703.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Scoped_node::~_Scoped_node (1 samples, 0.02%)</title><rect x="1158.9" y="773" width="0.2" height="15.0" fill="rgb(249,144,4)" rx="2" ry="2" />
<text  x="1161.90" y="783.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="19.2" y="741" width="0.2" height="15.0" fill="rgb(237,71,32)" rx="2" ry="2" />
<text  x="22.17" y="751.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (2 samples, 0.04%)</title><rect x="1154.9" y="661" width="0.4" height="15.0" fill="rgb(235,174,2)" rx="2" ry="2" />
<text  x="1157.87" y="671.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_28has_slice_or_needs_filteringERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES28_S2B_ (1 samples, 0.02%)</title><rect x="656.8" y="693" width="0.3" height="15.0" fill="rgb(250,130,44)" rx="2" ry="2" />
<text  x="659.83" y="703.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.02%)</title><rect x="57.9" y="485" width="0.2" height="15.0" fill="rgb(205,101,28)" rx="2" ry="2" />
<text  x="60.88" y="495.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::statements::attach_service_level_statement, std::default_delete&lt;cql3::statements::attach_service_level_statement&gt;, true, true&gt;::__uniq_ptr_data (1 samples, 0.02%)</title><rect x="62.1" y="661" width="0.3" height="15.0" fill="rgb(236,8,52)" rx="2" ry="2" />
<text  x="65.13" y="671.5" ></text>
</g>
<g >
<title>cql3::statements::update_statement::execute_operations_for_key (11 samples, 0.21%)</title><rect x="873.9" y="645" width="2.4" height="15.0" fill="rgb(234,220,13)" rx="2" ry="2" />
<text  x="876.86" y="655.5" ></text>
</g>
<g >
<title>service::client_state::has_column_family_access (1 samples, 0.02%)</title><rect x="838.7" y="725" width="0.3" height="15.0" fill="rgb(242,159,37)" rx="2" ry="2" />
<text  x="841.73" y="735.5" ></text>
</g>
<g >
<title>antlr3::Lexer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_istream (1 samples, 0.02%)</title><rect x="28.1" y="533" width="0.2" height="15.0" fill="rgb(238,147,39)" rx="2" ry="2" />
<text  x="31.12" y="543.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.04%)</title><rect x="863.3" y="741" width="0.5" height="15.0" fill="rgb(222,117,31)" rx="2" ry="2" />
<text  x="866.34" y="751.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, flat_mutation_reader, reader_concurrency_semaphore::inactive_read_handle&gt;::~_Variant_storage (4 samples, 0.08%)</title><rect x="601.8" y="725" width="0.9" height="15.0" fill="rgb(251,59,1)" rx="2" ry="2" />
<text  x="604.79" y="735.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (16 samples, 0.30%)</title><rect x="255.2" y="437" width="3.6" height="15.0" fill="rgb(230,145,7)" rx="2" ry="2" />
<text  x="258.22" y="447.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (1 samples, 0.02%)</title><rect x="666.0" y="757" width="0.2" height="15.0" fill="rgb(234,75,10)" rx="2" ry="2" />
<text  x="669.00" y="767.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::~guard (1 samples, 0.02%)</title><rect x="513.9" y="581" width="0.2" height="15.0" fill="rgb(248,113,27)" rx="2" ry="2" />
<text  x="516.86" y="591.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::vector (4 samples, 0.08%)</title><rect x="918.8" y="661" width="0.9" height="15.0" fill="rgb(233,35,18)" rx="2" ry="2" />
<text  x="921.83" y="671.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::back (1 samples, 0.02%)</title><rect x="50.0" y="581" width="0.3" height="15.0" fill="rgb(245,219,24)" rx="2" ry="2" />
<text  x="53.05" y="591.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (8 samples, 0.15%)</title><rect x="42.7" y="613" width="1.8" height="15.0" fill="rgb(247,71,23)" rx="2" ry="2" />
<text  x="45.67" y="623.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment (18 samples, 0.34%)</title><rect x="211.4" y="533" width="4.0" height="15.0" fill="rgb(231,205,11)" rx="2" ry="2" />
<text  x="214.37" y="543.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (1 samples, 0.02%)</title><rect x="834.7" y="597" width="0.2" height="15.0" fill="rgb(241,4,34)" rx="2" ry="2" />
<text  x="837.70" y="607.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;gms::inet_address, std::pair&lt;gms::inet_address const, utils::UUID&gt;, std::allocator&lt;std::pair&lt;gms::inet_address const, utils::UUID&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;gms::inet_address&gt;, std::hash&lt;gms::inet_address&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (3 samples, 0.06%)</title><rect x="1151.1" y="725" width="0.6" height="15.0" fill="rgb(223,45,4)" rx="2" ry="2" />
<text  x="1154.07" y="735.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;dht::token, std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt;, std::allocator&lt;std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;dht::token&gt;, std::hash&lt;dht::token&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (1 samples, 0.02%)</title><rect x="1084.8" y="597" width="0.3" height="15.0" fill="rgb(237,142,26)" rx="2" ry="2" />
<text  x="1087.84" y="607.5" ></text>
</g>
<g >
<title>std::hash&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::operator (1 samples, 0.02%)</title><rect x="807.9" y="437" width="0.2" height="15.0" fill="rgb(238,132,18)" rx="2" ry="2" />
<text  x="810.85" y="447.5" ></text>
</g>
<g >
<title>seastar::do_until&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (1 samples, 0.02%)</title><rect x="106.7" y="229" width="0.2" height="15.0" fill="rgb(243,112,18)" rx="2" ry="2" />
<text  x="109.66" y="239.5" ></text>
</g>
<g >
<title>utils::estimated_histogram::estimated_histogram (1 samples, 0.02%)</title><rect x="108.4" y="693" width="0.3" height="15.0" fill="rgb(223,30,4)" rx="2" ry="2" />
<text  x="111.45" y="703.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::pop_mutation_fragment (1 samples, 0.02%)</title><rect x="869.6" y="709" width="0.2" height="15.0" fill="rgb(254,121,38)" rx="2" ry="2" />
<text  x="872.61" y="719.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.02%)</title><rect x="1026.9" y="501" width="0.2" height="15.0" fill="rgb(242,116,54)" rx="2" ry="2" />
<text  x="1029.89" y="511.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned int, std::less&lt;unsigned int&gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;unsigned int&gt; &gt;::find (3 samples, 0.06%)</title><rect x="36.2" y="613" width="0.6" height="15.0" fill="rgb(252,187,37)" rx="2" ry="2" />
<text  x="39.18" y="623.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::upper_bound&lt;mutation_partition, schema const&amp;, nonwrapping_interval&lt;clustering_key_prefix&gt; const&amp;&gt; (2 samples, 0.04%)</title><rect x="282.1" y="517" width="0.4" height="15.0" fill="rgb(235,2,3)" rx="2" ry="2" />
<text  x="285.07" y="527.5" ></text>
</g>
<g >
<title>absl::hash_internal::HashState::combine_contiguous (2 samples, 0.04%)</title><rect x="844.3" y="645" width="0.5" height="15.0" fill="rgb(211,94,22)" rx="2" ry="2" />
<text  x="847.32" y="655.5" ></text>
</g>
<g >
<title>[[vdso]] (21 samples, 0.40%)</title><rect x="1171.7" y="917" width="4.7" height="15.0" fill="rgb(213,208,1)" rx="2" ry="2" />
<text  x="1174.65" y="927.5" ></text>
</g>
<g >
<title>absl::container_internal::probe_seq&lt;16ul&gt;::probe_seq (1 samples, 0.02%)</title><rect x="771.8" y="645" width="0.3" height="15.0" fill="rgb(236,28,29)" rx="2" ry="2" />
<text  x="774.83" y="655.5" ></text>
</g>
<g >
<title>std::optional&lt;query::querier&lt; (5 samples, 0.09%)</title><rect x="629.8" y="741" width="1.1" height="15.0" fill="rgb(229,47,9)" rx="2" ry="2" />
<text  x="632.76" y="751.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.02%)</title><rect x="57.9" y="517" width="0.2" height="15.0" fill="rgb(231,213,14)" rx="2" ry="2" />
<text  x="60.88" y="527.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (1 samples, 0.02%)</title><rect x="917.3" y="645" width="0.2" height="15.0" fill="rgb(205,122,38)" rx="2" ry="2" />
<text  x="920.26" y="655.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (1 samples, 0.02%)</title><rect x="928.2" y="661" width="0.2" height="15.0" fill="rgb(230,51,35)" rx="2" ry="2" />
<text  x="931.23" y="671.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;std::tuple&lt;std::optional&lt;clustering_key_prefix&gt; &gt; &gt; &gt;::satisfy_with_result_of&lt;seastar::future&lt;mutation_fragment*&gt;::then_impl_nrvo&lt;query::consume_page&lt; (5 samples, 0.09%)</title><rect x="693.3" y="789" width="1.1" height="15.0" fill="rgb(214,160,25)" rx="2" ry="2" />
<text  x="696.30" y="799.5" ></text>
</g>
<g >
<title>utils::approx_exponential_histogram&lt;512ul, 33554432ul, 4ul&gt;::add (1 samples, 0.02%)</title><rect x="614.1" y="725" width="0.2" height="15.0" fill="rgb(237,84,38)" rx="2" ry="2" />
<text  x="617.10" y="735.5" ></text>
</g>
<g >
<title>std::forward&lt;std::default_delete&lt;cql3::expr::expression::impl&gt; &gt; (1 samples, 0.02%)</title><rect x="56.8" y="485" width="0.2" height="15.0" fill="rgb(233,201,24)" rx="2" ry="2" />
<text  x="59.76" y="495.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.02%)</title><rect x="20.5" y="565" width="0.2" height="15.0" fill="rgb(223,61,16)" rx="2" ry="2" />
<text  x="23.52" y="575.5" ></text>
</g>
<g >
<title>cql3::expr::expression::operator= (1 samples, 0.02%)</title><rect x="51.6" y="597" width="0.2" height="15.0" fill="rgb(218,75,3)" rx="2" ry="2" />
<text  x="54.62" y="607.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_cql (1 samples, 0.02%)</title><rect x="672.9" y="789" width="0.3" height="15.0" fill="rgb(234,37,23)" rx="2" ry="2" />
<text  x="675.94" y="799.5" ></text>
</g>
<g >
<title>query::partition_slice::row_ranges (1 samples, 0.02%)</title><rect x="357.5" y="517" width="0.2" height="15.0" fill="rgb(234,11,17)" rx="2" ry="2" />
<text  x="360.47" y="527.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt; &gt;, seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (19 samples, 0.36%)</title><rect x="813.2" y="565" width="4.3" height="15.0" fill="rgb(229,159,16)" rx="2" ry="2" />
<text  x="816.22" y="575.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="552.1" y="613" width="0.2" height="15.0" fill="rgb(243,84,23)" rx="2" ry="2" />
<text  x="555.12" y="623.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="916.6" y="645" width="0.2" height="15.0" fill="rgb(248,222,12)" rx="2" ry="2" />
<text  x="919.59" y="655.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="926.0" y="629" width="0.2" height="15.0" fill="rgb(232,27,25)" rx="2" ry="2" />
<text  x="928.99" y="639.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt; &gt;::invoke&lt;flat_mutation_reader::impl::consume_pausable&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (1 samples, 0.02%)</title><rect x="106.9" y="565" width="0.2" height="15.0" fill="rgb(206,9,20)" rx="2" ry="2" />
<text  x="109.88" y="575.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (5 samples, 0.09%)</title><rect x="476.3" y="581" width="1.1" height="15.0" fill="rgb(251,18,16)" rx="2" ry="2" />
<text  x="479.27" y="591.5" ></text>
</g>
<g >
<title>std::apply&lt;row_cache::do_update (2 samples, 0.04%)</title><rect x="695.3" y="693" width="0.5" height="15.0" fill="rgb(207,228,21)" rx="2" ry="2" />
<text  x="698.31" y="703.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (1 samples, 0.02%)</title><rect x="106.7" y="37" width="0.2" height="15.0" fill="rgb(230,219,29)" rx="2" ry="2" />
<text  x="109.66" y="47.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::value_ptr&gt;::clear (1 samples, 0.02%)</title><rect x="746.8" y="693" width="0.2" height="15.0" fill="rgb(248,111,52)" rx="2" ry="2" />
<text  x="749.77" y="703.5" ></text>
</g>
<g >
<title>mutation_reader_merger::mutation_reader_merger (41 samples, 0.78%)</title><rect x="457.5" y="613" width="9.2" height="15.0" fill="rgb(211,210,10)" rx="2" ry="2" />
<text  x="460.48" y="623.5" ></text>
</g>
<g >
<title>service::abstract_write_response_handler::delay&lt;service::abstract_write_response_handler::signal (1 samples, 0.02%)</title><rect x="719.7" y="741" width="0.2" height="15.0" fill="rgb(241,102,26)" rx="2" ry="2" />
<text  x="722.70" y="751.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="79.1" y="629" width="0.3" height="15.0" fill="rgb(248,22,36)" rx="2" ry="2" />
<text  x="82.14" y="639.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (1 samples, 0.02%)</title><rect x="80.3" y="581" width="0.2" height="15.0" fill="rgb(251,33,43)" rx="2" ry="2" />
<text  x="83.25" y="591.5" ></text>
</g>
<g >
<title>appending_hash&lt;partition_key_view&gt;::operator (1 samples, 0.02%)</title><rect x="107.1" y="693" width="0.2" height="15.0" fill="rgb(210,181,48)" rx="2" ry="2" />
<text  x="110.10" y="703.5" ></text>
</g>
<g >
<title>cql3::restrictions::clustering_key_restrictions::needs_filtering (1 samples, 0.02%)</title><rect x="655.7" y="757" width="0.2" height="15.0" fill="rgb(209,70,9)" rx="2" ry="2" />
<text  x="658.71" y="767.5" ></text>
</g>
<g >
<title>schema::get_sharder (3 samples, 0.06%)</title><rect x="1008.5" y="581" width="0.7" height="15.0" fill="rgb(208,112,52)" rx="2" ry="2" />
<text  x="1011.55" y="591.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="859.8" y="661" width="0.2" height="15.0" fill="rgb(246,206,18)" rx="2" ry="2" />
<text  x="862.76" y="671.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.08%)</title><rect x="323.2" y="597" width="0.9" height="15.0" fill="rgb(212,143,9)" rx="2" ry="2" />
<text  x="326.23" y="607.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::_M_create_storage (7 samples, 0.13%)</title><rect x="157.7" y="709" width="1.5" height="15.0" fill="rgb(225,172,28)" rx="2" ry="2" />
<text  x="160.67" y="719.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;column_definition const*, std::pair&lt;column_definition const* const, cql3::expr::expression&gt;, std::allocator&lt;std::pair&lt;column_definition const* const, cql3::expr::expression&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;column_definition const*&gt;, std::hash&lt;column_definition const*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::~_Hashtable (2 samples, 0.04%)</title><rect x="71.8" y="693" width="0.4" height="15.0" fill="rgb(252,181,17)" rx="2" ry="2" />
<text  x="74.75" y="703.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.04%)</title><rect x="639.8" y="789" width="0.5" height="15.0" fill="rgb(252,195,40)" rx="2" ry="2" />
<text  x="642.83" y="799.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;partition_key, false, false&gt;::_Optional_base (2 samples, 0.04%)</title><rect x="1062.5" y="581" width="0.4" height="15.0" fill="rgb(225,159,13)" rx="2" ry="2" />
<text  x="1065.47" y="591.5" ></text>
</g>
<g >
<title>rows_entry::tri_compare::operator (1 samples, 0.02%)</title><rect x="16.0" y="805" width="0.3" height="15.0" fill="rgb(236,169,41)" rx="2" ry="2" />
<text  x="19.04" y="815.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (1 samples, 0.02%)</title><rect x="1049.3" y="629" width="0.2" height="15.0" fill="rgb(231,165,30)" rx="2" ry="2" />
<text  x="1052.27" y="639.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="19.4" y="677" width="0.2" height="15.0" fill="rgb(215,192,34)" rx="2" ry="2" />
<text  x="22.40" y="687.5" ></text>
</g>
<g >
<title>validation::is_cql_key_invalid (1 samples, 0.02%)</title><rect x="872.7" y="661" width="0.3" height="15.0" fill="rgb(234,58,10)" rx="2" ry="2" />
<text  x="875.74" y="671.5" ></text>
</g>
<g >
<title>reader_permit::consume_memory (1 samples, 0.02%)</title><rect x="268.4" y="485" width="0.2" height="15.0" fill="rgb(206,102,15)" rx="2" ry="2" />
<text  x="271.42" y="495.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;::operator (2 samples, 0.04%)</title><rect x="72.4" y="693" width="0.5" height="15.0" fill="rgb(216,91,21)" rx="2" ry="2" />
<text  x="75.42" y="703.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (1 samples, 0.02%)</title><rect x="835.1" y="581" width="0.3" height="15.0" fill="rgb(223,178,50)" rx="2" ry="2" />
<text  x="838.15" y="591.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (1 samples, 0.02%)</title><rect x="937.4" y="709" width="0.2" height="15.0" fill="rgb(212,78,47)" rx="2" ry="2" />
<text  x="940.40" y="719.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_clear (1 samples, 0.02%)</title><rect x="467.5" y="597" width="0.3" height="15.0" fill="rgb(227,103,52)" rx="2" ry="2" />
<text  x="470.55" y="607.5" ></text>
</g>
<g >
<title>sstables::mc::writer::write_clustered&lt;clustering_row&gt; (3 samples, 0.06%)</title><rect x="81.1" y="741" width="0.7" height="15.0" fill="rgb(244,221,10)" rx="2" ry="2" />
<text  x="84.15" y="751.5" ></text>
</g>
<g >
<title>flat_mutation_reader::close (3 samples, 0.06%)</title><rect x="569.3" y="725" width="0.7" height="15.0" fill="rgb(224,28,32)" rx="2" ry="2" />
<text  x="572.35" y="735.5" ></text>
</g>
<g >
<title>seastar::task_quota_aio_completion::complete_with (1 samples, 0.02%)</title><rect x="1140.8" y="789" width="0.2" height="15.0" fill="rgb(214,104,20)" rx="2" ry="2" />
<text  x="1143.78" y="799.5" ></text>
</g>
<g >
<title>std::operator+ (2 samples, 0.04%)</title><rect x="44.7" y="485" width="0.4" height="15.0" fill="rgb(238,96,43)" rx="2" ry="2" />
<text  x="47.68" y="495.5" ></text>
</g>
<g >
<title>abstract_type::validate&lt;managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="902.7" y="581" width="0.2" height="15.0" fill="rgb(212,137,1)" rx="2" ry="2" />
<text  x="905.72" y="591.5" ></text>
</g>
<g >
<title>ser::set_size&lt;bytes_ostream, schema_mutations&gt; (1 samples, 0.02%)</title><rect x="107.6" y="725" width="0.2" height="15.0" fill="rgb(249,44,48)" rx="2" ry="2" />
<text  x="110.55" y="735.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql_transport::messages::result_message::rows&gt;::shared_ptr_count_for&lt;cql3::result&gt; (2 samples, 0.04%)</title><rect x="662.2" y="757" width="0.4" height="15.0" fill="rgb(242,93,25)" rx="2" ry="2" />
<text  x="665.20" y="767.5" ></text>
</g>
<g >
<title>service::storage_proxy::query (617 samples, 11.70%)</title><rect x="956.2" y="709" width="138.0" height="15.0" fill="rgb(223,181,32)" rx="2" ry="2" />
<text  x="959.19" y="719.5" >service::storage_..</text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::find (1 samples, 0.02%)</title><rect x="952.6" y="677" width="0.2" height="15.0" fill="rgb(213,117,28)" rx="2" ry="2" />
<text  x="955.61" y="687.5" ></text>
</g>
<g >
<title>std::operator+ (2 samples, 0.04%)</title><rect x="45.8" y="469" width="0.4" height="15.0" fill="rgb(239,160,6)" rx="2" ry="2" />
<text  x="48.80" y="479.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.06%)</title><rect x="619.7" y="725" width="0.7" height="15.0" fill="rgb(214,185,9)" rx="2" ry="2" />
<text  x="622.69" y="735.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_in_thread&lt;sstables::sstable_writer, flat_mutation_reader::no_filter&gt; (1 samples, 0.02%)</title><rect x="10.4" y="805" width="0.3" height="15.0" fill="rgb(218,133,0)" rx="2" ry="2" />
<text  x="13.45" y="815.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::abstract_read_executor&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="1164.5" y="757" width="0.2" height="15.0" fill="rgb(222,17,47)" rx="2" ry="2" />
<text  x="1167.49" y="767.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::column_identifier&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="55.6" y="597" width="0.3" height="15.0" fill="rgb(232,182,27)" rx="2" ry="2" />
<text  x="58.64" y="607.5" ></text>
</g>
<g >
<title>antlr3::Lexer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::emit (2 samples, 0.04%)</title><rect x="27.9" y="565" width="0.4" height="15.0" fill="rgb(235,155,41)" rx="2" ry="2" />
<text  x="30.90" y="575.5" ></text>
</g>
<g >
<title>operator new (12 samples, 0.23%)</title><rect x="1110.3" y="709" width="2.7" height="15.0" fill="rgb(215,72,1)" rx="2" ry="2" />
<text  x="1113.35" y="719.5" ></text>
</g>
<g >
<title>std::default_delete&lt;query::partition_slice const&gt;::operator (2 samples, 0.04%)</title><rect x="604.0" y="725" width="0.5" height="15.0" fill="rgb(208,229,21)" rx="2" ry="2" />
<text  x="607.03" y="735.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_last_fragment_kind, 4ul&gt;::small_vector (2 samples, 0.04%)</title><rect x="474.7" y="565" width="0.5" height="15.0" fill="rgb(253,91,50)" rx="2" ry="2" />
<text  x="477.71" y="575.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="849.0" y="709" width="0.2" height="15.0" fill="rgb(246,88,51)" rx="2" ry="2" />
<text  x="852.02" y="719.5" ></text>
</g>
<g >
<title>flat_mutation_reader::close (138 samples, 2.62%)</title><rect x="570.2" y="709" width="30.9" height="15.0" fill="rgb(208,69,48)" rx="2" ry="2" />
<text  x="573.24" y="719.5" >fl..</text>
</g>
<g >
<title>utils::tuple_hash::operator (17 samples, 0.32%)</title><rect x="756.8" y="613" width="3.8" height="15.0" fill="rgb(238,92,29)" rx="2" ry="2" />
<text  x="759.84" y="623.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (1 samples, 0.02%)</title><rect x="1146.1" y="773" width="0.3" height="15.0" fill="rgb(210,68,13)" rx="2" ry="2" />
<text  x="1149.15" y="783.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (1 samples, 0.02%)</title><rect x="699.3" y="757" width="0.3" height="15.0" fill="rgb(205,168,16)" rx="2" ry="2" />
<text  x="702.34" y="767.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, cql3::statements::raw::delete_statement*, std::default_delete&lt;cql3::statements::raw::delete_statement&gt; &gt; (1 samples, 0.02%)</title><rect x="63.2" y="645" width="0.3" height="15.0" fill="rgb(215,68,32)" rx="2" ry="2" />
<text  x="66.25" y="655.5" ></text>
</g>
<g >
<title>row_cache::invalidate (2 samples, 0.04%)</title><rect x="695.3" y="725" width="0.5" height="15.0" fill="rgb(236,155,5)" rx="2" ry="2" />
<text  x="698.31" y="735.5" ></text>
</g>
<g >
<title>single_node_cql_env::make_query_state (1 samples, 0.02%)</title><rect x="77.6" y="805" width="0.2" height="15.0" fill="rgb(236,225,38)" rx="2" ry="2" />
<text  x="80.57" y="815.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume_in_thread&lt;sstables::sstable_writer, flat_mutation_reader::no_filter&gt; (1 samples, 0.02%)</title><rect x="15.1" y="853" width="0.3" height="15.0" fill="rgb(239,61,8)" rx="2" ry="2" />
<text  x="18.15" y="863.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt;::construct&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; (1 samples, 0.02%)</title><rect x="266.9" y="453" width="0.2" height="15.0" fill="rgb(249,90,29)" rx="2" ry="2" />
<text  x="269.85" y="463.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::push_mutation_fragment&lt;schema const&amp;, reader_permit&amp;, partition_start&gt; (39 samples, 0.74%)</title><rect x="517.4" y="549" width="8.8" height="15.0" fill="rgb(252,164,5)" rx="2" ry="2" />
<text  x="520.44" y="559.5" ></text>
</g>
<g >
<title>sstables::mc::writer::write_clustered (3 samples, 0.06%)</title><rect x="81.1" y="725" width="0.7" height="15.0" fill="rgb(218,155,30)" rx="2" ry="2" />
<text  x="84.15" y="735.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::then_wrapped_common&lt;false, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (4 samples, 0.08%)</title><rect x="839.8" y="725" width="0.9" height="15.0" fill="rgb(231,68,15)" rx="2" ry="2" />
<text  x="842.85" y="735.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (2 samples, 0.04%)</title><rect x="637.8" y="789" width="0.5" height="15.0" fill="rgb(239,102,23)" rx="2" ry="2" />
<text  x="640.81" y="799.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::~modification_statement (2 samples, 0.04%)</title><rect x="652.1" y="773" width="0.5" height="15.0" fill="rgb(212,45,20)" rx="2" ry="2" />
<text  x="655.13" y="783.5" ></text>
</g>
<g >
<title>boost::intrusive::bstbase&lt;boost::intrusive::mhtraits&lt;range_tombstone_entry, boost::intrusive::set_member_hook&lt;boost::intrusive::link_mode&lt; (1 samples, 0.02%)</title><rect x="1138.5" y="597" width="0.3" height="15.0" fill="rgb(226,168,43)" rx="2" ry="2" />
<text  x="1141.54" y="607.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_S_construct&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (6 samples, 0.11%)</title><rect x="22.3" y="549" width="1.3" height="15.0" fill="rgb(232,171,29)" rx="2" ry="2" />
<text  x="25.31" y="559.5" ></text>
</g>
<g >
<title>cql3::statements::raw::update_statement::prepare_internal (31 samples, 0.59%)</title><rect x="67.1" y="741" width="6.9" height="15.0" fill="rgb(224,139,41)" rx="2" ry="2" />
<text  x="70.05" y="751.5" ></text>
</g>
<g >
<title>query::result_set::from_raw_result (1 samples, 0.02%)</title><rect x="108.2" y="661" width="0.2" height="15.0" fill="rgb(219,125,16)" rx="2" ry="2" />
<text  x="111.22" y="671.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt;::_M_reset (1 samples, 0.02%)</title><rect x="869.4" y="677" width="0.2" height="15.0" fill="rgb(212,88,15)" rx="2" ry="2" />
<text  x="872.38" y="687.5" ></text>
</g>
<g >
<title>mutation::consume&lt;compact_for_query&lt; (1 samples, 0.02%)</title><rect x="108.0" y="661" width="0.2" height="15.0" fill="rgb(231,219,47)" rx="2" ry="2" />
<text  x="111.00" y="671.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;::basic_sstring (1 samples, 0.02%)</title><rect x="752.4" y="661" width="0.2" height="15.0" fill="rgb(250,193,3)" rx="2" ry="2" />
<text  x="755.37" y="671.5" ></text>
</g>
<g >
<title>row_cache::do_update (2 samples, 0.04%)</title><rect x="695.3" y="661" width="0.5" height="15.0" fill="rgb(212,212,38)" rx="2" ry="2" />
<text  x="698.31" y="671.5" ></text>
</g>
<g >
<title>reader_permit::consume (2 samples, 0.04%)</title><rect x="262.4" y="453" width="0.4" height="15.0" fill="rgb(242,38,47)" rx="2" ry="2" />
<text  x="265.38" y="463.5" ></text>
</g>
<g >
<title>seastar::future&lt;mutation_fragment*&gt;::then_impl&lt;query::consume_page&lt; (3 samples, 0.06%)</title><rect x="558.2" y="725" width="0.6" height="15.0" fill="rgb(211,142,30)" rx="2" ry="2" />
<text  x="561.16" y="735.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::digest_read_result&gt;::get0 (2 samples, 0.04%)</title><rect x="699.6" y="757" width="0.4" height="15.0" fill="rgb(251,111,28)" rx="2" ry="2" />
<text  x="702.56" y="767.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;utils::small_vector&lt;service::storage_proxy::unique_response_handler, 1ul&gt; &gt; &gt;::invoke&lt;service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;, service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (21 samples, 0.40%)</title><rect x="1133.6" y="581" width="4.7" height="15.0" fill="rgb(212,5,20)" rx="2" ry="2" />
<text  x="1136.62" y="591.5" ></text>
</g>
<g >
<title>service::write_response_handler::~write_response_handler (1 samples, 0.02%)</title><rect x="695.8" y="789" width="0.2" height="15.0" fill="rgb(229,130,37)" rx="2" ry="2" />
<text  x="698.76" y="799.5" ></text>
</g>
<g >
<title>posix_memalign (5 samples, 0.09%)</title><rect x="248.7" y="389" width="1.1" height="15.0" fill="rgb(248,71,32)" rx="2" ry="2" />
<text  x="251.73" y="399.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (39 samples, 0.74%)</title><rect x="1130.7" y="725" width="8.7" height="15.0" fill="rgb(243,83,28)" rx="2" ry="2" />
<text  x="1133.71" y="735.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;bytes_ostream::chunk, std::default_delete&lt;bytes_ostream::chunk&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="97.7" y="693" width="0.2" height="15.0" fill="rgb(215,121,19)" rx="2" ry="2" />
<text  x="100.71" y="703.5" ></text>
</g>
<g >
<title>cql3::to_managed_bytes_opt (2 samples, 0.04%)</title><rect x="916.8" y="661" width="0.5" height="15.0" fill="rgb(242,57,25)" rx="2" ry="2" />
<text  x="919.81" y="671.5" ></text>
</g>
<g >
<title>cql3::relation::to_restriction (2 samples, 0.04%)</title><rect x="69.5" y="693" width="0.5" height="15.0" fill="rgb(224,34,41)" rx="2" ry="2" />
<text  x="72.51" y="703.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::~allocator (1 samples, 0.02%)</title><rect x="35.7" y="581" width="0.3" height="15.0" fill="rgb(250,37,40)" rx="2" ry="2" />
<text  x="38.73" y="591.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="650.6" y="773" width="0.2" height="15.0" fill="rgb(254,184,44)" rx="2" ry="2" />
<text  x="653.57" y="783.5" ></text>
</g>
<g >
<title>sstables::compaction::finish_new_sstable (1 samples, 0.02%)</title><rect x="16.9" y="773" width="0.3" height="15.0" fill="rgb(231,17,33)" rx="2" ry="2" />
<text  x="19.94" y="783.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;service::storage_proxy_coordinator_query_result&gt;, seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::finally_body&lt;service::storage_proxy::do_query (3 samples, 0.06%)</title><rect x="83.8" y="821" width="0.7" height="15.0" fill="rgb(219,99,26)" rx="2" ry="2" />
<text  x="86.83" y="831.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (1 samples, 0.02%)</title><rect x="214.7" y="517" width="0.2" height="15.0" fill="rgb(254,189,48)" rx="2" ry="2" />
<text  x="217.72" y="527.5" ></text>
</g>
<g >
<title>ser::deserialize&lt;seastar::simple_memory_input_stream&gt; (1 samples, 0.02%)</title><rect x="106.0" y="709" width="0.2" height="15.0" fill="rgb(206,108,52)" rx="2" ry="2" />
<text  x="108.98" y="719.5" ></text>
</g>
<g >
<title>frozen_schema::frozen_schema (1 samples, 0.02%)</title><rect x="107.6" y="757" width="0.2" height="15.0" fill="rgb(214,200,10)" rx="2" ry="2" />
<text  x="110.55" y="767.5" ></text>
</g>
<g >
<title>query::result::result (2 samples, 0.04%)</title><rect x="609.8" y="725" width="0.5" height="15.0" fill="rgb(216,192,47)" rx="2" ry="2" />
<text  x="612.84" y="735.5" ></text>
</g>
<g >
<title>logalloc::basic_region_impl::set_reclaiming_enabled (2 samples, 0.04%)</title><rect x="269.1" y="517" width="0.4" height="15.0" fill="rgb(235,75,18)" rx="2" ry="2" />
<text  x="272.09" y="527.5" ></text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.04%)</title><rect x="655.0" y="773" width="0.5" height="15.0" fill="rgb(250,134,24)" rx="2" ry="2" />
<text  x="658.04" y="783.5" ></text>
</g>
<g >
<title>std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt;::_M_check_len (1 samples, 0.02%)</title><rect x="289.7" y="485" width="0.2" height="15.0" fill="rgb(205,171,40)" rx="2" ry="2" />
<text  x="292.67" y="495.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::deallocate (1 samples, 0.02%)</title><rect x="216.1" y="533" width="0.2" height="15.0" fill="rgb(246,122,18)" rx="2" ry="2" />
<text  x="219.06" y="543.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (2 samples, 0.04%)</title><rect x="696.7" y="773" width="0.4" height="15.0" fill="rgb(217,26,30)" rx="2" ry="2" />
<text  x="699.66" y="783.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (1 samples, 0.02%)</title><rect x="672.3" y="741" width="0.2" height="15.0" fill="rgb(249,46,45)" rx="2" ry="2" />
<text  x="675.27" y="751.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.02%)</title><rect x="635.6" y="773" width="0.2" height="15.0" fill="rgb(225,91,23)" rx="2" ry="2" />
<text  x="638.57" y="783.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (3 samples, 0.06%)</title><rect x="45.8" y="549" width="0.7" height="15.0" fill="rgb(248,74,53)" rx="2" ry="2" />
<text  x="48.80" y="559.5" ></text>
</g>
<g >
<title>multishard_combining_reader::fill_buffer (1 samples, 0.02%)</title><rect x="106.7" y="565" width="0.2" height="15.0" fill="rgb(209,220,31)" rx="2" ry="2" />
<text  x="109.66" y="575.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.02%)</title><rect x="59.4" y="421" width="0.3" height="15.0" fill="rgb(212,150,10)" rx="2" ry="2" />
<text  x="62.45" y="431.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (1 samples, 0.02%)</title><rect x="19.2" y="789" width="0.2" height="15.0" fill="rgb(236,142,10)" rx="2" ry="2" />
<text  x="22.17" y="799.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::operator= (5 samples, 0.09%)</title><rect x="710.5" y="741" width="1.1" height="15.0" fill="rgb(239,172,52)" rx="2" ry="2" />
<text  x="713.53" y="751.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::lsa_partition_reader (5 samples, 0.09%)</title><rect x="529.1" y="581" width="1.1" height="15.0" fill="rgb(223,35,23)" rx="2" ry="2" />
<text  x="532.07" y="591.5" ></text>
</g>
<g >
<title>position_in_partition_view::position_in_partition_view (1 samples, 0.02%)</title><rect x="276.0" y="533" width="0.2" height="15.0" fill="rgb(215,31,2)" rx="2" ry="2" />
<text  x="279.03" y="543.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;reader_permit::impl, true&gt;::make&lt;reader_concurrency_semaphore&amp;, schema const* const&amp;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;&amp;, reader_resources&amp;, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;&amp;&gt; (15 samples, 0.28%)</title><rect x="1030.3" y="533" width="3.3" height="15.0" fill="rgb(244,161,41)" rx="2" ry="2" />
<text  x="1033.25" y="543.5" ></text>
</g>
<g >
<title>mutation_partition::clear_gently (1 samples, 0.02%)</title><rect x="14.5" y="789" width="0.2" height="15.0" fill="rgb(230,40,29)" rx="2" ry="2" />
<text  x="17.47" y="799.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="633.6" y="693" width="0.2" height="15.0" fill="rgb(234,165,17)" rx="2" ry="2" />
<text  x="636.56" y="703.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;cql3::statements::update_statement, false&gt;::make&lt;cql3::statements::statement_type const&amp;, unsigned long, seastar::lw_shared_ptr&lt;schema const&gt;&amp;, std::unique_ptr&lt;cql3::attributes, std::default_delete&lt;cql3::attributes&gt; &gt;, cql3::cql_stats&amp;&gt; (4 samples, 0.08%)</title><rect x="72.9" y="725" width="0.9" height="15.0" fill="rgb(238,146,21)" rx="2" ry="2" />
<text  x="75.87" y="735.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::pop_front (2 samples, 0.04%)</title><rect x="136.6" y="725" width="0.5" height="15.0" fill="rgb(248,122,25)" rx="2" ry="2" />
<text  x="139.64" y="735.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;bool&gt;::move_it (3 samples, 0.06%)</title><rect x="783.9" y="645" width="0.7" height="15.0" fill="rgb(225,188,7)" rx="2" ry="2" />
<text  x="786.91" y="655.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::construct&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; const&amp;&gt; (1 samples, 0.02%)</title><rect x="38.0" y="613" width="0.2" height="15.0" fill="rgb(210,45,22)" rx="2" ry="2" />
<text  x="40.97" y="623.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_one (60 samples, 1.14%)</title><rect x="184.7" y="581" width="13.5" height="15.0" fill="rgb(244,37,7)" rx="2" ry="2" />
<text  x="187.74" y="591.5" ></text>
</g>
<g >
<title>seastar::do_until&lt;scanning_reader::fill_buffer (1 samples, 0.02%)</title><rect x="106.7" y="325" width="0.2" height="15.0" fill="rgb(245,47,20)" rx="2" ry="2" />
<text  x="109.66" y="335.5" ></text>
</g>
<g >
<title>seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;::swap (3 samples, 0.06%)</title><rect x="751.0" y="677" width="0.7" height="15.0" fill="rgb(242,121,28)" rx="2" ry="2" />
<text  x="754.02" y="687.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (1 samples, 0.02%)</title><rect x="699.3" y="741" width="0.3" height="15.0" fill="rgb(252,33,37)" rx="2" ry="2" />
<text  x="702.34" y="751.5" ></text>
</g>
<g >
<title>boost::algorithm::split&lt;std::vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, std::allocator&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; &gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;&amp;, boost::algorithm::detail::is_any_ofF&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="720.6" y="773" width="0.2" height="15.0" fill="rgb(245,190,46)" rx="2" ry="2" />
<text  x="723.60" y="783.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_nodes (1 samples, 0.02%)</title><rect x="1163.6" y="773" width="0.2" height="15.0" fill="rgb(220,182,20)" rx="2" ry="2" />
<text  x="1166.60" y="783.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;mutation_reader_merger::operator (4 samples, 0.08%)</title><rect x="305.1" y="629" width="0.9" height="15.0" fill="rgb(252,60,14)" rx="2" ry="2" />
<text  x="308.11" y="639.5" ></text>
</g>
<g >
<title>std::__lower_bound&lt;__gnu_cxx::__normal_iterator&lt;dht::token const*, std::vector&lt;dht::token, std::allocator&lt;dht::token&gt; &gt; &gt;, dht::token, __gnu_cxx::__ops::_Iter_less_val&gt; (1 samples, 0.02%)</title><rect x="1077.9" y="565" width="0.2" height="15.0" fill="rgb(224,102,42)" rx="2" ry="2" />
<text  x="1080.91" y="575.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_esft&lt;partition_snapshot&gt;::dispose (5 samples, 0.09%)</title><rect x="585.0" y="581" width="1.1" height="15.0" fill="rgb(223,22,4)" rx="2" ry="2" />
<text  x="588.01" y="591.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.29] (1 samples, 0.02%)</title><rect x="81.8" y="869" width="0.2" height="15.0" fill="rgb(247,101,1)" rx="2" ry="2" />
<text  x="84.82" y="879.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit_slot&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::walking_visitor&lt;row::for_each_cell&lt;(anonymous namespace)::write_row_cells&lt;ser::deletable_row__cells&lt;bytes_ostream&gt; &gt; (6 samples, 0.11%)</title><rect x="1135.0" y="421" width="1.3" height="15.0" fill="rgb(245,183,44)" rx="2" ry="2" />
<text  x="1137.96" y="431.5" ></text>
</g>
<g >
<title>multishard_combining_reader::fill_buffer (1 samples, 0.02%)</title><rect x="106.7" y="581" width="0.2" height="15.0" fill="rgb(234,114,7)" rx="2" ry="2" />
<text  x="109.66" y="591.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_data_request (216 samples, 4.10%)</title><rect x="997.8" y="613" width="48.3" height="15.0" fill="rgb(247,147,31)" rx="2" ry="2" />
<text  x="1000.81" y="623.5" >serv..</text>
</g>
<g >
<title>mutation::set_clustered_cell (3 samples, 0.06%)</title><rect x="874.8" y="597" width="0.6" height="15.0" fill="rgb(209,183,8)" rx="2" ry="2" />
<text  x="877.75" y="607.5" ></text>
</g>
<g >
<title>validation::validate_column_family (1 samples, 0.02%)</title><rect x="75.3" y="773" width="0.3" height="15.0" fill="rgb(205,166,20)" rx="2" ry="2" />
<text  x="78.33" y="783.5" ></text>
</g>
<g >
<title>db::schema_tables::do_merge_schema (2 samples, 0.04%)</title><rect x="106.2" y="805" width="0.5" height="15.0" fill="rgb(205,15,5)" rx="2" ry="2" />
<text  x="109.21" y="815.5" ></text>
</g>
<g >
<title>operator delete (7 samples, 0.13%)</title><rect x="574.9" y="629" width="1.6" height="15.0" fill="rgb(216,142,31)" rx="2" ry="2" />
<text  x="577.94" y="639.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;,  (26 samples, 0.49%)</title><rect x="735.4" y="725" width="5.8" height="15.0" fill="rgb(252,168,38)" rx="2" ry="2" />
<text  x="738.36" y="735.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="871.6" y="549" width="0.2" height="15.0" fill="rgb(247,214,40)" rx="2" ry="2" />
<text  x="874.62" y="559.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::impl (1 samples, 0.02%)</title><rect x="549.9" y="549" width="0.2" height="15.0" fill="rgb(241,54,39)" rx="2" ry="2" />
<text  x="552.88" y="559.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (2 samples, 0.04%)</title><rect x="572.0" y="661" width="0.5" height="15.0" fill="rgb(224,60,43)" rx="2" ry="2" />
<text  x="575.03" y="671.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::construct&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; const&amp;&gt; (1 samples, 0.02%)</title><rect x="42.0" y="597" width="0.2" height="15.0" fill="rgb(211,183,46)" rx="2" ry="2" />
<text  x="44.99" y="607.5" ></text>
</g>
<g >
<title>seastar::posix_file_impl::list_directory (1 samples, 0.02%)</title><rect x="867.1" y="789" width="0.3" height="15.0" fill="rgb(241,153,44)" rx="2" ry="2" />
<text  x="870.14" y="799.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (8 samples, 0.15%)</title><rect x="42.7" y="629" width="1.8" height="15.0" fill="rgb(249,6,0)" rx="2" ry="2" />
<text  x="45.67" y="639.5" ></text>
</g>
<g >
<title>mutation_reader_merger::mutation_reader_merger (1 samples, 0.02%)</title><rect x="478.1" y="629" width="0.2" height="15.0" fill="rgb(225,77,14)" rx="2" ry="2" />
<text  x="481.06" y="639.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;bool&gt;::take_value (1 samples, 0.02%)</title><rect x="784.6" y="645" width="0.2" height="15.0" fill="rgb(226,204,2)" rx="2" ry="2" />
<text  x="787.58" y="655.5" ></text>
</g>
<g >
<title>query::result_view::consume&lt;cql3::result_generator::query_result_visitor&lt;cql3::untyped_result_set::visitor&gt;&amp;&gt; (1 samples, 0.02%)</title><rect x="649.7" y="725" width="0.2" height="15.0" fill="rgb(249,184,14)" rx="2" ry="2" />
<text  x="652.67" y="735.5" ></text>
</g>
<g >
<title>operator new (7 samples, 0.13%)</title><rect x="1007.0" y="581" width="1.5" height="15.0" fill="rgb(247,114,6)" rx="2" ry="2" />
<text  x="1009.98" y="591.5" ></text>
</g>
<g >
<title>query_mutations_on_all_shards (2 samples, 0.04%)</title><rect x="106.7" y="661" width="0.4" height="15.0" fill="rgb(212,62,14)" rx="2" ry="2" />
<text  x="109.66" y="671.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.02%)</title><rect x="43.3" y="437" width="0.3" height="15.0" fill="rgb(229,81,35)" rx="2" ry="2" />
<text  x="46.34" y="447.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.08%)</title><rect x="696.2" y="789" width="0.9" height="15.0" fill="rgb(211,174,0)" rx="2" ry="2" />
<text  x="699.21" y="799.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (5 samples, 0.09%)</title><rect x="50.5" y="597" width="1.1" height="15.0" fill="rgb(242,195,48)" rx="2" ry="2" />
<text  x="53.50" y="607.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;compact_for_query&lt; (3 samples, 0.06%)</title><rect x="444.1" y="677" width="0.6" height="15.0" fill="rgb(209,49,25)" rx="2" ry="2" />
<text  x="447.05" y="687.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (35 samples, 0.66%)</title><rect x="1122.7" y="677" width="7.8" height="15.0" fill="rgb(238,30,26)" rx="2" ry="2" />
<text  x="1125.65" y="687.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (4 samples, 0.08%)</title><rect x="1093.1" y="693" width="0.9" height="15.0" fill="rgb(235,130,30)" rx="2" ry="2" />
<text  x="1096.12" y="703.5" ></text>
</g>
<g >
<title>query_mutation (1 samples, 0.02%)</title><rect x="108.0" y="677" width="0.2" height="15.0" fill="rgb(236,144,10)" rx="2" ry="2" />
<text  x="111.00" y="687.5" ></text>
</g>
<g >
<title>__vfprintf_internal (1 samples, 0.02%)</title><rect x="10.4" y="901" width="0.3" height="15.0" fill="rgb(228,214,13)" rx="2" ry="2" />
<text  x="13.45" y="911.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (40 samples, 0.76%)</title><rect x="1130.5" y="757" width="8.9" height="15.0" fill="rgb(232,138,3)" rx="2" ry="2" />
<text  x="1133.49" y="767.5" ></text>
</g>
<g >
<title>service::storage_service::join_cluster (1 samples, 0.02%)</title><rect x="16.7" y="853" width="0.2" height="15.0" fill="rgb(244,146,1)" rx="2" ry="2" />
<text  x="19.71" y="863.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::emplace_mutation_fragment (2 samples, 0.04%)</title><rect x="204.9" y="549" width="0.4" height="15.0" fill="rgb(239,112,18)" rx="2" ry="2" />
<text  x="207.88" y="559.5" ></text>
</g>
<g >
<title>tombstone::apply (2 samples, 0.04%)</title><rect x="420.8" y="517" width="0.4" height="15.0" fill="rgb(254,7,21)" rx="2" ry="2" />
<text  x="423.78" y="527.5" ></text>
</g>
<g >
<title>dht::split_range_to_single_shard (1 samples, 0.02%)</title><rect x="10.4" y="757" width="0.3" height="15.0" fill="rgb(249,185,13)" rx="2" ry="2" />
<text  x="13.45" y="767.5" ></text>
</g>
<g >
<title>logalloc::region_impl::free (1 samples, 0.02%)</title><rect x="78.5" y="629" width="0.2" height="15.0" fill="rgb(222,197,38)" rx="2" ry="2" />
<text  x="81.46" y="639.5" ></text>
</g>
<g >
<title>seastar::sprint&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; (5 samples, 0.09%)</title><rect x="17.8" y="821" width="1.1" height="15.0" fill="rgb(220,229,54)" rx="2" ry="2" />
<text  x="20.83" y="831.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;, service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (21 samples, 0.40%)</title><rect x="1133.6" y="597" width="4.7" height="15.0" fill="rgb(253,229,7)" rx="2" ry="2" />
<text  x="1136.62" y="607.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (2 samples, 0.04%)</title><rect x="54.7" y="517" width="0.5" height="15.0" fill="rgb(233,212,51)" rx="2" ry="2" />
<text  x="57.75" y="527.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, distributed_loader::process_sstable_dir (1 samples, 0.02%)</title><rect x="694.9" y="805" width="0.2" height="15.0" fill="rgb(250,211,7)" rx="2" ry="2" />
<text  x="697.87" y="815.5" ></text>
</g>
<g >
<title>std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt;::emplace_back&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; (1 samples, 0.02%)</title><rect x="267.1" y="453" width="0.2" height="15.0" fill="rgb(206,208,50)" rx="2" ry="2" />
<text  x="270.08" y="463.5" ></text>
</g>
<g >
<title>partition_entry::read (11 samples, 0.21%)</title><rect x="533.8" y="613" width="2.4" height="15.0" fill="rgb(235,169,13)" rx="2" ry="2" />
<text  x="536.77" y="623.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (1 samples, 0.02%)</title><rect x="1054.4" y="645" width="0.2" height="15.0" fill="rgb(218,3,15)" rx="2" ry="2" />
<text  x="1057.41" y="655.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (1 samples, 0.02%)</title><rect x="162.4" y="725" width="0.2" height="15.0" fill="rgb(242,189,19)" rx="2" ry="2" />
<text  x="165.37" y="735.5" ></text>
</g>
<g >
<title>cql3::raw_value_view::raw_value_view (1 samples, 0.02%)</title><rect x="915.5" y="645" width="0.2" height="15.0" fill="rgb(233,177,49)" rx="2" ry="2" />
<text  x="918.47" y="655.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.02%)</title><rect x="43.3" y="469" width="0.3" height="15.0" fill="rgb(213,57,47)" rx="2" ry="2" />
<text  x="46.34" y="479.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (1 samples, 0.02%)</title><rect x="55.2" y="533" width="0.2" height="15.0" fill="rgb(218,104,31)" rx="2" ry="2" />
<text  x="58.20" y="543.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (6 samples, 0.11%)</title><rect x="1094.9" y="709" width="1.4" height="15.0" fill="rgb(246,148,18)" rx="2" ry="2" />
<text  x="1097.91" y="719.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (1 samples, 0.02%)</title><rect x="709.9" y="741" width="0.2" height="15.0" fill="rgb(219,131,21)" rx="2" ry="2" />
<text  x="712.86" y="751.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS4_12restrictionsL11has_eq_nullERKNS4_13query_optionsERKNS5_10expressionEE3$_8EES8_SI_T_EUlRS7_E_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_8constantEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_11conjunctionEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_12column_valueEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_5tokenEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_13function_callEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_4castEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_15field_selectionEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_4nullEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_13bind_variableEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_16untyped_constantEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_17tuple_constructorEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_22collection_constructorEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSR_S6_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_S1V_SN_S1Z_S23_S27_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES2C_S2F_ (2 samples, 0.04%)</title><rect x="870.7" y="629" width="0.5" height="15.0" fill="rgb(219,72,3)" rx="2" ry="2" />
<text  x="873.72" y="639.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::set_urgent_state (1 samples, 0.02%)</title><rect x="675.8" y="773" width="0.3" height="15.0" fill="rgb(215,208,52)" rx="2" ry="2" />
<text  x="678.85" y="783.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::get0 (3 samples, 0.06%)</title><rect x="311.8" y="661" width="0.7" height="15.0" fill="rgb(220,16,21)" rx="2" ry="2" />
<text  x="314.82" y="671.5" ></text>
</g>
<g >
<title>utils::phased_barrier::start (1 samples, 0.02%)</title><rect x="1130.0" y="629" width="0.3" height="15.0" fill="rgb(253,226,9)" rx="2" ry="2" />
<text  x="1133.04" y="639.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::alloc (11 samples, 0.21%)</title><rect x="241.8" y="373" width="2.5" height="15.0" fill="rgb(250,122,6)" rx="2" ry="2" />
<text  x="244.79" y="383.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, cql3::statements::attach_service_level_statement*, false&gt;::_Head_base (1 samples, 0.02%)</title><rect x="62.1" y="613" width="0.3" height="15.0" fill="rgb(217,104,26)" rx="2" ry="2" />
<text  x="65.13" y="623.5" ></text>
</g>
<g >
<title>bound_view::from_range&lt;nonwrapping_interval&gt; (2 samples, 0.04%)</title><rect x="266.4" y="437" width="0.5" height="15.0" fill="rgb(249,54,21)" rx="2" ry="2" />
<text  x="269.41" y="447.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (14 samples, 0.27%)</title><rect x="78.7" y="869" width="3.1" height="15.0" fill="rgb(209,84,44)" rx="2" ry="2" />
<text  x="81.69" y="879.5" ></text>
</g>
<g >
<title>dht::ring_position_tri_compare (1 samples, 0.02%)</title><rect x="10.4" y="677" width="0.3" height="15.0" fill="rgb(225,95,43)" rx="2" ry="2" />
<text  x="13.45" y="687.5" ></text>
</g>
<g >
<title>multishard_combining_reader::fill_buffer (1 samples, 0.02%)</title><rect x="106.9" y="549" width="0.2" height="15.0" fill="rgb(206,229,18)" rx="2" ry="2" />
<text  x="109.88" y="559.5" ></text>
</g>
<g >
<title>multishard_combining_reader::handle_empty_reader_buffer (1 samples, 0.02%)</title><rect x="106.9" y="517" width="0.2" height="15.0" fill="rgb(228,137,8)" rx="2" ry="2" />
<text  x="109.88" y="527.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::on_new_range (49 samples, 0.93%)</title><rect x="205.3" y="549" width="11.0" height="15.0" fill="rgb(234,123,19)" rx="2" ry="2" />
<text  x="208.32" y="559.5" ></text>
</g>
<g >
<title>std::hash&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::operator (1 samples, 0.02%)</title><rect x="756.6" y="581" width="0.2" height="15.0" fill="rgb(231,216,22)" rx="2" ry="2" />
<text  x="759.62" y="591.5" ></text>
</g>
<g >
<title>read_page&lt;(anonymous namespace)::mutation_query_result_builder&gt; (1 samples, 0.02%)</title><rect x="105.8" y="661" width="0.2" height="15.0" fill="rgb(252,132,7)" rx="2" ry="2" />
<text  x="108.76" y="671.5" ></text>
</g>
<g >
<title>dht::ring_position::as_decorated_key (3 samples, 0.06%)</title><rect x="454.6" y="645" width="0.6" height="15.0" fill="rgb(235,132,22)" rx="2" ry="2" />
<text  x="457.57" y="655.5" ></text>
</g>
<g >
<title>schema::column_at (8 samples, 0.15%)</title><rect x="370.9" y="485" width="1.8" height="15.0" fill="rgb(227,139,43)" rx="2" ry="2" />
<text  x="373.89" y="495.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;auth::resource&gt;::_M_reset (1 samples, 0.02%)</title><rect x="820.4" y="597" width="0.2" height="15.0" fill="rgb(222,58,40)" rx="2" ry="2" />
<text  x="823.38" y="607.5" ></text>
</g>
<g >
<title>seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::expand (1 samples, 0.02%)</title><rect x="79.1" y="661" width="0.3" height="15.0" fill="rgb(225,178,49)" rx="2" ry="2" />
<text  x="82.14" y="671.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.02%)</title><rect x="630.4" y="677" width="0.3" height="15.0" fill="rgb(219,178,45)" rx="2" ry="2" />
<text  x="633.43" y="687.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::clear (2 samples, 0.04%)</title><rect x="826.4" y="645" width="0.5" height="15.0" fill="rgb(226,16,40)" rx="2" ry="2" />
<text  x="829.42" y="655.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (1 samples, 0.02%)</title><rect x="919.9" y="677" width="0.3" height="15.0" fill="rgb(232,158,45)" rx="2" ry="2" />
<text  x="922.95" y="687.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.02%)</title><rect x="58.1" y="453" width="0.2" height="15.0" fill="rgb(217,221,38)" rx="2" ry="2" />
<text  x="61.10" y="463.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_partition_key_range_concurrent (1 samples, 0.02%)</title><rect x="964.7" y="661" width="0.2" height="15.0" fill="rgb(206,122,19)" rx="2" ry="2" />
<text  x="967.69" y="671.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (2 samples, 0.04%)</title><rect x="647.7" y="789" width="0.4" height="15.0" fill="rgb(222,185,24)" rx="2" ry="2" />
<text  x="650.66" y="799.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;compact_for_query&lt; (11 samples, 0.21%)</title><rect x="436.4" y="581" width="2.5" height="15.0" fill="rgb(219,67,21)" rx="2" ry="2" />
<text  x="439.45" y="591.5" ></text>
</g>
<g >
<title>seastar::internal::awaiter&lt;void&gt;::await_suspend&lt;seastar::internal::coroutine_traits_base&lt;void&gt;::promise_type&gt; (1 samples, 0.02%)</title><rect x="723.5" y="805" width="0.2" height="15.0" fill="rgb(219,142,2)" rx="2" ry="2" />
<text  x="726.50" y="815.5" ></text>
</g>
<g >
<title>seastar::future&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry_ptr&gt;::then_impl&lt;utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (1 samples, 0.02%)</title><rect x="746.5" y="693" width="0.3" height="15.0" fill="rgb(213,111,45)" rx="2" ry="2" />
<text  x="749.55" y="703.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;void&gt;, database*, seastar::lw_shared_ptr&lt;schema const&gt;, frozen_mutation const&amp;, tracing::trace_state_ptr, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, seastar::bool_class&lt;db::force_sync_tag&gt; &gt;::do_flush (38 samples, 0.72%)</title><rect x="1122.0" y="789" width="8.5" height="15.0" fill="rgb(250,142,21)" rx="2" ry="2" />
<text  x="1124.98" y="799.5" ></text>
</g>
<g >
<title>std::__optional_hash_call_base&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, true&gt;::operator (2 samples, 0.04%)</title><rect x="823.5" y="581" width="0.5" height="15.0" fill="rgb(238,139,43)" rx="2" ry="2" />
<text  x="826.52" y="591.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::operator (1 samples, 0.02%)</title><rect x="184.5" y="581" width="0.2" height="15.0" fill="rgb(217,45,50)" rx="2" ry="2" />
<text  x="187.52" y="591.5" ></text>
</g>
<g >
<title>operator new (6 samples, 0.11%)</title><rect x="320.8" y="581" width="1.3" height="15.0" fill="rgb(208,155,16)" rx="2" ry="2" />
<text  x="323.77" y="591.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::push_mutation_fragment&lt;mutation_fragment&gt; (22 samples, 0.42%)</title><rect x="206.4" y="533" width="5.0" height="15.0" fill="rgb(249,191,8)" rx="2" ry="2" />
<text  x="209.44" y="543.5" ></text>
</g>
<g >
<title>database::query (14 samples, 0.27%)</title><rect x="102.2" y="805" width="3.1" height="15.0" fill="rgb(230,224,16)" rx="2" ry="2" />
<text  x="105.18" y="815.5" ></text>
</g>
<g >
<title>cql3::restrictions::partition_key_restrictions::needs_filtering (1 samples, 0.02%)</title><rect x="70.0" y="693" width="0.2" height="15.0" fill="rgb(206,32,51)" rx="2" ry="2" />
<text  x="72.96" y="703.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.04%)</title><rect x="38.4" y="581" width="0.5" height="15.0" fill="rgb(225,70,34)" rx="2" ry="2" />
<text  x="41.41" y="591.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql3::untyped_result_set&gt;::shared_ptr_count_for&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt;&amp;&gt; (1 samples, 0.02%)</title><rect x="649.7" y="773" width="0.2" height="15.0" fill="rgb(240,212,28)" rx="2" ry="2" />
<text  x="652.67" y="783.5" ></text>
</g>
<g >
<title>partition_snapshot::~partition_snapshot (1 samples, 0.02%)</title><rect x="584.8" y="581" width="0.2" height="15.0" fill="rgb(205,110,22)" rx="2" ry="2" />
<text  x="587.79" y="591.5" ></text>
</g>
<g >
<title>mutation_querier::prepare_writers (11 samples, 0.21%)</title><rect x="368.4" y="485" width="2.5" height="15.0" fill="rgb(248,44,36)" rx="2" ry="2" />
<text  x="371.43" y="495.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::do_wait_admission (49 samples, 0.93%)</title><rect x="1018.4" y="533" width="11.0" height="15.0" fill="rgb(223,149,43)" rx="2" ry="2" />
<text  x="1021.39" y="543.5" ></text>
</g>
<g >
<title>utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (33 samples, 0.63%)</title><rect x="803.2" y="517" width="7.3" height="15.0" fill="rgb(225,141,8)" rx="2" ry="2" />
<text  x="806.16" y="527.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_M_reset (1 samples, 0.02%)</title><rect x="933.8" y="677" width="0.2" height="15.0" fill="rgb(217,38,3)" rx="2" ry="2" />
<text  x="936.82" y="687.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;dht::decorated_key&gt;::_Optional_payload_base (1 samples, 0.02%)</title><rect x="336.0" y="597" width="0.2" height="15.0" fill="rgb(252,15,24)" rx="2" ry="2" />
<text  x="338.99" y="607.5" ></text>
</g>
<g >
<title>std::optional&lt;clustering_key_prefix&gt;::operator=&lt;clustering_key_prefix&amp;&gt; (1 samples, 0.02%)</title><rect x="422.4" y="533" width="0.2" height="15.0" fill="rgb(212,167,19)" rx="2" ry="2" />
<text  x="425.35" y="543.5" ></text>
</g>
<g >
<title>locator::token_metadata_impl::first_token_index (1 samples, 0.02%)</title><rect x="1078.1" y="581" width="0.3" height="15.0" fill="rgb(253,9,38)" rx="2" ry="2" />
<text  x="1081.13" y="591.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;, true&gt;::make&lt;seastar::lw_shared_ptr&lt;schema const&gt;&amp;, bool const&amp;&gt; (1 samples, 0.02%)</title><rect x="71.1" y="661" width="0.2" height="15.0" fill="rgb(246,81,47)" rx="2" ry="2" />
<text  x="74.08" y="671.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;db::commitlog::segment&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="1129.8" y="581" width="0.2" height="15.0" fill="rgb(210,118,54)" rx="2" ry="2" />
<text  x="1132.81" y="591.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::got_cl (1 samples, 0.02%)</title><rect x="702.7" y="773" width="0.2" height="15.0" fill="rgb(221,222,11)" rx="2" ry="2" />
<text  x="705.70" y="783.5" ></text>
</g>
<g >
<title>compaction_backlog_manager::backlog (2 samples, 0.04%)</title><rect x="1169.2" y="709" width="0.4" height="15.0" fill="rgb(222,61,37)" rx="2" ry="2" />
<text  x="1172.19" y="719.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="263.0" y="469" width="0.3" height="15.0" fill="rgb(244,39,47)" rx="2" ry="2" />
<text  x="266.05" y="479.5" ></text>
</g>
<g >
<title>utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::touch (1 samples, 0.02%)</title><rect x="750.4" y="629" width="0.2" height="15.0" fill="rgb(225,219,37)" rx="2" ry="2" />
<text  x="753.35" y="639.5" ></text>
</g>
<g >
<title>absl::hash_internal::AbslHashValue&lt;absl::hash_internal::HashState&gt; (3 samples, 0.06%)</title><rect x="853.3" y="645" width="0.6" height="15.0" fill="rgb(237,14,3)" rx="2" ry="2" />
<text  x="856.27" y="655.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.02%)</title><rect x="20.1" y="501" width="0.2" height="15.0" fill="rgb(247,97,6)" rx="2" ry="2" />
<text  x="23.07" y="511.5" ></text>
</g>
<g >
<title>position_in_partition_view::for_range_end (1 samples, 0.02%)</title><rect x="277.8" y="549" width="0.2" height="15.0" fill="rgb(234,116,19)" rx="2" ry="2" />
<text  x="280.82" y="559.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::set_urgent_state (3 samples, 0.06%)</title><rect x="651.0" y="789" width="0.7" height="15.0" fill="rgb(221,172,30)" rx="2" ry="2" />
<text  x="654.01" y="799.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, unsigned int, std::_Identity&lt;unsigned int&gt;, std::less&lt;unsigned int&gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;unsigned int&gt; &gt;::_M_lower_bound (1 samples, 0.02%)</title><rect x="36.6" y="581" width="0.2" height="15.0" fill="rgb(218,177,2)" rx="2" ry="2" />
<text  x="39.62" y="591.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::inet_address (1 samples, 0.02%)</title><rect x="1054.9" y="645" width="0.2" height="15.0" fill="rgb(229,190,46)" rx="2" ry="2" />
<text  x="1057.86" y="655.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_pausable_in_thread&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;sstables::sstable_writer&gt; &gt;, flat_mutation_reader::no_filter&gt; (14 samples, 0.27%)</title><rect x="78.7" y="805" width="3.1" height="15.0" fill="rgb(211,13,9)" rx="2" ry="2" />
<text  x="81.69" y="815.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.04%)</title><rect x="260.1" y="453" width="0.5" height="15.0" fill="rgb(228,75,33)" rx="2" ry="2" />
<text  x="263.14" y="463.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::value (17 samples, 0.32%)</title><rect x="51.8" y="597" width="3.8" height="15.0" fill="rgb(221,171,37)" rx="2" ry="2" />
<text  x="54.84" y="607.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.04%)</title><rect x="661.5" y="757" width="0.5" height="15.0" fill="rgb(211,25,5)" rx="2" ry="2" />
<text  x="664.53" y="767.5" ></text>
</g>
<g >
<title>__tls_init (1 samples, 0.02%)</title><rect x="202.9" y="533" width="0.2" height="15.0" fill="rgb(233,62,23)" rx="2" ry="2" />
<text  x="205.86" y="543.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="261.9" y="453" width="0.3" height="15.0" fill="rgb(213,48,40)" rx="2" ry="2" />
<text  x="264.93" y="463.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.04%)</title><rect x="1154.9" y="693" width="0.4" height="15.0" fill="rgb(218,44,23)" rx="2" ry="2" />
<text  x="1157.87" y="703.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (272 samples, 5.16%)</title><rect x="17.2" y="869" width="60.8" height="15.0" fill="rgb(239,0,20)" rx="2" ry="2" />
<text  x="20.16" y="879.5" >std::_..</text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (1 samples, 0.02%)</title><rect x="58.1" y="597" width="0.2" height="15.0" fill="rgb(226,129,1)" rx="2" ry="2" />
<text  x="61.10" y="607.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::remove_if&lt;row::compact_and_expire (53 samples, 1.00%)</title><rect x="407.6" y="485" width="11.8" height="15.0" fill="rgb(217,26,22)" rx="2" ry="2" />
<text  x="410.58" y="495.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_next_bkt (1 samples, 0.02%)</title><rect x="1158.0" y="757" width="0.2" height="15.0" fill="rgb(207,76,30)" rx="2" ry="2" />
<text  x="1161.01" y="767.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (2 samples, 0.04%)</title><rect x="659.5" y="757" width="0.5" height="15.0" fill="rgb(242,7,41)" rx="2" ry="2" />
<text  x="662.51" y="767.5" ></text>
</g>
<g >
<title>std::make_unique&lt;merging_reader&lt;mutation_reader_merger&gt;, seastar::lw_shared_ptr&lt;schema const&gt;&amp;, reader_permit, seastar::bool_class&lt;streamed_mutation::forwarding_tag&gt;&amp;, mutation_reader_merger&gt; (34 samples, 0.64%)</title><rect x="470.2" y="613" width="7.6" height="15.0" fill="rgb(251,215,45)" rx="2" ry="2" />
<text  x="473.23" y="623.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="210.2" y="485" width="0.3" height="15.0" fill="rgb(240,122,28)" rx="2" ry="2" />
<text  x="213.25" y="495.5" ></text>
</g>
<g >
<title>schema::column_at (7 samples, 0.13%)</title><rect x="417.4" y="469" width="1.6" height="15.0" fill="rgb(236,158,16)" rx="2" ry="2" />
<text  x="420.43" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (2 samples, 0.04%)</title><rect x="252.5" y="405" width="0.5" height="15.0" fill="rgb(230,102,44)" rx="2" ry="2" />
<text  x="255.53" y="415.5" ></text>
</g>
<g >
<title>cql3::raw_value::to_view (4 samples, 0.08%)</title><rect x="856.2" y="693" width="0.9" height="15.0" fill="rgb(231,72,32)" rx="2" ry="2" />
<text  x="859.18" y="703.5" ></text>
</g>
<g >
<title>boost::intrusive::bstree_impl&lt;boost::intrusive::mhtraits&lt;range_tombstone_entry, boost::intrusive::set_member_hook&lt;boost::intrusive::link_mode&lt; (2 samples, 0.04%)</title><rect x="581.7" y="597" width="0.4" height="15.0" fill="rgb(248,173,44)" rx="2" ry="2" />
<text  x="584.65" y="607.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="105.8" y="485" width="0.2" height="15.0" fill="rgb(234,107,29)" rx="2" ry="2" />
<text  x="108.76" y="495.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (4 samples, 0.08%)</title><rect x="867.4" y="805" width="0.9" height="15.0" fill="rgb(227,82,25)" rx="2" ry="2" />
<text  x="870.37" y="815.5" ></text>
</g>
<g >
<title>db::schema_tables::calculate_schema_digest (3 samples, 0.06%)</title><rect x="105.5" y="789" width="0.7" height="15.0" fill="rgb(224,135,7)" rx="2" ry="2" />
<text  x="108.54" y="799.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::operator (1 samples, 0.02%)</title><rect x="843.4" y="661" width="0.3" height="15.0" fill="rgb(219,132,4)" rx="2" ry="2" />
<text  x="846.43" y="671.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::set_startIndex (1 samples, 0.02%)</title><rect x="20.3" y="613" width="0.2" height="15.0" fill="rgb(235,206,9)" rx="2" ry="2" />
<text  x="23.29" y="623.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (5 samples, 0.09%)</title><rect x="550.3" y="549" width="1.1" height="15.0" fill="rgb(253,13,22)" rx="2" ry="2" />
<text  x="553.33" y="559.5" ></text>
</g>
<g >
<title>[unknown] (6 samples, 0.11%)</title><rect x="10.2" y="917" width="1.4" height="15.0" fill="rgb(245,221,40)" rx="2" ry="2" />
<text  x="13.22" y="927.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (221 samples, 4.19%)</title><rect x="220.5" y="533" width="49.5" height="15.0" fill="rgb(250,202,35)" rx="2" ry="2" />
<text  x="223.54" y="543.5" >part..</text>
</g>
<g >
<title>std::apply&lt;service::client_state::has_column_family_access (201 samples, 3.81%)</title><rect x="779.0" y="693" width="45.0" height="15.0" fill="rgb(252,160,50)" rx="2" ry="2" />
<text  x="781.99" y="703.5" >std:..</text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::attach_service_level_statement, std::default_delete&lt;cql3::statements::attach_service_level_statement&gt; &gt;::__uniq_ptr_impl (1 samples, 0.02%)</title><rect x="62.1" y="645" width="0.3" height="15.0" fill="rgb(239,11,8)" rx="2" ry="2" />
<text  x="65.13" y="655.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;void&gt;  (1 samples, 0.02%)</title><rect x="16.5" y="645" width="0.2" height="15.0" fill="rgb(214,152,28)" rx="2" ry="2" />
<text  x="19.49" y="655.5" ></text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (1 samples, 0.02%)</title><rect x="12.5" y="885" width="0.2" height="15.0" fill="rgb(234,133,4)" rx="2" ry="2" />
<text  x="15.46" y="895.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::fetch (3 samples, 0.06%)</title><rect x="869.2" y="773" width="0.6" height="15.0" fill="rgb(215,13,10)" rx="2" ry="2" />
<text  x="872.16" y="783.5" ></text>
</g>
<g >
<title>query::result_set::from_raw_result (1 samples, 0.02%)</title><rect x="107.3" y="773" width="0.3" height="15.0" fill="rgb(225,96,22)" rx="2" ry="2" />
<text  x="110.33" y="783.5" ></text>
</g>
<g >
<title>logalloc::region_impl::alloc_small (1 samples, 0.02%)</title><rect x="1124.0" y="389" width="0.2" height="15.0" fill="rgb(207,158,40)" rx="2" ry="2" />
<text  x="1127.00" y="399.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (1 samples, 0.02%)</title><rect x="224.8" y="437" width="0.2" height="15.0" fill="rgb(215,28,48)" rx="2" ry="2" />
<text  x="227.79" y="447.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::clear (4 samples, 0.08%)</title><rect x="665.3" y="789" width="0.9" height="15.0" fill="rgb(217,186,22)" rx="2" ry="2" />
<text  x="668.33" y="799.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (1 samples, 0.02%)</title><rect x="10.4" y="629" width="0.3" height="15.0" fill="rgb(214,74,50)" rx="2" ry="2" />
<text  x="13.45" y="639.5" ></text>
</g>
<g >
<title>cql3::result_generator::visit&lt;cql3::untyped_result_set::visitor&gt; (1 samples, 0.02%)</title><rect x="649.7" y="741" width="0.2" height="15.0" fill="rgb(213,167,27)" rx="2" ry="2" />
<text  x="652.67" y="751.5" ></text>
</g>
<g >
<title>operator new (9 samples, 0.17%)</title><rect x="984.8" y="629" width="2.0" height="15.0" fill="rgb(223,99,44)" rx="2" ry="2" />
<text  x="987.83" y="639.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.02%)</title><rect x="20.1" y="581" width="0.2" height="15.0" fill="rgb(220,54,10)" rx="2" ry="2" />
<text  x="23.07" y="591.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (6 samples, 0.11%)</title><rect x="320.8" y="565" width="1.3" height="15.0" fill="rgb(218,49,6)" rx="2" ry="2" />
<text  x="323.77" y="575.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (1,064 samples, 20.17%)</title><rect x="883.5" y="757" width="238.0" height="15.0" fill="rgb(216,5,28)" rx="2" ry="2" />
<text  x="886.48" y="767.5" >seastar::noncopyable_function&lt;s..</text>
</g>
<g >
<title>cql3::statements::modification_statement::do_execute (28 samples, 0.53%)</title><rect x="870.5" y="741" width="6.3" height="15.0" fill="rgb(212,54,34)" rx="2" ry="2" />
<text  x="873.50" y="751.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::_M_check_len (1 samples, 0.02%)</title><rect x="49.4" y="565" width="0.2" height="15.0" fill="rgb(233,5,20)" rx="2" ry="2" />
<text  x="52.38" y="575.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::push_back (1 samples, 0.02%)</title><rect x="47.6" y="597" width="0.2" height="15.0" fill="rgb(246,154,53)" rx="2" ry="2" />
<text  x="50.59" y="607.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::unregister_inactive_read (1 samples, 0.02%)</title><rect x="106.9" y="437" width="0.2" height="15.0" fill="rgb(228,94,52)" rx="2" ry="2" />
<text  x="109.88" y="447.5" ></text>
</g>
<g >
<title>cql3::query_options::prepare (1 samples, 0.02%)</title><rect x="731.1" y="757" width="0.2" height="15.0" fill="rgb(238,163,17)" rx="2" ry="2" />
<text  x="734.11" y="767.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (1 samples, 0.02%)</title><rect x="711.9" y="725" width="0.2" height="15.0" fill="rgb(254,7,2)" rx="2" ry="2" />
<text  x="714.87" y="735.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate (1 samples, 0.02%)</title><rect x="875.6" y="597" width="0.3" height="15.0" fill="rgb(220,215,28)" rx="2" ry="2" />
<text  x="878.65" y="607.5" ></text>
</g>
<g >
<title>std::uniform_int_distribution&lt;unsigned long&gt;::operator (8 samples, 0.15%)</title><rect x="864.5" y="757" width="1.7" height="15.0" fill="rgb(207,5,21)" rx="2" ry="2" />
<text  x="867.46" y="767.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="336.2" y="613" width="0.2" height="15.0" fill="rgb(236,161,19)" rx="2" ry="2" />
<text  x="339.21" y="623.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;reader_concurrency_semaphore::entry&gt;::_M_reset (2 samples, 0.04%)</title><rect x="134.2" y="693" width="0.4" height="15.0" fill="rgb(215,1,14)" rx="2" ry="2" />
<text  x="137.18" y="703.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume_in_thread&lt;sstables::sstable_writer&gt; (14 samples, 0.27%)</title><rect x="78.7" y="853" width="3.1" height="15.0" fill="rgb(233,56,40)" rx="2" ry="2" />
<text  x="81.69" y="863.5" ></text>
</g>
<g >
<title>sstables::file_writer::write (1 samples, 0.02%)</title><rect x="80.9" y="757" width="0.2" height="15.0" fill="rgb(230,172,54)" rx="2" ry="2" />
<text  x="83.93" y="767.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::get_promise (1 samples, 0.02%)</title><rect x="1037.0" y="565" width="0.2" height="15.0" fill="rgb(244,78,0)" rx="2" ry="2" />
<text  x="1039.96" y="575.5" ></text>
</g>
<g >
<title>db::is_serial_consistency (1 samples, 0.02%)</title><rect x="1121.1" y="741" width="0.2" height="15.0" fill="rgb(242,129,11)" rx="2" ry="2" />
<text  x="1124.09" y="751.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (1 samples, 0.02%)</title><rect x="831.8" y="597" width="0.2" height="15.0" fill="rgb(215,88,39)" rx="2" ry="2" />
<text  x="834.79" y="607.5" ></text>
</g>
<g >
<title>dht::shard_of (4 samples, 0.08%)</title><rect x="1004.3" y="581" width="0.9" height="15.0" fill="rgb(243,198,41)" rx="2" ry="2" />
<text  x="1007.30" y="591.5" ></text>
</g>
<g >
<title>service::storage_proxy::new_read_repair_decision (2 samples, 0.04%)</title><rect x="1089.1" y="661" width="0.4" height="15.0" fill="rgb(224,176,46)" rx="2" ry="2" />
<text  x="1092.09" y="671.5" ></text>
</g>
<g >
<title>service::abstract_read_resolver::abstract_read_resolver (26 samples, 0.49%)</title><rect x="988.2" y="597" width="5.8" height="15.0" fill="rgb(241,79,19)" rx="2" ry="2" />
<text  x="991.19" y="607.5" ></text>
</g>
<g >
<title>std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt;::_M_realloc_insert&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; (1 samples, 0.02%)</title><rect x="288.6" y="517" width="0.2" height="15.0" fill="rgb(212,32,22)" rx="2" ry="2" />
<text  x="291.56" y="527.5" ></text>
</g>
<g >
<title>bytes_ostream::alloc_new (1 samples, 0.02%)</title><rect x="1137.2" y="453" width="0.2" height="15.0" fill="rgb(207,199,51)" rx="2" ry="2" />
<text  x="1140.20" y="463.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (2 samples, 0.04%)</title><rect x="38.4" y="629" width="0.5" height="15.0" fill="rgb(244,111,11)" rx="2" ry="2" />
<text  x="41.41" y="639.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;compact_mutation_state&lt; (12 samples, 0.23%)</title><rect x="626.8" y="725" width="2.7" height="15.0" fill="rgb(223,197,5)" rx="2" ry="2" />
<text  x="629.85" y="735.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::set_callback (2 samples, 0.04%)</title><rect x="721.9" y="805" width="0.5" height="15.0" fill="rgb(225,154,46)" rx="2" ry="2" />
<text  x="724.94" y="815.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_push_back_aux&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (6 samples, 0.11%)</title><rect x="23.6" y="565" width="1.4" height="15.0" fill="rgb(222,102,51)" rx="2" ry="2" />
<text  x="26.65" y="575.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_istream (1 samples, 0.02%)</title><rect x="47.8" y="613" width="0.2" height="15.0" fill="rgb(248,209,6)" rx="2" ry="2" />
<text  x="50.81" y="623.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="794.0" y="581" width="0.2" height="15.0" fill="rgb(217,150,1)" rx="2" ry="2" />
<text  x="796.98" y="591.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.02%)</title><rect x="23.6" y="533" width="0.3" height="15.0" fill="rgb(213,221,37)" rx="2" ry="2" />
<text  x="26.65" y="543.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::leaf_node::allocate (8 samples, 0.15%)</title><rect x="248.1" y="421" width="1.7" height="15.0" fill="rgb(226,177,54)" rx="2" ry="2" />
<text  x="251.06" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.06%)</title><rect x="1152.4" y="725" width="0.7" height="15.0" fill="rgb(223,193,34)" rx="2" ry="2" />
<text  x="1155.41" y="735.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="132.8" y="693" width="0.3" height="15.0" fill="rgb(221,223,50)" rx="2" ry="2" />
<text  x="135.83" y="703.5" ></text>
</g>
<g >
<title>_ZSt5applyIZN7seastar8internal12do_with_implIN4auth17role_or_anonymousEZNS3_15get_permissionsERKNS3_7serviceERKNS3_18authenticated_userERKNS3_8resourceEE3$_9JEEEDaOT_OT0_DpOT1_EUlDpOT_E_St5tupleIJOS4_EEEDcSG_SI_ (9 samples, 0.17%)</title><rect x="792.2" y="597" width="2.0" height="15.0" fill="rgb(253,112,38)" rx="2" ry="2" />
<text  x="795.19" y="607.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_Optional_payload_base (2 samples, 0.04%)</title><rect x="623.9" y="725" width="0.5" height="15.0" fill="rgb(247,15,5)" rx="2" ry="2" />
<text  x="626.94" y="735.5" ></text>
</g>
<g >
<title>std::pair&lt;auth::role_or_anonymous, auth::resource&gt;::pair (1 samples, 0.02%)</title><rect x="795.5" y="549" width="0.3" height="15.0" fill="rgb(242,201,44)" rx="2" ry="2" />
<text  x="798.55" y="559.5" ></text>
</g>
<g >
<title>db::schema_tables::calculate_schema_digest (3 samples, 0.06%)</title><rect x="105.5" y="805" width="0.7" height="15.0" fill="rgb(224,24,2)" rx="2" ry="2" />
<text  x="108.54" y="815.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::list_roles_statement, std::default_delete&lt;cql3::statements::list_roles_statement&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::statements::list_roles_statement&gt;, void&gt; (1 samples, 0.02%)</title><rect x="63.0" y="677" width="0.2" height="15.0" fill="rgb(229,74,8)" rx="2" ry="2" />
<text  x="66.03" y="687.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.02%)</title><rect x="55.2" y="389" width="0.2" height="15.0" fill="rgb(237,35,22)" rx="2" ry="2" />
<text  x="58.20" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.02%)</title><rect x="900.9" y="597" width="0.3" height="15.0" fill="rgb(227,101,46)" rx="2" ry="2" />
<text  x="903.93" y="607.5" ></text>
</g>
<g >
<title>posix_memalign (10 samples, 0.19%)</title><rect x="242.0" y="357" width="2.3" height="15.0" fill="rgb(228,53,53)" rx="2" ry="2" />
<text  x="245.02" y="367.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="936.3" y="645" width="0.2" height="15.0" fill="rgb(216,11,15)" rx="2" ry="2" />
<text  x="939.28" y="655.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.02%)</title><rect x="42.7" y="517" width="0.2" height="15.0" fill="rgb(240,32,34)" rx="2" ry="2" />
<text  x="45.67" y="527.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.02%)</title><rect x="55.2" y="437" width="0.2" height="15.0" fill="rgb(252,124,38)" rx="2" ry="2" />
<text  x="58.20" y="447.5" ></text>
</g>
<g >
<title>cql3::terminal::to_expression (1 samples, 0.02%)</title><rect x="870.7" y="581" width="0.2" height="15.0" fill="rgb(238,146,43)" rx="2" ry="2" />
<text  x="873.72" y="591.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::get_local_service (1 samples, 0.02%)</title><rect x="1038.1" y="565" width="0.2" height="15.0" fill="rgb(250,148,10)" rx="2" ry="2" />
<text  x="1041.08" y="575.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.02%)</title><rect x="863.6" y="709" width="0.2" height="15.0" fill="rgb(238,83,13)" rx="2" ry="2" />
<text  x="866.56" y="719.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (3 samples, 0.06%)</title><rect x="1155.5" y="709" width="0.7" height="15.0" fill="rgb(238,161,36)" rx="2" ry="2" />
<text  x="1158.54" y="719.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (3 samples, 0.06%)</title><rect x="76.5" y="549" width="0.6" height="15.0" fill="rgb(205,61,36)" rx="2" ry="2" />
<text  x="79.45" y="559.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;std::_List_iterator&lt;flat_mutation_reader&gt;, mutation_reader_merger::close (70 samples, 1.33%)</title><rect x="572.5" y="661" width="15.6" height="15.0" fill="rgb(234,221,28)" rx="2" ry="2" />
<text  x="575.48" y="671.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::~_Variant_storage (1 samples, 0.02%)</title><rect x="875.6" y="549" width="0.3" height="15.0" fill="rgb(211,199,23)" rx="2" ry="2" />
<text  x="878.65" y="559.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="19.2" y="757" width="0.2" height="15.0" fill="rgb(220,64,6)" rx="2" ry="2" />
<text  x="22.17" y="767.5" ></text>
</g>
<g >
<title>query::result_view::consume&lt;query::result_set_builder&amp;&gt; (1 samples, 0.02%)</title><rect x="107.8" y="661" width="0.2" height="15.0" fill="rgb(214,145,36)" rx="2" ry="2" />
<text  x="110.77" y="671.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (1 samples, 0.02%)</title><rect x="626.8" y="709" width="0.3" height="15.0" fill="rgb(229,117,30)" rx="2" ry="2" />
<text  x="629.85" y="719.5" ></text>
</g>
<g >
<title>bytes_ostream::alloc_new (9 samples, 0.17%)</title><rect x="612.1" y="693" width="2.0" height="15.0" fill="rgb(232,47,51)" rx="2" ry="2" />
<text  x="615.08" y="703.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql3::untyped_result_set&gt; &gt;, cql3::query_processor::execute_paged_internal (1 samples, 0.02%)</title><rect x="649.7" y="805" width="0.2" height="15.0" fill="rgb(238,156,50)" rx="2" ry="2" />
<text  x="652.67" y="815.5" ></text>
</g>
<g >
<title>fmt::v7::basic_printf_context&lt;fmt::v7::detail::buffer_appender&lt;char&gt;, char&gt;::format&lt;fmt::v7::printf_arg_formatter&lt;fmt::v7::detail::buffer_appender&lt;char&gt;, char&gt; &gt; (3 samples, 0.06%)</title><rect x="17.8" y="805" width="0.7" height="15.0" fill="rgb(250,123,19)" rx="2" ry="2" />
<text  x="20.83" y="815.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (2 samples, 0.04%)</title><rect x="44.7" y="613" width="0.4" height="15.0" fill="rgb(214,181,42)" rx="2" ry="2" />
<text  x="47.68" y="623.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_restrictions::size (1 samples, 0.02%)</title><rect x="891.5" y="725" width="0.3" height="15.0" fill="rgb(246,33,46)" rx="2" ry="2" />
<text  x="894.53" y="735.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (8 samples, 0.15%)</title><rect x="383.9" y="469" width="1.8" height="15.0" fill="rgb(218,159,19)" rx="2" ry="2" />
<text  x="386.87" y="479.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (2 samples, 0.04%)</title><rect x="44.7" y="533" width="0.4" height="15.0" fill="rgb(233,79,5)" rx="2" ry="2" />
<text  x="47.68" y="543.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_allocate_buckets (2 samples, 0.04%)</title><rect x="1154.9" y="709" width="0.4" height="15.0" fill="rgb(227,32,19)" rx="2" ry="2" />
<text  x="1157.87" y="719.5" ></text>
</g>
<g >
<title>compound_wrapper&lt;clustering_key_prefix, clustering_key_prefix_view&gt;::explode (1 samples, 0.02%)</title><rect x="1136.8" y="357" width="0.2" height="15.0" fill="rgb(234,20,47)" rx="2" ry="2" />
<text  x="1139.75" y="367.5" ></text>
</g>
<g >
<title>seastar::reactor::del_timer (1 samples, 0.02%)</title><rect x="134.0" y="677" width="0.2" height="15.0" fill="rgb(244,85,30)" rx="2" ry="2" />
<text  x="136.95" y="687.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_M_range_initialize&lt;cql3::expr::expression const*&gt; (2 samples, 0.04%)</title><rect x="70.4" y="549" width="0.5" height="15.0" fill="rgb(216,14,25)" rx="2" ry="2" />
<text  x="73.41" y="559.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (1 samples, 0.02%)</title><rect x="796.7" y="549" width="0.2" height="15.0" fill="rgb(242,48,53)" rx="2" ry="2" />
<text  x="799.67" y="559.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::deallocate (1 samples, 0.02%)</title><rect x="79.8" y="629" width="0.2" height="15.0" fill="rgb(226,90,52)" rx="2" ry="2" />
<text  x="82.81" y="639.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;partition_key, false, false&gt;::_Optional_base (1 samples, 0.02%)</title><rect x="1064.0" y="597" width="0.3" height="15.0" fill="rgb(226,55,23)" rx="2" ry="2" />
<text  x="1067.03" y="607.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (2 samples, 0.04%)</title><rect x="707.4" y="773" width="0.4" height="15.0" fill="rgb(228,171,16)" rx="2" ry="2" />
<text  x="710.39" y="783.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.02%)</title><rect x="587.0" y="613" width="0.2" height="15.0" fill="rgb(244,76,44)" rx="2" ry="2" />
<text  x="590.02" y="623.5" ></text>
</g>
<g >
<title>utils::array_search_gt (1 samples, 0.02%)</title><rect x="546.5" y="581" width="0.3" height="15.0" fill="rgb(207,186,39)" rx="2" ry="2" />
<text  x="549.53" y="591.5" ></text>
</g>
<g >
<title>intrusive_array&lt;memtable_entry&gt;::lower_bound&lt;dht::ring_position, dht::ring_position_comparator&gt; (44 samples, 0.83%)</title><rect x="492.4" y="613" width="9.8" height="15.0" fill="rgb(242,18,2)" rx="2" ry="2" />
<text  x="495.38" y="623.5" ></text>
</g>
<g >
<title>seastar::memory::stats (1 samples, 0.02%)</title><rect x="79.4" y="661" width="0.2" height="15.0" fill="rgb(241,74,54)" rx="2" ry="2" />
<text  x="82.36" y="671.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_clustering_bounds (2 samples, 0.04%)</title><rect x="873.0" y="677" width="0.4" height="15.0" fill="rgb(237,57,41)" rx="2" ry="2" />
<text  x="875.96" y="687.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::take (3 samples, 0.06%)</title><rect x="311.8" y="645" width="0.7" height="15.0" fill="rgb(219,154,29)" rx="2" ry="2" />
<text  x="314.82" y="655.5" ></text>
</g>
<g >
<title>seastar::lambda_task&lt;seastar::execution_stage::flush (2 samples, 0.04%)</title><rect x="85.0" y="821" width="0.4" height="15.0" fill="rgb(220,189,46)" rx="2" ry="2" />
<text  x="87.95" y="831.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::enqueue_waiter (37 samples, 0.70%)</title><rect x="1019.5" y="517" width="8.3" height="15.0" fill="rgb(205,188,0)" rx="2" ry="2" />
<text  x="1022.51" y="527.5" ></text>
</g>
<g >
<title>partition_builder::accept_row_cell (2 samples, 0.04%)</title><rect x="1127.1" y="533" width="0.5" height="15.0" fill="rgb(235,0,36)" rx="2" ry="2" />
<text  x="1130.13" y="543.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_nodes (5 samples, 0.09%)</title><rect x="671.8" y="757" width="1.1" height="15.0" fill="rgb(239,139,54)" rx="2" ry="2" />
<text  x="674.82" y="767.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::reset (1 samples, 0.02%)</title><rect x="19.8" y="677" width="0.3" height="15.0" fill="rgb(219,41,30)" rx="2" ry="2" />
<text  x="22.84" y="687.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_Optional_payload_base (1 samples, 0.02%)</title><rect x="1064.5" y="629" width="0.2" height="15.0" fill="rgb(214,1,43)" rx="2" ry="2" />
<text  x="1067.48" y="639.5" ></text>
</g>
<g >
<title>bytes_view_hasher::finalize (2 samples, 0.04%)</title><rect x="72.4" y="661" width="0.5" height="15.0" fill="rgb(212,167,31)" rx="2" ry="2" />
<text  x="75.42" y="671.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::revoke_statement, std::default_delete&lt;cql3::statements::revoke_statement&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="66.2" y="693" width="0.2" height="15.0" fill="rgb(254,83,52)" rx="2" ry="2" />
<text  x="69.16" y="703.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;compact_for_query&lt; (1 samples, 0.02%)</title><rect x="439.6" y="661" width="0.2" height="15.0" fill="rgb(209,205,35)" rx="2" ry="2" />
<text  x="442.58" y="671.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_clear (2 samples, 0.04%)</title><rect x="469.8" y="613" width="0.4" height="15.0" fill="rgb(217,209,47)" rx="2" ry="2" />
<text  x="472.78" y="623.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::operator (7 samples, 0.13%)</title><rect x="764.2" y="677" width="1.6" height="15.0" fill="rgb(240,4,40)" rx="2" ry="2" />
<text  x="767.22" y="687.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;dht::token, std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt;, std::allocator&lt;std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;dht::token&gt;, std::hash&lt;dht::token&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (26 samples, 0.49%)</title><rect x="1078.4" y="581" width="5.8" height="15.0" fill="rgb(210,101,43)" rx="2" ry="2" />
<text  x="1081.35" y="591.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="875.6" y="581" width="0.3" height="15.0" fill="rgb(212,199,7)" rx="2" ry="2" />
<text  x="878.65" y="591.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.02%)</title><rect x="24.8" y="501" width="0.2" height="15.0" fill="rgb(227,134,12)" rx="2" ry="2" />
<text  x="27.77" y="511.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; const*, nonwrapping_interval&lt;clustering_key_prefix&gt;*&gt; (2 samples, 0.04%)</title><rect x="1104.5" y="661" width="0.5" height="15.0" fill="rgb(211,63,47)" rx="2" ry="2" />
<text  x="1107.53" y="671.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.04%)</title><rect x="44.7" y="581" width="0.4" height="15.0" fill="rgb(246,222,25)" rx="2" ry="2" />
<text  x="47.68" y="591.5" ></text>
</g>
<g >
<title>_ZN7seastar8futurizeIvE22satisfy_with_result_ofIZZNS_6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE14then_impl_nrvoIZNS9_14discard_resultEvEUlDpOT_E_NS3_IvEEEET0_OT_ENKUlONS_8internal22promise_base_with_typeIvEERSE_ONS_12future_stateIS8_EEE_clESM_SN_SQ_EUlvE_EEvSM_SI_ (1 samples, 0.02%)</title><rect x="102.0" y="805" width="0.2" height="15.0" fill="rgb(206,148,12)" rx="2" ry="2" />
<text  x="104.96" y="815.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="633.3" y="677" width="0.3" height="15.0" fill="rgb(215,169,39)" rx="2" ry="2" />
<text  x="636.34" y="687.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::on_permit_created (2 samples, 0.04%)</title><rect x="1032.5" y="517" width="0.4" height="15.0" fill="rgb(251,133,53)" rx="2" ry="2" />
<text  x="1035.49" y="527.5" ></text>
</g>
<g >
<title>query::result_set_builder::accept_new_row (1 samples, 0.02%)</title><rect x="107.8" y="629" width="0.2" height="15.0" fill="rgb(243,9,51)" rx="2" ry="2" />
<text  x="110.77" y="639.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.02%)</title><rect x="16.5" y="805" width="0.2" height="15.0" fill="rgb(244,220,15)" rx="2" ry="2" />
<text  x="19.49" y="815.5" ></text>
</g>
<g >
<title>std::__find_if&lt;char*, __gnu_cxx::__ops::_Iter_pred&lt;boost::algorithm::detail::is_any_ofF&lt;char&gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="720.6" y="661" width="0.2" height="15.0" fill="rgb(211,75,7)" rx="2" ry="2" />
<text  x="723.60" y="671.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (1 samples, 0.02%)</title><rect x="695.5" y="453" width="0.3" height="15.0" fill="rgb(226,171,22)" rx="2" ry="2" />
<text  x="698.54" y="463.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::deallocate (6 samples, 0.11%)</title><rect x="579.2" y="597" width="1.3" height="15.0" fill="rgb(247,138,45)" rx="2" ry="2" />
<text  x="582.19" y="607.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_last_fragment_kind, 4ul&gt;::~small_vector (3 samples, 0.06%)</title><rect x="468.7" y="597" width="0.6" height="15.0" fill="rgb(235,136,50)" rx="2" ry="2" />
<text  x="471.67" y="607.5" ></text>
</g>
<g >
<title>main (4,858 samples, 92.11%)</title><rect x="83.4" y="917" width="1086.9" height="15.0" fill="rgb(206,84,0)" rx="2" ry="2" />
<text  x="86.39" y="927.5" >main</text>
</g>
<g >
<title>ser::column_view::c (1 samples, 0.02%)</title><rect x="106.0" y="741" width="0.2" height="15.0" fill="rgb(220,100,1)" rx="2" ry="2" />
<text  x="108.98" y="751.5" ></text>
</g>
<g >
<title>mutation_fragment::destroy_data (23 samples, 0.44%)</title><rect x="426.2" y="565" width="5.1" height="15.0" fill="rgb(246,37,33)" rx="2" ry="2" />
<text  x="429.15" y="575.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.02%)</title><rect x="695.5" y="581" width="0.3" height="15.0" fill="rgb(242,73,50)" rx="2" ry="2" />
<text  x="698.54" y="591.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_wrapped_common&lt;true, seastar::future&lt;void&gt;, service::storage_proxy::mutate_internal&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="1133.2" y="613" width="0.2" height="15.0" fill="rgb(227,149,26)" rx="2" ry="2" />
<text  x="1136.17" y="623.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (2 samples, 0.04%)</title><rect x="671.4" y="773" width="0.4" height="15.0" fill="rgb(207,149,16)" rx="2" ry="2" />
<text  x="674.37" y="783.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::_M_range_initialize&lt;nonwrapping_interval&lt;dht::ring_position&gt; const*&gt; (13 samples, 0.25%)</title><rect x="1041.2" y="565" width="2.9" height="15.0" fill="rgb(240,170,23)" rx="2" ry="2" />
<text  x="1044.21" y="575.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="778.3" y="661" width="0.2" height="15.0" fill="rgb(212,155,10)" rx="2" ry="2" />
<text  x="781.32" y="671.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::overflow (1 samples, 0.02%)</title><rect x="1189.6" y="933" width="0.2" height="15.0" fill="rgb(215,89,50)" rx="2" ry="2" />
<text  x="1192.55" y="943.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (1 samples, 0.02%)</title><rect x="100.4" y="757" width="0.2" height="15.0" fill="rgb(237,160,13)" rx="2" ry="2" />
<text  x="103.39" y="767.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_construct&lt;interval_bound&lt;dht::ring_position&gt; const&amp;&gt; (4 samples, 0.08%)</title><rect x="1043.2" y="533" width="0.9" height="15.0" fill="rgb(239,122,15)" rx="2" ry="2" />
<text  x="1046.23" y="543.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_destroy_data (1 samples, 0.02%)</title><rect x="108.0" y="597" width="0.2" height="15.0" fill="rgb(210,21,52)" rx="2" ry="2" />
<text  x="111.00" y="607.5" ></text>
</g>
<g >
<title>locator::effective_replication_map::get_natural_endpoints_without_node_being_replaced (60 samples, 1.14%)</title><rect x="1071.6" y="613" width="13.5" height="15.0" fill="rgb(241,31,27)" rx="2" ry="2" />
<text  x="1074.64" y="623.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (5 samples, 0.09%)</title><rect x="43.3" y="549" width="1.2" height="15.0" fill="rgb(216,117,41)" rx="2" ry="2" />
<text  x="46.34" y="559.5" ></text>
</g>
<g >
<title>seastar::reactor::kernel_submit_work_pollfn::poll (1 samples, 0.02%)</title><rect x="85.8" y="821" width="0.3" height="15.0" fill="rgb(216,44,7)" rx="2" ry="2" />
<text  x="88.85" y="831.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::do_fill_buffer (338 samples, 6.41%)</title><rect x="203.5" y="565" width="75.7" height="15.0" fill="rgb(208,69,38)" rx="2" ry="2" />
<text  x="206.53" y="575.5" >partitio..</text>
</g>
<g >
<title>_ZN7seastar6futureIvE9then_implIZZN5query12consume_pageIL19emit_only_live_rows1E20query_result_builderEEDaR20flat_mutation_readerNS_13lw_shared_ptrI22compact_mutation_stateIXT_EL20compact_for_sstables0EEEERKNS3_15partition_sliceEOT0_mjNSt6chrono10time_pointI8gc_clockNSJ_8durationIlSt5ratioILl1ELl1EEEEEEENUlP17mutation_fragmentE_clESS_EUlDpOT_E_NS0_ISt5tupleIJSt8optionalI21clustering_key_prefixEEEEEEESH_OT_ (1 samples, 0.02%)</title><rect x="332.4" y="677" width="0.2" height="15.0" fill="rgb(242,10,28)" rx="2" ry="2" />
<text  x="335.41" y="687.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.06%)</title><rect x="647.0" y="789" width="0.7" height="15.0" fill="rgb(225,138,21)" rx="2" ry="2" />
<text  x="649.99" y="799.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::lsa_partition_reader::maybe_refresh_state (1 samples, 0.02%)</title><rect x="80.0" y="597" width="0.3" height="15.0" fill="rgb(207,30,22)" rx="2" ry="2" />
<text  x="83.03" y="607.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;void&gt;::satisfy_with_result_of&lt;seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::then_wrapped_nrvo&lt;void, service::abstract_read_executor::make_data_requests (1 samples, 0.02%)</title><rect x="723.3" y="805" width="0.2" height="15.0" fill="rgb(214,162,11)" rx="2" ry="2" />
<text  x="726.28" y="815.5" ></text>
</g>
<g >
<title>seastar::internal::future_base::do_wait (1 samples, 0.02%)</title><rect x="17.6" y="821" width="0.2" height="15.0" fill="rgb(211,202,40)" rx="2" ry="2" />
<text  x="20.61" y="831.5" ></text>
</g>
<g >
<title>cql3::expr::(anonymous namespace)::explode_conjunction (2 samples, 0.04%)</title><rect x="70.4" y="597" width="0.5" height="15.0" fill="rgb(233,78,27)" rx="2" ry="2" />
<text  x="73.41" y="607.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::has_token (3 samples, 0.06%)</title><rect x="948.1" y="677" width="0.7" height="15.0" fill="rgb(253,121,18)" rx="2" ry="2" />
<text  x="951.14" y="687.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (7 samples, 0.13%)</title><rect x="1105.2" y="709" width="1.6" height="15.0" fill="rgb(216,162,52)" rx="2" ry="2" />
<text  x="1108.20" y="719.5" ></text>
</g>
<g >
<title>operator new (13 samples, 0.25%)</title><rect x="952.8" y="709" width="2.9" height="15.0" fill="rgb(248,13,4)" rx="2" ry="2" />
<text  x="955.84" y="719.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (2 samples, 0.04%)</title><rect x="606.9" y="709" width="0.5" height="15.0" fill="rgb(241,168,42)" rx="2" ry="2" />
<text  x="609.94" y="719.5" ></text>
</g>
<g >
<title>utils::timed_rate_moving_average_and_histogram::mark&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; (3 samples, 0.06%)</title><rect x="685.0" y="773" width="0.7" height="15.0" fill="rgb(207,39,4)" rx="2" ry="2" />
<text  x="688.02" y="783.5" ></text>
</g>
<g >
<title>ser::integral_serializer&lt;long&gt;::write&lt;bytes_ostream&gt; (1 samples, 0.02%)</title><rect x="1135.9" y="405" width="0.2" height="15.0" fill="rgb(233,52,29)" rx="2" ry="2" />
<text  x="1138.86" y="415.5" ></text>
</g>
<g >
<title>utils::config_file::named_value&lt;bool&gt;::the_value (1 samples, 0.02%)</title><rect x="1088.0" y="645" width="0.2" height="15.0" fill="rgb(206,62,14)" rx="2" ry="2" />
<text  x="1090.97" y="655.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::clone&lt;row::row (116 samples, 2.20%)</title><rect x="227.0" y="437" width="26.0" height="15.0" fill="rgb(232,146,8)" rx="2" ry="2" />
<text  x="230.03" y="447.5" >c..</text>
</g>
<g >
<title>std::locale::locale (1 samples, 0.02%)</title><rect x="11.3" y="901" width="0.3" height="15.0" fill="rgb(231,61,38)" rx="2" ry="2" />
<text  x="14.34" y="911.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (5 samples, 0.09%)</title><rect x="693.3" y="757" width="1.1" height="15.0" fill="rgb(221,55,21)" rx="2" ry="2" />
<text  x="696.30" y="767.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::emplace_back&lt;mutation_fragment&gt; (1 samples, 0.02%)</title><rect x="306.5" y="629" width="0.2" height="15.0" fill="rgb(254,69,24)" rx="2" ry="2" />
<text  x="309.45" y="639.5" ></text>
</g>
<g >
<title>query::result_set_builder::accept_new_row (1 samples, 0.02%)</title><rect x="107.3" y="725" width="0.3" height="15.0" fill="rgb(214,141,43)" rx="2" ry="2" />
<text  x="110.33" y="735.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::then_wrapped_nrvo&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (3 samples, 0.06%)</title><rect x="840.1" y="709" width="0.6" height="15.0" fill="rgb(224,127,5)" rx="2" ry="2" />
<text  x="843.07" y="719.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEE4$_44ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_45ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_43ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_46ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_47ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_48ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_49ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_50ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_51ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_52ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_53ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_54ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_55ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_56ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_57ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_58EERS4_IJNSF_11conjunctionENSF_15binary_operatorENSF_12column_valueENSF_5tokenENSF_21unresolved_identifierENSF_25column_mutation_attributeENSF_13function_callENSF_4castENSF_15field_selectionENSF_4nullENSF_13bind_variableENSF_16untyped_constantENSF_8constantENSF_17tuple_constructorENSF_22collection_constructorENSF_20usertype_constructorEEEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES16_S1O_ (2 samples, 0.04%)</title><rect x="871.6" y="645" width="0.5" height="15.0" fill="rgb(245,202,33)" rx="2" ry="2" />
<text  x="874.62" y="655.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="682.8" y="741" width="0.2" height="15.0" fill="rgb(217,85,48)" rx="2" ry="2" />
<text  x="685.78" y="751.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (1 samples, 0.02%)</title><rect x="735.1" y="693" width="0.3" height="15.0" fill="rgb(209,19,44)" rx="2" ry="2" />
<text  x="738.14" y="703.5" ></text>
</g>
<g >
<title>bplus::tree&lt;long, intrusive_array&lt;memtable_entry&gt;, dht::raw_token_less_comparator, 16ul,  (40 samples, 0.76%)</title><rect x="483.4" y="613" width="9.0" height="15.0" fill="rgb(205,156,9)" rx="2" ry="2" />
<text  x="486.43" y="623.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (3 samples, 0.06%)</title><rect x="54.7" y="565" width="0.7" height="15.0" fill="rgb(218,139,20)" rx="2" ry="2" />
<text  x="57.75" y="575.5" ></text>
</g>
<g >
<title>locator::token_metadata::get_endpoint (1 samples, 0.02%)</title><rect x="16.7" y="693" width="0.2" height="15.0" fill="rgb(217,95,29)" rx="2" ry="2" />
<text  x="19.71" y="703.5" ></text>
</g>
<g >
<title>compound_type&lt; (1 samples, 0.02%)</title><rect x="872.7" y="645" width="0.3" height="15.0" fill="rgb(228,51,16)" rx="2" ry="2" />
<text  x="875.74" y="655.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="167.5" y="725" width="0.2" height="15.0" fill="rgb(218,173,20)" rx="2" ry="2" />
<text  x="170.51" y="735.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (7 samples, 0.13%)</title><rect x="38.4" y="645" width="1.6" height="15.0" fill="rgb(217,24,17)" rx="2" ry="2" />
<text  x="41.41" y="655.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::drop_keyspace_statement, std::default_delete&lt;cql3::statements::drop_keyspace_statement&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="61.9" y="677" width="0.2" height="15.0" fill="rgb(254,136,10)" rx="2" ry="2" />
<text  x="64.91" y="687.5" ></text>
</g>
<g >
<title>row::row (1 samples, 0.02%)</title><rect x="106.7" y="85" width="0.2" height="15.0" fill="rgb(249,28,48)" rx="2" ry="2" />
<text  x="109.66" y="95.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (2 samples, 0.04%)</title><rect x="45.1" y="565" width="0.5" height="15.0" fill="rgb(207,141,16)" rx="2" ry="2" />
<text  x="48.13" y="575.5" ></text>
</g>
<g >
<title>write_tombstones&lt;ser::mutation_partition__range_tombstones&lt;bytes_ostream&gt; &gt; (1 samples, 0.02%)</title><rect x="1137.0" y="453" width="0.2" height="15.0" fill="rgb(246,98,8)" rx="2" ry="2" />
<text  x="1139.97" y="463.5" ></text>
</g>
<g >
<title>basic_atomic_cell_view&lt; (1 samples, 0.02%)</title><rect x="107.6" y="597" width="0.2" height="15.0" fill="rgb(215,169,45)" rx="2" ry="2" />
<text  x="110.55" y="607.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (2 samples, 0.04%)</title><rect x="971.0" y="629" width="0.4" height="15.0" fill="rgb(220,59,43)" rx="2" ry="2" />
<text  x="973.96" y="639.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt; (1 samples, 0.02%)</title><rect x="870.9" y="597" width="0.3" height="15.0" fill="rgb(237,31,16)" rx="2" ry="2" />
<text  x="873.95" y="607.5" ></text>
</g>
<g >
<title>partition_snapshot::version_count (2 samples, 0.04%)</title><rect x="264.4" y="453" width="0.4" height="15.0" fill="rgb(244,15,33)" rx="2" ry="2" />
<text  x="267.39" y="463.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (2 samples, 0.04%)</title><rect x="604.9" y="709" width="0.5" height="15.0" fill="rgb(252,85,15)" rx="2" ry="2" />
<text  x="607.92" y="719.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::_Copy_ctor_base (5 samples, 0.09%)</title><rect x="355.2" y="485" width="1.1" height="15.0" fill="rgb(221,13,1)" rx="2" ry="2" />
<text  x="358.23" y="495.5" ></text>
</g>
<g >
<title>bplus::searcher&lt;dht::ring_position, long, dht::raw_token_less_comparator, 16ul,  (2 samples, 0.04%)</title><rect x="483.4" y="597" width="0.5" height="15.0" fill="rgb(248,176,22)" rx="2" ry="2" />
<text  x="486.43" y="607.5" ></text>
</g>
<g >
<title>schema::~schema (1 samples, 0.02%)</title><rect x="16.5" y="533" width="0.2" height="15.0" fill="rgb(250,5,2)" rx="2" ry="2" />
<text  x="19.49" y="543.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_M_reset (1 samples, 0.02%)</title><rect x="796.2" y="565" width="0.2" height="15.0" fill="rgb(215,208,52)" rx="2" ry="2" />
<text  x="799.22" y="575.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::future (1 samples, 0.02%)</title><rect x="765.3" y="661" width="0.3" height="15.0" fill="rgb(210,64,52)" rx="2" ry="2" />
<text  x="768.34" y="671.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::reset&lt;cql3_parser::CqlParser&gt; (1 samples, 0.02%)</title><rect x="19.8" y="661" width="0.3" height="15.0" fill="rgb(242,228,29)" rx="2" ry="2" />
<text  x="22.84" y="671.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (2 samples, 0.04%)</title><rect x="268.0" y="469" width="0.4" height="15.0" fill="rgb(229,65,7)" rx="2" ry="2" />
<text  x="270.97" y="479.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.06%)</title><rect x="519.7" y="501" width="0.6" height="15.0" fill="rgb(228,214,2)" rx="2" ry="2" />
<text  x="522.68" y="511.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (1 samples, 0.02%)</title><rect x="557.5" y="693" width="0.2" height="15.0" fill="rgb(234,212,46)" rx="2" ry="2" />
<text  x="560.49" y="703.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;, service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (20 samples, 0.38%)</title><rect x="1133.6" y="565" width="4.5" height="15.0" fill="rgb(218,161,9)" rx="2" ry="2" />
<text  x="1136.62" y="575.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::close (82 samples, 1.55%)</title><rect x="570.7" y="693" width="18.3" height="15.0" fill="rgb(248,202,46)" rx="2" ry="2" />
<text  x="573.69" y="703.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt;::~_Variant_storage (2 samples, 0.04%)</title><rect x="912.1" y="597" width="0.5" height="15.0" fill="rgb(248,149,49)" rx="2" ry="2" />
<text  x="915.12" y="607.5" ></text>
</g>
<g >
<title>query::result_view::consume&lt;query::result_set_builder&amp;&gt; (1 samples, 0.02%)</title><rect x="107.8" y="645" width="0.2" height="15.0" fill="rgb(236,149,37)" rx="2" ry="2" />
<text  x="110.77" y="655.5" ></text>
</g>
<g >
<title>std::apply&lt;service::storage_proxy::query_nonsingular_mutations_locally (2 samples, 0.04%)</title><rect x="106.7" y="677" width="0.4" height="15.0" fill="rgb(248,78,54)" rx="2" ry="2" />
<text  x="109.66" y="687.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::leaf_node::free (2 samples, 0.04%)</title><rect x="430.4" y="517" width="0.5" height="15.0" fill="rgb(211,165,27)" rx="2" ry="2" />
<text  x="433.41" y="527.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="524.4" y="485" width="0.2" height="15.0" fill="rgb(206,43,54)" rx="2" ry="2" />
<text  x="527.38" y="495.5" ></text>
</g>
<g >
<title>dht::i_partitioner::decorate_key (1 samples, 0.02%)</title><rect x="1123.8" y="533" width="0.2" height="15.0" fill="rgb(235,152,19)" rx="2" ry="2" />
<text  x="1126.77" y="543.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::has_slice_or_needs_filtering (3 samples, 0.06%)</title><rect x="947.0" y="677" width="0.7" height="15.0" fill="rgb(247,136,40)" rx="2" ry="2" />
<text  x="950.02" y="687.5" ></text>
</g>
<g >
<title>cql3::statements::prepared_statement::checked_weak_from_this (7 samples, 0.13%)</title><rect x="733.8" y="725" width="1.6" height="15.0" fill="rgb(247,13,29)" rx="2" ry="2" />
<text  x="736.80" y="735.5" ></text>
</g>
<g >
<title>query::partition_slice::row_ranges (2 samples, 0.04%)</title><rect x="538.7" y="629" width="0.4" height="15.0" fill="rgb(230,44,26)" rx="2" ry="2" />
<text  x="541.70" y="639.5" ></text>
</g>
<g >
<title>reader_permit::consume_memory (5 samples, 0.09%)</title><rect x="523.5" y="501" width="1.1" height="15.0" fill="rgb(225,96,53)" rx="2" ry="2" />
<text  x="526.48" y="511.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::get_limit (2 samples, 0.04%)</title><rect x="1096.3" y="725" width="0.4" height="15.0" fill="rgb(229,41,19)" rx="2" ry="2" />
<text  x="1099.25" y="735.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::relationType (1 samples, 0.02%)</title><rect x="58.1" y="629" width="0.2" height="15.0" fill="rgb(222,153,34)" rx="2" ry="2" />
<text  x="61.10" y="639.5" ></text>
</g>
<g >
<title>utils::phased_barrier::operation::~operation (1 samples, 0.02%)</title><rect x="105.1" y="789" width="0.2" height="15.0" fill="rgb(210,54,45)" rx="2" ry="2" />
<text  x="108.09" y="799.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (3 samples, 0.06%)</title><rect x="814.1" y="533" width="0.7" height="15.0" fill="rgb(219,61,18)" rx="2" ry="2" />
<text  x="817.12" y="543.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;::lru_entry, boost::intrusive::list_node_traits&lt;void*&gt;,  (2 samples, 0.04%)</title><rect x="740.7" y="693" width="0.5" height="15.0" fill="rgb(206,170,33)" rx="2" ry="2" />
<text  x="743.73" y="703.5" ></text>
</g>
<g >
<title>tests::random::get_int&lt;unsigned long&gt; (8 samples, 0.15%)</title><rect x="864.5" y="773" width="1.7" height="15.0" fill="rgb(238,106,16)" rx="2" ry="2" />
<text  x="867.46" y="783.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::disable_abort_on_alloc_failure_temporarily (1 samples, 0.02%)</title><rect x="273.8" y="501" width="0.2" height="15.0" fill="rgb(234,195,5)" rx="2" ry="2" />
<text  x="276.79" y="511.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (14 samples, 0.27%)</title><rect x="498.0" y="501" width="3.1" height="15.0" fill="rgb(210,150,48)" rx="2" ry="2" />
<text  x="500.97" y="511.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::local (3 samples, 0.06%)</title><rect x="847.2" y="725" width="0.7" height="15.0" fill="rgb(254,226,45)" rx="2" ry="2" />
<text  x="850.23" y="735.5" ></text>
</g>
<g >
<title>operator new (8 samples, 0.15%)</title><rect x="792.2" y="581" width="1.8" height="15.0" fill="rgb(241,131,16)" rx="2" ry="2" />
<text  x="795.19" y="591.5" ></text>
</g>
<g >
<title>list_reader_selector::~list_reader_selector (1 samples, 0.02%)</title><rect x="593.7" y="661" width="0.3" height="15.0" fill="rgb(224,161,38)" rx="2" ry="2" />
<text  x="596.74" y="671.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_prepared (435 samples, 8.25%)</title><rect x="741.6" y="741" width="97.4" height="15.0" fill="rgb(218,158,13)" rx="2" ry="2" />
<text  x="744.63" y="751.5" >cql3::query..</text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.02%)</title><rect x="1121.8" y="757" width="0.2" height="15.0" fill="rgb(232,30,32)" rx="2" ry="2" />
<text  x="1124.76" y="767.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (2 samples, 0.04%)</title><rect x="1051.7" y="565" width="0.5" height="15.0" fill="rgb(249,210,52)" rx="2" ry="2" />
<text  x="1054.73" y="575.5" ></text>
</g>
<g >
<title>compound_type&lt; (8 samples, 0.15%)</title><rect x="924.6" y="661" width="1.8" height="15.0" fill="rgb(209,31,42)" rx="2" ry="2" />
<text  x="927.65" y="671.5" ></text>
</g>
<g >
<title>cql3::constants::value::get (1 samples, 0.02%)</title><rect x="870.7" y="565" width="0.2" height="15.0" fill="rgb(249,132,42)" rx="2" ry="2" />
<text  x="873.72" y="575.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.04%)</title><rect x="42.7" y="533" width="0.4" height="15.0" fill="rgb(252,106,28)" rx="2" ry="2" />
<text  x="45.67" y="543.5" ></text>
</g>
<g >
<title>database::find_schema (25 samples, 0.47%)</title><rect x="767.1" y="709" width="5.6" height="15.0" fill="rgb(207,36,17)" rx="2" ry="2" />
<text  x="770.13" y="719.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_requests (1 samples, 0.02%)</title><rect x="964.7" y="629" width="0.2" height="15.0" fill="rgb(233,124,53)" rx="2" ry="2" />
<text  x="967.69" y="639.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_d36847801b836ea118d696d8a8ab9431a1179ab0] (1 samples, 0.02%)</title><rect x="383.6" y="469" width="0.3" height="15.0" fill="rgb(247,4,30)" rx="2" ry="2" />
<text  x="386.64" y="479.5" ></text>
</g>
<g >
<title>std::construct_at&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="49.6" y="469" width="0.2" height="15.0" fill="rgb(232,206,6)" rx="2" ry="2" />
<text  x="52.60" y="479.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::operation::set_value, std::default_delete&lt;cql3::operation::set_value&gt;, true, true&gt;::__uniq_ptr_impl (1 samples, 0.02%)</title><rect x="57.0" y="581" width="0.2" height="15.0" fill="rgb(215,176,17)" rx="2" ry="2" />
<text  x="59.99" y="591.5" ></text>
</g>
<g >
<title>perf_simple_que (5,274 samples, 100.00%)</title><rect x="10.0" y="949" width="1180.0" height="15.0" fill="rgb(226,216,13)" rx="2" ry="2" />
<text  x="13.00" y="959.5" >perf_simple_que</text>
</g>
<g >
<title>allocation_strategy::destroy&lt;rows_entry&gt; (1 samples, 0.02%)</title><rect x="78.5" y="709" width="0.2" height="15.0" fill="rgb(220,13,44)" rx="2" ry="2" />
<text  x="81.46" y="719.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_destroy_data_aux (1 samples, 0.02%)</title><rect x="404.7" y="469" width="0.2" height="15.0" fill="rgb(247,7,7)" rx="2" ry="2" />
<text  x="407.68" y="479.5" ></text>
</g>
<g >
<title>mutation_fragment::operator= (3 samples, 0.06%)</title><rect x="193.2" y="533" width="0.7" height="15.0" fill="rgb(244,49,43)" rx="2" ry="2" />
<text  x="196.24" y="543.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::query_options, std::default_delete&lt;cql3::query_options&gt; &gt;::~unique_ptr (2 samples, 0.04%)</title><rect x="854.4" y="741" width="0.4" height="15.0" fill="rgb(250,181,6)" rx="2" ry="2" />
<text  x="857.39" y="751.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_read_executor (189 samples, 3.58%)</title><rect x="1046.8" y="661" width="42.3" height="15.0" fill="rgb(230,71,32)" rx="2" ry="2" />
<text  x="1049.81" y="671.5" >ser..</text>
</g>
<g >
<title>seastar::preempt_io_context::reset_preemption_monitor (2 samples, 0.04%)</title><rect x="1140.6" y="805" width="0.4" height="15.0" fill="rgb(230,6,17)" rx="2" ry="2" />
<text  x="1143.55" y="815.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::_M_realloc_insert&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; (3 samples, 0.06%)</title><rect x="49.4" y="581" width="0.6" height="15.0" fill="rgb(234,22,25)" rx="2" ry="2" />
<text  x="52.38" y="591.5" ></text>
</g>
<g >
<title>database::find_keyspace (1 samples, 0.02%)</title><rect x="969.6" y="661" width="0.2" height="15.0" fill="rgb(240,206,42)" rx="2" ry="2" />
<text  x="972.62" y="671.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql3::column_identifier&gt;::shared_ptr_count_for&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const&amp;, bool&gt; (1 samples, 0.02%)</title><rect x="67.1" y="693" width="0.2" height="15.0" fill="rgb(230,105,34)" rx="2" ry="2" />
<text  x="70.05" y="703.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (2 samples, 0.04%)</title><rect x="254.1" y="453" width="0.4" height="15.0" fill="rgb(210,34,13)" rx="2" ry="2" />
<text  x="257.10" y="463.5" ></text>
</g>
<g >
<title>seastar::promise&lt;void&gt;::promise (3 samples, 0.06%)</title><rect x="1021.5" y="485" width="0.7" height="15.0" fill="rgb(217,187,47)" rx="2" ry="2" />
<text  x="1024.52" y="495.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;query::result&gt;::make&lt;query::result&gt; (4 samples, 0.08%)</title><rect x="619.7" y="741" width="0.9" height="15.0" fill="rgb(254,176,15)" rx="2" ry="2" />
<text  x="622.69" y="751.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.02%)</title><rect x="630.7" y="693" width="0.2" height="15.0" fill="rgb(230,183,12)" rx="2" ry="2" />
<text  x="633.65" y="703.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unimplemented::cause, std::pair&lt;unimplemented::cause const, bool&gt;, std::allocator&lt;std::pair&lt;unimplemented::cause const, bool&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unimplemented::cause&gt;, std::hash&lt;unimplemented::cause&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (2 samples, 0.04%)</title><rect x="876.3" y="613" width="0.5" height="15.0" fill="rgb(228,193,12)" rx="2" ry="2" />
<text  x="879.32" y="623.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (509 samples, 9.65%)</title><rect x="330.8" y="693" width="113.9" height="15.0" fill="rgb(226,111,12)" rx="2" ry="2" />
<text  x="333.84" y="703.5" >query::consume..</text>
</g>
<g >
<title>ser::serializer&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;::write_fragmented&lt;bytes_ostream, fragment_range&lt;managed_bytes_basic_view&lt; (14 samples, 0.27%)</title><rect x="392.8" y="469" width="3.1" height="15.0" fill="rgb(234,59,42)" rx="2" ry="2" />
<text  x="395.82" y="479.5" ></text>
</g>
<g >
<title>partition_snapshot_row_cursor::prepare_heap (2 samples, 0.04%)</title><rect x="15.8" y="837" width="0.5" height="15.0" fill="rgb(244,154,5)" rx="2" ry="2" />
<text  x="18.82" y="847.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (2 samples, 0.04%)</title><rect x="93.0" y="789" width="0.5" height="15.0" fill="rgb(235,136,0)" rx="2" ry="2" />
<text  x="96.01" y="799.5" ></text>
</g>
<g >
<title>std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;::_M_initialize (1 samples, 0.02%)</title><rect x="66.6" y="725" width="0.2" height="15.0" fill="rgb(217,190,18)" rx="2" ry="2" />
<text  x="69.61" y="735.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (9 samples, 0.17%)</title><rect x="828.4" y="613" width="2.1" height="15.0" fill="rgb(212,74,11)" rx="2" ry="2" />
<text  x="831.44" y="623.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_M_reset (2 samples, 0.04%)</title><rect x="1106.8" y="709" width="0.4" height="15.0" fill="rgb(207,181,46)" rx="2" ry="2" />
<text  x="1109.77" y="719.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql_transport::messages::result_message::rows&gt;::~shared_ptr_count_for (1 samples, 0.02%)</title><rect x="1141.9" y="805" width="0.2" height="15.0" fill="rgb(247,130,39)" rx="2" ry="2" />
<text  x="1144.90" y="815.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_clustering_bounds (26 samples, 0.49%)</title><rect x="1099.2" y="709" width="5.8" height="15.0" fill="rgb(235,164,27)" rx="2" ry="2" />
<text  x="1102.16" y="719.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (1 samples, 0.02%)</title><rect x="800.7" y="517" width="0.2" height="15.0" fill="rgb(211,30,34)" rx="2" ry="2" />
<text  x="803.69" y="527.5" ></text>
</g>
<g >
<title>row_cache::do_make_reader (40 samples, 0.76%)</title><rect x="543.4" y="629" width="8.9" height="15.0" fill="rgb(247,110,14)" rx="2" ry="2" />
<text  x="546.39" y="639.5" ></text>
</g>
<g >
<title>query::result_view::consume&lt;query::result_set_builder&amp;&gt; (1 samples, 0.02%)</title><rect x="107.3" y="741" width="0.3" height="15.0" fill="rgb(219,171,54)" rx="2" ry="2" />
<text  x="110.33" y="751.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::execute (2 samples, 0.04%)</title><rect x="983.5" y="597" width="0.4" height="15.0" fill="rgb(229,81,20)" rx="2" ry="2" />
<text  x="986.49" y="607.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql3::statements::update_statement&gt;::~shared_ptr_count_for (2 samples, 0.04%)</title><rect x="652.1" y="789" width="0.5" height="15.0" fill="rgb(244,130,28)" rx="2" ry="2" />
<text  x="655.13" y="799.5" ></text>
</g>
<g >
<title>logalloc::region_impl::object_descriptor::encode (2 samples, 0.04%)</title><rect x="14.7" y="821" width="0.4" height="15.0" fill="rgb(239,163,17)" rx="2" ry="2" />
<text  x="17.70" y="831.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (1 samples, 0.02%)</title><rect x="78.5" y="741" width="0.2" height="15.0" fill="rgb(245,26,41)" rx="2" ry="2" />
<text  x="81.46" y="751.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (12 samples, 0.23%)</title><rect x="952.8" y="693" width="2.7" height="15.0" fill="rgb(240,32,33)" rx="2" ry="2" />
<text  x="955.84" y="703.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (4 samples, 0.08%)</title><rect x="508.7" y="613" width="0.9" height="15.0" fill="rgb(227,13,44)" rx="2" ry="2" />
<text  x="511.71" y="623.5" ></text>
</g>
<g >
<title>operator new (11 samples, 0.21%)</title><rect x="981.0" y="597" width="2.5" height="15.0" fill="rgb(212,172,12)" rx="2" ry="2" />
<text  x="984.03" y="607.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (8 samples, 0.15%)</title><rect x="907.0" y="549" width="1.8" height="15.0" fill="rgb(215,111,9)" rx="2" ry="2" />
<text  x="909.97" y="559.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (5 samples, 0.09%)</title><rect x="702.9" y="789" width="1.1" height="15.0" fill="rgb(243,202,51)" rx="2" ry="2" />
<text  x="705.92" y="799.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="872.1" y="597" width="0.2" height="15.0" fill="rgb(233,110,54)" rx="2" ry="2" />
<text  x="875.07" y="607.5" ></text>
</g>
<g >
<title>do_cql_test (272 samples, 5.16%)</title><rect x="17.2" y="853" width="60.8" height="15.0" fill="rgb(226,177,44)" rx="2" ry="2" />
<text  x="20.16" y="863.5" >do_cql..</text>
</g>
<g >
<title>std::get&lt;2ul, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const&amp;, auth::resource&amp;&amp;, service::client_state::has_column_family_access (1 samples, 0.02%)</title><rect x="824.0" y="693" width="0.2" height="15.0" fill="rgb(240,38,23)" rx="2" ry="2" />
<text  x="826.96" y="703.5" ></text>
</g>
<g >
<title>seastar::semaphore_units&lt;seastar::semaphore_default_exception_factory, std::chrono::_V2::steady_clock&gt;::return_all (1 samples, 0.02%)</title><rect x="677.9" y="757" width="0.2" height="15.0" fill="rgb(221,192,52)" rx="2" ry="2" />
<text  x="680.86" y="767.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_tokenSource (1 samples, 0.02%)</title><rect x="36.8" y="629" width="0.3" height="15.0" fill="rgb(210,83,27)" rx="2" ry="2" />
<text  x="39.85" y="639.5" ></text>
</g>
<g >
<title>operator delete (8 samples, 0.15%)</title><rect x="595.7" y="645" width="1.8" height="15.0" fill="rgb(254,213,43)" rx="2" ry="2" />
<text  x="598.75" y="655.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::clone (7 samples, 0.13%)</title><rect x="505.8" y="613" width="1.6" height="15.0" fill="rgb(238,147,37)" rx="2" ry="2" />
<text  x="508.81" y="623.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="469.6" y="613" width="0.2" height="15.0" fill="rgb(251,199,20)" rx="2" ry="2" />
<text  x="472.56" y="623.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (1 samples, 0.02%)</title><rect x="1029.6" y="533" width="0.2" height="15.0" fill="rgb(249,158,36)" rx="2" ry="2" />
<text  x="1032.58" y="543.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="70.9" y="533" width="0.2" height="15.0" fill="rgb(226,187,10)" rx="2" ry="2" />
<text  x="73.86" y="543.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (2 samples, 0.04%)</title><rect x="646.1" y="757" width="0.4" height="15.0" fill="rgb(226,27,51)" rx="2" ry="2" />
<text  x="649.09" y="767.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::set_urgent_state (2 samples, 0.04%)</title><rect x="648.3" y="789" width="0.5" height="15.0" fill="rgb(221,34,39)" rx="2" ry="2" />
<text  x="651.33" y="799.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (2 samples, 0.04%)</title><rect x="54.7" y="469" width="0.5" height="15.0" fill="rgb(209,165,29)" rx="2" ry="2" />
<text  x="57.75" y="479.5" ></text>
</g>
<g >
<title>service::abstract_read_resolver::~abstract_read_resolver (2 samples, 0.04%)</title><rect x="704.7" y="773" width="0.5" height="15.0" fill="rgb(224,131,22)" rx="2" ry="2" />
<text  x="707.71" y="783.5" ></text>
</g>
<g >
<title>unimplemented::warn (2 samples, 0.04%)</title><rect x="876.3" y="645" width="0.5" height="15.0" fill="rgb(215,198,23)" rx="2" ry="2" />
<text  x="879.32" y="655.5" ></text>
</g>
<g >
<title>_ZN7seastar12continuationINS_8internal22promise_base_with_typeIvEEZNS_6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE14discard_resultEvEUlDpOT_E_ZNSA_14then_impl_nrvoISE_NS4_IvEEEET0_OT_EUlOS3_RSE_ONS_12future_stateIS9_EEE_S9_E15run_and_disposeEv (45 samples, 0.85%)</title><rect x="91.9" y="805" width="10.1" height="15.0" fill="rgb(241,222,1)" rx="2" ry="2" />
<text  x="94.89" y="815.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (1 samples, 0.02%)</title><rect x="560.6" y="677" width="0.2" height="15.0" fill="rgb(215,127,24)" rx="2" ry="2" />
<text  x="563.62" y="687.5" ></text>
</g>
<g >
<title>std::construct_at&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::entry&gt; (6 samples, 0.11%)</title><rect x="135.3" y="709" width="1.3" height="15.0" fill="rgb(254,118,53)" rx="2" ry="2" />
<text  x="138.29" y="719.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::~holder (2 samples, 0.04%)</title><rect x="454.1" y="645" width="0.5" height="15.0" fill="rgb(226,187,13)" rx="2" ry="2" />
<text  x="457.12" y="655.5" ></text>
</g>
<g >
<title>seastar::reactor::smp_pollfn::poll (1 samples, 0.02%)</title><rect x="1168.5" y="805" width="0.2" height="15.0" fill="rgb(207,25,14)" rx="2" ry="2" />
<text  x="1171.52" y="815.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;column_definition const* const, cql3::expr::expression&gt;, false&gt; &gt; &gt;::_M_deallocate_nodes (1 samples, 0.02%)</title><rect x="72.0" y="661" width="0.2" height="15.0" fill="rgb(225,225,47)" rx="2" ry="2" />
<text  x="74.98" y="671.5" ></text>
</g>
<g >
<title>ser::get_sizeof&lt;schema_mutations&gt; (1 samples, 0.02%)</title><rect x="107.6" y="709" width="0.2" height="15.0" fill="rgb(245,25,8)" rx="2" ry="2" />
<text  x="110.55" y="719.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.02%)</title><rect x="20.1" y="549" width="0.2" height="15.0" fill="rgb(212,154,41)" rx="2" ry="2" />
<text  x="23.07" y="559.5" ></text>
</g>
<g >
<title>seastar::future_state_base::any::operator= (1 samples, 0.02%)</title><rect x="837.8" y="693" width="0.3" height="15.0" fill="rgb(232,15,37)" rx="2" ry="2" />
<text  x="840.83" y="703.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::maybe_decay_reserve (1 samples, 0.02%)</title><rect x="504.0" y="629" width="0.2" height="15.0" fill="rgb(216,121,29)" rx="2" ry="2" />
<text  x="507.02" y="639.5" ></text>
</g>
<g >
<title>cql3::operation::set_value::set_value (2 samples, 0.04%)</title><rect x="56.5" y="597" width="0.5" height="15.0" fill="rgb(225,174,51)" rx="2" ry="2" />
<text  x="59.54" y="607.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::clone&lt;row::row (1 samples, 0.02%)</title><rect x="106.7" y="69" width="0.2" height="15.0" fill="rgb(212,156,8)" rx="2" ry="2" />
<text  x="109.66" y="79.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::partition_snapshot_flat_reader&lt;memtable&amp;&gt; (82 samples, 1.55%)</title><rect x="513.0" y="597" width="18.3" height="15.0" fill="rgb(229,127,48)" rx="2" ry="2" />
<text  x="515.97" y="607.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (2 samples, 0.04%)</title><rect x="261.5" y="437" width="0.4" height="15.0" fill="rgb(237,215,6)" rx="2" ry="2" />
<text  x="264.48" y="447.5" ></text>
</g>
<g >
<title>std::optional&lt;clustering_key_prefix&gt;::operator=&lt;clustering_key_prefix&amp;&gt; (4 samples, 0.08%)</title><rect x="419.9" y="517" width="0.9" height="15.0" fill="rgb(216,225,32)" rx="2" ry="2" />
<text  x="422.89" y="527.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, flat_mutation_reader, reader_concurrency_semaphore::inactive_read_handle&gt;::_Move_ctor_base (1 samples, 0.02%)</title><rect x="630.4" y="693" width="0.3" height="15.0" fill="rgb(217,175,52)" rx="2" ry="2" />
<text  x="633.43" y="703.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (3 samples, 0.06%)</title><rect x="720.8" y="805" width="0.7" height="15.0" fill="rgb(219,16,27)" rx="2" ry="2" />
<text  x="723.82" y="815.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="435.6" y="581" width="0.2" height="15.0" fill="rgb(205,123,36)" rx="2" ry="2" />
<text  x="438.55" y="591.5" ></text>
</g>
<g >
<title>table::as_mutation_source (11 samples, 0.21%)</title><rect x="631.5" y="741" width="2.5" height="15.0" fill="rgb(226,133,1)" rx="2" ry="2" />
<text  x="634.55" y="751.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.04%)</title><rect x="914.6" y="581" width="0.4" height="15.0" fill="rgb(237,15,29)" rx="2" ry="2" />
<text  x="917.58" y="591.5" ></text>
</g>
<g >
<title>database::find_column_family (4 samples, 0.08%)</title><rect x="968.7" y="661" width="0.9" height="15.0" fill="rgb(250,1,15)" rx="2" ry="2" />
<text  x="971.72" y="671.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::pop_mutation_fragment (1 samples, 0.02%)</title><rect x="300.4" y="581" width="0.2" height="15.0" fill="rgb(219,117,35)" rx="2" ry="2" />
<text  x="303.41" y="591.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::~disable_abort_on_alloc_failure_temporarily (2 samples, 0.04%)</title><rect x="269.5" y="517" width="0.5" height="15.0" fill="rgb(216,141,49)" rx="2" ry="2" />
<text  x="272.54" y="527.5" ></text>
</g>
<g >
<title>memtable::make_flat_reader (274 samples, 5.20%)</title><rect x="478.7" y="645" width="61.3" height="15.0" fill="rgb(236,209,49)" rx="2" ry="2" />
<text  x="481.73" y="655.5" >memtab..</text>
</g>
<g >
<title>mutation_reader_merger::operator (1 samples, 0.02%)</title><rect x="869.6" y="725" width="0.2" height="15.0" fill="rgb(216,115,31)" rx="2" ry="2" />
<text  x="872.61" y="735.5" ></text>
</g>
<g >
<title>boost::algorithm::any_of&lt;std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;, std::_Bind_front&lt;bool  (2 samples, 0.04%)</title><rect x="870.7" y="677" width="0.5" height="15.0" fill="rgb(209,207,5)" rx="2" ry="2" />
<text  x="873.72" y="687.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::~timer (1 samples, 0.02%)</title><rect x="695.8" y="757" width="0.2" height="15.0" fill="rgb(211,33,50)" rx="2" ry="2" />
<text  x="698.76" y="767.5" ></text>
</g>
<g >
<title>absl::container_internal::operator== (1 samples, 0.02%)</title><rect x="1050.2" y="629" width="0.2" height="15.0" fill="rgb(254,93,38)" rx="2" ry="2" />
<text  x="1053.16" y="639.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (1 samples, 0.02%)</title><rect x="268.2" y="453" width="0.2" height="15.0" fill="rgb(215,218,29)" rx="2" ry="2" />
<text  x="271.19" y="463.5" ></text>
</g>
<g >
<title>db::schema_tables::all_tables (1 samples, 0.02%)</title><rect x="16.5" y="581" width="0.2" height="15.0" fill="rgb(209,63,6)" rx="2" ry="2" />
<text  x="19.49" y="591.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.02%)</title><rect x="55.2" y="421" width="0.2" height="15.0" fill="rgb(217,37,8)" rx="2" ry="2" />
<text  x="58.20" y="431.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (1 samples, 0.02%)</title><rect x="51.6" y="581" width="0.2" height="15.0" fill="rgb(210,144,36)" rx="2" ry="2" />
<text  x="54.62" y="591.5" ></text>
</g>
<g >
<title>appending_hash&lt;mutation&gt;::operator (1 samples, 0.02%)</title><rect x="107.1" y="725" width="0.2" height="15.0" fill="rgb(215,209,20)" rx="2" ry="2" />
<text  x="110.10" y="735.5" ></text>
</g>
<g >
<title>validation::validate_cql_key (1 samples, 0.02%)</title><rect x="872.7" y="677" width="0.3" height="15.0" fill="rgb(210,20,32)" rx="2" ry="2" />
<text  x="875.74" y="687.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;mutation_querier&gt;::_M_reset (1 samples, 0.02%)</title><rect x="441.6" y="645" width="0.2" height="15.0" fill="rgb(253,145,33)" rx="2" ry="2" />
<text  x="444.59" y="655.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.04%)</title><rect x="563.8" y="645" width="0.4" height="15.0" fill="rgb(248,107,11)" rx="2" ry="2" />
<text  x="566.75" y="655.5" ></text>
</g>
<g >
<title>utils::tuple_hash::hash_impl&lt;2ul, auth::resource_kind, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (3 samples, 0.06%)</title><rect x="823.3" y="613" width="0.7" height="15.0" fill="rgb(238,86,38)" rx="2" ry="2" />
<text  x="826.29" y="623.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="509.8" y="613" width="0.3" height="15.0" fill="rgb(221,8,28)" rx="2" ry="2" />
<text  x="512.83" y="623.5" ></text>
</g>
<g >
<title>seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;::swap (2 samples, 0.04%)</title><rect x="734.2" y="709" width="0.5" height="15.0" fill="rgb(243,228,32)" rx="2" ry="2" />
<text  x="737.24" y="719.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_node (2 samples, 0.04%)</title><rect x="672.5" y="741" width="0.4" height="15.0" fill="rgb(247,107,33)" rx="2" ry="2" />
<text  x="675.49" y="751.5" ></text>
</g>
<g >
<title>sstring_hash::operator (1 samples, 0.02%)</title><rect x="835.4" y="613" width="0.2" height="15.0" fill="rgb(230,110,42)" rx="2" ry="2" />
<text  x="838.37" y="623.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_4findERKNS5_10expressionENS5_6oper_tEEUlRS7_E_EES8_SE_T_EUlSG_E_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_8constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_11conjunctionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_12column_valueEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_5tokenEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13function_callEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4castEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_15field_selectionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4nullEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13bind_variableEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_16untyped_constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_17tuple_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_22collection_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSO_S6_SS_SW_S10_S14_S18_S1C_S1G_S1K_S1O_S1S_SK_S1W_S20_S24_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES29_S2C_ (2 samples, 0.04%)</title><rect x="658.8" y="693" width="0.5" height="15.0" fill="rgb(233,43,43)" rx="2" ry="2" />
<text  x="661.84" y="703.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE8scheduleINS_8internal22promise_base_with_typeIvEEZNS6_14discard_resultEvEUlDpOT_E_ZNS6_14then_impl_nrvoISE_NS0_IvEEEET0_OT_EUlOSA_RSE_ONS_12future_stateIS5_EEE_EEvSJ_OSH_OT1_ (11 samples, 0.21%)</title><rect x="727.3" y="741" width="2.5" height="15.0" fill="rgb(231,137,13)" rx="2" ry="2" />
<text  x="730.31" y="751.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.04%)</title><rect x="478.3" y="629" width="0.4" height="15.0" fill="rgb(252,102,12)" rx="2" ry="2" />
<text  x="481.29" y="639.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (2 samples, 0.04%)</title><rect x="429.5" y="469" width="0.5" height="15.0" fill="rgb(253,98,48)" rx="2" ry="2" />
<text  x="432.51" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="629.3" y="661" width="0.2" height="15.0" fill="rgb(231,119,6)" rx="2" ry="2" />
<text  x="632.31" y="671.5" ></text>
</g>
<g >
<title>flat_mutation_reader::peek (710 samples, 13.46%)</title><rect x="169.3" y="709" width="158.9" height="15.0" fill="rgb(252,27,6)" rx="2" ry="2" />
<text  x="172.30" y="719.5" >flat_mutation_reader..</text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::operator (620 samples, 11.76%)</title><rect x="173.1" y="661" width="138.7" height="15.0" fill="rgb(239,15,22)" rx="2" ry="2" />
<text  x="176.11" y="671.5" >mutation_fragment..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (1 samples, 0.02%)</title><rect x="23.2" y="469" width="0.2" height="15.0" fill="rgb(213,45,52)" rx="2" ry="2" />
<text  x="26.20" y="479.5" ></text>
</g>
<g >
<title>cql3::raw_value_view::raw_value_view (1 samples, 0.02%)</title><rect x="875.9" y="581" width="0.2" height="15.0" fill="rgb(207,174,49)" rx="2" ry="2" />
<text  x="878.87" y="591.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::clear (2 samples, 0.04%)</title><rect x="1139.9" y="789" width="0.4" height="15.0" fill="rgb(221,119,28)" rx="2" ry="2" />
<text  x="1142.88" y="799.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="1108.1" y="709" width="0.2" height="15.0" fill="rgb(207,112,45)" rx="2" ry="2" />
<text  x="1111.11" y="719.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.04%)</title><rect x="632.4" y="677" width="0.5" height="15.0" fill="rgb(229,60,43)" rx="2" ry="2" />
<text  x="635.44" y="687.5" ></text>
</g>
<g >
<title>freeze (17 samples, 0.32%)</title><rect x="1133.6" y="501" width="3.8" height="15.0" fill="rgb(219,217,37)" rx="2" ry="2" />
<text  x="1136.62" y="511.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (5 samples, 0.09%)</title><rect x="154.8" y="725" width="1.1" height="15.0" fill="rgb(225,95,42)" rx="2" ry="2" />
<text  x="157.76" y="735.5" ></text>
</g>
<g >
<title>partition_entry::read (1 samples, 0.02%)</title><rect x="538.0" y="629" width="0.2" height="15.0" fill="rgb(232,34,21)" rx="2" ry="2" />
<text  x="541.02" y="639.5" ></text>
</g>
<g >
<title>boost::algorithm::detail::find_iterator_base&lt;char*&gt;::do_find (1 samples, 0.02%)</title><rect x="720.6" y="709" width="0.2" height="15.0" fill="rgb(245,157,16)" rx="2" ry="2" />
<text  x="723.60" y="719.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (31 samples, 0.59%)</title><rect x="154.3" y="741" width="6.9" height="15.0" fill="rgb(217,80,25)" rx="2" ry="2" />
<text  x="157.31" y="751.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (2 samples, 0.04%)</title><rect x="868.7" y="741" width="0.5" height="15.0" fill="rgb(219,141,11)" rx="2" ry="2" />
<text  x="871.71" y="751.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.02%)</title><rect x="42.7" y="421" width="0.2" height="15.0" fill="rgb(217,56,29)" rx="2" ry="2" />
<text  x="45.67" y="431.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_slice_or_needs_filtering (2 samples, 0.04%)</title><rect x="656.6" y="741" width="0.5" height="15.0" fill="rgb(250,119,16)" rx="2" ry="2" />
<text  x="659.61" y="751.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;dht::token, std::pair&lt;dht::token const, gms::inet_address&gt;, std::allocator&lt;std::pair&lt;dht::token const, gms::inet_address&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;dht::token&gt;, std::hash&lt;dht::token&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (1 samples, 0.02%)</title><rect x="16.7" y="677" width="0.2" height="15.0" fill="rgb(237,149,11)" rx="2" ry="2" />
<text  x="19.71" y="687.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.02%)</title><rect x="20.7" y="613" width="0.3" height="15.0" fill="rgb(229,109,19)" rx="2" ry="2" />
<text  x="23.74" y="623.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_map&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::at&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt; &gt; (13 samples, 0.25%)</title><rect x="1050.4" y="629" width="2.9" height="15.0" fill="rgb(241,110,50)" rx="2" ry="2" />
<text  x="1053.39" y="639.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql_transport::messages::result_message&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="676.1" y="773" width="0.2" height="15.0" fill="rgb(243,207,9)" rx="2" ry="2" />
<text  x="679.07" y="783.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (7 samples, 0.13%)</title><rect x="415.4" y="437" width="1.6" height="15.0" fill="rgb(229,108,32)" rx="2" ry="2" />
<text  x="418.42" y="447.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;std::pair&lt;seastar::shared_ptr&lt;service::abstract_read_executor&gt;, nonwrapping_interval&lt;dht::token&gt; &gt;, 1ul&gt;::reserve (1 samples, 0.02%)</title><rect x="1092.4" y="677" width="0.3" height="15.0" fill="rgb(241,176,7)" rx="2" ry="2" />
<text  x="1095.45" y="687.5" ></text>
</g>
<g >
<title>seastar::future&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (11 samples, 0.21%)</title><rect x="798.2" y="517" width="2.5" height="15.0" fill="rgb(225,93,3)" rx="2" ry="2" />
<text  x="801.23" y="527.5" ></text>
</g>
<g >
<title>compound_type&lt; (9 samples, 0.17%)</title><rect x="935.2" y="661" width="2.0" height="15.0" fill="rgb(240,20,17)" rx="2" ry="2" />
<text  x="938.16" y="671.5" ></text>
</g>
<g >
<title>schema::column_at (1 samples, 0.02%)</title><rect x="419.4" y="485" width="0.3" height="15.0" fill="rgb(238,91,27)" rx="2" ry="2" />
<text  x="422.44" y="495.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::move_it (1 samples, 0.02%)</title><rect x="640.5" y="789" width="0.2" height="15.0" fill="rgb(232,35,50)" rx="2" ry="2" />
<text  x="643.50" y="799.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (1 samples, 0.02%)</title><rect x="15.6" y="821" width="0.2" height="15.0" fill="rgb(227,48,50)" rx="2" ry="2" />
<text  x="18.59" y="831.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;dht::ring_position&gt;::greater_than_or_equal&lt;dht::ring_position_comparator&amp;&gt; (1 samples, 0.02%)</title><rect x="10.4" y="709" width="0.3" height="15.0" fill="rgb(228,165,2)" rx="2" ry="2" />
<text  x="13.45" y="719.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (33 samples, 0.63%)</title><rect x="559.5" y="709" width="7.4" height="15.0" fill="rgb(240,125,9)" rx="2" ry="2" />
<text  x="562.50" y="719.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (3 samples, 0.06%)</title><rect x="810.5" y="517" width="0.7" height="15.0" fill="rgb(235,137,36)" rx="2" ry="2" />
<text  x="813.54" y="527.5" ></text>
</g>
<g >
<title>cql3::constants::setter::execute (8 samples, 0.15%)</title><rect x="873.9" y="613" width="1.7" height="15.0" fill="rgb(208,98,50)" rx="2" ry="2" />
<text  x="876.86" y="623.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;managed_bytes&gt;::make&lt;managed_bytes&gt; (3 samples, 0.06%)</title><rect x="914.4" y="613" width="0.6" height="15.0" fill="rgb(217,114,1)" rx="2" ry="2" />
<text  x="917.35" y="623.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (2 samples, 0.04%)</title><rect x="1093.6" y="677" width="0.4" height="15.0" fill="rgb(220,111,9)" rx="2" ry="2" />
<text  x="1096.57" y="687.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_erase_at_end (6 samples, 0.11%)</title><rect x="401.8" y="501" width="1.3" height="15.0" fill="rgb(215,151,52)" rx="2" ry="2" />
<text  x="404.77" y="511.5" ></text>
</g>
<g >
<title>db::block_for (1 samples, 0.02%)</title><rect x="1054.2" y="629" width="0.2" height="15.0" fill="rgb(210,68,17)" rx="2" ry="2" />
<text  x="1057.19" y="639.5" ></text>
</g>
<g >
<title>std::forward_as_tuple&lt;std::optional&lt;auth::resource&gt; &gt; (1 samples, 0.02%)</title><rect x="819.0" y="629" width="0.3" height="15.0" fill="rgb(228,214,50)" rx="2" ry="2" />
<text  x="822.04" y="639.5" ></text>
</g>
<g >
<title>do_query&lt;(anonymous namespace)::mutation_query_result_builder&gt; (1 samples, 0.02%)</title><rect x="105.8" y="677" width="0.2" height="15.0" fill="rgb(254,168,41)" rx="2" ry="2" />
<text  x="108.76" y="687.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="81.8" y="901" width="0.2" height="15.0" fill="rgb(218,10,23)" rx="2" ry="2" />
<text  x="84.82" y="911.5" ></text>
</g>
<g >
<title>partition_snapshot::~partition_snapshot (4 samples, 0.08%)</title><rect x="585.2" y="565" width="0.9" height="15.0" fill="rgb(224,164,18)" rx="2" ry="2" />
<text  x="588.23" y="575.5" ></text>
</g>
<g >
<title>std::make_unique&lt;compact_for_query&lt; (8 samples, 0.15%)</title><rect x="440.0" y="661" width="1.8" height="15.0" fill="rgb(210,153,28)" rx="2" ry="2" />
<text  x="443.03" y="671.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::operator (2 samples, 0.04%)</title><rect x="763.3" y="693" width="0.5" height="15.0" fill="rgb(212,36,25)" rx="2" ry="2" />
<text  x="766.33" y="703.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::pop_clustering_row (5 samples, 0.09%)</title><rect x="267.3" y="485" width="1.1" height="15.0" fill="rgb(234,216,43)" rx="2" ry="2" />
<text  x="270.30" y="495.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;mutation_reader_merger::reader_and_last_fragment_kind*, mutation_reader_merger::prepare_next (1 samples, 0.02%)</title><rect x="106.7" y="389" width="0.2" height="15.0" fill="rgb(224,141,44)" rx="2" ry="2" />
<text  x="109.66" y="399.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::get0 (1 samples, 0.02%)</title><rect x="102.9" y="789" width="0.2" height="15.0" fill="rgb(205,4,39)" rx="2" ry="2" />
<text  x="105.85" y="799.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.02%)</title><rect x="40.7" y="517" width="0.2" height="15.0" fill="rgb(247,58,27)" rx="2" ry="2" />
<text  x="43.65" y="527.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (2 samples, 0.04%)</title><rect x="54.7" y="373" width="0.5" height="15.0" fill="rgb(205,165,47)" rx="2" ry="2" />
<text  x="57.75" y="383.5" ></text>
</g>
<g >
<title>schema::column_at (2 samples, 0.04%)</title><rect x="257.5" y="405" width="0.4" height="15.0" fill="rgb(223,220,21)" rx="2" ry="2" />
<text  x="260.46" y="415.5" ></text>
</g>
<g >
<title>read_simple&lt;long, managed_bytes_basic_view&lt; (11 samples, 0.21%)</title><rect x="414.5" y="453" width="2.5" height="15.0" fill="rgb(251,122,43)" rx="2" ry="2" />
<text  x="417.52" y="463.5" ></text>
</g>
<g >
<title>mutation_reader_merger::maybe_add_readers (34 samples, 0.64%)</title><rect x="458.8" y="597" width="7.6" height="15.0" fill="rgb(224,42,53)" rx="2" ry="2" />
<text  x="461.82" y="607.5" ></text>
</g>
<g >
<title>mutation_reader_merger::maybe_add_readers_at_partition_boundary (5 samples, 0.09%)</title><rect x="181.6" y="597" width="1.1" height="15.0" fill="rgb(223,121,41)" rx="2" ry="2" />
<text  x="184.61" y="607.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="531.1" y="581" width="0.2" height="15.0" fill="rgb(248,215,11)" rx="2" ry="2" />
<text  x="534.09" y="591.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::relation (11 samples, 0.21%)</title><rect x="57.7" y="645" width="2.4" height="15.0" fill="rgb(253,177,9)" rx="2" ry="2" />
<text  x="60.66" y="655.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (6 samples, 0.11%)</title><rect x="1060.7" y="597" width="1.3" height="15.0" fill="rgb(245,5,17)" rx="2" ry="2" />
<text  x="1063.68" y="607.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="74.2" y="693" width="0.2" height="15.0" fill="rgb(250,89,50)" rx="2" ry="2" />
<text  x="77.21" y="703.5" ></text>
</g>
<g >
<title>__start_context (14 samples, 0.27%)</title><rect x="78.7" y="901" width="3.1" height="15.0" fill="rgb(235,217,33)" rx="2" ry="2" />
<text  x="81.69" y="911.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (6 samples, 0.11%)</title><rect x="985.5" y="597" width="1.3" height="15.0" fill="rgb(217,169,29)" rx="2" ry="2" />
<text  x="988.50" y="607.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;query::result_memory_accounter&gt;::clear (1 samples, 0.02%)</title><rect x="617.2" y="741" width="0.3" height="15.0" fill="rgb(244,170,29)" rx="2" ry="2" />
<text  x="620.23" y="751.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::apply_updates (14 samples, 0.27%)</title><rect x="873.6" y="677" width="3.2" height="15.0" fill="rgb(230,131,15)" rx="2" ry="2" />
<text  x="876.63" y="687.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;dht::ring_position&gt;::wrapping_interval (3 samples, 0.06%)</title><rect x="933.1" y="661" width="0.7" height="15.0" fill="rgb(230,115,12)" rx="2" ry="2" />
<text  x="936.15" y="671.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::allocate (1 samples, 0.02%)</title><rect x="23.9" y="533" width="0.2" height="15.0" fill="rgb(211,216,28)" rx="2" ry="2" />
<text  x="26.87" y="543.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::storage_proxy&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="692.2" y="789" width="0.2" height="15.0" fill="rgb(249,44,13)" rx="2" ry="2" />
<text  x="695.18" y="799.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_next (87 samples, 1.65%)</title><rect x="180.0" y="613" width="19.5" height="15.0" fill="rgb(232,109,20)" rx="2" ry="2" />
<text  x="183.04" y="623.5" ></text>
</g>
<g >
<title>operator new (8 samples, 0.15%)</title><rect x="564.4" y="645" width="1.8" height="15.0" fill="rgb(248,27,6)" rx="2" ry="2" />
<text  x="567.43" y="655.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::~vector (4 samples, 0.08%)</title><rect x="1119.3" y="725" width="0.9" height="15.0" fill="rgb(238,121,3)" rx="2" ry="2" />
<text  x="1122.30" y="735.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (2 samples, 0.04%)</title><rect x="802.7" y="469" width="0.5" height="15.0" fill="rgb(205,60,25)" rx="2" ry="2" />
<text  x="805.71" y="479.5" ></text>
</g>
<g >
<title>atomic_cell_type::make_live&lt;fragment_range&lt;managed_bytes_basic_view&lt; (3 samples, 0.06%)</title><rect x="874.1" y="549" width="0.7" height="15.0" fill="rgb(206,10,46)" rx="2" ry="2" />
<text  x="877.08" y="559.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (3 samples, 0.06%)</title><rect x="1028.2" y="517" width="0.7" height="15.0" fill="rgb(220,169,13)" rx="2" ry="2" />
<text  x="1031.24" y="527.5" ></text>
</g>
<g >
<title>operator new (7 samples, 0.13%)</title><rect x="845.2" y="725" width="1.6" height="15.0" fill="rgb(210,218,17)" rx="2" ry="2" />
<text  x="848.22" y="735.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="1107.2" y="709" width="0.2" height="15.0" fill="rgb(207,70,39)" rx="2" ry="2" />
<text  x="1110.22" y="719.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;cql_transport::messages::result_message::rows, false&gt;::make&lt;cql3::result&gt; (1 samples, 0.02%)</title><rect x="669.8" y="789" width="0.2" height="15.0" fill="rgb(246,37,45)" rx="2" ry="2" />
<text  x="672.81" y="799.5" ></text>
</g>
<g >
<title>nonwrapping_interval&lt;clustering_key_prefix&gt;::make_open_ended_both_sides (11 samples, 0.21%)</title><rect x="1099.6" y="693" width="2.5" height="15.0" fill="rgb(206,226,14)" rx="2" ry="2" />
<text  x="1102.61" y="703.5" ></text>
</g>
<g >
<title>seastar::reactor_backend_aio::await_events (3 samples, 0.06%)</title><rect x="1169.2" y="789" width="0.7" height="15.0" fill="rgb(241,193,2)" rx="2" ry="2" />
<text  x="1172.19" y="799.5" ></text>
</g>
<g >
<title>ser::writer_of_std__optional__qr_cell&lt;bytes_ostream&gt;::write (9 samples, 0.17%)</title><rect x="398.4" y="469" width="2.0" height="15.0" fill="rgb(250,208,44)" rx="2" ry="2" />
<text  x="401.41" y="479.5" ></text>
</g>
<g >
<title>TLS init function for bound_view::_empty_prefix (2 samples, 0.04%)</title><rect x="284.8" y="469" width="0.4" height="15.0" fill="rgb(227,57,34)" rx="2" ry="2" />
<text  x="287.75" y="479.5" ></text>
</g>
<g >
<title>cql3::query_options::prepare (1 samples, 0.02%)</title><rect x="741.4" y="741" width="0.2" height="15.0" fill="rgb(232,173,29)" rx="2" ry="2" />
<text  x="744.40" y="751.5" ></text>
</g>
<g >
<title>scanning_reader::fill_buffer (1 samples, 0.02%)</title><rect x="106.7" y="309" width="0.2" height="15.0" fill="rgb(249,214,40)" rx="2" ry="2" />
<text  x="109.66" y="319.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::size (1 samples, 0.02%)</title><rect x="949.3" y="709" width="0.2" height="15.0" fill="rgb(216,99,52)" rx="2" ry="2" />
<text  x="952.26" y="719.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::~node_head (2 samples, 0.04%)</title><rect x="430.9" y="517" width="0.4" height="15.0" fill="rgb(240,26,51)" rx="2" ry="2" />
<text  x="433.85" y="527.5" ></text>
</g>
<g >
<title>mutation_fragment::consume&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (372 samples, 7.05%)</title><rect x="342.9" y="565" width="83.3" height="15.0" fill="rgb(236,17,22)" rx="2" ry="2" />
<text  x="345.92" y="575.5" >mutation_..</text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::key_is_in_relation (1 samples, 0.02%)</title><rect x="952.6" y="693" width="0.2" height="15.0" fill="rgb(214,150,39)" rx="2" ry="2" />
<text  x="955.61" y="703.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;auth::resource_kind, std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;auth::resource_kind&gt;, std::hash&lt;auth::resource_kind&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::at (4 samples, 0.08%)</title><rect x="777.0" y="661" width="0.9" height="15.0" fill="rgb(214,178,39)" rx="2" ry="2" />
<text  x="779.98" y="671.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_destroy_data_aux (1 samples, 0.02%)</title><rect x="404.5" y="453" width="0.2" height="15.0" fill="rgb(231,131,10)" rx="2" ry="2" />
<text  x="407.45" y="463.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::initial_key_restrictions&lt;partition_key&gt;::merge_to (4 samples, 0.08%)</title><rect x="70.4" y="693" width="0.9" height="15.0" fill="rgb(249,113,37)" rx="2" ry="2" />
<text  x="73.41" y="703.5" ></text>
</g>
<g >
<title>database::find_column_family (6 samples, 0.11%)</title><rect x="1014.6" y="549" width="1.3" height="15.0" fill="rgb(254,113,6)" rx="2" ry="2" />
<text  x="1017.59" y="559.5" ></text>
</g>
<g >
<title>std::function&lt;bool  (1 samples, 0.02%)</title><rect x="566.4" y="693" width="0.3" height="15.0" fill="rgb(224,166,1)" rx="2" ry="2" />
<text  x="569.44" y="703.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt;::_M_reset (1 samples, 0.02%)</title><rect x="586.1" y="597" width="0.3" height="15.0" fill="rgb(232,1,43)" rx="2" ry="2" />
<text  x="589.13" y="607.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.06%)</title><rect x="660.4" y="757" width="0.7" height="15.0" fill="rgb(244,80,53)" rx="2" ry="2" />
<text  x="663.41" y="767.5" ></text>
</g>
<g >
<title>mutation_reader_merger::~mutation_reader_merger (32 samples, 0.61%)</title><rect x="591.9" y="677" width="7.2" height="15.0" fill="rgb(237,190,26)" rx="2" ry="2" />
<text  x="594.95" y="687.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.02%)</title><rect x="58.1" y="405" width="0.2" height="15.0" fill="rgb(254,20,45)" rx="2" ry="2" />
<text  x="61.10" y="415.5" ></text>
</g>
<g >
<title>allocation_strategy::alloc&lt;blob_storage&gt; (4 samples, 0.08%)</title><rect x="240.7" y="373" width="0.9" height="15.0" fill="rgb(251,134,22)" rx="2" ry="2" />
<text  x="243.68" y="383.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.02%)</title><rect x="42.7" y="501" width="0.2" height="15.0" fill="rgb(221,211,15)" rx="2" ry="2" />
<text  x="45.67" y="511.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_28has_slice_or_needs_filteringERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES28_S2B_ (2 samples, 0.04%)</title><rect x="947.2" y="661" width="0.5" height="15.0" fill="rgb(230,8,0)" rx="2" ry="2" />
<text  x="950.24" y="671.5" ></text>
</g>
<g >
<title>bound_view::from_range_start&lt;nonwrapping_interval&gt; (7 samples, 0.13%)</title><rect x="285.2" y="485" width="1.6" height="15.0" fill="rgb(224,108,12)" rx="2" ry="2" />
<text  x="288.20" y="495.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (7 samples, 0.13%)</title><rect x="547.0" y="613" width="1.5" height="15.0" fill="rgb(229,62,29)" rx="2" ry="2" />
<text  x="549.97" y="623.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.02%)</title><rect x="56.3" y="597" width="0.2" height="15.0" fill="rgb(243,221,33)" rx="2" ry="2" />
<text  x="59.31" y="607.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;mutation_querier&gt;::_M_reset (1 samples, 0.02%)</title><rect x="868.9" y="677" width="0.3" height="15.0" fill="rgb(206,200,37)" rx="2" ry="2" />
<text  x="871.93" y="687.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_state&lt;std::tuple&lt;std::optional&lt;auth::resource&gt; &gt;, seastar::future&lt;bool&gt; &gt;::do_with_state&lt;std::optional&lt;auth::resource&gt; &gt; (3 samples, 0.06%)</title><rect x="786.8" y="613" width="0.7" height="15.0" fill="rgb(224,182,15)" rx="2" ry="2" />
<text  x="789.82" y="623.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::~CqlParser (1 samples, 0.02%)</title><rect x="66.4" y="741" width="0.2" height="15.0" fill="rgb(212,181,4)" rx="2" ry="2" />
<text  x="69.38" y="751.5" ></text>
</g>
<g >
<title>TLS init function for bound_view::_empty_prefix (3 samples, 0.06%)</title><rect x="283.2" y="485" width="0.7" height="15.0" fill="rgb(250,76,30)" rx="2" ry="2" />
<text  x="286.19" y="495.5" ></text>
</g>
<g >
<title>utils::fb_utilities::get_broadcast_address (1 samples, 0.02%)</title><rect x="1087.8" y="629" width="0.2" height="15.0" fill="rgb(252,146,54)" rx="2" ry="2" />
<text  x="1090.75" y="639.5" ></text>
</g>
<g >
<title>table::table (1 samples, 0.02%)</title><rect x="108.4" y="757" width="0.3" height="15.0" fill="rgb(210,173,42)" rx="2" ry="2" />
<text  x="111.45" y="767.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_move_assign (1 samples, 0.02%)</title><rect x="466.0" y="581" width="0.2" height="15.0" fill="rgb(216,75,52)" rx="2" ry="2" />
<text  x="468.98" y="591.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::directory_entry&gt;::clear (1 samples, 0.02%)</title><rect x="867.1" y="725" width="0.3" height="15.0" fill="rgb(236,213,42)" rx="2" ry="2" />
<text  x="870.14" y="735.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.02%)</title><rect x="557.3" y="677" width="0.2" height="15.0" fill="rgb(226,76,20)" rx="2" ry="2" />
<text  x="560.27" y="687.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.02%)</title><rect x="619.0" y="741" width="0.2" height="15.0" fill="rgb(208,48,22)" rx="2" ry="2" />
<text  x="622.02" y="751.5" ></text>
</g>
<g >
<title>from_hex (1 samples, 0.02%)</title><rect x="67.7" y="645" width="0.2" height="15.0" fill="rgb(233,59,53)" rx="2" ry="2" />
<text  x="70.72" y="655.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (1 samples, 0.02%)</title><rect x="339.6" y="549" width="0.2" height="15.0" fill="rgb(217,190,35)" rx="2" ry="2" />
<text  x="342.57" y="559.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.09%)</title><rect x="1041.7" y="549" width="1.1" height="15.0" fill="rgb(209,61,51)" rx="2" ry="2" />
<text  x="1044.66" y="559.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (1 samples, 0.02%)</title><rect x="717.5" y="709" width="0.2" height="15.0" fill="rgb(240,46,3)" rx="2" ry="2" />
<text  x="720.46" y="719.5" ></text>
</g>
<g >
<title>seastar::make_file_impl (1 samples, 0.02%)</title><rect x="682.8" y="789" width="0.2" height="15.0" fill="rgb(235,108,50)" rx="2" ry="2" />
<text  x="685.78" y="799.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_map&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::at&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt; &gt; (12 samples, 0.23%)</title><rect x="830.5" y="645" width="2.6" height="15.0" fill="rgb(219,175,2)" rx="2" ry="2" />
<text  x="833.45" y="655.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::_Tuple_impl (2 samples, 0.04%)</title><rect x="56.5" y="501" width="0.5" height="15.0" fill="rgb(216,10,8)" rx="2" ry="2" />
<text  x="59.54" y="511.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::untyped_constant&gt; (2 samples, 0.04%)</title><rect x="59.0" y="597" width="0.4" height="15.0" fill="rgb(218,85,11)" rx="2" ry="2" />
<text  x="62.00" y="607.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::operator (1 samples, 0.02%)</title><rect x="306.7" y="645" width="0.2" height="15.0" fill="rgb(211,99,45)" rx="2" ry="2" />
<text  x="309.68" y="655.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::untyped_constant&gt; (3 samples, 0.06%)</title><rect x="53.0" y="581" width="0.6" height="15.0" fill="rgb(248,7,21)" rx="2" ry="2" />
<text  x="55.96" y="591.5" ></text>
</g>
<g >
<title>cql3::statements::update_statement::update_statement (3 samples, 0.06%)</title><rect x="73.1" y="693" width="0.7" height="15.0" fill="rgb(251,107,43)" rx="2" ry="2" />
<text  x="76.09" y="703.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (2 samples, 0.04%)</title><rect x="530.6" y="581" width="0.5" height="15.0" fill="rgb(234,128,30)" rx="2" ry="2" />
<text  x="533.64" y="591.5" ></text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::EqualElement&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt;&amp;&gt; (5 samples, 0.09%)</title><rect x="831.3" y="613" width="1.2" height="15.0" fill="rgb(233,15,35)" rx="2" ry="2" />
<text  x="834.35" y="623.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (2 samples, 0.04%)</title><rect x="47.1" y="485" width="0.5" height="15.0" fill="rgb(225,30,36)" rx="2" ry="2" />
<text  x="50.14" y="495.5" ></text>
</g>
<g >
<title>intrusive_b::node&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (1 samples, 0.02%)</title><rect x="15.6" y="789" width="0.2" height="15.0" fill="rgb(248,204,35)" rx="2" ry="2" />
<text  x="18.59" y="799.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (1 samples, 0.02%)</title><rect x="854.2" y="709" width="0.2" height="15.0" fill="rgb(215,218,26)" rx="2" ry="2" />
<text  x="857.17" y="719.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (1 samples, 0.02%)</title><rect x="778.1" y="645" width="0.2" height="15.0" fill="rgb(220,159,3)" rx="2" ry="2" />
<text  x="781.10" y="655.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="583.2" y="581" width="0.2" height="15.0" fill="rgb(219,157,1)" rx="2" ry="2" />
<text  x="586.22" y="591.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::set_charPositionInLine (1 samples, 0.02%)</title><rect x="26.3" y="565" width="0.3" height="15.0" fill="rgb(218,107,28)" rx="2" ry="2" />
<text  x="29.33" y="575.5" ></text>
</g>
<g >
<title>ser::qr_partition__rows&lt;bytes_ostream&gt;::add (2 samples, 0.04%)</title><rect x="401.1" y="501" width="0.4" height="15.0" fill="rgb(213,228,24)" rx="2" ry="2" />
<text  x="404.10" y="511.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (1 samples, 0.02%)</title><rect x="507.4" y="613" width="0.2" height="15.0" fill="rgb(207,96,18)" rx="2" ry="2" />
<text  x="510.37" y="623.5" ></text>
</g>
<g >
<title>database::apply_with_commitlog (26 samples, 0.49%)</title><rect x="1123.1" y="613" width="5.8" height="15.0" fill="rgb(242,122,43)" rx="2" ry="2" />
<text  x="1126.10" y="623.5" ></text>
</g>
<g >
<title>locator::simple_strategy::calculate_natural_endpoints (1 samples, 0.02%)</title><rect x="108.7" y="789" width="0.2" height="15.0" fill="rgb(208,74,32)" rx="2" ry="2" />
<text  x="111.67" y="799.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (2 samples, 0.04%)</title><rect x="194.6" y="533" width="0.4" height="15.0" fill="rgb(211,134,41)" rx="2" ry="2" />
<text  x="197.58" y="543.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (3 samples, 0.06%)</title><rect x="532.9" y="629" width="0.6" height="15.0" fill="rgb(251,73,50)" rx="2" ry="2" />
<text  x="535.88" y="639.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (1 samples, 0.02%)</title><rect x="75.8" y="725" width="0.2" height="15.0" fill="rgb(212,21,29)" rx="2" ry="2" />
<text  x="78.78" y="735.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.02%)</title><rect x="55.2" y="453" width="0.2" height="15.0" fill="rgb(241,73,6)" rx="2" ry="2" />
<text  x="58.20" y="463.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.08%)</title><rect x="938.5" y="709" width="0.9" height="15.0" fill="rgb(206,39,11)" rx="2" ry="2" />
<text  x="941.52" y="719.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.04%)</title><rect x="512.5" y="581" width="0.5" height="15.0" fill="rgb(216,172,40)" rx="2" ry="2" />
<text  x="515.52" y="591.5" ></text>
</g>
<g >
<title>write_row&lt;ser::writer_of_deletable_row&lt;bytes_ostream&gt; &gt; (1 samples, 0.02%)</title><rect x="107.6" y="645" width="0.2" height="15.0" fill="rgb(230,131,41)" rx="2" ry="2" />
<text  x="110.55" y="655.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.02%)</title><rect x="695.5" y="597" width="0.3" height="15.0" fill="rgb(213,155,53)" rx="2" ry="2" />
<text  x="698.54" y="607.5" ></text>
</g>
<g >
<title>flat_mutation_reader::upgrade_schema (1 samples, 0.02%)</title><rect x="455.2" y="645" width="0.3" height="15.0" fill="rgb(223,118,22)" rx="2" ry="2" />
<text  x="458.24" y="655.5" ></text>
</g>
<g >
<title>validation::validate_column_family (2 samples, 0.04%)</title><rect x="74.2" y="757" width="0.5" height="15.0" fill="rgb(220,73,38)" rx="2" ry="2" />
<text  x="77.21" y="767.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (2 samples, 0.04%)</title><rect x="35.1" y="565" width="0.4" height="15.0" fill="rgb(240,113,18)" rx="2" ry="2" />
<text  x="38.06" y="575.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="1129.4" y="565" width="0.2" height="15.0" fill="rgb(207,173,13)" rx="2" ry="2" />
<text  x="1132.37" y="575.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="626.6" y="725" width="0.2" height="15.0" fill="rgb(225,82,5)" rx="2" ry="2" />
<text  x="629.62" y="735.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::guard (1 samples, 0.02%)</title><rect x="546.8" y="613" width="0.2" height="15.0" fill="rgb(206,33,19)" rx="2" ry="2" />
<text  x="549.75" y="623.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::inet_address (2 samples, 0.04%)</title><rect x="976.8" y="661" width="0.4" height="15.0" fill="rgb(234,138,39)" rx="2" ry="2" />
<text  x="979.78" y="671.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::at (5 samples, 0.09%)</title><rect x="768.3" y="661" width="1.1" height="15.0" fill="rgb(221,223,7)" rx="2" ry="2" />
<text  x="771.25" y="671.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (6 samples, 0.11%)</title><rect x="445.6" y="725" width="1.4" height="15.0" fill="rgb(221,97,4)" rx="2" ry="2" />
<text  x="448.62" y="735.5" ></text>
</g>
<g >
<title>ser::safe_serialize_as_uint32&lt;bytes_ostream&gt; (4 samples, 0.08%)</title><rect x="395.1" y="453" width="0.8" height="15.0" fill="rgb(216,70,39)" rx="2" ry="2" />
<text  x="398.05" y="463.5" ></text>
</g>
<g >
<title>std::optional&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::operator=&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; (1 samples, 0.02%)</title><rect x="74.9" y="773" width="0.2" height="15.0" fill="rgb(232,18,23)" rx="2" ry="2" />
<text  x="77.88" y="783.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (2 samples, 0.04%)</title><rect x="938.1" y="709" width="0.4" height="15.0" fill="rgb(244,10,44)" rx="2" ry="2" />
<text  x="941.07" y="719.5" ></text>
</g>
<g >
<title>dht::ring_position_comparator::operator (1 samples, 0.02%)</title><rect x="10.4" y="693" width="0.3" height="15.0" fill="rgb(221,187,0)" rx="2" ry="2" />
<text  x="13.45" y="703.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="48.3" y="549" width="0.2" height="15.0" fill="rgb(223,24,6)" rx="2" ry="2" />
<text  x="51.26" y="559.5" ></text>
</g>
<g >
<title>backlog_controller::adjust (2 samples, 0.04%)</title><rect x="1169.2" y="741" width="0.4" height="15.0" fill="rgb(207,140,25)" rx="2" ry="2" />
<text  x="1172.19" y="751.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (45 samples, 0.85%)</title><rect x="234.2" y="405" width="10.1" height="15.0" fill="rgb(209,215,23)" rx="2" ry="2" />
<text  x="237.19" y="415.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::pop_mutation_fragment (1 samples, 0.02%)</title><rect x="693.3" y="645" width="0.2" height="15.0" fill="rgb(234,82,38)" rx="2" ry="2" />
<text  x="696.30" y="655.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (5 samples, 0.09%)</title><rect x="802.0" y="501" width="1.2" height="15.0" fill="rgb(221,57,42)" rx="2" ry="2" />
<text  x="805.04" y="511.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.02%)</title><rect x="901.2" y="597" width="0.2" height="15.0" fill="rgb(240,11,7)" rx="2" ry="2" />
<text  x="904.15" y="607.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_pausable&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (420 samples, 7.96%)</title><rect x="340.9" y="581" width="94.0" height="15.0" fill="rgb(211,164,6)" rx="2" ry="2" />
<text  x="343.91" y="591.5" >flat_mutati..</text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.02%)</title><rect x="1140.3" y="789" width="0.3" height="15.0" fill="rgb(235,217,13)" rx="2" ry="2" />
<text  x="1143.33" y="799.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.02%)</title><rect x="824.6" y="677" width="0.3" height="15.0" fill="rgb(218,102,52)" rx="2" ry="2" />
<text  x="827.63" y="687.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_Optional_payload_base (2 samples, 0.04%)</title><rect x="159.9" y="693" width="0.5" height="15.0" fill="rgb(219,200,28)" rx="2" ry="2" />
<text  x="162.91" y="703.5" ></text>
</g>
<g >
<title>seastar::repeat&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (1 samples, 0.02%)</title><rect x="327.9" y="693" width="0.3" height="15.0" fill="rgb(243,186,34)" rx="2" ry="2" />
<text  x="330.93" y="703.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="60.8" y="629" width="0.2" height="15.0" fill="rgb(251,114,18)" rx="2" ry="2" />
<text  x="63.79" y="639.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_Optional_payload_base (1 samples, 0.02%)</title><rect x="761.8" y="709" width="0.2" height="15.0" fill="rgb(226,43,8)" rx="2" ry="2" />
<text  x="764.76" y="719.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_restrictions::size (1 samples, 0.02%)</title><rect x="70.0" y="677" width="0.2" height="15.0" fill="rgb(239,24,34)" rx="2" ry="2" />
<text  x="72.96" y="687.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::operator= (2 samples, 0.04%)</title><rect x="1144.8" y="789" width="0.5" height="15.0" fill="rgb(220,115,13)" rx="2" ry="2" />
<text  x="1147.80" y="799.5" ></text>
</g>
<g >
<title>double_decker&lt;long, memtable_entry, dht::raw_token_less_comparator, dht::ring_position_comparator, 16,  (87 samples, 1.65%)</title><rect x="482.8" y="629" width="19.4" height="15.0" fill="rgb(221,125,20)" rx="2" ry="2" />
<text  x="485.76" y="639.5" ></text>
</g>
<g >
<title>auth::get_permissions (123 samples, 2.33%)</title><rect x="791.5" y="613" width="27.5" height="15.0" fill="rgb(210,169,28)" rx="2" ry="2" />
<text  x="794.52" y="623.5" >a..</text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.02%)</title><rect x="20.1" y="517" width="0.2" height="15.0" fill="rgb(213,93,17)" rx="2" ry="2" />
<text  x="23.07" y="527.5" ></text>
</g>
<g >
<title>cql_transport::messages::result_message::rows::rows (1 samples, 0.02%)</title><rect x="662.2" y="741" width="0.2" height="15.0" fill="rgb(241,145,49)" rx="2" ry="2" />
<text  x="665.20" y="751.5" ></text>
</g>
<g >
<title>sstables::remove_by_toc_name (1 samples, 0.02%)</title><rect x="720.6" y="789" width="0.2" height="15.0" fill="rgb(214,113,18)" rx="2" ry="2" />
<text  x="723.60" y="799.5" ></text>
</g>
<g >
<title>std::construct_at&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; const&amp;&gt; (1 samples, 0.02%)</title><rect x="42.0" y="565" width="0.2" height="15.0" fill="rgb(210,100,48)" rx="2" ry="2" />
<text  x="44.99" y="575.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::~vector (2 samples, 0.04%)</title><rect x="646.1" y="773" width="0.4" height="15.0" fill="rgb(230,206,44)" rx="2" ry="2" />
<text  x="649.09" y="783.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (1 samples, 0.02%)</title><rect x="105.3" y="725" width="0.2" height="15.0" fill="rgb(246,191,46)" rx="2" ry="2" />
<text  x="108.31" y="735.5" ></text>
</g>
<g >
<title>cql3::relation::to_column_definition (1 samples, 0.02%)</title><rect x="69.5" y="677" width="0.2" height="15.0" fill="rgb(208,170,15)" rx="2" ry="2" />
<text  x="72.51" y="687.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_token (2 samples, 0.04%)</title><rect x="657.1" y="741" width="0.4" height="15.0" fill="rgb(219,56,13)" rx="2" ry="2" />
<text  x="660.05" y="751.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (5 samples, 0.09%)</title><rect x="728.6" y="693" width="1.2" height="15.0" fill="rgb(233,80,11)" rx="2" ry="2" />
<text  x="731.65" y="703.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="682.8" y="757" width="0.2" height="15.0" fill="rgb(213,214,5)" rx="2" ry="2" />
<text  x="685.78" y="767.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.06%)</title><rect x="819.5" y="613" width="0.7" height="15.0" fill="rgb(223,213,47)" rx="2" ry="2" />
<text  x="822.49" y="623.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.02%)</title><rect x="997.1" y="533" width="0.3" height="15.0" fill="rgb(234,157,11)" rx="2" ry="2" />
<text  x="1000.14" y="543.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (3 samples, 0.06%)</title><rect x="815.5" y="533" width="0.6" height="15.0" fill="rgb(218,103,19)" rx="2" ry="2" />
<text  x="818.46" y="543.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reserve&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::fill_buffer (6 samples, 0.11%)</title><rect x="79.4" y="693" width="1.3" height="15.0" fill="rgb(232,196,31)" rx="2" ry="2" />
<text  x="82.36" y="703.5" ></text>
</g>
<g >
<title>std::_Optional_base_impl&lt;mutation_querier, std::_Optional_base&lt;mutation_querier, false, false&gt; &gt;::_M_construct&lt;mutation_querier&gt; (1 samples, 0.02%)</title><rect x="356.8" y="469" width="0.2" height="15.0" fill="rgb(242,196,0)" rx="2" ry="2" />
<text  x="359.80" y="479.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_Optional_payload_base (2 samples, 0.04%)</title><rect x="751.7" y="677" width="0.4" height="15.0" fill="rgb(236,142,2)" rx="2" ry="2" />
<text  x="754.70" y="687.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::statements::list_roles_statement, std::default_delete&lt;cql3::statements::list_roles_statement&gt;, true, true&gt;::__uniq_ptr_data (1 samples, 0.02%)</title><rect x="63.0" y="661" width="0.2" height="15.0" fill="rgb(235,79,36)" rx="2" ry="2" />
<text  x="66.03" y="671.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::push_back (1 samples, 0.02%)</title><rect x="42.0" y="613" width="0.2" height="15.0" fill="rgb(217,201,24)" rx="2" ry="2" />
<text  x="44.99" y="623.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::raw::update_statement, std::default_delete&lt;cql3::statements::raw::update_statement&gt; &gt;::__uniq_ptr_impl (1 samples, 0.02%)</title><rect x="61.0" y="613" width="0.2" height="15.0" fill="rgb(235,70,42)" rx="2" ry="2" />
<text  x="64.01" y="623.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;range_tombstone*&gt;::allocate (1 samples, 0.02%)</title><rect x="562.9" y="677" width="0.2" height="15.0" fill="rgb(250,140,11)" rx="2" ry="2" />
<text  x="565.86" y="687.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (3 samples, 0.06%)</title><rect x="531.8" y="597" width="0.6" height="15.0" fill="rgb(238,222,22)" rx="2" ry="2" />
<text  x="534.76" y="607.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.02%)</title><rect x="45.4" y="501" width="0.2" height="15.0" fill="rgb(238,208,45)" rx="2" ry="2" />
<text  x="48.35" y="511.5" ></text>
</g>
<g >
<title>double_decker&lt;long, memtable_entry, dht::raw_token_less_comparator, dht::ring_position_comparator, 16,  (4 samples, 0.08%)</title><rect x="1124.0" y="517" width="0.9" height="15.0" fill="rgb(223,182,16)" rx="2" ry="2" />
<text  x="1127.00" y="527.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::construct&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (6 samples, 0.11%)</title><rect x="22.3" y="565" width="1.3" height="15.0" fill="rgb(245,170,22)" rx="2" ry="2" />
<text  x="25.31" y="575.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::raw::update_statement, std::default_delete&lt;cql3::statements::raw::update_statement&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::statements::raw::update_statement&gt;, void&gt; (1 samples, 0.02%)</title><rect x="63.9" y="677" width="0.2" height="15.0" fill="rgb(219,115,32)" rx="2" ry="2" />
<text  x="66.92" y="687.5" ></text>
</g>
<g >
<title>std::forward&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="49.8" y="469" width="0.2" height="15.0" fill="rgb(239,87,20)" rx="2" ry="2" />
<text  x="52.83" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (3 samples, 0.06%)</title><rect x="641.4" y="789" width="0.7" height="15.0" fill="rgb(244,195,39)" rx="2" ry="2" />
<text  x="644.39" y="799.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_last_fragment_kind, 4ul&gt;::~small_vector (1 samples, 0.02%)</title><rect x="600.2" y="677" width="0.2" height="15.0" fill="rgb(239,4,9)" rx="2" ry="2" />
<text  x="603.22" y="687.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;managed_bytes&gt;::operator= (1 samples, 0.02%)</title><rect x="875.9" y="565" width="0.2" height="15.0" fill="rgb(238,153,39)" rx="2" ry="2" />
<text  x="878.87" y="575.5" ></text>
</g>
<g >
<title>make_combined_reader (95 samples, 1.80%)</title><rect x="456.8" y="629" width="21.3" height="15.0" fill="rgb(207,137,2)" rx="2" ry="2" />
<text  x="459.81" y="639.5" >m..</text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::storage_proxy&gt;::~shared_ptr (3 samples, 0.06%)</title><rect x="1148.8" y="789" width="0.7" height="15.0" fill="rgb(238,20,4)" rx="2" ry="2" />
<text  x="1151.83" y="799.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mTokens (15 samples, 0.28%)</title><rect x="31.5" y="565" width="3.3" height="15.0" fill="rgb(226,104,16)" rx="2" ry="2" />
<text  x="34.48" y="575.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="576.3" y="613" width="0.2" height="15.0" fill="rgb(245,224,2)" rx="2" ry="2" />
<text  x="579.28" y="623.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (1 samples, 0.02%)</title><rect x="588.1" y="677" width="0.3" height="15.0" fill="rgb(208,29,5)" rx="2" ry="2" />
<text  x="591.14" y="687.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;query::read_command&gt;::make&lt;utils::UUID const&amp;, utils::UUID, query::partition_slice, query::max_result_size, query::row_limit, query::partition_limit, std::chrono::time_point&lt;gc_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt; &gt;&amp;, std::optional&lt;tracing::trace_info&gt;, utils::UUID, seastar::bool_class&lt;query::is_first_page_tag&gt; const&amp;, long&gt; (23 samples, 0.44%)</title><rect x="1110.3" y="725" width="5.2" height="15.0" fill="rgb(208,228,37)" rx="2" ry="2" />
<text  x="1113.35" y="735.5" ></text>
</g>
<g >
<title>boost::algorithm::split_iterator&lt;char*&gt;::split_iterator&lt;boost::algorithm::detail::token_finderF&lt;boost::algorithm::detail::is_any_ofF&lt;char&gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="720.6" y="741" width="0.2" height="15.0" fill="rgb(235,150,26)" rx="2" ry="2" />
<text  x="723.60" y="751.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="672.0" y="741" width="0.3" height="15.0" fill="rgb(241,179,40)" rx="2" ry="2" />
<text  x="675.04" y="751.5" ></text>
</g>
<g >
<title>utils::estimated_histogram::add (7 samples, 0.13%)</title><rect x="1159.1" y="773" width="1.6" height="15.0" fill="rgb(223,92,52)" rx="2" ry="2" />
<text  x="1162.12" y="783.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.02%)</title><rect x="260.4" y="437" width="0.2" height="15.0" fill="rgb(238,200,32)" rx="2" ry="2" />
<text  x="263.36" y="447.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (1 samples, 0.02%)</title><rect x="769.1" y="629" width="0.3" height="15.0" fill="rgb(239,117,53)" rx="2" ry="2" />
<text  x="772.15" y="639.5" ></text>
</g>
<g >
<title>std::pair&lt;auth::role_or_anonymous, auth::resource&gt;::pair&lt;auth::role_or_anonymous, auth::resource, true&gt; (9 samples, 0.17%)</title><rect x="811.2" y="565" width="2.0" height="15.0" fill="rgb(248,22,33)" rx="2" ry="2" />
<text  x="814.21" y="575.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.02%)</title><rect x="43.3" y="501" width="0.3" height="15.0" fill="rgb(229,206,27)" rx="2" ry="2" />
<text  x="46.34" y="511.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="330.6" y="693" width="0.2" height="15.0" fill="rgb(225,98,11)" rx="2" ry="2" />
<text  x="333.62" y="703.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit_slot&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::walking_visitor&lt;row::for_each_cell&lt;(anonymous namespace)::write_row_cells&lt;ser::deletable_row__cells&lt;bytes_ostream&gt; &gt; (1 samples, 0.02%)</title><rect x="105.8" y="501" width="0.2" height="15.0" fill="rgb(205,169,36)" rx="2" ry="2" />
<text  x="108.76" y="511.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (2 samples, 0.04%)</title><rect x="48.3" y="597" width="0.4" height="15.0" fill="rgb(238,168,53)" rx="2" ry="2" />
<text  x="51.26" y="607.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (5 samples, 0.09%)</title><rect x="996.2" y="549" width="1.2" height="15.0" fill="rgb(251,73,50)" rx="2" ry="2" />
<text  x="999.24" y="559.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::_M_range_initialize&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; const*&gt; (1 samples, 0.02%)</title><rect x="1102.1" y="693" width="0.2" height="15.0" fill="rgb(217,180,28)" rx="2" ry="2" />
<text  x="1105.07" y="703.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;tracking_allocator&lt;mutation_fragment&gt; &gt;::_S_destroy&lt;tracking_allocator&lt;mutation_fragment&gt;, mutation_fragment&gt; (1 samples, 0.02%)</title><rect x="431.3" y="565" width="0.2" height="15.0" fill="rgb(213,28,14)" rx="2" ry="2" />
<text  x="434.30" y="575.5" ></text>
</g>
<g >
<title>std::optional&lt;mutation_querier&gt;::emplace&lt;mutation_querier&gt; (1 samples, 0.02%)</title><rect x="356.8" y="485" width="0.2" height="15.0" fill="rgb(248,184,2)" rx="2" ry="2" />
<text  x="359.80" y="495.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt;::~_Variant_storage (3 samples, 0.06%)</title><rect x="915.9" y="645" width="0.7" height="15.0" fill="rgb(244,77,51)" rx="2" ry="2" />
<text  x="918.92" y="655.5" ></text>
</g>
<g >
<title>antlr3::IntStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::mark (4 samples, 0.08%)</title><rect x="33.3" y="533" width="0.9" height="15.0" fill="rgb(253,18,37)" rx="2" ry="2" />
<text  x="36.27" y="543.5" ></text>
</g>
<g >
<title>seastar::future&lt;boost::iterator_range&lt;mutation_fragment*&gt; &gt;::then_impl&lt;mutation_fragment_merger&lt;mutation_reader_merger&gt;::fetch (1 samples, 0.02%)</title><rect x="306.9" y="645" width="0.2" height="15.0" fill="rgb(240,30,40)" rx="2" ry="2" />
<text  x="309.90" y="655.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="436.0" y="597" width="0.2" height="15.0" fill="rgb(221,107,44)" rx="2" ry="2" />
<text  x="439.00" y="607.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt; &gt;  (2 samples, 0.04%)</title><rect x="70.4" y="581" width="0.5" height="15.0" fill="rgb(223,4,5)" rx="2" ry="2" />
<text  x="73.41" y="591.5" ></text>
</g>
<g >
<title>sstables::mc::writer::consume_end_of_stream (1 samples, 0.02%)</title><rect x="16.9" y="757" width="0.3" height="15.0" fill="rgb(227,174,23)" rx="2" ry="2" />
<text  x="19.94" y="767.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;gms::inet_address*, __gnu_cxx::__ops::_Iter_pred&lt;std::unary_negate&lt;std::binder1st&lt;std::_Mem_fn&lt;bool  (6 samples, 0.11%)</title><rect x="1085.1" y="613" width="1.3" height="15.0" fill="rgb(253,212,18)" rx="2" ry="2" />
<text  x="1088.07" y="623.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::_S_do_relocate (2 samples, 0.04%)</title><rect x="49.6" y="549" width="0.4" height="15.0" fill="rgb(225,140,25)" rx="2" ry="2" />
<text  x="52.60" y="559.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::begin (1 samples, 0.02%)</title><rect x="19.8" y="645" width="0.3" height="15.0" fill="rgb(214,4,37)" rx="2" ry="2" />
<text  x="22.84" y="655.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="55.2" y="469" width="0.2" height="15.0" fill="rgb(210,58,38)" rx="2" ry="2" />
<text  x="58.20" y="479.5" ></text>
</g>
<g >
<title>absl::hash_internal::AbslHashValue&lt;absl::hash_internal::HashState&gt; (4 samples, 0.08%)</title><rect x="1052.4" y="581" width="0.9" height="15.0" fill="rgb(208,171,11)" rx="2" ry="2" />
<text  x="1055.40" y="591.5" ></text>
</g>
<g >
<title>std::default_delete&lt;nonwrapping_interval&lt;dht::ring_position&gt; const&gt;::operator (2 samples, 0.04%)</title><rect x="605.4" y="709" width="0.4" height="15.0" fill="rgb(249,4,29)" rx="2" ry="2" />
<text  x="608.37" y="719.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (207 samples, 3.92%)</title><rect x="20.1" y="709" width="46.3" height="15.0" fill="rgb(225,153,38)" rx="2" ry="2" />
<text  x="23.07" y="719.5" >cql3..</text>
</g>
<g >
<title>reader_permit::consume (3 samples, 0.06%)</title><rect x="322.1" y="581" width="0.7" height="15.0" fill="rgb(221,46,54)" rx="2" ry="2" />
<text  x="325.12" y="591.5" ></text>
</g>
<g >
<title>query::result::builder::build (7 samples, 0.13%)</title><rect x="608.7" y="741" width="1.6" height="15.0" fill="rgb(235,164,45)" rx="2" ry="2" />
<text  x="611.73" y="751.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_M_reset (1 samples, 0.02%)</title><rect x="645.9" y="773" width="0.2" height="15.0" fill="rgb(209,127,3)" rx="2" ry="2" />
<text  x="648.87" y="783.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_Optional_payload_base (1 samples, 0.02%)</title><rect x="624.4" y="741" width="0.2" height="15.0" fill="rgb(208,85,35)" rx="2" ry="2" />
<text  x="627.39" y="751.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::allocate (11 samples, 0.21%)</title><rect x="320.3" y="597" width="2.5" height="15.0" fill="rgb(253,141,45)" rx="2" ry="2" />
<text  x="323.33" y="607.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::raw::parsed_statement, std::default_delete&lt;cql3::statements::raw::parsed_statement&gt; &gt;::operator= (1 samples, 0.02%)</title><rect x="65.7" y="661" width="0.2" height="15.0" fill="rgb(209,27,40)" rx="2" ry="2" />
<text  x="68.71" y="671.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::metadata&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="660.0" y="773" width="0.2" height="15.0" fill="rgb(227,229,0)" rx="2" ry="2" />
<text  x="662.96" y="783.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::emplace_back&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;&amp;&gt; (2 samples, 0.04%)</title><rect x="778.3" y="677" width="0.5" height="15.0" fill="rgb(234,205,50)" rx="2" ry="2" />
<text  x="781.32" y="687.5" ></text>
</g>
<g >
<title>operator new (7 samples, 0.13%)</title><rect x="157.7" y="693" width="1.5" height="15.0" fill="rgb(248,45,5)" rx="2" ry="2" />
<text  x="160.67" y="703.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;schema const&gt;::operator= (1 samples, 0.02%)</title><rect x="1039.0" y="581" width="0.2" height="15.0" fill="rgb(247,124,2)" rx="2" ry="2" />
<text  x="1041.98" y="591.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::node_size (1 samples, 0.02%)</title><rect x="254.5" y="453" width="0.3" height="15.0" fill="rgb(235,82,6)" rx="2" ry="2" />
<text  x="257.55" y="463.5" ></text>
</g>
<g >
<title>schema_registry_entry::load (3 samples, 0.06%)</title><rect x="107.8" y="757" width="0.6" height="15.0" fill="rgb(210,15,12)" rx="2" ry="2" />
<text  x="110.77" y="767.5" ></text>
</g>
<g >
<title>std::forward&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; const&amp;&gt; (1 samples, 0.02%)</title><rect x="52.5" y="533" width="0.2" height="15.0" fill="rgb(250,132,35)" rx="2" ry="2" />
<text  x="55.51" y="543.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.04%)</title><rect x="534.2" y="597" width="0.5" height="15.0" fill="rgb(208,175,51)" rx="2" ry="2" />
<text  x="537.22" y="607.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (8 samples, 0.15%)</title><rect x="564.4" y="629" width="1.8" height="15.0" fill="rgb(229,38,30)" rx="2" ry="2" />
<text  x="567.43" y="639.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_destroy_data (2 samples, 0.04%)</title><rect x="403.1" y="485" width="0.5" height="15.0" fill="rgb(223,229,47)" rx="2" ry="2" />
<text  x="406.11" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_insert&lt;flat_mutation_reader&gt; (1 samples, 0.02%)</title><rect x="465.8" y="581" width="0.2" height="15.0" fill="rgb(233,157,17)" rx="2" ry="2" />
<text  x="468.76" y="591.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="19.6" y="709" width="0.2" height="15.0" fill="rgb(252,227,4)" rx="2" ry="2" />
<text  x="22.62" y="719.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (2 samples, 0.04%)</title><rect x="38.4" y="501" width="0.5" height="15.0" fill="rgb(218,197,6)" rx="2" ry="2" />
<text  x="41.41" y="511.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.08%)</title><rect x="765.8" y="693" width="0.9" height="15.0" fill="rgb(227,110,34)" rx="2" ry="2" />
<text  x="768.79" y="703.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (2 samples, 0.04%)</title><rect x="20.3" y="645" width="0.4" height="15.0" fill="rgb(207,224,35)" rx="2" ry="2" />
<text  x="23.29" y="655.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (2 samples, 0.04%)</title><rect x="666.2" y="789" width="0.5" height="15.0" fill="rgb(244,146,44)" rx="2" ry="2" />
<text  x="669.23" y="799.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="121.0" y="741" width="0.2" height="15.0" fill="rgb(226,62,14)" rx="2" ry="2" />
<text  x="123.97" y="751.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::clear (1 samples, 0.02%)</title><rect x="468.0" y="581" width="0.2" height="15.0" fill="rgb(252,51,20)" rx="2" ry="2" />
<text  x="470.99" y="591.5" ></text>
</g>
<g >
<title>db::schema_tables::calculate_schema_digest (2 samples, 0.04%)</title><rect x="106.7" y="741" width="0.4" height="15.0" fill="rgb(215,150,37)" rx="2" ry="2" />
<text  x="109.66" y="751.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (1 samples, 0.02%)</title><rect x="55.4" y="565" width="0.2" height="15.0" fill="rgb(246,74,30)" rx="2" ry="2" />
<text  x="58.42" y="575.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (22 samples, 0.42%)</title><rect x="426.4" y="549" width="4.9" height="15.0" fill="rgb(226,213,25)" rx="2" ry="2" />
<text  x="429.38" y="559.5" ></text>
</g>
<g >
<title>_ZSt5applyIZN7seastar8internal12do_with_implISt8optionalIN4auth8resourceEEZNK7service12client_state20check_has_permissionENS4_12command_descEE3$_7JEEEDaOT_OT0_DpOT1_EUlDpOT_E_St5tupleIJOS6_EEEDcSC_SE_ (4 samples, 0.08%)</title><rect x="786.6" y="629" width="0.9" height="15.0" fill="rgb(243,181,39)" rx="2" ry="2" />
<text  x="789.60" y="639.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (1 samples, 0.02%)</title><rect x="14.5" y="725" width="0.2" height="15.0" fill="rgb(216,168,20)" rx="2" ry="2" />
<text  x="17.47" y="735.5" ></text>
</g>
<g >
<title>evictable_reader::try_resume (1 samples, 0.02%)</title><rect x="106.9" y="453" width="0.2" height="15.0" fill="rgb(207,144,7)" rx="2" ry="2" />
<text  x="109.88" y="463.5" ></text>
</g>
<g >
<title>service::get_local_priority_manager (2 samples, 0.04%)</title><rect x="621.7" y="741" width="0.5" height="15.0" fill="rgb(210,46,13)" rx="2" ry="2" />
<text  x="624.70" y="751.5" ></text>
</g>
<g >
<title>seastar::reactor_backend_aio::reap_kernel_completions (3 samples, 0.06%)</title><rect x="1169.2" y="805" width="0.7" height="15.0" fill="rgb(233,156,1)" rx="2" ry="2" />
<text  x="1172.19" y="815.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.02%)</title><rect x="693.7" y="597" width="0.3" height="15.0" fill="rgb(241,164,32)" rx="2" ry="2" />
<text  x="696.75" y="607.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reserve&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (426 samples, 8.08%)</title><rect x="200.6" y="581" width="95.3" height="15.0" fill="rgb(228,40,22)" rx="2" ry="2" />
<text  x="203.63" y="591.5" >logalloc::a..</text>
</g>
<g >
<title>managed_bytes::managed_bytes (2 samples, 0.04%)</title><rect x="944.8" y="629" width="0.4" height="15.0" fill="rgb(238,76,48)" rx="2" ry="2" />
<text  x="947.78" y="639.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (3 samples, 0.06%)</title><rect x="751.0" y="661" width="0.7" height="15.0" fill="rgb(231,156,21)" rx="2" ry="2" />
<text  x="754.02" y="671.5" ></text>
</g>
<g >
<title>utils::tuple_hash::operator (15 samples, 0.28%)</title><rect x="807.2" y="469" width="3.3" height="15.0" fill="rgb(244,103,37)" rx="2" ry="2" />
<text  x="810.18" y="479.5" ></text>
</g>
<g >
<title>tracing::global_trace_state_ptr::get (1 samples, 0.02%)</title><rect x="1038.3" y="565" width="0.2" height="15.0" fill="rgb(237,62,12)" rx="2" ry="2" />
<text  x="1041.30" y="575.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (6 samples, 0.11%)</title><rect x="45.1" y="629" width="1.4" height="15.0" fill="rgb(252,23,10)" rx="2" ry="2" />
<text  x="48.13" y="639.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="645.2" y="757" width="0.2" height="15.0" fill="rgb(231,59,0)" rx="2" ry="2" />
<text  x="648.20" y="767.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reclaiming_disabled&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (1 samples, 0.02%)</title><rect x="869.2" y="645" width="0.2" height="15.0" fill="rgb(226,88,13)" rx="2" ry="2" />
<text  x="872.16" y="655.5" ></text>
</g>
<g >
<title>cql3::constants::setter::execute (11 samples, 0.21%)</title><rect x="873.9" y="629" width="2.4" height="15.0" fill="rgb(213,203,11)" rx="2" ry="2" />
<text  x="876.86" y="639.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (2 samples, 0.04%)</title><rect x="761.1" y="693" width="0.4" height="15.0" fill="rgb(253,137,12)" rx="2" ry="2" />
<text  x="764.09" y="703.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::CommonToken (5 samples, 0.09%)</title><rect x="22.5" y="517" width="1.1" height="15.0" fill="rgb(253,173,9)" rx="2" ry="2" />
<text  x="25.53" y="527.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="540.0" y="645" width="0.3" height="15.0" fill="rgb(209,159,30)" rx="2" ry="2" />
<text  x="543.04" y="655.5" ></text>
</g>
<g >
<title>distributed_loader::init_system_keyspace (1 samples, 0.02%)</title><rect x="16.5" y="853" width="0.2" height="15.0" fill="rgb(215,40,21)" rx="2" ry="2" />
<text  x="19.49" y="863.5" ></text>
</g>
<g >
<title>std::hash&lt;std::basic_string_view&lt;signed char, std::char_traits&lt;signed char&gt; &gt; &gt;::operator (1 samples, 0.02%)</title><rect x="740.1" y="629" width="0.2" height="15.0" fill="rgb(207,80,14)" rx="2" ry="2" />
<text  x="743.06" y="639.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;::~basic_ostream (1 samples, 0.02%)</title><rect x="81.8" y="917" width="0.2" height="15.0" fill="rgb(236,23,12)" rx="2" ry="2" />
<text  x="84.82" y="927.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (3 samples, 0.06%)</title><rect x="1114.6" y="693" width="0.7" height="15.0" fill="rgb(218,157,46)" rx="2" ry="2" />
<text  x="1117.60" y="703.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::fill_buffer (6 samples, 0.11%)</title><rect x="79.4" y="725" width="1.3" height="15.0" fill="rgb(219,103,10)" rx="2" ry="2" />
<text  x="82.36" y="735.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (4 samples, 0.08%)</title><rect x="1112.1" y="677" width="0.9" height="15.0" fill="rgb(220,137,10)" rx="2" ry="2" />
<text  x="1115.14" y="687.5" ></text>
</g>
<g >
<title>query_result_builder::consume_new_partition (1 samples, 0.02%)</title><rect x="868.9" y="709" width="0.3" height="15.0" fill="rgb(213,47,51)" rx="2" ry="2" />
<text  x="871.93" y="719.5" ></text>
</g>
<g >
<title>partition_snapshot::slide_to_oldest (3 samples, 0.06%)</title><rect x="584.1" y="581" width="0.7" height="15.0" fill="rgb(214,212,13)" rx="2" ry="2" />
<text  x="587.11" y="591.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="1123.8" y="453" width="0.2" height="15.0" fill="rgb(247,174,23)" rx="2" ry="2" />
<text  x="1126.77" y="463.5" ></text>
</g>
<g >
<title>logalloc::region_impl::free (1 samples, 0.02%)</title><rect x="695.5" y="405" width="0.3" height="15.0" fill="rgb(208,36,5)" rx="2" ry="2" />
<text  x="698.54" y="415.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate_to_raw_view (1 samples, 0.02%)</title><rect x="871.6" y="613" width="0.2" height="15.0" fill="rgb(249,204,3)" rx="2" ry="2" />
<text  x="874.62" y="623.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.04%)</title><rect x="54.7" y="485" width="0.5" height="15.0" fill="rgb(239,125,11)" rx="2" ry="2" />
<text  x="57.75" y="495.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="40.4" y="565" width="0.3" height="15.0" fill="rgb(222,11,41)" rx="2" ry="2" />
<text  x="43.43" y="575.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_M_move_assign (3 samples, 0.06%)</title><rect x="1101.0" y="677" width="0.6" height="15.0" fill="rgb(205,176,20)" rx="2" ry="2" />
<text  x="1103.95" y="687.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::~impl (9 samples, 0.17%)</title><rect x="589.3" y="677" width="2.0" height="15.0" fill="rgb(216,174,4)" rx="2" ry="2" />
<text  x="592.26" y="687.5" ></text>
</g>
<g >
<title>scanning_reader::fill_buffer_from_delegate (1 samples, 0.02%)</title><rect x="106.7" y="293" width="0.2" height="15.0" fill="rgb(229,142,5)" rx="2" ry="2" />
<text  x="109.66" y="303.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::value_ptr&gt;::future_state&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry_ptr&gt; (3 samples, 0.06%)</title><rect x="749.7" y="629" width="0.7" height="15.0" fill="rgb(250,137,14)" rx="2" ry="2" />
<text  x="752.68" y="639.5" ></text>
</g>
<g >
<title>sstables::sstable::do_write_simple (1 samples, 0.02%)</title><rect x="16.9" y="709" width="0.3" height="15.0" fill="rgb(229,119,51)" rx="2" ry="2" />
<text  x="19.94" y="719.5" ></text>
</g>
<g >
<title>seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::expand (1 samples, 0.02%)</title><rect x="324.6" y="629" width="0.2" height="15.0" fill="rgb(222,167,8)" rx="2" ry="2" />
<text  x="327.58" y="639.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (2 samples, 0.04%)</title><rect x="539.6" y="629" width="0.4" height="15.0" fill="rgb(251,182,20)" rx="2" ry="2" />
<text  x="542.59" y="639.5" ></text>
</g>
<g >
<title>operator new (7 samples, 0.13%)</title><rect x="505.8" y="597" width="1.6" height="15.0" fill="rgb(239,130,35)" rx="2" ry="2" />
<text  x="508.81" y="607.5" ></text>
</g>
<g >
<title>sstring_hash::operator (4 samples, 0.08%)</title><rect x="853.3" y="661" width="0.9" height="15.0" fill="rgb(217,160,2)" rx="2" ry="2" />
<text  x="856.27" y="671.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (4 samples, 0.08%)</title><rect x="419.9" y="501" width="0.9" height="15.0" fill="rgb(232,113,20)" rx="2" ry="2" />
<text  x="422.89" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt;::reserve (5 samples, 0.09%)</title><rect x="1152.0" y="757" width="1.1" height="15.0" fill="rgb(220,105,30)" rx="2" ry="2" />
<text  x="1154.96" y="767.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (4 samples, 0.08%)</title><rect x="43.6" y="453" width="0.9" height="15.0" fill="rgb(243,165,41)" rx="2" ry="2" />
<text  x="46.56" y="463.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (4 samples, 0.08%)</title><rect x="648.8" y="789" width="0.9" height="15.0" fill="rgb(210,89,10)" rx="2" ry="2" />
<text  x="651.78" y="799.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::clear (1 samples, 0.02%)</title><rect x="597.5" y="645" width="0.3" height="15.0" fill="rgb(231,78,36)" rx="2" ry="2" />
<text  x="600.54" y="655.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::response_count (3 samples, 0.06%)</title><rect x="715.2" y="725" width="0.7" height="15.0" fill="rgb(222,53,25)" rx="2" ry="2" />
<text  x="718.23" y="735.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;false, false, std::random_access_iterator_tag&gt;::__copy_m&lt;char const*, fmt::v7::detail::buffer_appender&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="18.3" y="789" width="0.2" height="15.0" fill="rgb(238,110,32)" rx="2" ry="2" />
<text  x="21.28" y="799.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.02%)</title><rect x="57.9" y="565" width="0.2" height="15.0" fill="rgb(210,151,46)" rx="2" ry="2" />
<text  x="60.88" y="575.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (1 samples, 0.02%)</title><rect x="28.8" y="549" width="0.2" height="15.0" fill="rgb(241,178,34)" rx="2" ry="2" />
<text  x="31.79" y="559.5" ></text>
</g>
<g >
<title>schema_builder::build (1 samples, 0.02%)</title><rect x="16.5" y="549" width="0.2" height="15.0" fill="rgb(248,196,42)" rx="2" ry="2" />
<text  x="19.49" y="559.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::clear (1 samples, 0.02%)</title><rect x="108.0" y="629" width="0.2" height="15.0" fill="rgb(229,122,29)" rx="2" ry="2" />
<text  x="111.00" y="639.5" ></text>
</g>
<g >
<title>bound_view::from_range&lt;nonwrapping_interval&gt; (1 samples, 0.02%)</title><rect x="80.5" y="613" width="0.2" height="15.0" fill="rgb(242,75,2)" rx="2" ry="2" />
<text  x="83.48" y="623.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="633.3" y="693" width="0.3" height="15.0" fill="rgb(228,194,5)" rx="2" ry="2" />
<text  x="636.34" y="703.5" ></text>
</g>
<g >
<title>std::hash&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::operator (1 samples, 0.02%)</title><rect x="772.5" y="629" width="0.2" height="15.0" fill="rgb(223,134,48)" rx="2" ry="2" />
<text  x="775.50" y="639.5" ></text>
</g>
<g >
<title>range_tombstone_stream::empty (1 samples, 0.02%)</title><rect x="274.0" y="517" width="0.2" height="15.0" fill="rgb(209,87,5)" rx="2" ry="2" />
<text  x="277.01" y="527.5" ></text>
</g>
<g >
<title>std::hash&lt;gms::inet_address&gt;::operator (1 samples, 0.02%)</title><rect x="1151.7" y="725" width="0.3" height="15.0" fill="rgb(249,209,38)" rx="2" ry="2" />
<text  x="1154.74" y="735.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.02%)</title><rect x="58.1" y="533" width="0.2" height="15.0" fill="rgb(212,74,35)" rx="2" ry="2" />
<text  x="61.10" y="543.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEENK4$_43clERKNSF_15binary_operatorEEUlRKNSF_12column_valueEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_17tuple_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlNSF_5tokenEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlSS_E_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_11conjunctionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_8constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_21unresolved_identifierEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_25column_mutation_attributeEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13function_callEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4castEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_15field_selectionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4nullEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13bind_variableEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_16untyped_constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_22collection_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_20usertype_constructorEE_EERS4_IJS14_SQ_ST_S11_S1C_S1G_S1K_S1O_S1S_S1W_S20_S24_S18_SX_S28_S2C_EEEJEEESt16integer_sequenceImJLm2EEEE14__visit_invokeES2H_S2J_ (104 samples, 1.97%)</title><rect x="896.7" y="677" width="23.2" height="15.0" fill="rgb(231,113,26)" rx="2" ry="2" />
<text  x="899.68" y="687.5" >_..</text>
</g>
<g >
<title>remove_or_mark_as_unique_owner (1 samples, 0.02%)</title><rect x="14.5" y="805" width="0.2" height="15.0" fill="rgb(228,160,21)" rx="2" ry="2" />
<text  x="17.47" y="815.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::on_new_range (54 samples, 1.02%)</title><rect x="279.2" y="565" width="12.0" height="15.0" fill="rgb(242,130,21)" rx="2" ry="2" />
<text  x="282.16" y="575.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_in_thread&lt;sstables::sstable_writer, flat_mutation_reader::no_filter&gt; (14 samples, 0.27%)</title><rect x="78.7" y="821" width="3.1" height="15.0" fill="rgb(233,154,46)" rx="2" ry="2" />
<text  x="81.69" y="831.5" ></text>
</g>
<g >
<title>cql3::column_identifier_raw::prepare_column_identifier (1 samples, 0.02%)</title><rect x="67.1" y="725" width="0.2" height="15.0" fill="rgb(245,175,5)" rx="2" ry="2" />
<text  x="70.05" y="735.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="48.7" y="581" width="0.2" height="15.0" fill="rgb(228,35,39)" rx="2" ry="2" />
<text  x="51.71" y="591.5" ></text>
</g>
<g >
<title>std::chrono::_V2::system_clock::now (1 samples, 0.02%)</title><rect x="1118.6" y="725" width="0.3" height="15.0" fill="rgb(226,169,29)" rx="2" ry="2" />
<text  x="1121.63" y="735.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::fetch (2 samples, 0.04%)</title><rect x="172.7" y="661" width="0.4" height="15.0" fill="rgb(251,63,15)" rx="2" ry="2" />
<text  x="175.66" y="671.5" ></text>
</g>
<g >
<title>auth::resource::parent (10 samples, 0.19%)</title><rect x="787.5" y="629" width="2.2" height="15.0" fill="rgb(252,163,4)" rx="2" ry="2" />
<text  x="790.49" y="639.5" ></text>
</g>
<g >
<title>utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (4 samples, 0.08%)</title><rect x="799.1" y="453" width="0.9" height="15.0" fill="rgb(249,73,47)" rx="2" ry="2" />
<text  x="802.13" y="463.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const*, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;*&gt; (1 samples, 0.02%)</title><rect x="801.8" y="501" width="0.2" height="15.0" fill="rgb(215,31,23)" rx="2" ry="2" />
<text  x="804.81" y="511.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;service::digest_read_resolver&gt;::shared_ptr_count_for&lt;seastar::lw_shared_ptr&lt;schema const&gt;&amp;, db::consistency_level&amp;, unsigned long&amp;, unsigned long, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;&amp;&gt; (1 samples, 0.02%)</title><rect x="984.4" y="645" width="0.2" height="15.0" fill="rgb(214,187,3)" rx="2" ry="2" />
<text  x="987.38" y="655.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;mutation_fragment&gt;::allocate (1 samples, 0.02%)</title><rect x="209.4" y="501" width="0.2" height="15.0" fill="rgb(254,14,15)" rx="2" ry="2" />
<text  x="212.35" y="511.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;bool  (1 samples, 0.02%)</title><rect x="69.3" y="693" width="0.2" height="15.0" fill="rgb(205,83,35)" rx="2" ry="2" />
<text  x="72.29" y="703.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.02%)</title><rect x="958.0" y="693" width="0.2" height="15.0" fill="rgb(219,4,28)" rx="2" ry="2" />
<text  x="960.98" y="703.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (4 samples, 0.08%)</title><rect x="46.7" y="597" width="0.9" height="15.0" fill="rgb(223,14,37)" rx="2" ry="2" />
<text  x="49.69" y="607.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.02%)</title><rect x="38.9" y="501" width="0.2" height="15.0" fill="rgb(236,228,42)" rx="2" ry="2" />
<text  x="41.86" y="511.5" ></text>
</g>
<g >
<title>position_in_partition::position_in_partition (3 samples, 0.06%)</title><rect x="277.1" y="549" width="0.7" height="15.0" fill="rgb(243,62,43)" rx="2" ry="2" />
<text  x="280.14" y="559.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value_view, std::allocator&lt;cql3::raw_value_view&gt; &gt;::emplace_back&lt;cql3::raw_value_view&gt; (1 samples, 0.02%)</title><rect x="860.0" y="709" width="0.2" height="15.0" fill="rgb(244,208,36)" rx="2" ry="2" />
<text  x="862.98" y="719.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_slice_or_needs_filtering (4 samples, 0.08%)</title><rect x="946.8" y="693" width="0.9" height="15.0" fill="rgb(230,21,20)" rx="2" ry="2" />
<text  x="949.80" y="703.5" ></text>
</g>
<g >
<title>make_random_seq (2 samples, 0.04%)</title><rect x="730.0" y="773" width="0.4" height="15.0" fill="rgb(205,140,49)" rx="2" ry="2" />
<text  x="732.99" y="783.5" ></text>
</g>
<g >
<title>__dynamic_cast (1 samples, 0.02%)</title><rect x="68.4" y="709" width="0.2" height="15.0" fill="rgb(205,210,54)" rx="2" ry="2" />
<text  x="71.40" y="719.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::has_available_units (1 samples, 0.02%)</title><rect x="318.1" y="597" width="0.2" height="15.0" fill="rgb(232,149,51)" rx="2" ry="2" />
<text  x="321.09" y="607.5" ></text>
</g>
<g >
<title>seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::expand (18 samples, 0.34%)</title><rect x="318.8" y="613" width="4.0" height="15.0" fill="rgb(216,216,43)" rx="2" ry="2" />
<text  x="321.76" y="623.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.02%)</title><rect x="368.2" y="485" width="0.2" height="15.0" fill="rgb(251,0,9)" rx="2" ry="2" />
<text  x="371.21" y="495.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;2ul, cql3::expr::untyped_constant&gt; (1 samples, 0.02%)</title><rect x="53.4" y="277" width="0.2" height="15.0" fill="rgb(231,17,4)" rx="2" ry="2" />
<text  x="56.41" y="287.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::constant&gt;  (49 samples, 0.93%)</title><rect x="901.6" y="613" width="11.0" height="15.0" fill="rgb(225,126,40)" rx="2" ry="2" />
<text  x="904.60" y="623.5" ></text>
</g>
<g >
<title>ser::after_column__id&lt;bytes_ostream&gt;::start_c_variant (2 samples, 0.04%)</title><rect x="1135.4" y="405" width="0.5" height="15.0" fill="rgb(211,227,20)" rx="2" ry="2" />
<text  x="1138.41" y="415.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureISt5tupleIJEEE9then_implIZNS3_14discard_resultEvEUlDpOT_E_NS0_IvEEEET0_OT_ (1 samples, 0.02%)</title><rect x="1131.2" y="629" width="0.2" height="15.0" fill="rgb(219,84,26)" rx="2" ry="2" />
<text  x="1134.16" y="639.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;column_definition const* const, cql3::expr::expression&gt;, false&gt; &gt; &gt;::_M_deallocate_node (1 samples, 0.02%)</title><rect x="72.0" y="645" width="0.2" height="15.0" fill="rgb(217,56,2)" rx="2" ry="2" />
<text  x="74.98" y="655.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (3 samples, 0.06%)</title><rect x="869.2" y="757" width="0.6" height="15.0" fill="rgb(222,88,18)" rx="2" ry="2" />
<text  x="872.16" y="767.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (1 samples, 0.02%)</title><rect x="799.8" y="437" width="0.2" height="15.0" fill="rgb(250,38,40)" rx="2" ry="2" />
<text  x="802.80" y="447.5" ></text>
</g>
<g >
<title>db::commitlog::add_entry (5 samples, 0.09%)</title><rect x="1128.9" y="613" width="1.1" height="15.0" fill="rgb(234,186,17)" rx="2" ry="2" />
<text  x="1131.92" y="623.5" ></text>
</g>
<g >
<title>utils::basic_ihistogram&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt; &gt;::mark (2 samples, 0.04%)</title><rect x="614.8" y="709" width="0.4" height="15.0" fill="rgb(253,205,39)" rx="2" ry="2" />
<text  x="617.77" y="719.5" ></text>
</g>
<g >
<title>query::result_view::consume&lt;query::result_set_builder&amp;&gt; (1 samples, 0.02%)</title><rect x="107.3" y="757" width="0.3" height="15.0" fill="rgb(239,213,42)" rx="2" ry="2" />
<text  x="110.33" y="767.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::vector (14 samples, 0.27%)</title><rect x="1041.0" y="581" width="3.1" height="15.0" fill="rgb(213,62,8)" rx="2" ry="2" />
<text  x="1043.99" y="591.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.02%)</title><rect x="23.2" y="453" width="0.2" height="15.0" fill="rgb(252,161,8)" rx="2" ry="2" />
<text  x="26.20" y="463.5" ></text>
</g>
<g >
<title>mutation_fragment::consume&lt;flat_mutation_reader::impl::consumer_adapter&lt;sstables::sstable_writer&gt; &gt; (5 samples, 0.09%)</title><rect x="80.7" y="789" width="1.1" height="15.0" fill="rgb(212,92,48)" rx="2" ry="2" />
<text  x="83.70" y="799.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::guard (1 samples, 0.02%)</title><rect x="503.1" y="629" width="0.2" height="15.0" fill="rgb(244,147,7)" rx="2" ry="2" />
<text  x="506.12" y="639.5" ></text>
</g>
<g >
<title>query::result_view::consume&lt;query::result_set_builder&amp;&gt; (1 samples, 0.02%)</title><rect x="108.2" y="629" width="0.2" height="15.0" fill="rgb(248,11,12)" rx="2" ry="2" />
<text  x="111.22" y="639.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit_slot&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::walking_visitor&lt;row::for_each_cell&lt;sstables::mc::writer::write_cells (2 samples, 0.04%)</title><rect x="81.1" y="661" width="0.5" height="15.0" fill="rgb(231,44,30)" rx="2" ry="2" />
<text  x="84.15" y="671.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reclaiming_disabled&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::get_static_row (11 samples, 0.21%)</title><rect x="291.7" y="533" width="2.4" height="15.0" fill="rgb(218,139,34)" rx="2" ry="2" />
<text  x="294.69" y="543.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;std::tuple&lt;seastar::lw_shared_ptr&lt;query::result&gt;, cache_temperature&gt; &gt;::set&lt;std::tuple&lt;seastar::lw_shared_ptr&lt;query::result&gt;, cache_temperature&gt; &gt; (2 samples, 0.04%)</title><rect x="103.7" y="773" width="0.5" height="15.0" fill="rgb(218,56,54)" rx="2" ry="2" />
<text  x="106.75" y="783.5" ></text>
</g>
<g >
<title>cql3::restrictions::(anonymous namespace)::range_from_bytes (75 samples, 1.42%)</title><rect x="920.6" y="709" width="16.8" height="15.0" fill="rgb(224,134,34)" rx="2" ry="2" />
<text  x="923.62" y="719.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.02%)</title><rect x="766.5" y="677" width="0.2" height="15.0" fill="rgb(235,102,32)" rx="2" ry="2" />
<text  x="769.46" y="687.5" ></text>
</g>
<g >
<title>read_simple&lt;long, managed_bytes_basic_view&lt; (2 samples, 0.04%)</title><rect x="417.0" y="469" width="0.4" height="15.0" fill="rgb(225,97,21)" rx="2" ry="2" />
<text  x="419.98" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::stats (6 samples, 0.11%)</title><rect x="547.2" y="597" width="1.3" height="15.0" fill="rgb(210,121,48)" rx="2" ry="2" />
<text  x="550.20" y="607.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.02%)</title><rect x="848.8" y="677" width="0.2" height="15.0" fill="rgb(220,82,7)" rx="2" ry="2" />
<text  x="851.80" y="687.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::statements::raw::update_statement, std::default_delete&lt;cql3::statements::raw::update_statement&gt;, true, true&gt;::__uniq_ptr_impl (1 samples, 0.02%)</title><rect x="61.0" y="629" width="0.2" height="15.0" fill="rgb(254,224,38)" rx="2" ry="2" />
<text  x="64.01" y="639.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (12 samples, 0.23%)</title><rect x="1050.6" y="613" width="2.7" height="15.0" fill="rgb(223,144,40)" rx="2" ry="2" />
<text  x="1053.61" y="623.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::range_tombstone_accumulator (1 samples, 0.02%)</title><rect x="567.6" y="709" width="0.2" height="15.0" fill="rgb(216,229,36)" rx="2" ry="2" />
<text  x="570.56" y="719.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (1 samples, 0.02%)</title><rect x="23.4" y="485" width="0.2" height="15.0" fill="rgb(216,46,54)" rx="2" ry="2" />
<text  x="26.42" y="495.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::~small_vector (2 samples, 0.04%)</title><rect x="1167.2" y="725" width="0.4" height="15.0" fill="rgb(207,12,20)" rx="2" ry="2" />
<text  x="1170.18" y="735.5" ></text>
</g>
<g >
<title>partition_snapshot::versions (2 samples, 0.04%)</title><rect x="264.4" y="437" width="0.4" height="15.0" fill="rgb(247,16,20)" rx="2" ry="2" />
<text  x="267.39" y="447.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::__uniq_ptr_data (2 samples, 0.04%)</title><rect x="56.5" y="549" width="0.5" height="15.0" fill="rgb(206,166,42)" rx="2" ry="2" />
<text  x="59.54" y="559.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.02%)</title><rect x="45.4" y="405" width="0.2" height="15.0" fill="rgb(227,26,13)" rx="2" ry="2" />
<text  x="48.35" y="415.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::~partition_snapshot_flat_reader (50 samples, 0.95%)</title><rect x="576.5" y="629" width="11.2" height="15.0" fill="rgb(215,129,5)" rx="2" ry="2" />
<text  x="579.51" y="639.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;nonwrapping_interval&lt;dht::ring_position&gt; const*, nonwrapping_interval&lt;dht::ring_position&gt;*&gt; (5 samples, 0.09%)</title><rect x="1043.0" y="549" width="1.1" height="15.0" fill="rgb(208,71,45)" rx="2" ry="2" />
<text  x="1046.00" y="559.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_singular (112 samples, 2.12%)</title><rect x="1142.6" y="805" width="25.0" height="15.0" fill="rgb(234,38,42)" rx="2" ry="2" />
<text  x="1145.57" y="815.5" >s..</text>
</g>
<g >
<title>std::type_info::operator== (1 samples, 0.02%)</title><rect x="1061.8" y="581" width="0.2" height="15.0" fill="rgb(251,38,5)" rx="2" ry="2" />
<text  x="1064.80" y="591.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;void&gt;  (1 samples, 0.02%)</title><rect x="867.1" y="741" width="0.3" height="15.0" fill="rgb(253,51,41)" rx="2" ry="2" />
<text  x="870.14" y="751.5" ></text>
</g>
<g >
<title>logalloc::region_impl::alloc (1 samples, 0.02%)</title><rect x="1126.5" y="485" width="0.2" height="15.0" fill="rgb(212,184,35)" rx="2" ry="2" />
<text  x="1129.46" y="495.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (3 samples, 0.06%)</title><rect x="329.7" y="693" width="0.7" height="15.0" fill="rgb(233,0,24)" rx="2" ry="2" />
<text  x="332.72" y="703.5" ></text>
</g>
<g >
<title>operator delete (5 samples, 0.09%)</title><rect x="594.0" y="661" width="1.1" height="15.0" fill="rgb(226,34,41)" rx="2" ry="2" />
<text  x="596.96" y="671.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_cachedSize (1 samples, 0.02%)</title><rect x="43.1" y="565" width="0.2" height="15.0" fill="rgb(224,194,21)" rx="2" ry="2" />
<text  x="46.11" y="575.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each_state::get_future (1 samples, 0.02%)</title><rect x="1132.1" y="565" width="0.2" height="15.0" fill="rgb(218,24,41)" rx="2" ry="2" />
<text  x="1135.05" y="575.5" ></text>
</g>
<g >
<title>query::digester::digester (1 samples, 0.02%)</title><rect x="611.9" y="709" width="0.2" height="15.0" fill="rgb(226,55,13)" rx="2" ry="2" />
<text  x="614.86" y="719.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="42.4" y="581" width="0.3" height="15.0" fill="rgb(223,62,1)" rx="2" ry="2" />
<text  x="45.44" y="591.5" ></text>
</g>
<g >
<title>database::apply_in_memory (1 samples, 0.02%)</title><rect x="1122.9" y="613" width="0.2" height="15.0" fill="rgb(225,0,38)" rx="2" ry="2" />
<text  x="1125.88" y="623.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base&lt;11ul, cql3::expr::untyped_constant&gt; (1 samples, 0.02%)</title><rect x="53.4" y="517" width="0.2" height="15.0" fill="rgb(236,31,18)" rx="2" ry="2" />
<text  x="56.41" y="527.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;managed_bytes&gt;::make&lt;managed_bytes&gt; (1 samples, 0.02%)</title><rect x="915.2" y="629" width="0.3" height="15.0" fill="rgb(210,11,10)" rx="2" ry="2" />
<text  x="918.25" y="639.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (1 samples, 0.02%)</title><rect x="917.3" y="661" width="0.2" height="15.0" fill="rgb(254,123,18)" rx="2" ry="2" />
<text  x="920.26" y="671.5" ></text>
</g>
<g >
<title>db::schema_tables::calculate_schema_digest (3 samples, 0.06%)</title><rect x="106.7" y="757" width="0.6" height="15.0" fill="rgb(246,191,33)" rx="2" ry="2" />
<text  x="109.66" y="767.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.02%)</title><rect x="16.5" y="821" width="0.2" height="15.0" fill="rgb(249,127,46)" rx="2" ry="2" />
<text  x="19.49" y="831.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::upper_bound&lt;mutation_partition, schema const&amp;, nonwrapping_interval&lt;clustering_key_prefix&gt; const&amp;&gt; (1 samples, 0.02%)</title><rect x="266.2" y="453" width="0.2" height="15.0" fill="rgb(216,89,18)" rx="2" ry="2" />
<text  x="269.18" y="463.5" ></text>
</g>
<g >
<title>std::operator+ (2 samples, 0.04%)</title><rect x="47.1" y="469" width="0.5" height="15.0" fill="rgb(225,135,24)" rx="2" ry="2" />
<text  x="50.14" y="479.5" ></text>
</g>
<g >
<title>locator::i_endpoint_snitch::snitch_instance (1 samples, 0.02%)</title><rect x="1086.6" y="613" width="0.3" height="15.0" fill="rgb(225,46,0)" rx="2" ry="2" />
<text  x="1089.63" y="623.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::whereClause (13 samples, 0.25%)</title><rect x="57.4" y="661" width="2.9" height="15.0" fill="rgb(212,28,25)" rx="2" ry="2" />
<text  x="60.43" y="671.5" ></text>
</g>
<g >
<title>nonwrapping_interval&lt;dht::ring_position&gt;::overlaps&lt;dht::ring_position_comparator&amp;&gt; (1 samples, 0.02%)</title><rect x="10.4" y="725" width="0.3" height="15.0" fill="rgb(247,166,23)" rx="2" ry="2" />
<text  x="13.45" y="735.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::query_options, std::default_delete&lt;cql3::query_options&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="862.9" y="773" width="0.2" height="15.0" fill="rgb(224,147,21)" rx="2" ry="2" />
<text  x="865.89" y="783.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (2 samples, 0.04%)</title><rect x="679.7" y="741" width="0.4" height="15.0" fill="rgb(254,42,13)" rx="2" ry="2" />
<text  x="682.65" y="751.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (1 samples, 0.02%)</title><rect x="557.9" y="709" width="0.3" height="15.0" fill="rgb(216,49,45)" rx="2" ry="2" />
<text  x="560.94" y="719.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;bool, bool  (4 samples, 0.08%)</title><rect x="1085.5" y="581" width="0.9" height="15.0" fill="rgb(224,179,51)" rx="2" ry="2" />
<text  x="1088.51" y="591.5" ></text>
</g>
<g >
<title>schema::column_at (1 samples, 0.02%)</title><rect x="400.9" y="501" width="0.2" height="15.0" fill="rgb(232,133,45)" rx="2" ry="2" />
<text  x="403.87" y="511.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::do_merge_with (3 samples, 0.06%)</title><rect x="70.4" y="629" width="0.7" height="15.0" fill="rgb(216,89,26)" rx="2" ry="2" />
<text  x="73.41" y="639.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="56.3" y="565" width="0.2" height="15.0" fill="rgb(218,136,28)" rx="2" ry="2" />
<text  x="59.31" y="575.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::vector (3 samples, 0.06%)</title><rect x="1107.4" y="709" width="0.7" height="15.0" fill="rgb(250,69,54)" rx="2" ry="2" />
<text  x="1110.44" y="719.5" ></text>
</g>
<g >
<title>seastar::chunked_fifo&lt;seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::entry, 128ul&gt;::back_chunk_new (1 samples, 0.02%)</title><rect x="1022.2" y="485" width="0.2" height="15.0" fill="rgb(229,74,19)" rx="2" ry="2" />
<text  x="1025.20" y="495.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="60.8" y="645" width="0.2" height="15.0" fill="rgb(229,20,43)" rx="2" ry="2" />
<text  x="63.79" y="655.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;compact_for_query&lt; (1 samples, 0.02%)</title><rect x="439.1" y="645" width="0.3" height="15.0" fill="rgb(247,36,48)" rx="2" ry="2" />
<text  x="442.13" y="655.5" ></text>
</g>
<g >
<title>cql3::query_processor::process_authorized_statement (1 samples, 0.02%)</title><rect x="19.2" y="773" width="0.2" height="15.0" fill="rgb(236,52,46)" rx="2" ry="2" />
<text  x="22.17" y="783.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::close (1 samples, 0.02%)</title><rect x="587.9" y="645" width="0.2" height="15.0" fill="rgb(225,105,41)" rx="2" ry="2" />
<text  x="590.92" y="655.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (9 samples, 0.17%)</title><rect x="514.8" y="565" width="2.0" height="15.0" fill="rgb(215,112,4)" rx="2" ry="2" />
<text  x="517.76" y="575.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (2 samples, 0.04%)</title><rect x="1166.3" y="725" width="0.4" height="15.0" fill="rgb(227,9,34)" rx="2" ry="2" />
<text  x="1169.28" y="735.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.02%)</title><rect x="587.7" y="629" width="0.2" height="15.0" fill="rgb(234,33,11)" rx="2" ry="2" />
<text  x="590.69" y="639.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::get_tokenStartCharIndex (1 samples, 0.02%)</title><rect x="28.3" y="565" width="0.3" height="15.0" fill="rgb(235,170,27)" rx="2" ry="2" />
<text  x="31.35" y="575.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (12 samples, 0.23%)</title><rect x="423.0" y="549" width="2.7" height="15.0" fill="rgb(232,145,53)" rx="2" ry="2" />
<text  x="426.02" y="559.5" ></text>
</g>
<g >
<title>empty_flat_reader::~empty_flat_reader (4 samples, 0.08%)</title><rect x="573.6" y="629" width="0.9" height="15.0" fill="rgb(227,96,30)" rx="2" ry="2" />
<text  x="576.60" y="639.5" ></text>
</g>
<g >
<title>frozen_mutation::column_family_id (1 samples, 0.02%)</title><rect x="1132.7" y="469" width="0.2" height="15.0" fill="rgb(240,90,23)" rx="2" ry="2" />
<text  x="1135.72" y="479.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (6 samples, 0.11%)</title><rect x="545.2" y="565" width="1.3" height="15.0" fill="rgb(253,155,19)" rx="2" ry="2" />
<text  x="548.18" y="575.5" ></text>
</g>
<g >
<title>evictable_reader::resume_or_create_reader (1 samples, 0.02%)</title><rect x="106.9" y="469" width="0.2" height="15.0" fill="rgb(212,124,5)" rx="2" ry="2" />
<text  x="109.88" y="479.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql3::metadata&gt;::shared_ptr_count_for&lt;cql3::metadata&amp;&gt; (1 samples, 0.02%)</title><rect x="661.1" y="757" width="0.2" height="15.0" fill="rgb(224,168,6)" rx="2" ry="2" />
<text  x="664.08" y="767.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (4 samples, 0.08%)</title><rect x="755.7" y="581" width="0.9" height="15.0" fill="rgb(206,8,37)" rx="2" ry="2" />
<text  x="758.72" y="591.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::has_available_units (1 samples, 0.02%)</title><rect x="589.9" y="629" width="0.3" height="15.0" fill="rgb(212,37,26)" rx="2" ry="2" />
<text  x="592.93" y="639.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (1 samples, 0.02%)</title><rect x="191.0" y="549" width="0.2" height="15.0" fill="rgb(223,221,36)" rx="2" ry="2" />
<text  x="194.00" y="559.5" ></text>
</g>
<g >
<title>db::schema_tables::v3::views (1 samples, 0.02%)</title><rect x="16.5" y="565" width="0.2" height="15.0" fill="rgb(239,7,30)" rx="2" ry="2" />
<text  x="19.49" y="575.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (1 samples, 0.02%)</title><rect x="332.4" y="661" width="0.2" height="15.0" fill="rgb(227,88,28)" rx="2" ry="2" />
<text  x="335.41" y="671.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.04%)</title><rect x="632.4" y="693" width="0.5" height="15.0" fill="rgb(223,126,11)" rx="2" ry="2" />
<text  x="635.44" y="703.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.06%)</title><rect x="114.0" y="773" width="0.7" height="15.0" fill="rgb(229,154,8)" rx="2" ry="2" />
<text  x="117.04" y="783.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.02%)</title><rect x="42.4" y="549" width="0.3" height="15.0" fill="rgb(241,102,52)" rx="2" ry="2" />
<text  x="45.44" y="559.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::~holder (1 samples, 0.02%)</title><rect x="581.0" y="597" width="0.2" height="15.0" fill="rgb(242,191,40)" rx="2" ry="2" />
<text  x="583.98" y="607.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::_S_relocate (2 samples, 0.04%)</title><rect x="49.6" y="565" width="0.4" height="15.0" fill="rgb(249,55,39)" rx="2" ry="2" />
<text  x="52.60" y="575.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_nodes (2 samples, 0.04%)</title><rect x="1095.6" y="677" width="0.4" height="15.0" fill="rgb(222,52,48)" rx="2" ry="2" />
<text  x="1098.58" y="687.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (1 samples, 0.02%)</title><rect x="1148.6" y="789" width="0.2" height="15.0" fill="rgb(247,164,42)" rx="2" ry="2" />
<text  x="1151.61" y="799.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::hasException (1 samples, 0.02%)</title><rect x="54.5" y="565" width="0.2" height="15.0" fill="rgb(231,38,28)" rx="2" ry="2" />
<text  x="57.52" y="575.5" ></text>
</g>
<g >
<title>auth::resource::resource (10 samples, 0.19%)</title><rect x="776.5" y="693" width="2.3" height="15.0" fill="rgb(248,58,51)" rx="2" ry="2" />
<text  x="779.53" y="703.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::initial_key_restrictions&lt;partition_key&gt;::do_merge_to (4 samples, 0.08%)</title><rect x="70.4" y="677" width="0.9" height="15.0" fill="rgb(208,214,54)" rx="2" ry="2" />
<text  x="73.41" y="687.5" ></text>
</g>
<g >
<title>partition_key_view::legacy_tri_compare (31 samples, 0.59%)</title><rect x="495.1" y="549" width="6.9" height="15.0" fill="rgb(242,162,34)" rx="2" ry="2" />
<text  x="498.07" y="559.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::set_type (1 samples, 0.02%)</title><rect x="26.8" y="565" width="0.2" height="15.0" fill="rgb(243,54,11)" rx="2" ry="2" />
<text  x="29.78" y="575.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (283 samples, 5.37%)</title><rect x="14.7" y="901" width="63.3" height="15.0" fill="rgb(253,98,38)" rx="2" ry="2" />
<text  x="17.70" y="911.5" >seasta..</text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.06%)</title><rect x="848.4" y="693" width="0.6" height="15.0" fill="rgb(233,99,23)" rx="2" ry="2" />
<text  x="851.35" y="703.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::then_impl&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (3 samples, 0.06%)</title><rect x="171.5" y="677" width="0.7" height="15.0" fill="rgb(210,19,39)" rx="2" ry="2" />
<text  x="174.54" y="687.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (2 samples, 0.04%)</title><rect x="1138.8" y="581" width="0.4" height="15.0" fill="rgb(246,46,20)" rx="2" ry="2" />
<text  x="1141.76" y="591.5" ></text>
</g>
<g >
<title>seastar::schedule_urgent (1 samples, 0.02%)</title><rect x="676.7" y="789" width="0.3" height="15.0" fill="rgb(245,164,33)" rx="2" ry="2" />
<text  x="679.74" y="799.5" ></text>
</g>
<g >
<title>seastar::internal::future_base::set_coroutine (1 samples, 0.02%)</title><rect x="1037.2" y="565" width="0.2" height="15.0" fill="rgb(222,15,49)" rx="2" ry="2" />
<text  x="1040.19" y="575.5" ></text>
</g>
<g >
<title>seastar::file::close (1 samples, 0.02%)</title><rect x="696.0" y="789" width="0.2" height="15.0" fill="rgb(240,185,36)" rx="2" ry="2" />
<text  x="698.98" y="799.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.02%)</title><rect x="1026.7" y="469" width="0.2" height="15.0" fill="rgb(225,90,8)" rx="2" ry="2" />
<text  x="1029.67" y="479.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned char const, std::optional&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt;, false&gt; &gt; &gt;::_M_deallocate_nodes (1 samples, 0.02%)</title><rect x="680.8" y="725" width="0.2" height="15.0" fill="rgb(229,95,1)" rx="2" ry="2" />
<text  x="683.77" y="735.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, cql3::statements::drop_index_statement*, std::default_delete&lt;cql3::statements::drop_index_statement&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="62.6" y="613" width="0.2" height="15.0" fill="rgb(237,191,8)" rx="2" ry="2" />
<text  x="65.58" y="623.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::get0 (1 samples, 0.02%)</title><rect x="616.3" y="741" width="0.3" height="15.0" fill="rgb(213,142,53)" rx="2" ry="2" />
<text  x="619.33" y="751.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::reserve (1 samples, 0.02%)</title><rect x="1120.4" y="725" width="0.2" height="15.0" fill="rgb(231,160,47)" rx="2" ry="2" />
<text  x="1123.42" y="735.5" ></text>
</g>
<g >
<title>locator::abstract_replication_strategy::get_natural_endpoints (1 samples, 0.02%)</title><rect x="1137.6" y="485" width="0.3" height="15.0" fill="rgb(209,115,8)" rx="2" ry="2" />
<text  x="1140.65" y="495.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::do_wait_admission (1 samples, 0.02%)</title><rect x="1017.5" y="549" width="0.2" height="15.0" fill="rgb(231,170,31)" rx="2" ry="2" />
<text  x="1020.50" y="559.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::add_raw_update (6 samples, 0.11%)</title><rect x="49.2" y="613" width="1.3" height="15.0" fill="rgb(224,35,5)" rx="2" ry="2" />
<text  x="52.15" y="623.5" ></text>
</g>
<g >
<title>bound_view::from_range_end&lt;nonwrapping_interval&gt; (6 samples, 0.11%)</title><rect x="283.9" y="485" width="1.3" height="15.0" fill="rgb(220,140,16)" rx="2" ry="2" />
<text  x="286.86" y="495.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;managed_bytes&gt;::make&lt;managed_bytes&gt; (1 samples, 0.02%)</title><rect x="871.6" y="565" width="0.2" height="15.0" fill="rgb(219,194,23)" rx="2" ry="2" />
<text  x="874.62" y="575.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (1 samples, 0.02%)</title><rect x="507.6" y="613" width="0.2" height="15.0" fill="rgb(231,159,28)" rx="2" ry="2" />
<text  x="510.60" y="623.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::get_at (1 samples, 0.02%)</title><rect x="693.5" y="581" width="0.2" height="15.0" fill="rgb(231,205,17)" rx="2" ry="2" />
<text  x="696.52" y="591.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::lsa_partition_reader::do_refresh_state (1 samples, 0.02%)</title><rect x="80.5" y="645" width="0.2" height="15.0" fill="rgb(210,78,5)" rx="2" ry="2" />
<text  x="83.48" y="655.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;void&gt;::set_urgent_state (2 samples, 0.04%)</title><rect x="111.8" y="789" width="0.4" height="15.0" fill="rgb(240,32,54)" rx="2" ry="2" />
<text  x="114.80" y="799.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="59.4" y="485" width="0.3" height="15.0" fill="rgb(240,52,15)" rx="2" ry="2" />
<text  x="62.45" y="495.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (7 samples, 0.13%)</title><rect x="207.1" y="517" width="1.6" height="15.0" fill="rgb(233,125,38)" rx="2" ry="2" />
<text  x="210.11" y="527.5" ></text>
</g>
<g >
<title>reader_permit::impl::impl (1 samples, 0.02%)</title><rect x="1029.4" y="533" width="0.2" height="15.0" fill="rgb(214,186,22)" rx="2" ry="2" />
<text  x="1032.36" y="543.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (1 samples, 0.02%)</title><rect x="674.1" y="789" width="0.2" height="15.0" fill="rgb(241,7,25)" rx="2" ry="2" />
<text  x="677.06" y="799.5" ></text>
</g>
<g >
<title>malloc (3 samples, 0.06%)</title><rect x="612.3" y="677" width="0.7" height="15.0" fill="rgb(250,149,15)" rx="2" ry="2" />
<text  x="615.31" y="687.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::merging_reader (22 samples, 0.42%)</title><rect x="470.9" y="597" width="4.9" height="15.0" fill="rgb(207,163,6)" rx="2" ry="2" />
<text  x="473.90" y="607.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (1 samples, 0.02%)</title><rect x="106.9" y="597" width="0.2" height="15.0" fill="rgb(227,194,4)" rx="2" ry="2" />
<text  x="109.88" y="607.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::followPop (1 samples, 0.02%)</title><rect x="41.8" y="645" width="0.2" height="15.0" fill="rgb(223,20,17)" rx="2" ry="2" />
<text  x="44.77" y="655.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (6 samples, 0.11%)</title><rect x="161.2" y="741" width="1.4" height="15.0" fill="rgb(221,188,16)" rx="2" ry="2" />
<text  x="164.25" y="751.5" ></text>
</g>
<g >
<title>mutation_querier::query_static_row (6 samples, 0.11%)</title><rect x="369.5" y="469" width="1.4" height="15.0" fill="rgb(206,204,22)" rx="2" ry="2" />
<text  x="372.55" y="479.5" ></text>
</g>
<g >
<title>std::optional&lt;reader_concurrency_semaphore::entry&gt;::optional&lt;reader_concurrency_semaphore::entry, true&gt; (3 samples, 0.06%)</title><rect x="1025.3" y="453" width="0.7" height="15.0" fill="rgb(248,80,14)" rx="2" ry="2" />
<text  x="1028.33" y="463.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (1 samples, 0.02%)</title><rect x="704.5" y="757" width="0.2" height="15.0" fill="rgb(225,207,30)" rx="2" ry="2" />
<text  x="707.49" y="767.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (5 samples, 0.09%)</title><rect x="925.1" y="645" width="1.1" height="15.0" fill="rgb(227,213,20)" rx="2" ry="2" />
<text  x="928.09" y="655.5" ></text>
</g>
<g >
<title>do_query_on_all_shards&lt;(anonymous namespace)::mutation_query_result_builder&gt; (1 samples, 0.02%)</title><rect x="105.8" y="693" width="0.2" height="15.0" fill="rgb(217,187,30)" rx="2" ry="2" />
<text  x="108.76" y="703.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (2 samples, 0.04%)</title><rect x="351.4" y="469" width="0.5" height="15.0" fill="rgb(219,91,47)" rx="2" ry="2" />
<text  x="354.43" y="479.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::iterator_at (1 samples, 0.02%)</title><rect x="843.9" y="677" width="0.2" height="15.0" fill="rgb(209,33,39)" rx="2" ry="2" />
<text  x="846.88" y="687.5" ></text>
</g>
<g >
<title>cql3::attributes::is_timeout_set (1 samples, 0.02%)</title><rect x="952.4" y="693" width="0.2" height="15.0" fill="rgb(209,180,54)" rx="2" ry="2" />
<text  x="955.39" y="703.5" ></text>
</g>
<g >
<title>db::schema_tables::merge_schema (3 samples, 0.06%)</title><rect x="106.7" y="805" width="0.6" height="15.0" fill="rgb(227,157,6)" rx="2" ry="2" />
<text  x="109.66" y="815.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;bool  (7 samples, 0.13%)</title><rect x="1168.5" y="821" width="1.6" height="15.0" fill="rgb(218,141,22)" rx="2" ry="2" />
<text  x="1171.52" y="831.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (2 samples, 0.04%)</title><rect x="244.3" y="405" width="0.4" height="15.0" fill="rgb(248,3,2)" rx="2" ry="2" />
<text  x="247.25" y="415.5" ></text>
</g>
<g >
<title>cql3::authorized_prepared_statements_cache::insert (66 samples, 1.25%)</title><rect x="746.1" y="709" width="14.8" height="15.0" fill="rgb(239,55,23)" rx="2" ry="2" />
<text  x="749.10" y="719.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;std::pair&lt;seastar::shared_ptr&lt;service::abstract_read_executor&gt;, nonwrapping_interval&lt;dht::token&gt; &gt;, 1ul&gt;::emplace_back&lt;seastar::shared_ptr&lt;service::abstract_read_executor&gt;&amp;, nonwrapping_interval&lt;dht::token&gt; &gt; (1 samples, 0.02%)</title><rect x="1091.3" y="661" width="0.3" height="15.0" fill="rgb(248,122,42)" rx="2" ry="2" />
<text  x="1094.33" y="671.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="72.0" y="597" width="0.2" height="15.0" fill="rgb(237,46,34)" rx="2" ry="2" />
<text  x="74.98" y="607.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;cql3::expr::expression const*, cql3::expr::expression*&gt; (2 samples, 0.04%)</title><rect x="70.4" y="533" width="0.5" height="15.0" fill="rgb(218,9,31)" rx="2" ry="2" />
<text  x="73.41" y="543.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (5 samples, 0.09%)</title><rect x="1007.4" y="565" width="1.1" height="15.0" fill="rgb(217,169,27)" rx="2" ry="2" />
<text  x="1010.43" y="575.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (16 samples, 0.30%)</title><rect x="426.8" y="517" width="3.6" height="15.0" fill="rgb(211,30,54)" rx="2" ry="2" />
<text  x="429.83" y="527.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate (43 samples, 0.82%)</title><rect x="901.6" y="597" width="9.6" height="15.0" fill="rgb(249,71,22)" rx="2" ry="2" />
<text  x="904.60" y="607.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::digest_read_resolver&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="719.5" y="789" width="0.2" height="15.0" fill="rgb(227,76,21)" rx="2" ry="2" />
<text  x="722.48" y="799.5" ></text>
</g>
<g >
<title>query::result_atomic_cell_view::value (1 samples, 0.02%)</title><rect x="107.8" y="597" width="0.2" height="15.0" fill="rgb(248,218,6)" rx="2" ry="2" />
<text  x="110.77" y="607.5" ></text>
</g>
<g >
<title>database::has_keyspace (18 samples, 0.34%)</title><rect x="850.1" y="709" width="4.1" height="15.0" fill="rgb(209,116,4)" rx="2" ry="2" />
<text  x="853.14" y="719.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::~impl (1 samples, 0.02%)</title><rect x="570.5" y="693" width="0.2" height="15.0" fill="rgb(235,75,16)" rx="2" ry="2" />
<text  x="573.47" y="703.5" ></text>
</g>
<g >
<title>seastar::timer_set&lt;seastar::timer&lt;std::chrono::_V2::steady_clock&gt;, &amp;seastar::timer&lt;std::chrono::_V2::steady_clock&gt;::_link&gt;::expire (1 samples, 0.02%)</title><rect x="1169.6" y="741" width="0.3" height="15.0" fill="rgb(210,168,50)" rx="2" ry="2" />
<text  x="1172.64" y="751.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::execute (11 samples, 0.21%)</title><rect x="763.3" y="709" width="2.5" height="15.0" fill="rgb(219,215,23)" rx="2" ry="2" />
<text  x="766.33" y="719.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (1 samples, 0.02%)</title><rect x="55.4" y="549" width="0.2" height="15.0" fill="rgb(247,68,40)" rx="2" ry="2" />
<text  x="58.42" y="559.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.06%)</title><rect x="210.7" y="501" width="0.7" height="15.0" fill="rgb(214,99,17)" rx="2" ry="2" />
<text  x="213.69" y="511.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;table&gt;::make&lt;seastar::lw_shared_ptr&lt;schema const&gt;&amp;, table::config, db::commitlog&amp;, compaction_manager&amp;, cell_locker_stats&amp;, cache_tracker&amp;&gt; (1 samples, 0.02%)</title><rect x="108.4" y="773" width="0.3" height="15.0" fill="rgb(241,18,3)" rx="2" ry="2" />
<text  x="111.45" y="783.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (1 samples, 0.02%)</title><rect x="693.5" y="613" width="0.2" height="15.0" fill="rgb(217,150,8)" rx="2" ry="2" />
<text  x="696.52" y="623.5" ></text>
</g>
<g >
<title>boost::intrusive::bstbase&lt;boost::intrusive::mhtraits&lt;range_tombstone_entry, boost::intrusive::set_member_hook&lt;boost::intrusive::link_mode&lt; (1 samples, 0.02%)</title><rect x="581.2" y="597" width="0.2" height="15.0" fill="rgb(208,8,16)" rx="2" ry="2" />
<text  x="584.21" y="607.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume_in_thread&lt;stable_flattened_mutations_consumer&lt;compact_for_compaction&lt;sstables::compacting_sstable_writer, noop_compacted_fragments_consumer&gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="16.9" y="853" width="0.3" height="15.0" fill="rgb(214,167,16)" rx="2" ry="2" />
<text  x="19.94" y="863.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (2 samples, 0.04%)</title><rect x="659.5" y="773" width="0.5" height="15.0" fill="rgb(231,217,23)" rx="2" ry="2" />
<text  x="662.51" y="783.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::pop_mutation_fragment (1 samples, 0.02%)</title><rect x="179.1" y="613" width="0.3" height="15.0" fill="rgb(230,204,9)" rx="2" ry="2" />
<text  x="182.15" y="623.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_state&lt;std::tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;, seastar::future&lt;void&gt; &gt;::do_with_state&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const&amp;, auth::resource&gt; (8 samples, 0.15%)</title><rect x="774.7" y="677" width="1.8" height="15.0" fill="rgb(238,205,53)" rx="2" ry="2" />
<text  x="777.74" y="687.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (251 samples, 4.76%)</title><rect x="19.4" y="789" width="56.2" height="15.0" fill="rgb(235,221,16)" rx="2" ry="2" />
<text  x="22.40" y="799.5" >cql3:..</text>
</g>
<g >
<title>operator delete (7 samples, 0.13%)</title><rect x="705.8" y="789" width="1.6" height="15.0" fill="rgb(210,26,10)" rx="2" ry="2" />
<text  x="708.83" y="799.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::splice (2 samples, 0.04%)</title><rect x="191.2" y="549" width="0.5" height="15.0" fill="rgb(208,19,2)" rx="2" ry="2" />
<text  x="194.23" y="559.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::~partition_snapshot_flat_reader (29 samples, 0.55%)</title><rect x="580.5" y="613" width="6.5" height="15.0" fill="rgb(215,10,29)" rx="2" ry="2" />
<text  x="583.53" y="623.5" ></text>
</g>
<g >
<title>position_in_partition_view::for_range_end (4 samples, 0.08%)</title><rect x="275.1" y="533" width="0.9" height="15.0" fill="rgb(243,162,2)" rx="2" ry="2" />
<text  x="278.13" y="543.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (4 samples, 0.08%)</title><rect x="434.0" y="533" width="0.9" height="15.0" fill="rgb(214,148,8)" rx="2" ry="2" />
<text  x="436.99" y="543.5" ></text>
</g>
<g >
<title>reader_permit::consume (2 samples, 0.04%)</title><rect x="261.0" y="437" width="0.5" height="15.0" fill="rgb(233,54,33)" rx="2" ry="2" />
<text  x="264.04" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="23.9" y="485" width="0.2" height="15.0" fill="rgb(209,128,45)" rx="2" ry="2" />
<text  x="26.87" y="495.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (23 samples, 0.44%)</title><rect x="239.1" y="389" width="5.2" height="15.0" fill="rgb(208,203,10)" rx="2" ry="2" />
<text  x="242.11" y="399.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.04%)</title><rect x="38.4" y="549" width="0.5" height="15.0" fill="rgb(245,19,41)" rx="2" ry="2" />
<text  x="41.41" y="559.5" ></text>
</g>
<g >
<title>operator delete (6 samples, 0.11%)</title><rect x="582.1" y="597" width="1.3" height="15.0" fill="rgb(247,148,15)" rx="2" ry="2" />
<text  x="585.10" y="607.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_restrictions::size (1 samples, 0.02%)</title><rect x="657.7" y="757" width="0.2" height="15.0" fill="rgb(251,167,43)" rx="2" ry="2" />
<text  x="660.72" y="767.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (2 samples, 0.04%)</title><rect x="54.1" y="549" width="0.4" height="15.0" fill="rgb(212,45,6)" rx="2" ry="2" />
<text  x="57.08" y="559.5" ></text>
</g>
<g >
<title>std::__equal&lt;true&gt;::equal&lt;char&gt; (1 samples, 0.02%)</title><rect x="806.7" y="421" width="0.3" height="15.0" fill="rgb(222,59,37)" rx="2" ry="2" />
<text  x="809.73" y="431.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (2 samples, 0.04%)</title><rect x="38.4" y="565" width="0.5" height="15.0" fill="rgb(219,199,10)" rx="2" ry="2" />
<text  x="41.41" y="575.5" ></text>
</g>
<g >
<title>operator new (11 samples, 0.21%)</title><rect x="727.3" y="725" width="2.5" height="15.0" fill="rgb(244,88,2)" rx="2" ry="2" />
<text  x="730.31" y="735.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (3 samples, 0.06%)</title><rect x="446.3" y="709" width="0.7" height="15.0" fill="rgb(243,109,35)" rx="2" ry="2" />
<text  x="449.29" y="719.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="604.7" y="693" width="0.2" height="15.0" fill="rgb(248,202,0)" rx="2" ry="2" />
<text  x="607.70" y="703.5" ></text>
</g>
<g >
<title>range_tombstone_list::slice (24 samples, 0.46%)</title><rect x="283.0" y="517" width="5.3" height="15.0" fill="rgb(212,162,45)" rx="2" ry="2" />
<text  x="285.96" y="527.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (2 samples, 0.04%)</title><rect x="931.8" y="693" width="0.5" height="15.0" fill="rgb(215,17,36)" rx="2" ry="2" />
<text  x="934.81" y="703.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (6 samples, 0.11%)</title><rect x="670.0" y="789" width="1.4" height="15.0" fill="rgb(253,25,20)" rx="2" ry="2" />
<text  x="673.03" y="799.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE9then_implIZNS6_14discard_resultEvEUlDpOT_E_NS0_IvEEEET0_OT_ (14 samples, 0.27%)</title><rect x="726.9" y="773" width="3.1" height="15.0" fill="rgb(218,157,41)" rx="2" ry="2" />
<text  x="729.86" y="783.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (2 samples, 0.04%)</title><rect x="38.4" y="613" width="0.5" height="15.0" fill="rgb(254,100,40)" rx="2" ry="2" />
<text  x="41.41" y="623.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value, std::allocator&lt;cql3::raw_value&gt; &gt;::vector (6 samples, 0.11%)</title><rect x="863.1" y="773" width="1.4" height="15.0" fill="rgb(246,68,9)" rx="2" ry="2" />
<text  x="866.12" y="783.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_mutations_locally (1 samples, 0.02%)</title><rect x="105.8" y="757" width="0.2" height="15.0" fill="rgb(237,201,42)" rx="2" ry="2" />
<text  x="108.76" y="767.5" ></text>
</g>
<g >
<title>std::apply&lt;service::client_state::has_column_family_access (5 samples, 0.09%)</title><rect x="76.0" y="757" width="1.1" height="15.0" fill="rgb(236,228,31)" rx="2" ry="2" />
<text  x="79.00" y="767.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.02%)</title><rect x="46.9" y="469" width="0.2" height="15.0" fill="rgb(233,3,4)" rx="2" ry="2" />
<text  x="49.92" y="479.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (1 samples, 0.02%)</title><rect x="1030.0" y="533" width="0.3" height="15.0" fill="rgb(218,59,16)" rx="2" ry="2" />
<text  x="1033.03" y="543.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, database::update_write_metrics&lt;seastar::future&lt;void&gt; &gt; (1 samples, 0.02%)</title><rect x="694.6" y="805" width="0.3" height="15.0" fill="rgb(221,100,15)" rx="2" ry="2" />
<text  x="697.64" y="815.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (1 samples, 0.02%)</title><rect x="105.8" y="645" width="0.2" height="15.0" fill="rgb(233,155,20)" rx="2" ry="2" />
<text  x="108.76" y="655.5" ></text>
</g>
<g >
<title>std::apply&lt;service::storage_proxy::query_nonsingular_mutations_locally (1 samples, 0.02%)</title><rect x="105.8" y="725" width="0.2" height="15.0" fill="rgb(207,142,34)" rx="2" ry="2" />
<text  x="108.76" y="735.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;database&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="1039.6" y="581" width="0.3" height="15.0" fill="rgb(222,139,5)" rx="2" ry="2" />
<text  x="1042.65" y="591.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::lower_bound&lt;mutation_partition, schema const&amp;, nonwrapping_interval&lt;clustering_key_prefix&gt; const&amp;&gt; (9 samples, 0.17%)</title><rect x="280.1" y="517" width="2.0" height="15.0" fill="rgb(248,185,14)" rx="2" ry="2" />
<text  x="283.05" y="527.5" ></text>
</g>
<g >
<title>cql3::constants::marker::to_expression (13 samples, 0.25%)</title><rect x="898.5" y="629" width="2.9" height="15.0" fill="rgb(254,167,22)" rx="2" ry="2" />
<text  x="901.47" y="639.5" ></text>
</g>
<g >
<title>database::find_schema (2 samples, 0.04%)</title><rect x="836.7" y="725" width="0.5" height="15.0" fill="rgb(209,72,43)" rx="2" ry="2" />
<text  x="839.72" y="735.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (1 samples, 0.02%)</title><rect x="531.3" y="597" width="0.2" height="15.0" fill="rgb(212,166,14)" rx="2" ry="2" />
<text  x="534.31" y="607.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::set_channel (1 samples, 0.02%)</title><rect x="26.1" y="565" width="0.2" height="15.0" fill="rgb(227,56,52)" rx="2" ry="2" />
<text  x="29.11" y="575.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::local (1 samples, 0.02%)</title><rect x="77.6" y="789" width="0.2" height="15.0" fill="rgb(245,93,51)" rx="2" ry="2" />
<text  x="80.57" y="799.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::at (9 samples, 0.17%)</title><rect x="828.4" y="629" width="2.1" height="15.0" fill="rgb(243,130,40)" rx="2" ry="2" />
<text  x="831.44" y="639.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="824.2" y="677" width="0.2" height="15.0" fill="rgb(218,105,3)" rx="2" ry="2" />
<text  x="827.19" y="687.5" ></text>
</g>
<g >
<title>allocation_strategy::construct&lt;bplus::data&lt;long, intrusive_array&lt;memtable_entry&gt;, dht::raw_token_less_comparator, 16ul,  (3 samples, 0.06%)</title><rect x="1124.0" y="485" width="0.7" height="15.0" fill="rgb(226,155,13)" rx="2" ry="2" />
<text  x="1127.00" y="495.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::pop_front (19 samples, 0.36%)</title><rect x="130.4" y="709" width="4.2" height="15.0" fill="rgb(227,138,47)" rx="2" ry="2" />
<text  x="133.37" y="719.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (3 samples, 0.06%)</title><rect x="42.7" y="581" width="0.6" height="15.0" fill="rgb(216,144,17)" rx="2" ry="2" />
<text  x="45.67" y="591.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::push_mutation_fragment&lt;mutation_fragment&gt; (2 samples, 0.04%)</title><rect x="313.8" y="645" width="0.5" height="15.0" fill="rgb(222,35,52)" rx="2" ry="2" />
<text  x="316.84" y="655.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (1 samples, 0.02%)</title><rect x="698.0" y="757" width="0.2" height="15.0" fill="rgb(228,115,10)" rx="2" ry="2" />
<text  x="701.00" y="767.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_requests (235 samples, 4.46%)</title><rect x="994.2" y="645" width="52.6" height="15.0" fill="rgb(210,181,2)" rx="2" ry="2" />
<text  x="997.23" y="655.5" >servi..</text>
</g>
<g >
<title>query_result_builder::consume (196 samples, 3.72%)</title><rect x="357.7" y="517" width="43.8" height="15.0" fill="rgb(210,226,3)" rx="2" ry="2" />
<text  x="360.69" y="527.5" >quer..</text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.02%)</title><rect x="648.1" y="789" width="0.2" height="15.0" fill="rgb(223,112,45)" rx="2" ry="2" />
<text  x="651.10" y="799.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (1 samples, 0.02%)</title><rect x="642.1" y="789" width="0.2" height="15.0" fill="rgb(236,159,37)" rx="2" ry="2" />
<text  x="645.06" y="799.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.08%)</title><rect x="535.1" y="581" width="0.9" height="15.0" fill="rgb(253,165,9)" rx="2" ry="2" />
<text  x="538.12" y="591.5" ></text>
</g>
<g >
<title>bytes_ostream::chunk::~chunk (6 samples, 0.11%)</title><rect x="96.6" y="709" width="1.3" height="15.0" fill="rgb(246,17,27)" rx="2" ry="2" />
<text  x="99.59" y="719.5" ></text>
</g>
<g >
<title>seastar::promise&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::promise (2 samples, 0.04%)</title><rect x="1121.5" y="773" width="0.5" height="15.0" fill="rgb(206,48,9)" rx="2" ry="2" />
<text  x="1124.54" y="783.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cident (10 samples, 0.19%)</title><rect x="42.4" y="645" width="2.3" height="15.0" fill="rgb(234,125,44)" rx="2" ry="2" />
<text  x="45.44" y="655.5" ></text>
</g>
<g >
<title>make_empty_flat_reader (15 samples, 0.28%)</title><rect x="548.8" y="613" width="3.3" height="15.0" fill="rgb(220,142,54)" rx="2" ry="2" />
<text  x="551.76" y="623.5" ></text>
</g>
<g >
<title>partition_snapshot_row_cursor::ensure_entry_if_complete (1 samples, 0.02%)</title><rect x="15.6" y="853" width="0.2" height="15.0" fill="rgb(242,114,14)" rx="2" ry="2" />
<text  x="18.59" y="863.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::vector (1 samples, 0.02%)</title><rect x="631.3" y="741" width="0.2" height="15.0" fill="rgb(233,197,0)" rx="2" ry="2" />
<text  x="634.32" y="751.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (2,337 samples, 44.31%)</title><rect x="112.2" y="789" width="522.9" height="15.0" fill="rgb(251,94,22)" rx="2" ry="2" />
<text  x="115.25" y="799.5" >seastar::noncopyable_function&lt;seastar::future&lt;void&gt; </text>
</g>
<g >
<title>sstring_hash::operator (4 samples, 0.08%)</title><rect x="1052.4" y="597" width="0.9" height="15.0" fill="rgb(207,108,6)" rx="2" ry="2" />
<text  x="1055.40" y="607.5" ></text>
</g>
<g >
<title>mutation_partition::append_clustered_row (4 samples, 0.08%)</title><rect x="1126.2" y="517" width="0.9" height="15.0" fill="rgb(215,138,15)" rx="2" ry="2" />
<text  x="1129.23" y="527.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; (2 samples, 0.04%)</title><rect x="49.6" y="485" width="0.4" height="15.0" fill="rgb(213,190,16)" rx="2" ry="2" />
<text  x="52.60" y="495.5" ></text>
</g>
<g >
<title>partition_snapshot::partition_tombstone (1 samples, 0.02%)</title><rect x="526.4" y="549" width="0.2" height="15.0" fill="rgb(237,57,47)" rx="2" ry="2" />
<text  x="529.39" y="559.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (5 samples, 0.09%)</title><rect x="100.6" y="773" width="1.1" height="15.0" fill="rgb(245,119,29)" rx="2" ry="2" />
<text  x="103.61" y="783.5" ></text>
</g>
<g >
<title>std::min&lt;unsigned long&gt; (1 samples, 0.02%)</title><rect x="49.4" y="517" width="0.2" height="15.0" fill="rgb(224,164,3)" rx="2" ry="2" />
<text  x="52.38" y="527.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_S_max_size (1 samples, 0.02%)</title><rect x="24.5" y="549" width="0.3" height="15.0" fill="rgb(251,59,26)" rx="2" ry="2" />
<text  x="27.54" y="559.5" ></text>
</g>
<g >
<title>_ZSt5visitIR18overloaded_functorIJZN4cql34expr9find_atomIZNS2_4findERKNS2_10expressionENS2_6oper_tEEUlRKNS2_15binary_operatorEE_EEPS9_S6_T_EUlSA_E_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_8constantEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_11conjunctionEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_12column_valueEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_5tokenEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_21unresolved_identifierEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_25column_mutation_attributeEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_13function_callEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_4castEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_15field_selectionEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_4nullEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_13bind_variableEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_16untyped_constantEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_17tuple_constructorEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_22collection_constructorEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_20usertype_constructorEE_EEJRSt7variantIJSJ_S8_SN_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_SF_S1R_S1V_S1Z_EEEENSt13invoke_resultISD_JDpDTclsr3stdE3getILm0EEclsr3stdE7declvalIT0_EEEEEE4typeEOSD_DpOS29_ (1 samples, 0.02%)</title><rect x="658.4" y="741" width="0.2" height="15.0" fill="rgb(227,199,14)" rx="2" ry="2" />
<text  x="661.40" y="751.5" ></text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (1 samples, 0.02%)</title><rect x="14.3" y="917" width="0.2" height="15.0" fill="rgb(249,150,42)" rx="2" ry="2" />
<text  x="17.25" y="927.5" ></text>
</g>
<g >
<title>std::__detail::_List_node_base::_M_transfer (4 samples, 0.08%)</title><rect x="191.7" y="549" width="0.9" height="15.0" fill="rgb(220,44,33)" rx="2" ry="2" />
<text  x="194.68" y="559.5" ></text>
</g>
<g >
<title>operator new (7 samples, 0.13%)</title><rect x="475.8" y="597" width="1.6" height="15.0" fill="rgb(234,77,13)" rx="2" ry="2" />
<text  x="478.82" y="607.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (10 samples, 0.19%)</title><rect x="929.1" y="645" width="2.3" height="15.0" fill="rgb(231,82,41)" rx="2" ry="2" />
<text  x="932.12" y="655.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (3 samples, 0.06%)</title><rect x="300.6" y="581" width="0.7" height="15.0" fill="rgb(232,50,2)" rx="2" ry="2" />
<text  x="303.64" y="591.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (3 samples, 0.06%)</title><rect x="39.3" y="565" width="0.7" height="15.0" fill="rgb(251,157,18)" rx="2" ry="2" />
<text  x="42.31" y="575.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="1128.5" y="485" width="0.2" height="15.0" fill="rgb(252,17,9)" rx="2" ry="2" />
<text  x="1131.47" y="495.5" ></text>
</g>
<g >
<title>ser::serializer&lt;std::optional&lt;std::chrono::time_point&lt;gc_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt; &gt; &gt; &gt;::skip&lt;seastar::fragmented_memory_input_stream&lt;bytes_ostream::fragment_iterator&gt; &gt; (1 samples, 0.02%)</title><rect x="649.7" y="613" width="0.2" height="15.0" fill="rgb(238,197,20)" rx="2" ry="2" />
<text  x="652.67" y="623.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (1 samples, 0.02%)</title><rect x="931.6" y="693" width="0.2" height="15.0" fill="rgb(235,163,8)" rx="2" ry="2" />
<text  x="934.58" y="703.5" ></text>
</g>
<g >
<title>operator new (6 samples, 0.11%)</title><rect x="440.3" y="645" width="1.3" height="15.0" fill="rgb(254,163,19)" rx="2" ry="2" />
<text  x="443.25" y="655.5" ></text>
</g>
<g >
<title>cql3::query_processor::process_authorized_statement (21 samples, 0.40%)</title><rect x="762.0" y="725" width="4.7" height="15.0" fill="rgb(235,43,11)" rx="2" ry="2" />
<text  x="764.99" y="735.5" ></text>
</g>
<g >
<title>sstables::write (1 samples, 0.02%)</title><rect x="15.1" y="757" width="0.3" height="15.0" fill="rgb(230,221,11)" rx="2" ry="2" />
<text  x="18.15" y="767.5" ></text>
</g>
<g >
<title>reader_permit::impl::on_permit_inactive (1 samples, 0.02%)</title><rect x="1028.0" y="517" width="0.2" height="15.0" fill="rgb(239,17,11)" rx="2" ry="2" />
<text  x="1031.01" y="527.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;void&gt;  (2 samples, 0.04%)</title><rect x="695.3" y="629" width="0.5" height="15.0" fill="rgb(249,24,12)" rx="2" ry="2" />
<text  x="698.31" y="639.5" ></text>
</g>
<g >
<title>sstables::write&lt;sstables::scylla_metadata_type, sstables::disk_tagged_union_member&lt;sstables::scylla_metadata_type,  (1 samples, 0.02%)</title><rect x="16.9" y="693" width="0.3" height="15.0" fill="rgb(247,191,41)" rx="2" ry="2" />
<text  x="19.94" y="703.5" ></text>
</g>
<g >
<title>cql3::prepare_context::set_bound_variables (1 samples, 0.02%)</title><rect x="37.3" y="677" width="0.2" height="15.0" fill="rgb(205,214,37)" rx="2" ry="2" />
<text  x="40.30" y="687.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::make_partition_slice (58 samples, 1.10%)</title><rect x="1096.7" y="725" width="13.0" height="15.0" fill="rgb(222,195,32)" rx="2" ry="2" />
<text  x="1099.70" y="735.5" ></text>
</g>
<g >
<title>mutation_reader_merger::close (77 samples, 1.46%)</title><rect x="570.9" y="677" width="17.2" height="15.0" fill="rgb(210,135,51)" rx="2" ry="2" />
<text  x="573.91" y="687.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_digest_requests (1 samples, 0.02%)</title><rect x="994.0" y="645" width="0.2" height="15.0" fill="rgb(242,76,10)" rx="2" ry="2" />
<text  x="997.00" y="655.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="462.0" y="565" width="0.2" height="15.0" fill="rgb(245,10,4)" rx="2" ry="2" />
<text  x="464.95" y="575.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::signal (1 samples, 0.02%)</title><rect x="127.2" y="709" width="0.3" height="15.0" fill="rgb(245,49,45)" rx="2" ry="2" />
<text  x="130.24" y="719.5" ></text>
</g>
<g >
<title>std::operator+ (3 samples, 0.06%)</title><rect x="51.8" y="437" width="0.7" height="15.0" fill="rgb(245,186,52)" rx="2" ry="2" />
<text  x="54.84" y="447.5" ></text>
</g>
<g >
<title>service::abstract_write_response_handler::apply_locally (3 samples, 0.06%)</title><rect x="1132.5" y="549" width="0.7" height="15.0" fill="rgb(253,105,37)" rx="2" ry="2" />
<text  x="1135.50" y="559.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::~impl (12 samples, 0.23%)</title><rect x="577.8" y="613" width="2.7" height="15.0" fill="rgb(221,138,48)" rx="2" ry="2" />
<text  x="580.85" y="623.5" ></text>
</g>
<g >
<title>db::system_keyspace::query_mutations (2 samples, 0.04%)</title><rect x="105.5" y="773" width="0.5" height="15.0" fill="rgb(217,123,29)" rx="2" ry="2" />
<text  x="108.54" y="783.5" ></text>
</g>
<g >
<title>std::function&lt;flat_mutation_reader  (477 samples, 9.04%)</title><rect x="449.2" y="693" width="106.7" height="15.0" fill="rgb(215,11,21)" rx="2" ry="2" />
<text  x="452.20" y="703.5" >std::function..</text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.04%)</title><rect x="54.1" y="517" width="0.4" height="15.0" fill="rgb(226,89,36)" rx="2" ry="2" />
<text  x="57.08" y="527.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::range_or_slice_eq_null (3 samples, 0.06%)</title><rect x="870.7" y="693" width="0.7" height="15.0" fill="rgb(230,4,48)" rx="2" ry="2" />
<text  x="873.72" y="703.5" ></text>
</g>
<g >
<title>cql3::statements::raw::modification_statement::modification_statement (1 samples, 0.02%)</title><rect x="60.6" y="629" width="0.2" height="15.0" fill="rgb(223,84,52)" rx="2" ry="2" />
<text  x="63.57" y="639.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;cql3::restrictions::single_column_restrictions, false&gt;::make&lt;seastar::lw_shared_ptr&lt;schema const&gt;&amp;&gt; (1 samples, 0.02%)</title><rect x="71.1" y="629" width="0.2" height="15.0" fill="rgb(207,164,26)" rx="2" ry="2" />
<text  x="74.08" y="639.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (19 samples, 0.36%)</title><rect x="736.0" y="661" width="4.3" height="15.0" fill="rgb(221,114,18)" rx="2" ry="2" />
<text  x="739.03" y="671.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.02%)</title><rect x="38.9" y="517" width="0.2" height="15.0" fill="rgb(218,155,24)" rx="2" ry="2" />
<text  x="41.86" y="527.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_nodes (1 samples, 0.02%)</title><rect x="1096.0" y="693" width="0.3" height="15.0" fill="rgb(249,10,5)" rx="2" ry="2" />
<text  x="1099.03" y="703.5" ></text>
</g>
<g >
<title>frozen_mutation::unfreeze (1 samples, 0.02%)</title><rect x="106.0" y="773" width="0.2" height="15.0" fill="rgb(254,156,42)" rx="2" ry="2" />
<text  x="108.98" y="783.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::restrictions::has_eq_null (2 samples, 0.04%)</title><rect x="870.7" y="645" width="0.5" height="15.0" fill="rgb(253,172,28)" rx="2" ry="2" />
<text  x="873.72" y="655.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (14 samples, 0.27%)</title><rect x="436.0" y="613" width="3.1" height="15.0" fill="rgb(240,104,26)" rx="2" ry="2" />
<text  x="439.00" y="623.5" ></text>
</g>
<g >
<title>logalloc::basic_region_impl::set_reclaiming_enabled (1 samples, 0.02%)</title><rect x="272.0" y="485" width="0.2" height="15.0" fill="rgb(233,27,8)" rx="2" ry="2" />
<text  x="275.00" y="495.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.06%)</title><rect x="1155.5" y="741" width="0.7" height="15.0" fill="rgb(233,116,46)" rx="2" ry="2" />
<text  x="1158.54" y="751.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, enum_set&lt;super_enum&lt;auth::permission,  (1 samples, 0.02%)</title><rect x="800.5" y="501" width="0.2" height="15.0" fill="rgb(210,118,37)" rx="2" ry="2" />
<text  x="803.47" y="511.5" ></text>
</g>
<g >
<title>set_value&lt;fragment_range&lt;managed_bytes_basic_view&lt; (3 samples, 0.06%)</title><rect x="874.1" y="533" width="0.7" height="15.0" fill="rgb(229,1,45)" rx="2" ry="2" />
<text  x="877.08" y="543.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="679.2" y="741" width="0.2" height="15.0" fill="rgb(247,189,17)" rx="2" ry="2" />
<text  x="682.20" y="751.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (2 samples, 0.04%)</title><rect x="532.4" y="613" width="0.5" height="15.0" fill="rgb(230,98,4)" rx="2" ry="2" />
<text  x="535.43" y="623.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_reallocate_map (1 samples, 0.02%)</title><rect x="24.3" y="533" width="0.2" height="15.0" fill="rgb(205,134,35)" rx="2" ry="2" />
<text  x="27.32" y="543.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume_in_thread&lt;sstables::sstable_writer&gt; (1 samples, 0.02%)</title><rect x="10.4" y="837" width="0.3" height="15.0" fill="rgb(215,158,43)" rx="2" ry="2" />
<text  x="13.45" y="847.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.02%)</title><rect x="55.0" y="341" width="0.2" height="15.0" fill="rgb(249,36,44)" rx="2" ry="2" />
<text  x="57.97" y="351.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::operator= (4 samples, 0.08%)</title><rect x="837.4" y="725" width="0.9" height="15.0" fill="rgb(244,209,35)" rx="2" ry="2" />
<text  x="840.39" y="735.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_one (27 samples, 0.51%)</title><rect x="189.2" y="565" width="6.1" height="15.0" fill="rgb(218,34,34)" rx="2" ry="2" />
<text  x="192.22" y="575.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;bytes_ostream::chunk, std::default_delete&lt;bytes_ostream::chunk&gt; &gt;::~unique_ptr (4 samples, 0.08%)</title><rect x="613.2" y="677" width="0.9" height="15.0" fill="rgb(223,190,43)" rx="2" ry="2" />
<text  x="616.20" y="687.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mK_UPDATE (1 samples, 0.02%)</title><rect x="31.0" y="565" width="0.3" height="15.0" fill="rgb(236,149,10)" rx="2" ry="2" />
<text  x="34.03" y="575.5" ></text>
</g>
<g >
<title>ser::qr_partition__static_row&lt;bytes_ostream&gt;::qr_partition__static_row (4 samples, 0.08%)</title><rect x="349.4" y="469" width="0.9" height="15.0" fill="rgb(233,67,14)" rx="2" ry="2" />
<text  x="352.41" y="479.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;bytes_ostream::chunk, std::default_delete&lt;bytes_ostream::chunk&gt; &gt;::~unique_ptr (2 samples, 0.04%)</title><rect x="630.9" y="741" width="0.4" height="15.0" fill="rgb(217,74,53)" rx="2" ry="2" />
<text  x="633.88" y="751.5" ></text>
</g>
<g >
<title>logalloc::basic_region_impl::set_reclaiming_enabled (1 samples, 0.02%)</title><rect x="548.5" y="613" width="0.3" height="15.0" fill="rgb(206,161,54)" rx="2" ry="2" />
<text  x="551.54" y="623.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (1 samples, 0.02%)</title><rect x="14.5" y="773" width="0.2" height="15.0" fill="rgb(232,223,25)" rx="2" ry="2" />
<text  x="17.47" y="783.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;clustering_key_prefix, false, false&gt;::_Optional_base (1 samples, 0.02%)</title><rect x="276.7" y="517" width="0.2" height="15.0" fill="rgb(219,108,54)" rx="2" ry="2" />
<text  x="279.70" y="527.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="1027.3" y="501" width="0.3" height="15.0" fill="rgb(210,42,22)" rx="2" ry="2" />
<text  x="1030.34" y="511.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::detach_service_level_statement, std::default_delete&lt;cql3::statements::detach_service_level_statement&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="65.3" y="693" width="0.2" height="15.0" fill="rgb(242,130,21)" rx="2" ry="2" />
<text  x="68.26" y="703.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (1,069 samples, 20.27%)</title><rect x="882.4" y="773" width="239.1" height="15.0" fill="rgb(245,218,54)" rx="2" ry="2" />
<text  x="885.36" y="783.5" >seastar::noncopyable_function&lt;s..</text>
</g>
<g >
<title>std::allocator_traits&lt;tracking_allocator&lt;mutation_fragment&gt; &gt;::_S_destroy&lt;tracking_allocator&lt;mutation_fragment&gt;, mutation_fragment&gt; (1 samples, 0.02%)</title><rect x="342.7" y="549" width="0.2" height="15.0" fill="rgb(247,24,17)" rx="2" ry="2" />
<text  x="345.70" y="559.5" ></text>
</g>
<g >
<title>sched_setaffinity@@GLIBC_2.3.4 (40 samples, 0.76%)</title><rect x="1180.6" y="933" width="9.0" height="15.0" fill="rgb(206,170,51)" rx="2" ry="2" />
<text  x="1183.60" y="943.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (1 samples, 0.02%)</title><rect x="909.2" y="581" width="0.2" height="15.0" fill="rgb(231,141,30)" rx="2" ry="2" />
<text  x="912.21" y="591.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (2 samples, 0.04%)</title><rect x="250.3" y="421" width="0.4" height="15.0" fill="rgb(231,94,48)" rx="2" ry="2" />
<text  x="253.30" y="431.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;query::result&gt;::operator= (1 samples, 0.02%)</title><rect x="1148.2" y="789" width="0.2" height="15.0" fill="rgb(228,46,5)" rx="2" ry="2" />
<text  x="1151.16" y="799.5" ></text>
</g>
<g >
<title>service::storage_proxy_stats::split_stats::get_ep_stat (1 samples, 0.02%)</title><rect x="1044.8" y="597" width="0.2" height="15.0" fill="rgb(206,181,45)" rx="2" ry="2" />
<text  x="1047.79" y="607.5" ></text>
</g>
<g >
<title>db::schema_tables::update_schema_version_and_announce (3 samples, 0.06%)</title><rect x="106.7" y="789" width="0.6" height="15.0" fill="rgb(241,110,39)" rx="2" ry="2" />
<text  x="109.66" y="799.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::move_it (1 samples, 0.02%)</title><rect x="666.9" y="773" width="0.2" height="15.0" fill="rgb(252,209,42)" rx="2" ry="2" />
<text  x="669.90" y="783.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.02%)</title><rect x="38.9" y="533" width="0.2" height="15.0" fill="rgb(247,217,13)" rx="2" ry="2" />
<text  x="41.86" y="543.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::statements::create_type_statement, std::default_delete&lt;cql3::statements::create_type_statement&gt;, true, true&gt;::__uniq_ptr_data (1 samples, 0.02%)</title><rect x="62.4" y="661" width="0.2" height="15.0" fill="rgb(241,16,15)" rx="2" ry="2" />
<text  x="65.35" y="671.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::need_filtering (11 samples, 0.21%)</title><rect x="655.5" y="773" width="2.4" height="15.0" fill="rgb(240,53,34)" rx="2" ry="2" />
<text  x="658.49" y="783.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (5 samples, 0.09%)</title><rect x="747.0" y="677" width="1.1" height="15.0" fill="rgb(224,159,35)" rx="2" ry="2" />
<text  x="750.00" y="687.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (2 samples, 0.04%)</title><rect x="674.7" y="773" width="0.5" height="15.0" fill="rgb(222,128,29)" rx="2" ry="2" />
<text  x="677.73" y="783.5" ></text>
</g>
<g >
<title>service::storage_proxy::got_response (1 samples, 0.02%)</title><rect x="1142.3" y="805" width="0.3" height="15.0" fill="rgb(205,180,52)" rx="2" ry="2" />
<text  x="1145.34" y="815.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::clear (1 samples, 0.02%)</title><rect x="650.8" y="789" width="0.2" height="15.0" fill="rgb(244,118,6)" rx="2" ry="2" />
<text  x="653.79" y="799.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (1 samples, 0.02%)</title><rect x="868.9" y="725" width="0.3" height="15.0" fill="rgb(221,170,8)" rx="2" ry="2" />
<text  x="871.93" y="735.5" ></text>
</g>
<g >
<title>cql3::raw_value_view::raw_value_view (4 samples, 0.08%)</title><rect x="914.4" y="629" width="0.8" height="15.0" fill="rgb(245,181,37)" rx="2" ry="2" />
<text  x="917.35" y="639.5" ></text>
</g>
<g >
<title>ser::writer_of_mutation&lt;bytes_ostream&gt;::writer_of_mutation (1 samples, 0.02%)</title><rect x="1137.2" y="469" width="0.2" height="15.0" fill="rgb(210,191,13)" rx="2" ry="2" />
<text  x="1140.20" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (11 samples, 0.21%)</title><rect x="1034.3" y="549" width="2.4" height="15.0" fill="rgb(216,124,15)" rx="2" ry="2" />
<text  x="1037.28" y="559.5" ></text>
</g>
<g >
<title>cql3::restrictions::has_eq_null (2 samples, 0.04%)</title><rect x="870.7" y="661" width="0.5" height="15.0" fill="rgb(207,127,38)" rx="2" ry="2" />
<text  x="873.72" y="671.5" ></text>
</g>
<g >
<title>reader_permit::consume_memory (4 samples, 0.08%)</title><rect x="213.8" y="517" width="0.9" height="15.0" fill="rgb(231,124,27)" rx="2" ry="2" />
<text  x="216.83" y="527.5" ></text>
</g>
<g >
<title>cql3::restrictions::(anonymous namespace)::range_from_bytes (2 samples, 0.04%)</title><rect x="872.1" y="661" width="0.4" height="15.0" fill="rgb(250,38,52)" rx="2" ry="2" />
<text  x="875.07" y="671.5" ></text>
</g>
<g >
<title>ser::deserialize&lt;seastar::simple_memory_input_stream&gt; (1 samples, 0.02%)</title><rect x="1127.6" y="517" width="0.2" height="15.0" fill="rgb(241,155,27)" rx="2" ry="2" />
<text  x="1130.58" y="527.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::raw::update_statement, std::default_delete&lt;cql3::statements::raw::update_statement&gt; &gt;::_M_deleter (1 samples, 0.02%)</title><rect x="63.7" y="661" width="0.2" height="15.0" fill="rgb(235,187,0)" rx="2" ry="2" />
<text  x="66.70" y="671.5" ></text>
</g>
<g >
<title>seastar::memory::stats (4 samples, 0.08%)</title><rect x="504.5" y="613" width="0.9" height="15.0" fill="rgb(220,24,37)" rx="2" ry="2" />
<text  x="507.46" y="623.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::partition_slice, std::default_delete&lt;query::partition_slice&gt; &gt;::~unique_ptr (4 samples, 0.08%)</title><rect x="553.0" y="645" width="0.9" height="15.0" fill="rgb(208,225,8)" rx="2" ry="2" />
<text  x="556.01" y="655.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (2 samples, 0.04%)</title><rect x="540.5" y="645" width="0.4" height="15.0" fill="rgb(230,111,26)" rx="2" ry="2" />
<text  x="543.49" y="655.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (1 samples, 0.02%)</title><rect x="1064.3" y="629" width="0.2" height="15.0" fill="rgb(247,119,28)" rx="2" ry="2" />
<text  x="1067.26" y="639.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.02%)</title><rect x="38.6" y="453" width="0.3" height="15.0" fill="rgb(221,157,27)" rx="2" ry="2" />
<text  x="41.64" y="463.5" ></text>
</g>
<g >
<title>service::storage_proxy::do_query (1 samples, 0.02%)</title><rect x="956.0" y="709" width="0.2" height="15.0" fill="rgb(217,141,10)" rx="2" ry="2" />
<text  x="958.97" y="719.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.02%)</title><rect x="40.4" y="517" width="0.3" height="15.0" fill="rgb(225,189,49)" rx="2" ry="2" />
<text  x="43.43" y="527.5" ></text>
</g>
<g >
<title>cql3::raw_value_view::with_value&lt;cql3::update_parameters::make_cell (3 samples, 0.06%)</title><rect x="874.1" y="581" width="0.7" height="15.0" fill="rgb(254,75,0)" rx="2" ry="2" />
<text  x="877.08" y="591.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::then_wrapped_nrvo&lt;void, service::abstract_read_executor::make_data_requests (7 samples, 0.13%)</title><rect x="996.0" y="597" width="1.6" height="15.0" fill="rgb(206,15,1)" rx="2" ry="2" />
<text  x="999.02" y="607.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::set_errorRecovery (1 samples, 0.02%)</title><rect x="40.0" y="645" width="0.2" height="15.0" fill="rgb(221,226,18)" rx="2" ry="2" />
<text  x="42.98" y="655.5" ></text>
</g>
<g >
<title>free (11 samples, 0.21%)</title><rect x="427.5" y="485" width="2.5" height="15.0" fill="rgb(210,75,32)" rx="2" ry="2" />
<text  x="430.50" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.04%)</title><rect x="1154.9" y="677" width="0.4" height="15.0" fill="rgb(231,154,23)" rx="2" ry="2" />
<text  x="1157.87" y="687.5" ></text>
</g>
<g >
<title>std::optional&lt;position_in_partition&gt;::operator=&lt;position_in_partition&gt; (3 samples, 0.06%)</title><rect x="278.3" y="549" width="0.6" height="15.0" fill="rgb(234,25,42)" rx="2" ry="2" />
<text  x="281.26" y="559.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::arm (1 samples, 0.02%)</title><rect x="988.0" y="597" width="0.2" height="15.0" fill="rgb(228,152,2)" rx="2" ry="2" />
<text  x="990.96" y="607.5" ></text>
</g>
<g >
<title>__strlen_avx2 (7 samples, 0.13%)</title><rect x="1013.0" y="549" width="1.6" height="15.0" fill="rgb(249,210,44)" rx="2" ry="2" />
<text  x="1016.02" y="559.5" ></text>
</g>
<g >
<title>std::vector&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, std::allocator&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="566.7" y="693" width="0.2" height="15.0" fill="rgb(245,166,4)" rx="2" ry="2" />
<text  x="569.66" y="703.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::raw::parsed_statement, std::default_delete&lt;cql3::statements::raw::parsed_statement&gt; &gt;::reset (1 samples, 0.02%)</title><rect x="65.9" y="661" width="0.3" height="15.0" fill="rgb(206,30,5)" rx="2" ry="2" />
<text  x="68.93" y="671.5" ></text>
</g>
<g >
<title>utils::basic_ihistogram&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt; &gt;::mark&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; (3 samples, 0.06%)</title><rect x="685.0" y="757" width="0.7" height="15.0" fill="rgb(242,15,35)" rx="2" ry="2" />
<text  x="688.02" y="767.5" ></text>
</g>
<g >
<title>seastar::do_until&lt;flush_reader::fill_buffer (8 samples, 0.15%)</title><rect x="78.9" y="773" width="1.8" height="15.0" fill="rgb(226,176,31)" rx="2" ry="2" />
<text  x="81.91" y="783.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="319.2" y="597" width="0.2" height="15.0" fill="rgb(230,166,4)" rx="2" ry="2" />
<text  x="322.21" y="607.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="442.9" y="677" width="0.3" height="15.0" fill="rgb(228,146,2)" rx="2" ry="2" />
<text  x="445.94" y="687.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.02%)</title><rect x="958.2" y="693" width="0.2" height="15.0" fill="rgb(214,112,16)" rx="2" ry="2" />
<text  x="961.21" y="703.5" ></text>
</g>
<g >
<title>antlr3::DefaultAllocPolicy::StackType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::push (2 samples, 0.04%)</title><rect x="37.7" y="645" width="0.5" height="15.0" fill="rgb(250,225,18)" rx="2" ry="2" />
<text  x="40.74" y="655.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit_slot&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::walking_visitor&lt;row::for_each_cell&lt;(anonymous namespace)::write_row_cells&lt;ser::deletable_row__cells&lt;bytes_ostream&gt; &gt; (1 samples, 0.02%)</title><rect x="107.6" y="613" width="0.2" height="15.0" fill="rgb(253,33,9)" rx="2" ry="2" />
<text  x="110.55" y="623.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.02%)</title><rect x="38.9" y="453" width="0.2" height="15.0" fill="rgb(205,142,47)" rx="2" ry="2" />
<text  x="41.86" y="463.5" ></text>
</g>
<g >
<title>absl::hash_internal::HashState::combine_contiguous (1 samples, 0.02%)</title><rect x="853.7" y="629" width="0.2" height="15.0" fill="rgb(242,100,48)" rx="2" ry="2" />
<text  x="856.72" y="639.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (1 samples, 0.02%)</title><rect x="259.5" y="469" width="0.2" height="15.0" fill="rgb(253,80,45)" rx="2" ry="2" />
<text  x="262.47" y="479.5" ></text>
</g>
<g >
<title>partition_snapshot::get_change_mark (5 samples, 0.09%)</title><rect x="263.7" y="469" width="1.1" height="15.0" fill="rgb(252,184,34)" rx="2" ry="2" />
<text  x="266.72" y="479.5" ></text>
</g>
<g >
<title>service::storage_proxy::do_mutate (1 samples, 0.02%)</title><rect x="1130.9" y="661" width="0.3" height="15.0" fill="rgb(250,60,19)" rx="2" ry="2" />
<text  x="1133.93" y="671.5" ></text>
</g>
<g >
<title>seastar::repeat&lt;flat_mutation_reader::impl::consume_pausable&lt;flush_reader::fill_buffer (6 samples, 0.11%)</title><rect x="79.4" y="757" width="1.3" height="15.0" fill="rgb(227,196,15)" rx="2" ry="2" />
<text  x="82.36" y="767.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (1 samples, 0.02%)</title><rect x="1163.4" y="773" width="0.2" height="15.0" fill="rgb(253,132,53)" rx="2" ry="2" />
<text  x="1166.38" y="783.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;flat_mutation_reader::impl::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (12 samples, 0.23%)</title><rect x="337.3" y="597" width="2.7" height="15.0" fill="rgb(251,17,5)" rx="2" ry="2" />
<text  x="340.33" y="607.5" ></text>
</g>
<g >
<title>operator delete (5 samples, 0.09%)</title><rect x="628.4" y="677" width="1.1" height="15.0" fill="rgb(239,216,2)" rx="2" ry="2" />
<text  x="631.41" y="687.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::invoke_on_all (1 samples, 0.02%)</title><rect x="16.5" y="773" width="0.2" height="15.0" fill="rgb(230,169,32)" rx="2" ry="2" />
<text  x="19.49" y="783.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::merging_reader (1 samples, 0.02%)</title><rect x="457.3" y="613" width="0.2" height="15.0" fill="rgb(246,16,20)" rx="2" ry="2" />
<text  x="460.25" y="623.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (1 samples, 0.02%)</title><rect x="1093.3" y="677" width="0.3" height="15.0" fill="rgb(234,209,40)" rx="2" ry="2" />
<text  x="1096.34" y="687.5" ></text>
</g>
<g >
<title>getenv (1 samples, 0.02%)</title><rect x="1180.4" y="933" width="0.2" height="15.0" fill="rgb(239,37,25)" rx="2" ry="2" />
<text  x="1183.38" y="943.5" ></text>
</g>
<g >
<title>service::client_state::ensure_has_permission (3 samples, 0.06%)</title><rect x="821.3" y="645" width="0.6" height="15.0" fill="rgb(249,164,43)" rx="2" ry="2" />
<text  x="824.28" y="655.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;service::storage_proxy_coordinator_query_result&gt;::set_urgent_state (13 samples, 0.25%)</title><rect x="688.4" y="789" width="2.9" height="15.0" fill="rgb(239,27,10)" rx="2" ry="2" />
<text  x="691.38" y="799.5" ></text>
</g>
<g >
<title>single_node_cql_env::local_qp (1 samples, 0.02%)</title><rect x="854.8" y="757" width="0.3" height="15.0" fill="rgb(212,105,10)" rx="2" ry="2" />
<text  x="857.84" y="767.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.02%)</title><rect x="861.1" y="709" width="0.2" height="15.0" fill="rgb(234,212,22)" rx="2" ry="2" />
<text  x="864.10" y="719.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="437.6" y="549" width="0.2" height="15.0" fill="rgb(220,69,9)" rx="2" ry="2" />
<text  x="440.57" y="559.5" ></text>
</g>
<g >
<title>reader_permit::used_guard::~used_guard (40 samples, 0.76%)</title><rect x="128.1" y="757" width="9.0" height="15.0" fill="rgb(253,179,33)" rx="2" ry="2" />
<text  x="131.13" y="767.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (1 samples, 0.02%)</title><rect x="691.1" y="773" width="0.2" height="15.0" fill="rgb(252,206,10)" rx="2" ry="2" />
<text  x="694.06" y="783.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (4 samples, 0.08%)</title><rect x="502.2" y="629" width="0.9" height="15.0" fill="rgb(236,138,8)" rx="2" ry="2" />
<text  x="505.23" y="639.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (2 samples, 0.04%)</title><rect x="99.0" y="741" width="0.5" height="15.0" fill="rgb(211,77,40)" rx="2" ry="2" />
<text  x="102.05" y="751.5" ></text>
</g>
<g >
<title>partition_snapshot::get_change_mark (3 samples, 0.06%)</title><rect x="272.7" y="453" width="0.6" height="15.0" fill="rgb(238,116,22)" rx="2" ry="2" />
<text  x="275.67" y="463.5" ></text>
</g>
<g >
<title>free (1 samples, 0.02%)</title><rect x="95.2" y="741" width="0.3" height="15.0" fill="rgb(205,152,31)" rx="2" ry="2" />
<text  x="98.24" y="751.5" ></text>
</g>
<g >
<title>boost::algorithm::split_iterator&lt;char*&gt;::increment (1 samples, 0.02%)</title><rect x="720.6" y="725" width="0.2" height="15.0" fill="rgb(238,162,42)" rx="2" ry="2" />
<text  x="723.60" y="735.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (3 samples, 0.06%)</title><rect x="54.7" y="549" width="0.7" height="15.0" fill="rgb(218,136,23)" rx="2" ry="2" />
<text  x="57.75" y="559.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (1 samples, 0.02%)</title><rect x="1094.0" y="693" width="0.2" height="15.0" fill="rgb(221,219,40)" rx="2" ry="2" />
<text  x="1097.02" y="703.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="840.1" y="693" width="0.2" height="15.0" fill="rgb(205,119,3)" rx="2" ry="2" />
<text  x="843.07" y="703.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (1 samples, 0.02%)</title><rect x="418.8" y="453" width="0.2" height="15.0" fill="rgb(208,195,53)" rx="2" ry="2" />
<text  x="421.77" y="463.5" ></text>
</g>
<g >
<title>std::__equal&lt;true&gt;::equal&lt;char&gt; (1 samples, 0.02%)</title><rect x="755.5" y="581" width="0.2" height="15.0" fill="rgb(207,61,42)" rx="2" ry="2" />
<text  x="758.50" y="591.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (1 samples, 0.02%)</title><rect x="692.0" y="789" width="0.2" height="15.0" fill="rgb(206,97,0)" rx="2" ry="2" />
<text  x="694.96" y="799.5" ></text>
</g>
<g >
<title>basic_atomic_cell_view&lt; (13 samples, 0.25%)</title><rect x="385.7" y="469" width="2.9" height="15.0" fill="rgb(234,20,31)" rx="2" ry="2" />
<text  x="388.66" y="479.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::schedule&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::storage_proxy::mutate_internal&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="1133.2" y="581" width="0.2" height="15.0" fill="rgb(215,73,7)" rx="2" ry="2" />
<text  x="1136.17" y="591.5" ></text>
</g>
<g >
<title>std::apply&lt;auth::permissions_cache::get (65 samples, 1.23%)</title><rect x="796.7" y="565" width="14.5" height="15.0" fill="rgb(212,135,3)" rx="2" ry="2" />
<text  x="799.67" y="575.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::restrictions::multi_column_restriction&gt;::~shared_ptr (3 samples, 0.06%)</title><rect x="1115.5" y="725" width="0.7" height="15.0" fill="rgb(250,87,24)" rx="2" ry="2" />
<text  x="1118.49" y="735.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.04%)</title><rect x="863.3" y="725" width="0.5" height="15.0" fill="rgb(221,22,52)" rx="2" ry="2" />
<text  x="866.34" y="735.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::operator== (7 samples, 0.13%)</title><rect x="805.4" y="437" width="1.6" height="15.0" fill="rgb(226,99,16)" rx="2" ry="2" />
<text  x="808.39" y="447.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::grant_statement, std::default_delete&lt;cql3::statements::grant_statement&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="62.8" y="677" width="0.2" height="15.0" fill="rgb(212,173,14)" rx="2" ry="2" />
<text  x="65.80" y="687.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::abstract_read_executor (14 samples, 0.27%)</title><rect x="1060.0" y="613" width="3.1" height="15.0" fill="rgb(213,58,6)" rx="2" ry="2" />
<text  x="1063.01" y="623.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.02%)</title><rect x="42.7" y="453" width="0.2" height="15.0" fill="rgb(211,67,50)" rx="2" ry="2" />
<text  x="45.67" y="463.5" ></text>
</g>
<g >
<title>_start (4 samples, 0.08%)</title><rect x="1170.8" y="933" width="0.9" height="15.0" fill="rgb(231,20,46)" rx="2" ry="2" />
<text  x="1173.76" y="943.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_partition_key_ranges (238 samples, 4.51%)</title><rect x="892.0" y="725" width="53.2" height="15.0" fill="rgb(207,49,47)" rx="2" ry="2" />
<text  x="894.98" y="735.5" >cql3:..</text>
</g>
<g >
<title>logalloc::allocating_section::with_reserve&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (1 samples, 0.02%)</title><rect x="106.7" y="213" width="0.2" height="15.0" fill="rgb(205,178,15)" rx="2" ry="2" />
<text  x="109.66" y="223.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (2 samples, 0.04%)</title><rect x="433.3" y="533" width="0.5" height="15.0" fill="rgb(254,92,37)" rx="2" ry="2" />
<text  x="436.31" y="543.5" ></text>
</g>
<g >
<title>__libc_write (1 samples, 0.02%)</title><rect x="14.5" y="917" width="0.2" height="15.0" fill="rgb(245,167,8)" rx="2" ry="2" />
<text  x="17.47" y="927.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (5 samples, 0.09%)</title><rect x="506.3" y="581" width="1.1" height="15.0" fill="rgb(225,42,12)" rx="2" ry="2" />
<text  x="509.25" y="591.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::clear (1 samples, 0.02%)</title><rect x="19.4" y="709" width="0.2" height="15.0" fill="rgb(251,203,43)" rx="2" ry="2" />
<text  x="22.40" y="719.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (35 samples, 0.66%)</title><rect x="1122.7" y="693" width="7.8" height="15.0" fill="rgb(245,66,27)" rx="2" ry="2" />
<text  x="1125.65" y="703.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::operator (1 samples, 0.02%)</title><rect x="1051.3" y="581" width="0.2" height="15.0" fill="rgb(235,136,53)" rx="2" ry="2" />
<text  x="1054.28" y="591.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.02%)</title><rect x="955.5" y="693" width="0.2" height="15.0" fill="rgb(250,208,38)" rx="2" ry="2" />
<text  x="958.52" y="703.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (7 samples, 0.13%)</title><rect x="280.5" y="469" width="1.6" height="15.0" fill="rgb(246,185,4)" rx="2" ry="2" />
<text  x="283.50" y="479.5" ></text>
</g>
<g >
<title>intrusive_b::node&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (1 samples, 0.02%)</title><rect x="15.6" y="805" width="0.2" height="15.0" fill="rgb(234,81,49)" rx="2" ry="2" />
<text  x="18.59" y="815.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::vector (14 samples, 0.27%)</title><rect x="942.1" y="709" width="3.1" height="15.0" fill="rgb(219,1,27)" rx="2" ry="2" />
<text  x="945.10" y="719.5" ></text>
</g>
<g >
<title>global_schema_ptr::get (1 samples, 0.02%)</title><rect x="1034.1" y="565" width="0.2" height="15.0" fill="rgb(221,32,26)" rx="2" ry="2" />
<text  x="1037.05" y="575.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::arm (1 samples, 0.02%)</title><rect x="1024.4" y="453" width="0.3" height="15.0" fill="rgb(251,159,32)" rx="2" ry="2" />
<text  x="1027.43" y="463.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned char, std::pair&lt;unsigned char const, std::optional&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned char const, std::optional&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned char&gt;, std::hash&lt;unsigned char&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::~_Hashtable (6 samples, 0.11%)</title><rect x="679.7" y="757" width="1.3" height="15.0" fill="rgb(216,204,22)" rx="2" ry="2" />
<text  x="682.65" y="767.5" ></text>
</g>
<g >
<title>std::optional&lt;mutation_querier&gt;::emplace&lt;mutation_querier&gt; (1 samples, 0.02%)</title><rect x="868.9" y="693" width="0.3" height="15.0" fill="rgb(231,179,5)" rx="2" ry="2" />
<text  x="871.93" y="703.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;::lru_entry, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="735.6" y="709" width="0.2" height="15.0" fill="rgb(216,130,9)" rx="2" ry="2" />
<text  x="738.59" y="719.5" ></text>
</g>
<g >
<title>mutation_querier::mutation_querier (13 samples, 0.25%)</title><rect x="349.0" y="485" width="2.9" height="15.0" fill="rgb(222,187,48)" rx="2" ry="2" />
<text  x="351.96" y="495.5" ></text>
</g>
<g >
<title>std::__copy_n_a&lt;legacy_compound_view&lt;compound_type&lt; (1 samples, 0.02%)</title><rect x="1123.8" y="485" width="0.2" height="15.0" fill="rgb(250,123,32)" rx="2" ry="2" />
<text  x="1126.77" y="495.5" ></text>
</g>
<g >
<title>__pthread_enable_asynccancel (1 samples, 0.02%)</title><rect x="1140.8" y="773" width="0.2" height="15.0" fill="rgb(215,145,29)" rx="2" ry="2" />
<text  x="1143.78" y="783.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::get_local_service (1 samples, 0.02%)</title><rect x="1039.4" y="581" width="0.2" height="15.0" fill="rgb(253,98,9)" rx="2" ry="2" />
<text  x="1042.42" y="591.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;service::never_speculating_read_executor, true&gt;::make&lt;seastar::lw_shared_ptr&lt;schema const&gt;&amp;, seastar::lw_shared_ptr&lt;table&gt;&amp;, seastar::shared_ptr&lt;service::storage_proxy&gt;&amp;, seastar::lw_shared_ptr&lt;query::read_command&gt;&amp;, nonwrapping_interval&lt;dht::ring_position&gt;, db::consistency_level&amp;, utils::small_vector&lt;gms::inet_address, 3ul&gt;, tracing::trace_state_ptr, service_permit&gt; (42 samples, 0.80%)</title><rect x="1056.2" y="645" width="9.4" height="15.0" fill="rgb(214,184,32)" rx="2" ry="2" />
<text  x="1059.20" y="655.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (2 samples, 0.04%)</title><rect x="623.9" y="709" width="0.5" height="15.0" fill="rgb(215,202,23)" rx="2" ry="2" />
<text  x="626.94" y="719.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::on_permit_destroyed (3 samples, 0.06%)</title><rect x="126.3" y="725" width="0.7" height="15.0" fill="rgb(220,113,18)" rx="2" ry="2" />
<text  x="129.34" y="735.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::entry::entry (5 samples, 0.09%)</title><rect x="1021.1" y="501" width="1.1" height="15.0" fill="rgb(225,180,45)" rx="2" ry="2" />
<text  x="1024.08" y="511.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;,  (21 samples, 0.40%)</title><rect x="735.8" y="709" width="4.7" height="15.0" fill="rgb(208,119,25)" rx="2" ry="2" />
<text  x="738.81" y="719.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::guard (2 samples, 0.04%)</title><rect x="201.5" y="565" width="0.5" height="15.0" fill="rgb(219,138,0)" rx="2" ry="2" />
<text  x="204.52" y="575.5" ></text>
</g>
<g >
<title>create_partitions (272 samples, 5.16%)</title><rect x="17.2" y="837" width="60.8" height="15.0" fill="rgb(221,73,54)" rx="2" ry="2" />
<text  x="20.16" y="847.5" >create..</text>
</g>
<g >
<title>cql3::restrictions::clustering_key_restrictions::needs_filtering (1 samples, 0.02%)</title><rect x="891.1" y="725" width="0.2" height="15.0" fill="rgb(247,214,48)" rx="2" ry="2" />
<text  x="894.08" y="735.5" ></text>
</g>
<g >
<title>query::result_set_builder::deserialize (1 samples, 0.02%)</title><rect x="107.3" y="709" width="0.3" height="15.0" fill="rgb(210,17,45)" rx="2" ry="2" />
<text  x="110.33" y="719.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (1 samples, 0.02%)</title><rect x="422.8" y="549" width="0.2" height="15.0" fill="rgb(221,69,42)" rx="2" ry="2" />
<text  x="425.80" y="559.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="304.0" y="613" width="0.2" height="15.0" fill="rgb(207,89,7)" rx="2" ry="2" />
<text  x="306.99" y="623.5" ></text>
</g>
<g >
<title>schema_registry_entry::get_schema (1 samples, 0.02%)</title><rect x="975.7" y="645" width="0.2" height="15.0" fill="rgb(240,228,42)" rx="2" ry="2" />
<text  x="978.66" y="655.5" ></text>
</g>
<g >
<title>cql3::single_column_relation::new_EQ_restriction (1 samples, 0.02%)</title><rect x="69.7" y="677" width="0.3" height="15.0" fill="rgb(209,29,28)" rx="2" ry="2" />
<text  x="72.74" y="687.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reclaiming_disabled&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (1 samples, 0.02%)</title><rect x="106.7" y="149" width="0.2" height="15.0" fill="rgb(249,65,41)" rx="2" ry="2" />
<text  x="109.66" y="159.5" ></text>
</g>
<g >
<title>canonical_mutation::canonical_mutation (1 samples, 0.02%)</title><rect x="107.6" y="677" width="0.2" height="15.0" fill="rgb(223,149,31)" rx="2" ry="2" />
<text  x="110.55" y="687.5" ></text>
</g>
<g >
<title>flat_mutation_reader::close (64 samples, 1.21%)</title><rect x="573.6" y="645" width="14.3" height="15.0" fill="rgb(251,174,15)" rx="2" ry="2" />
<text  x="576.60" y="655.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::partition_snapshot_flat_reader&lt;memtable&amp;&gt; (1 samples, 0.02%)</title><rect x="508.5" y="613" width="0.2" height="15.0" fill="rgb(229,155,22)" rx="2" ry="2" />
<text  x="511.49" y="623.5" ></text>
</g>
<g >
<title>locator::effective_replication_map::get_natural_endpoints_without_node_being_replaced (7 samples, 0.13%)</title><rect x="1066.3" y="629" width="1.5" height="15.0" fill="rgb(245,28,11)" rx="2" ry="2" />
<text  x="1069.27" y="639.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;std::function&lt;std::function&lt;partition_presence_checker_result  (1 samples, 0.02%)</title><rect x="633.8" y="725" width="0.2" height="15.0" fill="rgb(231,189,46)" rx="2" ry="2" />
<text  x="636.78" y="735.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::~timer (5 samples, 0.09%)</title><rect x="133.1" y="693" width="1.1" height="15.0" fill="rgb(223,150,50)" rx="2" ry="2" />
<text  x="136.06" y="703.5" ></text>
</g>
<g >
<title>auth::operator== (1 samples, 0.02%)</title><rect x="804.7" y="453" width="0.2" height="15.0" fill="rgb(207,191,43)" rx="2" ry="2" />
<text  x="807.72" y="463.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (1 samples, 0.02%)</title><rect x="876.1" y="565" width="0.2" height="15.0" fill="rgb(253,226,14)" rx="2" ry="2" />
<text  x="879.09" y="575.5" ></text>
</g>
<g >
<title>std::__push_heap&lt;mutation_reader_merger::reader_and_fragment*, long, mutation_reader_merger::reader_and_fragment, __gnu_cxx::__ops::_Iter_comp_val&lt;mutation_reader_merger::reader_heap_compare&gt; &gt; (3 samples, 0.06%)</title><rect x="193.9" y="533" width="0.7" height="15.0" fill="rgb(220,88,3)" rx="2" ry="2" />
<text  x="196.91" y="543.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.02%)</title><rect x="1038.8" y="581" width="0.2" height="15.0" fill="rgb(247,79,42)" rx="2" ry="2" />
<text  x="1041.75" y="591.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reserve&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::partition_snapshot_flat_reader&lt;schema const&amp;, flush_memory_accounter&amp;&gt; (1 samples, 0.02%)</title><rect x="79.1" y="709" width="0.3" height="15.0" fill="rgb(238,161,7)" rx="2" ry="2" />
<text  x="82.14" y="719.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (2 samples, 0.04%)</title><rect x="832.7" y="597" width="0.4" height="15.0" fill="rgb(245,87,31)" rx="2" ry="2" />
<text  x="835.69" y="607.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (5 samples, 0.09%)</title><rect x="223.9" y="453" width="1.1" height="15.0" fill="rgb(208,223,22)" rx="2" ry="2" />
<text  x="226.89" y="463.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (5 samples, 0.09%)</title><rect x="602.7" y="725" width="1.1" height="15.0" fill="rgb(209,227,52)" rx="2" ry="2" />
<text  x="605.68" y="735.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="78.5" y="901" width="0.2" height="15.0" fill="rgb(254,39,49)" rx="2" ry="2" />
<text  x="81.46" y="911.5" ></text>
</g>
<g >
<title>query_result_builder::consume (1 samples, 0.02%)</title><rect x="693.5" y="597" width="0.2" height="15.0" fill="rgb(239,173,43)" rx="2" ry="2" />
<text  x="696.52" y="607.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_M_move_assign (2 samples, 0.04%)</title><rect x="1100.3" y="661" width="0.4" height="15.0" fill="rgb(233,62,10)" rx="2" ry="2" />
<text  x="1103.28" y="671.5" ></text>
</g>
<g >
<title>std::make_unique&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;, seastar::lw_shared_ptr&lt;schema const&gt;, reader_permit, dht::decorated_key, partition_snapshot_ptr&amp;, query::clustering_key_filter_ranges, bool&amp;, logalloc::region&amp;, logalloc::allocating_section&amp;, boost::any, schema const&amp;, flush_memory_accounter&amp;&gt; (1 samples, 0.02%)</title><rect x="79.1" y="741" width="0.3" height="15.0" fill="rgb(215,74,54)" rx="2" ry="2" />
<text  x="82.14" y="751.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::operator= (1 samples, 0.02%)</title><rect x="53.6" y="549" width="0.3" height="15.0" fill="rgb(224,67,20)" rx="2" ry="2" />
<text  x="56.63" y="559.5" ></text>
</g>
<g >
<title>query::querier&lt; (1,815 samples, 34.41%)</title><rect x="162.6" y="741" width="406.1" height="15.0" fill="rgb(221,217,27)" rx="2" ry="2" />
<text  x="165.59" y="751.5" >query::querier&lt;</text>
</g>
<g >
<title>service::storage_proxy::mutate_internal&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt; &gt; (29 samples, 0.55%)</title><rect x="1131.8" y="629" width="6.5" height="15.0" fill="rgb(210,229,16)" rx="2" ry="2" />
<text  x="1134.83" y="639.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_M_reset (1 samples, 0.02%)</title><rect x="816.1" y="533" width="0.3" height="15.0" fill="rgb(224,183,17)" rx="2" ry="2" />
<text  x="819.13" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::_S_max_size (1 samples, 0.02%)</title><rect x="49.4" y="533" width="0.2" height="15.0" fill="rgb(251,163,0)" rx="2" ry="2" />
<text  x="52.38" y="543.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (1 samples, 0.02%)</title><rect x="76.2" y="581" width="0.3" height="15.0" fill="rgb(221,194,17)" rx="2" ry="2" />
<text  x="79.23" y="591.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::vector (12 samples, 0.23%)</title><rect x="1102.3" y="693" width="2.7" height="15.0" fill="rgb(213,55,43)" rx="2" ry="2" />
<text  x="1105.29" y="703.5" ></text>
</g>
<g >
<title>basic_atomic_cell_view&lt; (1 samples, 0.02%)</title><rect x="81.4" y="629" width="0.2" height="15.0" fill="rgb(224,227,12)" rx="2" ry="2" />
<text  x="84.37" y="639.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::__uniq_ptr_impl (2 samples, 0.04%)</title><rect x="56.5" y="533" width="0.5" height="15.0" fill="rgb(206,166,47)" rx="2" ry="2" />
<text  x="59.54" y="543.5" ></text>
</g>
<g >
<title>database::add_column_family (5 samples, 0.09%)</title><rect x="107.6" y="789" width="1.1" height="15.0" fill="rgb(218,26,34)" rx="2" ry="2" />
<text  x="110.55" y="799.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (3 samples, 0.06%)</title><rect x="1037.4" y="565" width="0.7" height="15.0" fill="rgb(208,152,38)" rx="2" ry="2" />
<text  x="1040.41" y="575.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.02%)</title><rect x="59.4" y="469" width="0.3" height="15.0" fill="rgb(248,50,19)" rx="2" ry="2" />
<text  x="62.45" y="479.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.02%)</title><rect x="215.8" y="533" width="0.3" height="15.0" fill="rgb(243,118,14)" rx="2" ry="2" />
<text  x="218.84" y="543.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, database::query (1 samples, 0.02%)</title><rect x="694.4" y="805" width="0.2" height="15.0" fill="rgb(243,38,17)" rx="2" ry="2" />
<text  x="697.42" y="815.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::process_where_clause (17 samples, 0.32%)</title><rect x="68.4" y="725" width="3.8" height="15.0" fill="rgb(224,31,29)" rx="2" ry="2" />
<text  x="71.40" y="735.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (1 samples, 0.02%)</title><rect x="420.6" y="485" width="0.2" height="15.0" fill="rgb(244,6,31)" rx="2" ry="2" />
<text  x="423.56" y="495.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (1 samples, 0.02%)</title><rect x="916.4" y="629" width="0.2" height="15.0" fill="rgb(238,48,33)" rx="2" ry="2" />
<text  x="919.37" y="639.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate_to_raw_view (86 samples, 1.63%)</title><rect x="897.6" y="661" width="19.2" height="15.0" fill="rgb(253,113,24)" rx="2" ry="2" />
<text  x="900.57" y="671.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (3 samples, 0.06%)</title><rect x="20.3" y="693" width="0.7" height="15.0" fill="rgb(224,58,22)" rx="2" ry="2" />
<text  x="23.29" y="703.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="574.3" y="597" width="0.2" height="15.0" fill="rgb(233,190,51)" rx="2" ry="2" />
<text  x="577.27" y="607.5" ></text>
</g>
<g >
<title>std::apply&lt;auth::permissions_cache::get (4 samples, 0.08%)</title><rect x="76.2" y="629" width="0.9" height="15.0" fill="rgb(210,58,38)" rx="2" ry="2" />
<text  x="79.23" y="639.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (2 samples, 0.04%)</title><rect x="767.8" y="661" width="0.5" height="15.0" fill="rgb(218,104,36)" rx="2" ry="2" />
<text  x="770.80" y="671.5" ></text>
</g>
<g >
<title>logalloc::region_impl::free (1 samples, 0.02%)</title><rect x="14.5" y="693" width="0.2" height="15.0" fill="rgb(223,30,23)" rx="2" ry="2" />
<text  x="17.47" y="703.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; const, column_definition const*&gt;, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; const, column_definition const*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;, std::hash&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (1 samples, 0.02%)</title><rect x="72.2" y="693" width="0.2" height="15.0" fill="rgb(221,181,27)" rx="2" ry="2" />
<text  x="75.20" y="703.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (4 samples, 0.08%)</title><rect x="749.7" y="645" width="0.9" height="15.0" fill="rgb(252,202,21)" rx="2" ry="2" />
<text  x="752.68" y="655.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;compact_mutation_state&lt; (37 samples, 0.70%)</title><rect x="559.5" y="725" width="8.3" height="15.0" fill="rgb(226,197,19)" rx="2" ry="2" />
<text  x="562.50" y="735.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, cql3::statements::create_type_statement*, std::default_delete&lt;cql3::statements::create_type_statement&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="62.4" y="629" width="0.2" height="15.0" fill="rgb(243,67,17)" rx="2" ry="2" />
<text  x="65.35" y="639.5" ></text>
</g>
<g >
<title>seastar::internal::uninitialized_wrapper_base&lt;service::storage_proxy_coordinator_query_result, false&gt;::uninitialized_set&lt;service::storage_proxy_coordinator_query_result&gt; (1 samples, 0.02%)</title><rect x="1147.9" y="773" width="0.3" height="15.0" fill="rgb(207,108,37)" rx="2" ry="2" />
<text  x="1150.94" y="783.5" ></text>
</g>
<g >
<title>seastar::repeat&lt;flat_mutation_reader::impl::consume_pausable&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (3 samples, 0.06%)</title><rect x="693.3" y="677" width="0.7" height="15.0" fill="rgb(216,42,39)" rx="2" ry="2" />
<text  x="696.30" y="687.5" ></text>
</g>
<g >
<title>std::allocator&lt;seastar::shared_ptr&lt;cql3::relation&gt; &gt;::allocator (1 samples, 0.02%)</title><rect x="61.2" y="629" width="0.3" height="15.0" fill="rgb(225,65,6)" rx="2" ry="2" />
<text  x="64.24" y="639.5" ></text>
</g>
<g >
<title>streamed_mutation_freezer::consume_end_of_stream (1 samples, 0.02%)</title><rect x="105.8" y="565" width="0.2" height="15.0" fill="rgb(205,70,31)" rx="2" ry="2" />
<text  x="108.76" y="575.5" ></text>
</g>
<g >
<title>allocation_strategy::alloc&lt;blob_storage&gt; (3 samples, 0.06%)</title><rect x="238.4" y="389" width="0.7" height="15.0" fill="rgb(224,215,23)" rx="2" ry="2" />
<text  x="241.44" y="399.5" ></text>
</g>
<g >
<title>__memset_avx2_erms (1 samples, 0.02%)</title><rect x="15.1" y="741" width="0.3" height="15.0" fill="rgb(212,212,54)" rx="2" ry="2" />
<text  x="18.15" y="751.5" ></text>
</g>
<g >
<title>ser::row_view::columns (1 samples, 0.02%)</title><rect x="1128.5" y="533" width="0.2" height="15.0" fill="rgb(233,26,9)" rx="2" ry="2" />
<text  x="1131.47" y="543.5" ></text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt;&amp;&gt; (6 samples, 0.11%)</title><rect x="851.9" y="661" width="1.4" height="15.0" fill="rgb(233,200,1)" rx="2" ry="2" />
<text  x="854.93" y="671.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (2 samples, 0.04%)</title><rect x="48.3" y="565" width="0.4" height="15.0" fill="rgb(249,139,37)" rx="2" ry="2" />
<text  x="51.26" y="575.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;std::optional&lt;utils::chunked_vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, 131072ul&gt; &gt; &gt; &gt;::invoke&lt;dht::split_range_to_single_shard (1 samples, 0.02%)</title><rect x="10.4" y="741" width="0.3" height="15.0" fill="rgb(229,30,54)" rx="2" ry="2" />
<text  x="13.45" y="751.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (21 samples, 0.40%)</title><rect x="1133.6" y="613" width="4.7" height="15.0" fill="rgb(229,175,32)" rx="2" ry="2" />
<text  x="1136.62" y="623.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (2 samples, 0.04%)</title><rect x="449.4" y="661" width="0.5" height="15.0" fill="rgb(214,128,31)" rx="2" ry="2" />
<text  x="452.42" y="671.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.04%)</title><rect x="919.3" y="613" width="0.4" height="15.0" fill="rgb(229,164,27)" rx="2" ry="2" />
<text  x="922.28" y="623.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;std::function&lt;flat_mutation_reader  (1 samples, 0.02%)</title><rect x="618.6" y="741" width="0.2" height="15.0" fill="rgb(240,11,49)" rx="2" ry="2" />
<text  x="621.57" y="751.5" ></text>
</g>
<g >
<title>read_simple&lt;unsigned short, managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="10.4" y="613" width="0.3" height="15.0" fill="rgb(245,217,51)" rx="2" ry="2" />
<text  x="13.45" y="623.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (1 samples, 0.02%)</title><rect x="302.7" y="597" width="0.2" height="15.0" fill="rgb(209,208,14)" rx="2" ry="2" />
<text  x="305.65" y="607.5" ></text>
</g>
<g >
<title>utils::phased_barrier::start (1 samples, 0.02%)</title><rect x="1130.3" y="645" width="0.2" height="15.0" fill="rgb(209,109,7)" rx="2" ry="2" />
<text  x="1133.26" y="655.5" ></text>
</g>
<g >
<title>std::apply&lt;flat_mutation_reader::impl::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (1 samples, 0.02%)</title><rect x="106.9" y="581" width="0.2" height="15.0" fill="rgb(211,108,33)" rx="2" ry="2" />
<text  x="109.88" y="591.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::trivial_direct_move&lt;8ul&gt; (7 samples, 0.13%)</title><rect x="990.6" y="565" width="1.6" height="15.0" fill="rgb(227,67,4)" rx="2" ry="2" />
<text  x="993.65" y="575.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::~small_vector (5 samples, 0.09%)</title><rect x="598.0" y="661" width="1.1" height="15.0" fill="rgb(237,137,44)" rx="2" ry="2" />
<text  x="600.99" y="671.5" ></text>
</g>
<g >
<title>tracing::add_table_name (1 samples, 0.02%)</title><rect x="1120.2" y="725" width="0.2" height="15.0" fill="rgb(212,42,32)" rx="2" ry="2" />
<text  x="1123.19" y="735.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (1 samples, 0.02%)</title><rect x="695.5" y="613" width="0.3" height="15.0" fill="rgb(254,99,38)" rx="2" ry="2" />
<text  x="698.54" y="623.5" ></text>
</g>
<g >
<title>schema::position (1 samples, 0.02%)</title><rect x="1110.1" y="725" width="0.2" height="15.0" fill="rgb(206,57,19)" rx="2" ry="2" />
<text  x="1113.13" y="735.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::clone&lt;row::row (1 samples, 0.02%)</title><rect x="869.2" y="565" width="0.2" height="15.0" fill="rgb(239,21,17)" rx="2" ry="2" />
<text  x="872.16" y="575.5" ></text>
</g>
<g >
<title>reader_selector::has_new_readers (1 samples, 0.02%)</title><rect x="466.4" y="597" width="0.3" height="15.0" fill="rgb(239,124,10)" rx="2" ry="2" />
<text  x="469.43" y="607.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_Optional_payload_base (1 samples, 0.02%)</title><rect x="752.6" y="661" width="0.2" height="15.0" fill="rgb(232,62,16)" rx="2" ry="2" />
<text  x="755.59" y="671.5" ></text>
</g>
<g >
<title>seastar::basic_semaphore&lt;db::commitlog::segment_manager::request_controller_timeout_exception_factory, seastar::lowres_clock&gt;::wait (1 samples, 0.02%)</title><rect x="1129.6" y="581" width="0.2" height="15.0" fill="rgb(245,129,6)" rx="2" ry="2" />
<text  x="1132.59" y="591.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt;::_Move_ctor_base (1 samples, 0.02%)</title><rect x="909.4" y="581" width="0.3" height="15.0" fill="rgb(221,47,11)" rx="2" ry="2" />
<text  x="912.43" y="591.5" ></text>
</g>
<g >
<title>partition_key::legacy_tri_compare (34 samples, 0.64%)</title><rect x="494.4" y="565" width="7.6" height="15.0" fill="rgb(216,199,14)" rx="2" ry="2" />
<text  x="497.40" y="575.5" ></text>
</g>
<g >
<title>schema::partition_key_size (1 samples, 0.02%)</title><rect x="949.0" y="693" width="0.3" height="15.0" fill="rgb(206,223,47)" rx="2" ry="2" />
<text  x="952.03" y="703.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;service::storage_proxy::unique_response_handler*, service::storage_proxy::mutate_begin (5 samples, 0.09%)</title><rect x="1132.1" y="581" width="1.1" height="15.0" fill="rgb(212,59,22)" rx="2" ry="2" />
<text  x="1135.05" y="591.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::get_error (1 samples, 0.02%)</title><rect x="54.5" y="549" width="0.2" height="15.0" fill="rgb(243,125,29)" rx="2" ry="2" />
<text  x="57.52" y="559.5" ></text>
</g>
<g >
<title>partition_entry::evict (1 samples, 0.02%)</title><rect x="695.5" y="549" width="0.3" height="15.0" fill="rgb(243,192,2)" rx="2" ry="2" />
<text  x="698.54" y="559.5" ></text>
</g>
<g >
<title>ser::integral_serializer&lt;unsigned int&gt;::read&lt;seastar::fragmented_memory_input_stream&lt;bytes_ostream::fragment_iterator&gt; &gt; (1 samples, 0.02%)</title><rect x="107.8" y="549" width="0.2" height="15.0" fill="rgb(216,55,50)" rx="2" ry="2" />
<text  x="110.77" y="559.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (2 samples, 0.04%)</title><rect x="525.5" y="517" width="0.4" height="15.0" fill="rgb(207,171,47)" rx="2" ry="2" />
<text  x="528.49" y="527.5" ></text>
</g>
<g >
<title>skip_empty_fragments&lt;managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="874.5" y="517" width="0.3" height="15.0" fill="rgb(240,99,9)" rx="2" ry="2" />
<text  x="877.53" y="527.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.02%)</title><rect x="38.9" y="581" width="0.2" height="15.0" fill="rgb(230,47,17)" rx="2" ry="2" />
<text  x="41.86" y="591.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::~statement_restrictions (2 samples, 0.04%)</title><rect x="652.1" y="757" width="0.5" height="15.0" fill="rgb(219,224,19)" rx="2" ry="2" />
<text  x="655.13" y="767.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;cql_transport::messages::result_message::rows, false&gt;::make&lt;cql3::result&gt; (6 samples, 0.11%)</title><rect x="661.3" y="773" width="1.3" height="15.0" fill="rgb(209,195,50)" rx="2" ry="2" />
<text  x="664.30" y="783.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (1 samples, 0.02%)</title><rect x="330.4" y="693" width="0.2" height="15.0" fill="rgb(220,147,43)" rx="2" ry="2" />
<text  x="333.39" y="703.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;false, false, std::random_access_iterator_tag&gt;::__copy_m&lt;seastar::shared_ptr&lt;cql3::column_identifier&gt; const*, seastar::shared_ptr&lt;cql3::column_identifier&gt;*&gt; (1 samples, 0.02%)</title><rect x="37.3" y="661" width="0.2" height="15.0" fill="rgb(251,166,34)" rx="2" ry="2" />
<text  x="40.30" y="671.5" ></text>
</g>
<g >
<title>std::type_info::operator== (1 samples, 0.02%)</title><rect x="1039.2" y="565" width="0.2" height="15.0" fill="rgb(233,140,51)" rx="2" ry="2" />
<text  x="1042.20" y="575.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.02%)</title><rect x="38.9" y="549" width="0.2" height="15.0" fill="rgb(247,204,33)" rx="2" ry="2" />
<text  x="41.86" y="559.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (1 samples, 0.02%)</title><rect x="53.6" y="533" width="0.3" height="15.0" fill="rgb(215,219,45)" rx="2" ry="2" />
<text  x="56.63" y="543.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="48.3" y="533" width="0.2" height="15.0" fill="rgb(214,188,33)" rx="2" ry="2" />
<text  x="51.26" y="543.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (3 samples, 0.06%)</title><rect x="45.8" y="517" width="0.7" height="15.0" fill="rgb(225,137,9)" rx="2" ry="2" />
<text  x="48.80" y="527.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;std::tuple&lt;std::optional&lt;clustering_key_prefix&gt; &gt; &gt;::clear (1 samples, 0.02%)</title><rect x="618.1" y="741" width="0.2" height="15.0" fill="rgb(253,116,4)" rx="2" ry="2" />
<text  x="621.12" y="751.5" ></text>
</g>
<g >
<title>schema::registry_entry (1 samples, 0.02%)</title><rect x="1009.2" y="581" width="0.2" height="15.0" fill="rgb(236,176,52)" rx="2" ry="2" />
<text  x="1012.22" y="591.5" ></text>
</g>
<g >
<title>_ZSt5applyIZN7seastar8internal12do_with_implISt4pairIN4auth17role_or_anonymousENS4_8resourceEEZNS4_17permissions_cache3getERKS5_RKS6_E3$_0JEEEDaOT_OT0_DpOT1_EUlDpOT_E_St5tupleIJOS7_EEEDcSF_SH_ (3 samples, 0.06%)</title><rect x="795.1" y="565" width="0.7" height="15.0" fill="rgb(220,104,49)" rx="2" ry="2" />
<text  x="798.10" y="575.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="931.4" y="645" width="0.2" height="15.0" fill="rgb(232,14,52)" rx="2" ry="2" />
<text  x="934.36" y="655.5" ></text>
</g>
<g >
<title>database::find_schema (8 samples, 0.15%)</title><rect x="767.6" y="693" width="1.8" height="15.0" fill="rgb(225,84,26)" rx="2" ry="2" />
<text  x="770.58" y="703.5" ></text>
</g>
<g >
<title>database::shard_of (1 samples, 0.02%)</title><rect x="1132.7" y="485" width="0.2" height="15.0" fill="rgb(252,16,44)" rx="2" ry="2" />
<text  x="1135.72" y="495.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_wrapped_nrvo&lt;seastar::future&lt;void&gt;, service::storage_proxy::mutate_internal&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="1133.4" y="613" width="0.2" height="15.0" fill="rgb(210,62,13)" rx="2" ry="2" />
<text  x="1136.39" y="623.5" ></text>
</g>
<g >
<title>schema_registry::get_entry (3 samples, 0.06%)</title><rect x="975.9" y="661" width="0.7" height="15.0" fill="rgb(218,32,54)" rx="2" ry="2" />
<text  x="978.88" y="671.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;gms::inet_address, std::pair&lt;gms::inet_address const, utils::UUID&gt;, std::allocator&lt;std::pair&lt;gms::inet_address const, utils::UUID&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;gms::inet_address&gt;, std::hash&lt;gms::inet_address&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (6 samples, 0.11%)</title><rect x="1150.6" y="741" width="1.4" height="15.0" fill="rgb(252,67,43)" rx="2" ry="2" />
<text  x="1153.62" y="751.5" ></text>
</g>
<g >
<title>cql3::raw_value_view::with_value&lt;cql3::raw_value_view::validate (2 samples, 0.04%)</title><rect x="908.8" y="581" width="0.4" height="15.0" fill="rgb(232,219,9)" rx="2" ry="2" />
<text  x="911.76" y="591.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;frozen_mutation&gt;::dispose (1 samples, 0.02%)</title><rect x="719.9" y="741" width="0.2" height="15.0" fill="rgb(233,82,3)" rx="2" ry="2" />
<text  x="722.92" y="751.5" ></text>
</g>
<g >
<title>query::result_set::result_set (2 samples, 0.04%)</title><rect x="107.8" y="693" width="0.4" height="15.0" fill="rgb(224,172,29)" rx="2" ry="2" />
<text  x="110.77" y="703.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (6 samples, 0.11%)</title><rect x="45.1" y="613" width="1.4" height="15.0" fill="rgb(213,127,1)" rx="2" ry="2" />
<text  x="48.13" y="623.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::push_back (1 samples, 0.02%)</title><rect x="52.5" y="549" width="0.2" height="15.0" fill="rgb(252,88,43)" rx="2" ry="2" />
<text  x="55.51" y="559.5" ></text>
</g>
<g >
<title>seastar::internal::uninitialized_wrapper_base&lt;service::storage_proxy_coordinator_query_result, false&gt;::uninitialized_set&lt;service::storage_proxy_coordinator_query_result&gt; (1 samples, 0.02%)</title><rect x="691.3" y="789" width="0.2" height="15.0" fill="rgb(249,92,10)" rx="2" ry="2" />
<text  x="694.29" y="799.5" ></text>
</g>
<g >
<title>boost::algorithm::detail::token_finderF&lt;boost::algorithm::detail::is_any_ofF&lt;char&gt; &gt;::operator (1 samples, 0.02%)</title><rect x="720.6" y="693" width="0.2" height="15.0" fill="rgb(217,178,21)" rx="2" ry="2" />
<text  x="723.60" y="703.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::contains&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (9 samples, 0.17%)</title><rect x="843.0" y="709" width="2.0" height="15.0" fill="rgb(233,64,13)" rx="2" ry="2" />
<text  x="845.98" y="719.5" ></text>
</g>
<g >
<title>remove_or_mark_as_unique_owner (1 samples, 0.02%)</title><rect x="78.5" y="773" width="0.2" height="15.0" fill="rgb(241,166,26)" rx="2" ry="2" />
<text  x="81.46" y="783.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (7 samples, 0.13%)</title><rect x="338.2" y="581" width="1.6" height="15.0" fill="rgb(222,51,50)" rx="2" ry="2" />
<text  x="341.23" y="591.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (2 samples, 0.04%)</title><rect x="736.9" y="629" width="0.5" height="15.0" fill="rgb(206,167,16)" rx="2" ry="2" />
<text  x="739.93" y="639.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::raw::parsed_statement, std::default_delete&lt;cql3::statements::raw::parsed_statement&gt; &gt;::operator=&lt;cql3::statements::raw::update_statement, std::default_delete&lt;cql3::statements::raw::update_statement&gt; &gt; (1 samples, 0.02%)</title><rect x="63.7" y="677" width="0.2" height="15.0" fill="rgb(228,208,18)" rx="2" ry="2" />
<text  x="66.70" y="687.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (3 samples, 0.06%)</title><rect x="718.6" y="789" width="0.7" height="15.0" fill="rgb(216,85,21)" rx="2" ry="2" />
<text  x="721.58" y="799.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (2 samples, 0.04%)</title><rect x="54.7" y="405" width="0.5" height="15.0" fill="rgb(239,130,16)" rx="2" ry="2" />
<text  x="57.75" y="415.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (3 samples, 0.06%)</title><rect x="807.2" y="421" width="0.7" height="15.0" fill="rgb(220,156,21)" rx="2" ry="2" />
<text  x="810.18" y="431.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::push_mutation_fragment&lt;mutation_fragment&gt; (2 samples, 0.04%)</title><rect x="79.6" y="645" width="0.4" height="15.0" fill="rgb(220,210,54)" rx="2" ry="2" />
<text  x="82.58" y="655.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.02%)</title><rect x="469.3" y="613" width="0.3" height="15.0" fill="rgb(210,132,43)" rx="2" ry="2" />
<text  x="472.34" y="623.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::setTokenStream (1 samples, 0.02%)</title><rect x="19.8" y="693" width="0.3" height="15.0" fill="rgb(243,97,2)" rx="2" ry="2" />
<text  x="22.84" y="703.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::list_roles_statement, std::default_delete&lt;cql3::statements::list_roles_statement&gt; &gt;::__uniq_ptr_impl (1 samples, 0.02%)</title><rect x="63.0" y="645" width="0.2" height="15.0" fill="rgb(233,174,23)" rx="2" ry="2" />
<text  x="66.03" y="655.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_token (1 samples, 0.02%)</title><rect x="657.3" y="709" width="0.2" height="15.0" fill="rgb(213,30,39)" rx="2" ry="2" />
<text  x="660.28" y="719.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_M_reset (1 samples, 0.02%)</title><rect x="100.2" y="741" width="0.2" height="15.0" fill="rgb(206,136,16)" rx="2" ry="2" />
<text  x="103.17" y="751.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="20.1" y="645" width="0.2" height="15.0" fill="rgb(241,56,53)" rx="2" ry="2" />
<text  x="23.07" y="655.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;mutation_querier&gt;::_M_reset (1 samples, 0.02%)</title><rect x="624.6" y="741" width="0.2" height="15.0" fill="rgb(233,77,26)" rx="2" ry="2" />
<text  x="627.61" y="751.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::check_local_limit (1 samples, 0.02%)</title><rect x="345.4" y="517" width="0.2" height="15.0" fill="rgb(229,40,36)" rx="2" ry="2" />
<text  x="348.38" y="527.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::impl (6 samples, 0.11%)</title><rect x="471.4" y="581" width="1.3" height="15.0" fill="rgb(222,179,36)" rx="2" ry="2" />
<text  x="474.35" y="591.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql3::statements::update_statement&gt;::shared_ptr_count_for&lt;cql3::statements::statement_type const&amp;, unsigned long, seastar::lw_shared_ptr&lt;schema const&gt;&amp;, std::unique_ptr&lt;cql3::attributes, std::default_delete&lt;cql3::attributes&gt; &gt;, cql3::cql_stats&amp;&gt; (4 samples, 0.08%)</title><rect x="72.9" y="709" width="0.9" height="15.0" fill="rgb(252,201,27)" rx="2" ry="2" />
<text  x="75.87" y="719.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::visit&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (1 samples, 0.02%)</title><rect x="14.5" y="709" width="0.2" height="15.0" fill="rgb(247,210,14)" rx="2" ry="2" />
<text  x="17.47" y="719.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="66.6" y="709" width="0.2" height="15.0" fill="rgb(244,79,28)" rx="2" ry="2" />
<text  x="69.61" y="719.5" ></text>
</g>
<g >
<title>frozen_schema::unfreeze (3 samples, 0.06%)</title><rect x="107.8" y="725" width="0.6" height="15.0" fill="rgb(223,81,15)" rx="2" ry="2" />
<text  x="110.77" y="735.5" ></text>
</g>
<g >
<title>atomic_cell_or_collection::copy (2 samples, 0.04%)</title><rect x="225.5" y="437" width="0.4" height="15.0" fill="rgb(214,90,29)" rx="2" ry="2" />
<text  x="228.46" y="447.5" ></text>
</g>
<g >
<title>dht::tri_compare (3 samples, 0.06%)</title><rect x="1072.8" y="549" width="0.6" height="15.0" fill="rgb(205,149,20)" rx="2" ry="2" />
<text  x="1075.76" y="559.5" ></text>
</g>
<g >
<title>seastar::internal::repeater&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (3 samples, 0.06%)</title><rect x="869.2" y="805" width="0.6" height="15.0" fill="rgb(233,131,44)" rx="2" ry="2" />
<text  x="872.16" y="815.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::take (1 samples, 0.02%)</title><rect x="1146.6" y="773" width="0.2" height="15.0" fill="rgb(225,77,29)" rx="2" ry="2" />
<text  x="1149.59" y="783.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (1 samples, 0.02%)</title><rect x="869.2" y="533" width="0.2" height="15.0" fill="rgb(230,121,37)" rx="2" ry="2" />
<text  x="872.16" y="543.5" ></text>
</g>
<g >
<title>cql3::update_parameters::make_cell (4 samples, 0.08%)</title><rect x="873.9" y="597" width="0.9" height="15.0" fill="rgb(205,123,52)" rx="2" ry="2" />
<text  x="876.86" y="607.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;auth::resource&gt;::_Optional_payload_base (3 samples, 0.06%)</title><rect x="786.8" y="597" width="0.7" height="15.0" fill="rgb(242,180,18)" rx="2" ry="2" />
<text  x="789.82" y="607.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (3 samples, 0.06%)</title><rect x="45.8" y="501" width="0.7" height="15.0" fill="rgb(246,36,27)" rx="2" ry="2" />
<text  x="48.80" y="511.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (4 samples, 0.08%)</title><rect x="43.6" y="485" width="0.9" height="15.0" fill="rgb(252,182,29)" rx="2" ry="2" />
<text  x="46.56" y="495.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (2 samples, 0.04%)</title><rect x="710.1" y="757" width="0.4" height="15.0" fill="rgb(253,176,8)" rx="2" ry="2" />
<text  x="713.08" y="767.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt;::allocate (1 samples, 0.02%)</title><rect x="157.4" y="709" width="0.3" height="15.0" fill="rgb(217,116,21)" rx="2" ry="2" />
<text  x="160.44" y="719.5" ></text>
</g>
<g >
<title>ser::idl::serializers::internal::vector_serializer&lt;std::vector&lt;ser::column_view, std::allocator&lt;ser::column_view&gt; &gt; &gt;::read&lt;seastar::simple_memory_input_stream&gt; (1 samples, 0.02%)</title><rect x="1128.5" y="517" width="0.2" height="15.0" fill="rgb(213,224,42)" rx="2" ry="2" />
<text  x="1131.47" y="527.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (566 samples, 10.73%)</title><rect x="177.6" y="629" width="126.6" height="15.0" fill="rgb(209,53,28)" rx="2" ry="2" />
<text  x="180.58" y="639.5" >mutation_reader..</text>
</g>
<g >
<title>locator::simple_snitch::get_datacenter (1 samples, 0.02%)</title><rect x="1132.3" y="549" width="0.2" height="15.0" fill="rgb(213,36,4)" rx="2" ry="2" />
<text  x="1135.28" y="559.5" ></text>
</g>
<g >
<title>std::vector&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, std::allocator&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="562.6" y="677" width="0.3" height="15.0" fill="rgb(233,11,7)" rx="2" ry="2" />
<text  x="565.64" y="687.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="914.1" y="597" width="0.3" height="15.0" fill="rgb(211,40,21)" rx="2" ry="2" />
<text  x="917.13" y="607.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (5 samples, 0.09%)</title><rect x="424.4" y="517" width="1.1" height="15.0" fill="rgb(233,43,37)" rx="2" ry="2" />
<text  x="427.36" y="527.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.02%)</title><rect x="40.4" y="581" width="0.3" height="15.0" fill="rgb(236,173,53)" rx="2" ry="2" />
<text  x="43.43" y="591.5" ></text>
</g>
<g >
<title>seastar::future&lt;mutation_fragment*&gt;::schedule&lt;seastar::internal::promise_base_with_type&lt;std::tuple&lt;std::optional&lt;clustering_key_prefix&gt; &gt; &gt;, query::consume_page&lt; (1 samples, 0.02%)</title><rect x="444.7" y="693" width="0.2" height="15.0" fill="rgb(238,228,33)" rx="2" ry="2" />
<text  x="447.73" y="703.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_locally (1 samples, 0.02%)</title><rect x="106.4" y="789" width="0.3" height="15.0" fill="rgb(246,60,47)" rx="2" ry="2" />
<text  x="109.43" y="799.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (1 samples, 0.02%)</title><rect x="28.8" y="517" width="0.2" height="15.0" fill="rgb(245,87,30)" rx="2" ry="2" />
<text  x="31.79" y="527.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (1 samples, 0.02%)</title><rect x="994.7" y="629" width="0.2" height="15.0" fill="rgb(216,88,26)" rx="2" ry="2" />
<text  x="997.68" y="639.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.04%)</title><rect x="478.3" y="613" width="0.4" height="15.0" fill="rgb(208,167,21)" rx="2" ry="2" />
<text  x="481.29" y="623.5" ></text>
</g>
<g >
<title>schema_mutations::partitioner (1 samples, 0.02%)</title><rect x="108.2" y="693" width="0.2" height="15.0" fill="rgb(242,136,53)" rx="2" ry="2" />
<text  x="111.22" y="703.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (4 samples, 0.08%)</title><rect x="219.6" y="517" width="0.9" height="15.0" fill="rgb(207,137,49)" rx="2" ry="2" />
<text  x="222.64" y="527.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::selection::selection const&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="669.6" y="789" width="0.2" height="15.0" fill="rgb(207,3,30)" rx="2" ry="2" />
<text  x="672.58" y="799.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.02%)</title><rect x="58.1" y="501" width="0.2" height="15.0" fill="rgb(237,100,14)" rx="2" ry="2" />
<text  x="61.10" y="511.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::raw::delete_statement, std::default_delete&lt;cql3::statements::raw::delete_statement&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="65.5" y="693" width="0.2" height="15.0" fill="rgb(230,202,48)" rx="2" ry="2" />
<text  x="68.49" y="703.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.02%)</title><rect x="834.9" y="581" width="0.2" height="15.0" fill="rgb(231,57,11)" rx="2" ry="2" />
<text  x="837.93" y="591.5" ></text>
</g>
<g >
<title>cql3::raw_value::make_value (4 samples, 0.08%)</title><rect x="911.2" y="597" width="0.9" height="15.0" fill="rgb(221,70,34)" rx="2" ry="2" />
<text  x="914.22" y="607.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::constant (8 samples, 0.15%)</title><rect x="53.9" y="581" width="1.7" height="15.0" fill="rgb(208,180,21)" rx="2" ry="2" />
<text  x="56.85" y="591.5" ></text>
</g>
<g >
<title>seastar::hrtimer_aio_completion::complete_with (3 samples, 0.06%)</title><rect x="1169.2" y="773" width="0.7" height="15.0" fill="rgb(228,87,40)" rx="2" ry="2" />
<text  x="1172.19" y="783.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::has_token (1 samples, 0.02%)</title><rect x="657.3" y="725" width="0.2" height="15.0" fill="rgb(212,92,34)" rx="2" ry="2" />
<text  x="660.28" y="735.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_next (1 samples, 0.02%)</title><rect x="304.2" y="629" width="0.2" height="15.0" fill="rgb(239,5,52)" rx="2" ry="2" />
<text  x="307.22" y="639.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (1 samples, 0.02%)</title><rect x="797.6" y="533" width="0.2" height="15.0" fill="rgb(236,159,30)" rx="2" ry="2" />
<text  x="800.56" y="543.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;reader_permit::impl, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="1033.4" y="485" width="0.2" height="15.0" fill="rgb(205,59,29)" rx="2" ry="2" />
<text  x="1036.38" y="495.5" ></text>
</g>
<g >
<title>memtable::memtable_encoding_stats_collector::update (3 samples, 0.06%)</title><rect x="1125.1" y="549" width="0.7" height="15.0" fill="rgb(244,90,50)" rx="2" ry="2" />
<text  x="1128.12" y="559.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.02%)</title><rect x="20.5" y="533" width="0.2" height="15.0" fill="rgb(244,183,38)" rx="2" ry="2" />
<text  x="23.52" y="543.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.02%)</title><rect x="55.0" y="357" width="0.2" height="15.0" fill="rgb(244,66,17)" rx="2" ry="2" />
<text  x="57.97" y="367.5" ></text>
</g>
<g >
<title>range_tombstone_list::slice (1 samples, 0.02%)</title><rect x="80.5" y="629" width="0.2" height="15.0" fill="rgb(244,152,28)" rx="2" ry="2" />
<text  x="83.48" y="639.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cfName (2 samples, 0.04%)</title><rect x="40.9" y="645" width="0.4" height="15.0" fill="rgb(247,20,39)" rx="2" ry="2" />
<text  x="43.88" y="655.5" ></text>
</g>
<g >
<title>schema_registry::get_entry (16 samples, 0.30%)</title><rect x="972.1" y="645" width="3.6" height="15.0" fill="rgb(227,28,54)" rx="2" ry="2" />
<text  x="975.08" y="655.5" ></text>
</g>
<g >
<title>utils::timed_rate_moving_average_and_histogram::mark (7 samples, 0.13%)</title><rect x="614.3" y="725" width="1.6" height="15.0" fill="rgb(219,129,34)" rx="2" ry="2" />
<text  x="617.32" y="735.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::vector (2 samples, 0.04%)</title><rect x="70.4" y="565" width="0.5" height="15.0" fill="rgb(250,126,39)" rx="2" ry="2" />
<text  x="73.41" y="575.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::move_it (6 samples, 0.11%)</title><rect x="689.7" y="773" width="1.4" height="15.0" fill="rgb(222,144,53)" rx="2" ry="2" />
<text  x="692.72" y="783.5" ></text>
</g>
<g >
<title>do_lookup_x (1 samples, 0.02%)</title><rect x="1180.2" y="933" width="0.2" height="15.0" fill="rgb(209,33,17)" rx="2" ry="2" />
<text  x="1183.16" y="943.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (14 samples, 0.27%)</title><rect x="78.7" y="917" width="3.1" height="15.0" fill="rgb(208,143,9)" rx="2" ry="2" />
<text  x="81.69" y="927.5" ></text>
</g>
<g >
<title>utils::tuple_hash::operator (3 samples, 0.06%)</title><rect x="832.5" y="613" width="0.6" height="15.0" fill="rgb(228,112,13)" rx="2" ry="2" />
<text  x="835.46" y="623.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::emplace_back&lt;flat_mutation_reader&gt; (1 samples, 0.02%)</title><rect x="553.9" y="645" width="0.2" height="15.0" fill="rgb(214,112,37)" rx="2" ry="2" />
<text  x="556.91" y="655.5" ></text>
</g>
<g >
<title>managed_bytes::operator= (1 samples, 0.02%)</title><rect x="1109.9" y="725" width="0.2" height="15.0" fill="rgb(241,43,35)" rx="2" ry="2" />
<text  x="1112.90" y="735.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_M_set_node (1 samples, 0.02%)</title><rect x="51.8" y="405" width="0.3" height="15.0" fill="rgb(232,171,20)" rx="2" ry="2" />
<text  x="54.84" y="415.5" ></text>
</g>
<g >
<title>bound_view::tri_compare::operator (1 samples, 0.02%)</title><rect x="105.3" y="661" width="0.2" height="15.0" fill="rgb(218,33,30)" rx="2" ry="2" />
<text  x="108.31" y="671.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_allocate_node (2 samples, 0.04%)</title><rect x="23.6" y="549" width="0.5" height="15.0" fill="rgb(210,54,8)" rx="2" ry="2" />
<text  x="26.65" y="559.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (5 samples, 0.09%)</title><rect x="693.3" y="741" width="1.1" height="15.0" fill="rgb(251,135,19)" rx="2" ry="2" />
<text  x="696.30" y="751.5" ></text>
</g>
<g >
<title>dht::shard_of (1 samples, 0.02%)</title><rect x="999.6" y="597" width="0.2" height="15.0" fill="rgb(218,180,14)" rx="2" ry="2" />
<text  x="1002.60" y="607.5" ></text>
</g>
<g >
<title>seastar::memory::stats (2 samples, 0.04%)</title><rect x="539.1" y="629" width="0.5" height="15.0" fill="rgb(218,74,35)" rx="2" ry="2" />
<text  x="542.14" y="639.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (1 samples, 0.02%)</title><rect x="664.2" y="789" width="0.2" height="15.0" fill="rgb(238,41,6)" rx="2" ry="2" />
<text  x="667.21" y="799.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::metadata const&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="101.7" y="773" width="0.3" height="15.0" fill="rgb(218,168,46)" rx="2" ry="2" />
<text  x="104.73" y="783.5" ></text>
</g>
<g >
<title>reader_permit::impl::~impl (1 samples, 0.02%)</title><rect x="694.4" y="789" width="0.2" height="15.0" fill="rgb(247,40,19)" rx="2" ry="2" />
<text  x="697.42" y="799.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (28 samples, 0.53%)</title><rect x="870.5" y="773" width="6.3" height="15.0" fill="rgb(216,158,14)" rx="2" ry="2" />
<text  x="873.50" y="783.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (2 samples, 0.04%)</title><rect x="771.4" y="613" width="0.4" height="15.0" fill="rgb(218,200,23)" rx="2" ry="2" />
<text  x="774.38" y="623.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (5 samples, 0.09%)</title><rect x="43.3" y="581" width="1.2" height="15.0" fill="rgb(220,209,38)" rx="2" ry="2" />
<text  x="46.34" y="591.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;::shared_ptr (1 samples, 0.02%)</title><rect x="60.3" y="661" width="0.3" height="15.0" fill="rgb(220,36,41)" rx="2" ry="2" />
<text  x="63.34" y="671.5" ></text>
</g>
<g >
<title>std::apply&lt;service::client_state::has_column_family_access (1 samples, 0.02%)</title><rect x="835.8" y="709" width="0.2" height="15.0" fill="rgb(239,59,42)" rx="2" ry="2" />
<text  x="838.82" y="719.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (2 samples, 0.04%)</title><rect x="253.0" y="437" width="0.4" height="15.0" fill="rgb(218,124,53)" rx="2" ry="2" />
<text  x="255.98" y="447.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (37 samples, 0.70%)</title><rect x="128.4" y="725" width="8.2" height="15.0" fill="rgb(222,80,18)" rx="2" ry="2" />
<text  x="131.36" y="735.5" ></text>
</g>
<g >
<title>utils::tuple_hash::operator (1 samples, 0.02%)</title><rect x="740.3" y="661" width="0.2" height="15.0" fill="rgb(206,177,52)" rx="2" ry="2" />
<text  x="743.28" y="671.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.02%)</title><rect x="44.0" y="405" width="0.2" height="15.0" fill="rgb(254,116,53)" rx="2" ry="2" />
<text  x="47.01" y="415.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;9ul, cql3::expr::untyped_constant&gt; (1 samples, 0.02%)</title><rect x="53.4" y="389" width="0.2" height="15.0" fill="rgb(234,109,28)" rx="2" ry="2" />
<text  x="56.41" y="399.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (1 samples, 0.02%)</title><rect x="804.9" y="453" width="0.3" height="15.0" fill="rgb(251,186,30)" rx="2" ry="2" />
<text  x="807.95" y="463.5" ></text>
</g>
<g >
<title>utils::tuple_hash::operator (1 samples, 0.02%)</title><rect x="760.6" y="629" width="0.3" height="15.0" fill="rgb(215,163,43)" rx="2" ry="2" />
<text  x="763.64" y="639.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="540.3" y="645" width="0.2" height="15.0" fill="rgb(233,52,32)" rx="2" ry="2" />
<text  x="543.26" y="655.5" ></text>
</g>
<g >
<title>ser::deserialize_array_helper&lt;false, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;::doit&lt;seastar::simple_memory_input_stream, std::vector&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, std::allocator&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="1127.8" y="501" width="0.2" height="15.0" fill="rgb(246,80,18)" rx="2" ry="2" />
<text  x="1130.80" y="511.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::range_tombstone_accumulator (15 samples, 0.28%)</title><rect x="562.9" y="693" width="3.3" height="15.0" fill="rgb(240,155,48)" rx="2" ry="2" />
<text  x="565.86" y="703.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, enum_set&lt;super_enum&lt;auth::permission,  (4 samples, 0.08%)</title><rect x="76.2" y="597" width="0.9" height="15.0" fill="rgb(221,202,16)" rx="2" ry="2" />
<text  x="79.23" y="607.5" ></text>
</g>
<g >
<title>seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;::swap (2 samples, 0.04%)</title><rect x="841.9" y="741" width="0.4" height="15.0" fill="rgb(254,59,21)" rx="2" ry="2" />
<text  x="844.86" y="751.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::operator (3 samples, 0.06%)</title><rect x="807.2" y="437" width="0.7" height="15.0" fill="rgb(208,10,36)" rx="2" ry="2" />
<text  x="810.18" y="447.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume_in_thread&lt;sstables::sstable_writer, flat_mutation_reader::no_filter&gt; (14 samples, 0.27%)</title><rect x="78.7" y="837" width="3.1" height="15.0" fill="rgb(232,178,40)" rx="2" ry="2" />
<text  x="81.69" y="847.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;8ul, cql3::expr::untyped_constant&gt; (1 samples, 0.02%)</title><rect x="53.4" y="373" width="0.2" height="15.0" fill="rgb(231,140,46)" rx="2" ry="2" />
<text  x="56.41" y="383.5" ></text>
</g>
<g >
<title>[unknown] (321 samples, 6.09%)</title><rect x="10.2" y="933" width="71.8" height="15.0" fill="rgb(252,61,52)" rx="2" ry="2" />
<text  x="13.22" y="943.5" >[unknown]</text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.02%)</title><rect x="20.5" y="549" width="0.2" height="15.0" fill="rgb(240,71,19)" rx="2" ry="2" />
<text  x="23.52" y="559.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_restrictions::empty (1 samples, 0.02%)</title><rect x="949.5" y="709" width="0.2" height="15.0" fill="rgb(210,199,38)" rx="2" ry="2" />
<text  x="952.48" y="719.5" ></text>
</g>
<g >
<title>seastar::future&lt;std::tuple&lt;std::optional&lt;clustering_key_prefix&gt; &gt; &gt;::then_impl&lt;query::querier&lt; (1 samples, 0.02%)</title><rect x="616.1" y="741" width="0.2" height="15.0" fill="rgb(208,183,12)" rx="2" ry="2" />
<text  x="619.11" y="751.5" ></text>
</g>
<g >
<title>seastar::reactor::drain_cross_cpu_freelist_pollfn::poll (1 samples, 0.02%)</title><rect x="85.6" y="821" width="0.2" height="15.0" fill="rgb(223,95,18)" rx="2" ry="2" />
<text  x="88.62" y="831.5" ></text>
</g>
<g >
<title>cql3::expr::has_supporting_index (1 samples, 0.02%)</title><rect x="70.2" y="677" width="0.2" height="15.0" fill="rgb(207,126,29)" rx="2" ry="2" />
<text  x="73.19" y="687.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume_in_thread&lt;stable_flattened_mutations_consumer&lt;compact_for_compaction&lt;sstables::compacting_sstable_writer, noop_compacted_fragments_consumer&gt; &gt;, flat_mutation_reader::no_filter&gt; (1 samples, 0.02%)</title><rect x="16.9" y="837" width="0.3" height="15.0" fill="rgb(206,36,16)" rx="2" ry="2" />
<text  x="19.94" y="847.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (2 samples, 0.04%)</title><rect x="645.4" y="773" width="0.5" height="15.0" fill="rgb(217,224,18)" rx="2" ry="2" />
<text  x="648.42" y="783.5" ></text>
</g>
<g >
<title>locator::calculate_effective_replication_map (1 samples, 0.02%)</title><rect x="16.7" y="725" width="0.2" height="15.0" fill="rgb(247,9,39)" rx="2" ry="2" />
<text  x="19.71" y="735.5" ></text>
</g>
<g >
<title>seastar::futurize_invoke&lt;seastar::future&lt;void&gt;  (5 samples, 0.09%)</title><rect x="693.3" y="725" width="1.1" height="15.0" fill="rgb(209,22,4)" rx="2" ry="2" />
<text  x="696.30" y="735.5" ></text>
</g>
<g >
<title>logalloc::region_impl::alloc (1 samples, 0.02%)</title><rect x="1124.0" y="405" width="0.2" height="15.0" fill="rgb(250,38,44)" rx="2" ry="2" />
<text  x="1127.00" y="415.5" ></text>
</g>
<g >
<title>std::default_delete&lt;cql3::expr::expression::impl&gt;::operator (1 samples, 0.02%)</title><rect x="875.6" y="565" width="0.3" height="15.0" fill="rgb(223,53,31)" rx="2" ry="2" />
<text  x="878.65" y="575.5" ></text>
</g>
<g >
<title>std::__optional_hash_call_base&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, true&gt;::operator (1 samples, 0.02%)</title><rect x="810.3" y="389" width="0.2" height="15.0" fill="rgb(253,9,39)" rx="2" ry="2" />
<text  x="813.31" y="399.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;11ul, cql3::expr::untyped_constant&gt; (1 samples, 0.02%)</title><rect x="53.4" y="437" width="0.2" height="15.0" fill="rgb(252,145,28)" rx="2" ry="2" />
<text  x="56.41" y="447.5" ></text>
</g>
<g >
<title>antlr3::IntStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::rewind (3 samples, 0.06%)</title><rect x="34.2" y="533" width="0.6" height="15.0" fill="rgb(229,149,30)" rx="2" ry="2" />
<text  x="37.16" y="543.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_locally (1 samples, 0.02%)</title><rect x="106.4" y="741" width="0.3" height="15.0" fill="rgb(216,155,40)" rx="2" ry="2" />
<text  x="109.43" y="751.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;11ul, cql3::expr::untyped_constant, cql3::expr::untyped_constant, void&gt; (1 samples, 0.02%)</title><rect x="53.4" y="533" width="0.2" height="15.0" fill="rgb(225,126,1)" rx="2" ry="2" />
<text  x="56.41" y="543.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (4 samples, 0.08%)</title><rect x="46.7" y="533" width="0.9" height="15.0" fill="rgb(250,137,53)" rx="2" ry="2" />
<text  x="49.69" y="543.5" ></text>
</g>
<g >
<title>ser::column_view::c (1 samples, 0.02%)</title><rect x="1127.6" y="533" width="0.2" height="15.0" fill="rgb(252,125,44)" rx="2" ry="2" />
<text  x="1130.58" y="543.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (1 samples, 0.02%)</title><rect x="867.1" y="757" width="0.3" height="15.0" fill="rgb(239,222,46)" rx="2" ry="2" />
<text  x="870.14" y="767.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::lsa_partition_reader::reset_state (1 samples, 0.02%)</title><rect x="80.5" y="661" width="0.2" height="15.0" fill="rgb(240,14,52)" rx="2" ry="2" />
<text  x="83.48" y="671.5" ></text>
</g>
<g >
<title>std::default_delete&lt;bytes_ostream::chunk&gt;::operator (7 samples, 0.13%)</title><rect x="96.4" y="725" width="1.5" height="15.0" fill="rgb(238,161,34)" rx="2" ry="2" />
<text  x="99.36" y="735.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (2 samples, 0.04%)</title><rect x="1125.3" y="517" width="0.5" height="15.0" fill="rgb(207,176,45)" rx="2" ry="2" />
<text  x="1128.34" y="527.5" ></text>
</g>
<g >
<title>table::query (2,208 samples, 41.87%)</title><rect x="140.7" y="757" width="494.0" height="15.0" fill="rgb(236,28,6)" rx="2" ry="2" />
<text  x="143.66" y="767.5" >table::query</text>
</g>
<g >
<title>cql3::statements::select_statement::do_get_limit (1 samples, 0.02%)</title><rect x="1105.0" y="709" width="0.2" height="15.0" fill="rgb(206,226,19)" rx="2" ry="2" />
<text  x="1107.98" y="719.5" ></text>
</g>
<g >
<title>query::result_set_builder::accept_new_row (1 samples, 0.02%)</title><rect x="108.2" y="613" width="0.2" height="15.0" fill="rgb(251,204,22)" rx="2" ry="2" />
<text  x="111.22" y="623.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.06%)</title><rect x="612.3" y="661" width="0.7" height="15.0" fill="rgb(219,73,28)" rx="2" ry="2" />
<text  x="615.31" y="671.5" ></text>
</g>
<g >
<title>operator new (7 samples, 0.13%)</title><rect x="555.9" y="709" width="1.6" height="15.0" fill="rgb(224,116,27)" rx="2" ry="2" />
<text  x="558.92" y="719.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="1053.3" y="629" width="0.2" height="15.0" fill="rgb(240,228,54)" rx="2" ry="2" />
<text  x="1056.30" y="639.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::leaf_node::free (1 samples, 0.02%)</title><rect x="695.5" y="421" width="0.3" height="15.0" fill="rgb(233,56,50)" rx="2" ry="2" />
<text  x="698.54" y="431.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.04%)</title><rect x="607.6" y="693" width="0.5" height="15.0" fill="rgb(242,184,42)" rx="2" ry="2" />
<text  x="610.61" y="703.5" ></text>
</g>
<g >
<title>compound_type&lt; (1 samples, 0.02%)</title><rect x="107.1" y="677" width="0.2" height="15.0" fill="rgb(246,47,47)" rx="2" ry="2" />
<text  x="110.10" y="687.5" ></text>
</g>
<g >
<title>query::result_set::from_raw_result (1 samples, 0.02%)</title><rect x="107.8" y="677" width="0.2" height="15.0" fill="rgb(246,111,40)" rx="2" ry="2" />
<text  x="110.77" y="687.5" ></text>
</g>
<g >
<title>seastar::reactor::add_timer (3 samples, 0.06%)</title><rect x="993.3" y="581" width="0.7" height="15.0" fill="rgb(229,85,47)" rx="2" ry="2" />
<text  x="996.33" y="591.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="106.4" y="725" width="0.3" height="15.0" fill="rgb(253,112,54)" rx="2" ry="2" />
<text  x="109.43" y="735.5" ></text>
</g>
<g >
<title>query::result::result (1 samples, 0.02%)</title><rect x="620.4" y="725" width="0.2" height="15.0" fill="rgb(222,42,29)" rx="2" ry="2" />
<text  x="623.36" y="735.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::needs_post_query_ordering (6 samples, 0.11%)</title><rect x="657.9" y="773" width="1.4" height="15.0" fill="rgb(229,185,14)" rx="2" ry="2" />
<text  x="660.95" y="783.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="78.5" y="869" width="0.2" height="15.0" fill="rgb(226,157,41)" rx="2" ry="2" />
<text  x="81.46" y="879.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (431 samples, 8.17%)</title><rect x="199.5" y="613" width="96.4" height="15.0" fill="rgb(238,147,52)" rx="2" ry="2" />
<text  x="202.51" y="623.5" >partition_s..</text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (1 samples, 0.02%)</title><rect x="870.5" y="709" width="0.2" height="15.0" fill="rgb(206,196,37)" rx="2" ry="2" />
<text  x="873.50" y="719.5" ></text>
</g>
<g >
<title>std::queue&lt;reader_concurrency_semaphore::entry, seastar::circular_buffer&lt;reader_concurrency_semaphore::entry, std::allocator&lt;reader_concurrency_semaphore::entry&gt; &gt; &gt;::pop (1 samples, 0.02%)</title><rect x="1167.8" y="805" width="0.3" height="15.0" fill="rgb(248,85,39)" rx="2" ry="2" />
<text  x="1170.85" y="815.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;query::result_memory_accounter&gt;::take (1 samples, 0.02%)</title><rect x="617.5" y="741" width="0.2" height="15.0" fill="rgb(246,228,9)" rx="2" ry="2" />
<text  x="620.45" y="751.5" ></text>
</g>
<g >
<title>cql3::restrictions::partition_key_restrictions::needs_filtering (15 samples, 0.28%)</title><rect x="945.9" y="709" width="3.4" height="15.0" fill="rgb(221,0,24)" rx="2" ry="2" />
<text  x="948.90" y="719.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.08%)</title><rect x="522.6" y="501" width="0.9" height="15.0" fill="rgb(249,198,51)" rx="2" ry="2" />
<text  x="525.59" y="511.5" ></text>
</g>
<g >
<title>seastar::schedule_urgent (2 samples, 0.04%)</title><rect x="1141.0" y="805" width="0.4" height="15.0" fill="rgb(253,76,14)" rx="2" ry="2" />
<text  x="1144.00" y="815.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (3 samples, 0.06%)</title><rect x="39.3" y="549" width="0.7" height="15.0" fill="rgb(252,21,9)" rx="2" ry="2" />
<text  x="42.31" y="559.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.02%)</title><rect x="45.4" y="421" width="0.2" height="15.0" fill="rgb(238,32,9)" rx="2" ry="2" />
<text  x="48.35" y="431.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::clear (1 samples, 0.02%)</title><rect x="820.6" y="581" width="0.2" height="15.0" fill="rgb(242,31,24)" rx="2" ry="2" />
<text  x="823.61" y="591.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (32 samples, 0.61%)</title><rect x="803.4" y="501" width="7.1" height="15.0" fill="rgb(220,52,11)" rx="2" ry="2" />
<text  x="806.38" y="511.5" ></text>
</g>
<g >
<title>mutation_partition::~mutation_partition (3 samples, 0.06%)</title><rect x="1138.8" y="597" width="0.6" height="15.0" fill="rgb(229,227,37)" rx="2" ry="2" />
<text  x="1141.76" y="607.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::pop_mutation_fragment (1 samples, 0.02%)</title><rect x="78.7" y="789" width="0.2" height="15.0" fill="rgb(212,62,10)" rx="2" ry="2" />
<text  x="81.69" y="799.5" ></text>
</g>
<g >
<title>partition_key::partition_key (1 samples, 0.02%)</title><rect x="1124.9" y="533" width="0.2" height="15.0" fill="rgb(225,46,51)" rx="2" ry="2" />
<text  x="1127.89" y="543.5" ></text>
</g>
<g >
<title>compound_type&lt; (12 samples, 0.23%)</title><rect x="934.5" y="677" width="2.7" height="15.0" fill="rgb(239,38,51)" rx="2" ry="2" />
<text  x="937.49" y="687.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;column_definition const*, std::pair&lt;column_definition const* const, seastar::shared_ptr&lt;cql3::restrictions::single_column_restriction&gt; &gt;, std::_Select1st&lt;std::pair&lt;column_definition const* const, seastar::shared_ptr&lt;cql3::restrictions::single_column_restriction&gt; &gt; &gt;, cql3::restrictions::single_column_restrictions::column_definition_comparator, std::allocator&lt;std::pair&lt;column_definition const* const, seastar::shared_ptr&lt;cql3::restrictions::single_column_restriction&gt; &gt; &gt; &gt;::~_Rb_tree (1 samples, 0.02%)</title><rect x="652.4" y="725" width="0.2" height="15.0" fill="rgb(223,67,15)" rx="2" ry="2" />
<text  x="655.35" y="735.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (1 samples, 0.02%)</title><rect x="327.3" y="677" width="0.2" height="15.0" fill="rgb(217,12,27)" rx="2" ry="2" />
<text  x="330.26" y="687.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value_view, std::allocator&lt;cql3::raw_value_view&gt; &gt;::emplace_back&lt;cql3::raw_value_view&gt; (13 samples, 0.25%)</title><rect x="857.1" y="693" width="2.9" height="15.0" fill="rgb(213,49,26)" rx="2" ry="2" />
<text  x="860.08" y="703.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (3 samples, 0.06%)</title><rect x="568.0" y="725" width="0.7" height="15.0" fill="rgb(226,13,16)" rx="2" ry="2" />
<text  x="571.01" y="735.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::~CommonTokenStream (1 samples, 0.02%)</title><rect x="19.4" y="725" width="0.2" height="15.0" fill="rgb(232,195,35)" rx="2" ry="2" />
<text  x="22.40" y="735.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::pop_mutation_fragment (4 samples, 0.08%)</title><rect x="187.6" y="549" width="0.9" height="15.0" fill="rgb(206,67,5)" rx="2" ry="2" />
<text  x="190.65" y="559.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;::operator* (1 samples, 0.02%)</title><rect x="56.1" y="613" width="0.2" height="15.0" fill="rgb(226,108,17)" rx="2" ry="2" />
<text  x="59.09" y="623.5" ></text>
</g>
<g >
<title>operator delete (9 samples, 0.17%)</title><rect x="431.7" y="549" width="2.1" height="15.0" fill="rgb(211,169,40)" rx="2" ry="2" />
<text  x="434.75" y="559.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_partition_reversing_data_source.cc (1 samples, 0.02%)</title><rect x="82.0" y="933" width="0.3" height="15.0" fill="rgb(253,96,28)" rx="2" ry="2" />
<text  x="85.04" y="943.5" ></text>
</g>
<g >
<title>std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (1 samples, 0.02%)</title><rect x="694.2" y="677" width="0.2" height="15.0" fill="rgb(239,53,14)" rx="2" ry="2" />
<text  x="697.19" y="687.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.08%)</title><rect x="678.5" y="757" width="0.9" height="15.0" fill="rgb(209,42,19)" rx="2" ry="2" />
<text  x="681.53" y="767.5" ></text>
</g>
<g >
<title>cql3::prepared_statements_cache::find (35 samples, 0.66%)</title><rect x="733.6" y="741" width="7.8" height="15.0" fill="rgb(238,57,7)" rx="2" ry="2" />
<text  x="736.57" y="751.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (2 samples, 0.04%)</title><rect x="681.7" y="741" width="0.4" height="15.0" fill="rgb(211,94,20)" rx="2" ry="2" />
<text  x="684.66" y="751.5" ></text>
</g>
<g >
<title>ser::qr_cell_view::value (1 samples, 0.02%)</title><rect x="107.8" y="581" width="0.2" height="15.0" fill="rgb(250,62,2)" rx="2" ry="2" />
<text  x="110.77" y="591.5" ></text>
</g>
<g >
<title>database::find_column_family (1 samples, 0.02%)</title><rect x="767.4" y="693" width="0.2" height="15.0" fill="rgb(229,167,42)" rx="2" ry="2" />
<text  x="770.36" y="703.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (1 samples, 0.02%)</title><rect x="1162.9" y="789" width="0.3" height="15.0" fill="rgb(254,183,35)" rx="2" ry="2" />
<text  x="1165.93" y="799.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (1 samples, 0.02%)</title><rect x="876.1" y="581" width="0.2" height="15.0" fill="rgb(243,18,19)" rx="2" ry="2" />
<text  x="879.09" y="591.5" ></text>
</g>
<g >
<title>to_hex (1 samples, 0.02%)</title><rect x="77.8" y="821" width="0.2" height="15.0" fill="rgb(238,164,28)" rx="2" ry="2" />
<text  x="80.79" y="831.5" ></text>
</g>
<g >
<title>nonwrapping_interval&lt;clustering_key_prefix&gt;::make_open_ended_both_sides (2 samples, 0.04%)</title><rect x="873.0" y="661" width="0.4" height="15.0" fill="rgb(231,70,4)" rx="2" ry="2" />
<text  x="875.96" y="671.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (2 samples, 0.04%)</title><rect x="42.7" y="549" width="0.4" height="15.0" fill="rgb(236,18,53)" rx="2" ry="2" />
<text  x="45.67" y="559.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureIN5utils15timestamped_valINS_11checked_ptrINS_8weak_ptrIN4cql310statements18prepared_statementEEENS_25default_null_deref_actionEEENS5_40authorized_prepared_statements_cache_keyENS5_41authorized_prepared_statements_cache_sizeESt4hashISB_ESt8equal_toISB_ENS5_36authorized_prepared_statements_cache50authorized_prepared_statements_cache_stats_updaterEE9value_ptrEE9then_implIZNSL_14discard_resultEvEUlDpOT_E_NS0_IvEEEET0_OT_ (1 samples, 0.02%)</title><rect x="745.9" y="709" width="0.2" height="15.0" fill="rgb(241,194,41)" rx="2" ry="2" />
<text  x="748.88" y="719.5" ></text>
</g>
<g >
<title>std::tuple&lt;cql3::statements::attach_service_level_statement*, std::default_delete&lt;cql3::statements::attach_service_level_statement&gt; &gt;::tuple&lt;true, true&gt; (1 samples, 0.02%)</title><rect x="62.1" y="629" width="0.3" height="15.0" fill="rgb(247,227,26)" rx="2" ry="2" />
<text  x="65.13" y="639.5" ></text>
</g>
<g >
<title>row_tombstone::apply (1 samples, 0.02%)</title><rect x="15.4" y="837" width="0.2" height="15.0" fill="rgb(214,92,40)" rx="2" ry="2" />
<text  x="18.37" y="847.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (5 samples, 0.09%)</title><rect x="671.8" y="773" width="1.1" height="15.0" fill="rgb(246,19,17)" rx="2" ry="2" />
<text  x="674.82" y="783.5" ></text>
</g>
<g >
<title>make_stable_flattened_mutations_consumer&lt;compact_for_query&lt; (11 samples, 0.21%)</title><rect x="440.0" y="677" width="2.5" height="15.0" fill="rgb(230,86,5)" rx="2" ry="2" />
<text  x="443.03" y="687.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.06%)</title><rect x="1155.5" y="725" width="0.7" height="15.0" fill="rgb(225,66,29)" rx="2" ry="2" />
<text  x="1158.54" y="735.5" ></text>
</g>
<g >
<title>std::construct_at&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (1 samples, 0.02%)</title><rect x="24.1" y="517" width="0.2" height="15.0" fill="rgb(224,56,21)" rx="2" ry="2" />
<text  x="27.10" y="527.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_d36847801b836ea118d696d8a8ab9431a1179ab0] (1 samples, 0.02%)</title><rect x="1132.3" y="533" width="0.2" height="15.0" fill="rgb(229,203,40)" rx="2" ry="2" />
<text  x="1135.28" y="543.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::get_timeout (2 samples, 0.04%)</title><rect x="952.2" y="709" width="0.4" height="15.0" fill="rgb(250,77,54)" rx="2" ry="2" />
<text  x="955.17" y="719.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_nonsingular_mutations_locally (1 samples, 0.02%)</title><rect x="105.8" y="741" width="0.2" height="15.0" fill="rgb(249,72,30)" rx="2" ry="2" />
<text  x="108.76" y="751.5" ></text>
</g>
<g >
<title>bytes_view_hasher::update (3 samples, 0.06%)</title><rect x="737.6" y="613" width="0.7" height="15.0" fill="rgb(225,129,4)" rx="2" ry="2" />
<text  x="740.60" y="623.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (2 samples, 0.04%)</title><rect x="795.1" y="533" width="0.4" height="15.0" fill="rgb(216,114,22)" rx="2" ry="2" />
<text  x="798.10" y="543.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (1 samples, 0.02%)</title><rect x="820.6" y="597" width="0.2" height="15.0" fill="rgb(228,186,16)" rx="2" ry="2" />
<text  x="823.61" y="607.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="695.3" y="597" width="0.2" height="15.0" fill="rgb(233,122,48)" rx="2" ry="2" />
<text  x="698.31" y="607.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (1 samples, 0.02%)</title><rect x="1151.5" y="709" width="0.2" height="15.0" fill="rgb(238,86,49)" rx="2" ry="2" />
<text  x="1154.52" y="719.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::statements::drop_index_statement, std::default_delete&lt;cql3::statements::drop_index_statement&gt;, true, true&gt;::__uniq_ptr_data (1 samples, 0.02%)</title><rect x="62.6" y="661" width="0.2" height="15.0" fill="rgb(227,196,32)" rx="2" ry="2" />
<text  x="65.58" y="671.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="557.7" y="709" width="0.2" height="15.0" fill="rgb(244,146,3)" rx="2" ry="2" />
<text  x="560.71" y="719.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::allocate (4 samples, 0.08%)</title><rect x="209.6" y="501" width="0.9" height="15.0" fill="rgb(241,215,15)" rx="2" ry="2" />
<text  x="212.58" y="511.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (1 samples, 0.02%)</title><rect x="182.7" y="597" width="0.3" height="15.0" fill="rgb(239,56,1)" rx="2" ry="2" />
<text  x="185.73" y="607.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (1 samples, 0.02%)</title><rect x="250.7" y="421" width="0.3" height="15.0" fill="rgb(242,135,46)" rx="2" ry="2" />
<text  x="253.74" y="431.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (17 samples, 0.32%)</title><rect x="1176.4" y="917" width="3.8" height="15.0" fill="rgb(248,1,31)" rx="2" ry="2" />
<text  x="1179.35" y="927.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::forward_to (6 samples, 0.11%)</title><rect x="881.0" y="773" width="1.4" height="15.0" fill="rgb(205,179,1)" rx="2" ry="2" />
<text  x="884.02" y="783.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (2 samples, 0.04%)</title><rect x="358.4" y="501" width="0.4" height="15.0" fill="rgb(206,128,24)" rx="2" ry="2" />
<text  x="361.36" y="511.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::on_permit_destroyed (1 samples, 0.02%)</title><rect x="125.0" y="741" width="0.2" height="15.0" fill="rgb(230,209,25)" rx="2" ry="2" />
<text  x="128.00" y="751.5" ></text>
</g>
<g >
<title>mutation_fragment::destroy_data (1 samples, 0.02%)</title><rect x="693.7" y="645" width="0.3" height="15.0" fill="rgb(245,127,26)" rx="2" ry="2" />
<text  x="696.75" y="655.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="20.1" y="613" width="0.2" height="15.0" fill="rgb(218,221,54)" rx="2" ry="2" />
<text  x="23.07" y="623.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_impl&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (5 samples, 0.09%)</title><rect x="693.3" y="709" width="1.1" height="15.0" fill="rgb(252,195,19)" rx="2" ry="2" />
<text  x="696.30" y="719.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::mutation_fragment_merger (11 samples, 0.21%)</title><rect x="472.7" y="581" width="2.5" height="15.0" fill="rgb(243,158,9)" rx="2" ry="2" />
<text  x="475.69" y="591.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::make_ready&lt; (2 samples, 0.04%)</title><rect x="712.1" y="725" width="0.4" height="15.0" fill="rgb(207,106,54)" rx="2" ry="2" />
<text  x="715.09" y="735.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="664.0" y="773" width="0.2" height="15.0" fill="rgb(246,56,24)" rx="2" ry="2" />
<text  x="666.99" y="783.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::assign (1 samples, 0.02%)</title><rect x="28.8" y="533" width="0.2" height="15.0" fill="rgb(247,142,23)" rx="2" ry="2" />
<text  x="31.79" y="543.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (1 samples, 0.02%)</title><rect x="40.9" y="613" width="0.2" height="15.0" fill="rgb(219,171,52)" rx="2" ry="2" />
<text  x="43.88" y="623.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (2 samples, 0.04%)</title><rect x="54.7" y="437" width="0.5" height="15.0" fill="rgb(207,92,18)" rx="2" ry="2" />
<text  x="57.75" y="447.5" ></text>
</g>
<g >
<title>partition_key::from_range&lt;std::vector&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, std::allocator&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt; &gt; (8 samples, 0.15%)</title><rect x="560.8" y="677" width="1.8" height="15.0" fill="rgb(229,50,36)" rx="2" ry="2" />
<text  x="563.85" y="687.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_M_reset (1 samples, 0.02%)</title><rect x="99.9" y="757" width="0.3" height="15.0" fill="rgb(237,198,11)" rx="2" ry="2" />
<text  x="102.94" y="767.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.02%)</title><rect x="44.2" y="437" width="0.3" height="15.0" fill="rgb(205,71,47)" rx="2" ry="2" />
<text  x="47.23" y="447.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::do_fill_buffer (4 samples, 0.08%)</title><rect x="79.6" y="677" width="0.9" height="15.0" fill="rgb(207,70,43)" rx="2" ry="2" />
<text  x="82.58" y="687.5" ></text>
</g>
<g >
<title>reader_permit::signal (1 samples, 0.02%)</title><rect x="324.4" y="629" width="0.2" height="15.0" fill="rgb(211,100,23)" rx="2" ry="2" />
<text  x="327.35" y="639.5" ></text>
</g>
<g >
<title>mutation_reader_merger::maybe_add_readers_at_partition_boundary (2 samples, 0.04%)</title><rect x="179.4" y="613" width="0.4" height="15.0" fill="rgb(209,224,19)" rx="2" ry="2" />
<text  x="182.37" y="623.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::then_wrapped_common&lt;true, void, service::abstract_read_executor::make_data_requests (1 samples, 0.02%)</title><rect x="964.7" y="597" width="0.2" height="15.0" fill="rgb(240,134,16)" rx="2" ry="2" />
<text  x="967.69" y="607.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_wrapped_common&lt;false, seastar::future&lt;void&gt;, seastar::future&lt;void&gt;::handle_exception&lt;service::abstract_read_executor::execute (3 samples, 0.06%)</title><rect x="700.2" y="757" width="0.7" height="15.0" fill="rgb(215,4,46)" rx="2" ry="2" />
<text  x="703.24" y="767.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::small_vector (1 samples, 0.02%)</title><rect x="474.3" y="565" width="0.2" height="15.0" fill="rgb(221,22,36)" rx="2" ry="2" />
<text  x="477.26" y="575.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.02%)</title><rect x="37.5" y="629" width="0.2" height="15.0" fill="rgb(250,211,28)" rx="2" ry="2" />
<text  x="40.52" y="639.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::_Move_ctor_base (4 samples, 0.08%)</title><rect x="350.5" y="469" width="0.9" height="15.0" fill="rgb(247,8,48)" rx="2" ry="2" />
<text  x="353.53" y="479.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (2 samples, 0.04%)</title><rect x="197.7" y="565" width="0.5" height="15.0" fill="rgb(220,204,13)" rx="2" ry="2" />
<text  x="200.72" y="575.5" ></text>
</g>
<g >
<title>table::table (1 samples, 0.02%)</title><rect x="108.4" y="741" width="0.3" height="15.0" fill="rgb(211,65,43)" rx="2" ry="2" />
<text  x="111.45" y="751.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (2 samples, 0.04%)</title><rect x="76.5" y="533" width="0.4" height="15.0" fill="rgb(234,28,37)" rx="2" ry="2" />
<text  x="79.45" y="543.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (2 samples, 0.04%)</title><rect x="701.6" y="757" width="0.4" height="15.0" fill="rgb(213,209,17)" rx="2" ry="2" />
<text  x="704.58" y="767.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="81.1" y="629" width="0.3" height="15.0" fill="rgb(238,157,28)" rx="2" ry="2" />
<text  x="84.15" y="639.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (1 samples, 0.02%)</title><rect x="662.4" y="741" width="0.2" height="15.0" fill="rgb(249,79,12)" rx="2" ry="2" />
<text  x="665.42" y="751.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="672.7" y="709" width="0.2" height="15.0" fill="rgb(233,169,14)" rx="2" ry="2" />
<text  x="675.72" y="719.5" ></text>
</g>
<g >
<title>scanning_reader::fill_buffer (1 samples, 0.02%)</title><rect x="106.7" y="341" width="0.2" height="15.0" fill="rgb(238,76,12)" rx="2" ry="2" />
<text  x="109.66" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="676.3" y="789" width="0.2" height="15.0" fill="rgb(239,126,10)" rx="2" ry="2" />
<text  x="679.30" y="799.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.29] (1 samples, 0.02%)</title><rect x="10.0" y="933" width="0.2" height="15.0" fill="rgb(208,150,15)" rx="2" ry="2" />
<text  x="13.00" y="943.5" ></text>
</g>
<g >
<title>std::_Optional_base_impl&lt;query::querier&lt; (4 samples, 0.08%)</title><rect x="630.0" y="725" width="0.9" height="15.0" fill="rgb(235,0,15)" rx="2" ry="2" />
<text  x="632.98" y="735.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (1 samples, 0.02%)</title><rect x="15.6" y="837" width="0.2" height="15.0" fill="rgb(219,139,3)" rx="2" ry="2" />
<text  x="18.59" y="847.5" ></text>
</g>
<g >
<title>seastar::repeat&lt;flat_mutation_reader::impl::consume_pausable&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (428 samples, 8.12%)</title><rect x="340.0" y="597" width="95.8" height="15.0" fill="rgb(231,95,4)" rx="2" ry="2" />
<text  x="343.02" y="607.5" >seastar::re..</text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_Optional_payload_base (4 samples, 0.08%)</title><rect x="811.4" y="549" width="0.9" height="15.0" fill="rgb(228,153,34)" rx="2" ry="2" />
<text  x="814.43" y="559.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.06%)</title><rect x="536.2" y="629" width="0.7" height="15.0" fill="rgb(244,79,5)" rx="2" ry="2" />
<text  x="539.23" y="639.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::leaf_node::allocate (1 samples, 0.02%)</title><rect x="875.4" y="565" width="0.2" height="15.0" fill="rgb(217,20,10)" rx="2" ry="2" />
<text  x="878.42" y="575.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::max_size (1 samples, 0.02%)</title><rect x="49.4" y="549" width="0.2" height="15.0" fill="rgb(234,99,30)" rx="2" ry="2" />
<text  x="52.38" y="559.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_internal&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt; &gt; (6 samples, 0.11%)</title><rect x="1131.8" y="597" width="1.4" height="15.0" fill="rgb(224,140,14)" rx="2" ry="2" />
<text  x="1134.83" y="607.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (4 samples, 0.08%)</title><rect x="131.9" y="693" width="0.9" height="15.0" fill="rgb(211,156,1)" rx="2" ry="2" />
<text  x="134.94" y="703.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.08%)</title><rect x="579.6" y="581" width="0.9" height="15.0" fill="rgb(251,156,47)" rx="2" ry="2" />
<text  x="582.64" y="591.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (1 samples, 0.02%)</title><rect x="825.5" y="661" width="0.3" height="15.0" fill="rgb(244,155,16)" rx="2" ry="2" />
<text  x="828.53" y="671.5" ></text>
</g>
<g >
<title>cql3::result_generator::query_result_visitor&lt;cql3::untyped_result_set::visitor&gt;::accept_cell_value (1 samples, 0.02%)</title><rect x="649.7" y="661" width="0.2" height="15.0" fill="rgb(241,15,38)" rx="2" ry="2" />
<text  x="652.67" y="671.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (1 samples, 0.02%)</title><rect x="318.3" y="597" width="0.2" height="15.0" fill="rgb(247,171,45)" rx="2" ry="2" />
<text  x="321.31" y="607.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::partition_snapshot_flat_reader&lt;schema const&amp;, flush_memory_accounter&amp;&gt; (1 samples, 0.02%)</title><rect x="79.1" y="693" width="0.3" height="15.0" fill="rgb(229,32,54)" rx="2" ry="2" />
<text  x="82.14" y="703.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="66.6" y="693" width="0.2" height="15.0" fill="rgb(205,81,1)" rx="2" ry="2" />
<text  x="69.61" y="703.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;mutation_querier&gt;::_M_reset (1 samples, 0.02%)</title><rect x="437.8" y="565" width="0.2" height="15.0" fill="rgb(206,161,32)" rx="2" ry="2" />
<text  x="440.79" y="575.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (2 samples, 0.04%)</title><rect x="713.4" y="725" width="0.5" height="15.0" fill="rgb(253,91,10)" rx="2" ry="2" />
<text  x="716.44" y="735.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value, std::allocator&lt;cql3::raw_value&gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="861.3" y="741" width="0.3" height="15.0" fill="rgb(234,226,10)" rx="2" ry="2" />
<text  x="864.33" y="751.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (4 samples, 0.08%)</title><rect x="829.6" y="597" width="0.9" height="15.0" fill="rgb(244,46,50)" rx="2" ry="2" />
<text  x="832.56" y="607.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;schema const&gt;::operator= (1 samples, 0.02%)</title><rect x="1132.9" y="469" width="0.3" height="15.0" fill="rgb(230,159,15)" rx="2" ry="2" />
<text  x="1135.95" y="479.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.02%)</title><rect x="43.3" y="453" width="0.3" height="15.0" fill="rgb(225,46,19)" rx="2" ry="2" />
<text  x="46.34" y="463.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (1 samples, 0.02%)</title><rect x="838.5" y="709" width="0.2" height="15.0" fill="rgb(234,15,38)" rx="2" ry="2" />
<text  x="841.51" y="719.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reclaiming_disabled&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::lsa_partition_reader::next_row (2 samples, 0.04%)</title><rect x="80.0" y="629" width="0.5" height="15.0" fill="rgb(241,19,42)" rx="2" ry="2" />
<text  x="83.03" y="639.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::value_ptr&gt; &gt;::invoke&lt;utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (5 samples, 0.09%)</title><rect x="749.5" y="661" width="1.1" height="15.0" fill="rgb(243,89,8)" rx="2" ry="2" />
<text  x="752.46" y="671.5" ></text>
</g>
<g >
<title>std::function&lt;seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (1 samples, 0.02%)</title><rect x="801.1" y="517" width="0.3" height="15.0" fill="rgb(212,107,34)" rx="2" ry="2" />
<text  x="804.14" y="527.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (3 samples, 0.06%)</title><rect x="775.9" y="645" width="0.6" height="15.0" fill="rgb(244,196,43)" rx="2" ry="2" />
<text  x="778.86" y="655.5" ></text>
</g>
<g >
<title>std::tuple&lt;cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::tuple (2 samples, 0.04%)</title><rect x="56.5" y="517" width="0.5" height="15.0" fill="rgb(254,20,32)" rx="2" ry="2" />
<text  x="59.54" y="527.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;service::digest_read_resolver&gt;::~shared_ptr_count_for (7 samples, 0.13%)</title><rect x="704.0" y="789" width="1.6" height="15.0" fill="rgb(217,104,49)" rx="2" ry="2" />
<text  x="707.04" y="799.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::digest_read_result&gt;::then_wrapped_common&lt;true, void, service::abstract_read_executor::execute (19 samples, 0.36%)</title><rect x="979.9" y="645" width="4.3" height="15.0" fill="rgb(226,87,16)" rx="2" ry="2" />
<text  x="982.91" y="655.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::raw::update_statement, std::default_delete&lt;cql3::statements::raw::update_statement&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::statements::raw::update_statement&gt;, void&gt; (1 samples, 0.02%)</title><rect x="61.0" y="645" width="0.2" height="15.0" fill="rgb(240,227,16)" rx="2" ry="2" />
<text  x="64.01" y="655.5" ></text>
</g>
<g >
<title>cql3::cf_name::set_column_family (1 samples, 0.02%)</title><rect x="41.1" y="629" width="0.2" height="15.0" fill="rgb(211,26,28)" rx="2" ry="2" />
<text  x="44.10" y="639.5" ></text>
</g>
<g >
<title>std::make_unique&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;, seastar::lw_shared_ptr&lt;schema const&gt;, reader_permit, dht::decorated_key, partition_snapshot_ptr&amp;, query::clustering_key_filter_ranges, bool&amp;, logalloc::region&amp;, logalloc::allocating_section&amp;, boost::any, memtable&amp;&gt; (100 samples, 1.90%)</title><rect x="510.1" y="613" width="22.3" height="15.0" fill="rgb(238,52,2)" rx="2" ry="2" />
<text  x="513.06" y="623.5" >s..</text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::attach_service_level_statement, std::default_delete&lt;cql3::statements::attach_service_level_statement&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::statements::attach_service_level_statement&gt;, void&gt; (1 samples, 0.02%)</title><rect x="62.1" y="677" width="0.3" height="15.0" fill="rgb(218,112,25)" rx="2" ry="2" />
<text  x="65.13" y="687.5" ></text>
</g>
<g >
<title>write_cell&lt;ser::qr_clustered_row__cells__cells&lt;bytes_ostream&gt; &gt; (118 samples, 2.24%)</title><rect x="374.0" y="485" width="26.4" height="15.0" fill="rgb(228,178,47)" rx="2" ry="2" />
<text  x="377.02" y="495.5" >w..</text>
</g>
<g >
<title>local_schema_registry (1 samples, 0.02%)</title><rect x="962.7" y="677" width="0.2" height="15.0" fill="rgb(240,98,45)" rx="2" ry="2" />
<text  x="965.68" y="687.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (1 samples, 0.02%)</title><rect x="455.5" y="645" width="0.2" height="15.0" fill="rgb(208,219,29)" rx="2" ry="2" />
<text  x="458.46" y="655.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::storage_proxy::send_to_live_endpoints (4 samples, 0.08%)</title><rect x="719.7" y="805" width="0.9" height="15.0" fill="rgb(216,134,38)" rx="2" ry="2" />
<text  x="722.70" y="815.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;void&gt;::invoke&lt;service::abstract_read_executor::make_data_requests (1 samples, 0.02%)</title><rect x="964.7" y="581" width="0.2" height="15.0" fill="rgb(215,66,16)" rx="2" ry="2" />
<text  x="967.69" y="591.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.06%)</title><rect x="774.1" y="661" width="0.6" height="15.0" fill="rgb(232,228,32)" rx="2" ry="2" />
<text  x="777.07" y="671.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::operator= (1 samples, 0.02%)</title><rect x="838.3" y="725" width="0.2" height="15.0" fill="rgb(253,176,33)" rx="2" ry="2" />
<text  x="841.28" y="735.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;signed char, std::char_traits&lt;signed char&gt; &gt;::substr (3 samples, 0.06%)</title><rect x="500.4" y="485" width="0.7" height="15.0" fill="rgb(232,189,26)" rx="2" ry="2" />
<text  x="503.44" y="495.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (2 samples, 0.04%)</title><rect x="45.1" y="597" width="0.5" height="15.0" fill="rgb(240,174,49)" rx="2" ry="2" />
<text  x="48.13" y="607.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (18 samples, 0.34%)</title><rect x="989.3" y="581" width="4.0" height="15.0" fill="rgb(242,12,44)" rx="2" ry="2" />
<text  x="992.31" y="591.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.02%)</title><rect x="579.0" y="597" width="0.2" height="15.0" fill="rgb(231,67,28)" rx="2" ry="2" />
<text  x="581.97" y="607.5" ></text>
</g>
<g >
<title>db::system_keyspace::query_mutations (2 samples, 0.04%)</title><rect x="106.7" y="725" width="0.4" height="15.0" fill="rgb(206,169,29)" rx="2" ry="2" />
<text  x="109.66" y="735.5" ></text>
</g>
<g >
<title>partition_builder::accept_row (4 samples, 0.08%)</title><rect x="1126.2" y="533" width="0.9" height="15.0" fill="rgb(227,52,16)" rx="2" ry="2" />
<text  x="1129.23" y="543.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider (1 samples, 0.02%)</title><rect x="23.0" y="485" width="0.2" height="15.0" fill="rgb(223,199,20)" rx="2" ry="2" />
<text  x="25.98" y="495.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::schedule&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (2 samples, 0.04%)</title><rect x="840.3" y="693" width="0.4" height="15.0" fill="rgb(224,201,41)" rx="2" ry="2" />
<text  x="843.30" y="703.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;false, false, std::random_access_iterator_tag&gt;::__copy_m&lt;char const*, fmt::v7::detail::buffer_appender&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="18.7" y="805" width="0.2" height="15.0" fill="rgb(228,122,51)" rx="2" ry="2" />
<text  x="21.73" y="815.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.04%)</title><rect x="1144.4" y="789" width="0.4" height="15.0" fill="rgb(244,28,25)" rx="2" ry="2" />
<text  x="1147.36" y="799.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.02%)</title><rect x="20.1" y="597" width="0.2" height="15.0" fill="rgb(244,186,25)" rx="2" ry="2" />
<text  x="23.07" y="607.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (2 samples, 0.04%)</title><rect x="327.5" y="693" width="0.4" height="15.0" fill="rgb(230,208,9)" rx="2" ry="2" />
<text  x="330.49" y="703.5" ></text>
</g>
<g >
<title>bplus::tree&lt;long, intrusive_array&lt;memtable_entry&gt;, dht::raw_token_less_comparator, 16ul,  (4 samples, 0.08%)</title><rect x="1124.0" y="501" width="0.9" height="15.0" fill="rgb(253,210,3)" rx="2" ry="2" />
<text  x="1127.00" y="511.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="70.9" y="517" width="0.2" height="15.0" fill="rgb(222,179,51)" rx="2" ry="2" />
<text  x="73.86" y="527.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::indirect_move (1 samples, 0.02%)</title><rect x="1029.8" y="533" width="0.2" height="15.0" fill="rgb(226,97,50)" rx="2" ry="2" />
<text  x="1032.80" y="543.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (345 samples, 6.54%)</title><rect x="345.6" y="549" width="77.2" height="15.0" fill="rgb(205,29,4)" rx="2" ry="2" />
<text  x="348.61" y="559.5" >flat_mut..</text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.02%)</title><rect x="718.1" y="789" width="0.3" height="15.0" fill="rgb(223,137,22)" rx="2" ry="2" />
<text  x="721.13" y="799.5" ></text>
</g>
<g >
<title>__tls_init (2 samples, 0.04%)</title><rect x="548.1" y="581" width="0.4" height="15.0" fill="rgb(225,208,5)" rx="2" ry="2" />
<text  x="551.09" y="591.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (1 samples, 0.02%)</title><rect x="106.7" y="421" width="0.2" height="15.0" fill="rgb(248,131,22)" rx="2" ry="2" />
<text  x="109.66" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value, std::allocator&lt;cql3::raw_value&gt; &gt;::_M_range_initialize&lt;cql3::raw_value const*&gt; (6 samples, 0.11%)</title><rect x="863.1" y="757" width="1.4" height="15.0" fill="rgb(228,11,25)" rx="2" ry="2" />
<text  x="866.12" y="767.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (3 samples, 0.06%)</title><rect x="542.7" y="629" width="0.7" height="15.0" fill="rgb(253,178,3)" rx="2" ry="2" />
<text  x="545.72" y="639.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="1133.2" y="565" width="0.2" height="15.0" fill="rgb(219,217,18)" rx="2" ry="2" />
<text  x="1136.17" y="575.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.02%)</title><rect x="55.2" y="405" width="0.2" height="15.0" fill="rgb(227,157,31)" rx="2" ry="2" />
<text  x="58.20" y="415.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::query_state&gt;::~shared_ptr (2 samples, 0.04%)</title><rect x="1141.4" y="805" width="0.5" height="15.0" fill="rgb(249,20,4)" rx="2" ry="2" />
<text  x="1144.45" y="815.5" ></text>
</g>
<g >
<title>row::row (1 samples, 0.02%)</title><rect x="869.2" y="581" width="0.2" height="15.0" fill="rgb(221,165,45)" rx="2" ry="2" />
<text  x="872.16" y="591.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::~__si_class_type_info (12 samples, 0.23%)</title><rect x="11.6" y="917" width="2.7" height="15.0" fill="rgb(246,29,39)" rx="2" ry="2" />
<text  x="14.57" y="927.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (7 samples, 0.13%)</title><rect x="462.6" y="533" width="1.6" height="15.0" fill="rgb(242,197,4)" rx="2" ry="2" />
<text  x="465.62" y="543.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::impl&gt;::_S_destroy&lt;seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::impl, mutation_fragment&gt; (1 samples, 0.02%)</title><rect x="319.4" y="597" width="0.3" height="15.0" fill="rgb(239,178,13)" rx="2" ry="2" />
<text  x="322.43" y="607.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (1 samples, 0.02%)</title><rect x="811.0" y="485" width="0.2" height="15.0" fill="rgb(208,148,51)" rx="2" ry="2" />
<text  x="813.99" y="495.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (1 samples, 0.02%)</title><rect x="1026.4" y="469" width="0.3" height="15.0" fill="rgb(217,8,2)" rx="2" ry="2" />
<text  x="1029.45" y="479.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (1 samples, 0.02%)</title><rect x="1040.8" y="581" width="0.2" height="15.0" fill="rgb(220,107,21)" rx="2" ry="2" />
<text  x="1043.77" y="591.5" ></text>
</g>
<g >
<title>row::compact_and_expire (65 samples, 1.23%)</title><rect x="405.1" y="517" width="14.6" height="15.0" fill="rgb(225,121,22)" rx="2" ry="2" />
<text  x="408.12" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;antlr3::LexState&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::LexState&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.02%)</title><rect x="33.9" y="517" width="0.3" height="15.0" fill="rgb(239,179,36)" rx="2" ry="2" />
<text  x="36.94" y="527.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.02%)</title><rect x="964.5" y="677" width="0.2" height="15.0" fill="rgb(210,124,38)" rx="2" ry="2" />
<text  x="967.47" y="687.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="74.4" y="709" width="0.3" height="15.0" fill="rgb(246,119,24)" rx="2" ry="2" />
<text  x="77.44" y="719.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.02%)</title><rect x="55.2" y="357" width="0.2" height="15.0" fill="rgb(236,193,54)" rx="2" ry="2" />
<text  x="58.20" y="367.5" ></text>
</g>
<g >
<title>dht::tri_compare (5 samples, 0.09%)</title><rect x="493.3" y="565" width="1.1" height="15.0" fill="rgb(238,159,27)" rx="2" ry="2" />
<text  x="496.28" y="575.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="555.7" y="645" width="0.2" height="15.0" fill="rgb(253,91,40)" rx="2" ry="2" />
<text  x="558.70" y="655.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_pausable&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (3 samples, 0.06%)</title><rect x="693.3" y="661" width="0.7" height="15.0" fill="rgb(250,19,9)" rx="2" ry="2" />
<text  x="696.30" y="671.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::set_text (1 samples, 0.02%)</title><rect x="28.8" y="565" width="0.2" height="15.0" fill="rgb(249,98,54)" rx="2" ry="2" />
<text  x="31.79" y="575.5" ></text>
</g>
<g >
<title>absl::container_internal::operator== (2 samples, 0.04%)</title><rect x="843.0" y="693" width="0.4" height="15.0" fill="rgb(226,163,5)" rx="2" ry="2" />
<text  x="845.98" y="703.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;checked_file_impl&gt;::~shared_ptr_count_for (1 samples, 0.02%)</title><rect x="78.5" y="917" width="0.2" height="15.0" fill="rgb(209,99,51)" rx="2" ry="2" />
<text  x="81.46" y="927.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;::operator== (1 samples, 0.02%)</title><rect x="737.2" y="613" width="0.2" height="15.0" fill="rgb(211,2,30)" rx="2" ry="2" />
<text  x="740.15" y="623.5" ></text>
</g>
<g >
<title>std::operator+ (2 samples, 0.04%)</title><rect x="38.4" y="485" width="0.5" height="15.0" fill="rgb(219,205,53)" rx="2" ry="2" />
<text  x="41.41" y="495.5" ></text>
</g>
<g >
<title>row::external_memory_usage (1 samples, 0.02%)</title><rect x="262.8" y="469" width="0.2" height="15.0" fill="rgb(207,65,9)" rx="2" ry="2" />
<text  x="265.83" y="479.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (2 samples, 0.04%)</title><rect x="70.4" y="517" width="0.5" height="15.0" fill="rgb(215,18,12)" rx="2" ry="2" />
<text  x="73.41" y="527.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (1 samples, 0.02%)</title><rect x="1167.6" y="805" width="0.2" height="15.0" fill="rgb(253,20,48)" rx="2" ry="2" />
<text  x="1170.63" y="815.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.02%)</title><rect x="46.2" y="485" width="0.3" height="15.0" fill="rgb(245,54,28)" rx="2" ry="2" />
<text  x="49.25" y="495.5" ></text>
</g>
<g >
<title>ser::get_sizeof&lt;clustering_key_prefix&gt; (1 samples, 0.02%)</title><rect x="1136.8" y="389" width="0.2" height="15.0" fill="rgb(223,107,52)" rx="2" ry="2" />
<text  x="1139.75" y="399.5" ></text>
</g>
<g >
<title>write_fragmented&lt;managed_bytes_basic_view&lt; (5 samples, 0.09%)</title><rect x="910.1" y="581" width="1.1" height="15.0" fill="rgb(224,117,46)" rx="2" ry="2" />
<text  x="913.10" y="591.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unimplemented::cause, std::pair&lt;unimplemented::cause const, bool&gt;, std::allocator&lt;std::pair&lt;unimplemented::cause const, bool&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unimplemented::cause&gt;, std::hash&lt;unimplemented::cause&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (2 samples, 0.04%)</title><rect x="876.3" y="629" width="0.5" height="15.0" fill="rgb(223,67,47)" rx="2" ry="2" />
<text  x="879.32" y="639.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::~deque (1 samples, 0.02%)</title><rect x="629.5" y="725" width="0.3" height="15.0" fill="rgb(229,52,45)" rx="2" ry="2" />
<text  x="632.53" y="735.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (4 samples, 0.08%)</title><rect x="413.6" y="453" width="0.9" height="15.0" fill="rgb(231,92,27)" rx="2" ry="2" />
<text  x="416.63" y="463.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_construct&lt;interval_bound&lt;dht::ring_position&gt; const&amp;&gt; (3 samples, 0.06%)</title><rect x="623.7" y="741" width="0.7" height="15.0" fill="rgb(212,6,6)" rx="2" ry="2" />
<text  x="626.72" y="751.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (1 samples, 0.02%)</title><rect x="58.1" y="613" width="0.2" height="15.0" fill="rgb(248,39,24)" rx="2" ry="2" />
<text  x="61.10" y="623.5" ></text>
</g>
<g >
<title>cql3::to_managed_bytes_opt (1 samples, 0.02%)</title><rect x="871.8" y="613" width="0.3" height="15.0" fill="rgb(232,208,3)" rx="2" ry="2" />
<text  x="874.84" y="623.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (1 samples, 0.02%)</title><rect x="58.8" y="597" width="0.2" height="15.0" fill="rgb(210,178,45)" rx="2" ry="2" />
<text  x="61.78" y="607.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;std::vector&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::allocator&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; &gt;::_Optional_payload_base (1 samples, 0.02%)</title><rect x="871.2" y="677" width="0.2" height="15.0" fill="rgb(236,131,13)" rx="2" ry="2" />
<text  x="874.17" y="687.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;service::storage_proxy::unique_response_handler, 1ul&gt;::~small_vector (1 samples, 0.02%)</title><rect x="1138.1" y="565" width="0.2" height="15.0" fill="rgb(249,23,18)" rx="2" ry="2" />
<text  x="1141.09" y="575.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="757.5" y="565" width="0.2" height="15.0" fill="rgb(242,157,13)" rx="2" ry="2" />
<text  x="760.51" y="575.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::allocate (4 samples, 0.08%)</title><rect x="519.5" y="517" width="0.8" height="15.0" fill="rgb(228,210,49)" rx="2" ry="2" />
<text  x="522.45" y="527.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::partition_snapshot_flat_reader&lt;memtable&amp;&gt; (55 samples, 1.04%)</title><rect x="516.8" y="565" width="12.3" height="15.0" fill="rgb(249,45,8)" rx="2" ry="2" />
<text  x="519.77" y="575.5" ></text>
</g>
<g >
<title>range_tombstone_list::slice (2 samples, 0.04%)</title><rect x="290.1" y="533" width="0.5" height="15.0" fill="rgb(236,77,19)" rx="2" ry="2" />
<text  x="293.12" y="543.5" ></text>
</g>
<g >
<title>single_node_cql_env::do_with (2 samples, 0.04%)</title><rect x="16.5" y="869" width="0.4" height="15.0" fill="rgb(218,137,32)" rx="2" ry="2" />
<text  x="19.49" y="879.5" ></text>
</g>
<g >
<title>service::storage_proxy::sort_endpoints_by_proximity (5 samples, 0.09%)</title><rect x="1086.4" y="629" width="1.1" height="15.0" fill="rgb(205,63,9)" rx="2" ry="2" />
<text  x="1089.41" y="639.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::read_next (5 samples, 0.09%)</title><rect x="294.6" y="565" width="1.1" height="15.0" fill="rgb(225,48,24)" rx="2" ry="2" />
<text  x="297.60" y="575.5" ></text>
</g>
<g >
<title>std::function&lt;seastar::future&lt;void&gt;  (1 samples, 0.02%)</title><rect x="16.5" y="661" width="0.2" height="15.0" fill="rgb(216,102,47)" rx="2" ry="2" />
<text  x="19.49" y="671.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;cql3::constants::value, true&gt;::make&lt;cql3::raw_value, seastar::shared_ptr&lt;abstract_type const&gt; const&amp;&gt; (1 samples, 0.02%)</title><rect x="68.2" y="677" width="0.2" height="15.0" fill="rgb(205,182,50)" rx="2" ry="2" />
<text  x="71.17" y="687.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (3 samples, 0.06%)</title><rect x="565.5" y="613" width="0.7" height="15.0" fill="rgb(247,101,42)" rx="2" ry="2" />
<text  x="568.54" y="623.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::lsa_partition_reader::next_row (2 samples, 0.04%)</title><rect x="80.0" y="645" width="0.5" height="15.0" fill="rgb(246,21,8)" rx="2" ry="2" />
<text  x="83.03" y="655.5" ></text>
</g>
<g >
<title>cql3::expr::untyped_constant_test_assignment (1 samples, 0.02%)</title><rect x="67.9" y="677" width="0.3" height="15.0" fill="rgb(215,98,44)" rx="2" ry="2" />
<text  x="70.95" y="687.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (6 samples, 0.11%)</title><rect x="1103.2" y="645" width="1.3" height="15.0" fill="rgb(214,42,53)" rx="2" ry="2" />
<text  x="1106.19" y="655.5" ></text>
</g>
<g >
<title>database::apply_in_memory (25 samples, 0.47%)</title><rect x="1123.1" y="597" width="5.6" height="15.0" fill="rgb(233,211,1)" rx="2" ry="2" />
<text  x="1126.10" y="607.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.06%)</title><rect x="683.0" y="789" width="0.7" height="15.0" fill="rgb(240,105,52)" rx="2" ry="2" />
<text  x="686.01" y="799.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEE4$_44ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_45ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_43ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_46ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_47ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_48ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_49ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_50ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_51ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_52ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_53ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_54ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_55ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_56ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_57ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_58EERS4_IJNSF_11conjunctionENSF_15binary_operatorENSF_12column_valueENSF_5tokenENSF_21unresolved_identifierENSF_25column_mutation_attributeENSF_13function_callENSF_4castENSF_15field_selectionENSF_4nullENSF_13bind_variableENSF_16untyped_constantENSF_8constantENSF_17tuple_constructorENSF_22collection_constructorENSF_20usertype_constructorEEEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES16_S1O_ (107 samples, 2.03%)</title><rect x="896.2" y="693" width="24.0" height="15.0" fill="rgb(233,147,16)" rx="2" ry="2" />
<text  x="899.23" y="703.5" >_..</text>
</g>
<g >
<title>std::optional&lt;dht::decorated_key&gt;::emplace&lt;dht::decorated_key&gt; (2 samples, 0.04%)</title><rect x="425.7" y="549" width="0.5" height="15.0" fill="rgb(252,199,41)" rx="2" ry="2" />
<text  x="428.71" y="559.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (1 samples, 0.02%)</title><rect x="817.5" y="581" width="0.2" height="15.0" fill="rgb(235,147,53)" rx="2" ry="2" />
<text  x="820.47" y="591.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_token (5 samples, 0.09%)</title><rect x="947.7" y="693" width="1.1" height="15.0" fill="rgb(221,2,39)" rx="2" ry="2" />
<text  x="950.69" y="703.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (1 samples, 0.02%)</title><rect x="526.2" y="549" width="0.2" height="15.0" fill="rgb(216,178,42)" rx="2" ry="2" />
<text  x="529.17" y="559.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::do_execute (1,053 samples, 19.97%)</title><rect x="885.3" y="741" width="235.6" height="15.0" fill="rgb(239,137,8)" rx="2" ry="2" />
<text  x="888.27" y="751.5" >cql3::statements::select_statem..</text>
</g>
<g >
<title>standard_allocation_strategy::alloc (5 samples, 0.09%)</title><rect x="248.7" y="405" width="1.1" height="15.0" fill="rgb(222,181,53)" rx="2" ry="2" />
<text  x="251.73" y="415.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;mutation_reader_merger::operator (1 samples, 0.02%)</title><rect x="869.6" y="741" width="0.2" height="15.0" fill="rgb(249,117,5)" rx="2" ry="2" />
<text  x="872.61" y="751.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;, nonwrapping_interval&lt;managed_bytes&gt; &gt;::~_Variant_storage (1 samples, 0.02%)</title><rect x="1118.4" y="725" width="0.2" height="15.0" fill="rgb(225,7,34)" rx="2" ry="2" />
<text  x="1121.40" y="735.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (1 samples, 0.02%)</title><rect x="1153.8" y="757" width="0.2" height="15.0" fill="rgb(217,169,24)" rx="2" ry="2" />
<text  x="1156.75" y="767.5" ></text>
</g>
<g >
<title>write_row&lt;ser::writer_of_deletable_row&lt;bytes_ostream&gt; &gt; (10 samples, 0.19%)</title><rect x="1134.7" y="453" width="2.3" height="15.0" fill="rgb(244,202,27)" rx="2" ry="2" />
<text  x="1137.74" y="463.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.02%)</title><rect x="45.4" y="453" width="0.2" height="15.0" fill="rgb(245,38,53)" rx="2" ry="2" />
<text  x="48.35" y="463.5" ></text>
</g>
<g >
<title>seastar::logger::log&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;&amp;&gt; (2 samples, 0.04%)</title><rect x="841.4" y="741" width="0.5" height="15.0" fill="rgb(236,88,15)" rx="2" ry="2" />
<text  x="844.41" y="751.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (4 samples, 0.08%)</title><rect x="592.8" y="661" width="0.9" height="15.0" fill="rgb(252,164,13)" rx="2" ry="2" />
<text  x="595.84" y="671.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="20.7" y="629" width="0.3" height="15.0" fill="rgb(211,129,9)" rx="2" ry="2" />
<text  x="23.74" y="639.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::deallocate (4 samples, 0.08%)</title><rect x="323.2" y="613" width="0.9" height="15.0" fill="rgb(248,133,7)" rx="2" ry="2" />
<text  x="326.23" y="623.5" ></text>
</g>
<g >
<title>seastar::memory::stats (4 samples, 0.08%)</title><rect x="515.9" y="549" width="0.9" height="15.0" fill="rgb(251,149,16)" rx="2" ry="2" />
<text  x="518.87" y="559.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::with_ready_permit (1 samples, 0.02%)</title><rect x="1027.8" y="517" width="0.2" height="15.0" fill="rgb(213,196,22)" rx="2" ry="2" />
<text  x="1030.79" y="527.5" ></text>
</g>
<g >
<title>partition_entry::evict (1 samples, 0.02%)</title><rect x="78.5" y="789" width="0.2" height="15.0" fill="rgb(232,138,50)" rx="2" ry="2" />
<text  x="81.46" y="799.5" ></text>
</g>
<g >
<title>std::optional&lt;position_in_partition&gt;::operator=&lt;position_in_partition&gt; (2 samples, 0.04%)</title><rect x="276.5" y="533" width="0.4" height="15.0" fill="rgb(220,186,38)" rx="2" ry="2" />
<text  x="279.47" y="543.5" ></text>
</g>
<g >
<title>seastar::promise&lt;void&gt;::promise (3 samples, 0.06%)</title><rect x="635.1" y="789" width="0.7" height="15.0" fill="rgb(243,111,49)" rx="2" ry="2" />
<text  x="638.13" y="799.5" ></text>
</g>
<g >
<title>__tls_init (1 samples, 0.02%)</title><rect x="201.3" y="565" width="0.2" height="15.0" fill="rgb(222,196,26)" rx="2" ry="2" />
<text  x="204.30" y="575.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::get_limit (1 samples, 0.02%)</title><rect x="1120.9" y="741" width="0.2" height="15.0" fill="rgb(251,168,52)" rx="2" ry="2" />
<text  x="1123.86" y="751.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (4 samples, 0.08%)</title><rect x="226.1" y="437" width="0.9" height="15.0" fill="rgb(210,208,13)" rx="2" ry="2" />
<text  x="229.13" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (1 samples, 0.02%)</title><rect x="1148.4" y="789" width="0.2" height="15.0" fill="rgb(236,113,6)" rx="2" ry="2" />
<text  x="1151.38" y="799.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::set&lt;service::storage_proxy_coordinator_query_result&gt; (3 samples, 0.06%)</title><rect x="1147.3" y="773" width="0.6" height="15.0" fill="rgb(225,4,35)" rx="2" ry="2" />
<text  x="1150.27" y="783.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::make_ready&lt; (1 samples, 0.02%)</title><rect x="138.2" y="757" width="0.2" height="15.0" fill="rgb(241,209,31)" rx="2" ry="2" />
<text  x="141.20" y="767.5" ></text>
</g>
<g >
<title>seastar::reactor::fstat (1 samples, 0.02%)</title><rect x="682.8" y="773" width="0.2" height="15.0" fill="rgb(222,18,30)" rx="2" ry="2" />
<text  x="685.78" y="783.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (3 samples, 0.06%)</title><rect x="1103.9" y="629" width="0.6" height="15.0" fill="rgb(214,134,21)" rx="2" ry="2" />
<text  x="1106.86" y="639.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::get_tokenStartCharPositionInLine (1 samples, 0.02%)</title><rect x="28.6" y="565" width="0.2" height="15.0" fill="rgb(225,11,26)" rx="2" ry="2" />
<text  x="31.57" y="575.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::~_Variant_storage (1 samples, 0.02%)</title><rect x="70.9" y="549" width="0.2" height="15.0" fill="rgb(245,156,30)" rx="2" ry="2" />
<text  x="73.86" y="559.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_9has_tokenERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES28_S2B_ (1 samples, 0.02%)</title><rect x="71.3" y="677" width="0.2" height="15.0" fill="rgb(217,175,2)" rx="2" ry="2" />
<text  x="74.30" y="687.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (38 samples, 0.72%)</title><rect x="1130.9" y="693" width="8.5" height="15.0" fill="rgb(231,28,44)" rx="2" ry="2" />
<text  x="1133.93" y="703.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate_to_raw_view (2 samples, 0.04%)</title><rect x="870.7" y="613" width="0.5" height="15.0" fill="rgb(248,70,28)" rx="2" ry="2" />
<text  x="873.72" y="623.5" ></text>
</g>
<g >
<title>std::make_unique&lt;empty_flat_reader, seastar::lw_shared_ptr&lt;schema const&gt;, reader_permit&gt; (10 samples, 0.19%)</title><rect x="549.2" y="581" width="2.2" height="15.0" fill="rgb(237,111,23)" rx="2" ry="2" />
<text  x="552.21" y="591.5" ></text>
</g>
<g >
<title>cql3::constants::value::value (1 samples, 0.02%)</title><rect x="68.2" y="661" width="0.2" height="15.0" fill="rgb(220,67,46)" rx="2" ry="2" />
<text  x="71.17" y="671.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (261 samples, 4.95%)</title><rect x="18.9" y="805" width="58.4" height="15.0" fill="rgb(238,45,43)" rx="2" ry="2" />
<text  x="21.95" y="815.5" >cql3::..</text>
</g>
<g >
<title>operator new (5 samples, 0.09%)</title><rect x="1057.3" y="629" width="1.1" height="15.0" fill="rgb(224,221,2)" rx="2" ry="2" />
<text  x="1060.32" y="639.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="912.6" y="629" width="0.2" height="15.0" fill="rgb(205,193,19)" rx="2" ry="2" />
<text  x="915.56" y="639.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (1 samples, 0.02%)</title><rect x="15.8" y="805" width="0.2" height="15.0" fill="rgb(206,94,21)" rx="2" ry="2" />
<text  x="18.82" y="815.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_need_rehash (8 samples, 0.15%)</title><rect x="1156.2" y="757" width="1.8" height="15.0" fill="rgb(244,45,40)" rx="2" ry="2" />
<text  x="1159.22" y="767.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (5 samples, 0.09%)</title><rect x="43.3" y="597" width="1.2" height="15.0" fill="rgb(252,177,8)" rx="2" ry="2" />
<text  x="46.34" y="607.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getText[abi:cxx11] (3 samples, 0.06%)</title><rect x="53.9" y="565" width="0.6" height="15.0" fill="rgb(229,77,13)" rx="2" ry="2" />
<text  x="56.85" y="575.5" ></text>
</g>
<g >
<title>service::abstract_write_response_handler::~abstract_write_response_handler (1 samples, 0.02%)</title><rect x="695.8" y="773" width="0.2" height="15.0" fill="rgb(247,6,11)" rx="2" ry="2" />
<text  x="698.76" y="783.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;mutation_reader_merger::reader_and_last_fragment_kind*, mutation_reader_merger::prepare_next (1 samples, 0.02%)</title><rect x="303.8" y="613" width="0.2" height="15.0" fill="rgb(222,133,37)" rx="2" ry="2" />
<text  x="306.77" y="623.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (2 samples, 0.04%)</title><rect x="812.8" y="517" width="0.4" height="15.0" fill="rgb(206,2,16)" rx="2" ry="2" />
<text  x="815.78" y="527.5" ></text>
</g>
<g >
<title>seastar::alien::message_queue::process_incoming (1 samples, 0.02%)</title><rect x="1168.5" y="773" width="0.2" height="15.0" fill="rgb(207,106,1)" rx="2" ry="2" />
<text  x="1171.52" y="783.5" ></text>
</g>
<g >
<title>cql3::query_options::query_options (21 samples, 0.40%)</title><rect x="855.5" y="725" width="4.7" height="15.0" fill="rgb(254,125,11)" rx="2" ry="2" />
<text  x="858.51" y="735.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_nodes (2 samples, 0.04%)</title><rect x="1093.6" y="661" width="0.4" height="15.0" fill="rgb(225,70,16)" rx="2" ry="2" />
<text  x="1096.57" y="671.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;frozen_mutation const&gt;::dispose (1 samples, 0.02%)</title><rect x="719.9" y="757" width="0.2" height="15.0" fill="rgb(235,90,53)" rx="2" ry="2" />
<text  x="722.92" y="767.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (2 samples, 0.04%)</title><rect x="775.4" y="645" width="0.5" height="15.0" fill="rgb(223,165,27)" rx="2" ry="2" />
<text  x="778.41" y="655.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (1 samples, 0.02%)</title><rect x="823.7" y="565" width="0.3" height="15.0" fill="rgb(253,12,43)" rx="2" ry="2" />
<text  x="826.74" y="575.5" ></text>
</g>
<g >
<title>cql3::statements::raw::modification_statement::prepare (36 samples, 0.68%)</title><rect x="66.6" y="773" width="8.1" height="15.0" fill="rgb(211,82,45)" rx="2" ry="2" />
<text  x="69.61" y="783.5" ></text>
</g>
<g >
<title>_ZSt5applyIZN7seastar8internal12do_with_implIRKNS0_13basic_sstringIcjLj15ELb1EEEN4auth8resourceEJZNK7service12client_state24has_column_family_accessERK8databaseS6_S6_NS7_10permissionENS7_12command_desc4typeEE3$_4EEEDaOT_OT0_DpOT1_EUlDpOT_E_St5tupleIJS6_OS8_EEEDcSJ_SL_ (13 samples, 0.25%)</title><rect x="773.6" y="693" width="2.9" height="15.0" fill="rgb(234,80,4)" rx="2" ry="2" />
<text  x="776.62" y="703.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="919.7" y="661" width="0.2" height="15.0" fill="rgb(245,149,16)" rx="2" ry="2" />
<text  x="922.72" y="671.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (2 samples, 0.04%)</title><rect x="44.7" y="517" width="0.4" height="15.0" fill="rgb(233,184,5)" rx="2" ry="2" />
<text  x="47.68" y="527.5" ></text>
</g>
<g >
<title>std::__optional_hash_call_base&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, true&gt;::operator (1 samples, 0.02%)</title><rect x="823.3" y="597" width="0.2" height="15.0" fill="rgb(226,28,13)" rx="2" ry="2" />
<text  x="826.29" y="607.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::future&lt;void&gt;  (35 samples, 0.66%)</title><rect x="1122.7" y="661" width="7.8" height="15.0" fill="rgb(226,226,49)" rx="2" ry="2" />
<text  x="1125.65" y="671.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment&lt;schema const&amp;, rows_entry const&amp;&gt; (1 samples, 0.02%)</title><rect x="106.7" y="117" width="0.2" height="15.0" fill="rgb(205,14,21)" rx="2" ry="2" />
<text  x="109.66" y="127.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (207 samples, 3.92%)</title><rect x="20.1" y="725" width="46.3" height="15.0" fill="rgb(214,211,44)" rx="2" ry="2" />
<text  x="23.07" y="735.5" >seas..</text>
</g>
<g >
<title>std::_Optional_payload_base&lt;cql3::cf_name&gt;::_M_reset (1 samples, 0.02%)</title><rect x="60.6" y="613" width="0.2" height="15.0" fill="rgb(231,200,30)" rx="2" ry="2" />
<text  x="63.57" y="623.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;auth::resource_kind, std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;auth::resource_kind&gt;, std::hash&lt;auth::resource_kind&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (4 samples, 0.08%)</title><rect x="777.0" y="629" width="0.9" height="15.0" fill="rgb(212,87,48)" rx="2" ry="2" />
<text  x="779.98" y="639.5" ></text>
</g>
<g >
<title>empty_flat_reader::~empty_flat_reader (1 samples, 0.02%)</title><rect x="573.4" y="645" width="0.2" height="15.0" fill="rgb(212,205,45)" rx="2" ry="2" />
<text  x="576.38" y="655.5" ></text>
</g>
<g >
<title>evictable_reader::fill_buffer (1 samples, 0.02%)</title><rect x="106.7" y="517" width="0.2" height="15.0" fill="rgb(206,132,16)" rx="2" ry="2" />
<text  x="109.66" y="527.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="14.5" y="901" width="0.2" height="15.0" fill="rgb(253,81,47)" rx="2" ry="2" />
<text  x="17.47" y="911.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (3 samples, 0.06%)</title><rect x="336.4" y="597" width="0.7" height="15.0" fill="rgb(252,54,12)" rx="2" ry="2" />
<text  x="339.44" y="607.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (14 samples, 0.27%)</title><rect x="94.8" y="773" width="3.1" height="15.0" fill="rgb(253,168,7)" rx="2" ry="2" />
<text  x="97.80" y="783.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="449.9" y="661" width="0.2" height="15.0" fill="rgb(253,134,19)" rx="2" ry="2" />
<text  x="452.87" y="671.5" ></text>
</g>
<g >
<title>memtable::find_or_create_partition (4 samples, 0.08%)</title><rect x="1124.0" y="533" width="0.9" height="15.0" fill="rgb(243,61,18)" rx="2" ry="2" />
<text  x="1127.00" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="941.9" y="709" width="0.2" height="15.0" fill="rgb(205,29,28)" rx="2" ry="2" />
<text  x="944.87" y="719.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;cql3::expr::untyped_constant, void, void, cql3::expr::untyped_constant, void&gt; (1 samples, 0.02%)</title><rect x="53.4" y="549" width="0.2" height="15.0" fill="rgb(236,167,49)" rx="2" ry="2" />
<text  x="56.41" y="559.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;gms::inet_address, std::pair&lt;gms::inet_address const, service::view_update_backlog_timestamped&gt;, std::allocator&lt;std::pair&lt;gms::inet_address const, service::view_update_backlog_timestamped&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;gms::inet_address&gt;, std::hash&lt;gms::inet_address&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (1 samples, 0.02%)</title><rect x="719.7" y="693" width="0.2" height="15.0" fill="rgb(206,59,10)" rx="2" ry="2" />
<text  x="722.70" y="703.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (8 samples, 0.15%)</title><rect x="423.9" y="533" width="1.8" height="15.0" fill="rgb(246,40,52)" rx="2" ry="2" />
<text  x="426.92" y="543.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;auth::resource&gt;::_M_reset (1 samples, 0.02%)</title><rect x="789.7" y="629" width="0.3" height="15.0" fill="rgb(235,162,10)" rx="2" ry="2" />
<text  x="792.73" y="639.5" ></text>
</g>
<g >
<title>std::construct_at&lt;mutation_fragment, schema const&amp;, reader_permit&amp;, partition_start&gt; (25 samples, 0.47%)</title><rect x="520.3" y="533" width="5.6" height="15.0" fill="rgb(244,68,8)" rx="2" ry="2" />
<text  x="523.35" y="543.5" ></text>
</g>
<g >
<title>range_tombstone_list::~range_tombstone_list (1 samples, 0.02%)</title><rect x="1124.2" y="405" width="0.2" height="15.0" fill="rgb(206,45,54)" rx="2" ry="2" />
<text  x="1127.22" y="415.5" ></text>
</g>
<g >
<title>basic_atomic_cell_view&lt; (1 samples, 0.02%)</title><rect x="407.4" y="485" width="0.2" height="15.0" fill="rgb(250,7,44)" rx="2" ry="2" />
<text  x="410.36" y="495.5" ></text>
</g>
<g >
<title>cql3::expr::prepare_term (5 samples, 0.09%)</title><rect x="67.3" y="709" width="1.1" height="15.0" fill="rgb(249,61,36)" rx="2" ry="2" />
<text  x="70.28" y="719.5" ></text>
</g>
<g >
<title>seastar::futurize_invoke&lt;seastar::future&lt;void&gt;  (473 samples, 8.97%)</title><rect x="333.3" y="645" width="105.8" height="15.0" fill="rgb(239,179,26)" rx="2" ry="2" />
<text  x="336.30" y="655.5" >seastar::fut..</text>
</g>
<g >
<title>seastar::syscall_work_queue::work_item_returning&lt;seastar::syscall_result_extra&lt;stat&gt; &gt;::complete (1 samples, 0.02%)</title><rect x="1169.0" y="789" width="0.2" height="15.0" fill="rgb(231,130,48)" rx="2" ry="2" />
<text  x="1171.97" y="799.5" ></text>
</g>
<g >
<title>range_tombstone_list::~range_tombstone_list (1 samples, 0.02%)</title><rect x="1139.2" y="581" width="0.2" height="15.0" fill="rgb(237,26,22)" rx="2" ry="2" />
<text  x="1142.21" y="591.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::set_callback (1 samples, 0.02%)</title><rect x="866.5" y="789" width="0.2" height="15.0" fill="rgb(251,108,1)" rx="2" ry="2" />
<text  x="869.47" y="799.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (1 samples, 0.02%)</title><rect x="1123.8" y="469" width="0.2" height="15.0" fill="rgb(240,227,0)" rx="2" ry="2" />
<text  x="1126.77" y="479.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (3 samples, 0.06%)</title><rect x="51.8" y="565" width="0.7" height="15.0" fill="rgb(235,134,14)" rx="2" ry="2" />
<text  x="54.84" y="575.5" ></text>
</g>
<g >
<title>seastar::memory::stats (5 samples, 0.09%)</title><rect x="202.0" y="549" width="1.1" height="15.0" fill="rgb(208,121,8)" rx="2" ry="2" />
<text  x="204.97" y="559.5" ></text>
</g>
<g >
<title>reader_selector::has_new_readers (1 samples, 0.02%)</title><rect x="465.3" y="581" width="0.2" height="15.0" fill="rgb(213,128,49)" rx="2" ry="2" />
<text  x="468.31" y="591.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::operator= (1 samples, 0.02%)</title><rect x="67.1" y="677" width="0.2" height="15.0" fill="rgb(232,10,5)" rx="2" ry="2" />
<text  x="70.05" y="687.5" ></text>
</g>
<g >
<title>mutation_reader_merger::maybe_add_readers (1 samples, 0.02%)</title><rect x="182.5" y="581" width="0.2" height="15.0" fill="rgb(242,137,11)" rx="2" ry="2" />
<text  x="185.50" y="591.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::set_urgent_state (2 samples, 0.04%)</title><rect x="666.7" y="789" width="0.4" height="15.0" fill="rgb(254,41,18)" rx="2" ry="2" />
<text  x="669.67" y="799.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (3 samples, 0.06%)</title><rect x="1045.0" y="597" width="0.7" height="15.0" fill="rgb(222,58,7)" rx="2" ry="2" />
<text  x="1048.02" y="607.5" ></text>
</g>
<g >
<title>seastar::future&lt;boost::iterator_range&lt;mutation_fragment*&gt; &gt;::then_impl&lt;mutation_fragment_merger&lt;mutation_reader_merger&gt;::fetch (2 samples, 0.04%)</title><rect x="304.7" y="629" width="0.4" height="15.0" fill="rgb(215,33,43)" rx="2" ry="2" />
<text  x="307.66" y="639.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (1 samples, 0.02%)</title><rect x="1109.5" y="709" width="0.2" height="15.0" fill="rgb(224,164,7)" rx="2" ry="2" />
<text  x="1112.45" y="719.5" ></text>
</g>
<g >
<title>schema::column_at (9 samples, 0.17%)</title><rect x="251.0" y="421" width="2.0" height="15.0" fill="rgb(235,93,54)" rx="2" ry="2" />
<text  x="253.97" y="431.5" ></text>
</g>
<g >
<title>validation::validate_keyspace (12 samples, 0.23%)</title><rect x="833.1" y="677" width="2.7" height="15.0" fill="rgb(216,106,43)" rx="2" ry="2" />
<text  x="836.14" y="687.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (1 samples, 0.02%)</title><rect x="842.1" y="725" width="0.2" height="15.0" fill="rgb(218,49,6)" rx="2" ry="2" />
<text  x="845.09" y="735.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (5 samples, 0.09%)</title><rect x="805.6" y="421" width="1.1" height="15.0" fill="rgb(253,145,36)" rx="2" ry="2" />
<text  x="808.62" y="431.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::waiting_for (1 samples, 0.02%)</title><rect x="715.9" y="725" width="0.2" height="15.0" fill="rgb(251,10,20)" rx="2" ry="2" />
<text  x="718.90" y="735.5" ></text>
</g>
<g >
<title>std::move&lt;std::allocator&lt;char&gt;&amp;&gt; (1 samples, 0.02%)</title><rect x="23.0" y="469" width="0.2" height="15.0" fill="rgb(205,17,53)" rx="2" ry="2" />
<text  x="25.98" y="479.5" ></text>
</g>
<g >
<title>std::apply&lt;service::client_state::check_has_permission (130 samples, 2.46%)</title><rect x="790.0" y="629" width="29.0" height="15.0" fill="rgb(222,152,28)" rx="2" ry="2" />
<text  x="792.95" y="639.5" >st..</text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_in_thread&lt;stable_flattened_mutations_consumer&lt;compact_for_compaction&lt;sstables::compacting_sstable_writer, noop_compacted_fragments_consumer&gt; &gt;, flat_mutation_reader::no_filter&gt; (1 samples, 0.02%)</title><rect x="16.9" y="821" width="0.3" height="15.0" fill="rgb(227,185,2)" rx="2" ry="2" />
<text  x="19.94" y="831.5" ></text>
</g>
<g >
<title>cql3::raw_value::make_value (24 samples, 0.46%)</title><rect x="903.4" y="581" width="5.4" height="15.0" fill="rgb(230,100,36)" rx="2" ry="2" />
<text  x="906.39" y="591.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::create_type_statement, std::default_delete&lt;cql3::statements::create_type_statement&gt; &gt;::__uniq_ptr_impl (1 samples, 0.02%)</title><rect x="62.4" y="645" width="0.2" height="15.0" fill="rgb(247,28,38)" rx="2" ry="2" />
<text  x="65.35" y="655.5" ></text>
</g>
<g >
<title>seastar::internal::awaiter&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::await_suspend&lt;seastar::internal::coroutine_traits_base&lt;service::storage_proxy_coordinator_query_result&gt;::promise_type&gt; (1 samples, 0.02%)</title><rect x="964.2" y="677" width="0.3" height="15.0" fill="rgb(231,107,41)" rx="2" ry="2" />
<text  x="967.25" y="687.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.04%)</title><rect x="672.5" y="725" width="0.4" height="15.0" fill="rgb(213,126,13)" rx="2" ry="2" />
<text  x="675.49" y="735.5" ></text>
</g>
<g >
<title>database::find_column_family (9 samples, 0.17%)</title><rect x="828.4" y="645" width="2.1" height="15.0" fill="rgb(244,126,27)" rx="2" ry="2" />
<text  x="831.44" y="655.5" ></text>
</g>
<g >
<title>std::type_info::operator== (1 samples, 0.02%)</title><rect x="716.3" y="757" width="0.3" height="15.0" fill="rgb(217,49,31)" rx="2" ry="2" />
<text  x="719.34" y="767.5" ></text>
</g>
<g >
<title>antlr3::IntStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::_LA (1 samples, 0.02%)</title><rect x="25.0" y="581" width="0.2" height="15.0" fill="rgb(216,155,8)" rx="2" ry="2" />
<text  x="27.99" y="591.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::operator (1 samples, 0.02%)</title><rect x="106.7" y="357" width="0.2" height="15.0" fill="rgb(213,84,22)" rx="2" ry="2" />
<text  x="109.66" y="367.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="845.0" y="709" width="0.2" height="15.0" fill="rgb(242,34,52)" rx="2" ry="2" />
<text  x="847.99" y="719.5" ></text>
</g>
<g >
<title>[unknown] (12 samples, 0.23%)</title><rect x="11.6" y="901" width="2.7" height="15.0" fill="rgb(247,58,4)" rx="2" ry="2" />
<text  x="14.57" y="911.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="20.7" y="597" width="0.3" height="15.0" fill="rgb(244,95,33)" rx="2" ry="2" />
<text  x="23.74" y="607.5" ></text>
</g>
<g >
<title>read_simple&lt;long, managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="1125.6" y="485" width="0.2" height="15.0" fill="rgb(221,46,12)" rx="2" ry="2" />
<text  x="1128.56" y="495.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (4 samples, 0.08%)</title><rect x="905.0" y="565" width="0.9" height="15.0" fill="rgb(208,119,49)" rx="2" ry="2" />
<text  x="907.96" y="575.5" ></text>
</g>
<g >
<title>sstables::sstable_directory::move_foreign_sstables (1 samples, 0.02%)</title><rect x="694.9" y="789" width="0.2" height="15.0" fill="rgb(209,170,34)" rx="2" ry="2" />
<text  x="697.87" y="799.5" ></text>
</g>
<g >
<title>dht::ring_position_tri_compare (40 samples, 0.76%)</title><rect x="493.1" y="581" width="8.9" height="15.0" fill="rgb(217,43,16)" rx="2" ry="2" />
<text  x="496.05" y="591.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_one (1 samples, 0.02%)</title><rect x="106.7" y="373" width="0.2" height="15.0" fill="rgb(212,180,51)" rx="2" ry="2" />
<text  x="109.66" y="383.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate_to_raw_view (3 samples, 0.06%)</title><rect x="875.6" y="613" width="0.7" height="15.0" fill="rgb(217,36,15)" rx="2" ry="2" />
<text  x="878.65" y="623.5" ></text>
</g>
<g >
<title>std::type_info::operator== (1 samples, 0.02%)</title><rect x="710.3" y="741" width="0.2" height="15.0" fill="rgb(252,83,32)" rx="2" ry="2" />
<text  x="713.30" y="751.5" ></text>
</g>
<g >
<title>logalloc::region_impl::free (2 samples, 0.04%)</title><rect x="14.7" y="837" width="0.4" height="15.0" fill="rgb(218,137,25)" rx="2" ry="2" />
<text  x="17.70" y="847.5" ></text>
</g>
<g >
<title>seastar::future&lt;std::tuple&lt;std::optional&lt;clustering_key_prefix&gt; &gt; &gt;::then_impl&lt;query::querier&lt; (2 samples, 0.04%)</title><rect x="558.8" y="725" width="0.5" height="15.0" fill="rgb(208,183,39)" rx="2" ry="2" />
<text  x="561.83" y="735.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::partition_snapshot_flat_reader&lt;schema const&amp;, flush_memory_accounter&amp;&gt; (1 samples, 0.02%)</title><rect x="79.1" y="725" width="0.3" height="15.0" fill="rgb(246,23,49)" rx="2" ry="2" />
<text  x="82.14" y="735.5" ></text>
</g>
<g >
<title>std::apply&lt;service::storage_proxy::mutate_locally (1 samples, 0.02%)</title><rect x="106.4" y="757" width="0.3" height="15.0" fill="rgb(239,34,16)" rx="2" ry="2" />
<text  x="109.43" y="767.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (7 samples, 0.13%)</title><rect x="344.0" y="549" width="1.6" height="15.0" fill="rgb(210,178,51)" rx="2" ry="2" />
<text  x="347.04" y="559.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (1 samples, 0.02%)</title><rect x="139.1" y="757" width="0.2" height="15.0" fill="rgb(218,141,11)" rx="2" ry="2" />
<text  x="142.10" y="767.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;partition_snapshot&gt;::make&lt;seastar::lw_shared_ptr&lt;schema const&gt;&amp;, logalloc::region&amp;, mutation_cleaner&amp;, partition_entry*, cache_tracker*&amp;, unsigned long&amp;&gt; (7 samples, 0.13%)</title><rect x="534.7" y="597" width="1.5" height="15.0" fill="rgb(216,119,42)" rx="2" ry="2" />
<text  x="537.67" y="607.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="1129.4" y="581" width="0.2" height="15.0" fill="rgb(250,141,45)" rx="2" ry="2" />
<text  x="1132.37" y="591.5" ></text>
</g>
<g >
<title>reader_permit::consume (1 samples, 0.02%)</title><rect x="260.6" y="453" width="0.2" height="15.0" fill="rgb(242,100,9)" rx="2" ry="2" />
<text  x="263.59" y="463.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (43 samples, 0.82%)</title><rect x="673.2" y="805" width="9.6" height="15.0" fill="rgb(254,159,52)" rx="2" ry="2" />
<text  x="676.16" y="815.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_destroy_data (2 samples, 0.04%)</title><rect x="404.2" y="469" width="0.5" height="15.0" fill="rgb(211,15,39)" rx="2" ry="2" />
<text  x="407.23" y="479.5" ></text>
</g>
<g >
<title>db::schema_tables::diff_table_or_view (1 samples, 0.02%)</title><rect x="106.2" y="773" width="0.2" height="15.0" fill="rgb(217,119,28)" rx="2" ry="2" />
<text  x="109.21" y="783.5" ></text>
</g>
<g >
<title>partition_snapshot::slide_to_oldest (2 samples, 0.04%)</title><rect x="583.4" y="597" width="0.5" height="15.0" fill="rgb(211,10,47)" rx="2" ry="2" />
<text  x="586.44" y="607.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (2 samples, 0.04%)</title><rect x="834.9" y="597" width="0.5" height="15.0" fill="rgb(248,34,45)" rx="2" ry="2" />
<text  x="837.93" y="607.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::trivial_direct_destroy (1 samples, 0.02%)</title><rect x="704.9" y="757" width="0.3" height="15.0" fill="rgb(253,153,19)" rx="2" ry="2" />
<text  x="707.93" y="767.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::visit&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (21 samples, 0.40%)</title><rect x="426.6" y="533" width="4.7" height="15.0" fill="rgb(229,202,19)" rx="2" ry="2" />
<text  x="429.60" y="543.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (3 samples, 0.06%)</title><rect x="45.8" y="581" width="0.7" height="15.0" fill="rgb(215,109,10)" rx="2" ry="2" />
<text  x="48.80" y="591.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;gms::inet_address, std::pair&lt;gms::inet_address const, service::view_update_backlog_timestamped&gt;, std::allocator&lt;std::pair&lt;gms::inet_address const, service::view_update_backlog_timestamped&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;gms::inet_address&gt;, std::hash&lt;gms::inet_address&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (1 samples, 0.02%)</title><rect x="719.7" y="677" width="0.2" height="15.0" fill="rgb(237,174,20)" rx="2" ry="2" />
<text  x="722.70" y="687.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (2 samples, 0.04%)</title><rect x="990.2" y="565" width="0.4" height="15.0" fill="rgb(206,149,41)" rx="2" ry="2" />
<text  x="993.20" y="575.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::initialize (1 samples, 0.02%)</title><rect x="1170.1" y="837" width="0.2" height="15.0" fill="rgb(225,81,13)" rx="2" ry="2" />
<text  x="1173.09" y="847.5" ></text>
</g>
<g >
<title>std::__relocate_a_1&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;*, std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;*, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt; (2 samples, 0.04%)</title><rect x="49.6" y="517" width="0.4" height="15.0" fill="rgb(233,67,35)" rx="2" ry="2" />
<text  x="52.60" y="527.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::need_filtering (20 samples, 0.38%)</title><rect x="945.2" y="725" width="4.5" height="15.0" fill="rgb(245,10,7)" rx="2" ry="2" />
<text  x="948.23" y="735.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::~abstract_read_executor (13 samples, 0.25%)</title><rect x="1164.7" y="741" width="2.9" height="15.0" fill="rgb(236,139,49)" rx="2" ry="2" />
<text  x="1167.72" y="751.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::forward_to (1 samples, 0.02%)</title><rect x="694.6" y="789" width="0.3" height="15.0" fill="rgb(234,174,36)" rx="2" ry="2" />
<text  x="697.64" y="799.5" ></text>
</g>
<g >
<title>query_mutations_on_all_shards (1 samples, 0.02%)</title><rect x="105.8" y="709" width="0.2" height="15.0" fill="rgb(247,68,44)" rx="2" ry="2" />
<text  x="108.76" y="719.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.02%)</title><rect x="59.4" y="453" width="0.3" height="15.0" fill="rgb(236,156,41)" rx="2" ry="2" />
<text  x="62.45" y="463.5" ></text>
</g>
<g >
<title>database::find_uuid (15 samples, 0.28%)</title><rect x="769.4" y="693" width="3.3" height="15.0" fill="rgb(232,58,22)" rx="2" ry="2" />
<text  x="772.37" y="703.5" ></text>
</g>
<g >
<title>bplus::tree&lt;long, intrusive_array&lt;memtable_entry&gt;, dht::raw_token_less_comparator, 16ul,  (2 samples, 0.04%)</title><rect x="14.7" y="869" width="0.4" height="15.0" fill="rgb(216,125,16)" rx="2" ry="2" />
<text  x="17.70" y="879.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (2 samples, 0.04%)</title><rect x="56.5" y="581" width="0.5" height="15.0" fill="rgb(235,104,6)" rx="2" ry="2" />
<text  x="59.54" y="591.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (5 samples, 0.09%)</title><rect x="736.3" y="645" width="1.1" height="15.0" fill="rgb(213,89,42)" rx="2" ry="2" />
<text  x="739.26" y="655.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (1 samples, 0.02%)</title><rect x="53.6" y="565" width="0.3" height="15.0" fill="rgb(252,208,47)" rx="2" ry="2" />
<text  x="56.63" y="575.5" ></text>
</g>
<g >
<title>seastar::reactor::del_timer (2 samples, 0.04%)</title><rect x="714.6" y="709" width="0.4" height="15.0" fill="rgb(211,63,22)" rx="2" ry="2" />
<text  x="717.55" y="719.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::push_back (21 samples, 0.40%)</title><rect x="1022.2" y="501" width="4.7" height="15.0" fill="rgb(222,193,27)" rx="2" ry="2" />
<text  x="1025.20" y="511.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::future&lt;void&gt;  (37 samples, 0.70%)</title><rect x="1131.2" y="661" width="8.2" height="15.0" fill="rgb(222,72,54)" rx="2" ry="2" />
<text  x="1134.16" y="671.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="276.9" y="533" width="0.2" height="15.0" fill="rgb(249,46,36)" rx="2" ry="2" />
<text  x="279.92" y="543.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (2 samples, 0.04%)</title><rect x="826.4" y="629" width="0.5" height="15.0" fill="rgb(222,20,48)" rx="2" ry="2" />
<text  x="829.42" y="639.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (4 samples, 0.08%)</title><rect x="43.6" y="501" width="0.9" height="15.0" fill="rgb(208,71,49)" rx="2" ry="2" />
<text  x="46.56" y="511.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (9 samples, 0.17%)</title><rect x="1030.5" y="501" width="2.0" height="15.0" fill="rgb(229,142,41)" rx="2" ry="2" />
<text  x="1033.47" y="511.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (5 samples, 0.09%)</title><rect x="788.2" y="613" width="1.1" height="15.0" fill="rgb(207,229,30)" rx="2" ry="2" />
<text  x="791.16" y="623.5" ></text>
</g>
<g >
<title>seastar::weakly_referencable&lt;cql3::statements::prepared_statement&gt;::weak_from_this (3 samples, 0.06%)</title><rect x="734.7" y="709" width="0.7" height="15.0" fill="rgb(205,88,20)" rx="2" ry="2" />
<text  x="737.69" y="719.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::clear (1 samples, 0.02%)</title><rect x="821.1" y="613" width="0.2" height="15.0" fill="rgb(206,82,16)" rx="2" ry="2" />
<text  x="824.05" y="623.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (2 samples, 0.04%)</title><rect x="318.1" y="613" width="0.4" height="15.0" fill="rgb(244,71,42)" rx="2" ry="2" />
<text  x="321.09" y="623.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::local (4 samples, 0.08%)</title><rect x="1055.1" y="645" width="0.9" height="15.0" fill="rgb(217,58,34)" rx="2" ry="2" />
<text  x="1058.09" y="655.5" ></text>
</g>
<g >
<title>basic_atomic_cell_view&lt; (1 samples, 0.02%)</title><rect x="365.7" y="485" width="0.3" height="15.0" fill="rgb(241,220,3)" rx="2" ry="2" />
<text  x="368.75" y="495.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::digest_read_result&gt;::take (1 samples, 0.02%)</title><rect x="699.8" y="741" width="0.2" height="15.0" fill="rgb(253,223,46)" rx="2" ry="2" />
<text  x="702.79" y="751.5" ></text>
</g>
<g >
<title>mutation_fragment::visit&lt;partition_snapshot_read_accounter&amp;&gt; (2 samples, 0.04%)</title><rect x="204.9" y="533" width="0.4" height="15.0" fill="rgb(220,53,23)" rx="2" ry="2" />
<text  x="207.88" y="543.5" ></text>
</g>
<g >
<title>rows_entry::memory_usage (1 samples, 0.02%)</title><rect x="16.3" y="837" width="0.2" height="15.0" fill="rgb(246,140,26)" rx="2" ry="2" />
<text  x="19.26" y="847.5" ></text>
</g>
<g >
<title>std::optional&lt;clustering_key_prefix&gt;::operator=&lt;clustering_key_prefix const&amp;&gt; (1 samples, 0.02%)</title><rect x="276.2" y="533" width="0.3" height="15.0" fill="rgb(238,199,21)" rx="2" ry="2" />
<text  x="279.25" y="543.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.06%)</title><rect x="600.4" y="693" width="0.7" height="15.0" fill="rgb(248,213,11)" rx="2" ry="2" />
<text  x="603.45" y="703.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mT (1 samples, 0.02%)</title><rect x="31.0" y="549" width="0.3" height="15.0" fill="rgb(216,215,16)" rx="2" ry="2" />
<text  x="34.03" y="559.5" ></text>
</g>
<g >
<title>fmt::v7::detail::buffer&lt;char&gt;::push_back (1 samples, 0.02%)</title><rect x="17.8" y="789" width="0.3" height="15.0" fill="rgb(250,224,18)" rx="2" ry="2" />
<text  x="20.83" y="799.5" ></text>
</g>
<g >
<title>abstract_type::from_string (2 samples, 0.04%)</title><rect x="67.5" y="677" width="0.4" height="15.0" fill="rgb(218,12,45)" rx="2" ry="2" />
<text  x="70.50" y="687.5" ></text>
</g>
<g >
<title>service::client_state::set_keyspace (23 samples, 0.44%)</title><rect x="849.2" y="725" width="5.2" height="15.0" fill="rgb(221,119,39)" rx="2" ry="2" />
<text  x="852.25" y="735.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;abstract_type const&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="915.7" y="645" width="0.2" height="15.0" fill="rgb(245,66,17)" rx="2" ry="2" />
<text  x="918.70" y="655.5" ></text>
</g>
<g >
<title>std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt;::emplace_back&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; (5 samples, 0.09%)</title><rect x="288.8" y="517" width="1.1" height="15.0" fill="rgb(242,4,28)" rx="2" ry="2" />
<text  x="291.78" y="527.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::clear (8 samples, 0.15%)</title><rect x="403.1" y="501" width="1.8" height="15.0" fill="rgb(210,39,6)" rx="2" ry="2" />
<text  x="406.11" y="511.5" ></text>
</g>
<g >
<title>absl::container_internal::operator== (1 samples, 0.02%)</title><rect x="1050.4" y="613" width="0.2" height="15.0" fill="rgb(240,23,40)" rx="2" ry="2" />
<text  x="1053.39" y="623.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (1 samples, 0.02%)</title><rect x="1043.9" y="485" width="0.2" height="15.0" fill="rgb(247,16,24)" rx="2" ry="2" />
<text  x="1046.90" y="495.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.02%)</title><rect x="55.2" y="485" width="0.2" height="15.0" fill="rgb(205,93,23)" rx="2" ry="2" />
<text  x="58.20" y="495.5" ></text>
</g>
<g >
<title>std::hash&lt;std::basic_string_view&lt;signed char, std::char_traits&lt;signed char&gt; &gt; &gt;::operator (8 samples, 0.15%)</title><rect x="738.3" y="613" width="1.8" height="15.0" fill="rgb(219,103,16)" rx="2" ry="2" />
<text  x="741.27" y="623.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::operator (5 samples, 0.09%)</title><rect x="755.7" y="597" width="1.1" height="15.0" fill="rgb(234,1,29)" rx="2" ry="2" />
<text  x="758.72" y="607.5" ></text>
</g>
<g >
<title>unsigned_vint::serialize (1 samples, 0.02%)</title><rect x="81.6" y="693" width="0.2" height="15.0" fill="rgb(212,9,32)" rx="2" ry="2" />
<text  x="84.60" y="703.5" ></text>
</g>
<g >
<title>single_node_cql_env::make_query_state (52 samples, 0.99%)</title><rect x="842.8" y="741" width="11.6" height="15.0" fill="rgb(213,164,48)" rx="2" ry="2" />
<text  x="845.76" y="751.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (5 samples, 0.09%)</title><rect x="504.2" y="629" width="1.2" height="15.0" fill="rgb(215,93,4)" rx="2" ry="2" />
<text  x="507.24" y="639.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (2 samples, 0.04%)</title><rect x="495.7" y="501" width="0.5" height="15.0" fill="rgb(241,14,34)" rx="2" ry="2" />
<text  x="498.74" y="511.5" ></text>
</g>
<g >
<title>antlr3::IntStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::_LA (5 samples, 0.09%)</title><rect x="29.7" y="549" width="1.1" height="15.0" fill="rgb(247,219,15)" rx="2" ry="2" />
<text  x="32.69" y="559.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (2 samples, 0.04%)</title><rect x="10.9" y="901" width="0.4" height="15.0" fill="rgb(238,129,43)" rx="2" ry="2" />
<text  x="13.89" y="911.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="55.2" y="501" width="0.2" height="15.0" fill="rgb(238,27,31)" rx="2" ry="2" />
<text  x="58.20" y="511.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::impl (1 samples, 0.02%)</title><rect x="513.6" y="581" width="0.3" height="15.0" fill="rgb(217,16,36)" rx="2" ry="2" />
<text  x="516.64" y="591.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, unsigned int, std::_Identity&lt;unsigned int&gt;, std::less&lt;unsigned int&gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;unsigned int&gt; &gt;::_M_begin (1 samples, 0.02%)</title><rect x="36.2" y="581" width="0.2" height="15.0" fill="rgb(210,23,53)" rx="2" ry="2" />
<text  x="39.18" y="591.5" ></text>
</g>
<g >
<title>flush_reader::get_next_partition (2 samples, 0.04%)</title><rect x="78.9" y="757" width="0.5" height="15.0" fill="rgb(238,132,36)" rx="2" ry="2" />
<text  x="81.91" y="767.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (3 samples, 0.06%)</title><rect x="1163.2" y="789" width="0.6" height="15.0" fill="rgb(224,81,32)" rx="2" ry="2" />
<text  x="1166.15" y="799.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="1045.9" y="597" width="0.2" height="15.0" fill="rgb(248,150,1)" rx="2" ry="2" />
<text  x="1048.91" y="607.5" ></text>
</g>
<g >
<title>list_reader_selector::~list_reader_selector (3 samples, 0.06%)</title><rect x="591.3" y="677" width="0.6" height="15.0" fill="rgb(214,67,11)" rx="2" ry="2" />
<text  x="594.27" y="687.5" ></text>
</g>
<g >
<title>utils::tuple_hash::operator (1 samples, 0.02%)</title><rect x="76.9" y="533" width="0.2" height="15.0" fill="rgb(226,36,4)" rx="2" ry="2" />
<text  x="79.90" y="543.5" ></text>
</g>
<g >
<title>utils::phased_barrier::start (2 samples, 0.04%)</title><rect x="1033.6" y="549" width="0.5" height="15.0" fill="rgb(205,224,18)" rx="2" ry="2" />
<text  x="1036.61" y="559.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.02%)</title><rect x="42.9" y="517" width="0.2" height="15.0" fill="rgb(212,200,46)" rx="2" ry="2" />
<text  x="45.89" y="527.5" ></text>
</g>
<g >
<title>std::default_delete&lt;mutation::data&gt;::operator (4 samples, 0.08%)</title><rect x="1138.5" y="613" width="0.9" height="15.0" fill="rgb(220,203,27)" rx="2" ry="2" />
<text  x="1141.54" y="623.5" ></text>
</g>
<g >
<title>service::client_state::check_has_permission (161 samples, 3.05%)</title><rect x="785.3" y="645" width="36.0" height="15.0" fill="rgb(216,90,21)" rx="2" ry="2" />
<text  x="788.26" y="655.5" >ser..</text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="536.0" y="581" width="0.2" height="15.0" fill="rgb(224,59,34)" rx="2" ry="2" />
<text  x="539.01" y="591.5" ></text>
</g>
<g >
<title>ser::qr_cell_view::value (1 samples, 0.02%)</title><rect x="649.7" y="629" width="0.2" height="15.0" fill="rgb(240,115,28)" rx="2" ry="2" />
<text  x="652.67" y="639.5" ></text>
</g>
<g >
<title>ser::qr_clustered_row__cells&lt;bytes_ostream&gt;::qr_clustered_row__cells (1 samples, 0.02%)</title><rect x="372.7" y="485" width="0.2" height="15.0" fill="rgb(251,206,39)" rx="2" ry="2" />
<text  x="375.68" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.04%)</title><rect x="209.6" y="469" width="0.4" height="15.0" fill="rgb(228,211,4)" rx="2" ry="2" />
<text  x="212.58" y="479.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reclaiming_disabled&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_range_tombstone (12 samples, 0.23%)</title><rect x="271.1" y="501" width="2.7" height="15.0" fill="rgb(205,122,5)" rx="2" ry="2" />
<text  x="274.10" y="511.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::pop_back (2 samples, 0.04%)</title><rect x="302.2" y="581" width="0.5" height="15.0" fill="rgb(248,94,6)" rx="2" ry="2" />
<text  x="305.20" y="591.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (1 samples, 0.02%)</title><rect x="1120.0" y="709" width="0.2" height="15.0" fill="rgb(228,219,54)" rx="2" ry="2" />
<text  x="1122.97" y="719.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (10 samples, 0.19%)</title><rect x="583.9" y="597" width="2.2" height="15.0" fill="rgb(227,155,17)" rx="2" ry="2" />
<text  x="586.89" y="607.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (2 samples, 0.04%)</title><rect x="634.0" y="741" width="0.5" height="15.0" fill="rgb(240,91,25)" rx="2" ry="2" />
<text  x="637.01" y="751.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="552.3" y="629" width="0.3" height="15.0" fill="rgb(215,150,25)" rx="2" ry="2" />
<text  x="555.34" y="639.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql3::column_identifier&gt;::~shared_ptr_count_for (1 samples, 0.02%)</title><rect x="74.0" y="741" width="0.2" height="15.0" fill="rgb(209,207,43)" rx="2" ry="2" />
<text  x="76.99" y="751.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;, service::storage_proxy::query_result_local (14 samples, 0.27%)</title><rect x="646.5" y="805" width="3.2" height="15.0" fill="rgb(205,65,28)" rx="2" ry="2" />
<text  x="649.54" y="815.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt;::~_Variant_storage (1 samples, 0.02%)</title><rect x="875.6" y="533" width="0.3" height="15.0" fill="rgb(238,132,2)" rx="2" ry="2" />
<text  x="878.65" y="543.5" ></text>
</g>
<g >
<title>schema::get_column_definition (3 samples, 0.06%)</title><rect x="72.2" y="725" width="0.7" height="15.0" fill="rgb(231,191,54)" rx="2" ry="2" />
<text  x="75.20" y="735.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (2 samples, 0.04%)</title><rect x="801.4" y="501" width="0.4" height="15.0" fill="rgb(213,44,44)" rx="2" ry="2" />
<text  x="804.37" y="511.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (6 samples, 0.11%)</title><rect x="440.3" y="629" width="1.3" height="15.0" fill="rgb(228,2,15)" rx="2" ry="2" />
<text  x="443.25" y="639.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (1 samples, 0.02%)</title><rect x="16.7" y="837" width="0.2" height="15.0" fill="rgb(214,152,46)" rx="2" ry="2" />
<text  x="19.71" y="847.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="430.0" y="485" width="0.2" height="15.0" fill="rgb(234,64,49)" rx="2" ry="2" />
<text  x="432.96" y="495.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="835.6" y="645" width="0.2" height="15.0" fill="rgb(229,39,40)" rx="2" ry="2" />
<text  x="838.60" y="655.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (3 samples, 0.06%)</title><rect x="51.8" y="453" width="0.7" height="15.0" fill="rgb(236,4,29)" rx="2" ry="2" />
<text  x="54.84" y="463.5" ></text>
</g>
<g >
<title>std::default_delete&lt;nonwrapping_interval&lt;dht::ring_position&gt; const&gt;::operator (1 samples, 0.02%)</title><rect x="603.8" y="725" width="0.2" height="15.0" fill="rgb(207,25,9)" rx="2" ry="2" />
<text  x="606.80" y="735.5" ></text>
</g>
<g >
<title>seastar::futurize_invoke&lt;seastar::future&lt;void&gt;  (1 samples, 0.02%)</title><rect x="439.4" y="661" width="0.2" height="15.0" fill="rgb(254,195,49)" rx="2" ry="2" />
<text  x="442.36" y="671.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (15 samples, 0.28%)</title><rect x="431.5" y="565" width="3.4" height="15.0" fill="rgb(243,151,20)" rx="2" ry="2" />
<text  x="434.52" y="575.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;schema_registry_entry&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;schema_registry_entry&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (5 samples, 0.09%)</title><rect x="974.5" y="629" width="1.2" height="15.0" fill="rgb(220,55,47)" rx="2" ry="2" />
<text  x="977.54" y="639.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="40.7" y="549" width="0.2" height="15.0" fill="rgb(224,22,22)" rx="2" ry="2" />
<text  x="43.65" y="559.5" ></text>
</g>
<g >
<title>database::find_uuid (1 samples, 0.02%)</title><rect x="77.1" y="741" width="0.2" height="15.0" fill="rgb(236,65,36)" rx="2" ry="2" />
<text  x="80.12" y="751.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (13 samples, 0.25%)</title><rect x="488.6" y="565" width="2.9" height="15.0" fill="rgb(206,81,14)" rx="2" ry="2" />
<text  x="491.58" y="575.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::move_it (2 samples, 0.04%)</title><rect x="722.6" y="805" width="0.5" height="15.0" fill="rgb(212,72,43)" rx="2" ry="2" />
<text  x="725.61" y="815.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.06%)</title><rect x="619.7" y="709" width="0.7" height="15.0" fill="rgb(242,88,52)" rx="2" ry="2" />
<text  x="622.69" y="719.5" ></text>
</g>
<g >
<title>utils::basic_ihistogram&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt; &gt;::mark&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; (3 samples, 0.06%)</title><rect x="615.2" y="709" width="0.7" height="15.0" fill="rgb(211,53,30)" rx="2" ry="2" />
<text  x="618.21" y="719.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (1 samples, 0.02%)</title><rect x="483.7" y="581" width="0.2" height="15.0" fill="rgb(241,21,18)" rx="2" ry="2" />
<text  x="486.66" y="591.5" ></text>
</g>
<g >
<title>query::result_set::result_set (1 samples, 0.02%)</title><rect x="107.3" y="789" width="0.3" height="15.0" fill="rgb(221,143,15)" rx="2" ry="2" />
<text  x="110.33" y="799.5" ></text>
</g>
<g >
<title>service::client_state::has_column_family_access (282 samples, 5.35%)</title><rect x="772.7" y="709" width="63.1" height="15.0" fill="rgb(250,14,13)" rx="2" ry="2" />
<text  x="775.73" y="719.5" >servic..</text>
</g>
<g >
<title>row_cache::make_reader (51 samples, 0.97%)</title><rect x="541.6" y="645" width="11.4" height="15.0" fill="rgb(226,0,1)" rx="2" ry="2" />
<text  x="544.60" y="655.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (70 samples, 1.33%)</title><rect x="21.4" y="661" width="15.7" height="15.0" fill="rgb(217,107,31)" rx="2" ry="2" />
<text  x="24.41" y="671.5" ></text>
</g>
<g >
<title>operator new (11 samples, 0.21%)</title><rect x="1034.3" y="565" width="2.4" height="15.0" fill="rgb(248,88,16)" rx="2" ry="2" />
<text  x="1037.28" y="575.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::EqualElement&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (2 samples, 0.04%)</title><rect x="831.3" y="597" width="0.5" height="15.0" fill="rgb(248,34,3)" rx="2" ry="2" />
<text  x="834.35" y="607.5" ></text>
</g>
<g >
<title>fmt::v7::detail::value&lt;fmt::v7::basic_format_context&lt;fmt::v7::detail::buffer_appender&lt;char&gt;, char&gt; &gt;::format_custom_arg&lt;utils::UUID, fmt::v7::detail::fallback_formatter&lt;utils::UUID, char, void&gt; &gt; (1 samples, 0.02%)</title><rect x="78.2" y="901" width="0.3" height="15.0" fill="rgb(231,227,21)" rx="2" ry="2" />
<text  x="81.24" y="911.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.02%)</title><rect x="57.9" y="533" width="0.2" height="15.0" fill="rgb(244,221,34)" rx="2" ry="2" />
<text  x="60.88" y="543.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::digest_read_resolver&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="984.2" y="645" width="0.2" height="15.0" fill="rgb(213,175,17)" rx="2" ry="2" />
<text  x="987.16" y="655.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::find (3 samples, 0.06%)</title><rect x="658.6" y="709" width="0.7" height="15.0" fill="rgb(235,158,1)" rx="2" ry="2" />
<text  x="661.62" y="719.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::on_new_range (2 samples, 0.04%)</title><rect x="79.6" y="661" width="0.4" height="15.0" fill="rgb(234,153,14)" rx="2" ry="2" />
<text  x="82.58" y="671.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::term&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="69.7" y="661" width="0.3" height="15.0" fill="rgb(222,169,47)" rx="2" ry="2" />
<text  x="72.74" y="671.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;*, std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt; &gt;::base (1 samples, 0.02%)</title><rect x="49.2" y="581" width="0.2" height="15.0" fill="rgb(236,100,46)" rx="2" ry="2" />
<text  x="52.15" y="591.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (2 samples, 0.04%)</title><rect x="578.3" y="597" width="0.4" height="15.0" fill="rgb(235,47,29)" rx="2" ry="2" />
<text  x="581.30" y="607.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="465.5" y="581" width="0.3" height="15.0" fill="rgb(242,182,26)" rx="2" ry="2" />
<text  x="468.53" y="591.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::push_back (2 samples, 0.04%)</title><rect x="37.7" y="629" width="0.5" height="15.0" fill="rgb(237,217,37)" rx="2" ry="2" />
<text  x="40.74" y="639.5" ></text>
</g>
<g >
<title>table::do_apply&lt;frozen_mutation const&amp;, seastar::lw_shared_ptr&lt;schema const&gt; const&amp;&gt; (25 samples, 0.47%)</title><rect x="1123.1" y="581" width="5.6" height="15.0" fill="rgb(243,190,7)" rx="2" ry="2" />
<text  x="1126.10" y="591.5" ></text>
</g>
<g >
<title>std::vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, std::allocator&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="1168.1" y="805" width="0.2" height="15.0" fill="rgb(207,155,40)" rx="2" ry="2" />
<text  x="1171.07" y="815.5" ></text>
</g>
<g >
<title>visit&lt;(anonymous namespace)::from_string_visitor&gt; (1 samples, 0.02%)</title><rect x="67.7" y="661" width="0.2" height="15.0" fill="rgb(209,198,52)" rx="2" ry="2" />
<text  x="70.72" y="671.5" ></text>
</g>
<g >
<title>service::never_speculating_read_executor::~never_speculating_read_executor (13 samples, 0.25%)</title><rect x="1164.7" y="757" width="2.9" height="15.0" fill="rgb(214,161,4)" rx="2" ry="2" />
<text  x="1167.72" y="767.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (5 samples, 0.09%)</title><rect x="153.2" y="741" width="1.1" height="15.0" fill="rgb(218,175,7)" rx="2" ry="2" />
<text  x="156.19" y="751.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_live_sorted_endpoints (97 samples, 1.84%)</title><rect x="1066.3" y="645" width="21.7" height="15.0" fill="rgb(214,24,51)" rx="2" ry="2" />
<text  x="1069.27" y="655.5" >s..</text>
</g>
<g >
<title>operator delete (5 samples, 0.09%)</title><rect x="644.3" y="773" width="1.1" height="15.0" fill="rgb(252,55,25)" rx="2" ry="2" />
<text  x="647.30" y="783.5" ></text>
</g>
<g >
<title>mutation_fragment::visit&lt;mutation_fragment::calculate_memory_usage (2 samples, 0.04%)</title><rect x="259.7" y="469" width="0.4" height="15.0" fill="rgb(244,157,29)" rx="2" ry="2" />
<text  x="262.69" y="479.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;mutation_querier, false, false&gt;::_Optional_base (2 samples, 0.04%)</title><rect x="445.2" y="709" width="0.4" height="15.0" fill="rgb(230,188,6)" rx="2" ry="2" />
<text  x="448.17" y="719.5" ></text>
</g>
<g >
<title>table::set_hit_rate (7 samples, 0.13%)</title><rect x="716.6" y="757" width="1.5" height="15.0" fill="rgb(230,164,30)" rx="2" ry="2" />
<text  x="719.57" y="767.5" ></text>
</g>
<g >
<title>sstring_hash::operator (4 samples, 0.08%)</title><rect x="844.1" y="677" width="0.9" height="15.0" fill="rgb(211,197,11)" rx="2" ry="2" />
<text  x="847.10" y="687.5" ></text>
</g>
<g >
<title>seastar::futurize_invoke&lt;seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (1 samples, 0.02%)</title><rect x="867.1" y="773" width="0.3" height="15.0" fill="rgb(223,112,18)" rx="2" ry="2" />
<text  x="870.14" y="783.5" ></text>
</g>
<g >
<title>std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;::pair (1 samples, 0.02%)</title><rect x="49.6" y="453" width="0.2" height="15.0" fill="rgb(232,103,33)" rx="2" ry="2" />
<text  x="52.60" y="463.5" ></text>
</g>
<g >
<title>boost::algorithm::iter_split&lt;std::vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, std::allocator&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; &gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;&amp;, boost::algorithm::detail::token_finderF&lt;boost::algorithm::detail::is_any_ofF&lt;char&gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="720.6" y="757" width="0.2" height="15.0" fill="rgb(238,69,3)" rx="2" ry="2" />
<text  x="723.60" y="767.5" ></text>
</g>
<g >
<title>mutation_partition::lower_bound (9 samples, 0.17%)</title><rect x="280.1" y="501" width="2.0" height="15.0" fill="rgb(224,110,31)" rx="2" ry="2" />
<text  x="283.05" y="511.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (15 samples, 0.28%)</title><rect x="923.1" y="677" width="3.3" height="15.0" fill="rgb(206,131,50)" rx="2" ry="2" />
<text  x="926.08" y="687.5" ></text>
</g>
<g >
<title>seastar::gate::enter (2 samples, 0.04%)</title><rect x="1033.6" y="533" width="0.5" height="15.0" fill="rgb(221,1,28)" rx="2" ry="2" />
<text  x="1036.61" y="543.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::digests_match (1 samples, 0.02%)</title><rect x="715.0" y="725" width="0.2" height="15.0" fill="rgb(248,165,26)" rx="2" ry="2" />
<text  x="718.00" y="735.5" ></text>
</g>
<g >
<title>row::apply_monotonically (1 samples, 0.02%)</title><rect x="875.4" y="597" width="0.2" height="15.0" fill="rgb(233,79,2)" rx="2" ry="2" />
<text  x="878.42" y="607.5" ></text>
</g>
<g >
<title>flat_mutation_reader::peek (1 samples, 0.02%)</title><rect x="106.7" y="597" width="0.2" height="15.0" fill="rgb(241,80,28)" rx="2" ry="2" />
<text  x="109.66" y="607.5" ></text>
</g>
<g >
<title>query::querier_base::querier_base (3 samples, 0.06%)</title><rect x="630.2" y="709" width="0.7" height="15.0" fill="rgb(234,168,10)" rx="2" ry="2" />
<text  x="633.20" y="719.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::pop_mutation_fragment (4 samples, 0.08%)</title><rect x="342.0" y="565" width="0.9" height="15.0" fill="rgb(227,39,45)" rx="2" ry="2" />
<text  x="345.03" y="575.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_prepared_with_qo (549 samples, 10.41%)</title><rect x="732.0" y="757" width="122.8" height="15.0" fill="rgb(209,3,50)" rx="2" ry="2" />
<text  x="735.01" y="767.5" >single_node_cql..</text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt; &gt;::invoke&lt;flat_mutation_reader::impl::consume_pausable&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (1 samples, 0.02%)</title><rect x="105.8" y="613" width="0.2" height="15.0" fill="rgb(217,22,23)" rx="2" ry="2" />
<text  x="108.76" y="623.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;std::function&lt;std::function&lt;partition_presence_checker_result  (1 samples, 0.02%)</title><rect x="618.8" y="741" width="0.2" height="15.0" fill="rgb(212,153,37)" rx="2" ry="2" />
<text  x="621.79" y="751.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::partition_tombstone (11 samples, 0.21%)</title><rect x="526.6" y="549" width="2.5" height="15.0" fill="rgb(242,181,45)" rx="2" ry="2" />
<text  x="529.61" y="559.5" ></text>
</g>
<g >
<title>multishard_combining_reader::fill_buffer (1 samples, 0.02%)</title><rect x="106.9" y="533" width="0.2" height="15.0" fill="rgb(252,38,32)" rx="2" ry="2" />
<text  x="109.88" y="543.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mQUOTED_NAME (1 samples, 0.02%)</title><rect x="31.3" y="565" width="0.2" height="15.0" fill="rgb(235,51,26)" rx="2" ry="2" />
<text  x="34.26" y="575.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="78.5" y="885" width="0.2" height="15.0" fill="rgb(218,97,19)" rx="2" ry="2" />
<text  x="81.46" y="895.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (7 samples, 0.13%)</title><rect x="207.1" y="501" width="1.6" height="15.0" fill="rgb(229,50,52)" rx="2" ry="2" />
<text  x="210.11" y="511.5" ></text>
</g>
<g >
<title>row::append_cell (2 samples, 0.04%)</title><rect x="1127.1" y="517" width="0.5" height="15.0" fill="rgb(250,159,18)" rx="2" ry="2" />
<text  x="1130.13" y="527.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (1 samples, 0.02%)</title><rect x="332.6" y="677" width="0.3" height="15.0" fill="rgb(223,58,24)" rx="2" ry="2" />
<text  x="335.63" y="687.5" ></text>
</g>
<g >
<title>row_cache::do_make_reader (3 samples, 0.06%)</title><rect x="540.9" y="645" width="0.7" height="15.0" fill="rgb(248,77,9)" rx="2" ry="2" />
<text  x="543.93" y="655.5" ></text>
</g>
<g >
<title>reader_permit::impl::~impl (9 samples, 0.17%)</title><rect x="125.4" y="741" width="2.1" height="15.0" fill="rgb(229,229,3)" rx="2" ry="2" />
<text  x="128.45" y="751.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.02%)</title><rect x="771.2" y="613" width="0.2" height="15.0" fill="rgb(238,67,50)" rx="2" ry="2" />
<text  x="774.16" y="623.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_wrapped_common&lt;false, seastar::future&lt;void&gt;, seastar::future&lt;void&gt;::handle_exception&lt;service::abstract_read_executor::execute (1 samples, 0.02%)</title><rect x="698.2" y="773" width="0.2" height="15.0" fill="rgb(212,115,27)" rx="2" ry="2" />
<text  x="701.22" y="783.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::~guard (1 samples, 0.02%)</title><rect x="200.4" y="581" width="0.2" height="15.0" fill="rgb(229,229,14)" rx="2" ry="2" />
<text  x="203.40" y="591.5" ></text>
</g>
<g >
<title>cql3::expr::possible_lhs_values (110 samples, 2.09%)</title><rect x="896.0" y="709" width="24.6" height="15.0" fill="rgb(223,91,23)" rx="2" ry="2" />
<text  x="899.01" y="719.5" >c..</text>
</g>
<g >
<title>utils::array_search_gt (1 samples, 0.02%)</title><rect x="492.2" y="597" width="0.2" height="15.0" fill="rgb(227,72,33)" rx="2" ry="2" />
<text  x="495.16" y="607.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt;::~_Variant_storage (1 samples, 0.02%)</title><rect x="681.4" y="741" width="0.3" height="15.0" fill="rgb(230,54,5)" rx="2" ry="2" />
<text  x="684.44" y="751.5" ></text>
</g>
<g >
<title>service::client_state::check_has_permission (4 samples, 0.08%)</title><rect x="76.2" y="709" width="0.9" height="15.0" fill="rgb(254,71,4)" rx="2" ry="2" />
<text  x="79.23" y="719.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.04%)</title><rect x="108.9" y="805" width="0.4" height="15.0" fill="rgb(215,110,54)" rx="2" ry="2" />
<text  x="111.89" y="815.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_M_reset (1 samples, 0.02%)</title><rect x="608.5" y="677" width="0.2" height="15.0" fill="rgb(216,124,14)" rx="2" ry="2" />
<text  x="611.50" y="687.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (9 samples, 0.17%)</title><rect x="857.7" y="645" width="2.1" height="15.0" fill="rgb(225,130,8)" rx="2" ry="2" />
<text  x="860.75" y="655.5" ></text>
</g>
<g >
<title>seastar::make_shared&lt;cql3::column_identifier_raw, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, bool&gt; (1 samples, 0.02%)</title><rect x="44.5" y="629" width="0.2" height="15.0" fill="rgb(210,41,25)" rx="2" ry="2" />
<text  x="47.46" y="639.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::clear (3 samples, 0.06%)</title><rect x="816.8" y="517" width="0.7" height="15.0" fill="rgb(212,185,13)" rx="2" ry="2" />
<text  x="819.80" y="527.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.02%)</title><rect x="20.5" y="517" width="0.2" height="15.0" fill="rgb(245,135,17)" rx="2" ry="2" />
<text  x="23.52" y="527.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::then_wrapped_common&lt;true, void, service::abstract_read_executor::make_data_requests (9 samples, 0.17%)</title><rect x="995.6" y="613" width="2.0" height="15.0" fill="rgb(207,112,41)" rx="2" ry="2" />
<text  x="998.57" y="623.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::release (1 samples, 0.02%)</title><rect x="53.6" y="517" width="0.3" height="15.0" fill="rgb(211,28,26)" rx="2" ry="2" />
<text  x="56.63" y="527.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="931.1" y="629" width="0.3" height="15.0" fill="rgb(217,171,6)" rx="2" ry="2" />
<text  x="934.13" y="639.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;std::tuple&lt;seastar::lw_shared_ptr&lt;query::result&gt;, cache_temperature&gt; &gt;::clear (1 samples, 0.02%)</title><rect x="723.1" y="805" width="0.2" height="15.0" fill="rgb(213,103,50)" rx="2" ry="2" />
<text  x="726.06" y="815.5" ></text>
</g>
<g >
<title>std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt;::emplace_back&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; (1 samples, 0.02%)</title><rect x="290.8" y="533" width="0.2" height="15.0" fill="rgb(246,5,29)" rx="2" ry="2" />
<text  x="293.79" y="543.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reserve&lt;logalloc::allocating_section::operator (1 samples, 0.02%)</title><rect x="78.9" y="741" width="0.2" height="15.0" fill="rgb(221,132,17)" rx="2" ry="2" />
<text  x="81.91" y="751.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (9 samples, 0.17%)</title><rect x="635.8" y="789" width="2.0" height="15.0" fill="rgb(237,222,44)" rx="2" ry="2" />
<text  x="638.80" y="799.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.02%)</title><rect x="46.7" y="501" width="0.2" height="15.0" fill="rgb(225,203,53)" rx="2" ry="2" />
<text  x="49.69" y="511.5" ></text>
</g>
<g >
<title>partition_key::legacy_tri_compare (1 samples, 0.02%)</title><rect x="10.4" y="661" width="0.3" height="15.0" fill="rgb(234,183,28)" rx="2" ry="2" />
<text  x="13.45" y="671.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="1128.5" y="469" width="0.2" height="15.0" fill="rgb(210,180,38)" rx="2" ry="2" />
<text  x="1131.47" y="479.5" ></text>
</g>
<g >
<title>abstract_type::without_reversed (1 samples, 0.02%)</title><rect x="902.9" y="581" width="0.3" height="15.0" fill="rgb(218,221,11)" rx="2" ry="2" />
<text  x="905.94" y="591.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::local (1 samples, 0.02%)</title><rect x="1118.0" y="709" width="0.2" height="15.0" fill="rgb(231,49,42)" rx="2" ry="2" />
<text  x="1120.96" y="719.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (4 samples, 0.08%)</title><rect x="811.4" y="533" width="0.9" height="15.0" fill="rgb(225,18,31)" rx="2" ry="2" />
<text  x="814.43" y="543.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::followPush (1 samples, 0.02%)</title><rect x="58.6" y="613" width="0.2" height="15.0" fill="rgb(244,185,23)" rx="2" ry="2" />
<text  x="61.55" y="623.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="38.9" y="597" width="0.2" height="15.0" fill="rgb(247,185,53)" rx="2" ry="2" />
<text  x="41.86" y="607.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, flat_mutation_reader::impl::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (3 samples, 0.06%)</title><rect x="693.3" y="693" width="0.7" height="15.0" fill="rgb(251,180,7)" rx="2" ry="2" />
<text  x="696.30" y="703.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::net::inet_address&gt;::operator (1 samples, 0.02%)</title><rect x="1151.7" y="709" width="0.3" height="15.0" fill="rgb(227,9,5)" rx="2" ry="2" />
<text  x="1154.74" y="719.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;boost::iterator_range&lt;mutation_fragment*&gt; &gt;::take_value (1 samples, 0.02%)</title><rect x="304.9" y="613" width="0.2" height="15.0" fill="rgb(241,61,38)" rx="2" ry="2" />
<text  x="307.89" y="623.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::make_data_requests (1 samples, 0.02%)</title><rect x="84.5" y="821" width="0.2" height="15.0" fill="rgb(206,229,8)" rx="2" ry="2" />
<text  x="87.51" y="831.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (4 samples, 0.08%)</title><rect x="46.7" y="549" width="0.9" height="15.0" fill="rgb(227,122,51)" rx="2" ry="2" />
<text  x="49.69" y="559.5" ></text>
</g>
<g >
<title>operator new (9 samples, 0.17%)</title><rect x="857.7" y="661" width="2.1" height="15.0" fill="rgb(232,125,7)" rx="2" ry="2" />
<text  x="860.75" y="671.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.02%)</title><rect x="78.5" y="837" width="0.2" height="15.0" fill="rgb(244,55,40)" rx="2" ry="2" />
<text  x="81.46" y="847.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (2 samples, 0.04%)</title><rect x="1026.0" y="469" width="0.4" height="15.0" fill="rgb(205,167,36)" rx="2" ry="2" />
<text  x="1029.00" y="479.5" ></text>
</g>
<g >
<title>seastar::do_until&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (428 samples, 8.12%)</title><rect x="200.2" y="597" width="95.7" height="15.0" fill="rgb(230,17,0)" rx="2" ry="2" />
<text  x="203.18" y="607.5" >seastar::do..</text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (1 samples, 0.02%)</title><rect x="311.6" y="645" width="0.2" height="15.0" fill="rgb(227,156,43)" rx="2" ry="2" />
<text  x="314.60" y="655.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="843.7" y="661" width="0.2" height="15.0" fill="rgb(246,131,28)" rx="2" ry="2" />
<text  x="846.65" y="671.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::partition_slice const, std::default_delete&lt;query::partition_slice const&gt; &gt;::~unique_ptr (13 samples, 0.25%)</title><rect x="605.8" y="725" width="2.9" height="15.0" fill="rgb(249,30,0)" rx="2" ry="2" />
<text  x="608.82" y="735.5" ></text>
</g>
<g >
<title>auth::resource::resource (7 samples, 0.13%)</title><rect x="776.8" y="677" width="1.5" height="15.0" fill="rgb(251,216,19)" rx="2" ry="2" />
<text  x="779.75" y="687.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="57.9" y="549" width="0.2" height="15.0" fill="rgb(234,135,54)" rx="2" ry="2" />
<text  x="60.88" y="559.5" ></text>
</g>
<g >
<title>mutation::set_clustered_cell (1 samples, 0.02%)</title><rect x="105.3" y="773" width="0.2" height="15.0" fill="rgb(237,157,25)" rx="2" ry="2" />
<text  x="108.31" y="783.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="70.9" y="581" width="0.2" height="15.0" fill="rgb(224,137,45)" rx="2" ry="2" />
<text  x="73.86" y="591.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="106.4" y="709" width="0.3" height="15.0" fill="rgb(209,194,44)" rx="2" ry="2" />
<text  x="109.43" y="719.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_M_reset (2 samples, 0.04%)</title><rect x="1101.6" y="677" width="0.5" height="15.0" fill="rgb(210,194,46)" rx="2" ry="2" />
<text  x="1104.62" y="687.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::clear (3 samples, 0.06%)</title><rect x="301.3" y="581" width="0.7" height="15.0" fill="rgb(227,213,21)" rx="2" ry="2" />
<text  x="304.31" y="591.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::end (1 samples, 0.02%)</title><rect x="50.3" y="581" width="0.2" height="15.0" fill="rgb(235,183,53)" rx="2" ry="2" />
<text  x="53.27" y="591.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;service::query_state, false&gt;::make&lt;service::client_state&amp;, service_permit&gt; (5 samples, 0.09%)</title><rect x="848.1" y="725" width="1.1" height="15.0" fill="rgb(215,112,13)" rx="2" ry="2" />
<text  x="851.13" y="735.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (3 samples, 0.06%)</title><rect x="668.7" y="789" width="0.7" height="15.0" fill="rgb(211,66,42)" rx="2" ry="2" />
<text  x="671.69" y="799.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="38.9" y="565" width="0.2" height="15.0" fill="rgb(239,207,15)" rx="2" ry="2" />
<text  x="41.86" y="575.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (10 samples, 0.19%)</title><rect x="898.7" y="597" width="2.2" height="15.0" fill="rgb(249,31,4)" rx="2" ry="2" />
<text  x="901.69" y="607.5" ></text>
</g>
<g >
<title>operator delete (5 samples, 0.09%)</title><rect x="93.7" y="773" width="1.1" height="15.0" fill="rgb(217,16,37)" rx="2" ry="2" />
<text  x="96.68" y="783.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (10 samples, 0.19%)</title><rect x="798.2" y="501" width="2.3" height="15.0" fill="rgb(216,116,5)" rx="2" ry="2" />
<text  x="801.23" y="511.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;cql3::expr::untyped_constant, void, void, cql3::expr::untyped_constant, void&gt; (1 samples, 0.02%)</title><rect x="59.2" y="565" width="0.2" height="15.0" fill="rgb(249,87,37)" rx="2" ry="2" />
<text  x="62.22" y="575.5" ></text>
</g>
<g >
<title>schema::partition_key_size (1 samples, 0.02%)</title><rect x="940.1" y="709" width="0.2" height="15.0" fill="rgb(209,89,1)" rx="2" ry="2" />
<text  x="943.08" y="719.5" ></text>
</g>
<g >
<title>db::view::stats::stats (1 samples, 0.02%)</title><rect x="108.4" y="725" width="0.3" height="15.0" fill="rgb(253,84,47)" rx="2" ry="2" />
<text  x="111.45" y="735.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (1 samples, 0.02%)</title><rect x="840.5" y="677" width="0.2" height="15.0" fill="rgb(231,125,13)" rx="2" ry="2" />
<text  x="843.52" y="687.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (1 samples, 0.02%)</title><rect x="697.6" y="773" width="0.2" height="15.0" fill="rgb(234,202,8)" rx="2" ry="2" />
<text  x="700.55" y="783.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit_slot&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::memory_usage&lt;row::external_memory_usage (2 samples, 0.04%)</title><rect x="259.0" y="437" width="0.5" height="15.0" fill="rgb(221,2,27)" rx="2" ry="2" />
<text  x="262.02" y="447.5" ></text>
</g>
<g >
<title>atomic_cell_or_collection::copy (64 samples, 1.21%)</title><rect x="230.4" y="421" width="14.3" height="15.0" fill="rgb(223,42,12)" rx="2" ry="2" />
<text  x="233.38" y="431.5" ></text>
</g>
<g >
<title>mutation_partition::empty (1 samples, 0.02%)</title><rect x="106.2" y="709" width="0.2" height="15.0" fill="rgb(247,163,9)" rx="2" ry="2" />
<text  x="109.21" y="719.5" ></text>
</g>
<g >
<title>std::__detail::_List_node_header::_List_node_header (1 samples, 0.02%)</title><rect x="475.6" y="581" width="0.2" height="15.0" fill="rgb(243,179,11)" rx="2" ry="2" />
<text  x="478.60" y="591.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::trivial_direct_move&lt;8ul&gt; (3 samples, 0.06%)</title><rect x="992.7" y="549" width="0.6" height="15.0" fill="rgb(215,7,10)" rx="2" ry="2" />
<text  x="995.66" y="559.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_reserve_map_at_back (1 samples, 0.02%)</title><rect x="24.3" y="549" width="0.2" height="15.0" fill="rgb(254,123,40)" rx="2" ry="2" />
<text  x="27.32" y="559.5" ></text>
</g>
<g >
<title>seastar::chunked_fifo&lt;seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::entry, 128ul&gt;::emplace_back&lt;reader_concurrency_semaphore::entry, seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;&amp;, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;&amp;&gt; (20 samples, 0.38%)</title><rect x="1022.4" y="485" width="4.5" height="15.0" fill="rgb(253,209,47)" rx="2" ry="2" />
<text  x="1025.42" y="495.5" ></text>
</g>
<g >
<title>service::storage_proxy::remove_response_handler_entry (2 samples, 0.04%)</title><rect x="719.9" y="773" width="0.5" height="15.0" fill="rgb(230,161,46)" rx="2" ry="2" />
<text  x="722.92" y="783.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.08%)</title><rect x="860.4" y="741" width="0.9" height="15.0" fill="rgb(221,45,39)" rx="2" ry="2" />
<text  x="863.43" y="751.5" ></text>
</g>
<g >
<title>write_fragmented&lt;managed_bytes_basic_view&lt; (2 samples, 0.04%)</title><rect x="936.7" y="645" width="0.5" height="15.0" fill="rgb(213,54,23)" rx="2" ry="2" />
<text  x="939.73" y="655.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;service::digest_read_resolver, false&gt;::make&lt;seastar::lw_shared_ptr&lt;schema const&gt;&amp;, db::consistency_level&amp;, unsigned long&amp;, unsigned long, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;&amp;&gt; (42 samples, 0.80%)</title><rect x="984.6" y="645" width="9.4" height="15.0" fill="rgb(242,128,41)" rx="2" ry="2" />
<text  x="987.61" y="655.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (2 samples, 0.04%)</title><rect x="1091.8" y="661" width="0.4" height="15.0" fill="rgb(239,165,19)" rx="2" ry="2" />
<text  x="1094.78" y="671.5" ></text>
</g>
<g >
<title>boost::iterators::filter_iterator&lt;mutation_partition::non_dummy_rows (1 samples, 0.02%)</title><rect x="1134.5" y="453" width="0.2" height="15.0" fill="rgb(252,55,42)" rx="2" ry="2" />
<text  x="1137.51" y="463.5" ></text>
</g>
<g >
<title>cql3::expr::possible_lhs_values (2 samples, 0.04%)</title><rect x="871.6" y="661" width="0.5" height="15.0" fill="rgb(222,119,9)" rx="2" ry="2" />
<text  x="874.62" y="671.5" ></text>
</g>
<g >
<title>service::storage_service::mutate_token_metadata (1 samples, 0.02%)</title><rect x="16.7" y="757" width="0.2" height="15.0" fill="rgb(235,47,10)" rx="2" ry="2" />
<text  x="19.71" y="767.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::query_options, db::consistency_level&amp;, std::vector&lt;cql3::raw_value, std::allocator&lt;cql3::raw_value&gt; &gt;, cql3::query_options::specific_options&gt; (29 samples, 0.55%)</title><rect x="855.1" y="757" width="6.5" height="15.0" fill="rgb(246,188,13)" rx="2" ry="2" />
<text  x="858.06" y="767.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (3 samples, 0.06%)</title><rect x="51.8" y="485" width="0.7" height="15.0" fill="rgb(217,62,13)" rx="2" ry="2" />
<text  x="54.84" y="495.5" ></text>
</g>
<g >
<title>std::hash&lt;std::basic_string_view&lt;signed char, std::char_traits&lt;signed char&gt; &gt; &gt;::operator (14 samples, 0.27%)</title><rect x="757.5" y="581" width="3.1" height="15.0" fill="rgb(250,79,40)" rx="2" ry="2" />
<text  x="760.51" y="591.5" ></text>
</g>
<g >
<title>logalloc::segment::record_alloc (1 samples, 0.02%)</title><rect x="1126.5" y="453" width="0.2" height="15.0" fill="rgb(237,226,30)" rx="2" ry="2" />
<text  x="1129.46" y="463.5" ></text>
</g>
<g >
<title>ser::idl::serializers::internal::vector_serializer&lt;utils::chunked_vector&lt;ser::deletable_row_view, 131072ul&gt; &gt;::read&lt;seastar::simple_memory_input_stream&gt; (1 samples, 0.02%)</title><rect x="1128.2" y="517" width="0.3" height="15.0" fill="rgb(245,74,29)" rx="2" ry="2" />
<text  x="1131.25" y="527.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.02%)</title><rect x="42.4" y="597" width="0.3" height="15.0" fill="rgb(207,177,23)" rx="2" ry="2" />
<text  x="45.44" y="607.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::clear (1 samples, 0.02%)</title><rect x="617.9" y="741" width="0.2" height="15.0" fill="rgb(215,6,36)" rx="2" ry="2" />
<text  x="620.90" y="751.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.02%)</title><rect x="20.5" y="501" width="0.2" height="15.0" fill="rgb(211,189,33)" rx="2" ry="2" />
<text  x="23.52" y="511.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::lsa_partition_reader::pop_clustering_row (1 samples, 0.02%)</title><rect x="80.3" y="597" width="0.2" height="15.0" fill="rgb(237,23,31)" rx="2" ry="2" />
<text  x="83.25" y="607.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::with_permit (1 samples, 0.02%)</title><rect x="1036.7" y="565" width="0.3" height="15.0" fill="rgb(205,13,47)" rx="2" ry="2" />
<text  x="1039.74" y="575.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (1 samples, 0.02%)</title><rect x="105.3" y="709" width="0.2" height="15.0" fill="rgb(223,139,9)" rx="2" ry="2" />
<text  x="108.31" y="719.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, seastar::sync_directory (1 samples, 0.02%)</title><rect x="696.0" y="805" width="0.2" height="15.0" fill="rgb(238,229,20)" rx="2" ry="2" />
<text  x="698.98" y="815.5" ></text>
</g>
<g >
<title>fmt::v7::detail::buffer&lt;char&gt;::push_back (1 samples, 0.02%)</title><rect x="18.3" y="773" width="0.2" height="15.0" fill="rgb(209,221,3)" rx="2" ry="2" />
<text  x="21.28" y="783.5" ></text>
</g>
<g >
<title>operator new (7 samples, 0.13%)</title><rect x="1015.9" y="549" width="1.6" height="15.0" fill="rgb(207,96,49)" rx="2" ry="2" />
<text  x="1018.93" y="559.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.04%)</title><rect x="152.7" y="725" width="0.5" height="15.0" fill="rgb(221,86,7)" rx="2" ry="2" />
<text  x="155.75" y="735.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::entry::entry (8 samples, 0.15%)</title><rect x="1024.2" y="469" width="1.8" height="15.0" fill="rgb(253,183,23)" rx="2" ry="2" />
<text  x="1027.21" y="479.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="40.7" y="581" width="0.2" height="15.0" fill="rgb(208,133,49)" rx="2" ry="2" />
<text  x="43.65" y="591.5" ></text>
</g>
<g >
<title>reader_permit::consume (1 samples, 0.02%)</title><rect x="210.0" y="485" width="0.2" height="15.0" fill="rgb(224,125,4)" rx="2" ry="2" />
<text  x="213.02" y="495.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (2 samples, 0.04%)</title><rect x="38.4" y="533" width="0.5" height="15.0" fill="rgb(230,181,16)" rx="2" ry="2" />
<text  x="41.41" y="543.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (32 samples, 0.61%)</title><rect x="753.7" y="661" width="7.2" height="15.0" fill="rgb(240,121,50)" rx="2" ry="2" />
<text  x="756.71" y="671.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (2,315 samples, 43.89%)</title><rect x="116.7" y="773" width="518.0" height="15.0" fill="rgb(240,44,8)" rx="2" ry="2" />
<text  x="119.72" y="783.5" >seastar::noncopyable_function&lt;seastar::future&lt;void&gt; </text>
</g>
<g >
<title>dht::ring_position::as_decorated_key (5 samples, 0.09%)</title><rect x="481.6" y="629" width="1.2" height="15.0" fill="rgb(215,74,30)" rx="2" ry="2" />
<text  x="484.64" y="639.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="818.4" y="581" width="0.2" height="15.0" fill="rgb(218,88,38)" rx="2" ry="2" />
<text  x="821.37" y="591.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (2 samples, 0.04%)</title><rect x="684.1" y="789" width="0.5" height="15.0" fill="rgb(224,171,39)" rx="2" ry="2" />
<text  x="687.13" y="799.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (2 samples, 0.04%)</title><rect x="868.7" y="757" width="0.5" height="15.0" fill="rgb(211,55,38)" rx="2" ry="2" />
<text  x="871.71" y="767.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::sharded_parallel_for_each (1 samples, 0.02%)</title><rect x="16.5" y="757" width="0.2" height="15.0" fill="rgb(223,76,41)" rx="2" ry="2" />
<text  x="19.49" y="767.5" ></text>
</g>
<g >
<title>ser::after_qr_cell__timestamp&lt;bytes_ostream&gt;::skip_expiry (8 samples, 0.15%)</title><rect x="388.8" y="469" width="1.8" height="15.0" fill="rgb(229,194,10)" rx="2" ry="2" />
<text  x="391.79" y="479.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.02%)</title><rect x="38.6" y="437" width="0.3" height="15.0" fill="rgb(230,68,42)" rx="2" ry="2" />
<text  x="41.64" y="447.5" ></text>
</g>
<g >
<title>flush_reader::fill_buffer (8 samples, 0.15%)</title><rect x="78.9" y="789" width="1.8" height="15.0" fill="rgb(223,200,49)" rx="2" ry="2" />
<text  x="81.91" y="799.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (3 samples, 0.06%)</title><rect x="39.3" y="533" width="0.7" height="15.0" fill="rgb(206,51,41)" rx="2" ry="2" />
<text  x="42.31" y="543.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::at (3 samples, 0.06%)</title><rect x="1049.5" y="629" width="0.7" height="15.0" fill="rgb(212,226,12)" rx="2" ry="2" />
<text  x="1052.49" y="639.5" ></text>
</g>
<g >
<title>frozen_mutation::frozen_mutation (17 samples, 0.32%)</title><rect x="1133.6" y="485" width="3.8" height="15.0" fill="rgb(228,209,51)" rx="2" ry="2" />
<text  x="1136.62" y="495.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="442.7" y="677" width="0.2" height="15.0" fill="rgb(247,57,34)" rx="2" ry="2" />
<text  x="445.71" y="687.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::storage_proxy&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="1056.0" y="645" width="0.2" height="15.0" fill="rgb(230,133,54)" rx="2" ry="2" />
<text  x="1058.98" y="655.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (2 samples, 0.04%)</title><rect x="38.4" y="517" width="0.5" height="15.0" fill="rgb(209,149,28)" rx="2" ry="2" />
<text  x="41.41" y="527.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_data_requests (42 samples, 0.80%)</title><rect x="708.7" y="773" width="9.4" height="15.0" fill="rgb(214,170,32)" rx="2" ry="2" />
<text  x="711.74" y="783.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::push_mutation_fragment&lt;schema const&amp;, reader_permit&amp;, partition_start&gt; (1 samples, 0.02%)</title><rect x="514.1" y="565" width="0.2" height="15.0" fill="rgb(234,102,27)" rx="2" ry="2" />
<text  x="517.08" y="575.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (7 samples, 0.13%)</title><rect x="1035.2" y="533" width="1.5" height="15.0" fill="rgb(228,89,47)" rx="2" ry="2" />
<text  x="1038.17" y="543.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::create_function_statement, std::default_delete&lt;cql3::statements::create_function_statement&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="61.5" y="677" width="0.2" height="15.0" fill="rgb(244,121,4)" rx="2" ry="2" />
<text  x="64.46" y="687.5" ></text>
</g>
<g >
<title>row_cache::do_update (2 samples, 0.04%)</title><rect x="695.3" y="709" width="0.5" height="15.0" fill="rgb(208,89,47)" rx="2" ry="2" />
<text  x="698.31" y="719.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (1 samples, 0.02%)</title><rect x="40.9" y="597" width="0.2" height="15.0" fill="rgb(241,61,23)" rx="2" ry="2" />
<text  x="43.88" y="607.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::get_at (1 samples, 0.02%)</title><rect x="366.0" y="485" width="0.2" height="15.0" fill="rgb(221,81,10)" rx="2" ry="2" />
<text  x="368.97" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, unsigned int, std::_Identity&lt;unsigned int&gt;, std::less&lt;unsigned int&gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;unsigned int&gt; &gt;::find (3 samples, 0.06%)</title><rect x="36.2" y="597" width="0.6" height="15.0" fill="rgb(251,43,24)" rx="2" ry="2" />
<text  x="39.18" y="607.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (2 samples, 0.04%)</title><rect x="447.0" y="709" width="0.4" height="15.0" fill="rgb(227,60,19)" rx="2" ry="2" />
<text  x="449.96" y="719.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::find&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (14 samples, 0.27%)</title><rect x="769.6" y="661" width="3.1" height="15.0" fill="rgb(228,169,25)" rx="2" ry="2" />
<text  x="772.59" y="671.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (2 samples, 0.04%)</title><rect x="40.4" y="629" width="0.5" height="15.0" fill="rgb(226,44,2)" rx="2" ry="2" />
<text  x="43.43" y="639.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (6 samples, 0.11%)</title><rect x="1089.8" y="661" width="1.3" height="15.0" fill="rgb(216,153,38)" rx="2" ry="2" />
<text  x="1092.76" y="671.5" ></text>
</g>
<g >
<title>ser::qr_partition__rows&lt;bytes_ostream&gt;::add (2 samples, 0.04%)</title><rect x="373.6" y="485" width="0.4" height="15.0" fill="rgb(209,187,5)" rx="2" ry="2" />
<text  x="376.58" y="495.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;void&gt;::satisfy_with_result_of&lt;seastar::future&lt;service::digest_read_result&gt;::then_wrapped_nrvo&lt;void, service::abstract_read_executor::execute (25 samples, 0.47%)</title><rect x="697.3" y="789" width="5.6" height="15.0" fill="rgb(248,39,33)" rx="2" ry="2" />
<text  x="700.33" y="799.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::emplace&lt;atomic_cell_or_collection, seastar::optimized_optional&lt;cell_hash&gt; &gt; (1 samples, 0.02%)</title><rect x="875.4" y="581" width="0.2" height="15.0" fill="rgb(252,97,37)" rx="2" ry="2" />
<text  x="878.42" y="591.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::process_where_clause (1 samples, 0.02%)</title><rect x="66.8" y="741" width="0.3" height="15.0" fill="rgb(209,17,38)" rx="2" ry="2" />
<text  x="69.83" y="751.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_Optional_payload_base (1 samples, 0.02%)</title><rect x="1104.8" y="645" width="0.2" height="15.0" fill="rgb(209,99,27)" rx="2" ry="2" />
<text  x="1107.76" y="655.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.09%)</title><rect x="962.9" y="677" width="1.1" height="15.0" fill="rgb(233,42,26)" rx="2" ry="2" />
<text  x="965.90" y="687.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::term (24 samples, 0.46%)</title><rect x="50.5" y="613" width="5.4" height="15.0" fill="rgb(236,21,0)" rx="2" ry="2" />
<text  x="53.50" y="623.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="79.8" y="613" width="0.2" height="15.0" fill="rgb(208,131,2)" rx="2" ry="2" />
<text  x="82.81" y="623.5" ></text>
</g>
<g >
<title>locator::effective_replication_map::get_natural_endpoints_without_node_being_replaced (1 samples, 0.02%)</title><rect x="1137.6" y="501" width="0.3" height="15.0" fill="rgb(245,125,30)" rx="2" ry="2" />
<text  x="1140.65" y="511.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::clear (2 samples, 0.04%)</title><rect x="468.2" y="581" width="0.5" height="15.0" fill="rgb(230,107,22)" rx="2" ry="2" />
<text  x="471.22" y="591.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.02%)</title><rect x="20.1" y="565" width="0.2" height="15.0" fill="rgb(206,194,23)" rx="2" ry="2" />
<text  x="23.07" y="575.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::create_service_level_statement, std::default_delete&lt;cql3::statements::create_service_level_statement&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="61.7" y="677" width="0.2" height="15.0" fill="rgb(243,43,20)" rx="2" ry="2" />
<text  x="64.68" y="687.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::create_clustering_ranges (2 samples, 0.04%)</title><rect x="873.0" y="693" width="0.4" height="15.0" fill="rgb(217,25,46)" rx="2" ry="2" />
<text  x="875.96" y="703.5" ></text>
</g>
<g >
<title>multishard_combining_reader::handle_empty_reader_buffer (1 samples, 0.02%)</title><rect x="106.7" y="549" width="0.2" height="15.0" fill="rgb(227,148,25)" rx="2" ry="2" />
<text  x="109.66" y="559.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="594.9" y="645" width="0.2" height="15.0" fill="rgb(226,100,27)" rx="2" ry="2" />
<text  x="597.85" y="655.5" ></text>
</g>
<g >
<title>fmt::v7::detail::parse_replacement_field&lt;char, fmt::v7::detail::format_handler&lt;fmt::v7::detail::buffer_appender&lt;char&gt;, char, fmt::v7::basic_format_context&lt;fmt::v7::detail::buffer_appender&lt;char&gt;, char&gt; &gt;&amp;&gt; (1 samples, 0.02%)</title><rect x="78.2" y="917" width="0.3" height="15.0" fill="rgb(243,47,24)" rx="2" ry="2" />
<text  x="81.24" y="927.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="58.1" y="549" width="0.2" height="15.0" fill="rgb(223,100,31)" rx="2" ry="2" />
<text  x="61.10" y="559.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (2 samples, 0.04%)</title><rect x="694.0" y="693" width="0.4" height="15.0" fill="rgb(242,6,34)" rx="2" ry="2" />
<text  x="696.97" y="703.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::set_value&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; (2 samples, 0.04%)</title><rect x="619.2" y="741" width="0.5" height="15.0" fill="rgb(249,64,27)" rx="2" ry="2" />
<text  x="622.24" y="751.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::do_flush (1,096 samples, 20.78%)</title><rect x="876.8" y="789" width="245.2" height="15.0" fill="rgb(219,31,34)" rx="2" ry="2" />
<text  x="879.77" y="799.5" >seastar::concrete_execution_stag..</text>
</g>
<g >
<title>std::optional&lt;clustering_key_prefix&gt;::operator=&lt;clustering_key_prefix const&amp;&gt; (2 samples, 0.04%)</title><rect x="274.7" y="517" width="0.4" height="15.0" fill="rgb(242,177,48)" rx="2" ry="2" />
<text  x="277.68" y="527.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;clustering_key_prefix&gt;::_M_reset (2 samples, 0.04%)</title><rect x="623.3" y="741" width="0.4" height="15.0" fill="rgb(210,26,46)" rx="2" ry="2" />
<text  x="626.27" y="751.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;mutation_reader_merger::reader_and_last_fragment_kind*, mutation_reader_merger::prepare_next (74 samples, 1.40%)</title><rect x="183.0" y="597" width="16.5" height="15.0" fill="rgb(238,166,5)" rx="2" ry="2" />
<text  x="185.95" y="607.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::operator= (4 samples, 0.08%)</title><rect x="881.5" y="757" width="0.9" height="15.0" fill="rgb(224,173,39)" rx="2" ry="2" />
<text  x="884.46" y="767.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::needs_post_query_ordering (1 samples, 0.02%)</title><rect x="952.6" y="709" width="0.2" height="15.0" fill="rgb(226,11,5)" rx="2" ry="2" />
<text  x="955.61" y="719.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::unique_ptr (2 samples, 0.04%)</title><rect x="56.5" y="565" width="0.5" height="15.0" fill="rgb(206,92,2)" rx="2" ry="2" />
<text  x="59.54" y="575.5" ></text>
</g>
<g >
<title>ser::serializer&lt;clustering_key_prefix&gt;::read&lt;seastar::simple_memory_input_stream&gt; (1 samples, 0.02%)</title><rect x="1127.8" y="517" width="0.2" height="15.0" fill="rgb(231,184,38)" rx="2" ry="2" />
<text  x="1130.80" y="527.5" ></text>
</g>
<g >
<title>utils::tuple_hash::operator (3 samples, 0.06%)</title><rect x="772.1" y="645" width="0.6" height="15.0" fill="rgb(247,67,25)" rx="2" ry="2" />
<text  x="775.06" y="655.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (1 samples, 0.02%)</title><rect x="875.0" y="581" width="0.2" height="15.0" fill="rgb(213,88,38)" rx="2" ry="2" />
<text  x="877.98" y="591.5" ></text>
</g>
<g >
<title>free (1 samples, 0.02%)</title><rect x="719.9" y="725" width="0.2" height="15.0" fill="rgb(235,121,54)" rx="2" ry="2" />
<text  x="722.92" y="735.5" ></text>
</g>
<g >
<title>antlr3::IntStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::_LA (4 samples, 0.08%)</title><rect x="27.0" y="565" width="0.9" height="15.0" fill="rgb(248,24,21)" rx="2" ry="2" />
<text  x="30.00" y="575.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::emplace_back&lt;unsigned int const&amp;&gt; (5 samples, 0.09%)</title><rect x="1108.3" y="709" width="1.2" height="15.0" fill="rgb(243,17,3)" rx="2" ry="2" />
<text  x="1111.34" y="719.5" ></text>
</g>
<g >
<title>ser::deserialize&lt;seastar::simple_memory_input_stream&gt; (1 samples, 0.02%)</title><rect x="106.0" y="725" width="0.2" height="15.0" fill="rgb(210,43,50)" rx="2" ry="2" />
<text  x="108.98" y="735.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (1 samples, 0.02%)</title><rect x="1089.5" y="661" width="0.3" height="15.0" fill="rgb(233,22,29)" rx="2" ry="2" />
<text  x="1092.54" y="671.5" ></text>
</g>
<g >
<title>std::queue&lt;reader_concurrency_semaphore::entry, seastar::circular_buffer&lt;reader_concurrency_semaphore::entry, std::allocator&lt;reader_concurrency_semaphore::entry&gt; &gt; &gt;::pop (4 samples, 0.08%)</title><rect x="638.3" y="789" width="0.9" height="15.0" fill="rgb(238,204,14)" rx="2" ry="2" />
<text  x="641.26" y="799.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::read_next (272 samples, 5.16%)</title><rect x="216.3" y="549" width="60.8" height="15.0" fill="rgb(228,86,40)" rx="2" ry="2" />
<text  x="219.29" y="559.5" >partit..</text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="79.1" y="613" width="0.3" height="15.0" fill="rgb(240,162,46)" rx="2" ry="2" />
<text  x="82.14" y="623.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (2 samples, 0.04%)</title><rect x="589.7" y="645" width="0.5" height="15.0" fill="rgb(206,192,18)" rx="2" ry="2" />
<text  x="592.71" y="655.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::iterator_at (1 samples, 0.02%)</title><rect x="1052.2" y="597" width="0.2" height="15.0" fill="rgb(239,100,26)" rx="2" ry="2" />
<text  x="1055.18" y="607.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::constant (1 samples, 0.02%)</title><rect x="59.4" y="597" width="0.3" height="15.0" fill="rgb(231,197,29)" rx="2" ry="2" />
<text  x="62.45" y="607.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (2 samples, 0.04%)</title><rect x="1114.2" y="693" width="0.4" height="15.0" fill="rgb(227,57,17)" rx="2" ry="2" />
<text  x="1117.15" y="703.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="56.5" y="485" width="0.3" height="15.0" fill="rgb(211,88,15)" rx="2" ry="2" />
<text  x="59.54" y="495.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::signal (1 samples, 0.02%)</title><rect x="425.5" y="517" width="0.2" height="15.0" fill="rgb(232,124,40)" rx="2" ry="2" />
<text  x="428.48" y="527.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::CommonToken (1 samples, 0.02%)</title><rect x="24.1" y="501" width="0.2" height="15.0" fill="rgb(232,123,40)" rx="2" ry="2" />
<text  x="27.10" y="511.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::set_urgent_state (1 samples, 0.02%)</title><rect x="649.9" y="789" width="0.2" height="15.0" fill="rgb(222,171,38)" rx="2" ry="2" />
<text  x="652.89" y="799.5" ></text>
</g>
<g >
<title>mutation_fragment::operator= (3 samples, 0.06%)</title><rect x="190.3" y="549" width="0.7" height="15.0" fill="rgb(211,217,14)" rx="2" ry="2" />
<text  x="193.33" y="559.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reserve&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (2 samples, 0.04%)</title><rect x="869.2" y="709" width="0.4" height="15.0" fill="rgb(236,211,4)" rx="2" ry="2" />
<text  x="872.16" y="719.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::maybe_decay_reserve (3 samples, 0.06%)</title><rect x="271.3" y="485" width="0.7" height="15.0" fill="rgb(215,29,8)" rx="2" ry="2" />
<text  x="274.33" y="495.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::statement_restrictions (15 samples, 0.28%)</title><rect x="68.8" y="709" width="3.4" height="15.0" fill="rgb(248,203,48)" rx="2" ry="2" />
<text  x="71.84" y="719.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reserve&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::partition_snapshot_flat_reader&lt;memtable&amp;&gt; (67 samples, 1.27%)</title><rect x="514.1" y="581" width="15.0" height="15.0" fill="rgb(248,30,27)" rx="2" ry="2" />
<text  x="517.08" y="591.5" ></text>
</g>
<g >
<title>seastar::internal::try_reap_events (1 samples, 0.02%)</title><rect x="1140.6" y="773" width="0.2" height="15.0" fill="rgb(226,8,38)" rx="2" ry="2" />
<text  x="1143.55" y="783.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (1 samples, 0.02%)</title><rect x="693.1" y="789" width="0.2" height="15.0" fill="rgb(205,126,46)" rx="2" ry="2" />
<text  x="696.08" y="799.5" ></text>
</g>
<g >
<title>seastar::promise&lt;void&gt;::promise (3 samples, 0.06%)</title><rect x="134.6" y="709" width="0.7" height="15.0" fill="rgb(245,107,29)" rx="2" ry="2" />
<text  x="137.62" y="719.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::~_Variant_storage (1 samples, 0.02%)</title><rect x="48.5" y="549" width="0.2" height="15.0" fill="rgb(207,210,37)" rx="2" ry="2" />
<text  x="51.48" y="559.5" ></text>
</g>
<g >
<title>operator delete (5 samples, 0.09%)</title><rect x="436.7" y="565" width="1.1" height="15.0" fill="rgb(231,68,46)" rx="2" ry="2" />
<text  x="439.67" y="575.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.02%)</title><rect x="44.2" y="421" width="0.3" height="15.0" fill="rgb(249,123,19)" rx="2" ry="2" />
<text  x="47.23" y="431.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::term (6 samples, 0.11%)</title><rect x="58.3" y="629" width="1.4" height="15.0" fill="rgb(228,10,24)" rx="2" ry="2" />
<text  x="61.33" y="639.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::on_new_range (1 samples, 0.02%)</title><rect x="80.5" y="677" width="0.2" height="15.0" fill="rgb(243,218,42)" rx="2" ry="2" />
<text  x="83.48" y="687.5" ></text>
</g>
<g >
<title>fmt::v7::detail::buffer&lt;char&gt;::try_resize (1 samples, 0.02%)</title><rect x="18.1" y="741" width="0.2" height="15.0" fill="rgb(234,37,32)" rx="2" ry="2" />
<text  x="21.05" y="751.5" ></text>
</g>
<g >
<title>seastar::internal::future_base::future_base (2 samples, 0.04%)</title><rect x="784.8" y="645" width="0.5" height="15.0" fill="rgb(241,207,6)" rx="2" ry="2" />
<text  x="787.81" y="655.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::execute (308 samples, 5.84%)</title><rect x="977.9" y="661" width="68.9" height="15.0" fill="rgb(211,216,11)" rx="2" ry="2" />
<text  x="980.90" y="671.5" >service..</text>
</g>
<g >
<title>seastar::memory::allocate (9 samples, 0.17%)</title><rect x="984.8" y="613" width="2.0" height="15.0" fill="rgb(206,185,20)" rx="2" ry="2" />
<text  x="987.83" y="623.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.02%)</title><rect x="24.8" y="517" width="0.2" height="15.0" fill="rgb(230,155,52)" rx="2" ry="2" />
<text  x="27.77" y="527.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (1 samples, 0.02%)</title><rect x="820.6" y="565" width="0.2" height="15.0" fill="rgb(224,67,23)" rx="2" ry="2" />
<text  x="823.61" y="575.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (1 samples, 0.02%)</title><rect x="77.3" y="805" width="0.3" height="15.0" fill="rgb(240,96,38)" rx="2" ry="2" />
<text  x="80.35" y="815.5" ></text>
</g>
<g >
<title>nonwrapping_interval&lt;dht::ring_position&gt;::make_singular (5 samples, 0.09%)</title><rect x="932.9" y="693" width="1.1" height="15.0" fill="rgb(220,142,29)" rx="2" ry="2" />
<text  x="935.92" y="703.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::at (5 samples, 0.09%)</title><rect x="1014.8" y="533" width="1.1" height="15.0" fill="rgb(223,29,23)" rx="2" ry="2" />
<text  x="1017.81" y="543.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::push_back (1 samples, 0.02%)</title><rect x="58.6" y="581" width="0.2" height="15.0" fill="rgb(231,19,35)" rx="2" ry="2" />
<text  x="61.55" y="591.5" ></text>
</g>
<g >
<title>__tls_init (1 samples, 0.02%)</title><rect x="503.1" y="613" width="0.2" height="15.0" fill="rgb(209,20,18)" rx="2" ry="2" />
<text  x="506.12" y="623.5" ></text>
</g>
<g >
<title>abstract_type::without_reversed (2 samples, 0.04%)</title><rect x="894.7" y="709" width="0.4" height="15.0" fill="rgb(210,31,24)" rx="2" ry="2" />
<text  x="897.66" y="719.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (1 samples, 0.02%)</title><rect x="634.5" y="741" width="0.2" height="15.0" fill="rgb(227,97,41)" rx="2" ry="2" />
<text  x="637.46" y="751.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (5 samples, 0.09%)</title><rect x="43.3" y="517" width="1.2" height="15.0" fill="rgb(205,79,13)" rx="2" ry="2" />
<text  x="46.34" y="527.5" ></text>
</g>
<g >
<title>flat_mutation_reader::peek (2 samples, 0.04%)</title><rect x="326.8" y="677" width="0.5" height="15.0" fill="rgb(237,156,31)" rx="2" ry="2" />
<text  x="329.81" y="687.5" ></text>
</g>
<g >
<title>std::apply&lt;auth::get_permissions (106 samples, 2.01%)</title><rect x="794.2" y="597" width="23.7" height="15.0" fill="rgb(225,44,38)" rx="2" ry="2" />
<text  x="797.21" y="607.5" >s..</text>
</g>
<g >
<title>service::abstract_read_resolver::done (2 samples, 0.04%)</title><rect x="702.2" y="757" width="0.5" height="15.0" fill="rgb(250,218,14)" rx="2" ry="2" />
<text  x="705.25" y="767.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;4ul, cql3::expr::untyped_constant&gt; (1 samples, 0.02%)</title><rect x="53.4" y="309" width="0.2" height="15.0" fill="rgb(239,40,21)" rx="2" ry="2" />
<text  x="56.41" y="319.5" ></text>
</g>
<g >
<title>reader_permit::set_max_result_size (2 samples, 0.04%)</title><rect x="127.7" y="757" width="0.4" height="15.0" fill="rgb(235,97,34)" rx="2" ry="2" />
<text  x="130.69" y="767.5" ></text>
</g>
<g >
<title>antlr3::Lexer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchc (1 samples, 0.02%)</title><rect x="31.3" y="549" width="0.2" height="15.0" fill="rgb(226,121,44)" rx="2" ry="2" />
<text  x="34.26" y="559.5" ></text>
</g>
<g >
<title>double_decker&lt;long, cache_entry, dht::raw_token_less_comparator, dht::ring_position_comparator, 16,  (10 samples, 0.19%)</title><rect x="544.5" y="613" width="2.3" height="15.0" fill="rgb(249,50,10)" rx="2" ry="2" />
<text  x="547.51" y="623.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::restrictions::partition_key_restrictions&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="71.5" y="693" width="0.3" height="15.0" fill="rgb(237,39,6)" rx="2" ry="2" />
<text  x="74.53" y="703.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (2 samples, 0.04%)</title><rect x="15.8" y="821" width="0.5" height="15.0" fill="rgb(239,5,2)" rx="2" ry="2" />
<text  x="18.82" y="831.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (1 samples, 0.02%)</title><rect x="778.5" y="661" width="0.3" height="15.0" fill="rgb(250,119,16)" rx="2" ry="2" />
<text  x="781.54" y="671.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="388.6" y="469" width="0.2" height="15.0" fill="rgb(241,194,27)" rx="2" ry="2" />
<text  x="391.57" y="479.5" ></text>
</g>
<g >
<title>sstables::mc::writer::write_cells (2 samples, 0.04%)</title><rect x="81.1" y="693" width="0.5" height="15.0" fill="rgb(249,60,42)" rx="2" ry="2" />
<text  x="84.15" y="703.5" ></text>
</g>
<g >
<title>seastar::promise&lt;void&gt;::promise (2 samples, 0.04%)</title><rect x="1025.6" y="437" width="0.4" height="15.0" fill="rgb(228,19,43)" rx="2" ry="2" />
<text  x="1028.55" y="447.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation::data, std::default_delete&lt;mutation::data&gt; &gt;::~unique_ptr (5 samples, 0.09%)</title><rect x="1138.3" y="629" width="1.1" height="15.0" fill="rgb(228,101,45)" rx="2" ry="2" />
<text  x="1141.32" y="639.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::~deque (9 samples, 0.17%)</title><rect x="627.5" y="709" width="2.0" height="15.0" fill="rgb(214,18,52)" rx="2" ry="2" />
<text  x="630.52" y="719.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (1 samples, 0.02%)</title><rect x="1114.4" y="677" width="0.2" height="15.0" fill="rgb(221,99,23)" rx="2" ry="2" />
<text  x="1117.38" y="687.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (3 samples, 0.06%)</title><rect x="51.8" y="501" width="0.7" height="15.0" fill="rgb(233,158,8)" rx="2" ry="2" />
<text  x="54.84" y="511.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::operator= (2 samples, 0.04%)</title><rect x="837.6" y="709" width="0.5" height="15.0" fill="rgb(251,38,25)" rx="2" ry="2" />
<text  x="840.61" y="719.5" ></text>
</g>
<g >
<title>free (1 samples, 0.02%)</title><rect x="430.6" y="501" width="0.3" height="15.0" fill="rgb(231,96,48)" rx="2" ry="2" />
<text  x="433.63" y="511.5" ></text>
</g>
<g >
<title>utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (1 samples, 0.02%)</title><rect x="800.2" y="469" width="0.3" height="15.0" fill="rgb(242,58,11)" rx="2" ry="2" />
<text  x="803.25" y="479.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::emplace_back&lt;mutation_reader_merger::reader_and_fragment&gt; (4 samples, 0.08%)</title><rect x="302.9" y="597" width="0.9" height="15.0" fill="rgb(247,102,23)" rx="2" ry="2" />
<text  x="305.87" y="607.5" ></text>
</g>
<g >
<title>single_node_cql_env::local_qp (2 samples, 0.04%)</title><rect x="842.3" y="741" width="0.5" height="15.0" fill="rgb(248,46,27)" rx="2" ry="2" />
<text  x="845.31" y="751.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (2 samples, 0.04%)</title><rect x="54.7" y="533" width="0.5" height="15.0" fill="rgb(250,53,37)" rx="2" ry="2" />
<text  x="57.75" y="543.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::visit&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (1 samples, 0.02%)</title><rect x="693.7" y="613" width="0.3" height="15.0" fill="rgb(232,143,7)" rx="2" ry="2" />
<text  x="696.75" y="623.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="107.8" y="533" width="0.2" height="15.0" fill="rgb(208,32,9)" rx="2" ry="2" />
<text  x="110.77" y="543.5" ></text>
</g>
<g >
<title>query::result_view::consume&lt;query::result_set_builder&amp;&gt; (1 samples, 0.02%)</title><rect x="108.2" y="645" width="0.2" height="15.0" fill="rgb(238,142,42)" rx="2" ry="2" />
<text  x="111.22" y="655.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::execute (1 samples, 0.02%)</title><rect x="964.7" y="645" width="0.2" height="15.0" fill="rgb(250,77,12)" rx="2" ry="2" />
<text  x="967.69" y="655.5" ></text>
</g>
<g >
<title>global_schema_ptr::global_schema_ptr (8 samples, 0.15%)</title><rect x="1005.2" y="581" width="1.8" height="15.0" fill="rgb(211,69,40)" rx="2" ry="2" />
<text  x="1008.19" y="591.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::close (1 samples, 0.02%)</title><rect x="601.1" y="709" width="0.2" height="15.0" fill="rgb(235,164,3)" rx="2" ry="2" />
<text  x="604.12" y="719.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;schema const&gt;::operator= (3 samples, 0.06%)</title><rect x="1006.3" y="565" width="0.7" height="15.0" fill="rgb(219,89,43)" rx="2" ry="2" />
<text  x="1009.31" y="575.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::clear (1 samples, 0.02%)</title><rect x="675.2" y="773" width="0.2" height="15.0" fill="rgb(234,217,34)" rx="2" ry="2" />
<text  x="678.18" y="783.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_rehash_aux (3 samples, 0.06%)</title><rect x="1154.6" y="725" width="0.7" height="15.0" fill="rgb(219,21,45)" rx="2" ry="2" />
<text  x="1157.65" y="735.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;gms::inet_address, std::pair&lt;gms::inet_address const, table::cache_hit_rate&gt;, std::allocator&lt;std::pair&lt;gms::inet_address const, table::cache_hit_rate&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;gms::inet_address&gt;, std::hash&lt;gms::inet_address&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::operator[] (7 samples, 0.13%)</title><rect x="716.6" y="741" width="1.5" height="15.0" fill="rgb(214,191,39)" rx="2" ry="2" />
<text  x="719.57" y="751.5" ></text>
</g>
<g >
<title>__tls_init (1 samples, 0.02%)</title><rect x="547.0" y="597" width="0.2" height="15.0" fill="rgb(252,143,6)" rx="2" ry="2" />
<text  x="549.97" y="607.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (4 samples, 0.08%)</title><rect x="664.4" y="789" width="0.9" height="15.0" fill="rgb(243,14,44)" rx="2" ry="2" />
<text  x="667.44" y="799.5" ></text>
</g>
<g >
<title>service::shared_mutation::shared_mutation (17 samples, 0.32%)</title><rect x="1133.6" y="517" width="3.8" height="15.0" fill="rgb(224,68,11)" rx="2" ry="2" />
<text  x="1136.62" y="527.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.02%)</title><rect x="57.9" y="613" width="0.2" height="15.0" fill="rgb(248,143,12)" rx="2" ry="2" />
<text  x="60.88" y="623.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEENK4$_43clERKNSF_15binary_operatorEEUlRKNSF_12column_valueEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_17tuple_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlNSF_5tokenEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlSS_E_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_11conjunctionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_8constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_21unresolved_identifierEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_25column_mutation_attributeEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13function_callEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4castEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_15field_selectionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4nullEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13bind_variableEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_16untyped_constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_22collection_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_20usertype_constructorEE_EERS4_IJS14_SQ_ST_S11_S1C_S1G_S1K_S1O_S1S_S1W_S20_S24_S18_SX_S28_S2C_EEEJEEESt16integer_sequenceImJLm2EEEE14__visit_invokeES2H_S2J_ (2 samples, 0.04%)</title><rect x="871.6" y="629" width="0.5" height="15.0" fill="rgb(215,202,14)" rx="2" ry="2" />
<text  x="874.62" y="639.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (2 samples, 0.04%)</title><rect x="54.7" y="501" width="0.5" height="15.0" fill="rgb(214,195,43)" rx="2" ry="2" />
<text  x="57.75" y="511.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (1 samples, 0.02%)</title><rect x="369.1" y="469" width="0.2" height="15.0" fill="rgb(226,155,43)" rx="2" ry="2" />
<text  x="372.10" y="479.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::maybe_refresh_state (4 samples, 0.08%)</title><rect x="272.4" y="469" width="0.9" height="15.0" fill="rgb(244,79,35)" rx="2" ry="2" />
<text  x="275.45" y="479.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;void&gt;::set_value&lt;&gt; (1 samples, 0.02%)</title><rect x="92.1" y="789" width="0.2" height="15.0" fill="rgb(208,27,33)" rx="2" ry="2" />
<text  x="95.11" y="799.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (2 samples, 0.04%)</title><rect x="45.8" y="485" width="0.4" height="15.0" fill="rgb(231,124,45)" rx="2" ry="2" />
<text  x="48.80" y="495.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.02%)</title><rect x="57.9" y="629" width="0.2" height="15.0" fill="rgb(228,155,23)" rx="2" ry="2" />
<text  x="60.88" y="639.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_M_reset (1 samples, 0.02%)</title><rect x="800.9" y="517" width="0.2" height="15.0" fill="rgb(217,101,52)" rx="2" ry="2" />
<text  x="803.92" y="527.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (1 samples, 0.02%)</title><rect x="339.8" y="581" width="0.2" height="15.0" fill="rgb(225,55,45)" rx="2" ry="2" />
<text  x="342.79" y="591.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_insert&lt;flat_mutation_reader&gt; (9 samples, 0.17%)</title><rect x="462.2" y="565" width="2.0" height="15.0" fill="rgb(220,6,49)" rx="2" ry="2" />
<text  x="465.18" y="575.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.02%)</title><rect x="46.9" y="485" width="0.2" height="15.0" fill="rgb(236,169,22)" rx="2" ry="2" />
<text  x="49.92" y="495.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::~impl (3 samples, 0.06%)</title><rect x="573.8" y="613" width="0.7" height="15.0" fill="rgb(225,200,41)" rx="2" ry="2" />
<text  x="576.82" y="623.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::push_mutation_fragment&lt;schema const&amp;, reader_permit&amp;, partition_start&gt; (1 samples, 0.02%)</title><rect x="79.1" y="677" width="0.3" height="15.0" fill="rgb(219,197,3)" rx="2" ry="2" />
<text  x="82.14" y="687.5" ></text>
</g>
<g >
<title>db::system_keyspace::make (1 samples, 0.02%)</title><rect x="16.5" y="629" width="0.2" height="15.0" fill="rgb(225,220,29)" rx="2" ry="2" />
<text  x="19.49" y="639.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.02%)</title><rect x="14.5" y="869" width="0.2" height="15.0" fill="rgb(247,45,18)" rx="2" ry="2" />
<text  x="17.47" y="879.5" ></text>
</g>
<g >
<title>free (1 samples, 0.02%)</title><rect x="95.7" y="725" width="0.2" height="15.0" fill="rgb(222,64,44)" rx="2" ry="2" />
<text  x="98.69" y="735.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::clear (1 samples, 0.02%)</title><rect x="467.8" y="597" width="0.2" height="15.0" fill="rgb(248,13,41)" rx="2" ry="2" />
<text  x="470.77" y="607.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::get_promise (1 samples, 0.02%)</title><rect x="997.4" y="581" width="0.2" height="15.0" fill="rgb(250,229,33)" rx="2" ry="2" />
<text  x="1000.36" y="591.5" ></text>
</g>
<g >
<title>std::__find_if&lt;gms::inet_address*, __gnu_cxx::__ops::_Iter_pred&lt;std::unary_negate&lt;std::binder1st&lt;std::_Mem_fn&lt;bool  (5 samples, 0.09%)</title><rect x="1085.3" y="597" width="1.1" height="15.0" fill="rgb(233,102,49)" rx="2" ry="2" />
<text  x="1088.29" y="607.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::emplace_back&lt;flat_mutation_reader&gt; (1 samples, 0.02%)</title><rect x="450.1" y="661" width="0.2" height="15.0" fill="rgb(246,189,30)" rx="2" ry="2" />
<text  x="453.09" y="671.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::emplace&lt;atomic_cell_or_collection, seastar::optimized_optional&lt;cell_hash&gt; &gt; (2 samples, 0.04%)</title><rect x="1127.1" y="501" width="0.5" height="15.0" fill="rgb(231,35,8)" rx="2" ry="2" />
<text  x="1130.13" y="511.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (1 samples, 0.02%)</title><rect x="869.2" y="629" width="0.2" height="15.0" fill="rgb(219,117,47)" rx="2" ry="2" />
<text  x="872.16" y="639.5" ></text>
</g>
<g >
<title>std::binary_search&lt;char const*, char&gt; (1 samples, 0.02%)</title><rect x="720.6" y="645" width="0.2" height="15.0" fill="rgb(214,99,53)" rx="2" ry="2" />
<text  x="723.60" y="655.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::get_bound_terms (1 samples, 0.02%)</title><rect x="731.3" y="757" width="0.3" height="15.0" fill="rgb(252,119,3)" rx="2" ry="2" />
<text  x="734.33" y="767.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.02%)</title><rect x="37.5" y="661" width="0.2" height="15.0" fill="rgb(235,228,47)" rx="2" ry="2" />
<text  x="40.52" y="671.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (4 samples, 0.08%)</title><rect x="1007.7" y="549" width="0.8" height="15.0" fill="rgb(218,184,2)" rx="2" ry="2" />
<text  x="1010.65" y="559.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::validate (1 samples, 0.02%)</title><rect x="836.5" y="725" width="0.2" height="15.0" fill="rgb(206,207,51)" rx="2" ry="2" />
<text  x="839.49" y="735.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::on_permit_created (1 samples, 0.02%)</title><rect x="1033.4" y="501" width="0.2" height="15.0" fill="rgb(232,108,19)" rx="2" ry="2" />
<text  x="1036.38" y="511.5" ></text>
</g>
<g >
<title>cql3::cf_name::operator= (1 samples, 0.02%)</title><rect x="40.2" y="661" width="0.2" height="15.0" fill="rgb(244,97,43)" rx="2" ry="2" />
<text  x="43.20" y="671.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;7ul, cql3::expr::untyped_constant&gt; (1 samples, 0.02%)</title><rect x="53.4" y="357" width="0.2" height="15.0" fill="rgb(218,189,27)" rx="2" ry="2" />
<text  x="56.41" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt;::_M_realloc_insert&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; (4 samples, 0.08%)</title><rect x="289.0" y="501" width="0.9" height="15.0" fill="rgb(217,41,50)" rx="2" ry="2" />
<text  x="292.00" y="511.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::signal (1 samples, 0.02%)</title><rect x="206.9" y="517" width="0.2" height="15.0" fill="rgb(236,15,30)" rx="2" ry="2" />
<text  x="209.89" y="527.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (1 samples, 0.02%)</title><rect x="693.5" y="629" width="0.2" height="15.0" fill="rgb(249,196,37)" rx="2" ry="2" />
<text  x="696.52" y="639.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;boost::range_detail::integer_iterator&lt;unsigned int&gt;, sstables::sstable_directory::move_foreign_sstables (1 samples, 0.02%)</title><rect x="694.9" y="773" width="0.2" height="15.0" fill="rgb(208,197,16)" rx="2" ry="2" />
<text  x="697.87" y="783.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;cql3::untyped_result_set, false&gt;::make&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt;&amp;&gt; (1 samples, 0.02%)</title><rect x="649.7" y="789" width="0.2" height="15.0" fill="rgb(207,184,38)" rx="2" ry="2" />
<text  x="652.67" y="799.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="936.5" y="645" width="0.2" height="15.0" fill="rgb(216,65,8)" rx="2" ry="2" />
<text  x="939.50" y="655.5" ></text>
</g>
<g >
<title>service::storage_proxy::create_write_response_handler_helper (2 samples, 0.04%)</title><rect x="1137.4" y="517" width="0.5" height="15.0" fill="rgb(254,67,27)" rx="2" ry="2" />
<text  x="1140.42" y="527.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (1 samples, 0.02%)</title><rect x="40.7" y="597" width="0.2" height="15.0" fill="rgb(254,193,40)" rx="2" ry="2" />
<text  x="43.65" y="607.5" ></text>
</g>
<g >
<title>seastar::internal::coroutine_traits_base&lt;void&gt;::promise_type::run_and_dispose (1 samples, 0.02%)</title><rect x="84.7" y="821" width="0.3" height="15.0" fill="rgb(212,83,49)" rx="2" ry="2" />
<text  x="87.73" y="831.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (3 samples, 0.06%)</title><rect x="1043.5" y="501" width="0.6" height="15.0" fill="rgb(210,193,15)" rx="2" ry="2" />
<text  x="1046.45" y="511.5" ></text>
</g>
<g >
<title>seastar::future&lt;utils::small_vector&lt;service::storage_proxy::unique_response_handler, 1ul&gt; &gt;::then_impl&lt;service::storage_proxy::mutate_internal&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt; &gt; (6 samples, 0.11%)</title><rect x="1131.8" y="613" width="1.4" height="15.0" fill="rgb(210,200,23)" rx="2" ry="2" />
<text  x="1134.83" y="623.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;single_node_cql_env::core_local_state&gt;::local (1 samples, 0.02%)</title><rect x="847.9" y="725" width="0.2" height="15.0" fill="rgb(215,141,3)" rx="2" ry="2" />
<text  x="850.90" y="735.5" ></text>
</g>
<g >
<title>skip_empty_fragments&lt;managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="1124.9" y="517" width="0.2" height="15.0" fill="rgb(229,94,5)" rx="2" ry="2" />
<text  x="1127.89" y="527.5" ></text>
</g>
<g >
<title>memtable_entry::memtable_entry (2 samples, 0.04%)</title><rect x="1124.0" y="453" width="0.4" height="15.0" fill="rgb(254,150,6)" rx="2" ry="2" />
<text  x="1127.00" y="463.5" ></text>
</g>
<g >
<title>query::partition_slice::row_ranges (1 samples, 0.02%)</title><rect x="352.5" y="469" width="0.3" height="15.0" fill="rgb(234,219,15)" rx="2" ry="2" />
<text  x="355.54" y="479.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;column_definition const*, std::pair&lt;column_definition const* const, cql3::expr::expression&gt;, std::allocator&lt;std::pair&lt;column_definition const* const, cql3::expr::expression&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;column_definition const*&gt;, std::hash&lt;column_definition const*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::clear (1 samples, 0.02%)</title><rect x="72.0" y="677" width="0.2" height="15.0" fill="rgb(247,42,1)" rx="2" ry="2" />
<text  x="74.98" y="687.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="1106.1" y="693" width="0.2" height="15.0" fill="rgb(214,138,54)" rx="2" ry="2" />
<text  x="1109.10" y="703.5" ></text>
</g>
<g >
<title>compound_type&lt; (25 samples, 0.47%)</title><rect x="496.4" y="517" width="5.6" height="15.0" fill="rgb(220,151,13)" rx="2" ry="2" />
<text  x="499.41" y="527.5" ></text>
</g>
<g >
<title>seastar::internal::uninitialized_wrapper_base&lt;utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (1 samples, 0.02%)</title><rect x="800.0" y="469" width="0.2" height="15.0" fill="rgb(247,130,35)" rx="2" ry="2" />
<text  x="803.02" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::~vector (2 samples, 0.04%)</title><rect x="1044.1" y="581" width="0.5" height="15.0" fill="rgb(216,1,15)" rx="2" ry="2" />
<text  x="1047.12" y="591.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (1 samples, 0.02%)</title><rect x="104.9" y="789" width="0.2" height="15.0" fill="rgb(207,224,52)" rx="2" ry="2" />
<text  x="107.87" y="799.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::get_promise (1 samples, 0.02%)</title><rect x="729.8" y="741" width="0.2" height="15.0" fill="rgb(236,94,21)" rx="2" ry="2" />
<text  x="732.77" y="751.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (1 samples, 0.02%)</title><rect x="274.9" y="485" width="0.2" height="15.0" fill="rgb(218,54,51)" rx="2" ry="2" />
<text  x="277.91" y="495.5" ></text>
</g>
<g >
<title>boost::intrusive::bstbase&lt;boost::intrusive::mhtraits&lt;range_tombstone_entry, boost::intrusive::set_member_hook&lt;boost::intrusive::link_mode&lt; (6 samples, 0.11%)</title><rect x="576.5" y="613" width="1.3" height="15.0" fill="rgb(212,139,27)" rx="2" ry="2" />
<text  x="579.51" y="623.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (2 samples, 0.04%)</title><rect x="683.7" y="789" width="0.4" height="15.0" fill="rgb(216,49,49)" rx="2" ry="2" />
<text  x="686.68" y="799.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.02%)</title><rect x="38.9" y="469" width="0.2" height="15.0" fill="rgb(234,111,5)" rx="2" ry="2" />
<text  x="41.86" y="479.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::clear (3 samples, 0.06%)</title><rect x="810.5" y="501" width="0.7" height="15.0" fill="rgb(231,45,19)" rx="2" ry="2" />
<text  x="813.54" y="511.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;query::read_command&gt;::dispose (12 samples, 0.23%)</title><rect x="97.9" y="773" width="2.7" height="15.0" fill="rgb(219,116,45)" rx="2" ry="2" />
<text  x="100.93" y="783.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextToken (49 samples, 0.93%)</title><rect x="25.0" y="597" width="11.0" height="15.0" fill="rgb(226,173,5)" rx="2" ry="2" />
<text  x="27.99" y="607.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (6 samples, 0.11%)</title><rect x="1135.0" y="437" width="1.3" height="15.0" fill="rgb(226,128,21)" rx="2" ry="2" />
<text  x="1137.96" y="447.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::drop_index_statement, std::default_delete&lt;cql3::statements::drop_index_statement&gt; &gt;::__uniq_ptr_impl (1 samples, 0.02%)</title><rect x="62.6" y="645" width="0.2" height="15.0" fill="rgb(242,93,29)" rx="2" ry="2" />
<text  x="65.58" y="655.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (8 samples, 0.15%)</title><rect x="792.2" y="565" width="1.8" height="15.0" fill="rgb(222,167,9)" rx="2" ry="2" />
<text  x="795.19" y="575.5" ></text>
</g>
<g >
<title>std::push_heap&lt;mutation_reader_merger::reader_and_fragment*, mutation_reader_merger::reader_heap_compare&gt; (11 samples, 0.21%)</title><rect x="192.6" y="549" width="2.4" height="15.0" fill="rgb(210,42,3)" rx="2" ry="2" />
<text  x="195.57" y="559.5" ></text>
</g>
<g >
<title>locator::abstract_replication_strategy::get_natural_endpoints (1 samples, 0.02%)</title><rect x="1071.4" y="613" width="0.2" height="15.0" fill="rgb(239,122,2)" rx="2" ry="2" />
<text  x="1074.42" y="623.5" ></text>
</g>
<g >
<title>sstables::compaction::setup&lt;noop_compacted_fragments_consumer&gt; (1 samples, 0.02%)</title><rect x="16.9" y="869" width="0.3" height="15.0" fill="rgb(245,137,52)" rx="2" ry="2" />
<text  x="19.94" y="879.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (1 samples, 0.02%)</title><rect x="557.5" y="709" width="0.2" height="15.0" fill="rgb(246,226,31)" rx="2" ry="2" />
<text  x="560.49" y="719.5" ></text>
</g>
<g >
<title>bytes_view_hasher::finalize (2 samples, 0.04%)</title><rect x="738.9" y="597" width="0.5" height="15.0" fill="rgb(228,106,5)" rx="2" ry="2" />
<text  x="741.94" y="607.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (4 samples, 0.08%)</title><rect x="160.4" y="725" width="0.8" height="15.0" fill="rgb(219,34,32)" rx="2" ry="2" />
<text  x="163.35" y="735.5" ></text>
</g>
<g >
<title>service::storage_proxy::remove_response_handler_entry (1 samples, 0.02%)</title><rect x="720.4" y="789" width="0.2" height="15.0" fill="rgb(235,66,43)" rx="2" ry="2" />
<text  x="723.37" y="799.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (1 samples, 0.02%)</title><rect x="204.7" y="549" width="0.2" height="15.0" fill="rgb(233,95,2)" rx="2" ry="2" />
<text  x="207.65" y="559.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (2 samples, 0.04%)</title><rect x="99.0" y="757" width="0.5" height="15.0" fill="rgb(238,86,4)" rx="2" ry="2" />
<text  x="102.05" y="767.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_clear (11 samples, 0.21%)</title><rect x="595.1" y="661" width="2.4" height="15.0" fill="rgb(217,129,2)" rx="2" ry="2" />
<text  x="598.08" y="671.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::_M_create_storage (3 samples, 0.06%)</title><rect x="941.2" y="693" width="0.7" height="15.0" fill="rgb(234,145,1)" rx="2" ry="2" />
<text  x="944.20" y="703.5" ></text>
</g>
<g >
<title>bound_view::from_range_start&lt;nonwrapping_interval&gt; (7 samples, 0.13%)</title><rect x="286.8" y="501" width="1.5" height="15.0" fill="rgb(219,187,54)" rx="2" ry="2" />
<text  x="289.77" y="511.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take (1 samples, 0.02%)</title><rect x="760.9" y="693" width="0.2" height="15.0" fill="rgb(206,82,0)" rx="2" ry="2" />
<text  x="763.87" y="703.5" ></text>
</g>
<g >
<title>db::schema_tables::calculate_schema_digest (3 samples, 0.06%)</title><rect x="106.7" y="773" width="0.6" height="15.0" fill="rgb(238,96,50)" rx="2" ry="2" />
<text  x="109.66" y="783.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="72.0" y="629" width="0.2" height="15.0" fill="rgb(206,97,18)" rx="2" ry="2" />
<text  x="74.98" y="639.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="20.5" y="581" width="0.2" height="15.0" fill="rgb(206,6,51)" rx="2" ry="2" />
<text  x="23.52" y="591.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::operator (11 samples, 0.21%)</title><rect x="308.7" y="629" width="2.5" height="15.0" fill="rgb(246,70,16)" rx="2" ry="2" />
<text  x="311.69" y="639.5" ></text>
</g>
<g >
<title>db::system_keyspace_make (5 samples, 0.09%)</title><rect x="107.6" y="805" width="1.1" height="15.0" fill="rgb(248,29,49)" rx="2" ry="2" />
<text  x="110.55" y="815.5" ></text>
</g>
<g >
<title>validation::validate_column_family (38 samples, 0.72%)</title><rect x="827.3" y="693" width="8.5" height="15.0" fill="rgb(237,200,14)" rx="2" ry="2" />
<text  x="830.32" y="703.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.02%)</title><rect x="354.8" y="469" width="0.2" height="15.0" fill="rgb(216,97,34)" rx="2" ry="2" />
<text  x="357.78" y="479.5" ></text>
</g>
<g >
<title>ser::deletable_row__shadowable_deleted_at&lt;bytes_ostream&gt;::deletable_row__shadowable_deleted_at (1 samples, 0.02%)</title><rect x="1136.3" y="437" width="0.2" height="15.0" fill="rgb(232,170,15)" rx="2" ry="2" />
<text  x="1139.30" y="447.5" ></text>
</g>
<g >
<title>absl::container_internal::operator== (2 samples, 0.04%)</title><rect x="850.1" y="677" width="0.5" height="15.0" fill="rgb(236,104,22)" rx="2" ry="2" />
<text  x="853.14" y="687.5" ></text>
</g>
<g >
<title>utils::fb_utilities::get_broadcast_address (1 samples, 0.02%)</title><rect x="1086.2" y="565" width="0.2" height="15.0" fill="rgb(245,72,19)" rx="2" ry="2" />
<text  x="1089.19" y="575.5" ></text>
</g>
<g >
<title>std::vector&lt;seastar::shared_ptr&lt;cql3::relation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::relation&gt; &gt; &gt;::operator= (1 samples, 0.02%)</title><rect x="61.2" y="661" width="0.3" height="15.0" fill="rgb(234,103,6)" rx="2" ry="2" />
<text  x="64.24" y="671.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (2 samples, 0.04%)</title><rect x="419.0" y="469" width="0.4" height="15.0" fill="rgb(243,156,52)" rx="2" ry="2" />
<text  x="422.00" y="479.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;flat_mutation_reader  (1 samples, 0.02%)</title><rect x="449.0" y="693" width="0.2" height="15.0" fill="rgb(232,71,24)" rx="2" ry="2" />
<text  x="451.98" y="703.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;position_in_partition&gt;::_M_reset (1 samples, 0.02%)</title><rect x="291.0" y="549" width="0.2" height="15.0" fill="rgb(241,43,12)" rx="2" ry="2" />
<text  x="294.02" y="559.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; const, column_definition const*&gt;, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; const, column_definition const*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;, std::hash&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (1 samples, 0.02%)</title><rect x="16.5" y="517" width="0.2" height="15.0" fill="rgb(231,84,5)" rx="2" ry="2" />
<text  x="19.49" y="527.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::~holder (1 samples, 0.02%)</title><rect x="481.4" y="629" width="0.2" height="15.0" fill="rgb(225,72,35)" rx="2" ry="2" />
<text  x="484.42" y="639.5" ></text>
</g>
<g >
<title>std::__find_if&lt;gms::inet_address*, __gnu_cxx::__ops::_Iter_equals_val&lt;gms::inet_address const&gt; &gt; (1 samples, 0.02%)</title><rect x="1087.3" y="613" width="0.2" height="15.0" fill="rgb(209,7,17)" rx="2" ry="2" />
<text  x="1090.30" y="623.5" ></text>
</g>
<g >
<title>query::result::builder::builder (11 samples, 0.21%)</title><rect x="611.6" y="725" width="2.5" height="15.0" fill="rgb(238,144,10)" rx="2" ry="2" />
<text  x="614.63" y="735.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_nodes (1 samples, 0.02%)</title><rect x="1092.2" y="645" width="0.2" height="15.0" fill="rgb(206,35,21)" rx="2" ry="2" />
<text  x="1095.23" y="655.5" ></text>
</g>
<g >
<title>compound_type&lt; (1 samples, 0.02%)</title><rect x="495.3" y="533" width="0.2" height="15.0" fill="rgb(212,14,31)" rx="2" ry="2" />
<text  x="498.29" y="543.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.02%)</title><rect x="43.3" y="485" width="0.3" height="15.0" fill="rgb(205,206,51)" rx="2" ry="2" />
<text  x="46.34" y="495.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (1 samples, 0.02%)</title><rect x="824.4" y="677" width="0.2" height="15.0" fill="rgb(221,61,39)" rx="2" ry="2" />
<text  x="827.41" y="687.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.02%)</title><rect x="58.1" y="485" width="0.2" height="15.0" fill="rgb(241,226,10)" rx="2" ry="2" />
<text  x="61.10" y="495.5" ></text>
</g>
<g >
<title>antlr3::DefaultAllocPolicy::StackType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::pop (1 samples, 0.02%)</title><rect x="41.8" y="629" width="0.2" height="15.0" fill="rgb(228,178,37)" rx="2" ry="2" />
<text  x="44.77" y="639.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_no_esft&lt;std::function&lt;flat_mutation_reader  (1 samples, 0.02%)</title><rect x="632.9" y="693" width="0.2" height="15.0" fill="rgb(213,69,41)" rx="2" ry="2" />
<text  x="635.89" y="703.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (3 samples, 0.06%)</title><rect x="45.8" y="565" width="0.7" height="15.0" fill="rgb(242,40,36)" rx="2" ry="2" />
<text  x="48.80" y="575.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (4 samples, 0.08%)</title><rect x="115.4" y="773" width="0.9" height="15.0" fill="rgb(224,132,52)" rx="2" ry="2" />
<text  x="118.38" y="783.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_M_reset (1 samples, 0.02%)</title><rect x="937.2" y="693" width="0.2" height="15.0" fill="rgb(242,58,42)" rx="2" ry="2" />
<text  x="940.17" y="703.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::contains&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (7 samples, 0.13%)</title><rect x="834.0" y="645" width="1.6" height="15.0" fill="rgb(243,127,19)" rx="2" ry="2" />
<text  x="837.03" y="655.5" ></text>
</g>
<g >
<title>mutation_fragment::operator= (5 samples, 0.09%)</title><rect x="219.4" y="533" width="1.1" height="15.0" fill="rgb(212,110,34)" rx="2" ry="2" />
<text  x="222.42" y="543.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (212 samples, 4.02%)</title><rect x="221.2" y="501" width="47.4" height="15.0" fill="rgb(207,21,38)" rx="2" ry="2" />
<text  x="224.21" y="511.5" >part..</text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (38 samples, 0.72%)</title><rect x="1171.7" y="933" width="8.5" height="15.0" fill="rgb(244,140,39)" rx="2" ry="2" />
<text  x="1174.65" y="943.5" ></text>
</g>
<g >
<title>serialize_mutation_fragments (1 samples, 0.02%)</title><rect x="105.8" y="549" width="0.2" height="15.0" fill="rgb(244,29,6)" rx="2" ry="2" />
<text  x="108.76" y="559.5" ></text>
</g>
<g >
<title>operator delete (7 samples, 0.13%)</title><rect x="662.6" y="789" width="1.6" height="15.0" fill="rgb(252,14,3)" rx="2" ry="2" />
<text  x="665.65" y="799.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.08%)</title><rect x="535.1" y="565" width="0.9" height="15.0" fill="rgb(206,213,38)" rx="2" ry="2" />
<text  x="538.12" y="575.5" ></text>
</g>
<g >
<title>partition_version_ref::operator (1 samples, 0.02%)</title><rect x="264.6" y="421" width="0.2" height="15.0" fill="rgb(228,42,10)" rx="2" ry="2" />
<text  x="267.62" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.06%)</title><rect x="660.4" y="741" width="0.7" height="15.0" fill="rgb(227,10,23)" rx="2" ry="2" />
<text  x="663.41" y="751.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (5 samples, 0.09%)</title><rect x="43.3" y="565" width="1.2" height="15.0" fill="rgb(226,169,12)" rx="2" ry="2" />
<text  x="46.34" y="575.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (1 samples, 0.02%)</title><rect x="872.3" y="629" width="0.2" height="15.0" fill="rgb(223,159,9)" rx="2" ry="2" />
<text  x="875.29" y="639.5" ></text>
</g>
<g >
<title>bound_view::from_range&lt;nonwrapping_interval&gt; (16 samples, 0.30%)</title><rect x="283.2" y="501" width="3.6" height="15.0" fill="rgb(244,74,28)" rx="2" ry="2" />
<text  x="286.19" y="511.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (2 samples, 0.04%)</title><rect x="789.3" y="613" width="0.4" height="15.0" fill="rgb(230,32,21)" rx="2" ry="2" />
<text  x="792.28" y="623.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::emplace_back&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;&amp;&gt; (1 samples, 0.02%)</title><rect x="75.8" y="741" width="0.2" height="15.0" fill="rgb(210,1,10)" rx="2" ry="2" />
<text  x="78.78" y="751.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.02%)</title><rect x="39.3" y="501" width="0.2" height="15.0" fill="rgb(224,228,16)" rx="2" ry="2" />
<text  x="42.31" y="511.5" ></text>
</g>
<g >
<title>managed_bytes::operator= (2 samples, 0.04%)</title><rect x="937.6" y="709" width="0.5" height="15.0" fill="rgb(206,134,5)" rx="2" ry="2" />
<text  x="940.62" y="719.5" ></text>
</g>
<g >
<title>seastar::future&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (1 samples, 0.02%)</title><rect x="797.1" y="533" width="0.2" height="15.0" fill="rgb(217,222,6)" rx="2" ry="2" />
<text  x="800.11" y="543.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (1 samples, 0.02%)</title><rect x="684.8" y="773" width="0.2" height="15.0" fill="rgb(229,37,15)" rx="2" ry="2" />
<text  x="687.80" y="783.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;void&gt;::set_value&lt;&gt; (1 samples, 0.02%)</title><rect x="718.4" y="789" width="0.2" height="15.0" fill="rgb(242,64,28)" rx="2" ry="2" />
<text  x="721.36" y="799.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (1 samples, 0.02%)</title><rect x="304.4" y="629" width="0.3" height="15.0" fill="rgb(238,29,17)" rx="2" ry="2" />
<text  x="307.44" y="639.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;flat_mutation_reader&gt;::allocate (3 samples, 0.06%)</title><rect x="453.5" y="645" width="0.6" height="15.0" fill="rgb(219,94,9)" rx="2" ry="2" />
<text  x="456.45" y="655.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (2 samples, 0.04%)</title><rect x="477.4" y="597" width="0.4" height="15.0" fill="rgb(238,27,15)" rx="2" ry="2" />
<text  x="480.39" y="607.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.02%)</title><rect x="57.9" y="597" width="0.2" height="15.0" fill="rgb(209,187,34)" rx="2" ry="2" />
<text  x="60.88" y="607.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take (1 samples, 0.02%)</title><rect x="700.9" y="757" width="0.2" height="15.0" fill="rgb(238,25,8)" rx="2" ry="2" />
<text  x="703.91" y="767.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate (50 samples, 0.95%)</title><rect x="901.4" y="629" width="11.2" height="15.0" fill="rgb(222,220,28)" rx="2" ry="2" />
<text  x="904.38" y="639.5" ></text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt;&amp;&gt; (2 samples, 0.04%)</title><rect x="843.4" y="677" width="0.5" height="15.0" fill="rgb(234,8,54)" rx="2" ry="2" />
<text  x="846.43" y="687.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="442.9" y="661" width="0.3" height="15.0" fill="rgb(226,115,37)" rx="2" ry="2" />
<text  x="445.94" y="671.5" ></text>
</g>
<g >
<title>bplus::tree&lt;long, intrusive_array&lt;memtable_entry&gt;, dht::raw_token_less_comparator, 16ul,  (37 samples, 0.70%)</title><rect x="483.9" y="597" width="8.3" height="15.0" fill="rgb(215,106,32)" rx="2" ry="2" />
<text  x="486.88" y="607.5" ></text>
</g>
<g >
<title>intrusive_b::node&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (1 samples, 0.02%)</title><rect x="695.5" y="485" width="0.3" height="15.0" fill="rgb(208,224,18)" rx="2" ry="2" />
<text  x="698.54" y="495.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;std::optional&lt;auth::resource&gt; &gt;, seastar::future&lt;bool&gt; &gt;, std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;std::optional&lt;auth::resource&gt; &gt;, seastar::future&lt;bool&gt; &gt; &gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="821.9" y="645" width="0.3" height="15.0" fill="rgb(248,162,22)" rx="2" ry="2" />
<text  x="824.95" y="655.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::lw_shared_ptr&lt;schema const&gt;  (1 samples, 0.02%)</title><rect x="106.2" y="757" width="0.2" height="15.0" fill="rgb(216,214,14)" rx="2" ry="2" />
<text  x="109.21" y="767.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (1 samples, 0.02%)</title><rect x="623.7" y="725" width="0.2" height="15.0" fill="rgb(216,51,26)" rx="2" ry="2" />
<text  x="626.72" y="735.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node_base*&gt;::allocate (1 samples, 0.02%)</title><rect x="1154.6" y="709" width="0.3" height="15.0" fill="rgb(223,170,12)" rx="2" ry="2" />
<text  x="1157.65" y="719.5" ></text>
</g>
<g >
<title>cql3::result_generator::query_result_visitor&lt;cql3::untyped_result_set::visitor&gt;::accept_new_row (1 samples, 0.02%)</title><rect x="649.7" y="693" width="0.2" height="15.0" fill="rgb(210,128,37)" rx="2" ry="2" />
<text  x="652.67" y="703.5" ></text>
</g>
<g >
<title>all (5,274 samples, 100%)</title><rect x="10.0" y="965" width="1180.0" height="15.0" fill="rgb(238,208,51)" rx="2" ry="2" />
<text  x="13.00" y="975.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (1 samples, 0.02%)</title><rect x="846.8" y="725" width="0.2" height="15.0" fill="rgb(230,191,24)" rx="2" ry="2" />
<text  x="849.78" y="735.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="550.1" y="549" width="0.2" height="15.0" fill="rgb(229,36,41)" rx="2" ry="2" />
<text  x="553.11" y="559.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.02%)</title><rect x="105.8" y="517" width="0.2" height="15.0" fill="rgb(249,137,47)" rx="2" ry="2" />
<text  x="108.76" y="527.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector (1 samples, 0.02%)</title><rect x="1062.9" y="597" width="0.2" height="15.0" fill="rgb(245,157,32)" rx="2" ry="2" />
<text  x="1065.92" y="607.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::followPush (2 samples, 0.04%)</title><rect x="37.7" y="661" width="0.5" height="15.0" fill="rgb(242,168,4)" rx="2" ry="2" />
<text  x="40.74" y="671.5" ></text>
</g>
<g >
<title>seastar::alien::instance::poll_queues (1 samples, 0.02%)</title><rect x="1168.5" y="789" width="0.2" height="15.0" fill="rgb(213,144,38)" rx="2" ry="2" />
<text  x="1171.52" y="799.5" ></text>
</g>
<g >
<title>schema::column_at (3 samples, 0.06%)</title><rect x="258.1" y="421" width="0.7" height="15.0" fill="rgb(237,66,10)" rx="2" ry="2" />
<text  x="261.13" y="431.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::deallocate (5 samples, 0.09%)</title><rect x="590.2" y="661" width="1.1" height="15.0" fill="rgb(234,13,28)" rx="2" ry="2" />
<text  x="593.16" y="671.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (1 samples, 0.02%)</title><rect x="106.7" y="133" width="0.2" height="15.0" fill="rgb(211,201,5)" rx="2" ry="2" />
<text  x="109.66" y="143.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::drop_index_statement, std::default_delete&lt;cql3::statements::drop_index_statement&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::statements::drop_index_statement&gt;, void&gt; (1 samples, 0.02%)</title><rect x="62.6" y="677" width="0.2" height="15.0" fill="rgb(222,194,6)" rx="2" ry="2" />
<text  x="65.58" y="687.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="955.7" y="709" width="0.3" height="15.0" fill="rgb(231,122,22)" rx="2" ry="2" />
<text  x="958.75" y="719.5" ></text>
</g>
<g >
<title>std::operator- (2 samples, 0.04%)</title><rect x="39.5" y="501" width="0.5" height="15.0" fill="rgb(221,77,13)" rx="2" ry="2" />
<text  x="42.53" y="511.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_Optional_payload_base (5 samples, 0.09%)</title><rect x="1063.1" y="613" width="1.2" height="15.0" fill="rgb(231,175,47)" rx="2" ry="2" />
<text  x="1066.14" y="623.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::~small_vector (1 samples, 0.02%)</title><rect x="597.5" y="661" width="0.3" height="15.0" fill="rgb(235,147,8)" rx="2" ry="2" />
<text  x="600.54" y="671.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (1 samples, 0.02%)</title><rect x="700.0" y="741" width="0.2" height="15.0" fill="rgb(210,175,15)" rx="2" ry="2" />
<text  x="703.01" y="751.5" ></text>
</g>
<g >
<title>reader_selector::~reader_selector (1 samples, 0.02%)</title><rect x="593.7" y="645" width="0.3" height="15.0" fill="rgb(228,172,10)" rx="2" ry="2" />
<text  x="596.74" y="655.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::clear (14 samples, 0.27%)</title><rect x="401.8" y="517" width="3.1" height="15.0" fill="rgb(234,207,40)" rx="2" ry="2" />
<text  x="404.77" y="527.5" ></text>
</g>
<g >
<title>std::forward_as_tuple&lt;auth::role_or_anonymous&gt; (1 samples, 0.02%)</title><rect x="817.9" y="597" width="0.2" height="15.0" fill="rgb(246,164,35)" rx="2" ry="2" />
<text  x="820.92" y="607.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (1 samples, 0.02%)</title><rect x="1120.6" y="725" width="0.3" height="15.0" fill="rgb(233,177,7)" rx="2" ry="2" />
<text  x="1123.64" y="735.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (4 samples, 0.08%)</title><rect x="46.7" y="565" width="0.9" height="15.0" fill="rgb(243,216,2)" rx="2" ry="2" />
<text  x="49.69" y="575.5" ></text>
</g>
<g >
<title>query_result_builder::consume_new_partition (1 samples, 0.02%)</title><rect x="401.5" y="517" width="0.3" height="15.0" fill="rgb(209,141,17)" rx="2" ry="2" />
<text  x="404.54" y="527.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::emplace_back&lt;std::_List_iterator&lt;flat_mutation_reader&gt; const&amp;, mutation_fragment&gt; (1 samples, 0.02%)</title><rect x="195.0" y="549" width="0.3" height="15.0" fill="rgb(217,127,41)" rx="2" ry="2" />
<text  x="198.03" y="559.5" ></text>
</g>
<g >
<title>db::schema_tables::feed_hash_for_schema_digest (1 samples, 0.02%)</title><rect x="107.1" y="741" width="0.2" height="15.0" fill="rgb(253,199,35)" rx="2" ry="2" />
<text  x="110.10" y="751.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.04%)</title><rect x="604.5" y="709" width="0.4" height="15.0" fill="rgb(226,24,51)" rx="2" ry="2" />
<text  x="607.47" y="719.5" ></text>
</g>
<g >
<title>utils::approx_exponential_histogram&lt;512ul, 33554432ul, 4ul&gt;::find_bucket_index (1 samples, 0.02%)</title><rect x="614.1" y="709" width="0.2" height="15.0" fill="rgb(249,189,25)" rx="2" ry="2" />
<text  x="617.10" y="719.5" ></text>
</g>
<g >
<title>fmt::v7::detail::fallback_formatter&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, char, void&gt;::format&lt;fmt::v7::detail::buffer_appender&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="18.1" y="773" width="0.2" height="15.0" fill="rgb(206,85,46)" rx="2" ry="2" />
<text  x="21.05" y="783.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::maybe_drop_from (4 samples, 0.08%)</title><rect x="405.6" y="501" width="0.9" height="15.0" fill="rgb(226,162,28)" rx="2" ry="2" />
<text  x="408.57" y="511.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::future (1 samples, 0.02%)</title><rect x="964.0" y="677" width="0.2" height="15.0" fill="rgb(215,150,35)" rx="2" ry="2" />
<text  x="967.02" y="687.5" ></text>
</g>
<g >
<title>compound_wrapper&lt;partition_key, partition_key_view&gt;::make_empty (11 samples, 0.21%)</title><rect x="560.4" y="693" width="2.5" height="15.0" fill="rgb(229,18,42)" rx="2" ry="2" />
<text  x="563.40" y="703.5" ></text>
</g>
<g >
<title>allocation_strategy::construct&lt;partition_version, mutation_partition&gt; (2 samples, 0.04%)</title><rect x="1124.0" y="421" width="0.4" height="15.0" fill="rgb(206,112,26)" rx="2" ry="2" />
<text  x="1127.00" y="431.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (2 samples, 0.04%)</title><rect x="817.0" y="501" width="0.5" height="15.0" fill="rgb(216,215,23)" rx="2" ry="2" />
<text  x="820.03" y="511.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::remove_if&lt;row::compact_and_expire (59 samples, 1.12%)</title><rect x="406.5" y="501" width="13.2" height="15.0" fill="rgb(206,34,15)" rx="2" ry="2" />
<text  x="409.47" y="511.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (9 samples, 0.17%)</title><rect x="366.2" y="485" width="2.0" height="15.0" fill="rgb(213,181,29)" rx="2" ry="2" />
<text  x="369.19" y="495.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::find&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (11 samples, 0.21%)</title><rect x="830.7" y="629" width="2.4" height="15.0" fill="rgb(209,44,46)" rx="2" ry="2" />
<text  x="833.68" y="639.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::fetch (583 samples, 11.05%)</title><rect x="176.2" y="645" width="130.5" height="15.0" fill="rgb(242,151,6)" rx="2" ry="2" />
<text  x="179.24" y="655.5" >mutation_fragmen..</text>
</g>
<g >
<title>service::abstract_read_resolver::~abstract_read_resolver (1 samples, 0.02%)</title><rect x="705.6" y="789" width="0.2" height="15.0" fill="rgb(230,180,42)" rx="2" ry="2" />
<text  x="708.60" y="799.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (1 samples, 0.02%)</title><rect x="1145.0" y="773" width="0.3" height="15.0" fill="rgb(219,170,50)" rx="2" ry="2" />
<text  x="1148.03" y="783.5" ></text>
</g>
<g >
<title>service::client_state::has_column_family_access (8 samples, 0.15%)</title><rect x="75.6" y="773" width="1.7" height="15.0" fill="rgb(214,225,37)" rx="2" ry="2" />
<text  x="78.56" y="783.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="114.5" y="757" width="0.2" height="15.0" fill="rgb(206,48,50)" rx="2" ry="2" />
<text  x="117.49" y="767.5" ></text>
</g>
<g >
<title>gms::gossiper::is_alive (3 samples, 0.06%)</title><rect x="1085.5" y="565" width="0.7" height="15.0" fill="rgb(235,218,13)" rx="2" ry="2" />
<text  x="1088.51" y="575.5" ></text>
</g>
<g >
<title>memtable::apply (25 samples, 0.47%)</title><rect x="1123.1" y="565" width="5.6" height="15.0" fill="rgb(240,196,54)" rx="2" ry="2" />
<text  x="1126.10" y="575.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::trivial_direct_destroy (3 samples, 0.06%)</title><rect x="130.8" y="693" width="0.7" height="15.0" fill="rgb(216,138,25)" rx="2" ry="2" />
<text  x="133.82" y="703.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::followPush (1 samples, 0.02%)</title><rect x="42.0" y="645" width="0.2" height="15.0" fill="rgb(229,86,45)" rx="2" ry="2" />
<text  x="44.99" y="655.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.02%)</title><rect x="45.4" y="469" width="0.2" height="15.0" fill="rgb(213,12,30)" rx="2" ry="2" />
<text  x="48.35" y="479.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::push_mutation_fragment&lt;mutation_fragment&gt; (2 samples, 0.04%)</title><rect x="204.2" y="549" width="0.5" height="15.0" fill="rgb(253,209,39)" rx="2" ry="2" />
<text  x="207.21" y="559.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (1 samples, 0.02%)</title><rect x="24.1" y="485" width="0.2" height="15.0" fill="rgb(216,136,22)" rx="2" ry="2" />
<text  x="27.10" y="495.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.02%)</title><rect x="24.8" y="533" width="0.2" height="15.0" fill="rgb(208,98,16)" rx="2" ry="2" />
<text  x="27.77" y="543.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.09%)</title><rect x="536.9" y="629" width="1.1" height="15.0" fill="rgb(221,157,14)" rx="2" ry="2" />
<text  x="539.91" y="639.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;std::allocator&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="35.5" y="565" width="0.2" height="15.0" fill="rgb(245,101,29)" rx="2" ry="2" />
<text  x="38.51" y="575.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (1 samples, 0.02%)</title><rect x="324.1" y="629" width="0.3" height="15.0" fill="rgb(230,55,1)" rx="2" ry="2" />
<text  x="327.13" y="639.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::small_vector (1 samples, 0.02%)</title><rect x="474.5" y="565" width="0.2" height="15.0" fill="rgb(252,176,22)" rx="2" ry="2" />
<text  x="477.48" y="575.5" ></text>
</g>
<g >
<title>sstables::mc::writer::write_cell (2 samples, 0.04%)</title><rect x="81.1" y="645" width="0.5" height="15.0" fill="rgb(249,135,26)" rx="2" ry="2" />
<text  x="84.15" y="655.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;nonwrapping_interval&lt;dht::ring_position&gt; const*, nonwrapping_interval&lt;dht::ring_position&gt;*&gt; (4 samples, 0.08%)</title><rect x="944.3" y="677" width="0.9" height="15.0" fill="rgb(240,21,18)" rx="2" ry="2" />
<text  x="947.33" y="687.5" ></text>
</g>
<g >
<title>dht::tri_compare (1 samples, 0.02%)</title><rect x="502.0" y="581" width="0.2" height="15.0" fill="rgb(245,91,43)" rx="2" ry="2" />
<text  x="505.00" y="591.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;service::query_state&gt;::~shared_ptr_count_for (2 samples, 0.04%)</title><rect x="677.6" y="789" width="0.5" height="15.0" fill="rgb(217,138,49)" rx="2" ry="2" />
<text  x="680.64" y="799.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::empty (1 samples, 0.02%)</title><rect x="948.8" y="693" width="0.2" height="15.0" fill="rgb(250,210,40)" rx="2" ry="2" />
<text  x="951.81" y="703.5" ></text>
</g>
<g >
<title>mutation_partition::mutation_partition (1 samples, 0.02%)</title><rect x="1124.4" y="453" width="0.3" height="15.0" fill="rgb(241,149,45)" rx="2" ry="2" />
<text  x="1127.44" y="463.5" ></text>
</g>
<g >
<title>seastar::future_state_base::any::operator= (1 samples, 0.02%)</title><rect x="838.1" y="709" width="0.2" height="15.0" fill="rgb(248,93,27)" rx="2" ry="2" />
<text  x="841.06" y="719.5" ></text>
</g>
<g >
<title>schema::get_partitioner (1 samples, 0.02%)</title><rect x="939.9" y="709" width="0.2" height="15.0" fill="rgb(218,89,0)" rx="2" ry="2" />
<text  x="942.86" y="719.5" ></text>
</g>
<g >
<title>seastar::gate::enter (1 samples, 0.02%)</title><rect x="1130.0" y="613" width="0.3" height="15.0" fill="rgb(246,177,15)" rx="2" ry="2" />
<text  x="1133.04" y="623.5" ></text>
</g>
<g >
<title>database::has_keyspace (10 samples, 0.19%)</title><rect x="843.0" y="725" width="2.2" height="15.0" fill="rgb(214,63,17)" rx="2" ry="2" />
<text  x="845.98" y="735.5" ></text>
</g>
<g >
<title>service::abstract_write_response_handler::on_released (1 samples, 0.02%)</title><rect x="720.1" y="757" width="0.3" height="15.0" fill="rgb(222,161,39)" rx="2" ry="2" />
<text  x="723.15" y="767.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (2 samples, 0.04%)</title><rect x="249.8" y="421" width="0.5" height="15.0" fill="rgb(244,224,7)" rx="2" ry="2" />
<text  x="252.85" y="431.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::~small_vector (1 samples, 0.02%)</title><rect x="468.0" y="597" width="0.2" height="15.0" fill="rgb(221,28,29)" rx="2" ry="2" />
<text  x="470.99" y="607.5" ></text>
</g>
<g >
<title>compound_type&lt; (1 samples, 0.02%)</title><rect x="872.1" y="629" width="0.2" height="15.0" fill="rgb(244,30,0)" rx="2" ry="2" />
<text  x="875.07" y="639.5" ></text>
</g>
<g >
<title>service::client_state::get_timestamp (2 samples, 0.04%)</title><rect x="1116.2" y="725" width="0.4" height="15.0" fill="rgb(234,168,34)" rx="2" ry="2" />
<text  x="1119.17" y="735.5" ></text>
</g>
<g >
<title>database::has_keyspace (2 samples, 0.04%)</title><rect x="74.2" y="725" width="0.5" height="15.0" fill="rgb(220,20,23)" rx="2" ry="2" />
<text  x="77.21" y="735.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (7 samples, 0.13%)</title><rect x="157.7" y="677" width="1.5" height="15.0" fill="rgb(216,144,31)" rx="2" ry="2" />
<text  x="160.67" y="687.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (5 samples, 0.09%)</title><rect x="22.5" y="501" width="1.1" height="15.0" fill="rgb(229,125,1)" rx="2" ry="2" />
<text  x="25.53" y="511.5" ></text>
</g>
<g >
<title>utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::lru_entry::touch (2 samples, 0.04%)</title><rect x="749.9" y="613" width="0.5" height="15.0" fill="rgb(246,152,54)" rx="2" ry="2" />
<text  x="752.91" y="623.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="536.7" y="613" width="0.2" height="15.0" fill="rgb(232,12,6)" rx="2" ry="2" />
<text  x="539.68" y="623.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.02%)</title><rect x="531.5" y="597" width="0.3" height="15.0" fill="rgb(212,172,8)" rx="2" ry="2" />
<text  x="534.54" y="607.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;::unique_ptr (1 samples, 0.02%)</title><rect x="49.6" y="437" width="0.2" height="15.0" fill="rgb(237,126,33)" rx="2" ry="2" />
<text  x="52.60" y="447.5" ></text>
</g>
<g >
<title>position_in_partition_view::position_in_partition_view (1 samples, 0.02%)</title><rect x="275.8" y="517" width="0.2" height="15.0" fill="rgb(234,7,25)" rx="2" ry="2" />
<text  x="278.80" y="527.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::key_is_in_relation (5 samples, 0.09%)</title><rect x="658.2" y="757" width="1.1" height="15.0" fill="rgb(209,154,41)" rx="2" ry="2" />
<text  x="661.17" y="767.5" ></text>
</g>
<g >
<title>ser::serializer&lt;schema_mutations&gt;::write&lt;bytes_ostream&gt; (1 samples, 0.02%)</title><rect x="107.6" y="741" width="0.2" height="15.0" fill="rgb(240,81,21)" rx="2" ry="2" />
<text  x="110.55" y="751.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.09%)</title><rect x="333.5" y="597" width="1.1" height="15.0" fill="rgb(253,77,47)" rx="2" ry="2" />
<text  x="336.53" y="607.5" ></text>
</g>
<g >
<title>service::storage_proxy_stats::write_stats::write_stats (1 samples, 0.02%)</title><rect x="108.4" y="709" width="0.3" height="15.0" fill="rgb(248,88,17)" rx="2" ry="2" />
<text  x="111.45" y="719.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; const, column_definition const*&gt;, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; const, column_definition const*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;, std::hash&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (1 samples, 0.02%)</title><rect x="16.5" y="501" width="0.2" height="15.0" fill="rgb(252,39,47)" rx="2" ry="2" />
<text  x="19.49" y="511.5" ></text>
</g>
<g >
<title>sstables::compacting_sstable_writer::consume_end_of_stream (1 samples, 0.02%)</title><rect x="16.9" y="805" width="0.3" height="15.0" fill="rgb(230,90,20)" rx="2" ry="2" />
<text  x="19.94" y="815.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextTokenStr (45 samples, 0.85%)</title><rect x="25.7" y="581" width="10.0" height="15.0" fill="rgb(237,159,32)" rx="2" ry="2" />
<text  x="28.66" y="591.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::statements::raw::update_statement, cql3::cf_name, std::unique_ptr&lt;cql3::attributes::raw, std::default_delete&lt;cql3::attributes::raw&gt; &gt;, std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;, std::vector&lt;seastar::shared_ptr&lt;cql3::relation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::relation&gt; &gt; &gt;, std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, seastar::lw_shared_ptr&lt;cql3::column_condition::raw&gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, seastar::lw_shared_ptr&lt;cql3::column_condition::raw&gt; &gt; &gt; &gt;, bool&amp;&gt; (3 samples, 0.06%)</title><rect x="60.6" y="661" width="0.6" height="15.0" fill="rgb(213,151,10)" rx="2" ry="2" />
<text  x="63.57" y="671.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::find (3 samples, 0.06%)</title><rect x="658.6" y="725" width="0.7" height="15.0" fill="rgb(243,30,1)" rx="2" ry="2" />
<text  x="661.62" y="735.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.02%)</title><rect x="45.4" y="485" width="0.2" height="15.0" fill="rgb(251,153,11)" rx="2" ry="2" />
<text  x="48.35" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (5 samples, 0.09%)</title><rect x="954.4" y="677" width="1.1" height="15.0" fill="rgb(237,212,35)" rx="2" ry="2" />
<text  x="957.40" y="687.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::value_ptr&gt;::take_value (1 samples, 0.02%)</title><rect x="746.3" y="677" width="0.2" height="15.0" fill="rgb(242,52,48)" rx="2" ry="2" />
<text  x="749.33" y="687.5" ></text>
</g>
<g >
<title>frozen_mutation::partition (1 samples, 0.02%)</title><rect x="1123.3" y="549" width="0.2" height="15.0" fill="rgb(225,182,15)" rx="2" ry="2" />
<text  x="1126.33" y="559.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;void&gt;::set_urgent_state (1 samples, 0.02%)</title><rect x="868.5" y="805" width="0.2" height="15.0" fill="rgb(224,81,16)" rx="2" ry="2" />
<text  x="871.49" y="815.5" ></text>
</g>
<g >
<title>table::make_reader (472 samples, 8.95%)</title><rect x="450.3" y="661" width="105.6" height="15.0" fill="rgb(247,160,25)" rx="2" ry="2" />
<text  x="453.32" y="671.5" >table::make_..</text>
</g>
<g >
<title>std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (1 samples, 0.02%)</title><rect x="435.8" y="613" width="0.2" height="15.0" fill="rgb(205,160,32)" rx="2" ry="2" />
<text  x="438.78" y="623.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;service::digest_read_resolver&gt;::shared_ptr_count_for&lt;seastar::lw_shared_ptr&lt;schema const&gt;&amp;, db::consistency_level&amp;, unsigned long&amp;, unsigned long, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;&amp;&gt; (32 samples, 0.61%)</title><rect x="986.8" y="629" width="7.2" height="15.0" fill="rgb(243,44,4)" rx="2" ry="2" />
<text  x="989.84" y="639.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.02%)</title><rect x="59.4" y="405" width="0.3" height="15.0" fill="rgb(247,5,45)" rx="2" ry="2" />
<text  x="62.45" y="415.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (1 samples, 0.02%)</title><rect x="135.7" y="693" width="0.3" height="15.0" fill="rgb(228,156,26)" rx="2" ry="2" />
<text  x="138.74" y="703.5" ></text>
</g>
<g >
<title>antlr3::IntStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::_LA (1 samples, 0.02%)</title><rect x="31.3" y="533" width="0.2" height="15.0" fill="rgb(212,15,16)" rx="2" ry="2" />
<text  x="34.26" y="543.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.04%)</title><rect x="260.1" y="469" width="0.5" height="15.0" fill="rgb(208,199,51)" rx="2" ry="2" />
<text  x="263.14" y="479.5" ></text>
</g>
<g >
<title>db::assure_sufficient_live_nodes&lt;utils::small_vector&lt;gms::inet_address, 3ul&gt;, std::array&lt;gms::inet_address, 0ul&gt; &gt; (1 samples, 0.02%)</title><rect x="1053.5" y="645" width="0.2" height="15.0" fill="rgb(212,107,35)" rx="2" ry="2" />
<text  x="1056.52" y="655.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (2 samples, 0.04%)</title><rect x="691.5" y="789" width="0.5" height="15.0" fill="rgb(234,15,13)" rx="2" ry="2" />
<text  x="694.51" y="799.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (2 samples, 0.04%)</title><rect x="1092.7" y="693" width="0.4" height="15.0" fill="rgb(241,153,37)" rx="2" ry="2" />
<text  x="1095.67" y="703.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (2 samples, 0.04%)</title><rect x="104.2" y="789" width="0.4" height="15.0" fill="rgb(250,29,15)" rx="2" ry="2" />
<text  x="107.19" y="799.5" ></text>
</g>
<g >
<title>service::storage_service::replicate_to_all_cores (1 samples, 0.02%)</title><rect x="16.7" y="741" width="0.2" height="15.0" fill="rgb(221,40,51)" rx="2" ry="2" />
<text  x="19.71" y="751.5" ></text>
</g>
<g >
<title>dht::murmur3_partitioner::get_token (1 samples, 0.02%)</title><rect x="1123.8" y="517" width="0.2" height="15.0" fill="rgb(211,69,1)" rx="2" ry="2" />
<text  x="1126.77" y="527.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;query::querier&lt; (22 samples, 0.42%)</title><rect x="624.8" y="741" width="5.0" height="15.0" fill="rgb(226,61,24)" rx="2" ry="2" />
<text  x="627.84" y="751.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.02%)</title><rect x="20.1" y="533" width="0.2" height="15.0" fill="rgb(218,4,29)" rx="2" ry="2" />
<text  x="23.07" y="543.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::modification_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::do_flush (28 samples, 0.53%)</title><rect x="870.5" y="789" width="6.3" height="15.0" fill="rgb(206,87,42)" rx="2" ry="2" />
<text  x="873.50" y="799.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (3 samples, 0.06%)</title><rect x="262.2" y="469" width="0.6" height="15.0" fill="rgb(205,190,29)" rx="2" ry="2" />
<text  x="265.15" y="479.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_data_requests (230 samples, 4.36%)</title><rect x="994.9" y="629" width="51.5" height="15.0" fill="rgb(215,56,27)" rx="2" ry="2" />
<text  x="997.90" y="639.5" >servi..</text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (3 samples, 0.06%)</title><rect x="1094.2" y="709" width="0.7" height="15.0" fill="rgb(209,187,41)" rx="2" ry="2" />
<text  x="1097.24" y="719.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (2 samples, 0.04%)</title><rect x="116.3" y="773" width="0.4" height="15.0" fill="rgb(218,110,15)" rx="2" ry="2" />
<text  x="119.28" y="783.5" ></text>
</g>
<g >
<title>operator new (9 samples, 0.17%)</title><rect x="1030.5" y="517" width="2.0" height="15.0" fill="rgb(218,31,12)" rx="2" ry="2" />
<text  x="1033.47" y="527.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_Optional_payload_base (3 samples, 0.06%)</title><rect x="1062.2" y="597" width="0.7" height="15.0" fill="rgb(254,2,8)" rx="2" ry="2" />
<text  x="1065.24" y="607.5" ></text>
</g>
<g >
<title>compound_type&lt; (8 samples, 0.15%)</title><rect x="921.3" y="677" width="1.8" height="15.0" fill="rgb(215,60,7)" rx="2" ry="2" />
<text  x="924.29" y="687.5" ></text>
</g>
<g >
<title>table::query (1 samples, 0.02%)</title><rect x="1168.3" y="805" width="0.2" height="15.0" fill="rgb(236,80,32)" rx="2" ry="2" />
<text  x="1171.30" y="815.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="627.7" y="693" width="0.3" height="15.0" fill="rgb(219,102,37)" rx="2" ry="2" />
<text  x="630.74" y="703.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (2 samples, 0.04%)</title><rect x="44.7" y="565" width="0.4" height="15.0" fill="rgb(241,215,17)" rx="2" ry="2" />
<text  x="47.68" y="575.5" ></text>
</g>
<g >
<title>partition_key_view::legacy_tri_compare (1 samples, 0.02%)</title><rect x="10.4" y="645" width="0.3" height="15.0" fill="rgb(223,206,23)" rx="2" ry="2" />
<text  x="13.45" y="655.5" ></text>
</g>
<g >
<title>sstables::sstable::do_write_simple (1 samples, 0.02%)</title><rect x="15.1" y="773" width="0.3" height="15.0" fill="rgb(237,25,31)" rx="2" ry="2" />
<text  x="18.15" y="783.5" ></text>
</g>
<g >
<title>siglongjmp@GLIBC_2.2.5 (1 samples, 0.02%)</title><rect x="17.6" y="805" width="0.2" height="15.0" fill="rgb(232,162,20)" rx="2" ry="2" />
<text  x="20.61" y="815.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment (19 samples, 0.36%)</title><rect x="521.0" y="517" width="4.3" height="15.0" fill="rgb(217,164,4)" rx="2" ry="2" />
<text  x="524.02" y="527.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;mutation_querier&gt;::_M_reset (1 samples, 0.02%)</title><rect x="139.3" y="757" width="0.2" height="15.0" fill="rgb(219,200,44)" rx="2" ry="2" />
<text  x="142.32" y="767.5" ></text>
</g>
<g >
<title>ser::query_result__partitions&lt;bytes_ostream&gt;::add (6 samples, 0.11%)</title><rect x="352.8" y="469" width="1.3" height="15.0" fill="rgb(248,110,51)" rx="2" ry="2" />
<text  x="355.77" y="479.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::digest_read_resolver&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="997.6" y="613" width="0.2" height="15.0" fill="rgb(236,27,9)" rx="2" ry="2" />
<text  x="1000.58" y="623.5" ></text>
</g>
<g >
<title>query::result_atomic_cell_view::value (1 samples, 0.02%)</title><rect x="649.7" y="645" width="0.2" height="15.0" fill="rgb(227,58,3)" rx="2" ry="2" />
<text  x="652.67" y="655.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::raw::parsed_statement, std::default_delete&lt;cql3::statements::raw::parsed_statement&gt; &gt;::release (1 samples, 0.02%)</title><rect x="65.7" y="645" width="0.2" height="15.0" fill="rgb(208,121,0)" rx="2" ry="2" />
<text  x="68.71" y="655.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;range_tombstone*&gt;::allocate (2 samples, 0.04%)</title><rect x="563.3" y="661" width="0.5" height="15.0" fill="rgb(228,172,33)" rx="2" ry="2" />
<text  x="566.31" y="671.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.06%)</title><rect x="507.8" y="613" width="0.7" height="15.0" fill="rgb(222,130,31)" rx="2" ry="2" />
<text  x="510.82" y="623.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (3 samples, 0.06%)</title><rect x="45.8" y="597" width="0.7" height="15.0" fill="rgb(241,223,17)" rx="2" ry="2" />
<text  x="48.80" y="607.5" ></text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;void&gt;, service::storage_proxy*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt;, db::consistency_level, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, tracing::trace_state_ptr, service_permit, bool, seastar::lw_shared_ptr&lt;cdc::operation_result_tracker&gt; &gt;::make_stage_for_group (38 samples, 0.72%)</title><rect x="1130.9" y="709" width="8.5" height="15.0" fill="rgb(232,190,22)" rx="2" ry="2" />
<text  x="1133.93" y="719.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::~guard (1 samples, 0.02%)</title><rect x="514.5" y="565" width="0.3" height="15.0" fill="rgb(210,141,2)" rx="2" ry="2" />
<text  x="517.53" y="575.5" ></text>
</g>
<g >
<title>mutation_partition::clear_gently (1 samples, 0.02%)</title><rect x="695.5" y="517" width="0.3" height="15.0" fill="rgb(249,103,32)" rx="2" ry="2" />
<text  x="698.54" y="527.5" ></text>
</g>
<g >
<title>boost::dynamic_bitset&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::init_from_unsigned_long (1 samples, 0.02%)</title><rect x="73.3" y="645" width="0.2" height="15.0" fill="rgb(223,97,36)" rx="2" ry="2" />
<text  x="76.32" y="655.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.06%)</title><rect x="848.4" y="709" width="0.6" height="15.0" fill="rgb(233,202,37)" rx="2" ry="2" />
<text  x="851.35" y="719.5" ></text>
</g>
<g >
<title>reader_permit::impl::~impl (23 samples, 0.44%)</title><rect x="122.3" y="757" width="5.2" height="15.0" fill="rgb(207,128,50)" rx="2" ry="2" />
<text  x="125.32" y="767.5" ></text>
</g>
<g >
<title>ser::serializer&lt;schema_mutations&gt;::write&lt;seastar::measuring_output_stream&gt; (1 samples, 0.02%)</title><rect x="107.6" y="693" width="0.2" height="15.0" fill="rgb(226,206,32)" rx="2" ry="2" />
<text  x="110.55" y="703.5" ></text>
</g>
<g >
<title>reader_permit::impl::mark_used (1 samples, 0.02%)</title><rect x="122.1" y="757" width="0.2" height="15.0" fill="rgb(208,120,24)" rx="2" ry="2" />
<text  x="125.09" y="767.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_M_reset (1 samples, 0.02%)</title><rect x="818.8" y="565" width="0.2" height="15.0" fill="rgb(214,192,52)" rx="2" ry="2" />
<text  x="821.82" y="575.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.08%)</title><rect x="152.3" y="741" width="0.9" height="15.0" fill="rgb(210,69,22)" rx="2" ry="2" />
<text  x="155.30" y="751.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (2 samples, 0.04%)</title><rect x="687.9" y="773" width="0.5" height="15.0" fill="rgb(249,150,13)" rx="2" ry="2" />
<text  x="690.93" y="783.5" ></text>
</g>
<g >
<title>bytes_ostream::linearize (1 samples, 0.02%)</title><rect x="1134.3" y="469" width="0.2" height="15.0" fill="rgb(208,42,27)" rx="2" ry="2" />
<text  x="1137.29" y="479.5" ></text>
</g>
<g >
<title>seastar::future&lt;std::tuple&lt;std::optional&lt;clustering_key_prefix&gt; &gt; &gt;::then_impl_nrvo&lt;query::querier&lt; (1 samples, 0.02%)</title><rect x="559.3" y="725" width="0.2" height="15.0" fill="rgb(243,182,12)" rx="2" ry="2" />
<text  x="562.28" y="735.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (2 samples, 0.04%)</title><rect x="447.0" y="725" width="0.4" height="15.0" fill="rgb(231,227,16)" rx="2" ry="2" />
<text  x="449.96" y="735.5" ></text>
</g>
<g >
<title>auth::get_permissions (4 samples, 0.08%)</title><rect x="76.2" y="677" width="0.9" height="15.0" fill="rgb(235,73,7)" rx="2" ry="2" />
<text  x="79.23" y="687.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::raw::update_statement, std::default_delete&lt;cql3::statements::raw::update_statement&gt; &gt;::__uniq_ptr_impl (1 samples, 0.02%)</title><rect x="63.9" y="661" width="0.2" height="15.0" fill="rgb(234,100,19)" rx="2" ry="2" />
<text  x="66.92" y="671.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.02%)</title><rect x="78.5" y="661" width="0.2" height="15.0" fill="rgb(250,70,0)" rx="2" ry="2" />
<text  x="81.46" y="671.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;service::storage_proxy_coordinator_query_result&gt;::set_value&lt;service::storage_proxy_coordinator_query_result&gt; (4 samples, 0.08%)</title><rect x="1147.3" y="789" width="0.9" height="15.0" fill="rgb(241,40,23)" rx="2" ry="2" />
<text  x="1150.27" y="799.5" ></text>
</g>
<g >
<title>seastar::internal::uninitialized_wrapper_base&lt;service::storage_proxy_coordinator_query_result, false&gt;::uninitialized_set&lt;service::storage_proxy_coordinator_query_result&gt; (10 samples, 0.19%)</title><rect x="685.7" y="773" width="2.2" height="15.0" fill="rgb(244,28,11)" rx="2" ry="2" />
<text  x="688.69" y="783.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::get0 (2 samples, 0.04%)</title><rect x="1146.4" y="789" width="0.4" height="15.0" fill="rgb(227,137,45)" rx="2" ry="2" />
<text  x="1149.37" y="799.5" ></text>
</g>
<g >
<title>partition_snapshot::versions (1 samples, 0.02%)</title><rect x="279.8" y="517" width="0.3" height="15.0" fill="rgb(254,76,17)" rx="2" ry="2" />
<text  x="282.83" y="527.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::emplace_back&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; const&amp;&gt; (2 samples, 0.04%)</title><rect x="777.9" y="661" width="0.4" height="15.0" fill="rgb(226,169,35)" rx="2" ry="2" />
<text  x="780.87" y="671.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_cql (1 samples, 0.02%)</title><rect x="672.9" y="805" width="0.3" height="15.0" fill="rgb(227,226,10)" rx="2" ry="2" />
<text  x="675.94" y="815.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (1 samples, 0.02%)</title><rect x="602.5" y="709" width="0.2" height="15.0" fill="rgb(215,144,25)" rx="2" ry="2" />
<text  x="605.46" y="719.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::execute_without_condition (28 samples, 0.53%)</title><rect x="870.5" y="725" width="6.3" height="15.0" fill="rgb(235,10,38)" rx="2" ry="2" />
<text  x="873.50" y="735.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;bool  (1 samples, 0.02%)</title><rect x="627.3" y="709" width="0.2" height="15.0" fill="rgb(244,114,50)" rx="2" ry="2" />
<text  x="630.30" y="719.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (1 samples, 0.02%)</title><rect x="16.5" y="837" width="0.2" height="15.0" fill="rgb(249,96,25)" rx="2" ry="2" />
<text  x="19.49" y="847.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.06%)</title><rect x="566.9" y="709" width="0.7" height="15.0" fill="rgb(228,82,30)" rx="2" ry="2" />
<text  x="569.89" y="719.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::operator (2 samples, 0.04%)</title><rect x="851.9" y="645" width="0.5" height="15.0" fill="rgb(252,15,13)" rx="2" ry="2" />
<text  x="854.93" y="655.5" ></text>
</g>
<g >
<title>__strcmp_avx2 (6 samples, 0.11%)</title><rect x="12.9" y="885" width="1.4" height="15.0" fill="rgb(226,79,3)" rx="2" ry="2" />
<text  x="15.91" y="895.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_initialize_map (14 samples, 0.27%)</title><rect x="563.1" y="677" width="3.1" height="15.0" fill="rgb(235,53,37)" rx="2" ry="2" />
<text  x="566.08" y="687.5" ></text>
</g>
<g >
<title>std::__lower_bound&lt;__gnu_cxx::__normal_iterator&lt;long*, std::vector&lt;long, std::allocator&lt;long&gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_less_val&gt; (3 samples, 0.06%)</title><rect x="1160.0" y="757" width="0.7" height="15.0" fill="rgb(218,118,28)" rx="2" ry="2" />
<text  x="1163.02" y="767.5" ></text>
</g>
<g >
<title>clustering_key_prefix::from_range&lt;std::vector&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, std::allocator&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="873.6" y="645" width="0.3" height="15.0" fill="rgb(233,105,43)" rx="2" ry="2" />
<text  x="876.63" y="655.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (16 samples, 0.30%)</title><rect x="850.6" y="677" width="3.6" height="15.0" fill="rgb(253,44,31)" rx="2" ry="2" />
<text  x="853.59" y="687.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (2 samples, 0.04%)</title><rect x="54.7" y="421" width="0.5" height="15.0" fill="rgb(217,157,8)" rx="2" ry="2" />
<text  x="57.75" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (2 samples, 0.04%)</title><rect x="1058.0" y="597" width="0.4" height="15.0" fill="rgb(210,51,48)" rx="2" ry="2" />
<text  x="1060.99" y="607.5" ></text>
</g>
<g >
<title>service::client_state::has_access (4 samples, 0.08%)</title><rect x="76.2" y="741" width="0.9" height="15.0" fill="rgb(208,165,1)" rx="2" ry="2" />
<text  x="79.23" y="751.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::query_processor::process_authorized_statement (11 samples, 0.21%)</title><rect x="650.1" y="805" width="2.5" height="15.0" fill="rgb(246,13,29)" rx="2" ry="2" />
<text  x="653.12" y="815.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.08%)</title><rect x="522.6" y="485" width="0.9" height="15.0" fill="rgb(211,195,26)" rx="2" ry="2" />
<text  x="525.59" y="495.5" ></text>
</g>
<g >
<title>clustering_row::clustering_row (1 samples, 0.02%)</title><rect x="869.2" y="597" width="0.2" height="15.0" fill="rgb(214,97,14)" rx="2" ry="2" />
<text  x="872.16" y="607.5" ></text>
</g>
<g >
<title>partition_version_ref::operator (2 samples, 0.04%)</title><rect x="282.5" y="517" width="0.5" height="15.0" fill="rgb(205,26,30)" rx="2" ry="2" />
<text  x="285.51" y="527.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (476 samples, 9.03%)</title><rect x="332.9" y="661" width="106.5" height="15.0" fill="rgb(214,81,13)" rx="2" ry="2" />
<text  x="335.86" y="671.5" >flat_mutation..</text>
</g>
<g >
<title>bytes_ostream::alloc_new (1 samples, 0.02%)</title><rect x="1134.1" y="469" width="0.2" height="15.0" fill="rgb(210,198,32)" rx="2" ry="2" />
<text  x="1137.07" y="479.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="37.5" y="613" width="0.2" height="15.0" fill="rgb(249,214,16)" rx="2" ry="2" />
<text  x="40.52" y="623.5" ></text>
</g>
<g >
<title>__tls_init (1 samples, 0.02%)</title><rect x="78.9" y="725" width="0.2" height="15.0" fill="rgb(212,167,15)" rx="2" ry="2" />
<text  x="81.91" y="735.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.02%)</title><rect x="20.1" y="677" width="0.2" height="15.0" fill="rgb(238,58,4)" rx="2" ry="2" />
<text  x="23.07" y="687.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_no_esft&lt;query::read_command&gt;::shared_ptr_no_esft&lt;utils::UUID const&amp;, utils::UUID, query::partition_slice, query::max_result_size, query::row_limit, query::partition_limit, std::chrono::time_point&lt;gc_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt; &gt;&amp;, std::optional&lt;tracing::trace_info&gt;, utils::UUID, seastar::bool_class&lt;query::is_first_page_tag&gt; const&amp;, long&gt; (11 samples, 0.21%)</title><rect x="1113.0" y="709" width="2.5" height="15.0" fill="rgb(206,83,49)" rx="2" ry="2" />
<text  x="1116.03" y="719.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::set_tokText (1 samples, 0.02%)</title><rect x="26.6" y="565" width="0.2" height="15.0" fill="rgb(207,3,17)" rx="2" ry="2" />
<text  x="29.56" y="575.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (1 samples, 0.02%)</title><rect x="1057.1" y="629" width="0.2" height="15.0" fill="rgb(249,59,10)" rx="2" ry="2" />
<text  x="1060.10" y="639.5" ></text>
</g>
<g >
<title>__tls_init (1 samples, 0.02%)</title><rect x="505.1" y="597" width="0.3" height="15.0" fill="rgb(240,82,6)" rx="2" ry="2" />
<text  x="508.13" y="607.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (1 samples, 0.02%)</title><rect x="853.0" y="629" width="0.3" height="15.0" fill="rgb(248,57,35)" rx="2" ry="2" />
<text  x="856.05" y="639.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="564.2" y="661" width="0.2" height="15.0" fill="rgb(219,190,2)" rx="2" ry="2" />
<text  x="567.20" y="671.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.02%)</title><rect x="10.4" y="869" width="0.3" height="15.0" fill="rgb(250,183,38)" rx="2" ry="2" />
<text  x="13.45" y="879.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="678.3" y="773" width="0.2" height="15.0" fill="rgb(226,67,38)" rx="2" ry="2" />
<text  x="681.31" y="783.5" ></text>
</g>
<g >
<title>bplus::searcher&lt;dht::ring_position, long, dht::raw_token_less_comparator, 16ul,  (16 samples, 0.30%)</title><rect x="487.9" y="581" width="3.6" height="15.0" fill="rgb(228,182,10)" rx="2" ry="2" />
<text  x="490.91" y="591.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="72.0" y="613" width="0.2" height="15.0" fill="rgb(210,179,5)" rx="2" ry="2" />
<text  x="74.98" y="623.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned char, std::pair&lt;unsigned char const, std::optional&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned char const, std::optional&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned char&gt;, std::hash&lt;unsigned char&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::clear (4 samples, 0.08%)</title><rect x="680.1" y="741" width="0.9" height="15.0" fill="rgb(211,123,10)" rx="2" ry="2" />
<text  x="683.10" y="751.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::make_ready&lt; (1 samples, 0.02%)</title><rect x="868.3" y="805" width="0.2" height="15.0" fill="rgb(225,185,16)" rx="2" ry="2" />
<text  x="871.26" y="815.5" ></text>
</g>
<g >
<title>std::push_heap&lt;mutation_reader_merger::reader_and_fragment*, mutation_reader_merger::reader_heap_compare&gt; (4 samples, 0.08%)</title><rect x="196.8" y="565" width="0.9" height="15.0" fill="rgb(233,100,40)" rx="2" ry="2" />
<text  x="199.82" y="575.5" ></text>
</g>
<g >
<title>allocation_strategy::alloc&lt;blob_storage&gt; (1 samples, 0.02%)</title><rect x="876.1" y="549" width="0.2" height="15.0" fill="rgb(236,35,34)" rx="2" ry="2" />
<text  x="879.09" y="559.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;query::result_digest, 3ul&gt;::~small_vector (2 samples, 0.04%)</title><rect x="705.2" y="773" width="0.4" height="15.0" fill="rgb(242,216,47)" rx="2" ry="2" />
<text  x="708.16" y="783.5" ></text>
</g>
<g >
<title>logalloc::region_impl::free (1 samples, 0.02%)</title><rect x="1127.4" y="453" width="0.2" height="15.0" fill="rgb(218,175,35)" rx="2" ry="2" />
<text  x="1130.35" y="463.5" ></text>
</g>
<g >
<title>locator::simple_snitch::sort_by_proximity (6 samples, 0.11%)</title><rect x="1067.8" y="629" width="1.4" height="15.0" fill="rgb(248,201,7)" rx="2" ry="2" />
<text  x="1070.84" y="639.5" ></text>
</g>
<g >
<title>allocation_strategy::construct&lt;rows_entry, clustering_key_prefix const&amp;&gt; (1 samples, 0.02%)</title><rect x="874.8" y="581" width="0.2" height="15.0" fill="rgb(250,47,22)" rx="2" ry="2" />
<text  x="877.75" y="591.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (1 samples, 0.02%)</title><rect x="869.2" y="661" width="0.2" height="15.0" fill="rgb(232,174,7)" rx="2" ry="2" />
<text  x="872.16" y="671.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::normalColumnOperation (48 samples, 0.91%)</title><rect x="46.5" y="629" width="10.7" height="15.0" fill="rgb(220,214,41)" rx="2" ry="2" />
<text  x="49.47" y="639.5" ></text>
</g>
<g >
<title>seastar::repeat&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (1 samples, 0.02%)</title><rect x="106.7" y="469" width="0.2" height="15.0" fill="rgb(230,18,30)" rx="2" ry="2" />
<text  x="109.66" y="479.5" ></text>
</g>
<g >
<title>auth::data_resource_view::data_resource_view (1 samples, 0.02%)</title><rect x="76.0" y="741" width="0.2" height="15.0" fill="rgb(228,204,13)" rx="2" ry="2" />
<text  x="79.00" y="751.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt; &gt;::invoke&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (130 samples, 2.46%)</title><rect x="1009.7" y="581" width="29.1" height="15.0" fill="rgb(238,218,0)" rx="2" ry="2" />
<text  x="1012.67" y="591.5" >se..</text>
</g>
<g >
<title>absl::hash_internal::AbslHashValue&lt;absl::hash_internal::HashState&gt; (1 samples, 0.02%)</title><rect x="835.4" y="597" width="0.2" height="15.0" fill="rgb(242,13,29)" rx="2" ry="2" />
<text  x="838.37" y="607.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (1 samples, 0.02%)</title><rect x="624.2" y="693" width="0.2" height="15.0" fill="rgb(210,191,11)" rx="2" ry="2" />
<text  x="627.16" y="703.5" ></text>
</g>
<g >
<title>clustering_row::clustering_row (1 samples, 0.02%)</title><rect x="106.7" y="101" width="0.2" height="15.0" fill="rgb(239,197,10)" rx="2" ry="2" />
<text  x="109.66" y="111.5" ></text>
</g>
<g >
<title>std::pair&lt;auth::role_or_anonymous, auth::resource&gt;::pair&lt;auth::role_or_anonymous, auth::resource, true&gt; (1 samples, 0.02%)</title><rect x="817.7" y="581" width="0.2" height="15.0" fill="rgb(243,178,0)" rx="2" ry="2" />
<text  x="820.70" y="591.5" ></text>
</g>
<g >
<title>allocation_strategy::destroy&lt;rows_entry&gt; (1 samples, 0.02%)</title><rect x="14.5" y="741" width="0.2" height="15.0" fill="rgb(246,214,6)" rx="2" ry="2" />
<text  x="17.47" y="751.5" ></text>
</g>
<g >
<title>__dynamic_cast (1 samples, 0.02%)</title><rect x="10.2" y="901" width="0.2" height="15.0" fill="rgb(214,156,26)" rx="2" ry="2" />
<text  x="13.22" y="911.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="100.2" y="757" width="0.2" height="15.0" fill="rgb(227,112,51)" rx="2" ry="2" />
<text  x="103.17" y="767.5" ></text>
</g>
<g >
<title>boost::variant&lt;boost::variant&lt;ser::live_cell_view, ser::expiring_cell_view, ser::dead_cell_view, ser::counter_cell_view, ser::unknown_variant_type&gt;, ser::collection_cell_view, ser::unknown_variant_type&gt;::destroy_content (1 samples, 0.02%)</title><rect x="1126.0" y="533" width="0.2" height="15.0" fill="rgb(210,40,17)" rx="2" ry="2" />
<text  x="1129.01" y="543.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (2 samples, 0.04%)</title><rect x="940.3" y="709" width="0.5" height="15.0" fill="rgb(243,188,53)" rx="2" ry="2" />
<text  x="943.31" y="719.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::clear (1 samples, 0.02%)</title><rect x="827.1" y="677" width="0.2" height="15.0" fill="rgb(212,166,14)" rx="2" ry="2" />
<text  x="830.10" y="687.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::schedule&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::make_data_requests (5 samples, 0.09%)</title><rect x="996.2" y="581" width="1.2" height="15.0" fill="rgb(222,71,7)" rx="2" ry="2" />
<text  x="999.24" y="591.5" ></text>
</g>
<g >
<title>database::has_keyspace (9 samples, 0.17%)</title><rect x="833.8" y="661" width="2.0" height="15.0" fill="rgb(220,186,12)" rx="2" ry="2" />
<text  x="836.81" y="671.5" ></text>
</g>
<g >
<title>std::apply&lt;service::client_state::check_has_permission (4 samples, 0.08%)</title><rect x="76.2" y="693" width="0.9" height="15.0" fill="rgb(244,55,5)" rx="2" ry="2" />
<text  x="79.23" y="703.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::query_state&gt;::~shared_ptr (3 samples, 0.06%)</title><rect x="677.0" y="789" width="0.6" height="15.0" fill="rgb(222,229,41)" rx="2" ry="2" />
<text  x="679.97" y="799.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (2 samples, 0.04%)</title><rect x="203.1" y="565" width="0.4" height="15.0" fill="rgb(217,203,50)" rx="2" ry="2" />
<text  x="206.09" y="575.5" ></text>
</g>
<g >
<title>mutation_partition_view::do_accept&lt;partition_builder&gt; (1 samples, 0.02%)</title><rect x="106.0" y="757" width="0.2" height="15.0" fill="rgb(254,155,25)" rx="2" ry="2" />
<text  x="108.98" y="767.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (4 samples, 0.08%)</title><rect x="799.1" y="469" width="0.9" height="15.0" fill="rgb(221,33,32)" rx="2" ry="2" />
<text  x="802.13" y="479.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.02%)</title><rect x="38.9" y="629" width="0.2" height="15.0" fill="rgb(234,116,23)" rx="2" ry="2" />
<text  x="41.86" y="639.5" ></text>
</g>
<g >
<title>to_hex (1 samples, 0.02%)</title><rect x="77.8" y="805" width="0.2" height="15.0" fill="rgb(223,58,27)" rx="2" ry="2" />
<text  x="80.79" y="815.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_singular (566 samples, 10.73%)</title><rect x="964.9" y="677" width="126.7" height="15.0" fill="rgb(207,128,45)" rx="2" ry="2" />
<text  x="967.92" y="687.5" >service::storag..</text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (4 samples, 0.08%)</title><rect x="1015.0" y="517" width="0.9" height="15.0" fill="rgb(213,47,50)" rx="2" ry="2" />
<text  x="1018.04" y="527.5" ></text>
</g>
<g >
<title>cql3::expr::make_conjunction (3 samples, 0.06%)</title><rect x="70.4" y="613" width="0.7" height="15.0" fill="rgb(217,176,13)" rx="2" ry="2" />
<text  x="73.41" y="623.5" ></text>
</g>
<g >
<title>sstables::single_tagged_union_member_serdes_for&lt;sstables::disk_set_of_tagged_union&lt;sstables::scylla_metadata_type, sstables::disk_tagged_union_member&lt;sstables::scylla_metadata_type,  (1 samples, 0.02%)</title><rect x="16.9" y="677" width="0.3" height="15.0" fill="rgb(231,111,18)" rx="2" ry="2" />
<text  x="19.94" y="687.5" ></text>
</g>
<g >
<title>managed_bytes::free_chain (1 samples, 0.02%)</title><rect x="78.5" y="645" width="0.2" height="15.0" fill="rgb(206,107,18)" rx="2" ry="2" />
<text  x="81.46" y="655.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (1 samples, 0.02%)</title><rect x="820.8" y="629" width="0.3" height="15.0" fill="rgb(239,127,38)" rx="2" ry="2" />
<text  x="823.83" y="639.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_locally (3 samples, 0.06%)</title><rect x="1132.5" y="517" width="0.7" height="15.0" fill="rgb(215,25,29)" rx="2" ry="2" />
<text  x="1135.50" y="527.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.02%)</title><rect x="42.7" y="469" width="0.2" height="15.0" fill="rgb(205,179,5)" rx="2" ry="2" />
<text  x="45.67" y="479.5" ></text>
</g>
<g >
<title>ser::set_size&lt;bytes_ostream, clustering_key_prefix&gt; (1 samples, 0.02%)</title><rect x="1136.8" y="405" width="0.2" height="15.0" fill="rgb(251,70,43)" rx="2" ry="2" />
<text  x="1139.75" y="415.5" ></text>
</g>
<g >
<title>db::schema_tables::create_table_from_mutations (1 samples, 0.02%)</title><rect x="106.2" y="725" width="0.2" height="15.0" fill="rgb(241,134,34)" rx="2" ry="2" />
<text  x="109.21" y="735.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.02%)</title><rect x="42.4" y="613" width="0.3" height="15.0" fill="rgb(254,5,41)" rx="2" ry="2" />
<text  x="45.44" y="623.5" ></text>
</g>
<g >
<title>__tls_init (1 samples, 0.02%)</title><rect x="79.4" y="645" width="0.2" height="15.0" fill="rgb(220,172,16)" rx="2" ry="2" />
<text  x="82.36" y="655.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::~impl (2 samples, 0.04%)</title><rect x="574.5" y="629" width="0.4" height="15.0" fill="rgb(234,90,46)" rx="2" ry="2" />
<text  x="577.49" y="639.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::operator (11 samples, 0.21%)</title><rect x="186.8" y="565" width="2.4" height="15.0" fill="rgb(246,92,31)" rx="2" ry="2" />
<text  x="189.75" y="575.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.02%)</title><rect x="106.4" y="693" width="0.3" height="15.0" fill="rgb(247,53,1)" rx="2" ry="2" />
<text  x="109.43" y="703.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (2 samples, 0.04%)</title><rect x="81.1" y="677" width="0.5" height="15.0" fill="rgb(216,63,31)" rx="2" ry="2" />
<text  x="84.15" y="687.5" ></text>
</g>
<g >
<title>__strcmp_avx2 (1 samples, 0.02%)</title><rect x="78.0" y="917" width="0.2" height="15.0" fill="rgb(235,0,52)" rx="2" ry="2" />
<text  x="81.02" y="927.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::digest_read_result&gt;::then_wrapped_nrvo&lt;void, service::abstract_read_executor::execute (17 samples, 0.32%)</title><rect x="980.4" y="629" width="3.8" height="15.0" fill="rgb(248,19,21)" rx="2" ry="2" />
<text  x="983.36" y="639.5" ></text>
</g>
<g >
<title>memtable::find_or_create_partition_slow (7 samples, 0.13%)</title><rect x="1123.5" y="549" width="1.6" height="15.0" fill="rgb(248,114,11)" rx="2" ry="2" />
<text  x="1126.55" y="559.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (2 samples, 0.04%)</title><rect x="1021.1" y="485" width="0.4" height="15.0" fill="rgb(228,107,9)" rx="2" ry="2" />
<text  x="1024.08" y="495.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take (1 samples, 0.02%)</title><rect x="617.7" y="741" width="0.2" height="15.0" fill="rgb(248,138,1)" rx="2" ry="2" />
<text  x="620.68" y="751.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.02%)</title><rect x="37.5" y="645" width="0.2" height="15.0" fill="rgb(243,8,4)" rx="2" ry="2" />
<text  x="40.52" y="655.5" ></text>
</g>
<g >
<title>database::query (106 samples, 2.01%)</title><rect x="1010.3" y="565" width="23.8" height="15.0" fill="rgb(227,179,43)" rx="2" ry="2" />
<text  x="1013.34" y="575.5" >d..</text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.02%)</title><rect x="45.4" y="533" width="0.2" height="15.0" fill="rgb(217,184,53)" rx="2" ry="2" />
<text  x="48.35" y="543.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.02%)</title><rect x="495.5" y="517" width="0.2" height="15.0" fill="rgb(224,168,28)" rx="2" ry="2" />
<text  x="498.51" y="527.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::create_aggregate_statement, std::default_delete&lt;cql3::statements::create_aggregate_statement&gt; &gt;::~unique_ptr (2 samples, 0.04%)</title><rect x="64.6" y="693" width="0.4" height="15.0" fill="rgb(232,163,45)" rx="2" ry="2" />
<text  x="67.59" y="703.5" ></text>
</g>
<g >
<title>cql3::keyspace_element_name::operator= (1 samples, 0.02%)</title><rect x="40.2" y="645" width="0.2" height="15.0" fill="rgb(240,92,35)" rx="2" ry="2" />
<text  x="43.20" y="655.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector (2 samples, 0.04%)</title><rect x="1065.2" y="629" width="0.4" height="15.0" fill="rgb(210,85,32)" rx="2" ry="2" />
<text  x="1068.15" y="639.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::abstract_read_executor&gt;::~shared_ptr (2 samples, 0.04%)</title><rect x="977.2" y="661" width="0.5" height="15.0" fill="rgb(241,211,6)" rx="2" ry="2" />
<text  x="980.22" y="671.5" ></text>
</g>
<g >
<title>position_in_partition::position_in_partition (4 samples, 0.08%)</title><rect x="274.2" y="533" width="0.9" height="15.0" fill="rgb(246,44,9)" rx="2" ry="2" />
<text  x="277.24" y="543.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt; &gt;::satisfy_with_result_of&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::then_wrapped_nrvo&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (9 samples, 0.17%)</title><rect x="674.3" y="789" width="2.0" height="15.0" fill="rgb(218,109,9)" rx="2" ry="2" />
<text  x="677.28" y="799.5" ></text>
</g>
<g >
<title>managed_bytes::operator= (7 samples, 0.13%)</title><rect x="338.2" y="565" width="1.6" height="15.0" fill="rgb(222,81,48)" rx="2" ry="2" />
<text  x="341.23" y="575.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (1 samples, 0.02%)</title><rect x="442.5" y="677" width="0.2" height="15.0" fill="rgb(226,139,0)" rx="2" ry="2" />
<text  x="445.49" y="687.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (2 samples, 0.04%)</title><rect x="697.8" y="773" width="0.4" height="15.0" fill="rgb(218,168,22)" rx="2" ry="2" />
<text  x="700.77" y="783.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;11ul, cql3::expr::untyped_constant&gt; (1 samples, 0.02%)</title><rect x="53.4" y="453" width="0.2" height="15.0" fill="rgb(208,60,37)" rx="2" ry="2" />
<text  x="56.41" y="463.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.02%)</title><rect x="52.7" y="581" width="0.3" height="15.0" fill="rgb(238,84,7)" rx="2" ry="2" />
<text  x="55.73" y="591.5" ></text>
</g>
<g >
<title>operator new (7 samples, 0.13%)</title><rect x="462.6" y="549" width="1.6" height="15.0" fill="rgb(220,183,19)" rx="2" ry="2" />
<text  x="465.62" y="559.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (5 samples, 0.09%)</title><rect x="816.4" y="533" width="1.1" height="15.0" fill="rgb(250,228,2)" rx="2" ry="2" />
<text  x="819.36" y="543.5" ></text>
</g>
<g >
<title>std::move&lt;std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;&gt; (1 samples, 0.02%)</title><rect x="53.2" y="549" width="0.2" height="15.0" fill="rgb(253,163,30)" rx="2" ry="2" />
<text  x="56.18" y="559.5" ></text>
</g>
<g >
<title>logalloc::region_impl::free (1 samples, 0.02%)</title><rect x="15.6" y="773" width="0.2" height="15.0" fill="rgb(213,157,21)" rx="2" ry="2" />
<text  x="18.59" y="783.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::construct&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (1 samples, 0.02%)</title><rect x="24.1" y="549" width="0.2" height="15.0" fill="rgb(226,22,53)" rx="2" ry="2" />
<text  x="27.10" y="559.5" ></text>
</g>
<g >
<title>db::validate_for_read (1 samples, 0.02%)</title><rect x="1109.7" y="725" width="0.2" height="15.0" fill="rgb(227,66,52)" rx="2" ry="2" />
<text  x="1112.68" y="735.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::visit&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (1 samples, 0.02%)</title><rect x="78.5" y="677" width="0.2" height="15.0" fill="rgb(234,130,52)" rx="2" ry="2" />
<text  x="81.46" y="687.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::~vector (5 samples, 0.09%)</title><rect x="459.7" y="565" width="1.1" height="15.0" fill="rgb(232,33,33)" rx="2" ry="2" />
<text  x="462.72" y="575.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::read_next (1 samples, 0.02%)</title><rect x="106.7" y="181" width="0.2" height="15.0" fill="rgb(219,63,21)" rx="2" ry="2" />
<text  x="109.66" y="191.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (3 samples, 0.06%)</title><rect x="92.3" y="789" width="0.7" height="15.0" fill="rgb(221,156,18)" rx="2" ry="2" />
<text  x="95.34" y="799.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (8 samples, 0.15%)</title><rect x="280.3" y="485" width="1.8" height="15.0" fill="rgb(228,68,31)" rx="2" ry="2" />
<text  x="283.28" y="495.5" ></text>
</g>
<g >
<title>service::storage_proxy::create_write_response_handler (20 samples, 0.38%)</title><rect x="1133.6" y="533" width="4.5" height="15.0" fill="rgb(254,198,37)" rx="2" ry="2" />
<text  x="1136.62" y="543.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;boost::iterator_range&lt;mutation_fragment*&gt; &gt;::take_value (2 samples, 0.04%)</title><rect x="306.0" y="629" width="0.5" height="15.0" fill="rgb(213,50,21)" rx="2" ry="2" />
<text  x="309.01" y="639.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (2 samples, 0.04%)</title><rect x="43.8" y="421" width="0.4" height="15.0" fill="rgb(215,214,17)" rx="2" ry="2" />
<text  x="46.78" y="431.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;sstables::sstable_version_types, std::pair&lt;sstables::sstable_version_types const, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, std::allocator&lt;std::pair&lt;sstables::sstable_version_types const, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;sstables::sstable_version_types&gt;, seastar::enum_hash&lt;sstables::sstable_version_types&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable&lt;std::pair&lt;sstables::sstable_version_types const, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const*&gt; (4 samples, 0.08%)</title><rect x="82.5" y="917" width="0.9" height="15.0" fill="rgb(245,93,49)" rx="2" ry="2" />
<text  x="85.49" y="927.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::get_static_row (13 samples, 0.25%)</title><rect x="291.5" y="549" width="2.9" height="15.0" fill="rgb(232,69,49)" rx="2" ry="2" />
<text  x="294.46" y="559.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (14 samples, 0.27%)</title><rect x="804.1" y="469" width="3.1" height="15.0" fill="rgb(223,140,49)" rx="2" ry="2" />
<text  x="807.05" y="479.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (1 samples, 0.02%)</title><rect x="1091.6" y="677" width="0.2" height="15.0" fill="rgb(226,117,33)" rx="2" ry="2" />
<text  x="1094.55" y="687.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (3 samples, 0.06%)</title><rect x="188.5" y="549" width="0.7" height="15.0" fill="rgb(247,164,49)" rx="2" ry="2" />
<text  x="191.54" y="559.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (1 samples, 0.02%)</title><rect x="1027.1" y="501" width="0.2" height="15.0" fill="rgb(252,229,17)" rx="2" ry="2" />
<text  x="1030.12" y="511.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_live_endpoints (3 samples, 0.06%)</title><rect x="1065.6" y="645" width="0.7" height="15.0" fill="rgb(231,136,8)" rx="2" ry="2" />
<text  x="1068.60" y="655.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (1 samples, 0.02%)</title><rect x="561.5" y="645" width="0.2" height="15.0" fill="rgb(249,29,31)" rx="2" ry="2" />
<text  x="564.52" y="655.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (2 samples, 0.04%)</title><rect x="372.2" y="469" width="0.5" height="15.0" fill="rgb(251,157,35)" rx="2" ry="2" />
<text  x="375.23" y="479.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.02%)</title><rect x="24.8" y="549" width="0.2" height="15.0" fill="rgb(251,185,2)" rx="2" ry="2" />
<text  x="27.77" y="559.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consumer_adapter&lt;sstables::sstable_writer&gt;::consume (4 samples, 0.08%)</title><rect x="80.9" y="773" width="0.9" height="15.0" fill="rgb(244,158,13)" rx="2" ry="2" />
<text  x="83.93" y="783.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;service::digest_read_result&gt;::set_value&lt;service::digest_read_result&gt; (3 samples, 0.06%)</title><rect x="712.5" y="725" width="0.7" height="15.0" fill="rgb(250,94,22)" rx="2" ry="2" />
<text  x="715.54" y="735.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::~small_vector (2 samples, 0.04%)</title><rect x="468.2" y="597" width="0.5" height="15.0" fill="rgb(216,11,46)" rx="2" ry="2" />
<text  x="471.22" y="607.5" ></text>
</g>
<g >
<title>partition_entry::partition_entry (2 samples, 0.04%)</title><rect x="1124.0" y="437" width="0.4" height="15.0" fill="rgb(243,204,45)" rx="2" ry="2" />
<text  x="1127.00" y="447.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;void&gt;, service::storage_proxy*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt;, db::consistency_level, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, tracing::trace_state_ptr, service_permit, bool, seastar::lw_shared_ptr&lt;cdc::operation_result_tracker&gt; &gt;::do_flush (40 samples, 0.76%)</title><rect x="1130.5" y="789" width="8.9" height="15.0" fill="rgb(211,119,2)" rx="2" ry="2" />
<text  x="1133.49" y="799.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::process_results (38 samples, 0.72%)</title><rect x="654.1" y="789" width="8.5" height="15.0" fill="rgb(218,124,29)" rx="2" ry="2" />
<text  x="657.14" y="799.5" ></text>
</g>
<g >
<title>range_tombstone_stream::get_next (2 samples, 0.04%)</title><rect x="273.3" y="469" width="0.5" height="15.0" fill="rgb(240,228,25)" rx="2" ry="2" />
<text  x="276.34" y="479.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;position_in_partition&gt;::_M_reset (1 samples, 0.02%)</title><rect x="278.0" y="549" width="0.3" height="15.0" fill="rgb(215,170,11)" rx="2" ry="2" />
<text  x="281.04" y="559.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_d36847801b836ea118d696d8a8ab9431a1179ab0] (1 samples, 0.02%)</title><rect x="18.9" y="789" width="0.3" height="15.0" fill="rgb(225,18,10)" rx="2" ry="2" />
<text  x="21.95" y="799.5" ></text>
</g>
<g >
<title>seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;::swap (2 samples, 0.04%)</title><rect x="761.1" y="709" width="0.4" height="15.0" fill="rgb(215,163,20)" rx="2" ry="2" />
<text  x="764.09" y="719.5" ></text>
</g>
<g >
<title>service::storage_proxy::do_mutate (32 samples, 0.61%)</title><rect x="1131.2" y="645" width="7.1" height="15.0" fill="rgb(253,4,2)" rx="2" ry="2" />
<text  x="1134.16" y="655.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="1133.2" y="549" width="0.2" height="15.0" fill="rgb(218,155,37)" rx="2" ry="2" />
<text  x="1136.17" y="559.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE9then_implIZNS6_14discard_resultEvEUlDpOT_E_NS0_IvEEEET0_OT_ (5 samples, 0.09%)</title><rect x="724.6" y="789" width="1.1" height="15.0" fill="rgb(214,122,40)" rx="2" ry="2" />
<text  x="727.62" y="799.5" ></text>
</g>
<g >
<title>sstables::mc::writer::consume_end_of_stream (1 samples, 0.02%)</title><rect x="10.4" y="789" width="0.3" height="15.0" fill="rgb(238,219,3)" rx="2" ry="2" />
<text  x="13.45" y="799.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::invoke&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (49 samples, 0.93%)</title><rect x="314.3" y="645" width="10.9" height="15.0" fill="rgb(207,202,27)" rx="2" ry="2" />
<text  x="317.29" y="655.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (2 samples, 0.04%)</title><rect x="47.1" y="501" width="0.5" height="15.0" fill="rgb(228,220,6)" rx="2" ry="2" />
<text  x="50.14" y="511.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="613.0" y="677" width="0.2" height="15.0" fill="rgb(229,221,41)" rx="2" ry="2" />
<text  x="615.98" y="687.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::guard (1 samples, 0.02%)</title><rect x="514.3" y="565" width="0.2" height="15.0" fill="rgb(253,217,1)" rx="2" ry="2" />
<text  x="517.31" y="575.5" ></text>
</g>
<g >
<title>locator::token_metadata::get_host_id_if_known (7 samples, 0.13%)</title><rect x="1150.4" y="757" width="1.6" height="15.0" fill="rgb(238,74,49)" rx="2" ry="2" />
<text  x="1153.40" y="767.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.08%)</title><rect x="333.8" y="581" width="0.8" height="15.0" fill="rgb(233,171,31)" rx="2" ry="2" />
<text  x="336.75" y="591.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (1 samples, 0.02%)</title><rect x="1092.2" y="661" width="0.2" height="15.0" fill="rgb(223,143,11)" rx="2" ry="2" />
<text  x="1095.23" y="671.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt;::_M_reset (1 samples, 0.02%)</title><rect x="587.2" y="613" width="0.3" height="15.0" fill="rgb(208,219,32)" rx="2" ry="2" />
<text  x="590.25" y="623.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_rehash (3 samples, 0.06%)</title><rect x="1154.6" y="741" width="0.7" height="15.0" fill="rgb(206,225,43)" rx="2" ry="2" />
<text  x="1157.65" y="751.5" ></text>
</g>
<g >
<title>query_state::query_state (16 samples, 0.30%)</title><rect x="610.5" y="741" width="3.6" height="15.0" fill="rgb(231,82,45)" rx="2" ry="2" />
<text  x="613.52" y="751.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (5 samples, 0.09%)</title><rect x="1145.3" y="789" width="1.1" height="15.0" fill="rgb(206,91,14)" rx="2" ry="2" />
<text  x="1148.25" y="799.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_construct&lt;interval_bound&lt;dht::ring_position&gt; const&amp;&gt; (3 samples, 0.06%)</title><rect x="944.6" y="661" width="0.6" height="15.0" fill="rgb(252,192,49)" rx="2" ry="2" />
<text  x="947.56" y="671.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (3 samples, 0.06%)</title><rect x="709.4" y="757" width="0.7" height="15.0" fill="rgb(217,195,3)" rx="2" ry="2" />
<text  x="712.41" y="767.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.02%)</title><rect x="20.1" y="629" width="0.2" height="15.0" fill="rgb(227,97,43)" rx="2" ry="2" />
<text  x="23.07" y="639.5" ></text>
</g>
<g >
<title>mutation_reader_merger::~mutation_reader_merger (12 samples, 0.23%)</title><rect x="466.7" y="613" width="2.6" height="15.0" fill="rgb(245,91,53)" rx="2" ry="2" />
<text  x="469.65" y="623.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (1 samples, 0.02%)</title><rect x="40.9" y="629" width="0.2" height="15.0" fill="rgb(238,10,40)" rx="2" ry="2" />
<text  x="43.88" y="639.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;locator::snitch_ptr&gt;::local (2 samples, 0.04%)</title><rect x="1086.9" y="613" width="0.4" height="15.0" fill="rgb(236,49,45)" rx="2" ry="2" />
<text  x="1089.86" y="623.5" ></text>
</g>
<g >
<title>std::type_info::operator== (1 samples, 0.02%)</title><rect x="1000.3" y="581" width="0.2" height="15.0" fill="rgb(253,14,28)" rx="2" ry="2" />
<text  x="1003.27" y="591.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (3 samples, 0.06%)</title><rect x="491.5" y="581" width="0.7" height="15.0" fill="rgb(216,130,54)" rx="2" ry="2" />
<text  x="494.49" y="591.5" ></text>
</g>
<g >
<title>reader_permit::impl::impl (3 samples, 0.06%)</title><rect x="1032.9" y="517" width="0.7" height="15.0" fill="rgb(236,134,37)" rx="2" ry="2" />
<text  x="1035.94" y="527.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_prepared (586 samples, 11.11%)</title><rect x="730.7" y="773" width="131.1" height="15.0" fill="rgb(253,78,49)" rx="2" ry="2" />
<text  x="733.66" y="783.5" >single_node_cql_..</text>
</g>
<g >
<title>mutation_partition::upper_bound (1 samples, 0.02%)</title><rect x="266.2" y="437" width="0.2" height="15.0" fill="rgb(250,42,45)" rx="2" ry="2" />
<text  x="269.18" y="447.5" ></text>
</g>
<g >
<title>seastar::future&lt;query::result_memory_accounter&gt;::get0 (1 samples, 0.02%)</title><rect x="615.9" y="741" width="0.2" height="15.0" fill="rgb(233,193,7)" rx="2" ry="2" />
<text  x="618.89" y="751.5" ></text>
</g>
<g >
<title>utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::get_or_load&lt;utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (36 samples, 0.68%)</title><rect x="752.8" y="677" width="8.1" height="15.0" fill="rgb(208,111,12)" rx="2" ry="2" />
<text  x="755.81" y="687.5" ></text>
</g>
<g >
<title>std::hash&lt;gms::inet_address&gt;::operator (2 samples, 0.04%)</title><rect x="717.7" y="725" width="0.4" height="15.0" fill="rgb(232,49,35)" rx="2" ry="2" />
<text  x="720.69" y="735.5" ></text>
</g>
<g >
<title>std::make_unique&lt;empty_flat_reader, seastar::lw_shared_ptr&lt;schema const&gt;, reader_permit&gt; (1 samples, 0.02%)</title><rect x="551.9" y="597" width="0.2" height="15.0" fill="rgb(248,201,43)" rx="2" ry="2" />
<text  x="554.90" y="607.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="215.2" y="517" width="0.2" height="15.0" fill="rgb(207,131,5)" rx="2" ry="2" />
<text  x="218.17" y="527.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment&lt;schema const&amp;, rows_entry const&amp;&gt; (179 samples, 3.39%)</title><rect x="223.2" y="485" width="40.1" height="15.0" fill="rgb(228,90,20)" rx="2" ry="2" />
<text  x="226.22" y="495.5" >mut..</text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::vector (5 samples, 0.09%)</title><rect x="940.8" y="709" width="1.1" height="15.0" fill="rgb(209,131,9)" rx="2" ry="2" />
<text  x="943.75" y="719.5" ></text>
</g>
<g >
<title>service::shared_mutation::apply_locally (3 samples, 0.06%)</title><rect x="1132.5" y="533" width="0.7" height="15.0" fill="rgb(218,24,3)" rx="2" ry="2" />
<text  x="1135.50" y="543.5" ></text>
</g>
<g >
<title>mutation_fragment::visit&lt;mutation_fragment::calculate_memory_usage (1 samples, 0.02%)</title><rect x="525.3" y="517" width="0.2" height="15.0" fill="rgb(208,20,53)" rx="2" ry="2" />
<text  x="528.27" y="527.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;query::result&gt;::dispose (12 samples, 0.23%)</title><rect x="95.2" y="757" width="2.7" height="15.0" fill="rgb(213,26,54)" rx="2" ry="2" />
<text  x="98.24" y="767.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, enum_set&lt;super_enum&lt;auth::permission,  (10 samples, 0.19%)</title><rect x="798.2" y="485" width="2.3" height="15.0" fill="rgb(210,19,48)" rx="2" ry="2" />
<text  x="801.23" y="495.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;std::function&lt;flat_mutation_reader  (7 samples, 0.13%)</title><rect x="631.5" y="709" width="1.6" height="15.0" fill="rgb(213,185,48)" rx="2" ry="2" />
<text  x="634.55" y="719.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally&lt;single_node_cql_env::execute_prepared_with_qo (2 samples, 0.04%)</title><rect x="731.6" y="757" width="0.4" height="15.0" fill="rgb(252,19,35)" rx="2" ry="2" />
<text  x="734.56" y="767.5" ></text>
</g>
<g >
<title>utils::fb_utilities::get_broadcast_address (1 samples, 0.02%)</title><rect x="1088.2" y="645" width="0.2" height="15.0" fill="rgb(212,79,39)" rx="2" ry="2" />
<text  x="1091.20" y="655.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (2 samples, 0.04%)</title><rect x="475.2" y="581" width="0.4" height="15.0" fill="rgb(213,101,4)" rx="2" ry="2" />
<text  x="478.15" y="591.5" ></text>
</g>
<g >
<title>partition_snapshot::version_count (1 samples, 0.02%)</title><rect x="273.1" y="437" width="0.2" height="15.0" fill="rgb(217,161,38)" rx="2" ry="2" />
<text  x="276.12" y="447.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;interval_bound&lt;dht::ring_position&gt;, false, false&gt;::_Optional_base (1 samples, 0.02%)</title><rect x="1042.8" y="549" width="0.2" height="15.0" fill="rgb(236,169,42)" rx="2" ry="2" />
<text  x="1045.78" y="559.5" ></text>
</g>
<g >
<title>absl::hash_internal::HashState::combine_contiguous (3 samples, 0.06%)</title><rect x="1052.6" y="565" width="0.7" height="15.0" fill="rgb(227,149,28)" rx="2" ry="2" />
<text  x="1055.62" y="575.5" ></text>
</g>
<g >
<title>cql3::prepare_context::get_partition_key_bind_indexes (1 samples, 0.02%)</title><rect x="66.6" y="757" width="0.2" height="15.0" fill="rgb(227,187,25)" rx="2" ry="2" />
<text  x="69.61" y="767.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="129.0" y="709" width="0.3" height="15.0" fill="rgb(244,123,51)" rx="2" ry="2" />
<text  x="132.03" y="719.5" ></text>
</g>
<g >
<title>std::pair&lt;auth::authenticated_user, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;::pair (3 samples, 0.06%)</title><rect x="752.1" y="677" width="0.7" height="15.0" fill="rgb(222,208,54)" rx="2" ry="2" />
<text  x="755.14" y="687.5" ></text>
</g>
<g >
<title>ser::writer_of_deletable_row&lt;bytes_ostream&gt;::write_key (1 samples, 0.02%)</title><rect x="1136.8" y="437" width="0.2" height="15.0" fill="rgb(237,29,46)" rx="2" ry="2" />
<text  x="1139.75" y="447.5" ></text>
</g>
<g >
<title>bytes_view_hasher::update (1 samples, 0.02%)</title><rect x="757.3" y="581" width="0.2" height="15.0" fill="rgb(213,211,30)" rx="2" ry="2" />
<text  x="760.29" y="591.5" ></text>
</g>
<g >
<title>query_result_builder::consume_end_of_partition (5 samples, 0.09%)</title><rect x="344.5" y="533" width="1.1" height="15.0" fill="rgb(240,8,53)" rx="2" ry="2" />
<text  x="347.49" y="543.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.02%)</title><rect x="14.5" y="837" width="0.2" height="15.0" fill="rgb(237,149,14)" rx="2" ry="2" />
<text  x="17.47" y="847.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (5 samples, 0.09%)</title><rect x="825.8" y="661" width="1.1" height="15.0" fill="rgb(212,21,6)" rx="2" ry="2" />
<text  x="828.75" y="671.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, seastar::future&lt;void&gt;::handle_exception&lt;service::storage_proxy::send_to_live_endpoints (1 samples, 0.02%)</title><rect x="695.8" y="805" width="0.2" height="15.0" fill="rgb(237,135,35)" rx="2" ry="2" />
<text  x="698.76" y="815.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.04%)</title><rect x="44.7" y="549" width="0.4" height="15.0" fill="rgb(229,25,2)" rx="2" ry="2" />
<text  x="47.68" y="559.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt;::~_Variant_storage (4 samples, 0.08%)</title><rect x="861.8" y="773" width="0.9" height="15.0" fill="rgb(250,212,15)" rx="2" ry="2" />
<text  x="864.77" y="783.5" ></text>
</g>
<g >
<title>std::__apply_impl&lt;seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (40 samples, 0.76%)</title><rect x="1130.5" y="773" width="8.9" height="15.0" fill="rgb(249,172,36)" rx="2" ry="2" />
<text  x="1133.49" y="783.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (3 samples, 0.06%)</title><rect x="1049.5" y="613" width="0.7" height="15.0" fill="rgb(232,82,5)" rx="2" ry="2" />
<text  x="1052.49" y="623.5" ></text>
</g>
<g >
<title>cql3::query_options::get_value_at (1 samples, 0.02%)</title><rect x="903.2" y="581" width="0.2" height="15.0" fill="rgb(205,81,11)" rx="2" ry="2" />
<text  x="906.17" y="591.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::followPush (1 samples, 0.02%)</title><rect x="47.6" y="613" width="0.2" height="15.0" fill="rgb(254,218,14)" rx="2" ry="2" />
<text  x="50.59" y="623.5" ></text>
</g>
<g >
<title>schema::column_at (3 samples, 0.06%)</title><rect x="253.4" y="437" width="0.7" height="15.0" fill="rgb(245,167,10)" rx="2" ry="2" />
<text  x="256.43" y="447.5" ></text>
</g>
<g >
<title>abstract_type::validate&lt;managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="872.7" y="629" width="0.3" height="15.0" fill="rgb(249,194,38)" rx="2" ry="2" />
<text  x="875.74" y="639.5" ></text>
</g>
<g >
<title>list_reader_selector::create_new_readers (7 samples, 0.13%)</title><rect x="459.3" y="581" width="1.5" height="15.0" fill="rgb(232,2,15)" rx="2" ry="2" />
<text  x="462.27" y="591.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="55.4" y="533" width="0.2" height="15.0" fill="rgb(245,52,11)" rx="2" ry="2" />
<text  x="58.42" y="543.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (1 samples, 0.02%)</title><rect x="1158.7" y="773" width="0.2" height="15.0" fill="rgb(244,14,42)" rx="2" ry="2" />
<text  x="1161.68" y="783.5" ></text>
</g>
<g >
<title>cql3::raw_value_view::make_temporary (5 samples, 0.09%)</title><rect x="914.4" y="645" width="1.1" height="15.0" fill="rgb(212,87,38)" rx="2" ry="2" />
<text  x="917.35" y="655.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.02%)</title><rect x="864.2" y="725" width="0.3" height="15.0" fill="rgb(217,68,12)" rx="2" ry="2" />
<text  x="867.24" y="735.5" ></text>
</g>
<g >
<title>seastar::app_template::run_deprecated (4,858 samples, 92.11%)</title><rect x="83.4" y="869" width="1086.9" height="15.0" fill="rgb(253,28,37)" rx="2" ry="2" />
<text  x="86.39" y="879.5" >seastar::app_template::run_deprecated</text>
</g>
<g >
<title>seastar::lambda_task&lt;seastar::execution_stage::flush (1,210 samples, 22.94%)</title><rect x="869.8" y="805" width="270.8" height="15.0" fill="rgb(241,183,13)" rx="2" ry="2" />
<text  x="872.83" y="815.5" >seastar::lambda_task&lt;seastar::execut..</text>
</g>
<g >
<title>cql3::expr::possible_lhs_values (4 samples, 0.08%)</title><rect x="890.2" y="725" width="0.9" height="15.0" fill="rgb(250,225,42)" rx="2" ry="2" />
<text  x="893.19" y="735.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, query::querier&lt; (1 samples, 0.02%)</title><rect x="695.1" y="805" width="0.2" height="15.0" fill="rgb(230,53,49)" rx="2" ry="2" />
<text  x="698.09" y="815.5" ></text>
</g>
<g >
<title>std::vector&lt;ser::column_view, std::allocator&lt;ser::column_view&gt; &gt;::reserve (1 samples, 0.02%)</title><rect x="1128.5" y="501" width="0.2" height="15.0" fill="rgb(253,102,13)" rx="2" ry="2" />
<text  x="1131.47" y="511.5" ></text>
</g>
<g >
<title>dht::ring_position_comparator::operator (41 samples, 0.78%)</title><rect x="493.1" y="597" width="9.1" height="15.0" fill="rgb(212,42,18)" rx="2" ry="2" />
<text  x="496.05" y="607.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.02%)</title><rect x="695.5" y="565" width="0.3" height="15.0" fill="rgb(211,98,6)" rx="2" ry="2" />
<text  x="698.54" y="575.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::forward_to (1 samples, 0.02%)</title><rect x="721.5" y="805" width="0.2" height="15.0" fill="rgb(233,210,27)" rx="2" ry="2" />
<text  x="724.49" y="815.5" ></text>
</g>
<g >
<title>seastar::smp::submit_to&lt;seastar::sharded&lt;database&gt;::invoke_on_all (1 samples, 0.02%)</title><rect x="16.5" y="677" width="0.2" height="15.0" fill="rgb(225,114,35)" rx="2" ry="2" />
<text  x="19.49" y="687.5" ></text>
</g>
<g >
<title>std::__equal&lt;false&gt;::equal&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;*, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const*&gt; (9 samples, 0.17%)</title><rect x="805.2" y="453" width="2.0" height="15.0" fill="rgb(219,14,14)" rx="2" ry="2" />
<text  x="808.17" y="463.5" ></text>
</g>
<g >
<title>std::__optional_hash_call_base&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, true&gt;::operator (1 samples, 0.02%)</title><rect x="809.9" y="405" width="0.2" height="15.0" fill="rgb(207,74,54)" rx="2" ry="2" />
<text  x="812.87" y="415.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::find (3 samples, 0.06%)</title><rect x="658.6" y="741" width="0.7" height="15.0" fill="rgb(212,190,21)" rx="2" ry="2" />
<text  x="661.62" y="751.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::lw_shared_ptr&lt;schema const&gt;  (1 samples, 0.02%)</title><rect x="106.2" y="741" width="0.2" height="15.0" fill="rgb(250,50,21)" rx="2" ry="2" />
<text  x="109.21" y="751.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::merge_with (3 samples, 0.06%)</title><rect x="70.4" y="645" width="0.7" height="15.0" fill="rgb(216,203,0)" rx="2" ry="2" />
<text  x="73.41" y="655.5" ></text>
</g>
<g >
<title>std::hash&lt;auth::resource&gt;::operator (1 samples, 0.02%)</title><rect x="76.9" y="517" width="0.2" height="15.0" fill="rgb(232,175,22)" rx="2" ry="2" />
<text  x="79.90" y="527.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::Parser (1 samples, 0.02%)</title><rect x="19.8" y="709" width="0.3" height="15.0" fill="rgb(221,115,38)" rx="2" ry="2" />
<text  x="22.84" y="719.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.02%)</title><rect x="57.9" y="501" width="0.2" height="15.0" fill="rgb(252,65,40)" rx="2" ry="2" />
<text  x="60.88" y="511.5" ></text>
</g>
<g >
<title>row::row (130 samples, 2.46%)</title><rect x="225.0" y="453" width="29.1" height="15.0" fill="rgb(212,147,36)" rx="2" ry="2" />
<text  x="228.01" y="463.5" >ro..</text>
</g>
<g >
<title>make_random_seq (1 samples, 0.02%)</title><rect x="866.2" y="789" width="0.3" height="15.0" fill="rgb(234,81,0)" rx="2" ry="2" />
<text  x="869.25" y="799.5" ></text>
</g>
<g >
<title>std::vector&lt;seastar::shared_ptr&lt;cql3::functions::function_call&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::functions::function_call&gt; &gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="75.1" y="773" width="0.2" height="15.0" fill="rgb(247,141,40)" rx="2" ry="2" />
<text  x="78.11" y="783.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.08%)</title><rect x="963.1" y="661" width="0.9" height="15.0" fill="rgb(237,187,10)" rx="2" ry="2" />
<text  x="966.13" y="671.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::contains&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (18 samples, 0.34%)</title><rect x="850.1" y="693" width="4.1" height="15.0" fill="rgb(236,172,23)" rx="2" ry="2" />
<text  x="853.14" y="703.5" ></text>
</g>
<g >
<title>abstract_type::without_reversed (2 samples, 0.04%)</title><rect x="920.2" y="693" width="0.4" height="15.0" fill="rgb(252,212,0)" rx="2" ry="2" />
<text  x="923.17" y="703.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, cql3::operation::set_value*, std::default_delete&lt;cql3::operation::set_value&gt; &gt; (1 samples, 0.02%)</title><rect x="57.0" y="533" width="0.2" height="15.0" fill="rgb(235,91,51)" rx="2" ry="2" />
<text  x="59.99" y="543.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;interval_bound&lt;dht::ring_position&gt;, false, false&gt;::_Optional_base (1 samples, 0.02%)</title><rect x="1039.9" y="581" width="0.2" height="15.0" fill="rgb(234,109,47)" rx="2" ry="2" />
<text  x="1042.87" y="591.5" ></text>
</g>
<g >
<title>intrusive_b::node&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (2 samples, 0.04%)</title><rect x="1138.8" y="565" width="0.4" height="15.0" fill="rgb(205,7,9)" rx="2" ry="2" />
<text  x="1141.76" y="575.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (1 samples, 0.02%)</title><rect x="708.5" y="757" width="0.2" height="15.0" fill="rgb(233,221,30)" rx="2" ry="2" />
<text  x="711.51" y="767.5" ></text>
</g>
<g >
<title>std::__make_heap&lt;__gnu_cxx::__normal_iterator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position*, std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::heap_compare&gt; &gt; (1 samples, 0.02%)</title><rect x="288.3" y="517" width="0.3" height="15.0" fill="rgb(222,160,10)" rx="2" ry="2" />
<text  x="291.33" y="527.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::reset_state (53 samples, 1.00%)</title><rect x="279.2" y="549" width="11.8" height="15.0" fill="rgb(232,62,24)" rx="2" ry="2" />
<text  x="282.16" y="559.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (1,242 samples, 23.55%)</title><rect x="167.7" y="725" width="277.9" height="15.0" fill="rgb(224,82,53)" rx="2" ry="2" />
<text  x="170.74" y="735.5" >query::consume_page&lt;</text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, seastar::future&lt;void&gt;::finally_body&lt;table::stop (2 samples, 0.04%)</title><rect x="695.3" y="805" width="0.5" height="15.0" fill="rgb(211,104,21)" rx="2" ry="2" />
<text  x="698.31" y="815.5" ></text>
</g>
<g >
<title>compare_unsigned&lt;managed_bytes_basic_view&lt; (3 samples, 0.06%)</title><rect x="495.7" y="517" width="0.7" height="15.0" fill="rgb(254,143,29)" rx="2" ry="2" />
<text  x="498.74" y="527.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.04%)</title><rect x="54.1" y="533" width="0.4" height="15.0" fill="rgb(218,84,24)" rx="2" ry="2" />
<text  x="57.08" y="543.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment&lt;schema const&amp;, rows_entry const&amp;&gt; (1 samples, 0.02%)</title><rect x="869.2" y="613" width="0.2" height="15.0" fill="rgb(238,192,44)" rx="2" ry="2" />
<text  x="872.16" y="623.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;seastar::shared_ptr&lt;cql3::relation&gt;*, std::vector&lt;seastar::shared_ptr&lt;cql3::relation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::relation&gt; &gt; &gt; &gt;::base (1 samples, 0.02%)</title><rect x="59.7" y="613" width="0.2" height="15.0" fill="rgb(214,24,7)" rx="2" ry="2" />
<text  x="62.67" y="623.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.06%)</title><rect x="1152.4" y="741" width="0.7" height="15.0" fill="rgb(216,128,10)" rx="2" ry="2" />
<text  x="1155.41" y="751.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="162.1" y="725" width="0.3" height="15.0" fill="rgb(236,78,50)" rx="2" ry="2" />
<text  x="165.14" y="735.5" ></text>
</g>
<g >
<title>std::vector&lt;seastar::shared_ptr&lt;cql3::relation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::relation&gt; &gt; &gt;::vector (1 samples, 0.02%)</title><rect x="73.8" y="725" width="0.2" height="15.0" fill="rgb(214,212,10)" rx="2" ry="2" />
<text  x="76.77" y="735.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;(anonymous namespace)::remote_fill_buffer_result&gt; &gt;::invoke&lt;(anonymous namespace)::shard_reader::do_fill_buffer (1 samples, 0.02%)</title><rect x="106.9" y="501" width="0.2" height="15.0" fill="rgb(209,31,33)" rx="2" ry="2" />
<text  x="109.88" y="511.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;empty_flat_reader, std::default_delete&lt;empty_flat_reader&gt; &gt;::~unique_ptr (2 samples, 0.04%)</title><rect x="551.4" y="581" width="0.5" height="15.0" fill="rgb(217,48,42)" rx="2" ry="2" />
<text  x="554.45" y="591.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.02%)</title><rect x="42.7" y="485" width="0.2" height="15.0" fill="rgb(232,89,14)" rx="2" ry="2" />
<text  x="45.67" y="495.5" ></text>
</g>
<g >
<title>cql3::untyped_result_set::untyped_result_set (1 samples, 0.02%)</title><rect x="649.7" y="757" width="0.2" height="15.0" fill="rgb(243,150,32)" rx="2" ry="2" />
<text  x="652.67" y="767.5" ></text>
</g>
<g >
<title>query::result_set_builder::deserialize (1 samples, 0.02%)</title><rect x="108.2" y="597" width="0.2" height="15.0" fill="rgb(217,62,3)" rx="2" ry="2" />
<text  x="111.22" y="607.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (5 samples, 0.09%)</title><rect x="899.8" y="581" width="1.1" height="15.0" fill="rgb(242,69,7)" rx="2" ry="2" />
<text  x="902.81" y="591.5" ></text>
</g>
<g >
<title>rows_entry::rows_entry (2 samples, 0.04%)</title><rect x="1126.7" y="485" width="0.4" height="15.0" fill="rgb(220,156,1)" rx="2" ry="2" />
<text  x="1129.68" y="495.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement::execute (91 samples, 1.73%)</title><rect x="652.6" y="805" width="20.3" height="15.0" fill="rgb(209,141,7)" rx="2" ry="2" />
<text  x="655.58" y="815.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;compact_mutation_state&lt; (1 samples, 0.02%)</title><rect x="618.3" y="741" width="0.3" height="15.0" fill="rgb(233,0,46)" rx="2" ry="2" />
<text  x="621.35" y="751.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;std::unique_ptr&lt;sstables::foreign_sstable_open_info [], utils::chunked_vector_free_deleter&gt;, 1ul&gt;::small_vector (1 samples, 0.02%)</title><rect x="694.9" y="757" width="0.2" height="15.0" fill="rgb(252,200,23)" rx="2" ry="2" />
<text  x="697.87" y="767.5" ></text>
</g>
<g >
<title>utils::estimated_histogram::new_offsets (1 samples, 0.02%)</title><rect x="108.4" y="677" width="0.3" height="15.0" fill="rgb(224,18,4)" rx="2" ry="2" />
<text  x="111.45" y="687.5" ></text>
</g>
<g >
<title>schema_registry::learn (4 samples, 0.08%)</title><rect x="107.6" y="773" width="0.8" height="15.0" fill="rgb(210,165,8)" rx="2" ry="2" />
<text  x="110.55" y="783.5" ></text>
</g>
<g >
<title>mutation_querier::prepare_writers (2 samples, 0.04%)</title><rect x="400.4" y="501" width="0.5" height="15.0" fill="rgb(252,194,23)" rx="2" ry="2" />
<text  x="403.42" y="511.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::handle_exception&lt;cql3::query_processor::execute_prepared (1 samples, 0.02%)</title><rect x="760.9" y="709" width="0.2" height="15.0" fill="rgb(234,191,12)" rx="2" ry="2" />
<text  x="763.87" y="719.5" ></text>
</g>
<g >
<title>std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;std::optional&lt;auth::resource&gt; &gt;, seastar::future&lt;bool&gt; &gt; &gt;::operator (3 samples, 0.06%)</title><rect x="820.2" y="613" width="0.6" height="15.0" fill="rgb(248,7,46)" rx="2" ry="2" />
<text  x="823.16" y="623.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (10 samples, 0.19%)</title><rect x="981.0" y="581" width="2.3" height="15.0" fill="rgb(254,118,13)" rx="2" ry="2" />
<text  x="984.03" y="591.5" ></text>
</g>
<g >
<title>db::filter_for_query (3 samples, 0.06%)</title><rect x="1053.7" y="645" width="0.7" height="15.0" fill="rgb(249,216,35)" rx="2" ry="2" />
<text  x="1056.74" y="655.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.02%)</title><rect x="45.6" y="597" width="0.2" height="15.0" fill="rgb(209,113,40)" rx="2" ry="2" />
<text  x="48.57" y="607.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::read_next (2 samples, 0.04%)</title><rect x="80.0" y="661" width="0.5" height="15.0" fill="rgb(218,120,9)" rx="2" ry="2" />
<text  x="83.03" y="671.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.04%)</title><rect x="563.8" y="661" width="0.4" height="15.0" fill="rgb(248,32,39)" rx="2" ry="2" />
<text  x="566.75" y="671.5" ></text>
</g>
<g >
<title>std::operator+ (2 samples, 0.04%)</title><rect x="54.7" y="389" width="0.5" height="15.0" fill="rgb(229,178,50)" rx="2" ry="2" />
<text  x="57.75" y="399.5" ></text>
</g>
<g >
<title>absl::hash_internal::HashState::combine_contiguous (1 samples, 0.02%)</title><rect x="853.9" y="645" width="0.3" height="15.0" fill="rgb(209,80,42)" rx="2" ry="2" />
<text  x="856.94" y="655.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (1 samples, 0.02%)</title><rect x="601.6" y="725" width="0.2" height="15.0" fill="rgb(214,49,49)" rx="2" ry="2" />
<text  x="604.57" y="735.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt; (1 samples, 0.02%)</title><rect x="53.6" y="501" width="0.3" height="15.0" fill="rgb(215,94,38)" rx="2" ry="2" />
<text  x="56.63" y="511.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (1 samples, 0.02%)</title><rect x="937.8" y="693" width="0.3" height="15.0" fill="rgb(251,220,26)" rx="2" ry="2" />
<text  x="940.85" y="703.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::allocate_on (2 samples, 0.04%)</title><rect x="1127.1" y="485" width="0.5" height="15.0" fill="rgb(245,154,54)" rx="2" ry="2" />
<text  x="1130.13" y="495.5" ></text>
</g>
<g >
<title>seastar::gate::leave (1 samples, 0.02%)</title><rect x="105.1" y="773" width="0.2" height="15.0" fill="rgb(221,125,10)" rx="2" ry="2" />
<text  x="108.09" y="783.5" ></text>
</g>
<g >
<title>db::schema_tables::merge_tables_and_views (1 samples, 0.02%)</title><rect x="106.2" y="789" width="0.2" height="15.0" fill="rgb(223,51,1)" rx="2" ry="2" />
<text  x="109.21" y="799.5" ></text>
</g>
<g >
<title>seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;::swap (1 samples, 0.02%)</title><rect x="838.5" y="725" width="0.2" height="15.0" fill="rgb(237,172,13)" rx="2" ry="2" />
<text  x="841.51" y="735.5" ></text>
</g>
<g >
<title>sstables::mc::writer::consume_end_of_stream (1 samples, 0.02%)</title><rect x="15.1" y="821" width="0.3" height="15.0" fill="rgb(247,171,52)" rx="2" ry="2" />
<text  x="18.15" y="831.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (210 samples, 3.98%)</title><rect x="19.4" y="741" width="47.0" height="15.0" fill="rgb(249,157,16)" rx="2" ry="2" />
<text  x="22.40" y="751.5" >cql3..</text>
</g>
<g >
<title>utils::loading_cache&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, enum_set&lt;super_enum&lt;auth::permission,  (60 samples, 1.14%)</title><rect x="797.8" y="533" width="13.4" height="15.0" fill="rgb(230,138,14)" rx="2" ry="2" />
<text  x="800.79" y="543.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::~_Deque_base (1 samples, 0.02%)</title><rect x="627.1" y="709" width="0.2" height="15.0" fill="rgb(240,215,36)" rx="2" ry="2" />
<text  x="630.07" y="719.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_Optional_payload_base (4 samples, 0.08%)</title><rect x="1043.2" y="517" width="0.9" height="15.0" fill="rgb(213,81,3)" rx="2" ry="2" />
<text  x="1046.23" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::emplace_back&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; (6 samples, 0.11%)</title><rect x="49.2" y="597" width="1.3" height="15.0" fill="rgb(232,24,51)" rx="2" ry="2" />
<text  x="52.15" y="607.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::maybe_refresh_state (17 samples, 0.32%)</title><rect x="263.5" y="485" width="3.8" height="15.0" fill="rgb(211,13,47)" rx="2" ry="2" />
<text  x="266.50" y="495.5" ></text>
</g>
<g >
<title>cql3::operation::set_value::prepare (5 samples, 0.09%)</title><rect x="67.3" y="725" width="1.1" height="15.0" fill="rgb(253,136,49)" rx="2" ry="2" />
<text  x="70.28" y="735.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.02%)</title><rect x="38.9" y="613" width="0.2" height="15.0" fill="rgb(216,19,46)" rx="2" ry="2" />
<text  x="41.86" y="623.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (3 samples, 0.06%)</title><rect x="932.3" y="693" width="0.6" height="15.0" fill="rgb(224,49,35)" rx="2" ry="2" />
<text  x="935.25" y="703.5" ></text>
</g>
<g >
<title>ser::writer_of_qr_cell&lt;bytes_ostream&gt;::skip_timestamp (11 samples, 0.21%)</title><rect x="395.9" y="469" width="2.5" height="15.0" fill="rgb(219,182,17)" rx="2" ry="2" />
<text  x="398.95" y="479.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;, seastar::future&lt;void&gt; &gt;, std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;, seastar::future&lt;void&gt; &gt; &gt; &gt;::~unique_ptr (12 samples, 0.23%)</title><rect x="824.2" y="693" width="2.7" height="15.0" fill="rgb(240,26,50)" rx="2" ry="2" />
<text  x="827.19" y="703.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;gms::inet_address, std::pair&lt;gms::inet_address const, table::cache_hit_rate&gt;, std::allocator&lt;std::pair&lt;gms::inet_address const, table::cache_hit_rate&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;gms::inet_address&gt;, std::hash&lt;gms::inet_address&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (2 samples, 0.04%)</title><rect x="717.2" y="725" width="0.5" height="15.0" fill="rgb(230,44,53)" rx="2" ry="2" />
<text  x="720.24" y="735.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (1 samples, 0.02%)</title><rect x="59.4" y="565" width="0.3" height="15.0" fill="rgb(216,206,52)" rx="2" ry="2" />
<text  x="62.45" y="575.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::operator== (1 samples, 0.02%)</title><rect x="76.7" y="501" width="0.2" height="15.0" fill="rgb(242,141,20)" rx="2" ry="2" />
<text  x="79.67" y="511.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (1 samples, 0.02%)</title><rect x="1115.3" y="693" width="0.2" height="15.0" fill="rgb(225,151,46)" rx="2" ry="2" />
<text  x="1118.27" y="703.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (3 samples, 0.06%)</title><rect x="1051.5" y="581" width="0.7" height="15.0" fill="rgb(240,86,47)" rx="2" ry="2" />
<text  x="1054.51" y="591.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (3 samples, 0.06%)</title><rect x="51.8" y="469" width="0.7" height="15.0" fill="rgb(234,164,32)" rx="2" ry="2" />
<text  x="54.84" y="479.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_token (3 samples, 0.06%)</title><rect x="948.1" y="661" width="0.7" height="15.0" fill="rgb(249,120,24)" rx="2" ry="2" />
<text  x="951.14" y="671.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (1 samples, 0.02%)</title><rect x="106.7" y="165" width="0.2" height="15.0" fill="rgb(210,99,23)" rx="2" ry="2" />
<text  x="109.66" y="175.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::clear (1 samples, 0.02%)</title><rect x="789.5" y="597" width="0.2" height="15.0" fill="rgb(208,28,15)" rx="2" ry="2" />
<text  x="792.51" y="607.5" ></text>
</g>
<g >
<title>reader_permit::impl::~impl (3 samples, 0.06%)</title><rect x="114.7" y="773" width="0.7" height="15.0" fill="rgb(211,34,44)" rx="2" ry="2" />
<text  x="117.71" y="783.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="662.0" y="757" width="0.2" height="15.0" fill="rgb(237,170,32)" rx="2" ry="2" />
<text  x="664.98" y="767.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, enum_set&lt;super_enum&lt;auth::permission,  (64 samples, 1.21%)</title><rect x="796.9" y="549" width="14.3" height="15.0" fill="rgb(228,141,31)" rx="2" ry="2" />
<text  x="799.89" y="559.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::vector (1 samples, 0.02%)</title><rect x="57.2" y="629" width="0.2" height="15.0" fill="rgb(218,110,40)" rx="2" ry="2" />
<text  x="60.21" y="639.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (2 samples, 0.04%)</title><rect x="127.0" y="725" width="0.5" height="15.0" fill="rgb(245,202,23)" rx="2" ry="2" />
<text  x="130.02" y="735.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (1 samples, 0.02%)</title><rect x="106.7" y="485" width="0.2" height="15.0" fill="rgb(251,167,8)" rx="2" ry="2" />
<text  x="109.66" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (11 samples, 0.21%)</title><rect x="727.3" y="709" width="2.5" height="15.0" fill="rgb(209,139,15)" rx="2" ry="2" />
<text  x="730.31" y="719.5" ></text>
</g>
<g >
<title>operator delete (5 samples, 0.09%)</title><rect x="97.9" y="757" width="1.1" height="15.0" fill="rgb(209,25,14)" rx="2" ry="2" />
<text  x="100.93" y="767.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.04%)</title><rect x="209.6" y="485" width="0.4" height="15.0" fill="rgb(253,159,51)" rx="2" ry="2" />
<text  x="212.58" y="495.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::partition_slice, std::default_delete&lt;query::partition_slice&gt; &gt;::~unique_ptr (2 samples, 0.04%)</title><rect x="552.6" y="629" width="0.4" height="15.0" fill="rgb(254,210,25)" rx="2" ry="2" />
<text  x="555.57" y="639.5" ></text>
</g>
<g >
<title>cql3::expr::expression::~expression (2 samples, 0.04%)</title><rect x="48.7" y="613" width="0.5" height="15.0" fill="rgb(223,62,3)" rx="2" ry="2" />
<text  x="51.71" y="623.5" ></text>
</g>
<g >
<title>seastar::app_template::run (4,858 samples, 92.11%)</title><rect x="83.4" y="901" width="1086.9" height="15.0" fill="rgb(221,207,6)" rx="2" ry="2" />
<text  x="86.39" y="911.5" >seastar::app_template::run</text>
</g>
<g >
<title>mutation_partition_serializer::write_serialized&lt;ser::writer_of_mutation_partition&lt;bytes_ostream&gt; &gt; (12 samples, 0.23%)</title><rect x="1134.5" y="469" width="2.7" height="15.0" fill="rgb(222,114,19)" rx="2" ry="2" />
<text  x="1137.51" y="479.5" ></text>
</g>
<g >
<title>abstract_type::deserialize&lt;ser::buffer_view&lt;bytes_ostream::fragment_iterator&gt; &gt; (1 samples, 0.02%)</title><rect x="107.3" y="693" width="0.3" height="15.0" fill="rgb(228,33,13)" rx="2" ry="2" />
<text  x="110.33" y="703.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (5 samples, 0.09%)</title><rect x="536.9" y="613" width="1.1" height="15.0" fill="rgb(218,178,24)" rx="2" ry="2" />
<text  x="539.91" y="623.5" ></text>
</g>
<g >
<title>evictable_reader::fill_buffer (1 samples, 0.02%)</title><rect x="106.7" y="533" width="0.2" height="15.0" fill="rgb(209,189,40)" rx="2" ry="2" />
<text  x="109.66" y="543.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="863.8" y="741" width="0.2" height="15.0" fill="rgb(242,54,31)" rx="2" ry="2" />
<text  x="866.79" y="751.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (1 samples, 0.02%)</title><rect x="693.7" y="629" width="0.3" height="15.0" fill="rgb(244,43,29)" rx="2" ry="2" />
<text  x="696.75" y="639.5" ></text>
</g>
<g >
<title>compound_type&lt; (4 samples, 0.08%)</title><rect x="560.8" y="661" width="0.9" height="15.0" fill="rgb(243,216,19)" rx="2" ry="2" />
<text  x="563.85" y="671.5" ></text>
</g>
<g >
<title>std::__equal&lt;true&gt;::equal&lt;signed char&gt; (1 samples, 0.02%)</title><rect x="72.2" y="661" width="0.2" height="15.0" fill="rgb(214,179,39)" rx="2" ry="2" />
<text  x="75.20" y="671.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;void&gt;::set_value&lt;&gt; (1 samples, 0.02%)</title><rect x="713.2" y="725" width="0.2" height="15.0" fill="rgb(223,89,3)" rx="2" ry="2" />
<text  x="716.21" y="735.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (1 samples, 0.02%)</title><rect x="1000.3" y="597" width="0.2" height="15.0" fill="rgb(230,137,29)" rx="2" ry="2" />
<text  x="1003.27" y="607.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (2 samples, 0.04%)</title><rect x="606.5" y="693" width="0.4" height="15.0" fill="rgb(239,110,41)" rx="2" ry="2" />
<text  x="609.49" y="703.5" ></text>
</g>
<g >
<title>mutation_fragment::visit&lt;mutation_fragment::calculate_memory_usage (2 samples, 0.04%)</title><rect x="215.4" y="533" width="0.4" height="15.0" fill="rgb(243,101,21)" rx="2" ry="2" />
<text  x="218.39" y="543.5" ></text>
</g>
<g >
<title>database::find_keyspace (15 samples, 0.28%)</title><rect x="1050.2" y="645" width="3.3" height="15.0" fill="rgb(216,92,23)" rx="2" ry="2" />
<text  x="1053.16" y="655.5" ></text>
</g>
<g >
<title>std::tuple&lt;cql3::statements::drop_index_statement*, std::default_delete&lt;cql3::statements::drop_index_statement&gt; &gt;::tuple&lt;true, true&gt; (1 samples, 0.02%)</title><rect x="62.6" y="629" width="0.2" height="15.0" fill="rgb(236,177,19)" rx="2" ry="2" />
<text  x="65.58" y="639.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="472.5" y="565" width="0.2" height="15.0" fill="rgb(225,62,13)" rx="2" ry="2" />
<text  x="475.47" y="575.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;std::tuple&lt;seastar::lw_shared_ptr&lt;query::result&gt;, cache_temperature&gt; &gt;::set_value&lt;std::tuple&lt;seastar::lw_shared_ptr&lt;query::result&gt;, cache_temperature&gt; &gt; (2 samples, 0.04%)</title><rect x="103.7" y="789" width="0.5" height="15.0" fill="rgb(251,69,52)" rx="2" ry="2" />
<text  x="106.75" y="799.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="394.6" y="453" width="0.2" height="15.0" fill="rgb(208,15,44)" rx="2" ry="2" />
<text  x="397.61" y="463.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::~merging_reader (51 samples, 0.97%)</title><rect x="589.0" y="693" width="11.4" height="15.0" fill="rgb(237,200,0)" rx="2" ry="2" />
<text  x="592.04" y="703.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, flat_mutation_reader::impl::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (444 samples, 8.42%)</title><rect x="336.4" y="613" width="99.4" height="15.0" fill="rgb(211,216,23)" rx="2" ry="2" />
<text  x="339.44" y="623.5" >std::__invok..</text>
</g>
<g >
<title>cql3::statements::update_statement::add_update_for_key (14 samples, 0.27%)</title><rect x="873.6" y="661" width="3.2" height="15.0" fill="rgb(208,98,26)" rx="2" ry="2" />
<text  x="876.63" y="671.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume_in_thread&lt;sstables::sstable_writer, flat_mutation_reader::no_filter&gt; (1 samples, 0.02%)</title><rect x="10.4" y="821" width="0.3" height="15.0" fill="rgb(228,148,34)" rx="2" ry="2" />
<text  x="13.45" y="831.5" ></text>
</g>
<g >
<title>seastar::internal::do_until_state&lt;executor&lt;test_read (641 samples, 12.15%)</title><rect x="723.7" y="805" width="143.4" height="15.0" fill="rgb(219,136,45)" rx="2" ry="2" />
<text  x="726.73" y="815.5" >seastar::internal:..</text>
</g>
<g >
<title>service::storage_proxy::send_to_live_endpoints (4 samples, 0.08%)</title><rect x="1132.3" y="565" width="0.9" height="15.0" fill="rgb(210,100,1)" rx="2" ry="2" />
<text  x="1135.28" y="575.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;seastar::semaphore_units&lt;seastar::semaphore_default_exception_factory, std::chrono::_V2::steady_clock&gt; &gt;::dispose (1 samples, 0.02%)</title><rect x="677.9" y="773" width="0.2" height="15.0" fill="rgb(237,43,25)" rx="2" ry="2" />
<text  x="680.86" y="783.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::_Move_ctor_base (1 samples, 0.02%)</title><rect x="356.3" y="485" width="0.3" height="15.0" fill="rgb(216,205,26)" rx="2" ry="2" />
<text  x="359.35" y="495.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;mutation_fragment_merger&lt;mutation_reader_merger&gt;::operator (20 samples, 0.38%)</title><rect x="307.1" y="645" width="4.5" height="15.0" fill="rgb(253,155,14)" rx="2" ry="2" />
<text  x="310.13" y="655.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::untyped_constant&gt; (3 samples, 0.06%)</title><rect x="53.0" y="565" width="0.6" height="15.0" fill="rgb(217,167,54)" rx="2" ry="2" />
<text  x="55.96" y="575.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::execute (18 samples, 0.34%)</title><rect x="698.7" y="773" width="4.0" height="15.0" fill="rgb(252,150,37)" rx="2" ry="2" />
<text  x="701.67" y="783.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="16.5" y="453" width="0.2" height="15.0" fill="rgb(210,138,4)" rx="2" ry="2" />
<text  x="19.49" y="463.5" ></text>
</g>
<g >
<title>std::__apply_impl&lt;seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (37 samples, 0.70%)</title><rect x="1122.2" y="773" width="8.3" height="15.0" fill="rgb(243,143,36)" rx="2" ry="2" />
<text  x="1125.21" y="783.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperationDifferentiator (57 samples, 1.08%)</title><rect x="44.7" y="645" width="12.7" height="15.0" fill="rgb(217,77,16)" rx="2" ry="2" />
<text  x="47.68" y="655.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::clear (2 samples, 0.04%)</title><rect x="598.7" y="645" width="0.4" height="15.0" fill="rgb(240,189,47)" rx="2" ry="2" />
<text  x="601.66" y="655.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql3::restrictions::single_column_restrictions&gt;::~shared_ptr_count_for (1 samples, 0.02%)</title><rect x="652.4" y="741" width="0.2" height="15.0" fill="rgb(243,55,41)" rx="2" ry="2" />
<text  x="655.35" y="751.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;cql3::raw_value const*, cql3::raw_value*&gt; (2 samples, 0.04%)</title><rect x="864.0" y="741" width="0.5" height="15.0" fill="rgb(226,39,52)" rx="2" ry="2" />
<text  x="867.01" y="751.5" ></text>
</g>
<g >
<title>mutation_querier::consume (185 samples, 3.51%)</title><rect x="359.0" y="501" width="41.4" height="15.0" fill="rgb(243,58,7)" rx="2" ry="2" />
<text  x="362.03" y="511.5" >mut..</text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;std::function&lt;std::function&lt;partition_presence_checker_result  (3 samples, 0.06%)</title><rect x="633.1" y="709" width="0.7" height="15.0" fill="rgb(214,151,7)" rx="2" ry="2" />
<text  x="636.11" y="719.5" ></text>
</g>
<g >
<title>ser::deletable_row_view::key (1 samples, 0.02%)</title><rect x="1127.8" y="533" width="0.2" height="15.0" fill="rgb(234,119,50)" rx="2" ry="2" />
<text  x="1130.80" y="543.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (1 samples, 0.02%)</title><rect x="689.5" y="773" width="0.2" height="15.0" fill="rgb(254,48,43)" rx="2" ry="2" />
<text  x="692.50" y="783.5" ></text>
</g>
<g >
<title>ser::writer_of_query_result&lt;bytes_ostream&gt;::writer_of_query_result (9 samples, 0.17%)</title><rect x="612.1" y="709" width="2.0" height="15.0" fill="rgb(240,112,29)" rx="2" ry="2" />
<text  x="615.08" y="719.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::digest_read_resolver (32 samples, 0.61%)</title><rect x="986.8" y="613" width="7.2" height="15.0" fill="rgb(250,192,31)" rx="2" ry="2" />
<text  x="989.84" y="623.5" ></text>
</g>
<g >
<title>seastar::internal::repeater&lt;flat_mutation_reader::impl::consume_pausable&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (2 samples, 0.04%)</title><rect x="868.7" y="805" width="0.5" height="15.0" fill="rgb(225,161,7)" rx="2" ry="2" />
<text  x="871.71" y="815.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (2 samples, 0.04%)</title><rect x="589.7" y="661" width="0.5" height="15.0" fill="rgb(239,220,54)" rx="2" ry="2" />
<text  x="592.71" y="671.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::CqlParser (1 samples, 0.02%)</title><rect x="19.8" y="725" width="0.3" height="15.0" fill="rgb(241,196,51)" rx="2" ry="2" />
<text  x="22.84" y="735.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::set_value&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt; (2 samples, 0.04%)</title><rect x="701.1" y="757" width="0.5" height="15.0" fill="rgb(254,97,19)" rx="2" ry="2" />
<text  x="704.13" y="767.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (4 samples, 0.08%)</title><rect x="620.8" y="741" width="0.9" height="15.0" fill="rgb(207,147,41)" rx="2" ry="2" />
<text  x="623.81" y="751.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.02%)</title><rect x="42.4" y="565" width="0.3" height="15.0" fill="rgb(224,91,48)" rx="2" ry="2" />
<text  x="45.44" y="575.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.06%)</title><rect x="774.1" y="677" width="0.6" height="15.0" fill="rgb(251,55,8)" rx="2" ry="2" />
<text  x="777.07" y="687.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (1 samples, 0.02%)</title><rect x="717.0" y="725" width="0.2" height="15.0" fill="rgb(222,0,47)" rx="2" ry="2" />
<text  x="720.02" y="735.5" ></text>
</g>
<g >
<title>std::find_if&lt;char*, boost::algorithm::detail::is_any_ofF&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="720.6" y="677" width="0.2" height="15.0" fill="rgb(253,160,39)" rx="2" ry="2" />
<text  x="723.60" y="687.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::abstract_read_executor&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="719.3" y="789" width="0.2" height="15.0" fill="rgb(205,142,13)" rx="2" ry="2" />
<text  x="722.25" y="799.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::tombstone_for_row (1 samples, 0.02%)</title><rect x="404.9" y="517" width="0.2" height="15.0" fill="rgb(229,164,39)" rx="2" ry="2" />
<text  x="407.90" y="527.5" ></text>
</g>
<g >
<title>seastar::deferred_action&lt;table::query (1 samples, 0.02%)</title><rect x="137.5" y="757" width="0.3" height="15.0" fill="rgb(205,83,48)" rx="2" ry="2" />
<text  x="140.53" y="767.5" ></text>
</g>
<g >
<title>reader_permit::consume_resources (4 samples, 0.08%)</title><rect x="523.5" y="485" width="0.9" height="15.0" fill="rgb(246,23,1)" rx="2" ry="2" />
<text  x="526.48" y="495.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.08%)</title><rect x="606.0" y="709" width="0.9" height="15.0" fill="rgb(207,54,15)" rx="2" ry="2" />
<text  x="609.04" y="719.5" ></text>
</g>
<g >
<title>utils::approx_exponential_histogram&lt;512ul, 33554432ul, 4ul&gt;::add (1 samples, 0.02%)</title><rect x="692.9" y="789" width="0.2" height="15.0" fill="rgb(208,72,16)" rx="2" ry="2" />
<text  x="695.85" y="799.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::finally_body&lt;service::storage_proxy::do_query (5 samples, 0.09%)</title><rect x="684.6" y="789" width="1.1" height="15.0" fill="rgb(210,71,17)" rx="2" ry="2" />
<text  x="687.57" y="799.5" ></text>
</g>
<g >
<title>cql3::statements::raw::update_statement::~update_statement (1 samples, 0.02%)</title><rect x="74.7" y="773" width="0.2" height="15.0" fill="rgb(243,22,10)" rx="2" ry="2" />
<text  x="77.66" y="783.5" ></text>
</g>
<g >
<title>is_system_keyspace (1 samples, 0.02%)</title><rect x="73.5" y="677" width="0.3" height="15.0" fill="rgb(231,222,25)" rx="2" ry="2" />
<text  x="76.54" y="687.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="1137.2" y="437" width="0.2" height="15.0" fill="rgb(242,119,22)" rx="2" ry="2" />
<text  x="1140.20" y="447.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.02%)</title><rect x="1127.1" y="469" width="0.3" height="15.0" fill="rgb(232,161,17)" rx="2" ry="2" />
<text  x="1130.13" y="479.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::get_following (1 samples, 0.02%)</title><rect x="57.4" y="645" width="0.3" height="15.0" fill="rgb(230,214,26)" rx="2" ry="2" />
<text  x="60.43" y="655.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="20.5" y="613" width="0.2" height="15.0" fill="rgb(252,32,5)" rx="2" ry="2" />
<text  x="23.52" y="623.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;std::vector&lt;cql3::query_options, std::allocator&lt;cql3::query_options&gt; &gt; &gt;::_M_reset (1 samples, 0.02%)</title><rect x="681.0" y="757" width="0.2" height="15.0" fill="rgb(219,124,45)" rx="2" ry="2" />
<text  x="683.99" y="767.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::_M_range_initialize&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; const*&gt; (11 samples, 0.21%)</title><rect x="1102.5" y="677" width="2.5" height="15.0" fill="rgb(233,31,26)" rx="2" ry="2" />
<text  x="1105.52" y="687.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (2 samples, 0.04%)</title><rect x="328.2" y="709" width="0.4" height="15.0" fill="rgb(220,113,8)" rx="2" ry="2" />
<text  x="331.16" y="719.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (263 samples, 4.99%)</title><rect x="18.9" y="821" width="58.9" height="15.0" fill="rgb(244,153,37)" rx="2" ry="2" />
<text  x="21.95" y="831.5" >single..</text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit_slot&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::walking_visitor&lt;row::for_each_cell&lt;memtable::memtable_encoding_stats_collector::update (1 samples, 0.02%)</title><rect x="1125.6" y="501" width="0.2" height="15.0" fill="rgb(251,70,27)" rx="2" ry="2" />
<text  x="1128.56" y="511.5" ></text>
</g>
<g >
<title>std::hash&lt;std::basic_string_view&lt;signed char, std::char_traits&lt;signed char&gt; &gt; &gt;::operator (2 samples, 0.04%)</title><rect x="72.4" y="677" width="0.5" height="15.0" fill="rgb(220,175,26)" rx="2" ry="2" />
<text  x="75.42" y="687.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::node_size (1 samples, 0.02%)</title><rect x="258.8" y="437" width="0.2" height="15.0" fill="rgb(239,21,23)" rx="2" ry="2" />
<text  x="261.80" y="447.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;11ul, cql3::expr::untyped_constant&gt; (1 samples, 0.02%)</title><rect x="53.4" y="421" width="0.2" height="15.0" fill="rgb(241,201,41)" rx="2" ry="2" />
<text  x="56.41" y="431.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::do_refresh_state (11 samples, 0.21%)</title><rect x="264.8" y="469" width="2.5" height="15.0" fill="rgb(224,111,44)" rx="2" ry="2" />
<text  x="267.84" y="479.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_result_local (198 samples, 3.75%)</title><rect x="1000.5" y="597" width="44.3" height="15.0" fill="rgb(213,89,38)" rx="2" ry="2" />
<text  x="1003.49" y="607.5" >serv..</text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, cql3::statements::list_roles_statement*, std::default_delete&lt;cql3::statements::list_roles_statement&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="63.0" y="629" width="0.2" height="15.0" fill="rgb(252,133,31)" rx="2" ry="2" />
<text  x="66.03" y="639.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (5 samples, 0.09%)</title><rect x="992.2" y="565" width="1.1" height="15.0" fill="rgb(236,91,33)" rx="2" ry="2" />
<text  x="995.21" y="575.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::query_options, std::default_delete&lt;cql3::query_options&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="840.7" y="725" width="0.3" height="15.0" fill="rgb(239,180,21)" rx="2" ry="2" />
<text  x="843.74" y="735.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_state&lt;std::tuple&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt; &gt;, seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (2 samples, 0.04%)</title><rect x="795.1" y="549" width="0.4" height="15.0" fill="rgb(251,3,19)" rx="2" ry="2" />
<text  x="798.10" y="559.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::followPush (1 samples, 0.02%)</title><rect x="52.5" y="581" width="0.2" height="15.0" fill="rgb(247,17,53)" rx="2" ry="2" />
<text  x="55.51" y="591.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (2 samples, 0.04%)</title><rect x="324.8" y="629" width="0.4" height="15.0" fill="rgb(248,69,11)" rx="2" ry="2" />
<text  x="327.80" y="639.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (194 samples, 3.68%)</title><rect x="21.0" y="693" width="43.4" height="15.0" fill="rgb(246,136,48)" rx="2" ry="2" />
<text  x="23.96" y="703.5" >cql3..</text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (3 samples, 0.06%)</title><rect x="852.6" y="645" width="0.7" height="15.0" fill="rgb(245,107,14)" rx="2" ry="2" />
<text  x="855.60" y="655.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (1 samples, 0.02%)</title><rect x="684.3" y="773" width="0.3" height="15.0" fill="rgb(245,4,1)" rx="2" ry="2" />
<text  x="687.35" y="783.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::result_memory_accounter (1 samples, 0.02%)</title><rect x="610.3" y="741" width="0.2" height="15.0" fill="rgb(210,164,15)" rx="2" ry="2" />
<text  x="613.29" y="751.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value, std::allocator&lt;cql3::raw_value&gt; &gt;::vector (1 samples, 0.02%)</title><rect x="866.7" y="789" width="0.2" height="15.0" fill="rgb(223,50,2)" rx="2" ry="2" />
<text  x="869.70" y="799.5" ></text>
</g>
<g >
<title>std::__copy_n_a&lt;legacy_compound_view&lt;compound_type&lt; (14 samples, 0.27%)</title><rect x="928.4" y="661" width="3.2" height="15.0" fill="rgb(252,16,19)" rx="2" ry="2" />
<text  x="931.45" y="671.5" ></text>
</g>
<g >
<title>sstables::mc::writer::write_row_body (2 samples, 0.04%)</title><rect x="81.1" y="709" width="0.5" height="15.0" fill="rgb(219,174,25)" rx="2" ry="2" />
<text  x="84.15" y="719.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;auth::resource_kind, std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;auth::resource_kind&gt;, std::hash&lt;auth::resource_kind&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (4 samples, 0.08%)</title><rect x="777.0" y="645" width="0.9" height="15.0" fill="rgb(224,188,49)" rx="2" ry="2" />
<text  x="779.98" y="655.5" ></text>
</g>
<g >
<title>locator::simple_strategy::calculate_natural_endpoints (1 samples, 0.02%)</title><rect x="16.7" y="709" width="0.2" height="15.0" fill="rgb(210,99,41)" rx="2" ry="2" />
<text  x="19.71" y="719.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (3 samples, 0.06%)</title><rect x="786.8" y="581" width="0.7" height="15.0" fill="rgb(217,182,29)" rx="2" ry="2" />
<text  x="789.82" y="591.5" ></text>
</g>
<g >
<title>std::visit&lt;overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::has_token (1 samples, 0.02%)</title><rect x="657.5" y="741" width="0.2" height="15.0" fill="rgb(243,121,47)" rx="2" ry="2" />
<text  x="660.50" y="751.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::_M_range_initialize&lt;nonwrapping_interval&lt;dht::ring_position&gt; const*&gt; (13 samples, 0.25%)</title><rect x="942.3" y="693" width="2.9" height="15.0" fill="rgb(238,168,23)" rx="2" ry="2" />
<text  x="945.32" y="703.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;11ul, cql3::expr::untyped_constant, cql3::expr::untyped_constant, void&gt; (1 samples, 0.02%)</title><rect x="59.2" y="549" width="0.2" height="15.0" fill="rgb(235,1,54)" rx="2" ry="2" />
<text  x="62.22" y="559.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (2 samples, 0.04%)</title><rect x="908.3" y="533" width="0.5" height="15.0" fill="rgb(239,23,48)" rx="2" ry="2" />
<text  x="911.31" y="543.5" ></text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt;&amp;&gt; (4 samples, 0.08%)</title><rect x="1051.3" y="597" width="0.9" height="15.0" fill="rgb(223,119,13)" rx="2" ry="2" />
<text  x="1054.28" y="607.5" ></text>
</g>
<g >
<title>seastar::smp::configure (1 samples, 0.02%)</title><rect x="1170.1" y="853" width="0.2" height="15.0" fill="rgb(209,132,41)" rx="2" ry="2" />
<text  x="1173.09" y="863.5" ></text>
</g>
<g >
<title>std::construct_at&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; const&amp;&gt; (1 samples, 0.02%)</title><rect x="38.0" y="581" width="0.2" height="15.0" fill="rgb(221,200,49)" rx="2" ry="2" />
<text  x="40.97" y="591.5" ></text>
</g>
<g >
<title>intrusive_b::node&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (1 samples, 0.02%)</title><rect x="14.5" y="757" width="0.2" height="15.0" fill="rgb(223,122,18)" rx="2" ry="2" />
<text  x="17.47" y="767.5" ></text>
</g>
<g >
<title>std::get&lt;2ul, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const&amp;, auth::resource&amp;&amp;, service::client_state::has_column_family_access (1 samples, 0.02%)</title><rect x="836.0" y="709" width="0.3" height="15.0" fill="rgb(242,111,50)" rx="2" ry="2" />
<text  x="839.04" y="719.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::insertToken (12 samples, 0.23%)</title><rect x="22.3" y="597" width="2.7" height="15.0" fill="rgb(247,23,4)" rx="2" ry="2" />
<text  x="25.31" y="607.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::process_partition_key_restrictions (1 samples, 0.02%)</title><rect x="71.3" y="693" width="0.2" height="15.0" fill="rgb(241,214,37)" rx="2" ry="2" />
<text  x="74.30" y="703.5" ></text>
</g>
<g >
<title>std::__relocate_a&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;*, std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;*, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt; (2 samples, 0.04%)</title><rect x="49.6" y="533" width="0.4" height="15.0" fill="rgb(215,64,40)" rx="2" ry="2" />
<text  x="52.60" y="543.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.02%)</title><rect x="16.7" y="821" width="0.2" height="15.0" fill="rgb(249,70,35)" rx="2" ry="2" />
<text  x="19.71" y="831.5" ></text>
</g>
<g >
<title>utils::tuple_hash::hash_impl&lt;1ul, auth::resource_kind, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (2 samples, 0.04%)</title><rect x="823.5" y="597" width="0.5" height="15.0" fill="rgb(211,167,42)" rx="2" ry="2" />
<text  x="826.52" y="607.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (1 samples, 0.02%)</title><rect x="438.7" y="549" width="0.2" height="15.0" fill="rgb(231,22,19)" rx="2" ry="2" />
<text  x="441.68" y="559.5" ></text>
</g>
<g >
<title>utils::tuple_hash::operator (13 samples, 0.25%)</title><rect x="737.4" y="645" width="2.9" height="15.0" fill="rgb(229,11,9)" rx="2" ry="2" />
<text  x="740.38" y="655.5" ></text>
</g>
<g >
<title>empty_flat_reader::empty_flat_reader (4 samples, 0.08%)</title><rect x="549.4" y="565" width="0.9" height="15.0" fill="rgb(232,137,4)" rx="2" ry="2" />
<text  x="552.43" y="575.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (283 samples, 5.37%)</title><rect x="14.7" y="885" width="63.3" height="15.0" fill="rgb(221,42,27)" rx="2" ry="2" />
<text  x="17.70" y="895.5" >seasta..</text>
</g>
<g >
<title>range_tombstone_list::slice (2 samples, 0.04%)</title><rect x="266.4" y="453" width="0.5" height="15.0" fill="rgb(235,107,27)" rx="2" ry="2" />
<text  x="269.41" y="463.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_ctor_base (1 samples, 0.02%)</title><rect x="56.3" y="581" width="0.2" height="15.0" fill="rgb(239,77,35)" rx="2" ry="2" />
<text  x="59.31" y="591.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;std::optional&lt;clustering_key_prefix&gt; &gt;::dispose (2 samples, 0.04%)</title><rect x="443.2" y="677" width="0.4" height="15.0" fill="rgb(219,111,21)" rx="2" ry="2" />
<text  x="446.16" y="687.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="1163.8" y="757" width="0.2" height="15.0" fill="rgb(245,112,2)" rx="2" ry="2" />
<text  x="1166.82" y="767.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="317.6" y="613" width="0.3" height="15.0" fill="rgb(209,183,27)" rx="2" ry="2" />
<text  x="320.64" y="623.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;partition_key, false, false&gt;::_Optional_base (1 samples, 0.02%)</title><rect x="1064.5" y="613" width="0.2" height="15.0" fill="rgb(242,84,51)" rx="2" ry="2" />
<text  x="1067.48" y="623.5" ></text>
</g>
<g >
<title>service::endpoints_to_replica_ids (12 samples, 0.23%)</title><rect x="1150.4" y="773" width="2.7" height="15.0" fill="rgb(217,65,32)" rx="2" ry="2" />
<text  x="1153.40" y="783.5" ></text>
</g>
<g >
<title>std::vector&lt;seastar::shared_ptr&lt;cql3::relation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::relation&gt; &gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="64.1" y="677" width="0.3" height="15.0" fill="rgb(249,38,32)" rx="2" ry="2" />
<text  x="67.14" y="687.5" ></text>
</g>
<g >
<title>deletable_row::apply_monotonically (1 samples, 0.02%)</title><rect x="15.4" y="853" width="0.2" height="15.0" fill="rgb(252,111,42)" rx="2" ry="2" />
<text  x="18.37" y="863.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE14then_impl_nrvoIZNS6_14discard_resultEvEUlDpOT_E_NS0_IvEEEET0_OT_ (12 samples, 0.23%)</title><rect x="727.3" y="757" width="2.7" height="15.0" fill="rgb(242,26,35)" rx="2" ry="2" />
<text  x="730.31" y="767.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_insert_unique_node (6 samples, 0.11%)</title><rect x="1154.0" y="757" width="1.3" height="15.0" fill="rgb(249,145,21)" rx="2" ry="2" />
<text  x="1156.98" y="767.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;compact_for_query&lt; (1 samples, 0.02%)</title><rect x="438.9" y="597" width="0.2" height="15.0" fill="rgb(206,124,23)" rx="2" ry="2" />
<text  x="441.91" y="607.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::execution_loop (2,368 samples, 44.90%)</title><rect x="109.3" y="805" width="529.9" height="15.0" fill="rgb(243,23,19)" rx="2" ry="2" />
<text  x="112.34" y="815.5" >reader_concurrency_semaphore::execution_loop</text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (1 samples, 0.02%)</title><rect x="1039.2" y="581" width="0.2" height="15.0" fill="rgb(217,183,8)" rx="2" ry="2" />
<text  x="1042.20" y="591.5" ></text>
</g>
<g >
<title>std::uniform_int_distribution&lt;unsigned long&gt;::operator (1 samples, 0.02%)</title><rect x="862.7" y="773" width="0.2" height="15.0" fill="rgb(254,64,27)" rx="2" ry="2" />
<text  x="865.67" y="783.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (6 samples, 0.11%)</title><rect x="970.1" y="645" width="1.3" height="15.0" fill="rgb(239,144,24)" rx="2" ry="2" />
<text  x="973.06" y="655.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::never_speculating_read_executor&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="977.7" y="661" width="0.2" height="15.0" fill="rgb(247,42,47)" rx="2" ry="2" />
<text  x="980.67" y="671.5" ></text>
</g>
<g >
<title>fmt::v7::detail::value&lt;fmt::v7::basic_printf_context&lt;fmt::v7::detail::buffer_appender&lt;char&gt;, char&gt; &gt;::format_custom_arg&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, fmt::v7::detail::fallback_formatter&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, char, void&gt; &gt; (1 samples, 0.02%)</title><rect x="18.1" y="789" width="0.2" height="15.0" fill="rgb(252,131,51)" rx="2" ry="2" />
<text  x="21.05" y="799.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (1 samples, 0.02%)</title><rect x="821.1" y="629" width="0.2" height="15.0" fill="rgb(220,63,8)" rx="2" ry="2" />
<text  x="824.05" y="639.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (1 samples, 0.02%)</title><rect x="125.2" y="741" width="0.2" height="15.0" fill="rgb(205,38,4)" rx="2" ry="2" />
<text  x="128.23" y="751.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (2 samples, 0.04%)</title><rect x="524.6" y="501" width="0.4" height="15.0" fill="rgb(222,136,37)" rx="2" ry="2" />
<text  x="527.60" y="511.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::maybe_drop_from (2 samples, 0.04%)</title><rect x="357.0" y="517" width="0.5" height="15.0" fill="rgb(235,131,7)" rx="2" ry="2" />
<text  x="360.02" y="527.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::trivial_direct_move&lt;16ul&gt; (1 samples, 0.02%)</title><rect x="1025.1" y="437" width="0.2" height="15.0" fill="rgb(206,224,38)" rx="2" ry="2" />
<text  x="1028.10" y="447.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="525.9" y="517" width="0.3" height="15.0" fill="rgb(238,110,44)" rx="2" ry="2" />
<text  x="528.94" y="527.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::emplace_back&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;&amp;&gt; (1 samples, 0.02%)</title><rect x="826.9" y="693" width="0.2" height="15.0" fill="rgb(247,114,46)" rx="2" ry="2" />
<text  x="829.87" y="703.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (1 samples, 0.02%)</title><rect x="58.1" y="565" width="0.2" height="15.0" fill="rgb(218,108,10)" rx="2" ry="2" />
<text  x="61.10" y="575.5" ></text>
</g>
<g >
<title>std::__make_heap&lt;__gnu_cxx::__normal_iterator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position*, std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::heap_compare&gt; &gt; (1 samples, 0.02%)</title><rect x="290.6" y="533" width="0.2" height="15.0" fill="rgb(217,125,14)" rx="2" ry="2" />
<text  x="293.57" y="543.5" ></text>
</g>
<g >
<title>tracing::global_trace_state_ptr::get (1 samples, 0.02%)</title><rect x="1044.6" y="581" width="0.2" height="15.0" fill="rgb(214,149,22)" rx="2" ry="2" />
<text  x="1047.57" y="591.5" ></text>
</g>
<g >
<title>utils::murmur_hash::hash3_x64_128&lt;legacy_compound_view&lt;compound_type&lt; (23 samples, 0.44%)</title><rect x="926.4" y="677" width="5.2" height="15.0" fill="rgb(249,220,53)" rx="2" ry="2" />
<text  x="929.44" y="687.5" ></text>
</g>
<g >
<title>absl::hash_internal::AbslHashValue&lt;absl::hash_internal::HashState&gt; (3 samples, 0.06%)</title><rect x="844.1" y="661" width="0.7" height="15.0" fill="rgb(226,35,45)" rx="2" ry="2" />
<text  x="847.10" y="671.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_28has_slice_or_needs_filteringERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES28_S2B_ (1 samples, 0.02%)</title><rect x="656.4" y="741" width="0.2" height="15.0" fill="rgb(231,102,9)" rx="2" ry="2" />
<text  x="659.38" y="751.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::insertToken (12 samples, 0.23%)</title><rect x="22.3" y="613" width="2.7" height="15.0" fill="rgb(218,67,32)" rx="2" ry="2" />
<text  x="25.31" y="623.5" ></text>
</g>
<g >
<title>skip_empty_fragments&lt;managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="496.2" y="501" width="0.2" height="15.0" fill="rgb(250,130,42)" rx="2" ry="2" />
<text  x="499.19" y="511.5" ></text>
</g>
<g >
<title>intrusive_b::searcher&lt;clustering_key_prefix, rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare,  (1 samples, 0.02%)</title><rect x="105.3" y="693" width="0.2" height="15.0" fill="rgb(214,67,4)" rx="2" ry="2" />
<text  x="108.31" y="703.5" ></text>
</g>
<g >
<title>partition_key::from_range&lt;std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt; const&amp;&gt; (2 samples, 0.04%)</title><rect x="939.4" y="709" width="0.5" height="15.0" fill="rgb(244,69,7)" rx="2" ry="2" />
<text  x="942.41" y="719.5" ></text>
</g>
<g >
<title>std::__detail::_List_node_base::_M_hook (1 samples, 0.02%)</title><rect x="464.2" y="565" width="0.2" height="15.0" fill="rgb(235,226,36)" rx="2" ry="2" />
<text  x="467.19" y="575.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;schema_registry_entry&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;schema_registry_entry&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (3 samples, 0.06%)</title><rect x="975.0" y="613" width="0.7" height="15.0" fill="rgb(240,203,45)" rx="2" ry="2" />
<text  x="977.99" y="623.5" ></text>
</g>
<g >
<title>utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;::lru_entry::touch (3 samples, 0.06%)</title><rect x="740.5" y="709" width="0.7" height="15.0" fill="rgb(249,100,0)" rx="2" ry="2" />
<text  x="743.51" y="719.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (4 samples, 0.08%)</title><rect x="46.7" y="581" width="0.9" height="15.0" fill="rgb(233,153,43)" rx="2" ry="2" />
<text  x="49.69" y="591.5" ></text>
</g>
<g >
<title>mutation::set_cell (1 samples, 0.02%)</title><rect x="105.3" y="789" width="0.2" height="15.0" fill="rgb(233,196,4)" rx="2" ry="2" />
<text  x="108.31" y="799.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::lru_entry, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="749.7" y="613" width="0.2" height="15.0" fill="rgb(245,164,52)" rx="2" ry="2" />
<text  x="752.68" y="623.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (1 samples, 0.02%)</title><rect x="274.5" y="517" width="0.2" height="15.0" fill="rgb(248,197,17)" rx="2" ry="2" />
<text  x="277.46" y="527.5" ></text>
</g>
<g >
<title>partition_snapshot::static_row (1 samples, 0.02%)</title><rect x="293.3" y="517" width="0.2" height="15.0" fill="rgb(223,216,25)" rx="2" ry="2" />
<text  x="296.25" y="527.5" ></text>
</g>
<g >
<title>std::_Optional_base_impl&lt;query::querier&lt; (1 samples, 0.02%)</title><rect x="623.0" y="741" width="0.3" height="15.0" fill="rgb(253,52,50)" rx="2" ry="2" />
<text  x="626.05" y="751.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (3 samples, 0.06%)</title><rect x="42.7" y="597" width="0.6" height="15.0" fill="rgb(242,63,43)" rx="2" ry="2" />
<text  x="45.67" y="607.5" ></text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::EqualElement&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt;&amp;&gt; (8 samples, 0.15%)</title><rect x="770.0" y="645" width="1.8" height="15.0" fill="rgb(224,220,32)" rx="2" ry="2" />
<text  x="773.04" y="655.5" ></text>
</g>
<g >
<title>std::__optional_hash_call_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, true&gt;::operator (4 samples, 0.08%)</title><rect x="807.2" y="453" width="0.9" height="15.0" fill="rgb(244,203,46)" rx="2" ry="2" />
<text  x="810.18" y="463.5" ></text>
</g>
<g >
<title>std::default_delete&lt;mutation_fragment::data&gt;::operator (5 samples, 0.09%)</title><rect x="433.8" y="549" width="1.1" height="15.0" fill="rgb(218,113,41)" rx="2" ry="2" />
<text  x="436.76" y="559.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (2 samples, 0.04%)</title><rect x="137.1" y="757" width="0.4" height="15.0" fill="rgb(218,194,0)" rx="2" ry="2" />
<text  x="140.08" y="767.5" ></text>
</g>
<g >
<title>dht::tri_compare (11 samples, 0.21%)</title><rect x="1075.4" y="533" width="2.5" height="15.0" fill="rgb(209,60,38)" rx="2" ry="2" />
<text  x="1078.45" y="543.5" ></text>
</g>
<g >
<title>ser::integral_serializer&lt;unsigned int&gt;::read&lt;seastar::simple_memory_input_stream&gt; (1 samples, 0.02%)</title><rect x="106.0" y="693" width="0.2" height="15.0" fill="rgb(208,75,46)" rx="2" ry="2" />
<text  x="108.98" y="703.5" ></text>
</g>
<g >
<title>read_simple&lt;unsigned short, managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="926.2" y="645" width="0.2" height="15.0" fill="rgb(213,0,29)" rx="2" ry="2" />
<text  x="929.21" y="655.5" ></text>
</g>
<g >
<title>allocation_strategy::alloc&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::leaf_node&gt; (1 samples, 0.02%)</title><rect x="248.5" y="405" width="0.2" height="15.0" fill="rgb(214,226,30)" rx="2" ry="2" />
<text  x="251.51" y="415.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::sharded&lt;database&gt;::invoke_on_all (1 samples, 0.02%)</title><rect x="16.5" y="693" width="0.2" height="15.0" fill="rgb(248,130,11)" rx="2" ry="2" />
<text  x="19.49" y="703.5" ></text>
</g>
<g >
<title>stable_flattened_mutations_consumer&lt;compact_for_query&lt; (1 samples, 0.02%)</title><rect x="105.8" y="597" width="0.2" height="15.0" fill="rgb(208,225,20)" rx="2" ry="2" />
<text  x="108.76" y="607.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (2 samples, 0.04%)</title><rect x="690.6" y="757" width="0.5" height="15.0" fill="rgb(249,186,33)" rx="2" ry="2" />
<text  x="693.61" y="767.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::on_read_resolved (1 samples, 0.02%)</title><rect x="702.0" y="757" width="0.2" height="15.0" fill="rgb(236,22,53)" rx="2" ry="2" />
<text  x="705.03" y="767.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.02%)</title><rect x="38.6" y="469" width="0.3" height="15.0" fill="rgb(226,134,11)" rx="2" ry="2" />
<text  x="41.64" y="479.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_S_construct&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (1 samples, 0.02%)</title><rect x="24.1" y="533" width="0.2" height="15.0" fill="rgb(206,146,37)" rx="2" ry="2" />
<text  x="27.10" y="543.5" ></text>
</g>
<g >
<title>seastar::deferred_action&lt;table::query (8 samples, 0.15%)</title><rect x="614.1" y="741" width="1.8" height="15.0" fill="rgb(253,73,21)" rx="2" ry="2" />
<text  x="617.10" y="751.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;position_in_partition&gt;::_M_reset (1 samples, 0.02%)</title><rect x="587.5" y="613" width="0.2" height="15.0" fill="rgb(241,228,21)" rx="2" ry="2" />
<text  x="590.47" y="623.5" ></text>
</g>
<g >
<title>read_simple&lt;unsigned short, managed_bytes_basic_view&lt; (4 samples, 0.08%)</title><rect x="501.1" y="501" width="0.9" height="15.0" fill="rgb(223,222,34)" rx="2" ry="2" />
<text  x="504.11" y="511.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (3 samples, 0.06%)</title><rect x="788.6" y="581" width="0.7" height="15.0" fill="rgb(254,14,17)" rx="2" ry="2" />
<text  x="791.61" y="591.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.04%)</title><rect x="919.3" y="629" width="0.4" height="15.0" fill="rgb(219,142,54)" rx="2" ry="2" />
<text  x="922.28" y="639.5" ></text>
</g>
<g >
<title>locator::token_metadata::first_token (26 samples, 0.49%)</title><rect x="1072.3" y="581" width="5.8" height="15.0" fill="rgb(215,98,36)" rx="2" ry="2" />
<text  x="1075.31" y="591.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::execute (655 samples, 12.42%)</title><rect x="949.7" y="725" width="146.6" height="15.0" fill="rgb(222,5,22)" rx="2" ry="2" />
<text  x="952.70" y="735.5" >cql3::statements::..</text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="679.4" y="757" width="0.3" height="15.0" fill="rgb(210,199,36)" rx="2" ry="2" />
<text  x="682.43" y="767.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_M_reset (2 samples, 0.04%)</title><rect x="1064.7" y="629" width="0.5" height="15.0" fill="rgb(229,91,22)" rx="2" ry="2" />
<text  x="1067.71" y="639.5" ></text>
</g>
<g >
<title>db::commitlog::segment_manager::allocate_when_possible&lt;db::commitlog::add_entry (5 samples, 0.09%)</title><rect x="1128.9" y="597" width="1.1" height="15.0" fill="rgb(232,45,53)" rx="2" ry="2" />
<text  x="1131.92" y="607.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.02%)</title><rect x="58.1" y="469" width="0.2" height="15.0" fill="rgb(220,172,34)" rx="2" ry="2" />
<text  x="61.10" y="479.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (1 samples, 0.02%)</title><rect x="59.4" y="549" width="0.3" height="15.0" fill="rgb(247,1,54)" rx="2" ry="2" />
<text  x="62.45" y="559.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperation (72 samples, 1.37%)</title><rect x="41.3" y="661" width="16.1" height="15.0" fill="rgb(229,120,37)" rx="2" ry="2" />
<text  x="44.32" y="671.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureINS_10bool_classIN22mutation_reader_merger15needs_merge_tagEEEE9then_implIZNS5_14discard_resultEvEUlDpOT_E_NS0_IvEEEET0_OT_ (1 samples, 0.02%)</title><rect x="184.3" y="581" width="0.2" height="15.0" fill="rgb(219,181,40)" rx="2" ry="2" />
<text  x="187.29" y="591.5" ></text>
</g>
<g >
<title>rows_entry::rows_entry (1 samples, 0.02%)</title><rect x="875.2" y="565" width="0.2" height="15.0" fill="rgb(209,172,35)" rx="2" ry="2" />
<text  x="878.20" y="575.5" ></text>
</g>
<g >
<title>operator delete (7 samples, 0.13%)</title><rect x="813.2" y="549" width="1.6" height="15.0" fill="rgb(248,184,6)" rx="2" ry="2" />
<text  x="816.22" y="559.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;std::pair&lt;seastar::shared_ptr&lt;service::abstract_read_executor&gt;, nonwrapping_interval&lt;dht::token&gt; &gt;, 1ul&gt;::~small_vector (17 samples, 0.32%)</title><rect x="1163.8" y="789" width="3.8" height="15.0" fill="rgb(248,108,37)" rx="2" ry="2" />
<text  x="1166.82" y="799.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.02%)</title><rect x="58.1" y="421" width="0.2" height="15.0" fill="rgb(246,8,4)" rx="2" ry="2" />
<text  x="61.10" y="431.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (28 samples, 0.53%)</title><rect x="870.5" y="757" width="6.3" height="15.0" fill="rgb(249,92,4)" rx="2" ry="2" />
<text  x="873.50" y="767.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::create_table_statement::raw_statement, std::default_delete&lt;cql3::statements::create_table_statement::raw_statement&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="65.0" y="693" width="0.3" height="15.0" fill="rgb(231,152,28)" rx="2" ry="2" />
<text  x="68.04" y="703.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::drop_expired_front (5 samples, 0.09%)</title><rect x="129.3" y="709" width="1.1" height="15.0" fill="rgb(207,16,25)" rx="2" ry="2" />
<text  x="132.25" y="719.5" ></text>
</g>
<g >
<title>antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;::~InputStream (1 samples, 0.02%)</title><rect x="19.6" y="725" width="0.2" height="15.0" fill="rgb(222,139,31)" rx="2" ry="2" />
<text  x="22.62" y="735.5" ></text>
</g>
<g >
<title>auth::permissions_cache::get (4 samples, 0.08%)</title><rect x="76.2" y="645" width="0.9" height="15.0" fill="rgb(212,220,18)" rx="2" ry="2" />
<text  x="79.23" y="655.5" ></text>
</g>
<g >
<title>frozen_mutation::mutation_view (1 samples, 0.02%)</title><rect x="1132.7" y="453" width="0.2" height="15.0" fill="rgb(236,169,41)" rx="2" ry="2" />
<text  x="1135.72" y="463.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::deallocate (4 samples, 0.08%)</title><rect x="210.5" y="517" width="0.9" height="15.0" fill="rgb(234,67,23)" rx="2" ry="2" />
<text  x="213.47" y="527.5" ></text>
</g>
<g >
<title>row_marker::compact_and_expire (2 samples, 0.04%)</title><rect x="421.9" y="533" width="0.5" height="15.0" fill="rgb(252,107,37)" rx="2" ry="2" />
<text  x="424.90" y="543.5" ></text>
</g>
<g >
<title>seastar::internal::when_all_state&lt;seastar::internal::extract_values_from_futures_tuple&lt;seastar::future&lt;void&gt;, seastar::future&lt;void&gt; &gt;, seastar::future&lt;void&gt;, seastar::future&lt;void&gt; &gt;::when_all_state (1 samples, 0.02%)</title><rect x="1131.6" y="629" width="0.2" height="15.0" fill="rgb(246,10,13)" rx="2" ry="2" />
<text  x="1134.60" y="639.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (2 samples, 0.04%)</title><rect x="597.1" y="629" width="0.4" height="15.0" fill="rgb(248,191,1)" rx="2" ry="2" />
<text  x="600.09" y="639.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;dht::token, std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt;, std::allocator&lt;std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;dht::token&gt;, std::hash&lt;dht::token&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (1 samples, 0.02%)</title><rect x="1137.6" y="469" width="0.3" height="15.0" fill="rgb(231,115,17)" rx="2" ry="2" />
<text  x="1140.65" y="479.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_Optional_payload_base (3 samples, 0.06%)</title><rect x="944.6" y="645" width="0.6" height="15.0" fill="rgb(251,112,21)" rx="2" ry="2" />
<text  x="947.56" y="655.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.02%)</title><rect x="1166.1" y="725" width="0.2" height="15.0" fill="rgb(233,70,27)" rx="2" ry="2" />
<text  x="1169.06" y="735.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (3 samples, 0.06%)</title><rect x="20.3" y="677" width="0.7" height="15.0" fill="rgb(228,48,9)" rx="2" ry="2" />
<text  x="23.29" y="687.5" ></text>
</g>
<g >
<title>std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt;::~vector (5 samples, 0.09%)</title><rect x="1138.3" y="645" width="1.1" height="15.0" fill="rgb(207,220,12)" rx="2" ry="2" />
<text  x="1141.32" y="655.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="939.2" y="693" width="0.2" height="15.0" fill="rgb(224,229,3)" rx="2" ry="2" />
<text  x="942.19" y="703.5" ></text>
</g>
<g >
<title>bplus::node&lt;long, intrusive_array&lt;memtable_entry&gt;, dht::raw_token_less_comparator, 16ul,  (1 samples, 0.02%)</title><rect x="1124.7" y="485" width="0.2" height="15.0" fill="rgb(212,80,48)" rx="2" ry="2" />
<text  x="1127.67" y="495.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="525.0" y="501" width="0.3" height="15.0" fill="rgb(240,133,45)" rx="2" ry="2" />
<text  x="528.05" y="511.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (1 samples, 0.02%)</title><rect x="1014.6" y="533" width="0.2" height="15.0" fill="rgb(237,13,48)" rx="2" ry="2" />
<text  x="1017.59" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="1121.3" y="741" width="0.2" height="15.0" fill="rgb(239,65,53)" rx="2" ry="2" />
<text  x="1124.31" y="751.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::add_data (1 samples, 0.02%)</title><rect x="964.7" y="549" width="0.2" height="15.0" fill="rgb(245,172,35)" rx="2" ry="2" />
<text  x="967.69" y="559.5" ></text>
</g>
<g >
<title>partition_slice_builder::build (1 samples, 0.02%)</title><rect x="105.5" y="757" width="0.3" height="15.0" fill="rgb(221,15,6)" rx="2" ry="2" />
<text  x="108.54" y="767.5" ></text>
</g>
<g >
<title>ser::qr_clustered_row__cells&lt;bytes_ostream&gt;::start_cells (3 samples, 0.06%)</title><rect x="372.9" y="485" width="0.7" height="15.0" fill="rgb(247,166,8)" rx="2" ry="2" />
<text  x="375.90" y="495.5" ></text>
</g>
<g >
<title>bound_view::from_range_end&lt;nonwrapping_interval&gt; (1 samples, 0.02%)</title><rect x="219.2" y="533" width="0.2" height="15.0" fill="rgb(245,61,46)" rx="2" ry="2" />
<text  x="222.20" y="543.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::check_access (8 samples, 0.15%)</title><rect x="75.6" y="789" width="1.7" height="15.0" fill="rgb(219,61,0)" rx="2" ry="2" />
<text  x="78.56" y="799.5" ></text>
</g>
<g >
<title>seastar::future&lt;utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (1 samples, 0.02%)</title><rect x="797.3" y="533" width="0.3" height="15.0" fill="rgb(234,136,37)" rx="2" ry="2" />
<text  x="800.34" y="543.5" ></text>
</g>
<g >
<title>service::storage_service::join_token_ring (1 samples, 0.02%)</title><rect x="16.7" y="773" width="0.2" height="15.0" fill="rgb(246,105,9)" rx="2" ry="2" />
<text  x="19.71" y="783.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (21 samples, 0.40%)</title><rect x="735.8" y="677" width="4.7" height="15.0" fill="rgb(249,3,0)" rx="2" ry="2" />
<text  x="738.81" y="687.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_pausable&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (2 samples, 0.04%)</title><rect x="868.7" y="789" width="0.5" height="15.0" fill="rgb(227,172,40)" rx="2" ry="2" />
<text  x="871.71" y="799.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_in_thread&lt;sstables::sstable_writer, flat_mutation_reader::no_filter&gt; (1 samples, 0.02%)</title><rect x="15.1" y="837" width="0.3" height="15.0" fill="rgb(212,164,30)" rx="2" ry="2" />
<text  x="18.15" y="847.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::set_value&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="698.4" y="773" width="0.3" height="15.0" fill="rgb(227,214,45)" rx="2" ry="2" />
<text  x="701.45" y="783.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::make_data_requests (62 samples, 1.18%)</title><rect x="705.8" y="805" width="13.9" height="15.0" fill="rgb(236,150,5)" rx="2" ry="2" />
<text  x="708.83" y="815.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (10 samples, 0.19%)</title><rect x="211.6" y="501" width="2.2" height="15.0" fill="rgb(228,218,53)" rx="2" ry="2" />
<text  x="214.59" y="511.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.02%)</title><rect x="58.1" y="437" width="0.2" height="15.0" fill="rgb(223,123,27)" rx="2" ry="2" />
<text  x="61.10" y="447.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_Optional_payload_base (1 samples, 0.02%)</title><rect x="1091.1" y="661" width="0.2" height="15.0" fill="rgb(248,60,24)" rx="2" ry="2" />
<text  x="1094.11" y="671.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;6ul, cql3::expr::untyped_constant&gt; (1 samples, 0.02%)</title><rect x="53.4" y="341" width="0.2" height="15.0" fill="rgb(242,146,15)" rx="2" ry="2" />
<text  x="56.41" y="351.5" ></text>
</g>
<g >
<title>seastar::internal::uninitialized_wrapper_base&lt;service::storage_proxy_coordinator_query_result, false&gt;::uninitialized_set&lt;service::storage_proxy_coordinator_query_result&gt; (3 samples, 0.06%)</title><rect x="689.9" y="757" width="0.7" height="15.0" fill="rgb(233,101,40)" rx="2" ry="2" />
<text  x="692.94" y="767.5" ></text>
</g>
<g >
<title>seastar::reactor::syscall_pollfn::poll (2 samples, 0.04%)</title><rect x="1168.7" y="805" width="0.5" height="15.0" fill="rgb(207,102,35)" rx="2" ry="2" />
<text  x="1171.74" y="815.5" ></text>
</g>
<g >
<title>sstables::sstable::write_simple&lt; (1 samples, 0.02%)</title><rect x="15.1" y="789" width="0.3" height="15.0" fill="rgb(224,136,22)" rx="2" ry="2" />
<text  x="18.15" y="799.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="58.8" y="565" width="0.2" height="15.0" fill="rgb(247,135,30)" rx="2" ry="2" />
<text  x="61.78" y="575.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_clustering_bounds (1 samples, 0.02%)</title><rect x="891.8" y="725" width="0.2" height="15.0" fill="rgb(248,75,47)" rx="2" ry="2" />
<text  x="894.76" y="735.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (2 samples, 0.04%)</title><rect x="1170.3" y="933" width="0.5" height="15.0" fill="rgb(238,25,5)" rx="2" ry="2" />
<text  x="1173.31" y="943.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (1 samples, 0.02%)</title><rect x="40.9" y="581" width="0.2" height="15.0" fill="rgb(237,41,19)" rx="2" ry="2" />
<text  x="43.88" y="591.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;::shared_ptr (1 samples, 0.02%)</title><rect x="44.5" y="613" width="0.2" height="15.0" fill="rgb(240,23,33)" rx="2" ry="2" />
<text  x="47.46" y="623.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (2 samples, 0.04%)</title><rect x="530.2" y="581" width="0.4" height="15.0" fill="rgb(251,35,36)" rx="2" ry="2" />
<text  x="533.19" y="591.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="620.6" y="741" width="0.2" height="15.0" fill="rgb(245,158,33)" rx="2" ry="2" />
<text  x="623.58" y="751.5" ></text>
</g>
<g >
<title>fmt::v7::detail::format_value&lt;char, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; (1 samples, 0.02%)</title><rect x="18.1" y="757" width="0.2" height="15.0" fill="rgb(233,5,50)" rx="2" ry="2" />
<text  x="21.05" y="767.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (7 samples, 0.13%)</title><rect x="555.9" y="693" width="1.6" height="15.0" fill="rgb(239,112,15)" rx="2" ry="2" />
<text  x="558.92" y="703.5" ></text>
</g>
<g >
<title>nonwrapping_interval&lt;clustering_key_prefix&gt;::nonwrapping_interval (6 samples, 0.11%)</title><rect x="1099.6" y="677" width="1.4" height="15.0" fill="rgb(225,86,34)" rx="2" ry="2" />
<text  x="1102.61" y="687.5" ></text>
</g>
<g >
<title>abstract_type::deserialize_impl&lt;basic_single_fragmented_view&lt; (1 samples, 0.02%)</title><rect x="107.3" y="677" width="0.3" height="15.0" fill="rgb(231,90,1)" rx="2" ry="2" />
<text  x="110.33" y="687.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.09%)</title><rect x="550.3" y="565" width="1.1" height="15.0" fill="rgb(235,196,45)" rx="2" ry="2" />
<text  x="553.33" y="575.5" ></text>
</g>
<g >
<title>db::schema_tables::create_table_from_mutations (3 samples, 0.06%)</title><rect x="107.8" y="709" width="0.6" height="15.0" fill="rgb(212,201,21)" rx="2" ry="2" />
<text  x="110.77" y="719.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (4 samples, 0.08%)</title><rect x="707.8" y="773" width="0.9" height="15.0" fill="rgb(235,112,51)" rx="2" ry="2" />
<text  x="710.84" y="783.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (2 samples, 0.04%)</title><rect x="626.2" y="725" width="0.4" height="15.0" fill="rgb(254,205,42)" rx="2" ry="2" />
<text  x="629.18" y="735.5" ></text>
</g>
<g >
<title>query::querier_base::close (1 samples, 0.02%)</title><rect x="121.4" y="757" width="0.2" height="15.0" fill="rgb(251,204,16)" rx="2" ry="2" />
<text  x="124.42" y="767.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;, seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::finally_body&lt;seastar::smp::submit_to&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (33 samples, 0.63%)</title><rect x="639.2" y="805" width="7.3" height="15.0" fill="rgb(225,72,20)" rx="2" ry="2" />
<text  x="642.15" y="815.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (1 samples, 0.02%)</title><rect x="317.9" y="613" width="0.2" height="15.0" fill="rgb(240,57,9)" rx="2" ry="2" />
<text  x="320.86" y="623.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mWS (1 samples, 0.02%)</title><rect x="34.8" y="565" width="0.3" height="15.0" fill="rgb(244,135,41)" rx="2" ry="2" />
<text  x="37.84" y="575.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.02%)</title><rect x="268.6" y="501" width="0.3" height="15.0" fill="rgb(207,74,27)" rx="2" ry="2" />
<text  x="271.64" y="511.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::digest_read_result&gt;::clear (1 samples, 0.02%)</title><rect x="697.1" y="789" width="0.2" height="15.0" fill="rgb(229,169,8)" rx="2" ry="2" />
<text  x="700.10" y="799.5" ></text>
</g>
<g >
<title>free (1 samples, 0.02%)</title><rect x="1134.3" y="421" width="0.2" height="15.0" fill="rgb(212,145,36)" rx="2" ry="2" />
<text  x="1137.29" y="431.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.02%)</title><rect x="46.9" y="501" width="0.2" height="15.0" fill="rgb(240,82,41)" rx="2" ry="2" />
<text  x="49.92" y="511.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (2 samples, 0.04%)</title><rect x="906.1" y="565" width="0.4" height="15.0" fill="rgb(209,55,30)" rx="2" ry="2" />
<text  x="909.08" y="575.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (5 samples, 0.09%)</title><rect x="693.3" y="773" width="1.1" height="15.0" fill="rgb(248,128,27)" rx="2" ry="2" />
<text  x="696.30" y="783.5" ></text>
</g>
<g >
<title>std::visit&lt;overloaded_functor&lt;cql3::expr::find_atom&lt;bool  (1 samples, 0.02%)</title><rect x="69.3" y="677" width="0.2" height="15.0" fill="rgb(209,3,45)" rx="2" ry="2" />
<text  x="72.29" y="687.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;auth::resource, auth::resource, std::allocator&lt;auth::resource&gt;, std::__detail::_Identity, std::equal_to&lt;auth::resource&gt;, std::hash&lt;auth::resource&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;::find (8 samples, 0.15%)</title><rect x="822.2" y="661" width="1.8" height="15.0" fill="rgb(222,189,49)" rx="2" ry="2" />
<text  x="825.17" y="671.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (3 samples, 0.06%)</title><rect x="338.9" y="549" width="0.7" height="15.0" fill="rgb(235,99,45)" rx="2" ry="2" />
<text  x="341.90" y="559.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::~unique_ptr (2 samples, 0.04%)</title><rect x="48.7" y="597" width="0.5" height="15.0" fill="rgb(252,125,51)" rx="2" ry="2" />
<text  x="51.71" y="607.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::value (3 samples, 0.06%)</title><rect x="59.0" y="613" width="0.7" height="15.0" fill="rgb(215,105,43)" rx="2" ry="2" />
<text  x="62.00" y="623.5" ></text>
</g>
<g >
<title>read_page&lt;(anonymous namespace)::mutation_query_result_builder&gt; (2 samples, 0.04%)</title><rect x="106.7" y="613" width="0.4" height="15.0" fill="rgb(241,195,52)" rx="2" ry="2" />
<text  x="109.66" y="623.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::push_mutation_fragment&lt;mutation_fragment&gt; (38 samples, 0.72%)</title><rect x="315.6" y="629" width="8.5" height="15.0" fill="rgb(234,119,19)" rx="2" ry="2" />
<text  x="318.63" y="639.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::_M_range_initialize&lt;managed_bytes const*&gt; (3 samples, 0.06%)</title><rect x="919.1" y="645" width="0.6" height="15.0" fill="rgb(238,101,31)" rx="2" ry="2" />
<text  x="922.05" y="655.5" ></text>
</g>
<g >
<title>mutation_fragment::consume&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (2 samples, 0.04%)</title><rect x="868.7" y="773" width="0.5" height="15.0" fill="rgb(250,145,40)" rx="2" ry="2" />
<text  x="871.71" y="783.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.02%)</title><rect x="509.6" y="613" width="0.2" height="15.0" fill="rgb(241,208,34)" rx="2" ry="2" />
<text  x="512.61" y="623.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.04%)</title><rect x="70.4" y="485" width="0.5" height="15.0" fill="rgb(212,102,0)" rx="2" ry="2" />
<text  x="73.41" y="495.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::push_static_row (15 samples, 0.28%)</title><rect x="291.2" y="565" width="3.4" height="15.0" fill="rgb(209,133,46)" rx="2" ry="2" />
<text  x="294.24" y="575.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.08%)</title><rect x="860.4" y="725" width="0.9" height="15.0" fill="rgb(209,108,11)" rx="2" ry="2" />
<text  x="863.43" y="735.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::operator== (1 samples, 0.02%)</title><rect x="55.9" y="613" width="0.2" height="15.0" fill="rgb(245,55,52)" rx="2" ry="2" />
<text  x="58.87" y="623.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.02%)</title><rect x="59.4" y="437" width="0.3" height="15.0" fill="rgb(231,45,16)" rx="2" ry="2" />
<text  x="62.45" y="447.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (3 samples, 0.06%)</title><rect x="39.3" y="613" width="0.7" height="15.0" fill="rgb(222,58,42)" rx="2" ry="2" />
<text  x="42.31" y="623.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_last_fragment_kind, 4ul&gt;::~small_vector (1 samples, 0.02%)</title><rect x="477.8" y="613" width="0.3" height="15.0" fill="rgb(241,92,4)" rx="2" ry="2" />
<text  x="480.84" y="623.5" ></text>
</g>
<g >
<title>seastar::future&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry_ptr&gt;::then_impl&lt;utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (5 samples, 0.09%)</title><rect x="749.5" y="677" width="1.1" height="15.0" fill="rgb(227,5,11)" rx="2" ry="2" />
<text  x="752.46" y="687.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (3 samples, 0.06%)</title><rect x="793.3" y="549" width="0.7" height="15.0" fill="rgb(208,169,40)" rx="2" ry="2" />
<text  x="796.31" y="559.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::operation::set_value, std::default_delete&lt;cql3::operation::set_value&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::operation::set_value&gt;, void&gt; (1 samples, 0.02%)</title><rect x="57.0" y="597" width="0.2" height="15.0" fill="rgb(231,1,31)" rx="2" ry="2" />
<text  x="59.99" y="607.5" ></text>
</g>
<g >
<title>std::pair&lt;auth::role_or_anonymous, auth::resource&gt;::pair (8 samples, 0.15%)</title><rect x="801.4" y="517" width="1.8" height="15.0" fill="rgb(215,50,21)" rx="2" ry="2" />
<text  x="804.37" y="527.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;::_Tuple_impl&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const&amp;, auth::resource, void&gt; (8 samples, 0.15%)</title><rect x="774.7" y="661" width="1.8" height="15.0" fill="rgb(238,99,15)" rx="2" ry="2" />
<text  x="777.74" y="671.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally&lt;single_node_cql_env::execute_prepared_with_qo (9 samples, 0.17%)</title><rect x="839.0" y="741" width="2.0" height="15.0" fill="rgb(236,118,40)" rx="2" ry="2" />
<text  x="841.95" y="751.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;compact_for_query&lt; (3 samples, 0.06%)</title><rect x="441.8" y="661" width="0.7" height="15.0" fill="rgb(209,205,32)" rx="2" ry="2" />
<text  x="444.82" y="671.5" ></text>
</g>
<g >
<title>mutation_fragment::consume&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (1 samples, 0.02%)</title><rect x="693.5" y="645" width="0.2" height="15.0" fill="rgb(254,0,35)" rx="2" ry="2" />
<text  x="696.52" y="655.5" ></text>
</g>
<g >
<title>operator new (11 samples, 0.21%)</title><rect x="898.7" y="613" width="2.5" height="15.0" fill="rgb(236,118,26)" rx="2" ry="2" />
<text  x="901.69" y="623.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::operation::set_value, cql3::expr::expression&amp;&gt; (4 samples, 0.08%)</title><rect x="56.3" y="613" width="0.9" height="15.0" fill="rgb(252,162,32)" rx="2" ry="2" />
<text  x="59.31" y="623.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::get (1 samples, 0.02%)</title><rect x="358.8" y="501" width="0.2" height="15.0" fill="rgb(242,53,14)" rx="2" ry="2" />
<text  x="361.81" y="511.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (2 samples, 0.04%)</title><rect x="1025.6" y="421" width="0.4" height="15.0" fill="rgb(228,111,54)" rx="2" ry="2" />
<text  x="1028.55" y="431.5" ></text>
</g>
<g >
<title>locator::calculate_effective_replication_map (1 samples, 0.02%)</title><rect x="108.7" y="805" width="0.2" height="15.0" fill="rgb(215,28,17)" rx="2" ry="2" />
<text  x="111.67" y="815.5" ></text>
</g>
<g >
<title>allocation_strategy::get_standard_migrator&lt;blob_storage&gt; (2 samples, 0.04%)</title><rect x="241.1" y="357" width="0.5" height="15.0" fill="rgb(227,227,47)" rx="2" ry="2" />
<text  x="244.12" y="367.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (2 samples, 0.04%)</title><rect x="1015.5" y="501" width="0.4" height="15.0" fill="rgb(224,208,32)" rx="2" ry="2" />
<text  x="1018.48" y="511.5" ></text>
</g>
<g >
<title>database::find_schema (25 samples, 0.47%)</title><rect x="827.5" y="677" width="5.6" height="15.0" fill="rgb(231,168,13)" rx="2" ry="2" />
<text  x="830.54" y="687.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;::operator== (1 samples, 0.02%)</title><rect x="72.2" y="677" width="0.2" height="15.0" fill="rgb(208,114,50)" rx="2" ry="2" />
<text  x="75.20" y="687.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;tracking_allocator&lt;mutation_fragment&gt; &gt;::_S_destroy&lt;tracking_allocator&lt;mutation_fragment&gt;, mutation_fragment&gt; (2 samples, 0.04%)</title><rect x="188.1" y="533" width="0.4" height="15.0" fill="rgb(233,67,28)" rx="2" ry="2" />
<text  x="191.10" y="543.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (2 samples, 0.04%)</title><rect x="99.5" y="757" width="0.4" height="15.0" fill="rgb(226,1,2)" rx="2" ry="2" />
<text  x="102.50" y="767.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::raw::delete_statement, std::default_delete&lt;cql3::statements::raw::delete_statement&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="63.2" y="677" width="0.3" height="15.0" fill="rgb(223,206,12)" rx="2" ry="2" />
<text  x="66.25" y="687.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;boost::range_detail::integer_iterator&lt;unsigned int&gt;, std::function&lt;seastar::future&lt;void&gt;  (1 samples, 0.02%)</title><rect x="16.5" y="725" width="0.2" height="15.0" fill="rgb(222,124,40)" rx="2" ry="2" />
<text  x="19.49" y="735.5" ></text>
</g>
<g >
<title>seastar::internal::sharded_parallel_for_each (1 samples, 0.02%)</title><rect x="16.5" y="741" width="0.2" height="15.0" fill="rgb(245,108,40)" rx="2" ry="2" />
<text  x="19.49" y="751.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (1 samples, 0.02%)</title><rect x="852.4" y="645" width="0.2" height="15.0" fill="rgb(235,203,33)" rx="2" ry="2" />
<text  x="855.38" y="655.5" ></text>
</g>
<g >
<title>query::querier_base::querier_base (495 samples, 9.39%)</title><rect x="447.4" y="725" width="110.8" height="15.0" fill="rgb(242,71,36)" rx="2" ry="2" />
<text  x="450.41" y="735.5" >query::querie..</text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="51.4" y="565" width="0.2" height="15.0" fill="rgb(252,215,42)" rx="2" ry="2" />
<text  x="54.39" y="575.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (2 samples, 0.04%)</title><rect x="38.4" y="597" width="0.5" height="15.0" fill="rgb(219,10,11)" rx="2" ry="2" />
<text  x="41.41" y="607.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="23.9" y="501" width="0.2" height="15.0" fill="rgb(229,100,41)" rx="2" ry="2" />
<text  x="26.87" y="511.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::build_partition_keys (7 samples, 0.13%)</title><rect x="871.4" y="693" width="1.6" height="15.0" fill="rgb(209,82,42)" rx="2" ry="2" />
<text  x="874.40" y="703.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (31 samples, 0.59%)</title><rect x="753.9" y="645" width="7.0" height="15.0" fill="rgb(236,67,50)" rx="2" ry="2" />
<text  x="756.93" y="655.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_range_tombstone (14 samples, 0.27%)</title><rect x="270.9" y="517" width="3.1" height="15.0" fill="rgb(230,63,19)" rx="2" ry="2" />
<text  x="273.88" y="527.5" ></text>
</g>
<g >
<title>boost::range_detail::default_constructible_unary_fn_wrapper&lt;service::abstract_write_response_handler::max_backlog (1 samples, 0.02%)</title><rect x="719.7" y="709" width="0.2" height="15.0" fill="rgb(208,52,41)" rx="2" ry="2" />
<text  x="722.70" y="719.5" ></text>
</g>
<g >
<title>std::visit&lt;overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::has_token (1 samples, 0.02%)</title><rect x="948.6" y="645" width="0.2" height="15.0" fill="rgb(224,25,6)" rx="2" ry="2" />
<text  x="951.59" y="655.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (2 samples, 0.04%)</title><rect x="608.3" y="693" width="0.4" height="15.0" fill="rgb(213,41,42)" rx="2" ry="2" />
<text  x="611.28" y="703.5" ></text>
</g>
<g >
<title>std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;, seastar::future&lt;void&gt; &gt; &gt;::operator (9 samples, 0.17%)</title><rect x="824.9" y="677" width="2.0" height="15.0" fill="rgb(243,85,20)" rx="2" ry="2" />
<text  x="827.86" y="687.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::digest_read_result&gt;::schedule&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::execute (1 samples, 0.02%)</title><rect x="980.1" y="629" width="0.3" height="15.0" fill="rgb(210,129,26)" rx="2" ry="2" />
<text  x="983.13" y="639.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;mutation_reader_merger::operator (35 samples, 0.66%)</title><rect x="295.9" y="613" width="7.9" height="15.0" fill="rgb(227,199,26)" rx="2" ry="2" />
<text  x="298.94" y="623.5" ></text>
</g>
<g >
<title>cql3::raw_value_view::make_temporary (2 samples, 0.04%)</title><rect x="875.9" y="597" width="0.4" height="15.0" fill="rgb(251,165,5)" rx="2" ry="2" />
<text  x="878.87" y="607.5" ></text>
</g>
<g >
<title>operator delete (5 samples, 0.09%)</title><rect x="151.2" y="741" width="1.1" height="15.0" fill="rgb(251,104,9)" rx="2" ry="2" />
<text  x="154.18" y="751.5" ></text>
</g>
<g >
<title>memtable::memtable_encoding_stats_collector::update (2 samples, 0.04%)</title><rect x="1125.3" y="533" width="0.5" height="15.0" fill="rgb(218,28,24)" rx="2" ry="2" />
<text  x="1128.34" y="543.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (2 samples, 0.04%)</title><rect x="841.0" y="741" width="0.4" height="15.0" fill="rgb(244,102,10)" rx="2" ry="2" />
<text  x="843.97" y="751.5" ></text>
</g>
<g >
<title>sstables::sstable::write_compression (1 samples, 0.02%)</title><rect x="15.1" y="805" width="0.3" height="15.0" fill="rgb(234,86,28)" rx="2" ry="2" />
<text  x="18.15" y="815.5" ></text>
</g>
<g >
<title>seastar::gate::enter (1 samples, 0.02%)</title><rect x="138.0" y="757" width="0.2" height="15.0" fill="rgb(229,181,20)" rx="2" ry="2" />
<text  x="140.98" y="767.5" ></text>
</g>
<g >
<title>std::vector&lt;seastar::shared_ptr&lt;cql3::relation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::relation&gt; &gt; &gt;::emplace_back&lt;seastar::shared_ptr&lt;cql3::single_column_relation&gt; &gt; (2 samples, 0.04%)</title><rect x="59.7" y="629" width="0.4" height="15.0" fill="rgb(216,105,19)" rx="2" ry="2" />
<text  x="62.67" y="639.5" ></text>
</g>
<g >
<title>seastar::reactor::run (4,857 samples, 92.09%)</title><rect x="83.4" y="853" width="1086.7" height="15.0" fill="rgb(245,0,53)" rx="2" ry="2" />
<text  x="86.39" y="863.5" >seastar::reactor::run</text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::timer (3 samples, 0.06%)</title><rect x="1024.7" y="453" width="0.6" height="15.0" fill="rgb(210,221,8)" rx="2" ry="2" />
<text  x="1027.66" y="463.5" ></text>
</g>
<g >
<title>intrusive_b::member_hook::~member_hook (1 samples, 0.02%)</title><rect x="1139.0" y="549" width="0.2" height="15.0" fill="rgb(231,84,1)" rx="2" ry="2" />
<text  x="1141.99" y="559.5" ></text>
</g>
<g >
<title>utils::murmur_hash::hash3_x64_128&lt;legacy_compound_view&lt;compound_type&lt; (1 samples, 0.02%)</title><rect x="1123.8" y="501" width="0.2" height="15.0" fill="rgb(241,18,33)" rx="2" ry="2" />
<text  x="1126.77" y="511.5" ></text>
</g>
<g >
<title>ser::serializer&lt;std::chrono::time_point&lt;gc_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt; &gt; &gt;::write&lt;bytes_ostream&gt; (1 samples, 0.02%)</title><rect x="1136.5" y="437" width="0.3" height="15.0" fill="rgb(211,179,40)" rx="2" ry="2" />
<text  x="1139.53" y="447.5" ></text>
</g>
<g >
<title>schema_registry::get (20 samples, 0.38%)</title><rect x="971.4" y="661" width="4.5" height="15.0" fill="rgb(231,95,8)" rx="2" ry="2" />
<text  x="974.41" y="671.5" ></text>
</g>
<g >
<title>service::client_state::has_access (194 samples, 3.68%)</title><rect x="780.6" y="677" width="43.4" height="15.0" fill="rgb(224,185,11)" rx="2" ry="2" />
<text  x="783.56" y="687.5" >serv..</text>
</g>
<g >
<title>utils::loading_shared_values&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater, 256ul&gt;::find&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt; &gt; (21 samples, 0.40%)</title><rect x="735.8" y="693" width="4.7" height="15.0" fill="rgb(253,120,31)" rx="2" ry="2" />
<text  x="738.81" y="703.5" ></text>
</g>
<g >
<title>ser::serializer&lt;clustering_key_prefix&gt;::write&lt;seastar::measuring_output_stream&gt; (1 samples, 0.02%)</title><rect x="1136.8" y="373" width="0.2" height="15.0" fill="rgb(234,124,48)" rx="2" ry="2" />
<text  x="1139.75" y="383.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const*, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;*&gt; (3 samples, 0.06%)</title><rect x="812.6" y="533" width="0.6" height="15.0" fill="rgb(216,160,24)" rx="2" ry="2" />
<text  x="815.55" y="543.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (1 samples, 0.02%)</title><rect x="1163.2" y="773" width="0.2" height="15.0" fill="rgb(207,187,19)" rx="2" ry="2" />
<text  x="1166.15" y="783.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (4 samples, 0.08%)</title><rect x="748.6" y="677" width="0.9" height="15.0" fill="rgb(251,47,49)" rx="2" ry="2" />
<text  x="751.56" y="687.5" ></text>
</g>
<g >
<title>__libc_csu_init (4 samples, 0.08%)</title><rect x="82.5" y="933" width="0.9" height="15.0" fill="rgb(234,146,51)" rx="2" ry="2" />
<text  x="85.49" y="943.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::execute (43 samples, 0.82%)</title><rect x="696.2" y="805" width="9.6" height="15.0" fill="rgb(210,1,17)" rx="2" ry="2" />
<text  x="699.21" y="815.5" ></text>
</g>
<g >
<title>auth::permissions_cache::get (104 samples, 1.97%)</title><rect x="794.2" y="581" width="23.3" height="15.0" fill="rgb(225,219,7)" rx="2" ry="2" />
<text  x="797.21" y="591.5" >a..</text>
</g>
<g >
<title>managed_bytes::free_chain (14 samples, 0.27%)</title><rect x="427.0" y="501" width="3.2" height="15.0" fill="rgb(216,55,0)" rx="2" ry="2" />
<text  x="430.05" y="511.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="138.9" y="757" width="0.2" height="15.0" fill="rgb(252,45,2)" rx="2" ry="2" />
<text  x="141.87" y="767.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (1 samples, 0.02%)</title><rect x="901.2" y="613" width="0.2" height="15.0" fill="rgb(224,21,38)" rx="2" ry="2" />
<text  x="904.15" y="623.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_digest_requests (1 samples, 0.02%)</title><rect x="1046.4" y="629" width="0.2" height="15.0" fill="rgb(241,94,17)" rx="2" ry="2" />
<text  x="1049.36" y="639.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;clustering_key_prefix&gt;::_M_move_assign (1 samples, 0.02%)</title><rect x="567.8" y="725" width="0.2" height="15.0" fill="rgb(251,12,17)" rx="2" ry="2" />
<text  x="570.78" y="735.5" ></text>
</g>
<g >
<title>operator delete (5 samples, 0.09%)</title><rect x="120.1" y="757" width="1.1" height="15.0" fill="rgb(207,1,46)" rx="2" ry="2" />
<text  x="123.08" y="767.5" ></text>
</g>
<g >
<title>mutation_partition_view::do_accept&lt;partition_builder&gt; (13 samples, 0.25%)</title><rect x="1125.8" y="549" width="2.9" height="15.0" fill="rgb(234,120,17)" rx="2" ry="2" />
<text  x="1128.79" y="559.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_construct&lt;interval_bound&lt;dht::ring_position&gt; const&amp;&gt; (3 samples, 0.06%)</title><rect x="1040.1" y="581" width="0.7" height="15.0" fill="rgb(239,146,11)" rx="2" ry="2" />
<text  x="1043.09" y="591.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (2 samples, 0.04%)</title><rect x="195.3" y="565" width="0.4" height="15.0" fill="rgb(224,107,11)" rx="2" ry="2" />
<text  x="198.26" y="575.5" ></text>
</g>
<g >
<title>std::__equal&lt;false&gt;::equal&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;*, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const*&gt; (1 samples, 0.02%)</title><rect x="76.7" y="517" width="0.2" height="15.0" fill="rgb(205,173,20)" rx="2" ry="2" />
<text  x="79.67" y="527.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (3 samples, 0.06%)</title><rect x="136.0" y="677" width="0.6" height="15.0" fill="rgb(222,16,33)" rx="2" ry="2" />
<text  x="138.97" y="687.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_pausable&lt;flush_reader::fill_buffer (6 samples, 0.11%)</title><rect x="79.4" y="741" width="1.3" height="15.0" fill="rgb(206,121,34)" rx="2" ry="2" />
<text  x="82.36" y="751.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::get_value (1 samples, 0.02%)</title><rect x="722.4" y="805" width="0.2" height="15.0" fill="rgb(245,27,30)" rx="2" ry="2" />
<text  x="725.39" y="815.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.02%)</title><rect x="42.4" y="629" width="0.3" height="15.0" fill="rgb(216,0,27)" rx="2" ry="2" />
<text  x="45.44" y="639.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="1134.7" y="437" width="0.3" height="15.0" fill="rgb(208,192,33)" rx="2" ry="2" />
<text  x="1137.74" y="447.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="278.9" y="549" width="0.3" height="15.0" fill="rgb(220,169,22)" rx="2" ry="2" />
<text  x="281.93" y="559.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="211.1" y="485" width="0.3" height="15.0" fill="rgb(244,18,1)" rx="2" ry="2" />
<text  x="214.14" y="495.5" ></text>
</g>
<g >
<title>std::apply&lt;auth::get_permissions (4 samples, 0.08%)</title><rect x="76.2" y="661" width="0.9" height="15.0" fill="rgb(242,16,23)" rx="2" ry="2" />
<text  x="79.23" y="671.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (19 samples, 0.36%)</title><rect x="642.3" y="789" width="4.2" height="15.0" fill="rgb(231,9,42)" rx="2" ry="2" />
<text  x="645.29" y="799.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="1133.8" y="469" width="0.3" height="15.0" fill="rgb(226,208,25)" rx="2" ry="2" />
<text  x="1136.84" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="52.7" y="565" width="0.3" height="15.0" fill="rgb(232,173,51)" rx="2" ry="2" />
<text  x="55.73" y="575.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;nonwrapping_interval&lt;dht::ring_position&gt; const*, nonwrapping_interval&lt;dht::ring_position&gt;*&gt; (1 samples, 0.02%)</title><rect x="942.1" y="693" width="0.2" height="15.0" fill="rgb(218,94,1)" rx="2" ry="2" />
<text  x="945.10" y="703.5" ></text>
</g>
<g >
<title>schema::column_at (1 samples, 0.02%)</title><rect x="106.7" y="53" width="0.2" height="15.0" fill="rgb(230,6,6)" rx="2" ry="2" />
<text  x="109.66" y="63.5" ></text>
</g>
<g >
<title>atomic_cell_or_collection::copy (1 samples, 0.02%)</title><rect x="869.2" y="549" width="0.2" height="15.0" fill="rgb(237,148,25)" rx="2" ry="2" />
<text  x="872.16" y="559.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::leaf_node::free (1 samples, 0.02%)</title><rect x="1127.4" y="469" width="0.2" height="15.0" fill="rgb(233,214,47)" rx="2" ry="2" />
<text  x="1130.35" y="479.5" ></text>
</g>
<g >
<title>absl::container_internal::operator== (1 samples, 0.02%)</title><rect x="830.5" y="629" width="0.2" height="15.0" fill="rgb(231,1,27)" rx="2" ry="2" />
<text  x="833.45" y="639.5" ></text>
</g>
<g >
<title>auth::resource::resource (2 samples, 0.04%)</title><rect x="75.6" y="757" width="0.4" height="15.0" fill="rgb(230,148,16)" rx="2" ry="2" />
<text  x="78.56" y="767.5" ></text>
</g>
<g >
<title>sstables::sstable::write_simple&lt; (1 samples, 0.02%)</title><rect x="16.9" y="725" width="0.3" height="15.0" fill="rgb(229,20,45)" rx="2" ry="2" />
<text  x="19.94" y="735.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEE4$_44ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_45ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_43ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_46ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_47ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_48ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_49ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_50ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_51ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_52ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_53ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_54ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_55ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_56ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_57ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_58EERS4_IJNSF_11conjunctionENSF_15binary_operatorENSF_12column_valueENSF_5tokenENSF_21unresolved_identifierENSF_25column_mutation_attributeENSF_13function_callENSF_4castENSF_15field_selectionENSF_4nullENSF_13bind_variableENSF_16untyped_constantENSF_8constantENSF_17tuple_constructorENSF_22collection_constructorENSF_20usertype_constructorEEEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES16_S1O_ (6 samples, 0.11%)</title><rect x="893.3" y="709" width="1.4" height="15.0" fill="rgb(243,145,29)" rx="2" ry="2" />
<text  x="896.32" y="719.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.02%)</title><rect x="40.4" y="549" width="0.3" height="15.0" fill="rgb(209,158,47)" rx="2" ry="2" />
<text  x="43.43" y="559.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_partition_key_ranges (5 samples, 0.09%)</title><rect x="871.4" y="677" width="1.1" height="15.0" fill="rgb(205,73,23)" rx="2" ry="2" />
<text  x="874.40" y="687.5" ></text>
</g>
<g >
<title>db::system_keyspace::all_tables (1 samples, 0.02%)</title><rect x="16.5" y="597" width="0.2" height="15.0" fill="rgb(223,213,19)" rx="2" ry="2" />
<text  x="19.49" y="607.5" ></text>
</g>
<g >
<title>log_heap&lt;logalloc::segment_descriptor, logalloc::segment_descriptor_hist_options&gt;::adjust_up (1 samples, 0.02%)</title><rect x="695.5" y="389" width="0.3" height="15.0" fill="rgb(252,204,52)" rx="2" ry="2" />
<text  x="698.54" y="399.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (478 samples, 9.06%)</title><rect x="332.9" y="677" width="106.9" height="15.0" fill="rgb(222,36,34)" rx="2" ry="2" />
<text  x="335.86" y="687.5" >flat_mutation..</text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::do_fill_buffer (2 samples, 0.04%)</title><rect x="869.2" y="693" width="0.4" height="15.0" fill="rgb(246,180,50)" rx="2" ry="2" />
<text  x="872.16" y="703.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextToken (49 samples, 0.93%)</title><rect x="25.0" y="613" width="11.0" height="15.0" fill="rgb(243,49,39)" rx="2" ry="2" />
<text  x="27.99" y="623.5" ></text>
</g>
<g >
<title>seastar::do_until&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::fill_buffer (6 samples, 0.11%)</title><rect x="79.4" y="709" width="1.3" height="15.0" fill="rgb(217,219,17)" rx="2" ry="2" />
<text  x="82.36" y="719.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector (6 samples, 0.11%)</title><rect x="1160.7" y="773" width="1.3" height="15.0" fill="rgb(250,193,12)" rx="2" ry="2" />
<text  x="1163.69" y="783.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.04%)</title><rect x="914.6" y="597" width="0.4" height="15.0" fill="rgb(234,162,40)" rx="2" ry="2" />
<text  x="917.58" y="607.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="1118.9" y="725" width="0.2" height="15.0" fill="rgb(252,35,8)" rx="2" ry="2" />
<text  x="1121.85" y="735.5" ></text>
</g>
<g >
<title>database::query (2 samples, 0.04%)</title><rect x="1003.8" y="581" width="0.5" height="15.0" fill="rgb(220,12,50)" rx="2" ry="2" />
<text  x="1006.85" y="591.5" ></text>
</g>
<g >
<title>seastar::promise&lt;void&gt;::promise (3 samples, 0.06%)</title><rect x="136.0" y="693" width="0.6" height="15.0" fill="rgb(240,203,44)" rx="2" ry="2" />
<text  x="138.97" y="703.5" ></text>
</g>
<g >
<title>row_cache::invalidate (2 samples, 0.04%)</title><rect x="695.3" y="741" width="0.5" height="15.0" fill="rgb(212,55,26)" rx="2" ry="2" />
<text  x="698.31" y="751.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (2 samples, 0.04%)</title><rect x="614.3" y="709" width="0.5" height="15.0" fill="rgb(225,8,9)" rx="2" ry="2" />
<text  x="617.32" y="719.5" ></text>
</g>
<g >
<title>sstables::regular_compaction::stop_sstable_writer (1 samples, 0.02%)</title><rect x="16.9" y="789" width="0.3" height="15.0" fill="rgb(226,227,29)" rx="2" ry="2" />
<text  x="19.94" y="799.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::net::inet_address&gt;::operator (1 samples, 0.02%)</title><rect x="717.9" y="709" width="0.2" height="15.0" fill="rgb(241,77,31)" rx="2" ry="2" />
<text  x="720.91" y="719.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::check_access (312 samples, 5.92%)</title><rect x="766.7" y="725" width="69.8" height="15.0" fill="rgb(231,7,29)" rx="2" ry="2" />
<text  x="769.69" y="735.5" >cql3::s..</text>
</g>
<g >
<title>executor&lt;test_read (628 samples, 11.91%)</title><rect x="725.7" y="789" width="140.5" height="15.0" fill="rgb(253,60,46)" rx="2" ry="2" />
<text  x="728.74" y="799.5" >executor&lt;test_read</text>
</g>
<g >
<title>operator new (7 samples, 0.13%)</title><rect x="969.8" y="661" width="1.6" height="15.0" fill="rgb(237,78,9)" rx="2" ry="2" />
<text  x="972.84" y="671.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.02%)</title><rect x="57.9" y="469" width="0.2" height="15.0" fill="rgb(212,20,15)" rx="2" ry="2" />
<text  x="60.88" y="479.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_range_tombstone (19 samples, 0.36%)</title><rect x="270.0" y="533" width="4.2" height="15.0" fill="rgb(209,142,49)" rx="2" ry="2" />
<text  x="272.98" y="543.5" ></text>
</g>
<g >
<title>bound_view::from_range_start&lt;nonwrapping_interval&gt; (1 samples, 0.02%)</title><rect x="80.5" y="597" width="0.2" height="15.0" fill="rgb(241,184,23)" rx="2" ry="2" />
<text  x="83.48" y="607.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (1 samples, 0.02%)</title><rect x="638.9" y="757" width="0.3" height="15.0" fill="rgb(228,203,43)" rx="2" ry="2" />
<text  x="641.93" y="767.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::indirect_move (1 samples, 0.02%)</title><rect x="135.5" y="693" width="0.2" height="15.0" fill="rgb(211,40,37)" rx="2" ry="2" />
<text  x="138.52" y="703.5" ></text>
</g>
<g >
<title>_ZSt13__invoke_implISt10unique_ptrIN7seastar8internal13do_with_stateISt5tupleIJN20flat_mutation_reader4impl16consumer_adapterI35stable_flattened_mutations_consumerI17compact_for_queryIL19emit_only_live_rows1EN5query27clustering_position_trackerI20query_result_builderEEEEEEEENS1_6futureIvEEEESt14default_deleteISL_EEZNS2_12do_with_implISH_ZNS6_7consumeISG_EEDaT_EUlRSH_E_JEEEDaOSR_OT0_DpOT1_EUlDpOT_E_JSH_EESR_St14__invoke_otherSW_SZ_ (12 samples, 0.23%)</title><rect x="333.5" y="613" width="2.7" height="15.0" fill="rgb(213,19,5)" rx="2" ry="2" />
<text  x="336.53" y="623.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::EqualElement&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (2 samples, 0.04%)</title><rect x="770.0" y="629" width="0.5" height="15.0" fill="rgb(206,166,15)" rx="2" ry="2" />
<text  x="773.04" y="639.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (6 samples, 0.11%)</title><rect x="770.5" y="629" width="1.3" height="15.0" fill="rgb(223,16,25)" rx="2" ry="2" />
<text  x="773.49" y="639.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_token (1 samples, 0.02%)</title><rect x="945.7" y="709" width="0.2" height="15.0" fill="rgb(235,76,3)" rx="2" ry="2" />
<text  x="948.68" y="719.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (2 samples, 0.04%)</title><rect x="664.9" y="773" width="0.4" height="15.0" fill="rgb(234,20,26)" rx="2" ry="2" />
<text  x="667.88" y="783.5" ></text>
</g>
<g >
<title>__tls_init (3 samples, 0.06%)</title><rect x="515.2" y="549" width="0.7" height="15.0" fill="rgb(216,152,10)" rx="2" ry="2" />
<text  x="518.20" y="559.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::impl&gt;::_S_destroy&lt;seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::impl, mutation_fragment&gt; (2 samples, 0.04%)</title><rect x="322.8" y="613" width="0.4" height="15.0" fill="rgb(246,52,26)" rx="2" ry="2" />
<text  x="325.79" y="623.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;query::result&gt;::operator= (1 samples, 0.02%)</title><rect x="138.6" y="757" width="0.3" height="15.0" fill="rgb(235,187,30)" rx="2" ry="2" />
<text  x="141.65" y="767.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_partition_key_range (1 samples, 0.02%)</title><rect x="964.7" y="677" width="0.2" height="15.0" fill="rgb(219,32,28)" rx="2" ry="2" />
<text  x="967.69" y="687.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (57 samples, 1.08%)</title><rect x="748.1" y="693" width="12.8" height="15.0" fill="rgb(215,215,38)" rx="2" ry="2" />
<text  x="751.12" y="703.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::fillBuffer (67 samples, 1.27%)</title><rect x="21.9" y="629" width="14.9" height="15.0" fill="rgb(241,98,10)" rx="2" ry="2" />
<text  x="24.86" y="639.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (3 samples, 0.06%)</title><rect x="319.7" y="597" width="0.6" height="15.0" fill="rgb(247,46,41)" rx="2" ry="2" />
<text  x="322.65" y="607.5" ></text>
</g>
<g >
<title>std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (12 samples, 0.23%)</title><rect x="436.2" y="597" width="2.7" height="15.0" fill="rgb(242,122,20)" rx="2" ry="2" />
<text  x="439.22" y="607.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (695 samples, 13.18%)</title><rect x="170.4" y="693" width="155.5" height="15.0" fill="rgb(214,55,3)" rx="2" ry="2" />
<text  x="173.42" y="703.5" >merging_reader&lt;muta..</text>
</g>
<g >
<title>seastar::logger::log&lt;dht::token const&amp;, utils::small_vector&lt;gms::inet_address, 3ul&gt;&amp;, utils::small_vector&lt;gms::inet_address, 3ul&gt;&amp;, db::read_repair_decision&amp;&gt; (1 samples, 0.02%)</title><rect x="1054.6" y="645" width="0.3" height="15.0" fill="rgb(240,74,37)" rx="2" ry="2" />
<text  x="1057.64" y="655.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (69 samples, 1.31%)</title><rect x="21.6" y="645" width="15.5" height="15.0" fill="rgb(248,125,41)" rx="2" ry="2" />
<text  x="24.63" y="655.5" ></text>
</g>
<g >
<title>service::client_state::ensure_has_permission (180 samples, 3.41%)</title><rect x="781.9" y="661" width="40.3" height="15.0" fill="rgb(238,15,18)" rx="2" ry="2" />
<text  x="784.90" y="671.5" >ser..</text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (3 samples, 0.06%)</title><rect x="51.8" y="581" width="0.7" height="15.0" fill="rgb(241,147,20)" rx="2" ry="2" />
<text  x="54.84" y="591.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_erase_at_end (1 samples, 0.02%)</title><rect x="19.4" y="693" width="0.2" height="15.0" fill="rgb(226,93,27)" rx="2" ry="2" />
<text  x="22.40" y="703.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, enum_set&lt;super_enum&lt;auth::permission,  (4 samples, 0.08%)</title><rect x="76.2" y="613" width="0.9" height="15.0" fill="rgb(219,158,53)" rx="2" ry="2" />
<text  x="79.23" y="623.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (1 samples, 0.02%)</title><rect x="369.3" y="469" width="0.2" height="15.0" fill="rgb(249,16,37)" rx="2" ry="2" />
<text  x="372.32" y="479.5" ></text>
</g>
<g >
<title>validation::validate_keyspace (2 samples, 0.04%)</title><rect x="74.2" y="741" width="0.5" height="15.0" fill="rgb(232,108,47)" rx="2" ry="2" />
<text  x="77.21" y="751.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (1 samples, 0.02%)</title><rect x="78.5" y="853" width="0.2" height="15.0" fill="rgb(252,227,21)" rx="2" ry="2" />
<text  x="81.46" y="863.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;service::storage_proxy_coordinator_query_result&gt;, seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::finally_body&lt;service::storage_proxy::do_query (45 samples, 0.85%)</title><rect x="683.0" y="805" width="10.1" height="15.0" fill="rgb(230,101,24)" rx="2" ry="2" />
<text  x="686.01" y="815.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::__do_dyncast (4 samples, 0.08%)</title><rect x="11.6" y="885" width="0.9" height="15.0" fill="rgb(213,105,28)" rx="2" ry="2" />
<text  x="14.57" y="895.5" ></text>
</g>
<g >
<title>basic_atomic_cell_view&lt; (30 samples, 0.57%)</title><rect x="410.3" y="469" width="6.7" height="15.0" fill="rgb(249,189,39)" rx="2" ry="2" />
<text  x="413.27" y="479.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.02%)</title><rect x="20.7" y="581" width="0.3" height="15.0" fill="rgb(238,54,7)" rx="2" ry="2" />
<text  x="23.74" y="591.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::with_permit (71 samples, 1.35%)</title><rect x="1017.7" y="549" width="15.9" height="15.0" fill="rgb(221,128,28)" rx="2" ry="2" />
<text  x="1020.72" y="559.5" ></text>
</g>
<g >
<title>utils::phased_barrier::start (1 samples, 0.02%)</title><rect x="1038.5" y="565" width="0.3" height="15.0" fill="rgb(220,177,14)" rx="2" ry="2" />
<text  x="1041.53" y="575.5" ></text>
</g>
<g >
<title>dht::murmur3_partitioner::get_token (46 samples, 0.87%)</title><rect x="921.3" y="693" width="10.3" height="15.0" fill="rgb(236,93,6)" rx="2" ry="2" />
<text  x="924.29" y="703.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (71 samples, 1.35%)</title><rect x="21.2" y="677" width="15.9" height="15.0" fill="rgb(244,68,40)" rx="2" ry="2" />
<text  x="24.19" y="687.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (2 samples, 0.04%)</title><rect x="47.1" y="453" width="0.5" height="15.0" fill="rgb(215,209,54)" rx="2" ry="2" />
<text  x="50.14" y="463.5" ></text>
</g>
<g >
<title>validation::validate_column_family (1 samples, 0.02%)</title><rect x="77.1" y="757" width="0.2" height="15.0" fill="rgb(214,170,11)" rx="2" ry="2" />
<text  x="80.12" y="767.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::promise&lt;void&gt; &gt;::_M_reset (1 samples, 0.02%)</title><rect x="1028.9" y="517" width="0.2" height="15.0" fill="rgb(205,58,46)" rx="2" ry="2" />
<text  x="1031.91" y="527.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (1 samples, 0.02%)</title><rect x="1086.0" y="549" width="0.2" height="15.0" fill="rgb(223,31,22)" rx="2" ry="2" />
<text  x="1088.96" y="559.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.02%)</title><rect x="638.5" y="773" width="0.2" height="15.0" fill="rgb(244,152,32)" rx="2" ry="2" />
<text  x="641.48" y="783.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (5 samples, 0.09%)</title><rect x="554.6" y="613" width="1.1" height="15.0" fill="rgb(226,110,47)" rx="2" ry="2" />
<text  x="557.58" y="623.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (2 samples, 0.04%)</title><rect x="1166.7" y="725" width="0.5" height="15.0" fill="rgb(213,94,15)" rx="2" ry="2" />
<text  x="1169.73" y="735.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (2 samples, 0.04%)</title><rect x="673.6" y="773" width="0.5" height="15.0" fill="rgb(226,155,15)" rx="2" ry="2" />
<text  x="676.61" y="783.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_pausable&lt;scanning_reader::consumer&gt; (1 samples, 0.02%)</title><rect x="106.7" y="261" width="0.2" height="15.0" fill="rgb(211,41,37)" rx="2" ry="2" />
<text  x="109.66" y="271.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;query::result_digest, 3ul&gt;::emplace_back&lt;query::result_digest const&gt; (1 samples, 0.02%)</title><rect x="716.1" y="741" width="0.2" height="15.0" fill="rgb(253,67,14)" rx="2" ry="2" />
<text  x="719.12" y="751.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::get_mutations (27 samples, 0.51%)</title><rect x="870.7" y="709" width="6.1" height="15.0" fill="rgb(225,10,42)" rx="2" ry="2" />
<text  x="873.72" y="719.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (8 samples, 0.15%)</title><rect x="38.4" y="661" width="1.8" height="15.0" fill="rgb(253,220,11)" rx="2" ry="2" />
<text  x="41.41" y="671.5" ></text>
</g>
<g >
<title>std::vector&lt;std::optional&lt;ser::qr_cell_view&gt;, std::allocator&lt;std::optional&lt;ser::qr_cell_view&gt; &gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="108.2" y="581" width="0.2" height="15.0" fill="rgb(210,39,53)" rx="2" ry="2" />
<text  x="111.22" y="591.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_impl&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (473 samples, 8.97%)</title><rect x="333.3" y="629" width="105.8" height="15.0" fill="rgb(232,40,8)" rx="2" ry="2" />
<text  x="336.30" y="639.5" >seastar::int..</text>
</g>
<g >
<title>bytes_view_hasher::finalize (11 samples, 0.21%)</title><rect x="757.7" y="565" width="2.5" height="15.0" fill="rgb(211,65,35)" rx="2" ry="2" />
<text  x="760.74" y="575.5" ></text>
</g>
<g >
<title>mutation_fragment::visit&lt;mutation_fragment::calculate_memory_usage (1 samples, 0.02%)</title><rect x="263.3" y="485" width="0.2" height="15.0" fill="rgb(211,133,7)" rx="2" ry="2" />
<text  x="266.27" y="495.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (1 samples, 0.02%)</title><rect x="78.5" y="693" width="0.2" height="15.0" fill="rgb(218,14,15)" rx="2" ry="2" />
<text  x="81.46" y="703.5" ></text>
</g>
<g >
<title>query::querier_base::~querier_base (32 samples, 0.61%)</title><rect x="601.6" y="741" width="7.1" height="15.0" fill="rgb(209,139,7)" rx="2" ry="2" />
<text  x="604.57" y="751.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::allocate (1 samples, 0.02%)</title><rect x="23.9" y="517" width="0.2" height="15.0" fill="rgb(251,136,7)" rx="2" ry="2" />
<text  x="26.87" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value_view, std::allocator&lt;cql3::raw_value_view&gt; &gt;::~vector (2 samples, 0.04%)</title><rect x="682.1" y="757" width="0.5" height="15.0" fill="rgb(219,32,13)" rx="2" ry="2" />
<text  x="685.11" y="767.5" ></text>
</g>
<g >
<title>cql3::expr::conjunction::~conjunction (1 samples, 0.02%)</title><rect x="51.4" y="581" width="0.2" height="15.0" fill="rgb(207,135,47)" rx="2" ry="2" />
<text  x="54.39" y="591.5" ></text>
</g>
<g >
<title>auth::data_resource_view::table (1 samples, 0.02%)</title><rect x="808.5" y="437" width="0.2" height="15.0" fill="rgb(241,229,39)" rx="2" ry="2" />
<text  x="811.52" y="447.5" ></text>
</g>
<g >
<title>row_tombstone::apply (1 samples, 0.02%)</title><rect x="419.7" y="517" width="0.2" height="15.0" fill="rgb(221,0,53)" rx="2" ry="2" />
<text  x="422.67" y="527.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::check_queue_size (3 samples, 0.06%)</title><rect x="1018.8" y="517" width="0.7" height="15.0" fill="rgb(226,68,22)" rx="2" ry="2" />
<text  x="1021.84" y="527.5" ></text>
</g>
<g >
<title>boost::dynamic_bitset&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::dynamic_bitset (1 samples, 0.02%)</title><rect x="73.3" y="661" width="0.2" height="15.0" fill="rgb(233,115,26)" rx="2" ry="2" />
<text  x="76.32" y="671.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (1 samples, 0.02%)</title><rect x="694.0" y="677" width="0.2" height="15.0" fill="rgb(206,105,50)" rx="2" ry="2" />
<text  x="696.97" y="687.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_max_result_size (7 samples, 0.13%)</title><rect x="1116.6" y="725" width="1.6" height="15.0" fill="rgb(249,9,43)" rx="2" ry="2" />
<text  x="1119.61" y="735.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_data_requests (1 samples, 0.02%)</title><rect x="964.7" y="613" width="0.2" height="15.0" fill="rgb(226,113,47)" rx="2" ry="2" />
<text  x="967.69" y="623.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (1 samples, 0.02%)</title><rect x="640.3" y="789" width="0.2" height="15.0" fill="rgb(216,111,4)" rx="2" ry="2" />
<text  x="643.27" y="799.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="57.9" y="581" width="0.2" height="15.0" fill="rgb(244,85,50)" rx="2" ry="2" />
<text  x="60.88" y="591.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;11ul, cql3::expr::untyped_constant&gt; (1 samples, 0.02%)</title><rect x="53.4" y="485" width="0.2" height="15.0" fill="rgb(230,66,29)" rx="2" ry="2" />
<text  x="56.41" y="495.5" ></text>
</g>
<g >
<title>ser::after_qr_cell__value&lt;bytes_ostream&gt;::skip_ttl (10 samples, 0.19%)</title><rect x="390.6" y="469" width="2.2" height="15.0" fill="rgb(238,47,38)" rx="2" ry="2" />
<text  x="393.58" y="479.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnFamilyName (4 samples, 0.08%)</title><rect x="40.4" y="661" width="0.9" height="15.0" fill="rgb(252,77,10)" rx="2" ry="2" />
<text  x="43.43" y="671.5" ></text>
</g>
<g >
<title>service::storage_proxy::got_response (3 samples, 0.06%)</title><rect x="719.7" y="789" width="0.7" height="15.0" fill="rgb(215,168,41)" rx="2" ry="2" />
<text  x="722.70" y="799.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (2 samples, 0.04%)</title><rect x="20.3" y="629" width="0.4" height="15.0" fill="rgb(208,199,31)" rx="2" ry="2" />
<text  x="23.29" y="639.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::get0 (1 samples, 0.02%)</title><rect x="337.1" y="597" width="0.2" height="15.0" fill="rgb(206,57,10)" rx="2" ry="2" />
<text  x="340.11" y="607.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;::operator (16 samples, 0.30%)</title><rect x="757.1" y="597" width="3.5" height="15.0" fill="rgb(206,150,26)" rx="2" ry="2" />
<text  x="760.06" y="607.5" ></text>
</g>
<g >
<title>mutation_source::make_reader (480 samples, 9.10%)</title><rect x="448.5" y="709" width="107.4" height="15.0" fill="rgb(211,16,37)" rx="2" ry="2" />
<text  x="451.53" y="719.5" >mutation_sour..</text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (15 samples, 0.28%)</title><rect x="244.7" y="421" width="3.4" height="15.0" fill="rgb(245,196,19)" rx="2" ry="2" />
<text  x="247.70" y="431.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (3 samples, 0.06%)</title><rect x="561.7" y="661" width="0.7" height="15.0" fill="rgb(212,95,0)" rx="2" ry="2" />
<text  x="564.74" y="671.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.02%)</title><rect x="214.9" y="517" width="0.3" height="15.0" fill="rgb(208,202,45)" rx="2" ry="2" />
<text  x="217.95" y="527.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::has_slice_or_needs_filtering (2 samples, 0.04%)</title><rect x="656.6" y="725" width="0.5" height="15.0" fill="rgb(246,6,39)" rx="2" ry="2" />
<text  x="659.61" y="735.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="70.9" y="597" width="0.2" height="15.0" fill="rgb(235,49,8)" rx="2" ry="2" />
<text  x="73.86" y="607.5" ></text>
</g>
<g >
<title>visit&lt;(anonymous namespace)::deserialize_visitor&lt;basic_single_fragmented_view&lt; (1 samples, 0.02%)</title><rect x="107.3" y="661" width="0.3" height="15.0" fill="rgb(250,21,52)" rx="2" ry="2" />
<text  x="110.33" y="671.5" ></text>
</g>
<g >
<title>evictable_reader::fill_buffer (1 samples, 0.02%)</title><rect x="106.9" y="485" width="0.2" height="15.0" fill="rgb(239,78,26)" rx="2" ry="2" />
<text  x="109.88" y="495.5" ></text>
</g>
<g >
<title>appending_hash&lt;partition_key&gt;::operator (1 samples, 0.02%)</title><rect x="107.1" y="709" width="0.2" height="15.0" fill="rgb(235,209,37)" rx="2" ry="2" />
<text  x="110.10" y="719.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (37 samples, 0.70%)</title><rect x="348.7" y="517" width="8.3" height="15.0" fill="rgb(244,25,53)" rx="2" ry="2" />
<text  x="351.74" y="527.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::query_processor::execute_direct (1 samples, 0.02%)</title><rect x="649.9" y="805" width="0.2" height="15.0" fill="rgb(225,178,16)" rx="2" ry="2" />
<text  x="652.89" y="815.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (3 samples, 0.06%)</title><rect x="51.8" y="549" width="0.7" height="15.0" fill="rgb(228,159,41)" rx="2" ry="2" />
<text  x="54.84" y="559.5" ></text>
</g>
<g >
<title>locator::token_metadata::first_token (2 samples, 0.04%)</title><rect x="1084.4" y="597" width="0.4" height="15.0" fill="rgb(246,149,45)" rx="2" ry="2" />
<text  x="1087.40" y="607.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::got_response (20 samples, 0.38%)</title><rect x="711.6" y="741" width="4.5" height="15.0" fill="rgb(242,161,39)" rx="2" ry="2" />
<text  x="714.65" y="751.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::get_promise (1 samples, 0.02%)</title><rect x="983.9" y="613" width="0.3" height="15.0" fill="rgb(244,25,8)" rx="2" ry="2" />
<text  x="986.94" y="623.5" ></text>
</g>
<g >
<title>utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;::lru_entry::touch (1 samples, 0.02%)</title><rect x="741.2" y="725" width="0.2" height="15.0" fill="rgb(206,4,37)" rx="2" ry="2" />
<text  x="744.18" y="735.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::finally_body&lt;seastar::internal::invoke_func_with_gate&lt;database::apply_in_memory (1 samples, 0.02%)</title><rect x="1128.7" y="597" width="0.2" height="15.0" fill="rgb(240,224,34)" rx="2" ry="2" />
<text  x="1131.70" y="607.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.02%)</title><rect x="16.7" y="805" width="0.2" height="15.0" fill="rgb(233,41,17)" rx="2" ry="2" />
<text  x="19.71" y="815.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (14 samples, 0.27%)</title><rect x="78.7" y="885" width="3.1" height="15.0" fill="rgb(245,212,12)" rx="2" ry="2" />
<text  x="81.69" y="895.5" ></text>
</g>
<g >
<title>std::__find_if&lt;gms::inet_address*, __gnu_cxx::__ops::_Iter_equals_val&lt;gms::inet_address const&gt; &gt; (1 samples, 0.02%)</title><rect x="1137.9" y="517" width="0.2" height="15.0" fill="rgb(231,34,48)" rx="2" ry="2" />
<text  x="1140.87" y="527.5" ></text>
</g>
<g >
<title>write_fragmented&lt;managed_bytes_basic_view&lt; (10 samples, 0.19%)</title><rect x="906.5" y="565" width="2.3" height="15.0" fill="rgb(237,189,29)" rx="2" ry="2" />
<text  x="909.52" y="575.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::do_fill_buffer (1 samples, 0.02%)</title><rect x="106.7" y="197" width="0.2" height="15.0" fill="rgb(241,180,42)" rx="2" ry="2" />
<text  x="109.66" y="207.5" ></text>
</g>
<g >
<title>service::storage_proxy_stats::split_stats::get_ep_stat (1 samples, 0.02%)</title><rect x="1046.1" y="613" width="0.3" height="15.0" fill="rgb(224,210,27)" rx="2" ry="2" />
<text  x="1049.14" y="623.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::metadata&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="669.4" y="789" width="0.2" height="15.0" fill="rgb(244,0,6)" rx="2" ry="2" />
<text  x="672.36" y="799.5" ></text>
</g>
<g >
<title>cql3::restrictions::partition_key_restrictions::needs_filtering (8 samples, 0.15%)</title><rect x="655.9" y="757" width="1.8" height="15.0" fill="rgb(249,196,41)" rx="2" ry="2" />
<text  x="658.93" y="767.5" ></text>
</g>
<g >
<title>seastar::internal::do_until_state&lt;seastar::posix_file_impl::list_directory (1 samples, 0.02%)</title><rect x="867.1" y="805" width="0.3" height="15.0" fill="rgb(224,98,40)" rx="2" ry="2" />
<text  x="870.14" y="815.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (2 samples, 0.04%)</title><rect x="734.2" y="693" width="0.5" height="15.0" fill="rgb(215,59,47)" rx="2" ry="2" />
<text  x="737.24" y="703.5" ></text>
</g>
<g >
<title>table::stop (2 samples, 0.04%)</title><rect x="695.3" y="773" width="0.5" height="15.0" fill="rgb(216,222,6)" rx="2" ry="2" />
<text  x="698.31" y="783.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; const, column_definition const*&gt;, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; const, column_definition const*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;, std::hash&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (3 samples, 0.06%)</title><rect x="72.2" y="709" width="0.7" height="15.0" fill="rgb(235,214,48)" rx="2" ry="2" />
<text  x="75.20" y="719.5" ></text>
</g>
<g >
<title>antlr3::Lexer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getCharIndex (1 samples, 0.02%)</title><rect x="28.1" y="549" width="0.2" height="15.0" fill="rgb(244,63,24)" rx="2" ry="2" />
<text  x="31.12" y="559.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::untyped_constant&gt; (1 samples, 0.02%)</title><rect x="59.2" y="581" width="0.2" height="15.0" fill="rgb(233,160,18)" rx="2" ry="2" />
<text  x="62.22" y="591.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::__uniq_ptr_impl (1 samples, 0.02%)</title><rect x="53.0" y="549" width="0.2" height="15.0" fill="rgb(252,215,14)" rx="2" ry="2" />
<text  x="55.96" y="559.5" ></text>
</g>
<g >
<title>seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::expand (8 samples, 0.15%)</title><rect x="518.6" y="533" width="1.7" height="15.0" fill="rgb(221,22,35)" rx="2" ry="2" />
<text  x="521.56" y="543.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (2 samples, 0.04%)</title><rect x="651.7" y="789" width="0.4" height="15.0" fill="rgb(211,71,22)" rx="2" ry="2" />
<text  x="654.68" y="799.5" ></text>
</g>
<g >
<title>operator delete (6 samples, 0.11%)</title><rect x="917.5" y="661" width="1.3" height="15.0" fill="rgb(248,160,10)" rx="2" ry="2" />
<text  x="920.49" y="671.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (1 samples, 0.02%)</title><rect x="676.5" y="789" width="0.2" height="15.0" fill="rgb(248,37,29)" rx="2" ry="2" />
<text  x="679.52" y="799.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (7 samples, 0.13%)</title><rect x="667.1" y="789" width="1.6" height="15.0" fill="rgb(231,159,39)" rx="2" ry="2" />
<text  x="670.12" y="799.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (1 samples, 0.02%)</title><rect x="42.2" y="645" width="0.2" height="15.0" fill="rgb(240,122,7)" rx="2" ry="2" />
<text  x="45.22" y="655.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (1 samples, 0.02%)</title><rect x="823.3" y="581" width="0.2" height="15.0" fill="rgb(206,114,21)" rx="2" ry="2" />
<text  x="826.29" y="591.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_token (4 samples, 0.08%)</title><rect x="895.1" y="709" width="0.9" height="15.0" fill="rgb(253,228,37)" rx="2" ry="2" />
<text  x="898.11" y="719.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.02%)</title><rect x="42.7" y="437" width="0.2" height="15.0" fill="rgb(238,119,49)" rx="2" ry="2" />
<text  x="45.67" y="447.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (1 samples, 0.02%)</title><rect x="595.5" y="645" width="0.2" height="15.0" fill="rgb(238,1,9)" rx="2" ry="2" />
<text  x="598.53" y="655.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.02%)</title><rect x="45.4" y="437" width="0.2" height="15.0" fill="rgb(209,108,15)" rx="2" ry="2" />
<text  x="48.35" y="447.5" ></text>
</g>
<g >
<title>__dynamic_cast (1 samples, 0.02%)</title><rect x="12.7" y="885" width="0.2" height="15.0" fill="rgb(252,84,11)" rx="2" ry="2" />
<text  x="15.68" y="895.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="999.8" y="597" width="0.2" height="15.0" fill="rgb(245,174,8)" rx="2" ry="2" />
<text  x="1002.82" y="607.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::~result_memory_accounter (1 samples, 0.02%)</title><rect x="121.6" y="757" width="0.3" height="15.0" fill="rgb(253,149,15)" rx="2" ry="2" />
<text  x="124.65" y="767.5" ></text>
</g>
<g >
<title>mutation_partition::upper_bound (1 samples, 0.02%)</title><rect x="265.5" y="453" width="0.2" height="15.0" fill="rgb(245,130,22)" rx="2" ry="2" />
<text  x="268.51" y="463.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (31 samples, 0.59%)</title><rect x="803.6" y="485" width="6.9" height="15.0" fill="rgb(254,70,41)" rx="2" ry="2" />
<text  x="806.60" y="495.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, fragmented_temporary_buffer::view, managed_bytes_basic_view&lt; (2 samples, 0.04%)</title><rect x="909.7" y="581" width="0.4" height="15.0" fill="rgb(239,79,7)" rx="2" ry="2" />
<text  x="912.65" y="591.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::~_Deque_base (7 samples, 0.13%)</title><rect x="628.0" y="693" width="1.5" height="15.0" fill="rgb(245,86,51)" rx="2" ry="2" />
<text  x="630.97" y="703.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;5ul, cql3::expr::untyped_constant&gt; (1 samples, 0.02%)</title><rect x="53.4" y="325" width="0.2" height="15.0" fill="rgb(243,57,16)" rx="2" ry="2" />
<text  x="56.41" y="335.5" ></text>
</g>
<g >
<title>std::__find_if&lt;gms::inet_address*, __gnu_cxx::__ops::_Iter_equals_val&lt;gms::inet_address const&gt; &gt; (1 samples, 0.02%)</title><rect x="1087.5" y="629" width="0.3" height="15.0" fill="rgb(244,118,49)" rx="2" ry="2" />
<text  x="1090.53" y="639.5" ></text>
</g>
<g >
<title>cql3::selection::simple_selection::is_aggregate (1 samples, 0.02%)</title><rect x="885.0" y="741" width="0.3" height="15.0" fill="rgb(219,224,54)" rx="2" ry="2" />
<text  x="888.04" y="751.5" ></text>
</g>
<g >
<title>antlr3::DefaultAllocPolicy::StackType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::push (1 samples, 0.02%)</title><rect x="58.6" y="597" width="0.2" height="15.0" fill="rgb(252,94,44)" rx="2" ry="2" />
<text  x="61.55" y="607.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::raw::parsed_statement, std::default_delete&lt;cql3::statements::raw::parsed_statement&gt; &gt;::operator= (2 samples, 0.04%)</title><rect x="65.7" y="693" width="0.5" height="15.0" fill="rgb(253,107,8)" rx="2" ry="2" />
<text  x="68.71" y="703.5" ></text>
</g>
<g >
<title>cql3::raw_value_view::raw_value_view (1 samples, 0.02%)</title><rect x="871.6" y="581" width="0.2" height="15.0" fill="rgb(211,180,5)" rx="2" ry="2" />
<text  x="874.62" y="591.5" ></text>
</g>
<g >
<title>reader_permit::consume_resources (5 samples, 0.09%)</title><rect x="260.8" y="453" width="1.1" height="15.0" fill="rgb(229,62,19)" rx="2" ry="2" />
<text  x="263.81" y="463.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const*, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;*&gt; (5 samples, 0.09%)</title><rect x="788.2" y="597" width="1.1" height="15.0" fill="rgb(245,5,53)" rx="2" ry="2" />
<text  x="791.16" y="607.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;auth::role_or_anonymous&gt;, seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (4 samples, 0.08%)</title><rect x="818.1" y="597" width="0.9" height="15.0" fill="rgb(252,138,3)" rx="2" ry="2" />
<text  x="821.15" y="607.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::query_options, std::default_delete&lt;cql3::query_options&gt; &gt;::~unique_ptr (21 samples, 0.40%)</title><rect x="678.1" y="789" width="4.7" height="15.0" fill="rgb(211,145,50)" rx="2" ry="2" />
<text  x="681.08" y="799.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.02%)</title><rect x="58.8" y="613" width="0.2" height="15.0" fill="rgb(241,219,22)" rx="2" ry="2" />
<text  x="61.78" y="623.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (6 samples, 0.11%)</title><rect x="981.9" y="565" width="1.4" height="15.0" fill="rgb(208,2,35)" rx="2" ry="2" />
<text  x="984.92" y="575.5" ></text>
</g>
<g >
<title>update_usable.constprop.0 (1 samples, 0.02%)</title><rect x="1189.8" y="933" width="0.2" height="15.0" fill="rgb(223,86,31)" rx="2" ry="2" />
<text  x="1192.78" y="943.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.02%)</title><rect x="852.8" y="629" width="0.2" height="15.0" fill="rgb(209,68,54)" rx="2" ry="2" />
<text  x="855.83" y="639.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (2 samples, 0.04%)</title><rect x="692.4" y="789" width="0.5" height="15.0" fill="rgb(253,151,1)" rx="2" ry="2" />
<text  x="695.40" y="799.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="45.4" y="549" width="0.2" height="15.0" fill="rgb(227,120,39)" rx="2" ry="2" />
<text  x="48.35" y="559.5" ></text>
</g>
<g >
<title>cql3::query_options::query_options (22 samples, 0.42%)</title><rect x="855.5" y="741" width="4.9" height="15.0" fill="rgb(239,226,49)" rx="2" ry="2" />
<text  x="858.51" y="751.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (3 samples, 0.06%)</title><rect x="1114.6" y="677" width="0.7" height="15.0" fill="rgb(244,49,1)" rx="2" ry="2" />
<text  x="1117.60" y="687.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::allocate (1 samples, 0.02%)</title><rect x="79.1" y="645" width="0.3" height="15.0" fill="rgb(222,189,9)" rx="2" ry="2" />
<text  x="82.14" y="655.5" ></text>
</g>
<g >
<title>seastar::uninitialized_string&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; (1 samples, 0.02%)</title><rect x="77.8" y="789" width="0.2" height="15.0" fill="rgb(226,83,18)" rx="2" ry="2" />
<text  x="80.79" y="799.5" ></text>
</g>
<g >
<title>std::default_delete&lt;cql3::expr::expression::impl&gt;::operator (1 samples, 0.02%)</title><rect x="70.9" y="565" width="0.2" height="15.0" fill="rgb(251,224,3)" rx="2" ry="2" />
<text  x="73.86" y="575.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (1 samples, 0.02%)</title><rect x="179.8" y="613" width="0.2" height="15.0" fill="rgb(226,130,14)" rx="2" ry="2" />
<text  x="182.82" y="623.5" ></text>
</g>
<g >
<title>_ZSt5applyIZN7seastar8internal12do_with_implIN4auth17role_or_anonymousEZNS3_15get_permissionsERKNS3_7serviceERKNS3_18authenticated_userERKNS3_8resourceEE3$_9JEEEDaOT_OT0_DpOT1_EUlDpOT_E_St5tupleIJOS4_EEEDcSG_SI_ (1 samples, 0.02%)</title><rect x="791.3" y="613" width="0.2" height="15.0" fill="rgb(209,147,22)" rx="2" ry="2" />
<text  x="794.30" y="623.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::get0 (2 samples, 0.04%)</title><rect x="435.1" y="581" width="0.5" height="15.0" fill="rgb(254,156,9)" rx="2" ry="2" />
<text  x="438.10" y="591.5" ></text>
</g>
<g >
<title>allocation_strategy::destroy&lt;rows_entry&gt; (1 samples, 0.02%)</title><rect x="1138.8" y="549" width="0.2" height="15.0" fill="rgb(208,76,38)" rx="2" ry="2" />
<text  x="1141.76" y="559.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (3 samples, 0.06%)</title><rect x="51.8" y="533" width="0.7" height="15.0" fill="rgb(232,80,35)" rx="2" ry="2" />
<text  x="54.84" y="543.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="912.8" y="629" width="0.2" height="15.0" fill="rgb(215,74,54)" rx="2" ry="2" />
<text  x="915.79" y="639.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;std::optional&lt;auth::resource&gt; &gt;, seastar::future&lt;bool&gt; &gt;, std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;std::optional&lt;auth::resource&gt; &gt;, seastar::future&lt;bool&gt; &gt; &gt; &gt;::~unique_ptr (7 samples, 0.13%)</title><rect x="819.3" y="629" width="1.5" height="15.0" fill="rgb(218,144,48)" rx="2" ry="2" />
<text  x="822.26" y="639.5" ></text>
</g>
<g >
<title>service::abstract_write_response_handler::max_backlog (1 samples, 0.02%)</title><rect x="719.7" y="725" width="0.2" height="15.0" fill="rgb(240,57,21)" rx="2" ry="2" />
<text  x="722.70" y="735.5" ></text>
</g>
<g >
<title>std::_Optional_base_impl&lt;mutation_querier, std::_Optional_base&lt;mutation_querier, false, false&gt; &gt;::_M_construct&lt;mutation_querier&gt; (1 samples, 0.02%)</title><rect x="355.0" y="485" width="0.2" height="15.0" fill="rgb(250,220,18)" rx="2" ry="2" />
<text  x="358.01" y="495.5" ></text>
</g>
<g >
<title>__dynamic_cast (5 samples, 0.09%)</title><rect x="889.1" y="725" width="1.1" height="15.0" fill="rgb(217,13,28)" rx="2" ry="2" />
<text  x="892.07" y="735.5" ></text>
</g>
<g >
<title>compound_type&lt; (1 samples, 0.02%)</title><rect x="872.1" y="613" width="0.2" height="15.0" fill="rgb(220,109,46)" rx="2" ry="2" />
<text  x="875.07" y="623.5" ></text>
</g>
<g >
<title>list_reader_selector::list_reader_selector (1 samples, 0.02%)</title><rect x="456.6" y="629" width="0.2" height="15.0" fill="rgb(250,157,27)" rx="2" ry="2" />
<text  x="459.58" y="639.5" ></text>
</g>
<g >
<title>bytes_view_hasher::update (3 samples, 0.06%)</title><rect x="739.4" y="597" width="0.7" height="15.0" fill="rgb(234,143,13)" rx="2" ry="2" />
<text  x="742.39" y="607.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (2 samples, 0.04%)</title><rect x="690.6" y="741" width="0.5" height="15.0" fill="rgb(228,56,48)" rx="2" ry="2" />
<text  x="693.61" y="751.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (7 samples, 0.13%)</title><rect x="1015.9" y="533" width="1.6" height="15.0" fill="rgb(243,161,32)" rx="2" ry="2" />
<text  x="1018.93" y="543.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (2 samples, 0.04%)</title><rect x="131.5" y="693" width="0.4" height="15.0" fill="rgb(239,170,47)" rx="2" ry="2" />
<text  x="134.49" y="703.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::deallocate (1 samples, 0.02%)</title><rect x="525.9" y="533" width="0.3" height="15.0" fill="rgb(205,169,16)" rx="2" ry="2" />
<text  x="528.94" y="543.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::contains&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="833.6" y="661" width="0.2" height="15.0" fill="rgb(249,32,16)" rx="2" ry="2" />
<text  x="836.58" y="671.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.02%)</title><rect x="40.7" y="533" width="0.2" height="15.0" fill="rgb(232,90,3)" rx="2" ry="2" />
<text  x="43.65" y="543.5" ></text>
</g>
<g >
<title>tolower (1 samples, 0.02%)</title><rect x="41.1" y="613" width="0.2" height="15.0" fill="rgb(213,101,2)" rx="2" ry="2" />
<text  x="44.10" y="623.5" ></text>
</g>
<g >
<title>mutation_source::mutation_source (10 samples, 0.19%)</title><rect x="631.5" y="725" width="2.3" height="15.0" fill="rgb(216,68,19)" rx="2" ry="2" />
<text  x="634.55" y="735.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;cql3::metadata, false&gt;::make&lt;cql3::metadata&amp;&gt; (5 samples, 0.09%)</title><rect x="660.2" y="773" width="1.1" height="15.0" fill="rgb(230,40,3)" rx="2" ry="2" />
<text  x="663.19" y="783.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (4 samples, 0.08%)</title><rect x="39.1" y="629" width="0.9" height="15.0" fill="rgb(224,153,23)" rx="2" ry="2" />
<text  x="42.09" y="639.5" ></text>
</g>
<g >
<title>ser::writer_of_column&lt;bytes_ostream&gt;::write_id (1 samples, 0.02%)</title><rect x="1136.1" y="405" width="0.2" height="15.0" fill="rgb(253,213,30)" rx="2" ry="2" />
<text  x="1139.08" y="415.5" ></text>
</g>
<g >
<title>cql3::result_generator::query_result_visitor&lt;cql3::untyped_result_set::visitor&gt;::accept_new_row (1 samples, 0.02%)</title><rect x="649.7" y="677" width="0.2" height="15.0" fill="rgb(227,221,4)" rx="2" ry="2" />
<text  x="652.67" y="687.5" ></text>
</g>
<g >
<title>std::hash&lt;auth::resource&gt;::hash_data (8 samples, 0.15%)</title><rect x="808.7" y="437" width="1.8" height="15.0" fill="rgb(247,163,9)" rx="2" ry="2" />
<text  x="811.75" y="447.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (3 samples, 0.06%)</title><rect x="45.8" y="533" width="0.7" height="15.0" fill="rgb(219,58,6)" rx="2" ry="2" />
<text  x="48.80" y="543.5" ></text>
</g>
<g >
<title>ser::writer_of_qr_partition&lt;bytes_ostream&gt;::skip_key (1 samples, 0.02%)</title><rect x="354.1" y="469" width="0.2" height="15.0" fill="rgb(248,58,34)" rx="2" ry="2" />
<text  x="357.11" y="479.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::statements::raw::parsed_statement, std::default_delete&lt;cql3::statements::raw::parsed_statement&gt;, true, true&gt;::operator= (2 samples, 0.04%)</title><rect x="65.7" y="677" width="0.5" height="15.0" fill="rgb(206,7,37)" rx="2" ry="2" />
<text  x="68.71" y="687.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (1 samples, 0.02%)</title><rect x="687.9" y="757" width="0.3" height="15.0" fill="rgb(250,1,45)" rx="2" ry="2" />
<text  x="690.93" y="767.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;std::tuple&lt;std::optional&lt;clustering_key_prefix&gt; &gt; &gt;, query::consume_page&lt; (6 samples, 0.11%)</title><rect x="693.1" y="805" width="1.3" height="15.0" fill="rgb(228,215,40)" rx="2" ry="2" />
<text  x="696.08" y="815.5" ></text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;void&gt;, database*, seastar::lw_shared_ptr&lt;schema const&gt;, frozen_mutation const&amp;, tracing::trace_state_ptr, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, seastar::bool_class&lt;db::force_sync_tag&gt; &gt;::make_stage_for_group (35 samples, 0.66%)</title><rect x="1122.7" y="709" width="7.8" height="15.0" fill="rgb(216,147,41)" rx="2" ry="2" />
<text  x="1125.65" y="719.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.02%)</title><rect x="20.1" y="661" width="0.2" height="15.0" fill="rgb(215,171,24)" rx="2" ry="2" />
<text  x="23.07" y="671.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_4findERKNS5_10expressionENS5_6oper_tEEUlRS7_E_EES8_SE_T_EUlSG_E_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_8constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_11conjunctionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_12column_valueEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_5tokenEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13function_callEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4castEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_15field_selectionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4nullEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13bind_variableEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_16untyped_constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_17tuple_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_22collection_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSO_S6_SS_SW_S10_S14_S18_S1C_S1G_S1K_S1O_S1S_SK_S1W_S20_S24_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES29_S2C_ (1 samples, 0.02%)</title><rect x="658.2" y="741" width="0.2" height="15.0" fill="rgb(212,126,51)" rx="2" ry="2" />
<text  x="661.17" y="751.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::then_impl&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (57 samples, 1.08%)</title><rect x="312.5" y="661" width="12.7" height="15.0" fill="rgb(233,20,43)" rx="2" ry="2" />
<text  x="315.50" y="671.5" ></text>
</g>
<g >
<title>operator delete (5 samples, 0.09%)</title><rect x="913.2" y="613" width="1.2" height="15.0" fill="rgb(211,2,6)" rx="2" ry="2" />
<text  x="916.23" y="623.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::add_data (26 samples, 0.49%)</title><rect x="710.5" y="757" width="5.8" height="15.0" fill="rgb(253,222,7)" rx="2" ry="2" />
<text  x="713.53" y="767.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (1 samples, 0.02%)</title><rect x="695.5" y="501" width="0.3" height="15.0" fill="rgb(254,100,40)" rx="2" ry="2" />
<text  x="698.54" y="511.5" ></text>
</g>
<g >
<title>seastar::do_until&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (2 samples, 0.04%)</title><rect x="869.2" y="725" width="0.4" height="15.0" fill="rgb(209,53,21)" rx="2" ry="2" />
<text  x="872.16" y="735.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;enum_set&lt;super_enum&lt;auth::permission,  (2 samples, 0.04%)</title><rect x="795.8" y="565" width="0.4" height="15.0" fill="rgb(213,215,43)" rx="2" ry="2" />
<text  x="798.77" y="575.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_M_reset (1 samples, 0.02%)</title><rect x="761.5" y="709" width="0.3" height="15.0" fill="rgb(222,198,3)" rx="2" ry="2" />
<text  x="764.54" y="719.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::clear (5 samples, 0.09%)</title><rect x="195.7" y="565" width="1.1" height="15.0" fill="rgb(219,200,38)" rx="2" ry="2" />
<text  x="198.70" y="575.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="95.0" y="757" width="0.2" height="15.0" fill="rgb(234,69,16)" rx="2" ry="2" />
<text  x="98.02" y="767.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (3 samples, 0.06%)</title><rect x="39.3" y="581" width="0.7" height="15.0" fill="rgb(206,221,15)" rx="2" ry="2" />
<text  x="42.31" y="591.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.02%)</title><rect x="37.5" y="597" width="0.2" height="15.0" fill="rgb(222,144,7)" rx="2" ry="2" />
<text  x="40.52" y="607.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::~unique_ptr (6 samples, 0.11%)</title><rect x="913.0" y="629" width="1.4" height="15.0" fill="rgb(218,176,53)" rx="2" ry="2" />
<text  x="916.01" y="639.5" ></text>
</g>
<g >
<title>double_decker&lt;long, cache_entry, dht::raw_token_less_comparator, dht::ring_position_comparator, 16,  (1 samples, 0.02%)</title><rect x="542.3" y="629" width="0.2" height="15.0" fill="rgb(230,220,38)" rx="2" ry="2" />
<text  x="545.28" y="639.5" ></text>
</g>
<g >
<title>rows_entry::tri_compare::operator (1 samples, 0.02%)</title><rect x="105.3" y="677" width="0.2" height="15.0" fill="rgb(208,51,44)" rx="2" ry="2" />
<text  x="108.31" y="687.5" ></text>
</g>
<g >
<title>std::__optional_hash_call_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, true&gt;::operator (5 samples, 0.09%)</title><rect x="755.7" y="613" width="1.1" height="15.0" fill="rgb(215,100,9)" rx="2" ry="2" />
<text  x="758.72" y="623.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.06%)</title><rect x="519.7" y="485" width="0.6" height="15.0" fill="rgb(205,128,33)" rx="2" ry="2" />
<text  x="522.68" y="495.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;interval_bound&lt;dht::ring_position&gt;, false, false&gt;::_Optional_base (1 samples, 0.02%)</title><rect x="944.1" y="677" width="0.2" height="15.0" fill="rgb(244,119,44)" rx="2" ry="2" />
<text  x="947.11" y="687.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::modification_statement (1 samples, 0.02%)</title><rect x="73.3" y="677" width="0.2" height="15.0" fill="rgb(245,132,6)" rx="2" ry="2" />
<text  x="76.32" y="687.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;bytes_ostream::chunk, std::default_delete&lt;bytes_ostream::chunk&gt; &gt;::~unique_ptr (4 samples, 0.08%)</title><rect x="139.8" y="757" width="0.9" height="15.0" fill="rgb(225,115,11)" rx="2" ry="2" />
<text  x="142.77" y="767.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;void&gt;::satisfy_with_result_of&lt;seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::then_wrapped_nrvo&lt;void, service::abstract_read_executor::make_data_requests (48 samples, 0.91%)</title><rect x="707.4" y="789" width="10.7" height="15.0" fill="rgb(222,174,46)" rx="2" ry="2" />
<text  x="710.39" y="799.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector (3 samples, 0.06%)</title><rect x="1088.4" y="645" width="0.7" height="15.0" fill="rgb(216,57,22)" rx="2" ry="2" />
<text  x="1091.42" y="655.5" ></text>
</g>
<g >
<title>partition_snapshot::partition_tombstone (4 samples, 0.08%)</title><rect x="527.1" y="533" width="0.9" height="15.0" fill="rgb(209,12,23)" rx="2" ry="2" />
<text  x="530.06" y="543.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIN7seastar10shared_ptrIN4cql34termEEEEER18overloaded_functorIJZNS6_4expr12prepare_termERKNSB_10expressionER8databaseRKNS4_13basic_sstringIcjLj15ELb1EEENS4_13lw_shared_ptrINS6_20column_specificationEEEE3$_0ZNSB_12prepare_termESE_SG_SK_SN_E3$_1ZNSB_12prepare_termESE_SG_SK_SN_E3$_2ZNSB_12prepare_termESE_SG_SK_SN_E3$_3ZNSB_12prepare_termESE_SG_SK_SN_E3$_4ZNSB_12prepare_termESE_SG_SK_SN_E3$_5ZNSB_12prepare_termESE_SG_SK_SN_E3$_6ZNSB_12prepare_termESE_SG_SK_SN_E3$_7ZNSB_12prepare_termESE_SG_SK_SN_E3$_8ZNSB_12prepare_termESE_SG_SK_SN_E3$_9ZNSB_12prepare_termESE_SG_SK_SN_E4$_10ZNSB_12prepare_termESE_SG_SK_SN_E4$_11ZNSB_12prepare_termESE_SG_SK_SN_E4$_12ZNSB_12prepare_termESE_SG_SK_SN_E4$_13ZNSB_12prepare_termESE_SG_SK_SN_E4$_14ZNSB_12prepare_termESE_SG_SK_SN_E4$_15EERSt7variantIJNSB_11conjunctionENSB_15binary_operatorENSB_12column_valueENSB_5tokenENSB_21unresolved_identifierENSB_25column_mutation_attributeENSB_13function_callENSB_4castENSB_15field_selectionENSB_4nullENSB_13bind_variableENSB_16untyped_constantENSB_8constantENSB_17tuple_constructorENSB_22collection_constructorENSB_20usertype_constructorEEEEJEEESt16integer_sequenceImJLm11EEEE14__visit_invokeES15_S1O_ (5 samples, 0.09%)</title><rect x="67.3" y="693" width="1.1" height="15.0" fill="rgb(235,126,28)" rx="2" ry="2" />
<text  x="70.28" y="703.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (3 samples, 0.06%)</title><rect x="963.4" y="645" width="0.6" height="15.0" fill="rgb(228,181,4)" rx="2" ry="2" />
<text  x="966.35" y="655.5" ></text>
</g>
<g >
<title>mutation_partition::clear_gently (1 samples, 0.02%)</title><rect x="78.5" y="757" width="0.2" height="15.0" fill="rgb(226,98,26)" rx="2" ry="2" />
<text  x="81.46" y="767.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::modification_statement (1 samples, 0.02%)</title><rect x="72.9" y="693" width="0.2" height="15.0" fill="rgb(249,148,31)" rx="2" ry="2" />
<text  x="75.87" y="703.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::query_options, std::default_delete&lt;cql3::query_options&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="861.6" y="757" width="0.2" height="15.0" fill="rgb(216,199,5)" rx="2" ry="2" />
<text  x="864.55" y="767.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (1 samples, 0.02%)</title><rect x="688.2" y="757" width="0.2" height="15.0" fill="rgb(225,31,47)" rx="2" ry="2" />
<text  x="691.15" y="767.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;partition_key, false, false&gt;::_Optional_base (1 samples, 0.02%)</title><rect x="1062.0" y="597" width="0.2" height="15.0" fill="rgb(246,193,33)" rx="2" ry="2" />
<text  x="1065.02" y="607.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (2 samples, 0.04%)</title><rect x="40.4" y="645" width="0.5" height="15.0" fill="rgb(249,147,44)" rx="2" ry="2" />
<text  x="43.43" y="655.5" ></text>
</g>
<g >
<title>std::__lower_bound&lt;__gnu_cxx::__normal_iterator&lt;dht::token const*, std::vector&lt;dht::token, std::allocator&lt;dht::token&gt; &gt; &gt;, dht::token, __gnu_cxx::__ops::_Iter_less_val&gt; (20 samples, 0.38%)</title><rect x="1073.4" y="549" width="4.5" height="15.0" fill="rgb(209,28,50)" rx="2" ry="2" />
<text  x="1076.43" y="559.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.02%)</title><rect x="40.4" y="501" width="0.3" height="15.0" fill="rgb(208,229,34)" rx="2" ry="2" />
<text  x="43.43" y="511.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::get_mutations (15 samples, 0.28%)</title><rect x="873.4" y="693" width="3.4" height="15.0" fill="rgb(211,123,33)" rx="2" ry="2" />
<text  x="876.41" y="703.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (1 samples, 0.02%)</title><rect x="847.0" y="725" width="0.2" height="15.0" fill="rgb(223,180,40)" rx="2" ry="2" />
<text  x="850.01" y="735.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;mutation_fragment*&gt;::take_value (1 samples, 0.02%)</title><rect x="444.9" y="709" width="0.3" height="15.0" fill="rgb(227,168,44)" rx="2" ry="2" />
<text  x="447.95" y="719.5" ></text>
</g>
<g >
<title>seastar::semaphore_units&lt;seastar::semaphore_default_exception_factory, std::chrono::_V2::steady_clock&gt;::return_all (1 samples, 0.02%)</title><rect x="95.5" y="741" width="0.2" height="15.0" fill="rgb(225,101,20)" rx="2" ry="2" />
<text  x="98.47" y="751.5" ></text>
</g>
<g >
<title>seastar::future&lt;mutation_fragment*&gt;::then_impl&lt;query::consume_page&lt; (520 samples, 9.86%)</title><rect x="328.6" y="709" width="116.3" height="15.0" fill="rgb(238,21,33)" rx="2" ry="2" />
<text  x="331.60" y="719.5" >seastar::futur..</text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::schedule&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::make_data_requests (1 samples, 0.02%)</title><rect x="995.8" y="597" width="0.2" height="15.0" fill="rgb(252,210,27)" rx="2" ry="2" />
<text  x="998.79" y="607.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (1 samples, 0.02%)</title><rect x="59.4" y="533" width="0.3" height="15.0" fill="rgb(217,188,20)" rx="2" ry="2" />
<text  x="62.45" y="543.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::free (1 samples, 0.02%)</title><rect x="693.7" y="581" width="0.3" height="15.0" fill="rgb(228,204,53)" rx="2" ry="2" />
<text  x="696.75" y="591.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;flat_mutation_reader::peek (7 samples, 0.13%)</title><rect x="325.9" y="693" width="1.6" height="15.0" fill="rgb(243,62,45)" rx="2" ry="2" />
<text  x="328.92" y="703.5" ></text>
</g>
<g >
<title>row::external_memory_usage (21 samples, 0.40%)</title><rect x="254.8" y="453" width="4.7" height="15.0" fill="rgb(210,132,45)" rx="2" ry="2" />
<text  x="257.77" y="463.5" ></text>
</g>
<g >
<title>partition_version_ref::operator (5 samples, 0.09%)</title><rect x="528.0" y="533" width="1.1" height="15.0" fill="rgb(208,81,37)" rx="2" ry="2" />
<text  x="530.96" y="543.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::_M_create_storage (1 samples, 0.02%)</title><rect x="155.9" y="725" width="0.2" height="15.0" fill="rgb(248,103,0)" rx="2" ry="2" />
<text  x="158.88" y="735.5" ></text>
</g>
<g >
<title>partition_key::from_range&lt;std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt; const&amp;&gt; (14 samples, 0.27%)</title><rect x="934.0" y="693" width="3.2" height="15.0" fill="rgb(244,183,30)" rx="2" ry="2" />
<text  x="937.04" y="703.5" ></text>
</g>
<g >
<title>partition_snapshot_row_cursor::memory_usage (1 samples, 0.02%)</title><rect x="16.3" y="853" width="0.2" height="15.0" fill="rgb(244,192,48)" rx="2" ry="2" />
<text  x="19.26" y="863.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_restrictions::has_supporting_index (1 samples, 0.02%)</title><rect x="70.2" y="693" width="0.2" height="15.0" fill="rgb(254,199,5)" rx="2" ry="2" />
<text  x="73.19" y="703.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;11ul, cql3::expr::untyped_constant&gt; (1 samples, 0.02%)</title><rect x="53.4" y="469" width="0.2" height="15.0" fill="rgb(239,27,41)" rx="2" ry="2" />
<text  x="56.41" y="479.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.02%)</title><rect x="20.7" y="661" width="0.3" height="15.0" fill="rgb(212,159,26)" rx="2" ry="2" />
<text  x="23.74" y="671.5" ></text>
</g>
<g >
<title>write_row&lt;ser::writer_of_deletable_row&lt;bytes_ostream&gt; &gt; (1 samples, 0.02%)</title><rect x="105.8" y="533" width="0.2" height="15.0" fill="rgb(209,114,44)" rx="2" ry="2" />
<text  x="108.76" y="543.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::digest_read_result&gt;::future (1 samples, 0.02%)</title><rect x="976.6" y="661" width="0.2" height="15.0" fill="rgb(213,17,12)" rx="2" ry="2" />
<text  x="979.55" y="671.5" ></text>
</g>
<g >
<title>std::variant&lt;fragmented_temporary_buffer::view, managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="915.0" y="613" width="0.2" height="15.0" fill="rgb(233,34,45)" rx="2" ry="2" />
<text  x="918.02" y="623.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_allocate_map (1 samples, 0.02%)</title><rect x="24.3" y="517" width="0.2" height="15.0" fill="rgb(231,6,49)" rx="2" ry="2" />
<text  x="27.32" y="527.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="107.1" y="661" width="0.2" height="15.0" fill="rgb(226,120,33)" rx="2" ry="2" />
<text  x="110.10" y="671.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::clear (1 samples, 0.02%)</title><rect x="957.8" y="693" width="0.2" height="15.0" fill="rgb(210,30,48)" rx="2" ry="2" />
<text  x="960.76" y="703.5" ></text>
</g>
<g >
<title>make_combined_reader (103 samples, 1.95%)</title><rect x="455.7" y="645" width="23.0" height="15.0" fill="rgb(240,184,12)" rx="2" ry="2" />
<text  x="458.69" y="655.5" >m..</text>
</g>
<g >
<title>std::_Optional_base&lt;interval_bound&lt;dht::ring_position&gt;, false, false&gt;::_Optional_base (4 samples, 0.08%)</title><rect x="622.2" y="741" width="0.8" height="15.0" fill="rgb(237,43,49)" rx="2" ry="2" />
<text  x="625.15" y="751.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (2 samples, 0.04%)</title><rect x="665.8" y="773" width="0.4" height="15.0" fill="rgb(228,8,33)" rx="2" ry="2" />
<text  x="668.78" y="783.5" ></text>
</g>
<g >
<title>std::default_delete&lt;compact_for_query&lt; (4 samples, 0.08%)</title><rect x="438.0" y="565" width="0.9" height="15.0" fill="rgb(228,181,54)" rx="2" ry="2" />
<text  x="441.01" y="575.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.02%)</title><rect x="20.5" y="597" width="0.2" height="15.0" fill="rgb(248,116,46)" rx="2" ry="2" />
<text  x="23.52" y="607.5" ></text>
</g>
<g >
<title>seastar::schedule (1 samples, 0.02%)</title><rect x="765.6" y="661" width="0.2" height="15.0" fill="rgb(207,223,47)" rx="2" ry="2" />
<text  x="768.57" y="671.5" ></text>
</g>
<g >
<title>mutation_partition::clustered_row (1 samples, 0.02%)</title><rect x="105.3" y="757" width="0.2" height="15.0" fill="rgb(229,219,48)" rx="2" ry="2" />
<text  x="108.31" y="767.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.02%)</title><rect x="16.5" y="789" width="0.2" height="15.0" fill="rgb(229,202,41)" rx="2" ry="2" />
<text  x="19.49" y="799.5" ></text>
</g>
<g >
<title>mutation_partition::upper_bound (1 samples, 0.02%)</title><rect x="282.3" y="501" width="0.2" height="15.0" fill="rgb(224,132,35)" rx="2" ry="2" />
<text  x="285.29" y="511.5" ></text>
</g>
<g >
<title>std::function&lt;seastar::future&lt;void&gt;  (2 samples, 0.04%)</title><rect x="695.3" y="645" width="0.5" height="15.0" fill="rgb(206,167,43)" rx="2" ry="2" />
<text  x="698.31" y="655.5" ></text>
</g>
<g >
<title>std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;auth::role_or_anonymous&gt;, seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (2 samples, 0.04%)</title><rect x="818.6" y="581" width="0.4" height="15.0" fill="rgb(230,91,51)" rx="2" ry="2" />
<text  x="821.59" y="591.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;seastar::future&lt;void&gt; &gt;  (141 samples, 2.67%)</title><rect x="570.0" y="725" width="31.6" height="15.0" fill="rgb(244,104,9)" rx="2" ry="2" />
<text  x="573.02" y="735.5" >st..</text>
</g>
<g >
<title>mutation_fragment::mutation_fragment (1 samples, 0.02%)</title><rect x="518.3" y="533" width="0.3" height="15.0" fill="rgb(242,165,53)" rx="2" ry="2" />
<text  x="521.34" y="543.5" ></text>
</g>
<g >
<title>mutation_partition_serializer::write_serialized&lt;ser::writer_of_mutation_partition&lt;bytes_ostream&gt; &gt; (1 samples, 0.02%)</title><rect x="107.6" y="661" width="0.2" height="15.0" fill="rgb(233,197,10)" rx="2" ry="2" />
<text  x="110.55" y="671.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;3ul, cql3::expr::untyped_constant&gt; (1 samples, 0.02%)</title><rect x="53.4" y="293" width="0.2" height="15.0" fill="rgb(242,211,21)" rx="2" ry="2" />
<text  x="56.41" y="303.5" ></text>
</g>
<g >
<title>std::construct_at&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (5 samples, 0.09%)</title><rect x="22.5" y="533" width="1.1" height="15.0" fill="rgb(242,12,15)" rx="2" ry="2" />
<text  x="25.53" y="543.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::make_ready&lt; (1 samples, 0.02%)</title><rect x="964.7" y="533" width="0.2" height="15.0" fill="rgb(232,15,4)" rx="2" ry="2" />
<text  x="967.69" y="543.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (4 samples, 0.08%)</title><rect x="754.8" y="629" width="0.9" height="15.0" fill="rgb(242,181,53)" rx="2" ry="2" />
<text  x="757.83" y="639.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::_S_construct&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; const&amp;&gt; (1 samples, 0.02%)</title><rect x="38.0" y="597" width="0.2" height="15.0" fill="rgb(205,183,46)" rx="2" ry="2" />
<text  x="40.97" y="607.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::clear (1 samples, 0.02%)</title><rect x="421.2" y="533" width="0.3" height="15.0" fill="rgb(246,158,41)" rx="2" ry="2" />
<text  x="424.23" y="543.5" ></text>
</g>
<g >
<title>clustering_row::external_memory_usage (24 samples, 0.46%)</title><rect x="254.1" y="469" width="5.4" height="15.0" fill="rgb(247,128,45)" rx="2" ry="2" />
<text  x="257.10" y="479.5" ></text>
</g>
<g >
<title>__atomic_store (1 samples, 0.02%)</title><rect x="82.3" y="933" width="0.2" height="15.0" fill="rgb(223,24,26)" rx="2" ry="2" />
<text  x="85.27" y="943.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_slice_or_needs_filtering (1 samples, 0.02%)</title><rect x="656.8" y="709" width="0.3" height="15.0" fill="rgb(232,84,11)" rx="2" ry="2" />
<text  x="659.83" y="719.5" ></text>
</g>
<g >
<title>utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (3 samples, 0.06%)</title><rect x="76.5" y="581" width="0.6" height="15.0" fill="rgb(235,205,5)" rx="2" ry="2" />
<text  x="79.45" y="591.5" ></text>
</g>
<g >
<title>cql3::expr::expression::operator= (1 samples, 0.02%)</title><rect x="53.6" y="581" width="0.3" height="15.0" fill="rgb(216,24,41)" rx="2" ry="2" />
<text  x="56.63" y="591.5" ></text>
</g>
<g >
<title>reader_permit::consume_resources (4 samples, 0.08%)</title><rect x="213.8" y="501" width="0.9" height="15.0" fill="rgb(212,172,24)" rx="2" ry="2" />
<text  x="216.83" y="511.5" ></text>
</g>
<g >
<title>make_flat_mutation_reader&lt;empty_flat_reader, seastar::lw_shared_ptr&lt;schema const&gt;, reader_permit&gt; (13 samples, 0.25%)</title><rect x="549.0" y="597" width="2.9" height="15.0" fill="rgb(237,98,50)" rx="2" ry="2" />
<text  x="551.99" y="607.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit_slot&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::memory_usage&lt;row::external_memory_usage (7 samples, 0.13%)</title><rect x="256.6" y="421" width="1.5" height="15.0" fill="rgb(219,119,5)" rx="2" ry="2" />
<text  x="259.56" y="431.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (2 samples, 0.04%)</title><rect x="1106.3" y="693" width="0.5" height="15.0" fill="rgb(254,121,54)" rx="2" ry="2" />
<text  x="1109.32" y="703.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="824.2" y="661" width="0.2" height="15.0" fill="rgb(214,105,46)" rx="2" ry="2" />
<text  x="827.19" y="671.5" ></text>
</g>
<g >
<title>operator new (6 samples, 0.11%)</title><rect x="1103.2" y="661" width="1.3" height="15.0" fill="rgb(220,92,37)" rx="2" ry="2" />
<text  x="1106.19" y="671.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (1 samples, 0.02%)</title><rect x="104.6" y="789" width="0.3" height="15.0" fill="rgb(226,226,28)" rx="2" ry="2" />
<text  x="107.64" y="799.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, unsigned int&gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, unsigned int&gt; &gt;, std::less&lt;unsigned int&gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;std::pair&lt;unsigned int const, unsigned int&gt; &gt; &gt;::empty (1 samples, 0.02%)</title><rect x="36.0" y="613" width="0.2" height="15.0" fill="rgb(245,132,31)" rx="2" ry="2" />
<text  x="38.95" y="623.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_singular (56 samples, 1.06%)</title><rect x="1149.5" y="789" width="12.5" height="15.0" fill="rgb(245,115,11)" rx="2" ry="2" />
<text  x="1152.50" y="799.5" ></text>
</g>
<g >
<title>seastar::repeat&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (687 samples, 13.03%)</title><rect x="172.2" y="677" width="153.7" height="15.0" fill="rgb(236,219,37)" rx="2" ry="2" />
<text  x="175.21" y="687.5" >seastar::repeat&lt;mer..</text>
</g>
<g >
<title>std::type_info::operator== (1 samples, 0.02%)</title><rect x="684.8" y="757" width="0.2" height="15.0" fill="rgb(224,178,32)" rx="2" ry="2" />
<text  x="687.80" y="767.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;query::result&gt;::operator= (1 samples, 0.02%)</title><rect x="711.4" y="725" width="0.2" height="15.0" fill="rgb(247,58,39)" rx="2" ry="2" />
<text  x="714.42" y="735.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;std::pair&lt;seastar::shared_ptr&lt;service::abstract_read_executor&gt;, nonwrapping_interval&lt;dht::token&gt; &gt;, 1ul&gt;::clear (17 samples, 0.32%)</title><rect x="1163.8" y="773" width="3.8" height="15.0" fill="rgb(220,82,17)" rx="2" ry="2" />
<text  x="1166.82" y="783.5" ></text>
</g>
<g >
<title>database::find_column_family (4 samples, 0.08%)</title><rect x="1049.3" y="645" width="0.9" height="15.0" fill="rgb(210,174,17)" rx="2" ry="2" />
<text  x="1052.27" y="655.5" ></text>
</g>
<g >
<title>seastar::reactor::do_run (4,857 samples, 92.09%)</title><rect x="83.4" y="837" width="1086.7" height="15.0" fill="rgb(212,219,7)" rx="2" ry="2" />
<text  x="86.39" y="847.5" >seastar::reactor::do_run</text>
</g>
<g >
<title>std::__deque_buf_size (2 samples, 0.04%)</title><rect x="52.1" y="389" width="0.4" height="15.0" fill="rgb(243,24,31)" rx="2" ry="2" />
<text  x="55.06" y="399.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reclaiming_disabled&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (217 samples, 4.11%)</title><rect x="220.5" y="517" width="48.6" height="15.0" fill="rgb(214,29,29)" rx="2" ry="2" />
<text  x="223.54" y="527.5" >loga..</text>
</g>
<g >
<title>cql3_parser::CqlParser::relationType (1 samples, 0.02%)</title><rect x="60.1" y="645" width="0.2" height="15.0" fill="rgb(218,168,39)" rx="2" ry="2" />
<text  x="63.12" y="655.5" ></text>
</g>
<g >
<title>query::result_set::result_set (1 samples, 0.02%)</title><rect x="108.2" y="677" width="0.2" height="15.0" fill="rgb(230,184,9)" rx="2" ry="2" />
<text  x="111.22" y="687.5" ></text>
</g>
<g >
<title>database::find_uuid (12 samples, 0.23%)</title><rect x="830.5" y="661" width="2.6" height="15.0" fill="rgb(216,48,40)" rx="2" ry="2" />
<text  x="833.45" y="671.5" ></text>
</g>
<g >
<title>cql3::raw_value_view::make_temporary (1 samples, 0.02%)</title><rect x="871.6" y="597" width="0.2" height="15.0" fill="rgb(219,214,49)" rx="2" ry="2" />
<text  x="874.62" y="607.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (1 samples, 0.02%)</title><rect x="257.9" y="405" width="0.2" height="15.0" fill="rgb(222,223,46)" rx="2" ry="2" />
<text  x="260.90" y="415.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::forward_to (1 samples, 0.02%)</title><rect x="721.7" y="805" width="0.2" height="15.0" fill="rgb(219,14,26)" rx="2" ry="2" />
<text  x="724.71" y="815.5" ></text>
</g>
<g >
<title>intrusive_b::node&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (1 samples, 0.02%)</title><rect x="78.5" y="725" width="0.2" height="15.0" fill="rgb(225,24,48)" rx="2" ry="2" />
<text  x="81.46" y="735.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::lsa_partition_reader::next_row (2 samples, 0.04%)</title><rect x="80.0" y="613" width="0.5" height="15.0" fill="rgb(210,208,44)" rx="2" ry="2" />
<text  x="83.03" y="623.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::reserve (7 samples, 0.13%)</title><rect x="554.1" y="645" width="1.6" height="15.0" fill="rgb(206,206,15)" rx="2" ry="2" />
<text  x="557.13" y="655.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.08%)</title><rect x="943.2" y="661" width="0.9" height="15.0" fill="rgb(222,76,10)" rx="2" ry="2" />
<text  x="946.22" y="671.5" ></text>
</g>
<g >
<title>row::compact_and_expire (2 samples, 0.04%)</title><rect x="421.5" y="533" width="0.4" height="15.0" fill="rgb(240,89,54)" rx="2" ry="2" />
<text  x="424.46" y="543.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.04%)</title><rect x="70.4" y="501" width="0.5" height="15.0" fill="rgb(242,152,29)" rx="2" ry="2" />
<text  x="73.41" y="511.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (3 samples, 0.06%)</title><rect x="51.8" y="517" width="0.7" height="15.0" fill="rgb(212,34,19)" rx="2" ry="2" />
<text  x="54.84" y="527.5" ></text>
</g>
<g >
<title>antlr3::DefaultAllocPolicy::StackType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::push (1 samples, 0.02%)</title><rect x="52.5" y="565" width="0.2" height="15.0" fill="rgb(253,6,41)" rx="2" ry="2" />
<text  x="55.51" y="575.5" ></text>
</g>
<g >
<title>std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;::vector (1 samples, 0.02%)</title><rect x="66.6" y="741" width="0.2" height="15.0" fill="rgb(210,111,45)" rx="2" ry="2" />
<text  x="69.61" y="751.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::operator= (2 samples, 0.04%)</title><rect x="48.3" y="581" width="0.4" height="15.0" fill="rgb(228,107,51)" rx="2" ry="2" />
<text  x="51.26" y="591.5" ></text>
</g>
<g >
<title>managed_bytes::external_memory_usage (3 samples, 0.06%)</title><rect x="520.3" y="517" width="0.7" height="15.0" fill="rgb(236,208,27)" rx="2" ry="2" />
<text  x="523.35" y="527.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (38 samples, 0.72%)</title><rect x="1130.9" y="677" width="8.5" height="15.0" fill="rgb(216,141,2)" rx="2" ry="2" />
<text  x="1133.93" y="687.5" ></text>
</g>
<g >
<title>fmt::v7::detail::value&lt;fmt::v7::basic_printf_context&lt;fmt::v7::detail::buffer_appender&lt;char&gt;, char&gt; &gt;::format_custom_arg&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, fmt::v7::detail::fallback_formatter&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, char, void&gt; &gt; (1 samples, 0.02%)</title><rect x="18.5" y="805" width="0.2" height="15.0" fill="rgb(213,172,34)" rx="2" ry="2" />
<text  x="21.50" y="815.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::clear (1 samples, 0.02%)</title><rect x="597.8" y="661" width="0.2" height="15.0" fill="rgb(242,154,37)" rx="2" ry="2" />
<text  x="600.76" y="671.5" ></text>
</g>
<g >
<title>std::default_delete&lt;query::partition_slice const&gt;::operator (6 samples, 0.11%)</title><rect x="607.4" y="709" width="1.3" height="15.0" fill="rgb(210,210,21)" rx="2" ry="2" />
<text  x="610.38" y="719.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (1 samples, 0.02%)</title><rect x="578.5" y="581" width="0.2" height="15.0" fill="rgb(216,105,26)" rx="2" ry="2" />
<text  x="581.52" y="591.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::clear (1 samples, 0.02%)</title><rect x="1009.4" y="581" width="0.3" height="15.0" fill="rgb(217,111,49)" rx="2" ry="2" />
<text  x="1012.44" y="591.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.08%)</title><rect x="673.2" y="789" width="0.9" height="15.0" fill="rgb(243,165,3)" rx="2" ry="2" />
<text  x="676.16" y="799.5" ></text>
</g>
<g >
<title>db::system_keyspace_make (1 samples, 0.02%)</title><rect x="16.5" y="613" width="0.2" height="15.0" fill="rgb(249,88,48)" rx="2" ry="2" />
<text  x="19.49" y="623.5" ></text>
</g>
<g >
<title>std::hash&lt;auth::resource&gt;::operator (11 samples, 0.21%)</title><rect x="808.1" y="453" width="2.4" height="15.0" fill="rgb(249,214,0)" rx="2" ry="2" />
<text  x="811.08" y="463.5" ></text>
</g>
<g >
<title>std::__relocate_object_a&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt; (2 samples, 0.04%)</title><rect x="49.6" y="501" width="0.4" height="15.0" fill="rgb(214,144,1)" rx="2" ry="2" />
<text  x="52.60" y="511.5" ></text>
</g>
<g >
<title>schema_registry_entry::get_schema (3 samples, 0.06%)</title><rect x="107.8" y="741" width="0.6" height="15.0" fill="rgb(235,113,17)" rx="2" ry="2" />
<text  x="110.77" y="751.5" ></text>
</g>
<g >
<title>free (1 samples, 0.02%)</title><rect x="875.6" y="517" width="0.3" height="15.0" fill="rgb(254,194,40)" rx="2" ry="2" />
<text  x="878.65" y="527.5" ></text>
</g>
<g >
<title>seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;::swap (5 samples, 0.09%)</title><rect x="747.0" y="693" width="1.1" height="15.0" fill="rgb(242,61,3)" rx="2" ry="2" />
<text  x="750.00" y="703.5" ></text>
</g>
<g >
<title>mutation_partition::clustered_row (1 samples, 0.02%)</title><rect x="875.2" y="581" width="0.2" height="15.0" fill="rgb(212,137,14)" rx="2" ry="2" />
<text  x="878.20" y="591.5" ></text>
</g>
<g >
<title>utils::chunked_vector&lt;ser::deletable_row_view, 131072ul&gt;::make_room (1 samples, 0.02%)</title><rect x="1128.2" y="501" width="0.3" height="15.0" fill="rgb(241,43,40)" rx="2" ry="2" />
<text  x="1131.25" y="511.5" ></text>
</g>
<g >
<title>antlr3::DefaultAllocPolicy::StackType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::push (1 samples, 0.02%)</title><rect x="42.0" y="629" width="0.2" height="15.0" fill="rgb(223,155,0)" rx="2" ry="2" />
<text  x="44.99" y="639.5" ></text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::operator (9 samples, 0.17%)</title><rect x="763.8" y="693" width="2.0" height="15.0" fill="rgb(220,186,33)" rx="2" ry="2" />
<text  x="766.78" y="703.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.08%)</title><rect x="765.8" y="709" width="0.9" height="15.0" fill="rgb(249,31,30)" rx="2" ry="2" />
<text  x="768.79" y="719.5" ></text>
</g>
<g >
<title>std::hash&lt;auth::resource&gt;::hash_data (7 samples, 0.13%)</title><rect x="822.4" y="629" width="1.6" height="15.0" fill="rgb(235,126,33)" rx="2" ry="2" />
<text  x="825.40" y="639.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_Optional_payload_base (1 samples, 0.02%)</title><rect x="796.4" y="565" width="0.3" height="15.0" fill="rgb(237,161,19)" rx="2" ry="2" />
<text  x="799.44" y="575.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (2 samples, 0.04%)</title><rect x="1105.7" y="693" width="0.4" height="15.0" fill="rgb(237,85,30)" rx="2" ry="2" />
<text  x="1108.65" y="703.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (1 samples, 0.02%)</title><rect x="439.8" y="677" width="0.2" height="15.0" fill="rgb(206,55,11)" rx="2" ry="2" />
<text  x="442.80" y="687.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value_view, std::allocator&lt;cql3::raw_value_view&gt; &gt;::_M_realloc_insert&lt;cql3::raw_value_view&gt; (13 samples, 0.25%)</title><rect x="857.1" y="677" width="2.9" height="15.0" fill="rgb(237,153,9)" rx="2" ry="2" />
<text  x="860.08" y="687.5" ></text>
</g>
<g >
<title>std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt; &gt;, seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (12 samples, 0.23%)</title><rect x="814.8" y="549" width="2.7" height="15.0" fill="rgb(219,213,41)" rx="2" ry="2" />
<text  x="817.79" y="559.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::~guard (3 samples, 0.06%)</title><rect x="503.3" y="629" width="0.7" height="15.0" fill="rgb(249,71,36)" rx="2" ry="2" />
<text  x="506.34" y="639.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;service::abstract_read_executor::execute (1 samples, 0.02%)</title><rect x="700.0" y="757" width="0.2" height="15.0" fill="rgb(215,124,28)" rx="2" ry="2" />
<text  x="703.01" y="767.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;bool&gt;::take_value (2 samples, 0.04%)</title><rect x="781.5" y="661" width="0.4" height="15.0" fill="rgb(229,219,21)" rx="2" ry="2" />
<text  x="784.45" y="671.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::bool_class&lt;mutation_reader_merger::needs_merge_tag&gt; &gt;::take_value (1 samples, 0.02%)</title><rect x="198.2" y="581" width="0.2" height="15.0" fill="rgb(222,140,14)" rx="2" ry="2" />
<text  x="201.16" y="591.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, unsigned int, std::_Identity&lt;unsigned int&gt;, std::less&lt;unsigned int&gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;unsigned int&gt; &gt;::_M_end (1 samples, 0.02%)</title><rect x="36.4" y="581" width="0.2" height="15.0" fill="rgb(210,220,5)" rx="2" ry="2" />
<text  x="39.40" y="591.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::disable_abort_on_alloc_failure_temporarily (1 samples, 0.02%)</title><rect x="294.1" y="533" width="0.3" height="15.0" fill="rgb(249,32,7)" rx="2" ry="2" />
<text  x="297.15" y="543.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; const, column_definition const*&gt;, true&gt; &gt; &gt;::_M_deallocate_nodes (1 samples, 0.02%)</title><rect x="16.5" y="485" width="0.2" height="15.0" fill="rgb(242,119,39)" rx="2" ry="2" />
<text  x="19.49" y="495.5" ></text>
</g>
<g >
<title>std::default_delete&lt;cql3::query_options&gt;::operator (18 samples, 0.34%)</title><rect x="678.5" y="773" width="4.1" height="15.0" fill="rgb(207,84,12)" rx="2" ry="2" />
<text  x="681.53" y="783.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::lower_bound&lt;mutation_partition, schema const&amp;, nonwrapping_interval&lt;clustering_key_prefix&gt; const&amp;&gt; (1 samples, 0.02%)</title><rect x="266.0" y="453" width="0.2" height="15.0" fill="rgb(244,167,23)" rx="2" ry="2" />
<text  x="268.96" y="463.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;dht::token, std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt;, std::allocator&lt;std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;dht::token&gt;, std::hash&lt;dht::token&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (22 samples, 0.42%)</title><rect x="1079.2" y="565" width="5.0" height="15.0" fill="rgb(242,55,37)" rx="2" ry="2" />
<text  x="1082.25" y="575.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;mutation_fragment&gt;::allocate (1 samples, 0.02%)</title><rect x="320.5" y="581" width="0.3" height="15.0" fill="rgb(207,225,46)" rx="2" ry="2" />
<text  x="323.55" y="591.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.02%)</title><rect x="10.4" y="853" width="0.3" height="15.0" fill="rgb(243,131,38)" rx="2" ry="2" />
<text  x="13.45" y="863.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.02%)</title><rect x="59.4" y="501" width="0.3" height="15.0" fill="rgb(213,111,46)" rx="2" ry="2" />
<text  x="62.45" y="511.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_cachedSize (1 samples, 0.02%)</title><rect x="21.4" y="645" width="0.2" height="15.0" fill="rgb(245,180,6)" rx="2" ry="2" />
<text  x="24.41" y="655.5" ></text>
</g>
<g >
<title>compound_wrapper&lt;clustering_key_prefix, clustering_key_prefix_view&gt;::components (1 samples, 0.02%)</title><rect x="1136.8" y="341" width="0.2" height="15.0" fill="rgb(229,145,19)" rx="2" ry="2" />
<text  x="1139.75" y="351.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;::operator (12 samples, 0.23%)</title><rect x="737.4" y="629" width="2.7" height="15.0" fill="rgb(219,224,49)" rx="2" ry="2" />
<text  x="740.38" y="639.5" ></text>
</g>
<g >
<title>cql3::operation::set_value::~set_value (1 samples, 0.02%)</title><rect x="74.7" y="757" width="0.2" height="15.0" fill="rgb(208,60,50)" rx="2" ry="2" />
<text  x="77.66" y="767.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;::basic_sstring (1 samples, 0.02%)</title><rect x="730.4" y="773" width="0.3" height="15.0" fill="rgb(218,148,7)" rx="2" ry="2" />
<text  x="733.44" y="783.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate (74 samples, 1.40%)</title><rect x="897.8" y="645" width="16.6" height="15.0" fill="rgb(249,112,21)" rx="2" ry="2" />
<text  x="900.80" y="655.5" ></text>
</g>
<g >
<title>seastar::memory::allocate_aligned (5 samples, 0.09%)</title><rect x="248.7" y="373" width="1.1" height="15.0" fill="rgb(244,146,23)" rx="2" ry="2" />
<text  x="251.73" y="383.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.02%)</title><rect x="37.5" y="581" width="0.2" height="15.0" fill="rgb(211,97,43)" rx="2" ry="2" />
<text  x="40.52" y="591.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;flat_mutation_reader  (477 samples, 9.04%)</title><rect x="449.2" y="677" width="106.7" height="15.0" fill="rgb(236,46,21)" rx="2" ry="2" />
<text  x="452.20" y="687.5" >std::_Functio..</text>
</g>
<g >
<title>utils::config_file::named_value&lt;unsigned long&gt;::the_value (3 samples, 0.06%)</title><rect x="1117.3" y="693" width="0.7" height="15.0" fill="rgb(236,223,4)" rx="2" ry="2" />
<text  x="1120.28" y="703.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (7 samples, 0.13%)</title><rect x="671.4" y="789" width="1.5" height="15.0" fill="rgb(245,175,4)" rx="2" ry="2" />
<text  x="674.37" y="799.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (1 samples, 0.02%)</title><rect x="59.4" y="581" width="0.3" height="15.0" fill="rgb(242,202,22)" rx="2" ry="2" />
<text  x="62.45" y="591.5" ></text>
</g>
<g >
<title>mutation_fragment::destroy_data (1 samples, 0.02%)</title><rect x="434.9" y="581" width="0.2" height="15.0" fill="rgb(241,106,7)" rx="2" ry="2" />
<text  x="437.88" y="591.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_M_reset (2 samples, 0.04%)</title><rect x="873.0" y="645" width="0.4" height="15.0" fill="rgb(242,145,30)" rx="2" ry="2" />
<text  x="875.96" y="655.5" ></text>
</g>
<g >
<title>TLS init function for bound_view::_empty_prefix (2 samples, 0.04%)</title><rect x="286.3" y="469" width="0.5" height="15.0" fill="rgb(245,134,45)" rx="2" ry="2" />
<text  x="289.32" y="479.5" ></text>
</g>
<g >
<title>cql3::statements::raw::modification_statement::prepare (33 samples, 0.63%)</title><rect x="66.8" y="757" width="7.4" height="15.0" fill="rgb(235,157,27)" rx="2" ry="2" />
<text  x="69.83" y="767.5" ></text>
</g>
<g >
<title>__start_context (283 samples, 5.37%)</title><rect x="14.7" y="917" width="63.3" height="15.0" fill="rgb(213,108,31)" rx="2" ry="2" />
<text  x="17.70" y="927.5" >__star..</text>
</g>
<g >
<title>seastar::future&lt;utils::small_vector&lt;service::storage_proxy::unique_response_handler, 1ul&gt; &gt;::then_impl&lt;service::storage_proxy::mutate_internal&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="1131.4" y="629" width="0.2" height="15.0" fill="rgb(210,174,28)" rx="2" ry="2" />
<text  x="1134.38" y="639.5" ></text>
</g>
<g >
<title>partition_entry::evict (1 samples, 0.02%)</title><rect x="14.5" y="821" width="0.2" height="15.0" fill="rgb(240,152,45)" rx="2" ry="2" />
<text  x="17.47" y="831.5" ></text>
</g>
<g >
<title>nonwrapping_interval&lt;dht::ring_position&gt;::nonwrapping_interval (4 samples, 0.08%)</title><rect x="932.9" y="677" width="0.9" height="15.0" fill="rgb(247,203,41)" rx="2" ry="2" />
<text  x="935.92" y="687.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_range_tombstone (7 samples, 0.13%)</title><rect x="272.2" y="485" width="1.6" height="15.0" fill="rgb(252,67,24)" rx="2" ry="2" />
<text  x="275.22" y="495.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.02%)</title><rect x="78.5" y="821" width="0.2" height="15.0" fill="rgb(215,150,53)" rx="2" ry="2" />
<text  x="81.46" y="831.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (20 samples, 0.38%)</title><rect x="1133.6" y="549" width="4.5" height="15.0" fill="rgb(243,20,47)" rx="2" ry="2" />
<text  x="1136.62" y="559.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::get_promise (2 samples, 0.04%)</title><rect x="957.3" y="693" width="0.5" height="15.0" fill="rgb(252,82,0)" rx="2" ry="2" />
<text  x="960.31" y="703.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (3 samples, 0.06%)</title><rect x="1091.8" y="677" width="0.6" height="15.0" fill="rgb(222,221,11)" rx="2" ry="2" />
<text  x="1094.78" y="687.5" ></text>
</g>
<g >
<title>bytes_view_hasher::update (2 samples, 0.04%)</title><rect x="760.2" y="565" width="0.4" height="15.0" fill="rgb(213,137,12)" rx="2" ry="2" />
<text  x="763.20" y="575.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;bytes_ostream::chunk, std::default_delete&lt;bytes_ostream::chunk&gt; &gt;::~unique_ptr (10 samples, 0.19%)</title><rect x="95.7" y="741" width="2.2" height="15.0" fill="rgb(213,47,40)" rx="2" ry="2" />
<text  x="98.69" y="751.5" ></text>
</g>
<g >
<title>std::forward&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; const&amp;&gt; (1 samples, 0.02%)</title><rect x="38.0" y="565" width="0.2" height="15.0" fill="rgb(222,75,1)" rx="2" ry="2" />
<text  x="40.97" y="575.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (11 samples, 0.21%)</title><rect x="1110.6" y="693" width="2.4" height="15.0" fill="rgb(226,91,39)" rx="2" ry="2" />
<text  x="1113.57" y="703.5" ></text>
</g>
<g >
<title>seastar::reactor::add_timer (1 samples, 0.02%)</title><rect x="1024.2" y="453" width="0.2" height="15.0" fill="rgb(207,223,13)" rx="2" ry="2" />
<text  x="1027.21" y="463.5" ></text>
</g>
<g >
<title>std::optional&lt;query::querier&lt; (1 samples, 0.02%)</title><rect x="139.5" y="757" width="0.3" height="15.0" fill="rgb(245,210,5)" rx="2" ry="2" />
<text  x="142.54" y="767.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (1 samples, 0.02%)</title><rect x="843.7" y="645" width="0.2" height="15.0" fill="rgb(251,58,30)" rx="2" ry="2" />
<text  x="846.65" y="655.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (107 samples, 2.03%)</title><rect x="37.5" y="677" width="24.0" height="15.0" fill="rgb(231,23,4)" rx="2" ry="2" />
<text  x="40.52" y="687.5" >c..</text>
</g>
<g >
<title>cql3::expr::evaluate (1 samples, 0.02%)</title><rect x="870.7" y="597" width="0.2" height="15.0" fill="rgb(247,119,17)" rx="2" ry="2" />
<text  x="873.72" y="607.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (3 samples, 0.06%)</title><rect x="51.8" y="421" width="0.7" height="15.0" fill="rgb(241,15,13)" rx="2" ry="2" />
<text  x="54.84" y="431.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureIvE9then_implIZZN5query12consume_pageIL19emit_only_live_rows1E20query_result_builderEEDaR20flat_mutation_readerNS_13lw_shared_ptrI22compact_mutation_stateIXT_EL20compact_for_sstables0EEEERKNS3_15partition_sliceEOT0_mjNSt6chrono10time_pointI8gc_clockNSJ_8durationIlSt5ratioILl1ELl1EEEEEEENUlP17mutation_fragmentE_clESS_EUlDpOT_E_NS0_ISt5tupleIJSt8optionalI21clustering_key_prefixEEEEEEESH_OT_ (1 samples, 0.02%)</title><rect x="329.5" y="693" width="0.2" height="15.0" fill="rgb(236,123,17)" rx="2" ry="2" />
<text  x="332.50" y="703.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::operator (3 samples, 0.06%)</title><rect x="869.2" y="789" width="0.6" height="15.0" fill="rgb(215,129,43)" rx="2" ry="2" />
<text  x="872.16" y="799.5" ></text>
</g>
<g >
<title>ser::qr_partition__static_row&lt;bytes_ostream&gt;::start_cells (1 samples, 0.02%)</title><rect x="350.3" y="469" width="0.2" height="15.0" fill="rgb(251,173,9)" rx="2" ry="2" />
<text  x="353.31" y="479.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (2 samples, 0.04%)</title><rect x="44.7" y="629" width="0.4" height="15.0" fill="rgb(247,52,54)" rx="2" ry="2" />
<text  x="47.68" y="639.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::find (1 samples, 0.02%)</title><rect x="952.6" y="661" width="0.2" height="15.0" fill="rgb(231,110,15)" rx="2" ry="2" />
<text  x="955.61" y="671.5" ></text>
</g>
<g >
<title>reader_permit::consume_memory (7 samples, 0.13%)</title><rect x="260.6" y="469" width="1.6" height="15.0" fill="rgb(226,165,24)" rx="2" ry="2" />
<text  x="263.59" y="479.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (39 samples, 0.74%)</title><rect x="1130.7" y="741" width="8.7" height="15.0" fill="rgb(214,138,20)" rx="2" ry="2" />
<text  x="1133.71" y="751.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.02%)</title><rect x="983.3" y="581" width="0.2" height="15.0" fill="rgb(240,15,35)" rx="2" ry="2" />
<text  x="986.27" y="591.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (1 samples, 0.02%)</title><rect x="562.4" y="661" width="0.2" height="15.0" fill="rgb(213,156,8)" rx="2" ry="2" />
<text  x="565.41" y="671.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (1 samples, 0.02%)</title><rect x="274.9" y="501" width="0.2" height="15.0" fill="rgb(206,131,28)" rx="2" ry="2" />
<text  x="277.91" y="511.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;*, std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt; &gt;::operator++ (1 samples, 0.02%)</title><rect x="46.5" y="613" width="0.2" height="15.0" fill="rgb(223,221,23)" rx="2" ry="2" />
<text  x="49.47" y="623.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_locally (3 samples, 0.06%)</title><rect x="1132.5" y="501" width="0.7" height="15.0" fill="rgb(240,149,42)" rx="2" ry="2" />
<text  x="1135.50" y="511.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry&gt;::operator= (1 samples, 0.02%)</title><rect x="750.8" y="677" width="0.2" height="15.0" fill="rgb(219,217,34)" rx="2" ry="2" />
<text  x="753.80" y="687.5" ></text>
</g>
<g >
<title>mutation_reader_merger::add_readers (18 samples, 0.34%)</title><rect x="460.8" y="581" width="4.1" height="15.0" fill="rgb(249,156,50)" rx="2" ry="2" />
<text  x="463.83" y="591.5" ></text>
</g>
<g >
<title>seastar::schedule (1 samples, 0.02%)</title><rect x="93.5" y="789" width="0.2" height="15.0" fill="rgb(208,190,35)" rx="2" ry="2" />
<text  x="96.45" y="799.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="778.8" y="693" width="0.2" height="15.0" fill="rgb(205,42,3)" rx="2" ry="2" />
<text  x="781.77" y="703.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::set_token_present (1 samples, 0.02%)</title><rect x="25.4" y="581" width="0.3" height="15.0" fill="rgb(253,64,32)" rx="2" ry="2" />
<text  x="28.44" y="591.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::operation::set_value, std::default_delete&lt;cql3::operation::set_value&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="57.0" y="549" width="0.2" height="15.0" fill="rgb(234,129,17)" rx="2" ry="2" />
<text  x="59.99" y="559.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (1 samples, 0.02%)</title><rect x="64.4" y="693" width="0.2" height="15.0" fill="rgb(218,67,12)" rx="2" ry="2" />
<text  x="67.37" y="703.5" ></text>
</g>
<g >
<title>row::~row (1 samples, 0.02%)</title><rect x="294.4" y="549" width="0.2" height="15.0" fill="rgb(245,115,33)" rx="2" ry="2" />
<text  x="297.37" y="559.5" ></text>
</g>
<g >
<title>validation::validate_column_family (1 samples, 0.02%)</title><rect x="836.3" y="709" width="0.2" height="15.0" fill="rgb(205,99,9)" rx="2" ry="2" />
<text  x="839.27" y="719.5" ></text>
</g>
<g >
<title>ser::serializer&lt;clustering_key_prefix&gt;::write&lt;bytes_ostream&gt; (1 samples, 0.02%)</title><rect x="1136.8" y="421" width="0.2" height="15.0" fill="rgb(240,38,12)" rx="2" ry="2" />
<text  x="1139.75" y="431.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (1 samples, 0.02%)</title><rect x="905.9" y="565" width="0.2" height="15.0" fill="rgb(227,23,15)" rx="2" ry="2" />
<text  x="908.85" y="575.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (1 samples, 0.02%)</title><rect x="608.1" y="693" width="0.2" height="15.0" fill="rgb(220,202,22)" rx="2" ry="2" />
<text  x="611.05" y="703.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (4 samples, 0.08%)</title><rect x="1162.0" y="789" width="0.9" height="15.0" fill="rgb(237,49,13)" rx="2" ry="2" />
<text  x="1165.03" y="799.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="58.8" y="581" width="0.2" height="15.0" fill="rgb(212,212,42)" rx="2" ry="2" />
<text  x="61.78" y="591.5" ></text>
</g>
<g >
<title>query::result_view::consume&lt;cql3::result_generator::query_result_visitor&lt;cql3::untyped_result_set::visitor&gt;&amp;&gt; (1 samples, 0.02%)</title><rect x="649.7" y="709" width="0.2" height="15.0" fill="rgb(238,141,18)" rx="2" ry="2" />
<text  x="652.67" y="719.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, cql3::statements::raw::delete_statement*, std::default_delete&lt;cql3::statements::raw::delete_statement&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="63.2" y="629" width="0.3" height="15.0" fill="rgb(229,115,44)" rx="2" ry="2" />
<text  x="66.25" y="639.5" ></text>
</g>
<g >
<title>std::default_delete&lt;bytes_ostream::chunk&gt;::operator (1 samples, 0.02%)</title><rect x="1134.3" y="453" width="0.2" height="15.0" fill="rgb(205,119,42)" rx="2" ry="2" />
<text  x="1137.29" y="463.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::free (1 samples, 0.02%)</title><rect x="430.2" y="501" width="0.2" height="15.0" fill="rgb(206,127,14)" rx="2" ry="2" />
<text  x="433.18" y="511.5" ></text>
</g>
<g >
<title>allocation_strategy::destroy&lt;partition_version&gt; (1 samples, 0.02%)</title><rect x="1123.1" y="549" width="0.2" height="15.0" fill="rgb(248,159,46)" rx="2" ry="2" />
<text  x="1126.10" y="559.5" ></text>
</g>
<g >
<title>query::result_set_builder::deserialize (1 samples, 0.02%)</title><rect x="107.8" y="613" width="0.2" height="15.0" fill="rgb(207,40,42)" rx="2" ry="2" />
<text  x="110.77" y="623.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::clear (1 samples, 0.02%)</title><rect x="302.0" y="581" width="0.2" height="15.0" fill="rgb(228,172,38)" rx="2" ry="2" />
<text  x="304.98" y="591.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (3 samples, 0.06%)</title><rect x="501.3" y="485" width="0.7" height="15.0" fill="rgb(240,163,33)" rx="2" ry="2" />
<text  x="504.33" y="495.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry_ptr&gt;::clear (1 samples, 0.02%)</title><rect x="750.6" y="677" width="0.2" height="15.0" fill="rgb(233,121,17)" rx="2" ry="2" />
<text  x="753.58" y="687.5" ></text>
</g>
<g >
<title>database::do_apply (34 samples, 0.64%)</title><rect x="1122.7" y="645" width="7.6" height="15.0" fill="rgb(244,4,33)" rx="2" ry="2" />
<text  x="1125.65" y="655.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value, std::allocator&lt;cql3::raw_value&gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="866.9" y="789" width="0.2" height="15.0" fill="rgb(225,49,26)" rx="2" ry="2" />
<text  x="869.92" y="799.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (2 samples, 0.04%)</title><rect x="538.2" y="629" width="0.5" height="15.0" fill="rgb(232,35,24)" rx="2" ry="2" />
<text  x="541.25" y="639.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (1 samples, 0.02%)</title><rect x="79.4" y="677" width="0.2" height="15.0" fill="rgb(230,22,17)" rx="2" ry="2" />
<text  x="82.36" y="687.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::cancel (5 samples, 0.09%)</title><rect x="713.9" y="725" width="1.1" height="15.0" fill="rgb(219,196,8)" rx="2" ry="2" />
<text  x="716.88" y="735.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;query::result_memory_limiter::new_data_read (3 samples, 0.06%)</title><rect x="616.6" y="741" width="0.6" height="15.0" fill="rgb(244,129,24)" rx="2" ry="2" />
<text  x="619.56" y="751.5" ></text>
</g>
<g >
<title>std::__equal&lt;true&gt;::equal&lt;signed char&gt; (1 samples, 0.02%)</title><rect x="737.2" y="597" width="0.2" height="15.0" fill="rgb(231,153,18)" rx="2" ry="2" />
<text  x="740.15" y="607.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.02%)</title><rect x="20.7" y="645" width="0.3" height="15.0" fill="rgb(232,30,41)" rx="2" ry="2" />
<text  x="23.74" y="655.5" ></text>
</g>
<g >
<title>cql3::expr::expression::operator= (3 samples, 0.06%)</title><rect x="48.0" y="613" width="0.7" height="15.0" fill="rgb(216,16,22)" rx="2" ry="2" />
<text  x="51.04" y="623.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (29 samples, 0.55%)</title><rect x="495.5" y="533" width="6.5" height="15.0" fill="rgb(205,176,25)" rx="2" ry="2" />
<text  x="498.51" y="543.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (4 samples, 0.08%)</title><rect x="46.7" y="613" width="0.9" height="15.0" fill="rgb(205,37,7)" rx="2" ry="2" />
<text  x="49.69" y="623.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="55.4" y="517" width="0.2" height="15.0" fill="rgb(213,22,2)" rx="2" ry="2" />
<text  x="58.42" y="527.5" ></text>
</g>
<g >
<title>partition_snapshot_row_cursor::maybe_advance_to (2 samples, 0.04%)</title><rect x="15.8" y="853" width="0.5" height="15.0" fill="rgb(222,126,53)" rx="2" ry="2" />
<text  x="18.82" y="863.5" ></text>
</g>
<g >
<title>boost::intrusive::bstree_algorithms&lt;boost::intrusive::rbtree_node_traits&lt;void*, false&gt; &gt;::clear_and_dispose&lt;boost::intrusive::detail::node_disposer&lt;boost::intrusive::detail::null_disposer, boost::intrusive::mhtraits&lt;range_tombstone_entry, boost::intrusive::set_member_hook&lt;boost::intrusive::link_mode&lt; (1 samples, 0.02%)</title><rect x="581.4" y="597" width="0.3" height="15.0" fill="rgb(218,161,49)" rx="2" ry="2" />
<text  x="584.43" y="607.5" ></text>
</g>
<g >
<title>std::make_unique&lt;compact_for_query&lt; (2 samples, 0.04%)</title><rect x="443.6" y="677" width="0.5" height="15.0" fill="rgb(231,225,26)" rx="2" ry="2" />
<text  x="446.61" y="687.5" ></text>
</g>
<g >
<title>query::result::builder::add_partition (14 samples, 0.27%)</title><rect x="351.9" y="485" width="3.1" height="15.0" fill="rgb(214,133,26)" rx="2" ry="2" />
<text  x="354.87" y="495.5" ></text>
</g>
<g >
<title>bplus::node&lt;long, intrusive_array&lt;memtable_entry&gt;, dht::raw_token_less_comparator, 16ul,  (1 samples, 0.02%)</title><rect x="1124.7" y="469" width="0.2" height="15.0" fill="rgb(228,74,24)" rx="2" ry="2" />
<text  x="1127.67" y="479.5" ></text>
</g>
<g >
<title>bytes_ostream::chunk::~chunk (1 samples, 0.02%)</title><rect x="1134.3" y="437" width="0.2" height="15.0" fill="rgb(215,177,45)" rx="2" ry="2" />
<text  x="1137.29" y="447.5" ></text>
</g>
<g >
<title>query_result_builder::consume_new_partition (37 samples, 0.70%)</title><rect x="348.7" y="501" width="8.3" height="15.0" fill="rgb(214,91,8)" rx="2" ry="2" />
<text  x="351.74" y="511.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_type (1 samples, 0.02%)</title><rect x="21.6" y="629" width="0.3" height="15.0" fill="rgb(245,222,27)" rx="2" ry="2" />
<text  x="24.63" y="639.5" ></text>
</g>
<g >
<title>service::never_speculating_read_executor::never_speculating_read_executor (26 samples, 0.49%)</title><rect x="1058.4" y="629" width="5.9" height="15.0" fill="rgb(225,111,54)" rx="2" ry="2" />
<text  x="1061.44" y="639.5" ></text>
</g>
<g >
<title>global_schema_ptr::global_schema_ptr (1 samples, 0.02%)</title><rect x="1132.9" y="485" width="0.3" height="15.0" fill="rgb(250,215,53)" rx="2" ry="2" />
<text  x="1135.95" y="495.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::_S_construct&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; const&amp;&gt; (1 samples, 0.02%)</title><rect x="42.0" y="581" width="0.2" height="15.0" fill="rgb(239,151,46)" rx="2" ry="2" />
<text  x="44.99" y="591.5" ></text>
</g>
<g >
<title>remove_or_mark_as_unique_owner (1 samples, 0.02%)</title><rect x="695.5" y="533" width="0.3" height="15.0" fill="rgb(244,217,4)" rx="2" ry="2" />
<text  x="698.54" y="543.5" ></text>
</g>
<g >
<title>evictable_reader::do_fill_buffer (1 samples, 0.02%)</title><rect x="106.7" y="501" width="0.2" height="15.0" fill="rgb(238,132,22)" rx="2" ry="2" />
<text  x="109.66" y="511.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;bool  (1 samples, 0.02%)</title><rect x="85.4" y="821" width="0.2" height="15.0" fill="rgb(234,9,43)" rx="2" ry="2" />
<text  x="88.40" y="831.5" ></text>
</g>
<g >
<title>ser::serializer&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;::read&lt;seastar::fragmented_memory_input_stream&lt;bytes_ostream::fragment_iterator&gt; &gt; (1 samples, 0.02%)</title><rect x="107.8" y="565" width="0.2" height="15.0" fill="rgb(230,17,0)" rx="2" ry="2" />
<text  x="110.77" y="575.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::leaf_node::allocate (1 samples, 0.02%)</title><rect x="1127.1" y="453" width="0.3" height="15.0" fill="rgb(237,0,28)" rx="2" ry="2" />
<text  x="1130.13" y="463.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_data_requests (1 samples, 0.02%)</title><rect x="964.7" y="565" width="0.2" height="15.0" fill="rgb(227,66,0)" rx="2" ry="2" />
<text  x="967.69" y="575.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::~resource_units (1 samples, 0.02%)</title><rect x="433.8" y="533" width="0.2" height="15.0" fill="rgb(248,145,4)" rx="2" ry="2" />
<text  x="436.76" y="543.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (4 samples, 0.08%)</title><rect x="768.5" y="645" width="0.9" height="15.0" fill="rgb(238,37,53)" rx="2" ry="2" />
<text  x="771.48" y="655.5" ></text>
</g>
<g >
<title>database::find_schema (9 samples, 0.17%)</title><rect x="828.4" y="661" width="2.1" height="15.0" fill="rgb(226,202,46)" rx="2" ry="2" />
<text  x="831.44" y="671.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (4 samples, 0.08%)</title><rect x="754.8" y="613" width="0.9" height="15.0" fill="rgb(214,96,38)" rx="2" ry="2" />
<text  x="757.83" y="623.5" ></text>
</g>
<g >
<title>make_partition_snapshot_flat_reader_from_snp_schema (123 samples, 2.33%)</title><rect x="505.4" y="629" width="27.5" height="15.0" fill="rgb(221,88,24)" rx="2" ry="2" />
<text  x="508.36" y="639.5" >m..</text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value, std::allocator&lt;cql3::raw_value&gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="860.2" y="725" width="0.2" height="15.0" fill="rgb(243,176,4)" rx="2" ry="2" />
<text  x="863.21" y="735.5" ></text>
</g>
<g >
<title>absl::hash_internal::HashState::combine_contiguous (1 samples, 0.02%)</title><rect x="844.8" y="661" width="0.2" height="15.0" fill="rgb(238,13,33)" rx="2" ry="2" />
<text  x="847.77" y="671.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="849.9" y="709" width="0.2" height="15.0" fill="rgb(237,112,38)" rx="2" ry="2" />
<text  x="852.92" y="719.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="40.4" y="597" width="0.3" height="15.0" fill="rgb(216,202,33)" rx="2" ry="2" />
<text  x="43.43" y="607.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (3 samples, 0.06%)</title><rect x="586.4" y="597" width="0.6" height="15.0" fill="rgb(209,93,14)" rx="2" ry="2" />
<text  x="589.35" y="607.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::take (3 samples, 0.06%)</title><rect x="325.2" y="661" width="0.7" height="15.0" fill="rgb(216,188,1)" rx="2" ry="2" />
<text  x="328.25" y="671.5" ></text>
</g>
<g >
<title>operator delete (5 samples, 0.09%)</title><rect x="590.2" y="645" width="1.1" height="15.0" fill="rgb(246,63,35)" rx="2" ry="2" />
<text  x="593.16" y="655.5" ></text>
</g>
<g >
<title>cql3::query_processor::parse_statement (211 samples, 4.00%)</title><rect x="19.4" y="773" width="47.2" height="15.0" fill="rgb(212,180,10)" rx="2" ry="2" />
<text  x="22.40" y="783.5" >cql3..</text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_default_append (1 samples, 0.02%)</title><rect x="73.3" y="629" width="0.2" height="15.0" fill="rgb(212,17,47)" rx="2" ry="2" />
<text  x="76.32" y="639.5" ></text>
</g>
<g >
<title>seastar::memory::allocate_aligned (9 samples, 0.17%)</title><rect x="242.2" y="341" width="2.1" height="15.0" fill="rgb(238,157,53)" rx="2" ry="2" />
<text  x="245.24" y="351.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="937.0" y="629" width="0.2" height="15.0" fill="rgb(247,31,30)" rx="2" ry="2" />
<text  x="939.95" y="639.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (7 samples, 0.13%)</title><rect x="843.4" y="693" width="1.6" height="15.0" fill="rgb(218,58,30)" rx="2" ry="2" />
<text  x="846.43" y="703.5" ></text>
</g>
<g >
<title>cql3::statements::raw::update_statement::update_statement (1 samples, 0.02%)</title><rect x="60.6" y="645" width="0.2" height="15.0" fill="rgb(212,128,27)" rx="2" ry="2" />
<text  x="63.57" y="655.5" ></text>
</g>
<g >
<title>visit&lt;(anonymous namespace)::validate_visitor&lt;managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="902.7" y="565" width="0.2" height="15.0" fill="rgb(246,213,3)" rx="2" ry="2" />
<text  x="905.72" y="575.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="394.8" y="453" width="0.3" height="15.0" fill="rgb(214,87,52)" rx="2" ry="2" />
<text  x="397.83" y="463.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.04%)</title><rect x="54.7" y="453" width="0.5" height="15.0" fill="rgb(233,222,52)" rx="2" ry="2" />
<text  x="57.75" y="463.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (1 samples, 0.02%)</title><rect x="1045.7" y="597" width="0.2" height="15.0" fill="rgb(237,39,39)" rx="2" ry="2" />
<text  x="1048.69" y="607.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (1 samples, 0.02%)</title><rect x="809.9" y="389" width="0.2" height="15.0" fill="rgb(214,26,12)" rx="2" ry="2" />
<text  x="812.87" y="399.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.02%)</title><rect x="107.6" y="629" width="0.2" height="15.0" fill="rgb(217,79,39)" rx="2" ry="2" />
<text  x="110.55" y="639.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (37 samples, 0.70%)</title><rect x="1122.2" y="757" width="8.3" height="15.0" fill="rgb(236,216,26)" rx="2" ry="2" />
<text  x="1125.21" y="767.5" ></text>
</g>
<g >
<title>do_query&lt;(anonymous namespace)::mutation_query_result_builder&gt; (2 samples, 0.04%)</title><rect x="106.7" y="629" width="0.4" height="15.0" fill="rgb(236,86,20)" rx="2" ry="2" />
<text  x="109.66" y="639.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::query_processor::process_authorized_statement (1 samples, 0.02%)</title><rect x="83.6" y="821" width="0.2" height="15.0" fill="rgb(216,185,37)" rx="2" ry="2" />
<text  x="86.61" y="831.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.06%)</title><rect x="566.9" y="693" width="0.7" height="15.0" fill="rgb(231,209,8)" rx="2" ry="2" />
<text  x="569.89" y="703.5" ></text>
</g>
<g >
<title>query::querier_base::close (147 samples, 2.79%)</title><rect x="568.7" y="741" width="32.9" height="15.0" fill="rgb(206,158,16)" rx="2" ry="2" />
<text  x="571.68" y="751.5" >qu..</text>
</g>
<g >
<title>std::operator+ (4 samples, 0.08%)</title><rect x="43.6" y="469" width="0.9" height="15.0" fill="rgb(213,85,38)" rx="2" ry="2" />
<text  x="46.56" y="479.5" ></text>
</g>
<g >
<title>locator::abstract_replication_strategy::get_natural_endpoints (56 samples, 1.06%)</title><rect x="1071.9" y="597" width="12.5" height="15.0" fill="rgb(230,195,53)" rx="2" ry="2" />
<text  x="1074.87" y="607.5" ></text>
</g>
<g >
<title>ser::mutation_partition_view::rows (2 samples, 0.04%)</title><rect x="1128.0" y="533" width="0.5" height="15.0" fill="rgb(232,131,44)" rx="2" ry="2" />
<text  x="1131.02" y="543.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::finally_body&lt;table::stop (2 samples, 0.04%)</title><rect x="695.3" y="789" width="0.5" height="15.0" fill="rgb(245,176,31)" rx="2" ry="2" />
<text  x="698.31" y="799.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (2 samples, 0.04%)</title><rect x="52.1" y="405" width="0.4" height="15.0" fill="rgb(237,176,42)" rx="2" ry="2" />
<text  x="55.06" y="415.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (1 samples, 0.02%)</title><rect x="1000.0" y="597" width="0.3" height="15.0" fill="rgb(207,142,16)" rx="2" ry="2" />
<text  x="1003.05" y="607.5" ></text>
</g>
<g >
<title>cql3::restrictions::partition_key_restrictions::merge_to (3 samples, 0.06%)</title><rect x="70.4" y="661" width="0.7" height="15.0" fill="rgb(241,22,9)" rx="2" ry="2" />
<text  x="73.41" y="671.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_emplace&lt;nonwrapping_interval&lt;dht::token&gt;, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; (25 samples, 0.47%)</title><rect x="1153.1" y="773" width="5.6" height="15.0" fill="rgb(220,127,23)" rx="2" ry="2" />
<text  x="1156.08" y="783.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_locally (1 samples, 0.02%)</title><rect x="106.4" y="773" width="0.3" height="15.0" fill="rgb(210,49,35)" rx="2" ry="2" />
<text  x="109.43" y="783.5" ></text>
</g>
<g >
<title>row_cache::do_update (2 samples, 0.04%)</title><rect x="695.3" y="677" width="0.5" height="15.0" fill="rgb(205,167,20)" rx="2" ry="2" />
<text  x="698.31" y="687.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (1 samples, 0.02%)</title><rect x="55.2" y="517" width="0.2" height="15.0" fill="rgb(231,17,10)" rx="2" ry="2" />
<text  x="58.20" y="527.5" ></text>
</g>
<g >
<title>locator::token_metadata_impl::first_token_index (24 samples, 0.46%)</title><rect x="1072.5" y="565" width="5.4" height="15.0" fill="rgb(254,190,9)" rx="2" ry="2" />
<text  x="1075.54" y="575.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;clustering_key_prefix&gt;::_M_move_assign (1 samples, 0.02%)</title><rect x="559.1" y="709" width="0.2" height="15.0" fill="rgb(215,51,23)" rx="2" ry="2" />
<text  x="562.06" y="719.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::raw::delete_statement, std::default_delete&lt;cql3::statements::raw::delete_statement&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="63.2" y="661" width="0.3" height="15.0" fill="rgb(205,192,5)" rx="2" ry="2" />
<text  x="66.25" y="671.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="466.2" y="581" width="0.2" height="15.0" fill="rgb(207,214,39)" rx="2" ry="2" />
<text  x="469.20" y="591.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;cql3::column_identifier, false&gt;::make&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const&amp;, bool&gt; (1 samples, 0.02%)</title><rect x="67.1" y="709" width="0.2" height="15.0" fill="rgb(222,83,1)" rx="2" ry="2" />
<text  x="70.05" y="719.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;float  (2 samples, 0.04%)</title><rect x="1169.2" y="725" width="0.4" height="15.0" fill="rgb(246,68,50)" rx="2" ry="2" />
<text  x="1172.19" y="735.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt;, true, true&gt;::__uniq_ptr_data (1 samples, 0.02%)</title><rect x="49.6" y="421" width="0.2" height="15.0" fill="rgb(212,39,17)" rx="2" ry="2" />
<text  x="52.60" y="431.5" ></text>
</g>
<g >
<title>sstables::sstable::write_scylla_metadata (1 samples, 0.02%)</title><rect x="16.9" y="741" width="0.3" height="15.0" fill="rgb(238,21,46)" rx="2" ry="2" />
<text  x="19.94" y="751.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (1 samples, 0.02%)</title><rect x="1118.2" y="725" width="0.2" height="15.0" fill="rgb(218,29,24)" rx="2" ry="2" />
<text  x="1121.18" y="735.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::operator== (1 samples, 0.02%)</title><rect x="755.5" y="597" width="0.2" height="15.0" fill="rgb(224,98,2)" rx="2" ry="2" />
<text  x="758.50" y="607.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;nonwrapping_interval&lt;dht::ring_position&gt; const, std::default_delete&lt;nonwrapping_interval&lt;dht::ring_position&gt; const&gt; &gt;::~unique_ptr (6 samples, 0.11%)</title><rect x="604.5" y="725" width="1.3" height="15.0" fill="rgb(211,146,27)" rx="2" ry="2" />
<text  x="607.47" y="735.5" ></text>
</g>
<g >
<title>database::get_unlimited_query_max_result_size (6 samples, 0.11%)</title><rect x="1116.6" y="709" width="1.4" height="15.0" fill="rgb(236,213,38)" rx="2" ry="2" />
<text  x="1119.61" y="719.5" ></text>
</g>
<g >
<title>database::find_column_family (7 samples, 0.13%)</title><rect x="767.8" y="677" width="1.6" height="15.0" fill="rgb(217,105,14)" rx="2" ry="2" />
<text  x="770.80" y="687.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (2 samples, 0.04%)</title><rect x="874.1" y="517" width="0.4" height="15.0" fill="rgb(226,10,8)" rx="2" ry="2" />
<text  x="877.08" y="527.5" ></text>
</g>
<g >
<title>sstables::write_unsigned_vint&lt;sstables::file_writer&gt; (1 samples, 0.02%)</title><rect x="81.6" y="709" width="0.2" height="15.0" fill="rgb(231,224,1)" rx="2" ry="2" />
<text  x="84.60" y="719.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::lower_bound&lt;mutation_partition, schema const&amp;, nonwrapping_interval&lt;clustering_key_prefix&gt; const&amp;&gt; (1 samples, 0.02%)</title><rect x="289.9" y="533" width="0.2" height="15.0" fill="rgb(220,26,22)" rx="2" ry="2" />
<text  x="292.90" y="543.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_map&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::at&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt; &gt; (14 samples, 0.27%)</title><rect x="769.6" y="677" width="3.1" height="15.0" fill="rgb(241,209,51)" rx="2" ry="2" />
<text  x="772.59" y="687.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="58.1" y="517" width="0.2" height="15.0" fill="rgb(249,12,9)" rx="2" ry="2" />
<text  x="61.10" y="527.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::check_queue_size (2 samples, 0.04%)</title><rect x="1020.6" y="501" width="0.5" height="15.0" fill="rgb(249,21,6)" rx="2" ry="2" />
<text  x="1023.63" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value, std::allocator&lt;cql3::raw_value&gt; &gt;::~vector (4 samples, 0.08%)</title><rect x="681.2" y="757" width="0.9" height="15.0" fill="rgb(213,79,51)" rx="2" ry="2" />
<text  x="684.22" y="767.5" ></text>
</g>
<g >
<title>memtable_entry::snapshot (12 samples, 0.23%)</title><rect x="533.5" y="629" width="2.7" height="15.0" fill="rgb(242,157,21)" rx="2" ry="2" />
<text  x="536.55" y="639.5" ></text>
</g>
<g >
<title>seastar::app_template::run (4,858 samples, 92.11%)</title><rect x="83.4" y="885" width="1086.9" height="15.0" fill="rgb(227,7,14)" rx="2" ry="2" />
<text  x="86.39" y="895.5" >seastar::app_template::run</text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::resize (1 samples, 0.02%)</title><rect x="77.8" y="773" width="0.2" height="15.0" fill="rgb(206,48,40)" rx="2" ry="2" />
<text  x="80.79" y="783.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (1 samples, 0.02%)</title><rect x="14.5" y="885" width="0.2" height="15.0" fill="rgb(206,220,43)" rx="2" ry="2" />
<text  x="17.47" y="895.5" ></text>
</g>
<g >
<title>seastar::fragmented_memory_input_stream&lt;bytes_ostream::fragment_iterator&gt;::for_each_fragment&lt;seastar::fragmented_memory_input_stream&lt;bytes_ostream::fragment_iterator&gt;::read (1 samples, 0.02%)</title><rect x="649.7" y="597" width="0.2" height="15.0" fill="rgb(251,182,45)" rx="2" ry="2" />
<text  x="652.67" y="607.5" ></text>
</g>
<g >
<title>service::storage_proxy::do_query (599 samples, 11.36%)</title><rect x="958.7" y="693" width="134.0" height="15.0" fill="rgb(249,6,29)" rx="2" ry="2" />
<text  x="961.65" y="703.5" >service::storage..</text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt;&amp;&gt; (4 samples, 0.08%)</title><rect x="834.5" y="613" width="0.9" height="15.0" fill="rgb(233,144,23)" rx="2" ry="2" />
<text  x="837.48" y="623.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::signal (1 samples, 0.02%)</title><rect x="578.1" y="597" width="0.2" height="15.0" fill="rgb(218,71,2)" rx="2" ry="2" />
<text  x="581.07" y="607.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_nonsingular_mutations_locally (2 samples, 0.04%)</title><rect x="106.7" y="693" width="0.4" height="15.0" fill="rgb(223,209,40)" rx="2" ry="2" />
<text  x="109.66" y="703.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::operation::set_value, std::default_delete&lt;cql3::operation::set_value&gt; &gt;::__uniq_ptr_impl (1 samples, 0.02%)</title><rect x="57.0" y="565" width="0.2" height="15.0" fill="rgb(241,39,16)" rx="2" ry="2" />
<text  x="59.99" y="575.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (36 samples, 0.68%)</title><rect x="1122.4" y="741" width="8.1" height="15.0" fill="rgb(211,210,48)" rx="2" ry="2" />
<text  x="1125.43" y="751.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::get0 (1 samples, 0.02%)</title><rect x="137.8" y="757" width="0.2" height="15.0" fill="rgb(250,87,9)" rx="2" ry="2" />
<text  x="140.76" y="767.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (1 samples, 0.02%)</title><rect x="105.3" y="741" width="0.2" height="15.0" fill="rgb(228,37,38)" rx="2" ry="2" />
<text  x="108.31" y="751.5" ></text>
</g>
<g >
<title>std::default_delete&lt;cql3::expr::expression::impl&gt;::operator (1 samples, 0.02%)</title><rect x="48.9" y="581" width="0.3" height="15.0" fill="rgb(247,213,43)" rx="2" ry="2" />
<text  x="51.93" y="591.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (1 samples, 0.02%)</title><rect x="48.9" y="565" width="0.3" height="15.0" fill="rgb(215,119,26)" rx="2" ry="2" />
<text  x="51.93" y="575.5" ></text>
</g>
<g >
<title>row::row (1 samples, 0.02%)</title><rect x="293.5" y="517" width="0.2" height="15.0" fill="rgb(223,95,7)" rx="2" ry="2" />
<text  x="296.48" y="527.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::~_Variant_storage (1 samples, 0.02%)</title><rect x="356.6" y="485" width="0.2" height="15.0" fill="rgb(234,55,13)" rx="2" ry="2" />
<text  x="359.57" y="495.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="1041.0" y="565" width="0.2" height="15.0" fill="rgb(214,42,47)" rx="2" ry="2" />
<text  x="1043.99" y="575.5" ></text>
</g>
<g >
<title>seastar::repeat&lt;flat_mutation_reader::impl::consume_pausable&lt;scanning_reader::consumer&gt; (1 samples, 0.02%)</title><rect x="106.7" y="277" width="0.2" height="15.0" fill="rgb(237,210,6)" rx="2" ry="2" />
<text  x="109.66" y="287.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::hasException (1 samples, 0.02%)</title><rect x="38.2" y="661" width="0.2" height="15.0" fill="rgb(218,96,10)" rx="2" ry="2" />
<text  x="41.19" y="671.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::create_type_statement, std::default_delete&lt;cql3::statements::create_type_statement&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::statements::create_type_statement&gt;, void&gt; (1 samples, 0.02%)</title><rect x="62.4" y="677" width="0.2" height="15.0" fill="rgb(247,153,50)" rx="2" ry="2" />
<text  x="65.35" y="687.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="91.9" y="789" width="0.2" height="15.0" fill="rgb(212,53,13)" rx="2" ry="2" />
<text  x="94.89" y="799.5" ></text>
</g>
<g >
<title>reader_permit::signal (1 samples, 0.02%)</title><rect x="578.7" y="597" width="0.3" height="15.0" fill="rgb(241,55,53)" rx="2" ry="2" />
<text  x="581.74" y="607.5" ></text>
</g>
<g >
<title>atomic_cell::make_live (3 samples, 0.06%)</title><rect x="874.1" y="565" width="0.7" height="15.0" fill="rgb(226,141,46)" rx="2" ry="2" />
<text  x="877.08" y="575.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;reader_concurrency_semaphore::entry&gt; &gt;::destroy&lt;reader_concurrency_semaphore::entry&gt; (2 samples, 0.04%)</title><rect x="638.7" y="773" width="0.5" height="15.0" fill="rgb(223,47,39)" rx="2" ry="2" />
<text  x="641.71" y="783.5" ></text>
</g>
<g >
<title>std::apply&lt;flat_mutation_reader::impl::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (1 samples, 0.02%)</title><rect x="105.8" y="629" width="0.2" height="15.0" fill="rgb(228,21,49)" rx="2" ry="2" />
<text  x="108.76" y="639.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector (1 samples, 0.02%)</title><rect x="1084.2" y="581" width="0.2" height="15.0" fill="rgb(220,154,51)" rx="2" ry="2" />
<text  x="1087.17" y="591.5" ></text>
</g>
<g >
<title>reconcilable_result_builder::consume_end_of_partition (1 samples, 0.02%)</title><rect x="105.8" y="581" width="0.2" height="15.0" fill="rgb(219,202,43)" rx="2" ry="2" />
<text  x="108.76" y="591.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (5 samples, 0.09%)</title><rect x="1057.3" y="613" width="1.1" height="15.0" fill="rgb(213,188,48)" rx="2" ry="2" />
<text  x="1060.32" y="623.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="500.2" y="485" width="0.2" height="15.0" fill="rgb(215,29,26)" rx="2" ry="2" />
<text  x="503.21" y="495.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;managed_bytes&gt;::allocate (1 samples, 0.02%)</title><rect x="919.1" y="629" width="0.2" height="15.0" fill="rgb(205,26,19)" rx="2" ry="2" />
<text  x="922.05" y="639.5" ></text>
</g>
<g >
<title>bplus::searcher&lt;dht::ring_position, long, dht::raw_token_less_comparator, 16ul,  (7 samples, 0.13%)</title><rect x="545.0" y="581" width="1.5" height="15.0" fill="rgb(207,126,41)" rx="2" ry="2" />
<text  x="547.96" y="591.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::vector (19 samples, 0.36%)</title><rect x="156.1" y="725" width="4.3" height="15.0" fill="rgb(231,111,40)" rx="2" ry="2" />
<text  x="159.10" y="735.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value_view, std::allocator&lt;cql3::raw_value_view&gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="682.6" y="773" width="0.2" height="15.0" fill="rgb(233,74,46)" rx="2" ry="2" />
<text  x="685.56" y="783.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;11ul, cql3::expr::untyped_constant&gt; (1 samples, 0.02%)</title><rect x="53.4" y="501" width="0.2" height="15.0" fill="rgb(213,20,32)" rx="2" ry="2" />
<text  x="56.41" y="511.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_d36847801b836ea118d696d8a8ab9431a1179ab0] (1 samples, 0.02%)</title><rect x="1051.5" y="565" width="0.2" height="15.0" fill="rgb(236,23,54)" rx="2" ry="2" />
<text  x="1054.51" y="575.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;bool  (1 samples, 0.02%)</title><rect x="85.4" y="805" width="0.2" height="15.0" fill="rgb(228,38,54)" rx="2" ry="2" />
<text  x="88.40" y="815.5" ></text>
</g>
<g >
<title>partition_key::from_range&lt;std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt; const&amp;&gt; (2 samples, 0.04%)</title><rect x="872.1" y="645" width="0.4" height="15.0" fill="rgb(220,71,31)" rx="2" ry="2" />
<text  x="875.07" y="655.5" ></text>
</g>
<g >
<title>sstables::sstable::write_scylla_metadata (1 samples, 0.02%)</title><rect x="10.4" y="773" width="0.3" height="15.0" fill="rgb(239,29,36)" rx="2" ry="2" />
<text  x="13.45" y="783.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser&lt;std::_Mem_fn&lt;std::unique_ptr&lt;cql3::statements::raw::parsed_statement, std::default_delete&lt;cql3::statements::raw::parsed_statement&gt; &gt;  (211 samples, 4.00%)</title><rect x="19.4" y="757" width="47.2" height="15.0" fill="rgb(224,185,40)" rx="2" ry="2" />
<text  x="22.40" y="767.5" >cql3..</text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (2 samples, 0.04%)</title><rect x="40.4" y="613" width="0.5" height="15.0" fill="rgb(227,142,28)" rx="2" ry="2" />
<text  x="43.43" y="623.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="45.4" y="517" width="0.2" height="15.0" fill="rgb(220,7,9)" rx="2" ry="2" />
<text  x="48.35" y="527.5" ></text>
</g>
<g >
<title>reader_permit::mark_unused (1 samples, 0.02%)</title><rect x="127.5" y="757" width="0.2" height="15.0" fill="rgb(253,57,45)" rx="2" ry="2" />
<text  x="130.46" y="767.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.02%)</title><rect x="23.2" y="485" width="0.2" height="15.0" fill="rgb(234,112,40)" rx="2" ry="2" />
<text  x="26.20" y="495.5" ></text>
</g>
<g >
<title>bplus::tree&lt;long, intrusive_array&lt;cache_entry&gt;, dht::raw_token_less_comparator, 16ul,  (9 samples, 0.17%)</title><rect x="544.7" y="597" width="2.1" height="15.0" fill="rgb(250,103,22)" rx="2" ry="2" />
<text  x="547.74" y="607.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (1 samples, 0.02%)</title><rect x="659.3" y="773" width="0.2" height="15.0" fill="rgb(216,224,37)" rx="2" ry="2" />
<text  x="662.29" y="783.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (2 samples, 0.04%)</title><rect x="869.2" y="741" width="0.4" height="15.0" fill="rgb(220,201,41)" rx="2" ry="2" />
<text  x="872.16" y="751.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (336 samples, 6.37%)</title><rect x="346.1" y="533" width="75.1" height="15.0" fill="rgb(244,43,48)" rx="2" ry="2" />
<text  x="349.06" y="543.5" >compact_..</text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (3 samples, 0.06%)</title><rect x="1021.5" y="469" width="0.7" height="15.0" fill="rgb(248,125,0)" rx="2" ry="2" />
<text  x="1024.52" y="479.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.02%)</title><rect x="51.8" y="389" width="0.3" height="15.0" fill="rgb(242,172,25)" rx="2" ry="2" />
<text  x="54.84" y="399.5" ></text>
</g>
<g >
<title>logalloc::region_impl::alloc_small (1 samples, 0.02%)</title><rect x="1126.5" y="469" width="0.2" height="15.0" fill="rgb(247,132,46)" rx="2" ry="2" />
<text  x="1129.46" y="479.5" ></text>
</g>
<g >
<title>database::apply_with_commitlog (32 samples, 0.61%)</title><rect x="1122.9" y="629" width="7.1" height="15.0" fill="rgb(208,38,17)" rx="2" ry="2" />
<text  x="1125.88" y="639.5" ></text>
</g>
<g >
<title>reader_permit::signal (1 samples, 0.02%)</title><rect x="318.5" y="613" width="0.3" height="15.0" fill="rgb(217,165,27)" rx="2" ry="2" />
<text  x="321.54" y="623.5" ></text>
</g>
<g >
<title>seastar::internal::io_getevents (1 samples, 0.02%)</title><rect x="1140.6" y="789" width="0.2" height="15.0" fill="rgb(242,128,20)" rx="2" ry="2" />
<text  x="1143.55" y="799.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="16.5" y="469" width="0.2" height="15.0" fill="rgb(213,131,16)" rx="2" ry="2" />
<text  x="19.49" y="479.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (2 samples, 0.04%)</title><rect x="738.5" y="597" width="0.4" height="15.0" fill="rgb(206,158,3)" rx="2" ry="2" />
<text  x="741.49" y="607.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, sstables::remove_by_toc_name (1 samples, 0.02%)</title><rect x="720.6" y="805" width="0.2" height="15.0" fill="rgb(254,140,35)" rx="2" ry="2" />
<text  x="723.60" y="815.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::do_refresh_state (48 samples, 0.91%)</title><rect x="279.2" y="533" width="10.7" height="15.0" fill="rgb(232,39,52)" rx="2" ry="2" />
<text  x="282.16" y="543.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::clear (1 samples, 0.02%)</title><rect x="108.0" y="613" width="0.2" height="15.0" fill="rgb(208,65,5)" rx="2" ry="2" />
<text  x="111.00" y="623.5" ></text>
</g>
<g >
<title>sstables::mc::writer::consume (3 samples, 0.06%)</title><rect x="81.1" y="757" width="0.7" height="15.0" fill="rgb(219,171,1)" rx="2" ry="2" />
<text  x="84.15" y="767.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_wrapped_nrvo&lt;seastar::future&lt;void&gt;, service::storage_proxy::mutate_internal&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="1133.2" y="597" width="0.2" height="15.0" fill="rgb(218,42,19)" rx="2" ry="2" />
<text  x="1136.17" y="607.5" ></text>
</g>
<g >
<title>logalloc::segment::record_alloc (1 samples, 0.02%)</title><rect x="1124.0" y="373" width="0.2" height="15.0" fill="rgb(233,41,24)" rx="2" ry="2" />
<text  x="1127.00" y="383.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.02%)</title><rect x="78.5" y="805" width="0.2" height="15.0" fill="rgb(219,106,29)" rx="2" ry="2" />
<text  x="81.46" y="815.5" ></text>
</g>
<g >
<title>cql3::relation::get_operator (1 samples, 0.02%)</title><rect x="68.6" y="709" width="0.2" height="15.0" fill="rgb(216,97,51)" rx="2" ry="2" />
<text  x="71.62" y="719.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="695.3" y="613" width="0.2" height="15.0" fill="rgb(212,187,37)" rx="2" ry="2" />
<text  x="698.31" y="623.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (5 samples, 0.09%)</title><rect x="43.3" y="533" width="1.2" height="15.0" fill="rgb(245,29,41)" rx="2" ry="2" />
<text  x="46.34" y="543.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_erase_at_end (6 samples, 0.11%)</title><rect x="403.6" y="485" width="1.3" height="15.0" fill="rgb(227,3,24)" rx="2" ry="2" />
<text  x="406.56" y="495.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::raw::parsed_statement, std::default_delete&lt;cql3::statements::raw::parsed_statement&gt; &gt;::get (1 samples, 0.02%)</title><rect x="63.5" y="677" width="0.2" height="15.0" fill="rgb(251,50,27)" rx="2" ry="2" />
<text  x="66.47" y="687.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.02%)</title><rect x="10.4" y="885" width="0.3" height="15.0" fill="rgb(254,5,28)" rx="2" ry="2" />
<text  x="13.45" y="895.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.02%)</title><rect x="46.0" y="453" width="0.2" height="15.0" fill="rgb(208,208,18)" rx="2" ry="2" />
<text  x="49.02" y="463.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::forward_to (2 samples, 0.04%)</title><rect x="1139.4" y="789" width="0.5" height="15.0" fill="rgb(222,83,7)" rx="2" ry="2" />
<text  x="1142.43" y="799.5" ></text>
</g>
<g >
<title>cql3::authorized_prepared_statements_cache_key::hash (22 samples, 0.42%)</title><rect x="755.7" y="629" width="4.9" height="15.0" fill="rgb(253,177,30)" rx="2" ry="2" />
<text  x="758.72" y="639.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (24 samples, 0.46%)</title><rect x="297.3" y="597" width="5.4" height="15.0" fill="rgb(232,36,31)" rx="2" ry="2" />
<text  x="300.28" y="607.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.02%)</title><rect x="14.5" y="853" width="0.2" height="15.0" fill="rgb(240,26,43)" rx="2" ry="2" />
<text  x="17.47" y="863.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::set_value&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; (1 samples, 0.02%)</title><rect x="138.4" y="757" width="0.2" height="15.0" fill="rgb(233,84,36)" rx="2" ry="2" />
<text  x="141.43" y="767.5" ></text>
</g>
<g >
<title>allocation_strategy::construct&lt;rows_entry, schema const&amp;, position_in_partition_view&amp;, seastar::bool_class&lt;dummy_tag&gt;&amp;, seastar::bool_class&lt;continuous_tag&gt;&amp;&gt; (3 samples, 0.06%)</title><rect x="1126.5" y="501" width="0.6" height="15.0" fill="rgb(232,168,12)" rx="2" ry="2" />
<text  x="1129.46" y="511.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;void&gt;  (1 samples, 0.02%)</title><rect x="16.5" y="709" width="0.2" height="15.0" fill="rgb(251,53,7)" rx="2" ry="2" />
<text  x="19.49" y="719.5" ></text>
</g>
<g >
<title>seastar::smp::poll_queues (1 samples, 0.02%)</title><rect x="1169.9" y="805" width="0.2" height="15.0" fill="rgb(249,227,10)" rx="2" ry="2" />
<text  x="1172.86" y="815.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::~disable_abort_on_alloc_failure_temporarily (2 samples, 0.04%)</title><rect x="293.7" y="517" width="0.4" height="15.0" fill="rgb(241,13,50)" rx="2" ry="2" />
<text  x="296.70" y="527.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (3 samples, 0.06%)</title><rect x="103.1" y="789" width="0.6" height="15.0" fill="rgb(253,153,5)" rx="2" ry="2" />
<text  x="106.08" y="799.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reserve&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::partition_snapshot_flat_reader&lt;memtable&amp;&gt; (1 samples, 0.02%)</title><rect x="512.3" y="597" width="0.2" height="15.0" fill="rgb(235,164,50)" rx="2" ry="2" />
<text  x="515.29" y="607.5" ></text>
</g>
<g >
<title>do_query_on_all_shards&lt;(anonymous namespace)::mutation_query_result_builder&gt; (2 samples, 0.04%)</title><rect x="106.7" y="645" width="0.4" height="15.0" fill="rgb(236,172,10)" rx="2" ry="2" />
<text  x="109.66" y="655.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (4 samples, 0.08%)</title><rect x="1031.6" y="485" width="0.9" height="15.0" fill="rgb(243,96,17)" rx="2" ry="2" />
<text  x="1034.59" y="495.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="81.8" y="885" width="0.2" height="15.0" fill="rgb(211,69,5)" rx="2" ry="2" />
<text  x="84.82" y="895.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt;  (5 samples, 0.09%)</title><rect x="15.4" y="869" width="1.1" height="15.0" fill="rgb(212,204,18)" rx="2" ry="2" />
<text  x="18.37" y="879.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (2 samples, 0.04%)</title><rect x="311.2" y="629" width="0.4" height="15.0" fill="rgb(224,0,46)" rx="2" ry="2" />
<text  x="314.15" y="639.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;std::_List_iterator&lt;flat_mutation_reader&gt;, mutation_reader_merger::close (3 samples, 0.06%)</title><rect x="588.4" y="677" width="0.6" height="15.0" fill="rgb(246,222,11)" rx="2" ry="2" />
<text  x="591.37" y="687.5" ></text>
</g>
<g >
<title>utils::tuple_hash::hash_impl&lt;2ul, auth::resource_kind, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (4 samples, 0.08%)</title><rect x="809.6" y="421" width="0.9" height="15.0" fill="rgb(215,16,28)" rx="2" ry="2" />
<text  x="812.64" y="431.5" ></text>
</g>
<g >
<title>std::hash&lt;auth::resource&gt;::operator (7 samples, 0.13%)</title><rect x="822.4" y="645" width="1.6" height="15.0" fill="rgb(214,37,34)" rx="2" ry="2" />
<text  x="825.40" y="655.5" ></text>
</g>
<g >
<title>seastar::task_quota_aio_completion::complete_with (1 samples, 0.02%)</title><rect x="1142.1" y="805" width="0.2" height="15.0" fill="rgb(237,110,14)" rx="2" ry="2" />
<text  x="1145.12" y="815.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::do_get_limit (1 samples, 0.02%)</title><rect x="1096.5" y="709" width="0.2" height="15.0" fill="rgb(216,169,12)" rx="2" ry="2" />
<text  x="1099.48" y="719.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (1 samples, 0.02%)</title><rect x="1044.8" y="581" width="0.2" height="15.0" fill="rgb(237,107,20)" rx="2" ry="2" />
<text  x="1047.79" y="591.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.02%)</title><rect x="40.4" y="533" width="0.3" height="15.0" fill="rgb(213,8,5)" rx="2" ry="2" />
<text  x="43.43" y="543.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::move_it (12 samples, 0.23%)</title><rect x="685.7" y="789" width="2.7" height="15.0" fill="rgb(226,151,40)" rx="2" ry="2" />
<text  x="688.69" y="799.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::restrictions::single_column_restrictions&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="652.1" y="741" width="0.3" height="15.0" fill="rgb(228,214,40)" rx="2" ry="2" />
<text  x="655.13" y="751.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="707.2" y="773" width="0.2" height="15.0" fill="rgb(234,167,45)" rx="2" ry="2" />
<text  x="710.17" y="783.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (5 samples, 0.09%)</title><rect x="202.0" y="565" width="1.1" height="15.0" fill="rgb(240,77,22)" rx="2" ry="2" />
<text  x="204.97" y="575.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::set&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt; (2 samples, 0.04%)</title><rect x="701.1" y="741" width="0.5" height="15.0" fill="rgb(214,126,29)" rx="2" ry="2" />
<text  x="704.13" y="751.5" ></text>
</g>
<g >
<title>std::vector&lt;seastar::shared_ptr&lt;cql3::relation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::relation&gt; &gt; &gt;::_M_realloc_insert&lt;seastar::shared_ptr&lt;cql3::single_column_relation&gt; &gt; (1 samples, 0.02%)</title><rect x="59.9" y="613" width="0.2" height="15.0" fill="rgb(206,229,27)" rx="2" ry="2" />
<text  x="62.89" y="623.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::vector (1 samples, 0.02%)</title><rect x="1119.1" y="725" width="0.2" height="15.0" fill="rgb(226,69,15)" rx="2" ry="2" />
<text  x="1122.07" y="735.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.04%)</title><rect x="512.5" y="597" width="0.5" height="15.0" fill="rgb(211,140,28)" rx="2" ry="2" />
<text  x="515.52" y="607.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (2 samples, 0.04%)</title><rect x="1095.1" y="693" width="0.5" height="15.0" fill="rgb(207,110,42)" rx="2" ry="2" />
<text  x="1098.13" y="703.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (1 samples, 0.02%)</title><rect x="1046.6" y="629" width="0.2" height="15.0" fill="rgb(236,53,27)" rx="2" ry="2" />
<text  x="1049.58" y="639.5" ></text>
</g>
<g >
<title>std::optional&lt;dht::decorated_key&gt;::emplace&lt;dht::decorated_key&gt; (1 samples, 0.02%)</title><rect x="422.6" y="533" width="0.2" height="15.0" fill="rgb(215,84,1)" rx="2" ry="2" />
<text  x="425.57" y="543.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.02%)</title><rect x="16.7" y="789" width="0.2" height="15.0" fill="rgb(219,55,37)" rx="2" ry="2" />
<text  x="19.71" y="799.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;clustering_key_prefix&gt;::_M_reset (1 samples, 0.02%)</title><rect x="295.7" y="565" width="0.2" height="15.0" fill="rgb(224,211,19)" rx="2" ry="2" />
<text  x="298.71" y="575.5" ></text>
</g>
<g >
<title>table::stop (2 samples, 0.04%)</title><rect x="695.3" y="757" width="0.5" height="15.0" fill="rgb(249,86,27)" rx="2" ry="2" />
<text  x="698.31" y="767.5" ></text>
</g>
<g >
<title>service::abstract_write_response_handler::response (1 samples, 0.02%)</title><rect x="719.7" y="773" width="0.2" height="15.0" fill="rgb(229,79,4)" rx="2" ry="2" />
<text  x="722.70" y="783.5" ></text>
</g>
<g >
<title>__tls_init (1 samples, 0.02%)</title><rect x="516.5" y="533" width="0.3" height="15.0" fill="rgb(251,146,5)" rx="2" ry="2" />
<text  x="519.55" y="543.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;clustering_key_prefix&gt;::wrapping_interval (1 samples, 0.02%)</title><rect x="1100.7" y="661" width="0.3" height="15.0" fill="rgb(244,229,38)" rx="2" ry="2" />
<text  x="1103.73" y="671.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;10ul, cql3::expr::untyped_constant&gt; (1 samples, 0.02%)</title><rect x="53.4" y="405" width="0.2" height="15.0" fill="rgb(247,148,50)" rx="2" ry="2" />
<text  x="56.41" y="415.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (3 samples, 0.06%)</title><rect x="76.5" y="565" width="0.6" height="15.0" fill="rgb(251,219,9)" rx="2" ry="2" />
<text  x="79.45" y="575.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_last_fragment_kind, 4ul&gt;::emplace_back&lt;std::_List_iterator&lt;flat_mutation_reader&gt;, mutation_fragment::kind&gt; (2 samples, 0.04%)</title><rect x="464.4" y="565" width="0.5" height="15.0" fill="rgb(238,182,18)" rx="2" ry="2" />
<text  x="467.41" y="575.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, query::querier&lt; (1 samples, 0.02%)</title><rect x="695.1" y="789" width="0.2" height="15.0" fill="rgb(208,40,27)" rx="2" ry="2" />
<text  x="698.09" y="799.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::fetch (1 samples, 0.02%)</title><rect x="106.7" y="437" width="0.2" height="15.0" fill="rgb(230,191,33)" rx="2" ry="2" />
<text  x="109.66" y="447.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::clear (2 samples, 0.04%)</title><rect x="1146.8" y="789" width="0.5" height="15.0" fill="rgb(227,151,24)" rx="2" ry="2" />
<text  x="1149.82" y="799.5" ></text>
</g>
<g >
<title>utils::tuple_hash::hash_impl&lt;1ul, auth::resource_kind, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (2 samples, 0.04%)</title><rect x="810.1" y="405" width="0.4" height="15.0" fill="rgb(222,7,39)" rx="2" ry="2" />
<text  x="813.09" y="415.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (3 samples, 0.06%)</title><rect x="111.1" y="789" width="0.7" height="15.0" fill="rgb(238,71,44)" rx="2" ry="2" />
<text  x="114.13" y="799.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (2 samples, 0.04%)</title><rect x="832.0" y="597" width="0.5" height="15.0" fill="rgb(237,32,10)" rx="2" ry="2" />
<text  x="835.02" y="607.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_M_set_node (2 samples, 0.04%)</title><rect x="43.8" y="437" width="0.4" height="15.0" fill="rgb(205,166,18)" rx="2" ry="2" />
<text  x="46.78" y="447.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;clustering_key_prefix&gt;::_M_reset (1 samples, 0.02%)</title><rect x="443.4" y="661" width="0.2" height="15.0" fill="rgb(209,102,46)" rx="2" ry="2" />
<text  x="446.38" y="671.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.02%)</title><rect x="20.1" y="693" width="0.2" height="15.0" fill="rgb(239,200,41)" rx="2" ry="2" />
<text  x="23.07" y="703.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (3 samples, 0.06%)</title><rect x="704.0" y="773" width="0.7" height="15.0" fill="rgb(252,188,21)" rx="2" ry="2" />
<text  x="707.04" y="783.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.02%)</title><rect x="225.9" y="437" width="0.2" height="15.0" fill="rgb(232,123,1)" rx="2" ry="2" />
<text  x="228.91" y="447.5" ></text>
</g>
<g >
<title>__libc_start_main (4,858 samples, 92.11%)</title><rect x="83.4" y="933" width="1086.9" height="15.0" fill="rgb(211,20,14)" rx="2" ry="2" />
<text  x="86.39" y="943.5" >__libc_start_main</text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::set_failed (1 samples, 0.02%)</title><rect x="25.2" y="581" width="0.2" height="15.0" fill="rgb(248,3,27)" rx="2" ry="2" />
<text  x="28.21" y="591.5" ></text>
</g>
<g >
<title>make_combined_reader (1 samples, 0.02%)</title><rect x="449.2" y="661" width="0.2" height="15.0" fill="rgb(231,3,41)" rx="2" ry="2" />
<text  x="452.20" y="671.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::move_it (2 samples, 0.04%)</title><rect x="675.4" y="773" width="0.4" height="15.0" fill="rgb(240,90,12)" rx="2" ry="2" />
<text  x="678.40" y="783.5" ></text>
</g>
<g >
<title>antlr3::IntStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::consume (1 samples, 0.02%)</title><rect x="30.8" y="549" width="0.2" height="15.0" fill="rgb(254,110,2)" rx="2" ry="2" />
<text  x="33.81" y="559.5" ></text>
</g>
<g >
<title>locator::token_metadata::tokens_iterator::operator== (1 samples, 0.02%)</title><rect x="108.7" y="773" width="0.2" height="15.0" fill="rgb(254,155,15)" rx="2" ry="2" />
<text  x="111.67" y="783.5" ></text>
</g>
<g >
<title>cql3::restrictions::partition_key_restrictions::needs_filtering (1 samples, 0.02%)</title><rect x="891.3" y="725" width="0.2" height="15.0" fill="rgb(251,112,7)" rx="2" ry="2" />
<text  x="894.31" y="735.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_clear (4 samples, 0.08%)</title><rect x="599.3" y="677" width="0.9" height="15.0" fill="rgb(220,49,40)" rx="2" ry="2" />
<text  x="602.33" y="687.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::find (1 samples, 0.02%)</title><rect x="657.9" y="757" width="0.3" height="15.0" fill="rgb(250,190,51)" rx="2" ry="2" />
<text  x="660.95" y="767.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (7 samples, 0.13%)</title><rect x="845.2" y="709" width="1.6" height="15.0" fill="rgb(252,67,9)" rx="2" ry="2" />
<text  x="848.22" y="719.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (2 samples, 0.04%)</title><rect x="213.4" y="485" width="0.4" height="15.0" fill="rgb(217,70,10)" rx="2" ry="2" />
<text  x="216.38" y="495.5" ></text>
</g>
<g >
<title>db::schema_tables::read_tables_for_keyspaces (1 samples, 0.02%)</title><rect x="107.3" y="805" width="0.3" height="15.0" fill="rgb(232,72,20)" rx="2" ry="2" />
<text  x="110.33" y="815.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (3 samples, 0.06%)</title><rect x="689.9" y="741" width="0.7" height="15.0" fill="rgb(236,156,12)" rx="2" ry="2" />
<text  x="692.94" y="751.5" ></text>
</g>
<g >
<title>seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::expand (8 samples, 0.15%)</title><rect x="208.7" y="517" width="1.8" height="15.0" fill="rgb(247,209,18)" rx="2" ry="2" />
<text  x="211.68" y="527.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::visit&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (1 samples, 0.02%)</title><rect x="695.5" y="437" width="0.3" height="15.0" fill="rgb(228,60,15)" rx="2" ry="2" />
<text  x="698.54" y="447.5" ></text>
</g>
<g >
<title>seastar::reactor::service_highres_timer (3 samples, 0.06%)</title><rect x="1169.2" y="757" width="0.7" height="15.0" fill="rgb(250,92,16)" rx="2" ry="2" />
<text  x="1172.19" y="767.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::push_back (12 samples, 0.23%)</title><rect x="22.3" y="581" width="2.7" height="15.0" fill="rgb(208,1,0)" rx="2" ry="2" />
<text  x="25.31" y="591.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume_in_thread&lt;sstables::sstable_writer&gt; (1 samples, 0.02%)</title><rect x="15.1" y="869" width="0.3" height="15.0" fill="rgb(239,205,21)" rx="2" ry="2" />
<text  x="18.15" y="879.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (2 samples, 0.04%)</title><rect x="20.3" y="661" width="0.4" height="15.0" fill="rgb(234,41,2)" rx="2" ry="2" />
<text  x="23.29" y="671.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_prepared (79 samples, 1.50%)</title><rect x="744.3" y="725" width="17.7" height="15.0" fill="rgb(228,22,48)" rx="2" ry="2" />
<text  x="747.31" y="735.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.02%)</title><rect x="40.7" y="501" width="0.2" height="15.0" fill="rgb(209,147,23)" rx="2" ry="2" />
<text  x="43.65" y="511.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::guard (1 samples, 0.02%)</title><rect x="542.5" y="629" width="0.2" height="15.0" fill="rgb(218,152,18)" rx="2" ry="2" />
<text  x="545.50" y="639.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::digest_read_result&gt;::set&lt;service::digest_read_result&gt; (1 samples, 0.02%)</title><rect x="713.0" y="709" width="0.2" height="15.0" fill="rgb(227,131,9)" rx="2" ry="2" />
<text  x="715.99" y="719.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_state&lt;std::tuple&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (6 samples, 0.11%)</title><rect x="334.6" y="597" width="1.4" height="15.0" fill="rgb(218,125,30)" rx="2" ry="2" />
<text  x="337.65" y="607.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureIN5utils15timestamped_valINS_11checked_ptrINS_8weak_ptrIN4cql310statements18prepared_statementEEENS_25default_null_deref_actionEEENS5_40authorized_prepared_statements_cache_keyENS5_41authorized_prepared_statements_cache_sizeESt4hashISB_ESt8equal_toISB_ENS5_36authorized_prepared_statements_cache50authorized_prepared_statements_cache_stats_updaterEE9value_ptrEE9then_implIZNSL_14discard_resultEvEUlDpOT_E_NS0_IvEEEET0_OT_ (1 samples, 0.02%)</title><rect x="746.3" y="693" width="0.2" height="15.0" fill="rgb(239,154,17)" rx="2" ry="2" />
<text  x="749.33" y="703.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (2 samples, 0.04%)</title><rect x="341.6" y="565" width="0.4" height="15.0" fill="rgb(250,34,53)" rx="2" ry="2" />
<text  x="344.58" y="575.5" ></text>
</g>
<g >
<title>bplus::data&lt;long, intrusive_array&lt;memtable_entry&gt;, dht::raw_token_less_comparator, 16ul,  (2 samples, 0.04%)</title><rect x="14.7" y="853" width="0.4" height="15.0" fill="rgb(224,63,29)" rx="2" ry="2" />
<text  x="17.70" y="863.5" ></text>
</g>
<g >
<title>allocation_strategy::get_standard_migrator&lt;blob_storage&gt; (1 samples, 0.02%)</title><rect x="241.6" y="373" width="0.2" height="15.0" fill="rgb(213,192,2)" rx="2" ry="2" />
<text  x="244.57" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::~disable_abort_on_alloc_failure_temporarily (1 samples, 0.02%)</title><rect x="268.9" y="501" width="0.2" height="15.0" fill="rgb(205,188,13)" rx="2" ry="2" />
<text  x="271.87" y="511.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.02%)</title><rect x="40.7" y="565" width="0.2" height="15.0" fill="rgb(219,111,19)" rx="2" ry="2" />
<text  x="43.65" y="575.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="59.4" y="517" width="0.3" height="15.0" fill="rgb(214,178,38)" rx="2" ry="2" />
<text  x="62.45" y="527.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_create_nodes (8 samples, 0.15%)</title><rect x="564.4" y="661" width="1.8" height="15.0" fill="rgb(205,73,14)" rx="2" ry="2" />
<text  x="567.43" y="671.5" ></text>
</g>
<g >
<title>seastar::reactor::run_some_tasks (4,838 samples, 91.73%)</title><rect x="86.1" y="821" width="1082.4" height="15.0" fill="rgb(209,144,11)" rx="2" ry="2" />
<text  x="89.07" y="831.5" >seastar::reactor::run_some_tasks</text>
</g>
<g >
<title>std::__equal&lt;true&gt;::equal&lt;char&gt; (1 samples, 0.02%)</title><rect x="807.0" y="437" width="0.2" height="15.0" fill="rgb(236,195,28)" rx="2" ry="2" />
<text  x="809.96" y="447.5" ></text>
</g>
</g>
</svg>
