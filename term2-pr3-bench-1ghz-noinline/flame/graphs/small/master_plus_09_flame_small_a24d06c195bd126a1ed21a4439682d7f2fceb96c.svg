<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="2134" onload="init(evt)" viewBox="0 0 1200 2134" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="2134.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="2117" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="2117" > </text>
<g id="frames">
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::execute (1 samples, 0.02%)</title><rect x="85.3" y="1941" width="0.2" height="15.0" fill="rgb(251,121,10)" rx="2" ry="2" />
<text  x="88.30" y="1951.5" ></text>
</g>
<g >
<title>partition_key::legacy_tri_compare (33 samples, 0.63%)</title><rect x="506.7" y="1685" width="7.3" height="15.0" fill="rgb(222,152,3)" rx="2" ry="2" />
<text  x="509.65" y="1695.5" ></text>
</g>
<g >
<title>do_query_on_all_shards&lt;(anonymous namespace)::mutation_query_result_builder&gt; (3 samples, 0.06%)</title><rect x="107.5" y="1765" width="0.7" height="15.0" fill="rgb(254,174,46)" rx="2" ry="2" />
<text  x="110.49" y="1775.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql_transport::messages::result_message::rows&gt;::~shared_ptr_count_for (27 samples, 0.51%)</title><rect x="97.4" y="1909" width="6.1" height="15.0" fill="rgb(237,34,51)" rx="2" ry="2" />
<text  x="100.41" y="1919.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.02%)</title><rect x="1186.2" y="325" width="0.2" height="15.0" fill="rgb(243,103,20)" rx="2" ry="2" />
<text  x="1189.19" y="335.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::check_local_limit (2 samples, 0.04%)</title><rect x="339.9" y="1621" width="0.5" height="15.0" fill="rgb(215,19,30)" rx="2" ry="2" />
<text  x="342.91" y="1631.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (2 samples, 0.04%)</title><rect x="34.0" y="1669" width="0.4" height="15.0" fill="rgb(241,6,6)" rx="2" ry="2" />
<text  x="36.98" y="1679.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;query::result_digest, 3ul&gt;::emplace_back&lt;query::result_digest const&gt; (2 samples, 0.04%)</title><rect x="710.2" y="1861" width="0.4" height="15.0" fill="rgb(206,161,11)" rx="2" ry="2" />
<text  x="713.16" y="1871.5" ></text>
</g>
<g >
<title>basic_atomic_cell_view&lt; (1 samples, 0.02%)</title><rect x="687.3" y="1669" width="0.2" height="15.0" fill="rgb(215,193,43)" rx="2" ry="2" />
<text  x="690.30" y="1679.5" ></text>
</g>
<g >
<title>seastar::future&lt;query::result_memory_accounter&gt;::get0 (3 samples, 0.06%)</title><rect x="137.5" y="1877" width="0.7" height="15.0" fill="rgb(233,152,32)" rx="2" ry="2" />
<text  x="140.53" y="1887.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_insert&lt;flat_mutation_reader&gt; (12 samples, 0.23%)</title><rect x="470.6" y="1685" width="2.7" height="15.0" fill="rgb(254,118,42)" rx="2" ry="2" />
<text  x="473.57" y="1695.5" ></text>
</g>
<g >
<title>row::compact_and_expire (2 samples, 0.04%)</title><rect x="687.1" y="1717" width="0.4" height="15.0" fill="rgb(240,51,22)" rx="2" ry="2" />
<text  x="690.07" y="1727.5" ></text>
</g>
<g >
<title>antlr3::IntStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::_LA (1 samples, 0.02%)</title><rect x="42.3" y="1669" width="0.2" height="15.0" fill="rgb(210,128,1)" rx="2" ry="2" />
<text  x="45.27" y="1679.5" ></text>
</g>
<g >
<title>cql3::prepare_context::get_partition_key_bind_indexes (1 samples, 0.02%)</title><rect x="68.9" y="1877" width="0.3" height="15.0" fill="rgb(239,185,39)" rx="2" ry="2" />
<text  x="71.94" y="1887.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (2 samples, 0.04%)</title><rect x="1141.1" y="1909" width="0.5" height="15.0" fill="rgb(231,35,23)" rx="2" ry="2" />
<text  x="1144.14" y="1919.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (3 samples, 0.06%)</title><rect x="785.2" y="1589" width="0.7" height="15.0" fill="rgb(240,6,53)" rx="2" ry="2" />
<text  x="788.24" y="1599.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIN7seastar10shared_ptrIN4cql34termEEEEER18overloaded_functorIJZNS6_4expr12prepare_termERKNSB_10expressionER8databaseRKNS4_13basic_sstringIcjLj15ELb1EEENS4_13lw_shared_ptrINS6_20column_specificationEEEE3$_0ZNSB_12prepare_termESE_SG_SK_SN_E3$_1ZNSB_12prepare_termESE_SG_SK_SN_E3$_2ZNSB_12prepare_termESE_SG_SK_SN_E3$_3ZNSB_12prepare_termESE_SG_SK_SN_E3$_4ZNSB_12prepare_termESE_SG_SK_SN_E3$_5ZNSB_12prepare_termESE_SG_SK_SN_E3$_6ZNSB_12prepare_termESE_SG_SK_SN_E3$_7ZNSB_12prepare_termESE_SG_SK_SN_E3$_8ZNSB_12prepare_termESE_SG_SK_SN_E3$_9ZNSB_12prepare_termESE_SG_SK_SN_E4$_10ZNSB_12prepare_termESE_SG_SK_SN_E4$_11ZNSB_12prepare_termESE_SG_SK_SN_E4$_12ZNSB_12prepare_termESE_SG_SK_SN_E4$_13ZNSB_12prepare_termESE_SG_SK_SN_E4$_14ZNSB_12prepare_termESE_SG_SK_SN_E4$_15EERSt7variantIJNSB_11conjunctionENSB_15binary_operatorENSB_12column_valueENSB_5tokenENSB_21unresolved_identifierENSB_25column_mutation_attributeENSB_13function_callENSB_4castENSB_15field_selectionENSB_4nullENSB_13bind_variableENSB_16untyped_constantENSB_8constantENSB_17tuple_constructorENSB_22collection_constructorENSB_20usertype_constructorEEEEJEEESt16integer_sequenceImJLm11EEEE14__visit_invokeES15_S1O_ (2 samples, 0.04%)</title><rect x="73.2" y="1749" width="0.5" height="15.0" fill="rgb(212,75,10)" rx="2" ry="2" />
<text  x="76.20" y="1759.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.08%)</title><rect x="517.6" y="1701" width="0.9" height="15.0" fill="rgb(225,138,38)" rx="2" ry="2" />
<text  x="520.64" y="1711.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (3 samples, 0.06%)</title><rect x="1007.8" y="1637" width="0.7" height="15.0" fill="rgb(253,88,38)" rx="2" ry="2" />
<text  x="1010.79" y="1647.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::leaf_node::free (1 samples, 0.02%)</title><rect x="430.9" y="1653" width="0.2" height="15.0" fill="rgb(240,173,4)" rx="2" ry="2" />
<text  x="433.90" y="1663.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (31 samples, 0.59%)</title><rect x="1115.1" y="1813" width="7.0" height="15.0" fill="rgb(212,174,20)" rx="2" ry="2" />
<text  x="1118.14" y="1823.5" ></text>
</g>
<g >
<title>ser::integral_serializer&lt;unsigned int&gt;::read&lt;seastar::simple_memory_input_stream&gt; (1 samples, 0.02%)</title><rect x="1115.6" y="1589" width="0.2" height="15.0" fill="rgb(219,171,11)" rx="2" ry="2" />
<text  x="1118.59" y="1599.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (2 samples, 0.04%)</title><rect x="53.3" y="1541" width="0.4" height="15.0" fill="rgb(247,156,42)" rx="2" ry="2" />
<text  x="56.26" y="1551.5" ></text>
</g>
<g >
<title>std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt;::_M_realloc_insert&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; (11 samples, 0.21%)</title><rect x="286.1" y="1621" width="2.5" height="15.0" fill="rgb(235,111,45)" rx="2" ry="2" />
<text  x="289.12" y="1631.5" ></text>
</g>
<g >
<title>seastar::do_recursive_touch_directory (1 samples, 0.02%)</title><rect x="688.6" y="1909" width="0.3" height="15.0" fill="rgb(207,98,54)" rx="2" ry="2" />
<text  x="691.64" y="1919.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (5 samples, 0.09%)</title><rect x="685.3" y="1909" width="1.1" height="15.0" fill="rgb(211,181,30)" rx="2" ry="2" />
<text  x="688.28" y="1919.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::deallocate (1 samples, 0.02%)</title><rect x="533.8" y="1669" width="0.2" height="15.0" fill="rgb(223,20,8)" rx="2" ry="2" />
<text  x="536.77" y="1679.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (14 samples, 0.27%)</title><rect x="1186.2" y="613" width="3.1" height="15.0" fill="rgb(234,36,42)" rx="2" ry="2" />
<text  x="1189.19" y="623.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::digest_read_resolver (19 samples, 0.36%)</title><rect x="977.3" y="1733" width="4.3" height="15.0" fill="rgb(249,56,27)" rx="2" ry="2" />
<text  x="980.31" y="1743.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::unique_ptr (1 samples, 0.02%)</title><rect x="62.2" y="1685" width="0.2" height="15.0" fill="rgb(221,206,29)" rx="2" ry="2" />
<text  x="65.22" y="1695.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (2 samples, 0.04%)</title><rect x="60.0" y="1621" width="0.4" height="15.0" fill="rgb(241,84,1)" rx="2" ry="2" />
<text  x="62.98" y="1631.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;, nonwrapping_interval&lt;managed_bytes&gt; &gt; (1 samples, 0.02%)</title><rect x="1109.5" y="1845" width="0.3" height="15.0" fill="rgb(223,36,5)" rx="2" ry="2" />
<text  x="1112.54" y="1855.5" ></text>
</g>
<g >
<title>managed_bytes::external_memory_usage (1 samples, 0.02%)</title><rect x="258.3" y="1541" width="0.3" height="15.0" fill="rgb(221,132,40)" rx="2" ry="2" />
<text  x="261.33" y="1551.5" ></text>
</g>
<g >
<title>std::__optional_hash_call_base&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, true&gt;::operator (3 samples, 0.06%)</title><rect x="805.6" y="1717" width="0.7" height="15.0" fill="rgb(225,51,9)" rx="2" ry="2" />
<text  x="808.63" y="1727.5" ></text>
</g>
<g >
<title>mutation_reader_merger::maybe_add_readers (3 samples, 0.06%)</title><rect x="179.4" y="1701" width="0.7" height="15.0" fill="rgb(210,4,45)" rx="2" ry="2" />
<text  x="182.44" y="1711.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.02%)</title><rect x="50.3" y="1573" width="0.3" height="15.0" fill="rgb(213,19,48)" rx="2" ry="2" />
<text  x="53.34" y="1583.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::digest_read_result&gt;::get0 (1 samples, 0.02%)</title><rect x="693.6" y="1877" width="0.2" height="15.0" fill="rgb(242,102,5)" rx="2" ry="2" />
<text  x="696.57" y="1887.5" ></text>
</g>
<g >
<title>_ZSt5visitIR18overloaded_functorIJZN4cql34expr9find_atomIZNS2_4findERKNS2_10expressionENS2_6oper_tEEUlRKNS2_15binary_operatorEE_EEPS9_S6_T_EUlSA_E_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_8constantEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_11conjunctionEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_12column_valueEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_5tokenEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_21unresolved_identifierEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_25column_mutation_attributeEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_13function_callEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_4castEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_15field_selectionEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_4nullEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_13bind_variableEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_16untyped_constantEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_17tuple_constructorEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_22collection_constructorEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_20usertype_constructorEE_EEJRSt7variantIJSJ_S8_SN_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_SF_S1R_S1V_S1Z_EEEENSt13invoke_resultISD_JDpDTclsr3stdE3getILm0EEclsr3stdE7declvalIT0_EEEEEE4typeEOSD_DpOS29_ (2 samples, 0.04%)</title><rect x="943.5" y="1765" width="0.4" height="15.0" fill="rgb(225,36,33)" rx="2" ry="2" />
<text  x="946.47" y="1775.5" ></text>
</g>
<g >
<title>range_tombstone_stream::get_next (3 samples, 0.06%)</title><rect x="269.3" y="1589" width="0.7" height="15.0" fill="rgb(213,153,44)" rx="2" ry="2" />
<text  x="272.31" y="1599.5" ></text>
</g>
<g >
<title>seastar::semaphore_units&lt;seastar::semaphore_default_exception_factory, std::chrono::_V2::steady_clock&gt;::return_all (1 samples, 0.02%)</title><rect x="99.2" y="1861" width="0.2" height="15.0" fill="rgb(220,216,2)" rx="2" ry="2" />
<text  x="102.20" y="1871.5" ></text>
</g>
<g >
<title>dht::tri_compare (13 samples, 0.25%)</title><rect x="503.7" y="1685" width="3.0" height="15.0" fill="rgb(206,225,51)" rx="2" ry="2" />
<text  x="506.74" y="1695.5" ></text>
</g>
<g >
<title>utils::murmur_hash::hash3_x64_128&lt;legacy_compound_view&lt;compound_type&lt; (1 samples, 0.02%)</title><rect x="1116.7" y="1621" width="0.2" height="15.0" fill="rgb(246,204,30)" rx="2" ry="2" />
<text  x="1119.71" y="1631.5" ></text>
</g>
<g >
<title>allocation_strategy::get_standard_migrator&lt;blob_storage&gt; (3 samples, 0.06%)</title><rect x="233.0" y="1477" width="0.7" height="15.0" fill="rgb(249,76,19)" rx="2" ry="2" />
<text  x="236.00" y="1487.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::digest_read_resolver&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="969.7" y="1781" width="0.2" height="15.0" fill="rgb(223,100,36)" rx="2" ry="2" />
<text  x="972.69" y="1791.5" ></text>
</g>
<g >
<title>intrusive_b::node&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (1 samples, 0.02%)</title><rect x="1129.7" y="1701" width="0.2" height="15.0" fill="rgb(251,7,25)" rx="2" ry="2" />
<text  x="1132.71" y="1711.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="631.5" y="1813" width="0.2" height="15.0" fill="rgb(220,201,11)" rx="2" ry="2" />
<text  x="634.49" y="1823.5" ></text>
</g>
<g >
<title>seastar::reactor::run (4,819 samples, 91.53%)</title><rect x="84.9" y="1973" width="1080.0" height="15.0" fill="rgb(227,7,4)" rx="2" ry="2" />
<text  x="87.86" y="1983.5" >seastar::reactor::run</text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="639.8" y="1893" width="0.2" height="15.0" fill="rgb(226,124,8)" rx="2" ry="2" />
<text  x="642.78" y="1903.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::done (1 samples, 0.02%)</title><rect x="608.0" y="1861" width="0.2" height="15.0" fill="rgb(211,76,34)" rx="2" ry="2" />
<text  x="610.96" y="1871.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (2 samples, 0.04%)</title><rect x="732.6" y="1749" width="0.4" height="15.0" fill="rgb(253,182,11)" rx="2" ry="2" />
<text  x="735.57" y="1759.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (14 samples, 0.27%)</title><rect x="1186.2" y="1061" width="3.1" height="15.0" fill="rgb(230,14,38)" rx="2" ry="2" />
<text  x="1189.19" y="1071.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::merging_reader (15 samples, 0.28%)</title><rect x="480.4" y="1717" width="3.4" height="15.0" fill="rgb(216,180,45)" rx="2" ry="2" />
<text  x="483.43" y="1727.5" ></text>
</g>
<g >
<title>utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (40 samples, 0.76%)</title><rect x="786.1" y="1637" width="9.0" height="15.0" fill="rgb(245,97,25)" rx="2" ry="2" />
<text  x="789.13" y="1647.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (4 samples, 0.08%)</title><rect x="204.3" y="1637" width="0.9" height="15.0" fill="rgb(253,59,14)" rx="2" ry="2" />
<text  x="207.31" y="1647.5" ></text>
</g>
<g >
<title>std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;, seastar::future&lt;void&gt; &gt; &gt;::operator (5 samples, 0.09%)</title><rect x="808.5" y="1797" width="1.2" height="15.0" fill="rgb(219,51,27)" rx="2" ry="2" />
<text  x="811.55" y="1807.5" ></text>
</g>
<g >
<title>__vfprintf_internal (1 samples, 0.02%)</title><rect x="1177.0" y="2021" width="0.2" height="15.0" fill="rgb(240,128,22)" rx="2" ry="2" />
<text  x="1180.00" y="2031.5" ></text>
</g>
<g >
<title>std::hash&lt;auth::resource&gt;::operator (15 samples, 0.28%)</title><rect x="791.7" y="1573" width="3.4" height="15.0" fill="rgb(227,21,28)" rx="2" ry="2" />
<text  x="794.74" y="1583.5" ></text>
</g>
<g >
<title>cql3::raw_value_view::raw_value_view (12 samples, 0.23%)</title><rect x="896.6" y="1749" width="2.7" height="15.0" fill="rgb(212,123,52)" rx="2" ry="2" />
<text  x="899.62" y="1759.5" ></text>
</g>
<g >
<title>db::schema_tables::update_schema_version_and_announce (3 samples, 0.06%)</title><rect x="107.5" y="1909" width="0.7" height="15.0" fill="rgb(243,102,2)" rx="2" ry="2" />
<text  x="110.49" y="1919.5" ></text>
</g>
<g >
<title>cql3::query_processor::for_each_cql_result (1 samples, 0.02%)</title><rect x="636.4" y="1909" width="0.2" height="15.0" fill="rgb(231,111,36)" rx="2" ry="2" />
<text  x="639.42" y="1919.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.02%)</title><rect x="1011.6" y="1605" width="0.2" height="15.0" fill="rgb(238,104,15)" rx="2" ry="2" />
<text  x="1014.60" y="1615.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::vector (1 samples, 0.02%)</title><rect x="851.8" y="1781" width="0.2" height="15.0" fill="rgb(209,39,1)" rx="2" ry="2" />
<text  x="854.80" y="1791.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (2 samples, 0.04%)</title><rect x="514.0" y="1749" width="0.5" height="15.0" fill="rgb(232,24,43)" rx="2" ry="2" />
<text  x="517.05" y="1759.5" ></text>
</g>
<g >
<title>partition_snapshot::get_change_mark (4 samples, 0.08%)</title><rect x="261.2" y="1589" width="0.9" height="15.0" fill="rgb(218,160,16)" rx="2" ry="2" />
<text  x="264.24" y="1599.5" ></text>
</g>
<g >
<title>partition_snapshot::version_count (1 samples, 0.02%)</title><rect x="261.9" y="1573" width="0.2" height="15.0" fill="rgb(217,176,36)" rx="2" ry="2" />
<text  x="264.91" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.02%)</title><rect x="344.4" y="1573" width="0.2" height="15.0" fill="rgb(212,41,21)" rx="2" ry="2" />
<text  x="347.39" y="1583.5" ></text>
</g>
<g >
<title>std::vector&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, std::allocator&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="855.4" y="1765" width="0.2" height="15.0" fill="rgb(253,23,30)" rx="2" ry="2" />
<text  x="858.39" y="1775.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (17 samples, 0.32%)</title><rect x="496.1" y="1685" width="3.8" height="15.0" fill="rgb(210,64,12)" rx="2" ry="2" />
<text  x="499.12" y="1695.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (1 samples, 0.02%)</title><rect x="935.2" y="1733" width="0.2" height="15.0" fill="rgb(228,216,38)" rx="2" ry="2" />
<text  x="938.17" y="1743.5" ></text>
</g>
<g >
<title>std::tuple&lt;cql3::statements::create_keyspace_statement*, std::default_delete&lt;cql3::statements::create_keyspace_statement&gt; &gt;::tuple&lt;true, true&gt; (1 samples, 0.02%)</title><rect x="66.9" y="1765" width="0.3" height="15.0" fill="rgb(216,196,29)" rx="2" ry="2" />
<text  x="69.93" y="1775.5" ></text>
</g>
<g >
<title>data_value::data_value (1 samples, 0.02%)</title><rect x="108.4" y="1829" width="0.2" height="15.0" fill="rgb(250,170,29)" rx="2" ry="2" />
<text  x="111.39" y="1839.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (1 samples, 0.02%)</title><rect x="796.9" y="1637" width="0.2" height="15.0" fill="rgb(218,136,26)" rx="2" ry="2" />
<text  x="799.89" y="1647.5" ></text>
</g>
<g >
<title>schema::schema (1 samples, 0.02%)</title><rect x="20.1" y="1621" width="0.2" height="15.0" fill="rgb(206,150,22)" rx="2" ry="2" />
<text  x="23.09" y="1631.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;signed char, std::char_traits&lt;signed char&gt; &gt;::substr (2 samples, 0.04%)</title><rect x="513.2" y="1621" width="0.4" height="15.0" fill="rgb(223,5,48)" rx="2" ry="2" />
<text  x="516.15" y="1631.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::set_error (1 samples, 0.02%)</title><rect x="30.2" y="1701" width="0.2" height="15.0" fill="rgb(230,121,18)" rx="2" ry="2" />
<text  x="33.17" y="1711.5" ></text>
</g>
<g >
<title>sstables::mc::writer::consume_new_partition (1 samples, 0.02%)</title><rect x="1188.7" y="53" width="0.2" height="15.0" fill="rgb(220,225,17)" rx="2" ry="2" />
<text  x="1191.66" y="63.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;tracking_allocator&lt;mutation_fragment&gt; &gt;::_S_destroy&lt;tracking_allocator&lt;mutation_fragment&gt;, mutation_fragment&gt; (1 samples, 0.02%)</title><rect x="177.2" y="1717" width="0.2" height="15.0" fill="rgb(239,24,52)" rx="2" ry="2" />
<text  x="180.19" y="1727.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::allocate (6 samples, 0.11%)</title><rect x="527.7" y="1637" width="1.4" height="15.0" fill="rgb(234,180,38)" rx="2" ry="2" />
<text  x="530.72" y="1647.5" ></text>
</g>
<g >
<title>managed_bytes::operator= (5 samples, 0.09%)</title><rect x="330.9" y="1685" width="1.2" height="15.0" fill="rgb(239,83,38)" rx="2" ry="2" />
<text  x="333.94" y="1695.5" ></text>
</g>
<g >
<title>row::apply_monotonically (1 samples, 0.02%)</title><rect x="19.4" y="1909" width="0.2" height="15.0" fill="rgb(223,123,10)" rx="2" ry="2" />
<text  x="22.41" y="1919.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (25 samples, 0.47%)</title><rect x="508.4" y="1653" width="5.6" height="15.0" fill="rgb(254,173,1)" rx="2" ry="2" />
<text  x="511.45" y="1663.5" ></text>
</g>
<g >
<title>utils::fb_utilities::get_broadcast_address (1 samples, 0.02%)</title><rect x="711.1" y="1861" width="0.2" height="15.0" fill="rgb(233,13,4)" rx="2" ry="2" />
<text  x="714.05" y="1871.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (1 samples, 0.02%)</title><rect x="277.8" y="1621" width="0.2" height="15.0" fill="rgb(227,160,51)" rx="2" ry="2" />
<text  x="280.83" y="1631.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (5 samples, 0.09%)</title><rect x="51.0" y="1733" width="1.1" height="15.0" fill="rgb(205,176,11)" rx="2" ry="2" />
<text  x="54.01" y="1743.5" ></text>
</g>
<g >
<title>database::has_keyspace (11 samples, 0.21%)</title><rect x="829.6" y="1829" width="2.5" height="15.0" fill="rgb(233,94,3)" rx="2" ry="2" />
<text  x="832.61" y="1839.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::abstract_read_executor&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="1160.0" y="1877" width="0.2" height="15.0" fill="rgb(244,2,15)" rx="2" ry="2" />
<text  x="1162.97" y="1887.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::_M_deleter (1 samples, 0.02%)</title><rect x="54.4" y="1669" width="0.2" height="15.0" fill="rgb(225,186,29)" rx="2" ry="2" />
<text  x="57.38" y="1679.5" ></text>
</g>
<g >
<title>boost::intrusive::bstree_algorithms&lt;boost::intrusive::rbtree_node_traits&lt;void*, false&gt; &gt;::clear_and_dispose&lt;boost::intrusive::detail::node_disposer&lt;boost::intrusive::detail::null_disposer, boost::intrusive::mhtraits&lt;range_tombstone_entry, boost::intrusive::set_member_hook&lt;boost::intrusive::link_mode&lt; (1 samples, 0.02%)</title><rect x="579.3" y="1701" width="0.2" height="15.0" fill="rgb(245,125,45)" rx="2" ry="2" />
<text  x="582.27" y="1711.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (1 samples, 0.02%)</title><rect x="60.4" y="1637" width="0.3" height="15.0" fill="rgb(241,228,29)" rx="2" ry="2" />
<text  x="63.43" y="1647.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;service::never_speculating_read_executor, true&gt;::make&lt;seastar::lw_shared_ptr&lt;schema const&gt;&amp;, seastar::lw_shared_ptr&lt;table&gt;&amp;, seastar::shared_ptr&lt;service::storage_proxy&gt;&amp;, seastar::lw_shared_ptr&lt;query::read_command&gt;&amp;, nonwrapping_interval&lt;dht::ring_position&gt;, db::consistency_level&amp;, utils::small_vector&lt;gms::inet_address, 3ul&gt;, tracing::trace_state_ptr, service_permit&gt; (41 samples, 0.78%)</title><rect x="1045.2" y="1765" width="9.2" height="15.0" fill="rgb(213,206,10)" rx="2" ry="2" />
<text  x="1048.22" y="1775.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::~deque (1 samples, 0.02%)</title><rect x="24.8" y="1781" width="0.2" height="15.0" fill="rgb(208,89,35)" rx="2" ry="2" />
<text  x="27.79" y="1791.5" ></text>
</g>
<g >
<title>flush_reader::get_next_partition (1 samples, 0.02%)</title><rect x="1188.4" y="53" width="0.3" height="15.0" fill="rgb(244,76,33)" rx="2" ry="2" />
<text  x="1191.43" y="63.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.02%)</title><rect x="49.0" y="1685" width="0.2" height="15.0" fill="rgb(246,184,16)" rx="2" ry="2" />
<text  x="52.00" y="1695.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (1 samples, 0.02%)</title><rect x="331.8" y="1669" width="0.3" height="15.0" fill="rgb(209,67,37)" rx="2" ry="2" />
<text  x="334.84" y="1679.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (1 samples, 0.02%)</title><rect x="1015.6" y="1637" width="0.3" height="15.0" fill="rgb(217,207,12)" rx="2" ry="2" />
<text  x="1018.63" y="1647.5" ></text>
</g>
<g >
<title>frozen_schema::unfreeze (1 samples, 0.02%)</title><rect x="107.0" y="1781" width="0.3" height="15.0" fill="rgb(226,184,24)" rx="2" ry="2" />
<text  x="110.04" y="1791.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; const*, std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt; &gt;, nonwrapping_interval&lt;clustering_key_prefix&gt;*&gt; (1 samples, 0.02%)</title><rect x="156.6" y="1845" width="0.2" height="15.0" fill="rgb(241,140,3)" rx="2" ry="2" />
<text  x="159.58" y="1855.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_slice_or_needs_filtering (1 samples, 0.02%)</title><rect x="74.1" y="1765" width="0.2" height="15.0" fill="rgb(230,89,48)" rx="2" ry="2" />
<text  x="77.10" y="1775.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (6 samples, 0.11%)</title><rect x="60.4" y="1669" width="1.4" height="15.0" fill="rgb(230,14,9)" rx="2" ry="2" />
<text  x="63.43" y="1679.5" ></text>
</g>
<g >
<title>logalloc::basic_region_impl::set_reclaiming_enabled (1 samples, 0.02%)</title><rect x="466.5" y="1765" width="0.3" height="15.0" fill="rgb(209,144,8)" rx="2" ry="2" />
<text  x="469.54" y="1775.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;column_definition const*, std::pair&lt;column_definition const* const, seastar::shared_ptr&lt;cql3::restrictions::single_column_restriction&gt; &gt;, std::_Select1st&lt;std::pair&lt;column_definition const* const, seastar::shared_ptr&lt;cql3::restrictions::single_column_restriction&gt; &gt; &gt;, cql3::restrictions::single_column_restrictions::column_definition_comparator, std::allocator&lt;std::pair&lt;column_definition const* const, seastar::shared_ptr&lt;cql3::restrictions::single_column_restriction&gt; &gt; &gt; &gt;::_M_create_node&lt;column_definition const*, seastar::shared_ptr&lt;cql3::restrictions::single_column_restriction&gt; &gt; (1 samples, 0.02%)</title><rect x="74.8" y="1701" width="0.2" height="15.0" fill="rgb(205,149,25)" rx="2" ry="2" />
<text  x="77.77" y="1711.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::raw::parsed_statement, std::default_delete&lt;cql3::statements::raw::parsed_statement&gt; &gt;::operator= (1 samples, 0.02%)</title><rect x="68.5" y="1781" width="0.2" height="15.0" fill="rgb(251,135,12)" rx="2" ry="2" />
<text  x="71.50" y="1791.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (2 samples, 0.04%)</title><rect x="759.7" y="1733" width="0.4" height="15.0" fill="rgb(247,29,32)" rx="2" ry="2" />
<text  x="762.69" y="1743.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="75.0" y="1701" width="0.2" height="15.0" fill="rgb(221,33,34)" rx="2" ry="2" />
<text  x="78.00" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;gms::inet_address, std::pair&lt;gms::inet_address const, table::cache_hit_rate&gt;, std::allocator&lt;std::pair&lt;gms::inet_address const, table::cache_hit_rate&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;gms::inet_address&gt;, std::hash&lt;gms::inet_address&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::operator[] (12 samples, 0.23%)</title><rect x="711.3" y="1861" width="2.7" height="15.0" fill="rgb(226,92,20)" rx="2" ry="2" />
<text  x="714.28" y="1871.5" ></text>
</g>
<g >
<title>std::default_delete&lt;mutation_fragment::data&gt;::operator (1 samples, 0.02%)</title><rect x="444.3" y="1669" width="0.3" height="15.0" fill="rgb(245,57,20)" rx="2" ry="2" />
<text  x="447.35" y="1679.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_impl&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (546 samples, 10.37%)</title><rect x="327.4" y="1749" width="122.3" height="15.0" fill="rgb(231,215,3)" rx="2" ry="2" />
<text  x="330.36" y="1759.5" >seastar::intern..</text>
</g>
<g >
<title>flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (2 samples, 0.04%)</title><rect x="334.3" y="1685" width="0.5" height="15.0" fill="rgb(240,96,15)" rx="2" ry="2" />
<text  x="337.30" y="1695.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::find_and_unlink_span_reclaiming (1 samples, 0.02%)</title><rect x="1149.7" y="1781" width="0.2" height="15.0" fill="rgb(230,71,23)" rx="2" ry="2" />
<text  x="1152.66" y="1791.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (35 samples, 0.66%)</title><rect x="1122.3" y="1813" width="7.9" height="15.0" fill="rgb(247,144,17)" rx="2" ry="2" />
<text  x="1125.32" y="1823.5" ></text>
</g>
<g >
<title>mutation_reader_merger::add_readers (18 samples, 0.34%)</title><rect x="470.1" y="1701" width="4.1" height="15.0" fill="rgb(251,183,4)" rx="2" ry="2" />
<text  x="473.12" y="1711.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value_view, std::allocator&lt;cql3::raw_value_view&gt; &gt;::emplace_back&lt;cql3::raw_value_view&gt; (1 samples, 0.02%)</title><rect x="837.9" y="1829" width="0.2" height="15.0" fill="rgb(217,172,49)" rx="2" ry="2" />
<text  x="840.91" y="1839.5" ></text>
</g>
<g >
<title>sstables::mc::writer::write_clustered (1 samples, 0.02%)</title><rect x="1186.2" y="149" width="0.2" height="15.0" fill="rgb(226,164,8)" rx="2" ry="2" />
<text  x="1189.19" y="159.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.02%)</title><rect x="44.7" y="1653" width="0.3" height="15.0" fill="rgb(209,167,54)" rx="2" ry="2" />
<text  x="47.74" y="1663.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::digest_read_resolver&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="1132.4" y="1925" width="0.2" height="15.0" fill="rgb(229,216,22)" rx="2" ry="2" />
<text  x="1135.40" y="1935.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (12 samples, 0.23%)</title><rect x="441.9" y="1685" width="2.7" height="15.0" fill="rgb(221,1,12)" rx="2" ry="2" />
<text  x="444.88" y="1695.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="849.1" y="1701" width="0.2" height="15.0" fill="rgb(242,32,21)" rx="2" ry="2" />
<text  x="852.11" y="1711.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;compact_for_query&lt; (10 samples, 0.19%)</title><rect x="447.5" y="1701" width="2.2" height="15.0" fill="rgb(254,171,35)" rx="2" ry="2" />
<text  x="450.49" y="1711.5" ></text>
</g>
<g >
<title>std::hash&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::operator (1 samples, 0.02%)</title><rect x="791.5" y="1557" width="0.2" height="15.0" fill="rgb(239,165,50)" rx="2" ry="2" />
<text  x="794.51" y="1567.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (14 samples, 0.27%)</title><rect x="1186.2" y="341" width="3.1" height="15.0" fill="rgb(229,84,29)" rx="2" ry="2" />
<text  x="1189.19" y="351.5" ></text>
</g>
<g >
<title>cql3::statements::raw::modification_statement::prepare (37 samples, 0.70%)</title><rect x="69.2" y="1877" width="8.3" height="15.0" fill="rgb(230,72,26)" rx="2" ry="2" />
<text  x="72.17" y="1887.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.02%)</title><rect x="64.7" y="1525" width="0.2" height="15.0" fill="rgb(242,134,51)" rx="2" ry="2" />
<text  x="67.69" y="1535.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="852.5" y="1637" width="0.2" height="15.0" fill="rgb(246,32,34)" rx="2" ry="2" />
<text  x="855.47" y="1647.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="55.9" y="1685" width="0.3" height="15.0" fill="rgb(216,141,9)" rx="2" ry="2" />
<text  x="58.94" y="1695.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.06%)</title><rect x="955.1" y="1781" width="0.7" height="15.0" fill="rgb(252,182,25)" rx="2" ry="2" />
<text  x="958.12" y="1791.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;bytes_ostream::chunk, std::default_delete&lt;bytes_ostream::chunk&gt; &gt;::~unique_ptr (2 samples, 0.04%)</title><rect x="629.5" y="1861" width="0.4" height="15.0" fill="rgb(206,120,49)" rx="2" ry="2" />
<text  x="632.47" y="1871.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.04%)</title><rect x="206.1" y="1589" width="0.5" height="15.0" fill="rgb(223,23,2)" rx="2" ry="2" />
<text  x="209.11" y="1599.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::clear (1 samples, 0.02%)</title><rect x="718.0" y="1925" width="0.2" height="15.0" fill="rgb(221,150,39)" rx="2" ry="2" />
<text  x="721.00" y="1935.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reclaiming_disabled&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_range_tombstone (10 samples, 0.19%)</title><rect x="268.0" y="1621" width="2.2" height="15.0" fill="rgb(206,205,15)" rx="2" ry="2" />
<text  x="270.96" y="1631.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (1 samples, 0.02%)</title><rect x="1161.1" y="1845" width="0.2" height="15.0" fill="rgb(220,112,24)" rx="2" ry="2" />
<text  x="1164.09" y="1855.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::storage_proxy&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="949.3" y="1813" width="0.2" height="15.0" fill="rgb(253,22,42)" rx="2" ry="2" />
<text  x="952.29" y="1823.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;mutation_querier&gt;::_M_reset (1 samples, 0.02%)</title><rect x="141.6" y="1877" width="0.2" height="15.0" fill="rgb(213,192,33)" rx="2" ry="2" />
<text  x="144.56" y="1887.5" ></text>
</g>
<g >
<title>service::migration_manager::announce_new_column_family (1 samples, 0.02%)</title><rect x="688.0" y="1797" width="0.2" height="15.0" fill="rgb(239,221,17)" rx="2" ry="2" />
<text  x="690.97" y="1807.5" ></text>
</g>
<g >
<title>std::construct_at&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::entry&gt; (3 samples, 0.06%)</title><rect x="135.1" y="1829" width="0.6" height="15.0" fill="rgb(213,90,48)" rx="2" ry="2" />
<text  x="138.06" y="1839.5" ></text>
</g>
<g >
<title>cql3::to_managed_bytes_opt (2 samples, 0.04%)</title><rect x="899.5" y="1781" width="0.5" height="15.0" fill="rgb(245,70,39)" rx="2" ry="2" />
<text  x="902.54" y="1791.5" ></text>
</g>
<g >
<title>std::get&lt;2ul, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; (1 samples, 0.02%)</title><rect x="929.6" y="1829" width="0.2" height="15.0" fill="rgb(238,30,11)" rx="2" ry="2" />
<text  x="932.57" y="1839.5" ></text>
</g>
<g >
<title>serialize (1 samples, 0.02%)</title><rect x="108.6" y="1813" width="0.2" height="15.0" fill="rgb(211,161,25)" rx="2" ry="2" />
<text  x="111.61" y="1823.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_M_set_node (1 samples, 0.02%)</title><rect x="57.3" y="1525" width="0.2" height="15.0" fill="rgb(237,114,21)" rx="2" ry="2" />
<text  x="60.29" y="1535.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="259.4" y="1573" width="0.3" height="15.0" fill="rgb(241,114,33)" rx="2" ry="2" />
<text  x="262.45" y="1583.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (1 samples, 0.02%)</title><rect x="691.8" y="1893" width="0.2" height="15.0" fill="rgb(217,78,54)" rx="2" ry="2" />
<text  x="694.78" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_node (2 samples, 0.04%)</title><rect x="663.8" y="1877" width="0.4" height="15.0" fill="rgb(215,58,54)" rx="2" ry="2" />
<text  x="666.76" y="1887.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (2 samples, 0.04%)</title><rect x="823.8" y="1845" width="0.4" height="15.0" fill="rgb(225,199,0)" rx="2" ry="2" />
<text  x="826.79" y="1855.5" ></text>
</g>
<g >
<title>utils::tuple_hash::operator (22 samples, 0.42%)</title><rect x="790.2" y="1589" width="4.9" height="15.0" fill="rgb(254,135,3)" rx="2" ry="2" />
<text  x="793.17" y="1599.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.02%)</title><rect x="25.0" y="1685" width="0.2" height="15.0" fill="rgb(212,221,43)" rx="2" ry="2" />
<text  x="28.02" y="1695.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (2,317 samples, 44.01%)</title><rect x="113.3" y="1909" width="519.3" height="15.0" fill="rgb(212,178,26)" rx="2" ry="2" />
<text  x="116.32" y="1919.5" >seastar::noncopyable_function&lt;seastar::future&lt;void&gt; </text>
</g>
<g >
<title>operator new (3 samples, 0.06%)</title><rect x="775.6" y="1701" width="0.7" height="15.0" fill="rgb(215,63,28)" rx="2" ry="2" />
<text  x="778.60" y="1711.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (14 samples, 0.27%)</title><rect x="1186.2" y="1509" width="3.1" height="15.0" fill="rgb(253,38,36)" rx="2" ry="2" />
<text  x="1189.19" y="1519.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::pop_front (7 samples, 0.13%)</title><rect x="132.8" y="1829" width="1.6" height="15.0" fill="rgb(250,129,46)" rx="2" ry="2" />
<text  x="135.82" y="1839.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::~_Deque_base (4 samples, 0.08%)</title><rect x="625.9" y="1813" width="0.9" height="15.0" fill="rgb(215,105,10)" rx="2" ry="2" />
<text  x="628.89" y="1823.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (1 samples, 0.02%)</title><rect x="54.4" y="1717" width="0.2" height="15.0" fill="rgb(244,228,48)" rx="2" ry="2" />
<text  x="57.38" y="1727.5" ></text>
</g>
<g >
<title>db::rp_set::put (1 samples, 0.02%)</title><rect x="1115.4" y="1669" width="0.2" height="15.0" fill="rgb(245,193,1)" rx="2" ry="2" />
<text  x="1118.37" y="1679.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (1 samples, 0.02%)</title><rect x="313.2" y="1733" width="0.3" height="15.0" fill="rgb(246,155,54)" rx="2" ry="2" />
<text  x="316.24" y="1743.5" ></text>
</g>
<g >
<title>flat_mutation_reader::close (2 samples, 0.04%)</title><rect x="1162.7" y="1813" width="0.4" height="15.0" fill="rgb(216,114,10)" rx="2" ry="2" />
<text  x="1165.66" y="1823.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;column_definition const*, std::pair&lt;column_definition const* const, seastar::shared_ptr&lt;cql3::restrictions::single_column_restriction&gt; &gt;, std::_Select1st&lt;std::pair&lt;column_definition const* const, seastar::shared_ptr&lt;cql3::restrictions::single_column_restriction&gt; &gt; &gt;, cql3::restrictions::single_column_restrictions::column_definition_comparator, std::allocator&lt;std::pair&lt;column_definition const* const, seastar::shared_ptr&lt;cql3::restrictions::single_column_restriction&gt; &gt; &gt; &gt;::_M_erase (1 samples, 0.02%)</title><rect x="646.5" y="1813" width="0.2" height="15.0" fill="rgb(215,77,50)" rx="2" ry="2" />
<text  x="649.51" y="1823.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::operator= (2 samples, 0.04%)</title><rect x="1136.4" y="1909" width="0.5" height="15.0" fill="rgb(243,110,31)" rx="2" ry="2" />
<text  x="1139.43" y="1919.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (7 samples, 0.13%)</title><rect x="428.0" y="1653" width="1.6" height="15.0" fill="rgb(247,156,29)" rx="2" ry="2" />
<text  x="430.99" y="1663.5" ></text>
</g>
<g >
<title>cql3::terminal::to_expression (1 samples, 0.02%)</title><rect x="850.7" y="1701" width="0.2" height="15.0" fill="rgb(223,164,1)" rx="2" ry="2" />
<text  x="853.68" y="1711.5" ></text>
</g>
<g >
<title>__tls_init (5 samples, 0.09%)</title><rect x="549.2" y="1717" width="1.2" height="15.0" fill="rgb(211,57,33)" rx="2" ry="2" />
<text  x="552.24" y="1727.5" ></text>
</g>
<g >
<title>sstables::mc::writer::write_cell (1 samples, 0.02%)</title><rect x="1186.9" y="37" width="0.2" height="15.0" fill="rgb(214,201,37)" rx="2" ry="2" />
<text  x="1189.86" y="47.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;::operator== (2 samples, 0.04%)</title><rect x="746.5" y="1717" width="0.4" height="15.0" fill="rgb(223,33,37)" rx="2" ry="2" />
<text  x="749.46" y="1727.5" ></text>
</g>
<g >
<title>cql3::raw_value_view::raw_value_view (1 samples, 0.02%)</title><rect x="849.3" y="1701" width="0.3" height="15.0" fill="rgb(229,127,15)" rx="2" ry="2" />
<text  x="852.34" y="1711.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (2 samples, 0.04%)</title><rect x="820.4" y="1813" width="0.5" height="15.0" fill="rgb(227,203,16)" rx="2" ry="2" />
<text  x="823.42" y="1823.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (1 samples, 0.02%)</title><rect x="94.5" y="1909" width="0.2" height="15.0" fill="rgb(242,184,9)" rx="2" ry="2" />
<text  x="97.49" y="1919.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_partition_key_ranges (1 samples, 0.02%)</title><rect x="848.2" y="1813" width="0.2" height="15.0" fill="rgb(211,75,36)" rx="2" ry="2" />
<text  x="851.21" y="1823.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.02%)</title><rect x="1188.2" y="197" width="0.2" height="15.0" fill="rgb(206,193,43)" rx="2" ry="2" />
<text  x="1191.21" y="207.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt;::_M_reset (1 samples, 0.02%)</title><rect x="295.5" y="1685" width="0.3" height="15.0" fill="rgb(240,26,34)" rx="2" ry="2" />
<text  x="298.53" y="1695.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::move_it (16 samples, 0.30%)</title><rect x="679.2" y="1909" width="3.6" height="15.0" fill="rgb(237,102,41)" rx="2" ry="2" />
<text  x="682.23" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;seastar::future&lt;void&gt; &gt;  (3 samples, 0.06%)</title><rect x="1162.4" y="1893" width="0.7" height="15.0" fill="rgb(237,170,10)" rx="2" ry="2" />
<text  x="1165.43" y="1903.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::get_promise (1 samples, 0.02%)</title><rect x="820.9" y="1813" width="0.2" height="15.0" fill="rgb(206,27,44)" rx="2" ry="2" />
<text  x="823.87" y="1823.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::digest_read_result&gt;::then_wrapped_common&lt;true, void, service::abstract_read_executor::execute (1 samples, 0.02%)</title><rect x="107.3" y="1797" width="0.2" height="15.0" fill="rgb(224,149,25)" rx="2" ry="2" />
<text  x="110.27" y="1807.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;bytes_ostream::chunk, std::default_delete&lt;bytes_ostream::chunk&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="612.7" y="1813" width="0.2" height="15.0" fill="rgb(218,105,35)" rx="2" ry="2" />
<text  x="615.66" y="1823.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.02%)</title><rect x="44.5" y="1653" width="0.2" height="15.0" fill="rgb(251,185,16)" rx="2" ry="2" />
<text  x="47.51" y="1663.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.02%)</title><rect x="25.0" y="1701" width="0.2" height="15.0" fill="rgb(211,207,21)" rx="2" ry="2" />
<text  x="28.02" y="1711.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::clear (2 samples, 0.04%)</title><rect x="799.6" y="1637" width="0.4" height="15.0" fill="rgb(251,122,42)" rx="2" ry="2" />
<text  x="802.58" y="1647.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS4_12restrictionsL11has_eq_nullERKNS4_13query_optionsERKNS5_10expressionEE3$_8EES8_SI_T_EUlRS7_E_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_8constantEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_11conjunctionEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_12column_valueEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_5tokenEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_13function_callEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_4castEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_15field_selectionEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_4nullEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_13bind_variableEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_16untyped_constantEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_17tuple_constructorEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_22collection_constructorEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSR_S6_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_S1V_SN_S1Z_S23_S27_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES2C_S2F_ (6 samples, 0.11%)</title><rect x="848.4" y="1749" width="1.4" height="15.0" fill="rgb(213,192,6)" rx="2" ry="2" />
<text  x="851.44" y="1759.5" ></text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.04%)</title><rect x="13.8" y="2005" width="0.5" height="15.0" fill="rgb(236,139,26)" rx="2" ry="2" />
<text  x="16.81" y="2015.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (14 samples, 0.27%)</title><rect x="1186.2" y="1685" width="3.1" height="15.0" fill="rgb(244,192,39)" rx="2" ry="2" />
<text  x="1189.19" y="1695.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::finally_body&lt;seastar::smp::submit_to&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (1 samples, 0.02%)</title><rect x="717.6" y="1925" width="0.2" height="15.0" fill="rgb(217,129,25)" rx="2" ry="2" />
<text  x="720.55" y="1935.5" ></text>
</g>
<g >
<title>compound_wrapper&lt;clustering_key_prefix, clustering_key_prefix_view&gt;::size (1 samples, 0.02%)</title><rect x="853.6" y="1621" width="0.2" height="15.0" fill="rgb(212,79,17)" rx="2" ry="2" />
<text  x="856.59" y="1631.5" ></text>
</g>
<g >
<title>flat_mutation_reader::upgrade_schema (1 samples, 0.02%)</title><rect x="466.1" y="1765" width="0.2" height="15.0" fill="rgb(210,88,47)" rx="2" ry="2" />
<text  x="469.09" y="1775.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.02%)</title><rect x="20.1" y="1909" width="0.2" height="15.0" fill="rgb(235,61,8)" rx="2" ry="2" />
<text  x="23.09" y="1919.5" ></text>
</g>
<g >
<title>ser::qr_clustered_row__cells&lt;bytes_ostream&gt;::start_cells (1 samples, 0.02%)</title><rect x="403.6" y="1621" width="0.2" height="15.0" fill="rgb(225,148,5)" rx="2" ry="2" />
<text  x="406.56" y="1631.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_Vector_base (1 samples, 0.02%)</title><rect x="54.2" y="1701" width="0.2" height="15.0" fill="rgb(249,77,35)" rx="2" ry="2" />
<text  x="57.15" y="1711.5" ></text>
</g>
<g >
<title>cql_transport::messages::result_message::rows::rows (2 samples, 0.04%)</title><rect x="655.0" y="1861" width="0.5" height="15.0" fill="rgb(229,19,21)" rx="2" ry="2" />
<text  x="658.02" y="1871.5" ></text>
</g>
<g >
<title>seastar::lambda_task&lt;seastar::with_scheduling_group&lt;compaction_manager::submit (1 samples, 0.02%)</title><rect x="1131.3" y="1925" width="0.2" height="15.0" fill="rgb(251,85,13)" rx="2" ry="2" />
<text  x="1134.28" y="1935.5" ></text>
</g>
<g >
<title>db::schema_tables::calculate_schema_digest (3 samples, 0.06%)</title><rect x="107.5" y="1893" width="0.7" height="15.0" fill="rgb(233,18,42)" rx="2" ry="2" />
<text  x="110.49" y="1903.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (2 samples, 0.04%)</title><rect x="107.5" y="1253" width="0.4" height="15.0" fill="rgb(223,226,26)" rx="2" ry="2" />
<text  x="110.49" y="1263.5" ></text>
</g>
<g >
<title>intrusive_b::node&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (1 samples, 0.02%)</title><rect x="10.7" y="1893" width="0.2" height="15.0" fill="rgb(215,47,33)" rx="2" ry="2" />
<text  x="13.67" y="1903.5" ></text>
</g>
<g >
<title>service::storage_proxy_stats::split_stats::get_ep_stat (1 samples, 0.02%)</title><rect x="714.6" y="1893" width="0.3" height="15.0" fill="rgb(246,143,35)" rx="2" ry="2" />
<text  x="717.64" y="1903.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (1 samples, 0.02%)</title><rect x="782.1" y="1653" width="0.2" height="15.0" fill="rgb(209,49,4)" rx="2" ry="2" />
<text  x="785.10" y="1663.5" ></text>
</g>
<g >
<title>seastar::hrtimer_aio_completion::complete_with (4 samples, 0.08%)</title><rect x="1164.0" y="1893" width="0.9" height="15.0" fill="rgb(252,110,47)" rx="2" ry="2" />
<text  x="1167.00" y="1903.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::get_local_service (2 samples, 0.04%)</title><rect x="1021.7" y="1685" width="0.4" height="15.0" fill="rgb(232,50,10)" rx="2" ry="2" />
<text  x="1024.68" y="1695.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.02%)</title><rect x="48.3" y="1685" width="0.2" height="15.0" fill="rgb(221,115,41)" rx="2" ry="2" />
<text  x="51.32" y="1695.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::take_value (1 samples, 0.02%)</title><rect x="311.0" y="1765" width="0.2" height="15.0" fill="rgb(223,150,43)" rx="2" ry="2" />
<text  x="314.00" y="1775.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; const*, nonwrapping_interval&lt;clustering_key_prefix&gt;*&gt; (1 samples, 0.02%)</title><rect x="1092.3" y="1781" width="0.2" height="15.0" fill="rgb(253,116,26)" rx="2" ry="2" />
<text  x="1095.28" y="1791.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (2 samples, 0.04%)</title><rect x="450.0" y="1749" width="0.4" height="15.0" fill="rgb(238,224,10)" rx="2" ry="2" />
<text  x="452.95" y="1759.5" ></text>
</g>
<g >
<title>mutation::data::data (1 samples, 0.02%)</title><rect x="109.1" y="1781" width="0.2" height="15.0" fill="rgb(221,22,14)" rx="2" ry="2" />
<text  x="112.06" y="1791.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;database&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="1023.5" y="1701" width="0.2" height="15.0" fill="rgb(212,153,25)" rx="2" ry="2" />
<text  x="1026.48" y="1711.5" ></text>
</g>
<g >
<title>bplus::tree&lt;long, intrusive_array&lt;cache_entry&gt;, dht::raw_token_less_comparator, 16ul,  (6 samples, 0.11%)</title><rect x="546.8" y="1717" width="1.3" height="15.0" fill="rgb(228,111,27)" rx="2" ry="2" />
<text  x="549.77" y="1727.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::invoke&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (43 samples, 0.82%)</title><rect x="311.2" y="1765" width="9.7" height="15.0" fill="rgb(216,223,32)" rx="2" ry="2" />
<text  x="314.22" y="1775.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (1 samples, 0.02%)</title><rect x="1129.9" y="1701" width="0.3" height="15.0" fill="rgb(205,72,51)" rx="2" ry="2" />
<text  x="1132.94" y="1711.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.02%)</title><rect x="51.9" y="1605" width="0.2" height="15.0" fill="rgb(222,0,29)" rx="2" ry="2" />
<text  x="54.91" y="1615.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.02%)</title><rect x="1188.0" y="197" width="0.2" height="15.0" fill="rgb(236,122,41)" rx="2" ry="2" />
<text  x="1190.98" y="207.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt;, true, true&gt;::__uniq_ptr_impl&lt;std::default_delete&lt;cql3::operation::set_value&gt; &gt; (1 samples, 0.02%)</title><rect x="62.4" y="1717" width="0.3" height="15.0" fill="rgb(215,10,54)" rx="2" ry="2" />
<text  x="65.44" y="1727.5" ></text>
</g>
<g >
<title>cql3::expr::possible_lhs_values (2 samples, 0.04%)</title><rect x="850.7" y="1781" width="0.4" height="15.0" fill="rgb(228,39,10)" rx="2" ry="2" />
<text  x="853.68" y="1791.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reserve&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (2 samples, 0.04%)</title><rect x="847.1" y="1829" width="0.4" height="15.0" fill="rgb(254,196,54)" rx="2" ry="2" />
<text  x="850.09" y="1839.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="1105.5" y="1797" width="0.2" height="15.0" fill="rgb(213,147,13)" rx="2" ry="2" />
<text  x="1108.51" y="1807.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::reserve (1 samples, 0.02%)</title><rect x="462.9" y="1781" width="0.3" height="15.0" fill="rgb(219,61,13)" rx="2" ry="2" />
<text  x="465.95" y="1791.5" ></text>
</g>
<g >
<title>partition_builder::accept_row (2 samples, 0.04%)</title><rect x="1119.4" y="1653" width="0.4" height="15.0" fill="rgb(222,179,49)" rx="2" ry="2" />
<text  x="1122.40" y="1663.5" ></text>
</g>
<g >
<title>read_simple&lt;unsigned short, managed_bytes_basic_view&lt; (2 samples, 0.04%)</title><rect x="512.7" y="1621" width="0.5" height="15.0" fill="rgb(237,168,40)" rx="2" ry="2" />
<text  x="515.70" y="1631.5" ></text>
</g>
<g >
<title>reader_permit::impl::mark_unused (1 samples, 0.02%)</title><rect x="688.2" y="1893" width="0.2" height="15.0" fill="rgb(242,166,9)" rx="2" ry="2" />
<text  x="691.19" y="1903.5" ></text>
</g>
<g >
<title>ser::get_sizeof&lt;partition_key&gt; (1 samples, 0.02%)</title><rect x="1128.1" y="1573" width="0.3" height="15.0" fill="rgb(246,4,16)" rx="2" ry="2" />
<text  x="1131.14" y="1583.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.02%)</title><rect x="25.0" y="1653" width="0.2" height="15.0" fill="rgb(213,81,33)" rx="2" ry="2" />
<text  x="28.02" y="1663.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::needs_filtering (1 samples, 0.02%)</title><rect x="939.2" y="1829" width="0.2" height="15.0" fill="rgb(249,61,12)" rx="2" ry="2" />
<text  x="942.21" y="1839.5" ></text>
</g>
<g >
<title>std::default_delete&lt;query::partition_slice const&gt;::operator (9 samples, 0.17%)</title><rect x="603.5" y="1829" width="2.0" height="15.0" fill="rgb(227,8,1)" rx="2" ry="2" />
<text  x="606.47" y="1839.5" ></text>
</g>
<g >
<title>std::forward&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (2 samples, 0.04%)</title><rect x="27.9" y="1653" width="0.5" height="15.0" fill="rgb(250,140,37)" rx="2" ry="2" />
<text  x="30.93" y="1663.5" ></text>
</g>
<g >
<title>row::append_cell (1 samples, 0.02%)</title><rect x="1119.8" y="1637" width="0.3" height="15.0" fill="rgb(222,207,4)" rx="2" ry="2" />
<text  x="1122.85" y="1647.5" ></text>
</g>
<g >
<title>std::__lower_bound&lt;__gnu_cxx::__normal_iterator&lt;dht::token const*, std::vector&lt;dht::token, std::allocator&lt;dht::token&gt; &gt; &gt;, dht::token, __gnu_cxx::__ops::_Iter_less_val&gt; (27 samples, 0.51%)</title><rect x="1058.9" y="1669" width="6.0" height="15.0" fill="rgb(232,19,33)" rx="2" ry="2" />
<text  x="1061.89" y="1679.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (2 samples, 0.04%)</title><rect x="1186.6" y="277" width="0.5" height="15.0" fill="rgb(248,226,10)" rx="2" ry="2" />
<text  x="1189.64" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="798.0" y="1653" width="0.2" height="15.0" fill="rgb(243,13,23)" rx="2" ry="2" />
<text  x="801.01" y="1663.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;void&gt;::set_urgent_state (3 samples, 0.06%)</title><rect x="846.2" y="1925" width="0.7" height="15.0" fill="rgb(226,90,1)" rx="2" ry="2" />
<text  x="849.20" y="1935.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="49.4" y="1637" width="0.3" height="15.0" fill="rgb(246,213,40)" rx="2" ry="2" />
<text  x="52.45" y="1647.5" ></text>
</g>
<g >
<title>partition_snapshot::get_change_mark (3 samples, 0.06%)</title><rect x="268.6" y="1573" width="0.7" height="15.0" fill="rgb(245,44,24)" rx="2" ry="2" />
<text  x="271.64" y="1583.5" ></text>
</g>
<g >
<title>validation::validate_column_family (1 samples, 0.02%)</title><rect x="816.6" y="1829" width="0.2" height="15.0" fill="rgb(227,213,29)" rx="2" ry="2" />
<text  x="819.61" y="1839.5" ></text>
</g>
<g >
<title>std::default_delete&lt;mutation_fragment::data&gt;::operator (1 samples, 0.02%)</title><rect x="687.7" y="1749" width="0.3" height="15.0" fill="rgb(238,217,29)" rx="2" ry="2" />
<text  x="690.74" y="1759.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_restrictions::add_restriction (1 samples, 0.02%)</title><rect x="74.8" y="1733" width="0.2" height="15.0" fill="rgb(214,184,17)" rx="2" ry="2" />
<text  x="77.77" y="1743.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (3 samples, 0.06%)</title><rect x="750.5" y="1813" width="0.7" height="15.0" fill="rgb(253,47,11)" rx="2" ry="2" />
<text  x="753.50" y="1823.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="1127.9" y="1509" width="0.2" height="15.0" fill="rgb(226,46,23)" rx="2" ry="2" />
<text  x="1130.92" y="1519.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (2 samples, 0.04%)</title><rect x="64.5" y="1685" width="0.4" height="15.0" fill="rgb(232,143,23)" rx="2" ry="2" />
<text  x="67.46" y="1695.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;::__uniq_ptr_impl (2 samples, 0.04%)</title><rect x="55.3" y="1525" width="0.4" height="15.0" fill="rgb(212,197,47)" rx="2" ry="2" />
<text  x="58.27" y="1535.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (1 samples, 0.02%)</title><rect x="106.8" y="1845" width="0.2" height="15.0" fill="rgb(219,177,12)" rx="2" ry="2" />
<text  x="109.82" y="1855.5" ></text>
</g>
<g >
<title>seastar::smp::configure (1 samples, 0.02%)</title><rect x="1164.9" y="1973" width="0.2" height="15.0" fill="rgb(207,176,20)" rx="2" ry="2" />
<text  x="1167.90" y="1983.5" ></text>
</g>
<g >
<title>mutation_fragment::consume&lt;flat_mutation_reader::impl::consumer_adapter&lt;sstables::sstable_writer&gt; &gt; (1 samples, 0.02%)</title><rect x="1188.2" y="101" width="0.2" height="15.0" fill="rgb(209,95,29)" rx="2" ry="2" />
<text  x="1191.21" y="111.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.02%)</title><rect x="60.2" y="1573" width="0.2" height="15.0" fill="rgb(232,115,21)" rx="2" ry="2" />
<text  x="63.20" y="1583.5" ></text>
</g>
<g >
<title>memtable::find_or_create_partition (6 samples, 0.11%)</title><rect x="1117.2" y="1653" width="1.3" height="15.0" fill="rgb(218,119,23)" rx="2" ry="2" />
<text  x="1120.16" y="1663.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (2 samples, 0.04%)</title><rect x="386.3" y="1573" width="0.4" height="15.0" fill="rgb(211,198,40)" rx="2" ry="2" />
<text  x="389.30" y="1583.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.02%)</title><rect x="46.8" y="1637" width="0.2" height="15.0" fill="rgb(244,66,16)" rx="2" ry="2" />
<text  x="49.76" y="1647.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (2 samples, 0.04%)</title><rect x="63.3" y="1749" width="0.5" height="15.0" fill="rgb(244,187,29)" rx="2" ry="2" />
<text  x="66.34" y="1759.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;cql3::constants::value, true&gt;::make&lt;cql3::raw_value, seastar::shared_ptr&lt;abstract_type const&gt; const&amp;&gt; (1 samples, 0.02%)</title><rect x="71.2" y="1797" width="0.2" height="15.0" fill="rgb(246,148,1)" rx="2" ry="2" />
<text  x="74.19" y="1807.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::RecognizerSharedState (1 samples, 0.02%)</title><rect x="24.1" y="1765" width="0.2" height="15.0" fill="rgb(229,135,10)" rx="2" ry="2" />
<text  x="27.12" y="1775.5" ></text>
</g>
<g >
<title>query::partition_slice::row_ranges (1 samples, 0.02%)</title><rect x="345.7" y="1589" width="0.3" height="15.0" fill="rgb(239,80,17)" rx="2" ry="2" />
<text  x="348.73" y="1599.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::move_it (2 samples, 0.04%)</title><rect x="668.2" y="1877" width="0.5" height="15.0" fill="rgb(216,52,7)" rx="2" ry="2" />
<text  x="671.25" y="1887.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (14 samples, 0.27%)</title><rect x="1186.2" y="1589" width="3.1" height="15.0" fill="rgb(229,197,36)" rx="2" ry="2" />
<text  x="1189.19" y="1599.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::disable_abort_on_alloc_failure_temporarily (1 samples, 0.02%)</title><rect x="270.0" y="1605" width="0.2" height="15.0" fill="rgb(235,105,3)" rx="2" ry="2" />
<text  x="272.98" y="1615.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.02%)</title><rect x="48.3" y="1653" width="0.2" height="15.0" fill="rgb(232,203,44)" rx="2" ry="2" />
<text  x="51.32" y="1663.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.02%)</title><rect x="64.7" y="1509" width="0.2" height="15.0" fill="rgb(254,182,49)" rx="2" ry="2" />
<text  x="67.69" y="1519.5" ></text>
</g>
<g >
<title>std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt;::reserve (1 samples, 0.02%)</title><rect x="1144.3" y="1877" width="0.2" height="15.0" fill="rgb(241,33,7)" rx="2" ry="2" />
<text  x="1147.28" y="1887.5" ></text>
</g>
<g >
<title>seastar::internal::log_buf::inserter_iterator::operator= (1 samples, 0.02%)</title><rect x="688.0" y="1685" width="0.2" height="15.0" fill="rgb(241,213,50)" rx="2" ry="2" />
<text  x="690.97" y="1695.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::remove_if&lt;row::compact_and_expire (67 samples, 1.27%)</title><rect x="409.4" y="1621" width="15.0" height="15.0" fill="rgb(249,13,26)" rx="2" ry="2" />
<text  x="412.38" y="1631.5" ></text>
</g>
<g >
<title>service::storage_proxy::send_to_live_endpoints (9 samples, 0.17%)</title><rect x="1123.0" y="1685" width="2.0" height="15.0" fill="rgb(237,140,13)" rx="2" ry="2" />
<text  x="1125.99" y="1695.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_max_result_size (11 samples, 0.21%)</title><rect x="1107.1" y="1845" width="2.4" height="15.0" fill="rgb(242,161,19)" rx="2" ry="2" />
<text  x="1110.08" y="1855.5" ></text>
</g>
<g >
<title>operator new (9 samples, 0.17%)</title><rect x="1046.1" y="1749" width="2.0" height="15.0" fill="rgb(254,140,49)" rx="2" ry="2" />
<text  x="1049.11" y="1759.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::has_slice_or_needs_filtering (1 samples, 0.02%)</title><rect x="74.1" y="1781" width="0.2" height="15.0" fill="rgb(228,65,38)" rx="2" ry="2" />
<text  x="77.10" y="1791.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;nonwrapping_interval&lt;dht::ring_position&gt; const, std::default_delete&lt;nonwrapping_interval&lt;dht::ring_position&gt; const&gt; &gt;::~unique_ptr (7 samples, 0.13%)</title><rect x="599.7" y="1845" width="1.5" height="15.0" fill="rgb(213,180,13)" rx="2" ry="2" />
<text  x="602.66" y="1855.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.02%)</title><rect x="48.1" y="1749" width="0.2" height="15.0" fill="rgb(244,75,48)" rx="2" ry="2" />
<text  x="51.10" y="1759.5" ></text>
</g>
<g >
<title>operator new (6 samples, 0.11%)</title><rect x="453.5" y="1797" width="1.4" height="15.0" fill="rgb(249,134,34)" rx="2" ry="2" />
<text  x="456.54" y="1807.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.02%)</title><rect x="62.2" y="1701" width="0.2" height="15.0" fill="rgb(219,161,28)" rx="2" ry="2" />
<text  x="65.22" y="1711.5" ></text>
</g>
<g >
<title>double_decker&lt;long, cache_entry, dht::raw_token_less_comparator, dht::ring_position_comparator, 16,  (1 samples, 0.02%)</title><rect x="83.3" y="1957" width="0.2" height="15.0" fill="rgb(221,93,3)" rx="2" ry="2" />
<text  x="86.29" y="1967.5" ></text>
</g>
<g >
<title>make_flat_mutation_reader&lt;empty_flat_reader, seastar::lw_shared_ptr&lt;schema const&gt;, reader_permit&gt; (13 samples, 0.25%)</title><rect x="551.3" y="1717" width="2.9" height="15.0" fill="rgb(240,129,19)" rx="2" ry="2" />
<text  x="554.25" y="1727.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::cql_statement&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="822.9" y="1861" width="0.2" height="15.0" fill="rgb(236,205,52)" rx="2" ry="2" />
<text  x="825.89" y="1871.5" ></text>
</g>
<g >
<title>ser::query_result__partitions&lt;bytes_ostream&gt;::add (2 samples, 0.04%)</title><rect x="346.0" y="1589" width="0.4" height="15.0" fill="rgb(249,9,45)" rx="2" ry="2" />
<text  x="348.96" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;auth::resource_kind, std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;auth::resource_kind&gt;, std::hash&lt;auth::resource_kind&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::at (1 samples, 0.02%)</title><rect x="79.0" y="1861" width="0.3" height="15.0" fill="rgb(231,66,36)" rx="2" ry="2" />
<text  x="82.03" y="1871.5" ></text>
</g>
<g >
<title>bytes_ostream::chunk::~chunk (7 samples, 0.13%)</title><rect x="99.6" y="1829" width="1.6" height="15.0" fill="rgb(250,154,13)" rx="2" ry="2" />
<text  x="102.65" y="1839.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (4 samples, 0.08%)</title><rect x="524.6" y="1685" width="0.9" height="15.0" fill="rgb(248,178,23)" rx="2" ry="2" />
<text  x="527.58" y="1695.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;std::tuple&lt;std::optional&lt;clustering_key_prefix&gt; &gt; &gt;, query::consume_page&lt; (5 samples, 0.09%)</title><rect x="686.8" y="1925" width="1.2" height="15.0" fill="rgb(211,52,4)" rx="2" ry="2" />
<text  x="689.85" y="1935.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, cql3::operation::raw_update*, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="55.5" y="1477" width="0.2" height="15.0" fill="rgb(217,42,47)" rx="2" ry="2" />
<text  x="58.50" y="1487.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::operator (6 samples, 0.11%)</title><rect x="790.2" y="1557" width="1.3" height="15.0" fill="rgb(210,199,26)" rx="2" ry="2" />
<text  x="793.17" y="1567.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::operator= (6 samples, 0.11%)</title><rect x="860.1" y="1877" width="1.3" height="15.0" fill="rgb(239,62,29)" rx="2" ry="2" />
<text  x="863.09" y="1887.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::read_next (1 samples, 0.02%)</title><rect x="847.1" y="1797" width="0.2" height="15.0" fill="rgb(251,110,12)" rx="2" ry="2" />
<text  x="850.09" y="1807.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;query::read_command&gt;::make&lt;utils::UUID const&amp;, utils::UUID, query::partition_slice, query::max_result_size, query::row_limit, query::partition_limit, std::chrono::time_point&lt;gc_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt; &gt;&amp;, std::optional&lt;tracing::trace_info&gt;, utils::UUID, seastar::bool_class&lt;query::is_first_page_tag&gt; const&amp;, long&gt; (24 samples, 0.46%)</title><rect x="1101.0" y="1845" width="5.4" height="15.0" fill="rgb(250,46,41)" rx="2" ry="2" />
<text  x="1104.02" y="1855.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_destroy_data_aux (2 samples, 0.04%)</title><rect x="407.4" y="1589" width="0.4" height="15.0" fill="rgb(223,109,3)" rx="2" ry="2" />
<text  x="410.37" y="1599.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (14 samples, 0.27%)</title><rect x="1186.2" y="1125" width="3.1" height="15.0" fill="rgb(231,29,43)" rx="2" ry="2" />
<text  x="1189.19" y="1135.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (2 samples, 0.04%)</title><rect x="1105.7" y="1813" width="0.5" height="15.0" fill="rgb(227,178,4)" rx="2" ry="2" />
<text  x="1108.73" y="1823.5" ></text>
</g>
<g >
<title>range_tombstone_list::slice (3 samples, 0.06%)</title><rect x="289.7" y="1653" width="0.7" height="15.0" fill="rgb(225,98,54)" rx="2" ry="2" />
<text  x="292.70" y="1663.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.02%)</title><rect x="25.0" y="1717" width="0.2" height="15.0" fill="rgb(253,113,46)" rx="2" ry="2" />
<text  x="28.02" y="1727.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (2 samples, 0.04%)</title><rect x="1186.6" y="261" width="0.5" height="15.0" fill="rgb(231,127,4)" rx="2" ry="2" />
<text  x="1189.64" y="271.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (6 samples, 0.11%)</title><rect x="418.1" y="1573" width="1.4" height="15.0" fill="rgb(207,21,20)" rx="2" ry="2" />
<text  x="421.13" y="1583.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (1 samples, 0.02%)</title><rect x="657.7" y="1893" width="0.2" height="15.0" fill="rgb(252,1,10)" rx="2" ry="2" />
<text  x="660.71" y="1903.5" ></text>
</g>
<g >
<title>antlr3::IntStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::rewind (1 samples, 0.02%)</title><rect x="41.8" y="1653" width="0.2" height="15.0" fill="rgb(247,159,53)" rx="2" ry="2" />
<text  x="44.83" y="1663.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;column_definition const*, std::pair&lt;column_definition const* const, seastar::shared_ptr&lt;cql3::restrictions::single_column_restriction&gt; &gt;, std::_Select1st&lt;std::pair&lt;column_definition const* const, seastar::shared_ptr&lt;cql3::restrictions::single_column_restriction&gt; &gt; &gt;, cql3::restrictions::single_column_restrictions::column_definition_comparator, std::allocator&lt;std::pair&lt;column_definition const* const, seastar::shared_ptr&lt;cql3::restrictions::single_column_restriction&gt; &gt; &gt; &gt;::_M_emplace_hint_unique&lt;column_definition const*, seastar::shared_ptr&lt;cql3::restrictions::single_column_restriction&gt; &gt; (1 samples, 0.02%)</title><rect x="74.8" y="1717" width="0.2" height="15.0" fill="rgb(226,211,47)" rx="2" ry="2" />
<text  x="77.77" y="1727.5" ></text>
</g>
<g >
<title>utils::estimated_histogram::add (6 samples, 0.11%)</title><rect x="1152.6" y="1893" width="1.3" height="15.0" fill="rgb(209,63,51)" rx="2" ry="2" />
<text  x="1155.57" y="1903.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (2 samples, 0.04%)</title><rect x="788.8" y="1541" width="0.5" height="15.0" fill="rgb(238,133,1)" rx="2" ry="2" />
<text  x="791.82" y="1551.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;void&gt; &gt;::invoke&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::mutate_locally (1 samples, 0.02%)</title><rect x="1124.1" y="1605" width="0.2" height="15.0" fill="rgb(242,33,35)" rx="2" ry="2" />
<text  x="1127.11" y="1615.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume_in_thread&lt;sstables::sstable_writer, flat_mutation_reader::no_filter&gt; (1 samples, 0.02%)</title><rect x="1188.2" y="149" width="0.2" height="15.0" fill="rgb(233,17,33)" rx="2" ry="2" />
<text  x="1191.21" y="159.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (2 samples, 0.04%)</title><rect x="1149.4" y="1829" width="0.5" height="15.0" fill="rgb(230,138,7)" rx="2" ry="2" />
<text  x="1152.43" y="1839.5" ></text>
</g>
<g >
<title>std::vector&lt;seastar::shared_ptr&lt;cql3::relation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::relation&gt; &gt; &gt;::operator= (2 samples, 0.04%)</title><rect x="66.0" y="1781" width="0.5" height="15.0" fill="rgb(225,81,27)" rx="2" ry="2" />
<text  x="69.03" y="1791.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::find (1 samples, 0.02%)</title><rect x="944.1" y="1797" width="0.3" height="15.0" fill="rgb(235,223,4)" rx="2" ry="2" />
<text  x="947.14" y="1807.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (1 samples, 0.02%)</title><rect x="1189.1" y="181" width="0.2" height="15.0" fill="rgb(214,144,33)" rx="2" ry="2" />
<text  x="1192.10" y="191.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (3 samples, 0.06%)</title><rect x="889.5" y="1685" width="0.6" height="15.0" fill="rgb(236,0,3)" rx="2" ry="2" />
<text  x="892.45" y="1695.5" ></text>
</g>
<g >
<title>managed_bytes::operator= (4 samples, 0.08%)</title><rect x="926.9" y="1829" width="0.9" height="15.0" fill="rgb(242,32,1)" rx="2" ry="2" />
<text  x="929.88" y="1839.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql_transport::messages::result_message::rows&gt;::shared_ptr_count_for&lt;cql3::result&gt; (6 samples, 0.11%)</title><rect x="654.6" y="1877" width="1.3" height="15.0" fill="rgb(254,114,45)" rx="2" ry="2" />
<text  x="657.57" y="1887.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_Optional_payload_base (1 samples, 0.02%)</title><rect x="1092.3" y="1765" width="0.2" height="15.0" fill="rgb(232,162,32)" rx="2" ry="2" />
<text  x="1095.28" y="1775.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.04%)</title><rect x="51.7" y="1653" width="0.4" height="15.0" fill="rgb(233,65,28)" rx="2" ry="2" />
<text  x="54.69" y="1663.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;,  (25 samples, 0.47%)</title><rect x="730.3" y="1829" width="5.6" height="15.0" fill="rgb(249,180,38)" rx="2" ry="2" />
<text  x="733.33" y="1839.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::contains&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (12 samples, 0.23%)</title><rect x="824.5" y="1829" width="2.6" height="15.0" fill="rgb(209,175,6)" rx="2" ry="2" />
<text  x="827.46" y="1839.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (2 samples, 0.04%)</title><rect x="46.5" y="1749" width="0.5" height="15.0" fill="rgb(230,11,30)" rx="2" ry="2" />
<text  x="49.53" y="1759.5" ></text>
</g>
<g >
<title>rows_entry::rows_entry (2 samples, 0.04%)</title><rect x="1119.4" y="1605" width="0.4" height="15.0" fill="rgb(247,195,9)" rx="2" ry="2" />
<text  x="1122.40" y="1615.5" ></text>
</g>
<g >
<title>data_value::~data_value (1 samples, 0.02%)</title><rect x="73.7" y="1733" width="0.2" height="15.0" fill="rgb(240,99,53)" rx="2" ry="2" />
<text  x="76.65" y="1743.5" ></text>
</g>
<g >
<title>std::pair&lt;auth::role_or_anonymous, auth::resource&gt;::pair (1 samples, 0.02%)</title><rect x="779.2" y="1653" width="0.2" height="15.0" fill="rgb(240,164,12)" rx="2" ry="2" />
<text  x="782.19" y="1663.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;void&gt;::satisfy_with_result_of&lt;seastar::future&lt;service::digest_read_result&gt;::then_wrapped_nrvo&lt;void, service::abstract_read_executor::execute (27 samples, 0.51%)</title><rect x="691.6" y="1909" width="6.0" height="15.0" fill="rgb(215,193,47)" rx="2" ry="2" />
<text  x="694.55" y="1919.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.09%)</title><rect x="207.0" y="1637" width="1.1" height="15.0" fill="rgb(217,100,35)" rx="2" ry="2" />
<text  x="210.00" y="1647.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::vector (11 samples, 0.21%)</title><rect x="1090.0" y="1813" width="2.5" height="15.0" fill="rgb(208,123,13)" rx="2" ry="2" />
<text  x="1093.04" y="1823.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::process_where_clause (18 samples, 0.34%)</title><rect x="72.3" y="1845" width="4.0" height="15.0" fill="rgb(226,130,29)" rx="2" ry="2" />
<text  x="75.31" y="1855.5" ></text>
</g>
<g >
<title>seastar::logger::lambda_log_writer&lt;seastar::logger::log&lt;seastar::lw_shared_ptr&lt;schema const&gt;&amp;&gt; (1 samples, 0.02%)</title><rect x="688.0" y="1733" width="0.2" height="15.0" fill="rgb(208,129,4)" rx="2" ry="2" />
<text  x="690.97" y="1743.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::set_tokText (1 samples, 0.02%)</title><rect x="32.0" y="1685" width="0.2" height="15.0" fill="rgb(209,141,29)" rx="2" ry="2" />
<text  x="34.96" y="1695.5" ></text>
</g>
<g >
<title>seastar::reactor::touch_directory (1 samples, 0.02%)</title><rect x="688.6" y="1893" width="0.3" height="15.0" fill="rgb(252,101,27)" rx="2" ry="2" />
<text  x="691.64" y="1903.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (3 samples, 0.06%)</title><rect x="1014.5" y="1621" width="0.7" height="15.0" fill="rgb(221,163,40)" rx="2" ry="2" />
<text  x="1017.51" y="1631.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEENK4$_43clERKNSF_15binary_operatorEEUlRKNSF_12column_valueEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_17tuple_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlNSF_5tokenEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlSS_E_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_11conjunctionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_8constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_21unresolved_identifierEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_25column_mutation_attributeEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13function_callEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4castEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_15field_selectionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4nullEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13bind_variableEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_16untyped_constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_22collection_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_20usertype_constructorEE_EERS4_IJS14_SQ_ST_S11_S1C_S1G_S1K_S1O_S1S_S1W_S20_S24_S18_SX_S28_S2C_EEEJEEESt16integer_sequenceImJLm2EEEE14__visit_invokeES2H_S2J_ (112 samples, 2.13%)</title><rect x="876.7" y="1797" width="25.1" height="15.0" fill="rgb(224,118,44)" rx="2" ry="2" />
<text  x="879.68" y="1807.5" >_..</text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (3 samples, 0.06%)</title><rect x="257.4" y="1509" width="0.7" height="15.0" fill="rgb(239,143,22)" rx="2" ry="2" />
<text  x="260.43" y="1519.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::remove_if&lt;row::compact_and_expire (2 samples, 0.04%)</title><rect x="687.1" y="1701" width="0.4" height="15.0" fill="rgb(225,76,54)" rx="2" ry="2" />
<text  x="690.07" y="1711.5" ></text>
</g>
<g >
<title>scanning_reader::fill_buffer_from_delegate (2 samples, 0.04%)</title><rect x="107.5" y="1413" width="0.4" height="15.0" fill="rgb(211,62,3)" rx="2" ry="2" />
<text  x="110.49" y="1423.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (1 samples, 0.02%)</title><rect x="301.6" y="1733" width="0.2" height="15.0" fill="rgb(214,228,10)" rx="2" ry="2" />
<text  x="304.58" y="1743.5" ></text>
</g>
<g >
<title>std::tuple&lt;cql3::statements::alter_service_level_statement*, std::default_delete&lt;cql3::statements::alter_service_level_statement&gt; &gt;::tuple&lt;true, true&gt; (1 samples, 0.02%)</title><rect x="66.7" y="1749" width="0.2" height="15.0" fill="rgb(249,13,14)" rx="2" ry="2" />
<text  x="69.70" y="1759.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (3 samples, 0.06%)</title><rect x="53.0" y="1701" width="0.7" height="15.0" fill="rgb(207,171,25)" rx="2" ry="2" />
<text  x="56.03" y="1711.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_in_thread&lt;sstables::sstable_writer, flat_mutation_reader::no_filter&gt; (1 samples, 0.02%)</title><rect x="1188.0" y="149" width="0.2" height="15.0" fill="rgb(222,34,19)" rx="2" ry="2" />
<text  x="1190.98" y="159.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (14 samples, 0.27%)</title><rect x="1186.2" y="645" width="3.1" height="15.0" fill="rgb(211,57,8)" rx="2" ry="2" />
<text  x="1189.19" y="655.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (2 samples, 0.04%)</title><rect x="46.1" y="1749" width="0.4" height="15.0" fill="rgb(226,206,5)" rx="2" ry="2" />
<text  x="49.08" y="1759.5" ></text>
</g>
<g >
<title>posix_memalign (6 samples, 0.11%)</title><rect x="244.9" y="1509" width="1.3" height="15.0" fill="rgb(228,86,49)" rx="2" ry="2" />
<text  x="247.88" y="1519.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;dht::token, std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt;, std::allocator&lt;std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;dht::token&gt;, std::hash&lt;dht::token&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (3 samples, 0.06%)</title><rect x="1071.7" y="1717" width="0.6" height="15.0" fill="rgb(232,182,1)" rx="2" ry="2" />
<text  x="1074.66" y="1727.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="486.5" y="1749" width="0.2" height="15.0" fill="rgb(250,143,28)" rx="2" ry="2" />
<text  x="489.48" y="1759.5" ></text>
</g>
<g >
<title>std::default_delete&lt;compact_for_query&lt; (3 samples, 0.06%)</title><rect x="449.1" y="1685" width="0.6" height="15.0" fill="rgb(241,63,53)" rx="2" ry="2" />
<text  x="452.05" y="1695.5" ></text>
</g>
<g >
<title>service::client_state::get_timestamp (1 samples, 0.02%)</title><rect x="856.5" y="1829" width="0.2" height="15.0" fill="rgb(232,154,50)" rx="2" ry="2" />
<text  x="859.51" y="1839.5" ></text>
</g>
<g >
<title>bplus::tree&lt;long, intrusive_array&lt;memtable_entry&gt;, dht::raw_token_less_comparator, 16ul,  (1 samples, 0.02%)</title><rect x="18.3" y="1989" width="0.2" height="15.0" fill="rgb(226,196,48)" rx="2" ry="2" />
<text  x="21.29" y="1999.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit_slot&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::walking_visitor&lt;row::for_each_cell&lt;sstables::mc::writer::write_cells (1 samples, 0.02%)</title><rect x="1187.1" y="37" width="0.2" height="15.0" fill="rgb(241,42,33)" rx="2" ry="2" />
<text  x="1190.09" y="47.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (2 samples, 0.04%)</title><rect x="576.6" y="1701" width="0.4" height="15.0" fill="rgb(217,137,5)" rx="2" ry="2" />
<text  x="579.58" y="1711.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, unsigned int, std::_Identity&lt;unsigned int&gt;, std::less&lt;unsigned int&gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;unsigned int&gt; &gt;::find (4 samples, 0.08%)</title><rect x="43.2" y="1717" width="0.9" height="15.0" fill="rgb(218,216,31)" rx="2" ry="2" />
<text  x="46.17" y="1727.5" ></text>
</g>
<g >
<title>service::abstract_write_response_handler::apply_locally (5 samples, 0.09%)</title><rect x="1123.4" y="1669" width="1.2" height="15.0" fill="rgb(208,223,4)" rx="2" ry="2" />
<text  x="1126.44" y="1679.5" ></text>
</g>
<g >
<title>position_in_partition_view::for_range_end (2 samples, 0.04%)</title><rect x="272.0" y="1653" width="0.4" height="15.0" fill="rgb(210,81,32)" rx="2" ry="2" />
<text  x="275.00" y="1663.5" ></text>
</g>
<g >
<title>sstables::mc::writer::write_clustered (2 samples, 0.04%)</title><rect x="1186.6" y="117" width="0.5" height="15.0" fill="rgb(219,26,54)" rx="2" ry="2" />
<text  x="1189.64" y="127.5" ></text>
</g>
<g >
<title>position_in_partition::position_in_partition (5 samples, 0.09%)</title><rect x="270.9" y="1653" width="1.1" height="15.0" fill="rgb(232,102,3)" rx="2" ry="2" />
<text  x="273.88" y="1663.5" ></text>
</g>
<g >
<title>cql3::single_column_relation::single_column_relation (1 samples, 0.02%)</title><rect x="65.1" y="1717" width="0.3" height="15.0" fill="rgb(208,200,1)" rx="2" ry="2" />
<text  x="68.13" y="1727.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_in_thread&lt;sstables::sstable_writer, flat_mutation_reader::no_filter&gt; (2 samples, 0.04%)</title><rect x="1188.4" y="117" width="0.5" height="15.0" fill="rgb(253,63,1)" rx="2" ry="2" />
<text  x="1191.43" y="127.5" ></text>
</g>
<g >
<title>managed_bytes::free_chain (18 samples, 0.34%)</title><rect x="434.0" y="1621" width="4.1" height="15.0" fill="rgb(219,27,38)" rx="2" ry="2" />
<text  x="437.04" y="1631.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (3 samples, 0.06%)</title><rect x="818.6" y="1829" width="0.7" height="15.0" fill="rgb(218,111,39)" rx="2" ry="2" />
<text  x="821.63" y="1839.5" ></text>
</g>
<g >
<title>abstract_type::from_string (3 samples, 0.06%)</title><rect x="69.8" y="1797" width="0.7" height="15.0" fill="rgb(247,207,7)" rx="2" ry="2" />
<text  x="72.84" y="1807.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::process_results (35 samples, 0.66%)</title><rect x="648.1" y="1909" width="7.8" height="15.0" fill="rgb(249,197,49)" rx="2" ry="2" />
<text  x="651.07" y="1919.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (14 samples, 0.27%)</title><rect x="1186.2" y="1285" width="3.1" height="15.0" fill="rgb(223,85,7)" rx="2" ry="2" />
<text  x="1189.19" y="1295.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, seastar::shared_ptr&lt;service::abstract_write_response_handler&gt; &gt;, std::allocator&lt;std::pair&lt;unsigned long const, seastar::shared_ptr&lt;service::abstract_write_response_handler&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (1 samples, 0.02%)</title><rect x="1124.6" y="1669" width="0.2" height="15.0" fill="rgb(242,109,48)" rx="2" ry="2" />
<text  x="1127.56" y="1679.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::maybe_refresh_state (3 samples, 0.06%)</title><rect x="268.6" y="1589" width="0.7" height="15.0" fill="rgb(223,227,13)" rx="2" ry="2" />
<text  x="271.64" y="1599.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.02%)</title><rect x="1188.9" y="149" width="0.2" height="15.0" fill="rgb(231,14,3)" rx="2" ry="2" />
<text  x="1191.88" y="159.5" ></text>
</g>
<g >
<title>std::variant&lt;query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::operator=&lt;query::noop_hasher&gt; (1 samples, 0.02%)</title><rect x="612.9" y="1829" width="0.2" height="15.0" fill="rgb(254,10,45)" rx="2" ry="2" />
<text  x="615.89" y="1839.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;std::_List_iterator&lt;flat_mutation_reader&gt;, mutation_reader_merger::close (64 samples, 1.22%)</title><rect x="571.9" y="1781" width="14.3" height="15.0" fill="rgb(206,108,12)" rx="2" ry="2" />
<text  x="574.87" y="1791.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.02%)</title><rect x="60.4" y="1621" width="0.3" height="15.0" fill="rgb(226,121,5)" rx="2" ry="2" />
<text  x="63.43" y="1631.5" ></text>
</g>
<g >
<title>flat_mutation_reader::close (3 samples, 0.06%)</title><rect x="1162.4" y="1877" width="0.7" height="15.0" fill="rgb(243,160,32)" rx="2" ry="2" />
<text  x="1165.43" y="1887.5" ></text>
</g>
<g >
<title>std::push_heap&lt;mutation_reader_merger::reader_and_fragment*, mutation_reader_merger::reader_heap_compare&gt; (12 samples, 0.23%)</title><rect x="189.5" y="1669" width="2.7" height="15.0" fill="rgb(220,38,10)" rx="2" ry="2" />
<text  x="192.52" y="1679.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (1 samples, 0.02%)</title><rect x="79.9" y="1685" width="0.3" height="15.0" fill="rgb(235,193,25)" rx="2" ry="2" />
<text  x="82.93" y="1695.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.02%)</title><rect x="49.0" y="1637" width="0.2" height="15.0" fill="rgb(238,38,6)" rx="2" ry="2" />
<text  x="52.00" y="1647.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="274.5" y="1669" width="0.2" height="15.0" fill="rgb(220,69,30)" rx="2" ry="2" />
<text  x="277.46" y="1679.5" ></text>
</g>
<g >
<title>database::find_column_family (3 samples, 0.06%)</title><rect x="757.4" y="1797" width="0.7" height="15.0" fill="rgb(238,42,26)" rx="2" ry="2" />
<text  x="760.45" y="1807.5" ></text>
</g>
<g >
<title>schema_mutations::schema_mutations (1 samples, 0.02%)</title><rect x="107.0" y="1733" width="0.3" height="15.0" fill="rgb(221,216,34)" rx="2" ry="2" />
<text  x="110.04" y="1743.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;::_Tuple_impl&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const&amp;, auth::resource, void&gt; (5 samples, 0.09%)</title><rect x="766.0" y="1781" width="1.1" height="15.0" fill="rgb(206,128,25)" rx="2" ry="2" />
<text  x="768.96" y="1791.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::key_is_in_relation (5 samples, 0.09%)</title><rect x="943.2" y="1813" width="1.2" height="15.0" fill="rgb(217,213,9)" rx="2" ry="2" />
<text  x="946.24" y="1823.5" ></text>
</g>
<g >
<title>compound_type&lt; (9 samples, 0.17%)</title><rect x="922.2" y="1781" width="2.0" height="15.0" fill="rgb(214,98,33)" rx="2" ry="2" />
<text  x="925.17" y="1791.5" ></text>
</g>
<g >
<title>database::apply (1 samples, 0.02%)</title><rect x="1124.1" y="1589" width="0.2" height="15.0" fill="rgb(223,101,14)" rx="2" ry="2" />
<text  x="1127.11" y="1599.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (14 samples, 0.27%)</title><rect x="1186.2" y="741" width="3.1" height="15.0" fill="rgb(235,149,0)" rx="2" ry="2" />
<text  x="1189.19" y="751.5" ></text>
</g>
<g >
<title>cql3::query_options::query_options (19 samples, 0.36%)</title><rect x="833.9" y="1845" width="4.2" height="15.0" fill="rgb(251,55,50)" rx="2" ry="2" />
<text  x="836.87" y="1855.5" ></text>
</g>
<g >
<title>seastar::internal::future_base::future_base (1 samples, 0.02%)</title><rect x="775.2" y="1749" width="0.2" height="15.0" fill="rgb(239,103,33)" rx="2" ry="2" />
<text  x="778.15" y="1759.5" ></text>
</g>
<g >
<title>seastar::internal::do_until_state&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (1 samples, 0.02%)</title><rect x="845.5" y="1925" width="0.2" height="15.0" fill="rgb(214,47,18)" rx="2" ry="2" />
<text  x="848.53" y="1935.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::~resource_units (1 samples, 0.02%)</title><rect x="443.9" y="1669" width="0.2" height="15.0" fill="rgb(224,68,53)" rx="2" ry="2" />
<text  x="446.90" y="1679.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt;::_M_reset (1 samples, 0.02%)</title><rect x="274.7" y="1669" width="0.2" height="15.0" fill="rgb(209,108,36)" rx="2" ry="2" />
<text  x="277.69" y="1679.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::set_tokText (2 samples, 0.04%)</title><rect x="33.3" y="1669" width="0.5" height="15.0" fill="rgb(232,98,13)" rx="2" ry="2" />
<text  x="36.31" y="1679.5" ></text>
</g>
<g >
<title>absl::hash_internal::HashState::combine_contiguous (2 samples, 0.04%)</title><rect x="831.2" y="1749" width="0.4" height="15.0" fill="rgb(223,106,44)" rx="2" ry="2" />
<text  x="834.18" y="1759.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::digest_read_result&gt;::schedule&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::execute (13 samples, 0.25%)</title><rect x="970.8" y="1733" width="2.9" height="15.0" fill="rgb(227,58,32)" rx="2" ry="2" />
<text  x="973.81" y="1743.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;, service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (19 samples, 0.36%)</title><rect x="1125.5" y="1717" width="4.2" height="15.0" fill="rgb(246,166,20)" rx="2" ry="2" />
<text  x="1128.45" y="1727.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned char, std::pair&lt;unsigned char const, std::optional&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned char const, std::optional&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned char&gt;, std::hash&lt;unsigned char&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::clear (8 samples, 0.15%)</title><rect x="672.1" y="1861" width="1.7" height="15.0" fill="rgb(229,72,41)" rx="2" ry="2" />
<text  x="675.06" y="1871.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (5 samples, 0.09%)</title><rect x="1094.7" y="1813" width="1.2" height="15.0" fill="rgb(235,43,17)" rx="2" ry="2" />
<text  x="1097.75" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt;::_Move_ctor_base (1 samples, 0.02%)</title><rect x="894.2" y="1701" width="0.2" height="15.0" fill="rgb(247,28,8)" rx="2" ry="2" />
<text  x="897.16" y="1711.5" ></text>
</g>
<g >
<title>std::__relocate_a_1&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;*, std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;*, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt; (3 samples, 0.06%)</title><rect x="55.3" y="1637" width="0.6" height="15.0" fill="rgb(249,188,7)" rx="2" ry="2" />
<text  x="58.27" y="1647.5" ></text>
</g>
<g >
<title>intrusive_b::searcher&lt;clustering_key_prefix, rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare,  (1 samples, 0.02%)</title><rect x="106.8" y="1813" width="0.2" height="15.0" fill="rgb(250,69,25)" rx="2" ry="2" />
<text  x="109.82" y="1823.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.02%)</title><rect x="252.5" y="1573" width="0.2" height="15.0" fill="rgb(213,94,26)" rx="2" ry="2" />
<text  x="255.50" y="1583.5" ></text>
</g>
<g >
<title>utils::fb_utilities::get_broadcast_address (1 samples, 0.02%)</title><rect x="1029.3" y="1717" width="0.2" height="15.0" fill="rgb(226,126,14)" rx="2" ry="2" />
<text  x="1032.30" y="1727.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (1 samples, 0.02%)</title><rect x="151.9" y="1861" width="0.2" height="15.0" fill="rgb(207,140,24)" rx="2" ry="2" />
<text  x="154.87" y="1871.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::get_promise (1 samples, 0.02%)</title><rect x="1020.6" y="1685" width="0.2" height="15.0" fill="rgb(227,20,12)" rx="2" ry="2" />
<text  x="1023.56" y="1695.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.02%)</title><rect x="1015.2" y="1621" width="0.2" height="15.0" fill="rgb(226,73,32)" rx="2" ry="2" />
<text  x="1018.19" y="1631.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="1121.4" y="1637" width="0.2" height="15.0" fill="rgb(232,213,37)" rx="2" ry="2" />
<text  x="1124.42" y="1647.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_28has_slice_or_needs_filteringERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES28_S2B_ (1 samples, 0.02%)</title><rect x="649.6" y="1861" width="0.3" height="15.0" fill="rgb(248,26,37)" rx="2" ry="2" />
<text  x="652.64" y="1871.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;false, false, std::random_access_iterator_tag&gt;::__copy_m&lt;char const*, fmt::v7::detail::buffer_appender&lt;char&gt; &gt; (3 samples, 0.06%)</title><rect x="22.3" y="1909" width="0.7" height="15.0" fill="rgb(207,216,11)" rx="2" ry="2" />
<text  x="25.33" y="1919.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="301.8" y="1733" width="0.2" height="15.0" fill="rgb(222,64,13)" rx="2" ry="2" />
<text  x="304.81" y="1743.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.02%)</title><rect x="48.3" y="1589" width="0.2" height="15.0" fill="rgb(206,60,17)" rx="2" ry="2" />
<text  x="51.32" y="1599.5" ></text>
</g>
<g >
<title>std::visit&lt;overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::has_token (1 samples, 0.02%)</title><rect x="875.8" y="1813" width="0.2" height="15.0" fill="rgb(216,223,4)" rx="2" ry="2" />
<text  x="878.78" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.02%)</title><rect x="880.0" y="1733" width="0.3" height="15.0" fill="rgb(223,171,0)" rx="2" ry="2" />
<text  x="883.04" y="1743.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (1 samples, 0.02%)</title><rect x="438.1" y="1621" width="0.2" height="15.0" fill="rgb(246,81,9)" rx="2" ry="2" />
<text  x="441.07" y="1631.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (9 samples, 0.17%)</title><rect x="829.8" y="1797" width="2.1" height="15.0" fill="rgb(224,170,30)" rx="2" ry="2" />
<text  x="832.84" y="1807.5" ></text>
</g>
<g >
<title>database::find_column_family (1 samples, 0.02%)</title><rect x="960.3" y="1781" width="0.2" height="15.0" fill="rgb(249,119,20)" rx="2" ry="2" />
<text  x="963.28" y="1791.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::need_filtering (21 samples, 0.40%)</title><rect x="935.4" y="1845" width="4.7" height="15.0" fill="rgb(209,23,0)" rx="2" ry="2" />
<text  x="938.40" y="1855.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (1 samples, 0.02%)</title><rect x="1156.2" y="1909" width="0.2" height="15.0" fill="rgb(205,75,21)" rx="2" ry="2" />
<text  x="1159.16" y="1919.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;gms::inet_address, std::pair&lt;gms::inet_address const, utils::UUID&gt;, std::allocator&lt;std::pair&lt;gms::inet_address const, utils::UUID&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;gms::inet_address&gt;, std::hash&lt;gms::inet_address&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (6 samples, 0.11%)</title><rect x="1142.7" y="1861" width="1.4" height="15.0" fill="rgb(237,94,35)" rx="2" ry="2" />
<text  x="1145.71" y="1871.5" ></text>
</g>
<g >
<title>std::make_unique&lt;merging_reader&lt;mutation_reader_merger&gt;, seastar::lw_shared_ptr&lt;schema const&gt;&amp;, reader_permit, seastar::bool_class&lt;streamed_mutation::forwarding_tag&gt;&amp;, mutation_reader_merger&gt; (1 samples, 0.02%)</title><rect x="486.3" y="1749" width="0.2" height="15.0" fill="rgb(248,110,35)" rx="2" ry="2" />
<text  x="489.26" y="1759.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::got_cl (2 samples, 0.04%)</title><rect x="697.2" y="1893" width="0.4" height="15.0" fill="rgb(218,209,46)" rx="2" ry="2" />
<text  x="700.16" y="1903.5" ></text>
</g>
<g >
<title>bplus::tree&lt;long, intrusive_array&lt;memtable_entry&gt;, dht::raw_token_less_comparator, 16ul,  (1 samples, 0.02%)</title><rect x="1117.8" y="1589" width="0.3" height="15.0" fill="rgb(240,7,14)" rx="2" ry="2" />
<text  x="1120.83" y="1599.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (2 samples, 0.04%)</title><rect x="775.8" y="1669" width="0.5" height="15.0" fill="rgb(253,116,20)" rx="2" ry="2" />
<text  x="778.82" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::~_Variant_storage (1 samples, 0.02%)</title><rect x="348.4" y="1605" width="0.2" height="15.0" fill="rgb(211,12,24)" rx="2" ry="2" />
<text  x="351.42" y="1615.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::get_error (1 samples, 0.02%)</title><rect x="45.9" y="1765" width="0.2" height="15.0" fill="rgb(211,100,20)" rx="2" ry="2" />
<text  x="48.86" y="1775.5" ></text>
</g>
<g >
<title>seastar::gate::leave (1 samples, 0.02%)</title><rect x="618.0" y="1861" width="0.3" height="15.0" fill="rgb(249,62,7)" rx="2" ry="2" />
<text  x="621.04" y="1871.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (3 samples, 0.06%)</title><rect x="509.6" y="1605" width="0.6" height="15.0" fill="rgb(234,68,34)" rx="2" ry="2" />
<text  x="512.57" y="1615.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.06%)</title><rect x="611.8" y="1781" width="0.6" height="15.0" fill="rgb(213,66,40)" rx="2" ry="2" />
<text  x="614.77" y="1791.5" ></text>
</g>
<g >
<title>seastar::internal::future_base::set_coroutine (2 samples, 0.04%)</title><rect x="968.8" y="1781" width="0.4" height="15.0" fill="rgb(236,121,37)" rx="2" ry="2" />
<text  x="971.79" y="1791.5" ></text>
</g>
<g >
<title>write_fragmented&lt;managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="924.0" y="1765" width="0.2" height="15.0" fill="rgb(239,13,19)" rx="2" ry="2" />
<text  x="926.97" y="1775.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;service::digest_read_resolver&gt;::~shared_ptr_count_for (1 samples, 0.02%)</title><rect x="1133.1" y="1925" width="0.2" height="15.0" fill="rgb(217,129,48)" rx="2" ry="2" />
<text  x="1136.07" y="1935.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.02%)</title><rect x="44.7" y="1605" width="0.3" height="15.0" fill="rgb(236,130,50)" rx="2" ry="2" />
<text  x="47.74" y="1615.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="24.8" y="1749" width="0.2" height="15.0" fill="rgb(218,1,27)" rx="2" ry="2" />
<text  x="27.79" y="1759.5" ></text>
</g>
<g >
<title>mutation_reader_merger::~mutation_reader_merger (25 samples, 0.47%)</title><rect x="589.1" y="1797" width="5.6" height="15.0" fill="rgb(225,212,22)" rx="2" ry="2" />
<text  x="592.13" y="1807.5" ></text>
</g>
<g >
<title>seastar::internal::coroutine_traits_base&lt;service::storage_proxy_coordinator_query_result&gt;::promise_type::run_and_dispose (1 samples, 0.02%)</title><rect x="86.0" y="1941" width="0.2" height="15.0" fill="rgb(244,121,31)" rx="2" ry="2" />
<text  x="88.98" y="1951.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;nonwrapping_interval&lt;dht::ring_position&gt; const*, nonwrapping_interval&lt;dht::ring_position&gt;*&gt; (8 samples, 0.15%)</title><rect x="933.6" y="1797" width="1.8" height="15.0" fill="rgb(241,24,49)" rx="2" ry="2" />
<text  x="936.60" y="1807.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="626.6" y="1781" width="0.2" height="15.0" fill="rgb(241,227,0)" rx="2" ry="2" />
<text  x="629.56" y="1791.5" ></text>
</g>
<g >
<title>allocation_strategy::get_standard_migrator&lt;bplus::node&lt;long, intrusive_array&lt;memtable_entry&gt;, dht::raw_token_less_comparator, 16ul,  (1 samples, 0.02%)</title><rect x="1117.4" y="1557" width="0.2" height="15.0" fill="rgb(240,167,25)" rx="2" ry="2" />
<text  x="1120.38" y="1567.5" ></text>
</g>
<g >
<title>operator delete (7 samples, 0.13%)</title><rect x="601.7" y="1829" width="1.5" height="15.0" fill="rgb(234,68,4)" rx="2" ry="2" />
<text  x="604.68" y="1839.5" ></text>
</g>
<g >
<title>std::construct_at&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (6 samples, 0.11%)</title><rect x="26.6" y="1653" width="1.3" height="15.0" fill="rgb(222,122,48)" rx="2" ry="2" />
<text  x="29.58" y="1663.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.02%)</title><rect x="826.0" y="1765" width="0.3" height="15.0" fill="rgb(230,52,18)" rx="2" ry="2" />
<text  x="829.03" y="1775.5" ></text>
</g>
<g >
<title>std::type_info::operator== (1 samples, 0.02%)</title><rect x="989.9" y="1701" width="0.2" height="15.0" fill="rgb(226,187,48)" rx="2" ry="2" />
<text  x="992.86" y="1711.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (3 samples, 0.06%)</title><rect x="794.0" y="1509" width="0.6" height="15.0" fill="rgb(245,181,14)" rx="2" ry="2" />
<text  x="796.98" y="1519.5" ></text>
</g>
<g >
<title>database::apply_in_memory (27 samples, 0.51%)</title><rect x="1115.4" y="1717" width="6.0" height="15.0" fill="rgb(217,174,6)" rx="2" ry="2" />
<text  x="1118.37" y="1727.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (14 samples, 0.27%)</title><rect x="1186.2" y="1957" width="3.1" height="15.0" fill="rgb(247,226,40)" rx="2" ry="2" />
<text  x="1189.19" y="1967.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::insertToken (12 samples, 0.23%)</title><rect x="26.6" y="1733" width="2.7" height="15.0" fill="rgb(242,51,41)" rx="2" ry="2" />
<text  x="29.58" y="1743.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;column_definition const*, std::pair&lt;column_definition const* const, cql3::expr::expression&gt;, std::allocator&lt;std::pair&lt;column_definition const* const, cql3::expr::expression&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;column_definition const*&gt;, std::hash&lt;column_definition const*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (1 samples, 0.02%)</title><rect x="75.9" y="1797" width="0.2" height="15.0" fill="rgb(222,188,40)" rx="2" ry="2" />
<text  x="78.89" y="1807.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (1 samples, 0.02%)</title><rect x="757.4" y="1781" width="0.3" height="15.0" fill="rgb(230,108,5)" rx="2" ry="2" />
<text  x="760.45" y="1791.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.06%)</title><rect x="553.3" y="1685" width="0.6" height="15.0" fill="rgb(212,100,52)" rx="2" ry="2" />
<text  x="556.27" y="1695.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (3 samples, 0.06%)</title><rect x="1080.6" y="1813" width="0.7" height="15.0" fill="rgb(247,155,35)" rx="2" ry="2" />
<text  x="1083.63" y="1823.5" ></text>
</g>
<g >
<title>schema::column_at (2 samples, 0.04%)</title><rect x="252.1" y="1557" width="0.4" height="15.0" fill="rgb(209,22,30)" rx="2" ry="2" />
<text  x="255.05" y="1567.5" ></text>
</g>
<g >
<title>seastar::memory::stats (1 samples, 0.02%)</title><rect x="1115.8" y="1653" width="0.2" height="15.0" fill="rgb(237,201,28)" rx="2" ry="2" />
<text  x="1118.82" y="1663.5" ></text>
</g>
<g >
<title>std::__optional_hash_call_base&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, true&gt;::operator (4 samples, 0.08%)</title><rect x="793.8" y="1525" width="0.8" height="15.0" fill="rgb(226,211,34)" rx="2" ry="2" />
<text  x="796.75" y="1535.5" ></text>
</g>
<g >
<title>mutation_fragment::operator= (6 samples, 0.11%)</title><rect x="190.2" y="1653" width="1.3" height="15.0" fill="rgb(251,137,21)" rx="2" ry="2" />
<text  x="193.19" y="1663.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::do_fill_buffer (2 samples, 0.04%)</title><rect x="107.5" y="1317" width="0.4" height="15.0" fill="rgb(232,86,20)" rx="2" ry="2" />
<text  x="110.49" y="1327.5" ></text>
</g>
<g >
<title>atomic_cell_or_collection::copy (1 samples, 0.02%)</title><rect x="219.6" y="1557" width="0.2" height="15.0" fill="rgb(210,113,25)" rx="2" ry="2" />
<text  x="222.55" y="1567.5" ></text>
</g>
<g >
<title>cql3::operation::set_value::prepare (10 samples, 0.19%)</title><rect x="69.4" y="1845" width="2.2" height="15.0" fill="rgb(227,17,9)" rx="2" ry="2" />
<text  x="72.39" y="1855.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.06%)</title><rect x="485.4" y="1749" width="0.6" height="15.0" fill="rgb(222,97,6)" rx="2" ry="2" />
<text  x="488.36" y="1759.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (1 samples, 0.02%)</title><rect x="774.9" y="1717" width="0.3" height="15.0" fill="rgb(254,189,16)" rx="2" ry="2" />
<text  x="777.93" y="1727.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.02%)</title><rect x="60.7" y="1653" width="0.2" height="15.0" fill="rgb(240,65,36)" rx="2" ry="2" />
<text  x="63.65" y="1663.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (387 samples, 7.35%)</title><rect x="340.4" y="1669" width="86.7" height="15.0" fill="rgb(216,151,36)" rx="2" ry="2" />
<text  x="343.36" y="1679.5" >flat_mutat..</text>
</g>
<g >
<title>seastar::internal::do_with_impl&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (5 samples, 0.09%)</title><rect x="686.8" y="1829" width="1.2" height="15.0" fill="rgb(236,111,17)" rx="2" ry="2" />
<text  x="689.85" y="1839.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.02%)</title><rect x="1188.0" y="229" width="0.2" height="15.0" fill="rgb(207,145,14)" rx="2" ry="2" />
<text  x="1190.98" y="239.5" ></text>
</g>
<g >
<title>bound_view::from_range&lt;nonwrapping_interval&gt; (6 samples, 0.11%)</title><rect x="264.2" y="1557" width="1.3" height="15.0" fill="rgb(248,90,32)" rx="2" ry="2" />
<text  x="267.15" y="1567.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.02%)</title><rect x="973.7" y="1749" width="0.2" height="15.0" fill="rgb(251,53,54)" rx="2" ry="2" />
<text  x="976.72" y="1759.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (1 samples, 0.02%)</title><rect x="1131.3" y="1829" width="0.2" height="15.0" fill="rgb(223,183,13)" rx="2" ry="2" />
<text  x="1134.28" y="1839.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (2 samples, 0.04%)</title><rect x="632.8" y="1893" width="0.5" height="15.0" fill="rgb(243,118,45)" rx="2" ry="2" />
<text  x="635.83" y="1903.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::value (4 samples, 0.08%)</title><rect x="64.2" y="1733" width="0.9" height="15.0" fill="rgb(210,208,46)" rx="2" ry="2" />
<text  x="67.24" y="1743.5" ></text>
</g>
<g >
<title>bplus::searcher&lt;dht::ring_position, long, dht::raw_token_less_comparator, 16ul,  (3 samples, 0.06%)</title><rect x="492.5" y="1717" width="0.7" height="15.0" fill="rgb(228,129,9)" rx="2" ry="2" />
<text  x="495.53" y="1727.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;mutation_reader_merger::operator (3 samples, 0.06%)</title><rect x="304.7" y="1749" width="0.7" height="15.0" fill="rgb(222,131,50)" rx="2" ry="2" />
<text  x="307.72" y="1759.5" ></text>
</g>
<g >
<title>utils::tuple_hash::hash_impl&lt;2ul, auth::resource_kind, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (4 samples, 0.08%)</title><rect x="805.6" y="1733" width="0.9" height="15.0" fill="rgb(233,145,24)" rx="2" ry="2" />
<text  x="808.63" y="1743.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.02%)</title><rect x="46.3" y="1605" width="0.2" height="15.0" fill="rgb(251,212,43)" rx="2" ry="2" />
<text  x="49.31" y="1615.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::vector (11 samples, 0.21%)</title><rect x="156.8" y="1845" width="2.5" height="15.0" fill="rgb(233,96,5)" rx="2" ry="2" />
<text  x="159.80" y="1855.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (1 samples, 0.02%)</title><rect x="20.1" y="1957" width="0.2" height="15.0" fill="rgb(218,166,37)" rx="2" ry="2" />
<text  x="23.09" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (328 samples, 6.23%)</title><rect x="10.2" y="2053" width="73.5" height="15.0" fill="rgb(252,65,17)" rx="2" ry="2" />
<text  x="13.22" y="2063.5" >[unknown]</text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;service::abstract_read_executor::execute (2 samples, 0.04%)</title><rect x="693.8" y="1877" width="0.4" height="15.0" fill="rgb(220,143,35)" rx="2" ry="2" />
<text  x="696.79" y="1887.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (83 samples, 1.58%)</title><rect x="25.9" y="1781" width="18.6" height="15.0" fill="rgb(249,188,23)" rx="2" ry="2" />
<text  x="28.91" y="1791.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (35 samples, 0.66%)</title><rect x="1122.3" y="1877" width="7.9" height="15.0" fill="rgb(226,42,5)" rx="2" ry="2" />
<text  x="1125.32" y="1887.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::alter_service_level_statement, std::default_delete&lt;cql3::statements::alter_service_level_statement&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::statements::alter_service_level_statement&gt;, void&gt; (1 samples, 0.02%)</title><rect x="66.7" y="1797" width="0.2" height="15.0" fill="rgb(232,156,9)" rx="2" ry="2" />
<text  x="69.70" y="1807.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::insertToken (11 samples, 0.21%)</title><rect x="26.6" y="1717" width="2.5" height="15.0" fill="rgb(250,139,15)" rx="2" ry="2" />
<text  x="29.58" y="1727.5" ></text>
</g>
<g >
<title>write_cell&lt;ser::qr_clustered_row__cells__cells&lt;bytes_ostream&gt; &gt; (1 samples, 0.02%)</title><rect x="403.8" y="1621" width="0.2" height="15.0" fill="rgb(230,184,47)" rx="2" ry="2" />
<text  x="406.78" y="1631.5" ></text>
</g>
<g >
<title>query::result::builder::build (1 samples, 0.02%)</title><rect x="121.2" y="1877" width="0.2" height="15.0" fill="rgb(238,51,22)" rx="2" ry="2" />
<text  x="124.16" y="1887.5" ></text>
</g>
<g >
<title>__start_context (287 samples, 5.45%)</title><rect x="18.3" y="2037" width="64.3" height="15.0" fill="rgb(220,19,49)" rx="2" ry="2" />
<text  x="21.29" y="2047.5" >__start..</text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::contains&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (8 samples, 0.15%)</title><rect x="814.4" y="1765" width="1.8" height="15.0" fill="rgb(207,67,40)" rx="2" ry="2" />
<text  x="817.37" y="1775.5" ></text>
</g>
<g >
<title>std::optional&lt;mutation_querier&gt;::emplace&lt;mutation_querier&gt; (1 samples, 0.02%)</title><rect x="348.9" y="1605" width="0.2" height="15.0" fill="rgb(208,224,23)" rx="2" ry="2" />
<text  x="351.87" y="1615.5" ></text>
</g>
<g >
<title>mutation_fragment::destroy_data (53 samples, 1.01%)</title><rect x="429.6" y="1685" width="11.8" height="15.0" fill="rgb(231,138,20)" rx="2" ry="2" />
<text  x="432.56" y="1695.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="670.0" y="1893" width="0.3" height="15.0" fill="rgb(219,221,23)" rx="2" ry="2" />
<text  x="673.04" y="1903.5" ></text>
</g>
<g >
<title>partition_entry::apply_to_incomplete (1 samples, 0.02%)</title><rect x="19.2" y="1989" width="0.2" height="15.0" fill="rgb(253,86,36)" rx="2" ry="2" />
<text  x="22.19" y="1999.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="48.3" y="1637" width="0.2" height="15.0" fill="rgb(250,112,36)" rx="2" ry="2" />
<text  x="51.32" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (1 samples, 0.02%)</title><rect x="879.4" y="1733" width="0.2" height="15.0" fill="rgb(234,174,41)" rx="2" ry="2" />
<text  x="882.37" y="1743.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="1123.9" y="1589" width="0.2" height="15.0" fill="rgb(235,190,0)" rx="2" ry="2" />
<text  x="1126.88" y="1599.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.02%)</title><rect x="51.7" y="1605" width="0.2" height="15.0" fill="rgb(241,157,46)" rx="2" ry="2" />
<text  x="54.69" y="1615.5" ></text>
</g>
<g >
<title>db::system_keyspace::all_tables (1 samples, 0.02%)</title><rect x="20.1" y="1717" width="0.2" height="15.0" fill="rgb(234,0,33)" rx="2" ry="2" />
<text  x="23.09" y="1727.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (1 samples, 0.02%)</title><rect x="204.1" y="1637" width="0.2" height="15.0" fill="rgb(234,3,12)" rx="2" ry="2" />
<text  x="207.09" y="1647.5" ></text>
</g>
<g >
<title>atomic_cell_or_collection::copy (65 samples, 1.23%)</title><rect x="225.4" y="1541" width="14.5" height="15.0" fill="rgb(248,35,41)" rx="2" ry="2" />
<text  x="228.38" y="1551.5" ></text>
</g>
<g >
<title>mutation_partition_view::do_accept&lt;partition_builder&gt; (1 samples, 0.02%)</title><rect x="107.0" y="1669" width="0.3" height="15.0" fill="rgb(239,134,1)" rx="2" ry="2" />
<text  x="110.04" y="1679.5" ></text>
</g>
<g >
<title>scanning_reader::fill_buffer (2 samples, 0.04%)</title><rect x="107.5" y="1461" width="0.4" height="15.0" fill="rgb(254,95,17)" rx="2" ry="2" />
<text  x="110.49" y="1471.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (1 samples, 0.02%)</title><rect x="108.8" y="1765" width="0.3" height="15.0" fill="rgb(236,191,17)" rx="2" ry="2" />
<text  x="111.84" y="1775.5" ></text>
</g>
<g >
<title>bound_view::from_range_end&lt;nonwrapping_interval&gt; (1 samples, 0.02%)</title><rect x="272.2" y="1637" width="0.2" height="15.0" fill="rgb(216,205,13)" rx="2" ry="2" />
<text  x="275.22" y="1647.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (14 samples, 0.27%)</title><rect x="1186.2" y="1349" width="3.1" height="15.0" fill="rgb(227,74,35)" rx="2" ry="2" />
<text  x="1189.19" y="1359.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;schema_registry_entry&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;schema_registry_entry&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (1 samples, 0.02%)</title><rect x="963.9" y="1749" width="0.2" height="15.0" fill="rgb(205,97,10)" rx="2" ry="2" />
<text  x="966.86" y="1759.5" ></text>
</g>
<g >
<title>compound_type&lt; (1 samples, 0.02%)</title><rect x="106.8" y="1765" width="0.2" height="15.0" fill="rgb(237,141,11)" rx="2" ry="2" />
<text  x="109.82" y="1775.5" ></text>
</g>
<g >
<title>compound_wrapper&lt;partition_key, partition_key_view&gt;::make_empty (3 samples, 0.06%)</title><rect x="561.6" y="1813" width="0.6" height="15.0" fill="rgb(248,153,39)" rx="2" ry="2" />
<text  x="564.56" y="1823.5" ></text>
</g>
<g >
<title>utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;::lru_entry::touch (1 samples, 0.02%)</title><rect x="735.9" y="1829" width="0.3" height="15.0" fill="rgb(250,155,48)" rx="2" ry="2" />
<text  x="738.93" y="1839.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (5 samples, 0.09%)</title><rect x="246.4" y="1541" width="1.2" height="15.0" fill="rgb(253,26,30)" rx="2" ry="2" />
<text  x="249.45" y="1551.5" ></text>
</g>
<g >
<title>locator::token_metadata::is_any_node_being_replaced (1 samples, 0.02%)</title><rect x="1071.4" y="1717" width="0.3" height="15.0" fill="rgb(254,229,1)" rx="2" ry="2" />
<text  x="1074.44" y="1727.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (3 samples, 0.06%)</title><rect x="676.5" y="1893" width="0.7" height="15.0" fill="rgb(241,22,43)" rx="2" ry="2" />
<text  x="679.54" y="1903.5" ></text>
</g>
<g >
<title>reader_permit::consume (1 samples, 0.02%)</title><rect x="318.8" y="1701" width="0.3" height="15.0" fill="rgb(221,137,35)" rx="2" ry="2" />
<text  x="321.84" y="1711.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::add_raw_update (6 samples, 0.11%)</title><rect x="54.6" y="1733" width="1.3" height="15.0" fill="rgb(225,25,24)" rx="2" ry="2" />
<text  x="57.60" y="1743.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.06%)</title><rect x="528.4" y="1605" width="0.7" height="15.0" fill="rgb(224,200,9)" rx="2" ry="2" />
<text  x="531.39" y="1615.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::drop_view_statement, std::default_delete&lt;cql3::statements::drop_view_statement&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="68.3" y="1813" width="0.2" height="15.0" fill="rgb(249,156,40)" rx="2" ry="2" />
<text  x="71.27" y="1823.5" ></text>
</g>
<g >
<title>rows_entry::tri_compare::operator (1 samples, 0.02%)</title><rect x="106.8" y="1797" width="0.2" height="15.0" fill="rgb(227,185,12)" rx="2" ry="2" />
<text  x="109.82" y="1807.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;std::optional&lt;clustering_key_prefix&gt; &gt;::dispose (1 samples, 0.02%)</title><rect x="455.3" y="1813" width="0.3" height="15.0" fill="rgb(206,9,52)" rx="2" ry="2" />
<text  x="458.33" y="1823.5" ></text>
</g>
<g >
<title>service::storage_proxy_stats::split_stats::get_ep_stat (3 samples, 0.06%)</title><rect x="710.6" y="1877" width="0.7" height="15.0" fill="rgb(206,89,29)" rx="2" ry="2" />
<text  x="713.60" y="1887.5" ></text>
</g>
<g >
<title>ser::schema_view::mutations (1 samples, 0.02%)</title><rect x="107.0" y="1765" width="0.3" height="15.0" fill="rgb(254,172,48)" rx="2" ry="2" />
<text  x="110.04" y="1775.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (2 samples, 0.04%)</title><rect x="583.1" y="1717" width="0.4" height="15.0" fill="rgb(225,82,39)" rx="2" ry="2" />
<text  x="586.08" y="1727.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (18 samples, 0.34%)</title><rect x="1125.7" y="1669" width="4.0" height="15.0" fill="rgb(254,183,54)" rx="2" ry="2" />
<text  x="1128.68" y="1679.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;cql3::operation::set_value&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="62.7" y="1669" width="0.2" height="15.0" fill="rgb(237,140,1)" rx="2" ry="2" />
<text  x="65.67" y="1679.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const*, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;*&gt; (1 samples, 0.02%)</title><rect x="796.9" y="1653" width="0.2" height="15.0" fill="rgb(250,78,45)" rx="2" ry="2" />
<text  x="799.89" y="1663.5" ></text>
</g>
<g >
<title>locator::i_endpoint_snitch::snitch_instance (1 samples, 0.02%)</title><rect x="1123.2" y="1669" width="0.2" height="15.0" fill="rgb(228,207,45)" rx="2" ry="2" />
<text  x="1126.21" y="1679.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume_in_thread&lt;sstables::sstable_writer&gt; (1 samples, 0.02%)</title><rect x="1188.9" y="133" width="0.2" height="15.0" fill="rgb(218,69,25)" rx="2" ry="2" />
<text  x="1191.88" y="143.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_last_fragment_kind, 4ul&gt;::emplace_back&lt;std::_List_iterator&lt;flat_mutation_reader&gt;, mutation_fragment::kind&gt; (3 samples, 0.06%)</title><rect x="473.5" y="1685" width="0.7" height="15.0" fill="rgb(212,145,41)" rx="2" ry="2" />
<text  x="476.48" y="1695.5" ></text>
</g>
<g >
<title>cql3::single_column_relation::single_column_relation (1 samples, 0.02%)</title><rect x="65.1" y="1701" width="0.3" height="15.0" fill="rgb(235,176,2)" rx="2" ry="2" />
<text  x="68.13" y="1711.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="541.4" y="1749" width="0.2" height="15.0" fill="rgb(212,77,26)" rx="2" ry="2" />
<text  x="544.39" y="1759.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::destroy&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="57.5" y="1653" width="0.2" height="15.0" fill="rgb(247,1,52)" rx="2" ry="2" />
<text  x="60.51" y="1663.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.02%)</title><rect x="64.7" y="1493" width="0.2" height="15.0" fill="rgb(207,101,30)" rx="2" ry="2" />
<text  x="67.69" y="1503.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (1 samples, 0.02%)</title><rect x="78.8" y="1845" width="0.2" height="15.0" fill="rgb(207,7,28)" rx="2" ry="2" />
<text  x="81.81" y="1855.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (233 samples, 4.43%)</title><rect x="214.6" y="1621" width="52.2" height="15.0" fill="rgb(243,133,24)" rx="2" ry="2" />
<text  x="217.62" y="1631.5" >parti..</text>
</g>
<g >
<title>db::schema_tables::v3::views (1 samples, 0.02%)</title><rect x="20.1" y="1685" width="0.2" height="15.0" fill="rgb(241,110,10)" rx="2" ry="2" />
<text  x="23.09" y="1695.5" ></text>
</g>
<g >
<title>mutation_fragment::visit&lt;partition_snapshot_read_accounter&amp;&gt; (2 samples, 0.04%)</title><rect x="202.5" y="1653" width="0.5" height="15.0" fill="rgb(247,208,2)" rx="2" ry="2" />
<text  x="205.52" y="1663.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.02%)</title><rect x="57.3" y="1541" width="0.2" height="15.0" fill="rgb(210,118,33)" rx="2" ry="2" />
<text  x="60.29" y="1551.5" ></text>
</g>
<g >
<title>basic_atomic_cell_view&lt; (4 samples, 0.08%)</title><rect x="411.4" y="1605" width="0.9" height="15.0" fill="rgb(249,47,28)" rx="2" ry="2" />
<text  x="414.40" y="1615.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="185.3" y="1653" width="0.2" height="15.0" fill="rgb(232,207,34)" rx="2" ry="2" />
<text  x="188.26" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_nodes (1 samples, 0.02%)</title><rect x="1079.5" y="1765" width="0.2" height="15.0" fill="rgb(234,172,14)" rx="2" ry="2" />
<text  x="1082.51" y="1775.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (3 samples, 0.06%)</title><rect x="812.8" y="1717" width="0.7" height="15.0" fill="rgb(249,167,0)" rx="2" ry="2" />
<text  x="815.80" y="1727.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (2 samples, 0.04%)</title><rect x="768.2" y="1765" width="0.5" height="15.0" fill="rgb(212,37,27)" rx="2" ry="2" />
<text  x="771.20" y="1775.5" ></text>
</g>
<g >
<title>cql3::statements::update_statement::execute_operations_for_key (14 samples, 0.27%)</title><rect x="852.2" y="1765" width="3.2" height="15.0" fill="rgb(225,200,27)" rx="2" ry="2" />
<text  x="855.25" y="1775.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (14 samples, 0.27%)</title><rect x="1186.2" y="533" width="3.1" height="15.0" fill="rgb(237,5,4)" rx="2" ry="2" />
<text  x="1189.19" y="543.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (1 samples, 0.02%)</title><rect x="911.9" y="1781" width="0.2" height="15.0" fill="rgb(223,43,27)" rx="2" ry="2" />
<text  x="914.87" y="1791.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (2 samples, 0.04%)</title><rect x="1094.3" y="1813" width="0.4" height="15.0" fill="rgb(224,209,3)" rx="2" ry="2" />
<text  x="1097.30" y="1823.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (3 samples, 0.06%)</title><rect x="901.1" y="1733" width="0.7" height="15.0" fill="rgb(246,156,45)" rx="2" ry="2" />
<text  x="904.11" y="1743.5" ></text>
</g>
<g >
<title>utils::basic_ihistogram&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt; &gt;::mark&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; (5 samples, 0.09%)</title><rect x="677.7" y="1877" width="1.1" height="15.0" fill="rgb(243,126,4)" rx="2" ry="2" />
<text  x="680.66" y="1887.5" ></text>
</g>
<g >
<title>seastar::make_file_impl (1 samples, 0.02%)</title><rect x="674.7" y="1909" width="0.3" height="15.0" fill="rgb(206,201,24)" rx="2" ry="2" />
<text  x="677.74" y="1919.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (33 samples, 0.63%)</title><rect x="431.6" y="1637" width="7.4" height="15.0" fill="rgb(226,107,48)" rx="2" ry="2" />
<text  x="434.57" y="1647.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="28.4" y="1605" width="0.2" height="15.0" fill="rgb(213,153,2)" rx="2" ry="2" />
<text  x="31.38" y="1615.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (2 samples, 0.04%)</title><rect x="426.6" y="1621" width="0.5" height="15.0" fill="rgb(216,105,24)" rx="2" ry="2" />
<text  x="429.64" y="1631.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="119.6" y="1861" width="0.2" height="15.0" fill="rgb(217,31,20)" rx="2" ry="2" />
<text  x="122.60" y="1871.5" ></text>
</g>
<g >
<title>seastar::internal::future_base::set_coroutine (2 samples, 0.04%)</title><rect x="1018.1" y="1669" width="0.4" height="15.0" fill="rgb(228,39,12)" rx="2" ry="2" />
<text  x="1021.10" y="1679.5" ></text>
</g>
<g >
<title>mutation_partition::upper_bound (1 samples, 0.02%)</title><rect x="277.6" y="1637" width="0.2" height="15.0" fill="rgb(214,82,11)" rx="2" ry="2" />
<text  x="280.60" y="1647.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::~guard (2 samples, 0.04%)</title><rect x="198.5" y="1685" width="0.4" height="15.0" fill="rgb(251,111,3)" rx="2" ry="2" />
<text  x="201.49" y="1695.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::partition_slice, std::default_delete&lt;query::partition_slice&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="555.7" y="1765" width="0.3" height="15.0" fill="rgb(250,98,22)" rx="2" ry="2" />
<text  x="558.74" y="1775.5" ></text>
</g>
<g >
<title>seastar::future&lt;boost::iterator_range&lt;mutation_fragment*&gt; &gt;::then_impl&lt;mutation_fragment_merger&lt;mutation_reader_merger&gt;::fetch (4 samples, 0.08%)</title><rect x="303.8" y="1749" width="0.9" height="15.0" fill="rgb(206,204,17)" rx="2" ry="2" />
<text  x="306.82" y="1759.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (83 samples, 1.58%)</title><rect x="25.9" y="1797" width="18.6" height="15.0" fill="rgb(231,170,15)" rx="2" ry="2" />
<text  x="28.91" y="1807.5" ></text>
</g>
<g >
<title>logalloc::segment_pool::refill_emergency_reserve (1 samples, 0.02%)</title><rect x="515.2" y="1733" width="0.2" height="15.0" fill="rgb(213,98,2)" rx="2" ry="2" />
<text  x="518.17" y="1743.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::local (1 samples, 0.02%)</title><rect x="81.5" y="1909" width="0.2" height="15.0" fill="rgb(235,184,19)" rx="2" ry="2" />
<text  x="84.49" y="1919.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.02%)</title><rect x="112.9" y="1909" width="0.2" height="15.0" fill="rgb(254,83,38)" rx="2" ry="2" />
<text  x="115.87" y="1919.5" ></text>
</g>
<g >
<title>_ZSt5visitIR18overloaded_functorIJZN4cql34expr9find_atomIZNS2_28has_slice_or_needs_filteringERKNS2_10expressionEEUlRKNS2_15binary_operatorEE_EEPS8_S6_T_EUlS9_E_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_8constantEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_11conjunctionEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_12column_valueEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_5tokenEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_21unresolved_identifierEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_25column_mutation_attributeEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_13function_callEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_4castEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_15field_selectionEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_4nullEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_13bind_variableEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_16untyped_constantEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_17tuple_constructorEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_22collection_constructorEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_20usertype_constructorEE_EEJRSt7variantIJSI_S7_SM_SQ_SU_SY_S12_S16_S1A_S1E_S1I_S1M_SE_S1Q_S1U_S1Y_EEEENSt13invoke_resultISC_JDpDTclsr3stdE3getILm0EEclsr3stdE7declvalIT0_EEEEEE4typeEOSC_DpOS28_ (1 samples, 0.02%)</title><rect x="650.1" y="1829" width="0.2" height="15.0" fill="rgb(243,87,13)" rx="2" ry="2" />
<text  x="653.09" y="1839.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (3 samples, 0.06%)</title><rect x="722.7" y="1813" width="0.7" height="15.0" fill="rgb(233,85,10)" rx="2" ry="2" />
<text  x="725.71" y="1823.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_one (53 samples, 1.01%)</title><rect x="182.3" y="1701" width="11.9" height="15.0" fill="rgb(220,201,41)" rx="2" ry="2" />
<text  x="185.35" y="1711.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (3 samples, 0.06%)</title><rect x="53.0" y="1685" width="0.7" height="15.0" fill="rgb(208,27,28)" rx="2" ry="2" />
<text  x="56.03" y="1695.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (1 samples, 0.02%)</title><rect x="924.2" y="1781" width="0.2" height="15.0" fill="rgb(243,81,2)" rx="2" ry="2" />
<text  x="927.19" y="1791.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (5 samples, 0.09%)</title><rect x="51.0" y="1749" width="1.1" height="15.0" fill="rgb(223,144,40)" rx="2" ry="2" />
<text  x="54.01" y="1759.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (26 samples, 0.49%)</title><rect x="253.2" y="1557" width="5.8" height="15.0" fill="rgb(205,57,42)" rx="2" ry="2" />
<text  x="256.17" y="1567.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="53.9" y="1685" width="0.3" height="15.0" fill="rgb(227,33,38)" rx="2" ry="2" />
<text  x="56.93" y="1695.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate (58 samples, 1.10%)</title><rect x="882.3" y="1717" width="13.0" height="15.0" fill="rgb(216,27,45)" rx="2" ry="2" />
<text  x="885.28" y="1727.5" ></text>
</g>
<g >
<title>database::find_uuid (11 samples, 0.21%)</title><rect x="811.7" y="1781" width="2.4" height="15.0" fill="rgb(218,223,31)" rx="2" ry="2" />
<text  x="814.68" y="1791.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate (1 samples, 0.02%)</title><rect x="881.2" y="1733" width="0.2" height="15.0" fill="rgb(234,79,51)" rx="2" ry="2" />
<text  x="884.16" y="1743.5" ></text>
</g>
<g >
<title>std::uniform_int_distribution&lt;unsigned long&gt;::operator (9 samples, 0.17%)</title><rect x="842.4" y="1877" width="2.0" height="15.0" fill="rgb(213,118,10)" rx="2" ry="2" />
<text  x="845.39" y="1887.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="212.6" y="1637" width="0.2" height="15.0" fill="rgb(209,139,32)" rx="2" ry="2" />
<text  x="215.61" y="1647.5" ></text>
</g>
<g >
<title>schema_registry_entry::get_schema (1 samples, 0.02%)</title><rect x="107.0" y="1797" width="0.3" height="15.0" fill="rgb(210,67,0)" rx="2" ry="2" />
<text  x="110.04" y="1807.5" ></text>
</g>
<g >
<title>bound_view::from_range_end&lt;nonwrapping_interval&gt; (3 samples, 0.06%)</title><rect x="282.3" y="1605" width="0.7" height="15.0" fill="rgb(244,146,24)" rx="2" ry="2" />
<text  x="285.31" y="1615.5" ></text>
</g>
<g >
<title>free (3 samples, 0.06%)</title><rect x="439.0" y="1621" width="0.6" height="15.0" fill="rgb(247,19,40)" rx="2" ry="2" />
<text  x="441.97" y="1631.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;dht::token, std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt;, std::allocator&lt;std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;dht::token&gt;, std::hash&lt;dht::token&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (1 samples, 0.02%)</title><rect x="1129.0" y="1589" width="0.3" height="15.0" fill="rgb(252,78,36)" rx="2" ry="2" />
<text  x="1132.04" y="1599.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;mutation_querier&gt;::_M_reset (1 samples, 0.02%)</title><rect x="451.3" y="1781" width="0.2" height="15.0" fill="rgb(235,217,0)" rx="2" ry="2" />
<text  x="454.30" y="1791.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::modification_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::do_flush (43 samples, 0.82%)</title><rect x="847.5" y="1909" width="9.7" height="15.0" fill="rgb(226,200,24)" rx="2" ry="2" />
<text  x="850.54" y="1919.5" ></text>
</g>
<g >
<title>std::__push_heap&lt;mutation_reader_merger::reader_and_fragment*, long, mutation_reader_merger::reader_and_fragment, __gnu_cxx::__ops::_Iter_comp_val&lt;mutation_reader_merger::reader_heap_compare&gt; &gt; (2 samples, 0.04%)</title><rect x="191.5" y="1653" width="0.5" height="15.0" fill="rgb(238,147,42)" rx="2" ry="2" />
<text  x="194.54" y="1663.5" ></text>
</g>
<g >
<title>std::hash&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::operator (3 samples, 0.06%)</title><rect x="761.9" y="1749" width="0.7" height="15.0" fill="rgb(212,136,33)" rx="2" ry="2" />
<text  x="764.93" y="1759.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::~small_vector (1 samples, 0.02%)</title><rect x="1161.8" y="1845" width="0.2" height="15.0" fill="rgb(241,26,32)" rx="2" ry="2" />
<text  x="1164.76" y="1855.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (3 samples, 0.06%)</title><rect x="53.0" y="1573" width="0.7" height="15.0" fill="rgb(205,45,46)" rx="2" ry="2" />
<text  x="56.03" y="1583.5" ></text>
</g>
<g >
<title>__tls_init (1 samples, 0.02%)</title><rect x="550.6" y="1701" width="0.2" height="15.0" fill="rgb(241,84,22)" rx="2" ry="2" />
<text  x="553.58" y="1711.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_construct&lt;interval_bound&lt;dht::ring_position&gt; const&amp;&gt; (4 samples, 0.08%)</title><rect x="622.7" y="1861" width="0.9" height="15.0" fill="rgb(215,199,4)" rx="2" ry="2" />
<text  x="625.75" y="1871.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_M_reset (2 samples, 0.04%)</title><rect x="920.6" y="1797" width="0.5" height="15.0" fill="rgb(246,82,34)" rx="2" ry="2" />
<text  x="923.61" y="1807.5" ></text>
</g>
<g >
<title>flat_mutation_reader::peek (2 samples, 0.04%)</title><rect x="322.9" y="1797" width="0.4" height="15.0" fill="rgb(215,64,41)" rx="2" ry="2" />
<text  x="325.87" y="1807.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::apply_updates (17 samples, 0.32%)</title><rect x="852.0" y="1797" width="3.8" height="15.0" fill="rgb(220,186,32)" rx="2" ry="2" />
<text  x="855.02" y="1807.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector (2 samples, 0.04%)</title><rect x="1043.0" y="1749" width="0.4" height="15.0" fill="rgb(252,37,5)" rx="2" ry="2" />
<text  x="1045.98" y="1759.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (3 samples, 0.06%)</title><rect x="541.8" y="1765" width="0.7" height="15.0" fill="rgb(227,188,29)" rx="2" ry="2" />
<text  x="544.84" y="1775.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="645.8" y="1909" width="0.3" height="15.0" fill="rgb(244,103,24)" rx="2" ry="2" />
<text  x="648.83" y="1919.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.02%)</title><rect x="57.3" y="1605" width="0.2" height="15.0" fill="rgb(242,65,48)" rx="2" ry="2" />
<text  x="60.29" y="1615.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="49.4" y="1669" width="0.3" height="15.0" fill="rgb(226,220,52)" rx="2" ry="2" />
<text  x="52.45" y="1679.5" ></text>
</g>
<g >
<title>db::schema_tables::merge_tables_and_views (1 samples, 0.02%)</title><rect x="107.0" y="1909" width="0.3" height="15.0" fill="rgb(214,157,4)" rx="2" ry="2" />
<text  x="110.04" y="1919.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_range_tombstone (1 samples, 0.02%)</title><rect x="203.0" y="1669" width="0.2" height="15.0" fill="rgb(216,224,23)" rx="2" ry="2" />
<text  x="205.97" y="1679.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::allocate_large (1 samples, 0.02%)</title><rect x="567.2" y="1717" width="0.2" height="15.0" fill="rgb(244,169,17)" rx="2" ry="2" />
<text  x="570.17" y="1727.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.02%)</title><rect x="48.3" y="1605" width="0.2" height="15.0" fill="rgb(211,168,5)" rx="2" ry="2" />
<text  x="51.32" y="1615.5" ></text>
</g>
<g >
<title>clustering_row::clustering_row (153 samples, 2.91%)</title><rect x="218.2" y="1589" width="34.3" height="15.0" fill="rgb(212,37,29)" rx="2" ry="2" />
<text  x="221.21" y="1599.5" >cl..</text>
</g>
<g >
<title>cql3::statements::modification_statement::execute_without_condition (1 samples, 0.02%)</title><rect x="848.0" y="1829" width="0.2" height="15.0" fill="rgb(250,179,27)" rx="2" ry="2" />
<text  x="850.99" y="1839.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::impl&gt;::_S_destroy&lt;seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::impl, mutation_fragment&gt; (2 samples, 0.04%)</title><rect x="316.6" y="1717" width="0.4" height="15.0" fill="rgb(206,178,15)" rx="2" ry="2" />
<text  x="319.60" y="1727.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::get0 (4 samples, 0.08%)</title><rect x="444.6" y="1701" width="0.9" height="15.0" fill="rgb(248,170,18)" rx="2" ry="2" />
<text  x="447.57" y="1711.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::read_next (1 samples, 0.02%)</title><rect x="1186.4" y="69" width="0.2" height="15.0" fill="rgb(236,168,15)" rx="2" ry="2" />
<text  x="1189.41" y="79.5" ></text>
</g>
<g >
<title>free (16 samples, 0.30%)</title><rect x="434.5" y="1605" width="3.6" height="15.0" fill="rgb(223,29,11)" rx="2" ry="2" />
<text  x="437.49" y="1615.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::clear (1 samples, 0.02%)</title><rect x="809.7" y="1797" width="0.2" height="15.0" fill="rgb(233,62,23)" rx="2" ry="2" />
<text  x="812.67" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt;::_Copy_ctor_base (1 samples, 0.02%)</title><rect x="848.4" y="1685" width="0.3" height="15.0" fill="rgb(217,18,45)" rx="2" ry="2" />
<text  x="851.44" y="1695.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;query::result_memory_accounter&gt;::move_it (1 samples, 0.02%)</title><rect x="138.9" y="1877" width="0.2" height="15.0" fill="rgb(232,131,1)" rx="2" ry="2" />
<text  x="141.87" y="1887.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="71.0" y="1781" width="0.2" height="15.0" fill="rgb(207,90,54)" rx="2" ry="2" />
<text  x="73.96" y="1791.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::get0 (2 samples, 0.04%)</title><rect x="105.0" y="1909" width="0.5" height="15.0" fill="rgb(219,110,52)" rx="2" ry="2" />
<text  x="108.03" y="1919.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="748.7" y="1685" width="0.2" height="15.0" fill="rgb(232,120,45)" rx="2" ry="2" />
<text  x="751.70" y="1695.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take (1 samples, 0.02%)</title><rect x="750.3" y="1813" width="0.2" height="15.0" fill="rgb(248,173,25)" rx="2" ry="2" />
<text  x="753.27" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_List_node_base::_M_transfer (2 samples, 0.04%)</title><rect x="189.1" y="1669" width="0.4" height="15.0" fill="rgb(242,184,28)" rx="2" ry="2" />
<text  x="192.07" y="1679.5" ></text>
</g>
<g >
<title>write_cell&lt;ser::qr_clustered_row__cells__cells&lt;bytes_ostream&gt; &gt; (1 samples, 0.02%)</title><rect x="686.8" y="1685" width="0.3" height="15.0" fill="rgb(252,69,27)" rx="2" ry="2" />
<text  x="689.85" y="1695.5" ></text>
</g>
<g >
<title>abstract_type::from_string (1 samples, 0.02%)</title><rect x="73.2" y="1733" width="0.2" height="15.0" fill="rgb(254,186,33)" rx="2" ry="2" />
<text  x="76.20" y="1743.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.29] (1 samples, 0.02%)</title><rect x="10.2" y="2005" width="0.2" height="15.0" fill="rgb(209,205,39)" rx="2" ry="2" />
<text  x="13.22" y="2015.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (2 samples, 0.04%)</title><rect x="512.7" y="1605" width="0.5" height="15.0" fill="rgb(241,24,20)" rx="2" ry="2" />
<text  x="515.70" y="1615.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (3 samples, 0.06%)</title><rect x="1093.6" y="1813" width="0.7" height="15.0" fill="rgb(249,9,7)" rx="2" ry="2" />
<text  x="1096.63" y="1823.5" ></text>
</g>
<g >
<title>abstract_type::as_cql3_type (1 samples, 0.02%)</title><rect x="70.5" y="1781" width="0.2" height="15.0" fill="rgb(219,44,54)" rx="2" ry="2" />
<text  x="73.51" y="1791.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (2 samples, 0.04%)</title><rect x="309.4" y="1765" width="0.5" height="15.0" fill="rgb(210,163,1)" rx="2" ry="2" />
<text  x="312.43" y="1775.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (1 samples, 0.02%)</title><rect x="260.1" y="1589" width="0.2" height="15.0" fill="rgb(205,100,33)" rx="2" ry="2" />
<text  x="263.12" y="1599.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_last_fragment_kind, 4ul&gt;::small_vector (3 samples, 0.06%)</title><rect x="482.9" y="1685" width="0.7" height="15.0" fill="rgb(250,77,8)" rx="2" ry="2" />
<text  x="485.90" y="1695.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::get0 (1 samples, 0.02%)</title><rect x="310.1" y="1781" width="0.2" height="15.0" fill="rgb(246,88,12)" rx="2" ry="2" />
<text  x="313.10" y="1791.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::needs_post_query_ordering (5 samples, 0.09%)</title><rect x="943.2" y="1829" width="1.2" height="15.0" fill="rgb(205,62,23)" rx="2" ry="2" />
<text  x="946.24" y="1839.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume_in_thread&lt;sstables::sstable_writer&gt; (1 samples, 0.02%)</title><rect x="1188.2" y="165" width="0.2" height="15.0" fill="rgb(239,60,14)" rx="2" ry="2" />
<text  x="1191.21" y="175.5" ></text>
</g>
<g >
<title>ser::serializer&lt;clustering_key_prefix&gt;::write&lt;bytes_ostream&gt; (1 samples, 0.02%)</title><rect x="1127.9" y="1541" width="0.2" height="15.0" fill="rgb(211,94,15)" rx="2" ry="2" />
<text  x="1130.92" y="1551.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reserve&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::fill_buffer (1 samples, 0.02%)</title><rect x="1186.4" y="101" width="0.2" height="15.0" fill="rgb(235,210,7)" rx="2" ry="2" />
<text  x="1189.41" y="111.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::find (4 samples, 0.08%)</title><rect x="943.2" y="1797" width="0.9" height="15.0" fill="rgb(220,115,52)" rx="2" ry="2" />
<text  x="946.24" y="1807.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::emplace&lt;atomic_cell_or_collection, seastar::optimized_optional&lt;cell_hash&gt; &gt; (2 samples, 0.04%)</title><rect x="853.8" y="1701" width="0.5" height="15.0" fill="rgb(221,40,7)" rx="2" ry="2" />
<text  x="856.82" y="1711.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::digest_read_result&gt;::take (1 samples, 0.02%)</title><rect x="693.6" y="1861" width="0.2" height="15.0" fill="rgb(238,44,10)" rx="2" ry="2" />
<text  x="696.57" y="1871.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="1118.5" y="1605" width="0.2" height="15.0" fill="rgb(209,134,14)" rx="2" ry="2" />
<text  x="1121.51" y="1615.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (3 samples, 0.06%)</title><rect x="996.6" y="1669" width="0.7" height="15.0" fill="rgb(249,150,49)" rx="2" ry="2" />
<text  x="999.58" y="1679.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.02%)</title><rect x="575.2" y="1733" width="0.3" height="15.0" fill="rgb(212,76,50)" rx="2" ry="2" />
<text  x="578.23" y="1743.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::operator (1 samples, 0.02%)</title><rect x="1038.9" y="1701" width="0.3" height="15.0" fill="rgb(229,158,54)" rx="2" ry="2" />
<text  x="1041.94" y="1711.5" ></text>
</g>
<g >
<title>_ZSt5applyIZN7seastar8internal12do_with_implISt8optionalIN4auth8resourceEEZNK7service12client_state20check_has_permissionENS4_12command_descEE3$_7JEEEDaOT_OT0_DpOT1_EUlDpOT_E_St5tupleIJOS6_EEEDcSC_SE_ (5 samples, 0.09%)</title><rect x="772.9" y="1749" width="1.1" height="15.0" fill="rgb(221,212,28)" rx="2" ry="2" />
<text  x="775.91" y="1759.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (14 samples, 0.27%)</title><rect x="1186.2" y="709" width="3.1" height="15.0" fill="rgb(249,21,21)" rx="2" ry="2" />
<text  x="1189.19" y="719.5" ></text>
</g>
<g >
<title>database::find_keyspace (20 samples, 0.38%)</title><rect x="1036.7" y="1765" width="4.5" height="15.0" fill="rgb(232,101,8)" rx="2" ry="2" />
<text  x="1039.70" y="1775.5" ></text>
</g>
<g >
<title>schema::column_at (1 samples, 0.02%)</title><rect x="1186.6" y="37" width="0.3" height="15.0" fill="rgb(231,57,26)" rx="2" ry="2" />
<text  x="1189.64" y="47.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;dht::token, std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt;, std::allocator&lt;std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;dht::token&gt;, std::hash&lt;dht::token&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (18 samples, 0.34%)</title><rect x="1067.2" y="1685" width="4.0" height="15.0" fill="rgb(250,228,47)" rx="2" ry="2" />
<text  x="1070.18" y="1695.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_Optional_payload_base (1 samples, 0.02%)</title><rect x="623.9" y="1861" width="0.2" height="15.0" fill="rgb(240,30,53)" rx="2" ry="2" />
<text  x="626.87" y="1871.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (14 samples, 0.27%)</title><rect x="1186.2" y="517" width="3.1" height="15.0" fill="rgb(214,160,7)" rx="2" ry="2" />
<text  x="1189.19" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;global_schema_ptr, std::allocator&lt;global_schema_ptr&gt; &gt;::_M_realloc_insert&lt;seastar::lw_shared_ptr&lt;schema const&gt;&amp;&gt; (1 samples, 0.02%)</title><rect x="107.0" y="1861" width="0.3" height="15.0" fill="rgb(227,189,49)" rx="2" ry="2" />
<text  x="110.04" y="1871.5" ></text>
</g>
<g >
<title>cql3::restrictions::(anonymous namespace)::range_from_bytes (1 samples, 0.02%)</title><rect x="851.1" y="1781" width="0.3" height="15.0" fill="rgb(220,202,46)" rx="2" ry="2" />
<text  x="854.13" y="1791.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="448.6" y="1669" width="0.2" height="15.0" fill="rgb(235,88,22)" rx="2" ry="2" />
<text  x="451.61" y="1679.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_last_fragment_kind, 4ul&gt;::emplace_back&lt;std::_List_iterator&lt;flat_mutation_reader&gt;, mutation_fragment::kind&gt; (1 samples, 0.02%)</title><rect x="302.7" y="1733" width="0.2" height="15.0" fill="rgb(247,229,49)" rx="2" ry="2" />
<text  x="305.70" y="1743.5" ></text>
</g>
<g >
<title>sstables::mc::writer::write_row_body (1 samples, 0.02%)</title><rect x="1187.1" y="85" width="0.2" height="15.0" fill="rgb(245,72,10)" rx="2" ry="2" />
<text  x="1190.09" y="95.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;std::pair&lt;seastar::shared_ptr&lt;service::abstract_read_executor&gt;, nonwrapping_interval&lt;dht::token&gt; &gt;, 1ul&gt;::clear (1 samples, 0.02%)</title><rect x="1158.0" y="1909" width="0.2" height="15.0" fill="rgb(241,133,26)" rx="2" ry="2" />
<text  x="1160.95" y="1919.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;compact_for_query&lt; (1 samples, 0.02%)</title><rect x="452.4" y="1781" width="0.2" height="15.0" fill="rgb(238,226,21)" rx="2" ry="2" />
<text  x="455.42" y="1791.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value, std::allocator&lt;cql3::raw_value&gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="849.8" y="1765" width="0.2" height="15.0" fill="rgb(227,45,54)" rx="2" ry="2" />
<text  x="852.78" y="1775.5" ></text>
</g>
<g >
<title>allocation_strategy::alloc&lt;blob_storage&gt; (1 samples, 0.02%)</title><rect x="231.0" y="1509" width="0.2" height="15.0" fill="rgb(232,227,23)" rx="2" ry="2" />
<text  x="233.98" y="1519.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.02%)</title><rect x="1188.0" y="213" width="0.2" height="15.0" fill="rgb(241,42,49)" rx="2" ry="2" />
<text  x="1190.98" y="223.5" ></text>
</g>
<g >
<title>auth::data_resource_view::data_resource_view (1 samples, 0.02%)</title><rect x="791.7" y="1557" width="0.3" height="15.0" fill="rgb(234,221,15)" rx="2" ry="2" />
<text  x="794.74" y="1567.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (1 samples, 0.02%)</title><rect x="1100.6" y="1829" width="0.2" height="15.0" fill="rgb(210,172,49)" rx="2" ry="2" />
<text  x="1103.58" y="1839.5" ></text>
</g>
<g >
<title>std::hash&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::operator (1 samples, 0.02%)</title><rect x="813.5" y="1717" width="0.2" height="15.0" fill="rgb(249,217,15)" rx="2" ry="2" />
<text  x="816.48" y="1727.5" ></text>
</g>
<g >
<title>clustering_row::clustering_row (1 samples, 0.02%)</title><rect x="107.7" y="1221" width="0.2" height="15.0" fill="rgb(222,103,14)" rx="2" ry="2" />
<text  x="110.72" y="1231.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::restrictions::multi_column_restriction&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="1106.4" y="1845" width="0.2" height="15.0" fill="rgb(207,72,43)" rx="2" ry="2" />
<text  x="1109.40" y="1855.5" ></text>
</g>
<g >
<title>std::get&lt;2ul, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; (1 samples, 0.02%)</title><rect x="1109.8" y="1845" width="0.2" height="15.0" fill="rgb(245,207,11)" rx="2" ry="2" />
<text  x="1112.76" y="1855.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (1 samples, 0.02%)</title><rect x="1115.4" y="1637" width="0.2" height="15.0" fill="rgb(232,202,14)" rx="2" ry="2" />
<text  x="1118.37" y="1647.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::set&lt;&gt; (2 samples, 0.04%)</title><rect x="95.2" y="1893" width="0.4" height="15.0" fill="rgb(214,164,15)" rx="2" ry="2" />
<text  x="98.17" y="1903.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume_in_thread&lt;sstables::sstable_writer, flat_mutation_reader::no_filter&gt; (1 samples, 0.02%)</title><rect x="1177.0" y="1941" width="0.2" height="15.0" fill="rgb(230,5,38)" rx="2" ry="2" />
<text  x="1180.00" y="1951.5" ></text>
</g>
<g >
<title>query::querier&lt; (1 samples, 0.02%)</title><rect x="142.9" y="1861" width="0.2" height="15.0" fill="rgb(243,40,13)" rx="2" ry="2" />
<text  x="145.90" y="1871.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume_in_thread&lt;sstables::sstable_writer, flat_mutation_reader::no_filter&gt; (1 samples, 0.02%)</title><rect x="1186.4" y="245" width="0.2" height="15.0" fill="rgb(232,74,31)" rx="2" ry="2" />
<text  x="1189.41" y="255.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="55.9" y="1669" width="0.3" height="15.0" fill="rgb(237,204,35)" rx="2" ry="2" />
<text  x="58.94" y="1679.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (36 samples, 0.68%)</title><rect x="787.0" y="1605" width="8.1" height="15.0" fill="rgb(237,184,6)" rx="2" ry="2" />
<text  x="790.03" y="1615.5" ></text>
</g>
<g >
<title>bplus::node&lt;long, intrusive_array&lt;memtable_entry&gt;, dht::raw_token_less_comparator, 16ul,  (1 samples, 0.02%)</title><rect x="18.3" y="1973" width="0.2" height="15.0" fill="rgb(217,149,12)" rx="2" ry="2" />
<text  x="21.29" y="1983.5" ></text>
</g>
<g >
<title>std::construct_at&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::entry&gt; (1 samples, 0.02%)</title><rect x="136.0" y="1845" width="0.2" height="15.0" fill="rgb(244,92,53)" rx="2" ry="2" />
<text  x="138.96" y="1855.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_in_thread&lt;sstables::sstable_writer, flat_mutation_reader::no_filter&gt; (1 samples, 0.02%)</title><rect x="1188.9" y="101" width="0.2" height="15.0" fill="rgb(237,209,37)" rx="2" ry="2" />
<text  x="1191.88" y="111.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::invoke_on_all (1 samples, 0.02%)</title><rect x="20.1" y="1893" width="0.2" height="15.0" fill="rgb(213,41,26)" rx="2" ry="2" />
<text  x="23.09" y="1903.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;interval_bound&lt;dht::ring_position&gt;, false, false&gt;::_Optional_base (1 samples, 0.02%)</title><rect x="622.5" y="1861" width="0.2" height="15.0" fill="rgb(229,69,33)" rx="2" ry="2" />
<text  x="625.52" y="1871.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::allocate_large_and_trim (1 samples, 0.02%)</title><rect x="567.2" y="1701" width="0.2" height="15.0" fill="rgb(232,50,52)" rx="2" ry="2" />
<text  x="570.17" y="1711.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (7 samples, 0.13%)</title><rect x="1025.9" y="1653" width="1.6" height="15.0" fill="rgb(242,54,33)" rx="2" ry="2" />
<text  x="1028.94" y="1663.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (1 samples, 0.02%)</title><rect x="632.4" y="1861" width="0.2" height="15.0" fill="rgb(239,97,40)" rx="2" ry="2" />
<text  x="635.39" y="1871.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (1 samples, 0.02%)</title><rect x="1014.1" y="1589" width="0.2" height="15.0" fill="rgb(236,166,18)" rx="2" ry="2" />
<text  x="1017.06" y="1599.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (5 samples, 0.09%)</title><rect x="1035.6" y="1733" width="1.1" height="15.0" fill="rgb(244,54,42)" rx="2" ry="2" />
<text  x="1038.58" y="1743.5" ></text>
</g>
<g >
<title>dht::ring_position_tri_compare (50 samples, 0.95%)</title><rect x="502.8" y="1701" width="11.2" height="15.0" fill="rgb(239,122,12)" rx="2" ry="2" />
<text  x="505.84" y="1711.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reserve&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (436 samples, 8.28%)</title><rect x="198.0" y="1701" width="97.8" height="15.0" fill="rgb(234,75,34)" rx="2" ry="2" />
<text  x="201.04" y="1711.5" >logalloc::a..</text>
</g>
<g >
<title>service::storage_proxy::sort_endpoints_by_proximity (13 samples, 0.25%)</title><rect x="1073.5" y="1749" width="2.9" height="15.0" fill="rgb(248,175,53)" rx="2" ry="2" />
<text  x="1076.46" y="1759.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::has_slice_or_needs_filtering (2 samples, 0.04%)</title><rect x="937.6" y="1797" width="0.5" height="15.0" fill="rgb(207,120,24)" rx="2" ry="2" />
<text  x="940.64" y="1807.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector&lt;gms::inet_address const*&gt; (1 samples, 0.02%)</title><rect x="1124.8" y="1669" width="0.2" height="15.0" fill="rgb(227,137,44)" rx="2" ry="2" />
<text  x="1127.78" y="1679.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (1 samples, 0.02%)</title><rect x="1140.9" y="1909" width="0.2" height="15.0" fill="rgb(230,211,19)" rx="2" ry="2" />
<text  x="1143.92" y="1919.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::vector (6 samples, 0.11%)</title><rect x="929.8" y="1829" width="1.3" height="15.0" fill="rgb(223,212,2)" rx="2" ry="2" />
<text  x="932.79" y="1839.5" ></text>
</g>
<g >
<title>std::hash&lt;std::basic_string_view&lt;signed char, std::char_traits&lt;signed char&gt; &gt; &gt;::operator (9 samples, 0.17%)</title><rect x="733.7" y="1733" width="2.0" height="15.0" fill="rgb(218,191,5)" rx="2" ry="2" />
<text  x="736.69" y="1743.5" ></text>
</g>
<g >
<title>query::result::builder::build (9 samples, 0.17%)</title><rect x="605.5" y="1861" width="2.0" height="15.0" fill="rgb(250,100,51)" rx="2" ry="2" />
<text  x="608.49" y="1871.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::~holder (1 samples, 0.02%)</title><rect x="578.8" y="1717" width="0.2" height="15.0" fill="rgb(206,42,45)" rx="2" ry="2" />
<text  x="581.82" y="1727.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.06%)</title><rect x="287.2" y="1605" width="0.7" height="15.0" fill="rgb(217,65,47)" rx="2" ry="2" />
<text  x="290.24" y="1615.5" ></text>
</g>
<g >
<title>antlr3::Lexer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::emit (5 samples, 0.09%)</title><rect x="32.9" y="1685" width="1.1" height="15.0" fill="rgb(220,10,5)" rx="2" ry="2" />
<text  x="35.86" y="1695.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::make_data_requests (72 samples, 1.37%)</title><rect x="699.6" y="1925" width="16.2" height="15.0" fill="rgb(210,40,47)" rx="2" ry="2" />
<text  x="702.62" y="1935.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (2 samples, 0.04%)</title><rect x="557.3" y="1829" width="0.5" height="15.0" fill="rgb(221,12,45)" rx="2" ry="2" />
<text  x="560.30" y="1839.5" ></text>
</g>
<g >
<title>schema_registry::learn (4 samples, 0.08%)</title><rect x="108.4" y="1893" width="0.9" height="15.0" fill="rgb(247,47,11)" rx="2" ry="2" />
<text  x="111.39" y="1903.5" ></text>
</g>
<g >
<title>db::is_serial_consistency (2 samples, 0.04%)</title><rect x="948.4" y="1813" width="0.4" height="15.0" fill="rgb(218,1,53)" rx="2" ry="2" />
<text  x="951.40" y="1823.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (1 samples, 0.02%)</title><rect x="61.8" y="1685" width="0.2" height="15.0" fill="rgb(216,100,5)" rx="2" ry="2" />
<text  x="64.77" y="1695.5" ></text>
</g>
<g >
<title>query::result_set::from_raw_result (1 samples, 0.02%)</title><rect x="108.2" y="1893" width="0.2" height="15.0" fill="rgb(226,196,43)" rx="2" ry="2" />
<text  x="111.17" y="1903.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment&lt;schema const&amp;, rows_entry const&amp;&gt; (1 samples, 0.02%)</title><rect x="214.4" y="1621" width="0.2" height="15.0" fill="rgb(252,158,21)" rx="2" ry="2" />
<text  x="217.40" y="1631.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; const*, std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt; &gt;, nonwrapping_interval&lt;clustering_key_prefix&gt;*&gt; (5 samples, 0.09%)</title><rect x="158.1" y="1829" width="1.2" height="15.0" fill="rgb(223,179,54)" rx="2" ry="2" />
<text  x="161.14" y="1839.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (1 samples, 0.02%)</title><rect x="1079.5" y="1781" width="0.2" height="15.0" fill="rgb(253,23,43)" rx="2" ry="2" />
<text  x="1082.51" y="1791.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="208.3" y="1637" width="0.3" height="15.0" fill="rgb(227,6,18)" rx="2" ry="2" />
<text  x="211.35" y="1647.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.06%)</title><rect x="641.6" y="1909" width="0.6" height="15.0" fill="rgb(212,197,1)" rx="2" ry="2" />
<text  x="644.57" y="1919.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (53 samples, 1.01%)</title><rect x="227.8" y="1525" width="11.9" height="15.0" fill="rgb(252,224,16)" rx="2" ry="2" />
<text  x="230.85" y="1535.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::pop_clustering_row (2 samples, 0.04%)</title><rect x="265.9" y="1605" width="0.5" height="15.0" fill="rgb(250,187,29)" rx="2" ry="2" />
<text  x="268.95" y="1615.5" ></text>
</g>
<g >
<title>std::__relocate_a&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;*, std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;*, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt; (3 samples, 0.06%)</title><rect x="55.3" y="1653" width="0.6" height="15.0" fill="rgb(251,109,17)" rx="2" ry="2" />
<text  x="58.27" y="1663.5" ></text>
</g>
<g >
<title>write_fragmented&lt;managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="1118.5" y="1637" width="0.2" height="15.0" fill="rgb(208,24,39)" rx="2" ry="2" />
<text  x="1121.51" y="1647.5" ></text>
</g>
<g >
<title>operator new (10 samples, 0.19%)</title><rect x="975.1" y="1749" width="2.2" height="15.0" fill="rgb(218,199,16)" rx="2" ry="2" />
<text  x="978.07" y="1759.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (11 samples, 0.21%)</title><rect x="944.4" y="1813" width="2.4" height="15.0" fill="rgb(208,160,45)" rx="2" ry="2" />
<text  x="947.36" y="1823.5" ></text>
</g>
<g >
<title>operator new (9 samples, 0.17%)</title><rect x="471.2" y="1669" width="2.1" height="15.0" fill="rgb(228,188,7)" rx="2" ry="2" />
<text  x="474.24" y="1679.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="1159.1" y="1877" width="0.2" height="15.0" fill="rgb(253,212,20)" rx="2" ry="2" />
<text  x="1162.07" y="1887.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.02%)</title><rect x="60.2" y="1525" width="0.2" height="15.0" fill="rgb(219,43,39)" rx="2" ry="2" />
<text  x="63.20" y="1535.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (3 samples, 0.06%)</title><rect x="53.0" y="1669" width="0.7" height="15.0" fill="rgb(251,64,53)" rx="2" ry="2" />
<text  x="56.03" y="1679.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;tracking_allocator&lt;mutation_fragment&gt; &gt;::_S_destroy&lt;tracking_allocator&lt;mutation_fragment&gt;, mutation_fragment&gt; (2 samples, 0.04%)</title><rect x="185.5" y="1669" width="0.4" height="15.0" fill="rgb(211,179,11)" rx="2" ry="2" />
<text  x="188.49" y="1679.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.02%)</title><rect x="688.6" y="1845" width="0.3" height="15.0" fill="rgb(212,184,4)" rx="2" ry="2" />
<text  x="691.64" y="1855.5" ></text>
</g>
<g >
<title>cql3::expr::make_conjunction (2 samples, 0.04%)</title><rect x="74.3" y="1733" width="0.5" height="15.0" fill="rgb(236,121,6)" rx="2" ry="2" />
<text  x="77.32" y="1743.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;cql3::raw_value const*, cql3::raw_value*&gt; (2 samples, 0.04%)</title><rect x="841.5" y="1861" width="0.4" height="15.0" fill="rgb(231,149,20)" rx="2" ry="2" />
<text  x="844.49" y="1871.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (1 samples, 0.02%)</title><rect x="535.8" y="1717" width="0.2" height="15.0" fill="rgb(205,149,11)" rx="2" ry="2" />
<text  x="538.79" y="1727.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::operator== (7 samples, 0.13%)</title><rect x="788.2" y="1557" width="1.5" height="15.0" fill="rgb(232,99,52)" rx="2" ry="2" />
<text  x="791.15" y="1567.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="266.6" y="1605" width="0.2" height="15.0" fill="rgb(245,107,17)" rx="2" ry="2" />
<text  x="269.62" y="1615.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (3 samples, 0.06%)</title><rect x="457.6" y="1845" width="0.6" height="15.0" fill="rgb(231,221,51)" rx="2" ry="2" />
<text  x="460.57" y="1855.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (1 samples, 0.02%)</title><rect x="60.4" y="1653" width="0.3" height="15.0" fill="rgb(226,74,53)" rx="2" ry="2" />
<text  x="63.43" y="1663.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::reserve (1 samples, 0.02%)</title><rect x="1124.8" y="1653" width="0.2" height="15.0" fill="rgb(209,156,47)" rx="2" ry="2" />
<text  x="1127.78" y="1663.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::lower_bound&lt;mutation_partition, schema const&amp;, nonwrapping_interval&lt;clustering_key_prefix&gt; const&amp;&gt; (10 samples, 0.19%)</title><rect x="277.8" y="1637" width="2.3" height="15.0" fill="rgb(238,32,25)" rx="2" ry="2" />
<text  x="280.83" y="1647.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="57.7" y="1653" width="0.3" height="15.0" fill="rgb(237,31,14)" rx="2" ry="2" />
<text  x="60.74" y="1663.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;bytes_ostream::chunk, std::default_delete&lt;bytes_ostream::chunk&gt; &gt;::~unique_ptr (3 samples, 0.06%)</title><rect x="142.0" y="1877" width="0.7" height="15.0" fill="rgb(252,104,9)" rx="2" ry="2" />
<text  x="145.01" y="1887.5" ></text>
</g>
<g >
<title>mutation_reader_merger::mutation_reader_merger (2 samples, 0.04%)</title><rect x="484.9" y="1749" width="0.5" height="15.0" fill="rgb(243,162,38)" rx="2" ry="2" />
<text  x="487.91" y="1759.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::digests_match (1 samples, 0.02%)</title><rect x="706.3" y="1861" width="0.3" height="15.0" fill="rgb(212,60,39)" rx="2" ry="2" />
<text  x="709.35" y="1871.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.02%)</title><rect x="57.3" y="1509" width="0.2" height="15.0" fill="rgb(205,190,23)" rx="2" ry="2" />
<text  x="60.29" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt;::_Copy_ctor_base (1 samples, 0.02%)</title><rect x="841.7" y="1845" width="0.2" height="15.0" fill="rgb(247,58,23)" rx="2" ry="2" />
<text  x="844.72" y="1855.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;frozen_mutation const&gt;::make&lt;frozen_mutation&gt; (1 samples, 0.02%)</title><rect x="1128.6" y="1621" width="0.2" height="15.0" fill="rgb(225,2,1)" rx="2" ry="2" />
<text  x="1131.59" y="1631.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;partition_snapshot&gt;::make&lt;seastar::lw_shared_ptr&lt;schema const&gt;&amp;, logalloc::region&amp;, mutation_cleaner&amp;, partition_entry*, cache_tracker*&amp;, unsigned long&amp;&gt; (1 samples, 0.02%)</title><rect x="538.9" y="1733" width="0.3" height="15.0" fill="rgb(217,45,33)" rx="2" ry="2" />
<text  x="541.93" y="1743.5" ></text>
</g>
<g >
<title>std::apply&lt;service::client_state::check_has_permission (119 samples, 2.26%)</title><rect x="775.4" y="1749" width="26.6" height="15.0" fill="rgb(224,205,44)" rx="2" ry="2" />
<text  x="778.38" y="1759.5" >s..</text>
</g>
<g >
<title>query::partition_slice::partition_slice (23 samples, 0.44%)</title><rect x="155.0" y="1861" width="5.2" height="15.0" fill="rgb(229,190,41)" rx="2" ry="2" />
<text  x="158.01" y="1871.5" ></text>
</g>
<g >
<title>seastar::memory::allocate_aligned (5 samples, 0.09%)</title><rect x="245.1" y="1493" width="1.1" height="15.0" fill="rgb(218,145,50)" rx="2" ry="2" />
<text  x="248.10" y="1503.5" ></text>
</g>
<g >
<title>ser::writer_of_deletable_row&lt;bytes_ostream&gt;::write_key (1 samples, 0.02%)</title><rect x="107.9" y="1605" width="0.3" height="15.0" fill="rgb(211,159,26)" rx="2" ry="2" />
<text  x="110.94" y="1615.5" ></text>
</g>
<g >
<title>std::optional&lt;reader_concurrency_semaphore::entry&gt;::optional&lt;reader_concurrency_semaphore::entry, true&gt; (1 samples, 0.02%)</title><rect x="1014.3" y="1589" width="0.2" height="15.0" fill="rgb(242,24,8)" rx="2" ry="2" />
<text  x="1017.29" y="1599.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (6 samples, 0.11%)</title><rect x="1188.0" y="261" width="1.3" height="15.0" fill="rgb(229,94,4)" rx="2" ry="2" />
<text  x="1190.98" y="271.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::operator (618 samples, 11.74%)</title><rect x="171.6" y="1781" width="138.5" height="15.0" fill="rgb(253,126,3)" rx="2" ry="2" />
<text  x="174.59" y="1791.5" >mutation_fragment..</text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="81.7" y="1925" width="0.2" height="15.0" fill="rgb(244,125,48)" rx="2" ry="2" />
<text  x="84.72" y="1935.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (14 samples, 0.27%)</title><rect x="1186.2" y="693" width="3.1" height="15.0" fill="rgb(254,51,49)" rx="2" ry="2" />
<text  x="1189.19" y="703.5" ></text>
</g>
<g >
<title>partition_entry::apply (1 samples, 0.02%)</title><rect x="1120.7" y="1669" width="0.3" height="15.0" fill="rgb(210,183,40)" rx="2" ry="2" />
<text  x="1123.75" y="1679.5" ></text>
</g>
<g >
<title>make_stable_flattened_mutations_consumer&lt;compact_for_query&lt; (1 samples, 0.02%)</title><rect x="324.9" y="1813" width="0.2" height="15.0" fill="rgb(223,135,49)" rx="2" ry="2" />
<text  x="327.89" y="1823.5" ></text>
</g>
<g >
<title>bplus::tree&lt;long, intrusive_array&lt;memtable_entry&gt;, dht::raw_token_less_comparator, 16ul,  (1 samples, 0.02%)</title><rect x="1117.8" y="1605" width="0.3" height="15.0" fill="rgb(245,221,28)" rx="2" ry="2" />
<text  x="1120.83" y="1615.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_allocate_node (1 samples, 0.02%)</title><rect x="28.4" y="1669" width="0.2" height="15.0" fill="rgb(210,102,17)" rx="2" ry="2" />
<text  x="31.38" y="1679.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="74.8" y="1685" width="0.2" height="15.0" fill="rgb(227,209,5)" rx="2" ry="2" />
<text  x="77.77" y="1695.5" ></text>
</g>
<g >
<title>reader_permit::set_max_result_size (1 samples, 0.02%)</title><rect x="127.9" y="1877" width="0.2" height="15.0" fill="rgb(216,185,6)" rx="2" ry="2" />
<text  x="130.89" y="1887.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::operation::set_value, std::default_delete&lt;cql3::operation::set_value&gt; &gt;::_M_deleter (1 samples, 0.02%)</title><rect x="62.7" y="1701" width="0.2" height="15.0" fill="rgb(229,141,41)" rx="2" ry="2" />
<text  x="65.67" y="1711.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::partition_slice const, std::default_delete&lt;query::partition_slice const&gt; &gt;::~unique_ptr (19 samples, 0.36%)</title><rect x="601.2" y="1845" width="4.3" height="15.0" fill="rgb(241,64,40)" rx="2" ry="2" />
<text  x="604.23" y="1855.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;managed_bytes&gt;::dispose (1 samples, 0.02%)</title><rect x="855.2" y="1733" width="0.2" height="15.0" fill="rgb(207,110,49)" rx="2" ry="2" />
<text  x="858.16" y="1743.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::raw::parsed_statement, std::default_delete&lt;cql3::statements::raw::parsed_statement&gt; &gt;::operator= (1 samples, 0.02%)</title><rect x="68.5" y="1813" width="0.2" height="15.0" fill="rgb(216,56,53)" rx="2" ry="2" />
<text  x="71.50" y="1823.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (2 samples, 0.04%)</title><rect x="832.1" y="1829" width="0.4" height="15.0" fill="rgb(234,84,41)" rx="2" ry="2" />
<text  x="835.08" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::at (4 samples, 0.08%)</title><rect x="810.8" y="1749" width="0.9" height="15.0" fill="rgb(234,76,24)" rx="2" ry="2" />
<text  x="813.79" y="1759.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE9then_implIZNS6_14discard_resultEvEUlDpOT_E_NS0_IvEEEET0_OT_ (12 samples, 0.23%)</title><rect x="721.1" y="1893" width="2.7" height="15.0" fill="rgb(219,129,33)" rx="2" ry="2" />
<text  x="724.14" y="1903.5" ></text>
</g>
<g >
<title>free (7 samples, 0.13%)</title><rect x="432.5" y="1621" width="1.5" height="15.0" fill="rgb(213,135,14)" rx="2" ry="2" />
<text  x="435.47" y="1631.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (14 samples, 0.27%)</title><rect x="1186.2" y="1669" width="3.1" height="15.0" fill="rgb(220,125,8)" rx="2" ry="2" />
<text  x="1189.19" y="1679.5" ></text>
</g>
<g >
<title>database::find_schema (1 samples, 0.02%)</title><rect x="77.2" y="1845" width="0.3" height="15.0" fill="rgb(250,109,52)" rx="2" ry="2" />
<text  x="80.24" y="1855.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::storage_proxy::send_to_live_endpoints (1 samples, 0.02%)</title><rect x="716.0" y="1925" width="0.2" height="15.0" fill="rgb(230,196,5)" rx="2" ry="2" />
<text  x="718.98" y="1935.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::emplace_back&lt;mutation_reader_merger::reader_and_fragment&gt; (4 samples, 0.08%)</title><rect x="300.0" y="1701" width="0.9" height="15.0" fill="rgb(232,21,2)" rx="2" ry="2" />
<text  x="303.01" y="1711.5" ></text>
</g>
<g >
<title>db::schema_tables::add_column_to_schema_mutation (1 samples, 0.02%)</title><rect x="108.6" y="1845" width="0.2" height="15.0" fill="rgb(250,129,31)" rx="2" ry="2" />
<text  x="111.61" y="1855.5" ></text>
</g>
<g >
<title>flush_reader::fill_buffer (1 samples, 0.02%)</title><rect x="1188.4" y="85" width="0.3" height="15.0" fill="rgb(243,168,2)" rx="2" ry="2" />
<text  x="1191.43" y="95.5" ></text>
</g>
<g >
<title>absl::container_internal::operator== (1 samples, 0.02%)</title><rect x="824.5" y="1813" width="0.2" height="15.0" fill="rgb(246,194,32)" rx="2" ry="2" />
<text  x="827.46" y="1823.5" ></text>
</g>
<g >
<title>deletable_row::apply_monotonically (1 samples, 0.02%)</title><rect x="19.4" y="1973" width="0.2" height="15.0" fill="rgb(247,109,27)" rx="2" ry="2" />
<text  x="22.41" y="1983.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_pausable&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (1 samples, 0.02%)</title><rect x="329.8" y="1717" width="0.2" height="15.0" fill="rgb(216,58,7)" rx="2" ry="2" />
<text  x="332.82" y="1727.5" ></text>
</g>
<g >
<title>frozen_mutation::partition (1 samples, 0.02%)</title><rect x="1115.6" y="1669" width="0.2" height="15.0" fill="rgb(222,135,53)" rx="2" ry="2" />
<text  x="1118.59" y="1679.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (83 samples, 1.58%)</title><rect x="25.9" y="1765" width="18.6" height="15.0" fill="rgb(222,160,10)" rx="2" ry="2" />
<text  x="28.91" y="1775.5" ></text>
</g>
<g >
<title>schema_builder::build (1 samples, 0.02%)</title><rect x="20.1" y="1653" width="0.2" height="15.0" fill="rgb(251,46,38)" rx="2" ry="2" />
<text  x="23.09" y="1663.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (4 samples, 0.08%)</title><rect x="218.4" y="1573" width="0.9" height="15.0" fill="rgb(241,79,51)" rx="2" ry="2" />
<text  x="221.43" y="1583.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.02%)</title><rect x="44.5" y="1605" width="0.2" height="15.0" fill="rgb(236,47,15)" rx="2" ry="2" />
<text  x="47.51" y="1615.5" ></text>
</g>
<g >
<title>row_cache::make_reader (3 samples, 0.06%)</title><rect x="462.3" y="1781" width="0.6" height="15.0" fill="rgb(227,179,21)" rx="2" ry="2" />
<text  x="465.28" y="1791.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="194.0" y="1685" width="0.2" height="15.0" fill="rgb(218,91,38)" rx="2" ry="2" />
<text  x="197.00" y="1695.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_locally (4 samples, 0.08%)</title><rect x="1123.4" y="1637" width="0.9" height="15.0" fill="rgb(241,70,15)" rx="2" ry="2" />
<text  x="1126.44" y="1647.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.02%)</title><rect x="949.1" y="1813" width="0.2" height="15.0" fill="rgb(245,39,33)" rx="2" ry="2" />
<text  x="952.07" y="1823.5" ></text>
</g>
<g >
<title>schema_registry_entry::get_schema (1 samples, 0.02%)</title><rect x="965.9" y="1765" width="0.2" height="15.0" fill="rgb(232,39,2)" rx="2" ry="2" />
<text  x="968.88" y="1775.5" ></text>
</g>
<g >
<title>mutation_partition::lower_bound (9 samples, 0.17%)</title><rect x="278.0" y="1621" width="2.1" height="15.0" fill="rgb(222,27,48)" rx="2" ry="2" />
<text  x="281.05" y="1631.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.02%)</title><rect x="25.0" y="1669" width="0.2" height="15.0" fill="rgb(232,16,4)" rx="2" ry="2" />
<text  x="28.02" y="1679.5" ></text>
</g>
<g >
<title>std::__make_heap&lt;__gnu_cxx::__normal_iterator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position*, std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::heap_compare&gt; &gt; (3 samples, 0.06%)</title><rect x="285.2" y="1637" width="0.7" height="15.0" fill="rgb(221,157,52)" rx="2" ry="2" />
<text  x="288.22" y="1647.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (1 samples, 0.02%)</title><rect x="783.0" y="1573" width="0.2" height="15.0" fill="rgb(213,82,41)" rx="2" ry="2" />
<text  x="786.00" y="1583.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (3 samples, 0.06%)</title><rect x="249.4" y="1525" width="0.6" height="15.0" fill="rgb(232,156,21)" rx="2" ry="2" />
<text  x="252.36" y="1535.5" ></text>
</g>
<g >
<title>seastar::do_until&lt;flush_reader::fill_buffer (1 samples, 0.02%)</title><rect x="1188.4" y="69" width="0.3" height="15.0" fill="rgb(223,75,38)" rx="2" ry="2" />
<text  x="1191.43" y="79.5" ></text>
</g>
<g >
<title>antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;::~InputStream (1 samples, 0.02%)</title><rect x="23.4" y="1845" width="0.3" height="15.0" fill="rgb(231,208,11)" rx="2" ry="2" />
<text  x="26.45" y="1855.5" ></text>
</g>
<g >
<title>operator delete (6 samples, 0.11%)</title><rect x="579.5" y="1717" width="1.3" height="15.0" fill="rgb(239,95,19)" rx="2" ry="2" />
<text  x="582.49" y="1727.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="1128.8" y="1589" width="0.2" height="15.0" fill="rgb(221,107,13)" rx="2" ry="2" />
<text  x="1131.81" y="1599.5" ></text>
</g>
<g >
<title>operator new (7 samples, 0.13%)</title><rect x="317.3" y="1701" width="1.5" height="15.0" fill="rgb(231,50,14)" rx="2" ry="2" />
<text  x="320.27" y="1711.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_9has_tokenERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES28_S2B_ (2 samples, 0.04%)</title><rect x="937.0" y="1813" width="0.4" height="15.0" fill="rgb(231,157,22)" rx="2" ry="2" />
<text  x="939.97" y="1823.5" ></text>
</g>
<g >
<title>partition_version::~partition_version (1 samples, 0.02%)</title><rect x="19.0" y="1941" width="0.2" height="15.0" fill="rgb(223,37,36)" rx="2" ry="2" />
<text  x="21.96" y="1951.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::alloc (24 samples, 0.46%)</title><rect x="233.9" y="1493" width="5.4" height="15.0" fill="rgb(229,132,52)" rx="2" ry="2" />
<text  x="236.90" y="1503.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;void&gt; &gt;::satisfy_with_result_of&lt;seastar::future&lt;void&gt;::then_wrapped_nrvo&lt;seastar::future&lt;void&gt;, service::storage_proxy::mutate_internal&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="715.8" y="1909" width="0.2" height="15.0" fill="rgb(241,23,0)" rx="2" ry="2" />
<text  x="718.76" y="1919.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::BaseRecognizer (1 samples, 0.02%)</title><rect x="23.7" y="1829" width="0.2" height="15.0" fill="rgb(231,16,38)" rx="2" ry="2" />
<text  x="26.67" y="1839.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::value_ptr&gt; &gt;::invoke&lt;utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (5 samples, 0.09%)</title><rect x="742.4" y="1781" width="1.1" height="15.0" fill="rgb(241,59,37)" rx="2" ry="2" />
<text  x="745.43" y="1791.5" ></text>
</g>
<g >
<title>reader_permit::impl::mark_used (1 samples, 0.02%)</title><rect x="121.4" y="1877" width="0.2" height="15.0" fill="rgb(239,33,29)" rx="2" ry="2" />
<text  x="124.39" y="1887.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (3 samples, 0.06%)</title><rect x="1159.3" y="1877" width="0.7" height="15.0" fill="rgb(219,50,42)" rx="2" ry="2" />
<text  x="1162.30" y="1887.5" ></text>
</g>
<g >
<title>rows_entry::memory_usage (1 samples, 0.02%)</title><rect x="19.9" y="1957" width="0.2" height="15.0" fill="rgb(225,56,41)" rx="2" ry="2" />
<text  x="22.86" y="1967.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;query::result&gt;::make&lt;query::result&gt; (5 samples, 0.09%)</title><rect x="619.4" y="1861" width="1.1" height="15.0" fill="rgb(245,54,2)" rx="2" ry="2" />
<text  x="622.39" y="1871.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.02%)</title><rect x="60.0" y="1541" width="0.2" height="15.0" fill="rgb(226,77,3)" rx="2" ry="2" />
<text  x="62.98" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct_single&lt;std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, cql3::expr::constant&gt; (1 samples, 0.02%)</title><rect x="75.2" y="1701" width="0.2" height="15.0" fill="rgb(254,35,22)" rx="2" ry="2" />
<text  x="78.22" y="1711.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.02%)</title><rect x="48.1" y="1637" width="0.2" height="15.0" fill="rgb(206,198,12)" rx="2" ry="2" />
<text  x="51.10" y="1647.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (14 samples, 0.27%)</title><rect x="1186.2" y="1013" width="3.1" height="15.0" fill="rgb(240,52,48)" rx="2" ry="2" />
<text  x="1189.19" y="1023.5" ></text>
</g>
<g >
<title>make_multishard_combining_reader (1 samples, 0.02%)</title><rect x="956.5" y="1541" width="0.2" height="15.0" fill="rgb(239,159,46)" rx="2" ry="2" />
<text  x="959.47" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt;::~_Variant_storage (1 samples, 0.02%)</title><rect x="71.4" y="1813" width="0.2" height="15.0" fill="rgb(228,145,4)" rx="2" ry="2" />
<text  x="74.41" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::at (8 samples, 0.15%)</title><rect x="1004.0" y="1653" width="1.8" height="15.0" fill="rgb(245,193,3)" rx="2" ry="2" />
<text  x="1006.98" y="1663.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_prepared (54 samples, 1.03%)</title><rect x="739.1" y="1845" width="12.1" height="15.0" fill="rgb(212,109,1)" rx="2" ry="2" />
<text  x="742.07" y="1855.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::do_refresh_state (17 samples, 0.32%)</title><rect x="262.1" y="1589" width="3.8" height="15.0" fill="rgb(241,107,33)" rx="2" ry="2" />
<text  x="265.14" y="1599.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.02%)</title><rect x="47.2" y="1573" width="0.2" height="15.0" fill="rgb(251,163,54)" rx="2" ry="2" />
<text  x="50.20" y="1583.5" ></text>
</g>
<g >
<title>reader_permit::consume_memory (1 samples, 0.02%)</title><rect x="259.7" y="1589" width="0.2" height="15.0" fill="rgb(217,21,6)" rx="2" ry="2" />
<text  x="262.67" y="1599.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (8 samples, 0.15%)</title><rect x="226.1" y="1525" width="1.7" height="15.0" fill="rgb(211,185,36)" rx="2" ry="2" />
<text  x="229.05" y="1535.5" ></text>
</g>
<g >
<title>memtable::find_or_create_partition_slow (11 samples, 0.21%)</title><rect x="1116.3" y="1669" width="2.4" height="15.0" fill="rgb(211,107,42)" rx="2" ry="2" />
<text  x="1119.26" y="1679.5" ></text>
</g>
<g >
<title>seastar::reactor_backend_aio::reap_kernel_completions (4 samples, 0.08%)</title><rect x="1164.0" y="1925" width="0.9" height="15.0" fill="rgb(213,34,35)" rx="2" ry="2" />
<text  x="1167.00" y="1935.5" ></text>
</g>
<g >
<title>evictable_reader::fill_buffer (2 samples, 0.04%)</title><rect x="107.5" y="1637" width="0.4" height="15.0" fill="rgb(252,94,16)" rx="2" ry="2" />
<text  x="110.49" y="1647.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::clear (1 samples, 0.02%)</title><rect x="948.8" y="1813" width="0.3" height="15.0" fill="rgb(226,89,0)" rx="2" ry="2" />
<text  x="951.85" y="1823.5" ></text>
</g>
<g >
<title>ser::serializer&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;::write&lt;seastar::memory_output_stream&lt;__gnu_cxx::__normal_iterator&lt;seastar::temporary_buffer&lt;char&gt;*, std::vector&lt;seastar::temporary_buffer&lt;char&gt;, std::allocator&lt;seastar::temporary_buffer&lt;char&gt; &gt; &gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="1121.4" y="1653" width="0.2" height="15.0" fill="rgb(218,205,15)" rx="2" ry="2" />
<text  x="1124.42" y="1663.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;,  (27 samples, 0.51%)</title><rect x="730.1" y="1845" width="6.1" height="15.0" fill="rgb(245,54,1)" rx="2" ry="2" />
<text  x="733.10" y="1855.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value_view, std::allocator&lt;cql3::raw_value_view&gt; &gt;::_M_realloc_insert&lt;cql3::raw_value_view&gt; (12 samples, 0.23%)</title><rect x="835.0" y="1797" width="2.7" height="15.0" fill="rgb(210,217,22)" rx="2" ry="2" />
<text  x="837.99" y="1807.5" ></text>
</g>
<g >
<title>std::hash&lt;wrapping_interval&lt;dht::token&gt; &gt;::operator (2 samples, 0.04%)</title><rect x="1151.9" y="1877" width="0.4" height="15.0" fill="rgb(219,77,9)" rx="2" ry="2" />
<text  x="1154.90" y="1887.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (1 samples, 0.02%)</title><rect x="926.7" y="1829" width="0.2" height="15.0" fill="rgb(220,24,0)" rx="2" ry="2" />
<text  x="929.66" y="1839.5" ></text>
</g>
<g >
<title>std::default_delete&lt;query::partition_slice const&gt;::operator (1 samples, 0.02%)</title><rect x="599.4" y="1845" width="0.3" height="15.0" fill="rgb(205,102,21)" rx="2" ry="2" />
<text  x="602.44" y="1855.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::clear (3 samples, 0.06%)</title><rect x="302.0" y="1733" width="0.7" height="15.0" fill="rgb(211,43,32)" rx="2" ry="2" />
<text  x="305.03" y="1743.5" ></text>
</g>
<g >
<title>mutation_querier::consume_end_of_stream (1 samples, 0.02%)</title><rect x="338.6" y="1653" width="0.2" height="15.0" fill="rgb(224,101,43)" rx="2" ry="2" />
<text  x="341.56" y="1663.5" ></text>
</g>
<g >
<title>row::row (2 samples, 0.04%)</title><rect x="294.4" y="1637" width="0.5" height="15.0" fill="rgb(254,23,5)" rx="2" ry="2" />
<text  x="297.41" y="1647.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume_in_thread&lt;sstables::sstable_writer&gt; (1 samples, 0.02%)</title><rect x="1186.4" y="261" width="0.2" height="15.0" fill="rgb(251,107,15)" rx="2" ry="2" />
<text  x="1189.41" y="271.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (3 samples, 0.06%)</title><rect x="589.6" y="1781" width="0.7" height="15.0" fill="rgb(207,137,0)" rx="2" ry="2" />
<text  x="592.58" y="1791.5" ></text>
</g>
<g >
<title>locator::token_metadata_impl::first_token_index (1 samples, 0.02%)</title><rect x="1065.2" y="1701" width="0.2" height="15.0" fill="rgb(228,199,41)" rx="2" ry="2" />
<text  x="1068.16" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (1 samples, 0.02%)</title><rect x="627.9" y="1861" width="0.2" height="15.0" fill="rgb(227,143,51)" rx="2" ry="2" />
<text  x="630.90" y="1871.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="588.0" y="1749" width="0.2" height="15.0" fill="rgb(230,31,26)" rx="2" ry="2" />
<text  x="591.01" y="1759.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (21 samples, 0.40%)</title><rect x="731.2" y="1797" width="4.7" height="15.0" fill="rgb(247,50,6)" rx="2" ry="2" />
<text  x="734.22" y="1807.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.02%)</title><rect x="51.9" y="1589" width="0.2" height="15.0" fill="rgb(210,23,4)" rx="2" ry="2" />
<text  x="54.91" y="1599.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a24d06c195bd126a1ed21a4439682d7f2fceb96c] (1 samples, 0.02%)</title><rect x="700.7" y="1893" width="0.3" height="15.0" fill="rgb(205,111,24)" rx="2" ry="2" />
<text  x="703.74" y="1903.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.02%)</title><rect x="596.1" y="1813" width="0.2" height="15.0" fill="rgb(210,6,6)" rx="2" ry="2" />
<text  x="599.08" y="1823.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEENK4$_43clERKNSF_15binary_operatorEEUlRKNSF_12column_valueEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_17tuple_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlNSF_5tokenEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlSS_E_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_11conjunctionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_8constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_21unresolved_identifierEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_25column_mutation_attributeEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13function_callEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4castEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_15field_selectionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4nullEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13bind_variableEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_16untyped_constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_22collection_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_20usertype_constructorEE_EERS4_IJS14_SQ_ST_S11_S1C_S1G_S1K_S1O_S1S_S1W_S20_S24_S18_SX_S28_S2C_EEEJEEESt16integer_sequenceImJLm2EEEE14__visit_invokeES2H_S2J_ (1 samples, 0.02%)</title><rect x="850.9" y="1765" width="0.2" height="15.0" fill="rgb(243,38,18)" rx="2" ry="2" />
<text  x="853.90" y="1775.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_requests (1 samples, 0.02%)</title><rect x="956.5" y="1749" width="0.2" height="15.0" fill="rgb(214,183,39)" rx="2" ry="2" />
<text  x="959.47" y="1759.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::CommonToken (1 samples, 0.02%)</title><rect x="24.1" y="1749" width="0.2" height="15.0" fill="rgb(253,69,35)" rx="2" ry="2" />
<text  x="27.12" y="1759.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.02%)</title><rect x="1011.8" y="1589" width="0.2" height="15.0" fill="rgb(228,31,38)" rx="2" ry="2" />
<text  x="1014.82" y="1599.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_nonsingular_data_locally (1 samples, 0.02%)</title><rect x="956.5" y="1685" width="0.2" height="15.0" fill="rgb(250,114,11)" rx="2" ry="2" />
<text  x="959.47" y="1695.5" ></text>
</g>
<g >
<title>seastar::reactor_backend_aio::await_events (4 samples, 0.08%)</title><rect x="1164.0" y="1909" width="0.9" height="15.0" fill="rgb(252,8,28)" rx="2" ry="2" />
<text  x="1167.00" y="1919.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE14then_impl_nrvoIZNS6_14discard_resultEvEUlDpOT_E_NS0_IvEEEET0_OT_ (11 samples, 0.21%)</title><rect x="721.4" y="1877" width="2.4" height="15.0" fill="rgb(234,93,50)" rx="2" ry="2" />
<text  x="724.36" y="1887.5" ></text>
</g>
<g >
<title>compound_type&lt; (3 samples, 0.06%)</title><rect x="561.6" y="1781" width="0.6" height="15.0" fill="rgb(252,216,21)" rx="2" ry="2" />
<text  x="564.56" y="1791.5" ></text>
</g>
<g >
<title>std::vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, std::allocator&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="81.9" y="1925" width="0.3" height="15.0" fill="rgb(221,3,49)" rx="2" ry="2" />
<text  x="84.94" y="1935.5" ></text>
</g>
<g >
<title>row::row (3 samples, 0.06%)</title><rect x="293.5" y="1621" width="0.7" height="15.0" fill="rgb(239,79,53)" rx="2" ry="2" />
<text  x="296.51" y="1631.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (1,127 samples, 21.41%)</title><rect x="861.9" y="1893" width="252.6" height="15.0" fill="rgb(224,79,31)" rx="2" ry="2" />
<text  x="864.89" y="1903.5" >seastar::noncopyable_function&lt;sea..</text>
</g>
<g >
<title>operator new (6 samples, 0.11%)</title><rect x="1147.0" y="1813" width="1.3" height="15.0" fill="rgb(208,189,44)" rx="2" ry="2" />
<text  x="1149.97" y="1823.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::clear (1 samples, 0.02%)</title><rect x="299.8" y="1701" width="0.2" height="15.0" fill="rgb(252,59,14)" rx="2" ry="2" />
<text  x="302.79" y="1711.5" ></text>
</g>
<g >
<title>operator new (9 samples, 0.17%)</title><rect x="995.2" y="1701" width="2.1" height="15.0" fill="rgb(207,58,48)" rx="2" ry="2" />
<text  x="998.24" y="1711.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::take_value (1 samples, 0.02%)</title><rect x="193.8" y="1685" width="0.2" height="15.0" fill="rgb(251,114,3)" rx="2" ry="2" />
<text  x="196.78" y="1695.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (1 samples, 0.02%)</title><rect x="10.7" y="1861" width="0.2" height="15.0" fill="rgb(217,74,2)" rx="2" ry="2" />
<text  x="13.67" y="1871.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.02%)</title><rect x="25.0" y="1813" width="0.2" height="15.0" fill="rgb(250,101,8)" rx="2" ry="2" />
<text  x="28.02" y="1823.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (3 samples, 0.06%)</title><rect x="279.4" y="1589" width="0.7" height="15.0" fill="rgb(225,143,21)" rx="2" ry="2" />
<text  x="282.39" y="1599.5" ></text>
</g>
<g >
<title>operator new (11 samples, 0.21%)</title><rect x="944.4" y="1829" width="2.4" height="15.0" fill="rgb(233,227,3)" rx="2" ry="2" />
<text  x="947.36" y="1839.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (2 samples, 0.04%)</title><rect x="50.6" y="1637" width="0.4" height="15.0" fill="rgb(210,9,18)" rx="2" ry="2" />
<text  x="53.57" y="1647.5" ></text>
</g>
<g >
<title>cql3::expr::prepare_term (9 samples, 0.17%)</title><rect x="69.6" y="1829" width="2.0" height="15.0" fill="rgb(234,104,33)" rx="2" ry="2" />
<text  x="72.62" y="1839.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (1 samples, 0.02%)</title><rect x="599.9" y="1829" width="0.2" height="15.0" fill="rgb(218,68,45)" rx="2" ry="2" />
<text  x="602.89" y="1839.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::~impl (3 samples, 0.06%)</title><rect x="574.6" y="1733" width="0.6" height="15.0" fill="rgb(245,219,15)" rx="2" ry="2" />
<text  x="577.56" y="1743.5" ></text>
</g>
<g >
<title>row_tombstone::apply (1 samples, 0.02%)</title><rect x="687.5" y="1717" width="0.2" height="15.0" fill="rgb(227,95,47)" rx="2" ry="2" />
<text  x="690.52" y="1727.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::read_next (2 samples, 0.04%)</title><rect x="107.5" y="1301" width="0.4" height="15.0" fill="rgb(254,212,49)" rx="2" ry="2" />
<text  x="110.49" y="1311.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (1 samples, 0.02%)</title><rect x="682.1" y="1877" width="0.3" height="15.0" fill="rgb(209,84,1)" rx="2" ry="2" />
<text  x="685.14" y="1887.5" ></text>
</g>
<g >
<title>list_reader_selector::create_new_readers (2 samples, 0.04%)</title><rect x="469.7" y="1701" width="0.4" height="15.0" fill="rgb(249,137,36)" rx="2" ry="2" />
<text  x="472.67" y="1711.5" ></text>
</g>
<g >
<title>reader_permit::used_guard::~used_guard (1 samples, 0.02%)</title><rect x="688.2" y="1909" width="0.2" height="15.0" fill="rgb(238,167,9)" rx="2" ry="2" />
<text  x="691.19" y="1919.5" ></text>
</g>
<g >
<title>std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt;::~vector (2 samples, 0.04%)</title><rect x="1129.7" y="1765" width="0.5" height="15.0" fill="rgb(229,129,38)" rx="2" ry="2" />
<text  x="1132.71" y="1775.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::local (2 samples, 0.04%)</title><rect x="818.0" y="1845" width="0.4" height="15.0" fill="rgb(215,47,6)" rx="2" ry="2" />
<text  x="820.96" y="1855.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value, std::allocator&lt;cql3::raw_value&gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="838.1" y="1845" width="0.3" height="15.0" fill="rgb(250,140,23)" rx="2" ry="2" />
<text  x="841.13" y="1855.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (1 samples, 0.02%)</title><rect x="816.4" y="1829" width="0.2" height="15.0" fill="rgb(231,164,20)" rx="2" ry="2" />
<text  x="819.39" y="1839.5" ></text>
</g>
<g >
<title>std::hash&lt;auth::resource&gt;::operator (9 samples, 0.17%)</title><rect x="804.5" y="1765" width="2.0" height="15.0" fill="rgb(216,95,43)" rx="2" ry="2" />
<text  x="807.51" y="1775.5" ></text>
</g>
<g >
<title>read_page&lt;(anonymous namespace)::data_query_result_builder&gt; (1 samples, 0.02%)</title><rect x="956.5" y="1621" width="0.2" height="15.0" fill="rgb(235,96,32)" rx="2" ry="2" />
<text  x="959.47" y="1631.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit_slot&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::memory_usage&lt;row::external_memory_usage (1 samples, 0.02%)</title><rect x="19.9" y="1909" width="0.2" height="15.0" fill="rgb(235,183,25)" rx="2" ry="2" />
<text  x="22.86" y="1919.5" ></text>
</g>
<g >
<title>partition_snapshot::partition_tombstone (1 samples, 0.02%)</title><rect x="532.0" y="1669" width="0.2" height="15.0" fill="rgb(217,92,48)" rx="2" ry="2" />
<text  x="534.98" y="1679.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;query::result_memory_accounter&gt;::clear (2 samples, 0.04%)</title><rect x="616.7" y="1861" width="0.4" height="15.0" fill="rgb(225,139,29)" rx="2" ry="2" />
<text  x="619.70" y="1871.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (14 samples, 0.27%)</title><rect x="1186.2" y="1141" width="3.1" height="15.0" fill="rgb(246,117,12)" rx="2" ry="2" />
<text  x="1189.19" y="1151.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_pausable&lt;flush_reader::fill_buffer (1 samples, 0.02%)</title><rect x="1187.5" y="101" width="0.3" height="15.0" fill="rgb(250,168,35)" rx="2" ry="2" />
<text  x="1190.53" y="111.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (2 samples, 0.04%)</title><rect x="320.4" y="1749" width="0.5" height="15.0" fill="rgb(211,154,6)" rx="2" ry="2" />
<text  x="323.41" y="1759.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;cql3::metadata, false&gt;::make&lt;cql3::metadata&amp;&gt; (4 samples, 0.08%)</title><rect x="653.2" y="1893" width="0.9" height="15.0" fill="rgb(247,193,53)" rx="2" ry="2" />
<text  x="656.23" y="1903.5" ></text>
</g>
<g >
<title>operator delete (5 samples, 0.09%)</title><rect x="797.1" y="1669" width="1.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="800.11" y="1679.5" ></text>
</g>
<g >
<title>partition_entry::read (6 samples, 0.11%)</title><rect x="537.6" y="1733" width="1.3" height="15.0" fill="rgb(236,133,36)" rx="2" ry="2" />
<text  x="540.58" y="1743.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::deallocate (2 samples, 0.04%)</title><rect x="206.6" y="1637" width="0.4" height="15.0" fill="rgb(218,14,14)" rx="2" ry="2" />
<text  x="209.55" y="1647.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::move_slots&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.02%)</title><rect x="854.0" y="1653" width="0.3" height="15.0" fill="rgb(215,12,6)" rx="2" ry="2" />
<text  x="857.04" y="1663.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::operator (5 samples, 0.09%)</title><rect x="752.5" y="1797" width="1.1" height="15.0" fill="rgb(218,59,41)" rx="2" ry="2" />
<text  x="755.51" y="1807.5" ></text>
</g>
<g >
<title>seastar::repeat&lt;flat_mutation_reader::impl::consume_pausable&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (509 samples, 9.67%)</title><rect x="332.1" y="1717" width="114.0" height="15.0" fill="rgb(206,66,31)" rx="2" ry="2" />
<text  x="335.06" y="1727.5" >seastar::repea..</text>
</g>
<g >
<title>cql3::raw_value::make_value (33 samples, 0.63%)</title><rect x="886.5" y="1701" width="7.4" height="15.0" fill="rgb(254,131,31)" rx="2" ry="2" />
<text  x="889.54" y="1711.5" ></text>
</g>
<g >
<title>to_hex (1 samples, 0.02%)</title><rect x="82.2" y="1925" width="0.2" height="15.0" fill="rgb(232,149,1)" rx="2" ry="2" />
<text  x="85.17" y="1935.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;clustering_key_prefix, false, false&gt;::_Optional_base (2 samples, 0.04%)</title><rect x="273.3" y="1637" width="0.5" height="15.0" fill="rgb(246,133,11)" rx="2" ry="2" />
<text  x="276.34" y="1647.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (8 samples, 0.15%)</title><rect x="906.7" y="1797" width="1.8" height="15.0" fill="rgb(206,167,16)" rx="2" ry="2" />
<text  x="909.71" y="1807.5" ></text>
</g>
<g >
<title>_ZSt5visitIR18overloaded_functorIJZN4cql34expr9find_atomIZNS2_4findERKNS2_10expressionENS2_6oper_tEEUlRKNS2_15binary_operatorEE_EEPS9_S6_T_EUlSA_E_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_8constantEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_11conjunctionEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_12column_valueEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_5tokenEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_21unresolved_identifierEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_25column_mutation_attributeEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_13function_callEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_4castEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_15field_selectionEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_4nullEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_13bind_variableEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_16untyped_constantEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_17tuple_constructorEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_22collection_constructorEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_20usertype_constructorEE_EEJRSt7variantIJSJ_S8_SN_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_SF_S1R_S1V_S1Z_EEEENSt13invoke_resultISD_JDpDTclsr3stdE3getILm0EEclsr3stdE7declvalIT0_EEEEEE4typeEOSD_DpOS29_ (1 samples, 0.02%)</title><rect x="651.9" y="1829" width="0.2" height="15.0" fill="rgb(213,59,40)" rx="2" ry="2" />
<text  x="654.88" y="1839.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_internal&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt; &gt; (14 samples, 0.27%)</title><rect x="1122.3" y="1717" width="3.2" height="15.0" fill="rgb(218,76,33)" rx="2" ry="2" />
<text  x="1125.32" y="1727.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (6 samples, 0.11%)</title><rect x="46.1" y="1781" width="1.3" height="15.0" fill="rgb(215,175,18)" rx="2" ry="2" />
<text  x="49.08" y="1791.5" ></text>
</g>
<g >
<title>cql3::constants::value::get (1 samples, 0.02%)</title><rect x="854.5" y="1685" width="0.2" height="15.0" fill="rgb(227,177,4)" rx="2" ry="2" />
<text  x="857.49" y="1695.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_Vector_impl::_Vector_impl (1 samples, 0.02%)</title><rect x="52.1" y="1701" width="0.3" height="15.0" fill="rgb(243,155,48)" rx="2" ry="2" />
<text  x="55.13" y="1711.5" ></text>
</g>
<g >
<title>sstables::mc::writer::consume_new_partition (1 samples, 0.02%)</title><rect x="1188.9" y="37" width="0.2" height="15.0" fill="rgb(249,84,48)" rx="2" ry="2" />
<text  x="1191.88" y="47.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;auth::resource, auth::resource, std::allocator&lt;auth::resource&gt;, std::__detail::_Identity, std::equal_to&lt;auth::resource&gt;, std::hash&lt;auth::resource&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;::_M_find_before_node (1 samples, 0.02%)</title><rect x="804.3" y="1765" width="0.2" height="15.0" fill="rgb(226,108,44)" rx="2" ry="2" />
<text  x="807.29" y="1775.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::_M_create_storage (3 samples, 0.06%)</title><rect x="930.5" y="1813" width="0.6" height="15.0" fill="rgb(230,172,23)" rx="2" ry="2" />
<text  x="933.47" y="1823.5" ></text>
</g>
<g >
<title>main (4,820 samples, 91.55%)</title><rect x="84.9" y="2037" width="1080.2" height="15.0" fill="rgb(228,16,17)" rx="2" ry="2" />
<text  x="87.86" y="2047.5" >main</text>
</g>
<g >
<title>seastar::reactor::add_task (2 samples, 0.04%)</title><rect x="105.9" y="1909" width="0.5" height="15.0" fill="rgb(216,188,50)" rx="2" ry="2" />
<text  x="108.92" y="1919.5" ></text>
</g>
<g >
<title>frozen_schema::frozen_schema (2 samples, 0.04%)</title><rect x="108.4" y="1877" width="0.4" height="15.0" fill="rgb(224,197,19)" rx="2" ry="2" />
<text  x="111.39" y="1887.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (8 samples, 0.15%)</title><rect x="978.0" y="1701" width="1.8" height="15.0" fill="rgb(228,59,48)" rx="2" ry="2" />
<text  x="980.98" y="1711.5" ></text>
</g>
<g >
<title>mutation_partition::~mutation_partition (1 samples, 0.02%)</title><rect x="83.5" y="1893" width="0.2" height="15.0" fill="rgb(224,112,17)" rx="2" ry="2" />
<text  x="86.51" y="1903.5" ></text>
</g>
<g >
<title>std::vector&lt;seastar::shared_ptr&lt;cql3::relation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::relation&gt; &gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="77.0" y="1861" width="0.2" height="15.0" fill="rgb(221,83,21)" rx="2" ry="2" />
<text  x="80.01" y="1871.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (14 samples, 0.27%)</title><rect x="1186.2" y="1157" width="3.1" height="15.0" fill="rgb(224,48,13)" rx="2" ry="2" />
<text  x="1189.19" y="1167.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.02%)</title><rect x="1189.1" y="149" width="0.2" height="15.0" fill="rgb(243,195,45)" rx="2" ry="2" />
<text  x="1192.10" y="159.5" ></text>
</g>
<g >
<title>std::construct_at&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; (2 samples, 0.04%)</title><rect x="55.3" y="1589" width="0.4" height="15.0" fill="rgb(252,144,0)" rx="2" ry="2" />
<text  x="58.27" y="1599.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;interval_bound&lt;dht::ring_position&gt;, false, false&gt;::_Optional_base (1 samples, 0.02%)</title><rect x="933.2" y="1797" width="0.2" height="15.0" fill="rgb(238,201,51)" rx="2" ry="2" />
<text  x="936.16" y="1807.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.06%)</title><rect x="485.4" y="1733" width="0.6" height="15.0" fill="rgb(224,32,28)" rx="2" ry="2" />
<text  x="488.36" y="1743.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.02%)</title><rect x="1131.3" y="1813" width="0.2" height="15.0" fill="rgb(231,145,11)" rx="2" ry="2" />
<text  x="1134.28" y="1823.5" ></text>
</g>
<g >
<title>row::apply_monotonically (3 samples, 0.06%)</title><rect x="853.8" y="1717" width="0.7" height="15.0" fill="rgb(229,58,35)" rx="2" ry="2" />
<text  x="856.82" y="1727.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="99.4" y="1829" width="0.2" height="15.0" fill="rgb(226,84,0)" rx="2" ry="2" />
<text  x="102.42" y="1839.5" ></text>
</g>
<g >
<title>row::compact_and_expire (72 samples, 1.37%)</title><rect x="408.3" y="1637" width="16.1" height="15.0" fill="rgb(226,225,42)" rx="2" ry="2" />
<text  x="411.26" y="1647.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::emplace_back&lt;gms::inet_address const&amp;&gt; (1 samples, 0.02%)</title><rect x="714.0" y="1877" width="0.2" height="15.0" fill="rgb(245,51,32)" rx="2" ry="2" />
<text  x="716.97" y="1887.5" ></text>
</g>
<g >
<title>service::never_speculating_read_executor::~never_speculating_read_executor (8 samples, 0.15%)</title><rect x="1160.2" y="1877" width="1.8" height="15.0" fill="rgb(224,109,23)" rx="2" ry="2" />
<text  x="1163.19" y="1887.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.02%)</title><rect x="60.0" y="1573" width="0.2" height="15.0" fill="rgb(212,210,45)" rx="2" ry="2" />
<text  x="62.98" y="1583.5" ></text>
</g>
<g >
<title>operator new (12 samples, 0.23%)</title><rect x="1005.8" y="1669" width="2.7" height="15.0" fill="rgb(241,227,18)" rx="2" ry="2" />
<text  x="1008.77" y="1679.5" ></text>
</g>
<g >
<title>partition_key::from_range&lt;std::vector&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, std::allocator&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt; &gt; (3 samples, 0.06%)</title><rect x="561.6" y="1797" width="0.6" height="15.0" fill="rgb(231,135,2)" rx="2" ry="2" />
<text  x="564.56" y="1807.5" ></text>
</g>
<g >
<title>database::find_schema (7 samples, 0.13%)</title><rect x="810.1" y="1781" width="1.6" height="15.0" fill="rgb(228,40,54)" rx="2" ry="2" />
<text  x="813.11" y="1791.5" ></text>
</g>
<g >
<title>fmt::v7::detail::value&lt;fmt::v7::basic_printf_context&lt;fmt::v7::detail::buffer_appender&lt;char&gt;, char&gt; &gt;::format_custom_arg&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, fmt::v7::detail::fallback_formatter&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, char, void&gt; &gt; (1 samples, 0.02%)</title><rect x="22.1" y="1909" width="0.2" height="15.0" fill="rgb(223,30,5)" rx="2" ry="2" />
<text  x="25.10" y="1919.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="1099.0" y="1845" width="0.2" height="15.0" fill="rgb(237,72,49)" rx="2" ry="2" />
<text  x="1102.01" y="1855.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="308.1" y="1733" width="0.2" height="15.0" fill="rgb(211,68,31)" rx="2" ry="2" />
<text  x="311.08" y="1743.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (5 samples, 0.09%)</title><rect x="563.6" y="1765" width="1.1" height="15.0" fill="rgb(235,148,52)" rx="2" ry="2" />
<text  x="566.58" y="1775.5" ></text>
</g>
<g >
<title>fmt::v7::basic_printf_context&lt;fmt::v7::detail::buffer_appender&lt;char&gt;, char&gt;::format&lt;fmt::v7::printf_arg_formatter&lt;fmt::v7::detail::buffer_appender&lt;char&gt;, char&gt; &gt; (7 samples, 0.13%)</title><rect x="21.4" y="1925" width="1.6" height="15.0" fill="rgb(240,148,34)" rx="2" ry="2" />
<text  x="24.43" y="1935.5" ></text>
</g>
<g >
<title>range_tombstone_list::~range_tombstone_list (1 samples, 0.02%)</title><rect x="1118.3" y="1621" width="0.2" height="15.0" fill="rgb(225,44,9)" rx="2" ry="2" />
<text  x="1121.28" y="1631.5" ></text>
</g>
<g >
<title>table::table (1 samples, 0.02%)</title><rect x="109.3" y="1877" width="0.2" height="15.0" fill="rgb(226,5,2)" rx="2" ry="2" />
<text  x="112.29" y="1887.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::trivial_direct_destroy (1 samples, 0.02%)</title><rect x="108.8" y="1749" width="0.3" height="15.0" fill="rgb(217,187,54)" rx="2" ry="2" />
<text  x="111.84" y="1759.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.02%)</title><rect x="1188.9" y="181" width="0.2" height="15.0" fill="rgb(213,84,32)" rx="2" ry="2" />
<text  x="1191.88" y="191.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::add_data (2 samples, 0.04%)</title><rect x="714.2" y="1893" width="0.4" height="15.0" fill="rgb(244,48,4)" rx="2" ry="2" />
<text  x="717.19" y="1903.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="595.9" y="1797" width="0.2" height="15.0" fill="rgb(243,33,30)" rx="2" ry="2" />
<text  x="598.85" y="1807.5" ></text>
</g>
<g >
<title>utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;::touch (1 samples, 0.02%)</title><rect x="736.2" y="1845" width="0.2" height="15.0" fill="rgb(249,168,0)" rx="2" ry="2" />
<text  x="739.15" y="1855.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (1 samples, 0.02%)</title><rect x="525.5" y="1685" width="0.2" height="15.0" fill="rgb(228,130,13)" rx="2" ry="2" />
<text  x="528.48" y="1695.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.02%)</title><rect x="49.0" y="1589" width="0.2" height="15.0" fill="rgb(212,76,53)" rx="2" ry="2" />
<text  x="52.00" y="1599.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.02%)</title><rect x="60.9" y="1509" width="0.2" height="15.0" fill="rgb(213,51,48)" rx="2" ry="2" />
<text  x="63.88" y="1519.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (6 samples, 0.11%)</title><rect x="1147.0" y="1797" width="1.3" height="15.0" fill="rgb(212,40,27)" rx="2" ry="2" />
<text  x="1149.97" y="1807.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="821.8" y="1781" width="0.2" height="15.0" fill="rgb(207,64,34)" rx="2" ry="2" />
<text  x="824.77" y="1791.5" ></text>
</g>
<g >
<title>cql3::expr::expression::~expression (2 samples, 0.04%)</title><rect x="56.2" y="1717" width="0.4" height="15.0" fill="rgb(224,222,10)" rx="2" ry="2" />
<text  x="59.17" y="1727.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="60.7" y="1621" width="0.2" height="15.0" fill="rgb(236,163,31)" rx="2" ry="2" />
<text  x="63.65" y="1631.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (4 samples, 0.08%)</title><rect x="681.9" y="1893" width="0.9" height="15.0" fill="rgb(220,99,35)" rx="2" ry="2" />
<text  x="684.92" y="1903.5" ></text>
</g>
<g >
<title>database::apply_with_commitlog (27 samples, 0.51%)</title><rect x="1115.4" y="1733" width="6.0" height="15.0" fill="rgb(241,70,42)" rx="2" ry="2" />
<text  x="1118.37" y="1743.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (2 samples, 0.04%)</title><rect x="1143.4" y="1829" width="0.4" height="15.0" fill="rgb(232,80,10)" rx="2" ry="2" />
<text  x="1146.38" y="1839.5" ></text>
</g>
<g >
<title>column_definition::column_definition (1 samples, 0.02%)</title><rect x="20.1" y="1541" width="0.2" height="15.0" fill="rgb(225,15,17)" rx="2" ry="2" />
<text  x="23.09" y="1551.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getText[abi:cxx11] (1 samples, 0.02%)</title><rect x="59.8" y="1685" width="0.2" height="15.0" fill="rgb(209,155,21)" rx="2" ry="2" />
<text  x="62.75" y="1695.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (14 samples, 0.27%)</title><rect x="1186.2" y="885" width="3.1" height="15.0" fill="rgb(228,93,40)" rx="2" ry="2" />
<text  x="1189.19" y="895.5" ></text>
</g>
<g >
<title>sstables::mc::writer::consume_new_partition (1 samples, 0.02%)</title><rect x="1187.8" y="117" width="0.2" height="15.0" fill="rgb(236,190,32)" rx="2" ry="2" />
<text  x="1190.76" y="127.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (5 samples, 0.09%)</title><rect x="686.8" y="1893" width="1.2" height="15.0" fill="rgb(246,195,19)" rx="2" ry="2" />
<text  x="689.85" y="1903.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="848.7" y="1685" width="0.2" height="15.0" fill="rgb(220,25,33)" rx="2" ry="2" />
<text  x="851.66" y="1695.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.02%)</title><rect x="10.7" y="1829" width="0.2" height="15.0" fill="rgb(216,188,24)" rx="2" ry="2" />
<text  x="13.67" y="1839.5" ></text>
</g>
<g >
<title>query::querier_base::close (3 samples, 0.06%)</title><rect x="1162.4" y="1909" width="0.7" height="15.0" fill="rgb(247,60,2)" rx="2" ry="2" />
<text  x="1165.43" y="1919.5" ></text>
</g>
<g >
<title>ser::qr_clustered_row__cells&lt;bytes_ostream&gt;::start_cells (4 samples, 0.08%)</title><rect x="362.5" y="1605" width="0.9" height="15.0" fill="rgb(226,48,42)" rx="2" ry="2" />
<text  x="365.54" y="1615.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::~impl (5 samples, 0.09%)</title><rect x="576.6" y="1733" width="1.1" height="15.0" fill="rgb(225,217,45)" rx="2" ry="2" />
<text  x="579.58" y="1743.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_erase_at_end (1 samples, 0.02%)</title><rect x="404.9" y="1621" width="0.2" height="15.0" fill="rgb(233,193,28)" rx="2" ry="2" />
<text  x="407.90" y="1631.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::~holder (2 samples, 0.04%)</title><rect x="465.6" y="1765" width="0.5" height="15.0" fill="rgb(224,96,31)" rx="2" ry="2" />
<text  x="468.64" y="1775.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;bool&gt;::take_value (1 samples, 0.02%)</title><rect x="770.7" y="1781" width="0.2" height="15.0" fill="rgb(215,152,34)" rx="2" ry="2" />
<text  x="773.67" y="1791.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_singular (1 samples, 0.02%)</title><rect x="107.3" y="1829" width="0.2" height="15.0" fill="rgb(248,220,3)" rx="2" ry="2" />
<text  x="110.27" y="1839.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;bytes_ostream::chunk, std::default_delete&lt;bytes_ostream::chunk&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="101.0" y="1813" width="0.2" height="15.0" fill="rgb(224,86,35)" rx="2" ry="2" />
<text  x="103.99" y="1823.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.02%)</title><rect x="697.6" y="1909" width="0.2" height="15.0" fill="rgb(238,104,53)" rx="2" ry="2" />
<text  x="700.60" y="1919.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (14 samples, 0.27%)</title><rect x="1186.2" y="1397" width="3.1" height="15.0" fill="rgb(212,12,45)" rx="2" ry="2" />
<text  x="1189.19" y="1407.5" ></text>
</g>
<g >
<title>std::has_facet&lt;std::num_get&lt;char, std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="11.1" y="2021" width="0.2" height="15.0" fill="rgb(214,148,11)" rx="2" ry="2" />
<text  x="14.12" y="2031.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::storage_proxy::mutate_internal&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt; &gt; (2 samples, 0.04%)</title><rect x="85.5" y="1941" width="0.5" height="15.0" fill="rgb(248,214,23)" rx="2" ry="2" />
<text  x="88.53" y="1951.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (2 samples, 0.04%)</title><rect x="46.1" y="1717" width="0.4" height="15.0" fill="rgb(249,114,0)" rx="2" ry="2" />
<text  x="49.08" y="1727.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (7 samples, 0.13%)</title><rect x="580.8" y="1717" width="1.6" height="15.0" fill="rgb(216,214,40)" rx="2" ry="2" />
<text  x="583.84" y="1727.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (14 samples, 0.27%)</title><rect x="1186.2" y="1941" width="3.1" height="15.0" fill="rgb(213,207,30)" rx="2" ry="2" />
<text  x="1189.19" y="1951.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (2 samples, 0.04%)</title><rect x="51.7" y="1669" width="0.4" height="15.0" fill="rgb(249,25,9)" rx="2" ry="2" />
<text  x="54.69" y="1679.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;dht::token, std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt;, std::allocator&lt;std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;dht::token&gt;, std::hash&lt;dht::token&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (1 samples, 0.02%)</title><rect x="1129.0" y="1573" width="0.3" height="15.0" fill="rgb(215,156,32)" rx="2" ry="2" />
<text  x="1132.04" y="1583.5" ></text>
</g>
<g >
<title>service::client_state::ensure_has_permission (3 samples, 0.06%)</title><rect x="769.3" y="1797" width="0.7" height="15.0" fill="rgb(233,212,11)" rx="2" ry="2" />
<text  x="772.32" y="1807.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::clear (2 samples, 0.04%)</title><rect x="299.1" y="1701" width="0.5" height="15.0" fill="rgb(206,38,31)" rx="2" ry="2" />
<text  x="302.12" y="1711.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="585.8" y="1749" width="0.2" height="15.0" fill="rgb(247,74,38)" rx="2" ry="2" />
<text  x="588.77" y="1759.5" ></text>
</g>
<g >
<title>partition_key::partition_key (1 samples, 0.02%)</title><rect x="1118.5" y="1653" width="0.2" height="15.0" fill="rgb(249,94,10)" rx="2" ry="2" />
<text  x="1121.51" y="1663.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.04%)</title><rect x="47.0" y="1717" width="0.4" height="15.0" fill="rgb(234,161,44)" rx="2" ry="2" />
<text  x="49.98" y="1727.5" ></text>
</g>
<g >
<title>global_schema_ptr::get (1 samples, 0.02%)</title><rect x="1018.5" y="1685" width="0.3" height="15.0" fill="rgb(243,51,14)" rx="2" ry="2" />
<text  x="1021.55" y="1695.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (1 samples, 0.02%)</title><rect x="459.8" y="1829" width="0.2" height="15.0" fill="rgb(238,87,31)" rx="2" ry="2" />
<text  x="462.81" y="1839.5" ></text>
</g>
<g >
<title>std::__lower_bound&lt;__gnu_cxx::__normal_iterator&lt;long*, std::vector&lt;long, std::allocator&lt;long&gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_less_val&gt; (6 samples, 0.11%)</title><rect x="1152.6" y="1877" width="1.3" height="15.0" fill="rgb(227,130,12)" rx="2" ry="2" />
<text  x="1155.57" y="1887.5" ></text>
</g>
<g >
<title>intrusive_array&lt;memtable_entry&gt;::lower_bound&lt;dht::ring_position, dht::ring_position_comparator&gt; (62 samples, 1.18%)</title><rect x="500.2" y="1733" width="13.8" height="15.0" fill="rgb(243,138,49)" rx="2" ry="2" />
<text  x="503.15" y="1743.5" ></text>
</g>
<g >
<title>boost::variant&lt;ser::live_cell_view, ser::expiring_cell_view, ser::dead_cell_view, ser::counter_cell_view, ser::unknown_variant_type&gt;::variant (1 samples, 0.02%)</title><rect x="107.0" y="1621" width="0.3" height="15.0" fill="rgb(227,183,49)" rx="2" ry="2" />
<text  x="110.04" y="1631.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (14 samples, 0.27%)</title><rect x="1186.2" y="1045" width="3.1" height="15.0" fill="rgb(221,121,16)" rx="2" ry="2" />
<text  x="1189.19" y="1055.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_insert&lt;flat_mutation_reader&gt; (1 samples, 0.02%)</title><rect x="475.3" y="1701" width="0.2" height="15.0" fill="rgb(241,126,45)" rx="2" ry="2" />
<text  x="478.28" y="1711.5" ></text>
</g>
<g >
<title>seastar::execution_stage::flush (4 samples, 0.08%)</title><rect x="752.7" y="1781" width="0.9" height="15.0" fill="rgb(208,124,49)" rx="2" ry="2" />
<text  x="755.74" y="1791.5" ></text>
</g>
<g >
<title>std::pair&lt;auth::role_or_anonymous, auth::resource&gt;::pair (8 samples, 0.15%)</title><rect x="784.3" y="1637" width="1.8" height="15.0" fill="rgb(249,48,13)" rx="2" ry="2" />
<text  x="787.34" y="1647.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_result_local (173 samples, 3.29%)</title><rect x="990.1" y="1717" width="38.8" height="15.0" fill="rgb(234,64,6)" rx="2" ry="2" />
<text  x="993.08" y="1727.5" >ser..</text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.02%)</title><rect x="1188.2" y="181" width="0.2" height="15.0" fill="rgb(226,56,14)" rx="2" ry="2" />
<text  x="1191.21" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value_view, std::allocator&lt;cql3::raw_value_view&gt; &gt;::emplace_back&lt;cql3::raw_value_view&gt; (13 samples, 0.25%)</title><rect x="834.8" y="1813" width="2.9" height="15.0" fill="rgb(250,9,54)" rx="2" ry="2" />
<text  x="837.77" y="1823.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (195 samples, 3.70%)</title><rect x="25.0" y="1845" width="43.7" height="15.0" fill="rgb(214,75,12)" rx="2" ry="2" />
<text  x="28.02" y="1855.5" >seas..</text>
</g>
<g >
<title>mutation_reader_merger::close (3 samples, 0.06%)</title><rect x="1162.4" y="1845" width="0.7" height="15.0" fill="rgb(233,154,12)" rx="2" ry="2" />
<text  x="1165.43" y="1855.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (2 samples, 0.04%)</title><rect x="1114.5" y="1877" width="0.4" height="15.0" fill="rgb(205,25,17)" rx="2" ry="2" />
<text  x="1117.47" y="1887.5" ></text>
</g>
<g >
<title>mutation_fragment_stream_validator::operator (1 samples, 0.02%)</title><rect x="1188.2" y="37" width="0.2" height="15.0" fill="rgb(220,7,17)" rx="2" ry="2" />
<text  x="1191.21" y="47.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="900.7" y="1733" width="0.2" height="15.0" fill="rgb(242,86,30)" rx="2" ry="2" />
<text  x="903.66" y="1743.5" ></text>
</g>
<g >
<title>std::__apply_impl&lt;seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (35 samples, 0.66%)</title><rect x="1122.3" y="1893" width="7.9" height="15.0" fill="rgb(229,168,12)" rx="2" ry="2" />
<text  x="1125.32" y="1903.5" ></text>
</g>
<g >
<title>std::operator==&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; (1 samples, 0.02%)</title><rect x="747.1" y="1717" width="0.3" height="15.0" fill="rgb(224,167,34)" rx="2" ry="2" />
<text  x="750.14" y="1727.5" ></text>
</g>
<g >
<title>reader_selector::has_new_readers (1 samples, 0.02%)</title><rect x="180.1" y="1701" width="0.2" height="15.0" fill="rgb(218,143,7)" rx="2" ry="2" />
<text  x="183.11" y="1711.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (1 samples, 0.02%)</title><rect x="919.3" y="1797" width="0.2" height="15.0" fill="rgb(246,156,22)" rx="2" ry="2" />
<text  x="922.26" y="1807.5" ></text>
</g>
<g >
<title>absl::container_internal::operator== (1 samples, 0.02%)</title><rect x="829.6" y="1797" width="0.2" height="15.0" fill="rgb(229,124,47)" rx="2" ry="2" />
<text  x="832.61" y="1807.5" ></text>
</g>
<g >
<title>ser::writer_of_query_result&lt;bytes_ostream&gt;::writer_of_query_result (1 samples, 0.02%)</title><rect x="613.1" y="1845" width="0.2" height="15.0" fill="rgb(238,96,44)" rx="2" ry="2" />
<text  x="616.11" y="1855.5" ></text>
</g>
<g >
<title>std::destroy_at&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="55.7" y="1589" width="0.2" height="15.0" fill="rgb(233,116,32)" rx="2" ry="2" />
<text  x="58.72" y="1599.5" ></text>
</g>
<g >
<title>start_thread (1 samples, 0.02%)</title><rect x="1189.8" y="2053" width="0.2" height="15.0" fill="rgb(242,35,6)" rx="2" ry="2" />
<text  x="1192.78" y="2063.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::move_it (1 samples, 0.02%)</title><rect x="643.1" y="1893" width="0.3" height="15.0" fill="rgb(212,226,29)" rx="2" ry="2" />
<text  x="646.14" y="1903.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::emplace&lt;atomic_cell_or_collection, seastar::optimized_optional&lt;cell_hash&gt; &gt; (1 samples, 0.02%)</title><rect x="19.4" y="1893" width="0.2" height="15.0" fill="rgb(206,126,8)" rx="2" ry="2" />
<text  x="22.41" y="1903.5" ></text>
</g>
<g >
<title>absl::container_internal::probe_seq&lt;16ul&gt;::probe_seq (1 samples, 0.02%)</title><rect x="826.3" y="1797" width="0.2" height="15.0" fill="rgb(236,19,54)" rx="2" ry="2" />
<text  x="829.25" y="1807.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (3 samples, 0.06%)</title><rect x="1187.3" y="229" width="0.7" height="15.0" fill="rgb(244,205,30)" rx="2" ry="2" />
<text  x="1190.31" y="239.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, enum_set&lt;super_enum&lt;auth::permission,  (59 samples, 1.12%)</title><rect x="782.3" y="1653" width="13.2" height="15.0" fill="rgb(252,35,18)" rx="2" ry="2" />
<text  x="785.32" y="1663.5" ></text>
</g>
<g >
<title>service::client_state::has_column_family_access (233 samples, 4.43%)</title><rect x="763.9" y="1829" width="52.3" height="15.0" fill="rgb(206,119,42)" rx="2" ry="2" />
<text  x="766.94" y="1839.5" >servi..</text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.02%)</title><rect x="49.4" y="1557" width="0.3" height="15.0" fill="rgb(211,10,51)" rx="2" ry="2" />
<text  x="52.45" y="1567.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::do_refresh_state (2 samples, 0.04%)</title><rect x="276.5" y="1669" width="0.4" height="15.0" fill="rgb(240,160,47)" rx="2" ry="2" />
<text  x="279.48" y="1679.5" ></text>
</g>
<g >
<title>std::hash&lt;auth::resource&gt;::hash_data (7 samples, 0.13%)</title><rect x="805.0" y="1749" width="1.5" height="15.0" fill="rgb(210,213,23)" rx="2" ry="2" />
<text  x="807.96" y="1759.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;::lru_entry, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="730.1" y="1829" width="0.2" height="15.0" fill="rgb(206,79,39)" rx="2" ry="2" />
<text  x="733.10" y="1839.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (6 samples, 0.11%)</title><rect x="976.0" y="1717" width="1.3" height="15.0" fill="rgb(227,121,7)" rx="2" ry="2" />
<text  x="978.96" y="1727.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::term (5 samples, 0.09%)</title><rect x="64.0" y="1749" width="1.1" height="15.0" fill="rgb(214,85,35)" rx="2" ry="2" />
<text  x="67.01" y="1759.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnFamilyName (5 samples, 0.09%)</title><rect x="47.4" y="1781" width="1.1" height="15.0" fill="rgb(235,212,42)" rx="2" ry="2" />
<text  x="50.43" y="1791.5" ></text>
</g>
<g >
<title>locator::simple_snitch::sort_by_proximity (3 samples, 0.06%)</title><rect x="1055.1" y="1749" width="0.7" height="15.0" fill="rgb(239,157,48)" rx="2" ry="2" />
<text  x="1058.08" y="1759.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (1 samples, 0.02%)</title><rect x="48.3" y="1717" width="0.2" height="15.0" fill="rgb(245,26,3)" rx="2" ry="2" />
<text  x="51.32" y="1727.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const&amp;, auth::resource&amp;&amp;, service::client_state::has_column_family_access (4 samples, 0.08%)</title><rect x="806.8" y="1813" width="0.8" height="15.0" fill="rgb(227,98,34)" rx="2" ry="2" />
<text  x="809.75" y="1823.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.04%)</title><rect x="63.3" y="1717" width="0.5" height="15.0" fill="rgb(244,127,51)" rx="2" ry="2" />
<text  x="66.34" y="1727.5" ></text>
</g>
<g >
<title>cql3::restrictions::partition_key_restrictions::needs_filtering (2 samples, 0.04%)</title><rect x="75.4" y="1797" width="0.5" height="15.0" fill="rgb(247,62,52)" rx="2" ry="2" />
<text  x="78.44" y="1807.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (6 samples, 0.11%)</title><rect x="790.2" y="1541" width="1.3" height="15.0" fill="rgb(248,174,28)" rx="2" ry="2" />
<text  x="793.17" y="1551.5" ></text>
</g>
<g >
<title>service::client_state::has_column_family_access (11 samples, 0.21%)</title><rect x="78.8" y="1893" width="2.5" height="15.0" fill="rgb(210,151,52)" rx="2" ry="2" />
<text  x="81.81" y="1903.5" ></text>
</g>
<g >
<title>logalloc::segment_pool::refill_emergency_reserve (1 samples, 0.02%)</title><rect x="198.9" y="1669" width="0.3" height="15.0" fill="rgb(224,7,18)" rx="2" ry="2" />
<text  x="201.93" y="1679.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (2 samples, 0.04%)</title><rect x="802.9" y="1717" width="0.5" height="15.0" fill="rgb(219,41,49)" rx="2" ry="2" />
<text  x="805.94" y="1727.5" ></text>
</g>
<g >
<title>database::find_uuid (22 samples, 0.42%)</title><rect x="758.1" y="1813" width="4.9" height="15.0" fill="rgb(214,32,52)" rx="2" ry="2" />
<text  x="761.12" y="1823.5" ></text>
</g>
<g >
<title>std::__copy_n_a&lt;legacy_compound_view&lt;compound_type&lt; (29 samples, 0.55%)</title><rect x="912.1" y="1781" width="6.5" height="15.0" fill="rgb(250,134,29)" rx="2" ry="2" />
<text  x="915.09" y="1791.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::execute (1 samples, 0.02%)</title><rect x="107.3" y="1813" width="0.2" height="15.0" fill="rgb(239,160,48)" rx="2" ry="2" />
<text  x="110.27" y="1823.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (2 samples, 0.04%)</title><rect x="51.7" y="1637" width="0.4" height="15.0" fill="rgb(242,80,45)" rx="2" ry="2" />
<text  x="54.69" y="1647.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::node_size (1 samples, 0.02%)</title><rect x="252.7" y="1573" width="0.2" height="15.0" fill="rgb(252,110,28)" rx="2" ry="2" />
<text  x="255.72" y="1583.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector&lt;gms::inet_address const*&gt; (1 samples, 0.02%)</title><rect x="1125.0" y="1685" width="0.2" height="15.0" fill="rgb(221,24,12)" rx="2" ry="2" />
<text  x="1128.00" y="1695.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="185.9" y="1669" width="0.3" height="15.0" fill="rgb(221,193,42)" rx="2" ry="2" />
<text  x="188.94" y="1679.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit_slot&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::memory_usage&lt;row::external_memory_usage (1 samples, 0.02%)</title><rect x="259.2" y="1557" width="0.2" height="15.0" fill="rgb(251,185,13)" rx="2" ry="2" />
<text  x="262.22" y="1567.5" ></text>
</g>
<g >
<title>mutation::set_cell (1 samples, 0.02%)</title><rect x="106.8" y="1909" width="0.2" height="15.0" fill="rgb(214,151,23)" rx="2" ry="2" />
<text  x="109.82" y="1919.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reclaiming_disabled&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (241 samples, 4.58%)</title><rect x="213.3" y="1637" width="54.0" height="15.0" fill="rgb(229,117,28)" rx="2" ry="2" />
<text  x="216.28" y="1647.5" >logal..</text>
</g>
<g >
<title>seastar::thread_context::thread_context (14 samples, 0.27%)</title><rect x="1186.2" y="1253" width="3.1" height="15.0" fill="rgb(216,170,26)" rx="2" ry="2" />
<text  x="1189.19" y="1263.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_M_reset (1 samples, 0.02%)</title><rect x="47.9" y="1685" width="0.2" height="15.0" fill="rgb(250,87,6)" rx="2" ry="2" />
<text  x="50.88" y="1695.5" ></text>
</g>
<g >
<title>TLS init function for simple_date_type (1 samples, 0.02%)</title><rect x="108.4" y="1813" width="0.2" height="15.0" fill="rgb(215,90,40)" rx="2" ry="2" />
<text  x="111.39" y="1823.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (14 samples, 0.27%)</title><rect x="1186.2" y="453" width="3.1" height="15.0" fill="rgb(247,31,15)" rx="2" ry="2" />
<text  x="1189.19" y="463.5" ></text>
</g>
<g >
<title>basic_atomic_cell_view&lt; (17 samples, 0.32%)</title><rect x="382.9" y="1589" width="3.8" height="15.0" fill="rgb(222,70,14)" rx="2" ry="2" />
<text  x="385.94" y="1599.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (6 samples, 0.11%)</title><rect x="1148.5" y="1845" width="1.4" height="15.0" fill="rgb(217,122,19)" rx="2" ry="2" />
<text  x="1151.54" y="1855.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (14 samples, 0.27%)</title><rect x="1186.2" y="1189" width="3.1" height="15.0" fill="rgb(220,125,24)" rx="2" ry="2" />
<text  x="1189.19" y="1199.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::contains&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="81.0" y="1829" width="0.3" height="15.0" fill="rgb(220,201,30)" rx="2" ry="2" />
<text  x="84.05" y="1839.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume_in_thread&lt;sstables::sstable_writer, flat_mutation_reader::no_filter&gt; (3 samples, 0.06%)</title><rect x="1187.3" y="197" width="0.7" height="15.0" fill="rgb(241,43,18)" rx="2" ry="2" />
<text  x="1190.31" y="207.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (1 samples, 0.02%)</title><rect x="767.1" y="1781" width="0.2" height="15.0" fill="rgb(206,75,51)" rx="2" ry="2" />
<text  x="770.08" y="1791.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (2 samples, 0.04%)</title><rect x="57.7" y="1701" width="0.5" height="15.0" fill="rgb(218,172,35)" rx="2" ry="2" />
<text  x="60.74" y="1711.5" ></text>
</g>
<g >
<title>sstables::key::make_key&lt;partition_key_view&amp;&gt; (1 samples, 0.02%)</title><rect x="1187.8" y="101" width="0.2" height="15.0" fill="rgb(246,87,51)" rx="2" ry="2" />
<text  x="1190.76" y="111.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.02%)</title><rect x="48.1" y="1605" width="0.2" height="15.0" fill="rgb(239,197,42)" rx="2" ry="2" />
<text  x="51.10" y="1615.5" ></text>
</g>
<g >
<title>schema_registry_entry::load (2 samples, 0.04%)</title><rect x="108.8" y="1877" width="0.5" height="15.0" fill="rgb(239,222,14)" rx="2" ry="2" />
<text  x="111.84" y="1887.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::do_refresh_state (1 samples, 0.02%)</title><rect x="847.3" y="1781" width="0.2" height="15.0" fill="rgb(243,10,40)" rx="2" ry="2" />
<text  x="850.32" y="1791.5" ></text>
</g>
<g >
<title>operator new (9 samples, 0.17%)</title><rect x="986.3" y="1685" width="2.0" height="15.0" fill="rgb(217,13,35)" rx="2" ry="2" />
<text  x="989.27" y="1695.5" ></text>
</g>
<g >
<title>row::row (1 samples, 0.02%)</title><rect x="107.7" y="1205" width="0.2" height="15.0" fill="rgb(238,205,32)" rx="2" ry="2" />
<text  x="110.72" y="1215.5" ></text>
</g>
<g >
<title>mutation_partition_view::do_accept&lt;partition_builder&gt; (6 samples, 0.11%)</title><rect x="1119.2" y="1669" width="1.3" height="15.0" fill="rgb(220,197,5)" rx="2" ry="2" />
<text  x="1122.18" y="1679.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.04%)</title><rect x="44.5" y="1733" width="0.5" height="15.0" fill="rgb(206,54,34)" rx="2" ry="2" />
<text  x="47.51" y="1743.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;clustering_key_prefix&gt;::_M_reset (1 samples, 0.02%)</title><rect x="627.0" y="1845" width="0.2" height="15.0" fill="rgb(251,226,20)" rx="2" ry="2" />
<text  x="630.01" y="1855.5" ></text>
</g>
<g >
<title>schema::get_partitioner (1 samples, 0.02%)</title><rect x="925.1" y="1813" width="0.2" height="15.0" fill="rgb(250,198,51)" rx="2" ry="2" />
<text  x="928.09" y="1823.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.06%)</title><rect x="699.8" y="1909" width="0.7" height="15.0" fill="rgb(243,83,6)" rx="2" ry="2" />
<text  x="702.85" y="1919.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (246 samples, 4.67%)</title><rect x="23.2" y="1909" width="55.2" height="15.0" fill="rgb(244,36,49)" rx="2" ry="2" />
<text  x="26.22" y="1919.5" >cql3:..</text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (1 samples, 0.02%)</title><rect x="1162.9" y="1765" width="0.2" height="15.0" fill="rgb(239,49,37)" rx="2" ry="2" />
<text  x="1165.88" y="1775.5" ></text>
</g>
<g >
<title>seastar::repeat&lt;flat_mutation_reader::impl::consume_pausable&lt;scanning_reader::consumer&gt; (2 samples, 0.04%)</title><rect x="107.5" y="1397" width="0.4" height="15.0" fill="rgb(246,99,2)" rx="2" ry="2" />
<text  x="110.49" y="1407.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.04%)</title><rect x="539.2" y="1749" width="0.4" height="15.0" fill="rgb(211,55,28)" rx="2" ry="2" />
<text  x="542.15" y="1759.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::vector (10 samples, 0.19%)</title><rect x="1025.5" y="1701" width="2.2" height="15.0" fill="rgb(254,97,1)" rx="2" ry="2" />
<text  x="1028.49" y="1711.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt; &gt;::satisfy_with_result_of&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::then_wrapped_nrvo&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (12 samples, 0.23%)</title><rect x="666.5" y="1909" width="2.6" height="15.0" fill="rgb(231,186,41)" rx="2" ry="2" />
<text  x="669.45" y="1919.5" ></text>
</g>
<g >
<title>std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;auth::role_or_anonymous&gt;, seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (1 samples, 0.02%)</title><rect x="801.6" y="1701" width="0.2" height="15.0" fill="rgb(213,171,20)" rx="2" ry="2" />
<text  x="804.60" y="1711.5" ></text>
</g>
<g >
<title>list_reader_selector::create_new_readers (1 samples, 0.02%)</title><rect x="469.2" y="1717" width="0.2" height="15.0" fill="rgb(208,121,13)" rx="2" ry="2" />
<text  x="472.23" y="1727.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (2 samples, 0.04%)</title><rect x="795.1" y="1637" width="0.4" height="15.0" fill="rgb(238,32,52)" rx="2" ry="2" />
<text  x="798.10" y="1647.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (14 samples, 0.27%)</title><rect x="1186.2" y="1205" width="3.1" height="15.0" fill="rgb(245,41,40)" rx="2" ry="2" />
<text  x="1189.19" y="1215.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (1 samples, 0.02%)</title><rect x="64.9" y="1701" width="0.2" height="15.0" fill="rgb(248,123,49)" rx="2" ry="2" />
<text  x="67.91" y="1711.5" ></text>
</g>
<g >
<title>seastar::future&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry_ptr&gt;::then_impl&lt;utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (1 samples, 0.02%)</title><rect x="740.9" y="1813" width="0.2" height="15.0" fill="rgb(250,138,3)" rx="2" ry="2" />
<text  x="743.86" y="1823.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;gms::inet_address, std::pair&lt;gms::inet_address const, utils::UUID&gt;, std::allocator&lt;std::pair&lt;gms::inet_address const, utils::UUID&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;gms::inet_address&gt;, std::hash&lt;gms::inet_address&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (3 samples, 0.06%)</title><rect x="1143.2" y="1845" width="0.6" height="15.0" fill="rgb(237,108,25)" rx="2" ry="2" />
<text  x="1146.16" y="1855.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::never_speculating_read_executor&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="969.9" y="1781" width="0.2" height="15.0" fill="rgb(232,190,40)" rx="2" ry="2" />
<text  x="972.91" y="1791.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reserve&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (1 samples, 0.02%)</title><rect x="845.5" y="1909" width="0.2" height="15.0" fill="rgb(239,179,26)" rx="2" ry="2" />
<text  x="848.53" y="1919.5" ></text>
</g>
<g >
<title>partition_key_view::legacy_form (1 samples, 0.02%)</title><rect x="1116.9" y="1637" width="0.3" height="15.0" fill="rgb(227,9,16)" rx="2" ry="2" />
<text  x="1119.94" y="1647.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::raw::update_statement, std::default_delete&lt;cql3::statements::raw::update_statement&gt; &gt;::_M_deleter (1 samples, 0.02%)</title><rect x="67.6" y="1749" width="0.2" height="15.0" fill="rgb(247,128,50)" rx="2" ry="2" />
<text  x="70.60" y="1759.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (1 samples, 0.02%)</title><rect x="308.3" y="1749" width="0.2" height="15.0" fill="rgb(248,67,52)" rx="2" ry="2" />
<text  x="311.31" y="1759.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.06%)</title><rect x="827.1" y="1829" width="0.7" height="15.0" fill="rgb(217,113,26)" rx="2" ry="2" />
<text  x="830.15" y="1839.5" ></text>
</g>
<g >
<title>service::shared_mutation::shared_mutation (14 samples, 0.27%)</title><rect x="1125.7" y="1637" width="3.1" height="15.0" fill="rgb(223,111,52)" rx="2" ry="2" />
<text  x="1128.68" y="1647.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (14 samples, 0.27%)</title><rect x="1186.2" y="1461" width="3.1" height="15.0" fill="rgb(228,220,48)" rx="2" ry="2" />
<text  x="1189.19" y="1471.5" ></text>
</g>
<g >
<title>to_hex (1 samples, 0.02%)</title><rect x="82.2" y="1941" width="0.2" height="15.0" fill="rgb(251,24,13)" rx="2" ry="2" />
<text  x="85.17" y="1951.5" ></text>
</g>
<g >
<title>query::result_set::result_set (1 samples, 0.02%)</title><rect x="109.1" y="1813" width="0.2" height="15.0" fill="rgb(218,57,11)" rx="2" ry="2" />
<text  x="112.06" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_List_node_header::_List_node_header (1 samples, 0.02%)</title><rect x="482.0" y="1685" width="0.2" height="15.0" fill="rgb(209,19,9)" rx="2" ry="2" />
<text  x="485.00" y="1695.5" ></text>
</g>
<g >
<title>dht::murmur3_partitioner::get_token (3 samples, 0.06%)</title><rect x="926.0" y="1829" width="0.7" height="15.0" fill="rgb(232,132,20)" rx="2" ry="2" />
<text  x="928.98" y="1839.5" ></text>
</g>
<g >
<title>std::__apply_impl&lt;seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (31 samples, 0.59%)</title><rect x="1115.1" y="1893" width="7.0" height="15.0" fill="rgb(234,159,1)" rx="2" ry="2" />
<text  x="1118.14" y="1903.5" ></text>
</g>
<g >
<title>database::add_column_family (6 samples, 0.11%)</title><rect x="108.4" y="1909" width="1.3" height="15.0" fill="rgb(213,80,41)" rx="2" ry="2" />
<text  x="111.39" y="1919.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt; &gt;::invoke&lt;flat_mutation_reader::impl::consume_pausable&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (1 samples, 0.02%)</title><rect x="107.9" y="1685" width="0.3" height="15.0" fill="rgb(240,93,28)" rx="2" ry="2" />
<text  x="110.94" y="1695.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::CqlParser (1 samples, 0.02%)</title><rect x="68.7" y="1861" width="0.2" height="15.0" fill="rgb(208,11,39)" rx="2" ry="2" />
<text  x="71.72" y="1871.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="851.8" y="1733" width="0.2" height="15.0" fill="rgb(216,26,41)" rx="2" ry="2" />
<text  x="854.80" y="1743.5" ></text>
</g>
<g >
<title>locator::simple_strategy::calculate_natural_endpoints (1 samples, 0.02%)</title><rect x="20.3" y="1829" width="0.2" height="15.0" fill="rgb(221,159,22)" rx="2" ry="2" />
<text  x="23.31" y="1839.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.02%)</title><rect x="60.0" y="1557" width="0.2" height="15.0" fill="rgb(214,133,33)" rx="2" ry="2" />
<text  x="62.98" y="1567.5" ></text>
</g>
<g >
<title>antlr3::IntStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::get_super (1 samples, 0.02%)</title><rect x="33.8" y="1653" width="0.2" height="15.0" fill="rgb(212,154,15)" rx="2" ry="2" />
<text  x="36.76" y="1663.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::query_options, std::default_delete&lt;cql3::query_options&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="1162.0" y="1925" width="0.2" height="15.0" fill="rgb(212,29,43)" rx="2" ry="2" />
<text  x="1164.98" y="1935.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::trivial_direct_move&lt;8ul&gt; (1 samples, 0.02%)</title><rect x="979.1" y="1685" width="0.2" height="15.0" fill="rgb(230,41,42)" rx="2" ry="2" />
<text  x="982.10" y="1695.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_M_set_node (1 samples, 0.02%)</title><rect x="28.6" y="1669" width="0.2" height="15.0" fill="rgb(239,83,18)" rx="2" ry="2" />
<text  x="31.60" y="1679.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::consume_with&lt;row::apply_monotonically (1 samples, 0.02%)</title><rect x="19.4" y="1941" width="0.2" height="15.0" fill="rgb(238,103,46)" rx="2" ry="2" />
<text  x="22.41" y="1951.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (1 samples, 0.02%)</title><rect x="701.0" y="1893" width="0.2" height="15.0" fill="rgb(247,213,34)" rx="2" ry="2" />
<text  x="703.97" y="1903.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (6 samples, 0.11%)</title><rect x="783.0" y="1589" width="1.3" height="15.0" fill="rgb(227,84,21)" rx="2" ry="2" />
<text  x="786.00" y="1599.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="12.0" y="1957" width="0.2" height="15.0" fill="rgb(231,17,13)" rx="2" ry="2" />
<text  x="15.02" y="1967.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;, seastar::future&lt;void&gt; &gt;, std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;, seastar::future&lt;void&gt; &gt; &gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="80.6" y="1877" width="0.2" height="15.0" fill="rgb(248,49,12)" rx="2" ry="2" />
<text  x="83.60" y="1887.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (2 samples, 0.04%)</title><rect x="928.5" y="1813" width="0.4" height="15.0" fill="rgb(220,121,42)" rx="2" ry="2" />
<text  x="931.45" y="1823.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextToken (60 samples, 1.14%)</title><rect x="29.5" y="1733" width="13.4" height="15.0" fill="rgb(231,11,25)" rx="2" ry="2" />
<text  x="32.50" y="1743.5" ></text>
</g>
<g >
<title>database::find_keyspace (1 samples, 0.02%)</title><rect x="1128.8" y="1621" width="0.2" height="15.0" fill="rgb(205,50,34)" rx="2" ry="2" />
<text  x="1131.81" y="1631.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (5 samples, 0.09%)</title><rect x="1099.7" y="1845" width="1.1" height="15.0" fill="rgb(233,190,11)" rx="2" ry="2" />
<text  x="1102.68" y="1855.5" ></text>
</g>
<g >
<title>std::vector&lt;seastar::shared_ptr&lt;cql3::column_identifier&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::column_identifier&gt; &gt; &gt;::vector (1 samples, 0.02%)</title><rect x="24.3" y="1829" width="0.3" height="15.0" fill="rgb(207,160,23)" rx="2" ry="2" />
<text  x="27.34" y="1839.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="1125.7" y="1589" width="0.2" height="15.0" fill="rgb(240,90,6)" rx="2" ry="2" />
<text  x="1128.68" y="1599.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="580.8" y="1701" width="0.3" height="15.0" fill="rgb(248,166,34)" rx="2" ry="2" />
<text  x="583.84" y="1711.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="48.3" y="1669" width="0.2" height="15.0" fill="rgb(242,192,36)" rx="2" ry="2" />
<text  x="51.32" y="1679.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (2 samples, 0.04%)</title><rect x="60.0" y="1589" width="0.4" height="15.0" fill="rgb(245,175,29)" rx="2" ry="2" />
<text  x="62.98" y="1599.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::has_slice_or_needs_filtering (2 samples, 0.04%)</title><rect x="650.1" y="1845" width="0.4" height="15.0" fill="rgb(227,44,22)" rx="2" ry="2" />
<text  x="653.09" y="1855.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (2 samples, 0.04%)</title><rect x="107.5" y="1541" width="0.4" height="15.0" fill="rgb(211,49,2)" rx="2" ry="2" />
<text  x="110.49" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (1 samples, 0.02%)</title><rect x="72.8" y="1765" width="0.2" height="15.0" fill="rgb(205,124,23)" rx="2" ry="2" />
<text  x="75.75" y="1775.5" ></text>
</g>
<g >
<title>cql3::statements::raw::update_statement::prepare_internal (33 samples, 0.63%)</title><rect x="69.4" y="1861" width="7.4" height="15.0" fill="rgb(209,121,49)" rx="2" ry="2" />
<text  x="72.39" y="1871.5" ></text>
</g>
<g >
<title>utils::config_file::named_value&lt;bool&gt;::the_value (1 samples, 0.02%)</title><rect x="1078.8" y="1781" width="0.3" height="15.0" fill="rgb(209,203,52)" rx="2" ry="2" />
<text  x="1081.84" y="1791.5" ></text>
</g>
<g >
<title>mutation_reader_merger::maybe_add_readers_at_partition_boundary (1 samples, 0.02%)</title><rect x="177.6" y="1733" width="0.3" height="15.0" fill="rgb(237,103,25)" rx="2" ry="2" />
<text  x="180.64" y="1743.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.04%)</title><rect x="665.6" y="1909" width="0.4" height="15.0" fill="rgb(213,127,39)" rx="2" ry="2" />
<text  x="668.56" y="1919.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::statements::raw::update_statement, std::default_delete&lt;cql3::statements::raw::update_statement&gt;, true, true&gt;::operator= (1 samples, 0.02%)</title><rect x="67.6" y="1781" width="0.2" height="15.0" fill="rgb(214,202,37)" rx="2" ry="2" />
<text  x="70.60" y="1791.5" ></text>
</g>
<g >
<title>mutation_source::make_reader (432 samples, 8.21%)</title><rect x="460.0" y="1829" width="96.9" height="15.0" fill="rgb(225,151,16)" rx="2" ry="2" />
<text  x="463.04" y="1839.5" >mutation_so..</text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="208.8" y="1653" width="0.2" height="15.0" fill="rgb(236,18,32)" rx="2" ry="2" />
<text  x="211.80" y="1663.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::restrictions::multi_column_restriction&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="651.0" y="1877" width="0.2" height="15.0" fill="rgb(243,146,13)" rx="2" ry="2" />
<text  x="653.99" y="1887.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.02%)</title><rect x="46.3" y="1621" width="0.2" height="15.0" fill="rgb(211,74,36)" rx="2" ry="2" />
<text  x="49.31" y="1631.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;, service::storage_proxy::query_result_local (11 samples, 0.21%)</title><rect x="640.9" y="1925" width="2.5" height="15.0" fill="rgb(229,33,3)" rx="2" ry="2" />
<text  x="643.90" y="1935.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;std::pair&lt;seastar::shared_ptr&lt;service::abstract_read_executor&gt;, nonwrapping_interval&lt;dht::token&gt; &gt;, 1ul&gt;::clear (14 samples, 0.27%)</title><rect x="1158.8" y="1893" width="3.2" height="15.0" fill="rgb(238,123,11)" rx="2" ry="2" />
<text  x="1161.85" y="1903.5" ></text>
</g>
<g >
<title>cql3::statements::prepared_statement::checked_weak_from_this (6 samples, 0.11%)</title><rect x="728.8" y="1845" width="1.3" height="15.0" fill="rgb(228,47,52)" rx="2" ry="2" />
<text  x="731.76" y="1855.5" ></text>
</g>
<g >
<title>ser::column_view::c (1 samples, 0.02%)</title><rect x="107.0" y="1653" width="0.3" height="15.0" fill="rgb(223,6,2)" rx="2" ry="2" />
<text  x="110.04" y="1663.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (2 samples, 0.04%)</title><rect x="623.2" y="1829" width="0.4" height="15.0" fill="rgb(246,11,54)" rx="2" ry="2" />
<text  x="626.20" y="1839.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_singular (60 samples, 1.14%)</title><rect x="1141.8" y="1909" width="13.5" height="15.0" fill="rgb(218,184,4)" rx="2" ry="2" />
<text  x="1144.81" y="1919.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;void&gt;  (1 samples, 0.02%)</title><rect x="20.1" y="1829" width="0.2" height="15.0" fill="rgb(221,77,39)" rx="2" ry="2" />
<text  x="23.09" y="1839.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::~Parser (1 samples, 0.02%)</title><rect x="24.8" y="1829" width="0.2" height="15.0" fill="rgb(251,98,48)" rx="2" ry="2" />
<text  x="27.79" y="1839.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.02%)</title><rect x="60.7" y="1637" width="0.2" height="15.0" fill="rgb(241,81,36)" rx="2" ry="2" />
<text  x="63.65" y="1647.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::set&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt; (2 samples, 0.04%)</title><rect x="695.1" y="1861" width="0.5" height="15.0" fill="rgb(223,201,42)" rx="2" ry="2" />
<text  x="698.14" y="1871.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="46.3" y="1701" width="0.2" height="15.0" fill="rgb(250,150,25)" rx="2" ry="2" />
<text  x="49.31" y="1711.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="908.5" y="1797" width="0.2" height="15.0" fill="rgb(209,181,15)" rx="2" ry="2" />
<text  x="911.50" y="1807.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="23.4" y="1829" width="0.3" height="15.0" fill="rgb(231,39,3)" rx="2" ry="2" />
<text  x="26.45" y="1839.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::has_available_units (1 samples, 0.02%)</title><rect x="576.8" y="1685" width="0.2" height="15.0" fill="rgb(214,87,46)" rx="2" ry="2" />
<text  x="579.80" y="1695.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="64.7" y="1605" width="0.2" height="15.0" fill="rgb(248,28,39)" rx="2" ry="2" />
<text  x="67.69" y="1615.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (6 samples, 0.11%)</title><rect x="961.2" y="1765" width="1.3" height="15.0" fill="rgb(215,80,28)" rx="2" ry="2" />
<text  x="964.17" y="1775.5" ></text>
</g>
<g >
<title>bplus::node&lt;long, intrusive_array&lt;memtable_entry&gt;, dht::raw_token_less_comparator, 16ul,  (3 samples, 0.06%)</title><rect x="1117.2" y="1605" width="0.6" height="15.0" fill="rgb(240,76,12)" rx="2" ry="2" />
<text  x="1120.16" y="1615.5" ></text>
</g>
<g >
<title>basic_atomic_cell_view&lt; (2 samples, 0.04%)</title><rect x="356.7" y="1605" width="0.5" height="15.0" fill="rgb(249,54,40)" rx="2" ry="2" />
<text  x="359.72" y="1615.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (2 samples, 0.04%)</title><rect x="901.3" y="1717" width="0.5" height="15.0" fill="rgb(240,157,31)" rx="2" ry="2" />
<text  x="904.33" y="1727.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::fetch (590 samples, 11.21%)</title><rect x="173.6" y="1765" width="132.2" height="15.0" fill="rgb(245,53,46)" rx="2" ry="2" />
<text  x="176.61" y="1775.5" >mutation_fragmen..</text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::raw::batch_statement, std::default_delete&lt;cql3::statements::raw::batch_statement&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="67.4" y="1797" width="0.2" height="15.0" fill="rgb(225,48,5)" rx="2" ry="2" />
<text  x="70.38" y="1807.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.02%)</title><rect x="955.6" y="1765" width="0.2" height="15.0" fill="rgb(249,166,42)" rx="2" ry="2" />
<text  x="958.57" y="1775.5" ></text>
</g>
<g >
<title>reader_permit::consume (1 samples, 0.02%)</title><rect x="260.1" y="1573" width="0.2" height="15.0" fill="rgb(220,179,42)" rx="2" ry="2" />
<text  x="263.12" y="1583.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.02%)</title><rect x="52.1" y="1749" width="0.3" height="15.0" fill="rgb(236,115,1)" rx="2" ry="2" />
<text  x="55.13" y="1759.5" ></text>
</g>
<g >
<title>sstables::mc::writer::write_row_body (1 samples, 0.02%)</title><rect x="1188.0" y="37" width="0.2" height="15.0" fill="rgb(251,160,52)" rx="2" ry="2" />
<text  x="1190.98" y="47.5" ></text>
</g>
<g >
<title>seastar::futurize_invoke&lt;seastar::future&lt;void&gt;  (549 samples, 10.43%)</title><rect x="327.4" y="1765" width="123.0" height="15.0" fill="rgb(248,99,31)" rx="2" ry="2" />
<text  x="330.36" y="1775.5" >seastar::futuri..</text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (4 samples, 0.08%)</title><rect x="917.7" y="1765" width="0.9" height="15.0" fill="rgb(223,110,7)" rx="2" ry="2" />
<text  x="920.69" y="1775.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_token (5 samples, 0.09%)</title><rect x="938.1" y="1813" width="1.1" height="15.0" fill="rgb(206,55,23)" rx="2" ry="2" />
<text  x="941.09" y="1823.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_Optional_payload_base (5 samples, 0.09%)</title><rect x="1023.7" y="1685" width="1.1" height="15.0" fill="rgb(236,142,17)" rx="2" ry="2" />
<text  x="1026.70" y="1695.5" ></text>
</g>
<g >
<title>__libc_start_main (4,820 samples, 91.55%)</title><rect x="84.9" y="2053" width="1080.2" height="15.0" fill="rgb(246,95,15)" rx="2" ry="2" />
<text  x="87.86" y="2063.5" >__libc_start_main</text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.02%)</title><rect x="1092.1" y="1749" width="0.2" height="15.0" fill="rgb(254,144,14)" rx="2" ry="2" />
<text  x="1095.06" y="1759.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.02%)</title><rect x="140.2" y="1877" width="0.2" height="15.0" fill="rgb(242,38,43)" rx="2" ry="2" />
<text  x="143.21" y="1887.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (19 samples, 0.36%)</title><rect x="1125.5" y="1733" width="4.2" height="15.0" fill="rgb(223,101,26)" rx="2" ry="2" />
<text  x="1128.45" y="1743.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="557.8" y="1829" width="0.2" height="15.0" fill="rgb(206,56,52)" rx="2" ry="2" />
<text  x="560.75" y="1839.5" ></text>
</g>
<g >
<title>seastar::internal::repeater&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (2 samples, 0.04%)</title><rect x="847.1" y="1925" width="0.4" height="15.0" fill="rgb(246,209,35)" rx="2" ry="2" />
<text  x="850.09" y="1935.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (1 samples, 0.02%)</title><rect x="849.6" y="1701" width="0.2" height="15.0" fill="rgb(253,217,44)" rx="2" ry="2" />
<text  x="852.56" y="1711.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.02%)</title><rect x="1103.0" y="1797" width="0.3" height="15.0" fill="rgb(246,50,31)" rx="2" ry="2" />
<text  x="1106.04" y="1807.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::set_urgent_state (4 samples, 0.08%)</title><rect x="642.5" y="1909" width="0.9" height="15.0" fill="rgb(225,199,12)" rx="2" ry="2" />
<text  x="645.47" y="1919.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;::basic_sstring (1 samples, 0.02%)</title><rect x="723.8" y="1893" width="0.3" height="15.0" fill="rgb(207,72,16)" rx="2" ry="2" />
<text  x="726.83" y="1903.5" ></text>
</g>
<g >
<title>std::optional&lt;query::querier&lt; (6 samples, 0.11%)</title><rect x="628.1" y="1861" width="1.4" height="15.0" fill="rgb(229,57,8)" rx="2" ry="2" />
<text  x="631.13" y="1871.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::~BaseRecognizer (1 samples, 0.02%)</title><rect x="24.8" y="1813" width="0.2" height="15.0" fill="rgb(235,13,48)" rx="2" ry="2" />
<text  x="27.79" y="1823.5" ></text>
</g>
<g >
<title>db::commitlog::add_entry (2 samples, 0.04%)</title><rect x="1121.4" y="1685" width="0.5" height="15.0" fill="rgb(229,196,27)" rx="2" ry="2" />
<text  x="1124.42" y="1695.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.06%)</title><rect x="553.3" y="1669" width="0.6" height="15.0" fill="rgb(238,159,5)" rx="2" ry="2" />
<text  x="556.27" y="1679.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::range_or_slice_eq_null (7 samples, 0.13%)</title><rect x="848.4" y="1813" width="1.6" height="15.0" fill="rgb(231,224,24)" rx="2" ry="2" />
<text  x="851.44" y="1823.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_data_requests (208 samples, 3.95%)</title><rect x="982.9" y="1749" width="46.6" height="15.0" fill="rgb(239,228,0)" rx="2" ry="2" />
<text  x="985.91" y="1759.5" >serv..</text>
</g>
<g >
<title>ser::writer_of_qr_cell&lt;bytes_ostream&gt;::skip_timestamp (11 samples, 0.21%)</title><rect x="398.9" y="1589" width="2.4" height="15.0" fill="rgb(252,81,39)" rx="2" ry="2" />
<text  x="401.85" y="1599.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.04%)</title><rect x="483.8" y="1717" width="0.4" height="15.0" fill="rgb(248,88,27)" rx="2" ry="2" />
<text  x="486.79" y="1727.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;partition_key, false, false&gt;::_Optional_base (2 samples, 0.04%)</title><rect x="1052.8" y="1717" width="0.5" height="15.0" fill="rgb(206,63,10)" rx="2" ry="2" />
<text  x="1055.84" y="1727.5" ></text>
</g>
<g >
<title>sstring_hash::operator (6 samples, 0.11%)</title><rect x="830.5" y="1781" width="1.4" height="15.0" fill="rgb(232,112,3)" rx="2" ry="2" />
<text  x="833.51" y="1791.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mQUOTED_NAME (1 samples, 0.02%)</title><rect x="39.8" y="1685" width="0.2" height="15.0" fill="rgb(228,160,37)" rx="2" ry="2" />
<text  x="42.81" y="1695.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_slice_or_needs_filtering (1 samples, 0.02%)</title><rect x="935.6" y="1829" width="0.2" height="15.0" fill="rgb(253,218,37)" rx="2" ry="2" />
<text  x="938.62" y="1839.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;std::tuple&lt;std::optional&lt;clustering_key_prefix&gt; &gt; &gt;::take_value (1 samples, 0.02%)</title><rect x="559.1" y="1829" width="0.2" height="15.0" fill="rgb(249,56,33)" rx="2" ry="2" />
<text  x="562.10" y="1839.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::find&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (17 samples, 0.32%)</title><rect x="758.8" y="1781" width="3.8" height="15.0" fill="rgb(208,180,0)" rx="2" ry="2" />
<text  x="761.79" y="1791.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::move_it (1 samples, 0.02%)</title><rect x="657.9" y="1909" width="0.3" height="15.0" fill="rgb(241,58,53)" rx="2" ry="2" />
<text  x="660.94" y="1919.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, seastar::shared_ptr&lt;service::abstract_write_response_handler&gt; &gt;, std::allocator&lt;std::pair&lt;unsigned long const, seastar::shared_ptr&lt;service::abstract_write_response_handler&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (1 samples, 0.02%)</title><rect x="1124.6" y="1653" width="0.2" height="15.0" fill="rgb(234,191,43)" rx="2" ry="2" />
<text  x="1127.56" y="1663.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (14 samples, 0.27%)</title><rect x="1186.2" y="773" width="3.1" height="15.0" fill="rgb(251,41,46)" rx="2" ry="2" />
<text  x="1189.19" y="783.5" ></text>
</g>
<g >
<title>read_page&lt;(anonymous namespace)::mutation_query_result_builder&gt; (3 samples, 0.06%)</title><rect x="107.5" y="1733" width="0.7" height="15.0" fill="rgb(230,162,0)" rx="2" ry="2" />
<text  x="110.49" y="1743.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="776.5" y="1717" width="0.2" height="15.0" fill="rgb(228,148,45)" rx="2" ry="2" />
<text  x="779.50" y="1727.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (30 samples, 0.57%)</title><rect x="1115.4" y="1797" width="6.7" height="15.0" fill="rgb(213,58,46)" rx="2" ry="2" />
<text  x="1118.37" y="1807.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::operator= (1 samples, 0.02%)</title><rect x="705.9" y="1861" width="0.2" height="15.0" fill="rgb(225,131,47)" rx="2" ry="2" />
<text  x="708.90" y="1871.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;managed_bytes&gt;::allocate (1 samples, 0.02%)</title><rect x="930.2" y="1813" width="0.3" height="15.0" fill="rgb(228,132,44)" rx="2" ry="2" />
<text  x="933.24" y="1823.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;std::function&lt;flat_mutation_reader  (1 samples, 0.02%)</title><rect x="140.0" y="1877" width="0.2" height="15.0" fill="rgb(205,15,5)" rx="2" ry="2" />
<text  x="142.99" y="1887.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="94.3" y="1893" width="0.2" height="15.0" fill="rgb(233,181,27)" rx="2" ry="2" />
<text  x="97.27" y="1903.5" ></text>
</g>
<g >
<title>seastar::internal::awaiter&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::awaiter (1 samples, 0.02%)</title><rect x="968.6" y="1781" width="0.2" height="15.0" fill="rgb(207,2,35)" rx="2" ry="2" />
<text  x="971.57" y="1791.5" ></text>
</g>
<g >
<title>from_hex (3 samples, 0.06%)</title><rect x="69.8" y="1765" width="0.7" height="15.0" fill="rgb(225,92,8)" rx="2" ry="2" />
<text  x="72.84" y="1775.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (1 samples, 0.02%)</title><rect x="1189.8" y="2021" width="0.2" height="15.0" fill="rgb(209,199,29)" rx="2" ry="2" />
<text  x="1192.78" y="2031.5" ></text>
</g>
<g >
<title>absl::hash_internal::HashState::combine_contiguous (2 samples, 0.04%)</title><rect x="1040.3" y="1685" width="0.4" height="15.0" fill="rgb(248,169,15)" rx="2" ry="2" />
<text  x="1043.29" y="1695.5" ></text>
</g>
<g >
<title>std::forward_as_tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const&amp;, auth::resource&gt; (1 samples, 0.02%)</title><rect x="806.5" y="1813" width="0.3" height="15.0" fill="rgb(252,13,7)" rx="2" ry="2" />
<text  x="809.53" y="1823.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::contains&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (11 samples, 0.21%)</title><rect x="829.6" y="1813" width="2.5" height="15.0" fill="rgb(209,25,50)" rx="2" ry="2" />
<text  x="832.61" y="1823.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.02%)</title><rect x="48.1" y="1573" width="0.2" height="15.0" fill="rgb(241,177,12)" rx="2" ry="2" />
<text  x="51.10" y="1583.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned int, unsigned int, std::less&lt;unsigned int&gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;std::pair&lt;unsigned int const, unsigned int&gt; &gt; &gt;::empty (1 samples, 0.02%)</title><rect x="42.9" y="1733" width="0.3" height="15.0" fill="rgb(236,50,13)" rx="2" ry="2" />
<text  x="45.95" y="1743.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt;::allocate (1 samples, 0.02%)</title><rect x="1090.3" y="1797" width="0.2" height="15.0" fill="rgb(242,102,43)" rx="2" ry="2" />
<text  x="1093.27" y="1807.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.02%)</title><rect x="46.3" y="1653" width="0.2" height="15.0" fill="rgb(205,12,53)" rx="2" ry="2" />
<text  x="49.31" y="1663.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::find (4 samples, 0.08%)</title><rect x="943.2" y="1781" width="0.9" height="15.0" fill="rgb(252,179,40)" rx="2" ry="2" />
<text  x="946.24" y="1791.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::upper_bound&lt;mutation_partition, schema const&amp;, nonwrapping_interval&lt;clustering_key_prefix&gt; const&amp;&gt; (1 samples, 0.02%)</title><rect x="263.7" y="1573" width="0.2" height="15.0" fill="rgb(220,101,43)" rx="2" ry="2" />
<text  x="266.71" y="1583.5" ></text>
</g>
<g >
<title>schema::column_at (1 samples, 0.02%)</title><rect x="403.3" y="1621" width="0.3" height="15.0" fill="rgb(208,121,31)" rx="2" ry="2" />
<text  x="406.33" y="1631.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="1144.3" y="1861" width="0.2" height="15.0" fill="rgb(207,142,27)" rx="2" ry="2" />
<text  x="1147.28" y="1871.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::storage_proxy&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="1161.3" y="1845" width="0.2" height="15.0" fill="rgb(226,108,24)" rx="2" ry="2" />
<text  x="1164.31" y="1855.5" ></text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt;&amp;&gt; (2 samples, 0.04%)</title><rect x="825.8" y="1797" width="0.5" height="15.0" fill="rgb(238,133,48)" rx="2" ry="2" />
<text  x="828.80" y="1807.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (1 samples, 0.02%)</title><rect x="208.1" y="1637" width="0.2" height="15.0" fill="rgb(218,57,37)" rx="2" ry="2" />
<text  x="211.12" y="1647.5" ></text>
</g>
<g >
<title>cql3::terminal::to_expression (1 samples, 0.02%)</title><rect x="848.7" y="1701" width="0.2" height="15.0" fill="rgb(239,226,19)" rx="2" ry="2" />
<text  x="851.66" y="1711.5" ></text>
</g>
<g >
<title>service::client_state::get_timestamp (2 samples, 0.04%)</title><rect x="1106.6" y="1845" width="0.5" height="15.0" fill="rgb(230,68,29)" rx="2" ry="2" />
<text  x="1109.63" y="1855.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="635.5" y="1909" width="0.2" height="15.0" fill="rgb(249,80,48)" rx="2" ry="2" />
<text  x="638.52" y="1919.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="801.4" y="1685" width="0.2" height="15.0" fill="rgb(237,116,40)" rx="2" ry="2" />
<text  x="804.37" y="1695.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.02%)</title><rect x="60.7" y="1557" width="0.2" height="15.0" fill="rgb(248,209,51)" rx="2" ry="2" />
<text  x="63.65" y="1567.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::cancel (5 samples, 0.09%)</title><rect x="708.6" y="1845" width="1.1" height="15.0" fill="rgb(224,137,10)" rx="2" ry="2" />
<text  x="711.59" y="1855.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::BaseRecognizer (1 samples, 0.02%)</title><rect x="24.1" y="1797" width="0.2" height="15.0" fill="rgb(235,220,45)" rx="2" ry="2" />
<text  x="27.12" y="1807.5" ></text>
</g>
<g >
<title>operator new (7 samples, 0.13%)</title><rect x="1025.9" y="1669" width="1.6" height="15.0" fill="rgb(225,66,25)" rx="2" ry="2" />
<text  x="1028.94" y="1679.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (3 samples, 0.06%)</title><rect x="905.1" y="1781" width="0.7" height="15.0" fill="rgb(244,11,1)" rx="2" ry="2" />
<text  x="908.14" y="1791.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (1 samples, 0.02%)</title><rect x="623.4" y="1813" width="0.2" height="15.0" fill="rgb(208,161,40)" rx="2" ry="2" />
<text  x="626.42" y="1823.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::emplace_back&lt;mutation_fragment&gt; (1 samples, 0.02%)</title><rect x="299.6" y="1701" width="0.2" height="15.0" fill="rgb(215,25,47)" rx="2" ry="2" />
<text  x="302.57" y="1711.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (14 samples, 0.27%)</title><rect x="1186.2" y="357" width="3.1" height="15.0" fill="rgb(236,90,40)" rx="2" ry="2" />
<text  x="1189.19" y="367.5" ></text>
</g>
<g >
<title>cql3::restrictions::(anonymous namespace)::range_from_bytes (1 samples, 0.02%)</title><rect x="870.2" y="1845" width="0.2" height="15.0" fill="rgb(206,98,18)" rx="2" ry="2" />
<text  x="873.18" y="1855.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_construct&lt;interval_bound&lt;dht::ring_position&gt; const&amp;&gt; (5 samples, 0.09%)</title><rect x="1023.7" y="1701" width="1.1" height="15.0" fill="rgb(253,69,19)" rx="2" ry="2" />
<text  x="1026.70" y="1711.5" ></text>
</g>
<g >
<title>antlr3::IntStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::consume (2 samples, 0.04%)</title><rect x="39.4" y="1669" width="0.4" height="15.0" fill="rgb(217,28,49)" rx="2" ry="2" />
<text  x="42.36" y="1679.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (1 samples, 0.02%)</title><rect x="329.6" y="1717" width="0.2" height="15.0" fill="rgb(228,162,45)" rx="2" ry="2" />
<text  x="332.60" y="1727.5" ></text>
</g>
<g >
<title>std::optional&lt;clustering_key_prefix&gt;::operator=&lt;clustering_key_prefix const&amp;&gt; (2 samples, 0.04%)</title><rect x="272.7" y="1653" width="0.4" height="15.0" fill="rgb(208,98,35)" rx="2" ry="2" />
<text  x="275.67" y="1663.5" ></text>
</g>
<g >
<title>locator::effective_replication_map::get_natural_endpoints_without_node_being_replaced (1 samples, 0.02%)</title><rect x="1129.0" y="1621" width="0.3" height="15.0" fill="rgb(212,113,18)" rx="2" ry="2" />
<text  x="1132.04" y="1631.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::create_service_level_statement, std::default_delete&lt;cql3::statements::create_service_level_statement&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::statements::create_service_level_statement&gt;, void&gt; (1 samples, 0.02%)</title><rect x="67.2" y="1797" width="0.2" height="15.0" fill="rgb(222,176,27)" rx="2" ry="2" />
<text  x="70.15" y="1807.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (1 samples, 0.02%)</title><rect x="587.3" y="1781" width="0.3" height="15.0" fill="rgb(242,82,52)" rx="2" ry="2" />
<text  x="590.34" y="1791.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEENK4$_43clERKNSF_15binary_operatorEEUlRKNSF_12column_valueEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_17tuple_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlNSF_5tokenEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlSS_E_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_11conjunctionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_8constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_21unresolved_identifierEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_25column_mutation_attributeEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13function_callEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4castEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_15field_selectionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4nullEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13bind_variableEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_16untyped_constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_22collection_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_20usertype_constructorEE_EERS4_IJS14_SQ_ST_S11_S1C_S1G_S1K_S1O_S1S_S1W_S20_S24_S18_SX_S28_S2C_EEEJEEESt16integer_sequenceImJLm2EEEE14__visit_invokeES2H_S2J_ (1 samples, 0.02%)</title><rect x="902.0" y="1813" width="0.2" height="15.0" fill="rgb(213,216,12)" rx="2" ry="2" />
<text  x="905.00" y="1823.5" ></text>
</g>
<g >
<title>ser::query_result__partitions&lt;bytes_ostream&gt;::add (1 samples, 0.02%)</title><rect x="347.1" y="1605" width="0.2" height="15.0" fill="rgb(220,87,0)" rx="2" ry="2" />
<text  x="350.08" y="1615.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (2 samples, 0.04%)</title><rect x="766.0" y="1765" width="0.4" height="15.0" fill="rgb(253,155,27)" rx="2" ry="2" />
<text  x="768.96" y="1775.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;mutation_fragment*&gt;::take_value (1 samples, 0.02%)</title><rect x="456.2" y="1829" width="0.3" height="15.0" fill="rgb(214,203,7)" rx="2" ry="2" />
<text  x="459.23" y="1839.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (5 samples, 0.09%)</title><rect x="207.0" y="1621" width="1.1" height="15.0" fill="rgb(250,132,33)" rx="2" ry="2" />
<text  x="210.00" y="1631.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reclaiming_disabled&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::lsa_partition_reader::next_row (1 samples, 0.02%)</title><rect x="1186.4" y="37" width="0.2" height="15.0" fill="rgb(215,194,23)" rx="2" ry="2" />
<text  x="1189.41" y="47.5" ></text>
</g>
<g >
<title>partition_snapshot::static_row (6 samples, 0.11%)</title><rect x="292.8" y="1637" width="1.4" height="15.0" fill="rgb(215,59,33)" rx="2" ry="2" />
<text  x="295.84" y="1647.5" ></text>
</g>
<g >
<title>seastar::internal::do_until_state&lt;executor&lt;test_read (563 samples, 10.69%)</title><rect x="719.3" y="1925" width="126.2" height="15.0" fill="rgb(211,40,4)" rx="2" ry="2" />
<text  x="722.34" y="1935.5" >seastar::intern..</text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.02%)</title><rect x="44.7" y="1669" width="0.3" height="15.0" fill="rgb(217,61,49)" rx="2" ry="2" />
<text  x="47.74" y="1679.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;void&gt;::set_value&lt;&gt; (2 samples, 0.04%)</title><rect x="95.2" y="1909" width="0.4" height="15.0" fill="rgb(214,116,33)" rx="2" ry="2" />
<text  x="98.17" y="1919.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_destroy_data_aux (1 samples, 0.02%)</title><rect x="626.8" y="1797" width="0.2" height="15.0" fill="rgb(234,31,37)" rx="2" ry="2" />
<text  x="629.78" y="1807.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (14 samples, 0.27%)</title><rect x="1186.2" y="965" width="3.1" height="15.0" fill="rgb(225,142,30)" rx="2" ry="2" />
<text  x="1189.19" y="975.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (1 samples, 0.02%)</title><rect x="53.9" y="1717" width="0.3" height="15.0" fill="rgb(233,116,50)" rx="2" ry="2" />
<text  x="56.93" y="1727.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.04%)</title><rect x="556.9" y="1829" width="0.4" height="15.0" fill="rgb(250,133,10)" rx="2" ry="2" />
<text  x="559.86" y="1839.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::iterator::operator* (1 samples, 0.02%)</title><rect x="813.7" y="1749" width="0.2" height="15.0" fill="rgb(208,142,19)" rx="2" ry="2" />
<text  x="816.70" y="1759.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_state&lt;std::tuple&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (2 samples, 0.04%)</title><rect x="328.0" y="1717" width="0.5" height="15.0" fill="rgb(215,5,15)" rx="2" ry="2" />
<text  x="331.03" y="1727.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (1 samples, 0.02%)</title><rect x="603.2" y="1829" width="0.3" height="15.0" fill="rgb(238,211,45)" rx="2" ry="2" />
<text  x="606.25" y="1839.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.04%)</title><rect x="644.0" y="1909" width="0.5" height="15.0" fill="rgb(216,102,15)" rx="2" ry="2" />
<text  x="647.04" y="1919.5" ></text>
</g>
<g >
<title>cql3::statements::raw::update_statement::~update_statement (2 samples, 0.04%)</title><rect x="77.9" y="1893" width="0.5" height="15.0" fill="rgb(219,120,21)" rx="2" ry="2" />
<text  x="80.91" y="1903.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::build_partition_keys (8 samples, 0.15%)</title><rect x="850.0" y="1813" width="1.8" height="15.0" fill="rgb(224,143,35)" rx="2" ry="2" />
<text  x="853.01" y="1823.5" ></text>
</g>
<g >
<title>stable_flattened_mutations_consumer&lt;compact_for_query&lt; (1 samples, 0.02%)</title><rect x="107.9" y="1669" width="0.3" height="15.0" fill="rgb(215,142,5)" rx="2" ry="2" />
<text  x="110.94" y="1679.5" ></text>
</g>
<g >
<title>_ZSt5applyIZN7seastar8internal12do_with_implISt4pairIN4auth17role_or_anonymousENS4_8resourceEEZNS4_17permissions_cache3getERKS5_RKS6_E3$_0JEEEDaOT_OT0_DpOT1_EUlDpOT_E_St5tupleIJOS7_EEEDcSF_SH_ (13 samples, 0.25%)</title><rect x="778.1" y="1685" width="2.9" height="15.0" fill="rgb(206,226,38)" rx="2" ry="2" />
<text  x="781.06" y="1695.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.06%)</title><rect x="840.8" y="1861" width="0.7" height="15.0" fill="rgb(217,69,54)" rx="2" ry="2" />
<text  x="843.82" y="1871.5" ></text>
</g>
<g >
<title>seastar::internal::when_all_state_component&lt;seastar::future&lt;void&gt; &gt;::run_and_dispose (1 samples, 0.02%)</title><rect x="86.6" y="1941" width="0.3" height="15.0" fill="rgb(244,120,12)" rx="2" ry="2" />
<text  x="89.65" y="1951.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (1 samples, 0.02%)</title><rect x="784.3" y="1605" width="0.3" height="15.0" fill="rgb(225,158,14)" rx="2" ry="2" />
<text  x="787.34" y="1615.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.08%)</title><rect x="539.6" y="1749" width="0.9" height="15.0" fill="rgb(206,147,14)" rx="2" ry="2" />
<text  x="542.60" y="1759.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;void&gt;::set_value&lt;&gt; (1 samples, 0.02%)</title><rect x="697.8" y="1909" width="0.3" height="15.0" fill="rgb(223,143,30)" rx="2" ry="2" />
<text  x="700.83" y="1919.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::statements::alter_service_level_statement, std::default_delete&lt;cql3::statements::alter_service_level_statement&gt;, true, true&gt;::__uniq_ptr_data (1 samples, 0.02%)</title><rect x="66.7" y="1781" width="0.2" height="15.0" fill="rgb(246,206,9)" rx="2" ry="2" />
<text  x="69.70" y="1791.5" ></text>
</g>
<g >
<title>auth::get_permissions (1 samples, 0.02%)</title><rect x="79.5" y="1813" width="0.2" height="15.0" fill="rgb(216,224,12)" rx="2" ry="2" />
<text  x="82.48" y="1823.5" ></text>
</g>
<g >
<title>ser::serializer&lt;ser::mutation_partition_view&gt;::read&lt;seastar::simple_memory_input_stream&gt; (1 samples, 0.02%)</title><rect x="1115.6" y="1637" width="0.2" height="15.0" fill="rgb(218,57,1)" rx="2" ry="2" />
<text  x="1118.59" y="1647.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (3 samples, 0.06%)</title><rect x="1050.4" y="1717" width="0.6" height="15.0" fill="rgb(231,20,20)" rx="2" ry="2" />
<text  x="1053.37" y="1727.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.02%)</title><rect x="462.1" y="1781" width="0.2" height="15.0" fill="rgb(234,154,46)" rx="2" ry="2" />
<text  x="465.05" y="1791.5" ></text>
</g>
<g >
<title>utils::tuple_hash::operator (1 samples, 0.02%)</title><rect x="735.7" y="1781" width="0.2" height="15.0" fill="rgb(209,51,29)" rx="2" ry="2" />
<text  x="738.71" y="1791.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned char, std::pair&lt;unsigned char const, std::optional&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned char const, std::optional&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned char&gt;, std::hash&lt;unsigned char&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::~_Hashtable (1 samples, 0.02%)</title><rect x="665.1" y="1909" width="0.2" height="15.0" fill="rgb(233,125,22)" rx="2" ry="2" />
<text  x="668.11" y="1919.5" ></text>
</g>
<g >
<title>mutation_querier::consume (1 samples, 0.02%)</title><rect x="686.8" y="1701" width="0.3" height="15.0" fill="rgb(239,185,4)" rx="2" ry="2" />
<text  x="689.85" y="1711.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureIvE8scheduleINS_8internal22promise_base_with_typeIvEEZN5utils11flush_queueIN2db15replay_positionESt4lessIS9_ENS_12lowres_clockEE24run_with_ordered_post_opIZNS8_9commitlog7segment5cycleEbbEUlvE_ZNSG_5cycleEbbEUlvE0_EEDaS9_OT_OT0_EUlS1_E_ZNS1_17then_wrapped_nrvoIS1_SN_EENS_8futurizeISJ_E4typeESM_EUlOS5_RSN_ONS_12future_stateINS3_9monostateEEEE_EEvSK_SM_OT1_ (1 samples, 0.02%)</title><rect x="1121.9" y="1605" width="0.2" height="15.0" fill="rgb(251,223,44)" rx="2" ry="2" />
<text  x="1124.87" y="1615.5" ></text>
</g>
<g >
<title>fmt::v7::detail::formatbuf&lt;char&gt;::~formatbuf (1 samples, 0.02%)</title><rect x="82.8" y="2037" width="0.3" height="15.0" fill="rgb(219,59,7)" rx="2" ry="2" />
<text  x="85.84" y="2047.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::get_static_row (19 samples, 0.36%)</title><rect x="291.0" y="1669" width="4.3" height="15.0" fill="rgb(214,227,15)" rx="2" ry="2" />
<text  x="294.05" y="1679.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.02%)</title><rect x="49.4" y="1653" width="0.3" height="15.0" fill="rgb(252,131,3)" rx="2" ry="2" />
<text  x="52.45" y="1663.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume_in_thread&lt;sstables::sstable_writer&gt; (2 samples, 0.04%)</title><rect x="1186.6" y="245" width="0.5" height="15.0" fill="rgb(209,121,7)" rx="2" ry="2" />
<text  x="1189.64" y="255.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::process_partition_key_restrictions (2 samples, 0.04%)</title><rect x="75.4" y="1813" width="0.5" height="15.0" fill="rgb(250,35,13)" rx="2" ry="2" />
<text  x="78.44" y="1823.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::~abstract_read_executor (8 samples, 0.15%)</title><rect x="1160.2" y="1861" width="1.8" height="15.0" fill="rgb(230,225,6)" rx="2" ry="2" />
<text  x="1163.19" y="1871.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (14 samples, 0.27%)</title><rect x="1186.2" y="1477" width="3.1" height="15.0" fill="rgb(251,180,41)" rx="2" ry="2" />
<text  x="1189.19" y="1487.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;std::pair&lt;seastar::shared_ptr&lt;service::abstract_read_executor&gt;, nonwrapping_interval&lt;dht::token&gt; &gt;, 1ul&gt;::~small_vector (17 samples, 0.32%)</title><rect x="1158.2" y="1909" width="3.8" height="15.0" fill="rgb(205,13,35)" rx="2" ry="2" />
<text  x="1161.17" y="1919.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::CommonToken (5 samples, 0.09%)</title><rect x="26.8" y="1637" width="1.1" height="15.0" fill="rgb(221,179,25)" rx="2" ry="2" />
<text  x="29.81" y="1647.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate (2 samples, 0.04%)</title><rect x="854.5" y="1717" width="0.4" height="15.0" fill="rgb(222,187,19)" rx="2" ry="2" />
<text  x="857.49" y="1727.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (49 samples, 0.93%)</title><rect x="430.5" y="1669" width="10.9" height="15.0" fill="rgb(212,1,11)" rx="2" ry="2" />
<text  x="433.45" y="1679.5" ></text>
</g>
<g >
<title>sstables::mc::writer::write_row_body (1 samples, 0.02%)</title><rect x="1186.2" y="133" width="0.2" height="15.0" fill="rgb(230,88,7)" rx="2" ry="2" />
<text  x="1189.19" y="143.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.02%)</title><rect x="1187.1" y="261" width="0.2" height="15.0" fill="rgb(244,171,30)" rx="2" ry="2" />
<text  x="1190.09" y="271.5" ></text>
</g>
<g >
<title>seastar::do_until&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (2 samples, 0.04%)</title><rect x="107.5" y="1349" width="0.4" height="15.0" fill="rgb(225,11,12)" rx="2" ry="2" />
<text  x="110.49" y="1359.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (3 samples, 0.06%)</title><rect x="531.1" y="1637" width="0.7" height="15.0" fill="rgb(226,64,27)" rx="2" ry="2" />
<text  x="534.08" y="1647.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::raw::parsed_statement, std::default_delete&lt;cql3::statements::raw::parsed_statement&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="68.5" y="1749" width="0.2" height="15.0" fill="rgb(221,86,16)" rx="2" ry="2" />
<text  x="71.50" y="1759.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume_in_thread&lt;sstables::sstable_writer&gt; (1 samples, 0.02%)</title><rect x="1187.1" y="229" width="0.2" height="15.0" fill="rgb(215,190,50)" rx="2" ry="2" />
<text  x="1190.09" y="239.5" ></text>
</g>
<g >
<title>sstables::mc::writer::consume (2 samples, 0.04%)</title><rect x="1186.6" y="149" width="0.5" height="15.0" fill="rgb(223,212,31)" rx="2" ry="2" />
<text  x="1189.64" y="159.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (2 samples, 0.04%)</title><rect x="684.2" y="1893" width="0.4" height="15.0" fill="rgb(228,218,12)" rx="2" ry="2" />
<text  x="687.16" y="1903.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="523.0" y="1685" width="0.2" height="15.0" fill="rgb(213,11,51)" rx="2" ry="2" />
<text  x="526.01" y="1695.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (2 samples, 0.04%)</title><rect x="60.0" y="1669" width="0.4" height="15.0" fill="rgb(245,21,1)" rx="2" ry="2" />
<text  x="62.98" y="1679.5" ></text>
</g>
<g >
<title>row::row (1 samples, 0.02%)</title><rect x="109.1" y="1701" width="0.2" height="15.0" fill="rgb(252,49,29)" rx="2" ry="2" />
<text  x="112.06" y="1711.5" ></text>
</g>
<g >
<title>seastar::internal::future_base::set_coroutine (1 samples, 0.02%)</title><rect x="1020.8" y="1685" width="0.2" height="15.0" fill="rgb(237,35,22)" rx="2" ry="2" />
<text  x="1023.79" y="1695.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_Vector_impl::_Vector_impl (1 samples, 0.02%)</title><rect x="58.0" y="1653" width="0.2" height="15.0" fill="rgb(214,123,21)" rx="2" ry="2" />
<text  x="60.96" y="1663.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (7 samples, 0.13%)</title><rect x="1004.2" y="1637" width="1.6" height="15.0" fill="rgb(240,3,2)" rx="2" ry="2" />
<text  x="1007.20" y="1647.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.02%)</title><rect x="536.0" y="1717" width="0.2" height="15.0" fill="rgb(247,75,41)" rx="2" ry="2" />
<text  x="539.01" y="1727.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::find (1 samples, 0.02%)</title><rect x="652.1" y="1829" width="0.2" height="15.0" fill="rgb(224,174,14)" rx="2" ry="2" />
<text  x="655.11" y="1839.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::do_get_limit (2 samples, 0.04%)</title><rect x="940.1" y="1845" width="0.5" height="15.0" fill="rgb(251,120,21)" rx="2" ry="2" />
<text  x="943.10" y="1855.5" ></text>
</g>
<g >
<title>do_query&lt;(anonymous namespace)::mutation_query_result_builder&gt; (3 samples, 0.06%)</title><rect x="107.5" y="1749" width="0.7" height="15.0" fill="rgb(237,161,14)" rx="2" ry="2" />
<text  x="110.49" y="1759.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;, seastar::future&lt;void&gt; &gt;, std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;, seastar::future&lt;void&gt; &gt; &gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="81.3" y="1893" width="0.2" height="15.0" fill="rgb(211,106,26)" rx="2" ry="2" />
<text  x="84.27" y="1903.5" ></text>
</g>
<g >
<title>make_combined_reader (75 samples, 1.42%)</title><rect x="468.1" y="1749" width="16.8" height="15.0" fill="rgb(252,218,1)" rx="2" ry="2" />
<text  x="471.10" y="1759.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate_to_raw_view (1 samples, 0.02%)</title><rect x="850.7" y="1733" width="0.2" height="15.0" fill="rgb(220,212,12)" rx="2" ry="2" />
<text  x="853.68" y="1743.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (14 samples, 0.27%)</title><rect x="1186.2" y="1093" width="3.1" height="15.0" fill="rgb(248,176,46)" rx="2" ry="2" />
<text  x="1189.19" y="1103.5" ></text>
</g>
<g >
<title>bound_view::from_range_start&lt;nonwrapping_interval&gt; (5 samples, 0.09%)</title><rect x="283.0" y="1605" width="1.1" height="15.0" fill="rgb(212,112,43)" rx="2" ry="2" />
<text  x="285.98" y="1615.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (1 samples, 0.02%)</title><rect x="928.9" y="1829" width="0.2" height="15.0" fill="rgb(245,152,30)" rx="2" ry="2" />
<text  x="931.90" y="1839.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (4 samples, 0.08%)</title><rect x="95.6" y="1909" width="0.9" height="15.0" fill="rgb(235,205,34)" rx="2" ry="2" />
<text  x="98.61" y="1919.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="110.0" y="1925" width="0.2" height="15.0" fill="rgb(234,165,34)" rx="2" ry="2" />
<text  x="112.96" y="1935.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.02%)</title><rect x="64.7" y="1573" width="0.2" height="15.0" fill="rgb(222,213,9)" rx="2" ry="2" />
<text  x="67.69" y="1583.5" ></text>
</g>
<g >
<title>std::hash&lt;auth::resource&gt;::hash_data (13 samples, 0.25%)</title><rect x="792.2" y="1557" width="2.9" height="15.0" fill="rgb(242,78,9)" rx="2" ry="2" />
<text  x="795.18" y="1567.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.02%)</title><rect x="45.0" y="1765" width="0.2" height="15.0" fill="rgb(219,41,15)" rx="2" ry="2" />
<text  x="47.96" y="1775.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.04%)</title><rect x="63.3" y="1685" width="0.5" height="15.0" fill="rgb(244,202,39)" rx="2" ry="2" />
<text  x="66.34" y="1695.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.02%)</title><rect x="1186.4" y="309" width="0.2" height="15.0" fill="rgb(211,229,2)" rx="2" ry="2" />
<text  x="1189.41" y="319.5" ></text>
</g>
<g >
<title>evictable_reader::do_fill_buffer (2 samples, 0.04%)</title><rect x="107.5" y="1621" width="0.4" height="15.0" fill="rgb(209,136,41)" rx="2" ry="2" />
<text  x="110.49" y="1631.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::guard (1 samples, 0.02%)</title><rect x="197.4" y="1701" width="0.2" height="15.0" fill="rgb(220,135,48)" rx="2" ry="2" />
<text  x="200.37" y="1711.5" ></text>
</g>
<g >
<title>bound_view::from_range_start&lt;nonwrapping_interval&gt; (3 samples, 0.06%)</title><rect x="284.1" y="1621" width="0.7" height="15.0" fill="rgb(226,92,29)" rx="2" ry="2" />
<text  x="287.10" y="1631.5" ></text>
</g>
<g >
<title>query_result_builder::consume_end_of_partition (7 samples, 0.13%)</title><rect x="338.8" y="1653" width="1.6" height="15.0" fill="rgb(244,163,9)" rx="2" ry="2" />
<text  x="341.79" y="1663.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::close (74 samples, 1.41%)</title><rect x="570.8" y="1813" width="16.5" height="15.0" fill="rgb(226,93,40)" rx="2" ry="2" />
<text  x="573.75" y="1823.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::update_and_check (1 samples, 0.02%)</title><rect x="403.1" y="1621" width="0.2" height="15.0" fill="rgb(211,163,0)" rx="2" ry="2" />
<text  x="406.11" y="1631.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.02%)</title><rect x="51.7" y="1621" width="0.2" height="15.0" fill="rgb(246,226,1)" rx="2" ry="2" />
<text  x="54.69" y="1631.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.04%)</title><rect x="60.0" y="1637" width="0.4" height="15.0" fill="rgb(207,63,39)" rx="2" ry="2" />
<text  x="62.98" y="1647.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (1 samples, 0.02%)</title><rect x="597.2" y="1829" width="0.2" height="15.0" fill="rgb(252,144,29)" rx="2" ry="2" />
<text  x="600.20" y="1839.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (2 samples, 0.04%)</title><rect x="576.6" y="1717" width="0.4" height="15.0" fill="rgb(247,79,35)" rx="2" ry="2" />
<text  x="579.58" y="1727.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, database::query (1 samples, 0.02%)</title><rect x="688.2" y="1925" width="0.2" height="15.0" fill="rgb(218,66,47)" rx="2" ry="2" />
<text  x="691.19" y="1935.5" ></text>
</g>
<g >
<title>seastar::do_until&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (2 samples, 0.04%)</title><rect x="847.1" y="1845" width="0.4" height="15.0" fill="rgb(254,67,38)" rx="2" ry="2" />
<text  x="850.09" y="1855.5" ></text>
</g>
<g >
<title>schema::raw_schema::raw_schema (1 samples, 0.02%)</title><rect x="20.1" y="1589" width="0.2" height="15.0" fill="rgb(244,227,11)" rx="2" ry="2" />
<text  x="23.09" y="1599.5" ></text>
</g>
<g >
<title>bytes_view_hasher::update (2 samples, 0.04%)</title><rect x="749.6" y="1685" width="0.4" height="15.0" fill="rgb(246,3,37)" rx="2" ry="2" />
<text  x="752.60" y="1695.5" ></text>
</g>
<g >
<title>std::__find_if&lt;gms::inet_address*, __gnu_cxx::__ops::_Iter_pred&lt;std::unary_negate&lt;std::binder1st&lt;std::_Mem_fn&lt;bool  (4 samples, 0.08%)</title><rect x="1072.6" y="1717" width="0.9" height="15.0" fill="rgb(242,224,34)" rx="2" ry="2" />
<text  x="1075.56" y="1727.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit_slot&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::walking_visitor&lt;row::for_each_cell&lt;(anonymous namespace)::write_row_cells&lt;ser::deletable_row__cells&lt;bytes_ostream&gt; &gt; (3 samples, 0.06%)</title><rect x="1127.0" y="1541" width="0.7" height="15.0" fill="rgb(252,84,40)" rx="2" ry="2" />
<text  x="1130.02" y="1551.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (1 samples, 0.02%)</title><rect x="653.0" y="1893" width="0.2" height="15.0" fill="rgb(246,83,54)" rx="2" ry="2" />
<text  x="656.00" y="1903.5" ></text>
</g>
<g >
<title>schema::get_column_definition (1 samples, 0.02%)</title><rect x="76.3" y="1845" width="0.3" height="15.0" fill="rgb(225,79,24)" rx="2" ry="2" />
<text  x="79.34" y="1855.5" ></text>
</g>
<g >
<title>__dynamic_cast (1 samples, 0.02%)</title><rect x="10.4" y="2021" width="0.3" height="15.0" fill="rgb(249,44,31)" rx="2" ry="2" />
<text  x="13.45" y="2031.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::indirect_move (1 samples, 0.02%)</title><rect x="1016.8" y="1653" width="0.2" height="15.0" fill="rgb(208,145,52)" rx="2" ry="2" />
<text  x="1019.75" y="1663.5" ></text>
</g>
<g >
<title>service::storage_proxy::got_response (1 samples, 0.02%)</title><rect x="716.0" y="1909" width="0.2" height="15.0" fill="rgb(247,208,4)" rx="2" ry="2" />
<text  x="718.98" y="1919.5" ></text>
</g>
<g >
<title>compare_unsigned&lt;managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="508.0" y="1653" width="0.2" height="15.0" fill="rgb(210,14,0)" rx="2" ry="2" />
<text  x="511.00" y="1663.5" ></text>
</g>
<g >
<title>query_result_builder::consume (243 samples, 4.62%)</title><rect x="349.5" y="1637" width="54.5" height="15.0" fill="rgb(239,185,36)" rx="2" ry="2" />
<text  x="352.54" y="1647.5" >query..</text>
</g>
<g >
<title>cql3::statements::update_statement::update_statement (1 samples, 0.02%)</title><rect x="76.6" y="1813" width="0.2" height="15.0" fill="rgb(245,74,13)" rx="2" ry="2" />
<text  x="79.56" y="1823.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (4 samples, 0.08%)</title><rect x="810.8" y="1733" width="0.9" height="15.0" fill="rgb(211,210,24)" rx="2" ry="2" />
<text  x="813.79" y="1743.5" ></text>
</g>
<g >
<title>TLS init function for bound_view::_empty_prefix (3 samples, 0.06%)</title><rect x="281.6" y="1605" width="0.7" height="15.0" fill="rgb(242,183,48)" rx="2" ry="2" />
<text  x="284.64" y="1615.5" ></text>
</g>
<g >
<title>std::type_info::operator== (1 samples, 0.02%)</title><rect x="677.2" y="1893" width="0.2" height="15.0" fill="rgb(254,140,41)" rx="2" ry="2" />
<text  x="680.21" y="1903.5" ></text>
</g>
<g >
<title>single_node_cql_env::do_with (2 samples, 0.04%)</title><rect x="20.1" y="1989" width="0.4" height="15.0" fill="rgb(252,136,50)" rx="2" ry="2" />
<text  x="23.09" y="1999.5" ></text>
</g>
<g >
<title>lister::lister (1 samples, 0.02%)</title><rect x="688.4" y="1861" width="0.2" height="15.0" fill="rgb(254,207,15)" rx="2" ry="2" />
<text  x="691.42" y="1871.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (6 samples, 0.11%)</title><rect x="887.9" y="1685" width="1.3" height="15.0" fill="rgb(254,134,5)" rx="2" ry="2" />
<text  x="890.88" y="1695.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (2 samples, 0.04%)</title><rect x="658.8" y="1877" width="0.5" height="15.0" fill="rgb(230,164,26)" rx="2" ry="2" />
<text  x="661.83" y="1887.5" ></text>
</g>
<g >
<title>std::optional&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::operator= (1 samples, 0.02%)</title><rect x="47.9" y="1733" width="0.2" height="15.0" fill="rgb(224,3,2)" rx="2" ry="2" />
<text  x="50.88" y="1743.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureINS_10bool_classIN22mutation_reader_merger15needs_merge_tagEEEE9then_implIZNS5_14discard_resultEvEUlDpOT_E_NS0_IvEEEET0_OT_ (2 samples, 0.04%)</title><rect x="181.7" y="1701" width="0.4" height="15.0" fill="rgb(221,214,4)" rx="2" ry="2" />
<text  x="184.68" y="1711.5" ></text>
</g>
<g >
<title>reader_permit::used_guard::~used_guard (36 samples, 0.68%)</title><rect x="128.1" y="1877" width="8.1" height="15.0" fill="rgb(229,228,8)" rx="2" ry="2" />
<text  x="131.11" y="1887.5" ></text>
</g>
<g >
<title>locator::i_endpoint_snitch::snitch_instance (2 samples, 0.04%)</title><rect x="1073.9" y="1733" width="0.5" height="15.0" fill="rgb(211,20,12)" rx="2" ry="2" />
<text  x="1076.91" y="1743.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.02%)</title><rect x="57.3" y="1685" width="0.2" height="15.0" fill="rgb(205,125,49)" rx="2" ry="2" />
<text  x="60.29" y="1695.5" ></text>
</g>
<g >
<title>compound_type&lt; (1 samples, 0.02%)</title><rect x="562.0" y="1765" width="0.2" height="15.0" fill="rgb(213,189,35)" rx="2" ry="2" />
<text  x="565.01" y="1775.5" ></text>
</g>
<g >
<title>cql3::restrictions::partition_key_restrictions::needs_filtering (4 samples, 0.08%)</title><rect x="870.6" y="1845" width="0.9" height="15.0" fill="rgb(245,37,7)" rx="2" ry="2" />
<text  x="873.63" y="1855.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (2 samples, 0.04%)</title><rect x="49.4" y="1733" width="0.5" height="15.0" fill="rgb(227,179,24)" rx="2" ry="2" />
<text  x="52.45" y="1743.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.08%)</title><rect x="556.0" y="1749" width="0.9" height="15.0" fill="rgb(209,211,0)" rx="2" ry="2" />
<text  x="558.96" y="1759.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="46.3" y="1669" width="0.2" height="15.0" fill="rgb(253,34,44)" rx="2" ry="2" />
<text  x="49.31" y="1679.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_token (2 samples, 0.04%)</title><rect x="935.8" y="1829" width="0.5" height="15.0" fill="rgb(247,118,50)" rx="2" ry="2" />
<text  x="938.85" y="1839.5" ></text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::EqualElement&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt;&amp;&gt; (2 samples, 0.04%)</title><rect x="812.4" y="1733" width="0.4" height="15.0" fill="rgb(208,2,36)" rx="2" ry="2" />
<text  x="815.36" y="1743.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (2 samples, 0.04%)</title><rect x="447.0" y="1701" width="0.5" height="15.0" fill="rgb(232,126,45)" rx="2" ry="2" />
<text  x="450.04" y="1711.5" ></text>
</g>
<g >
<title>cql3::restrictions::partition_key_restrictions::partition_key_restrictions (2 samples, 0.04%)</title><rect x="75.0" y="1749" width="0.4" height="15.0" fill="rgb(205,112,5)" rx="2" ry="2" />
<text  x="78.00" y="1759.5" ></text>
</g>
<g >
<title>std::default_delete&lt;cql3::query_options&gt;::operator (16 samples, 0.30%)</title><rect x="671.2" y="1893" width="3.5" height="15.0" fill="rgb(216,109,40)" rx="2" ry="2" />
<text  x="674.16" y="1903.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;flat_mutation_reader::peek (4 samples, 0.08%)</title><rect x="322.4" y="1813" width="0.9" height="15.0" fill="rgb(234,158,0)" rx="2" ry="2" />
<text  x="325.43" y="1823.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector (6 samples, 0.11%)</title><rect x="1153.9" y="1893" width="1.4" height="15.0" fill="rgb(205,166,34)" rx="2" ry="2" />
<text  x="1156.92" y="1903.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume_in_thread&lt;sstables::sstable_writer, flat_mutation_reader::no_filter&gt; (1 samples, 0.02%)</title><rect x="1188.9" y="117" width="0.2" height="15.0" fill="rgb(230,145,4)" rx="2" ry="2" />
<text  x="1191.88" y="127.5" ></text>
</g>
<g >
<title>mutation_fragment::operator= (6 samples, 0.11%)</title><rect x="211.5" y="1653" width="1.3" height="15.0" fill="rgb(248,127,34)" rx="2" ry="2" />
<text  x="214.49" y="1663.5" ></text>
</g>
<g >
<title>std::apply&lt;auth::permissions_cache::get (1 samples, 0.02%)</title><rect x="79.9" y="1749" width="0.3" height="15.0" fill="rgb(219,195,11)" rx="2" ry="2" />
<text  x="82.93" y="1759.5" ></text>
</g>
<g >
<title>std::vector&lt;seastar::future&lt;void&gt;, std::allocator&lt;seastar::future&lt;void&gt; &gt; &gt;::reserve (1 samples, 0.02%)</title><rect x="1122.5" y="1669" width="0.3" height="15.0" fill="rgb(217,200,32)" rx="2" ry="2" />
<text  x="1125.54" y="1679.5" ></text>
</g>
<g >
<title>partition_snapshot::~partition_snapshot (3 samples, 0.06%)</title><rect x="581.7" y="1685" width="0.7" height="15.0" fill="rgb(243,42,17)" rx="2" ry="2" />
<text  x="584.73" y="1695.5" ></text>
</g>
<g >
<title>bytes_ostream::view (1 samples, 0.02%)</title><rect x="607.3" y="1829" width="0.2" height="15.0" fill="rgb(210,150,32)" rx="2" ry="2" />
<text  x="610.28" y="1839.5" ></text>
</g>
<g >
<title>service::storage_service::mutate_token_metadata (1 samples, 0.02%)</title><rect x="20.3" y="1877" width="0.2" height="15.0" fill="rgb(235,220,3)" rx="2" ry="2" />
<text  x="23.31" y="1887.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;column_definition const*, std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt; &gt;, column_definition*&gt; (1 samples, 0.02%)</title><rect x="20.1" y="1557" width="0.2" height="15.0" fill="rgb(207,169,24)" rx="2" ry="2" />
<text  x="23.09" y="1567.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.02%)</title><rect x="46.8" y="1605" width="0.2" height="15.0" fill="rgb(223,1,40)" rx="2" ry="2" />
<text  x="49.76" y="1615.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate_to_raw_view (6 samples, 0.11%)</title><rect x="848.4" y="1733" width="1.4" height="15.0" fill="rgb(234,173,36)" rx="2" ry="2" />
<text  x="851.44" y="1743.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (14 samples, 0.27%)</title><rect x="1186.2" y="1077" width="3.1" height="15.0" fill="rgb(226,229,23)" rx="2" ry="2" />
<text  x="1189.19" y="1087.5" ></text>
</g>
<g >
<title>multishard_combining_reader::fill_buffer (2 samples, 0.04%)</title><rect x="107.5" y="1701" width="0.4" height="15.0" fill="rgb(244,132,9)" rx="2" ry="2" />
<text  x="110.49" y="1711.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (3 samples, 0.06%)</title><rect x="604.1" y="1813" width="0.7" height="15.0" fill="rgb(233,201,17)" rx="2" ry="2" />
<text  x="607.15" y="1823.5" ></text>
</g>
<g >
<title>single_node_cql_env::local_qp (2 samples, 0.04%)</title><rect x="832.5" y="1877" width="0.5" height="15.0" fill="rgb(244,186,7)" rx="2" ry="2" />
<text  x="835.53" y="1887.5" ></text>
</g>
<g >
<title>query::result_view::consume&lt;query::result_set_builder&amp;&gt; (1 samples, 0.02%)</title><rect x="108.2" y="1861" width="0.2" height="15.0" fill="rgb(225,62,19)" rx="2" ry="2" />
<text  x="111.17" y="1871.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.02%)</title><rect x="44.7" y="1589" width="0.3" height="15.0" fill="rgb(230,90,1)" rx="2" ry="2" />
<text  x="47.74" y="1599.5" ></text>
</g>
<g >
<title>std::optional&lt;position_in_partition&gt;::operator=&lt;position_in_partition&gt; (3 samples, 0.06%)</title><rect x="274.9" y="1669" width="0.7" height="15.0" fill="rgb(215,128,8)" rx="2" ry="2" />
<text  x="277.91" y="1679.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::__do_dyncast (6 samples, 0.11%)</title><rect x="12.2" y="2005" width="1.4" height="15.0" fill="rgb(252,203,22)" rx="2" ry="2" />
<text  x="15.24" y="2015.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.02%)</title><rect x="53.0" y="1541" width="0.3" height="15.0" fill="rgb(227,109,37)" rx="2" ry="2" />
<text  x="56.03" y="1551.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;compact_for_query&lt; (2 samples, 0.04%)</title><rect x="454.9" y="1797" width="0.4" height="15.0" fill="rgb(219,31,6)" rx="2" ry="2" />
<text  x="457.88" y="1807.5" ></text>
</g>
<g >
<title>managed_bytes::free_chain (1 samples, 0.02%)</title><rect x="10.7" y="1813" width="0.2" height="15.0" fill="rgb(243,67,12)" rx="2" ry="2" />
<text  x="13.67" y="1823.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.02%)</title><rect x="46.8" y="1653" width="0.2" height="15.0" fill="rgb(208,67,53)" rx="2" ry="2" />
<text  x="49.76" y="1663.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.02%)</title><rect x="53.0" y="1525" width="0.3" height="15.0" fill="rgb(242,87,4)" rx="2" ry="2" />
<text  x="56.03" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (1 samples, 0.02%)</title><rect x="929.3" y="1829" width="0.3" height="15.0" fill="rgb(214,139,10)" rx="2" ry="2" />
<text  x="932.35" y="1839.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::find&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="77.2" y="1797" width="0.3" height="15.0" fill="rgb(227,9,15)" rx="2" ry="2" />
<text  x="80.24" y="1807.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_pausable_in_thread&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;sstables::sstable_writer&gt; &gt;, flat_mutation_reader::no_filter&gt; (1 samples, 0.02%)</title><rect x="1188.0" y="133" width="0.2" height="15.0" fill="rgb(227,189,21)" rx="2" ry="2" />
<text  x="1190.98" y="143.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;cql3::query_processor&gt;::local (1 samples, 0.02%)</title><rect x="822.2" y="1861" width="0.2" height="15.0" fill="rgb(225,89,20)" rx="2" ry="2" />
<text  x="825.22" y="1871.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_psrstate (1 samples, 0.02%)</title><rect x="63.8" y="1749" width="0.2" height="15.0" fill="rgb(253,100,7)" rx="2" ry="2" />
<text  x="66.79" y="1759.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (2 samples, 0.04%)</title><rect x="34.0" y="1637" width="0.4" height="15.0" fill="rgb(231,96,33)" rx="2" ry="2" />
<text  x="36.98" y="1647.5" ></text>
</g>
<g >
<title>seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::expand (6 samples, 0.11%)</title><rect x="205.2" y="1637" width="1.4" height="15.0" fill="rgb(216,183,40)" rx="2" ry="2" />
<text  x="208.21" y="1647.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt;::allocate (1 samples, 0.02%)</title><rect x="931.6" y="1813" width="0.2" height="15.0" fill="rgb(254,185,10)" rx="2" ry="2" />
<text  x="934.59" y="1823.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (2 samples, 0.04%)</title><rect x="723.4" y="1845" width="0.4" height="15.0" fill="rgb(213,26,10)" rx="2" ry="2" />
<text  x="726.38" y="1855.5" ></text>
</g>
<g >
<title>seastar::memory::stats (2 samples, 0.04%)</title><rect x="550.4" y="1717" width="0.4" height="15.0" fill="rgb(251,150,13)" rx="2" ry="2" />
<text  x="553.36" y="1727.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::get_at (1 samples, 0.02%)</title><rect x="357.4" y="1605" width="0.2" height="15.0" fill="rgb(240,214,47)" rx="2" ry="2" />
<text  x="360.39" y="1615.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::~small_vector (2 samples, 0.04%)</title><rect x="478.0" y="1717" width="0.4" height="15.0" fill="rgb(212,88,11)" rx="2" ry="2" />
<text  x="480.97" y="1727.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::reserve (1 samples, 0.02%)</title><rect x="159.9" y="1829" width="0.3" height="15.0" fill="rgb(206,207,26)" rx="2" ry="2" />
<text  x="162.94" y="1839.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;schema&gt;::make&lt;schema&gt; (1 samples, 0.02%)</title><rect x="20.1" y="1637" width="0.2" height="15.0" fill="rgb(223,186,30)" rx="2" ry="2" />
<text  x="23.09" y="1647.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::set_value&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; (1 samples, 0.02%)</title><rect x="619.2" y="1861" width="0.2" height="15.0" fill="rgb(212,174,48)" rx="2" ry="2" />
<text  x="622.16" y="1871.5" ></text>
</g>
<g >
<title>row::row (148 samples, 2.81%)</title><rect x="219.3" y="1573" width="33.2" height="15.0" fill="rgb(245,209,20)" rx="2" ry="2" />
<text  x="222.33" y="1583.5" >ro..</text>
</g>
<g >
<title>seastar::thread_context::thread_context (14 samples, 0.27%)</title><rect x="1186.2" y="2053" width="3.1" height="15.0" fill="rgb(237,141,36)" rx="2" ry="2" />
<text  x="1189.19" y="2063.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (1 samples, 0.02%)</title><rect x="1114.9" y="1893" width="0.2" height="15.0" fill="rgb(247,128,10)" rx="2" ry="2" />
<text  x="1117.92" y="1903.5" ></text>
</g>
<g >
<title>query::result::result (7 samples, 0.13%)</title><rect x="605.9" y="1845" width="1.6" height="15.0" fill="rgb(239,169,52)" rx="2" ry="2" />
<text  x="608.94" y="1855.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::operator (3 samples, 0.06%)</title><rect x="307.6" y="1749" width="0.7" height="15.0" fill="rgb(241,152,8)" rx="2" ry="2" />
<text  x="310.63" y="1759.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (3 samples, 0.06%)</title><rect x="53.0" y="1621" width="0.7" height="15.0" fill="rgb(233,207,39)" rx="2" ry="2" />
<text  x="56.03" y="1631.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (6 samples, 0.11%)</title><rect x="436.7" y="1589" width="1.4" height="15.0" fill="rgb(250,103,3)" rx="2" ry="2" />
<text  x="439.73" y="1599.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (2 samples, 0.04%)</title><rect x="682.4" y="1877" width="0.4" height="15.0" fill="rgb(237,160,39)" rx="2" ry="2" />
<text  x="685.36" y="1887.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="553.9" y="1685" width="0.3" height="15.0" fill="rgb(226,25,14)" rx="2" ry="2" />
<text  x="556.94" y="1695.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_emplace&lt;nonwrapping_interval&lt;dht::token&gt;, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; (35 samples, 0.66%)</title><rect x="1144.5" y="1893" width="7.8" height="15.0" fill="rgb(252,48,40)" rx="2" ry="2" />
<text  x="1147.50" y="1903.5" ></text>
</g>
<g >
<title>compaction_manager::submit (1 samples, 0.02%)</title><rect x="1131.3" y="1909" width="0.2" height="15.0" fill="rgb(220,177,14)" rx="2" ry="2" />
<text  x="1134.28" y="1919.5" ></text>
</g>
<g >
<title>cql3::relation::to_restriction (5 samples, 0.09%)</title><rect x="72.8" y="1813" width="1.1" height="15.0" fill="rgb(254,23,0)" rx="2" ry="2" />
<text  x="75.75" y="1823.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take (1 samples, 0.02%)</title><rect x="694.5" y="1861" width="0.2" height="15.0" fill="rgb(254,166,46)" rx="2" ry="2" />
<text  x="697.47" y="1871.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (14 samples, 0.27%)</title><rect x="1186.2" y="1381" width="3.1" height="15.0" fill="rgb(234,94,30)" rx="2" ry="2" />
<text  x="1189.19" y="1391.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::close (1 samples, 0.02%)</title><rect x="586.0" y="1765" width="0.2" height="15.0" fill="rgb(238,170,31)" rx="2" ry="2" />
<text  x="588.99" y="1775.5" ></text>
</g>
<g >
<title>allocation_strategy::construct&lt;rows_entry, schema const&amp;, rows_entry const&amp;&gt; (1 samples, 0.02%)</title><rect x="109.1" y="1733" width="0.2" height="15.0" fill="rgb(224,29,29)" rx="2" ry="2" />
<text  x="112.06" y="1743.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_token (3 samples, 0.06%)</title><rect x="938.5" y="1781" width="0.7" height="15.0" fill="rgb(236,150,36)" rx="2" ry="2" />
<text  x="941.54" y="1791.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="64.7" y="1637" width="0.2" height="15.0" fill="rgb(216,68,10)" rx="2" ry="2" />
<text  x="67.69" y="1647.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::get0 (2 samples, 0.04%)</title><rect x="704.1" y="1877" width="0.5" height="15.0" fill="rgb(213,56,10)" rx="2" ry="2" />
<text  x="707.10" y="1887.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (3 samples, 0.06%)</title><rect x="1080.0" y="1813" width="0.6" height="15.0" fill="rgb(213,138,43)" rx="2" ry="2" />
<text  x="1082.96" y="1823.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.02%)</title><rect x="60.9" y="1541" width="0.2" height="15.0" fill="rgb(209,168,18)" rx="2" ry="2" />
<text  x="63.88" y="1551.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_super (1 samples, 0.02%)</title><rect x="30.6" y="1701" width="0.2" height="15.0" fill="rgb(244,81,1)" rx="2" ry="2" />
<text  x="33.62" y="1711.5" ></text>
</g>
<g >
<title>cql3::restrictions::(anonymous namespace)::range_from_bytes (105 samples, 1.99%)</title><rect x="902.5" y="1829" width="23.5" height="15.0" fill="rgb(209,99,20)" rx="2" ry="2" />
<text  x="905.45" y="1839.5" >c..</text>
</g>
<g >
<title>ser::writer_of_deletable_row&lt;bytes_ostream&gt;::write_key (1 samples, 0.02%)</title><rect x="1127.9" y="1557" width="0.2" height="15.0" fill="rgb(210,162,49)" rx="2" ry="2" />
<text  x="1130.92" y="1567.5" ></text>
</g>
<g >
<title>make_combined_reader (89 samples, 1.69%)</title><rect x="466.8" y="1765" width="19.9" height="15.0" fill="rgb(241,50,12)" rx="2" ry="2" />
<text  x="469.76" y="1775.5" ></text>
</g>
<g >
<title>make_stable_flattened_mutations_consumer&lt;compact_for_query&lt; (8 samples, 0.15%)</title><rect x="450.8" y="1797" width="1.8" height="15.0" fill="rgb(208,33,43)" rx="2" ry="2" />
<text  x="453.85" y="1807.5" ></text>
</g>
<g >
<title>reader_permit::impl::on_admission (4 samples, 0.08%)</title><rect x="131.7" y="1829" width="0.9" height="15.0" fill="rgb(247,44,54)" rx="2" ry="2" />
<text  x="134.70" y="1839.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (14 samples, 0.27%)</title><rect x="1186.2" y="469" width="3.1" height="15.0" fill="rgb(226,207,18)" rx="2" ry="2" />
<text  x="1189.19" y="479.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_prepared (516 samples, 9.80%)</title><rect x="724.1" y="1893" width="115.6" height="15.0" fill="rgb(236,155,3)" rx="2" ry="2" />
<text  x="727.05" y="1903.5" >single_node_cq..</text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.02%)</title><rect x="508.7" y="1637" width="0.2" height="15.0" fill="rgb(209,225,30)" rx="2" ry="2" />
<text  x="511.67" y="1647.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.02%)</title><rect x="1189.1" y="133" width="0.2" height="15.0" fill="rgb(231,25,46)" rx="2" ry="2" />
<text  x="1192.10" y="143.5" ></text>
</g>
<g >
<title>seastar::(anonymous namespace)::thread_wake_task::run_and_dispose (1 samples, 0.02%)</title><rect x="636.2" y="1925" width="0.2" height="15.0" fill="rgb(232,153,2)" rx="2" ry="2" />
<text  x="639.20" y="1935.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;service::storage_proxy::unique_response_handler*, service::storage_proxy::mutate_begin (12 samples, 0.23%)</title><rect x="1122.5" y="1701" width="2.7" height="15.0" fill="rgb(254,125,25)" rx="2" ry="2" />
<text  x="1125.54" y="1711.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (6 samples, 0.11%)</title><rect x="60.4" y="1685" width="1.4" height="15.0" fill="rgb(249,22,9)" rx="2" ry="2" />
<text  x="63.43" y="1695.5" ></text>
</g>
<g >
<title>mutation_fragment::consume&lt;flat_mutation_reader::impl::consumer_adapter&lt;sstables::sstable_writer&gt; &gt; (1 samples, 0.02%)</title><rect x="1187.1" y="165" width="0.2" height="15.0" fill="rgb(221,174,7)" rx="2" ry="2" />
<text  x="1190.09" y="175.5" ></text>
</g>
<g >
<title>std::function&lt;seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (1 samples, 0.02%)</title><rect x="79.9" y="1701" width="0.3" height="15.0" fill="rgb(244,203,50)" rx="2" ry="2" />
<text  x="82.93" y="1711.5" ></text>
</g>
<g >
<title>ser::deserialize&lt;seastar::simple_memory_input_stream&gt; (1 samples, 0.02%)</title><rect x="107.0" y="1637" width="0.3" height="15.0" fill="rgb(230,99,36)" rx="2" ry="2" />
<text  x="110.04" y="1647.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::vector (1 samples, 0.02%)</title><rect x="54.2" y="1717" width="0.2" height="15.0" fill="rgb(219,127,44)" rx="2" ry="2" />
<text  x="57.15" y="1727.5" ></text>
</g>
<g >
<title>cql3::raw_value_view::raw_value_view (1 samples, 0.02%)</title><rect x="854.9" y="1717" width="0.3" height="15.0" fill="rgb(221,219,54)" rx="2" ry="2" />
<text  x="857.94" y="1727.5" ></text>
</g>
<g >
<title>reader_permit::consume (1 samples, 0.02%)</title><rect x="208.1" y="1621" width="0.2" height="15.0" fill="rgb(248,151,18)" rx="2" ry="2" />
<text  x="211.12" y="1631.5" ></text>
</g>
<g >
<title>service::client_state::check_has_permission (1 samples, 0.02%)</title><rect x="770.9" y="1781" width="0.2" height="15.0" fill="rgb(235,128,26)" rx="2" ry="2" />
<text  x="773.89" y="1791.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::make_partition_slice (65 samples, 1.23%)</title><rect x="1082.6" y="1845" width="14.6" height="15.0" fill="rgb(217,141,33)" rx="2" ry="2" />
<text  x="1085.65" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::~_Variant_storage (1 samples, 0.02%)</title><rect x="849.1" y="1669" width="0.2" height="15.0" fill="rgb(214,73,3)" rx="2" ry="2" />
<text  x="852.11" y="1679.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.06%)</title><rect x="637.1" y="1909" width="0.7" height="15.0" fill="rgb(220,62,41)" rx="2" ry="2" />
<text  x="640.09" y="1919.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::column_identifier&gt;::shared_ptr (2 samples, 0.04%)</title><rect x="62.9" y="1765" width="0.4" height="15.0" fill="rgb(229,136,46)" rx="2" ry="2" />
<text  x="65.89" y="1775.5" ></text>
</g>
<g >
<title>schema_registry::get_entry (14 samples, 0.27%)</title><rect x="962.7" y="1765" width="3.2" height="15.0" fill="rgb(217,100,40)" rx="2" ry="2" />
<text  x="965.74" y="1775.5" ></text>
</g>
<g >
<title>reader_permit::consume_memory (1 samples, 0.02%)</title><rect x="530.0" y="1621" width="0.2" height="15.0" fill="rgb(223,93,26)" rx="2" ry="2" />
<text  x="532.96" y="1631.5" ></text>
</g>
<g >
<title>locator::abstract_replication_strategy::get_natural_endpoints (1 samples, 0.02%)</title><rect x="1055.8" y="1733" width="0.2" height="15.0" fill="rgb(209,212,21)" rx="2" ry="2" />
<text  x="1058.75" y="1743.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (2 samples, 0.04%)</title><rect x="660.4" y="1909" width="0.4" height="15.0" fill="rgb(235,224,10)" rx="2" ry="2" />
<text  x="663.40" y="1919.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_slice_or_needs_filtering (3 samples, 0.06%)</title><rect x="649.9" y="1861" width="0.6" height="15.0" fill="rgb(215,96,49)" rx="2" ry="2" />
<text  x="652.87" y="1871.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (4 samples, 0.08%)</title><rect x="60.9" y="1589" width="0.9" height="15.0" fill="rgb(220,121,35)" rx="2" ry="2" />
<text  x="63.88" y="1599.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.02%)</title><rect x="1013.8" y="1541" width="0.3" height="15.0" fill="rgb(244,30,50)" rx="2" ry="2" />
<text  x="1016.84" y="1551.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="654.1" y="1861" width="0.2" height="15.0" fill="rgb(227,97,10)" rx="2" ry="2" />
<text  x="657.13" y="1871.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (14 samples, 0.27%)</title><rect x="1186.2" y="1557" width="3.1" height="15.0" fill="rgb(215,208,41)" rx="2" ry="2" />
<text  x="1189.19" y="1567.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="631.0" y="1813" width="0.3" height="15.0" fill="rgb(210,38,54)" rx="2" ry="2" />
<text  x="634.04" y="1823.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector (2 samples, 0.04%)</title><rect x="1054.0" y="1749" width="0.4" height="15.0" fill="rgb(250,131,42)" rx="2" ry="2" />
<text  x="1056.96" y="1759.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;seastar::shared_ptr&lt;cql3::relation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::relation&gt; &gt; &gt;::_Vector_impl_data::_M_swap_data (1 samples, 0.02%)</title><rect x="66.0" y="1749" width="0.3" height="15.0" fill="rgb(225,220,33)" rx="2" ry="2" />
<text  x="69.03" y="1759.5" ></text>
</g>
<g >
<title>compound_wrapper&lt;clustering_key_prefix, clustering_key_prefix_view&gt;::begin (1 samples, 0.02%)</title><rect x="853.4" y="1621" width="0.2" height="15.0" fill="rgb(220,50,7)" rx="2" ry="2" />
<text  x="856.37" y="1631.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::clear (1 samples, 0.02%)</title><rect x="727.6" y="1877" width="0.3" height="15.0" fill="rgb(211,121,34)" rx="2" ry="2" />
<text  x="730.64" y="1887.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql_transport::messages::result_message&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="1132.2" y="1925" width="0.2" height="15.0" fill="rgb(231,29,6)" rx="2" ry="2" />
<text  x="1135.18" y="1935.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="421.5" y="1589" width="0.2" height="15.0" fill="rgb(215,78,40)" rx="2" ry="2" />
<text  x="424.49" y="1599.5" ></text>
</g>
<g >
<title>fmt::v7::basic_format_parse_context&lt;char, fmt::v7::detail::error_handler&gt;::next_arg_id (1 samples, 0.02%)</title><rect x="21.9" y="1909" width="0.2" height="15.0" fill="rgb(228,32,37)" rx="2" ry="2" />
<text  x="24.88" y="1919.5" ></text>
</g>
<g >
<title>ser::after_deletable_row__key&lt;bytes_ostream&gt;::start_marker_no_marker (1 samples, 0.02%)</title><rect x="1127.7" y="1557" width="0.2" height="15.0" fill="rgb(252,5,30)" rx="2" ry="2" />
<text  x="1130.69" y="1567.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::need_filtering (8 samples, 0.15%)</title><rect x="649.4" y="1893" width="1.8" height="15.0" fill="rgb(208,72,13)" rx="2" ry="2" />
<text  x="652.42" y="1903.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="768.7" y="1813" width="0.2" height="15.0" fill="rgb(239,84,46)" rx="2" ry="2" />
<text  x="771.65" y="1823.5" ></text>
</g>
<g >
<title>composite::serialize_value&lt;partition_key_view&amp;, signed char*&gt; (1 samples, 0.02%)</title><rect x="1187.8" y="69" width="0.2" height="15.0" fill="rgb(218,206,8)" rx="2" ry="2" />
<text  x="1190.76" y="79.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::small_vector (1 samples, 0.02%)</title><rect x="482.2" y="1685" width="0.2" height="15.0" fill="rgb(221,97,44)" rx="2" ry="2" />
<text  x="485.22" y="1695.5" ></text>
</g>
<g >
<title>seastar::make_shared&lt;cql3::single_column_relation, seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, cql3::expr::oper_t&amp;, cql3::expr::expression&gt; (1 samples, 0.02%)</title><rect x="65.1" y="1749" width="0.3" height="15.0" fill="rgb(237,211,44)" rx="2" ry="2" />
<text  x="68.13" y="1759.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value, std::allocator&lt;cql3::raw_value&gt; &gt;::_M_range_initialize&lt;cql3::raw_value const*&gt; (8 samples, 0.15%)</title><rect x="840.1" y="1877" width="1.8" height="15.0" fill="rgb(229,79,35)" rx="2" ry="2" />
<text  x="843.15" y="1887.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_clustering_bounds (1 samples, 0.02%)</title><rect x="851.8" y="1797" width="0.2" height="15.0" fill="rgb(223,217,12)" rx="2" ry="2" />
<text  x="854.80" y="1807.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::has_available_units (1 samples, 0.02%)</title><rect x="428.4" y="1637" width="0.3" height="15.0" fill="rgb(253,138,18)" rx="2" ry="2" />
<text  x="431.43" y="1647.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.02%)</title><rect x="50.3" y="1605" width="0.3" height="15.0" fill="rgb(214,85,21)" rx="2" ry="2" />
<text  x="53.34" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt;::_Copy_ctor_base (1 samples, 0.02%)</title><rect x="854.5" y="1669" width="0.2" height="15.0" fill="rgb(221,46,38)" rx="2" ry="2" />
<text  x="857.49" y="1679.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (189 samples, 3.59%)</title><rect x="25.7" y="1813" width="42.3" height="15.0" fill="rgb(224,114,26)" rx="2" ry="2" />
<text  x="28.69" y="1823.5" >cql..</text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="828.9" y="1829" width="0.3" height="15.0" fill="rgb(251,79,47)" rx="2" ry="2" />
<text  x="831.94" y="1839.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (14 samples, 0.27%)</title><rect x="1186.2" y="1413" width="3.1" height="15.0" fill="rgb(218,40,44)" rx="2" ry="2" />
<text  x="1189.19" y="1423.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::impl (3 samples, 0.06%)</title><rect x="480.7" y="1701" width="0.6" height="15.0" fill="rgb(210,67,9)" rx="2" ry="2" />
<text  x="483.66" y="1711.5" ></text>
</g>
<g >
<title>table::as_mutation_source (9 samples, 0.17%)</title><rect x="630.4" y="1861" width="2.0" height="15.0" fill="rgb(209,98,22)" rx="2" ry="2" />
<text  x="633.37" y="1871.5" ></text>
</g>
<g >
<title>seastar::future&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry_ptr&gt;::then_impl&lt;utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (6 samples, 0.11%)</title><rect x="742.2" y="1797" width="1.3" height="15.0" fill="rgb(238,51,26)" rx="2" ry="2" />
<text  x="745.21" y="1807.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.02%)</title><rect x="1162.2" y="1925" width="0.2" height="15.0" fill="rgb(238,149,7)" rx="2" ry="2" />
<text  x="1165.21" y="1935.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume_in_thread&lt;sstables::sstable_writer, flat_mutation_reader::no_filter&gt; (1 samples, 0.02%)</title><rect x="1187.1" y="213" width="0.2" height="15.0" fill="rgb(251,43,9)" rx="2" ry="2" />
<text  x="1190.09" y="223.5" ></text>
</g>
<g >
<title>seastar::future&lt;utils::small_vector&lt;service::storage_proxy::unique_response_handler, 1ul&gt; &gt;::then_impl&lt;service::storage_proxy::mutate_internal&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt; &gt; (14 samples, 0.27%)</title><rect x="1122.3" y="1733" width="3.2" height="15.0" fill="rgb(254,157,44)" rx="2" ry="2" />
<text  x="1125.32" y="1743.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (1 samples, 0.02%)</title><rect x="1017.0" y="1653" width="0.2" height="15.0" fill="rgb(234,19,8)" rx="2" ry="2" />
<text  x="1019.98" y="1663.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::timer (2 samples, 0.04%)</title><rect x="1013.4" y="1573" width="0.4" height="15.0" fill="rgb(207,223,8)" rx="2" ry="2" />
<text  x="1016.39" y="1583.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="142.9" y="1685" width="0.2" height="15.0" fill="rgb(254,73,51)" rx="2" ry="2" />
<text  x="145.90" y="1695.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="575.0" y="1717" width="0.2" height="15.0" fill="rgb(215,217,42)" rx="2" ry="2" />
<text  x="578.01" y="1727.5" ></text>
</g>
<g >
<title>ser::serializer&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;::write_fragmented&lt;bytes_ostream, fragment_range&lt;managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="363.7" y="1605" width="0.2" height="15.0" fill="rgb(209,117,43)" rx="2" ry="2" />
<text  x="366.66" y="1615.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (14 samples, 0.27%)</title><rect x="1186.2" y="437" width="3.1" height="15.0" fill="rgb(234,85,11)" rx="2" ry="2" />
<text  x="1189.19" y="447.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (14 samples, 0.27%)</title><rect x="1186.2" y="821" width="3.1" height="15.0" fill="rgb(241,17,18)" rx="2" ry="2" />
<text  x="1189.19" y="831.5" ></text>
</g>
<g >
<title>mutation_fragment::visit&lt;mutation_fragment::calculate_memory_usage (1 samples, 0.02%)</title><rect x="529.5" y="1621" width="0.2" height="15.0" fill="rgb(216,70,45)" rx="2" ry="2" />
<text  x="532.51" y="1631.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.02%)</title><rect x="46.8" y="1701" width="0.2" height="15.0" fill="rgb(251,102,7)" rx="2" ry="2" />
<text  x="49.76" y="1711.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (2 samples, 0.04%)</title><rect x="906.3" y="1765" width="0.4" height="15.0" fill="rgb(230,221,27)" rx="2" ry="2" />
<text  x="909.26" y="1775.5" ></text>
</g>
<g >
<title>service::storage_service::join_cluster (1 samples, 0.02%)</title><rect x="20.3" y="1973" width="0.2" height="15.0" fill="rgb(231,160,7)" rx="2" ry="2" />
<text  x="23.31" y="1983.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="540.9" y="1749" width="0.3" height="15.0" fill="rgb(249,100,11)" rx="2" ry="2" />
<text  x="543.94" y="1759.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (1 samples, 0.02%)</title><rect x="201.8" y="1669" width="0.3" height="15.0" fill="rgb(243,105,35)" rx="2" ry="2" />
<text  x="204.85" y="1679.5" ></text>
</g>
<g >
<title>utils::timed_rate_moving_average_and_histogram::mark&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; (6 samples, 0.11%)</title><rect x="677.4" y="1893" width="1.4" height="15.0" fill="rgb(216,62,37)" rx="2" ry="2" />
<text  x="680.43" y="1903.5" ></text>
</g>
<g >
<title>flush_reader::fill_buffer (2 samples, 0.04%)</title><rect x="1187.3" y="149" width="0.5" height="15.0" fill="rgb(215,188,47)" rx="2" ry="2" />
<text  x="1190.31" y="159.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::assign (2 samples, 0.04%)</title><rect x="33.3" y="1637" width="0.5" height="15.0" fill="rgb(241,220,52)" rx="2" ry="2" />
<text  x="36.31" y="1647.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (2 samples, 0.04%)</title><rect x="987.8" y="1653" width="0.5" height="15.0" fill="rgb(206,5,10)" rx="2" ry="2" />
<text  x="990.84" y="1663.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_with_triggers (1 samples, 0.02%)</title><rect x="848.0" y="1813" width="0.2" height="15.0" fill="rgb(206,185,53)" rx="2" ry="2" />
<text  x="850.99" y="1823.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::upper_bound&lt;mutation_partition, schema const&amp;, nonwrapping_interval&lt;clustering_key_prefix&gt; const&amp;&gt; (3 samples, 0.06%)</title><rect x="280.1" y="1637" width="0.6" height="15.0" fill="rgb(237,45,18)" rx="2" ry="2" />
<text  x="283.07" y="1647.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate (4 samples, 0.08%)</title><rect x="848.4" y="1717" width="0.9" height="15.0" fill="rgb(207,186,24)" rx="2" ry="2" />
<text  x="851.44" y="1727.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (2 samples, 0.04%)</title><rect x="675.6" y="1909" width="0.5" height="15.0" fill="rgb(229,28,40)" rx="2" ry="2" />
<text  x="678.64" y="1919.5" ></text>
</g>
<g >
<title>auth::permissions_cache::get (105 samples, 1.99%)</title><rect x="776.7" y="1701" width="23.6" height="15.0" fill="rgb(221,80,9)" rx="2" ry="2" />
<text  x="779.72" y="1711.5" >a..</text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::_M_range_initialize&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; const*&gt; (1 samples, 0.02%)</title><rect x="851.8" y="1765" width="0.2" height="15.0" fill="rgb(248,10,26)" rx="2" ry="2" />
<text  x="854.80" y="1775.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (1 samples, 0.02%)</title><rect x="652.8" y="1893" width="0.2" height="15.0" fill="rgb(219,172,0)" rx="2" ry="2" />
<text  x="655.78" y="1903.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.02%)</title><rect x="44.7" y="1621" width="0.3" height="15.0" fill="rgb(209,49,33)" rx="2" ry="2" />
<text  x="47.74" y="1631.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_Optional_payload_base (2 samples, 0.04%)</title><rect x="925.5" y="1813" width="0.5" height="15.0" fill="rgb(250,154,0)" rx="2" ry="2" />
<text  x="928.54" y="1823.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextToken (58 samples, 1.10%)</title><rect x="29.9" y="1717" width="13.0" height="15.0" fill="rgb(212,110,48)" rx="2" ry="2" />
<text  x="32.95" y="1727.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.06%)</title><rect x="840.8" y="1845" width="0.7" height="15.0" fill="rgb(209,154,53)" rx="2" ry="2" />
<text  x="843.82" y="1855.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::entry::entry (5 samples, 0.09%)</title><rect x="1010.9" y="1621" width="1.1" height="15.0" fill="rgb(232,226,38)" rx="2" ry="2" />
<text  x="1013.93" y="1631.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take (2 samples, 0.04%)</title><rect x="617.4" y="1861" width="0.4" height="15.0" fill="rgb(216,188,46)" rx="2" ry="2" />
<text  x="620.37" y="1871.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::set_callback (3 samples, 0.06%)</title><rect x="844.6" y="1909" width="0.7" height="15.0" fill="rgb(216,35,14)" rx="2" ry="2" />
<text  x="847.63" y="1919.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::make_data_requests (1 samples, 0.02%)</title><rect x="988.3" y="1685" width="0.2" height="15.0" fill="rgb(236,205,6)" rx="2" ry="2" />
<text  x="991.29" y="1695.5" ></text>
</g>
<g >
<title>absl::container_internal::probe_seq&lt;16ul&gt;::probe_seq (1 samples, 0.02%)</title><rect x="77.2" y="1781" width="0.3" height="15.0" fill="rgb(242,195,54)" rx="2" ry="2" />
<text  x="80.24" y="1791.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (14 samples, 0.27%)</title><rect x="890.8" y="1669" width="3.1" height="15.0" fill="rgb(231,70,54)" rx="2" ry="2" />
<text  x="893.80" y="1679.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (14 samples, 0.27%)</title><rect x="1186.2" y="1925" width="3.1" height="15.0" fill="rgb(236,50,16)" rx="2" ry="2" />
<text  x="1189.19" y="1935.5" ></text>
</g>
<g >
<title>service::storage_proxy::do_mutate (33 samples, 0.63%)</title><rect x="1122.3" y="1765" width="7.4" height="15.0" fill="rgb(233,164,37)" rx="2" ry="2" />
<text  x="1125.32" y="1775.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally&lt;single_node_cql_env::execute_prepared_with_qo (10 samples, 0.19%)</title><rect x="819.8" y="1861" width="2.2" height="15.0" fill="rgb(240,113,38)" rx="2" ry="2" />
<text  x="822.75" y="1871.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (14 samples, 0.27%)</title><rect x="1186.2" y="1701" width="3.1" height="15.0" fill="rgb(230,63,5)" rx="2" ry="2" />
<text  x="1189.19" y="1711.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, lister::scan_dir (1 samples, 0.02%)</title><rect x="688.4" y="1925" width="0.2" height="15.0" fill="rgb(228,8,8)" rx="2" ry="2" />
<text  x="691.42" y="1935.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume_in_thread&lt;sstables::sstable_writer, flat_mutation_reader::no_filter&gt; (1 samples, 0.02%)</title><rect x="1188.0" y="165" width="0.2" height="15.0" fill="rgb(228,30,16)" rx="2" ry="2" />
<text  x="1190.98" y="175.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (2 samples, 0.04%)</title><rect x="140.9" y="1877" width="0.4" height="15.0" fill="rgb(218,175,32)" rx="2" ry="2" />
<text  x="143.89" y="1887.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (1 samples, 0.02%)</title><rect x="744.2" y="1765" width="0.2" height="15.0" fill="rgb(219,56,53)" rx="2" ry="2" />
<text  x="747.22" y="1775.5" ></text>
</g>
<g >
<title>database::query (90 samples, 1.71%)</title><rect x="998.4" y="1685" width="20.1" height="15.0" fill="rgb(240,152,26)" rx="2" ry="2" />
<text  x="1001.38" y="1695.5" ></text>
</g>
<g >
<title>std::tuple&lt;cql3::statements::create_service_level_statement*, std::default_delete&lt;cql3::statements::create_service_level_statement&gt; &gt;::tuple&lt;true, true&gt; (1 samples, 0.02%)</title><rect x="67.2" y="1765" width="0.2" height="15.0" fill="rgb(221,190,9)" rx="2" ry="2" />
<text  x="70.15" y="1775.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (688 samples, 13.07%)</title><rect x="168.2" y="1813" width="154.2" height="15.0" fill="rgb(236,33,27)" rx="2" ry="2" />
<text  x="171.23" y="1823.5" >merging_reader&lt;muta..</text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_push_back_aux&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (3 samples, 0.06%)</title><rect x="28.4" y="1685" width="0.7" height="15.0" fill="rgb(212,169,23)" rx="2" ry="2" />
<text  x="31.38" y="1695.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;::basic_sstring (1 samples, 0.02%)</title><rect x="854.5" y="1653" width="0.2" height="15.0" fill="rgb(248,222,31)" rx="2" ry="2" />
<text  x="857.49" y="1663.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reserve&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (2 samples, 0.04%)</title><rect x="107.5" y="1333" width="0.4" height="15.0" fill="rgb(218,183,46)" rx="2" ry="2" />
<text  x="110.49" y="1343.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::abstract_read_executor (18 samples, 0.34%)</title><rect x="1048.6" y="1733" width="4.0" height="15.0" fill="rgb(210,39,32)" rx="2" ry="2" />
<text  x="1051.58" y="1743.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry_ptr&gt;::take_value (1 samples, 0.02%)</title><rect x="742.2" y="1781" width="0.2" height="15.0" fill="rgb(240,25,37)" rx="2" ry="2" />
<text  x="745.21" y="1791.5" ></text>
</g>
<g >
<title>seastar::reactor::add_timer (3 samples, 0.06%)</title><rect x="979.8" y="1701" width="0.6" height="15.0" fill="rgb(211,189,15)" rx="2" ry="2" />
<text  x="982.77" y="1711.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (14 samples, 0.27%)</title><rect x="1186.2" y="373" width="3.1" height="15.0" fill="rgb(234,14,24)" rx="2" ry="2" />
<text  x="1189.19" y="383.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.02%)</title><rect x="483.6" y="1701" width="0.2" height="15.0" fill="rgb(224,186,52)" rx="2" ry="2" />
<text  x="486.57" y="1711.5" ></text>
</g>
<g >
<title>mutation::set_clustered_cell (5 samples, 0.09%)</title><rect x="852.7" y="1717" width="1.1" height="15.0" fill="rgb(245,225,22)" rx="2" ry="2" />
<text  x="855.70" y="1727.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.02%)</title><rect x="798.2" y="1669" width="0.3" height="15.0" fill="rgb(215,226,43)" rx="2" ry="2" />
<text  x="801.24" y="1679.5" ></text>
</g>
<g >
<title>auth::get_permissions (118 samples, 2.24%)</title><rect x="775.4" y="1733" width="26.4" height="15.0" fill="rgb(249,163,45)" rx="2" ry="2" />
<text  x="778.38" y="1743.5" >a..</text>
</g>
<g >
<title>seastar::thread_context::thread_context (14 samples, 0.27%)</title><rect x="1186.2" y="1301" width="3.1" height="15.0" fill="rgb(227,154,53)" rx="2" ry="2" />
<text  x="1189.19" y="1311.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.02%)</title><rect x="44.5" y="1637" width="0.2" height="15.0" fill="rgb(217,165,32)" rx="2" ry="2" />
<text  x="47.51" y="1647.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (4 samples, 0.08%)</title><rect x="60.9" y="1573" width="0.9" height="15.0" fill="rgb(234,216,21)" rx="2" ry="2" />
<text  x="63.88" y="1583.5" ></text>
</g>
<g >
<title>auth::data_resource_view::data_resource_view (1 samples, 0.02%)</title><rect x="804.7" y="1749" width="0.3" height="15.0" fill="rgb(222,157,14)" rx="2" ry="2" />
<text  x="807.74" y="1759.5" ></text>
</g>
<g >
<title>ser::serializer&lt;ser::tombstone_view&gt;::read&lt;seastar::simple_memory_input_stream&gt; (1 samples, 0.02%)</title><rect x="1120.3" y="1621" width="0.2" height="15.0" fill="rgb(227,177,5)" rx="2" ry="2" />
<text  x="1123.30" y="1631.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="631.5" y="1797" width="0.2" height="15.0" fill="rgb(223,14,12)" rx="2" ry="2" />
<text  x="634.49" y="1807.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (12 samples, 0.23%)</title><rect x="787.3" y="1589" width="2.6" height="15.0" fill="rgb(207,90,32)" rx="2" ry="2" />
<text  x="790.25" y="1599.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::pop_mutation_fragment (8 samples, 0.15%)</title><rect x="334.8" y="1685" width="1.7" height="15.0" fill="rgb(226,50,39)" rx="2" ry="2" />
<text  x="337.75" y="1695.5" ></text>
</g>
<g >
<title>partition_builder::accept_row (1 samples, 0.02%)</title><rect x="1120.5" y="1669" width="0.2" height="15.0" fill="rgb(237,9,18)" rx="2" ry="2" />
<text  x="1123.52" y="1679.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (2 samples, 0.04%)</title><rect x="808.1" y="1797" width="0.4" height="15.0" fill="rgb(207,163,53)" rx="2" ry="2" />
<text  x="811.10" y="1807.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.02%)</title><rect x="27.3" y="1621" width="0.2" height="15.0" fill="rgb(232,207,23)" rx="2" ry="2" />
<text  x="30.26" y="1631.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::digest_read_resolver&gt;::~shared_ptr (3 samples, 0.06%)</title><rect x="974.4" y="1765" width="0.7" height="15.0" fill="rgb(238,179,38)" rx="2" ry="2" />
<text  x="977.40" y="1775.5" ></text>
</g>
<g >
<title>bytes_view_hasher::update (3 samples, 0.06%)</title><rect x="735.0" y="1717" width="0.7" height="15.0" fill="rgb(207,80,4)" rx="2" ry="2" />
<text  x="738.03" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::at (6 samples, 0.11%)</title><rect x="1035.4" y="1749" width="1.3" height="15.0" fill="rgb(243,102,42)" rx="2" ry="2" />
<text  x="1038.36" y="1759.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;bytes_ostream::chunk, std::default_delete&lt;bytes_ostream::chunk&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="1128.4" y="1573" width="0.2" height="15.0" fill="rgb(246,19,37)" rx="2" ry="2" />
<text  x="1131.37" y="1583.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::initial_key_restrictions&lt;partition_key&gt;::merge_to (5 samples, 0.09%)</title><rect x="74.3" y="1813" width="1.1" height="15.0" fill="rgb(247,44,25)" rx="2" ry="2" />
<text  x="77.32" y="1823.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (14 samples, 0.27%)</title><rect x="1186.2" y="981" width="3.1" height="15.0" fill="rgb(249,216,23)" rx="2" ry="2" />
<text  x="1189.19" y="991.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.2" y="2021" width="0.2" height="15.0" fill="rgb(245,218,40)" rx="2" ry="2" />
<text  x="13.22" y="2031.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (7 samples, 0.13%)</title><rect x="317.3" y="1685" width="1.5" height="15.0" fill="rgb(216,25,3)" rx="2" ry="2" />
<text  x="320.27" y="1695.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.02%)</title><rect x="49.7" y="1589" width="0.2" height="15.0" fill="rgb(236,15,34)" rx="2" ry="2" />
<text  x="52.67" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt;::~_Variant_storage (1 samples, 0.02%)</title><rect x="71.2" y="1781" width="0.2" height="15.0" fill="rgb(254,119,51)" rx="2" ry="2" />
<text  x="74.19" y="1791.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.02%)</title><rect x="861.7" y="1893" width="0.2" height="15.0" fill="rgb(240,23,36)" rx="2" ry="2" />
<text  x="864.66" y="1903.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_M_move_assign (6 samples, 0.11%)</title><rect x="1086.7" y="1781" width="1.3" height="15.0" fill="rgb(233,3,35)" rx="2" ry="2" />
<text  x="1089.68" y="1791.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.08%)</title><rect x="878.5" y="1717" width="0.9" height="15.0" fill="rgb(205,29,15)" rx="2" ry="2" />
<text  x="881.47" y="1727.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.02%)</title><rect x="49.0" y="1749" width="0.2" height="15.0" fill="rgb(213,11,26)" rx="2" ry="2" />
<text  x="52.00" y="1759.5" ></text>
</g>
<g >
<title>db::commitlog::segment_manager::allocate_when_possible&lt;db::commitlog::add_entry (3 samples, 0.06%)</title><rect x="1121.4" y="1717" width="0.7" height="15.0" fill="rgb(243,138,17)" rx="2" ry="2" />
<text  x="1124.42" y="1727.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;mutation_fragment&gt;::allocate (1 samples, 0.02%)</title><rect x="317.0" y="1701" width="0.3" height="15.0" fill="rgb(254,164,54)" rx="2" ry="2" />
<text  x="320.05" y="1711.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;enum_set&lt;super_enum&lt;auth::permission,  (1 samples, 0.02%)</title><rect x="800.3" y="1701" width="0.2" height="15.0" fill="rgb(252,16,32)" rx="2" ry="2" />
<text  x="803.25" y="1711.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::has_token (1 samples, 0.02%)</title><rect x="650.5" y="1845" width="0.3" height="15.0" fill="rgb(207,102,50)" rx="2" ry="2" />
<text  x="653.54" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt;::_Move_ctor_base (1 samples, 0.02%)</title><rect x="75.2" y="1685" width="0.2" height="15.0" fill="rgb(210,92,6)" rx="2" ry="2" />
<text  x="78.22" y="1695.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.02%)</title><rect x="20.1" y="1941" width="0.2" height="15.0" fill="rgb(217,217,47)" rx="2" ry="2" />
<text  x="23.09" y="1951.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (1 samples, 0.02%)</title><rect x="800.0" y="1685" width="0.3" height="15.0" fill="rgb(212,44,32)" rx="2" ry="2" />
<text  x="803.03" y="1695.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.02%)</title><rect x="64.7" y="1589" width="0.2" height="15.0" fill="rgb(214,181,13)" rx="2" ry="2" />
<text  x="67.69" y="1599.5" ></text>
</g>
<g >
<title>reader_selector::has_new_readers (1 samples, 0.02%)</title><rect x="475.1" y="1701" width="0.2" height="15.0" fill="rgb(222,7,12)" rx="2" ry="2" />
<text  x="478.05" y="1711.5" ></text>
</g>
<g >
<title>std::__find_if&lt;gms::inet_address*, __gnu_cxx::__ops::_Iter_equals_val&lt;gms::inet_address const&gt; &gt; (4 samples, 0.08%)</title><rect x="1075.2" y="1733" width="0.9" height="15.0" fill="rgb(219,101,34)" rx="2" ry="2" />
<text  x="1078.25" y="1743.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::digest_read_result&gt;::then_wrapped_common&lt;true, void, service::abstract_read_executor::execute (15 samples, 0.28%)</title><rect x="970.6" y="1765" width="3.3" height="15.0" fill="rgb(242,53,29)" rx="2" ry="2" />
<text  x="973.58" y="1775.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::move_it (1 samples, 0.02%)</title><rect x="973.9" y="1765" width="0.3" height="15.0" fill="rgb(217,37,33)" rx="2" ry="2" />
<text  x="976.95" y="1775.5" ></text>
</g>
<g >
<title>db::schema_tables::calculate_schema_digest (3 samples, 0.06%)</title><rect x="107.5" y="1861" width="0.7" height="15.0" fill="rgb(249,6,42)" rx="2" ry="2" />
<text  x="110.49" y="1871.5" ></text>
</g>
<g >
<title>ser::serializer&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;::write_fragmented&lt;bytes_ostream, fragment_range&lt;managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="686.8" y="1669" width="0.3" height="15.0" fill="rgb(239,93,43)" rx="2" ry="2" />
<text  x="689.85" y="1679.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.02%)</title><rect x="25.0" y="1749" width="0.2" height="15.0" fill="rgb(230,125,40)" rx="2" ry="2" />
<text  x="28.02" y="1759.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (16 samples, 0.30%)</title><rect x="446.1" y="1733" width="3.6" height="15.0" fill="rgb(246,82,20)" rx="2" ry="2" />
<text  x="449.14" y="1743.5" ></text>
</g>
<g >
<title>__start_context (3 samples, 0.06%)</title><rect x="1187.3" y="261" width="0.7" height="15.0" fill="rgb(220,217,50)" rx="2" ry="2" />
<text  x="1190.31" y="271.5" ></text>
</g>
<g >
<title>ser::qr_partition__static_row&lt;bytes_ostream&gt;::qr_partition__static_row (2 samples, 0.04%)</title><rect x="343.5" y="1589" width="0.4" height="15.0" fill="rgb(225,42,42)" rx="2" ry="2" />
<text  x="346.49" y="1599.5" ></text>
</g>
<g >
<title>seastar::deferred_action&lt;table::query (7 samples, 0.13%)</title><rect x="614.2" y="1861" width="1.6" height="15.0" fill="rgb(223,12,48)" rx="2" ry="2" />
<text  x="617.23" y="1871.5" ></text>
</g>
<g >
<title>sstables::formatted_sstables_list::operator+= (1 samples, 0.02%)</title><rect x="1131.3" y="1733" width="0.2" height="15.0" fill="rgb(227,42,28)" rx="2" ry="2" />
<text  x="1134.28" y="1743.5" ></text>
</g>
<g >
<title>cql3::expr::untyped_constant_test_assignment (1 samples, 0.02%)</title><rect x="70.5" y="1797" width="0.2" height="15.0" fill="rgb(244,101,9)" rx="2" ry="2" />
<text  x="73.51" y="1807.5" ></text>
</g>
<g >
<title>allocation_strategy::destroy&lt;rows_entry&gt; (1 samples, 0.02%)</title><rect x="1129.9" y="1669" width="0.3" height="15.0" fill="rgb(222,16,28)" rx="2" ry="2" />
<text  x="1132.94" y="1679.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="659.7" y="1909" width="0.3" height="15.0" fill="rgb(205,43,37)" rx="2" ry="2" />
<text  x="662.73" y="1919.5" ></text>
</g>
<g >
<title>dht::murmur3_partitioner::get_token (2 samples, 0.04%)</title><rect x="1116.5" y="1637" width="0.4" height="15.0" fill="rgb(232,73,9)" rx="2" ry="2" />
<text  x="1119.49" y="1647.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::vector (1 samples, 0.02%)</title><rect x="58.0" y="1685" width="0.2" height="15.0" fill="rgb(247,41,0)" rx="2" ry="2" />
<text  x="60.96" y="1695.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.08%)</title><rect x="517.6" y="1717" width="0.9" height="15.0" fill="rgb(211,23,52)" rx="2" ry="2" />
<text  x="520.64" y="1727.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_mutations_locally (3 samples, 0.06%)</title><rect x="107.5" y="1829" width="0.7" height="15.0" fill="rgb(237,41,49)" rx="2" ry="2" />
<text  x="110.49" y="1839.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_28has_slice_or_needs_filteringERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES28_S2B_ (1 samples, 0.02%)</title><rect x="75.4" y="1781" width="0.3" height="15.0" fill="rgb(245,25,50)" rx="2" ry="2" />
<text  x="78.44" y="1791.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::operator (1 samples, 0.02%)</title><rect x="825.8" y="1781" width="0.2" height="15.0" fill="rgb(221,120,38)" rx="2" ry="2" />
<text  x="828.80" y="1791.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="49.0" y="1669" width="0.2" height="15.0" fill="rgb(249,49,52)" rx="2" ry="2" />
<text  x="52.00" y="1679.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::~timer (2 samples, 0.04%)</title><rect x="133.5" y="1813" width="0.4" height="15.0" fill="rgb(232,54,19)" rx="2" ry="2" />
<text  x="136.49" y="1823.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (14 samples, 0.27%)</title><rect x="1186.2" y="837" width="3.1" height="15.0" fill="rgb(207,74,16)" rx="2" ry="2" />
<text  x="1189.19" y="847.5" ></text>
</g>
<g >
<title>db::system_keyspace::make (1 samples, 0.02%)</title><rect x="20.1" y="1749" width="0.2" height="15.0" fill="rgb(247,127,8)" rx="2" ry="2" />
<text  x="23.09" y="1759.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="821.8" y="1797" width="0.2" height="15.0" fill="rgb(248,96,45)" rx="2" ry="2" />
<text  x="824.77" y="1807.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;gms::inet_address, std::pair&lt;gms::inet_address const, service::view_update_backlog_timestamped&gt;, std::allocator&lt;std::pair&lt;gms::inet_address const, service::view_update_backlog_timestamped&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;gms::inet_address&gt;, std::hash&lt;gms::inet_address&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (1 samples, 0.02%)</title><rect x="716.0" y="1797" width="0.2" height="15.0" fill="rgb(213,211,13)" rx="2" ry="2" />
<text  x="718.98" y="1807.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (2 samples, 0.04%)</title><rect x="119.8" y="1877" width="0.5" height="15.0" fill="rgb(221,145,49)" rx="2" ry="2" />
<text  x="122.82" y="1887.5" ></text>
</g>
<g >
<title>read_simple&lt;long, managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="1127.2" y="1525" width="0.3" height="15.0" fill="rgb(209,195,6)" rx="2" ry="2" />
<text  x="1130.25" y="1535.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (1 samples, 0.02%)</title><rect x="64.5" y="1653" width="0.2" height="15.0" fill="rgb(254,74,11)" rx="2" ry="2" />
<text  x="67.46" y="1663.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (1 samples, 0.02%)</title><rect x="49.4" y="1717" width="0.3" height="15.0" fill="rgb(238,149,44)" rx="2" ry="2" />
<text  x="52.45" y="1727.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::followPop (1 samples, 0.02%)</title><rect x="53.7" y="1733" width="0.2" height="15.0" fill="rgb(252,67,18)" rx="2" ry="2" />
<text  x="56.70" y="1743.5" ></text>
</g>
<g >
<title>schema::column_at (2 samples, 0.04%)</title><rect x="258.6" y="1541" width="0.4" height="15.0" fill="rgb(231,182,33)" rx="2" ry="2" />
<text  x="261.55" y="1551.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="48.1" y="1669" width="0.2" height="15.0" fill="rgb(252,61,37)" rx="2" ry="2" />
<text  x="51.10" y="1679.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;reader_concurrency_semaphore::entry&gt;::_M_reset (1 samples, 0.02%)</title><rect x="134.8" y="1829" width="0.3" height="15.0" fill="rgb(246,153,35)" rx="2" ry="2" />
<text  x="137.84" y="1839.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;mutation_querier&gt;::_M_reset (1 samples, 0.02%)</title><rect x="448.8" y="1685" width="0.3" height="15.0" fill="rgb(239,159,33)" rx="2" ry="2" />
<text  x="451.83" y="1695.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.02%)</title><rect x="51.5" y="1637" width="0.2" height="15.0" fill="rgb(253,1,25)" rx="2" ry="2" />
<text  x="54.46" y="1647.5" ></text>
</g>
<g >
<title>_ZSt13__invoke_implISt10unique_ptrIN7seastar8internal13do_with_stateISt5tupleIJN20flat_mutation_reader4impl16consumer_adapterI35stable_flattened_mutations_consumerI17compact_for_queryIL19emit_only_live_rows1EN5query27clustering_position_trackerI20query_result_builderEEEEEEEENS1_6futureIvEEEESt14default_deleteISL_EEZNS2_12do_with_implISH_ZNS6_7consumeISG_EEDaT_EUlRSH_E_JEEEDaOSR_OT0_DpOT1_EUlDpOT_E_JSH_EESR_St14__invoke_otherSW_SZ_ (7 samples, 0.13%)</title><rect x="327.4" y="1733" width="1.5" height="15.0" fill="rgb(206,6,17)" rx="2" ry="2" />
<text  x="330.36" y="1743.5" ></text>
</g>
<g >
<title>std::destroy_at&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="57.5" y="1621" width="0.2" height="15.0" fill="rgb(219,61,44)" rx="2" ry="2" />
<text  x="60.51" y="1631.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (1,123 samples, 21.33%)</title><rect x="862.8" y="1877" width="251.7" height="15.0" fill="rgb(231,106,50)" rx="2" ry="2" />
<text  x="865.78" y="1887.5" >seastar::noncopyable_function&lt;sea..</text>
</g>
<g >
<title>seastar::thread_context::thread_context (14 samples, 0.27%)</title><rect x="1186.2" y="1317" width="3.1" height="15.0" fill="rgb(208,39,19)" rx="2" ry="2" />
<text  x="1189.19" y="1327.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (2 samples, 0.04%)</title><rect x="63.3" y="1637" width="0.5" height="15.0" fill="rgb(229,125,20)" rx="2" ry="2" />
<text  x="66.34" y="1647.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (4 samples, 0.08%)</title><rect x="907.4" y="1765" width="0.9" height="15.0" fill="rgb(219,137,46)" rx="2" ry="2" />
<text  x="910.38" y="1775.5" ></text>
</g>
<g >
<title>schema::column_at (5 samples, 0.09%)</title><rect x="360.3" y="1605" width="1.1" height="15.0" fill="rgb(240,193,37)" rx="2" ry="2" />
<text  x="363.30" y="1615.5" ></text>
</g>
<g >
<title>cql3::raw_value_view::make_temporary (12 samples, 0.23%)</title><rect x="896.6" y="1765" width="2.7" height="15.0" fill="rgb(240,190,30)" rx="2" ry="2" />
<text  x="899.62" y="1775.5" ></text>
</g>
<g >
<title>auth::data_resource_view::table (2 samples, 0.04%)</title><rect x="805.2" y="1733" width="0.4" height="15.0" fill="rgb(224,79,17)" rx="2" ry="2" />
<text  x="808.18" y="1743.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;std::allocator&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="42.7" y="1685" width="0.2" height="15.0" fill="rgb(217,75,28)" rx="2" ry="2" />
<text  x="45.72" y="1695.5" ></text>
</g>
<g >
<title>std::visit&lt;overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::has_token (1 samples, 0.02%)</title><rect x="939.0" y="1765" width="0.2" height="15.0" fill="rgb(242,86,13)" rx="2" ry="2" />
<text  x="941.98" y="1775.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="1114.2" y="1861" width="0.3" height="15.0" fill="rgb(211,2,47)" rx="2" ry="2" />
<text  x="1117.25" y="1871.5" ></text>
</g>
<g >
<title>_ZSt5visitIR18overloaded_functorIJZN4cql34expr9find_atomIZNS2_28has_slice_or_needs_filteringERKNS2_10expressionEEUlRKNS2_15binary_operatorEE_EEPS8_S6_T_EUlS9_E_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_8constantEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_11conjunctionEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_12column_valueEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_5tokenEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_21unresolved_identifierEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_25column_mutation_attributeEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_13function_callEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_4castEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_15field_selectionEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_4nullEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_13bind_variableEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_16untyped_constantEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_17tuple_constructorEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_22collection_constructorEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_20usertype_constructorEE_EEJRSt7variantIJSI_S7_SM_SQ_SU_SY_S12_S16_S1A_S1E_S1I_S1M_SE_S1Q_S1U_S1Y_EEEENSt13invoke_resultISC_JDpDTclsr3stdE3getILm0EEclsr3stdE7declvalIT0_EEEEEE4typeEOSC_DpOS28_ (1 samples, 0.02%)</title><rect x="937.6" y="1781" width="0.3" height="15.0" fill="rgb(242,131,5)" rx="2" ry="2" />
<text  x="940.64" y="1791.5" ></text>
</g>
<g >
<title>seastar::reactor::service_highres_timer (2 samples, 0.04%)</title><rect x="1164.2" y="1877" width="0.5" height="15.0" fill="rgb(216,6,50)" rx="2" ry="2" />
<text  x="1167.23" y="1887.5" ></text>
</g>
<g >
<title>db::schema_tables::read_tables_for_keyspaces (1 samples, 0.02%)</title><rect x="108.2" y="1925" width="0.2" height="15.0" fill="rgb(222,222,10)" rx="2" ry="2" />
<text  x="111.17" y="1935.5" ></text>
</g>
<g >
<title>seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::expand (1 samples, 0.02%)</title><rect x="142.9" y="1733" width="0.2" height="15.0" fill="rgb(253,6,15)" rx="2" ry="2" />
<text  x="145.90" y="1743.5" ></text>
</g>
<g >
<title>mutation_querier::consume_end_of_stream (2 samples, 0.04%)</title><rect x="339.2" y="1637" width="0.5" height="15.0" fill="rgb(230,145,7)" rx="2" ry="2" />
<text  x="342.23" y="1647.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::~holder (1 samples, 0.02%)</title><rect x="489.4" y="1749" width="0.2" height="15.0" fill="rgb(252,142,53)" rx="2" ry="2" />
<text  x="492.40" y="1759.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Scoped_node::~_Scoped_node (1 samples, 0.02%)</title><rect x="1152.3" y="1893" width="0.3" height="15.0" fill="rgb(238,226,24)" rx="2" ry="2" />
<text  x="1155.35" y="1903.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (31 samples, 0.59%)</title><rect x="560.4" y="1829" width="7.0" height="15.0" fill="rgb(239,71,32)" rx="2" ry="2" />
<text  x="563.44" y="1839.5" ></text>
</g>
<g >
<title>utils::tuple_hash::operator (9 samples, 0.17%)</title><rect x="748.0" y="1733" width="2.0" height="15.0" fill="rgb(222,63,38)" rx="2" ry="2" />
<text  x="751.03" y="1743.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="57.3" y="1653" width="0.2" height="15.0" fill="rgb(210,8,13)" rx="2" ry="2" />
<text  x="60.29" y="1663.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consumer_adapter&lt;sstables::sstable_writer&gt;::consume (1 samples, 0.02%)</title><rect x="1188.2" y="85" width="0.2" height="15.0" fill="rgb(211,228,10)" rx="2" ry="2" />
<text  x="1191.21" y="95.5" ></text>
</g>
<g >
<title>read_simple&lt;unsigned short, managed_bytes_basic_view&lt; (4 samples, 0.08%)</title><rect x="905.8" y="1781" width="0.9" height="15.0" fill="rgb(245,201,47)" rx="2" ry="2" />
<text  x="908.81" y="1791.5" ></text>
</g>
<g >
<title>sstables::mc::writer::write_cell (1 samples, 0.02%)</title><rect x="1186.2" y="69" width="0.2" height="15.0" fill="rgb(218,25,50)" rx="2" ry="2" />
<text  x="1189.19" y="79.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::query_options, std::default_delete&lt;cql3::query_options&gt; &gt;::~unique_ptr (3 samples, 0.06%)</title><rect x="839.0" y="1877" width="0.7" height="15.0" fill="rgb(220,228,22)" rx="2" ry="2" />
<text  x="842.03" y="1887.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::vector (1 samples, 0.02%)</title><rect x="64.2" y="1701" width="0.3" height="15.0" fill="rgb(213,161,29)" rx="2" ry="2" />
<text  x="67.24" y="1711.5" ></text>
</g>
<g >
<title>sstables::mc::writer::write_cells (2 samples, 0.04%)</title><rect x="1186.6" y="85" width="0.5" height="15.0" fill="rgb(232,228,13)" rx="2" ry="2" />
<text  x="1189.64" y="95.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::result_set, std::default_delete&lt;cql3::result_set&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="664.9" y="1909" width="0.2" height="15.0" fill="rgb(238,211,38)" rx="2" ry="2" />
<text  x="667.88" y="1919.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (2 samples, 0.04%)</title><rect x="83.3" y="2021" width="0.4" height="15.0" fill="rgb(224,10,29)" rx="2" ry="2" />
<text  x="86.29" y="2031.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (1 samples, 0.02%)</title><rect x="1116.5" y="1621" width="0.2" height="15.0" fill="rgb(227,23,18)" rx="2" ry="2" />
<text  x="1119.49" y="1631.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::statements::create_service_level_statement, std::default_delete&lt;cql3::statements::create_service_level_statement&gt;, true, true&gt;::__uniq_ptr_data (1 samples, 0.02%)</title><rect x="67.2" y="1781" width="0.2" height="15.0" fill="rgb(227,208,41)" rx="2" ry="2" />
<text  x="70.15" y="1791.5" ></text>
</g>
<g >
<title>absl::container_internal::operator== (1 samples, 0.02%)</title><rect x="758.6" y="1781" width="0.2" height="15.0" fill="rgb(237,106,43)" rx="2" ry="2" />
<text  x="761.57" y="1791.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperation (66 samples, 1.25%)</title><rect x="48.5" y="1781" width="14.8" height="15.0" fill="rgb(224,25,50)" rx="2" ry="2" />
<text  x="51.55" y="1791.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (6 samples, 0.11%)</title><rect x="1188.0" y="245" width="1.3" height="15.0" fill="rgb(213,19,18)" rx="2" ry="2" />
<text  x="1190.98" y="255.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;::operator (1 samples, 0.02%)</title><rect x="76.3" y="1829" width="0.3" height="15.0" fill="rgb(228,42,10)" rx="2" ry="2" />
<text  x="79.34" y="1839.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;, true&gt;::make&lt;seastar::lw_shared_ptr&lt;schema const&gt;&amp;, bool const&amp;&gt; (2 samples, 0.04%)</title><rect x="75.0" y="1781" width="0.4" height="15.0" fill="rgb(211,183,19)" rx="2" ry="2" />
<text  x="78.00" y="1791.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (14 samples, 0.27%)</title><rect x="1186.2" y="725" width="3.1" height="15.0" fill="rgb(229,125,10)" rx="2" ry="2" />
<text  x="1189.19" y="735.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.02%)</title><rect x="48.1" y="1685" width="0.2" height="15.0" fill="rgb(241,78,11)" rx="2" ry="2" />
<text  x="51.10" y="1695.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt; &gt;::invoke&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (110 samples, 2.09%)</title><rect x="997.5" y="1701" width="24.6" height="15.0" fill="rgb(216,97,7)" rx="2" ry="2" />
<text  x="1000.48" y="1711.5" >s..</text>
</g>
<g >
<title>mutation_fragment::consume&lt;flat_mutation_reader::impl::consumer_adapter&lt;sstables::sstable_writer&gt; &gt; (1 samples, 0.02%)</title><rect x="1186.2" y="213" width="0.2" height="15.0" fill="rgb(253,7,52)" rx="2" ry="2" />
<text  x="1189.19" y="223.5" ></text>
</g>
<g >
<title>seastar::internal::execution_stage_manager::flush (1 samples, 0.02%)</title><rect x="1163.8" y="1925" width="0.2" height="15.0" fill="rgb(223,228,46)" rx="2" ry="2" />
<text  x="1166.78" y="1935.5" ></text>
</g>
<g >
<title>cql3::raw_value_view::with_value&lt;cql3::update_parameters::make_cell (1 samples, 0.02%)</title><rect x="852.5" y="1701" width="0.2" height="15.0" fill="rgb(233,138,51)" rx="2" ry="2" />
<text  x="855.47" y="1711.5" ></text>
</g>
<g >
<title>posix_memalign (1 samples, 0.02%)</title><rect x="233.7" y="1493" width="0.2" height="15.0" fill="rgb(240,156,44)" rx="2" ry="2" />
<text  x="236.67" y="1503.5" ></text>
</g>
<g >
<title>database::find_column_family (7 samples, 0.13%)</title><rect x="1035.1" y="1765" width="1.6" height="15.0" fill="rgb(246,215,15)" rx="2" ry="2" />
<text  x="1038.13" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.02%)</title><rect x="346.4" y="1589" width="0.2" height="15.0" fill="rgb(248,94,24)" rx="2" ry="2" />
<text  x="349.41" y="1599.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (1 samples, 0.02%)</title><rect x="47.7" y="1749" width="0.2" height="15.0" fill="rgb(235,135,38)" rx="2" ry="2" />
<text  x="50.65" y="1759.5" ></text>
</g>
<g >
<title>remove_or_mark_as_unique_owner (1 samples, 0.02%)</title><rect x="10.7" y="1941" width="0.2" height="15.0" fill="rgb(245,157,49)" rx="2" ry="2" />
<text  x="13.67" y="1951.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_destroy_data (1 samples, 0.02%)</title><rect x="626.8" y="1813" width="0.2" height="15.0" fill="rgb(252,61,46)" rx="2" ry="2" />
<text  x="629.78" y="1823.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="49.7" y="1685" width="0.2" height="15.0" fill="rgb(248,79,7)" rx="2" ry="2" />
<text  x="52.67" y="1695.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.02%)</title><rect x="48.1" y="1733" width="0.2" height="15.0" fill="rgb(246,154,7)" rx="2" ry="2" />
<text  x="51.10" y="1743.5" ></text>
</g>
<g >
<title>service::endpoints_to_replica_ids (10 samples, 0.19%)</title><rect x="1142.3" y="1893" width="2.2" height="15.0" fill="rgb(237,115,1)" rx="2" ry="2" />
<text  x="1145.26" y="1903.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take (1 samples, 0.02%)</title><rect x="694.7" y="1877" width="0.2" height="15.0" fill="rgb(223,203,0)" rx="2" ry="2" />
<text  x="697.69" y="1887.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::CqlParser (3 samples, 0.06%)</title><rect x="24.1" y="1845" width="0.7" height="15.0" fill="rgb(217,195,16)" rx="2" ry="2" />
<text  x="27.12" y="1855.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="51.5" y="1653" width="0.2" height="15.0" fill="rgb(213,189,41)" rx="2" ry="2" />
<text  x="54.46" y="1663.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;query::read_command&gt;::dispose (8 samples, 0.15%)</title><rect x="101.2" y="1893" width="1.8" height="15.0" fill="rgb(234,4,40)" rx="2" ry="2" />
<text  x="104.22" y="1903.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::__uniq_ptr_data (1 samples, 0.02%)</title><rect x="62.2" y="1669" width="0.2" height="15.0" fill="rgb(237,69,0)" rx="2" ry="2" />
<text  x="65.22" y="1679.5" ></text>
</g>
<g >
<title>utils::tuple_hash::operator (4 samples, 0.08%)</title><rect x="812.8" y="1733" width="0.9" height="15.0" fill="rgb(222,116,10)" rx="2" ry="2" />
<text  x="815.80" y="1743.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.02%)</title><rect x="64.7" y="1669" width="0.2" height="15.0" fill="rgb(221,182,21)" rx="2" ry="2" />
<text  x="67.69" y="1679.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;::__uniq_ptr_impl&lt;std::default_delete&lt;cql3::operation::set_value&gt; &gt; (1 samples, 0.02%)</title><rect x="62.4" y="1701" width="0.3" height="15.0" fill="rgb(241,194,46)" rx="2" ry="2" />
<text  x="65.44" y="1711.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (8 samples, 0.15%)</title><rect x="915.9" y="1749" width="1.8" height="15.0" fill="rgb(224,115,20)" rx="2" ry="2" />
<text  x="918.90" y="1759.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser&lt;std::_Mem_fn&lt;std::unique_ptr&lt;cql3::statements::raw::parsed_statement, std::default_delete&lt;cql3::statements::raw::parsed_statement&gt; &gt;  (203 samples, 3.86%)</title><rect x="23.4" y="1877" width="45.5" height="15.0" fill="rgb(224,140,54)" rx="2" ry="2" />
<text  x="26.45" y="1887.5" >cql3..</text>
</g>
<g >
<title>managed_bytes::~managed_bytes (1 samples, 0.02%)</title><rect x="924.6" y="1797" width="0.3" height="15.0" fill="rgb(236,193,38)" rx="2" ry="2" />
<text  x="927.64" y="1807.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::constant&gt; (2 samples, 0.04%)</title><rect x="75.0" y="1733" width="0.4" height="15.0" fill="rgb(217,223,45)" rx="2" ry="2" />
<text  x="78.00" y="1743.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::unique_ptr&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, std::default_delete&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;, std::allocator&lt;std::unique_ptr&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, std::default_delete&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt; &gt; &gt;::_Vector_base (1 samples, 0.02%)</title><rect x="24.6" y="1813" width="0.2" height="15.0" fill="rgb(206,86,26)" rx="2" ry="2" />
<text  x="27.57" y="1823.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (14 samples, 0.27%)</title><rect x="1186.2" y="1541" width="3.1" height="15.0" fill="rgb(220,102,6)" rx="2" ry="2" />
<text  x="1189.19" y="1551.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (1 samples, 0.02%)</title><rect x="48.3" y="1733" width="0.2" height="15.0" fill="rgb(228,89,37)" rx="2" ry="2" />
<text  x="51.32" y="1743.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::destroy&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="55.7" y="1605" width="0.2" height="15.0" fill="rgb(208,17,44)" rx="2" ry="2" />
<text  x="58.72" y="1615.5" ></text>
</g>
<g >
<title>db::schema_tables::make_schema_mutations (2 samples, 0.04%)</title><rect x="108.4" y="1861" width="0.4" height="15.0" fill="rgb(248,71,37)" rx="2" ry="2" />
<text  x="111.39" y="1871.5" ></text>
</g>
<g >
<title>cql3::expr::constant::make_bool (1 samples, 0.02%)</title><rect x="73.7" y="1749" width="0.2" height="15.0" fill="rgb(231,180,23)" rx="2" ry="2" />
<text  x="76.65" y="1759.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="513.6" y="1637" width="0.2" height="15.0" fill="rgb(234,126,23)" rx="2" ry="2" />
<text  x="516.60" y="1647.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_pausable&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (5 samples, 0.09%)</title><rect x="686.8" y="1781" width="1.2" height="15.0" fill="rgb(207,162,16)" rx="2" ry="2" />
<text  x="689.85" y="1791.5" ></text>
</g>
<g >
<title>antlr3::IntStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::_LA (10 samples, 0.19%)</title><rect x="37.1" y="1669" width="2.3" height="15.0" fill="rgb(224,92,19)" rx="2" ry="2" />
<text  x="40.12" y="1679.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (2 samples, 0.04%)</title><rect x="445.7" y="1701" width="0.4" height="15.0" fill="rgb(232,70,39)" rx="2" ry="2" />
<text  x="448.69" y="1711.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (12 samples, 0.23%)</title><rect x="1038.0" y="1733" width="2.7" height="15.0" fill="rgb(212,105,33)" rx="2" ry="2" />
<text  x="1041.05" y="1743.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::alloc (7 samples, 0.13%)</title><rect x="244.9" y="1525" width="1.5" height="15.0" fill="rgb(233,141,45)" rx="2" ry="2" />
<text  x="247.88" y="1535.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::query_options, std::default_delete&lt;cql3::query_options&gt; &gt;::~unique_ptr (20 samples, 0.38%)</title><rect x="670.3" y="1909" width="4.4" height="15.0" fill="rgb(221,33,34)" rx="2" ry="2" />
<text  x="673.26" y="1919.5" ></text>
</g>
<g >
<title>sstables::write_unsigned_vint&lt;bytes_ostream&gt; (1 samples, 0.02%)</title><rect x="1186.2" y="37" width="0.2" height="15.0" fill="rgb(207,55,20)" rx="2" ry="2" />
<text  x="1189.19" y="47.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="575.5" y="1733" width="0.2" height="15.0" fill="rgb(236,206,10)" rx="2" ry="2" />
<text  x="578.46" y="1743.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;schema_registry_entry&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;schema_registry_entry&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (1 samples, 0.02%)</title><rect x="966.1" y="1765" width="0.2" height="15.0" fill="rgb(213,62,11)" rx="2" ry="2" />
<text  x="969.10" y="1775.5" ></text>
</g>
<g >
<title>bplus::tree&lt;long, intrusive_array&lt;memtable_entry&gt;, dht::raw_token_less_comparator, 16ul,  (40 samples, 0.76%)</title><rect x="491.2" y="1733" width="9.0" height="15.0" fill="rgb(249,7,6)" rx="2" ry="2" />
<text  x="494.19" y="1743.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (2 samples, 0.04%)</title><rect x="207.7" y="1605" width="0.4" height="15.0" fill="rgb(223,165,54)" rx="2" ry="2" />
<text  x="210.68" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt;::~_Variant_storage (1 samples, 0.02%)</title><rect x="849.1" y="1653" width="0.2" height="15.0" fill="rgb(236,212,33)" rx="2" ry="2" />
<text  x="852.11" y="1663.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::vector (2 samples, 0.04%)</title><rect x="74.3" y="1701" width="0.5" height="15.0" fill="rgb(232,132,2)" rx="2" ry="2" />
<text  x="77.32" y="1711.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::lru_entry, boost::intrusive::list_node_traits&lt;void*&gt;,  (3 samples, 0.06%)</title><rect x="742.9" y="1717" width="0.6" height="15.0" fill="rgb(211,221,23)" rx="2" ry="2" />
<text  x="745.88" y="1727.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (3 samples, 0.06%)</title><rect x="358.3" y="1605" width="0.7" height="15.0" fill="rgb(230,186,15)" rx="2" ry="2" />
<text  x="361.28" y="1615.5" ></text>
</g>
<g >
<title>mutation::mutation (1 samples, 0.02%)</title><rect x="109.1" y="1797" width="0.2" height="15.0" fill="rgb(251,127,17)" rx="2" ry="2" />
<text  x="112.06" y="1807.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::check_queue_size (1 samples, 0.02%)</title><rect x="1010.7" y="1621" width="0.2" height="15.0" fill="rgb(228,74,48)" rx="2" ry="2" />
<text  x="1013.70" y="1631.5" ></text>
</g>
<g >
<title>nonwrapping_interval&lt;dht::ring_position&gt;::nonwrapping_interval (5 samples, 0.09%)</title><rect x="919.5" y="1797" width="1.1" height="15.0" fill="rgb(235,0,21)" rx="2" ry="2" />
<text  x="922.49" y="1807.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::make_ready&lt; (1 samples, 0.02%)</title><rect x="140.4" y="1877" width="0.3" height="15.0" fill="rgb(239,97,1)" rx="2" ry="2" />
<text  x="143.44" y="1887.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::digest_read_result&gt;::then_wrapped_nrvo&lt;void, service::abstract_read_executor::execute (13 samples, 0.25%)</title><rect x="970.8" y="1749" width="2.9" height="15.0" fill="rgb(234,210,19)" rx="2" ry="2" />
<text  x="973.81" y="1759.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (2 samples, 0.04%)</title><rect x="63.3" y="1573" width="0.5" height="15.0" fill="rgb(213,188,49)" rx="2" ry="2" />
<text  x="66.34" y="1583.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;schema_registry_entry&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;schema_registry_entry&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (8 samples, 0.15%)</title><rect x="964.1" y="1749" width="1.8" height="15.0" fill="rgb(244,66,34)" rx="2" ry="2" />
<text  x="967.09" y="1759.5" ></text>
</g>
<g >
<title>cql3::query_processor::process_authorized_statement (1 samples, 0.02%)</title><rect x="819.3" y="1861" width="0.2" height="15.0" fill="rgb(226,12,24)" rx="2" ry="2" />
<text  x="822.30" y="1871.5" ></text>
</g>
<g >
<title>basic_atomic_cell_view&lt; (1 samples, 0.02%)</title><rect x="1127.0" y="1525" width="0.2" height="15.0" fill="rgb(205,81,44)" rx="2" ry="2" />
<text  x="1130.02" y="1535.5" ></text>
</g>
<g >
<title>database::find_schema (4 samples, 0.08%)</title><rect x="757.2" y="1813" width="0.9" height="15.0" fill="rgb(208,185,11)" rx="2" ry="2" />
<text  x="760.22" y="1823.5" ></text>
</g>
<g >
<title>cql3::query_options::get_value_at (5 samples, 0.09%)</title><rect x="885.4" y="1701" width="1.1" height="15.0" fill="rgb(251,152,45)" rx="2" ry="2" />
<text  x="888.42" y="1711.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (287 samples, 5.45%)</title><rect x="18.3" y="2021" width="64.3" height="15.0" fill="rgb(240,145,38)" rx="2" ry="2" />
<text  x="21.29" y="2031.5" >seastar..</text>
</g>
<g >
<title>ser::read_frame_size&lt;seastar::simple_memory_input_stream&gt; (1 samples, 0.02%)</title><rect x="1115.6" y="1605" width="0.2" height="15.0" fill="rgb(243,10,12)" rx="2" ry="2" />
<text  x="1118.59" y="1615.5" ></text>
</g>
<g >
<title>query_data_on_all_shards (1 samples, 0.02%)</title><rect x="956.5" y="1669" width="0.2" height="15.0" fill="rgb(251,208,12)" rx="2" ry="2" />
<text  x="959.47" y="1679.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (1 samples, 0.02%)</title><rect x="690.7" y="1909" width="0.2" height="15.0" fill="rgb(213,66,19)" rx="2" ry="2" />
<text  x="693.66" y="1919.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::storage_proxy::mutate_internal&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="715.8" y="1925" width="0.2" height="15.0" fill="rgb(237,173,35)" rx="2" ry="2" />
<text  x="718.76" y="1935.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="1144.3" y="1845" width="0.2" height="15.0" fill="rgb(254,94,18)" rx="2" ry="2" />
<text  x="1147.28" y="1855.5" ></text>
</g>
<g >
<title>seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;::swap (3 samples, 0.06%)</title><rect x="750.5" y="1829" width="0.7" height="15.0" fill="rgb(248,203,30)" rx="2" ry="2" />
<text  x="753.50" y="1839.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::clear (6 samples, 0.11%)</title><rect x="194.5" y="1701" width="1.3" height="15.0" fill="rgb(212,145,41)" rx="2" ry="2" />
<text  x="197.45" y="1711.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (1 samples, 0.02%)</title><rect x="20.3" y="1957" width="0.2" height="15.0" fill="rgb(214,14,32)" rx="2" ry="2" />
<text  x="23.31" y="1967.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (3 samples, 0.06%)</title><rect x="350.2" y="1621" width="0.7" height="15.0" fill="rgb(226,208,8)" rx="2" ry="2" />
<text  x="353.22" y="1631.5" ></text>
</g>
<g >
<title>partition_version_ref::operator* (1 samples, 0.02%)</title><rect x="581.3" y="1685" width="0.2" height="15.0" fill="rgb(230,191,20)" rx="2" ry="2" />
<text  x="584.29" y="1695.5" ></text>
</g>
<g >
<title>mutation_partition::apply_monotonically (1 samples, 0.02%)</title><rect x="1120.7" y="1653" width="0.3" height="15.0" fill="rgb(218,138,47)" rx="2" ry="2" />
<text  x="1123.75" y="1663.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (1 samples, 0.02%)</title><rect x="48.3" y="1749" width="0.2" height="15.0" fill="rgb(226,67,48)" rx="2" ry="2" />
<text  x="51.32" y="1759.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;compact_for_query&lt; (1 samples, 0.02%)</title><rect x="450.6" y="1781" width="0.2" height="15.0" fill="rgb(229,158,13)" rx="2" ry="2" />
<text  x="453.62" y="1791.5" ></text>
</g>
<g >
<title>database::has_keyspace (2 samples, 0.04%)</title><rect x="80.8" y="1845" width="0.5" height="15.0" fill="rgb(253,2,23)" rx="2" ry="2" />
<text  x="83.82" y="1855.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::~vector (4 samples, 0.08%)</title><rect x="1111.1" y="1845" width="0.9" height="15.0" fill="rgb(239,29,12)" rx="2" ry="2" />
<text  x="1114.11" y="1855.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;mutation_reader_merger::operator (26 samples, 0.49%)</title><rect x="295.8" y="1733" width="5.8" height="15.0" fill="rgb(247,148,53)" rx="2" ry="2" />
<text  x="298.75" y="1743.5" ></text>
</g>
<g >
<title>service::get_local_priority_manager (5 samples, 0.09%)</title><rect x="621.4" y="1861" width="1.1" height="15.0" fill="rgb(235,209,1)" rx="2" ry="2" />
<text  x="624.40" y="1871.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (1 samples, 0.02%)</title><rect x="64.5" y="1669" width="0.2" height="15.0" fill="rgb(222,222,24)" rx="2" ry="2" />
<text  x="67.46" y="1679.5" ></text>
</g>
<g >
<title>std::make_unique&lt;multishard_combining_reader, dht::sharder const&amp;, seastar::shared_ptr&lt;reader_lifecycle_policy&gt;, seastar::lw_shared_ptr&lt;schema const&gt;, reader_permit, nonwrapping_interval&lt;dht::ring_position&gt; const&amp;, query::partition_slice const&amp;, seastar::io_priority_class const&amp;, tracing::trace_state_ptr, seastar::bool_class&lt;flat_mutation_reader::partition_range_forwarding_tag&gt;&amp;&gt; (1 samples, 0.02%)</title><rect x="956.5" y="1525" width="0.2" height="15.0" fill="rgb(214,211,50)" rx="2" ry="2" />
<text  x="959.47" y="1535.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (4 samples, 0.08%)</title><rect x="96.5" y="1909" width="0.9" height="15.0" fill="rgb(214,94,10)" rx="2" ry="2" />
<text  x="99.51" y="1919.5" ></text>
</g>
<g >
<title>database::query (1 samples, 0.02%)</title><rect x="991.7" y="1701" width="0.2" height="15.0" fill="rgb(249,158,34)" rx="2" ry="2" />
<text  x="994.65" y="1711.5" ></text>
</g>
<g >
<title>operator delete (12 samples, 0.23%)</title><rect x="590.9" y="1765" width="2.7" height="15.0" fill="rgb(248,74,23)" rx="2" ry="2" />
<text  x="593.92" y="1775.5" ></text>
</g>
<g >
<title>cql3::terminal::to_expression (1 samples, 0.02%)</title><rect x="854.5" y="1701" width="0.2" height="15.0" fill="rgb(252,187,28)" rx="2" ry="2" />
<text  x="857.49" y="1711.5" ></text>
</g>
<g >
<title>bytes_view_hasher::finalize (3 samples, 0.06%)</title><rect x="748.9" y="1685" width="0.7" height="15.0" fill="rgb(234,137,50)" rx="2" ry="2" />
<text  x="751.93" y="1695.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;seastar::shared_ptr&lt;cql3::relation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::relation&gt; &gt; &gt;::_Vector_base (1 samples, 0.02%)</title><rect x="65.8" y="1765" width="0.2" height="15.0" fill="rgb(218,141,28)" rx="2" ry="2" />
<text  x="68.81" y="1775.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::set_urgent_state (2 samples, 0.04%)</title><rect x="659.3" y="1909" width="0.4" height="15.0" fill="rgb(254,174,45)" rx="2" ry="2" />
<text  x="662.28" y="1919.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.02%)</title><rect x="50.3" y="1637" width="0.3" height="15.0" fill="rgb(217,214,1)" rx="2" ry="2" />
<text  x="53.34" y="1647.5" ></text>
</g>
<g >
<title>memtable::evict_entry (2 samples, 0.04%)</title><rect x="18.7" y="1989" width="0.5" height="15.0" fill="rgb(233,23,15)" rx="2" ry="2" />
<text  x="21.74" y="1999.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt;::allocate (1 samples, 0.02%)</title><rect x="285.9" y="1621" width="0.2" height="15.0" fill="rgb(229,142,4)" rx="2" ry="2" />
<text  x="288.89" y="1631.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_range_tombstone (8 samples, 0.15%)</title><rect x="268.2" y="1605" width="1.8" height="15.0" fill="rgb(218,36,45)" rx="2" ry="2" />
<text  x="271.19" y="1615.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, cql3::statements::alter_service_level_statement*, std::default_delete&lt;cql3::statements::alter_service_level_statement&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="66.7" y="1733" width="0.2" height="15.0" fill="rgb(243,58,10)" rx="2" ry="2" />
<text  x="69.70" y="1743.5" ></text>
</g>
<g >
<title>std::__equal&lt;false&gt;::equal&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;*, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const*&gt; (7 samples, 0.13%)</title><rect x="788.2" y="1573" width="1.5" height="15.0" fill="rgb(229,190,11)" rx="2" ry="2" />
<text  x="791.15" y="1583.5" ></text>
</g>
<g >
<title>atomic_cell::make_live (1 samples, 0.02%)</title><rect x="852.5" y="1685" width="0.2" height="15.0" fill="rgb(214,109,17)" rx="2" ry="2" />
<text  x="855.47" y="1695.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_map&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::at&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt; &gt; (21 samples, 0.40%)</title><rect x="758.1" y="1797" width="4.7" height="15.0" fill="rgb(219,191,38)" rx="2" ry="2" />
<text  x="761.12" y="1807.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (1 samples, 0.02%)</title><rect x="893.9" y="1701" width="0.3" height="15.0" fill="rgb(240,136,34)" rx="2" ry="2" />
<text  x="896.94" y="1711.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::get_promise (2 samples, 0.04%)</title><rect x="755.0" y="1829" width="0.4" height="15.0" fill="rgb(239,1,38)" rx="2" ry="2" />
<text  x="757.98" y="1839.5" ></text>
</g>
<g >
<title>locator::calculate_effective_replication_map (1 samples, 0.02%)</title><rect x="109.7" y="1925" width="0.3" height="15.0" fill="rgb(216,85,19)" rx="2" ry="2" />
<text  x="112.73" y="1935.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (2 samples, 0.04%)</title><rect x="49.4" y="1749" width="0.5" height="15.0" fill="rgb(254,33,6)" rx="2" ry="2" />
<text  x="52.45" y="1759.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.04%)</title><rect x="897.7" y="1701" width="0.5" height="15.0" fill="rgb(227,147,22)" rx="2" ry="2" />
<text  x="900.75" y="1711.5" ></text>
</g>
<g >
<title>atomic_cell_or_collection::copy (1 samples, 0.02%)</title><rect x="109.1" y="1669" width="0.2" height="15.0" fill="rgb(252,125,10)" rx="2" ry="2" />
<text  x="112.06" y="1679.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (1 samples, 0.02%)</title><rect x="604.6" y="1797" width="0.2" height="15.0" fill="rgb(214,3,24)" rx="2" ry="2" />
<text  x="607.59" y="1807.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_rehash_aux (8 samples, 0.15%)</title><rect x="1146.5" y="1845" width="1.8" height="15.0" fill="rgb(216,35,36)" rx="2" ry="2" />
<text  x="1149.52" y="1855.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (2 samples, 0.04%)</title><rect x="927.3" y="1813" width="0.5" height="15.0" fill="rgb(227,133,3)" rx="2" ry="2" />
<text  x="930.33" y="1823.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.02%)</title><rect x="20.3" y="1941" width="0.2" height="15.0" fill="rgb(234,5,43)" rx="2" ry="2" />
<text  x="23.31" y="1951.5" ></text>
</g>
<g >
<title>std::function&lt;bool  (2 samples, 0.04%)</title><rect x="568.5" y="1829" width="0.5" height="15.0" fill="rgb(223,36,34)" rx="2" ry="2" />
<text  x="571.51" y="1839.5" ></text>
</g>
<g >
<title>utils::config_file::named_value&lt;unsigned long&gt;::the_value (2 samples, 0.04%)</title><rect x="1109.1" y="1829" width="0.4" height="15.0" fill="rgb(237,185,2)" rx="2" ry="2" />
<text  x="1112.09" y="1839.5" ></text>
</g>
<g >
<title>schema_registry_entry::load (1 samples, 0.02%)</title><rect x="107.0" y="1813" width="0.3" height="15.0" fill="rgb(228,51,40)" rx="2" ry="2" />
<text  x="110.04" y="1823.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="1128.8" y="1573" width="0.2" height="15.0" fill="rgb(236,66,37)" rx="2" ry="2" />
<text  x="1131.81" y="1583.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (384 samples, 7.29%)</title><rect x="341.0" y="1653" width="86.1" height="15.0" fill="rgb(240,29,47)" rx="2" ry="2" />
<text  x="344.03" y="1663.5" >compact_mu..</text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="209.0" y="1653" width="0.2" height="15.0" fill="rgb(223,127,18)" rx="2" ry="2" />
<text  x="212.02" y="1663.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (3 samples, 0.06%)</title><rect x="61.1" y="1509" width="0.7" height="15.0" fill="rgb(212,181,32)" rx="2" ry="2" />
<text  x="64.10" y="1519.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::visit&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (1 samples, 0.02%)</title><rect x="1129.9" y="1637" width="0.3" height="15.0" fill="rgb(208,139,16)" rx="2" ry="2" />
<text  x="1132.94" y="1647.5" ></text>
</g>
<g >
<title>compound_type&lt; (1 samples, 0.02%)</title><rect x="1187.8" y="53" width="0.2" height="15.0" fill="rgb(242,136,2)" rx="2" ry="2" />
<text  x="1190.76" y="63.5" ></text>
</g>
<g >
<title>cql3::statements::update_statement::add_update_for_key (16 samples, 0.30%)</title><rect x="852.0" y="1781" width="3.6" height="15.0" fill="rgb(238,210,5)" rx="2" ry="2" />
<text  x="855.02" y="1791.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;cql3::single_column_relation, true&gt;::make&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, cql3::expr::oper_t&amp;, cql3::expr::expression&gt; (1 samples, 0.02%)</title><rect x="65.1" y="1733" width="0.3" height="15.0" fill="rgb(232,210,41)" rx="2" ry="2" />
<text  x="68.13" y="1743.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume_in_thread&lt;sstables::sstable_writer, flat_mutation_reader::no_filter&gt; (1 samples, 0.02%)</title><rect x="1189.1" y="85" width="0.2" height="15.0" fill="rgb(226,189,36)" rx="2" ry="2" />
<text  x="1192.10" y="95.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (4 samples, 0.08%)</title><rect x="566.5" y="1733" width="0.9" height="15.0" fill="rgb(234,26,10)" rx="2" ry="2" />
<text  x="569.49" y="1743.5" ></text>
</g>
<g >
<title>ser::deletable_row_view::shadowable_deleted_at (2 samples, 0.04%)</title><rect x="1120.1" y="1653" width="0.4" height="15.0" fill="rgb(221,136,20)" rx="2" ry="2" />
<text  x="1123.07" y="1663.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a24d06c195bd126a1ed21a4439682d7f2fceb96c] (1 samples, 0.02%)</title><rect x="508.4" y="1637" width="0.3" height="15.0" fill="rgb(209,209,11)" rx="2" ry="2" />
<text  x="511.45" y="1647.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::trivial_direct_destroy (2 samples, 0.04%)</title><rect x="133.0" y="1813" width="0.5" height="15.0" fill="rgb(246,215,9)" rx="2" ry="2" />
<text  x="136.04" y="1823.5" ></text>
</g>
<g >
<title>db::system_keyspace_make (1 samples, 0.02%)</title><rect x="20.1" y="1733" width="0.2" height="15.0" fill="rgb(236,112,6)" rx="2" ry="2" />
<text  x="23.09" y="1743.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (2 samples, 0.04%)</title><rect x="1039.2" y="1701" width="0.4" height="15.0" fill="rgb(244,4,10)" rx="2" ry="2" />
<text  x="1042.17" y="1711.5" ></text>
</g>
<g >
<title>std::filesystem::__cxx11::path::operator/= (1 samples, 0.02%)</title><rect x="10.9" y="2021" width="0.2" height="15.0" fill="rgb(225,138,26)" rx="2" ry="2" />
<text  x="13.90" y="2031.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::~vector (3 samples, 0.06%)</title><rect x="1027.7" y="1701" width="0.7" height="15.0" fill="rgb(219,192,1)" rx="2" ry="2" />
<text  x="1030.74" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_need_rehash (3 samples, 0.06%)</title><rect x="1149.9" y="1877" width="0.7" height="15.0" fill="rgb(206,193,25)" rx="2" ry="2" />
<text  x="1152.88" y="1887.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="142.9" y="1701" width="0.2" height="15.0" fill="rgb(229,46,25)" rx="2" ry="2" />
<text  x="145.90" y="1711.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.02%)</title><rect x="1186.4" y="293" width="0.2" height="15.0" fill="rgb(215,142,44)" rx="2" ry="2" />
<text  x="1189.41" y="303.5" ></text>
</g>
<g >
<title>antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;::RecognizerType&lt;antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::RecognizerType (1 samples, 0.02%)</title><rect x="24.1" y="1813" width="0.2" height="15.0" fill="rgb(251,211,3)" rx="2" ry="2" />
<text  x="27.12" y="1823.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.04%)</title><rect x="556.9" y="1813" width="0.4" height="15.0" fill="rgb(231,103,15)" rx="2" ry="2" />
<text  x="559.86" y="1823.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE14then_impl_nrvoIZNS6_14discard_resultEvEUlDpOT_E_NS0_IvEEEET0_OT_ (1 samples, 0.02%)</title><rect x="720.9" y="1893" width="0.2" height="15.0" fill="rgb(224,120,22)" rx="2" ry="2" />
<text  x="723.91" y="1903.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (2 samples, 0.04%)</title><rect x="107.5" y="1365" width="0.4" height="15.0" fill="rgb(216,80,44)" rx="2" ry="2" />
<text  x="110.49" y="1375.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::clear (1 samples, 0.02%)</title><rect x="982.7" y="1749" width="0.2" height="15.0" fill="rgb(233,164,49)" rx="2" ry="2" />
<text  x="985.69" y="1759.5" ></text>
</g>
<g >
<title>mutation_fragment::consume&lt;flat_mutation_reader::impl::consumer_adapter&lt;sstables::sstable_writer&gt; &gt; (1 samples, 0.02%)</title><rect x="1188.0" y="117" width="0.2" height="15.0" fill="rgb(227,40,15)" rx="2" ry="2" />
<text  x="1190.98" y="127.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::then_wrapped_nrvo&lt;void, service::abstract_read_executor::make_data_requests (15 samples, 0.28%)</title><rect x="985.2" y="1717" width="3.3" height="15.0" fill="rgb(244,184,49)" rx="2" ry="2" />
<text  x="988.15" y="1727.5" ></text>
</g>
<g >
<title>sstables::mc::writer::write_clustered&lt;clustering_row&gt; (1 samples, 0.02%)</title><rect x="1187.1" y="117" width="0.2" height="15.0" fill="rgb(223,121,16)" rx="2" ry="2" />
<text  x="1190.09" y="127.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (2 samples, 0.04%)</title><rect x="154.6" y="1861" width="0.4" height="15.0" fill="rgb(236,213,35)" rx="2" ry="2" />
<text  x="157.56" y="1871.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_S_construct&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (8 samples, 0.15%)</title><rect x="26.6" y="1669" width="1.8" height="15.0" fill="rgb(206,204,8)" rx="2" ry="2" />
<text  x="29.58" y="1679.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.02%)</title><rect x="841.3" y="1829" width="0.2" height="15.0" fill="rgb(228,128,17)" rx="2" ry="2" />
<text  x="844.27" y="1839.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (1 samples, 0.02%)</title><rect x="1105.5" y="1813" width="0.2" height="15.0" fill="rgb(228,18,5)" rx="2" ry="2" />
<text  x="1108.51" y="1823.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::partition_tombstone (7 samples, 0.13%)</title><rect x="532.2" y="1669" width="1.6" height="15.0" fill="rgb(249,105,47)" rx="2" ry="2" />
<text  x="535.20" y="1679.5" ></text>
</g>
<g >
<title>reader_permit::impl::~impl (3 samples, 0.06%)</title><rect x="114.0" y="1893" width="0.7" height="15.0" fill="rgb(249,118,53)" rx="2" ry="2" />
<text  x="116.99" y="1903.5" ></text>
</g>
<g >
<title>sstables::mc::writer::consume_end_of_stream (1 samples, 0.02%)</title><rect x="1177.0" y="1909" width="0.2" height="15.0" fill="rgb(212,179,16)" rx="2" ry="2" />
<text  x="1180.00" y="1919.5" ></text>
</g>
<g >
<title>auth::resource::resource (1 samples, 0.02%)</title><rect x="79.0" y="1877" width="0.3" height="15.0" fill="rgb(219,215,42)" rx="2" ry="2" />
<text  x="82.03" y="1887.5" ></text>
</g>
<g >
<title>mutation_partition::~mutation_partition (1 samples, 0.02%)</title><rect x="1118.3" y="1637" width="0.2" height="15.0" fill="rgb(231,46,44)" rx="2" ry="2" />
<text  x="1121.28" y="1647.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (1 samples, 0.02%)</title><rect x="271.1" y="1637" width="0.2" height="15.0" fill="rgb(253,155,15)" rx="2" ry="2" />
<text  x="274.10" y="1647.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;gms::inet_address, gms::inet_address, std::allocator&lt;gms::inet_address&gt;, std::__detail::_Identity, std::equal_to&lt;gms::inet_address&gt;, std::hash&lt;gms::inet_address&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert&lt;gms::inet_address const&amp;, std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;gms::inet_address, false&gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="20.3" y="1797" width="0.2" height="15.0" fill="rgb(231,149,31)" rx="2" ry="2" />
<text  x="23.31" y="1807.5" ></text>
</g>
<g >
<title>std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt;::emplace_back&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; (12 samples, 0.23%)</title><rect x="285.9" y="1637" width="2.7" height="15.0" fill="rgb(216,97,33)" rx="2" ry="2" />
<text  x="288.89" y="1647.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;std::tuple&lt;seastar::lw_shared_ptr&lt;query::result&gt;, cache_temperature&gt; &gt;::clear (1 samples, 0.02%)</title><rect x="719.1" y="1925" width="0.2" height="15.0" fill="rgb(253,67,41)" rx="2" ry="2" />
<text  x="722.12" y="1935.5" ></text>
</g>
<g >
<title>schema::column_at (4 samples, 0.08%)</title><rect x="422.6" y="1589" width="0.9" height="15.0" fill="rgb(231,22,27)" rx="2" ry="2" />
<text  x="425.61" y="1599.5" ></text>
</g>
<g >
<title>seastar::thread_pool::work (1 samples, 0.02%)</title><rect x="1189.8" y="2005" width="0.2" height="15.0" fill="rgb(245,37,32)" rx="2" ry="2" />
<text  x="1192.78" y="2015.5" ></text>
</g>
<g >
<title>intrusive_b::node&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (1 samples, 0.02%)</title><rect x="109.1" y="1749" width="0.2" height="15.0" fill="rgb(249,132,2)" rx="2" ry="2" />
<text  x="112.06" y="1759.5" ></text>
</g>
<g >
<title>__start_context (2 samples, 0.04%)</title><rect x="83.3" y="2005" width="0.4" height="15.0" fill="rgb(250,209,42)" rx="2" ry="2" />
<text  x="86.29" y="2015.5" ></text>
</g>
<g >
<title>auth::data_resource_view::keyspace (3 samples, 0.06%)</title><rect x="793.1" y="1541" width="0.7" height="15.0" fill="rgb(209,55,1)" rx="2" ry="2" />
<text  x="796.08" y="1551.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (1 samples, 0.02%)</title><rect x="1079.7" y="1797" width="0.3" height="15.0" fill="rgb(233,116,5)" rx="2" ry="2" />
<text  x="1082.73" y="1807.5" ></text>
</g>
<g >
<title>tracing::global_trace_state_ptr::get (1 samples, 0.02%)</title><rect x="1028.4" y="1701" width="0.2" height="15.0" fill="rgb(244,57,7)" rx="2" ry="2" />
<text  x="1031.41" y="1711.5" ></text>
</g>
<g >
<title>std::variant&lt;fragmented_temporary_buffer::view, managed_bytes_basic_view&lt; (5 samples, 0.09%)</title><rect x="898.2" y="1733" width="1.1" height="15.0" fill="rgb(249,102,41)" rx="2" ry="2" />
<text  x="901.19" y="1743.5" ></text>
</g>
<g >
<title>table::set_compaction_strategy (1 samples, 0.02%)</title><rect x="109.5" y="1893" width="0.2" height="15.0" fill="rgb(240,50,50)" rx="2" ry="2" />
<text  x="112.51" y="1903.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (3 samples, 0.06%)</title><rect x="1024.8" y="1701" width="0.7" height="15.0" fill="rgb(226,32,48)" rx="2" ry="2" />
<text  x="1027.82" y="1711.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (3 samples, 0.06%)</title><rect x="53.0" y="1637" width="0.7" height="15.0" fill="rgb(252,164,4)" rx="2" ry="2" />
<text  x="56.03" y="1647.5" ></text>
</g>
<g >
<title>cql3::single_column_relation::new_EQ_restriction (5 samples, 0.09%)</title><rect x="72.8" y="1797" width="1.1" height="15.0" fill="rgb(236,22,12)" rx="2" ry="2" />
<text  x="75.75" y="1807.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, auth::service::start (1 samples, 0.02%)</title><rect x="688.0" y="1925" width="0.2" height="15.0" fill="rgb(244,97,0)" rx="2" ry="2" />
<text  x="690.97" y="1935.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;void&gt;, database*, seastar::lw_shared_ptr&lt;schema const&gt;, frozen_mutation const&amp;, tracing::trace_state_ptr, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, seastar::bool_class&lt;db::force_sync_tag&gt; &gt;::operator (1 samples, 0.02%)</title><rect x="1124.1" y="1557" width="0.2" height="15.0" fill="rgb(231,222,53)" rx="2" ry="2" />
<text  x="1127.11" y="1567.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (14 samples, 0.27%)</title><rect x="1186.2" y="1269" width="3.1" height="15.0" fill="rgb(245,221,21)" rx="2" ry="2" />
<text  x="1189.19" y="1279.5" ></text>
</g>
<g >
<title>cql3::expr::prepare_term (2 samples, 0.04%)</title><rect x="73.2" y="1765" width="0.5" height="15.0" fill="rgb(209,68,44)" rx="2" ry="2" />
<text  x="76.20" y="1775.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::partition_snapshot_flat_reader&lt;memtable&amp;&gt; (64 samples, 1.22%)</title><rect x="521.4" y="1717" width="14.4" height="15.0" fill="rgb(229,83,9)" rx="2" ry="2" />
<text  x="524.45" y="1727.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (2 samples, 0.04%)</title><rect x="1036.3" y="1717" width="0.4" height="15.0" fill="rgb(208,187,51)" rx="2" ry="2" />
<text  x="1039.25" y="1727.5" ></text>
</g>
<g >
<title>cql3::authorized_prepared_statements_cache_key::hash (12 samples, 0.23%)</title><rect x="747.4" y="1749" width="2.6" height="15.0" fill="rgb(241,182,40)" rx="2" ry="2" />
<text  x="750.36" y="1759.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="539.4" y="1733" width="0.2" height="15.0" fill="rgb(228,2,4)" rx="2" ry="2" />
<text  x="542.38" y="1743.5" ></text>
</g>
<g >
<title>sstables::seal_statistics (1 samples, 0.02%)</title><rect x="1177.0" y="1893" width="0.2" height="15.0" fill="rgb(228,207,40)" rx="2" ry="2" />
<text  x="1180.00" y="1903.5" ></text>
</g>
<g >
<title>std::queue&lt;reader_concurrency_semaphore::entry, seastar::circular_buffer&lt;reader_concurrency_semaphore::entry, std::allocator&lt;reader_concurrency_semaphore::entry&gt; &gt; &gt;::pop (2 samples, 0.04%)</title><rect x="635.7" y="1909" width="0.5" height="15.0" fill="rgb(216,225,9)" rx="2" ry="2" />
<text  x="638.75" y="1919.5" ></text>
</g>
<g >
<title>seastar::do_until&lt;scanning_reader::fill_buffer (2 samples, 0.04%)</title><rect x="107.5" y="1445" width="0.4" height="15.0" fill="rgb(246,219,22)" rx="2" ry="2" />
<text  x="110.49" y="1455.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::emplace_back&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; (4 samples, 0.08%)</title><rect x="55.0" y="1717" width="0.9" height="15.0" fill="rgb(248,66,9)" rx="2" ry="2" />
<text  x="58.05" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::at (2 samples, 0.04%)</title><rect x="757.7" y="1781" width="0.4" height="15.0" fill="rgb(233,132,2)" rx="2" ry="2" />
<text  x="760.67" y="1791.5" ></text>
</g>
<g >
<title>mutation_querier::prepare_writers (4 samples, 0.08%)</title><rect x="359.0" y="1605" width="0.9" height="15.0" fill="rgb(248,13,27)" rx="2" ry="2" />
<text  x="361.96" y="1615.5" ></text>
</g>
<g >
<title>partition_entry::evict (1 samples, 0.02%)</title><rect x="10.7" y="1957" width="0.2" height="15.0" fill="rgb(253,20,51)" rx="2" ry="2" />
<text  x="13.67" y="1967.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::fetch (2 samples, 0.04%)</title><rect x="847.1" y="1893" width="0.4" height="15.0" fill="rgb(247,154,34)" rx="2" ry="2" />
<text  x="850.09" y="1903.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.02%)</title><rect x="57.3" y="1669" width="0.2" height="15.0" fill="rgb(225,112,26)" rx="2" ry="2" />
<text  x="60.29" y="1679.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::move_it (2 samples, 0.04%)</title><rect x="718.7" y="1925" width="0.4" height="15.0" fill="rgb(238,207,46)" rx="2" ry="2" />
<text  x="721.67" y="1935.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.02%)</title><rect x="64.7" y="1541" width="0.2" height="15.0" fill="rgb(214,106,24)" rx="2" ry="2" />
<text  x="67.69" y="1551.5" ></text>
</g>
<g >
<title>abstract_type::bound_value_needs_to_be_reserialized (2 samples, 0.04%)</title><rect x="883.8" y="1701" width="0.5" height="15.0" fill="rgb(244,152,25)" rx="2" ry="2" />
<text  x="886.85" y="1711.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_data_request (1 samples, 0.02%)</title><rect x="956.5" y="1717" width="0.2" height="15.0" fill="rgb(243,83,46)" rx="2" ry="2" />
<text  x="959.47" y="1727.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::partition_snapshot_flat_reader&lt;memtable&amp;&gt; (37 samples, 0.70%)</title><rect x="525.7" y="1685" width="8.3" height="15.0" fill="rgb(228,146,50)" rx="2" ry="2" />
<text  x="528.70" y="1695.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;std::unordered_map&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, std::optional&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;, std::hash&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, std::equal_to&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, std::optional&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt; &gt; &gt; &gt;::_Optional_payload_base (1 samples, 0.02%)</title><rect x="856.7" y="1829" width="0.3" height="15.0" fill="rgb(219,101,2)" rx="2" ry="2" />
<text  x="859.73" y="1839.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (3 samples, 0.06%)</title><rect x="155.7" y="1845" width="0.7" height="15.0" fill="rgb(236,19,30)" rx="2" ry="2" />
<text  x="158.68" y="1855.5" ></text>
</g>
<g >
<title>flat_mutation_reader::close (54 samples, 1.03%)</title><rect x="573.9" y="1765" width="12.1" height="15.0" fill="rgb(216,223,25)" rx="2" ry="2" />
<text  x="576.89" y="1775.5" ></text>
</g>
<g >
<title>seastar::internal::uninitialized_wrapper_base&lt;service::storage_proxy_coordinator_query_result, false&gt;::uninitialized_set&lt;service::storage_proxy_coordinator_query_result&gt; (1 samples, 0.02%)</title><rect x="1140.7" y="1909" width="0.2" height="15.0" fill="rgb(244,226,29)" rx="2" ry="2" />
<text  x="1143.69" y="1919.5" ></text>
</g>
<g >
<title>__tls_init (1 samples, 0.02%)</title><rect x="1187.5" y="37" width="0.3" height="15.0" fill="rgb(206,2,50)" rx="2" ry="2" />
<text  x="1190.53" y="47.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.02%)</title><rect x="51.5" y="1589" width="0.2" height="15.0" fill="rgb(210,172,3)" rx="2" ry="2" />
<text  x="54.46" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;, nonwrapping_interval&lt;managed_bytes&gt; &gt;::~_Variant_storage (1 samples, 0.02%)</title><rect x="929.1" y="1829" width="0.2" height="15.0" fill="rgb(216,111,15)" rx="2" ry="2" />
<text  x="932.12" y="1839.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.04%)</title><rect x="753.2" y="1765" width="0.4" height="15.0" fill="rgb(215,20,37)" rx="2" ry="2" />
<text  x="756.19" y="1775.5" ></text>
</g>
<g >
<title>service::client_state::check_has_permission (142 samples, 2.70%)</title><rect x="771.8" y="1765" width="31.8" height="15.0" fill="rgb(242,156,45)" rx="2" ry="2" />
<text  x="774.79" y="1775.5" >se..</text>
</g>
<g >
<title>seastar::internal::awaiter&lt;query::result_memory_accounter&gt;::awaiter (1 samples, 0.02%)</title><rect x="139.8" y="1877" width="0.2" height="15.0" fill="rgb(236,227,45)" rx="2" ry="2" />
<text  x="142.77" y="1887.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (14 samples, 0.27%)</title><rect x="1186.2" y="757" width="3.1" height="15.0" fill="rgb(246,156,30)" rx="2" ry="2" />
<text  x="1189.19" y="767.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::move_it (1 samples, 0.02%)</title><rect x="701.4" y="1893" width="0.2" height="15.0" fill="rgb(230,9,23)" rx="2" ry="2" />
<text  x="704.42" y="1903.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIN7seastar10shared_ptrIN4cql34termEEEEER18overloaded_functorIJZNS6_4expr12prepare_termERKNSB_10expressionER8databaseRKNS4_13basic_sstringIcjLj15ELb1EEENS4_13lw_shared_ptrINS6_20column_specificationEEEE3$_0ZNSB_12prepare_termESE_SG_SK_SN_E3$_1ZNSB_12prepare_termESE_SG_SK_SN_E3$_2ZNSB_12prepare_termESE_SG_SK_SN_E3$_3ZNSB_12prepare_termESE_SG_SK_SN_E3$_4ZNSB_12prepare_termESE_SG_SK_SN_E3$_5ZNSB_12prepare_termESE_SG_SK_SN_E3$_6ZNSB_12prepare_termESE_SG_SK_SN_E3$_7ZNSB_12prepare_termESE_SG_SK_SN_E3$_8ZNSB_12prepare_termESE_SG_SK_SN_E3$_9ZNSB_12prepare_termESE_SG_SK_SN_E4$_10ZNSB_12prepare_termESE_SG_SK_SN_E4$_11ZNSB_12prepare_termESE_SG_SK_SN_E4$_12ZNSB_12prepare_termESE_SG_SK_SN_E4$_13ZNSB_12prepare_termESE_SG_SK_SN_E4$_14ZNSB_12prepare_termESE_SG_SK_SN_E4$_15EERSt7variantIJNSB_11conjunctionENSB_15binary_operatorENSB_12column_valueENSB_5tokenENSB_21unresolved_identifierENSB_25column_mutation_attributeENSB_13function_callENSB_4castENSB_15field_selectionENSB_4nullENSB_13bind_variableENSB_16untyped_constantENSB_8constantENSB_17tuple_constructorENSB_22collection_constructorENSB_20usertype_constructorEEEEJEEESt16integer_sequenceImJLm11EEEE14__visit_invokeES15_S1O_ (8 samples, 0.15%)</title><rect x="69.6" y="1813" width="1.8" height="15.0" fill="rgb(243,168,33)" rx="2" ry="2" />
<text  x="72.62" y="1823.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (14 samples, 0.27%)</title><rect x="1186.2" y="421" width="3.1" height="15.0" fill="rgb(238,50,2)" rx="2" ry="2" />
<text  x="1189.19" y="431.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::do_fill_buffer (1 samples, 0.02%)</title><rect x="1186.4" y="85" width="0.2" height="15.0" fill="rgb(243,228,34)" rx="2" ry="2" />
<text  x="1189.41" y="95.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (2 samples, 0.04%)</title><rect x="303.4" y="1749" width="0.4" height="15.0" fill="rgb(250,192,39)" rx="2" ry="2" />
<text  x="306.38" y="1759.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::_M_check_len (1 samples, 0.02%)</title><rect x="55.0" y="1685" width="0.3" height="15.0" fill="rgb(219,65,30)" rx="2" ry="2" />
<text  x="58.05" y="1695.5" ></text>
</g>
<g >
<title>schema::column_at (8 samples, 0.15%)</title><rect x="256.3" y="1525" width="1.8" height="15.0" fill="rgb(240,179,46)" rx="2" ry="2" />
<text  x="259.31" y="1535.5" ></text>
</g>
<g >
<title>std::vector&lt;global_schema_ptr, std::allocator&lt;global_schema_ptr&gt; &gt;::emplace_back&lt;seastar::lw_shared_ptr&lt;schema const&gt;&amp;&gt; (1 samples, 0.02%)</title><rect x="107.0" y="1877" width="0.3" height="15.0" fill="rgb(208,49,0)" rx="2" ry="2" />
<text  x="110.04" y="1887.5" ></text>
</g>
<g >
<title>composite::serialize_value&lt;partition_key_view&amp;&gt; (1 samples, 0.02%)</title><rect x="1187.8" y="85" width="0.2" height="15.0" fill="rgb(235,103,43)" rx="2" ry="2" />
<text  x="1190.76" y="95.5" ></text>
</g>
<g >
<title>operator new (6 samples, 0.11%)</title><rect x="1148.5" y="1861" width="1.4" height="15.0" fill="rgb(243,94,36)" rx="2" ry="2" />
<text  x="1151.54" y="1871.5" ></text>
</g>
<g >
<title>seastar::timer_set&lt;seastar::timer&lt;std::chrono::_V2::steady_clock&gt;, &amp;seastar::timer&lt;std::chrono::_V2::steady_clock&gt;::_link&gt;::expire (1 samples, 0.02%)</title><rect x="1164.7" y="1877" width="0.2" height="15.0" fill="rgb(238,138,1)" rx="2" ry="2" />
<text  x="1167.67" y="1887.5" ></text>
</g>
<g >
<title>dht::tri_compare (10 samples, 0.19%)</title><rect x="1062.7" y="1653" width="2.2" height="15.0" fill="rgb(242,207,47)" rx="2" ry="2" />
<text  x="1065.70" y="1663.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (1 samples, 0.02%)</title><rect x="969.5" y="1781" width="0.2" height="15.0" fill="rgb(237,194,45)" rx="2" ry="2" />
<text  x="972.46" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (1 samples, 0.02%)</title><rect x="71.2" y="1765" width="0.2" height="15.0" fill="rgb(252,26,46)" rx="2" ry="2" />
<text  x="74.19" y="1775.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (2 samples, 0.04%)</title><rect x="47.0" y="1653" width="0.4" height="15.0" fill="rgb(230,213,50)" rx="2" ry="2" />
<text  x="49.98" y="1663.5" ></text>
</g>
<g >
<title>seastar::logger::do_log (1 samples, 0.02%)</title><rect x="688.0" y="1749" width="0.2" height="15.0" fill="rgb(216,46,26)" rx="2" ry="2" />
<text  x="690.97" y="1759.5" ></text>
</g>
<g >
<title>distributed_loader::init_system_keyspace (1 samples, 0.02%)</title><rect x="20.1" y="1973" width="0.2" height="15.0" fill="rgb(241,115,26)" rx="2" ry="2" />
<text  x="23.09" y="1983.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;query::querier&lt; (15 samples, 0.28%)</title><rect x="624.3" y="1861" width="3.4" height="15.0" fill="rgb(221,108,9)" rx="2" ry="2" />
<text  x="627.32" y="1871.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::maybe_reclaim (1 samples, 0.02%)</title><rect x="688.6" y="1797" width="0.3" height="15.0" fill="rgb(209,58,20)" rx="2" ry="2" />
<text  x="691.64" y="1807.5" ></text>
</g>
<g >
<title>std::__optional_hash_call_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, true&gt;::operator (7 samples, 0.13%)</title><rect x="790.2" y="1573" width="1.5" height="15.0" fill="rgb(237,175,20)" rx="2" ry="2" />
<text  x="793.17" y="1583.5" ></text>
</g>
<g >
<title>absl::container_internal::operator== (2 samples, 0.04%)</title><rect x="1036.7" y="1749" width="0.4" height="15.0" fill="rgb(211,229,2)" rx="2" ry="2" />
<text  x="1039.70" y="1759.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (14 samples, 0.27%)</title><rect x="1186.2" y="485" width="3.1" height="15.0" fill="rgb(234,25,14)" rx="2" ry="2" />
<text  x="1189.19" y="495.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="1177.0" y="2053" width="0.2" height="15.0" fill="rgb(237,21,1)" rx="2" ry="2" />
<text  x="1180.00" y="2063.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="734.4" y="1717" width="0.2" height="15.0" fill="rgb(243,47,18)" rx="2" ry="2" />
<text  x="737.36" y="1727.5" ></text>
</g>
<g >
<title>utils::fb_utilities::get_broadcast_address (1 samples, 0.02%)</title><rect x="1076.1" y="1733" width="0.3" height="15.0" fill="rgb(237,11,1)" rx="2" ry="2" />
<text  x="1079.15" y="1743.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (2 samples, 0.04%)</title><rect x="107.5" y="1285" width="0.4" height="15.0" fill="rgb(220,59,8)" rx="2" ry="2" />
<text  x="110.49" y="1295.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::pop_back (1 samples, 0.02%)</title><rect x="300.9" y="1701" width="0.2" height="15.0" fill="rgb(227,4,25)" rx="2" ry="2" />
<text  x="303.91" y="1711.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate (1 samples, 0.02%)</title><rect x="877.4" y="1781" width="0.2" height="15.0" fill="rgb(214,93,44)" rx="2" ry="2" />
<text  x="880.35" y="1791.5" ></text>
</g>
<g >
<title>service::abstract_read_resolver::abstract_read_resolver (16 samples, 0.30%)</title><rect x="978.0" y="1717" width="3.6" height="15.0" fill="rgb(221,190,36)" rx="2" ry="2" />
<text  x="980.98" y="1727.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="50.1" y="1733" width="0.2" height="15.0" fill="rgb(236,175,3)" rx="2" ry="2" />
<text  x="53.12" y="1743.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (14 samples, 0.27%)</title><rect x="1186.2" y="949" width="3.1" height="15.0" fill="rgb(235,38,13)" rx="2" ry="2" />
<text  x="1189.19" y="959.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.02%)</title><rect x="64.7" y="1557" width="0.2" height="15.0" fill="rgb(248,49,43)" rx="2" ry="2" />
<text  x="67.69" y="1567.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume_in_thread&lt;sstables::sstable_writer&gt; (1 samples, 0.02%)</title><rect x="1188.0" y="181" width="0.2" height="15.0" fill="rgb(254,188,39)" rx="2" ry="2" />
<text  x="1190.98" y="191.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (31 samples, 0.59%)</title><rect x="1115.1" y="1861" width="7.0" height="15.0" fill="rgb(244,161,33)" rx="2" ry="2" />
<text  x="1118.14" y="1871.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (14 samples, 0.27%)</title><rect x="1186.2" y="1653" width="3.1" height="15.0" fill="rgb(247,218,2)" rx="2" ry="2" />
<text  x="1189.19" y="1663.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.02%)</title><rect x="64.7" y="1653" width="0.2" height="15.0" fill="rgb(240,203,25)" rx="2" ry="2" />
<text  x="67.69" y="1663.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (2 samples, 0.04%)</title><rect x="1110.0" y="1845" width="0.4" height="15.0" fill="rgb(253,164,16)" rx="2" ry="2" />
<text  x="1112.99" y="1855.5" ></text>
</g>
<g >
<title>std::hash&lt;wrapping_interval&lt;dht::token&gt; &gt;::operator (1 samples, 0.02%)</title><rect x="1077.7" y="1765" width="0.2" height="15.0" fill="rgb(221,134,17)" rx="2" ry="2" />
<text  x="1080.72" y="1775.5" ></text>
</g>
<g >
<title>row::external_memory_usage (1 samples, 0.02%)</title><rect x="19.9" y="1941" width="0.2" height="15.0" fill="rgb(233,74,8)" rx="2" ry="2" />
<text  x="22.86" y="1951.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.02%)</title><rect x="946.8" y="1829" width="0.3" height="15.0" fill="rgb(244,93,12)" rx="2" ry="2" />
<text  x="949.83" y="1839.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (1 samples, 0.02%)</title><rect x="68.0" y="1813" width="0.3" height="15.0" fill="rgb(236,96,40)" rx="2" ry="2" />
<text  x="71.05" y="1823.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::take (3 samples, 0.06%)</title><rect x="321.1" y="1781" width="0.7" height="15.0" fill="rgb(216,2,13)" rx="2" ry="2" />
<text  x="324.08" y="1791.5" ></text>
</g>
<g >
<title>table::add_coordinator_read_latency (1 samples, 0.02%)</title><rect x="1157.7" y="1909" width="0.3" height="15.0" fill="rgb(226,140,5)" rx="2" ry="2" />
<text  x="1160.73" y="1919.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;, service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (19 samples, 0.36%)</title><rect x="1125.5" y="1685" width="4.2" height="15.0" fill="rgb(244,163,46)" rx="2" ry="2" />
<text  x="1128.45" y="1695.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit_slot&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::walking_visitor&lt;row::for_each_cell&lt;memtable::memtable_encoding_stats_collector::update (1 samples, 0.02%)</title><rect x="1119.0" y="1621" width="0.2" height="15.0" fill="rgb(206,222,9)" rx="2" ry="2" />
<text  x="1121.95" y="1631.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::arm (2 samples, 0.04%)</title><rect x="977.5" y="1717" width="0.5" height="15.0" fill="rgb(223,41,29)" rx="2" ry="2" />
<text  x="980.53" y="1727.5" ></text>
</g>
<g >
<title>memtable::memtable_encoding_stats_collector::update (1 samples, 0.02%)</title><rect x="1119.0" y="1653" width="0.2" height="15.0" fill="rgb(236,114,28)" rx="2" ry="2" />
<text  x="1121.95" y="1663.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;unsigned int&gt;::_Rb_tree_const_iterator (1 samples, 0.02%)</title><rect x="44.1" y="1717" width="0.2" height="15.0" fill="rgb(246,226,24)" rx="2" ry="2" />
<text  x="47.07" y="1727.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (2 samples, 0.04%)</title><rect x="690.2" y="1893" width="0.5" height="15.0" fill="rgb(211,54,1)" rx="2" ry="2" />
<text  x="693.21" y="1903.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (1 samples, 0.02%)</title><rect x="73.4" y="1733" width="0.3" height="15.0" fill="rgb(217,66,23)" rx="2" ry="2" />
<text  x="76.43" y="1743.5" ></text>
</g>
<g >
<title>flush_memory_accounter::compute_size (1 samples, 0.02%)</title><rect x="1187.3" y="53" width="0.2" height="15.0" fill="rgb(235,205,6)" rx="2" ry="2" />
<text  x="1190.31" y="63.5" ></text>
</g>
<g >
<title>db::system_keyspace_make (6 samples, 0.11%)</title><rect x="108.4" y="1925" width="1.3" height="15.0" fill="rgb(227,7,16)" rx="2" ry="2" />
<text  x="111.39" y="1935.5" ></text>
</g>
<g >
<title>cql3::authorized_prepared_statements_cache::insert (43 samples, 0.82%)</title><rect x="740.6" y="1829" width="9.7" height="15.0" fill="rgb(230,44,39)" rx="2" ry="2" />
<text  x="743.64" y="1839.5" ></text>
</g>
<g >
<title>utils::tuple_hash::operator (8 samples, 0.15%)</title><rect x="760.8" y="1765" width="1.8" height="15.0" fill="rgb(206,89,27)" rx="2" ry="2" />
<text  x="763.81" y="1775.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::take_value (2 samples, 0.04%)</title><rect x="195.8" y="1701" width="0.4" height="15.0" fill="rgb(242,187,53)" rx="2" ry="2" />
<text  x="198.80" y="1711.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_no_esft&lt;lister&gt;::shared_ptr_no_esft&lt;seastar::file, std::unordered_set&lt;seastar::directory_entry_type, seastar::enum_hash&lt;seastar::directory_entry_type&gt;, std::equal_to&lt;seastar::directory_entry_type&gt;, std::allocator&lt;seastar::directory_entry_type&gt; &gt; const, std::function&lt;seastar::future&lt;void&gt;  (1 samples, 0.02%)</title><rect x="688.4" y="1877" width="0.2" height="15.0" fill="rgb(223,66,2)" rx="2" ry="2" />
<text  x="691.42" y="1887.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::vector (5 samples, 0.09%)</title><rect x="900.7" y="1781" width="1.1" height="15.0" fill="rgb(205,167,9)" rx="2" ry="2" />
<text  x="903.66" y="1791.5" ></text>
</g>
<g >
<title>std::has_facet&lt;std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="11.3" y="2021" width="0.3" height="15.0" fill="rgb(217,198,39)" rx="2" ry="2" />
<text  x="14.34" y="2031.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.02%)</title><rect x="46.8" y="1669" width="0.2" height="15.0" fill="rgb(223,124,31)" rx="2" ry="2" />
<text  x="49.76" y="1679.5" ></text>
</g>
<g >
<title>auth::data_resource_view::table (1 samples, 0.02%)</title><rect x="792.0" y="1557" width="0.2" height="15.0" fill="rgb(208,104,33)" rx="2" ry="2" />
<text  x="794.96" y="1567.5" ></text>
</g>
<g >
<title>database::find_column_family (12 samples, 0.23%)</title><rect x="1003.1" y="1669" width="2.7" height="15.0" fill="rgb(211,108,29)" rx="2" ry="2" />
<text  x="1006.08" y="1679.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.08%)</title><rect x="754.1" y="1813" width="0.9" height="15.0" fill="rgb(252,176,16)" rx="2" ry="2" />
<text  x="757.08" y="1823.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_type (2 samples, 0.04%)</title><rect x="29.5" y="1717" width="0.4" height="15.0" fill="rgb(220,193,53)" rx="2" ry="2" />
<text  x="32.50" y="1727.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="484.2" y="1717" width="0.3" height="15.0" fill="rgb(246,59,20)" rx="2" ry="2" />
<text  x="487.24" y="1727.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (1 samples, 0.02%)</title><rect x="623.6" y="1861" width="0.3" height="15.0" fill="rgb(231,90,30)" rx="2" ry="2" />
<text  x="626.64" y="1871.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_clustering_bounds (31 samples, 0.59%)</title><rect x="1085.6" y="1829" width="6.9" height="15.0" fill="rgb(231,216,15)" rx="2" ry="2" />
<text  x="1088.56" y="1839.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.02%)</title><rect x="51.5" y="1701" width="0.2" height="15.0" fill="rgb(232,45,52)" rx="2" ry="2" />
<text  x="54.46" y="1711.5" ></text>
</g>
<g >
<title>std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt; &gt;, seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (5 samples, 0.09%)</title><rect x="798.9" y="1669" width="1.1" height="15.0" fill="rgb(225,178,17)" rx="2" ry="2" />
<text  x="801.91" y="1679.5" ></text>
</g>
<g >
<title>abstract_type::decompose (1 samples, 0.02%)</title><rect x="108.6" y="1829" width="0.2" height="15.0" fill="rgb(222,115,29)" rx="2" ry="2" />
<text  x="111.61" y="1839.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::operation::set_value, std::default_delete&lt;cql3::operation::set_value&gt; &gt;::get_deleter (1 samples, 0.02%)</title><rect x="62.7" y="1717" width="0.2" height="15.0" fill="rgb(224,214,19)" rx="2" ry="2" />
<text  x="65.67" y="1727.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (36 samples, 0.68%)</title><rect x="231.2" y="1509" width="8.1" height="15.0" fill="rgb(210,222,37)" rx="2" ry="2" />
<text  x="234.21" y="1519.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::find (1 samples, 0.02%)</title><rect x="874.4" y="1829" width="0.3" height="15.0" fill="rgb(252,162,28)" rx="2" ry="2" />
<text  x="877.44" y="1839.5" ></text>
</g>
<g >
<title>flat_mutation_reader::close (116 samples, 2.20%)</title><rect x="570.5" y="1829" width="26.0" height="15.0" fill="rgb(253,194,42)" rx="2" ry="2" />
<text  x="573.53" y="1839.5" >f..</text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (4 samples, 0.08%)</title><rect x="395.9" y="1573" width="0.9" height="15.0" fill="rgb(242,72,45)" rx="2" ry="2" />
<text  x="398.94" y="1583.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="309.9" y="1765" width="0.2" height="15.0" fill="rgb(240,68,10)" rx="2" ry="2" />
<text  x="312.87" y="1775.5" ></text>
</g>
<g >
<title>freeze (13 samples, 0.25%)</title><rect x="1125.7" y="1621" width="2.9" height="15.0" fill="rgb(213,184,24)" rx="2" ry="2" />
<text  x="1128.68" y="1631.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (260 samples, 4.94%)</title><rect x="23.2" y="1925" width="58.3" height="15.0" fill="rgb(237,154,26)" rx="2" ry="2" />
<text  x="26.22" y="1935.5" >cql3::..</text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_in_thread&lt;sstables::sstable_writer, flat_mutation_reader::no_filter&gt; (1 samples, 0.02%)</title><rect x="1177.0" y="1925" width="0.2" height="15.0" fill="rgb(246,145,32)" rx="2" ry="2" />
<text  x="1180.00" y="1935.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;std::unique_ptr&lt;ser::deletable_row_view [], utils::chunked_vector_free_deleter&gt;, 1ul&gt;::~small_vector (1 samples, 0.02%)</title><rect x="1121.0" y="1669" width="0.2" height="15.0" fill="rgb(233,163,7)" rx="2" ry="2" />
<text  x="1123.97" y="1679.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;query::result&gt;::dispose (12 samples, 0.23%)</title><rect x="98.5" y="1877" width="2.7" height="15.0" fill="rgb(212,177,32)" rx="2" ry="2" />
<text  x="101.53" y="1887.5" ></text>
</g>
<g >
<title>deletable_row::deletable_row (1 samples, 0.02%)</title><rect x="1119.6" y="1589" width="0.2" height="15.0" fill="rgb(241,180,3)" rx="2" ry="2" />
<text  x="1122.63" y="1599.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_data_request (181 samples, 3.44%)</title><rect x="989.0" y="1733" width="40.5" height="15.0" fill="rgb(209,93,41)" rx="2" ry="2" />
<text  x="991.96" y="1743.5" >ser..</text>
</g>
<g >
<title>operator new (2 samples, 0.04%)</title><rect x="773.1" y="1733" width="0.5" height="15.0" fill="rgb(207,199,24)" rx="2" ry="2" />
<text  x="776.13" y="1743.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.02%)</title><rect x="47.2" y="1589" width="0.2" height="15.0" fill="rgb(234,202,17)" rx="2" ry="2" />
<text  x="50.20" y="1599.5" ></text>
</g>
<g >
<title>boost::intrusive::bstree_impl&lt;boost::intrusive::mhtraits&lt;range_tombstone_entry, boost::intrusive::set_member_hook&lt;boost::intrusive::link_mode&lt; (1 samples, 0.02%)</title><rect x="83.5" y="1877" width="0.2" height="15.0" fill="rgb(232,70,22)" rx="2" ry="2" />
<text  x="86.51" y="1887.5" ></text>
</g>
<g >
<title>std::__lower_bound&lt;__gnu_cxx::__normal_iterator&lt;dht::token const*, std::vector&lt;dht::token, std::allocator&lt;dht::token&gt; &gt; &gt;, dht::token, __gnu_cxx::__ops::_Iter_less_val&gt; (1 samples, 0.02%)</title><rect x="1064.9" y="1685" width="0.3" height="15.0" fill="rgb(247,16,3)" rx="2" ry="2" />
<text  x="1067.94" y="1695.5" ></text>
</g>
<g >
<title>reader_permit::impl::impl (1 samples, 0.02%)</title><rect x="1016.3" y="1653" width="0.2" height="15.0" fill="rgb(233,81,12)" rx="2" ry="2" />
<text  x="1019.31" y="1663.5" ></text>
</g>
<g >
<title>schema_registry_entry::get_schema (2 samples, 0.04%)</title><rect x="108.8" y="1861" width="0.5" height="15.0" fill="rgb(230,15,22)" rx="2" ry="2" />
<text  x="111.84" y="1871.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (1 samples, 0.02%)</title><rect x="784.8" y="1605" width="0.2" height="15.0" fill="rgb(233,113,41)" rx="2" ry="2" />
<text  x="787.79" y="1615.5" ></text>
</g>
<g >
<title>std::type_info::operator== (2 samples, 0.04%)</title><rect x="1050.6" y="1701" width="0.4" height="15.0" fill="rgb(211,47,21)" rx="2" ry="2" />
<text  x="1053.60" y="1711.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;1ul, std::default_delete&lt;cql3::statements::raw::update_statement&gt;&gt; (1 samples, 0.02%)</title><rect x="67.6" y="1733" width="0.2" height="15.0" fill="rgb(215,220,7)" rx="2" ry="2" />
<text  x="70.60" y="1743.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="12.0" y="1941" width="0.2" height="15.0" fill="rgb(218,183,30)" rx="2" ry="2" />
<text  x="15.02" y="1951.5" ></text>
</g>
<g >
<title>auth::permissions_cache::get (1 samples, 0.02%)</title><rect x="776.3" y="1717" width="0.2" height="15.0" fill="rgb(243,214,1)" rx="2" ry="2" />
<text  x="779.27" y="1727.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_28has_slice_or_needs_filteringERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES28_S2B_ (1 samples, 0.02%)</title><rect x="936.7" y="1813" width="0.3" height="15.0" fill="rgb(218,151,27)" rx="2" ry="2" />
<text  x="939.74" y="1823.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (14 samples, 0.27%)</title><rect x="1186.2" y="581" width="3.1" height="15.0" fill="rgb(232,229,23)" rx="2" ry="2" />
<text  x="1189.19" y="591.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (1 samples, 0.02%)</title><rect x="691.6" y="1893" width="0.2" height="15.0" fill="rgb(230,12,34)" rx="2" ry="2" />
<text  x="694.55" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt;::~_Variant_storage (3 samples, 0.06%)</title><rect x="673.8" y="1861" width="0.7" height="15.0" fill="rgb(237,131,4)" rx="2" ry="2" />
<text  x="676.85" y="1871.5" ></text>
</g>
<g >
<title>malloc (3 samples, 0.06%)</title><rect x="611.8" y="1797" width="0.6" height="15.0" fill="rgb(226,178,49)" rx="2" ry="2" />
<text  x="614.77" y="1807.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="1041.0" y="1749" width="0.2" height="15.0" fill="rgb(217,117,53)" rx="2" ry="2" />
<text  x="1043.96" y="1759.5" ></text>
</g>
<g >
<title>std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;::~pair (1 samples, 0.02%)</title><rect x="55.7" y="1573" width="0.2" height="15.0" fill="rgb(209,212,21)" rx="2" ry="2" />
<text  x="58.72" y="1583.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (2 samples, 0.04%)</title><rect x="585.1" y="1733" width="0.4" height="15.0" fill="rgb(210,58,20)" rx="2" ry="2" />
<text  x="588.10" y="1743.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_Optional_payload_base (3 samples, 0.06%)</title><rect x="623.0" y="1845" width="0.6" height="15.0" fill="rgb(233,154,17)" rx="2" ry="2" />
<text  x="625.97" y="1855.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::got_response (16 samples, 0.30%)</title><rect x="706.6" y="1861" width="3.6" height="15.0" fill="rgb(235,221,52)" rx="2" ry="2" />
<text  x="709.57" y="1871.5" ></text>
</g>
<g >
<title>query::result::result (2 samples, 0.04%)</title><rect x="620.1" y="1845" width="0.4" height="15.0" fill="rgb(210,27,31)" rx="2" ry="2" />
<text  x="623.06" y="1855.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (3 samples, 0.06%)</title><rect x="53.0" y="1605" width="0.7" height="15.0" fill="rgb(218,33,0)" rx="2" ry="2" />
<text  x="56.03" y="1615.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.02%)</title><rect x="1186.2" y="309" width="0.2" height="15.0" fill="rgb(253,186,31)" rx="2" ry="2" />
<text  x="1189.19" y="319.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (9 samples, 0.17%)</title><rect x="638.9" y="1909" width="2.0" height="15.0" fill="rgb(238,23,25)" rx="2" ry="2" />
<text  x="641.89" y="1919.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::clone (4 samples, 0.08%)</title><rect x="517.6" y="1733" width="0.9" height="15.0" fill="rgb(240,107,47)" rx="2" ry="2" />
<text  x="520.64" y="1743.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::read_next (288 samples, 5.47%)</title><rect x="209.2" y="1669" width="64.6" height="15.0" fill="rgb(205,199,8)" rx="2" ry="2" />
<text  x="212.24" y="1679.5" >partiti..</text>
</g>
<g >
<title>nonwrapping_interval&lt;clustering_key_prefix&gt;::make_open_ended_both_sides (18 samples, 0.34%)</title><rect x="1086.0" y="1813" width="4.0" height="15.0" fill="rgb(205,56,8)" rx="2" ry="2" />
<text  x="1089.01" y="1823.5" ></text>
</g>
<g >
<title>utils::config_file::named_value&lt;bool&gt;::the_value (1 samples, 0.02%)</title><rect x="1076.4" y="1765" width="0.2" height="15.0" fill="rgb(231,55,37)" rx="2" ry="2" />
<text  x="1079.37" y="1775.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (14 samples, 0.27%)</title><rect x="1186.2" y="629" width="3.1" height="15.0" fill="rgb(252,211,16)" rx="2" ry="2" />
<text  x="1189.19" y="639.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (2 samples, 0.04%)</title><rect x="47.0" y="1669" width="0.4" height="15.0" fill="rgb(242,122,33)" rx="2" ry="2" />
<text  x="49.98" y="1679.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_data_requests (1 samples, 0.02%)</title><rect x="956.5" y="1733" width="0.2" height="15.0" fill="rgb(206,11,7)" rx="2" ry="2" />
<text  x="959.47" y="1743.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.04%)</title><rect x="483.8" y="1701" width="0.4" height="15.0" fill="rgb(235,118,36)" rx="2" ry="2" />
<text  x="486.79" y="1711.5" ></text>
</g>
<g >
<title>mutation_fragment_stream_validating_filter::operator (1 samples, 0.02%)</title><rect x="1188.2" y="53" width="0.2" height="15.0" fill="rgb(209,225,42)" rx="2" ry="2" />
<text  x="1191.21" y="63.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (2 samples, 0.04%)</title><rect x="766.6" y="1765" width="0.5" height="15.0" fill="rgb(224,87,54)" rx="2" ry="2" />
<text  x="769.63" y="1775.5" ></text>
</g>
<g >
<title>database::has_keyspace (12 samples, 0.23%)</title><rect x="824.5" y="1845" width="2.6" height="15.0" fill="rgb(247,209,42)" rx="2" ry="2" />
<text  x="827.46" y="1855.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt;  (3 samples, 0.06%)</title><rect x="19.4" y="1989" width="0.7" height="15.0" fill="rgb(250,195,18)" rx="2" ry="2" />
<text  x="22.41" y="1999.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (1 samples, 0.02%)</title><rect x="817.5" y="1845" width="0.2" height="15.0" fill="rgb(208,71,18)" rx="2" ry="2" />
<text  x="820.51" y="1855.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (3 samples, 0.06%)</title><rect x="50.3" y="1685" width="0.7" height="15.0" fill="rgb(249,129,43)" rx="2" ry="2" />
<text  x="53.34" y="1695.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.08%)</title><rect x="474.2" y="1701" width="0.9" height="15.0" fill="rgb(232,184,5)" rx="2" ry="2" />
<text  x="477.16" y="1711.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::operator= (1 samples, 0.02%)</title><rect x="845.3" y="1909" width="0.2" height="15.0" fill="rgb(245,150,39)" rx="2" ry="2" />
<text  x="848.30" y="1919.5" ></text>
</g>
<g >
<title>partition_version_ref::operator* (1 samples, 0.02%)</title><rect x="294.2" y="1637" width="0.2" height="15.0" fill="rgb(228,9,10)" rx="2" ry="2" />
<text  x="297.19" y="1647.5" ></text>
</g>
<g >
<title>ser::writer_of_mutation&lt;bytes_ostream&gt;::writer_of_mutation (1 samples, 0.02%)</title><rect x="1128.4" y="1589" width="0.2" height="15.0" fill="rgb(219,82,20)" rx="2" ry="2" />
<text  x="1131.37" y="1599.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::~partition_snapshot_flat_reader (2 samples, 0.04%)</title><rect x="1162.7" y="1797" width="0.4" height="15.0" fill="rgb(237,62,35)" rx="2" ry="2" />
<text  x="1165.66" y="1807.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (1 samples, 0.02%)</title><rect x="666.0" y="1909" width="0.2" height="15.0" fill="rgb(210,185,29)" rx="2" ry="2" />
<text  x="669.00" y="1919.5" ></text>
</g>
<g >
<title>__call_tls_dtors (1 samples, 0.02%)</title><rect x="12.0" y="2037" width="0.2" height="15.0" fill="rgb(241,67,23)" rx="2" ry="2" />
<text  x="15.02" y="2047.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;lister&gt;::make&lt;seastar::file, std::unordered_set&lt;seastar::directory_entry_type, seastar::enum_hash&lt;seastar::directory_entry_type&gt;, std::equal_to&lt;seastar::directory_entry_type&gt;, std::allocator&lt;seastar::directory_entry_type&gt; &gt; const, std::function&lt;seastar::future&lt;void&gt;  (1 samples, 0.02%)</title><rect x="688.4" y="1893" width="0.2" height="15.0" fill="rgb(216,56,38)" rx="2" ry="2" />
<text  x="691.42" y="1903.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_map&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::at&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt; &gt; (1 samples, 0.02%)</title><rect x="1128.8" y="1605" width="0.2" height="15.0" fill="rgb(240,115,4)" rx="2" ry="2" />
<text  x="1131.81" y="1615.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.02%)</title><rect x="49.7" y="1637" width="0.2" height="15.0" fill="rgb(214,55,49)" rx="2" ry="2" />
<text  x="52.67" y="1647.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (2 samples, 0.04%)</title><rect x="263.3" y="1541" width="0.4" height="15.0" fill="rgb(232,70,23)" rx="2" ry="2" />
<text  x="266.26" y="1551.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.02%)</title><rect x="44.5" y="1621" width="0.2" height="15.0" fill="rgb(215,44,47)" rx="2" ry="2" />
<text  x="47.51" y="1631.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::lsa_partition_reader (6 samples, 0.11%)</title><rect x="534.0" y="1701" width="1.3" height="15.0" fill="rgb(221,145,50)" rx="2" ry="2" />
<text  x="537.00" y="1711.5" ></text>
</g>
<g >
<title>partition_snapshot::slide_to_oldest (2 samples, 0.04%)</title><rect x="581.1" y="1701" width="0.4" height="15.0" fill="rgb(215,180,12)" rx="2" ry="2" />
<text  x="584.06" y="1711.5" ></text>
</g>
<g >
<title>read_simple&lt;long, managed_bytes_basic_view&lt; (9 samples, 0.17%)</title><rect x="419.5" y="1573" width="2.0" height="15.0" fill="rgb(217,13,40)" rx="2" ry="2" />
<text  x="422.47" y="1583.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::set_value&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt; (3 samples, 0.06%)</title><rect x="694.9" y="1877" width="0.7" height="15.0" fill="rgb(221,50,51)" rx="2" ry="2" />
<text  x="697.92" y="1887.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (14 samples, 0.27%)</title><rect x="1186.2" y="1813" width="3.1" height="15.0" fill="rgb(217,29,42)" rx="2" ry="2" />
<text  x="1189.19" y="1823.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="302.5" y="1717" width="0.2" height="15.0" fill="rgb(214,80,9)" rx="2" ry="2" />
<text  x="305.48" y="1727.5" ></text>
</g>
<g >
<title>seastar::future_state_base::any::operator= (1 samples, 0.02%)</title><rect x="845.3" y="1893" width="0.2" height="15.0" fill="rgb(244,207,28)" rx="2" ry="2" />
<text  x="848.30" y="1903.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::partition_slice, std::default_delete&lt;query::partition_slice&gt; &gt;::~unique_ptr (2 samples, 0.04%)</title><rect x="554.4" y="1749" width="0.4" height="15.0" fill="rgb(217,34,4)" rx="2" ry="2" />
<text  x="557.39" y="1759.5" ></text>
</g>
<g >
<title>__strlen_avx2 (1 samples, 0.02%)</title><rect x="21.0" y="1941" width="0.2" height="15.0" fill="rgb(223,49,11)" rx="2" ry="2" />
<text  x="23.98" y="1951.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::execute (1 samples, 0.02%)</title><rect x="956.5" y="1765" width="0.2" height="15.0" fill="rgb(219,153,1)" rx="2" ry="2" />
<text  x="959.47" y="1775.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::clone&lt;row::row (1 samples, 0.02%)</title><rect x="107.7" y="1189" width="0.2" height="15.0" fill="rgb(225,65,23)" rx="2" ry="2" />
<text  x="110.72" y="1199.5" ></text>
</g>
<g >
<title>table::do_apply&lt;frozen_mutation const&amp;, seastar::lw_shared_ptr&lt;schema const&gt; const&amp;&gt; (27 samples, 0.51%)</title><rect x="1115.4" y="1701" width="6.0" height="15.0" fill="rgb(252,193,1)" rx="2" ry="2" />
<text  x="1118.37" y="1711.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::do_refresh_state (51 samples, 0.97%)</title><rect x="277.2" y="1653" width="11.4" height="15.0" fill="rgb(243,92,35)" rx="2" ry="2" />
<text  x="280.15" y="1663.5" ></text>
</g>
<g >
<title>seastar::future&lt;mutation_fragment*&gt;::then_impl&lt;query::consume_page&lt; (590 samples, 11.21%)</title><rect x="323.8" y="1829" width="132.2" height="15.0" fill="rgb(253,217,10)" rx="2" ry="2" />
<text  x="326.77" y="1839.5" >seastar::future&lt;..</text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_construct&lt;interval_bound&lt;dht::ring_position&gt; const&amp;&gt; (1 samples, 0.02%)</title><rect x="851.6" y="1749" width="0.2" height="15.0" fill="rgb(253,57,53)" rx="2" ry="2" />
<text  x="854.58" y="1759.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::_S_destroy&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;, antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="57.5" y="1637" width="0.2" height="15.0" fill="rgb(250,70,4)" rx="2" ry="2" />
<text  x="60.51" y="1647.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;single_node_cql_env::core_local_state&gt;::local (1 samples, 0.02%)</title><rect x="827.8" y="1845" width="0.2" height="15.0" fill="rgb(252,57,28)" rx="2" ry="2" />
<text  x="830.82" y="1855.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (10 samples, 0.19%)</title><rect x="971.5" y="1701" width="2.2" height="15.0" fill="rgb(217,140,41)" rx="2" ry="2" />
<text  x="974.48" y="1711.5" ></text>
</g>
<g >
<title>mutation_fragment::consume&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (415 samples, 7.88%)</title><rect x="336.5" y="1685" width="93.1" height="15.0" fill="rgb(222,98,41)" rx="2" ry="2" />
<text  x="339.55" y="1695.5" >mutation_fr..</text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.06%)</title><rect x="932.5" y="1781" width="0.7" height="15.0" fill="rgb(252,0,24)" rx="2" ry="2" />
<text  x="935.48" y="1791.5" ></text>
</g>
<g >
<title>utils::tuple_hash::operator (1 samples, 0.02%)</title><rect x="750.0" y="1749" width="0.3" height="15.0" fill="rgb(249,18,24)" rx="2" ry="2" />
<text  x="753.05" y="1759.5" ></text>
</g>
<g >
<title>operator delete (9 samples, 0.17%)</title><rect x="152.5" y="1861" width="2.1" height="15.0" fill="rgb(241,135,2)" rx="2" ry="2" />
<text  x="155.54" y="1871.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::allocate (1 samples, 0.02%)</title><rect x="28.4" y="1637" width="0.2" height="15.0" fill="rgb(230,25,13)" rx="2" ry="2" />
<text  x="31.38" y="1647.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (5 samples, 0.09%)</title><rect x="509.1" y="1621" width="1.1" height="15.0" fill="rgb(231,11,54)" rx="2" ry="2" />
<text  x="512.12" y="1631.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (2 samples, 0.04%)</title><rect x="684.6" y="1861" width="0.5" height="15.0" fill="rgb(235,116,9)" rx="2" ry="2" />
<text  x="687.61" y="1871.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (3 samples, 0.06%)</title><rect x="50.3" y="1653" width="0.7" height="15.0" fill="rgb(226,151,43)" rx="2" ry="2" />
<text  x="53.34" y="1663.5" ></text>
</g>
<g >
<title>frozen_mutation::frozen_mutation (13 samples, 0.25%)</title><rect x="1125.7" y="1605" width="2.9" height="15.0" fill="rgb(229,156,54)" rx="2" ry="2" />
<text  x="1128.68" y="1615.5" ></text>
</g>
<g >
<title>std::default_delete&lt;cql3::expr::expression::impl&gt;::operator (2 samples, 0.04%)</title><rect x="77.9" y="1829" width="0.5" height="15.0" fill="rgb(242,202,9)" rx="2" ry="2" />
<text  x="80.91" y="1839.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;service::digest_read_resolver, false&gt;::make&lt;seastar::lw_shared_ptr&lt;schema const&gt;&amp;, db::consistency_level&amp;, unsigned long&amp;, unsigned long, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;&amp;&gt; (30 samples, 0.57%)</title><rect x="975.1" y="1765" width="6.7" height="15.0" fill="rgb(217,22,18)" rx="2" ry="2" />
<text  x="978.07" y="1775.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (1 samples, 0.02%)</title><rect x="10.7" y="2021" width="0.2" height="15.0" fill="rgb(234,90,31)" rx="2" ry="2" />
<text  x="13.67" y="2031.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (1 samples, 0.02%)</title><rect x="499.9" y="1701" width="0.3" height="15.0" fill="rgb(221,201,38)" rx="2" ry="2" />
<text  x="502.93" y="1711.5" ></text>
</g>
<g >
<title>db::schema_tables::read_table_names_of_keyspace (1 samples, 0.02%)</title><rect x="107.3" y="1893" width="0.2" height="15.0" fill="rgb(236,170,41)" rx="2" ry="2" />
<text  x="110.27" y="1903.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (1 samples, 0.02%)</title><rect x="1043.9" y="1765" width="0.2" height="15.0" fill="rgb(238,205,45)" rx="2" ry="2" />
<text  x="1046.87" y="1775.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;service::digest_read_result&gt;::set_value&lt;service::digest_read_result&gt; (3 samples, 0.06%)</title><rect x="707.5" y="1845" width="0.6" height="15.0" fill="rgb(244,106,47)" rx="2" ry="2" />
<text  x="710.47" y="1855.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="475.7" y="1701" width="0.2" height="15.0" fill="rgb(225,227,21)" rx="2" ry="2" />
<text  x="478.72" y="1711.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::close (2 samples, 0.04%)</title><rect x="596.5" y="1829" width="0.5" height="15.0" fill="rgb(220,222,45)" rx="2" ry="2" />
<text  x="599.53" y="1839.5" ></text>
</g>
<g >
<title>memtable_entry::snapshot (10 samples, 0.19%)</title><rect x="536.9" y="1749" width="2.3" height="15.0" fill="rgb(252,46,38)" rx="2" ry="2" />
<text  x="539.91" y="1759.5" ></text>
</g>
<g >
<title>schema::registry_entry (1 samples, 0.02%)</title><rect x="994.1" y="1685" width="0.2" height="15.0" fill="rgb(249,204,46)" rx="2" ry="2" />
<text  x="997.12" y="1695.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (4 samples, 0.08%)</title><rect x="1077.0" y="1781" width="0.9" height="15.0" fill="rgb(253,119,52)" rx="2" ry="2" />
<text  x="1080.04" y="1791.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_partition_key_ranges (6 samples, 0.11%)</title><rect x="850.5" y="1797" width="1.3" height="15.0" fill="rgb(221,222,6)" rx="2" ry="2" />
<text  x="853.46" y="1807.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (14 samples, 0.27%)</title><rect x="1186.2" y="789" width="3.1" height="15.0" fill="rgb(230,113,43)" rx="2" ry="2" />
<text  x="1189.19" y="799.5" ></text>
</g>
<g >
<title>antlr3::Lexer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchc (1 samples, 0.02%)</title><rect x="40.0" y="1669" width="0.3" height="15.0" fill="rgb(209,96,4)" rx="2" ry="2" />
<text  x="43.03" y="1679.5" ></text>
</g>
<g >
<title>seastar::memory::stats (2 samples, 0.04%)</title><rect x="525.0" y="1669" width="0.5" height="15.0" fill="rgb(244,40,48)" rx="2" ry="2" />
<text  x="528.03" y="1679.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::result_set, std::default_delete&lt;cql3::result_set&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="655.7" y="1861" width="0.2" height="15.0" fill="rgb(222,44,19)" rx="2" ry="2" />
<text  x="658.69" y="1871.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::make_ready&lt; (1 samples, 0.02%)</title><rect x="644.7" y="1909" width="0.2" height="15.0" fill="rgb(230,149,26)" rx="2" ry="2" />
<text  x="647.71" y="1919.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::schedule&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::make_data_requests (12 samples, 0.23%)</title><rect x="985.8" y="1701" width="2.7" height="15.0" fill="rgb(221,92,35)" rx="2" ry="2" />
<text  x="988.83" y="1711.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (1 samples, 0.02%)</title><rect x="557.5" y="1813" width="0.3" height="15.0" fill="rgb(254,222,11)" rx="2" ry="2" />
<text  x="560.53" y="1823.5" ></text>
</g>
<g >
<title>position_in_partition_view::for_range_end (1 samples, 0.02%)</title><rect x="845.5" y="1877" width="0.2" height="15.0" fill="rgb(235,77,30)" rx="2" ry="2" />
<text  x="848.53" y="1887.5" ></text>
</g>
<g >
<title>empty_flat_reader::empty_flat_reader (2 samples, 0.04%)</title><rect x="552.8" y="1685" width="0.5" height="15.0" fill="rgb(213,196,9)" rx="2" ry="2" />
<text  x="555.82" y="1695.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (2 samples, 0.04%)</title><rect x="637.3" y="1893" width="0.5" height="15.0" fill="rgb(208,8,7)" rx="2" ry="2" />
<text  x="640.32" y="1903.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="620.5" y="1861" width="0.2" height="15.0" fill="rgb(245,213,37)" rx="2" ry="2" />
<text  x="623.51" y="1871.5" ></text>
</g>
<g >
<title>read_simple&lt;unsigned short, managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="851.1" y="1749" width="0.3" height="15.0" fill="rgb(231,10,36)" rx="2" ry="2" />
<text  x="854.13" y="1759.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::digest_read_result&gt;::move_it (1 samples, 0.02%)</title><rect x="692.0" y="1893" width="0.2" height="15.0" fill="rgb(220,168,10)" rx="2" ry="2" />
<text  x="695.00" y="1903.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="57.3" y="1621" width="0.2" height="15.0" fill="rgb(213,39,2)" rx="2" ry="2" />
<text  x="60.29" y="1631.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (3 samples, 0.06%)</title><rect x="331.2" y="1669" width="0.6" height="15.0" fill="rgb(242,212,5)" rx="2" ry="2" />
<text  x="334.17" y="1679.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.02%)</title><rect x="49.4" y="1621" width="0.3" height="15.0" fill="rgb(248,74,18)" rx="2" ry="2" />
<text  x="52.45" y="1631.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::iterator_at (1 samples, 0.02%)</title><rect x="1040.7" y="1733" width="0.3" height="15.0" fill="rgb(238,148,5)" rx="2" ry="2" />
<text  x="1043.74" y="1743.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_partition_key_ranges (284 samples, 5.39%)</title><rect x="871.7" y="1845" width="63.7" height="15.0" fill="rgb(218,96,4)" rx="2" ry="2" />
<text  x="874.75" y="1855.5" >cql3::..</text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::fetch (2 samples, 0.04%)</title><rect x="107.5" y="1557" width="0.4" height="15.0" fill="rgb(248,32,50)" rx="2" ry="2" />
<text  x="110.49" y="1567.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::on_permit_destroyed (4 samples, 0.08%)</title><rect x="123.6" y="1861" width="0.9" height="15.0" fill="rgb(248,165,44)" rx="2" ry="2" />
<text  x="126.63" y="1871.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_M_reset (1 samples, 0.02%)</title><rect x="605.3" y="1797" width="0.2" height="15.0" fill="rgb(231,90,0)" rx="2" ry="2" />
<text  x="608.27" y="1807.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (14 samples, 0.27%)</title><rect x="1186.2" y="1525" width="3.1" height="15.0" fill="rgb(249,192,24)" rx="2" ry="2" />
<text  x="1189.19" y="1535.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::push_static_row (20 samples, 0.38%)</title><rect x="290.8" y="1685" width="4.5" height="15.0" fill="rgb(253,98,25)" rx="2" ry="2" />
<text  x="293.82" y="1695.5" ></text>
</g>
<g >
<title>std::function&lt;flat_mutation_reader  (1 samples, 0.02%)</title><rect x="956.5" y="1573" width="0.2" height="15.0" fill="rgb(248,197,42)" rx="2" ry="2" />
<text  x="959.47" y="1583.5" ></text>
</g>
<g >
<title>memtable::upgrade_entry (1 samples, 0.02%)</title><rect x="541.6" y="1765" width="0.2" height="15.0" fill="rgb(240,121,41)" rx="2" ry="2" />
<text  x="544.62" y="1775.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.02%)</title><rect x="60.7" y="1525" width="0.2" height="15.0" fill="rgb(206,115,17)" rx="2" ry="2" />
<text  x="63.65" y="1535.5" ></text>
</g>
<g >
<title>std::__equal&lt;true&gt;::equal&lt;signed char&gt; (1 samples, 0.02%)</title><rect x="746.9" y="1717" width="0.2" height="15.0" fill="rgb(228,138,42)" rx="2" ry="2" />
<text  x="749.91" y="1727.5" ></text>
</g>
<g >
<title>seastar::chunked_fifo&lt;seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::entry, 128ul&gt;::emplace_back&lt;reader_concurrency_semaphore::entry, seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;&amp;, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;&amp;&gt; (11 samples, 0.21%)</title><rect x="1012.0" y="1605" width="2.5" height="15.0" fill="rgb(242,202,45)" rx="2" ry="2" />
<text  x="1015.05" y="1615.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::make_ready&lt; (2 samples, 0.04%)</title><rect x="707.0" y="1845" width="0.5" height="15.0" fill="rgb(249,169,54)" rx="2" ry="2" />
<text  x="710.02" y="1855.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::default_delete&lt;cql3::statements::alter_service_level_statement&gt;, true&gt;::_Head_base (1 samples, 0.02%)</title><rect x="66.7" y="1717" width="0.2" height="15.0" fill="rgb(209,132,40)" rx="2" ry="2" />
<text  x="69.70" y="1727.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.02%)</title><rect x="529.7" y="1589" width="0.3" height="15.0" fill="rgb(243,172,22)" rx="2" ry="2" />
<text  x="532.74" y="1599.5" ></text>
</g>
<g >
<title>seastar::repeat&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (2 samples, 0.04%)</title><rect x="107.5" y="1589" width="0.4" height="15.0" fill="rgb(254,134,9)" rx="2" ry="2" />
<text  x="110.49" y="1599.5" ></text>
</g>
<g >
<title>managed_bytes::operator= (3 samples, 0.06%)</title><rect x="1097.2" y="1845" width="0.7" height="15.0" fill="rgb(226,206,14)" rx="2" ry="2" />
<text  x="1100.21" y="1855.5" ></text>
</g>
<g >
<title>partition_entry::evict (2 samples, 0.04%)</title><rect x="18.7" y="1973" width="0.5" height="15.0" fill="rgb(229,163,22)" rx="2" ry="2" />
<text  x="21.74" y="1983.5" ></text>
</g>
<g >
<title>std::default_delete&lt;mutation::data&gt;::operator (2 samples, 0.04%)</title><rect x="1129.7" y="1733" width="0.5" height="15.0" fill="rgb(229,155,23)" rx="2" ry="2" />
<text  x="1132.71" y="1743.5" ></text>
</g>
<g >
<title>mutation_source::mutation_source (7 samples, 0.13%)</title><rect x="630.6" y="1845" width="1.6" height="15.0" fill="rgb(253,173,7)" rx="2" ry="2" />
<text  x="633.59" y="1855.5" ></text>
</g>
<g >
<title>seastar::app_template::run (4,820 samples, 91.55%)</title><rect x="84.9" y="2005" width="1080.2" height="15.0" fill="rgb(251,46,54)" rx="2" ry="2" />
<text  x="87.86" y="2015.5" >seastar::app_template::run</text>
</g>
<g >
<title>db::system_keyspace::query_mutations (3 samples, 0.06%)</title><rect x="107.5" y="1845" width="0.7" height="15.0" fill="rgb(253,163,0)" rx="2" ry="2" />
<text  x="110.49" y="1855.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.09%)</title><rect x="527.9" y="1621" width="1.2" height="15.0" fill="rgb(217,56,52)" rx="2" ry="2" />
<text  x="530.94" y="1631.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="985.6" y="1701" width="0.2" height="15.0" fill="rgb(211,157,35)" rx="2" ry="2" />
<text  x="988.60" y="1711.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::set&lt;service::storage_proxy_coordinator_query_result&gt; (1 samples, 0.02%)</title><rect x="1139.1" y="1909" width="0.2" height="15.0" fill="rgb(236,90,49)" rx="2" ry="2" />
<text  x="1142.12" y="1919.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::metadata&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="661.1" y="1909" width="0.2" height="15.0" fill="rgb(222,201,48)" rx="2" ry="2" />
<text  x="664.07" y="1919.5" ></text>
</g>
<g >
<title>perf_simple_que (5,264 samples, 99.98%)</title><rect x="10.0" y="2069" width="1179.8" height="15.0" fill="rgb(207,41,25)" rx="2" ry="2" />
<text  x="13.00" y="2079.5" >perf_simple_que</text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_allocate_buckets (6 samples, 0.11%)</title><rect x="1147.0" y="1829" width="1.3" height="15.0" fill="rgb(213,70,41)" rx="2" ry="2" />
<text  x="1149.97" y="1839.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="154.3" y="1845" width="0.3" height="15.0" fill="rgb(229,43,49)" rx="2" ry="2" />
<text  x="157.33" y="1855.5" ></text>
</g>
<g >
<title>empty_flat_reader::~empty_flat_reader (5 samples, 0.09%)</title><rect x="574.6" y="1749" width="1.1" height="15.0" fill="rgb(238,145,32)" rx="2" ry="2" />
<text  x="577.56" y="1759.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.02%)</title><rect x="10.7" y="1973" width="0.2" height="15.0" fill="rgb(207,44,1)" rx="2" ry="2" />
<text  x="13.67" y="1983.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (10 samples, 0.19%)</title><rect x="565.1" y="1749" width="2.3" height="15.0" fill="rgb(245,208,18)" rx="2" ry="2" />
<text  x="568.15" y="1759.5" ></text>
</g>
<g >
<title>ser::after_column__id&lt;bytes_ostream&gt;::start_c_variant (1 samples, 0.02%)</title><rect x="1127.5" y="1525" width="0.2" height="15.0" fill="rgb(227,39,3)" rx="2" ry="2" />
<text  x="1130.47" y="1535.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::alter_service_level_statement, std::default_delete&lt;cql3::statements::alter_service_level_statement&gt; &gt;::__uniq_ptr_impl (1 samples, 0.02%)</title><rect x="66.7" y="1765" width="0.2" height="15.0" fill="rgb(253,88,50)" rx="2" ry="2" />
<text  x="69.70" y="1775.5" ></text>
</g>
<g >
<title>mutation_partition::append_clustered_row (2 samples, 0.04%)</title><rect x="1119.4" y="1637" width="0.4" height="15.0" fill="rgb(254,44,51)" rx="2" ry="2" />
<text  x="1122.40" y="1647.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.06%)</title><rect x="451.7" y="1765" width="0.7" height="15.0" fill="rgb(241,18,3)" rx="2" ry="2" />
<text  x="454.74" y="1775.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="444.3" y="1653" width="0.3" height="15.0" fill="rgb(231,60,45)" rx="2" ry="2" />
<text  x="447.35" y="1663.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (3 samples, 0.06%)</title><rect x="357.6" y="1605" width="0.7" height="15.0" fill="rgb(207,99,11)" rx="2" ry="2" />
<text  x="360.61" y="1615.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (3 samples, 0.06%)</title><rect x="1112.5" y="1845" width="0.6" height="15.0" fill="rgb(244,123,18)" rx="2" ry="2" />
<text  x="1115.45" y="1855.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::lower_bound&lt;mutation_partition, schema const&amp;, nonwrapping_interval&lt;clustering_key_prefix&gt; const&amp;&gt; (5 samples, 0.09%)</title><rect x="288.6" y="1653" width="1.1" height="15.0" fill="rgb(228,61,25)" rx="2" ry="2" />
<text  x="291.58" y="1663.5" ></text>
</g>
<g >
<title>seastar::internal::uninitialized_wrapper_base&lt;service::storage_proxy_coordinator_query_result, false&gt;::uninitialized_set&lt;service::storage_proxy_coordinator_query_result&gt; (10 samples, 0.19%)</title><rect x="679.7" y="1893" width="2.2" height="15.0" fill="rgb(249,166,35)" rx="2" ry="2" />
<text  x="682.68" y="1903.5" ></text>
</g>
<g >
<title>cql3::restrictions::clustering_key_restrictions::needs_filtering (1 samples, 0.02%)</title><rect x="649.2" y="1893" width="0.2" height="15.0" fill="rgb(242,191,16)" rx="2" ry="2" />
<text  x="652.19" y="1903.5" ></text>
</g>
<g >
<title>std::apply&lt;flat_mutation_reader::impl::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (1 samples, 0.02%)</title><rect x="107.9" y="1701" width="0.3" height="15.0" fill="rgb(218,3,9)" rx="2" ry="2" />
<text  x="110.94" y="1711.5" ></text>
</g>
<g >
<title>boost::algorithm::any_of&lt;boost::range::joined_range&lt;utils::small_vector&lt;gms::inet_address, 3ul&gt;, utils::small_vector&lt;gms::inet_address, 1ul&gt; &gt;, std::_Bind&lt;bool  (1 samples, 0.02%)</title><rect x="1129.3" y="1605" width="0.2" height="15.0" fill="rgb(244,29,29)" rx="2" ry="2" />
<text  x="1132.26" y="1615.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (14 samples, 0.27%)</title><rect x="1186.2" y="1765" width="3.1" height="15.0" fill="rgb(225,127,5)" rx="2" ry="2" />
<text  x="1189.19" y="1775.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (1 samples, 0.02%)</title><rect x="27.7" y="1589" width="0.2" height="15.0" fill="rgb(234,207,48)" rx="2" ry="2" />
<text  x="30.71" y="1599.5" ></text>
</g>
<g >
<title>dht::ring_position::as_decorated_key (6 samples, 0.11%)</title><rect x="489.6" y="1749" width="1.4" height="15.0" fill="rgb(244,185,45)" rx="2" ry="2" />
<text  x="492.62" y="1759.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (4 samples, 0.08%)</title><rect x="774.3" y="1733" width="0.9" height="15.0" fill="rgb(214,52,34)" rx="2" ry="2" />
<text  x="777.25" y="1743.5" ></text>
</g>
<g >
<title>schema::partition_key_size (1 samples, 0.02%)</title><rect x="650.8" y="1861" width="0.2" height="15.0" fill="rgb(235,125,31)" rx="2" ry="2" />
<text  x="653.76" y="1871.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::operator (2 samples, 0.04%)</title><rect x="847.1" y="1909" width="0.4" height="15.0" fill="rgb(230,198,50)" rx="2" ry="2" />
<text  x="850.09" y="1919.5" ></text>
</g>
<g >
<title>seastar::logger::log&lt;dht::token const&amp;, utils::small_vector&lt;gms::inet_address, 3ul&gt;&amp;, utils::small_vector&lt;gms::inet_address, 3ul&gt;&amp;, db::read_repair_decision&amp;&gt; (1 samples, 0.02%)</title><rect x="1043.4" y="1765" width="0.2" height="15.0" fill="rgb(248,211,43)" rx="2" ry="2" />
<text  x="1046.42" y="1775.5" ></text>
</g>
<g >
<title>query::querier_base::querier_base (442 samples, 8.40%)</title><rect x="458.9" y="1845" width="99.1" height="15.0" fill="rgb(212,197,37)" rx="2" ry="2" />
<text  x="461.92" y="1855.5" >query::quer..</text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="266.4" y="1605" width="0.2" height="15.0" fill="rgb(245,159,10)" rx="2" ry="2" />
<text  x="269.40" y="1615.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (1 samples, 0.02%)</title><rect x="809.7" y="1813" width="0.2" height="15.0" fill="rgb(253,94,18)" rx="2" ry="2" />
<text  x="812.67" y="1823.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_slice_or_needs_filtering (2 samples, 0.04%)</title><rect x="73.9" y="1797" width="0.4" height="15.0" fill="rgb(215,72,45)" rx="2" ry="2" />
<text  x="76.87" y="1807.5" ></text>
</g>
<g >
<title>seastar::internal::repeater&lt;flat_mutation_reader::impl::consume_pausable&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (1 samples, 0.02%)</title><rect x="846.9" y="1925" width="0.2" height="15.0" fill="rgb(216,159,15)" rx="2" ry="2" />
<text  x="849.87" y="1935.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (1 samples, 0.02%)</title><rect x="1129.9" y="1653" width="0.3" height="15.0" fill="rgb(247,22,46)" rx="2" ry="2" />
<text  x="1132.94" y="1663.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (14 samples, 0.27%)</title><rect x="1186.2" y="1733" width="3.1" height="15.0" fill="rgb(244,70,51)" rx="2" ry="2" />
<text  x="1189.19" y="1743.5" ></text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;void&gt;, service::storage_proxy*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt;, db::consistency_level, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, tracing::trace_state_ptr, service_permit, bool, seastar::lw_shared_ptr&lt;cdc::operation_result_tracker&gt; &gt;::make_stage_for_group (35 samples, 0.66%)</title><rect x="1122.3" y="1829" width="7.9" height="15.0" fill="rgb(245,210,0)" rx="2" ry="2" />
<text  x="1125.32" y="1839.5" ></text>
</g>
<g >
<title>query_result_builder::consume (1 samples, 0.02%)</title><rect x="686.8" y="1717" width="0.3" height="15.0" fill="rgb(252,37,40)" rx="2" ry="2" />
<text  x="689.85" y="1727.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::handle_exception&lt;cql3::query_processor::execute_prepared (1 samples, 0.02%)</title><rect x="750.3" y="1829" width="0.2" height="15.0" fill="rgb(249,165,38)" rx="2" ry="2" />
<text  x="753.27" y="1839.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_result_local (1 samples, 0.02%)</title><rect x="956.5" y="1701" width="0.2" height="15.0" fill="rgb(211,92,42)" rx="2" ry="2" />
<text  x="959.47" y="1711.5" ></text>
</g>
<g >
<title>partition_version_ref::operator* (1 samples, 0.02%)</title><rect x="533.1" y="1637" width="0.2" height="15.0" fill="rgb(253,227,15)" rx="2" ry="2" />
<text  x="536.10" y="1647.5" ></text>
</g>
<g >
<title>mutation_reader_merger::maybe_add_readers (1 samples, 0.02%)</title><rect x="178.8" y="1717" width="0.2" height="15.0" fill="rgb(236,51,34)" rx="2" ry="2" />
<text  x="181.76" y="1727.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::statements::raw::parsed_statement, std::default_delete&lt;cql3::statements::raw::parsed_statement&gt;, true, true&gt;::operator= (1 samples, 0.02%)</title><rect x="68.5" y="1797" width="0.2" height="15.0" fill="rgb(222,145,0)" rx="2" ry="2" />
<text  x="71.50" y="1807.5" ></text>
</g>
<g >
<title>schema::~schema (1 samples, 0.02%)</title><rect x="12.0" y="2005" width="0.2" height="15.0" fill="rgb(252,93,30)" rx="2" ry="2" />
<text  x="15.02" y="2015.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::find&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="77.7" y="1829" width="0.2" height="15.0" fill="rgb(248,216,50)" rx="2" ry="2" />
<text  x="80.68" y="1839.5" ></text>
</g>
<g >
<title>service::storage_proxy_stats::split_stats::get_ep_stat (1 samples, 0.02%)</title><rect x="1028.9" y="1717" width="0.2" height="15.0" fill="rgb(238,85,4)" rx="2" ry="2" />
<text  x="1031.86" y="1727.5" ></text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;void&gt;, database*, seastar::lw_shared_ptr&lt;schema const&gt;, frozen_mutation const&amp;, tracing::trace_state_ptr, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, seastar::bool_class&lt;db::force_sync_tag&gt; &gt;::make_stage_for_group (31 samples, 0.59%)</title><rect x="1115.1" y="1829" width="7.0" height="15.0" fill="rgb(247,67,39)" rx="2" ry="2" />
<text  x="1118.14" y="1839.5" ></text>
</g>
<g >
<title>sstables::mc::writer::write_cells (1 samples, 0.02%)</title><rect x="1186.2" y="117" width="0.2" height="15.0" fill="rgb(244,112,26)" rx="2" ry="2" />
<text  x="1189.19" y="127.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_wrapped_common&lt;false, seastar::future&lt;void&gt;, seastar::future&lt;void&gt;::handle_exception&lt;service::abstract_read_executor::execute (2 samples, 0.04%)</title><rect x="694.2" y="1877" width="0.5" height="15.0" fill="rgb(249,12,4)" rx="2" ry="2" />
<text  x="697.24" y="1887.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.02%)</title><rect x="613.3" y="1861" width="0.3" height="15.0" fill="rgb(208,1,46)" rx="2" ry="2" />
<text  x="616.34" y="1871.5" ></text>
</g>
<g >
<title>auth::service::start (1 samples, 0.02%)</title><rect x="688.0" y="1909" width="0.2" height="15.0" fill="rgb(231,198,54)" rx="2" ry="2" />
<text  x="690.97" y="1919.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::fillBuffer (82 samples, 1.56%)</title><rect x="25.9" y="1749" width="18.4" height="15.0" fill="rgb(225,89,46)" rx="2" ry="2" />
<text  x="28.91" y="1759.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each_state::parallel_for_each_state (1 samples, 0.02%)</title><rect x="1122.5" y="1685" width="0.3" height="15.0" fill="rgb(214,107,28)" rx="2" ry="2" />
<text  x="1125.54" y="1695.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.02%)</title><rect x="44.7" y="1637" width="0.3" height="15.0" fill="rgb(253,166,15)" rx="2" ry="2" />
<text  x="47.74" y="1647.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;std::function&lt;flat_mutation_reader  (1 samples, 0.02%)</title><rect x="632.2" y="1845" width="0.2" height="15.0" fill="rgb(231,69,23)" rx="2" ry="2" />
<text  x="635.16" y="1855.5" ></text>
</g>
<g >
<title>boost::iterators::filter_iterator&lt;mutation_partition::non_dummy_rows (1 samples, 0.02%)</title><rect x="1125.9" y="1573" width="0.2" height="15.0" fill="rgb(232,110,26)" rx="2" ry="2" />
<text  x="1128.90" y="1583.5" ></text>
</g>
<g >
<title>mutation_fragment::consume&lt;flat_mutation_reader::impl::consumer_adapter&lt;sstables::sstable_writer&gt; &gt; (1 samples, 0.02%)</title><rect x="1187.8" y="149" width="0.2" height="15.0" fill="rgb(251,201,36)" rx="2" ry="2" />
<text  x="1190.76" y="159.5" ></text>
</g>
<g >
<title>memtable::memtable_encoding_stats_collector::update (2 samples, 0.04%)</title><rect x="1118.7" y="1669" width="0.5" height="15.0" fill="rgb(225,221,32)" rx="2" ry="2" />
<text  x="1121.73" y="1679.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (581 samples, 11.04%)</title><rect x="325.1" y="1813" width="130.2" height="15.0" fill="rgb(205,12,35)" rx="2" ry="2" />
<text  x="328.11" y="1823.5" >query::consume_p..</text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::then_wrapped_common&lt;false, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (10 samples, 0.19%)</title><rect x="819.8" y="1845" width="2.2" height="15.0" fill="rgb(235,142,7)" rx="2" ry="2" />
<text  x="822.75" y="1855.5" ></text>
</g>
<g >
<title>operator delete (5 samples, 0.09%)</title><rect x="93.4" y="1909" width="1.1" height="15.0" fill="rgb(243,163,52)" rx="2" ry="2" />
<text  x="96.37" y="1919.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;auth::role_or_anonymous&gt;, seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (6 samples, 0.11%)</title><rect x="800.5" y="1717" width="1.3" height="15.0" fill="rgb(206,203,44)" rx="2" ry="2" />
<text  x="803.48" y="1727.5" ></text>
</g>
<g >
<title>posix_memalign (19 samples, 0.36%)</title><rect x="234.8" y="1477" width="4.3" height="15.0" fill="rgb(228,49,14)" rx="2" ry="2" />
<text  x="237.79" y="1487.5" ></text>
</g>
<g >
<title>reader_permit::used_guard::~used_guard (3 samples, 0.06%)</title><rect x="114.7" y="1893" width="0.6" height="15.0" fill="rgb(217,223,26)" rx="2" ry="2" />
<text  x="117.66" y="1903.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (23 samples, 0.44%)</title><rect x="296.0" y="1717" width="5.1" height="15.0" fill="rgb(226,30,31)" rx="2" ry="2" />
<text  x="298.98" y="1727.5" ></text>
</g>
<g >
<title>db::commitlog::add_entry (3 samples, 0.06%)</title><rect x="1121.4" y="1733" width="0.7" height="15.0" fill="rgb(215,38,3)" rx="2" ry="2" />
<text  x="1124.42" y="1743.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::leaf_node::allocate (1 samples, 0.02%)</title><rect x="220.0" y="1557" width="0.2" height="15.0" fill="rgb(215,29,20)" rx="2" ry="2" />
<text  x="223.00" y="1567.5" ></text>
</g>
<g >
<title>reader_permit::consume_resources (1 samples, 0.02%)</title><rect x="259.7" y="1573" width="0.2" height="15.0" fill="rgb(219,74,46)" rx="2" ry="2" />
<text  x="262.67" y="1583.5" ></text>
</g>
<g >
<title>locator::token_metadata::first_token (1 samples, 0.02%)</title><rect x="1071.2" y="1717" width="0.2" height="15.0" fill="rgb(252,3,16)" rx="2" ry="2" />
<text  x="1074.22" y="1727.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_esft&lt;partition_snapshot&gt;::dispose (3 samples, 0.06%)</title><rect x="581.7" y="1701" width="0.7" height="15.0" fill="rgb(243,4,29)" rx="2" ry="2" />
<text  x="584.73" y="1711.5" ></text>
</g>
<g >
<title>dht::shard_of (1 samples, 0.02%)</title><rect x="1123.7" y="1605" width="0.2" height="15.0" fill="rgb(247,146,3)" rx="2" ry="2" />
<text  x="1126.66" y="1615.5" ></text>
</g>
<g >
<title>seastar::internal::uninitialized_wrapper_base&lt;service::storage_proxy_coordinator_query_result, false&gt;::uninitialized_set&lt;service::storage_proxy_coordinator_query_result&gt; (3 samples, 0.06%)</title><rect x="1140.0" y="1893" width="0.7" height="15.0" fill="rgb(249,222,5)" rx="2" ry="2" />
<text  x="1143.02" y="1903.5" ></text>
</g>
<g >
<title>seastar::schedule_urgent (1 samples, 0.02%)</title><rect x="1131.1" y="1909" width="0.2" height="15.0" fill="rgb(241,112,49)" rx="2" ry="2" />
<text  x="1134.06" y="1919.5" ></text>
</g>
<g >
<title>reader_permit::impl::~impl (27 samples, 0.51%)</title><rect x="121.6" y="1877" width="6.1" height="15.0" fill="rgb(238,52,30)" rx="2" ry="2" />
<text  x="124.61" y="1887.5" ></text>
</g>
<g >
<title>seastar::future&lt;utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (4 samples, 0.08%)</title><rect x="781.2" y="1653" width="0.9" height="15.0" fill="rgb(248,26,45)" rx="2" ry="2" />
<text  x="784.20" y="1663.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.08%)</title><rect x="1135.5" y="1909" width="0.9" height="15.0" fill="rgb(234,166,20)" rx="2" ry="2" />
<text  x="1138.54" y="1919.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::clear (15 samples, 0.28%)</title><rect x="404.5" y="1637" width="3.3" height="15.0" fill="rgb(217,48,34)" rx="2" ry="2" />
<text  x="407.45" y="1647.5" ></text>
</g>
<g >
<title>range_tombstone_list::slice (18 samples, 0.34%)</title><rect x="280.7" y="1637" width="4.1" height="15.0" fill="rgb(240,57,38)" rx="2" ry="2" />
<text  x="283.74" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_next_bkt (1 samples, 0.02%)</title><rect x="108.2" y="1797" width="0.2" height="15.0" fill="rgb(232,99,15)" rx="2" ry="2" />
<text  x="111.17" y="1807.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (4 samples, 0.08%)</title><rect x="658.4" y="1893" width="0.9" height="15.0" fill="rgb(214,35,23)" rx="2" ry="2" />
<text  x="661.38" y="1903.5" ></text>
</g>
<g >
<title>seastar::reactor::del_timer (2 samples, 0.04%)</title><rect x="133.5" y="1797" width="0.4" height="15.0" fill="rgb(243,167,19)" rx="2" ry="2" />
<text  x="136.49" y="1807.5" ></text>
</g>
<g >
<title>mutation_partition::mutation_partition (1 samples, 0.02%)</title><rect x="109.1" y="1765" width="0.2" height="15.0" fill="rgb(226,190,26)" rx="2" ry="2" />
<text  x="112.06" y="1775.5" ></text>
</g>
<g >
<title>seastar::execution_stage::flush (1 samples, 0.02%)</title><rect x="753.6" y="1797" width="0.3" height="15.0" fill="rgb(246,0,27)" rx="2" ry="2" />
<text  x="756.64" y="1807.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::allocate_on (2 samples, 0.04%)</title><rect x="853.8" y="1685" width="0.5" height="15.0" fill="rgb(246,156,27)" rx="2" ry="2" />
<text  x="856.82" y="1695.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="142.7" y="1877" width="0.2" height="15.0" fill="rgb(237,13,15)" rx="2" ry="2" />
<text  x="145.68" y="1887.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::deallocate (3 samples, 0.06%)</title><rect x="577.0" y="1717" width="0.7" height="15.0" fill="rgb(219,40,48)" rx="2" ry="2" />
<text  x="580.03" y="1727.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.04%)</title><rect x="206.6" y="1621" width="0.4" height="15.0" fill="rgb(251,10,29)" rx="2" ry="2" />
<text  x="209.55" y="1631.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::bool_class&lt;mutation_reader_merger::needs_merge_tag&gt; &gt;::take_value (1 samples, 0.02%)</title><rect x="194.2" y="1701" width="0.3" height="15.0" fill="rgb(252,159,45)" rx="2" ry="2" />
<text  x="197.23" y="1711.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (1 samples, 0.02%)</title><rect x="540.5" y="1749" width="0.2" height="15.0" fill="rgb(252,67,51)" rx="2" ry="2" />
<text  x="543.50" y="1759.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;query::result_memory_accounter&gt;::move_it (1 samples, 0.02%)</title><rect x="617.1" y="1861" width="0.3" height="15.0" fill="rgb(216,182,18)" rx="2" ry="2" />
<text  x="620.15" y="1871.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::_S_relocate (3 samples, 0.06%)</title><rect x="55.3" y="1685" width="0.6" height="15.0" fill="rgb(240,20,39)" rx="2" ry="2" />
<text  x="58.27" y="1695.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.02%)</title><rect x="60.0" y="1525" width="0.2" height="15.0" fill="rgb(209,203,45)" rx="2" ry="2" />
<text  x="62.98" y="1535.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="71.0" y="1765" width="0.2" height="15.0" fill="rgb(241,14,45)" rx="2" ry="2" />
<text  x="73.96" y="1775.5" ></text>
</g>
<g >
<title>managed_bytes::external_memory_usage (3 samples, 0.06%)</title><rect x="255.6" y="1525" width="0.7" height="15.0" fill="rgb(223,13,52)" rx="2" ry="2" />
<text  x="258.64" y="1535.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (14 samples, 0.27%)</title><rect x="1186.2" y="1029" width="3.1" height="15.0" fill="rgb(251,55,24)" rx="2" ry="2" />
<text  x="1189.19" y="1039.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (1 samples, 0.02%)</title><rect x="688.2" y="1877" width="0.2" height="15.0" fill="rgb(246,155,24)" rx="2" ry="2" />
<text  x="691.19" y="1887.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::~unique_ptr (2 samples, 0.04%)</title><rect x="56.2" y="1701" width="0.4" height="15.0" fill="rgb(245,194,54)" rx="2" ry="2" />
<text  x="59.17" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;seastar::future&lt;void&gt; &gt;  (119 samples, 2.26%)</title><rect x="570.5" y="1845" width="26.7" height="15.0" fill="rgb(205,52,10)" rx="2" ry="2" />
<text  x="573.53" y="1855.5" >s..</text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (1 samples, 0.02%)</title><rect x="1131.5" y="1925" width="0.2" height="15.0" fill="rgb(239,15,29)" rx="2" ry="2" />
<text  x="1134.50" y="1935.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (2 samples, 0.04%)</title><rect x="1186.6" y="69" width="0.5" height="15.0" fill="rgb(210,213,0)" rx="2" ry="2" />
<text  x="1189.64" y="79.5" ></text>
</g>
<g >
<title>dht::shard_of (1 samples, 0.02%)</title><rect x="989.2" y="1717" width="0.2" height="15.0" fill="rgb(233,15,47)" rx="2" ry="2" />
<text  x="992.19" y="1727.5" ></text>
</g>
<g >
<title>cql3::restrictions::restriction::restriction (1 samples, 0.02%)</title><rect x="73.7" y="1765" width="0.2" height="15.0" fill="rgb(237,180,2)" rx="2" ry="2" />
<text  x="76.65" y="1775.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (3 samples, 0.06%)</title><rect x="1187.3" y="245" width="0.7" height="15.0" fill="rgb(205,27,42)" rx="2" ry="2" />
<text  x="1190.31" y="255.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;, seastar::future&lt;void&gt; &gt;, std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;, seastar::future&lt;void&gt; &gt; &gt; &gt;::~unique_ptr (9 samples, 0.17%)</title><rect x="807.6" y="1813" width="2.1" height="15.0" fill="rgb(212,176,8)" rx="2" ry="2" />
<text  x="810.65" y="1823.5" ></text>
</g>
<g >
<title>seastar::internal::future_base::future_base (1 samples, 0.02%)</title><rect x="80.4" y="1765" width="0.2" height="15.0" fill="rgb(228,96,28)" rx="2" ry="2" />
<text  x="83.37" y="1775.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;std::tuple&lt;std::optional&lt;clustering_key_prefix&gt; &gt; &gt;::clear (1 samples, 0.02%)</title><rect x="617.8" y="1861" width="0.2" height="15.0" fill="rgb(239,36,3)" rx="2" ry="2" />
<text  x="620.82" y="1871.5" ></text>
</g>
<g >
<title>logalloc::basic_region_impl::set_reclaiming_enabled (3 samples, 0.06%)</title><rect x="270.2" y="1621" width="0.7" height="15.0" fill="rgb(223,159,28)" rx="2" ry="2" />
<text  x="273.21" y="1631.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::set_urgent_state (5 samples, 0.09%)</title><rect x="667.6" y="1893" width="1.1" height="15.0" fill="rgb(222,222,16)" rx="2" ry="2" />
<text  x="670.57" y="1903.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;void&gt;::set_urgent_state (1 samples, 0.02%)</title><rect x="113.1" y="1909" width="0.2" height="15.0" fill="rgb(212,85,45)" rx="2" ry="2" />
<text  x="116.10" y="1919.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="81.0" y="1813" width="0.3" height="15.0" fill="rgb(220,95,26)" rx="2" ry="2" />
<text  x="84.05" y="1823.5" ></text>
</g>
<g >
<title>visit&lt;(anonymous namespace)::from_string_visitor&gt; (3 samples, 0.06%)</title><rect x="69.8" y="1781" width="0.7" height="15.0" fill="rgb(220,32,35)" rx="2" ry="2" />
<text  x="72.84" y="1791.5" ></text>
</g>
<g >
<title>do_query_on_all_shards&lt;(anonymous namespace)::data_query_result_builder&gt; (1 samples, 0.02%)</title><rect x="956.5" y="1653" width="0.2" height="15.0" fill="rgb(241,28,36)" rx="2" ry="2" />
<text  x="959.47" y="1663.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="686.8" y="1653" width="0.3" height="15.0" fill="rgb(251,87,52)" rx="2" ry="2" />
<text  x="689.85" y="1663.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::modification_statement (1 samples, 0.02%)</title><rect x="76.6" y="1797" width="0.2" height="15.0" fill="rgb(207,219,22)" rx="2" ry="2" />
<text  x="79.56" y="1807.5" ></text>
</g>
<g >
<title>double_decker&lt;long, memtable_entry, dht::raw_token_less_comparator, dht::ring_position_comparator, 16,  (4 samples, 0.08%)</title><rect x="1117.2" y="1637" width="0.9" height="15.0" fill="rgb(222,73,34)" rx="2" ry="2" />
<text  x="1120.16" y="1647.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (2 samples, 0.04%)</title><rect x="60.0" y="1653" width="0.4" height="15.0" fill="rgb(219,229,13)" rx="2" ry="2" />
<text  x="62.98" y="1663.5" ></text>
</g>
<g >
<title>seastar::futurize_invoke&lt;seastar::future&lt;void&gt;  (1 samples, 0.02%)</title><rect x="688.0" y="1845" width="0.2" height="15.0" fill="rgb(225,2,44)" rx="2" ry="2" />
<text  x="690.97" y="1855.5" ></text>
</g>
<g >
<title>memtable::apply (26 samples, 0.49%)</title><rect x="1115.4" y="1685" width="5.8" height="15.0" fill="rgb(205,52,4)" rx="2" ry="2" />
<text  x="1118.37" y="1695.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::local (3 samples, 0.06%)</title><rect x="1044.1" y="1765" width="0.7" height="15.0" fill="rgb(248,42,48)" rx="2" ry="2" />
<text  x="1047.10" y="1775.5" ></text>
</g>
<g >
<title>cql3::operation::set_value::set_value (1 samples, 0.02%)</title><rect x="62.2" y="1717" width="0.2" height="15.0" fill="rgb(226,39,19)" rx="2" ry="2" />
<text  x="65.22" y="1727.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;, seastar::future&lt;void&gt; &gt;, std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;, seastar::future&lt;void&gt; &gt; &gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="816.2" y="1829" width="0.2" height="15.0" fill="rgb(216,41,6)" rx="2" ry="2" />
<text  x="819.17" y="1839.5" ></text>
</g>
<g >
<title>streamed_mutation_freezer::consume_end_of_stream (1 samples, 0.02%)</title><rect x="107.9" y="1637" width="0.3" height="15.0" fill="rgb(250,111,26)" rx="2" ry="2" />
<text  x="110.94" y="1647.5" ></text>
</g>
<g >
<title>__strcmp_avx2 (16 samples, 0.30%)</title><rect x="14.3" y="2005" width="3.5" height="15.0" fill="rgb(232,152,44)" rx="2" ry="2" />
<text  x="17.26" y="2015.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="453.3" y="1797" width="0.2" height="15.0" fill="rgb(219,84,46)" rx="2" ry="2" />
<text  x="456.31" y="1807.5" ></text>
</g>
<g >
<title>auth::resource::resource (6 samples, 0.11%)</title><rect x="767.3" y="1797" width="1.4" height="15.0" fill="rgb(242,25,51)" rx="2" ry="2" />
<text  x="770.31" y="1807.5" ></text>
</g>
<g >
<title>std::apply&lt;service::storage_proxy::query_nonsingular_mutations_locally (3 samples, 0.06%)</title><rect x="107.5" y="1797" width="0.7" height="15.0" fill="rgb(240,151,51)" rx="2" ry="2" />
<text  x="110.49" y="1807.5" ></text>
</g>
<g >
<title>seastar::reactor::do_run (4,819 samples, 91.53%)</title><rect x="84.9" y="1957" width="1080.0" height="15.0" fill="rgb(252,201,1)" rx="2" ry="2" />
<text  x="87.86" y="1967.5" >seastar::reactor::do_run</text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (3 samples, 0.06%)</title><rect x="1147.6" y="1781" width="0.7" height="15.0" fill="rgb(231,137,34)" rx="2" ry="2" />
<text  x="1150.64" y="1791.5" ></text>
</g>
<g >
<title>cql3::single_column_relation::to_term (2 samples, 0.04%)</title><rect x="73.2" y="1781" width="0.5" height="15.0" fill="rgb(240,132,44)" rx="2" ry="2" />
<text  x="76.20" y="1791.5" ></text>
</g>
<g >
<title>database::find_uuid (1 samples, 0.02%)</title><rect x="77.2" y="1829" width="0.3" height="15.0" fill="rgb(232,75,19)" rx="2" ry="2" />
<text  x="80.24" y="1839.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_M_reset (1 samples, 0.02%)</title><rect x="856.1" y="1813" width="0.2" height="15.0" fill="rgb(241,30,3)" rx="2" ry="2" />
<text  x="859.06" y="1823.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::_M_range_initialize&lt;nonwrapping_interval&lt;dht::ring_position&gt; const*&gt; (8 samples, 0.15%)</title><rect x="1025.9" y="1685" width="1.8" height="15.0" fill="rgb(216,151,11)" rx="2" ry="2" />
<text  x="1028.94" y="1695.5" ></text>
</g>
<g >
<title>seastar::memory::stats (1 samples, 0.02%)</title><rect x="540.7" y="1749" width="0.2" height="15.0" fill="rgb(211,39,34)" rx="2" ry="2" />
<text  x="543.72" y="1759.5" ></text>
</g>
<g >
<title>db::schema_tables::calculate_schema_digest (3 samples, 0.06%)</title><rect x="107.5" y="1877" width="0.7" height="15.0" fill="rgb(215,44,48)" rx="2" ry="2" />
<text  x="110.49" y="1887.5" ></text>
</g>
<g >
<title>allocation_strategy::destroy&lt;rows_entry&gt; (1 samples, 0.02%)</title><rect x="10.7" y="1877" width="0.2" height="15.0" fill="rgb(246,29,52)" rx="2" ry="2" />
<text  x="13.67" y="1887.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (243 samples, 4.62%)</title><rect x="212.8" y="1653" width="54.5" height="15.0" fill="rgb(224,133,1)" rx="2" ry="2" />
<text  x="215.83" y="1663.5" >parti..</text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="834.8" y="1797" width="0.2" height="15.0" fill="rgb(213,170,41)" rx="2" ry="2" />
<text  x="837.77" y="1807.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;service::storage_proxy_coordinator_query_result&gt;, seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::finally_body&lt;service::storage_proxy::do_query (1 samples, 0.02%)</title><rect x="85.1" y="1941" width="0.2" height="15.0" fill="rgb(253,182,2)" rx="2" ry="2" />
<text  x="88.08" y="1951.5" ></text>
</g>
<g >
<title>query::querier_base::~querier_base (37 samples, 0.70%)</title><rect x="597.2" y="1861" width="8.3" height="15.0" fill="rgb(236,112,28)" rx="2" ry="2" />
<text  x="600.20" y="1871.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (1 samples, 0.02%)</title><rect x="1121.2" y="1685" width="0.2" height="15.0" fill="rgb(230,203,22)" rx="2" ry="2" />
<text  x="1124.19" y="1695.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::~partition_snapshot_flat_reader (42 samples, 0.80%)</title><rect x="576.1" y="1749" width="9.4" height="15.0" fill="rgb(240,56,53)" rx="2" ry="2" />
<text  x="579.13" y="1759.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (9 samples, 0.17%)</title><rect x="1046.1" y="1733" width="2.0" height="15.0" fill="rgb(211,138,2)" rx="2" ry="2" />
<text  x="1049.11" y="1743.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::size (2 samples, 0.04%)</title><rect x="939.4" y="1829" width="0.5" height="15.0" fill="rgb(220,118,44)" rx="2" ry="2" />
<text  x="942.43" y="1839.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;auth::resource&gt;::_Optional_payload_base (2 samples, 0.04%)</title><rect x="773.6" y="1717" width="0.4" height="15.0" fill="rgb(208,66,52)" rx="2" ry="2" />
<text  x="776.58" y="1727.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::reserve (1 samples, 0.02%)</title><rect x="159.3" y="1845" width="0.2" height="15.0" fill="rgb(216,36,49)" rx="2" ry="2" />
<text  x="162.26" y="1855.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (5 samples, 0.09%)</title><rect x="778.1" y="1653" width="1.1" height="15.0" fill="rgb(234,156,30)" rx="2" ry="2" />
<text  x="781.06" y="1663.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (1 samples, 0.02%)</title><rect x="670.9" y="1893" width="0.3" height="15.0" fill="rgb(254,213,34)" rx="2" ry="2" />
<text  x="673.93" y="1903.5" ></text>
</g>
<g >
<title>logalloc::basic_region_impl::set_reclaiming_enabled (1 samples, 0.02%)</title><rect x="543.6" y="1749" width="0.3" height="15.0" fill="rgb(230,147,40)" rx="2" ry="2" />
<text  x="546.63" y="1759.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::drop_expired_front (1 samples, 0.02%)</title><rect x="132.6" y="1829" width="0.2" height="15.0" fill="rgb(241,210,3)" rx="2" ry="2" />
<text  x="135.59" y="1839.5" ></text>
</g>
<g >
<title>locator::calculate_effective_replication_map (1 samples, 0.02%)</title><rect x="20.3" y="1845" width="0.2" height="15.0" fill="rgb(231,22,23)" rx="2" ry="2" />
<text  x="23.31" y="1855.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.06%)</title><rect x="567.4" y="1829" width="0.7" height="15.0" fill="rgb(245,60,42)" rx="2" ry="2" />
<text  x="570.39" y="1839.5" ></text>
</g>
<g >
<title>query::querier_base::close (124 samples, 2.36%)</title><rect x="569.4" y="1861" width="27.8" height="15.0" fill="rgb(230,109,32)" rx="2" ry="2" />
<text  x="572.41" y="1871.5" >q..</text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::trivial_direct_move&lt;8ul&gt; (1 samples, 0.02%)</title><rect x="979.5" y="1669" width="0.3" height="15.0" fill="rgb(243,228,26)" rx="2" ry="2" />
<text  x="982.55" y="1679.5" ></text>
</g>
<g >
<title>db::assure_sufficient_live_nodes&lt;utils::small_vector&lt;gms::inet_address, 3ul&gt;, std::array&lt;gms::inet_address, 0ul&gt; &gt; (1 samples, 0.02%)</title><rect x="1041.2" y="1765" width="0.2" height="15.0" fill="rgb(220,141,30)" rx="2" ry="2" />
<text  x="1044.18" y="1775.5" ></text>
</g>
<g >
<title>sstables::mc::writer::consume (1 samples, 0.02%)</title><rect x="1188.0" y="85" width="0.2" height="15.0" fill="rgb(231,177,54)" rx="2" ry="2" />
<text  x="1190.98" y="95.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="62.0" y="1685" width="0.2" height="15.0" fill="rgb(208,170,27)" rx="2" ry="2" />
<text  x="65.00" y="1695.5" ></text>
</g>
<g >
<title>query::result_view::consume&lt;query::result_set_builder&amp;&gt; (1 samples, 0.02%)</title><rect x="108.2" y="1877" width="0.2" height="15.0" fill="rgb(251,221,40)" rx="2" ry="2" />
<text  x="111.17" y="1887.5" ></text>
</g>
<g >
<title>boost::intrusive::bstbase&lt;boost::intrusive::mhtraits&lt;range_tombstone_entry, boost::intrusive::set_member_hook&lt;boost::intrusive::link_mode&lt; (2 samples, 0.04%)</title><rect x="579.0" y="1717" width="0.5" height="15.0" fill="rgb(249,29,49)" rx="2" ry="2" />
<text  x="582.04" y="1727.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEENK4$_43clERKNSF_15binary_operatorEEUlRKNSF_12column_valueEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_17tuple_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlNSF_5tokenEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlSS_E_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_11conjunctionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_8constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_21unresolved_identifierEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_25column_mutation_attributeEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13function_callEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4castEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_15field_selectionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4nullEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13bind_variableEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_16untyped_constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_22collection_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_20usertype_constructorEE_EERS4_IJS14_SQ_ST_S11_S1C_S1G_S1K_S1O_S1S_S1W_S20_S24_S18_SX_S28_S2C_EEEJEEESt16integer_sequenceImJLm2EEEE14__visit_invokeES2H_S2J_ (1 samples, 0.02%)</title><rect x="850.7" y="1749" width="0.2" height="15.0" fill="rgb(237,173,38)" rx="2" ry="2" />
<text  x="853.68" y="1759.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (3 samples, 0.06%)</title><rect x="1047.5" y="1717" width="0.6" height="15.0" fill="rgb(239,52,46)" rx="2" ry="2" />
<text  x="1050.46" y="1727.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate_to_raw_view (98 samples, 1.86%)</title><rect x="877.6" y="1781" width="21.9" height="15.0" fill="rgb(218,8,22)" rx="2" ry="2" />
<text  x="880.57" y="1791.5" >c..</text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_clear (3 samples, 0.06%)</title><rect x="594.7" y="1797" width="0.7" height="15.0" fill="rgb(249,186,25)" rx="2" ry="2" />
<text  x="597.73" y="1807.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector (2 samples, 0.04%)</title><rect x="1053.3" y="1733" width="0.4" height="15.0" fill="rgb(225,126,40)" rx="2" ry="2" />
<text  x="1056.29" y="1743.5" ></text>
</g>
<g >
<title>atomic_cell::atomic_cell (1 samples, 0.02%)</title><rect x="1119.2" y="1653" width="0.2" height="15.0" fill="rgb(232,214,16)" rx="2" ry="2" />
<text  x="1122.18" y="1663.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a24d06c195bd126a1ed21a4439682d7f2fceb96c] (1 samples, 0.02%)</title><rect x="887.7" y="1685" width="0.2" height="15.0" fill="rgb(236,128,35)" rx="2" ry="2" />
<text  x="890.66" y="1695.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (1 samples, 0.02%)</title><rect x="177.9" y="1733" width="0.2" height="15.0" fill="rgb(227,84,14)" rx="2" ry="2" />
<text  x="180.87" y="1743.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.08%)</title><rect x="520.5" y="1717" width="0.9" height="15.0" fill="rgb(218,221,8)" rx="2" ry="2" />
<text  x="523.55" y="1727.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_28has_slice_or_needs_filteringERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES28_S2B_ (1 samples, 0.02%)</title><rect x="74.1" y="1749" width="0.2" height="15.0" fill="rgb(252,208,19)" rx="2" ry="2" />
<text  x="77.10" y="1759.5" ></text>
</g>
<g >
<title>write_fragmented&lt;managed_bytes_basic_view&lt; (17 samples, 0.32%)</title><rect x="890.1" y="1685" width="3.8" height="15.0" fill="rgb(245,1,34)" rx="2" ry="2" />
<text  x="893.13" y="1695.5" ></text>
</g>
<g >
<title>cql3::restrictions::has_eq_null (6 samples, 0.11%)</title><rect x="848.4" y="1781" width="1.4" height="15.0" fill="rgb(225,155,50)" rx="2" ry="2" />
<text  x="851.44" y="1791.5" ></text>
</g>
<g >
<title>cql3::update_parameters::make_cell (1 samples, 0.02%)</title><rect x="852.5" y="1717" width="0.2" height="15.0" fill="rgb(243,170,22)" rx="2" ry="2" />
<text  x="855.47" y="1727.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (2 samples, 0.04%)</title><rect x="1188.9" y="197" width="0.4" height="15.0" fill="rgb(250,54,25)" rx="2" ry="2" />
<text  x="1191.88" y="207.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_last_fragment_kind, 4ul&gt;::emplace_back&lt;std::_List_iterator&lt;flat_mutation_reader&gt;, mutation_fragment::kind&gt; (1 samples, 0.02%)</title><rect x="305.6" y="1749" width="0.2" height="15.0" fill="rgb(231,162,16)" rx="2" ry="2" />
<text  x="308.62" y="1759.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_map&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::at&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt; &gt; (11 samples, 0.21%)</title><rect x="811.7" y="1765" width="2.4" height="15.0" fill="rgb(245,46,29)" rx="2" ry="2" />
<text  x="814.68" y="1775.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (1 samples, 0.02%)</title><rect x="48.3" y="1701" width="0.2" height="15.0" fill="rgb(228,210,24)" rx="2" ry="2" />
<text  x="51.32" y="1711.5" ></text>
</g>
<g >
<title>schema::column_at (10 samples, 0.19%)</title><rect x="247.8" y="1541" width="2.2" height="15.0" fill="rgb(217,166,8)" rx="2" ry="2" />
<text  x="250.79" y="1551.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (1 samples, 0.02%)</title><rect x="49.7" y="1717" width="0.2" height="15.0" fill="rgb(222,89,2)" rx="2" ry="2" />
<text  x="52.67" y="1727.5" ></text>
</g>
<g >
<title>std::operator+ (2 samples, 0.04%)</title><rect x="63.3" y="1621" width="0.5" height="15.0" fill="rgb(209,72,51)" rx="2" ry="2" />
<text  x="66.34" y="1631.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="535.6" y="1701" width="0.2" height="15.0" fill="rgb(223,153,17)" rx="2" ry="2" />
<text  x="538.57" y="1711.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_M_reset (8 samples, 0.15%)</title><rect x="1088.0" y="1797" width="1.8" height="15.0" fill="rgb(220,164,9)" rx="2" ry="2" />
<text  x="1091.02" y="1807.5" ></text>
</g>
<g >
<title>service::storage_proxy::do_query (1 samples, 0.02%)</title><rect x="107.3" y="1845" width="0.2" height="15.0" fill="rgb(210,123,37)" rx="2" ry="2" />
<text  x="110.27" y="1855.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_one (2 samples, 0.04%)</title><rect x="107.5" y="1493" width="0.4" height="15.0" fill="rgb(208,172,51)" rx="2" ry="2" />
<text  x="110.49" y="1503.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (2 samples, 0.04%)</title><rect x="44.5" y="1749" width="0.5" height="15.0" fill="rgb(222,33,41)" rx="2" ry="2" />
<text  x="47.51" y="1759.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::vector (3 samples, 0.06%)</title><rect x="1110.4" y="1845" width="0.7" height="15.0" fill="rgb(216,126,2)" rx="2" ry="2" />
<text  x="1113.44" y="1855.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (3 samples, 0.06%)</title><rect x="922.4" y="1765" width="0.7" height="15.0" fill="rgb(224,137,0)" rx="2" ry="2" />
<text  x="925.40" y="1775.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::take (2 samples, 0.04%)</title><rect x="1138.7" y="1893" width="0.4" height="15.0" fill="rgb(236,77,14)" rx="2" ry="2" />
<text  x="1141.68" y="1903.5" ></text>
</g>
<g >
<title>utils::loading_shared_values&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater, 256ul&gt;::find&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt; &gt; (23 samples, 0.44%)</title><rect x="730.8" y="1813" width="5.1" height="15.0" fill="rgb(211,190,6)" rx="2" ry="2" />
<text  x="733.77" y="1823.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_live_endpoints (79 samples, 1.50%)</title><rect x="1055.8" y="1749" width="17.7" height="15.0" fill="rgb(219,153,8)" rx="2" ry="2" />
<text  x="1058.75" y="1759.5" ></text>
</g>
<g >
<title>query::querier&lt; (2 samples, 0.04%)</title><rect x="120.5" y="1877" width="0.4" height="15.0" fill="rgb(232,202,39)" rx="2" ry="2" />
<text  x="123.49" y="1887.5" ></text>
</g>
<g >
<title>operator delete (7 samples, 0.13%)</title><rect x="655.9" y="1909" width="1.6" height="15.0" fill="rgb(242,141,0)" rx="2" ry="2" />
<text  x="658.92" y="1919.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::maybe_decay_reserve (1 samples, 0.02%)</title><rect x="548.3" y="1733" width="0.3" height="15.0" fill="rgb(212,56,49)" rx="2" ry="2" />
<text  x="551.34" y="1743.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_9has_tokenERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES28_S2B_ (1 samples, 0.02%)</title><rect x="875.6" y="1813" width="0.2" height="15.0" fill="rgb(233,50,12)" rx="2" ry="2" />
<text  x="878.56" y="1823.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (2 samples, 0.04%)</title><rect x="50.6" y="1621" width="0.4" height="15.0" fill="rgb(242,109,35)" rx="2" ry="2" />
<text  x="53.57" y="1631.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.06%)</title><rect x="828.3" y="1829" width="0.6" height="15.0" fill="rgb(231,144,13)" rx="2" ry="2" />
<text  x="831.27" y="1839.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (1 samples, 0.02%)</title><rect x="766.9" y="1749" width="0.2" height="15.0" fill="rgb(235,134,10)" rx="2" ry="2" />
<text  x="769.86" y="1759.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;std::tuple&lt;std::optional&lt;clustering_key_prefix&gt; &gt; &gt;::take_value (1 samples, 0.02%)</title><rect x="560.0" y="1845" width="0.2" height="15.0" fill="rgb(212,160,16)" rx="2" ry="2" />
<text  x="562.99" y="1855.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::populate_slot (1 samples, 0.02%)</title><rect x="854.3" y="1701" width="0.2" height="15.0" fill="rgb(247,97,2)" rx="2" ry="2" />
<text  x="857.27" y="1711.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.02%)</title><rect x="1188.9" y="165" width="0.2" height="15.0" fill="rgb(238,39,17)" rx="2" ry="2" />
<text  x="1191.88" y="175.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (1 samples, 0.02%)</title><rect x="601.0" y="1829" width="0.2" height="15.0" fill="rgb(231,213,31)" rx="2" ry="2" />
<text  x="604.01" y="1839.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (2 samples, 0.04%)</title><rect x="53.9" y="1733" width="0.5" height="15.0" fill="rgb(249,195,11)" rx="2" ry="2" />
<text  x="56.93" y="1743.5" ></text>
</g>
<g >
<title>boost::intrusive::bstbase&lt;boost::intrusive::mhtraits&lt;range_tombstone_entry, boost::intrusive::set_member_hook&lt;boost::intrusive::link_mode&lt; (1 samples, 0.02%)</title><rect x="1162.7" y="1781" width="0.2" height="15.0" fill="rgb(221,216,34)" rx="2" ry="2" />
<text  x="1165.66" y="1791.5" ></text>
</g>
<g >
<title>tests::random::get_int&lt;unsigned long&gt; (11 samples, 0.21%)</title><rect x="841.9" y="1893" width="2.5" height="15.0" fill="rgb(225,183,27)" rx="2" ry="2" />
<text  x="844.94" y="1903.5" ></text>
</g>
<g >
<title>compound_type&lt; (15 samples, 0.28%)</title><rect x="921.3" y="1797" width="3.3" height="15.0" fill="rgb(249,105,38)" rx="2" ry="2" />
<text  x="924.28" y="1807.5" ></text>
</g>
<g >
<title>std::apply&lt;service::client_state::has_column_family_access (6 samples, 0.11%)</title><rect x="79.3" y="1877" width="1.3" height="15.0" fill="rgb(221,89,49)" rx="2" ry="2" />
<text  x="82.25" y="1887.5" ></text>
</g>
<g >
<title>partition_snapshot::~partition_snapshot (1 samples, 0.02%)</title><rect x="581.5" y="1701" width="0.2" height="15.0" fill="rgb(220,90,31)" rx="2" ry="2" />
<text  x="584.51" y="1711.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_destroy_data_aux (3 samples, 0.06%)</title><rect x="406.7" y="1573" width="0.7" height="15.0" fill="rgb(247,15,24)" rx="2" ry="2" />
<text  x="409.70" y="1583.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (1 samples, 0.02%)</title><rect x="654.3" y="1877" width="0.3" height="15.0" fill="rgb(221,130,13)" rx="2" ry="2" />
<text  x="657.35" y="1887.5" ></text>
</g>
<g >
<title>compound_type&lt; (1 samples, 0.02%)</title><rect x="508.2" y="1653" width="0.2" height="15.0" fill="rgb(223,126,1)" rx="2" ry="2" />
<text  x="511.22" y="1663.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="1118.5" y="1621" width="0.2" height="15.0" fill="rgb(238,117,30)" rx="2" ry="2" />
<text  x="1121.51" y="1631.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="439.4" y="1605" width="0.2" height="15.0" fill="rgb(250,224,20)" rx="2" ry="2" />
<text  x="442.42" y="1615.5" ></text>
</g>
<g >
<title>std::forward&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt; &gt; (2 samples, 0.04%)</title><rect x="54.6" y="1717" width="0.4" height="15.0" fill="rgb(239,68,30)" rx="2" ry="2" />
<text  x="57.60" y="1727.5" ></text>
</g>
<g >
<title>_dl_fixup (1 samples, 0.02%)</title><rect x="1189.8" y="1973" width="0.2" height="15.0" fill="rgb(207,5,30)" rx="2" ry="2" />
<text  x="1192.78" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_allocate_node&lt;nonwrapping_interval&lt;dht::token&gt;, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; (7 samples, 0.13%)</title><rect x="1148.3" y="1877" width="1.6" height="15.0" fill="rgb(216,140,22)" rx="2" ry="2" />
<text  x="1151.31" y="1887.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="630.6" y="1829" width="0.2" height="15.0" fill="rgb(228,167,2)" rx="2" ry="2" />
<text  x="633.59" y="1839.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.02%)</title><rect x="49.0" y="1717" width="0.2" height="15.0" fill="rgb(229,2,16)" rx="2" ry="2" />
<text  x="52.00" y="1727.5" ></text>
</g>
<g >
<title>utils::approx_exponential_histogram&lt;512ul, 33554432ul, 4ul&gt;::find_bucket_index (1 samples, 0.02%)</title><rect x="614.9" y="1845" width="0.2" height="15.0" fill="rgb(215,98,49)" rx="2" ry="2" />
<text  x="617.90" y="1855.5" ></text>
</g>
<g >
<title>tracing::global_trace_state_ptr::global_trace_state_ptr (1 samples, 0.02%)</title><rect x="1029.1" y="1717" width="0.2" height="15.0" fill="rgb(221,51,46)" rx="2" ry="2" />
<text  x="1032.08" y="1727.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (7 samples, 0.13%)</title><rect x="250.0" y="1541" width="1.6" height="15.0" fill="rgb(238,84,53)" rx="2" ry="2" />
<text  x="253.03" y="1551.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (11 samples, 0.21%)</title><rect x="427.1" y="1669" width="2.5" height="15.0" fill="rgb(215,82,7)" rx="2" ry="2" />
<text  x="430.09" y="1679.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="1116.7" y="1589" width="0.2" height="15.0" fill="rgb(230,71,17)" rx="2" ry="2" />
<text  x="1119.71" y="1599.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume_in_thread&lt;sstables::sstable_writer, flat_mutation_reader::no_filter&gt; (2 samples, 0.04%)</title><rect x="1188.4" y="133" width="0.5" height="15.0" fill="rgb(209,96,12)" rx="2" ry="2" />
<text  x="1191.43" y="143.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.02%)</title><rect x="27.7" y="1605" width="0.2" height="15.0" fill="rgb(223,88,16)" rx="2" ry="2" />
<text  x="30.71" y="1615.5" ></text>
</g>
<g >
<title>fmt::v7::detail::convert_arg&lt;void, fmt::v7::basic_printf_context&lt;fmt::v7::detail::buffer_appender&lt;char&gt;, char&gt;, char&gt; (1 samples, 0.02%)</title><rect x="23.0" y="1925" width="0.2" height="15.0" fill="rgb(240,79,39)" rx="2" ry="2" />
<text  x="26.00" y="1935.5" ></text>
</g>
<g >
<title>utils::tuple_hash::operator (1 samples, 0.02%)</title><rect x="77.5" y="1797" width="0.2" height="15.0" fill="rgb(234,180,40)" rx="2" ry="2" />
<text  x="80.46" y="1807.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::cql_statement&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="646.3" y="1909" width="0.2" height="15.0" fill="rgb(213,105,24)" rx="2" ry="2" />
<text  x="649.28" y="1919.5" ></text>
</g>
<g >
<title>visit&lt;(anonymous namespace)::validate_visitor&lt;managed_bytes_basic_view&lt; (5 samples, 0.09%)</title><rect x="884.3" y="1685" width="1.1" height="15.0" fill="rgb(235,134,49)" rx="2" ry="2" />
<text  x="887.30" y="1695.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperationDifferentiator (56 samples, 1.06%)</title><rect x="50.3" y="1765" width="12.6" height="15.0" fill="rgb(241,176,2)" rx="2" ry="2" />
<text  x="53.34" y="1775.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, flat_mutation_reader::impl::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (5 samples, 0.09%)</title><rect x="686.8" y="1813" width="1.2" height="15.0" fill="rgb(225,204,27)" rx="2" ry="2" />
<text  x="689.85" y="1823.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt; &gt;, seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (13 samples, 0.25%)</title><rect x="797.1" y="1685" width="2.9" height="15.0" fill="rgb(234,134,9)" rx="2" ry="2" />
<text  x="800.11" y="1695.5" ></text>
</g>
<g >
<title>std::make_unique&lt;compact_for_query&lt; (4 samples, 0.08%)</title><rect x="451.5" y="1781" width="0.9" height="15.0" fill="rgb(231,204,33)" rx="2" ry="2" />
<text  x="454.52" y="1791.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (2 samples, 0.04%)</title><rect x="555.3" y="1765" width="0.4" height="15.0" fill="rgb(208,134,24)" rx="2" ry="2" />
<text  x="558.29" y="1775.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;cql3::single_column_relation, true&gt;::make&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, cql3::expr::oper_t&amp;, cql3::expr::expression&gt; (1 samples, 0.02%)</title><rect x="65.4" y="1749" width="0.2" height="15.0" fill="rgb(252,8,21)" rx="2" ry="2" />
<text  x="68.36" y="1759.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (5 samples, 0.09%)</title><rect x="1188.2" y="229" width="1.1" height="15.0" fill="rgb(243,168,42)" rx="2" ry="2" />
<text  x="1191.21" y="239.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (9 samples, 0.17%)</title><rect x="597.4" y="1845" width="2.0" height="15.0" fill="rgb(239,60,0)" rx="2" ry="2" />
<text  x="600.42" y="1855.5" ></text>
</g>
<g >
<title>cql3::single_column_relation::to_receivers (1 samples, 0.02%)</title><rect x="73.0" y="1781" width="0.2" height="15.0" fill="rgb(216,20,13)" rx="2" ry="2" />
<text  x="75.98" y="1791.5" ></text>
</g>
<g >
<title>std::vector&lt;seastar::shared_ptr&lt;cql3::relation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::relation&gt; &gt; &gt;::emplace_back&lt;seastar::shared_ptr&lt;cql3::single_column_relation&gt; &gt; (1 samples, 0.02%)</title><rect x="65.6" y="1749" width="0.2" height="15.0" fill="rgb(253,20,26)" rx="2" ry="2" />
<text  x="68.58" y="1759.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::digest_read_result&gt;::set&lt;service::digest_read_result&gt; (3 samples, 0.06%)</title><rect x="707.5" y="1829" width="0.6" height="15.0" fill="rgb(213,18,8)" rx="2" ry="2" />
<text  x="710.47" y="1839.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, std::pair&lt;unsigned int const, unsigned int&gt;, std::_Select1st&lt;std::pair&lt;unsigned int const, unsigned int&gt; &gt;, std::less&lt;unsigned int&gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;std::pair&lt;unsigned int const, unsigned int&gt; &gt; &gt;::empty (1 samples, 0.02%)</title><rect x="42.9" y="1717" width="0.3" height="15.0" fill="rgb(236,219,19)" rx="2" ry="2" />
<text  x="45.95" y="1727.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.02%)</title><rect x="50.3" y="1589" width="0.3" height="15.0" fill="rgb(222,154,34)" rx="2" ry="2" />
<text  x="53.34" y="1599.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.02%)</title><rect x="60.9" y="1525" width="0.2" height="15.0" fill="rgb(254,51,19)" rx="2" ry="2" />
<text  x="63.88" y="1535.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::on_permit_unused (4 samples, 0.08%)</title><rect x="128.6" y="1861" width="0.9" height="15.0" fill="rgb(234,130,52)" rx="2" ry="2" />
<text  x="131.56" y="1871.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_requests (215 samples, 4.08%)</title><rect x="981.8" y="1765" width="48.2" height="15.0" fill="rgb(220,171,49)" rx="2" ry="2" />
<text  x="984.79" y="1775.5" >serv..</text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;service::query_state&gt;::~shared_ptr_count_for (2 samples, 0.04%)</title><rect x="669.8" y="1909" width="0.5" height="15.0" fill="rgb(253,141,13)" rx="2" ry="2" />
<text  x="672.81" y="1919.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mTokens (9 samples, 0.17%)</title><rect x="40.3" y="1685" width="2.0" height="15.0" fill="rgb(239,117,27)" rx="2" ry="2" />
<text  x="43.26" y="1695.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::vector (1 samples, 0.02%)</title><rect x="851.4" y="1781" width="0.2" height="15.0" fill="rgb(211,43,0)" rx="2" ry="2" />
<text  x="854.35" y="1791.5" ></text>
</g>
<g >
<title>ser::serializer&lt;ser::mutation_partition_view&gt;::skip&lt;seastar::simple_memory_input_stream&gt; (1 samples, 0.02%)</title><rect x="1115.6" y="1621" width="0.2" height="15.0" fill="rgb(239,0,30)" rx="2" ry="2" />
<text  x="1118.59" y="1631.5" ></text>
</g>
<g >
<title>schema_registry::get_entry (2 samples, 0.04%)</title><rect x="966.3" y="1781" width="0.5" height="15.0" fill="rgb(223,181,50)" rx="2" ry="2" />
<text  x="969.33" y="1791.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.02%)</title><rect x="57.3" y="1589" width="0.2" height="15.0" fill="rgb(211,163,48)" rx="2" ry="2" />
<text  x="60.29" y="1599.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.08%)</title><rect x="539.6" y="1733" width="0.9" height="15.0" fill="rgb(244,220,26)" rx="2" ry="2" />
<text  x="542.60" y="1743.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::~holder (2 samples, 0.04%)</title><rect x="576.1" y="1733" width="0.5" height="15.0" fill="rgb(244,164,6)" rx="2" ry="2" />
<text  x="579.13" y="1743.5" ></text>
</g>
<g >
<title>std::__equal&lt;true&gt;::equal&lt;char&gt; (2 samples, 0.04%)</title><rect x="789.3" y="1541" width="0.4" height="15.0" fill="rgb(212,129,39)" rx="2" ry="2" />
<text  x="792.27" y="1551.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;compact_for_query&lt; (2 samples, 0.04%)</title><rect x="455.6" y="1813" width="0.4" height="15.0" fill="rgb(234,182,1)" rx="2" ry="2" />
<text  x="458.55" y="1823.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (571 samples, 10.85%)</title><rect x="175.0" y="1749" width="127.9" height="15.0" fill="rgb(235,208,9)" rx="2" ry="2" />
<text  x="177.95" y="1759.5" >mutation_reader_..</text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="900.4" y="1781" width="0.3" height="15.0" fill="rgb(220,159,18)" rx="2" ry="2" />
<text  x="903.43" y="1791.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.04%)</title><rect x="60.0" y="1605" width="0.4" height="15.0" fill="rgb(248,195,37)" rx="2" ry="2" />
<text  x="62.98" y="1615.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (1 samples, 0.02%)</title><rect x="715.8" y="1893" width="0.2" height="15.0" fill="rgb(216,42,38)" rx="2" ry="2" />
<text  x="718.76" y="1903.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::followPop (1 samples, 0.02%)</title><rect x="45.2" y="1781" width="0.2" height="15.0" fill="rgb(245,226,28)" rx="2" ry="2" />
<text  x="48.19" y="1791.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (14 samples, 0.27%)</title><rect x="1186.2" y="1429" width="3.1" height="15.0" fill="rgb(216,170,17)" rx="2" ry="2" />
<text  x="1189.19" y="1439.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="28.4" y="1621" width="0.2" height="15.0" fill="rgb(218,186,32)" rx="2" ry="2" />
<text  x="31.38" y="1631.5" ></text>
</g>
<g >
<title>mutation_partition_serializer::write_serialized&lt;ser::writer_of_mutation_partition&lt;bytes_ostream&gt; &gt; (10 samples, 0.19%)</title><rect x="1125.9" y="1589" width="2.2" height="15.0" fill="rgb(217,52,1)" rx="2" ry="2" />
<text  x="1128.90" y="1599.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_rehash (9 samples, 0.17%)</title><rect x="1146.3" y="1861" width="2.0" height="15.0" fill="rgb(209,79,43)" rx="2" ry="2" />
<text  x="1149.30" y="1871.5" ></text>
</g>
<g >
<title>ser::writer_of_std__optional__qr_cell&lt;bytes_ostream&gt;::write (8 samples, 0.15%)</title><rect x="401.3" y="1589" width="1.8" height="15.0" fill="rgb(225,144,12)" rx="2" ry="2" />
<text  x="404.32" y="1599.5" ></text>
</g>
<g >
<title>cql3::operation::set_value::~set_value (2 samples, 0.04%)</title><rect x="77.9" y="1861" width="0.5" height="15.0" fill="rgb(237,34,20)" rx="2" ry="2" />
<text  x="80.91" y="1871.5" ></text>
</g>
<g >
<title>empty_flat_reader::~empty_flat_reader (2 samples, 0.04%)</title><rect x="573.4" y="1765" width="0.5" height="15.0" fill="rgb(229,228,34)" rx="2" ry="2" />
<text  x="576.44" y="1775.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.02%)</title><rect x="51.7" y="1573" width="0.2" height="15.0" fill="rgb(213,121,15)" rx="2" ry="2" />
<text  x="54.69" y="1583.5" ></text>
</g>
<g >
<title>service::abstract_write_response_handler::delay&lt;service::abstract_write_response_handler::signal (1 samples, 0.02%)</title><rect x="716.0" y="1861" width="0.2" height="15.0" fill="rgb(249,99,33)" rx="2" ry="2" />
<text  x="718.98" y="1871.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.06%)</title><rect x="587.6" y="1765" width="0.6" height="15.0" fill="rgb(206,181,30)" rx="2" ry="2" />
<text  x="590.56" y="1775.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::set&lt;service::storage_proxy_coordinator_query_result&gt; (2 samples, 0.04%)</title><rect x="1139.6" y="1893" width="0.4" height="15.0" fill="rgb(232,216,30)" rx="2" ry="2" />
<text  x="1142.57" y="1903.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment (7 samples, 0.13%)</title><rect x="529.1" y="1637" width="1.5" height="15.0" fill="rgb(205,48,45)" rx="2" ry="2" />
<text  x="532.07" y="1647.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (4 samples, 0.08%)</title><rect x="1081.3" y="1829" width="0.9" height="15.0" fill="rgb(218,34,15)" rx="2" ry="2" />
<text  x="1084.30" y="1839.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.08%)</title><rect x="520.5" y="1701" width="0.9" height="15.0" fill="rgb(245,108,54)" rx="2" ry="2" />
<text  x="523.55" y="1711.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (14 samples, 0.27%)</title><rect x="1186.2" y="1605" width="3.1" height="15.0" fill="rgb(246,146,45)" rx="2" ry="2" />
<text  x="1189.19" y="1615.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;boost::range_detail::integer_iterator&lt;unsigned int&gt;, std::function&lt;seastar::future&lt;void&gt;  (1 samples, 0.02%)</title><rect x="20.1" y="1845" width="0.2" height="15.0" fill="rgb(213,188,51)" rx="2" ry="2" />
<text  x="23.09" y="1855.5" ></text>
</g>
<g >
<title>fmt::v7::vformat_to&lt;seastar::internal::log_buf::inserter_iterator, fmt::v7::basic_string_view&lt;char&gt;, char, true&gt; (1 samples, 0.02%)</title><rect x="688.0" y="1717" width="0.2" height="15.0" fill="rgb(209,145,46)" rx="2" ry="2" />
<text  x="690.97" y="1727.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.04%)</title><rect x="577.3" y="1701" width="0.4" height="15.0" fill="rgb(254,2,7)" rx="2" ry="2" />
<text  x="580.25" y="1711.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (1 samples, 0.02%)</title><rect x="266.2" y="1589" width="0.2" height="15.0" fill="rgb(236,170,24)" rx="2" ry="2" />
<text  x="269.17" y="1599.5" ></text>
</g>
<g >
<title>make_partition_snapshot_flat_reader_from_snp_schema (86 samples, 1.63%)</title><rect x="517.0" y="1749" width="19.2" height="15.0" fill="rgb(245,223,21)" rx="2" ry="2" />
<text  x="519.96" y="1759.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.02%)</title><rect x="1177.0" y="1973" width="0.2" height="15.0" fill="rgb(231,81,39)" rx="2" ry="2" />
<text  x="1180.00" y="1983.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_slice_or_needs_filtering (1 samples, 0.02%)</title><rect x="75.7" y="1781" width="0.2" height="15.0" fill="rgb(224,86,24)" rx="2" ry="2" />
<text  x="78.67" y="1791.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::~statement_restrictions (1 samples, 0.02%)</title><rect x="76.1" y="1829" width="0.2" height="15.0" fill="rgb(234,58,37)" rx="2" ry="2" />
<text  x="79.12" y="1839.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (42 samples, 0.80%)</title><rect x="665.3" y="1925" width="9.4" height="15.0" fill="rgb(210,27,9)" rx="2" ry="2" />
<text  x="668.33" y="1935.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::EqualElement&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (1 samples, 0.02%)</title><rect x="812.4" y="1717" width="0.2" height="15.0" fill="rgb(224,138,35)" rx="2" ry="2" />
<text  x="815.36" y="1727.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::find (3 samples, 0.06%)</title><rect x="651.7" y="1861" width="0.6" height="15.0" fill="rgb(224,26,44)" rx="2" ry="2" />
<text  x="654.66" y="1871.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::populate_slot (1 samples, 0.02%)</title><rect x="19.4" y="1877" width="0.2" height="15.0" fill="rgb(237,9,27)" rx="2" ry="2" />
<text  x="22.41" y="1887.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::execute_without_condition (43 samples, 0.82%)</title><rect x="847.5" y="1845" width="9.7" height="15.0" fill="rgb(215,199,12)" rx="2" ry="2" />
<text  x="850.54" y="1855.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (14 samples, 0.27%)</title><rect x="1186.2" y="1109" width="3.1" height="15.0" fill="rgb(231,122,51)" rx="2" ry="2" />
<text  x="1189.19" y="1119.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value_view, std::allocator&lt;cql3::raw_value_view&gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="674.5" y="1877" width="0.2" height="15.0" fill="rgb(215,53,0)" rx="2" ry="2" />
<text  x="677.52" y="1887.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (1 samples, 0.02%)</title><rect x="71.0" y="1797" width="0.2" height="15.0" fill="rgb(250,199,52)" rx="2" ry="2" />
<text  x="73.96" y="1807.5" ></text>
</g>
<g >
<title>_ZSt5applyIZN7seastar8internal12do_with_implIN4auth17role_or_anonymousEZNS3_15get_permissionsERKNS3_7serviceERKNS3_18authenticated_userERKNS3_8resourceEE3$_9JEEEDaOT_OT0_DpOT1_EUlDpOT_E_St5tupleIJOS4_EEEDcSG_SI_ (3 samples, 0.06%)</title><rect x="775.6" y="1717" width="0.7" height="15.0" fill="rgb(210,99,43)" rx="2" ry="2" />
<text  x="778.60" y="1727.5" ></text>
</g>
<g >
<title>serialize_mutation_fragments (1 samples, 0.02%)</title><rect x="107.9" y="1621" width="0.3" height="15.0" fill="rgb(236,89,32)" rx="2" ry="2" />
<text  x="110.94" y="1631.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::maybe_decay_reserve (1 samples, 0.02%)</title><rect x="214.2" y="1621" width="0.2" height="15.0" fill="rgb(247,150,39)" rx="2" ry="2" />
<text  x="217.17" y="1631.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.02%)</title><rect x="1187.1" y="53" width="0.2" height="15.0" fill="rgb(215,189,27)" rx="2" ry="2" />
<text  x="1190.09" y="63.5" ></text>
</g>
<g >
<title>commitlog_entry_writer::serialize&lt;seastar::memory_output_stream&lt;__gnu_cxx::__normal_iterator&lt;seastar::temporary_buffer&lt;char&gt;*, std::vector&lt;seastar::temporary_buffer&lt;char&gt;, std::allocator&lt;seastar::temporary_buffer&lt;char&gt; &gt; &gt; &gt; &gt; &gt; (2 samples, 0.04%)</title><rect x="1121.4" y="1669" width="0.5" height="15.0" fill="rgb(222,48,23)" rx="2" ry="2" />
<text  x="1124.42" y="1679.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::EqualElement&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (3 samples, 0.06%)</title><rect x="759.5" y="1749" width="0.6" height="15.0" fill="rgb(245,14,49)" rx="2" ry="2" />
<text  x="762.46" y="1759.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_Optional_payload_base (1 samples, 0.02%)</title><rect x="784.3" y="1621" width="0.3" height="15.0" fill="rgb(237,114,47)" rx="2" ry="2" />
<text  x="787.34" y="1631.5" ></text>
</g>
<g >
<title>table::set_hit_rate (12 samples, 0.23%)</title><rect x="711.3" y="1877" width="2.7" height="15.0" fill="rgb(207,129,17)" rx="2" ry="2" />
<text  x="714.28" y="1887.5" ></text>
</g>
<g >
<title>antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;::RecognizerSharedStateType&lt;antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::RecognizerSharedStateType (1 samples, 0.02%)</title><rect x="24.1" y="1781" width="0.2" height="15.0" fill="rgb(243,141,12)" rx="2" ry="2" />
<text  x="27.12" y="1791.5" ></text>
</g>
<g >
<title>ser::serializer&lt;schema_mutations&gt;::read&lt;seastar::simple_memory_input_stream&gt; (1 samples, 0.02%)</title><rect x="107.0" y="1749" width="0.3" height="15.0" fill="rgb(219,6,50)" rx="2" ry="2" />
<text  x="110.04" y="1759.5" ></text>
</g>
<g >
<title>seastar::future&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (7 samples, 0.13%)</title><rect x="782.8" y="1637" width="1.5" height="15.0" fill="rgb(239,154,42)" rx="2" ry="2" />
<text  x="785.77" y="1647.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::execute (2 samples, 0.04%)</title><rect x="816.8" y="1845" width="0.5" height="15.0" fill="rgb(230,20,51)" rx="2" ry="2" />
<text  x="819.84" y="1855.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::statement_restrictions (15 samples, 0.28%)</title><rect x="72.8" y="1829" width="3.3" height="15.0" fill="rgb(243,6,42)" rx="2" ry="2" />
<text  x="75.75" y="1839.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="630.8" y="1797" width="0.2" height="15.0" fill="rgb(253,170,46)" rx="2" ry="2" />
<text  x="633.82" y="1807.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="924.4" y="1781" width="0.2" height="15.0" fill="rgb(214,193,23)" rx="2" ry="2" />
<text  x="927.42" y="1791.5" ></text>
</g>
<g >
<title>sstring_hash::operator (1 samples, 0.02%)</title><rect x="831.9" y="1797" width="0.2" height="15.0" fill="rgb(217,152,11)" rx="2" ry="2" />
<text  x="834.85" y="1807.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (14 samples, 0.27%)</title><rect x="1186.2" y="1989" width="3.1" height="15.0" fill="rgb(206,206,39)" rx="2" ry="2" />
<text  x="1189.19" y="1999.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (3 samples, 0.06%)</title><rect x="44.5" y="1781" width="0.7" height="15.0" fill="rgb(232,217,32)" rx="2" ry="2" />
<text  x="47.51" y="1791.5" ></text>
</g>
<g >
<title>TLS init function for bound_view::_empty_prefix (1 samples, 0.02%)</title><rect x="282.8" y="1589" width="0.2" height="15.0" fill="rgb(221,214,14)" rx="2" ry="2" />
<text  x="285.76" y="1599.5" ></text>
</g>
<g >
<title>sstables::key::make_key&lt;partition_key_view&amp;&gt; (1 samples, 0.02%)</title><rect x="1188.7" y="37" width="0.2" height="15.0" fill="rgb(219,1,29)" rx="2" ry="2" />
<text  x="1191.66" y="47.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_range_tombstone (1 samples, 0.02%)</title><rect x="847.1" y="1765" width="0.2" height="15.0" fill="rgb(212,41,17)" rx="2" ry="2" />
<text  x="850.09" y="1775.5" ></text>
</g>
<g >
<title>seastar::future&lt;query::result_memory_accounter&gt;::get0 (1 samples, 0.02%)</title><rect x="615.8" y="1861" width="0.2" height="15.0" fill="rgb(206,189,11)" rx="2" ry="2" />
<text  x="618.80" y="1871.5" ></text>
</g>
<g >
<title>table::mutation_query (1 samples, 0.02%)</title><rect x="142.9" y="1877" width="0.2" height="15.0" fill="rgb(237,61,51)" rx="2" ry="2" />
<text  x="145.90" y="1887.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;table&gt;::make&lt;seastar::lw_shared_ptr&lt;schema const&gt;&amp;, table::config, db::commitlog&amp;, compaction_manager&amp;, cell_locker_stats&amp;, cache_tracker&amp;&gt; (1 samples, 0.02%)</title><rect x="109.3" y="1893" width="0.2" height="15.0" fill="rgb(224,149,43)" rx="2" ry="2" />
<text  x="112.29" y="1903.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::has_token (4 samples, 0.08%)</title><rect x="938.3" y="1797" width="0.9" height="15.0" fill="rgb(239,33,19)" rx="2" ry="2" />
<text  x="941.31" y="1807.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (38 samples, 0.72%)</title><rect x="741.8" y="1813" width="8.5" height="15.0" fill="rgb(216,27,29)" rx="2" ry="2" />
<text  x="744.76" y="1823.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::small_vector (2 samples, 0.04%)</title><rect x="482.4" y="1685" width="0.5" height="15.0" fill="rgb(214,185,16)" rx="2" ry="2" />
<text  x="485.45" y="1695.5" ></text>
</g>
<g >
<title>compound_wrapper&lt;partition_key, partition_key_view&gt;::from_singular&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; (1 samples, 0.02%)</title><rect x="108.4" y="1845" width="0.2" height="15.0" fill="rgb(244,150,21)" rx="2" ry="2" />
<text  x="111.39" y="1855.5" ></text>
</g>
<g >
<title>bplus::node&lt;long, intrusive_array&lt;memtable_entry&gt;, dht::raw_token_less_comparator, 16ul,  (3 samples, 0.06%)</title><rect x="1117.2" y="1589" width="0.6" height="15.0" fill="rgb(240,182,4)" rx="2" ry="2" />
<text  x="1120.16" y="1599.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="72.1" y="1797" width="0.2" height="15.0" fill="rgb(219,180,41)" rx="2" ry="2" />
<text  x="75.08" y="1807.5" ></text>
</g>
<g >
<title>ser::start_frame&lt;__gnu_cxx::__normal_iterator&lt;seastar::temporary_buffer&lt;char&gt;*, std::vector&lt;seastar::temporary_buffer&lt;char&gt;, std::allocator&lt;seastar::temporary_buffer&lt;char&gt; &gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="1121.6" y="1653" width="0.3" height="15.0" fill="rgb(205,181,50)" rx="2" ry="2" />
<text  x="1124.64" y="1663.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consumer_adapter&lt;sstables::sstable_writer&gt;::consume (1 samples, 0.02%)</title><rect x="1188.0" y="101" width="0.2" height="15.0" fill="rgb(227,173,52)" rx="2" ry="2" />
<text  x="1190.98" y="111.5" ></text>
</g>
<g >
<title>memtable::upgrade_entry (1 samples, 0.02%)</title><rect x="536.7" y="1749" width="0.2" height="15.0" fill="rgb(226,190,3)" rx="2" ry="2" />
<text  x="539.69" y="1759.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (2 samples, 0.04%)</title><rect x="323.3" y="1829" width="0.5" height="15.0" fill="rgb(233,25,7)" rx="2" ry="2" />
<text  x="326.32" y="1839.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (2 samples, 0.04%)</title><rect x="83.3" y="1989" width="0.4" height="15.0" fill="rgb(217,54,24)" rx="2" ry="2" />
<text  x="86.29" y="1999.5" ></text>
</g>
<g >
<title>mutation_fragment::visit&lt;mutation_fragment::calculate_memory_usage (2 samples, 0.04%)</title><rect x="530.6" y="1637" width="0.5" height="15.0" fill="rgb(236,20,53)" rx="2" ry="2" />
<text  x="533.63" y="1647.5" ></text>
</g>
<g >
<title>logalloc::segment_pool::refill_emergency_reserve (1 samples, 0.02%)</title><rect x="1116.0" y="1669" width="0.3" height="15.0" fill="rgb(235,182,46)" rx="2" ry="2" />
<text  x="1119.04" y="1679.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (8 samples, 0.15%)</title><rect x="1018.8" y="1669" width="1.8" height="15.0" fill="rgb(210,211,40)" rx="2" ry="2" />
<text  x="1021.77" y="1679.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (1 samples, 0.02%)</title><rect x="743.5" y="1781" width="0.3" height="15.0" fill="rgb(220,58,54)" rx="2" ry="2" />
<text  x="746.55" y="1791.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.02%)</title><rect x="50.8" y="1557" width="0.2" height="15.0" fill="rgb(228,188,5)" rx="2" ry="2" />
<text  x="53.79" y="1567.5" ></text>
</g>
<g >
<title>bytes_view_hasher::update (1 samples, 0.02%)</title><rect x="733.5" y="1733" width="0.2" height="15.0" fill="rgb(242,194,50)" rx="2" ry="2" />
<text  x="736.46" y="1743.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (31 samples, 0.59%)</title><rect x="1115.1" y="1877" width="7.0" height="15.0" fill="rgb(207,166,1)" rx="2" ry="2" />
<text  x="1118.14" y="1887.5" ></text>
</g>
<g >
<title>sstables::mc::writer::write_cells (1 samples, 0.02%)</title><rect x="1187.1" y="69" width="0.2" height="15.0" fill="rgb(251,158,30)" rx="2" ry="2" />
<text  x="1190.09" y="79.5" ></text>
</g>
<g >
<title>utils::tuple_hash::operator (12 samples, 0.23%)</title><rect x="733.0" y="1765" width="2.7" height="15.0" fill="rgb(237,126,19)" rx="2" ry="2" />
<text  x="736.02" y="1775.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.09%)</title><rect x="778.1" y="1669" width="1.1" height="15.0" fill="rgb(236,205,25)" rx="2" ry="2" />
<text  x="781.06" y="1679.5" ></text>
</g>
<g >
<title>absl::container_internal::operator== (1 samples, 0.02%)</title><rect x="1037.8" y="1733" width="0.2" height="15.0" fill="rgb(247,11,49)" rx="2" ry="2" />
<text  x="1040.82" y="1743.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (2 samples, 0.04%)</title><rect x="815.3" y="1701" width="0.4" height="15.0" fill="rgb(206,193,52)" rx="2" ry="2" />
<text  x="818.27" y="1711.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (2 samples, 0.04%)</title><rect x="103.0" y="1893" width="0.5" height="15.0" fill="rgb(205,119,19)" rx="2" ry="2" />
<text  x="106.01" y="1903.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned char, std::pair&lt;unsigned char const, std::optional&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned char const, std::optional&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned char&gt;, std::hash&lt;unsigned char&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::~_Hashtable (8 samples, 0.15%)</title><rect x="672.1" y="1877" width="1.7" height="15.0" fill="rgb(247,16,23)" rx="2" ry="2" />
<text  x="675.06" y="1887.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.02%)</title><rect x="46.8" y="1589" width="0.2" height="15.0" fill="rgb(237,101,41)" rx="2" ry="2" />
<text  x="49.76" y="1599.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="1187.8" y="37" width="0.2" height="15.0" fill="rgb(214,181,49)" rx="2" ry="2" />
<text  x="1190.76" y="47.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_state&lt;std::tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;, seastar::future&lt;void&gt; &gt;::do_with_state&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const&amp;, auth::resource&gt; (6 samples, 0.11%)</title><rect x="766.0" y="1797" width="1.3" height="15.0" fill="rgb(224,102,37)" rx="2" ry="2" />
<text  x="768.96" y="1807.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (4 samples, 0.08%)</title><rect x="547.2" y="1685" width="0.9" height="15.0" fill="rgb(247,101,13)" rx="2" ry="2" />
<text  x="550.22" y="1695.5" ></text>
</g>
<g >
<title>database::do_apply (30 samples, 0.57%)</title><rect x="1115.4" y="1765" width="6.7" height="15.0" fill="rgb(209,144,30)" rx="2" ry="2" />
<text  x="1118.37" y="1775.5" ></text>
</g>
<g >
<title>sstables::mc::writer::write_clustered (1 samples, 0.02%)</title><rect x="1188.0" y="53" width="0.2" height="15.0" fill="rgb(252,10,34)" rx="2" ry="2" />
<text  x="1190.98" y="63.5" ></text>
</g>
<g >
<title>seastar::memory::allocate_aligned (1 samples, 0.02%)</title><rect x="239.1" y="1477" width="0.2" height="15.0" fill="rgb(218,220,41)" rx="2" ry="2" />
<text  x="242.05" y="1487.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_live_endpoints (2 samples, 0.04%)</title><rect x="1054.4" y="1765" width="0.5" height="15.0" fill="rgb(240,93,9)" rx="2" ry="2" />
<text  x="1057.41" y="1775.5" ></text>
</g>
<g >
<title>std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt;::emplace_back&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; (2 samples, 0.04%)</title><rect x="265.5" y="1573" width="0.4" height="15.0" fill="rgb(205,29,14)" rx="2" ry="2" />
<text  x="268.50" y="1583.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;, seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::finally_body&lt;seastar::smp::submit_to&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (19 samples, 0.36%)</title><rect x="636.6" y="1925" width="4.3" height="15.0" fill="rgb(247,106,33)" rx="2" ry="2" />
<text  x="639.64" y="1935.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (14 samples, 0.27%)</title><rect x="1186.2" y="1493" width="3.1" height="15.0" fill="rgb(219,30,9)" rx="2" ry="2" />
<text  x="1189.19" y="1503.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::get_timeout (2 samples, 0.04%)</title><rect x="942.8" y="1829" width="0.4" height="15.0" fill="rgb(225,196,13)" rx="2" ry="2" />
<text  x="945.79" y="1839.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="688.6" y="1861" width="0.3" height="15.0" fill="rgb(237,76,47)" rx="2" ry="2" />
<text  x="691.64" y="1871.5" ></text>
</g>
<g >
<title>flat_mutation_reader::peek (2 samples, 0.04%)</title><rect x="107.5" y="1717" width="0.4" height="15.0" fill="rgb(226,112,18)" rx="2" ry="2" />
<text  x="110.49" y="1727.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="1116.5" y="1573" width="0.2" height="15.0" fill="rgb(232,26,28)" rx="2" ry="2" />
<text  x="1119.49" y="1583.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.02%)</title><rect x="1186.4" y="277" width="0.2" height="15.0" fill="rgb(206,220,16)" rx="2" ry="2" />
<text  x="1189.41" y="287.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::remove_if&lt;row::compact_and_expire (1 samples, 0.02%)</title><rect x="687.3" y="1685" width="0.2" height="15.0" fill="rgb(223,106,45)" rx="2" ry="2" />
<text  x="690.30" y="1695.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="529.7" y="1621" width="0.3" height="15.0" fill="rgb(251,96,33)" rx="2" ry="2" />
<text  x="532.74" y="1631.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;managed_bytes&gt;::make&lt;managed_bytes&gt; (5 samples, 0.09%)</title><rect x="897.1" y="1733" width="1.1" height="15.0" fill="rgb(235,110,5)" rx="2" ry="2" />
<text  x="900.07" y="1743.5" ></text>
</g>
<g >
<title>double_decker&lt;long, memtable_entry, dht::raw_token_less_comparator, dht::ring_position_comparator, 16,  (103 samples, 1.96%)</title><rect x="491.0" y="1749" width="23.0" height="15.0" fill="rgb(242,122,32)" rx="2" ry="2" />
<text  x="493.96" y="1759.5" >d..</text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="854.7" y="1701" width="0.2" height="15.0" fill="rgb(225,178,54)" rx="2" ry="2" />
<text  x="857.71" y="1711.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::~node_head (3 samples, 0.06%)</title><rect x="439.6" y="1637" width="0.7" height="15.0" fill="rgb(227,123,0)" rx="2" ry="2" />
<text  x="442.64" y="1647.5" ></text>
</g>
<g >
<title>mutation_partition::~mutation_partition (2 samples, 0.04%)</title><rect x="1129.7" y="1717" width="0.5" height="15.0" fill="rgb(242,219,45)" rx="2" ry="2" />
<text  x="1132.71" y="1727.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_in_thread&lt;sstables::sstable_writer, flat_mutation_reader::no_filter&gt; (3 samples, 0.06%)</title><rect x="1187.3" y="181" width="0.7" height="15.0" fill="rgb(229,172,10)" rx="2" ry="2" />
<text  x="1190.31" y="191.5" ></text>
</g>
<g >
<title>cql3::keyspace_element_name::operator= (1 samples, 0.02%)</title><rect x="47.9" y="1749" width="0.2" height="15.0" fill="rgb(238,157,34)" rx="2" ry="2" />
<text  x="50.88" y="1759.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;bool  (5 samples, 0.09%)</title><rect x="1163.8" y="1941" width="1.1" height="15.0" fill="rgb(208,113,33)" rx="2" ry="2" />
<text  x="1166.78" y="1951.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (2 samples, 0.04%)</title><rect x="780.5" y="1637" width="0.5" height="15.0" fill="rgb(215,179,34)" rx="2" ry="2" />
<text  x="783.53" y="1647.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (3 samples, 0.06%)</title><rect x="50.3" y="1733" width="0.7" height="15.0" fill="rgb(206,56,35)" rx="2" ry="2" />
<text  x="53.34" y="1743.5" ></text>
</g>
<g >
<title>make_empty_flat_reader (14 samples, 0.27%)</title><rect x="551.0" y="1733" width="3.2" height="15.0" fill="rgb(228,164,13)" rx="2" ry="2" />
<text  x="554.03" y="1743.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (10 samples, 0.19%)</title><rect x="679.7" y="1877" width="2.2" height="15.0" fill="rgb(226,174,2)" rx="2" ry="2" />
<text  x="682.68" y="1887.5" ></text>
</g>
<g >
<title>bplus::searcher&lt;dht::ring_position, long, dht::raw_token_less_comparator, 16ul,  (4 samples, 0.08%)</title><rect x="547.2" y="1701" width="0.9" height="15.0" fill="rgb(244,131,26)" rx="2" ry="2" />
<text  x="550.22" y="1711.5" ></text>
</g>
<g >
<title>service::client_state::has_access (6 samples, 0.11%)</title><rect x="79.3" y="1861" width="1.3" height="15.0" fill="rgb(253,18,36)" rx="2" ry="2" />
<text  x="82.25" y="1871.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (2 samples, 0.04%)</title><rect x="101.9" y="1877" width="0.4" height="15.0" fill="rgb(234,205,22)" rx="2" ry="2" />
<text  x="104.89" y="1887.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::abstract_read_executor&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="696.5" y="1877" width="0.2" height="15.0" fill="rgb(225,182,21)" rx="2" ry="2" />
<text  x="699.48" y="1887.5" ></text>
</g>
<g >
<title>mutation_reader_merger::~mutation_reader_merger (15 samples, 0.28%)</title><rect x="476.2" y="1733" width="3.3" height="15.0" fill="rgb(251,173,27)" rx="2" ry="2" />
<text  x="479.17" y="1743.5" ></text>
</g>
<g >
<title>read_simple&lt;unsigned short, managed_bytes_basic_view&lt; (3 samples, 0.06%)</title><rect x="909.0" y="1797" width="0.6" height="15.0" fill="rgb(211,45,46)" rx="2" ry="2" />
<text  x="911.95" y="1807.5" ></text>
</g>
<g >
<title>utils::phased_barrier::operation::~operation (2 samples, 0.04%)</title><rect x="106.4" y="1909" width="0.4" height="15.0" fill="rgb(237,46,12)" rx="2" ry="2" />
<text  x="109.37" y="1919.5" ></text>
</g>
<g >
<title>service::abstract_write_response_handler::response (1 samples, 0.02%)</title><rect x="716.0" y="1893" width="0.2" height="15.0" fill="rgb(250,48,27)" rx="2" ry="2" />
<text  x="718.98" y="1903.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (10 samples, 0.19%)</title><rect x="633.3" y="1909" width="2.2" height="15.0" fill="rgb(252,37,40)" rx="2" ry="2" />
<text  x="636.28" y="1919.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="908.3" y="1781" width="0.2" height="15.0" fill="rgb(232,110,1)" rx="2" ry="2" />
<text  x="911.28" y="1791.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="596.3" y="1813" width="0.2" height="15.0" fill="rgb(210,195,14)" rx="2" ry="2" />
<text  x="599.30" y="1823.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="1015.9" y="1637" width="0.2" height="15.0" fill="rgb(209,157,23)" rx="2" ry="2" />
<text  x="1018.86" y="1647.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;, cql3::query_processor::for_each_cql_result (1 samples, 0.02%)</title><rect x="636.4" y="1925" width="0.2" height="15.0" fill="rgb(235,24,3)" rx="2" ry="2" />
<text  x="639.42" y="1935.5" ></text>
</g>
<g >
<title>seastar::smp::submit_to&lt;seastar::sharded&lt;database&gt;::invoke_on_all (1 samples, 0.02%)</title><rect x="20.1" y="1797" width="0.2" height="15.0" fill="rgb(215,222,39)" rx="2" ry="2" />
<text  x="23.09" y="1807.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.08%)</title><rect x="1017.2" y="1637" width="0.9" height="15.0" fill="rgb(206,118,18)" rx="2" ry="2" />
<text  x="1020.20" y="1647.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::reset_state (1 samples, 0.02%)</title><rect x="847.3" y="1797" width="0.2" height="15.0" fill="rgb(247,20,31)" rx="2" ry="2" />
<text  x="850.32" y="1807.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (3 samples, 0.06%)</title><rect x="989.4" y="1717" width="0.7" height="15.0" fill="rgb(241,135,32)" rx="2" ry="2" />
<text  x="992.41" y="1727.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::_M_range_initialize&lt;nonwrapping_interval&lt;dht::ring_position&gt; const*&gt; (1 samples, 0.02%)</title><rect x="931.4" y="1829" width="0.2" height="15.0" fill="rgb(215,187,8)" rx="2" ry="2" />
<text  x="934.36" y="1839.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (2 samples, 0.04%)</title><rect x="712.8" y="1829" width="0.5" height="15.0" fill="rgb(230,171,51)" rx="2" ry="2" />
<text  x="715.85" y="1839.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;query::read_command&gt;::dispose (1 samples, 0.02%)</title><rect x="94.9" y="1909" width="0.3" height="15.0" fill="rgb(225,130,14)" rx="2" ry="2" />
<text  x="97.94" y="1919.5" ></text>
</g>
<g >
<title>db::cql_type_parser::parse (1 samples, 0.02%)</title><rect x="108.8" y="1797" width="0.3" height="15.0" fill="rgb(214,125,32)" rx="2" ry="2" />
<text  x="111.84" y="1807.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (4 samples, 0.08%)</title><rect x="1188.4" y="213" width="0.9" height="15.0" fill="rgb(252,154,49)" rx="2" ry="2" />
<text  x="1191.43" y="223.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::raw::update_statement, std::default_delete&lt;cql3::statements::raw::update_statement&gt; &gt;::operator= (1 samples, 0.02%)</title><rect x="67.6" y="1765" width="0.2" height="15.0" fill="rgb(234,147,30)" rx="2" ry="2" />
<text  x="70.60" y="1775.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::_M_range_initialize&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; const*&gt; (9 samples, 0.17%)</title><rect x="1090.5" y="1797" width="2.0" height="15.0" fill="rgb(252,183,15)" rx="2" ry="2" />
<text  x="1093.49" y="1807.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql3::column_identifier&gt;::~shared_ptr_count_for (1 samples, 0.02%)</title><rect x="76.8" y="1861" width="0.2" height="15.0" fill="rgb(233,165,30)" rx="2" ry="2" />
<text  x="79.79" y="1871.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (2 samples, 0.04%)</title><rect x="1099.2" y="1845" width="0.5" height="15.0" fill="rgb(220,194,17)" rx="2" ry="2" />
<text  x="1102.23" y="1855.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::~_Deque_base (1 samples, 0.02%)</title><rect x="24.8" y="1765" width="0.2" height="15.0" fill="rgb(210,143,30)" rx="2" ry="2" />
<text  x="27.79" y="1775.5" ></text>
</g>
<g >
<title>locator::token_metadata::get_host_id_if_known (7 samples, 0.13%)</title><rect x="1142.7" y="1877" width="1.6" height="15.0" fill="rgb(221,205,7)" rx="2" ry="2" />
<text  x="1145.71" y="1887.5" ></text>
</g>
<g >
<title>allocation_strategy::get_standard_migrator&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::leaf_node&gt; (1 samples, 0.02%)</title><rect x="244.0" y="1509" width="0.2" height="15.0" fill="rgb(212,209,14)" rx="2" ry="2" />
<text  x="246.98" y="1519.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.02%)</title><rect x="1187.1" y="277" width="0.2" height="15.0" fill="rgb(247,154,8)" rx="2" ry="2" />
<text  x="1190.09" y="287.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.02%)</title><rect x="894.4" y="1701" width="0.2" height="15.0" fill="rgb(245,226,35)" rx="2" ry="2" />
<text  x="897.38" y="1711.5" ></text>
</g>
<g >
<title>std::make_unique&lt;merging_reader&lt;mutation_reader_merger&gt;, seastar::lw_shared_ptr&lt;schema const&gt;&amp;, reader_permit, seastar::bool_class&lt;streamed_mutation::forwarding_tag&gt;&amp;, mutation_reader_merger&gt; (24 samples, 0.46%)</title><rect x="479.5" y="1733" width="5.4" height="15.0" fill="rgb(251,39,49)" rx="2" ry="2" />
<text  x="482.53" y="1743.5" ></text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt;&amp;&gt; (2 samples, 0.04%)</title><rect x="815.3" y="1733" width="0.4" height="15.0" fill="rgb(210,218,18)" rx="2" ry="2" />
<text  x="818.27" y="1743.5" ></text>
</g>
<g >
<title>query_mutations_on_all_shards (3 samples, 0.06%)</title><rect x="107.5" y="1781" width="0.7" height="15.0" fill="rgb(231,13,17)" rx="2" ry="2" />
<text  x="110.49" y="1791.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (2 samples, 0.04%)</title><rect x="714.9" y="1909" width="0.4" height="15.0" fill="rgb(223,102,28)" rx="2" ry="2" />
<text  x="717.86" y="1919.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_prepared_with_qo (467 samples, 8.87%)</title><rect x="727.9" y="1877" width="104.6" height="15.0" fill="rgb(217,43,25)" rx="2" ry="2" />
<text  x="730.86" y="1887.5" >single_node_..</text>
</g>
<g >
<title>ser::serializer&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;::write_fragmented&lt;bytes_ostream, fragment_range&lt;managed_bytes_basic_view&lt; (18 samples, 0.34%)</title><rect x="394.8" y="1589" width="4.1" height="15.0" fill="rgb(253,219,20)" rx="2" ry="2" />
<text  x="397.82" y="1599.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (2 samples, 0.04%)</title><rect x="925.5" y="1797" width="0.5" height="15.0" fill="rgb(219,29,31)" rx="2" ry="2" />
<text  x="928.54" y="1807.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (48 samples, 0.91%)</title><rect x="1166.0" y="2053" width="10.8" height="15.0" fill="rgb(218,157,8)" rx="2" ry="2" />
<text  x="1169.02" y="2063.5" ></text>
</g>
<g >
<title>logalloc::region_impl::alloc_small (1 samples, 0.02%)</title><rect x="19.4" y="1829" width="0.2" height="15.0" fill="rgb(246,204,52)" rx="2" ry="2" />
<text  x="22.41" y="1839.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::reset_state (62 samples, 1.18%)</title><rect x="276.9" y="1669" width="13.9" height="15.0" fill="rgb(240,210,43)" rx="2" ry="2" />
<text  x="279.93" y="1679.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;schema_registry_entry&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;schema_registry_entry&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (4 samples, 0.08%)</title><rect x="965.0" y="1733" width="0.9" height="15.0" fill="rgb(251,93,14)" rx="2" ry="2" />
<text  x="967.98" y="1743.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_locally (1 samples, 0.02%)</title><rect x="1124.3" y="1653" width="0.3" height="15.0" fill="rgb(223,159,33)" rx="2" ry="2" />
<text  x="1127.33" y="1663.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::invoke&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (1 samples, 0.02%)</title><rect x="142.9" y="1765" width="0.2" height="15.0" fill="rgb(209,200,21)" rx="2" ry="2" />
<text  x="145.90" y="1775.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::close (3 samples, 0.06%)</title><rect x="1162.4" y="1861" width="0.7" height="15.0" fill="rgb(237,225,5)" rx="2" ry="2" />
<text  x="1165.43" y="1871.5" ></text>
</g>
<g >
<title>list_reader_selector::~list_reader_selector (4 samples, 0.08%)</title><rect x="588.2" y="1797" width="0.9" height="15.0" fill="rgb(238,177,16)" rx="2" ry="2" />
<text  x="591.23" y="1807.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="62.0" y="1701" width="0.2" height="15.0" fill="rgb(223,123,41)" rx="2" ry="2" />
<text  x="65.00" y="1711.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_Vector_base (1 samples, 0.02%)</title><rect x="52.1" y="1717" width="0.3" height="15.0" fill="rgb(234,228,32)" rx="2" ry="2" />
<text  x="55.13" y="1727.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (1 samples, 0.02%)</title><rect x="927.6" y="1797" width="0.2" height="15.0" fill="rgb(228,197,29)" rx="2" ry="2" />
<text  x="930.55" y="1807.5" ></text>
</g>
<g >
<title>seastar::internal::future_base::do_wait (1 samples, 0.02%)</title><rect x="82.4" y="1957" width="0.2" height="15.0" fill="rgb(230,201,8)" rx="2" ry="2" />
<text  x="85.39" y="1967.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="846.9" y="1909" width="0.2" height="15.0" fill="rgb(233,82,10)" rx="2" ry="2" />
<text  x="849.87" y="1919.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="48.1" y="1701" width="0.2" height="15.0" fill="rgb(213,82,11)" rx="2" ry="2" />
<text  x="51.10" y="1711.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;column_definition const*, std::pair&lt;column_definition const* const, seastar::shared_ptr&lt;cql3::restrictions::single_column_restriction&gt; &gt;, std::_Select1st&lt;std::pair&lt;column_definition const* const, seastar::shared_ptr&lt;cql3::restrictions::single_column_restriction&gt; &gt; &gt;, cql3::restrictions::single_column_restrictions::column_definition_comparator, std::allocator&lt;std::pair&lt;column_definition const* const, seastar::shared_ptr&lt;cql3::restrictions::single_column_restriction&gt; &gt; &gt; &gt;::_M_drop_node (1 samples, 0.02%)</title><rect x="646.5" y="1797" width="0.2" height="15.0" fill="rgb(219,179,46)" rx="2" ry="2" />
<text  x="649.51" y="1807.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::term (27 samples, 0.51%)</title><rect x="55.9" y="1733" width="6.1" height="15.0" fill="rgb(213,2,16)" rx="2" ry="2" />
<text  x="58.94" y="1743.5" ></text>
</g>
<g >
<title>database::find_uuid (2 samples, 0.04%)</title><rect x="77.5" y="1845" width="0.4" height="15.0" fill="rgb(232,182,16)" rx="2" ry="2" />
<text  x="80.46" y="1855.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (2 samples, 0.04%)</title><rect x="47.0" y="1749" width="0.4" height="15.0" fill="rgb(241,56,2)" rx="2" ry="2" />
<text  x="49.98" y="1759.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (2 samples, 0.04%)</title><rect x="63.3" y="1669" width="0.5" height="15.0" fill="rgb(223,192,49)" rx="2" ry="2" />
<text  x="66.34" y="1679.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;mutation_fragment_merger&lt;mutation_reader_merger&gt;::operator (15 samples, 0.28%)</title><rect x="306.1" y="1765" width="3.3" height="15.0" fill="rgb(236,155,0)" rx="2" ry="2" />
<text  x="309.06" y="1775.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (1 samples, 0.02%)</title><rect x="569.0" y="1845" width="0.2" height="15.0" fill="rgb(249,175,19)" rx="2" ry="2" />
<text  x="571.96" y="1855.5" ></text>
</g>
<g >
<title>std::__make_heap&lt;__gnu_cxx::__normal_iterator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position*, std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::heap_compare&gt; &gt; (1 samples, 0.02%)</title><rect x="290.6" y="1653" width="0.2" height="15.0" fill="rgb(221,78,53)" rx="2" ry="2" />
<text  x="293.60" y="1663.5" ></text>
</g>
<g >
<title>absl::hash_internal::AbslHashValue&lt;absl::hash_internal::HashState&gt; (1 samples, 0.02%)</title><rect x="1039.6" y="1717" width="0.2" height="15.0" fill="rgb(246,41,48)" rx="2" ry="2" />
<text  x="1042.61" y="1727.5" ></text>
</g>
<g >
<title>std::pair&lt;auth::authenticated_user, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;::pair (3 samples, 0.06%)</title><rect x="743.8" y="1797" width="0.6" height="15.0" fill="rgb(217,149,3)" rx="2" ry="2" />
<text  x="746.77" y="1807.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (9 samples, 0.17%)</title><rect x="995.2" y="1685" width="2.1" height="15.0" fill="rgb(251,134,51)" rx="2" ry="2" />
<text  x="998.24" y="1695.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt;::construct&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; (2 samples, 0.04%)</title><rect x="287.9" y="1605" width="0.5" height="15.0" fill="rgb(253,104,51)" rx="2" ry="2" />
<text  x="290.91" y="1615.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;cql3::expr::expression&gt;::new_allocator (1 samples, 0.02%)</title><rect x="52.1" y="1685" width="0.3" height="15.0" fill="rgb(250,140,26)" rx="2" ry="2" />
<text  x="55.13" y="1695.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::forward_to (1 samples, 0.02%)</title><rect x="717.8" y="1925" width="0.2" height="15.0" fill="rgb(249,8,33)" rx="2" ry="2" />
<text  x="720.78" y="1935.5" ></text>
</g>
<g >
<title>std::default_delete&lt;cql3::expr::expression::impl&gt;::operator (1 samples, 0.02%)</title><rect x="646.5" y="1749" width="0.2" height="15.0" fill="rgb(246,81,20)" rx="2" ry="2" />
<text  x="649.51" y="1759.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consumer_adapter&lt;sstables::sstable_writer&gt;::consume (2 samples, 0.04%)</title><rect x="1186.6" y="165" width="0.5" height="15.0" fill="rgb(214,99,20)" rx="2" ry="2" />
<text  x="1189.64" y="175.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (3 samples, 0.06%)</title><rect x="61.1" y="1557" width="0.7" height="15.0" fill="rgb(205,171,15)" rx="2" ry="2" />
<text  x="64.10" y="1567.5" ></text>
</g>
<g >
<title>std::type_info::operator== (1 samples, 0.02%)</title><rect x="705.0" y="1861" width="0.2" height="15.0" fill="rgb(249,23,50)" rx="2" ry="2" />
<text  x="708.00" y="1871.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (1 samples, 0.02%)</title><rect x="142.9" y="1845" width="0.2" height="15.0" fill="rgb(215,120,3)" rx="2" ry="2" />
<text  x="145.90" y="1855.5" ></text>
</g>
<g >
<title>utils::tuple_hash::operator (1 samples, 0.02%)</title><rect x="813.9" y="1749" width="0.2" height="15.0" fill="rgb(239,211,4)" rx="2" ry="2" />
<text  x="816.92" y="1759.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::push_back (11 samples, 0.21%)</title><rect x="26.6" y="1701" width="2.5" height="15.0" fill="rgb(216,5,8)" rx="2" ry="2" />
<text  x="29.58" y="1711.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (202 samples, 3.84%)</title><rect x="23.4" y="1861" width="45.3" height="15.0" fill="rgb(246,82,41)" rx="2" ry="2" />
<text  x="26.45" y="1871.5" >cql3..</text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::local (1 samples, 0.02%)</title><rect x="78.6" y="1893" width="0.2" height="15.0" fill="rgb(205,187,19)" rx="2" ry="2" />
<text  x="81.58" y="1903.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_9has_tokenERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES28_S2B_ (1 samples, 0.02%)</title><rect x="938.8" y="1765" width="0.2" height="15.0" fill="rgb(222,12,50)" rx="2" ry="2" />
<text  x="941.76" y="1775.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (2 samples, 0.04%)</title><rect x="657.5" y="1909" width="0.4" height="15.0" fill="rgb(253,117,46)" rx="2" ry="2" />
<text  x="660.49" y="1919.5" ></text>
</g>
<g >
<title>position_in_partition_view::for_range_end (3 samples, 0.06%)</title><rect x="273.8" y="1669" width="0.7" height="15.0" fill="rgb(231,2,41)" rx="2" ry="2" />
<text  x="276.79" y="1679.5" ></text>
</g>
<g >
<title>schema::partition_key_size (1 samples, 0.02%)</title><rect x="939.9" y="1829" width="0.2" height="15.0" fill="rgb(218,65,32)" rx="2" ry="2" />
<text  x="942.88" y="1839.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.02%)</title><rect x="49.0" y="1621" width="0.2" height="15.0" fill="rgb(238,69,0)" rx="2" ry="2" />
<text  x="52.00" y="1631.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::allocate (9 samples, 0.17%)</title><rect x="317.0" y="1717" width="2.1" height="15.0" fill="rgb(240,94,25)" rx="2" ry="2" />
<text  x="320.05" y="1727.5" ></text>
</g>
<g >
<title>schema::column_at (4 samples, 0.08%)</title><rect x="423.5" y="1605" width="0.9" height="15.0" fill="rgb(250,156,6)" rx="2" ry="2" />
<text  x="426.50" y="1615.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;schema const&gt;::operator= (4 samples, 0.08%)</title><rect x="994.3" y="1685" width="0.9" height="15.0" fill="rgb(241,65,18)" rx="2" ry="2" />
<text  x="997.34" y="1695.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::vector (3 samples, 0.06%)</title><rect x="1095.9" y="1829" width="0.6" height="15.0" fill="rgb(229,46,5)" rx="2" ry="2" />
<text  x="1098.87" y="1839.5" ></text>
</g>
<g >
<title>__tls_init (2 samples, 0.04%)</title><rect x="198.5" y="1669" width="0.4" height="15.0" fill="rgb(242,194,46)" rx="2" ry="2" />
<text  x="201.49" y="1679.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consumer_adapter&lt;sstables::sstable_writer&gt;::consume (1 samples, 0.02%)</title><rect x="1187.8" y="133" width="0.2" height="15.0" fill="rgb(248,211,47)" rx="2" ry="2" />
<text  x="1190.76" y="143.5" ></text>
</g>
<g >
<title>boost::algorithm::any_of&lt;std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;, std::_Bind_front&lt;bool  (7 samples, 0.13%)</title><rect x="848.4" y="1797" width="1.6" height="15.0" fill="rgb(240,105,14)" rx="2" ry="2" />
<text  x="851.44" y="1807.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;utils::small_vector&lt;service::storage_proxy::unique_response_handler, 1ul&gt; &gt; &gt;::invoke&lt;service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;, service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (19 samples, 0.36%)</title><rect x="1125.5" y="1701" width="4.2" height="15.0" fill="rgb(233,103,30)" rx="2" ry="2" />
<text  x="1128.45" y="1711.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_max_result_size (1 samples, 0.02%)</title><rect x="1114.0" y="1861" width="0.2" height="15.0" fill="rgb(222,208,17)" rx="2" ry="2" />
<text  x="1117.02" y="1871.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::initial_key_restrictions&lt;partition_key&gt;::do_merge_to (5 samples, 0.09%)</title><rect x="74.3" y="1797" width="1.1" height="15.0" fill="rgb(244,7,0)" rx="2" ry="2" />
<text  x="77.32" y="1807.5" ></text>
</g>
<g >
<title>utils::estimated_histogram::new_offsets (1 samples, 0.02%)</title><rect x="1177.0" y="1861" width="0.2" height="15.0" fill="rgb(254,80,28)" rx="2" ry="2" />
<text  x="1180.00" y="1871.5" ></text>
</g>
<g >
<title>seastar::repeat&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (1 samples, 0.02%)</title><rect x="142.9" y="1797" width="0.2" height="15.0" fill="rgb(229,226,36)" rx="2" ry="2" />
<text  x="145.90" y="1807.5" ></text>
</g>
<g >
<title>bytes_view_hasher::finalize (2 samples, 0.04%)</title><rect x="734.6" y="1717" width="0.4" height="15.0" fill="rgb(211,10,5)" rx="2" ry="2" />
<text  x="737.58" y="1727.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="102.3" y="1877" width="0.3" height="15.0" fill="rgb(235,104,23)" rx="2" ry="2" />
<text  x="105.34" y="1887.5" ></text>
</g>
<g >
<title>cql3::statements::raw::parsed_statement::set_bound_variables (1 samples, 0.02%)</title><rect x="25.5" y="1813" width="0.2" height="15.0" fill="rgb(210,190,22)" rx="2" ry="2" />
<text  x="28.46" y="1823.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::do_wait_admission (32 samples, 0.61%)</title><rect x="1009.1" y="1653" width="7.2" height="15.0" fill="rgb(253,65,51)" rx="2" ry="2" />
<text  x="1012.13" y="1663.5" ></text>
</g>
<g >
<title>partition_snapshot::version_count (2 samples, 0.04%)</title><rect x="268.9" y="1557" width="0.4" height="15.0" fill="rgb(223,51,32)" rx="2" ry="2" />
<text  x="271.86" y="1567.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::~disable_abort_on_alloc_failure_temporarily (2 samples, 0.04%)</title><rect x="294.9" y="1637" width="0.4" height="15.0" fill="rgb(230,117,7)" rx="2" ry="2" />
<text  x="297.86" y="1647.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::push_mutation_fragment&lt;schema const&amp;, reader_permit&amp;, partition_start&gt; (23 samples, 0.44%)</title><rect x="526.8" y="1669" width="5.2" height="15.0" fill="rgb(245,128,20)" rx="2" ry="2" />
<text  x="529.82" y="1679.5" ></text>
</g>
<g >
<title>seastar::repeat&lt;flat_mutation_reader::impl::consume_pausable&lt;flush_reader::fill_buffer (1 samples, 0.02%)</title><rect x="1187.5" y="117" width="0.3" height="15.0" fill="rgb(241,188,25)" rx="2" ry="2" />
<text  x="1190.53" y="127.5" ></text>
</g>
<g >
<title>std::ostream::write (2 samples, 0.04%)</title><rect x="11.6" y="2021" width="0.4" height="15.0" fill="rgb(216,205,48)" rx="2" ry="2" />
<text  x="14.57" y="2031.5" ></text>
</g>
<g >
<title>mutation_querier::query_static_row (1 samples, 0.02%)</title><rect x="359.9" y="1605" width="0.2" height="15.0" fill="rgb(253,30,42)" rx="2" ry="2" />
<text  x="362.85" y="1615.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_move_assign (1 samples, 0.02%)</title><rect x="475.5" y="1701" width="0.2" height="15.0" fill="rgb(248,123,6)" rx="2" ry="2" />
<text  x="478.50" y="1711.5" ></text>
</g>
<g >
<title>db::block_for (2 samples, 0.04%)</title><rect x="1042.5" y="1749" width="0.5" height="15.0" fill="rgb(234,175,0)" rx="2" ry="2" />
<text  x="1045.53" y="1759.5" ></text>
</g>
<g >
<title>seastar::reactor::run_some_tasks (4,803 samples, 91.23%)</title><rect x="86.9" y="1941" width="1076.4" height="15.0" fill="rgb(210,38,24)" rx="2" ry="2" />
<text  x="89.87" y="1951.5" >seastar::reactor::run_some_tasks</text>
</g>
<g >
<title>row::~row (1 samples, 0.02%)</title><rect x="295.3" y="1685" width="0.2" height="15.0" fill="rgb(207,72,48)" rx="2" ry="2" />
<text  x="298.31" y="1695.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_token (6 samples, 0.11%)</title><rect x="874.7" y="1829" width="1.3" height="15.0" fill="rgb(245,199,19)" rx="2" ry="2" />
<text  x="877.66" y="1839.5" ></text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (1 samples, 0.02%)</title><rect x="13.6" y="2005" width="0.2" height="15.0" fill="rgb(228,4,47)" rx="2" ry="2" />
<text  x="16.59" y="2015.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.06%)</title><rect x="802.0" y="1733" width="0.7" height="15.0" fill="rgb(219,198,12)" rx="2" ry="2" />
<text  x="805.05" y="1743.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (4 samples, 0.08%)</title><rect x="686.8" y="1749" width="0.9" height="15.0" fill="rgb(207,181,39)" rx="2" ry="2" />
<text  x="689.85" y="1759.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (4 samples, 0.08%)</title><rect x="686.8" y="1733" width="0.9" height="15.0" fill="rgb(243,6,38)" rx="2" ry="2" />
<text  x="689.85" y="1743.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="1116.5" y="1589" width="0.2" height="15.0" fill="rgb(213,155,47)" rx="2" ry="2" />
<text  x="1119.49" y="1599.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::enqueue_waiter (27 samples, 0.51%)</title><rect x="1009.6" y="1637" width="6.0" height="15.0" fill="rgb(228,222,11)" rx="2" ry="2" />
<text  x="1012.58" y="1647.5" ></text>
</g>
<g >
<title>do_lookup_x (1 samples, 0.02%)</title><rect x="1176.8" y="2053" width="0.2" height="15.0" fill="rgb(229,68,12)" rx="2" ry="2" />
<text  x="1179.78" y="2063.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_nonsingular_mutations_locally (3 samples, 0.06%)</title><rect x="107.5" y="1813" width="0.7" height="15.0" fill="rgb(252,30,2)" rx="2" ry="2" />
<text  x="110.49" y="1823.5" ></text>
</g>
<g >
<title>cql3::expr::expression::operator= (1 samples, 0.02%)</title><rect x="54.4" y="1733" width="0.2" height="15.0" fill="rgb(245,206,53)" rx="2" ry="2" />
<text  x="57.38" y="1743.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (6 samples, 0.11%)</title><rect x="453.5" y="1781" width="1.4" height="15.0" fill="rgb(220,122,14)" rx="2" ry="2" />
<text  x="456.54" y="1791.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (1 samples, 0.02%)</title><rect x="1079.3" y="1797" width="0.2" height="15.0" fill="rgb(238,28,7)" rx="2" ry="2" />
<text  x="1082.28" y="1807.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;mutation_querier&gt;::_M_reset (1 samples, 0.02%)</title><rect x="457.3" y="1829" width="0.3" height="15.0" fill="rgb(233,161,38)" rx="2" ry="2" />
<text  x="460.35" y="1839.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (2 samples, 0.04%)</title><rect x="27.5" y="1621" width="0.4" height="15.0" fill="rgb(222,111,2)" rx="2" ry="2" />
<text  x="30.48" y="1631.5" ></text>
</g>
<g >
<title>ser::integral_serializer&lt;unsigned int&gt;::read&lt;seastar::simple_memory_input_stream&gt; (1 samples, 0.02%)</title><rect x="1120.1" y="1621" width="0.2" height="15.0" fill="rgb(238,83,46)" rx="2" ry="2" />
<text  x="1123.07" y="1631.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (20 samples, 0.38%)</title><rect x="745.8" y="1765" width="4.5" height="15.0" fill="rgb(209,211,32)" rx="2" ry="2" />
<text  x="748.79" y="1775.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (14 samples, 0.27%)</title><rect x="1186.2" y="901" width="3.1" height="15.0" fill="rgb(243,15,28)" rx="2" ry="2" />
<text  x="1189.19" y="911.5" ></text>
</g>
<g >
<title>seastar::schedule_urgent (2 samples, 0.04%)</title><rect x="1131.7" y="1925" width="0.5" height="15.0" fill="rgb(244,172,1)" rx="2" ry="2" />
<text  x="1134.73" y="1935.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_internal&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt; &gt; (33 samples, 0.63%)</title><rect x="1122.3" y="1749" width="7.4" height="15.0" fill="rgb(238,119,7)" rx="2" ry="2" />
<text  x="1125.32" y="1759.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.02%)</title><rect x="28.6" y="1653" width="0.2" height="15.0" fill="rgb(219,146,18)" rx="2" ry="2" />
<text  x="31.60" y="1663.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_M_reset (1 samples, 0.02%)</title><rect x="102.3" y="1861" width="0.3" height="15.0" fill="rgb(231,77,20)" rx="2" ry="2" />
<text  x="105.34" y="1871.5" ></text>
</g>
<g >
<title>seastar::memory::allocate_aligned (1 samples, 0.02%)</title><rect x="246.2" y="1509" width="0.2" height="15.0" fill="rgb(239,156,29)" rx="2" ry="2" />
<text  x="249.22" y="1519.5" ></text>
</g>
<g >
<title>std::vector&lt;seastar::shared_ptr&lt;cql3::operation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::operation&gt; &gt; &gt;::emplace_back&lt;seastar::shared_ptr&lt;cql3::operation&gt; &gt; (1 samples, 0.02%)</title><rect x="72.1" y="1829" width="0.2" height="15.0" fill="rgb(242,109,50)" rx="2" ry="2" />
<text  x="75.08" y="1839.5" ></text>
</g>
<g >
<title>flush_reader::fill_buffer (1 samples, 0.02%)</title><rect x="1186.4" y="197" width="0.2" height="15.0" fill="rgb(254,143,20)" rx="2" ry="2" />
<text  x="1189.41" y="207.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;void&gt;, database*, seastar::lw_shared_ptr&lt;schema const&gt;, frozen_mutation const&amp;, tracing::trace_state_ptr, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, seastar::bool_class&lt;db::force_sync_tag&gt; &gt;::do_flush (32 samples, 0.61%)</title><rect x="1114.9" y="1909" width="7.2" height="15.0" fill="rgb(243,140,40)" rx="2" ry="2" />
<text  x="1117.92" y="1919.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::statements::create_keyspace_statement, std::default_delete&lt;cql3::statements::create_keyspace_statement&gt;, true, true&gt;::__uniq_ptr_data (1 samples, 0.02%)</title><rect x="66.9" y="1781" width="0.3" height="15.0" fill="rgb(208,225,38)" rx="2" ry="2" />
<text  x="69.93" y="1791.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.04%)</title><rect x="753.2" y="1749" width="0.4" height="15.0" fill="rgb(221,51,19)" rx="2" ry="2" />
<text  x="756.19" y="1759.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::check_access (274 samples, 5.20%)</title><rect x="755.4" y="1845" width="61.4" height="15.0" fill="rgb(248,199,25)" rx="2" ry="2" />
<text  x="758.43" y="1855.5" >cql3::..</text>
</g>
<g >
<title>std::_Function_handler&lt;flat_mutation_reader  (1 samples, 0.02%)</title><rect x="956.5" y="1557" width="0.2" height="15.0" fill="rgb(242,18,22)" rx="2" ry="2" />
<text  x="959.47" y="1567.5" ></text>
</g>
<g >
<title>cql3::restrictions::clustering_key_restrictions::needs_filtering (1 samples, 0.02%)</title><rect x="870.4" y="1845" width="0.2" height="15.0" fill="rgb(236,189,48)" rx="2" ry="2" />
<text  x="873.40" y="1855.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (4 samples, 0.08%)</title><rect x="945.9" y="1797" width="0.9" height="15.0" fill="rgb(222,96,44)" rx="2" ry="2" />
<text  x="948.93" y="1807.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::clear (2 samples, 0.04%)</title><rect x="718.2" y="1925" width="0.5" height="15.0" fill="rgb(241,33,5)" rx="2" ry="2" />
<text  x="721.22" y="1935.5" ></text>
</g>
<g >
<title>read_simple&lt;long, managed_bytes_basic_view&lt; (4 samples, 0.08%)</title><rect x="421.7" y="1589" width="0.9" height="15.0" fill="rgb(212,122,33)" rx="2" ry="2" />
<text  x="424.71" y="1599.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.02%)</title><rect x="60.2" y="1557" width="0.2" height="15.0" fill="rgb(239,58,29)" rx="2" ry="2" />
<text  x="63.20" y="1567.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.02%)</title><rect x="47.2" y="1605" width="0.2" height="15.0" fill="rgb(250,128,49)" rx="2" ry="2" />
<text  x="50.20" y="1615.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (14 samples, 0.27%)</title><rect x="1186.2" y="389" width="3.1" height="15.0" fill="rgb(250,58,17)" rx="2" ry="2" />
<text  x="1189.19" y="399.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_nodes (3 samples, 0.06%)</title><rect x="664.2" y="1877" width="0.7" height="15.0" fill="rgb(214,130,35)" rx="2" ry="2" />
<text  x="667.21" y="1887.5" ></text>
</g>
<g >
<title>service::never_speculating_read_executor::~never_speculating_read_executor (2 samples, 0.04%)</title><rect x="1158.4" y="1893" width="0.4" height="15.0" fill="rgb(230,81,8)" rx="2" ry="2" />
<text  x="1161.40" y="1903.5" ></text>
</g>
<g >
<title>fmt::v7::detail::buffer&lt;char&gt;::try_resize (1 samples, 0.02%)</title><rect x="22.1" y="1877" width="0.2" height="15.0" fill="rgb(208,0,14)" rx="2" ry="2" />
<text  x="25.10" y="1887.5" ></text>
</g>
<g >
<title>evictable_reader::fill_buffer (2 samples, 0.04%)</title><rect x="107.5" y="1653" width="0.4" height="15.0" fill="rgb(241,19,15)" rx="2" ry="2" />
<text  x="110.49" y="1663.5" ></text>
</g>
<g >
<title>seastar::promise&lt;void&gt;::promise (2 samples, 0.04%)</title><rect x="134.4" y="1829" width="0.4" height="15.0" fill="rgb(220,70,17)" rx="2" ry="2" />
<text  x="137.39" y="1839.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (14 samples, 0.27%)</title><rect x="1186.2" y="1797" width="3.1" height="15.0" fill="rgb(248,211,2)" rx="2" ry="2" />
<text  x="1189.19" y="1807.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::reserve (1 samples, 0.02%)</title><rect x="785.9" y="1605" width="0.2" height="15.0" fill="rgb(230,23,49)" rx="2" ry="2" />
<text  x="788.91" y="1615.5" ></text>
</g>
<g >
<title>all (5,265 samples, 100%)</title><rect x="10.0" y="2085" width="1180.0" height="15.0" fill="rgb(208,175,26)" rx="2" ry="2" />
<text  x="13.00" y="2095.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::clear (12 samples, 0.23%)</title><rect x="405.1" y="1621" width="2.7" height="15.0" fill="rgb(236,40,46)" rx="2" ry="2" />
<text  x="408.13" y="1631.5" ></text>
</g>
<g >
<title>mutation_fragment::consume&lt;flat_mutation_reader::impl::consumer_adapter&lt;sstables::sstable_writer&gt; &gt; (1 samples, 0.02%)</title><rect x="1188.7" y="85" width="0.2" height="15.0" fill="rgb(214,56,2)" rx="2" ry="2" />
<text  x="1191.66" y="95.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.02%)</title><rect x="51.5" y="1605" width="0.2" height="15.0" fill="rgb(249,203,39)" rx="2" ry="2" />
<text  x="54.46" y="1615.5" ></text>
</g>
<g >
<title>seastar::posix_thread::start_routine (1 samples, 0.02%)</title><rect x="1189.8" y="2037" width="0.2" height="15.0" fill="rgb(236,154,47)" rx="2" ry="2" />
<text  x="1192.78" y="2047.5" ></text>
</g>
<g >
<title>locator::token_metadata::first_token (37 samples, 0.70%)</title><rect x="1056.9" y="1701" width="8.3" height="15.0" fill="rgb(234,223,29)" rx="2" ry="2" />
<text  x="1059.87" y="1711.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.02%)</title><rect x="430.7" y="1653" width="0.2" height="15.0" fill="rgb(214,229,46)" rx="2" ry="2" />
<text  x="433.68" y="1663.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;managed_bytes const*, managed_bytes*&gt; (4 samples, 0.08%)</title><rect x="900.9" y="1749" width="0.9" height="15.0" fill="rgb(245,36,46)" rx="2" ry="2" />
<text  x="903.88" y="1759.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (10 samples, 0.19%)</title><rect x="1187.1" y="293" width="2.2" height="15.0" fill="rgb(231,172,46)" rx="2" ry="2" />
<text  x="1190.09" y="303.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.29] (1 samples, 0.02%)</title><rect x="700.5" y="1893" width="0.2" height="15.0" fill="rgb(238,216,4)" rx="2" ry="2" />
<text  x="703.52" y="1903.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="267.1" y="1621" width="0.2" height="15.0" fill="rgb(222,220,16)" rx="2" ry="2" />
<text  x="270.07" y="1631.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (1 samples, 0.02%)</title><rect x="1016.5" y="1653" width="0.3" height="15.0" fill="rgb(219,50,30)" rx="2" ry="2" />
<text  x="1019.53" y="1663.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.04%)</title><rect x="603.7" y="1813" width="0.4" height="15.0" fill="rgb(244,95,5)" rx="2" ry="2" />
<text  x="606.70" y="1823.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.02%)</title><rect x="49.4" y="1541" width="0.3" height="15.0" fill="rgb(217,100,33)" rx="2" ry="2" />
<text  x="52.45" y="1551.5" ></text>
</g>
<g >
<title>seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;::swap (5 samples, 0.09%)</title><rect x="729.0" y="1829" width="1.1" height="15.0" fill="rgb(245,198,28)" rx="2" ry="2" />
<text  x="731.98" y="1839.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, query::non_null_data_value&gt;, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, query::non_null_data_value&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, std::hash&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_insert&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, query::non_null_data_value&gt;&amp;, std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, query::non_null_data_value&gt;, true&gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="108.2" y="1813" width="0.2" height="15.0" fill="rgb(214,144,22)" rx="2" ry="2" />
<text  x="111.17" y="1823.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::pop_mutation_fragment (3 samples, 0.06%)</title><rect x="177.0" y="1733" width="0.6" height="15.0" fill="rgb(205,21,45)" rx="2" ry="2" />
<text  x="179.97" y="1743.5" ></text>
</g>
<g >
<title>cql3::expr::untyped_constant::~untyped_constant (1 samples, 0.02%)</title><rect x="56.6" y="1717" width="0.2" height="15.0" fill="rgb(241,161,44)" rx="2" ry="2" />
<text  x="59.62" y="1727.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_in_thread&lt;sstables::sstable_writer, flat_mutation_reader::no_filter&gt; (1 samples, 0.02%)</title><rect x="1187.1" y="197" width="0.2" height="15.0" fill="rgb(219,135,50)" rx="2" ry="2" />
<text  x="1190.09" y="207.5" ></text>
</g>
<g >
<title>antlr3::IntStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::_LA (1 samples, 0.02%)</title><rect x="39.8" y="1669" width="0.2" height="15.0" fill="rgb(242,223,46)" rx="2" ry="2" />
<text  x="42.81" y="1679.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (3 samples, 0.06%)</title><rect x="1140.0" y="1877" width="0.7" height="15.0" fill="rgb(220,160,6)" rx="2" ry="2" />
<text  x="1143.02" y="1887.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (2 samples, 0.04%)</title><rect x="759.7" y="1717" width="0.4" height="15.0" fill="rgb(231,44,3)" rx="2" ry="2" />
<text  x="762.69" y="1727.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_partition_key_range (1 samples, 0.02%)</title><rect x="956.5" y="1797" width="0.2" height="15.0" fill="rgb(220,40,21)" rx="2" ry="2" />
<text  x="959.47" y="1807.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (1 samples, 0.02%)</title><rect x="1003.8" y="1653" width="0.2" height="15.0" fill="rgb(222,207,46)" rx="2" ry="2" />
<text  x="1006.75" y="1663.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::reserve (1 samples, 0.02%)</title><rect x="1189.3" y="2053" width="0.3" height="15.0" fill="rgb(253,26,28)" rx="2" ry="2" />
<text  x="1192.33" y="2063.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (2 samples, 0.04%)</title><rect x="593.2" y="1749" width="0.4" height="15.0" fill="rgb(232,58,4)" rx="2" ry="2" />
<text  x="596.16" y="1759.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::disable_abort_on_alloc_failure_temporarily (2 samples, 0.04%)</title><rect x="554.8" y="1765" width="0.5" height="15.0" fill="rgb(220,225,46)" rx="2" ry="2" />
<text  x="557.84" y="1775.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (2 samples, 0.04%)</title><rect x="584.0" y="1733" width="0.4" height="15.0" fill="rgb(215,213,13)" rx="2" ry="2" />
<text  x="586.98" y="1743.5" ></text>
</g>
<g >
<title>__GI___tunables_init (1 samples, 0.02%)</title><rect x="84.6" y="2053" width="0.3" height="15.0" fill="rgb(220,63,38)" rx="2" ry="2" />
<text  x="87.63" y="2063.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::clear (3 samples, 0.06%)</title><rect x="139.1" y="1877" width="0.7" height="15.0" fill="rgb(216,177,6)" rx="2" ry="2" />
<text  x="142.09" y="1887.5" ></text>
</g>
<g >
<title>memtable::make_flat_reader (244 samples, 4.63%)</title><rect x="486.9" y="1765" width="54.7" height="15.0" fill="rgb(232,207,2)" rx="2" ry="2" />
<text  x="489.93" y="1775.5" >memta..</text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;void&gt;::set_value&lt;&gt; (1 samples, 0.02%)</title><rect x="701.6" y="1893" width="0.3" height="15.0" fill="rgb(235,95,11)" rx="2" ry="2" />
<text  x="704.64" y="1903.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::RecognizerSharedState (1 samples, 0.02%)</title><rect x="23.7" y="1813" width="0.2" height="15.0" fill="rgb(217,51,23)" rx="2" ry="2" />
<text  x="26.67" y="1823.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.02%)</title><rect x="49.7" y="1605" width="0.2" height="15.0" fill="rgb(218,23,35)" rx="2" ry="2" />
<text  x="52.67" y="1615.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (8 samples, 0.15%)</title><rect x="731.2" y="1765" width="1.8" height="15.0" fill="rgb(251,77,32)" rx="2" ry="2" />
<text  x="734.22" y="1775.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_state&lt;std::tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;, seastar::future&lt;void&gt; &gt;::do_with_state&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const&amp;, auth::resource&gt; (1 samples, 0.02%)</title><rect x="78.8" y="1861" width="0.2" height="15.0" fill="rgb(231,192,28)" rx="2" ry="2" />
<text  x="81.81" y="1871.5" ></text>
</g>
<g >
<title>operator delete (8 samples, 0.15%)</title><rect x="688.9" y="1909" width="1.8" height="15.0" fill="rgb(221,193,54)" rx="2" ry="2" />
<text  x="691.86" y="1919.5" ></text>
</g>
<g >
<title>utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::lru_entry::touch (4 samples, 0.08%)</title><rect x="742.7" y="1733" width="0.8" height="15.0" fill="rgb(227,88,6)" rx="2" ry="2" />
<text  x="745.65" y="1743.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.02%)</title><rect x="55.9" y="1717" width="0.3" height="15.0" fill="rgb(238,47,3)" rx="2" ry="2" />
<text  x="58.94" y="1727.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::deallocate (3 samples, 0.06%)</title><rect x="587.6" y="1781" width="0.6" height="15.0" fill="rgb(227,60,39)" rx="2" ry="2" />
<text  x="590.56" y="1791.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (2 samples, 0.04%)</title><rect x="900.0" y="1781" width="0.4" height="15.0" fill="rgb(246,142,52)" rx="2" ry="2" />
<text  x="902.99" y="1791.5" ></text>
</g>
<g >
<title>mutation_fragment::operator= (1 samples, 0.02%)</title><rect x="202.1" y="1669" width="0.2" height="15.0" fill="rgb(208,54,25)" rx="2" ry="2" />
<text  x="205.07" y="1679.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (14 samples, 0.27%)</title><rect x="1186.2" y="869" width="3.1" height="15.0" fill="rgb(210,51,7)" rx="2" ry="2" />
<text  x="1189.19" y="879.5" ></text>
</g>
<g >
<title>seastar::memory::allocate_aligned (17 samples, 0.32%)</title><rect x="235.2" y="1461" width="3.9" height="15.0" fill="rgb(252,7,4)" rx="2" ry="2" />
<text  x="238.24" y="1471.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::untyped_constant&gt; (2 samples, 0.04%)</title><rect x="58.2" y="1685" width="0.4" height="15.0" fill="rgb(251,145,19)" rx="2" ry="2" />
<text  x="61.19" y="1695.5" ></text>
</g>
<g >
<title>validation::validate_column_family (1 samples, 0.02%)</title><rect x="77.2" y="1861" width="0.3" height="15.0" fill="rgb(213,107,1)" rx="2" ry="2" />
<text  x="80.24" y="1871.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.06%)</title><rect x="775.6" y="1685" width="0.7" height="15.0" fill="rgb(235,135,38)" rx="2" ry="2" />
<text  x="778.60" y="1695.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::get_mutations (18 samples, 0.34%)</title><rect x="852.0" y="1813" width="4.1" height="15.0" fill="rgb(214,162,4)" rx="2" ry="2" />
<text  x="855.02" y="1823.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::single_column_primary_key_restrictions (2 samples, 0.04%)</title><rect x="75.0" y="1765" width="0.4" height="15.0" fill="rgb(219,174,51)" rx="2" ry="2" />
<text  x="78.00" y="1775.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::query_state&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="669.6" y="1909" width="0.2" height="15.0" fill="rgb(254,195,33)" rx="2" ry="2" />
<text  x="672.59" y="1919.5" ></text>
</g>
<g >
<title>fmt::v7::detail::vformat_to&lt;char&gt; (1 samples, 0.02%)</title><rect x="83.1" y="2037" width="0.2" height="15.0" fill="rgb(246,39,2)" rx="2" ry="2" />
<text  x="86.06" y="2047.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::do_execute (43 samples, 0.82%)</title><rect x="847.5" y="1861" width="9.7" height="15.0" fill="rgb(220,144,44)" rx="2" ry="2" />
<text  x="850.54" y="1871.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.02%)</title><rect x="44.5" y="1669" width="0.2" height="15.0" fill="rgb(230,70,34)" rx="2" ry="2" />
<text  x="47.51" y="1679.5" ></text>
</g>
<g >
<title>absl::container_internal::probe_seq&lt;16ul&gt;::probe_seq (1 samples, 0.02%)</title><rect x="81.0" y="1797" width="0.3" height="15.0" fill="rgb(248,96,6)" rx="2" ry="2" />
<text  x="84.05" y="1807.5" ></text>
</g>
<g >
<title>ser::safe_serialize_as_uint32&lt;bytes_ostream&gt; (2 samples, 0.04%)</title><rect x="394.4" y="1589" width="0.4" height="15.0" fill="rgb(251,34,1)" rx="2" ry="2" />
<text  x="397.37" y="1599.5" ></text>
</g>
<g >
<title>std::__copy_n_a&lt;legacy_compound_view&lt;compound_type&lt; (1 samples, 0.02%)</title><rect x="1123.4" y="1557" width="0.3" height="15.0" fill="rgb(207,75,23)" rx="2" ry="2" />
<text  x="1126.44" y="1567.5" ></text>
</g>
<g >
<title>db::get_cdc_generation_mutations (1 samples, 0.02%)</title><rect x="106.8" y="1925" width="0.2" height="15.0" fill="rgb(225,143,20)" rx="2" ry="2" />
<text  x="109.82" y="1935.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (14 samples, 0.27%)</title><rect x="1186.2" y="1237" width="3.1" height="15.0" fill="rgb(252,104,51)" rx="2" ry="2" />
<text  x="1189.19" y="1247.5" ></text>
</g>
<g >
<title>reader_permit::impl::mark_unused (30 samples, 0.57%)</title><rect x="129.5" y="1861" width="6.7" height="15.0" fill="rgb(216,146,0)" rx="2" ry="2" />
<text  x="132.46" y="1871.5" ></text>
</g>
<g >
<title>cql3::constants::setter::execute (14 samples, 0.27%)</title><rect x="852.2" y="1749" width="3.2" height="15.0" fill="rgb(241,88,31)" rx="2" ry="2" />
<text  x="855.25" y="1759.5" ></text>
</g>
<g >
<title>cql3::restrictions::partition_key_restrictions::needs_filtering (7 samples, 0.13%)</title><rect x="649.4" y="1877" width="1.6" height="15.0" fill="rgb(248,216,36)" rx="2" ry="2" />
<text  x="652.42" y="1887.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.02%)</title><rect x="48.1" y="1717" width="0.2" height="15.0" fill="rgb(247,204,32)" rx="2" ry="2" />
<text  x="51.10" y="1727.5" ></text>
</g>
<g >
<title>mutation::mutation (1 samples, 0.02%)</title><rect x="855.6" y="1765" width="0.2" height="15.0" fill="rgb(230,185,51)" rx="2" ry="2" />
<text  x="858.61" y="1775.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.06%)</title><rect x="619.4" y="1829" width="0.7" height="15.0" fill="rgb(234,86,11)" rx="2" ry="2" />
<text  x="622.39" y="1839.5" ></text>
</g>
<g >
<title>seastar::internal::uninitialized_wrapper_base&lt;service::storage_proxy_coordinator_query_result, false&gt;::uninitialized_set&lt;service::storage_proxy_coordinator_query_result&gt; (2 samples, 0.04%)</title><rect x="684.6" y="1877" width="0.5" height="15.0" fill="rgb(253,50,11)" rx="2" ry="2" />
<text  x="687.61" y="1887.5" ></text>
</g>
<g >
<title>single_node_cql_env::make_query_state (37 samples, 0.70%)</title><rect x="824.2" y="1861" width="8.3" height="15.0" fill="rgb(214,14,16)" rx="2" ry="2" />
<text  x="827.23" y="1871.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::sharded&lt;database&gt;::invoke_on_all (1 samples, 0.02%)</title><rect x="20.1" y="1813" width="0.2" height="15.0" fill="rgb(234,21,36)" rx="2" ry="2" />
<text  x="23.09" y="1823.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_cachedSize (1 samples, 0.02%)</title><rect x="29.3" y="1733" width="0.2" height="15.0" fill="rgb(239,47,1)" rx="2" ry="2" />
<text  x="32.27" y="1743.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::clear (1 samples, 0.02%)</title><rect x="861.4" y="1893" width="0.3" height="15.0" fill="rgb(238,54,50)" rx="2" ry="2" />
<text  x="864.44" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_List_node_base::_M_hook (1 samples, 0.02%)</title><rect x="473.3" y="1685" width="0.2" height="15.0" fill="rgb(224,57,21)" rx="2" ry="2" />
<text  x="476.26" y="1695.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::take (1 samples, 0.02%)</title><rect x="445.5" y="1701" width="0.2" height="15.0" fill="rgb(244,53,3)" rx="2" ry="2" />
<text  x="448.47" y="1711.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.02%)</title><rect x="60.9" y="1557" width="0.2" height="15.0" fill="rgb(237,178,0)" rx="2" ry="2" />
<text  x="63.88" y="1567.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::statements::raw::update_statement, cql3::cf_name, std::unique_ptr&lt;cql3::attributes::raw, std::default_delete&lt;cql3::attributes::raw&gt; &gt;, std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;, std::vector&lt;seastar::shared_ptr&lt;cql3::relation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::relation&gt; &gt; &gt;, std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, seastar::lw_shared_ptr&lt;cql3::column_condition::raw&gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, seastar::lw_shared_ptr&lt;cql3::column_condition::raw&gt; &gt; &gt; &gt;, bool&amp;&gt; (1 samples, 0.02%)</title><rect x="65.8" y="1781" width="0.2" height="15.0" fill="rgb(247,190,27)" rx="2" ry="2" />
<text  x="68.81" y="1791.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::disable_abort_on_alloc_failure_temporarily (1 samples, 0.02%)</title><rect x="266.8" y="1621" width="0.3" height="15.0" fill="rgb(247,67,33)" rx="2" ry="2" />
<text  x="269.84" y="1631.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.04%)</title><rect x="664.4" y="1845" width="0.5" height="15.0" fill="rgb(216,196,19)" rx="2" ry="2" />
<text  x="667.43" y="1855.5" ></text>
</g>
<g >
<title>dht::i_partitioner::decorate_key (3 samples, 0.06%)</title><rect x="1116.5" y="1653" width="0.7" height="15.0" fill="rgb(231,146,52)" rx="2" ry="2" />
<text  x="1119.49" y="1663.5" ></text>
</g>
<g >
<title>set_field&lt;long&gt; (1 samples, 0.02%)</title><rect x="852.5" y="1653" width="0.2" height="15.0" fill="rgb(226,151,4)" rx="2" ry="2" />
<text  x="855.47" y="1663.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::get0 (1 samples, 0.02%)</title><rect x="138.2" y="1877" width="0.2" height="15.0" fill="rgb(243,137,16)" rx="2" ry="2" />
<text  x="141.20" y="1887.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::push_back (1 samples, 0.02%)</title><rect x="29.1" y="1717" width="0.2" height="15.0" fill="rgb(237,180,29)" rx="2" ry="2" />
<text  x="32.05" y="1727.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.09%)</title><rect x="563.6" y="1781" width="1.1" height="15.0" fill="rgb(218,93,43)" rx="2" ry="2" />
<text  x="566.58" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt;::~_Variant_storage (1 samples, 0.02%)</title><rect x="899.3" y="1765" width="0.2" height="15.0" fill="rgb(231,2,6)" rx="2" ry="2" />
<text  x="902.31" y="1775.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;cql3::raw_value_view&gt;::allocate (1 samples, 0.02%)</title><rect x="836.1" y="1781" width="0.2" height="15.0" fill="rgb(211,24,26)" rx="2" ry="2" />
<text  x="839.11" y="1791.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.04%)</title><rect x="47.0" y="1685" width="0.4" height="15.0" fill="rgb(237,154,36)" rx="2" ry="2" />
<text  x="49.98" y="1695.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (1,306 samples, 24.81%)</title><rect x="164.9" y="1845" width="292.7" height="15.0" fill="rgb(224,135,12)" rx="2" ry="2" />
<text  x="167.87" y="1855.5" >query::consume_page&lt;</text>
</g>
<g >
<title>seastar::basic_semaphore&lt;seastar::semaphore_default_exception_factory, std::chrono::_V2::steady_clock&gt;::signal (1 samples, 0.02%)</title><rect x="99.2" y="1845" width="0.2" height="15.0" fill="rgb(244,63,29)" rx="2" ry="2" />
<text  x="102.20" y="1855.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (2 samples, 0.04%)</title><rect x="64.5" y="1701" width="0.4" height="15.0" fill="rgb(217,137,21)" rx="2" ry="2" />
<text  x="67.46" y="1711.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.02%)</title><rect x="49.4" y="1685" width="0.3" height="15.0" fill="rgb(228,195,4)" rx="2" ry="2" />
<text  x="52.45" y="1695.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.02%)</title><rect x="51.5" y="1669" width="0.2" height="15.0" fill="rgb(210,50,40)" rx="2" ry="2" />
<text  x="54.46" y="1679.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.04%)</title><rect x="568.1" y="1829" width="0.4" height="15.0" fill="rgb(249,96,44)" rx="2" ry="2" />
<text  x="571.06" y="1839.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (2 samples, 0.04%)</title><rect x="349.8" y="1621" width="0.4" height="15.0" fill="rgb(237,205,44)" rx="2" ry="2" />
<text  x="352.77" y="1631.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_state&lt;std::tuple&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt; &gt;, seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (8 samples, 0.15%)</title><rect x="779.2" y="1669" width="1.8" height="15.0" fill="rgb(226,138,15)" rx="2" ry="2" />
<text  x="782.19" y="1679.5" ></text>
</g>
<g >
<title>canonical_mutation::to_mutation (1 samples, 0.02%)</title><rect x="107.0" y="1717" width="0.3" height="15.0" fill="rgb(224,38,23)" rx="2" ry="2" />
<text  x="110.04" y="1727.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (277 samples, 5.26%)</title><rect x="20.5" y="1989" width="62.1" height="15.0" fill="rgb(246,166,53)" rx="2" ry="2" />
<text  x="23.53" y="1999.5" >std::_..</text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.02%)</title><rect x="754.8" y="1797" width="0.2" height="15.0" fill="rgb(215,203,25)" rx="2" ry="2" />
<text  x="757.76" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_next_bkt (6 samples, 0.11%)</title><rect x="1150.6" y="1877" width="1.3" height="15.0" fill="rgb(218,52,54)" rx="2" ry="2" />
<text  x="1153.55" y="1887.5" ></text>
</g>
<g >
<title>seastar::gate::leave (1 samples, 0.02%)</title><rect x="125.4" y="1829" width="0.2" height="15.0" fill="rgb(246,47,30)" rx="2" ry="2" />
<text  x="128.42" y="1839.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::node_size (1 samples, 0.02%)</title><rect x="259.0" y="1557" width="0.2" height="15.0" fill="rgb(222,155,17)" rx="2" ry="2" />
<text  x="262.00" y="1567.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (8 samples, 0.15%)</title><rect x="1101.5" y="1813" width="1.8" height="15.0" fill="rgb(230,17,28)" rx="2" ry="2" />
<text  x="1104.47" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;void&gt;  (1 samples, 0.02%)</title><rect x="75.9" y="1813" width="0.2" height="15.0" fill="rgb(212,50,37)" rx="2" ry="2" />
<text  x="78.89" y="1823.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (4 samples, 0.08%)</title><rect x="761.0" y="1749" width="0.9" height="15.0" fill="rgb(208,127,44)" rx="2" ry="2" />
<text  x="764.03" y="1759.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (1 samples, 0.02%)</title><rect x="747.8" y="1701" width="0.2" height="15.0" fill="rgb(247,163,22)" rx="2" ry="2" />
<text  x="750.81" y="1711.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.02%)</title><rect x="10.7" y="1989" width="0.2" height="15.0" fill="rgb(253,108,16)" rx="2" ry="2" />
<text  x="13.67" y="1999.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (2 samples, 0.04%)</title><rect x="640.5" y="1877" width="0.4" height="15.0" fill="rgb(248,140,17)" rx="2" ry="2" />
<text  x="643.45" y="1887.5" ></text>
</g>
<g >
<title>std::pair&lt;auth::role_or_anonymous, auth::resource&gt;::pair&lt;auth::role_or_anonymous, auth::resource, true&gt; (1 samples, 0.02%)</title><rect x="80.2" y="1749" width="0.2" height="15.0" fill="rgb(220,81,53)" rx="2" ry="2" />
<text  x="83.15" y="1759.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;mutation_fragment_merger&lt;mutation_reader_merger&gt;::operator (1 samples, 0.02%)</title><rect x="320.9" y="1781" width="0.2" height="15.0" fill="rgb(237,185,11)" rx="2" ry="2" />
<text  x="323.86" y="1791.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_p (1 samples, 0.02%)</title><rect x="52.8" y="1701" width="0.2" height="15.0" fill="rgb(236,9,52)" rx="2" ry="2" />
<text  x="55.81" y="1711.5" ></text>
</g>
<g >
<title>_itoa_word (1 samples, 0.02%)</title><rect x="82.6" y="2037" width="0.2" height="15.0" fill="rgb(230,97,1)" rx="2" ry="2" />
<text  x="85.62" y="2047.5" ></text>
</g>
<g >
<title>absl::container_internal::operator== (1 samples, 0.02%)</title><rect x="814.4" y="1749" width="0.2" height="15.0" fill="rgb(223,162,10)" rx="2" ry="2" />
<text  x="817.37" y="1759.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_no_esft&lt;std::function&lt;flat_mutation_reader  (1 samples, 0.02%)</title><rect x="631.3" y="1813" width="0.2" height="15.0" fill="rgb(244,0,31)" rx="2" ry="2" />
<text  x="634.26" y="1823.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (6 samples, 0.11%)</title><rect x="716.2" y="1925" width="1.4" height="15.0" fill="rgb(218,114,13)" rx="2" ry="2" />
<text  x="719.21" y="1935.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (5 samples, 0.09%)</title><rect x="1004.7" y="1621" width="1.1" height="15.0" fill="rgb(226,182,54)" rx="2" ry="2" />
<text  x="1007.65" y="1631.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::_M_range_initialize&lt;nonwrapping_interval&lt;dht::ring_position&gt; const*&gt; (16 samples, 0.30%)</title><rect x="931.8" y="1813" width="3.6" height="15.0" fill="rgb(240,62,5)" rx="2" ry="2" />
<text  x="934.81" y="1823.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (3 samples, 0.06%)</title><rect x="620.7" y="1861" width="0.7" height="15.0" fill="rgb(226,177,17)" rx="2" ry="2" />
<text  x="623.73" y="1871.5" ></text>
</g>
<g >
<title>service::client_state::check_has_permission (5 samples, 0.09%)</title><rect x="79.5" y="1829" width="1.1" height="15.0" fill="rgb(252,109,18)" rx="2" ry="2" />
<text  x="82.48" y="1839.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::maybe_decay_reserve (1 samples, 0.02%)</title><rect x="292.6" y="1637" width="0.2" height="15.0" fill="rgb(227,221,0)" rx="2" ry="2" />
<text  x="295.62" y="1647.5" ></text>
</g>
<g >
<title>compound_type&lt; (1 samples, 0.02%)</title><rect x="1116.5" y="1605" width="0.2" height="15.0" fill="rgb(245,212,54)" rx="2" ry="2" />
<text  x="1119.49" y="1615.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_in_thread&lt;sstables::sstable_writer, flat_mutation_reader::no_filter&gt; (1 samples, 0.02%)</title><rect x="1189.1" y="69" width="0.2" height="15.0" fill="rgb(245,186,49)" rx="2" ry="2" />
<text  x="1192.10" y="79.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (1 samples, 0.02%)</title><rect x="899.3" y="1749" width="0.2" height="15.0" fill="rgb(228,74,13)" rx="2" ry="2" />
<text  x="902.31" y="1759.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, unsigned int, std::_Identity&lt;unsigned int&gt;, std::less&lt;unsigned int&gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;unsigned int&gt; &gt;::_M_lower_bound (2 samples, 0.04%)</title><rect x="43.4" y="1701" width="0.4" height="15.0" fill="rgb(210,87,11)" rx="2" ry="2" />
<text  x="46.39" y="1711.5" ></text>
</g>
<g >
<title>service::abstract_write_response_handler::max_backlog (1 samples, 0.02%)</title><rect x="716.0" y="1845" width="0.2" height="15.0" fill="rgb(216,140,25)" rx="2" ry="2" />
<text  x="718.98" y="1855.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::storage_proxy&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="1141.6" y="1909" width="0.2" height="15.0" fill="rgb(209,170,21)" rx="2" ry="2" />
<text  x="1144.59" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_nodes (1 samples, 0.02%)</title><rect x="682.6" y="1861" width="0.2" height="15.0" fill="rgb(215,100,0)" rx="2" ry="2" />
<text  x="685.59" y="1871.5" ></text>
</g>
<g >
<title>cql3::restrictions::partition_key_restrictions::needs_filtering (2 samples, 0.04%)</title><rect x="73.9" y="1813" width="0.4" height="15.0" fill="rgb(248,87,19)" rx="2" ry="2" />
<text  x="76.87" y="1823.5" ></text>
</g>
<g >
<title>sstables::sstable::filename (1 samples, 0.02%)</title><rect x="1131.3" y="1717" width="0.2" height="15.0" fill="rgb(210,65,1)" rx="2" ry="2" />
<text  x="1134.28" y="1727.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const*, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;*&gt; (4 samples, 0.08%)</title><rect x="785.0" y="1605" width="0.9" height="15.0" fill="rgb(225,219,2)" rx="2" ry="2" />
<text  x="788.01" y="1615.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::_M_realloc_insert&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; (4 samples, 0.08%)</title><rect x="55.0" y="1701" width="0.9" height="15.0" fill="rgb(241,92,3)" rx="2" ry="2" />
<text  x="58.05" y="1711.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (7 samples, 0.13%)</title><rect x="779.4" y="1653" width="1.6" height="15.0" fill="rgb(221,100,19)" rx="2" ry="2" />
<text  x="782.41" y="1663.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (1 samples, 0.02%)</title><rect x="773.8" y="1701" width="0.2" height="15.0" fill="rgb(209,4,45)" rx="2" ry="2" />
<text  x="776.81" y="1711.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (2 samples, 0.04%)</title><rect x="918.6" y="1813" width="0.4" height="15.0" fill="rgb(252,193,20)" rx="2" ry="2" />
<text  x="921.59" y="1823.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, flat_mutation_reader::impl::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (1 samples, 0.02%)</title><rect x="449.7" y="1749" width="0.3" height="15.0" fill="rgb(237,99,40)" rx="2" ry="2" />
<text  x="452.73" y="1759.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (3 samples, 0.06%)</title><rect x="853.1" y="1669" width="0.7" height="15.0" fill="rgb(217,121,1)" rx="2" ry="2" />
<text  x="856.15" y="1679.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::then_impl&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (47 samples, 0.89%)</title><rect x="310.3" y="1781" width="10.6" height="15.0" fill="rgb(247,103,26)" rx="2" ry="2" />
<text  x="313.32" y="1791.5" ></text>
</g>
<g >
<title>std::default_delete&lt;bytes_ostream::chunk&gt;::operator (7 samples, 0.13%)</title><rect x="99.6" y="1845" width="1.6" height="15.0" fill="rgb(224,28,17)" rx="2" ry="2" />
<text  x="102.65" y="1855.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="644.3" y="1893" width="0.2" height="15.0" fill="rgb(221,167,15)" rx="2" ry="2" />
<text  x="647.26" y="1903.5" ></text>
</g>
<g >
<title>operator new (7 samples, 0.13%)</title><rect x="960.9" y="1781" width="1.6" height="15.0" fill="rgb(242,85,14)" rx="2" ry="2" />
<text  x="963.95" y="1791.5" ></text>
</g>
<g >
<title>query_state::query_state (23 samples, 0.44%)</title><rect x="608.2" y="1861" width="5.1" height="15.0" fill="rgb(223,31,17)" rx="2" ry="2" />
<text  x="611.18" y="1871.5" ></text>
</g>
<g >
<title>seastar::posix_file_impl::posix_file_impl (1 samples, 0.02%)</title><rect x="674.7" y="1877" width="0.3" height="15.0" fill="rgb(223,21,31)" rx="2" ry="2" />
<text  x="677.74" y="1887.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (2 samples, 0.04%)</title><rect x="919.0" y="1813" width="0.5" height="15.0" fill="rgb(213,184,2)" rx="2" ry="2" />
<text  x="922.04" y="1823.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (1 samples, 0.02%)</title><rect x="646.1" y="1909" width="0.2" height="15.0" fill="rgb(231,157,52)" rx="2" ry="2" />
<text  x="649.06" y="1919.5" ></text>
</g>
<g >
<title>cql3::constants::marker::to_expression (10 samples, 0.19%)</title><rect x="878.2" y="1749" width="2.3" height="15.0" fill="rgb(239,125,51)" rx="2" ry="2" />
<text  x="881.25" y="1759.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (2 samples, 0.04%)</title><rect x="83.3" y="1973" width="0.4" height="15.0" fill="rgb(211,200,29)" rx="2" ry="2" />
<text  x="86.29" y="1983.5" ></text>
</g>
<g >
<title>std::__optional_hash_call_base&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, true&gt;::operator (1 samples, 0.02%)</title><rect x="806.3" y="1701" width="0.2" height="15.0" fill="rgb(232,181,54)" rx="2" ry="2" />
<text  x="809.30" y="1711.5" ></text>
</g>
<g >
<title>do_query&lt;(anonymous namespace)::data_query_result_builder&gt; (1 samples, 0.02%)</title><rect x="956.5" y="1637" width="0.2" height="15.0" fill="rgb(252,80,14)" rx="2" ry="2" />
<text  x="959.47" y="1647.5" ></text>
</g>
<g >
<title>std::default_delete&lt;cql3::expr::expression::impl&gt;::operator (1 samples, 0.02%)</title><rect x="849.1" y="1685" width="0.2" height="15.0" fill="rgb(240,175,37)" rx="2" ry="2" />
<text  x="852.11" y="1695.5" ></text>
</g>
<g >
<title>skip_empty_fragments&lt;managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="923.7" y="1765" width="0.3" height="15.0" fill="rgb(236,69,44)" rx="2" ry="2" />
<text  x="926.74" y="1775.5" ></text>
</g>
<g >
<title>std::__make_heap&lt;__gnu_cxx::__normal_iterator&lt;boost::iterator_range&lt;boost::intrusive::tree_iterator&lt;boost::intrusive::mhtraits&lt;range_tombstone_entry, boost::intrusive::set_member_hook&lt;boost::intrusive::link_mode&lt; (1 samples, 0.02%)</title><rect x="290.4" y="1653" width="0.2" height="15.0" fill="rgb(232,44,25)" rx="2" ry="2" />
<text  x="293.38" y="1663.5" ></text>
</g>
<g >
<title>logalloc::basic_region_impl::set_reclaiming_enabled (2 samples, 0.04%)</title><rect x="532.2" y="1653" width="0.5" height="15.0" fill="rgb(220,62,33)" rx="2" ry="2" />
<text  x="535.20" y="1663.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::storage_proxy&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="1132.8" y="1925" width="0.3" height="15.0" fill="rgb(205,82,47)" rx="2" ry="2" />
<text  x="1135.85" y="1935.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_Optional_payload_base (3 samples, 0.06%)</title><rect x="1051.0" y="1717" width="0.7" height="15.0" fill="rgb(224,210,14)" rx="2" ry="2" />
<text  x="1054.04" y="1727.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="24.8" y="1733" width="0.2" height="15.0" fill="rgb(210,5,34)" rx="2" ry="2" />
<text  x="27.79" y="1743.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_destroy_data (3 samples, 0.06%)</title><rect x="406.7" y="1589" width="0.7" height="15.0" fill="rgb(254,161,5)" rx="2" ry="2" />
<text  x="409.70" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (4 samples, 0.08%)</title><rect x="628.6" y="1813" width="0.9" height="15.0" fill="rgb(238,91,44)" rx="2" ry="2" />
<text  x="631.58" y="1823.5" ></text>
</g>
<g >
<title>partition_key::from_range&lt;std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt; const&amp;&gt; (17 samples, 0.32%)</title><rect x="921.1" y="1813" width="3.8" height="15.0" fill="rgb(212,135,31)" rx="2" ry="2" />
<text  x="924.05" y="1823.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (1 samples, 0.02%)</title><rect x="446.1" y="1717" width="0.3" height="15.0" fill="rgb(206,175,45)" rx="2" ry="2" />
<text  x="449.14" y="1727.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned int, std::less&lt;unsigned int&gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;unsigned int&gt; &gt;::find (5 samples, 0.09%)</title><rect x="43.2" y="1733" width="1.1" height="15.0" fill="rgb(219,103,52)" rx="2" ry="2" />
<text  x="46.17" y="1743.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::~vector (4 samples, 0.08%)</title><rect x="640.0" y="1893" width="0.9" height="15.0" fill="rgb(222,146,19)" rx="2" ry="2" />
<text  x="643.01" y="1903.5" ></text>
</g>
<g >
<title>db::schema_tables::create_columns_from_column_rows (1 samples, 0.02%)</title><rect x="108.8" y="1813" width="0.3" height="15.0" fill="rgb(246,132,41)" rx="2" ry="2" />
<text  x="111.84" y="1823.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_no_esft&lt;std::function&lt;std::function&lt;partition_presence_checker_result  (2 samples, 0.04%)</title><rect x="631.7" y="1813" width="0.5" height="15.0" fill="rgb(218,146,31)" rx="2" ry="2" />
<text  x="634.71" y="1823.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (2 samples, 0.04%)</title><rect x="275.6" y="1669" width="0.4" height="15.0" fill="rgb(243,121,52)" rx="2" ry="2" />
<text  x="278.58" y="1679.5" ></text>
</g>
<g >
<title>sstables::mc::writer::write_clustered&lt;clustering_row&gt; (2 samples, 0.04%)</title><rect x="1186.6" y="133" width="0.5" height="15.0" fill="rgb(217,53,6)" rx="2" ry="2" />
<text  x="1189.64" y="143.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="931.1" y="1829" width="0.3" height="15.0" fill="rgb(236,50,49)" rx="2" ry="2" />
<text  x="934.14" y="1839.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::_M_initialize_map (1 samples, 0.02%)</title><rect x="23.7" y="1797" width="0.2" height="15.0" fill="rgb(250,198,10)" rx="2" ry="2" />
<text  x="26.67" y="1807.5" ></text>
</g>
<g >
<title>db::is_serial_consistency (1 samples, 0.02%)</title><rect x="1113.4" y="1861" width="0.2" height="15.0" fill="rgb(221,67,45)" rx="2" ry="2" />
<text  x="1116.35" y="1871.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::~vector (2 samples, 0.04%)</title><rect x="77.9" y="1877" width="0.5" height="15.0" fill="rgb(253,215,24)" rx="2" ry="2" />
<text  x="80.91" y="1887.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (9 samples, 0.17%)</title><rect x="330.0" y="1701" width="2.1" height="15.0" fill="rgb(215,6,15)" rx="2" ry="2" />
<text  x="333.05" y="1711.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit_slot&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::walking_visitor&lt;row::for_each_cell&lt;sstables::mc::writer::write_cells (1 samples, 0.02%)</title><rect x="1186.2" y="85" width="0.2" height="15.0" fill="rgb(224,56,6)" rx="2" ry="2" />
<text  x="1189.19" y="95.5" ></text>
</g>
<g >
<title>_ZSt5visitIR18overloaded_functorIJZN4cql34expr9find_atomIZNS2_4findERKNS2_10expressionENS2_6oper_tEEUlRKNS2_15binary_operatorEE_EEPS9_S6_T_EUlSA_E_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_8constantEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_11conjunctionEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_12column_valueEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_5tokenEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_21unresolved_identifierEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_25column_mutation_attributeEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_13function_callEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_4castEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_15field_selectionEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_4nullEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_13bind_variableEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_16untyped_constantEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_17tuple_constructorEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_22collection_constructorEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_20usertype_constructorEE_EEJRSt7variantIJSJ_S8_SN_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_SF_S1R_S1V_S1Z_EEEENSt13invoke_resultISD_JDpDTclsr3stdE3getILm0EEclsr3stdE7declvalIT0_EEEEEE4typeEOSD_DpOS29_ (1 samples, 0.02%)</title><rect x="874.2" y="1829" width="0.2" height="15.0" fill="rgb(207,227,37)" rx="2" ry="2" />
<text  x="877.21" y="1839.5" ></text>
</g>
<g >
<title>clustering_row::external_memory_usage (31 samples, 0.59%)</title><rect x="252.5" y="1589" width="6.9" height="15.0" fill="rgb(214,164,30)" rx="2" ry="2" />
<text  x="255.50" y="1599.5" ></text>
</g>
<g >
<title>utils::timed_rate_moving_average_and_histogram::mark&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; (2 samples, 0.04%)</title><rect x="686.4" y="1909" width="0.4" height="15.0" fill="rgb(226,52,52)" rx="2" ry="2" />
<text  x="689.40" y="1919.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::emplace_back&lt;mutation_reader_merger::reader_and_fragment&gt; (1 samples, 0.02%)</title><rect x="301.4" y="1717" width="0.2" height="15.0" fill="rgb(224,111,15)" rx="2" ry="2" />
<text  x="304.36" y="1727.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::entry::entry (7 samples, 0.13%)</title><rect x="1012.5" y="1589" width="1.6" height="15.0" fill="rgb(210,222,52)" rx="2" ry="2" />
<text  x="1015.50" y="1599.5" ></text>
</g>
<g >
<title>query::result_set_builder::accept_new_row (1 samples, 0.02%)</title><rect x="108.2" y="1845" width="0.2" height="15.0" fill="rgb(216,33,7)" rx="2" ry="2" />
<text  x="111.17" y="1855.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE8scheduleINS_8internal22promise_base_with_typeIvEEZNS6_14discard_resultEvEUlDpOT_E_ZNS6_14then_impl_nrvoISE_NS0_IvEEEET0_OT_EUlOSA_RSE_ONS_12future_stateIS5_EEE_EEvSJ_OSH_OT1_ (9 samples, 0.17%)</title><rect x="721.8" y="1861" width="2.0" height="15.0" fill="rgb(225,76,44)" rx="2" ry="2" />
<text  x="724.81" y="1871.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (2 samples, 0.04%)</title><rect x="251.6" y="1557" width="0.5" height="15.0" fill="rgb(214,122,19)" rx="2" ry="2" />
<text  x="254.60" y="1567.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (9 samples, 0.17%)</title><rect x="1174.8" y="2037" width="2.0" height="15.0" fill="rgb(229,33,9)" rx="2" ry="2" />
<text  x="1177.76" y="2047.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (5 samples, 0.09%)</title><rect x="1023.7" y="1669" width="1.1" height="15.0" fill="rgb(228,21,6)" rx="2" ry="2" />
<text  x="1026.70" y="1679.5" ></text>
</g>
<g >
<title>frozen_schema::unfreeze (2 samples, 0.04%)</title><rect x="108.8" y="1845" width="0.5" height="15.0" fill="rgb(217,73,25)" rx="2" ry="2" />
<text  x="111.84" y="1855.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::get_mutations (36 samples, 0.68%)</title><rect x="848.2" y="1829" width="8.1" height="15.0" fill="rgb(249,128,28)" rx="2" ry="2" />
<text  x="851.21" y="1839.5" ></text>
</g>
<g >
<title>__tls_init (1 samples, 0.02%)</title><rect x="514.9" y="1733" width="0.3" height="15.0" fill="rgb(239,38,15)" rx="2" ry="2" />
<text  x="517.95" y="1743.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::then_impl&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (1 samples, 0.02%)</title><rect x="142.9" y="1781" width="0.2" height="15.0" fill="rgb(250,176,21)" rx="2" ry="2" />
<text  x="145.90" y="1791.5" ></text>
</g>
<g >
<title>range_tombstone_list::~range_tombstone_list (1 samples, 0.02%)</title><rect x="582.4" y="1717" width="0.2" height="15.0" fill="rgb(223,173,40)" rx="2" ry="2" />
<text  x="585.41" y="1727.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.02%)</title><rect x="50.3" y="1621" width="0.3" height="15.0" fill="rgb(217,63,35)" rx="2" ry="2" />
<text  x="53.34" y="1631.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (3 samples, 0.06%)</title><rect x="61.1" y="1541" width="0.7" height="15.0" fill="rgb(246,206,27)" rx="2" ry="2" />
<text  x="64.10" y="1551.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::_M_create_storage (1 samples, 0.02%)</title><rect x="156.4" y="1845" width="0.2" height="15.0" fill="rgb(221,105,6)" rx="2" ry="2" />
<text  x="159.35" y="1855.5" ></text>
</g>
<g >
<title>reader_permit::consume (1 samples, 0.02%)</title><rect x="427.8" y="1653" width="0.2" height="15.0" fill="rgb(234,55,4)" rx="2" ry="2" />
<text  x="430.76" y="1663.5" ></text>
</g>
<g >
<title>bound_view::from_range&lt;nonwrapping_interval&gt; (14 samples, 0.27%)</title><rect x="281.0" y="1621" width="3.1" height="15.0" fill="rgb(214,104,30)" rx="2" ry="2" />
<text  x="283.96" y="1631.5" ></text>
</g>
<g >
<title>cql3::raw_value::to_view (1 samples, 0.02%)</title><rect x="837.7" y="1829" width="0.2" height="15.0" fill="rgb(211,54,40)" rx="2" ry="2" />
<text  x="840.68" y="1839.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::process_results (1 samples, 0.02%)</title><rect x="103.5" y="1925" width="0.2" height="15.0" fill="rgb(249,191,44)" rx="2" ry="2" />
<text  x="106.46" y="1935.5" ></text>
</g>
<g >
<title>service::client_state::set_keyspace (15 samples, 0.28%)</title><rect x="829.2" y="1845" width="3.3" height="15.0" fill="rgb(222,92,10)" rx="2" ry="2" />
<text  x="832.16" y="1855.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume_in_thread&lt;sstables::sstable_writer&gt; (3 samples, 0.06%)</title><rect x="1187.3" y="213" width="0.7" height="15.0" fill="rgb(239,135,38)" rx="2" ry="2" />
<text  x="1190.31" y="223.5" ></text>
</g>
<g >
<title>utils::tuple_hash::hash_impl&lt;1ul, auth::resource_kind, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (2 samples, 0.04%)</title><rect x="794.6" y="1525" width="0.5" height="15.0" fill="rgb(238,69,47)" rx="2" ry="2" />
<text  x="797.65" y="1535.5" ></text>
</g>
<g >
<title>nonwrapping_interval&lt;dht::ring_position&gt;::make_singular (7 samples, 0.13%)</title><rect x="919.5" y="1813" width="1.6" height="15.0" fill="rgb(211,63,48)" rx="2" ry="2" />
<text  x="922.49" y="1823.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment (8 samples, 0.15%)</title><rect x="207.0" y="1653" width="1.8" height="15.0" fill="rgb(240,164,28)" rx="2" ry="2" />
<text  x="210.00" y="1663.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, cql3::operation::set_value*, std::default_delete&lt;cql3::operation::set_value&gt; &gt; (1 samples, 0.02%)</title><rect x="62.7" y="1685" width="0.2" height="15.0" fill="rgb(233,102,32)" rx="2" ry="2" />
<text  x="65.67" y="1695.5" ></text>
</g>
<g >
<title>sstables::mc::writer::write_clustered (1 samples, 0.02%)</title><rect x="1187.1" y="101" width="0.2" height="15.0" fill="rgb(234,166,36)" rx="2" ry="2" />
<text  x="1190.09" y="111.5" ></text>
</g>
<g >
<title>cql3::expr::untyped_constant::untyped_constant (1 samples, 0.02%)</title><rect x="59.1" y="1701" width="0.2" height="15.0" fill="rgb(227,106,37)" rx="2" ry="2" />
<text  x="62.08" y="1711.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value, std::allocator&lt;cql3::raw_value&gt; &gt;::_M_range_initialize&lt;cql3::raw_value const*&gt; (2 samples, 0.04%)</title><rect x="839.7" y="1893" width="0.4" height="15.0" fill="rgb(223,133,36)" rx="2" ry="2" />
<text  x="842.70" y="1903.5" ></text>
</g>
<g >
<title>ser::serializer&lt;partition_key&gt;::write&lt;bytes_ostream&gt; (1 samples, 0.02%)</title><rect x="1128.1" y="1589" width="0.3" height="15.0" fill="rgb(243,15,8)" rx="2" ry="2" />
<text  x="1131.14" y="1599.5" ></text>
</g>
<g >
<title>std::hash&lt;gms::inet_address&gt;::operator (1 samples, 0.02%)</title><rect x="1144.1" y="1861" width="0.2" height="15.0" fill="rgb(215,179,51)" rx="2" ry="2" />
<text  x="1147.06" y="1871.5" ></text>
</g>
<g >
<title>seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;::swap (2 samples, 0.04%)</title><rect x="823.8" y="1861" width="0.4" height="15.0" fill="rgb(227,182,39)" rx="2" ry="2" />
<text  x="826.79" y="1871.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (2 samples, 0.04%)</title><rect x="33.3" y="1653" width="0.5" height="15.0" fill="rgb(248,179,20)" rx="2" ry="2" />
<text  x="36.31" y="1663.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::get_error (1 samples, 0.02%)</title><rect x="29.9" y="1701" width="0.3" height="15.0" fill="rgb(217,216,52)" rx="2" ry="2" />
<text  x="32.95" y="1711.5" ></text>
</g>
<g >
<title>seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;::swap (4 samples, 0.08%)</title><rect x="818.4" y="1845" width="0.9" height="15.0" fill="rgb(237,143,46)" rx="2" ry="2" />
<text  x="821.41" y="1855.5" ></text>
</g>
<g >
<title>validation::validate_keyspace (9 samples, 0.17%)</title><rect x="814.1" y="1797" width="2.1" height="15.0" fill="rgb(236,30,14)" rx="2" ry="2" />
<text  x="817.15" y="1807.5" ></text>
</g>
<g >
<title>_ZSt5visitIR18overloaded_functorIJZN4cql34expr9find_atomIZNS2_4findERKNS2_10expressionENS2_6oper_tEEUlRKNS2_15binary_operatorEE_EEPS9_S6_T_EUlSA_E_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_8constantEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_11conjunctionEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_12column_valueEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_5tokenEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_21unresolved_identifierEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_25column_mutation_attributeEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_13function_callEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_4castEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_15field_selectionEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_4nullEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_13bind_variableEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_16untyped_constantEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_17tuple_constructorEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_22collection_constructorEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_20usertype_constructorEE_EEJRSt7variantIJSJ_S8_SN_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_SF_S1R_S1V_S1Z_EEEENSt13invoke_resultISD_JDpDTclsr3stdE3getILm0EEclsr3stdE7declvalIT0_EEEEEE4typeEOSD_DpOS29_ (1 samples, 0.02%)</title><rect x="652.1" y="1813" width="0.2" height="15.0" fill="rgb(215,124,49)" rx="2" ry="2" />
<text  x="655.11" y="1823.5" ></text>
</g>
<g >
<title>operator delete (5 samples, 0.09%)</title><rect x="927.8" y="1829" width="1.1" height="15.0" fill="rgb(236,139,51)" rx="2" ry="2" />
<text  x="930.78" y="1839.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (2 samples, 0.04%)</title><rect x="861.0" y="1861" width="0.4" height="15.0" fill="rgb(243,195,4)" rx="2" ry="2" />
<text  x="863.99" y="1871.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="1021.5" y="1685" width="0.2" height="15.0" fill="rgb(221,45,45)" rx="2" ry="2" />
<text  x="1024.46" y="1695.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (1 samples, 0.02%)</title><rect x="49.4" y="1701" width="0.3" height="15.0" fill="rgb(234,26,7)" rx="2" ry="2" />
<text  x="52.45" y="1711.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::_M_range_initialize&lt;managed_bytes const*&gt; (5 samples, 0.09%)</title><rect x="900.7" y="1765" width="1.1" height="15.0" fill="rgb(242,76,45)" rx="2" ry="2" />
<text  x="903.66" y="1775.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (554 samples, 10.52%)</title><rect x="326.7" y="1797" width="124.1" height="15.0" fill="rgb(219,94,19)" rx="2" ry="2" />
<text  x="329.68" y="1807.5" >flat_mutation_r..</text>
</g>
<g >
<title>seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::finally_body&lt;service::storage_proxy::do_query (12 samples, 0.23%)</title><rect x="676.1" y="1909" width="2.7" height="15.0" fill="rgb(246,223,14)" rx="2" ry="2" />
<text  x="679.09" y="1919.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::~impl (4 samples, 0.08%)</title><rect x="587.3" y="1797" width="0.9" height="15.0" fill="rgb(211,212,21)" rx="2" ry="2" />
<text  x="590.34" y="1807.5" ></text>
</g>
<g >
<title>row_cache::do_make_reader (46 samples, 0.87%)</title><rect x="543.9" y="1749" width="10.3" height="15.0" fill="rgb(245,82,23)" rx="2" ry="2" />
<text  x="546.86" y="1759.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (5 samples, 0.09%)</title><rect x="663.8" y="1893" width="1.1" height="15.0" fill="rgb(214,156,14)" rx="2" ry="2" />
<text  x="666.76" y="1903.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::assign (2 samples, 0.04%)</title><rect x="34.0" y="1653" width="0.4" height="15.0" fill="rgb(253,42,37)" rx="2" ry="2" />
<text  x="36.98" y="1663.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::Parser (1 samples, 0.02%)</title><rect x="24.1" y="1829" width="0.2" height="15.0" fill="rgb(209,156,34)" rx="2" ry="2" />
<text  x="27.12" y="1839.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (1 samples, 0.02%)</title><rect x="799.4" y="1637" width="0.2" height="15.0" fill="rgb(237,228,37)" rx="2" ry="2" />
<text  x="802.36" y="1647.5" ></text>
</g>
<g >
<title>ser::writer_of_query_result&lt;bytes_ostream&gt;::writer_of_query_result (8 samples, 0.15%)</title><rect x="611.1" y="1829" width="1.8" height="15.0" fill="rgb(207,201,38)" rx="2" ry="2" />
<text  x="614.09" y="1839.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="595.9" y="1813" width="0.2" height="15.0" fill="rgb(244,147,36)" rx="2" ry="2" />
<text  x="598.85" y="1823.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.02%)</title><rect x="1119.0" y="1637" width="0.2" height="15.0" fill="rgb(245,51,24)" rx="2" ry="2" />
<text  x="1121.95" y="1647.5" ></text>
</g>
<g >
<title>seastar::future&lt;std::tuple&lt;std::optional&lt;clustering_key_prefix&gt; &gt; &gt;::then_impl&lt;query::querier&lt; (9 samples, 0.17%)</title><rect x="558.0" y="1845" width="2.0" height="15.0" fill="rgb(252,209,45)" rx="2" ry="2" />
<text  x="560.98" y="1855.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::raw::update_statement, std::default_delete&lt;cql3::statements::raw::update_statement&gt; &gt;::operator= (1 samples, 0.02%)</title><rect x="67.6" y="1797" width="0.2" height="15.0" fill="rgb(209,68,0)" rx="2" ry="2" />
<text  x="70.60" y="1807.5" ></text>
</g>
<g >
<title>query::querier_base::querier_base (6 samples, 0.11%)</title><rect x="628.1" y="1829" width="1.4" height="15.0" fill="rgb(212,27,45)" rx="2" ry="2" />
<text  x="631.13" y="1839.5" ></text>
</g>
<g >
<title>std::locale::locale (1 samples, 0.02%)</title><rect x="82.8" y="2005" width="0.3" height="15.0" fill="rgb(253,138,48)" rx="2" ry="2" />
<text  x="85.84" y="2015.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (1 samples, 0.02%)</title><rect x="664.2" y="1861" width="0.2" height="15.0" fill="rgb(205,189,54)" rx="2" ry="2" />
<text  x="667.21" y="1871.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_channel (1 samples, 0.02%)</title><rect x="26.4" y="1733" width="0.2" height="15.0" fill="rgb(223,13,24)" rx="2" ry="2" />
<text  x="29.36" y="1743.5" ></text>
</g>
<g >
<title>seastar::internal::awaiter&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::await_suspend&lt;seastar::internal::coroutine_traits_base&lt;service::storage_proxy_coordinator_query_result&gt;::promise_type&gt; (1 samples, 0.02%)</title><rect x="956.2" y="1797" width="0.3" height="15.0" fill="rgb(250,200,47)" rx="2" ry="2" />
<text  x="959.24" y="1807.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consumer_adapter&lt;sstables::sstable_writer&gt;::consume (1 samples, 0.02%)</title><rect x="1188.9" y="53" width="0.2" height="15.0" fill="rgb(254,25,42)" rx="2" ry="2" />
<text  x="1191.88" y="63.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::pop_back (1 samples, 0.02%)</title><rect x="45.2" y="1765" width="0.2" height="15.0" fill="rgb(244,59,36)" rx="2" ry="2" />
<text  x="48.19" y="1775.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt;::allocate (1 samples, 0.02%)</title><rect x="287.0" y="1605" width="0.2" height="15.0" fill="rgb(247,103,54)" rx="2" ry="2" />
<text  x="290.01" y="1615.5" ></text>
</g>
<g >
<title>seastar::sprint&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; (8 samples, 0.15%)</title><rect x="21.4" y="1941" width="1.8" height="15.0" fill="rgb(219,2,53)" rx="2" ry="2" />
<text  x="24.43" y="1951.5" ></text>
</g>
<g >
<title>sstables::compaction::setup&lt;noop_compacted_fragments_consumer&gt; (1 samples, 0.02%)</title><rect x="1131.3" y="1749" width="0.2" height="15.0" fill="rgb(234,7,38)" rx="2" ry="2" />
<text  x="1134.28" y="1759.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (1 samples, 0.02%)</title><rect x="324.7" y="1813" width="0.2" height="15.0" fill="rgb(242,229,29)" rx="2" ry="2" />
<text  x="327.67" y="1823.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::forward_to (8 samples, 0.15%)</title><rect x="859.6" y="1893" width="1.8" height="15.0" fill="rgb(233,212,36)" rx="2" ry="2" />
<text  x="862.64" y="1903.5" ></text>
</g>
<g >
<title>sstables::mc::writer::write_clustered&lt;clustering_row&gt; (1 samples, 0.02%)</title><rect x="1188.0" y="69" width="0.2" height="15.0" fill="rgb(223,20,12)" rx="2" ry="2" />
<text  x="1190.98" y="79.5" ></text>
</g>
<g >
<title>sstables::mc::writer::consume (1 samples, 0.02%)</title><rect x="1187.1" y="133" width="0.2" height="15.0" fill="rgb(245,133,3)" rx="2" ry="2" />
<text  x="1190.09" y="143.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (287 samples, 5.45%)</title><rect x="18.3" y="2005" width="64.3" height="15.0" fill="rgb(243,93,51)" rx="2" ry="2" />
<text  x="21.29" y="2015.5" >seastar..</text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::clear (2 samples, 0.04%)</title><rect x="478.0" y="1701" width="0.4" height="15.0" fill="rgb(229,12,35)" rx="2" ry="2" />
<text  x="480.97" y="1711.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const*, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;*&gt; (1 samples, 0.02%)</title><rect x="784.6" y="1621" width="0.2" height="15.0" fill="rgb(219,49,46)" rx="2" ry="2" />
<text  x="787.56" y="1631.5" ></text>
</g>
<g >
<title>multishard_combining_reader::fill_buffer (2 samples, 0.04%)</title><rect x="107.5" y="1685" width="0.4" height="15.0" fill="rgb(216,42,38)" rx="2" ry="2" />
<text  x="110.49" y="1695.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, false, false&gt;::operator= (1 samples, 0.02%)</title><rect x="47.9" y="1717" width="0.2" height="15.0" fill="rgb(222,33,29)" rx="2" ry="2" />
<text  x="50.88" y="1727.5" ></text>
</g>
<g >
<title>service::never_speculating_read_executor::never_speculating_read_executor (25 samples, 0.47%)</title><rect x="1048.1" y="1749" width="5.6" height="15.0" fill="rgb(249,32,17)" rx="2" ry="2" />
<text  x="1051.13" y="1759.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (1 samples, 0.02%)</title><rect x="1029.8" y="1749" width="0.2" height="15.0" fill="rgb(217,52,3)" rx="2" ry="2" />
<text  x="1032.75" y="1759.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (2 samples, 0.04%)</title><rect x="1188.4" y="181" width="0.5" height="15.0" fill="rgb(249,60,32)" rx="2" ry="2" />
<text  x="1191.43" y="191.5" ></text>
</g>
<g >
<title>flush_reader::get_next_partition (1 samples, 0.02%)</title><rect x="1187.3" y="117" width="0.2" height="15.0" fill="rgb(237,124,39)" rx="2" ry="2" />
<text  x="1190.31" y="127.5" ></text>
</g>
<g >
<title>mutation_partition::upper_bound (3 samples, 0.06%)</title><rect x="280.1" y="1621" width="0.6" height="15.0" fill="rgb(248,172,29)" rx="2" ry="2" />
<text  x="283.07" y="1631.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::allocate_large_and_trim (1 samples, 0.02%)</title><rect x="1149.7" y="1797" width="0.2" height="15.0" fill="rgb(225,4,48)" rx="2" ry="2" />
<text  x="1152.66" y="1807.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.02%)</title><rect x="60.9" y="1493" width="0.2" height="15.0" fill="rgb(244,91,37)" rx="2" ry="2" />
<text  x="63.88" y="1503.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::then_wrapped_common&lt;true, void, service::abstract_read_executor::make_data_requests (15 samples, 0.28%)</title><rect x="985.2" y="1733" width="3.3" height="15.0" fill="rgb(240,42,43)" rx="2" ry="2" />
<text  x="988.15" y="1743.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::set_urgent_state (3 samples, 0.06%)</title><rect x="638.2" y="1909" width="0.7" height="15.0" fill="rgb(219,31,33)" rx="2" ry="2" />
<text  x="641.21" y="1919.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume_in_thread&lt;sstables::sstable_writer&gt; (1 samples, 0.02%)</title><rect x="1177.0" y="1957" width="0.2" height="15.0" fill="rgb(245,123,17)" rx="2" ry="2" />
<text  x="1180.00" y="1967.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.02%)</title><rect x="20.3" y="1909" width="0.2" height="15.0" fill="rgb(249,48,17)" rx="2" ry="2" />
<text  x="23.31" y="1919.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::emplace&lt;atomic_cell_or_collection, seastar::optimized_optional&lt;cell_hash&gt; &gt; (1 samples, 0.02%)</title><rect x="1119.8" y="1621" width="0.3" height="15.0" fill="rgb(235,194,24)" rx="2" ry="2" />
<text  x="1122.85" y="1631.5" ></text>
</g>
<g >
<title>seastar::reactor::add_timer (1 samples, 0.02%)</title><rect x="1013.2" y="1573" width="0.2" height="15.0" fill="rgb(205,113,24)" rx="2" ry="2" />
<text  x="1016.17" y="1583.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="538.0" y="1717" width="0.3" height="15.0" fill="rgb(216,30,22)" rx="2" ry="2" />
<text  x="541.03" y="1727.5" ></text>
</g>
<g >
<title>seastar::syscall_work_queue::work_item_returning&lt;seastar::syscall_result_extra&lt;stat&gt; &gt;::process (1 samples, 0.02%)</title><rect x="1189.8" y="1989" width="0.2" height="15.0" fill="rgb(250,163,8)" rx="2" ry="2" />
<text  x="1192.78" y="1999.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::~guard (1 samples, 0.02%)</title><rect x="466.3" y="1765" width="0.2" height="15.0" fill="rgb(209,46,3)" rx="2" ry="2" />
<text  x="469.31" y="1775.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::tombstone_for_row (2 samples, 0.04%)</title><rect x="407.8" y="1637" width="0.5" height="15.0" fill="rgb(226,172,27)" rx="2" ry="2" />
<text  x="410.82" y="1647.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.02%)</title><rect x="49.0" y="1605" width="0.2" height="15.0" fill="rgb(217,193,16)" rx="2" ry="2" />
<text  x="52.00" y="1615.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.06%)</title><rect x="101.2" y="1877" width="0.7" height="15.0" fill="rgb(207,216,29)" rx="2" ry="2" />
<text  x="104.22" y="1887.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (1 samples, 0.02%)</title><rect x="706.8" y="1845" width="0.2" height="15.0" fill="rgb(253,145,29)" rx="2" ry="2" />
<text  x="709.79" y="1855.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::leaf_node::free (3 samples, 0.06%)</title><rect x="439.0" y="1637" width="0.6" height="15.0" fill="rgb(254,25,17)" rx="2" ry="2" />
<text  x="441.97" y="1647.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (14 samples, 0.27%)</title><rect x="1186.2" y="1717" width="3.1" height="15.0" fill="rgb(246,116,28)" rx="2" ry="2" />
<text  x="1189.19" y="1727.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (1 samples, 0.02%)</title><rect x="1146.7" y="1829" width="0.3" height="15.0" fill="rgb(230,189,22)" rx="2" ry="2" />
<text  x="1149.74" y="1839.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="553.0" y="1669" width="0.3" height="15.0" fill="rgb(208,139,3)" rx="2" ry="2" />
<text  x="556.05" y="1679.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (7 samples, 0.13%)</title><rect x="892.4" y="1653" width="1.5" height="15.0" fill="rgb(240,221,31)" rx="2" ry="2" />
<text  x="895.37" y="1663.5" ></text>
</g>
<g >
<title>rows_entry::rows_entry (1 samples, 0.02%)</title><rect x="109.1" y="1717" width="0.2" height="15.0" fill="rgb(250,168,51)" rx="2" ry="2" />
<text  x="112.06" y="1727.5" ></text>
</g>
<g >
<title>reader_selector::has_new_readers (1 samples, 0.02%)</title><rect x="179.9" y="1685" width="0.2" height="15.0" fill="rgb(236,82,9)" rx="2" ry="2" />
<text  x="182.88" y="1695.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;::operator (12 samples, 0.23%)</title><rect x="733.0" y="1749" width="2.7" height="15.0" fill="rgb(236,87,19)" rx="2" ry="2" />
<text  x="736.02" y="1759.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_digest_requests (1 samples, 0.02%)</title><rect x="1029.5" y="1749" width="0.3" height="15.0" fill="rgb(234,138,1)" rx="2" ry="2" />
<text  x="1032.53" y="1759.5" ></text>
</g>
<g >
<title>row_cache::make_reader (54 samples, 1.03%)</title><rect x="542.7" y="1765" width="12.1" height="15.0" fill="rgb(229,16,40)" rx="2" ry="2" />
<text  x="545.74" y="1775.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate (1 samples, 0.02%)</title><rect x="850.7" y="1717" width="0.2" height="15.0" fill="rgb(221,205,11)" rx="2" ry="2" />
<text  x="853.68" y="1727.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="73.7" y="1717" width="0.2" height="15.0" fill="rgb(254,103,4)" rx="2" ry="2" />
<text  x="76.65" y="1727.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (30 samples, 0.57%)</title><rect x="342.6" y="1637" width="6.7" height="15.0" fill="rgb(249,219,41)" rx="2" ry="2" />
<text  x="345.60" y="1647.5" ></text>
</g>
<g >
<title>ser::safe_serialize_as_uint32&lt;bytes_ostream&gt; (7 samples, 0.13%)</title><rect x="397.3" y="1573" width="1.6" height="15.0" fill="rgb(229,8,30)" rx="2" ry="2" />
<text  x="400.28" y="1583.5" ></text>
</g>
<g >
<title>database::apply_with_commitlog (30 samples, 0.57%)</title><rect x="1115.4" y="1749" width="6.7" height="15.0" fill="rgb(239,123,26)" rx="2" ry="2" />
<text  x="1118.37" y="1759.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (2 samples, 0.04%)</title><rect x="669.1" y="1909" width="0.5" height="15.0" fill="rgb(254,131,45)" rx="2" ry="2" />
<text  x="672.14" y="1919.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (1 samples, 0.02%)</title><rect x="1035.4" y="1733" width="0.2" height="15.0" fill="rgb(244,95,44)" rx="2" ry="2" />
<text  x="1038.36" y="1743.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="895.5" y="1749" width="0.2" height="15.0" fill="rgb(206,90,46)" rx="2" ry="2" />
<text  x="898.50" y="1759.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (1 samples, 0.02%)</title><rect x="105.7" y="1909" width="0.2" height="15.0" fill="rgb(224,28,47)" rx="2" ry="2" />
<text  x="108.70" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::~_Variant_storage (1 samples, 0.02%)</title><rect x="646.5" y="1733" width="0.2" height="15.0" fill="rgb(245,103,35)" rx="2" ry="2" />
<text  x="649.51" y="1743.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (14 samples, 0.27%)</title><rect x="1186.2" y="1909" width="3.1" height="15.0" fill="rgb(245,37,41)" rx="2" ry="2" />
<text  x="1189.19" y="1919.5" ></text>
</g>
<g >
<title>ser::writer_of_deletable_row&lt;bytes_ostream&gt;::write_key (1 samples, 0.02%)</title><rect x="1126.1" y="1573" width="0.2" height="15.0" fill="rgb(245,212,16)" rx="2" ry="2" />
<text  x="1129.13" y="1583.5" ></text>
</g>
<g >
<title>partition_key_view::legacy_form (1 samples, 0.02%)</title><rect x="908.7" y="1797" width="0.3" height="15.0" fill="rgb(248,42,45)" rx="2" ry="2" />
<text  x="911.73" y="1807.5" ></text>
</g>
<g >
<title>__sigsetjmp (1 samples, 0.02%)</title><rect x="21.2" y="1925" width="0.2" height="15.0" fill="rgb(253,176,4)" rx="2" ry="2" />
<text  x="24.21" y="1935.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (14 samples, 0.27%)</title><rect x="1186.2" y="1845" width="3.1" height="15.0" fill="rgb(240,44,42)" rx="2" ry="2" />
<text  x="1189.19" y="1855.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.02%)</title><rect x="48.3" y="1621" width="0.2" height="15.0" fill="rgb(219,169,6)" rx="2" ry="2" />
<text  x="51.32" y="1631.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::query_options, db::consistency_level&amp;, std::vector&lt;cql3::raw_value, std::allocator&lt;cql3::raw_value&gt; &gt;, cql3::query_options::specific_options&gt; (26 samples, 0.49%)</title><rect x="833.2" y="1877" width="5.8" height="15.0" fill="rgb(244,101,13)" rx="2" ry="2" />
<text  x="836.20" y="1887.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="654.1" y="1877" width="0.2" height="15.0" fill="rgb(236,145,37)" rx="2" ry="2" />
<text  x="657.13" y="1887.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt;, true, true&gt;::__uniq_ptr_data (2 samples, 0.04%)</title><rect x="55.3" y="1541" width="0.4" height="15.0" fill="rgb(238,62,26)" rx="2" ry="2" />
<text  x="58.27" y="1551.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reserve&lt;logalloc::allocating_section::operator (1 samples, 0.02%)</title><rect x="1187.3" y="101" width="0.2" height="15.0" fill="rgb(227,80,29)" rx="2" ry="2" />
<text  x="1190.31" y="111.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (1 samples, 0.02%)</title><rect x="698.1" y="1909" width="0.2" height="15.0" fill="rgb(217,206,17)" rx="2" ry="2" />
<text  x="701.05" y="1919.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reclaiming_disabled&lt;flush_reader::get_next_partition (1 samples, 0.02%)</title><rect x="1187.3" y="85" width="0.2" height="15.0" fill="rgb(251,93,16)" rx="2" ry="2" />
<text  x="1190.31" y="95.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="582.9" y="1717" width="0.2" height="15.0" fill="rgb(232,92,18)" rx="2" ry="2" />
<text  x="585.85" y="1727.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::signal (1 samples, 0.02%)</title><rect x="313.5" y="1733" width="0.2" height="15.0" fill="rgb(254,145,24)" rx="2" ry="2" />
<text  x="316.46" y="1743.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::on_new_range (1 samples, 0.02%)</title><rect x="847.3" y="1813" width="0.2" height="15.0" fill="rgb(233,229,46)" rx="2" ry="2" />
<text  x="850.32" y="1823.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;::operator (8 samples, 0.15%)</title><rect x="748.3" y="1717" width="1.7" height="15.0" fill="rgb(238,162,43)" rx="2" ry="2" />
<text  x="751.26" y="1727.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="72.1" y="1781" width="0.2" height="15.0" fill="rgb(243,9,52)" rx="2" ry="2" />
<text  x="75.08" y="1791.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::set_text (2 samples, 0.04%)</title><rect x="34.0" y="1685" width="0.4" height="15.0" fill="rgb(249,121,26)" rx="2" ry="2" />
<text  x="36.98" y="1695.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::clone&lt;row::row (138 samples, 2.62%)</title><rect x="220.7" y="1557" width="30.9" height="15.0" fill="rgb(206,18,12)" rx="2" ry="2" />
<text  x="223.67" y="1567.5" >co..</text>
</g>
<g >
<title>reader_permit::impl::signal (5 samples, 0.09%)</title><rect x="313.7" y="1733" width="1.1" height="15.0" fill="rgb(229,219,11)" rx="2" ry="2" />
<text  x="316.68" y="1743.5" ></text>
</g>
<g >
<title>cql3::statements::raw::modification_statement::prepare (40 samples, 0.76%)</title><rect x="68.9" y="1893" width="9.0" height="15.0" fill="rgb(234,211,50)" rx="2" ry="2" />
<text  x="71.94" y="1903.5" ></text>
</g>
<g >
<title>__start_context (2 samples, 0.04%)</title><rect x="1186.6" y="293" width="0.5" height="15.0" fill="rgb(220,138,14)" rx="2" ry="2" />
<text  x="1189.64" y="303.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.02%)</title><rect x="57.3" y="1557" width="0.2" height="15.0" fill="rgb(225,153,36)" rx="2" ry="2" />
<text  x="60.29" y="1567.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.02%)</title><rect x="57.3" y="1637" width="0.2" height="15.0" fill="rgb(236,116,31)" rx="2" ry="2" />
<text  x="60.29" y="1647.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::operator (1 samples, 0.02%)</title><rect x="182.1" y="1701" width="0.2" height="15.0" fill="rgb(254,76,39)" rx="2" ry="2" />
<text  x="185.13" y="1711.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_esft&lt;schema&gt;::dispose (1 samples, 0.02%)</title><rect x="12.0" y="2021" width="0.2" height="15.0" fill="rgb(222,150,9)" rx="2" ry="2" />
<text  x="15.02" y="2031.5" ></text>
</g>
<g >
<title>row_tombstone::apply (3 samples, 0.06%)</title><rect x="425.5" y="1637" width="0.7" height="15.0" fill="rgb(216,145,20)" rx="2" ry="2" />
<text  x="428.52" y="1647.5" ></text>
</g>
<g >
<title>service::migration_manager::announce_new_column_family (1 samples, 0.02%)</title><rect x="688.0" y="1781" width="0.2" height="15.0" fill="rgb(249,205,10)" rx="2" ry="2" />
<text  x="690.97" y="1791.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="1164.9" y="1957" width="0.2" height="15.0" fill="rgb(207,15,11)" rx="2" ry="2" />
<text  x="1167.90" y="1967.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;::unique_ptr (2 samples, 0.04%)</title><rect x="55.3" y="1557" width="0.4" height="15.0" fill="rgb(209,137,15)" rx="2" ry="2" />
<text  x="58.27" y="1567.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::clone&lt;row::row (1 samples, 0.02%)</title><rect x="109.1" y="1685" width="0.2" height="15.0" fill="rgb(246,214,8)" rx="2" ry="2" />
<text  x="112.06" y="1695.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (2 samples, 0.04%)</title><rect x="218.9" y="1557" width="0.4" height="15.0" fill="rgb(237,135,0)" rx="2" ry="2" />
<text  x="221.88" y="1567.5" ></text>
</g>
<g >
<title>sstring_hash::operator (4 samples, 0.08%)</title><rect x="1039.8" y="1717" width="0.9" height="15.0" fill="rgb(213,88,47)" rx="2" ry="2" />
<text  x="1042.84" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::~_Variant_storage (2 samples, 0.04%)</title><rect x="77.9" y="1813" width="0.5" height="15.0" fill="rgb(247,106,9)" rx="2" ry="2" />
<text  x="80.91" y="1823.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;query::result&gt;::operator= (1 samples, 0.02%)</title><rect x="140.7" y="1877" width="0.2" height="15.0" fill="rgb(208,49,50)" rx="2" ry="2" />
<text  x="143.66" y="1887.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::deallocate (6 samples, 0.11%)</title><rect x="319.1" y="1733" width="1.3" height="15.0" fill="rgb(233,186,31)" rx="2" ry="2" />
<text  x="322.06" y="1743.5" ></text>
</g>
<g >
<title>logalloc::basic_region_impl::set_reclaiming_enabled (1 samples, 0.02%)</title><rect x="550.8" y="1733" width="0.2" height="15.0" fill="rgb(208,140,16)" rx="2" ry="2" />
<text  x="553.81" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, flat_mutation_reader, reader_concurrency_semaphore::inactive_read_handle&gt;::~_Variant_storage (1 samples, 0.02%)</title><rect x="597.2" y="1845" width="0.2" height="15.0" fill="rgb(209,92,22)" rx="2" ry="2" />
<text  x="600.20" y="1855.5" ></text>
</g>
<g >
<title>db::block_for (1 samples, 0.02%)</title><rect x="1041.4" y="1765" width="0.2" height="15.0" fill="rgb(208,226,29)" rx="2" ry="2" />
<text  x="1044.41" y="1775.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (2 samples, 0.04%)</title><rect x="51.2" y="1717" width="0.5" height="15.0" fill="rgb(218,15,46)" rx="2" ry="2" />
<text  x="54.24" y="1727.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::_M_get_Tp_allocator (1 samples, 0.02%)</title><rect x="55.0" y="1669" width="0.3" height="15.0" fill="rgb(239,14,37)" rx="2" ry="2" />
<text  x="58.05" y="1679.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;cql_transport::messages::result_message::rows, false&gt;::make&lt;cql3::result&gt; (8 samples, 0.15%)</title><rect x="654.1" y="1893" width="1.8" height="15.0" fill="rgb(235,153,41)" rx="2" ry="2" />
<text  x="657.13" y="1903.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::digest_read_resolver (1 samples, 0.02%)</title><rect x="981.6" y="1749" width="0.2" height="15.0" fill="rgb(241,8,13)" rx="2" ry="2" />
<text  x="984.57" y="1759.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.09%)</title><rect x="753.9" y="1829" width="1.1" height="15.0" fill="rgb(233,80,17)" rx="2" ry="2" />
<text  x="756.86" y="1839.5" ></text>
</g>
<g >
<title>operator new (12 samples, 0.23%)</title><rect x="971.0" y="1717" width="2.7" height="15.0" fill="rgb(241,30,53)" rx="2" ry="2" />
<text  x="974.03" y="1727.5" ></text>
</g>
<g >
<title>utils::estimated_histogram::estimated_histogram (1 samples, 0.02%)</title><rect x="1177.0" y="1877" width="0.2" height="15.0" fill="rgb(244,86,47)" rx="2" ry="2" />
<text  x="1180.00" y="1887.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (1 samples, 0.02%)</title><rect x="54.4" y="1685" width="0.2" height="15.0" fill="rgb(245,9,50)" rx="2" ry="2" />
<text  x="57.38" y="1695.5" ></text>
</g>
<g >
<title>free (1 samples, 0.02%)</title><rect x="70.7" y="1797" width="0.3" height="15.0" fill="rgb(227,47,6)" rx="2" ry="2" />
<text  x="73.74" y="1807.5" ></text>
</g>
<g >
<title>seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;::swap (3 samples, 0.06%)</title><rect x="741.1" y="1813" width="0.7" height="15.0" fill="rgb(245,7,20)" rx="2" ry="2" />
<text  x="744.08" y="1823.5" ></text>
</g>
<g >
<title>ser::deletable_row_view::shadowable_deleted_at (2 samples, 0.04%)</title><rect x="1120.1" y="1637" width="0.4" height="15.0" fill="rgb(223,21,45)" rx="2" ry="2" />
<text  x="1123.07" y="1647.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_pausable_in_thread&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;sstables::sstable_writer&gt; &gt;, flat_mutation_reader::no_filter&gt; (3 samples, 0.06%)</title><rect x="1187.3" y="165" width="0.7" height="15.0" fill="rgb(229,193,34)" rx="2" ry="2" />
<text  x="1190.31" y="175.5" ></text>
</g>
<g >
<title>cql3::expr::expression::~expression (2 samples, 0.04%)</title><rect x="58.6" y="1701" width="0.5" height="15.0" fill="rgb(252,60,1)" rx="2" ry="2" />
<text  x="61.63" y="1711.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (2 samples, 0.04%)</title><rect x="44.5" y="1765" width="0.5" height="15.0" fill="rgb(240,157,6)" rx="2" ry="2" />
<text  x="47.51" y="1775.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;nonwrapping_interval&lt;dht::ring_position&gt; const*, nonwrapping_interval&lt;dht::ring_position&gt;*&gt; (1 samples, 0.02%)</title><rect x="1027.5" y="1669" width="0.2" height="15.0" fill="rgb(217,176,24)" rx="2" ry="2" />
<text  x="1030.51" y="1679.5" ></text>
</g>
<g >
<title>service::abstract_write_response_handler::apply_locally (1 samples, 0.02%)</title><rect x="1122.8" y="1685" width="0.2" height="15.0" fill="rgb(211,40,52)" rx="2" ry="2" />
<text  x="1125.76" y="1695.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (1 samples, 0.02%)</title><rect x="1130.8" y="1909" width="0.3" height="15.0" fill="rgb(228,208,16)" rx="2" ry="2" />
<text  x="1133.83" y="1919.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (2 samples, 0.04%)</title><rect x="49.9" y="1749" width="0.4" height="15.0" fill="rgb(233,214,14)" rx="2" ry="2" />
<text  x="52.89" y="1759.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::inet_address (1 samples, 0.02%)</title><rect x="969.2" y="1781" width="0.3" height="15.0" fill="rgb(232,203,13)" rx="2" ry="2" />
<text  x="972.24" y="1791.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::take_value (1 samples, 0.02%)</title><rect x="636.4" y="1893" width="0.2" height="15.0" fill="rgb(215,159,26)" rx="2" ry="2" />
<text  x="639.42" y="1903.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (1 samples, 0.02%)</title><rect x="688.0" y="1813" width="0.2" height="15.0" fill="rgb(249,23,23)" rx="2" ry="2" />
<text  x="690.97" y="1823.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_live_sorted_endpoints (96 samples, 1.82%)</title><rect x="1054.9" y="1765" width="21.5" height="15.0" fill="rgb(228,201,31)" rx="2" ry="2" />
<text  x="1057.85" y="1775.5" >s..</text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.06%)</title><rect x="838.4" y="1845" width="0.6" height="15.0" fill="rgb(229,29,46)" rx="2" ry="2" />
<text  x="841.35" y="1855.5" ></text>
</g>
<g >
<title>range_tombstone_list::slice (7 samples, 0.13%)</title><rect x="263.9" y="1573" width="1.6" height="15.0" fill="rgb(242,51,41)" rx="2" ry="2" />
<text  x="266.93" y="1583.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (14 samples, 0.27%)</title><rect x="1186.2" y="2021" width="3.1" height="15.0" fill="rgb(238,89,40)" rx="2" ry="2" />
<text  x="1189.19" y="2031.5" ></text>
</g>
<g >
<title>mutation_source::make_reader (1 samples, 0.02%)</title><rect x="956.5" y="1589" width="0.2" height="15.0" fill="rgb(216,53,19)" rx="2" ry="2" />
<text  x="959.47" y="1599.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;auth::resource_kind, std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;auth::resource_kind&gt;, std::hash&lt;auth::resource_kind&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (2 samples, 0.04%)</title><rect x="767.8" y="1765" width="0.4" height="15.0" fill="rgb(211,1,4)" rx="2" ry="2" />
<text  x="770.75" y="1775.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (2 samples, 0.04%)</title><rect x="629.9" y="1861" width="0.5" height="15.0" fill="rgb(249,3,46)" rx="2" ry="2" />
<text  x="632.92" y="1871.5" ></text>
</g>
<g >
<title>database::get_unlimited_query_max_result_size (9 samples, 0.17%)</title><rect x="1107.1" y="1829" width="2.0" height="15.0" fill="rgb(222,26,37)" rx="2" ry="2" />
<text  x="1110.08" y="1839.5" ></text>
</g>
<g >
<title>operator new (8 samples, 0.15%)</title><rect x="1090.5" y="1781" width="1.8" height="15.0" fill="rgb(223,132,13)" rx="2" ry="2" />
<text  x="1093.49" y="1791.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;mutation_querier, false, false&gt;::_Optional_base (4 samples, 0.08%)</title><rect x="456.5" y="1829" width="0.8" height="15.0" fill="rgb(240,99,31)" rx="2" ry="2" />
<text  x="459.45" y="1839.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="12.0" y="1989" width="0.2" height="15.0" fill="rgb(231,84,17)" rx="2" ry="2" />
<text  x="15.02" y="1999.5" ></text>
</g>
<g >
<title>std::_Optional_base_impl&lt;query::querier&lt; (6 samples, 0.11%)</title><rect x="628.1" y="1845" width="1.4" height="15.0" fill="rgb(219,166,50)" rx="2" ry="2" />
<text  x="631.13" y="1855.5" ></text>
</g>
<g >
<title>utils::config_file::named_value&lt;unsigned long&gt;::the_value (6 samples, 0.11%)</title><rect x="1107.7" y="1813" width="1.4" height="15.0" fill="rgb(238,12,10)" rx="2" ry="2" />
<text  x="1110.75" y="1823.5" ></text>
</g>
<g >
<title>bound_view::from_range_end&lt;nonwrapping_interval&gt; (2 samples, 0.04%)</title><rect x="264.4" y="1541" width="0.4" height="15.0" fill="rgb(207,70,27)" rx="2" ry="2" />
<text  x="267.38" y="1551.5" ></text>
</g>
<g >
<title>seastar::do_until&lt;flush_reader::fill_buffer (1 samples, 0.02%)</title><rect x="1186.4" y="181" width="0.2" height="15.0" fill="rgb(206,13,33)" rx="2" ry="2" />
<text  x="1189.41" y="191.5" ></text>
</g>
<g >
<title>global_schema_ptr::global_schema_ptr (13 samples, 0.25%)</title><rect x="992.3" y="1701" width="2.9" height="15.0" fill="rgb(244,207,16)" rx="2" ry="2" />
<text  x="995.32" y="1711.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (4 samples, 0.08%)</title><rect x="60.9" y="1637" width="0.9" height="15.0" fill="rgb(242,229,37)" rx="2" ry="2" />
<text  x="63.88" y="1647.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;query::querier&lt; (1 samples, 0.02%)</title><rect x="141.8" y="1877" width="0.2" height="15.0" fill="rgb(245,223,53)" rx="2" ry="2" />
<text  x="144.78" y="1887.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (2 samples, 0.04%)</title><rect x="484.5" y="1717" width="0.4" height="15.0" fill="rgb(214,74,17)" rx="2" ry="2" />
<text  x="487.47" y="1727.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="675.4" y="1909" width="0.2" height="15.0" fill="rgb(215,149,30)" rx="2" ry="2" />
<text  x="678.42" y="1919.5" ></text>
</g>
<g >
<title>service::client_state::has_access (163 samples, 3.10%)</title><rect x="770.0" y="1797" width="36.5" height="15.0" fill="rgb(242,61,35)" rx="2" ry="2" />
<text  x="773.00" y="1807.5" >ser..</text>
</g>
<g >
<title>double_decker&lt;long, cache_entry, dht::raw_token_less_comparator, dht::ring_position_comparator, 16,  (7 samples, 0.13%)</title><rect x="546.5" y="1733" width="1.6" height="15.0" fill="rgb(252,20,52)" rx="2" ry="2" />
<text  x="549.55" y="1743.5" ></text>
</g>
<g >
<title>seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;::swap (1 samples, 0.02%)</title><rect x="743.5" y="1797" width="0.3" height="15.0" fill="rgb(209,172,1)" rx="2" ry="2" />
<text  x="746.55" y="1807.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (4 samples, 0.08%)</title><rect x="729.2" y="1813" width="0.9" height="15.0" fill="rgb(239,59,14)" rx="2" ry="2" />
<text  x="732.21" y="1823.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::query_processor::process_authorized_statement (15 samples, 0.28%)</title><rect x="643.4" y="1925" width="3.3" height="15.0" fill="rgb(220,113,49)" rx="2" ry="2" />
<text  x="646.37" y="1935.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::_S_do_relocate (3 samples, 0.06%)</title><rect x="55.3" y="1669" width="0.6" height="15.0" fill="rgb(225,95,3)" rx="2" ry="2" />
<text  x="58.27" y="1679.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::check (3 samples, 0.06%)</title><rect x="339.7" y="1637" width="0.7" height="15.0" fill="rgb(243,14,20)" rx="2" ry="2" />
<text  x="342.68" y="1647.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_Optional_payload_base (2 samples, 0.04%)</title><rect x="158.8" y="1813" width="0.5" height="15.0" fill="rgb(221,30,19)" rx="2" ry="2" />
<text  x="161.82" y="1823.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="55.7" y="1557" width="0.2" height="15.0" fill="rgb(210,55,35)" rx="2" ry="2" />
<text  x="58.72" y="1567.5" ></text>
</g>
<g >
<title>ser::writer_of_qr_partition&lt;bytes_ostream&gt;::skip_key (1 samples, 0.02%)</title><rect x="347.3" y="1605" width="0.2" height="15.0" fill="rgb(217,139,16)" rx="2" ry="2" />
<text  x="350.30" y="1615.5" ></text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt;&amp;&gt; (1 samples, 0.02%)</title><rect x="830.3" y="1781" width="0.2" height="15.0" fill="rgb(244,162,20)" rx="2" ry="2" />
<text  x="833.28" y="1791.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.02%)</title><rect x="62.0" y="1717" width="0.2" height="15.0" fill="rgb(240,26,52)" rx="2" ry="2" />
<text  x="65.00" y="1727.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement::execute (82 samples, 1.56%)</title><rect x="646.7" y="1925" width="18.4" height="15.0" fill="rgb(221,85,44)" rx="2" ry="2" />
<text  x="649.73" y="1935.5" ></text>
</g>
<g >
<title>service::storage_proxy::new_read_repair_decision (1 samples, 0.02%)</title><rect x="1076.8" y="1781" width="0.2" height="15.0" fill="rgb(214,219,41)" rx="2" ry="2" />
<text  x="1079.82" y="1791.5" ></text>
</g>
<g >
<title>single_node_cql_env::make_query_state (1 samples, 0.02%)</title><rect x="81.5" y="1925" width="0.2" height="15.0" fill="rgb(225,32,49)" rx="2" ry="2" />
<text  x="84.49" y="1935.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value_view, std::allocator&lt;cql3::raw_value_view&gt; &gt;::_M_range_check (1 samples, 0.02%)</title><rect x="894.8" y="1701" width="0.3" height="15.0" fill="rgb(236,160,22)" rx="2" ry="2" />
<text  x="897.83" y="1711.5" ></text>
</g>
<g >
<title>service::storage_service::replicate_to_all_cores (1 samples, 0.02%)</title><rect x="20.3" y="1861" width="0.2" height="15.0" fill="rgb(230,4,30)" rx="2" ry="2" />
<text  x="23.31" y="1871.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_map&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::at&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt; &gt; (1 samples, 0.02%)</title><rect x="77.5" y="1829" width="0.2" height="15.0" fill="rgb(234,163,19)" rx="2" ry="2" />
<text  x="80.46" y="1839.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (1 samples, 0.02%)</title><rect x="486.7" y="1765" width="0.2" height="15.0" fill="rgb(230,167,38)" rx="2" ry="2" />
<text  x="489.71" y="1775.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (25 samples, 0.47%)</title><rect x="130.4" y="1845" width="5.6" height="15.0" fill="rgb(212,33,11)" rx="2" ry="2" />
<text  x="133.35" y="1855.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="848.7" y="1669" width="0.2" height="15.0" fill="rgb(205,222,41)" rx="2" ry="2" />
<text  x="851.66" y="1679.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (2 samples, 0.04%)</title><rect x="708.1" y="1845" width="0.5" height="15.0" fill="rgb(222,19,3)" rx="2" ry="2" />
<text  x="711.14" y="1855.5" ></text>
</g>
<g >
<title>service::storage_service::join_token_ring (1 samples, 0.02%)</title><rect x="20.3" y="1893" width="0.2" height="15.0" fill="rgb(243,166,47)" rx="2" ry="2" />
<text  x="23.31" y="1903.5" ></text>
</g>
<g >
<title>std::_Bind_front&lt;bool  (1 samples, 0.02%)</title><rect x="849.8" y="1781" width="0.2" height="15.0" fill="rgb(246,51,10)" rx="2" ry="2" />
<text  x="852.78" y="1791.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.04%)</title><rect x="327.6" y="1701" width="0.4" height="15.0" fill="rgb(224,68,24)" rx="2" ry="2" />
<text  x="330.58" y="1711.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (3 samples, 0.06%)</title><rect x="796.4" y="1669" width="0.7" height="15.0" fill="rgb(237,117,29)" rx="2" ry="2" />
<text  x="799.44" y="1679.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_psrstate (1 samples, 0.02%)</title><rect x="49.2" y="1749" width="0.2" height="15.0" fill="rgb(240,217,50)" rx="2" ry="2" />
<text  x="52.22" y="1759.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (12 samples, 0.23%)</title><rect x="1005.8" y="1653" width="2.7" height="15.0" fill="rgb(226,175,3)" rx="2" ry="2" />
<text  x="1008.77" y="1663.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="538.7" y="1701" width="0.2" height="15.0" fill="rgb(220,188,28)" rx="2" ry="2" />
<text  x="541.70" y="1711.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (1 samples, 0.02%)</title><rect x="107.9" y="1717" width="0.3" height="15.0" fill="rgb(214,46,23)" rx="2" ry="2" />
<text  x="110.94" y="1727.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (2 samples, 0.04%)</title><rect x="1156.8" y="1893" width="0.5" height="15.0" fill="rgb(232,118,22)" rx="2" ry="2" />
<text  x="1159.83" y="1903.5" ></text>
</g>
<g >
<title>seastar::do_until&lt;flush_reader::fill_buffer (2 samples, 0.04%)</title><rect x="1187.3" y="133" width="0.5" height="15.0" fill="rgb(242,5,4)" rx="2" ry="2" />
<text  x="1190.31" y="143.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (1 samples, 0.02%)</title><rect x="18.5" y="1989" width="0.2" height="15.0" fill="rgb(243,82,32)" rx="2" ry="2" />
<text  x="21.52" y="1999.5" ></text>
</g>
<g >
<title>std::apply&lt;service::client_state::has_column_family_access (168 samples, 3.19%)</title><rect x="768.9" y="1813" width="37.6" height="15.0" fill="rgb(215,204,44)" rx="2" ry="2" />
<text  x="771.88" y="1823.5" >std..</text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;void&gt;, service::storage_proxy*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt;, db::consistency_level, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, tracing::trace_state_ptr, service_permit, bool, seastar::lw_shared_ptr&lt;cdc::operation_result_tracker&gt; &gt;::do_flush (36 samples, 0.68%)</title><rect x="1122.1" y="1909" width="8.1" height="15.0" fill="rgb(232,41,0)" rx="2" ry="2" />
<text  x="1125.09" y="1919.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::fill_buffer (1 samples, 0.02%)</title><rect x="1187.5" y="85" width="0.3" height="15.0" fill="rgb(208,145,9)" rx="2" ry="2" />
<text  x="1190.53" y="95.5" ></text>
</g>
<g >
<title>antlr3::IntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::get_super (1 samples, 0.02%)</title><rect x="64.5" y="1637" width="0.2" height="15.0" fill="rgb(243,212,47)" rx="2" ry="2" />
<text  x="67.46" y="1647.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (2 samples, 0.04%)</title><rect x="46.5" y="1733" width="0.5" height="15.0" fill="rgb(249,24,38)" rx="2" ry="2" />
<text  x="49.53" y="1743.5" ></text>
</g>
<g >
<title>dht::shard_of (2 samples, 0.04%)</title><rect x="991.9" y="1701" width="0.4" height="15.0" fill="rgb(233,155,17)" rx="2" ry="2" />
<text  x="994.88" y="1711.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="328.5" y="1717" width="0.2" height="15.0" fill="rgb(212,146,18)" rx="2" ry="2" />
<text  x="331.48" y="1727.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, fragmented_temporary_buffer::view, managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="894.6" y="1701" width="0.2" height="15.0" fill="rgb(222,22,25)" rx="2" ry="2" />
<text  x="897.61" y="1711.5" ></text>
</g>
<g >
<title>allocation_strategy::construct&lt;bplus::node&lt;long, intrusive_array&lt;memtable_entry&gt;, dht::raw_token_less_comparator, 16ul,  (2 samples, 0.04%)</title><rect x="1117.4" y="1573" width="0.4" height="15.0" fill="rgb(216,135,5)" rx="2" ry="2" />
<text  x="1120.38" y="1583.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.06%)</title><rect x="896.0" y="1733" width="0.6" height="15.0" fill="rgb(220,11,45)" rx="2" ry="2" />
<text  x="898.95" y="1743.5" ></text>
</g>
<g >
<title>antlr3::IntStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::consume (1 samples, 0.02%)</title><rect x="40.0" y="1653" width="0.3" height="15.0" fill="rgb(216,125,0)" rx="2" ry="2" />
<text  x="43.03" y="1663.5" ></text>
</g>
<g >
<title>fmt::v7::detail::iterator_buffer&lt;seastar::internal::log_buf::inserter_iterator, char, fmt::v7::detail::buffer_traits&gt;::flush (1 samples, 0.02%)</title><rect x="688.0" y="1701" width="0.2" height="15.0" fill="rgb(232,59,8)" rx="2" ry="2" />
<text  x="690.97" y="1711.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::digest_read_result&gt;::clear (2 samples, 0.04%)</title><rect x="690.9" y="1909" width="0.4" height="15.0" fill="rgb(217,50,44)" rx="2" ry="2" />
<text  x="693.88" y="1919.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (2 samples, 0.04%)</title><rect x="492.8" y="1701" width="0.4" height="15.0" fill="rgb(238,193,5)" rx="2" ry="2" />
<text  x="495.76" y="1711.5" ></text>
</g>
<g >
<title>non-virtual thunk to cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::~single_column_primary_key_restrictions (1 samples, 0.02%)</title><rect x="646.5" y="1861" width="0.2" height="15.0" fill="rgb(253,87,18)" rx="2" ry="2" />
<text  x="649.51" y="1871.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;*, std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt; &gt;::operator* (1 samples, 0.02%)</title><rect x="52.6" y="1733" width="0.2" height="15.0" fill="rgb(229,144,29)" rx="2" ry="2" />
<text  x="55.58" y="1743.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_pausable_in_thread&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;sstables::sstable_writer&gt; &gt;, flat_mutation_reader::no_filter&gt; (1 samples, 0.02%)</title><rect x="1189.1" y="53" width="0.2" height="15.0" fill="rgb(234,171,31)" rx="2" ry="2" />
<text  x="1192.10" y="63.5" ></text>
</g>
<g >
<title>antlr3::Lexer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::Lexer (1 samples, 0.02%)</title><rect x="23.7" y="1845" width="0.2" height="15.0" fill="rgb(207,112,42)" rx="2" ry="2" />
<text  x="26.67" y="1855.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (14 samples, 0.27%)</title><rect x="1186.2" y="1445" width="3.1" height="15.0" fill="rgb(247,145,25)" rx="2" ry="2" />
<text  x="1189.19" y="1455.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value, std::allocator&lt;cql3::raw_value&gt; &gt;::~vector (3 samples, 0.06%)</title><rect x="673.8" y="1877" width="0.7" height="15.0" fill="rgb(245,70,49)" rx="2" ry="2" />
<text  x="676.85" y="1887.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (1 samples, 0.02%)</title><rect x="57.7" y="1685" width="0.3" height="15.0" fill="rgb(241,116,48)" rx="2" ry="2" />
<text  x="60.74" y="1695.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (2 samples, 0.04%)</title><rect x="44.5" y="1685" width="0.5" height="15.0" fill="rgb(227,85,3)" rx="2" ry="2" />
<text  x="47.51" y="1695.5" ></text>
</g>
<g >
<title>dht::murmur3_partitioner::get_token (1 samples, 0.02%)</title><rect x="851.1" y="1765" width="0.3" height="15.0" fill="rgb(211,229,44)" rx="2" ry="2" />
<text  x="854.13" y="1775.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (31 samples, 0.59%)</title><rect x="1115.1" y="1845" width="7.0" height="15.0" fill="rgb(219,63,23)" rx="2" ry="2" />
<text  x="1118.14" y="1855.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (16 samples, 0.30%)</title><rect x="379.4" y="1589" width="3.5" height="15.0" fill="rgb(222,170,54)" rx="2" ry="2" />
<text  x="382.35" y="1599.5" ></text>
</g>
<g >
<title>mutation_fragment::consume&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (4 samples, 0.08%)</title><rect x="686.8" y="1765" width="0.9" height="15.0" fill="rgb(218,69,43)" rx="2" ry="2" />
<text  x="689.85" y="1775.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="444.1" y="1669" width="0.2" height="15.0" fill="rgb(237,108,33)" rx="2" ry="2" />
<text  x="447.12" y="1679.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (14 samples, 0.27%)</title><rect x="1186.2" y="1749" width="3.1" height="15.0" fill="rgb(230,197,44)" rx="2" ry="2" />
<text  x="1189.19" y="1759.5" ></text>
</g>
<g >
<title>lister::scan_dir (1 samples, 0.02%)</title><rect x="688.4" y="1909" width="0.2" height="15.0" fill="rgb(243,208,33)" rx="2" ry="2" />
<text  x="691.42" y="1919.5" ></text>
</g>
<g >
<title>std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt;::_M_check_len (1 samples, 0.02%)</title><rect x="288.4" y="1605" width="0.2" height="15.0" fill="rgb(219,148,16)" rx="2" ry="2" />
<text  x="291.36" y="1615.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (4 samples, 0.08%)</title><rect x="279.2" y="1605" width="0.9" height="15.0" fill="rgb(228,58,30)" rx="2" ry="2" />
<text  x="282.17" y="1615.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::push_mutation_fragment&lt;mutation_fragment&gt; (1 samples, 0.02%)</title><rect x="142.9" y="1749" width="0.2" height="15.0" fill="rgb(206,129,7)" rx="2" ry="2" />
<text  x="145.90" y="1759.5" ></text>
</g>
<g >
<title>bound_view::tri_compare::operator (3 samples, 0.06%)</title><rect x="853.1" y="1637" width="0.7" height="15.0" fill="rgb(246,159,23)" rx="2" ry="2" />
<text  x="856.15" y="1647.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (2 samples, 0.04%)</title><rect x="757.7" y="1765" width="0.4" height="15.0" fill="rgb(217,134,14)" rx="2" ry="2" />
<text  x="760.67" y="1775.5" ></text>
</g>
<g >
<title>std::tuple&lt;cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::tuple (1 samples, 0.02%)</title><rect x="62.2" y="1653" width="0.2" height="15.0" fill="rgb(214,31,26)" rx="2" ry="2" />
<text  x="65.22" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;unsigned long, std::pair&lt;unsigned long const, unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::operator[] (1 samples, 0.02%)</title><rect x="1115.4" y="1653" width="0.2" height="15.0" fill="rgb(246,115,35)" rx="2" ry="2" />
<text  x="1118.37" y="1663.5" ></text>
</g>
<g >
<title>std::__optional_hash_call_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, true&gt;::operator (3 samples, 0.06%)</title><rect x="747.4" y="1733" width="0.6" height="15.0" fill="rgb(240,122,20)" rx="2" ry="2" />
<text  x="750.36" y="1743.5" ></text>
</g>
<g >
<title>mutation_reader_merger::close (68 samples, 1.29%)</title><rect x="571.0" y="1797" width="15.2" height="15.0" fill="rgb(244,74,30)" rx="2" ry="2" />
<text  x="573.98" y="1807.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (2 samples, 0.04%)</title><rect x="441.0" y="1637" width="0.4" height="15.0" fill="rgb(218,229,1)" rx="2" ry="2" />
<text  x="443.99" y="1647.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.02%)</title><rect x="60.7" y="1573" width="0.2" height="15.0" fill="rgb(231,134,29)" rx="2" ry="2" />
<text  x="63.65" y="1583.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;std::function&lt;std::function&lt;partition_presence_checker_result  (3 samples, 0.06%)</title><rect x="631.5" y="1829" width="0.7" height="15.0" fill="rgb(221,4,49)" rx="2" ry="2" />
<text  x="634.49" y="1839.5" ></text>
</g>
<g >
<title>seastar::deferred_action&lt;table::query (6 samples, 0.11%)</title><rect x="136.2" y="1877" width="1.3" height="15.0" fill="rgb(215,119,25)" rx="2" ry="2" />
<text  x="139.18" y="1887.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_live_sorted_endpoints (1 samples, 0.02%)</title><rect x="1030.0" y="1781" width="0.2" height="15.0" fill="rgb(223,187,17)" rx="2" ry="2" />
<text  x="1032.98" y="1791.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;1ul, std::default_delete&lt;cql3::expr::expression::impl&gt;&gt; (1 samples, 0.02%)</title><rect x="54.4" y="1637" width="0.2" height="15.0" fill="rgb(212,17,27)" rx="2" ry="2" />
<text  x="57.38" y="1647.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (1 samples, 0.02%)</title><rect x="675.2" y="1909" width="0.2" height="15.0" fill="rgb(230,206,43)" rx="2" ry="2" />
<text  x="678.19" y="1919.5" ></text>
</g>
<g >
<title>__tls_init (1 samples, 0.02%)</title><rect x="548.1" y="1717" width="0.2" height="15.0" fill="rgb(213,47,30)" rx="2" ry="2" />
<text  x="551.12" y="1727.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.04%)</title><rect x="44.5" y="1701" width="0.5" height="15.0" fill="rgb(248,153,9)" rx="2" ry="2" />
<text  x="47.51" y="1711.5" ></text>
</g>
<g >
<title>cql3::expr::(anonymous namespace)::explode_conjunction (2 samples, 0.04%)</title><rect x="74.3" y="1717" width="0.5" height="15.0" fill="rgb(229,91,42)" rx="2" ry="2" />
<text  x="77.32" y="1727.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector (1 samples, 0.02%)</title><rect x="1076.6" y="1765" width="0.2" height="15.0" fill="rgb(250,28,42)" rx="2" ry="2" />
<text  x="1079.59" y="1775.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (1 samples, 0.02%)</title><rect x="458.7" y="1829" width="0.2" height="15.0" fill="rgb(233,78,49)" rx="2" ry="2" />
<text  x="461.69" y="1839.5" ></text>
</g>
<g >
<title>managed_bytes::free_chain (1 samples, 0.02%)</title><rect x="1129.9" y="1621" width="0.3" height="15.0" fill="rgb(252,137,5)" rx="2" ry="2" />
<text  x="1132.94" y="1631.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (4 samples, 0.08%)</title><rect x="1155.3" y="1909" width="0.9" height="15.0" fill="rgb(254,1,29)" rx="2" ry="2" />
<text  x="1158.26" y="1919.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::consume_with&lt;row::apply_monotonically (1 samples, 0.02%)</title><rect x="19.4" y="1925" width="0.2" height="15.0" fill="rgb(246,221,19)" rx="2" ry="2" />
<text  x="22.41" y="1935.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;std::pair&lt;seastar::shared_ptr&lt;service::abstract_read_executor&gt;, nonwrapping_interval&lt;dht::token&gt; &gt;, 1ul&gt;::emplace_back&lt;seastar::shared_ptr&lt;service::abstract_read_executor&gt;&amp;, nonwrapping_interval&lt;dht::token&gt; &gt; (1 samples, 0.02%)</title><rect x="1079.1" y="1781" width="0.2" height="15.0" fill="rgb(251,32,38)" rx="2" ry="2" />
<text  x="1082.06" y="1791.5" ></text>
</g>
<g >
<title>db::schema_tables::create_table_from_mutations (2 samples, 0.04%)</title><rect x="108.8" y="1829" width="0.5" height="15.0" fill="rgb(209,118,2)" rx="2" ry="2" />
<text  x="111.84" y="1839.5" ></text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;void&gt;, database*, seastar::lw_shared_ptr&lt;schema const&gt;, frozen_mutation const&amp;, tracing::trace_state_ptr, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, seastar::bool_class&lt;db::force_sync_tag&gt; &gt;::operator (1 samples, 0.02%)</title><rect x="1124.1" y="1573" width="0.2" height="15.0" fill="rgb(246,54,26)" rx="2" ry="2" />
<text  x="1127.11" y="1583.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::~small_vector (5 samples, 0.09%)</title><rect x="593.6" y="1781" width="1.1" height="15.0" fill="rgb(238,149,23)" rx="2" ry="2" />
<text  x="596.61" y="1791.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.29] (1 samples, 0.02%)</title><rect x="847.8" y="1829" width="0.2" height="15.0" fill="rgb(245,207,41)" rx="2" ry="2" />
<text  x="850.77" y="1839.5" ></text>
</g>
<g >
<title>sstables::compact_sstables (1 samples, 0.02%)</title><rect x="1131.3" y="1877" width="0.2" height="15.0" fill="rgb(242,93,20)" rx="2" ry="2" />
<text  x="1134.28" y="1887.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="604.4" y="1797" width="0.2" height="15.0" fill="rgb(230,156,37)" rx="2" ry="2" />
<text  x="607.37" y="1807.5" ></text>
</g>
<g >
<title>utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (5 samples, 0.09%)</title><rect x="783.2" y="1573" width="1.1" height="15.0" fill="rgb(247,32,15)" rx="2" ry="2" />
<text  x="786.22" y="1583.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::pop_back (1 samples, 0.02%)</title><rect x="53.7" y="1701" width="0.2" height="15.0" fill="rgb(212,63,40)" rx="2" ry="2" />
<text  x="56.70" y="1711.5" ></text>
</g>
<g >
<title>global_schema_ptr::global_schema_ptr (1 samples, 0.02%)</title><rect x="107.0" y="1845" width="0.3" height="15.0" fill="rgb(244,188,26)" rx="2" ry="2" />
<text  x="110.04" y="1855.5" ></text>
</g>
<g >
<title>std::optional&lt;mutation_querier&gt;::emplace&lt;mutation_querier&gt; (1 samples, 0.02%)</title><rect x="349.1" y="1621" width="0.2" height="15.0" fill="rgb(252,19,3)" rx="2" ry="2" />
<text  x="352.10" y="1631.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (2 samples, 0.04%)</title><rect x="853.8" y="1669" width="0.5" height="15.0" fill="rgb(212,114,0)" rx="2" ry="2" />
<text  x="856.82" y="1679.5" ></text>
</g>
<g >
<title>seastar::repeat&lt;flat_mutation_reader::impl::consume_pausable&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (5 samples, 0.09%)</title><rect x="686.8" y="1797" width="1.2" height="15.0" fill="rgb(212,84,40)" rx="2" ry="2" />
<text  x="689.85" y="1807.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::fill_buffer (1 samples, 0.02%)</title><rect x="1186.4" y="133" width="0.2" height="15.0" fill="rgb(214,160,29)" rx="2" ry="2" />
<text  x="1189.41" y="143.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (3 samples, 0.06%)</title><rect x="198.9" y="1685" width="0.7" height="15.0" fill="rgb(232,34,3)" rx="2" ry="2" />
<text  x="201.93" y="1695.5" ></text>
</g>
<g >
<title>allocation_strategy::alloc&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::leaf_node&gt; (5 samples, 0.09%)</title><rect x="243.1" y="1525" width="1.1" height="15.0" fill="rgb(236,226,17)" rx="2" ry="2" />
<text  x="246.09" y="1535.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (2 samples, 0.04%)</title><rect x="1027.1" y="1637" width="0.4" height="15.0" fill="rgb(242,131,37)" rx="2" ry="2" />
<text  x="1030.06" y="1647.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::schedule&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (4 samples, 0.08%)</title><rect x="821.1" y="1813" width="0.9" height="15.0" fill="rgb(243,124,22)" rx="2" ry="2" />
<text  x="824.10" y="1823.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.04%)</title><rect x="590.3" y="1781" width="0.4" height="15.0" fill="rgb(221,174,46)" rx="2" ry="2" />
<text  x="593.25" y="1791.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_next (2 samples, 0.04%)</title><rect x="302.9" y="1749" width="0.5" height="15.0" fill="rgb(224,70,15)" rx="2" ry="2" />
<text  x="305.93" y="1759.5" ></text>
</g>
<g >
<title>single_node_cql_env::make_query_state (1 samples, 0.02%)</title><rect x="833.0" y="1877" width="0.2" height="15.0" fill="rgb(222,58,39)" rx="2" ry="2" />
<text  x="835.97" y="1887.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::allocator&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::__detail::_Identity, std::equal_to&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::hash&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;::_M_find_before_node (1 samples, 0.02%)</title><rect x="76.6" y="1749" width="0.2" height="15.0" fill="rgb(222,117,10)" rx="2" ry="2" />
<text  x="79.56" y="1759.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.06%)</title><rect x="567.4" y="1813" width="0.7" height="15.0" fill="rgb(206,32,36)" rx="2" ry="2" />
<text  x="570.39" y="1823.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (2 samples, 0.04%)</title><rect x="1098.6" y="1829" width="0.4" height="15.0" fill="rgb(235,206,10)" rx="2" ry="2" />
<text  x="1101.56" y="1839.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (35 samples, 0.66%)</title><rect x="1122.3" y="1861" width="7.9" height="15.0" fill="rgb(236,89,51)" rx="2" ry="2" />
<text  x="1125.32" y="1871.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::arm (5 samples, 0.09%)</title><rect x="980.4" y="1701" width="1.2" height="15.0" fill="rgb(214,108,42)" rx="2" ry="2" />
<text  x="983.45" y="1711.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (4 samples, 0.08%)</title><rect x="52.8" y="1717" width="0.9" height="15.0" fill="rgb(229,172,17)" rx="2" ry="2" />
<text  x="55.81" y="1727.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="529.7" y="1605" width="0.3" height="15.0" fill="rgb(205,43,7)" rx="2" ry="2" />
<text  x="532.74" y="1615.5" ></text>
</g>
<g >
<title>__dynamic_cast (3 samples, 0.06%)</title><rect x="869.5" y="1845" width="0.7" height="15.0" fill="rgb(226,0,35)" rx="2" ry="2" />
<text  x="872.51" y="1855.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.06%)</title><rect x="838.4" y="1861" width="0.6" height="15.0" fill="rgb(238,224,17)" rx="2" ry="2" />
<text  x="841.35" y="1871.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_initialize_map (22 samples, 0.42%)</title><rect x="562.5" y="1797" width="4.9" height="15.0" fill="rgb(254,189,4)" rx="2" ry="2" />
<text  x="565.46" y="1807.5" ></text>
</g>
<g >
<title>flush_reader::get_next_partition (1 samples, 0.02%)</title><rect x="1187.3" y="69" width="0.2" height="15.0" fill="rgb(217,213,54)" rx="2" ry="2" />
<text  x="1190.31" y="79.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::add_data (24 samples, 0.46%)</title><rect x="705.2" y="1877" width="5.4" height="15.0" fill="rgb(236,106,27)" rx="2" ry="2" />
<text  x="708.23" y="1887.5" ></text>
</g>
<g >
<title>seastar::logger::log&lt;seastar::lw_shared_ptr&lt;schema const&gt;&amp;&gt; (1 samples, 0.02%)</title><rect x="688.0" y="1765" width="0.2" height="15.0" fill="rgb(252,174,44)" rx="2" ry="2" />
<text  x="690.97" y="1775.5" ></text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (2 samples, 0.04%)</title><rect x="17.8" y="2037" width="0.5" height="15.0" fill="rgb(247,47,45)" rx="2" ry="2" />
<text  x="20.84" y="2047.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.04%)</title><rect x="206.1" y="1605" width="0.5" height="15.0" fill="rgb(238,18,26)" rx="2" ry="2" />
<text  x="209.11" y="1615.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="46.8" y="1717" width="0.2" height="15.0" fill="rgb(248,217,41)" rx="2" ry="2" />
<text  x="49.76" y="1727.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::_M_range_initialize&lt;nonwrapping_interval&lt;dht::ring_position&gt; const*&gt; (1 samples, 0.02%)</title><rect x="851.6" y="1765" width="0.2" height="15.0" fill="rgb(216,192,49)" rx="2" ry="2" />
<text  x="854.58" y="1775.5" ></text>
</g>
<g >
<title>std::construct_at&lt;mutation_fragment, schema const&amp;, reader_permit&amp;, partition_start&gt; (13 samples, 0.25%)</title><rect x="529.1" y="1653" width="2.9" height="15.0" fill="rgb(234,8,22)" rx="2" ry="2" />
<text  x="532.07" y="1663.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.06%)</title><rect x="619.4" y="1845" width="0.7" height="15.0" fill="rgb(252,132,3)" rx="2" ry="2" />
<text  x="622.39" y="1855.5" ></text>
</g>
<g >
<title>flat_mutation_reader::close (5 samples, 0.09%)</title><rect x="569.4" y="1845" width="1.1" height="15.0" fill="rgb(243,79,15)" rx="2" ry="2" />
<text  x="572.41" y="1855.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.02%)</title><rect x="105.5" y="1909" width="0.2" height="15.0" fill="rgb(238,17,42)" rx="2" ry="2" />
<text  x="108.48" y="1919.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::on_read_resolved (2 samples, 0.04%)</title><rect x="696.7" y="1877" width="0.5" height="15.0" fill="rgb(208,210,54)" rx="2" ry="2" />
<text  x="699.71" y="1887.5" ></text>
</g>
<g >
<title>utils::tuple_hash::hash_impl&lt;1ul, auth::resource_kind, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (1 samples, 0.02%)</title><rect x="806.3" y="1717" width="0.2" height="15.0" fill="rgb(219,99,11)" rx="2" ry="2" />
<text  x="809.30" y="1727.5" ></text>
</g>
<g >
<title>mutation_reader_merger::maybe_add_readers (29 samples, 0.55%)</title><rect x="469.4" y="1717" width="6.5" height="15.0" fill="rgb(231,90,9)" rx="2" ry="2" />
<text  x="472.45" y="1727.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::clear (3 samples, 0.06%)</title><rect x="321.8" y="1781" width="0.6" height="15.0" fill="rgb(247,208,15)" rx="2" ry="2" />
<text  x="324.75" y="1791.5" ></text>
</g>
<g >
<title>seastar::promise&lt;void&gt;::promise (1 samples, 0.02%)</title><rect x="1011.8" y="1605" width="0.2" height="15.0" fill="rgb(223,114,11)" rx="2" ry="2" />
<text  x="1014.82" y="1615.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (14 samples, 0.27%)</title><rect x="1186.2" y="1333" width="3.1" height="15.0" fill="rgb(229,85,41)" rx="2" ry="2" />
<text  x="1189.19" y="1343.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (2 samples, 0.04%)</title><rect x="1157.3" y="1893" width="0.4" height="15.0" fill="rgb(221,1,10)" rx="2" ry="2" />
<text  x="1160.28" y="1903.5" ></text>
</g>
<g >
<title>mutation_partition::clustered_row (1 samples, 0.02%)</title><rect x="106.8" y="1877" width="0.2" height="15.0" fill="rgb(236,18,21)" rx="2" ry="2" />
<text  x="109.82" y="1887.5" ></text>
</g>
<g >
<title>utils::murmur_hash::hash3_x64_128&lt;legacy_compound_view&lt;compound_type&lt; (1 samples, 0.02%)</title><rect x="1123.4" y="1573" width="0.3" height="15.0" fill="rgb(246,176,0)" rx="2" ry="2" />
<text  x="1126.44" y="1583.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (2 samples, 0.04%)</title><rect x="396.8" y="1573" width="0.5" height="15.0" fill="rgb(229,147,13)" rx="2" ry="2" />
<text  x="399.83" y="1583.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::~RecognizerSharedState (1 samples, 0.02%)</title><rect x="24.8" y="1797" width="0.2" height="15.0" fill="rgb(219,45,33)" rx="2" ry="2" />
<text  x="27.79" y="1807.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.02%)</title><rect x="618.9" y="1861" width="0.3" height="15.0" fill="rgb(249,96,12)" rx="2" ry="2" />
<text  x="621.94" y="1871.5" ></text>
</g>
<g >
<title>seastar::promise&lt;void&gt;::promise (3 samples, 0.06%)</title><rect x="135.1" y="1813" width="0.6" height="15.0" fill="rgb(209,63,52)" rx="2" ry="2" />
<text  x="138.06" y="1823.5" ></text>
</g>
<g >
<title>make_flat_multi_range_reader (1 samples, 0.02%)</title><rect x="956.5" y="1605" width="0.2" height="15.0" fill="rgb(206,17,17)" rx="2" ry="2" />
<text  x="959.47" y="1615.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="798.5" y="1669" width="0.2" height="15.0" fill="rgb(230,187,9)" rx="2" ry="2" />
<text  x="801.46" y="1679.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::take (2 samples, 0.04%)</title><rect x="445.0" y="1685" width="0.5" height="15.0" fill="rgb(221,10,42)" rx="2" ry="2" />
<text  x="448.02" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Uninitialized&lt;cql3::expr::constant, false&gt;::_Uninitialized&lt;cql3::expr::constant&gt; (1 samples, 0.02%)</title><rect x="848.9" y="1701" width="0.2" height="15.0" fill="rgb(233,16,53)" rx="2" ry="2" />
<text  x="851.89" y="1711.5" ></text>
</g>
<g >
<title>TLS init function for bound_view::_empty_prefix (2 samples, 0.04%)</title><rect x="265.1" y="1525" width="0.4" height="15.0" fill="rgb(241,49,47)" rx="2" ry="2" />
<text  x="268.05" y="1535.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="27.7" y="1573" width="0.2" height="15.0" fill="rgb(233,216,38)" rx="2" ry="2" />
<text  x="30.71" y="1583.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (1 samples, 0.02%)</title><rect x="1075.9" y="1717" width="0.2" height="15.0" fill="rgb(228,75,34)" rx="2" ry="2" />
<text  x="1078.92" y="1727.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (14 samples, 0.27%)</title><rect x="1186.2" y="1861" width="3.1" height="15.0" fill="rgb(249,224,12)" rx="2" ry="2" />
<text  x="1189.19" y="1871.5" ></text>
</g>
<g >
<title>seastar::reactor::del_timer (3 samples, 0.06%)</title><rect x="709.0" y="1829" width="0.7" height="15.0" fill="rgb(249,100,42)" rx="2" ry="2" />
<text  x="712.04" y="1839.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="53.9" y="1701" width="0.3" height="15.0" fill="rgb(236,170,29)" rx="2" ry="2" />
<text  x="56.93" y="1711.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::unique_ptr&lt;(anonymous namespace)::shard_reader, std::default_delete&lt;(anonymous namespace)::shard_reader&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;(anonymous namespace)::shard_reader, std::default_delete&lt;(anonymous namespace)::shard_reader&gt; &gt; &gt; &gt;::_M_allocate (1 samples, 0.02%)</title><rect x="956.5" y="1509" width="0.2" height="15.0" fill="rgb(214,118,33)" rx="2" ry="2" />
<text  x="959.47" y="1519.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (3 samples, 0.06%)</title><rect x="934.7" y="1749" width="0.7" height="15.0" fill="rgb(210,19,21)" rx="2" ry="2" />
<text  x="937.73" y="1759.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (2 samples, 0.04%)</title><rect x="51.7" y="1717" width="0.4" height="15.0" fill="rgb(243,128,9)" rx="2" ry="2" />
<text  x="54.69" y="1727.5" ></text>
</g>
<g >
<title>antlr3::DefaultAllocPolicy::StackType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::pop (1 samples, 0.02%)</title><rect x="53.7" y="1717" width="0.2" height="15.0" fill="rgb(211,119,30)" rx="2" ry="2" />
<text  x="56.70" y="1727.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consumer_adapter&lt;sstables::sstable_writer&gt;::consume (1 samples, 0.02%)</title><rect x="1186.2" y="197" width="0.2" height="15.0" fill="rgb(223,85,33)" rx="2" ry="2" />
<text  x="1189.19" y="207.5" ></text>
</g>
<g >
<title>sstables::compaction::run&lt;noop_compacted_fragments_consumer&gt; (1 samples, 0.02%)</title><rect x="1131.3" y="1765" width="0.2" height="15.0" fill="rgb(253,79,26)" rx="2" ry="2" />
<text  x="1134.28" y="1775.5" ></text>
</g>
<g >
<title>database::shard_of (1 samples, 0.02%)</title><rect x="1123.4" y="1605" width="0.3" height="15.0" fill="rgb(219,127,14)" rx="2" ry="2" />
<text  x="1126.44" y="1615.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_pausable_in_thread&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;sstables::sstable_writer&gt; &gt;, flat_mutation_reader::no_filter&gt; (1 samples, 0.02%)</title><rect x="1186.2" y="229" width="0.2" height="15.0" fill="rgb(218,39,9)" rx="2" ry="2" />
<text  x="1189.19" y="239.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.04%)</title><rect x="113.5" y="1893" width="0.5" height="15.0" fill="rgb(215,157,1)" rx="2" ry="2" />
<text  x="116.54" y="1903.5" ></text>
</g>
<g >
<title>seastar::memory::stats (7 samples, 0.13%)</title><rect x="515.4" y="1733" width="1.6" height="15.0" fill="rgb(222,142,2)" rx="2" ry="2" />
<text  x="518.39" y="1743.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (9 samples, 0.17%)</title><rect x="514.9" y="1749" width="2.1" height="15.0" fill="rgb(246,1,14)" rx="2" ry="2" />
<text  x="517.95" y="1759.5" ></text>
</g>
<g >
<title>reader_permit::mark_unused (1 samples, 0.02%)</title><rect x="127.7" y="1877" width="0.2" height="15.0" fill="rgb(226,121,30)" rx="2" ry="2" />
<text  x="130.66" y="1887.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::clear (1 samples, 0.02%)</title><rect x="644.5" y="1909" width="0.2" height="15.0" fill="rgb(212,83,38)" rx="2" ry="2" />
<text  x="647.49" y="1919.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.02%)</title><rect x="49.7" y="1669" width="0.2" height="15.0" fill="rgb(210,155,47)" rx="2" ry="2" />
<text  x="52.67" y="1679.5" ></text>
</g>
<g >
<title>allocation_strategy::destroy&lt;partition_version&gt; (1 samples, 0.02%)</title><rect x="83.5" y="1925" width="0.2" height="15.0" fill="rgb(232,74,35)" rx="2" ry="2" />
<text  x="86.51" y="1935.5" ></text>
</g>
<g >
<title>utils::flush_queue&lt;db::replay_position, std::less&lt;db::replay_position&gt;, seastar::lowres_clock&gt;::run_with_ordered_post_op&lt;db::commitlog::segment::cycle (1 samples, 0.02%)</title><rect x="1121.9" y="1653" width="0.2" height="15.0" fill="rgb(242,20,35)" rx="2" ry="2" />
<text  x="1124.87" y="1663.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.02%)</title><rect x="51.7" y="1557" width="0.2" height="15.0" fill="rgb(206,26,52)" rx="2" ry="2" />
<text  x="54.69" y="1567.5" ></text>
</g>
<g >
<title>antlr3::CyclicDFA&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, cql3_parser::CqlLexer&gt;::predict&lt;cql3_parser::CqlLexerCyclicDFA44&gt; (8 samples, 0.15%)</title><rect x="40.3" y="1669" width="1.7" height="15.0" fill="rgb(224,191,51)" rx="2" ry="2" />
<text  x="43.26" y="1679.5" ></text>
</g>
<g >
<title>write_fragmented&lt;managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="895.1" y="1701" width="0.2" height="15.0" fill="rgb(241,183,48)" rx="2" ry="2" />
<text  x="898.06" y="1711.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::on_permit_destroyed (3 samples, 0.06%)</title><rect x="125.0" y="1845" width="0.6" height="15.0" fill="rgb(208,101,44)" rx="2" ry="2" />
<text  x="127.97" y="1855.5" ></text>
</g>
<g >
<title>absl::hash_internal::HashState::combine_contiguous (1 samples, 0.02%)</title><rect x="831.6" y="1765" width="0.3" height="15.0" fill="rgb(236,186,23)" rx="2" ry="2" />
<text  x="834.63" y="1775.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::digest_read_result&gt;::schedule&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::execute (1 samples, 0.02%)</title><rect x="107.3" y="1781" width="0.2" height="15.0" fill="rgb(243,202,22)" rx="2" ry="2" />
<text  x="110.27" y="1791.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::allocate_large (1 samples, 0.02%)</title><rect x="688.6" y="1829" width="0.3" height="15.0" fill="rgb(222,171,42)" rx="2" ry="2" />
<text  x="691.64" y="1839.5" ></text>
</g>
<g >
<title>cql3::selection::simple_selection::is_aggregate (1 samples, 0.02%)</title><rect x="864.8" y="1861" width="0.2" height="15.0" fill="rgb(229,6,47)" rx="2" ry="2" />
<text  x="867.80" y="1871.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;flat_mutation_reader  (428 samples, 8.13%)</title><rect x="460.9" y="1797" width="96.0" height="15.0" fill="rgb(241,140,18)" rx="2" ry="2" />
<text  x="463.93" y="1807.5" >std::_Funct..</text>
</g>
<g >
<title>cql3_parser::CqlParser::whereClause (1 samples, 0.02%)</title><rect x="66.5" y="1797" width="0.2" height="15.0" fill="rgb(217,72,50)" rx="2" ry="2" />
<text  x="69.48" y="1807.5" ></text>
</g>
<g >
<title>ser::writer_of_qr_clustered_row&lt;bytes_ostream&gt;::skip_key (2 samples, 0.04%)</title><rect x="363.9" y="1605" width="0.4" height="15.0" fill="rgb(207,146,17)" rx="2" ry="2" />
<text  x="366.89" y="1615.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::push_mutation_fragment&lt;mutation_fragment&gt; (15 samples, 0.28%)</title><rect x="203.6" y="1653" width="3.4" height="15.0" fill="rgb(206,63,44)" rx="2" ry="2" />
<text  x="206.64" y="1663.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::query_state&gt;::~shared_ptr (3 samples, 0.06%)</title><rect x="823.1" y="1861" width="0.7" height="15.0" fill="rgb(220,42,41)" rx="2" ry="2" />
<text  x="826.11" y="1871.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.02%)</title><rect x="1022.1" y="1701" width="0.3" height="15.0" fill="rgb(229,98,30)" rx="2" ry="2" />
<text  x="1025.13" y="1711.5" ></text>
</g>
<g >
<title>mutation_partition::apply (1 samples, 0.02%)</title><rect x="107.0" y="1701" width="0.3" height="15.0" fill="rgb(217,70,26)" rx="2" ry="2" />
<text  x="110.04" y="1711.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="68.9" y="1861" width="0.3" height="15.0" fill="rgb(217,116,32)" rx="2" ry="2" />
<text  x="71.94" y="1871.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.06%)</title><rect x="653.5" y="1877" width="0.6" height="15.0" fill="rgb(232,211,42)" rx="2" ry="2" />
<text  x="656.45" y="1887.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql3::restrictions::single_column_restrictions&gt;::~shared_ptr_count_for (1 samples, 0.02%)</title><rect x="646.5" y="1845" width="0.2" height="15.0" fill="rgb(211,85,32)" rx="2" ry="2" />
<text  x="649.51" y="1855.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.02%)</title><rect x="48.3" y="1573" width="0.2" height="15.0" fill="rgb(251,182,52)" rx="2" ry="2" />
<text  x="51.32" y="1583.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, fragmented_temporary_buffer::view, managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="899.1" y="1717" width="0.2" height="15.0" fill="rgb(210,176,49)" rx="2" ry="2" />
<text  x="902.09" y="1727.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume_in_thread&lt;sstables::sstable_writer&gt; (1 samples, 0.02%)</title><rect x="1189.1" y="101" width="0.2" height="15.0" fill="rgb(211,97,51)" rx="2" ry="2" />
<text  x="1192.10" y="111.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;service::storage_proxy_coordinator_query_result&gt;::set_value&lt;service::storage_proxy_coordinator_query_result&gt; (5 samples, 0.09%)</title><rect x="1139.6" y="1909" width="1.1" height="15.0" fill="rgb(205,46,25)" rx="2" ry="2" />
<text  x="1142.57" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (8 samples, 0.15%)</title><rect x="10.2" y="2037" width="1.8" height="15.0" fill="rgb(218,81,31)" rx="2" ry="2" />
<text  x="13.22" y="2047.5" ></text>
</g>
<g >
<title>__tls_init (2 samples, 0.04%)</title><rect x="523.9" y="1685" width="0.5" height="15.0" fill="rgb(239,11,24)" rx="2" ry="2" />
<text  x="526.91" y="1695.5" ></text>
</g>
<g >
<title>operator new (6 samples, 0.11%)</title><rect x="722.0" y="1845" width="1.4" height="15.0" fill="rgb(224,175,37)" rx="2" ry="2" />
<text  x="725.03" y="1855.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;cql3::expr::expression&gt;::new_allocator (1 samples, 0.02%)</title><rect x="58.0" y="1637" width="0.2" height="15.0" fill="rgb(206,147,45)" rx="2" ry="2" />
<text  x="60.96" y="1647.5" ></text>
</g>
<g >
<title>seastar::metrics::label::operator (1 samples, 0.02%)</title><rect x="109.3" y="1861" width="0.2" height="15.0" fill="rgb(207,163,22)" rx="2" ry="2" />
<text  x="112.29" y="1871.5" ></text>
</g>
<g >
<title>write_row&lt;ser::writer_of_deletable_row&lt;bytes_ostream&gt; &gt; (8 samples, 0.15%)</title><rect x="1126.3" y="1573" width="1.8" height="15.0" fill="rgb(225,180,8)" rx="2" ry="2" />
<text  x="1129.35" y="1583.5" ></text>
</g>
<g >
<title>table::query (3 samples, 0.06%)</title><rect x="1162.4" y="1925" width="0.7" height="15.0" fill="rgb(237,79,4)" rx="2" ry="2" />
<text  x="1165.43" y="1935.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::column_value&gt; (1 samples, 0.02%)</title><rect x="72.8" y="1781" width="0.2" height="15.0" fill="rgb(250,227,49)" rx="2" ry="2" />
<text  x="75.75" y="1791.5" ></text>
</g>
<g >
<title>range_tombstone_stream::get_next (1 samples, 0.02%)</title><rect x="847.1" y="1733" width="0.2" height="15.0" fill="rgb(215,200,22)" rx="2" ry="2" />
<text  x="850.09" y="1743.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.08%)</title><rect x="1017.2" y="1621" width="0.9" height="15.0" fill="rgb(236,104,24)" rx="2" ry="2" />
<text  x="1020.20" y="1631.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (2 samples, 0.04%)</title><rect x="63.3" y="1653" width="0.5" height="15.0" fill="rgb(219,26,11)" rx="2" ry="2" />
<text  x="66.34" y="1663.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::default_delete&lt;cql3::expr::expression::impl&gt;, true&gt;::_M_head (1 samples, 0.02%)</title><rect x="54.4" y="1621" width="0.2" height="15.0" fill="rgb(218,129,3)" rx="2" ry="2" />
<text  x="57.38" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (1 samples, 0.02%)</title><rect x="348.6" y="1605" width="0.3" height="15.0" fill="rgb(223,160,19)" rx="2" ry="2" />
<text  x="351.65" y="1615.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="305.4" y="1749" width="0.2" height="15.0" fill="rgb(209,19,31)" rx="2" ry="2" />
<text  x="308.39" y="1759.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (14 samples, 0.27%)</title><rect x="1186.2" y="549" width="3.1" height="15.0" fill="rgb(237,105,54)" rx="2" ry="2" />
<text  x="1189.19" y="559.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.06%)</title><rect x="653.5" y="1861" width="0.6" height="15.0" fill="rgb(239,172,22)" rx="2" ry="2" />
<text  x="656.45" y="1871.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_slice_or_needs_filtering (3 samples, 0.06%)</title><rect x="937.4" y="1813" width="0.7" height="15.0" fill="rgb(221,13,16)" rx="2" ry="2" />
<text  x="940.42" y="1823.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::with_permit (42 samples, 0.80%)</title><rect x="1008.7" y="1669" width="9.4" height="15.0" fill="rgb(233,225,29)" rx="2" ry="2" />
<text  x="1011.69" y="1679.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureIvE9then_implIZZN5query12consume_pageIL19emit_only_live_rows1E20query_result_builderEEDaR20flat_mutation_readerNS_13lw_shared_ptrI22compact_mutation_stateIXT_EL20compact_for_sstables0EEEERKNS3_15partition_sliceEOT0_mjNSt6chrono10time_pointI8gc_clockNSJ_8durationIlSt5ratioILl1ELl1EEEEEEENUlP17mutation_fragmentE_clESS_EUlDpOT_E_NS0_ISt5tupleIJSt8optionalI21clustering_key_prefixEEEEEEESH_OT_ (2 samples, 0.04%)</title><rect x="325.8" y="1797" width="0.4" height="15.0" fill="rgb(217,78,33)" rx="2" ry="2" />
<text  x="328.79" y="1807.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_slice_or_needs_filtering (1 samples, 0.02%)</title><rect x="650.3" y="1829" width="0.2" height="15.0" fill="rgb(231,197,18)" rx="2" ry="2" />
<text  x="653.32" y="1839.5" ></text>
</g>
<g >
<title>mutation_fragment::consume&lt;flat_mutation_reader::impl::consumer_adapter&lt;sstables::sstable_writer&gt; &gt; (1 samples, 0.02%)</title><rect x="1188.9" y="69" width="0.2" height="15.0" fill="rgb(221,93,33)" rx="2" ry="2" />
<text  x="1191.88" y="79.5" ></text>
</g>
<g >
<title>mutation_partition::apply_weak (1 samples, 0.02%)</title><rect x="107.0" y="1685" width="0.3" height="15.0" fill="rgb(227,9,4)" rx="2" ry="2" />
<text  x="110.04" y="1695.5" ></text>
</g>
<g >
<title>TLS init function for cql3::query_options::specific_options::DEFAULT (2 samples, 0.04%)</title><rect x="725.8" y="1877" width="0.5" height="15.0" fill="rgb(208,101,8)" rx="2" ry="2" />
<text  x="728.84" y="1887.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::do_flush (1,150 samples, 21.84%)</title><rect x="857.2" y="1909" width="257.7" height="15.0" fill="rgb(221,198,1)" rx="2" ry="2" />
<text  x="860.18" y="1919.5" >seastar::concrete_execution_stage&lt;..</text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_range_tombstone (1 samples, 0.02%)</title><rect x="847.1" y="1781" width="0.2" height="15.0" fill="rgb(209,145,23)" rx="2" ry="2" />
<text  x="850.09" y="1791.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (1 samples, 0.02%)</title><rect x="1125.9" y="1557" width="0.2" height="15.0" fill="rgb(245,183,43)" rx="2" ry="2" />
<text  x="1128.90" y="1567.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_prepared (1 samples, 0.02%)</title><rect x="726.3" y="1877" width="0.2" height="15.0" fill="rgb(227,191,1)" rx="2" ry="2" />
<text  x="729.29" y="1887.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="56.4" y="1685" width="0.2" height="15.0" fill="rgb(245,226,20)" rx="2" ry="2" />
<text  x="59.39" y="1695.5" ></text>
</g>
<g >
<title>table::make_reader (418 samples, 7.94%)</title><rect x="463.2" y="1781" width="93.7" height="15.0" fill="rgb(247,152,19)" rx="2" ry="2" />
<text  x="466.17" y="1791.5" >table::make..</text>
</g>
<g >
<title>std::default_delete&lt;seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::entry&gt;::operator (1 samples, 0.02%)</title><rect x="135.7" y="1829" width="0.3" height="15.0" fill="rgb(253,57,28)" rx="2" ry="2" />
<text  x="138.73" y="1839.5" ></text>
</g>
<g >
<title>operator delete (6 samples, 0.11%)</title><rect x="319.1" y="1717" width="1.3" height="15.0" fill="rgb(224,34,43)" rx="2" ry="2" />
<text  x="322.06" y="1727.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.02%)</title><rect x="49.4" y="1573" width="0.3" height="15.0" fill="rgb(218,95,43)" rx="2" ry="2" />
<text  x="52.45" y="1583.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_pausable&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (500 samples, 9.50%)</title><rect x="332.5" y="1701" width="112.1" height="15.0" fill="rgb(236,32,12)" rx="2" ry="2" />
<text  x="335.51" y="1711.5" >flat_mutation..</text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.02%)</title><rect x="47.0" y="1605" width="0.2" height="15.0" fill="rgb(228,12,47)" rx="2" ry="2" />
<text  x="49.98" y="1615.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::statement_restrictions (1 samples, 0.02%)</title><rect x="71.6" y="1845" width="0.3" height="15.0" fill="rgb(243,33,33)" rx="2" ry="2" />
<text  x="74.63" y="1855.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (14 samples, 0.27%)</title><rect x="1186.2" y="2037" width="3.1" height="15.0" fill="rgb(206,131,3)" rx="2" ry="2" />
<text  x="1189.19" y="2047.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::allocate (2 samples, 0.04%)</title><rect x="206.1" y="1621" width="0.5" height="15.0" fill="rgb(233,115,1)" rx="2" ry="2" />
<text  x="209.11" y="1631.5" ></text>
</g>
<g >
<title>service::client_state::get_timestamp (2 samples, 0.04%)</title><rect x="1113.6" y="1861" width="0.4" height="15.0" fill="rgb(233,125,15)" rx="2" ry="2" />
<text  x="1116.57" y="1871.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="208.6" y="1637" width="0.2" height="15.0" fill="rgb(226,81,38)" rx="2" ry="2" />
<text  x="211.57" y="1647.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (1 samples, 0.02%)</title><rect x="1118.1" y="1637" width="0.2" height="15.0" fill="rgb(209,11,2)" rx="2" ry="2" />
<text  x="1121.06" y="1647.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="857.0" y="1829" width="0.2" height="15.0" fill="rgb(245,41,33)" rx="2" ry="2" />
<text  x="859.96" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::_Move_ctor_base (2 samples, 0.04%)</title><rect x="344.2" y="1589" width="0.4" height="15.0" fill="rgb(221,69,48)" rx="2" ry="2" />
<text  x="347.17" y="1599.5" ></text>
</g>
<g >
<title>std::default_delete&lt;mutation_fragment::data&gt;::operator (2 samples, 0.04%)</title><rect x="441.4" y="1685" width="0.5" height="15.0" fill="rgb(211,75,31)" rx="2" ry="2" />
<text  x="444.43" y="1695.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;mutation_reader_merger::reader_and_last_fragment_kind*, mutation_reader_merger::prepare_next (73 samples, 1.39%)</title><rect x="180.3" y="1717" width="16.4" height="15.0" fill="rgb(219,40,32)" rx="2" ry="2" />
<text  x="183.33" y="1727.5" ></text>
</g>
<g >
<title>cql3::cf_name::operator= (1 samples, 0.02%)</title><rect x="47.9" y="1765" width="0.2" height="15.0" fill="rgb(220,53,26)" rx="2" ry="2" />
<text  x="50.88" y="1775.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_data_requests (55 samples, 1.04%)</title><rect x="701.9" y="1893" width="12.3" height="15.0" fill="rgb(218,2,53)" rx="2" ry="2" />
<text  x="704.86" y="1903.5" ></text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::EqualElement&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt;&amp;&gt; (3 samples, 0.06%)</title><rect x="759.5" y="1765" width="0.6" height="15.0" fill="rgb(210,193,18)" rx="2" ry="2" />
<text  x="762.46" y="1775.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::~guard (2 samples, 0.04%)</title><rect x="197.6" y="1701" width="0.4" height="15.0" fill="rgb(254,57,3)" rx="2" ry="2" />
<text  x="200.59" y="1711.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (14 samples, 0.27%)</title><rect x="1186.2" y="1893" width="3.1" height="15.0" fill="rgb(224,204,52)" rx="2" ry="2" />
<text  x="1189.19" y="1903.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.02%)</title><rect x="49.7" y="1621" width="0.2" height="15.0" fill="rgb(253,36,28)" rx="2" ry="2" />
<text  x="52.67" y="1631.5" ></text>
</g>
<g >
<title>mutation_partition::clear_gently (1 samples, 0.02%)</title><rect x="10.7" y="1925" width="0.2" height="15.0" fill="rgb(228,70,25)" rx="2" ry="2" />
<text  x="13.67" y="1935.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::on_new_range (27 samples, 0.51%)</title><rect x="203.2" y="1669" width="6.0" height="15.0" fill="rgb(237,19,24)" rx="2" ry="2" />
<text  x="206.19" y="1679.5" ></text>
</g>
<g >
<title>logalloc::region_impl::object_memory_size_in_allocator (1 samples, 0.02%)</title><rect x="19.6" y="1973" width="0.3" height="15.0" fill="rgb(236,227,20)" rx="2" ry="2" />
<text  x="22.64" y="1983.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (1 samples, 0.02%)</title><rect x="655.5" y="1861" width="0.2" height="15.0" fill="rgb(250,56,46)" rx="2" ry="2" />
<text  x="658.47" y="1871.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="671.8" y="1861" width="0.3" height="15.0" fill="rgb(245,89,43)" rx="2" ry="2" />
<text  x="674.83" y="1871.5" ></text>
</g>
<g >
<title>sstables::mc::writer::consume (1 samples, 0.02%)</title><rect x="1186.2" y="181" width="0.2" height="15.0" fill="rgb(210,192,23)" rx="2" ry="2" />
<text  x="1189.19" y="191.5" ></text>
</g>
<g >
<title>std::hash&lt;std::basic_string_view&lt;signed char, std::char_traits&lt;signed char&gt; &gt; &gt;::operator (7 samples, 0.13%)</title><rect x="748.5" y="1701" width="1.5" height="15.0" fill="rgb(236,28,15)" rx="2" ry="2" />
<text  x="751.48" y="1711.5" ></text>
</g>
<g >
<title>validation::validate_column_family (28 samples, 0.53%)</title><rect x="809.9" y="1813" width="6.3" height="15.0" fill="rgb(211,85,11)" rx="2" ry="2" />
<text  x="812.89" y="1823.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::iterator::operator* (1 samples, 0.02%)</title><rect x="762.8" y="1797" width="0.2" height="15.0" fill="rgb(217,102,19)" rx="2" ry="2" />
<text  x="765.82" y="1807.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_token (1 samples, 0.02%)</title><rect x="650.5" y="1829" width="0.3" height="15.0" fill="rgb(240,161,11)" rx="2" ry="2" />
<text  x="653.54" y="1839.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEE4$_44ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_45ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_43ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_46ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_47ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_48ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_49ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_50ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_51ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_52ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_53ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_54ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_55ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_56ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_57ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_58EERS4_IJNSF_11conjunctionENSF_15binary_operatorENSF_12column_valueENSF_5tokenENSF_21unresolved_identifierENSF_25column_mutation_attributeENSF_13function_callENSF_4castENSF_15field_selectionENSF_4nullENSF_13bind_variableENSF_16untyped_constantENSF_8constantENSF_17tuple_constructorENSF_22collection_constructorENSF_20usertype_constructorEEEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES16_S1O_ (115 samples, 2.18%)</title><rect x="876.2" y="1813" width="25.8" height="15.0" fill="rgb(231,56,19)" rx="2" ry="2" />
<text  x="879.23" y="1823.5" >_..</text>
</g>
<g >
<title>free (2 samples, 0.04%)</title><rect x="77.9" y="1797" width="0.5" height="15.0" fill="rgb(212,13,54)" rx="2" ry="2" />
<text  x="80.91" y="1807.5" ></text>
</g>
<g >
<title>range_tombstone_list::~range_tombstone_list (2 samples, 0.04%)</title><rect x="583.5" y="1733" width="0.5" height="15.0" fill="rgb(236,73,4)" rx="2" ry="2" />
<text  x="586.53" y="1743.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (2 samples, 0.04%)</title><rect x="133.9" y="1797" width="0.5" height="15.0" fill="rgb(246,31,52)" rx="2" ry="2" />
<text  x="136.94" y="1807.5" ></text>
</g>
<g >
<title>seastar::timer_set&lt;seastar::timer&lt;std::chrono::_V2::steady_clock&gt;, &amp;seastar::timer&lt;std::chrono::_V2::steady_clock&gt;::_link&gt;::expire (1 samples, 0.02%)</title><rect x="1164.5" y="1861" width="0.2" height="15.0" fill="rgb(233,27,46)" rx="2" ry="2" />
<text  x="1167.45" y="1871.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (1 samples, 0.02%)</title><rect x="703.9" y="1877" width="0.2" height="15.0" fill="rgb(239,99,4)" rx="2" ry="2" />
<text  x="706.88" y="1887.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;::lru_entry, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="735.9" y="1813" width="0.3" height="15.0" fill="rgb(220,72,42)" rx="2" ry="2" />
<text  x="738.93" y="1823.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::storage_proxy&gt;::~shared_ptr (2 samples, 0.04%)</title><rect x="1044.8" y="1765" width="0.4" height="15.0" fill="rgb(243,212,27)" rx="2" ry="2" />
<text  x="1047.77" y="1775.5" ></text>
</g>
<g >
<title>seastar::lambda_task&lt;seastar::execution_stage::flush (1,266 samples, 24.05%)</title><rect x="847.5" y="1925" width="283.8" height="15.0" fill="rgb(242,152,13)" rx="2" ry="2" />
<text  x="850.54" y="1935.5" >seastar::lambda_task&lt;seastar::executio..</text>
</g>
<g >
<title>flat_mutation_reader::impl::push_mutation_fragment&lt;schema const&amp;, reader_permit&amp;, partition_start&gt; (1 samples, 0.02%)</title><rect x="524.4" y="1685" width="0.2" height="15.0" fill="rgb(253,86,39)" rx="2" ry="2" />
<text  x="527.36" y="1695.5" ></text>
</g>
<g >
<title>std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;, seastar::future&lt;void&gt; &gt; &gt;::operator (1 samples, 0.02%)</title><rect x="80.6" y="1861" width="0.2" height="15.0" fill="rgb(252,223,26)" rx="2" ry="2" />
<text  x="83.60" y="1871.5" ></text>
</g>
<g >
<title>sstring_hash::operator (3 samples, 0.06%)</title><rect x="826.5" y="1797" width="0.6" height="15.0" fill="rgb(211,185,33)" rx="2" ry="2" />
<text  x="829.47" y="1807.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;gms::inet_address, gms::inet_address, std::allocator&lt;gms::inet_address&gt;, std::__detail::_Identity, std::equal_to&lt;gms::inet_address&gt;, std::hash&lt;gms::inet_address&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_find_before_node (1 samples, 0.02%)</title><rect x="109.7" y="1861" width="0.3" height="15.0" fill="rgb(247,191,37)" rx="2" ry="2" />
<text  x="112.73" y="1871.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a24d06c195bd126a1ed21a4439682d7f2fceb96c] (1 samples, 0.02%)</title><rect x="748.5" y="1685" width="0.2" height="15.0" fill="rgb(241,54,34)" rx="2" ry="2" />
<text  x="751.48" y="1695.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (1 samples, 0.02%)</title><rect x="1105.3" y="1797" width="0.2" height="15.0" fill="rgb(229,139,54)" rx="2" ry="2" />
<text  x="1108.28" y="1807.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql3::statements::update_statement&gt;::shared_ptr_count_for&lt;cql3::statements::statement_type const&amp;, unsigned long, seastar::lw_shared_ptr&lt;schema const&gt;&amp;, std::unique_ptr&lt;cql3::attributes, std::default_delete&lt;cql3::attributes&gt; &gt;, cql3::cql_stats&amp;&gt; (1 samples, 0.02%)</title><rect x="76.6" y="1829" width="0.2" height="15.0" fill="rgb(225,12,27)" rx="2" ry="2" />
<text  x="79.56" y="1839.5" ></text>
</g>
<g >
<title>std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt;::emplace_back&lt;seastar::lw_shared_ptr&lt;schema const&gt; const&amp;, partition_key const&gt; (1 samples, 0.02%)</title><rect x="855.6" y="1781" width="0.2" height="15.0" fill="rgb(208,189,22)" rx="2" ry="2" />
<text  x="858.61" y="1791.5" ></text>
</g>
<g >
<title>intrusive_b::node&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (1 samples, 0.02%)</title><rect x="1129.9" y="1685" width="0.3" height="15.0" fill="rgb(224,32,49)" rx="2" ry="2" />
<text  x="1132.94" y="1695.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::vector (1 samples, 0.02%)</title><rect x="20.1" y="1573" width="0.2" height="15.0" fill="rgb(208,24,5)" rx="2" ry="2" />
<text  x="23.09" y="1583.5" ></text>
</g>
<g >
<title>[[vdso]] (35 samples, 0.66%)</title><rect x="1166.9" y="2037" width="7.9" height="15.0" fill="rgb(232,57,43)" rx="2" ry="2" />
<text  x="1169.92" y="2047.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.02%)</title><rect x="845.7" y="1925" width="0.3" height="15.0" fill="rgb(206,145,37)" rx="2" ry="2" />
<text  x="848.75" y="1935.5" ></text>
</g>
<g >
<title>partition_snapshot_row_cursor::memory_usage (1 samples, 0.02%)</title><rect x="19.9" y="1973" width="0.2" height="15.0" fill="rgb(228,36,43)" rx="2" ry="2" />
<text  x="22.86" y="1983.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;cql3::column_specification&gt;::dispose (1 samples, 0.02%)</title><rect x="12.0" y="1973" width="0.2" height="15.0" fill="rgb(237,182,43)" rx="2" ry="2" />
<text  x="15.02" y="1983.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;column_definition const*, std::pair&lt;column_definition const* const, seastar::shared_ptr&lt;cql3::restrictions::single_column_restriction&gt; &gt;, std::_Select1st&lt;std::pair&lt;column_definition const* const, seastar::shared_ptr&lt;cql3::restrictions::single_column_restriction&gt; &gt; &gt;, cql3::restrictions::single_column_restrictions::column_definition_comparator, std::allocator&lt;std::pair&lt;column_definition const* const, seastar::shared_ptr&lt;cql3::restrictions::single_column_restriction&gt; &gt; &gt; &gt;::~_Rb_tree (1 samples, 0.02%)</title><rect x="646.5" y="1829" width="0.2" height="15.0" fill="rgb(244,49,31)" rx="2" ry="2" />
<text  x="649.51" y="1839.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (4 samples, 0.08%)</title><rect x="695.6" y="1877" width="0.9" height="15.0" fill="rgb(235,108,42)" rx="2" ry="2" />
<text  x="698.59" y="1887.5" ></text>
</g>
<g >
<title>partition_builder::accept_row_cell (1 samples, 0.02%)</title><rect x="1119.8" y="1653" width="0.3" height="15.0" fill="rgb(232,69,41)" rx="2" ry="2" />
<text  x="1122.85" y="1663.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (14 samples, 0.27%)</title><rect x="1186.2" y="405" width="3.1" height="15.0" fill="rgb(219,186,25)" rx="2" ry="2" />
<text  x="1189.19" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::reserve (4 samples, 0.08%)</title><rect x="556.0" y="1765" width="0.9" height="15.0" fill="rgb(206,132,36)" rx="2" ry="2" />
<text  x="558.96" y="1775.5" ></text>
</g>
<g >
<title>boost::range_detail::default_constructible_unary_fn_wrapper&lt;service::abstract_write_response_handler::max_backlog (1 samples, 0.02%)</title><rect x="716.0" y="1829" width="0.2" height="15.0" fill="rgb(212,170,15)" rx="2" ry="2" />
<text  x="718.98" y="1839.5" ></text>
</g>
<g >
<title>std::apply&lt;service::client_state::check_has_permission (4 samples, 0.08%)</title><rect x="79.7" y="1813" width="0.9" height="15.0" fill="rgb(232,27,45)" rx="2" ry="2" />
<text  x="82.70" y="1823.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (1 samples, 0.02%)</title><rect x="124.5" y="1861" width="0.3" height="15.0" fill="rgb(210,165,19)" rx="2" ry="2" />
<text  x="127.53" y="1871.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (1 samples, 0.02%)</title><rect x="809.4" y="1749" width="0.3" height="15.0" fill="rgb(252,171,17)" rx="2" ry="2" />
<text  x="812.44" y="1759.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate_to_raw_view (3 samples, 0.06%)</title><rect x="854.5" y="1733" width="0.7" height="15.0" fill="rgb(241,70,26)" rx="2" ry="2" />
<text  x="857.49" y="1743.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;compact_mutation_state&lt; (6 samples, 0.11%)</title><rect x="625.7" y="1845" width="1.3" height="15.0" fill="rgb(209,15,15)" rx="2" ry="2" />
<text  x="628.66" y="1855.5" ></text>
</g>
<g >
<title>cql3::constants::setter::execute (10 samples, 0.19%)</title><rect x="852.2" y="1733" width="2.3" height="15.0" fill="rgb(252,167,45)" rx="2" ry="2" />
<text  x="855.25" y="1743.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::update_and_check (1 samples, 0.02%)</title><rect x="360.1" y="1605" width="0.2" height="15.0" fill="rgb(229,118,4)" rx="2" ry="2" />
<text  x="363.08" y="1615.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a24d06c195bd126a1ed21a4439682d7f2fceb96c] (1 samples, 0.02%)</title><rect x="1039.2" y="1685" width="0.2" height="15.0" fill="rgb(240,79,46)" rx="2" ry="2" />
<text  x="1042.17" y="1695.5" ></text>
</g>
<g >
<title>ser::after_qr_cell__value&lt;bytes_ostream&gt;::skip_ttl (2 samples, 0.04%)</title><rect x="361.4" y="1605" width="0.5" height="15.0" fill="rgb(225,39,28)" rx="2" ry="2" />
<text  x="364.42" y="1615.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::raw::parsed_statement, std::default_delete&lt;cql3::statements::raw::parsed_statement&gt; &gt;::reset (1 samples, 0.02%)</title><rect x="68.5" y="1765" width="0.2" height="15.0" fill="rgb(216,119,14)" rx="2" ry="2" />
<text  x="71.50" y="1775.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (1 samples, 0.02%)</title><rect x="301.1" y="1717" width="0.3" height="15.0" fill="rgb(239,205,21)" rx="2" ry="2" />
<text  x="304.13" y="1727.5" ></text>
</g>
<g >
<title>partition_entry::evict (1 samples, 0.02%)</title><rect x="83.5" y="1957" width="0.2" height="15.0" fill="rgb(220,129,13)" rx="2" ry="2" />
<text  x="86.51" y="1967.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;tracking_allocator&lt;mutation_fragment&gt; &gt;::_S_destroy&lt;tracking_allocator&lt;mutation_fragment&gt;, mutation_fragment&gt; (2 samples, 0.04%)</title><rect x="336.1" y="1669" width="0.4" height="15.0" fill="rgb(230,209,50)" rx="2" ry="2" />
<text  x="339.10" y="1679.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::sharded_parallel_for_each (1 samples, 0.02%)</title><rect x="20.1" y="1877" width="0.2" height="15.0" fill="rgb(235,138,48)" rx="2" ry="2" />
<text  x="23.09" y="1887.5" ></text>
</g>
<g >
<title>auth::get_permissions (4 samples, 0.08%)</title><rect x="79.7" y="1797" width="0.9" height="15.0" fill="rgb(220,6,30)" rx="2" ry="2" />
<text  x="82.70" y="1807.5" ></text>
</g>
<g >
<title>multishard_combining_reader::handle_empty_reader_buffer (2 samples, 0.04%)</title><rect x="107.5" y="1669" width="0.4" height="15.0" fill="rgb(213,46,36)" rx="2" ry="2" />
<text  x="110.49" y="1679.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::push_back (11 samples, 0.21%)</title><rect x="1012.0" y="1621" width="2.5" height="15.0" fill="rgb(252,43,25)" rx="2" ry="2" />
<text  x="1015.05" y="1631.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_Optional_payload_base (3 samples, 0.06%)</title><rect x="1052.6" y="1733" width="0.7" height="15.0" fill="rgb(233,179,19)" rx="2" ry="2" />
<text  x="1055.61" y="1743.5" ></text>
</g>
<g >
<title>ser::idl::serializers::internal::vector_serializer&lt;std::vector&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, std::allocator&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt; &gt;::write&lt;bytes_ostream&gt; (1 samples, 0.02%)</title><rect x="1127.9" y="1525" width="0.2" height="15.0" fill="rgb(252,36,26)" rx="2" ry="2" />
<text  x="1130.92" y="1535.5" ></text>
</g>
<g >
<title>write_cell&lt;ser::qr_clustered_row__cells__cells&lt;bytes_ostream&gt; &gt; (172 samples, 3.27%)</title><rect x="364.6" y="1605" width="38.5" height="15.0" fill="rgb(215,57,9)" rx="2" ry="2" />
<text  x="367.56" y="1615.5" >wri..</text>
</g>
<g >
<title>std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;::pair (2 samples, 0.04%)</title><rect x="55.3" y="1573" width="0.4" height="15.0" fill="rgb(248,147,24)" rx="2" ry="2" />
<text  x="58.27" y="1583.5" ></text>
</g>
<g >
<title>compare_unsigned&lt;managed_bytes_basic_view&lt; (6 samples, 0.11%)</title><rect x="508.9" y="1637" width="1.3" height="15.0" fill="rgb(224,54,6)" rx="2" ry="2" />
<text  x="511.89" y="1647.5" ></text>
</g>
<g >
<title>seastar::futurize_invoke&lt;seastar::future&lt;void&gt;  (5 samples, 0.09%)</title><rect x="686.8" y="1845" width="1.2" height="15.0" fill="rgb(206,82,49)" rx="2" ry="2" />
<text  x="689.85" y="1855.5" ></text>
</g>
<g >
<title>sstables::mc::writer::write_row_body (2 samples, 0.04%)</title><rect x="1186.6" y="101" width="0.5" height="15.0" fill="rgb(225,99,12)" rx="2" ry="2" />
<text  x="1189.64" y="111.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.02%)</title><rect x="49.7" y="1557" width="0.2" height="15.0" fill="rgb(238,26,15)" rx="2" ry="2" />
<text  x="52.67" y="1567.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.02%)</title><rect x="51.7" y="1589" width="0.2" height="15.0" fill="rgb(234,126,9)" rx="2" ry="2" />
<text  x="54.69" y="1599.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;query::result_memory_limiter::new_data_read (1 samples, 0.02%)</title><rect x="616.5" y="1861" width="0.2" height="15.0" fill="rgb(219,197,36)" rx="2" ry="2" />
<text  x="619.47" y="1871.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (4 samples, 0.08%)</title><rect x="808.8" y="1781" width="0.9" height="15.0" fill="rgb(221,72,6)" rx="2" ry="2" />
<text  x="811.77" y="1791.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::operator (1 samples, 0.02%)</title><rect x="305.8" y="1765" width="0.3" height="15.0" fill="rgb(238,56,36)" rx="2" ry="2" />
<text  x="308.84" y="1775.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::followPush (1 samples, 0.02%)</title><rect x="47.4" y="1765" width="0.3" height="15.0" fill="rgb(212,165,11)" rx="2" ry="2" />
<text  x="50.43" y="1775.5" ></text>
</g>
<g >
<title>database::has_keyspace (8 samples, 0.15%)</title><rect x="814.4" y="1781" width="1.8" height="15.0" fill="rgb(242,229,8)" rx="2" ry="2" />
<text  x="817.37" y="1791.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (1 samples, 0.02%)</title><rect x="120.3" y="1877" width="0.2" height="15.0" fill="rgb(213,41,30)" rx="2" ry="2" />
<text  x="123.27" y="1887.5" ></text>
</g>
<g >
<title>reader_permit::consume_resources (1 samples, 0.02%)</title><rect x="530.0" y="1605" width="0.2" height="15.0" fill="rgb(229,69,19)" rx="2" ry="2" />
<text  x="532.96" y="1615.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::make_partition_slice (1 samples, 0.02%)</title><rect x="1113.1" y="1861" width="0.3" height="15.0" fill="rgb(240,14,34)" rx="2" ry="2" />
<text  x="1116.13" y="1871.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::construct&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (8 samples, 0.15%)</title><rect x="26.6" y="1685" width="1.8" height="15.0" fill="rgb(236,209,40)" rx="2" ry="2" />
<text  x="29.58" y="1695.5" ></text>
</g>
<g >
<title>utils::timed_rate_moving_average_and_histogram::mark (2 samples, 0.04%)</title><rect x="615.4" y="1845" width="0.4" height="15.0" fill="rgb(245,189,20)" rx="2" ry="2" />
<text  x="618.35" y="1855.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mWS (1 samples, 0.02%)</title><rect x="42.3" y="1685" width="0.2" height="15.0" fill="rgb(252,221,18)" rx="2" ry="2" />
<text  x="45.27" y="1695.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (2 samples, 0.04%)</title><rect x="847.1" y="1877" width="0.4" height="15.0" fill="rgb(230,114,8)" rx="2" ry="2" />
<text  x="850.09" y="1887.5" ></text>
</g>
<g >
<title>std::forward_as_tuple&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt; &gt; (1 samples, 0.02%)</title><rect x="795.8" y="1685" width="0.2" height="15.0" fill="rgb(217,94,35)" rx="2" ry="2" />
<text  x="798.77" y="1695.5" ></text>
</g>
<g >
<title>service::shared_mutation::apply_locally (4 samples, 0.08%)</title><rect x="1123.4" y="1653" width="0.9" height="15.0" fill="rgb(249,176,27)" rx="2" ry="2" />
<text  x="1126.44" y="1663.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;service::query_state, false&gt;::make&lt;service::client_state&amp;, service_permit&gt; (5 samples, 0.09%)</title><rect x="828.0" y="1845" width="1.2" height="15.0" fill="rgb(241,51,27)" rx="2" ry="2" />
<text  x="831.04" y="1855.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.02%)</title><rect x="49.4" y="1605" width="0.3" height="15.0" fill="rgb(253,120,17)" rx="2" ry="2" />
<text  x="52.45" y="1615.5" ></text>
</g>
<g >
<title>cql3::expr::possible_lhs_values (118 samples, 2.24%)</title><rect x="876.0" y="1829" width="26.5" height="15.0" fill="rgb(208,135,25)" rx="2" ry="2" />
<text  x="879.01" y="1839.5" >c..</text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_tokenSource (1 samples, 0.02%)</title><rect x="44.3" y="1749" width="0.2" height="15.0" fill="rgb(250,176,42)" rx="2" ry="2" />
<text  x="47.29" y="1759.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;gms::inet_address, std::pair&lt;gms::inet_address const, service::view_update_backlog_timestamped&gt;, std::allocator&lt;std::pair&lt;gms::inet_address const, service::view_update_backlog_timestamped&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;gms::inet_address&gt;, std::hash&lt;gms::inet_address&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (1 samples, 0.02%)</title><rect x="716.0" y="1813" width="0.2" height="15.0" fill="rgb(254,72,38)" rx="2" ry="2" />
<text  x="718.98" y="1823.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.02%)</title><rect x="535.3" y="1701" width="0.3" height="15.0" fill="rgb(252,120,44)" rx="2" ry="2" />
<text  x="538.34" y="1711.5" ></text>
</g>
<g >
<title>ser::qr_partition__rows&lt;bytes_ostream&gt;::add (1 samples, 0.02%)</title><rect x="363.4" y="1605" width="0.3" height="15.0" fill="rgb(237,160,29)" rx="2" ry="2" />
<text  x="366.44" y="1615.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;position_in_partition&gt;::_M_reset (1 samples, 0.02%)</title><rect x="584.9" y="1733" width="0.2" height="15.0" fill="rgb(234,90,42)" rx="2" ry="2" />
<text  x="587.87" y="1743.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (14 samples, 0.27%)</title><rect x="1186.2" y="597" width="3.1" height="15.0" fill="rgb(254,189,34)" rx="2" ry="2" />
<text  x="1189.19" y="607.5" ></text>
</g>
<g >
<title>std::make_unique&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;, seastar::lw_shared_ptr&lt;schema const&gt;, reader_permit, dht::decorated_key, partition_snapshot_ptr&amp;, query::clustering_key_filter_ranges, bool&amp;, logalloc::region&amp;, logalloc::allocating_section&amp;, boost::any, memtable&amp;&gt; (77 samples, 1.46%)</title><rect x="519.0" y="1733" width="17.2" height="15.0" fill="rgb(238,19,46)" rx="2" ry="2" />
<text  x="521.98" y="1743.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::leaf_node::allocate (1 samples, 0.02%)</title><rect x="19.4" y="1861" width="0.2" height="15.0" fill="rgb(210,192,33)" rx="2" ry="2" />
<text  x="22.41" y="1871.5" ></text>
</g>
<g >
<title>ser::qr_clustered_row__cells&lt;bytes_ostream&gt;::qr_clustered_row__cells (3 samples, 0.06%)</title><rect x="361.9" y="1605" width="0.6" height="15.0" fill="rgb(253,52,10)" rx="2" ry="2" />
<text  x="364.87" y="1615.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::alloc (2 samples, 0.04%)</title><rect x="239.3" y="1509" width="0.4" height="15.0" fill="rgb(224,133,5)" rx="2" ry="2" />
<text  x="242.28" y="1519.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (14 samples, 0.27%)</title><rect x="1186.2" y="1973" width="3.1" height="15.0" fill="rgb(240,217,22)" rx="2" ry="2" />
<text  x="1189.19" y="1983.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="70.7" y="1781" width="0.3" height="15.0" fill="rgb(242,2,9)" rx="2" ry="2" />
<text  x="73.74" y="1791.5" ></text>
</g>
<g >
<title>std::move&lt;std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;&gt; (1 samples, 0.02%)</title><rect x="58.4" y="1669" width="0.2" height="15.0" fill="rgb(248,90,25)" rx="2" ry="2" />
<text  x="61.41" y="1679.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_Optional_payload_base (2 samples, 0.04%)</title><rect x="744.0" y="1781" width="0.4" height="15.0" fill="rgb(243,128,15)" rx="2" ry="2" />
<text  x="747.00" y="1791.5" ></text>
</g>
<g >
<title>dht::ring_position_comparator::operator (57 samples, 1.08%)</title><rect x="501.3" y="1717" width="12.7" height="15.0" fill="rgb(221,100,9)" rx="2" ry="2" />
<text  x="504.27" y="1727.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt;::construct&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; (1 samples, 0.02%)</title><rect x="265.7" y="1557" width="0.2" height="15.0" fill="rgb(253,190,44)" rx="2" ry="2" />
<text  x="268.72" y="1567.5" ></text>
</g>
<g >
<title>service::client_state::ensure_has_permission (145 samples, 2.75%)</title><rect x="771.1" y="1781" width="32.5" height="15.0" fill="rgb(242,54,16)" rx="2" ry="2" />
<text  x="774.12" y="1791.5" >se..</text>
</g>
<g >
<title>seastar::thread_context::thread_context (14 samples, 0.27%)</title><rect x="1186.2" y="677" width="3.1" height="15.0" fill="rgb(236,77,25)" rx="2" ry="2" />
<text  x="1189.19" y="687.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, enum_set&lt;super_enum&lt;auth::permission,  (1 samples, 0.02%)</title><rect x="79.9" y="1733" width="0.3" height="15.0" fill="rgb(227,30,32)" rx="2" ry="2" />
<text  x="82.93" y="1743.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;clustering_key_prefix&gt;::_M_move_assign (3 samples, 0.06%)</title><rect x="559.3" y="1829" width="0.7" height="15.0" fill="rgb(212,83,41)" rx="2" ry="2" />
<text  x="562.32" y="1839.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="612.4" y="1797" width="0.3" height="15.0" fill="rgb(253,142,40)" rx="2" ry="2" />
<text  x="615.44" y="1807.5" ></text>
</g>
<g >
<title>absl::hash_internal::AbslHashValue&lt;absl::hash_internal::HashState&gt; (4 samples, 0.08%)</title><rect x="830.7" y="1765" width="0.9" height="15.0" fill="rgb(229,8,25)" rx="2" ry="2" />
<text  x="833.73" y="1775.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reclaiming_disabled&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_range_tombstone (1 samples, 0.02%)</title><rect x="847.1" y="1749" width="0.2" height="15.0" fill="rgb(221,196,46)" rx="2" ry="2" />
<text  x="850.09" y="1759.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (7 samples, 0.13%)</title><rect x="745.8" y="1749" width="1.6" height="15.0" fill="rgb(215,203,51)" rx="2" ry="2" />
<text  x="748.79" y="1759.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.02%)</title><rect x="531.8" y="1637" width="0.2" height="15.0" fill="rgb(232,229,19)" rx="2" ry="2" />
<text  x="534.75" y="1647.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (37 samples, 0.70%)</title><rect x="786.8" y="1621" width="8.3" height="15.0" fill="rgb(214,98,9)" rx="2" ry="2" />
<text  x="789.81" y="1631.5" ></text>
</g>
<g >
<title>schema_registry::get (17 samples, 0.32%)</title><rect x="962.5" y="1781" width="3.8" height="15.0" fill="rgb(220,212,51)" rx="2" ry="2" />
<text  x="965.52" y="1791.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;void&gt;  (1 samples, 0.02%)</title><rect x="20.1" y="1765" width="0.2" height="15.0" fill="rgb(242,151,26)" rx="2" ry="2" />
<text  x="23.09" y="1775.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment&lt;schema const&amp;, rows_entry const&amp;&gt; (195 samples, 3.70%)</title><rect x="217.3" y="1605" width="43.7" height="15.0" fill="rgb(239,216,30)" rx="2" ry="2" />
<text  x="220.31" y="1615.5" >muta..</text>
</g>
<g >
<title>cql3::expr::evaluate (1 samples, 0.02%)</title><rect x="848.4" y="1701" width="0.3" height="15.0" fill="rgb(208,189,15)" rx="2" ry="2" />
<text  x="851.44" y="1711.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_pausable&lt;scanning_reader::consumer&gt; (2 samples, 0.04%)</title><rect x="107.5" y="1381" width="0.4" height="15.0" fill="rgb(215,119,40)" rx="2" ry="2" />
<text  x="110.49" y="1391.5" ></text>
</g>
<g >
<title>bplus::tree&lt;long, intrusive_array&lt;memtable_entry&gt;, dht::raw_token_less_comparator, 16ul,  (31 samples, 0.59%)</title><rect x="493.2" y="1717" width="7.0" height="15.0" fill="rgb(234,68,20)" rx="2" ry="2" />
<text  x="496.21" y="1727.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (1 samples, 0.02%)</title><rect x="357.2" y="1605" width="0.2" height="15.0" fill="rgb(243,11,38)" rx="2" ry="2" />
<text  x="360.16" y="1615.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::find (1 samples, 0.02%)</title><rect x="651.2" y="1877" width="0.2" height="15.0" fill="rgb(244,195,51)" rx="2" ry="2" />
<text  x="654.21" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;auth::resource_kind, std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;auth::resource_kind&gt;, std::hash&lt;auth::resource_kind&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::at (2 samples, 0.04%)</title><rect x="767.8" y="1781" width="0.4" height="15.0" fill="rgb(249,191,51)" rx="2" ry="2" />
<text  x="770.75" y="1791.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;mutation_querier&gt;::_M_reset (1 samples, 0.02%)</title><rect x="347.5" y="1605" width="0.3" height="15.0" fill="rgb(231,191,16)" rx="2" ry="2" />
<text  x="350.53" y="1615.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.06%)</title><rect x="446.4" y="1717" width="0.6" height="15.0" fill="rgb(235,56,10)" rx="2" ry="2" />
<text  x="449.36" y="1727.5" ></text>
</g>
<g >
<title>auth::resource::resource (6 samples, 0.11%)</title><rect x="767.3" y="1813" width="1.4" height="15.0" fill="rgb(249,220,12)" rx="2" ry="2" />
<text  x="770.31" y="1823.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_in_thread&lt;sstables::sstable_writer, flat_mutation_reader::no_filter&gt; (1 samples, 0.02%)</title><rect x="1186.4" y="229" width="0.2" height="15.0" fill="rgb(207,16,26)" rx="2" ry="2" />
<text  x="1189.41" y="239.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.02%)</title><rect x="1189.1" y="117" width="0.2" height="15.0" fill="rgb(252,107,54)" rx="2" ry="2" />
<text  x="1192.10" y="127.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="192.0" y="1653" width="0.2" height="15.0" fill="rgb(235,56,37)" rx="2" ry="2" />
<text  x="194.99" y="1663.5" ></text>
</g>
<g >
<title>utils::sequenced_set&lt;gms::inet_address&gt;::insert (1 samples, 0.02%)</title><rect x="20.3" y="1813" width="0.2" height="15.0" fill="rgb(217,127,10)" rx="2" ry="2" />
<text  x="23.31" y="1823.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.02%)</title><rect x="48.1" y="1653" width="0.2" height="15.0" fill="rgb(243,179,18)" rx="2" ry="2" />
<text  x="51.10" y="1663.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;service::storage_proxy_coordinator_query_result&gt;::set_urgent_state (10 samples, 0.19%)</title><rect x="682.8" y="1909" width="2.3" height="15.0" fill="rgb(221,177,24)" rx="2" ry="2" />
<text  x="685.81" y="1919.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;std::tuple&lt;std::optional&lt;clustering_key_prefix&gt; &gt; &gt; &gt;::satisfy_with_result_of&lt;seastar::future&lt;mutation_fragment*&gt;::then_impl_nrvo&lt;query::consume_page&lt; (5 samples, 0.09%)</title><rect x="686.8" y="1909" width="1.2" height="15.0" fill="rgb(248,37,52)" rx="2" ry="2" />
<text  x="689.85" y="1919.5" ></text>
</g>
<g >
<title>seastar::lowres_clock_impl::update (1 samples, 0.02%)</title><rect x="1164.0" y="1877" width="0.2" height="15.0" fill="rgb(209,33,13)" rx="2" ry="2" />
<text  x="1167.00" y="1887.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;query::result_memory_accounter&gt;::clear (2 samples, 0.04%)</title><rect x="138.4" y="1877" width="0.5" height="15.0" fill="rgb(233,226,44)" rx="2" ry="2" />
<text  x="141.42" y="1887.5" ></text>
</g>
<g >
<title>seastar::schedule (1 samples, 0.02%)</title><rect x="692.2" y="1893" width="0.3" height="15.0" fill="rgb(243,154,8)" rx="2" ry="2" />
<text  x="695.23" y="1903.5" ></text>
</g>
<g >
<title>rows_entry::tri_compare::operator (3 samples, 0.06%)</title><rect x="853.1" y="1653" width="0.7" height="15.0" fill="rgb(212,159,3)" rx="2" ry="2" />
<text  x="856.15" y="1663.5" ></text>
</g>
<g >
<title>absl::container_internal::probe_seq&lt;16ul&gt;::probe_seq (2 samples, 0.04%)</title><rect x="760.1" y="1765" width="0.5" height="15.0" fill="rgb(211,99,49)" rx="2" ry="2" />
<text  x="763.13" y="1775.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="458.5" y="1829" width="0.2" height="15.0" fill="rgb(250,116,46)" rx="2" ry="2" />
<text  x="461.47" y="1839.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::maybe_refresh_state (21 samples, 0.40%)</title><rect x="261.2" y="1605" width="4.7" height="15.0" fill="rgb(234,30,1)" rx="2" ry="2" />
<text  x="264.24" y="1615.5" ></text>
</g>
<g >
<title>sstables::mc::writer::write_clustered&lt;clustering_row&gt; (1 samples, 0.02%)</title><rect x="1186.2" y="165" width="0.2" height="15.0" fill="rgb(243,79,47)" rx="2" ry="2" />
<text  x="1189.19" y="175.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (1 samples, 0.02%)</title><rect x="359.2" y="1589" width="0.2" height="15.0" fill="rgb(252,123,43)" rx="2" ry="2" />
<text  x="362.18" y="1599.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (1 samples, 0.02%)</title><rect x="266.2" y="1573" width="0.2" height="15.0" fill="rgb(207,44,48)" rx="2" ry="2" />
<text  x="269.17" y="1583.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::get_state (1 samples, 0.02%)</title><rect x="45.6" y="1749" width="0.3" height="15.0" fill="rgb(211,27,1)" rx="2" ry="2" />
<text  x="48.64" y="1759.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;::basic_sstring (1 samples, 0.02%)</title><rect x="743.8" y="1781" width="0.2" height="15.0" fill="rgb(225,65,19)" rx="2" ry="2" />
<text  x="746.77" y="1791.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::value (23 samples, 0.44%)</title><rect x="56.8" y="1717" width="5.2" height="15.0" fill="rgb(222,13,9)" rx="2" ry="2" />
<text  x="59.84" y="1727.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::clear (2 samples, 0.04%)</title><rect x="479.1" y="1701" width="0.4" height="15.0" fill="rgb(223,59,23)" rx="2" ry="2" />
<text  x="482.09" y="1711.5" ></text>
</g>
<g >
<title>__start_context (2 samples, 0.04%)</title><rect x="1188.4" y="197" width="0.5" height="15.0" fill="rgb(247,84,14)" rx="2" ry="2" />
<text  x="1191.43" y="207.5" ></text>
</g>
<g >
<title>auth::create_metadata_table_if_missing_impl (1 samples, 0.02%)</title><rect x="688.0" y="1829" width="0.2" height="15.0" fill="rgb(208,216,31)" rx="2" ry="2" />
<text  x="690.97" y="1839.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (5 samples, 0.09%)</title><rect x="190.4" y="1637" width="1.1" height="15.0" fill="rgb(254,118,2)" rx="2" ry="2" />
<text  x="193.42" y="1647.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.02%)</title><rect x="20.3" y="1925" width="0.2" height="15.0" fill="rgb(249,167,20)" rx="2" ry="2" />
<text  x="23.31" y="1935.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (15 samples, 0.28%)</title><rect x="1092.5" y="1829" width="3.4" height="15.0" fill="rgb(214,37,26)" rx="2" ry="2" />
<text  x="1095.51" y="1839.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.02%)</title><rect x="19.9" y="1925" width="0.2" height="15.0" fill="rgb(219,176,35)" rx="2" ry="2" />
<text  x="22.86" y="1935.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (1 samples, 0.02%)</title><rect x="80.2" y="1733" width="0.2" height="15.0" fill="rgb(233,226,34)" rx="2" ry="2" />
<text  x="83.15" y="1743.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (2 samples, 0.04%)</title><rect x="50.6" y="1589" width="0.4" height="15.0" fill="rgb(223,160,43)" rx="2" ry="2" />
<text  x="53.57" y="1599.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="57.7" y="1669" width="0.3" height="15.0" fill="rgb(227,52,3)" rx="2" ry="2" />
<text  x="60.74" y="1679.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (2 samples, 0.04%)</title><rect x="63.3" y="1589" width="0.5" height="15.0" fill="rgb(230,200,35)" rx="2" ry="2" />
<text  x="66.34" y="1599.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::future&lt;void&gt;  (35 samples, 0.66%)</title><rect x="1122.3" y="1781" width="7.9" height="15.0" fill="rgb(253,124,22)" rx="2" ry="2" />
<text  x="1125.32" y="1791.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="1177.0" y="2037" width="0.2" height="15.0" fill="rgb(237,143,37)" rx="2" ry="2" />
<text  x="1180.00" y="2047.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (14 samples, 0.27%)</title><rect x="1186.2" y="917" width="3.1" height="15.0" fill="rgb(237,106,5)" rx="2" ry="2" />
<text  x="1189.19" y="927.5" ></text>
</g>
<g >
<title>std::vector&lt;seastar::shared_ptr&lt;cql3::relation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::relation&gt; &gt; &gt;::_M_move_assign (2 samples, 0.04%)</title><rect x="66.0" y="1765" width="0.5" height="15.0" fill="rgb(247,32,0)" rx="2" ry="2" />
<text  x="69.03" y="1775.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::operator== (2 samples, 0.04%)</title><rect x="746.0" y="1717" width="0.5" height="15.0" fill="rgb(231,174,10)" rx="2" ry="2" />
<text  x="749.02" y="1727.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::set&lt;&gt; (1 samples, 0.02%)</title><rect x="94.7" y="1909" width="0.2" height="15.0" fill="rgb(229,226,25)" rx="2" ry="2" />
<text  x="97.72" y="1919.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_in_thread&lt;sstables::sstable_writer, flat_mutation_reader::no_filter&gt; (1 samples, 0.02%)</title><rect x="1188.2" y="133" width="0.2" height="15.0" fill="rgb(221,122,24)" rx="2" ry="2" />
<text  x="1191.21" y="143.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.02%)</title><rect x="260.3" y="1589" width="0.3" height="15.0" fill="rgb(238,124,4)" rx="2" ry="2" />
<text  x="263.34" y="1599.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::do_fill_buffer (1 samples, 0.02%)</title><rect x="847.1" y="1813" width="0.2" height="15.0" fill="rgb(216,177,38)" rx="2" ry="2" />
<text  x="850.09" y="1823.5" ></text>
</g>
<g >
<title>locator::simple_strategy::calculate_natural_endpoints (1 samples, 0.02%)</title><rect x="109.7" y="1909" width="0.3" height="15.0" fill="rgb(206,85,44)" rx="2" ry="2" />
<text  x="112.73" y="1919.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;gms::inet_address, gms::inet_address, std::allocator&lt;gms::inet_address&gt;, std::__detail::_Identity, std::equal_to&lt;gms::inet_address&gt;, std::hash&lt;gms::inet_address&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert&lt;gms::inet_address const&amp;, std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;gms::inet_address, false&gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="109.7" y="1877" width="0.3" height="15.0" fill="rgb(240,106,47)" rx="2" ry="2" />
<text  x="112.73" y="1887.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::constant (3 samples, 0.06%)</title><rect x="64.5" y="1717" width="0.6" height="15.0" fill="rgb(211,125,2)" rx="2" ry="2" />
<text  x="67.46" y="1727.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.02%)</title><rect x="1130.6" y="1909" width="0.2" height="15.0" fill="rgb(221,174,22)" rx="2" ry="2" />
<text  x="1133.61" y="1919.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;clustering_key_prefix&gt;::wrapping_interval (1 samples, 0.02%)</title><rect x="1089.8" y="1797" width="0.2" height="15.0" fill="rgb(224,51,48)" rx="2" ry="2" />
<text  x="1092.82" y="1807.5" ></text>
</g>
<g >
<title>seastar::schedule_urgent (1 samples, 0.02%)</title><rect x="660.8" y="1909" width="0.3" height="15.0" fill="rgb(214,113,5)" rx="2" ry="2" />
<text  x="663.85" y="1919.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;std::pair&lt;seastar::shared_ptr&lt;service::abstract_read_executor&gt;, nonwrapping_interval&lt;dht::token&gt; &gt;, 1ul&gt;::~small_vector (1 samples, 0.02%)</title><rect x="1163.1" y="1925" width="0.2" height="15.0" fill="rgb(212,147,22)" rx="2" ry="2" />
<text  x="1166.11" y="1935.5" ></text>
</g>
<g >
<title>cql3::cf_name::cf_name (1 samples, 0.02%)</title><rect x="47.7" y="1765" width="0.2" height="15.0" fill="rgb(221,151,29)" rx="2" ry="2" />
<text  x="50.65" y="1775.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (263 samples, 5.00%)</title><rect x="23.2" y="1941" width="59.0" height="15.0" fill="rgb(217,104,23)" rx="2" ry="2" />
<text  x="26.22" y="1951.5" >single..</text>
</g>
<g >
<title>partition_snapshot::get_change_mark (1 samples, 0.02%)</title><rect x="261.0" y="1605" width="0.2" height="15.0" fill="rgb(226,196,22)" rx="2" ry="2" />
<text  x="264.02" y="1615.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::clear (1 samples, 0.02%)</title><rect x="80.6" y="1845" width="0.2" height="15.0" fill="rgb(229,207,40)" rx="2" ry="2" />
<text  x="83.60" y="1855.5" ></text>
</g>
<g >
<title>fmt::v7::detail::fallback_formatter&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, char, void&gt;::format&lt;fmt::v7::detail::buffer_appender&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="22.1" y="1893" width="0.2" height="15.0" fill="rgb(234,110,43)" rx="2" ry="2" />
<text  x="25.10" y="1903.5" ></text>
</g>
<g >
<title>std::allocator&lt;seastar::shared_ptr&lt;cql3::column_identifier&gt; &gt;::allocator (1 samples, 0.02%)</title><rect x="24.3" y="1797" width="0.3" height="15.0" fill="rgb(218,224,17)" rx="2" ry="2" />
<text  x="27.34" y="1807.5" ></text>
</g>
<g >
<title>__tls_init (1 samples, 0.02%)</title><rect x="546.3" y="1733" width="0.2" height="15.0" fill="rgb(215,187,52)" rx="2" ry="2" />
<text  x="549.32" y="1743.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::emplace_mutation_fragment (2 samples, 0.04%)</title><rect x="202.5" y="1669" width="0.5" height="15.0" fill="rgb(232,217,39)" rx="2" ry="2" />
<text  x="205.52" y="1679.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::execution_loop (2,347 samples, 44.58%)</title><rect x="110.2" y="1925" width="526.0" height="15.0" fill="rgb(222,61,53)" rx="2" ry="2" />
<text  x="113.18" y="1935.5" >reader_concurrency_semaphore::execution_loop</text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (1 samples, 0.02%)</title><rect x="217.1" y="1605" width="0.2" height="15.0" fill="rgb(227,25,54)" rx="2" ry="2" />
<text  x="220.09" y="1615.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (35 samples, 0.66%)</title><rect x="1122.3" y="1845" width="7.9" height="15.0" fill="rgb(237,215,19)" rx="2" ry="2" />
<text  x="1125.32" y="1855.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_range_tombstone (14 samples, 0.27%)</title><rect x="267.7" y="1637" width="3.2" height="15.0" fill="rgb(249,26,30)" rx="2" ry="2" />
<text  x="270.74" y="1647.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::future&lt;void&gt;  (30 samples, 0.57%)</title><rect x="1115.4" y="1781" width="6.7" height="15.0" fill="rgb(240,149,48)" rx="2" ry="2" />
<text  x="1118.37" y="1791.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;seastar::shared_ptr&lt;cql3::column_identifier&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::column_identifier&gt; &gt; &gt;::_Vector_base (1 samples, 0.02%)</title><rect x="24.3" y="1813" width="0.3" height="15.0" fill="rgb(207,107,18)" rx="2" ry="2" />
<text  x="27.34" y="1823.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="49.0" y="1701" width="0.2" height="15.0" fill="rgb(235,146,10)" rx="2" ry="2" />
<text  x="52.00" y="1711.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_cachedSize (1 samples, 0.02%)</title><rect x="51.2" y="1701" width="0.3" height="15.0" fill="rgb(224,72,7)" rx="2" ry="2" />
<text  x="54.24" y="1711.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, flat_mutation_reader::impl::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (523 samples, 9.93%)</title><rect x="328.9" y="1733" width="117.2" height="15.0" fill="rgb(241,137,27)" rx="2" ry="2" />
<text  x="331.92" y="1743.5" >std::__invoke_..</text>
</g>
<g >
<title>validation::validate_column_family (2 samples, 0.04%)</title><rect x="80.8" y="1877" width="0.5" height="15.0" fill="rgb(246,101,53)" rx="2" ry="2" />
<text  x="83.82" y="1887.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;dht::decorated_key&gt;::_Optional_payload_base (1 samples, 0.02%)</title><rect x="328.7" y="1717" width="0.2" height="15.0" fill="rgb(220,42,10)" rx="2" ry="2" />
<text  x="331.70" y="1727.5" ></text>
</g>
<g >
<title>tracing::global_trace_state_ptr::global_trace_state_ptr (1 samples, 0.02%)</title><rect x="1028.6" y="1701" width="0.3" height="15.0" fill="rgb(253,215,47)" rx="2" ry="2" />
<text  x="1031.63" y="1711.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (3 samples, 0.06%)</title><rect x="741.1" y="1797" width="0.7" height="15.0" fill="rgb(242,5,21)" rx="2" ry="2" />
<text  x="744.08" y="1807.5" ></text>
</g>
<g >
<title>seastar::app_template::run (4,820 samples, 91.55%)</title><rect x="84.9" y="2021" width="1080.2" height="15.0" fill="rgb(236,123,49)" rx="2" ry="2" />
<text  x="87.86" y="2031.5" >seastar::app_template::run</text>
</g>
<g >
<title>table::query (2,184 samples, 41.48%)</title><rect x="143.1" y="1877" width="489.5" height="15.0" fill="rgb(233,213,15)" rx="2" ry="2" />
<text  x="146.13" y="1887.5" >table::query</text>
</g>
<g >
<title>service::digest_read_resolver::response_count (2 samples, 0.04%)</title><rect x="709.7" y="1845" width="0.5" height="15.0" fill="rgb(222,106,18)" rx="2" ry="2" />
<text  x="712.71" y="1855.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (2 samples, 0.04%)</title><rect x="60.0" y="1685" width="0.4" height="15.0" fill="rgb(254,144,28)" rx="2" ry="2" />
<text  x="62.98" y="1695.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::operator (3 samples, 0.06%)</title><rect x="747.4" y="1717" width="0.6" height="15.0" fill="rgb(227,70,52)" rx="2" ry="2" />
<text  x="750.36" y="1727.5" ></text>
</g>
<g >
<title>do_cql_test (277 samples, 5.26%)</title><rect x="20.5" y="1973" width="62.1" height="15.0" fill="rgb(207,68,31)" rx="2" ry="2" />
<text  x="23.53" y="1983.5" >do_cql..</text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="25.0" y="1733" width="0.2" height="15.0" fill="rgb(235,65,36)" rx="2" ry="2" />
<text  x="28.02" y="1743.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (14 samples, 0.27%)</title><rect x="1186.2" y="1365" width="3.1" height="15.0" fill="rgb(220,103,33)" rx="2" ry="2" />
<text  x="1189.19" y="1375.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="106.8" y="1749" width="0.2" height="15.0" fill="rgb(215,161,17)" rx="2" ry="2" />
<text  x="109.82" y="1759.5" ></text>
</g>
<g >
<title>std::optional&lt;reader_concurrency_semaphore::entry&gt;::optional&lt;reader_concurrency_semaphore::entry, true&gt; (1 samples, 0.02%)</title><rect x="1013.8" y="1573" width="0.3" height="15.0" fill="rgb(228,11,36)" rx="2" ry="2" />
<text  x="1016.84" y="1583.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::iterator_at (1 samples, 0.02%)</title><rect x="815.7" y="1733" width="0.2" height="15.0" fill="rgb(211,120,32)" rx="2" ry="2" />
<text  x="818.72" y="1743.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.06%)</title><rect x="828.3" y="1813" width="0.6" height="15.0" fill="rgb(247,41,38)" rx="2" ry="2" />
<text  x="831.27" y="1823.5" ></text>
</g>
<g >
<title>utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::get_or_load&lt;utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (26 samples, 0.49%)</title><rect x="744.4" y="1797" width="5.9" height="15.0" fill="rgb(210,36,45)" rx="2" ry="2" />
<text  x="747.45" y="1807.5" ></text>
</g>
<g >
<title>std::apply&lt;auth::permissions_cache::get (66 samples, 1.25%)</title><rect x="781.0" y="1685" width="14.8" height="15.0" fill="rgb(244,170,21)" rx="2" ry="2" />
<text  x="783.98" y="1695.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::range_tombstone_accumulator (23 samples, 0.44%)</title><rect x="562.2" y="1813" width="5.2" height="15.0" fill="rgb(215,85,35)" rx="2" ry="2" />
<text  x="565.24" y="1823.5" ></text>
</g>
<g >
<title>reader_permit::consume (2 samples, 0.04%)</title><rect x="316.2" y="1717" width="0.4" height="15.0" fill="rgb(226,39,21)" rx="2" ry="2" />
<text  x="319.15" y="1727.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="58.9" y="1685" width="0.2" height="15.0" fill="rgb(207,226,54)" rx="2" ry="2" />
<text  x="61.86" y="1695.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::then_impl&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (1 samples, 0.02%)</title><rect x="169.1" y="1797" width="0.3" height="15.0" fill="rgb(212,74,49)" rx="2" ry="2" />
<text  x="172.13" y="1807.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (1 samples, 0.02%)</title><rect x="1115.8" y="1669" width="0.2" height="15.0" fill="rgb(230,11,18)" rx="2" ry="2" />
<text  x="1118.82" y="1679.5" ></text>
</g>
<g >
<title>bound_view::from_range&lt;nonwrapping_interval&gt; (1 samples, 0.02%)</title><rect x="847.3" y="1765" width="0.2" height="15.0" fill="rgb(205,62,19)" rx="2" ry="2" />
<text  x="850.32" y="1775.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;gms::inet_address, std::pair&lt;gms::inet_address const, table::cache_hit_rate&gt;, std::allocator&lt;std::pair&lt;gms::inet_address const, table::cache_hit_rate&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;gms::inet_address&gt;, std::hash&lt;gms::inet_address&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (2 samples, 0.04%)</title><rect x="712.8" y="1845" width="0.5" height="15.0" fill="rgb(251,182,4)" rx="2" ry="2" />
<text  x="715.85" y="1855.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="74.8" y="1669" width="0.2" height="15.0" fill="rgb(231,32,26)" rx="2" ry="2" />
<text  x="77.77" y="1679.5" ></text>
</g>
<g >
<title>remove_or_mark_as_unique_owner (1 samples, 0.02%)</title><rect x="83.5" y="1941" width="0.2" height="15.0" fill="rgb(231,180,23)" rx="2" ry="2" />
<text  x="86.51" y="1951.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::whereClause (11 samples, 0.21%)</title><rect x="63.3" y="1781" width="2.5" height="15.0" fill="rgb(245,228,25)" rx="2" ry="2" />
<text  x="66.34" y="1791.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::emplace_back&lt;gms::inet_address const&amp;&gt; (1 samples, 0.02%)</title><rect x="1129.5" y="1621" width="0.2" height="15.0" fill="rgb(231,35,26)" rx="2" ry="2" />
<text  x="1132.49" y="1631.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="58.9" y="1669" width="0.2" height="15.0" fill="rgb(233,200,52)" rx="2" ry="2" />
<text  x="61.86" y="1679.5" ></text>
</g>
<g >
<title>operator new (6 samples, 0.11%)</title><rect x="836.3" y="1781" width="1.4" height="15.0" fill="rgb(244,172,22)" rx="2" ry="2" />
<text  x="839.34" y="1791.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::~partition_snapshot_flat_reader (1 samples, 0.02%)</title><rect x="1162.9" y="1781" width="0.2" height="15.0" fill="rgb(230,172,50)" rx="2" ry="2" />
<text  x="1165.88" y="1791.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::~merging_reader (38 samples, 0.72%)</title><rect x="587.3" y="1813" width="8.6" height="15.0" fill="rgb(253,137,35)" rx="2" ry="2" />
<text  x="590.34" y="1823.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.06%)</title><rect x="930.5" y="1797" width="0.6" height="15.0" fill="rgb(207,31,16)" rx="2" ry="2" />
<text  x="933.47" y="1807.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;query::result&gt;::operator= (1 samples, 0.02%)</title><rect x="116.0" y="1893" width="0.2" height="15.0" fill="rgb(213,103,33)" rx="2" ry="2" />
<text  x="119.01" y="1903.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.02%)</title><rect x="746.2" y="1701" width="0.3" height="15.0" fill="rgb(240,70,17)" rx="2" ry="2" />
<text  x="749.24" y="1711.5" ></text>
</g>
<g >
<title>bytes_ostream::alloc_new (5 samples, 0.09%)</title><rect x="611.5" y="1813" width="1.2" height="15.0" fill="rgb(214,219,7)" rx="2" ry="2" />
<text  x="614.54" y="1823.5" ></text>
</g>
<g >
<title>partition_snapshot::partition_tombstone (3 samples, 0.06%)</title><rect x="532.7" y="1653" width="0.6" height="15.0" fill="rgb(221,138,20)" rx="2" ry="2" />
<text  x="535.65" y="1663.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::set_token_present (1 samples, 0.02%)</title><rect x="30.4" y="1701" width="0.2" height="15.0" fill="rgb(244,220,5)" rx="2" ry="2" />
<text  x="33.40" y="1711.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="486.0" y="1749" width="0.3" height="15.0" fill="rgb(246,134,22)" rx="2" ry="2" />
<text  x="489.03" y="1759.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (1 samples, 0.02%)</title><rect x="1119.0" y="1605" width="0.2" height="15.0" fill="rgb(242,73,20)" rx="2" ry="2" />
<text  x="1121.95" y="1615.5" ></text>
</g>
<g >
<title>row::apply_monotonically (1 samples, 0.02%)</title><rect x="19.4" y="1957" width="0.2" height="15.0" fill="rgb(240,15,37)" rx="2" ry="2" />
<text  x="22.41" y="1967.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;service::digest_read_resolver&gt;::~shared_ptr_count_for (6 samples, 0.11%)</title><rect x="698.3" y="1909" width="1.3" height="15.0" fill="rgb(226,105,41)" rx="2" ry="2" />
<text  x="701.28" y="1919.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="854.7" y="1685" width="0.2" height="15.0" fill="rgb(231,108,6)" rx="2" ry="2" />
<text  x="857.71" y="1695.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, unsigned int, std::_Identity&lt;unsigned int&gt;, std::less&lt;unsigned int&gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;unsigned int&gt; &gt;::_M_mbegin (1 samples, 0.02%)</title><rect x="43.8" y="1701" width="0.3" height="15.0" fill="rgb(233,137,10)" rx="2" ry="2" />
<text  x="46.84" y="1711.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::~timer (2 samples, 0.04%)</title><rect x="698.7" y="1893" width="0.5" height="15.0" fill="rgb(205,46,32)" rx="2" ry="2" />
<text  x="701.73" y="1903.5" ></text>
</g>
<g >
<title>flat_mutation_reader::peek (1 samples, 0.02%)</title><rect x="142.9" y="1829" width="0.2" height="15.0" fill="rgb(235,179,4)" rx="2" ry="2" />
<text  x="145.90" y="1839.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (6 samples, 0.11%)</title><rect x="46.1" y="1765" width="1.3" height="15.0" fill="rgb(248,86,47)" rx="2" ry="2" />
<text  x="49.08" y="1775.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reclaiming_disabled&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::get_static_row (19 samples, 0.36%)</title><rect x="291.0" y="1653" width="4.3" height="15.0" fill="rgb(232,130,20)" rx="2" ry="2" />
<text  x="294.05" y="1663.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cident (7 samples, 0.13%)</title><rect x="48.8" y="1765" width="1.5" height="15.0" fill="rgb(221,132,53)" rx="2" ry="2" />
<text  x="51.77" y="1775.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::visit&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (46 samples, 0.87%)</title><rect x="431.1" y="1653" width="10.3" height="15.0" fill="rgb(236,128,8)" rx="2" ry="2" />
<text  x="434.12" y="1663.5" ></text>
</g>
<g >
<title>seastar::internal::coroutine_traits_base&lt;std::tuple&lt;seastar::lw_shared_ptr&lt;query::result&gt;, cache_temperature&gt; &gt;::promise_type::run_and_dispose (2 samples, 0.04%)</title><rect x="86.2" y="1941" width="0.4" height="15.0" fill="rgb(217,114,39)" rx="2" ry="2" />
<text  x="89.20" y="1951.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.06%)</title><rect x="287.2" y="1589" width="0.7" height="15.0" fill="rgb(236,85,5)" rx="2" ry="2" />
<text  x="290.24" y="1599.5" ></text>
</g>
<g >
<title>seastar::app_template::run_deprecated (4,820 samples, 91.55%)</title><rect x="84.9" y="1989" width="1080.2" height="15.0" fill="rgb(216,174,47)" rx="2" ry="2" />
<text  x="87.86" y="1999.5" >seastar::app_template::run_deprecated</text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::find (1 samples, 0.02%)</title><rect x="652.3" y="1861" width="0.3" height="15.0" fill="rgb(210,166,2)" rx="2" ry="2" />
<text  x="655.33" y="1871.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="1015.4" y="1621" width="0.2" height="15.0" fill="rgb(245,200,27)" rx="2" ry="2" />
<text  x="1018.41" y="1631.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (1 samples, 0.02%)</title><rect x="855.8" y="1797" width="0.3" height="15.0" fill="rgb(219,140,11)" rx="2" ry="2" />
<text  x="858.83" y="1807.5" ></text>
</g>
<g >
<title>make_shared_schema (1 samples, 0.02%)</title><rect x="20.1" y="1669" width="0.2" height="15.0" fill="rgb(245,66,36)" rx="2" ry="2" />
<text  x="23.09" y="1679.5" ></text>
</g>
<g >
<title>create_partitions (276 samples, 5.24%)</title><rect x="20.5" y="1957" width="61.9" height="15.0" fill="rgb(236,107,3)" rx="2" ry="2" />
<text  x="23.53" y="1967.5" >create..</text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::create_keyspace_statement, std::default_delete&lt;cql3::statements::create_keyspace_statement&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::statements::create_keyspace_statement&gt;, void&gt; (1 samples, 0.02%)</title><rect x="66.9" y="1797" width="0.3" height="15.0" fill="rgb(242,68,7)" rx="2" ry="2" />
<text  x="69.93" y="1807.5" ></text>
</g>
<g >
<title>abstract_type::without_reversed (1 samples, 0.02%)</title><rect x="902.2" y="1813" width="0.3" height="15.0" fill="rgb(230,166,47)" rx="2" ry="2" />
<text  x="905.23" y="1823.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (551 samples, 10.47%)</title><rect x="327.1" y="1781" width="123.5" height="15.0" fill="rgb(243,71,24)" rx="2" ry="2" />
<text  x="330.13" y="1791.5" >flat_mutation_r..</text>
</g>
<g >
<title>atomic_cell_type::make_live&lt;fragment_range&lt;managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="852.5" y="1669" width="0.2" height="15.0" fill="rgb(214,164,43)" rx="2" ry="2" />
<text  x="855.47" y="1679.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (14 samples, 0.27%)</title><rect x="1186.2" y="1829" width="3.1" height="15.0" fill="rgb(211,159,4)" rx="2" ry="2" />
<text  x="1189.19" y="1839.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.02%)</title><rect x="698.5" y="1893" width="0.2" height="15.0" fill="rgb(211,148,39)" rx="2" ry="2" />
<text  x="701.50" y="1903.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (14 samples, 0.27%)</title><rect x="1186.2" y="1173" width="3.1" height="15.0" fill="rgb(232,25,14)" rx="2" ry="2" />
<text  x="1189.19" y="1183.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (2 samples, 0.04%)</title><rect x="660.0" y="1909" width="0.4" height="15.0" fill="rgb(227,30,14)" rx="2" ry="2" />
<text  x="662.95" y="1919.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (1 samples, 0.02%)</title><rect x="889.2" y="1685" width="0.3" height="15.0" fill="rgb(228,31,24)" rx="2" ry="2" />
<text  x="892.23" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::constant&gt;  (63 samples, 1.20%)</title><rect x="881.4" y="1733" width="14.1" height="15.0" fill="rgb(212,64,19)" rx="2" ry="2" />
<text  x="884.38" y="1743.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (1 samples, 0.02%)</title><rect x="742.0" y="1797" width="0.2" height="15.0" fill="rgb(221,177,4)" rx="2" ry="2" />
<text  x="744.98" y="1807.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;flat_mutation_reader::impl::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (9 samples, 0.17%)</title><rect x="330.0" y="1717" width="2.1" height="15.0" fill="rgb(250,122,39)" rx="2" ry="2" />
<text  x="333.05" y="1727.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (1 samples, 0.02%)</title><rect x="426.9" y="1605" width="0.2" height="15.0" fill="rgb(210,123,37)" rx="2" ry="2" />
<text  x="429.87" y="1615.5" ></text>
</g>
<g >
<title>fmt::v7::detail::buffer&lt;char&gt;::push_back (2 samples, 0.04%)</title><rect x="22.6" y="1893" width="0.4" height="15.0" fill="rgb(227,220,36)" rx="2" ry="2" />
<text  x="25.55" y="1903.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::~unique_ptr (2 samples, 0.04%)</title><rect x="77.9" y="1845" width="0.5" height="15.0" fill="rgb(212,218,16)" rx="2" ry="2" />
<text  x="80.91" y="1855.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::guard (2 samples, 0.04%)</title><rect x="514.5" y="1749" width="0.4" height="15.0" fill="rgb(250,153,0)" rx="2" ry="2" />
<text  x="517.50" y="1759.5" ></text>
</g>
<g >
<title>mutation_reader_merger::maybe_add_readers_at_partition_boundary (6 samples, 0.11%)</title><rect x="179.0" y="1717" width="1.3" height="15.0" fill="rgb(230,79,53)" rx="2" ry="2" />
<text  x="181.99" y="1727.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (3 samples, 0.06%)</title><rect x="50.3" y="1717" width="0.7" height="15.0" fill="rgb(249,133,48)" rx="2" ry="2" />
<text  x="53.34" y="1727.5" ></text>
</g>
<g >
<title>compound_type&lt; (5 samples, 0.09%)</title><rect x="907.2" y="1781" width="1.1" height="15.0" fill="rgb(231,160,49)" rx="2" ry="2" />
<text  x="910.16" y="1791.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;seastar::posix_file_real_impl&gt;::shared_ptr_count_for&lt;int&amp;, seastar::open_flags, seastar::file_open_options&amp;, seastar::internal::fs_info&amp;, unsigned long&amp;&gt; (1 samples, 0.02%)</title><rect x="674.7" y="1893" width="0.3" height="15.0" fill="rgb(224,195,33)" rx="2" ry="2" />
<text  x="677.74" y="1903.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (13 samples, 0.25%)</title><rect x="1186.4" y="325" width="2.9" height="15.0" fill="rgb(241,77,42)" rx="2" ry="2" />
<text  x="1189.41" y="335.5" ></text>
</g>
<g >
<title>schema::column_at (1 samples, 0.02%)</title><rect x="19.9" y="1893" width="0.2" height="15.0" fill="rgb(206,145,46)" rx="2" ry="2" />
<text  x="22.86" y="1903.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (1 samples, 0.02%)</title><rect x="51.0" y="1717" width="0.2" height="15.0" fill="rgb(252,145,29)" rx="2" ry="2" />
<text  x="54.01" y="1727.5" ></text>
</g>
<g >
<title>std::hash&lt;gms::inet_address&gt;::operator (1 samples, 0.02%)</title><rect x="1143.8" y="1845" width="0.3" height="15.0" fill="rgb(221,158,54)" rx="2" ry="2" />
<text  x="1146.83" y="1855.5" ></text>
</g>
<g >
<title>seastar::do_until&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::fill_buffer (1 samples, 0.02%)</title><rect x="1187.5" y="69" width="0.3" height="15.0" fill="rgb(209,105,19)" rx="2" ry="2" />
<text  x="1190.53" y="79.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_insert_unique_node (11 samples, 0.21%)</title><rect x="1145.8" y="1877" width="2.5" height="15.0" fill="rgb(221,13,17)" rx="2" ry="2" />
<text  x="1148.85" y="1887.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (14 samples, 0.27%)</title><rect x="1186.2" y="1221" width="3.1" height="15.0" fill="rgb(225,6,35)" rx="2" ry="2" />
<text  x="1189.19" y="1231.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="46.8" y="1685" width="0.2" height="15.0" fill="rgb(218,117,23)" rx="2" ry="2" />
<text  x="49.76" y="1695.5" ></text>
</g>
<g >
<title>compound_type&lt; (15 samples, 0.28%)</title><rect x="510.2" y="1637" width="3.4" height="15.0" fill="rgb(213,28,53)" rx="2" ry="2" />
<text  x="513.24" y="1647.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::push_mutation_fragment&lt;mutation_fragment&gt; (36 samples, 0.68%)</title><rect x="312.3" y="1749" width="8.1" height="15.0" fill="rgb(246,76,8)" rx="2" ry="2" />
<text  x="315.34" y="1759.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_Vector_base (1 samples, 0.02%)</title><rect x="64.2" y="1685" width="0.3" height="15.0" fill="rgb(242,123,39)" rx="2" ry="2" />
<text  x="67.24" y="1695.5" ></text>
</g>
<g >
<title>LZ4_compress_fast_extState (1 samples, 0.02%)</title><rect x="10.0" y="2053" width="0.2" height="15.0" fill="rgb(246,171,48)" rx="2" ry="2" />
<text  x="13.00" y="2063.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::allocate_large (1 samples, 0.02%)</title><rect x="1149.7" y="1813" width="0.2" height="15.0" fill="rgb(250,95,30)" rx="2" ry="2" />
<text  x="1152.66" y="1823.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::digest_read_result&gt;::move_it (1 samples, 0.02%)</title><rect x="691.3" y="1909" width="0.3" height="15.0" fill="rgb(231,175,31)" rx="2" ry="2" />
<text  x="694.33" y="1919.5" ></text>
</g>
<g >
<title>std::operator+ (2 samples, 0.04%)</title><rect x="47.0" y="1621" width="0.4" height="15.0" fill="rgb(208,87,41)" rx="2" ry="2" />
<text  x="49.98" y="1631.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::on_new_range (66 samples, 1.25%)</title><rect x="276.0" y="1685" width="14.8" height="15.0" fill="rgb(205,227,33)" rx="2" ry="2" />
<text  x="279.03" y="1695.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (2 samples, 0.04%)</title><rect x="668.7" y="1893" width="0.4" height="15.0" fill="rgb(207,62,5)" rx="2" ry="2" />
<text  x="671.69" y="1903.5" ></text>
</g>
<g >
<title>seastar::internal::tuple_map_helper&lt;std::tuple&lt;service::storage_proxy*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt;, db::consistency_level, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, tracing::trace_state_ptr, service_permit, bool, seastar::lw_shared_ptr&lt;cdc::operation_result_tracker&gt; &gt;, seastar::concrete_execution_stage&lt;seastar::future&lt;void&gt;, service::storage_proxy*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt;, db::consistency_level, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, tracing::trace_state_ptr, service_permit, bool, seastar::lw_shared_ptr&lt;cdc::operation_result_tracker&gt; &gt;::unwrap (1 samples, 0.02%)</title><rect x="1122.1" y="1893" width="0.2" height="15.0" fill="rgb(230,160,39)" rx="2" ry="2" />
<text  x="1125.09" y="1903.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::set_startIndex (1 samples, 0.02%)</title><rect x="31.7" y="1685" width="0.3" height="15.0" fill="rgb(249,147,29)" rx="2" ry="2" />
<text  x="34.74" y="1695.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;query::result&gt;::operator= (1 samples, 0.02%)</title><rect x="1136.7" y="1893" width="0.2" height="15.0" fill="rgb(243,154,34)" rx="2" ry="2" />
<text  x="1139.66" y="1903.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::allocate_large_and_trim (1 samples, 0.02%)</title><rect x="688.6" y="1813" width="0.3" height="15.0" fill="rgb(240,122,45)" rx="2" ry="2" />
<text  x="691.64" y="1823.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.02%)</title><rect x="49.0" y="1733" width="0.2" height="15.0" fill="rgb(218,189,26)" rx="2" ry="2" />
<text  x="52.00" y="1743.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;service::digest_read_resolver&gt;::shared_ptr_count_for&lt;seastar::lw_shared_ptr&lt;schema const&gt;&amp;, db::consistency_level&amp;, unsigned long&amp;, unsigned long, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;&amp;&gt; (19 samples, 0.36%)</title><rect x="977.3" y="1749" width="4.3" height="15.0" fill="rgb(241,128,36)" rx="2" ry="2" />
<text  x="980.31" y="1759.5" ></text>
</g>
<g >
<title>database::find_schema (27 samples, 0.51%)</title><rect x="757.0" y="1829" width="6.0" height="15.0" fill="rgb(241,118,2)" rx="2" ry="2" />
<text  x="760.00" y="1839.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (1 samples, 0.02%)</title><rect x="106.8" y="1829" width="0.2" height="15.0" fill="rgb(253,20,6)" rx="2" ry="2" />
<text  x="109.82" y="1839.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;locator::snitch_ptr&gt;::local (4 samples, 0.08%)</title><rect x="1074.4" y="1733" width="0.8" height="15.0" fill="rgb(232,93,5)" rx="2" ry="2" />
<text  x="1077.35" y="1743.5" ></text>
</g>
<g >
<title>std::make_unique&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;, seastar::lw_shared_ptr&lt;schema const&gt;, reader_permit, dht::decorated_key, partition_snapshot_ptr&amp;, query::clustering_key_filter_ranges, bool&amp;, logalloc::region&amp;, logalloc::allocating_section&amp;, boost::any, memtable&amp;&gt; (1 samples, 0.02%)</title><rect x="541.2" y="1749" width="0.2" height="15.0" fill="rgb(210,29,1)" rx="2" ry="2" />
<text  x="544.17" y="1759.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_size_estimates_virtual_reader.cc (4 samples, 0.08%)</title><rect x="83.7" y="2053" width="0.9" height="15.0" fill="rgb(206,166,14)" rx="2" ry="2" />
<text  x="86.74" y="2063.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_Optional_payload_base (1 samples, 0.02%)</title><rect x="569.2" y="1845" width="0.2" height="15.0" fill="rgb(224,51,17)" rx="2" ry="2" />
<text  x="572.18" y="1855.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (14 samples, 0.27%)</title><rect x="1186.2" y="1573" width="3.1" height="15.0" fill="rgb(220,58,27)" rx="2" ry="2" />
<text  x="1189.19" y="1583.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::operator= (1 samples, 0.02%)</title><rect x="54.4" y="1701" width="0.2" height="15.0" fill="rgb(254,194,4)" rx="2" ry="2" />
<text  x="57.38" y="1711.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_Vector_impl::_Vector_impl (1 samples, 0.02%)</title><rect x="64.2" y="1669" width="0.3" height="15.0" fill="rgb(228,223,8)" rx="2" ry="2" />
<text  x="67.24" y="1679.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::clear (1 samples, 0.02%)</title><rect x="956.0" y="1797" width="0.2" height="15.0" fill="rgb(209,136,17)" rx="2" ry="2" />
<text  x="959.02" y="1807.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.08%)</title><rect x="600.1" y="1829" width="0.9" height="15.0" fill="rgb(206,152,20)" rx="2" ry="2" />
<text  x="603.11" y="1839.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::future (2 samples, 0.04%)</title><rect x="966.8" y="1781" width="0.4" height="15.0" fill="rgb(226,37,54)" rx="2" ry="2" />
<text  x="969.77" y="1791.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (2 samples, 0.04%)</title><rect x="63.3" y="1605" width="0.5" height="15.0" fill="rgb(212,207,1)" rx="2" ry="2" />
<text  x="66.34" y="1615.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="630.8" y="1813" width="0.2" height="15.0" fill="rgb(254,140,37)" rx="2" ry="2" />
<text  x="633.82" y="1823.5" ></text>
</g>
<g >
<title>allocation_strategy::alloc&lt;blob_storage&gt; (4 samples, 0.08%)</title><rect x="232.8" y="1493" width="0.9" height="15.0" fill="rgb(209,220,29)" rx="2" ry="2" />
<text  x="235.78" y="1503.5" ></text>
</g>
<g >
<title>cql3::query_options::query_options (22 samples, 0.42%)</title><rect x="833.4" y="1861" width="5.0" height="15.0" fill="rgb(242,33,40)" rx="2" ry="2" />
<text  x="836.42" y="1871.5" ></text>
</g>
<g >
<title>cql3::query_processor::parse_statement (203 samples, 3.86%)</title><rect x="23.4" y="1893" width="45.5" height="15.0" fill="rgb(216,87,20)" rx="2" ry="2" />
<text  x="26.45" y="1903.5" >cql3..</text>
</g>
<g >
<title>compound_type&lt; (10 samples, 0.19%)</title><rect x="904.5" y="1797" width="2.2" height="15.0" fill="rgb(246,120,27)" rx="2" ry="2" />
<text  x="907.47" y="1807.5" ></text>
</g>
<g >
<title>basic_atomic_cell_view&lt; (23 samples, 0.44%)</title><rect x="416.3" y="1589" width="5.2" height="15.0" fill="rgb(226,9,44)" rx="2" ry="2" />
<text  x="419.33" y="1599.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="687.7" y="1765" width="0.3" height="15.0" fill="rgb(239,80,45)" rx="2" ry="2" />
<text  x="690.74" y="1775.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (3 samples, 0.06%)</title><rect x="704.6" y="1877" width="0.6" height="15.0" fill="rgb(244,205,37)" rx="2" ry="2" />
<text  x="707.55" y="1887.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;::unique_ptr&lt;cql3::operation::set_value, std::default_delete&lt;cql3::operation::set_value&gt;, void&gt; (2 samples, 0.04%)</title><rect x="62.4" y="1733" width="0.5" height="15.0" fill="rgb(208,75,2)" rx="2" ry="2" />
<text  x="65.44" y="1743.5" ></text>
</g>
<g >
<title>executor&lt;test_read (553 samples, 10.50%)</title><rect x="720.5" y="1909" width="123.9" height="15.0" fill="rgb(238,228,22)" rx="2" ry="2" />
<text  x="723.47" y="1919.5" >executor&lt;test_r..</text>
</g>
<g >
<title>cql3_parser::CqlParser::relation (9 samples, 0.17%)</title><rect x="63.8" y="1765" width="2.0" height="15.0" fill="rgb(215,92,6)" rx="2" ry="2" />
<text  x="66.79" y="1775.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::~__si_class_type_info (25 samples, 0.47%)</title><rect x="12.2" y="2037" width="5.6" height="15.0" fill="rgb(236,103,52)" rx="2" ry="2" />
<text  x="15.24" y="2047.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="538.7" y="1685" width="0.2" height="15.0" fill="rgb(239,112,23)" rx="2" ry="2" />
<text  x="541.70" y="1695.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_create_nodes (12 samples, 0.23%)</title><rect x="564.7" y="1781" width="2.7" height="15.0" fill="rgb(254,26,44)" rx="2" ry="2" />
<text  x="567.70" y="1791.5" ></text>
</g>
<g >
<title>logalloc::region_impl::object_memory_size_in_allocator (1 samples, 0.02%)</title><rect x="1187.3" y="37" width="0.2" height="15.0" fill="rgb(252,76,50)" rx="2" ry="2" />
<text  x="1190.31" y="47.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::clear (5 samples, 0.09%)</title><rect x="658.2" y="1909" width="1.1" height="15.0" fill="rgb(243,190,10)" rx="2" ry="2" />
<text  x="661.16" y="1919.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="75.0" y="1717" width="0.2" height="15.0" fill="rgb(217,192,52)" rx="2" ry="2" />
<text  x="78.00" y="1727.5" ></text>
</g>
<g >
<title>query::result_set::result_set (1 samples, 0.02%)</title><rect x="108.2" y="1909" width="0.2" height="15.0" fill="rgb(209,26,19)" rx="2" ry="2" />
<text  x="111.17" y="1919.5" ></text>
</g>
<g >
<title>tombstone::apply (3 samples, 0.06%)</title><rect x="425.5" y="1621" width="0.7" height="15.0" fill="rgb(238,153,53)" rx="2" ry="2" />
<text  x="428.52" y="1631.5" ></text>
</g>
<g >
<title>service::client_state::ensure_has_permission (5 samples, 0.09%)</title><rect x="79.5" y="1845" width="1.1" height="15.0" fill="rgb(250,185,5)" rx="2" ry="2" />
<text  x="82.48" y="1855.5" ></text>
</g>
<g >
<title>table::compact_sstables (1 samples, 0.02%)</title><rect x="1131.3" y="1893" width="0.2" height="15.0" fill="rgb(251,38,25)" rx="2" ry="2" />
<text  x="1134.28" y="1903.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::push_mutation_fragment&lt;mutation_fragment&gt; (5 samples, 0.09%)</title><rect x="200.7" y="1669" width="1.1" height="15.0" fill="rgb(237,3,46)" rx="2" ry="2" />
<text  x="203.73" y="1679.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::operator (2 samples, 0.04%)</title><rect x="107.5" y="1573" width="0.4" height="15.0" fill="rgb(211,63,14)" rx="2" ry="2" />
<text  x="110.49" y="1583.5" ></text>
</g>
<g >
<title>operator delete (6 samples, 0.11%)</title><rect x="118.5" y="1877" width="1.3" height="15.0" fill="rgb(231,96,29)" rx="2" ry="2" />
<text  x="121.47" y="1887.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::net::inet_address&gt;::operator (1 samples, 0.02%)</title><rect x="1143.8" y="1829" width="0.3" height="15.0" fill="rgb(251,175,34)" rx="2" ry="2" />
<text  x="1146.83" y="1839.5" ></text>
</g>
<g >
<title>abstract_type::bound_value_needs_to_be_reserialized (3 samples, 0.06%)</title><rect x="881.6" y="1717" width="0.7" height="15.0" fill="rgb(252,146,35)" rx="2" ry="2" />
<text  x="884.61" y="1727.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::allocator&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::__detail::_Identity, std::equal_to&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::hash&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;::find (1 samples, 0.02%)</title><rect x="76.6" y="1765" width="0.2" height="15.0" fill="rgb(207,217,49)" rx="2" ry="2" />
<text  x="79.56" y="1775.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mT__199 (1 samples, 0.02%)</title><rect x="40.0" y="1685" width="0.3" height="15.0" fill="rgb(212,46,7)" rx="2" ry="2" />
<text  x="43.03" y="1695.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.06%)</title><rect x="930.5" y="1781" width="0.6" height="15.0" fill="rgb(209,108,23)" rx="2" ry="2" />
<text  x="933.47" y="1791.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (3 samples, 0.06%)</title><rect x="799.4" y="1653" width="0.6" height="15.0" fill="rgb(208,76,36)" rx="2" ry="2" />
<text  x="802.36" y="1663.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="1025.7" y="1685" width="0.2" height="15.0" fill="rgb(210,101,33)" rx="2" ry="2" />
<text  x="1028.72" y="1695.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::followPop (1 samples, 0.02%)</title><rect x="57.5" y="1701" width="0.2" height="15.0" fill="rgb(223,183,17)" rx="2" ry="2" />
<text  x="60.51" y="1711.5" ></text>
</g>
<g >
<title>schema::schema (1 samples, 0.02%)</title><rect x="20.1" y="1605" width="0.2" height="15.0" fill="rgb(249,170,5)" rx="2" ry="2" />
<text  x="23.09" y="1615.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;cql3::restrictions::single_column_restriction, false&gt;::make&lt;column_definition const&amp;&gt; (1 samples, 0.02%)</title><rect x="73.7" y="1781" width="0.2" height="15.0" fill="rgb(246,25,3)" rx="2" ry="2" />
<text  x="76.65" y="1791.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_map&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::at&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt; &gt; (1 samples, 0.02%)</title><rect x="77.2" y="1813" width="0.3" height="15.0" fill="rgb(238,84,25)" rx="2" ry="2" />
<text  x="80.24" y="1823.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (2 samples, 0.04%)</title><rect x="1023.0" y="1701" width="0.5" height="15.0" fill="rgb(222,62,3)" rx="2" ry="2" />
<text  x="1026.03" y="1711.5" ></text>
</g>
<g >
<title>std::vector&lt;std::unique_ptr&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, std::default_delete&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;, std::allocator&lt;std::unique_ptr&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, std::default_delete&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt; &gt; &gt;::vector (1 samples, 0.02%)</title><rect x="24.6" y="1829" width="0.2" height="15.0" fill="rgb(222,87,7)" rx="2" ry="2" />
<text  x="27.57" y="1839.5" ></text>
</g>
<g >
<title>service::storage_proxy::query (599 samples, 11.38%)</title><rect x="947.1" y="1829" width="134.2" height="15.0" fill="rgb(213,40,34)" rx="2" ry="2" />
<text  x="950.05" y="1839.5" >service::storage..</text>
</g>
<g >
<title>std::apply&lt;auth::get_permissions (106 samples, 2.01%)</title><rect x="776.7" y="1717" width="23.8" height="15.0" fill="rgb(250,153,8)" rx="2" ry="2" />
<text  x="779.72" y="1727.5" >s..</text>
</g>
<g >
<title>compact_mutation_state&lt; (10 samples, 0.19%)</title><rect x="338.1" y="1669" width="2.3" height="15.0" fill="rgb(212,0,35)" rx="2" ry="2" />
<text  x="341.11" y="1679.5" ></text>
</g>
<g >
<title>mutation_reader_merger::mutation_reader_merger (35 samples, 0.66%)</title><rect x="468.3" y="1733" width="7.9" height="15.0" fill="rgb(220,61,44)" rx="2" ry="2" />
<text  x="471.33" y="1743.5" ></text>
</g>
<g >
<title>locator::token_metadata_impl::first_token_index (35 samples, 0.66%)</title><rect x="1057.1" y="1685" width="7.8" height="15.0" fill="rgb(243,22,42)" rx="2" ry="2" />
<text  x="1060.10" y="1695.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::get0 (1 samples, 0.02%)</title><rect x="168.9" y="1797" width="0.2" height="15.0" fill="rgb(218,94,25)" rx="2" ry="2" />
<text  x="171.90" y="1807.5" ></text>
</g>
<g >
<title>cql3::query_options::fill_value_views (15 samples, 0.28%)</title><rect x="834.3" y="1829" width="3.4" height="15.0" fill="rgb(243,128,6)" rx="2" ry="2" />
<text  x="837.32" y="1839.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.08%)</title><rect x="556.0" y="1733" width="0.9" height="15.0" fill="rgb(214,22,15)" rx="2" ry="2" />
<text  x="558.96" y="1743.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.02%)</title><rect x="219.8" y="1557" width="0.2" height="15.0" fill="rgb(227,40,40)" rx="2" ry="2" />
<text  x="222.78" y="1567.5" ></text>
</g>
<g >
<title>std::_Optional_payload&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, false, false, false&gt;::operator= (1 samples, 0.02%)</title><rect x="47.9" y="1701" width="0.2" height="15.0" fill="rgb(207,128,50)" rx="2" ry="2" />
<text  x="50.88" y="1711.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;void&gt;::satisfy_with_result_of&lt;seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::then_wrapped_nrvo&lt;void, service::abstract_read_executor::make_data_requests (64 samples, 1.22%)</title><rect x="700.5" y="1909" width="14.4" height="15.0" fill="rgb(239,19,3)" rx="2" ry="2" />
<text  x="703.52" y="1919.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="141.3" y="1877" width="0.3" height="15.0" fill="rgb(246,13,24)" rx="2" ry="2" />
<text  x="144.34" y="1887.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="819.5" y="1861" width="0.3" height="15.0" fill="rgb(248,131,48)" rx="2" ry="2" />
<text  x="822.53" y="1871.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::move_it (2 samples, 0.04%)</title><rect x="684.6" y="1893" width="0.5" height="15.0" fill="rgb(250,189,26)" rx="2" ry="2" />
<text  x="687.61" y="1903.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_M_reset (1 samples, 0.02%)</title><rect x="925.3" y="1813" width="0.2" height="15.0" fill="rgb(252,145,28)" rx="2" ry="2" />
<text  x="928.31" y="1823.5" ></text>
</g>
<g >
<title>absl::container_internal::operator== (1 samples, 0.02%)</title><rect x="811.7" y="1749" width="0.2" height="15.0" fill="rgb(205,3,37)" rx="2" ry="2" />
<text  x="814.68" y="1759.5" ></text>
</g>
<g >
<title>row_marker::compact_and_expire (5 samples, 0.09%)</title><rect x="424.4" y="1637" width="1.1" height="15.0" fill="rgb(221,50,46)" rx="2" ry="2" />
<text  x="427.40" y="1647.5" ></text>
</g>
<g >
<title>_ZSt5applyIZN7seastar8internal12do_with_implIRKNS0_13basic_sstringIcjLj15ELb1EEEN4auth8resourceEJZNK7service12client_state24has_column_family_accessERK8databaseS6_S6_NS7_10permissionENS7_12command_desc4typeEE3$_4EEEDaOT_OT0_DpOT1_EUlDpOT_E_St5tupleIJS6_OS8_EEEDcSJ_SL_ (7 samples, 0.13%)</title><rect x="765.7" y="1813" width="1.6" height="15.0" fill="rgb(250,59,26)" rx="2" ry="2" />
<text  x="768.74" y="1823.5" ></text>
</g>
<g >
<title>cql3::restrictions::partition_key_restrictions::merge_to (3 samples, 0.06%)</title><rect x="74.3" y="1781" width="0.7" height="15.0" fill="rgb(238,103,51)" rx="2" ry="2" />
<text  x="77.32" y="1791.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (2 samples, 0.04%)</title><rect x="107.5" y="1605" width="0.4" height="15.0" fill="rgb(218,90,17)" rx="2" ry="2" />
<text  x="110.49" y="1615.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (9 samples, 0.17%)</title><rect x="986.3" y="1669" width="2.0" height="15.0" fill="rgb(226,172,35)" rx="2" ry="2" />
<text  x="989.27" y="1679.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt; (1 samples, 0.02%)</title><rect x="54.4" y="1653" width="0.2" height="15.0" fill="rgb(235,78,35)" rx="2" ry="2" />
<text  x="57.38" y="1663.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;service::storage_proxy_coordinator_query_result&gt;, seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::finally_body&lt;service::storage_proxy::do_query (53 samples, 1.01%)</title><rect x="675.0" y="1925" width="11.8" height="15.0" fill="rgb(214,161,1)" rx="2" ry="2" />
<text  x="677.97" y="1935.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (1 samples, 0.02%)</title><rect x="954.9" y="1797" width="0.2" height="15.0" fill="rgb(234,171,14)" rx="2" ry="2" />
<text  x="957.90" y="1807.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_M_set_node (1 samples, 0.02%)</title><rect x="53.0" y="1557" width="0.3" height="15.0" fill="rgb(237,101,36)" rx="2" ry="2" />
<text  x="56.03" y="1567.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.02%)</title><rect x="49.4" y="1589" width="0.3" height="15.0" fill="rgb(219,222,13)" rx="2" ry="2" />
<text  x="52.45" y="1599.5" ></text>
</g>
<g >
<title>auth::create_metadata_table_if_missing (1 samples, 0.02%)</title><rect x="688.0" y="1861" width="0.2" height="15.0" fill="rgb(242,107,2)" rx="2" ry="2" />
<text  x="690.97" y="1871.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_rec (1 samples, 0.02%)</title><rect x="25.2" y="1813" width="0.3" height="15.0" fill="rgb(252,166,37)" rx="2" ry="2" />
<text  x="28.24" y="1823.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::query_state&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="1132.6" y="1925" width="0.2" height="15.0" fill="rgb(221,60,23)" rx="2" ry="2" />
<text  x="1135.62" y="1935.5" ></text>
</g>
<g >
<title>query::result::builder::builder (2 samples, 0.04%)</title><rect x="607.5" y="1861" width="0.5" height="15.0" fill="rgb(253,193,13)" rx="2" ry="2" />
<text  x="610.51" y="1871.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (11 samples, 0.21%)</title><rect x="662.4" y="1909" width="2.5" height="15.0" fill="rgb(216,86,27)" rx="2" ry="2" />
<text  x="665.42" y="1919.5" ></text>
</g>
<g >
<title>__tls_init (1 samples, 0.02%)</title><rect x="524.8" y="1669" width="0.2" height="15.0" fill="rgb(243,67,13)" rx="2" ry="2" />
<text  x="527.81" y="1679.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;boost::iterator_range&lt;mutation_fragment*&gt; &gt;::take_value (2 samples, 0.04%)</title><rect x="304.3" y="1733" width="0.4" height="15.0" fill="rgb(243,170,52)" rx="2" ry="2" />
<text  x="307.27" y="1743.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume_in_thread&lt;sstables::sstable_writer&gt; (2 samples, 0.04%)</title><rect x="1188.4" y="149" width="0.5" height="15.0" fill="rgb(226,5,9)" rx="2" ry="2" />
<text  x="1191.43" y="159.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::unique_ptr&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, std::default_delete&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;, std::allocator&lt;std::unique_ptr&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, std::default_delete&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt; &gt; &gt;::_Vector_impl::_Vector_impl (1 samples, 0.02%)</title><rect x="24.6" y="1797" width="0.2" height="15.0" fill="rgb(220,8,11)" rx="2" ry="2" />
<text  x="27.57" y="1807.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (9 samples, 0.17%)</title><rect x="1187.3" y="277" width="2.0" height="15.0" fill="rgb(232,212,9)" rx="2" ry="2" />
<text  x="1190.31" y="287.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (6 samples, 0.11%)</title><rect x="1126.3" y="1557" width="1.4" height="15.0" fill="rgb(235,105,10)" rx="2" ry="2" />
<text  x="1129.35" y="1567.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::do_execute (1,107 samples, 21.03%)</title><rect x="865.0" y="1861" width="248.1" height="15.0" fill="rgb(252,88,49)" rx="2" ry="2" />
<text  x="868.02" y="1871.5" >cql3::statements::select_statemen..</text>
</g>
<g >
<title>seastar::async&lt;sstables::compaction::run&lt;noop_compacted_fragments_consumer&gt; (1 samples, 0.02%)</title><rect x="1131.3" y="1845" width="0.2" height="15.0" fill="rgb(252,203,14)" rx="2" ry="2" />
<text  x="1134.28" y="1855.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_Optional_payload_base (1 samples, 0.02%)</title><rect x="624.1" y="1861" width="0.2" height="15.0" fill="rgb(218,43,6)" rx="2" ry="2" />
<text  x="627.09" y="1871.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (1 samples, 0.02%)</title><rect x="49.7" y="1701" width="0.2" height="15.0" fill="rgb(215,73,4)" rx="2" ry="2" />
<text  x="52.67" y="1711.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_pausable_in_thread&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;sstables::sstable_writer&gt; &gt;, flat_mutation_reader::no_filter&gt; (1 samples, 0.02%)</title><rect x="1186.4" y="213" width="0.2" height="15.0" fill="rgb(209,7,16)" rx="2" ry="2" />
<text  x="1189.41" y="223.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::mutation_fragment_merger (10 samples, 0.19%)</title><rect x="481.3" y="1701" width="2.3" height="15.0" fill="rgb(207,106,41)" rx="2" ry="2" />
<text  x="484.33" y="1711.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate (1 samples, 0.02%)</title><rect x="848.0" y="1797" width="0.2" height="15.0" fill="rgb(209,32,6)" rx="2" ry="2" />
<text  x="850.99" y="1807.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (5 samples, 0.09%)</title><rect x="661.3" y="1909" width="1.1" height="15.0" fill="rgb(254,92,19)" rx="2" ry="2" />
<text  x="664.30" y="1919.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (1 samples, 0.02%)</title><rect x="638.7" y="1893" width="0.2" height="15.0" fill="rgb(211,123,3)" rx="2" ry="2" />
<text  x="641.66" y="1903.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="1123.9" y="1605" width="0.2" height="15.0" fill="rgb(254,151,45)" rx="2" ry="2" />
<text  x="1126.88" y="1615.5" ></text>
</g>
<g >
<title>__tls_init (1 samples, 0.02%)</title><rect x="199.4" y="1653" width="0.2" height="15.0" fill="rgb(245,20,47)" rx="2" ry="2" />
<text  x="202.38" y="1663.5" ></text>
</g>
<g >
<title>seastar::internal::future_base::do_wait (1 samples, 0.02%)</title><rect x="21.2" y="1941" width="0.2" height="15.0" fill="rgb(208,88,3)" rx="2" ry="2" />
<text  x="24.21" y="1951.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::~unique_ptr (3 samples, 0.06%)</title><rect x="896.0" y="1749" width="0.6" height="15.0" fill="rgb(216,133,0)" rx="2" ry="2" />
<text  x="898.95" y="1759.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::signal (1 samples, 0.02%)</title><rect x="427.5" y="1653" width="0.3" height="15.0" fill="rgb(250,216,12)" rx="2" ry="2" />
<text  x="430.54" y="1663.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::get0 (2 samples, 0.04%)</title><rect x="616.0" y="1861" width="0.5" height="15.0" fill="rgb(214,77,49)" rx="2" ry="2" />
<text  x="619.02" y="1871.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (3 samples, 0.06%)</title><rect x="50.3" y="1701" width="0.7" height="15.0" fill="rgb(212,185,52)" rx="2" ry="2" />
<text  x="53.34" y="1711.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, cql3::operation::raw_update*, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; (1 samples, 0.02%)</title><rect x="55.5" y="1493" width="0.2" height="15.0" fill="rgb(238,156,30)" rx="2" ry="2" />
<text  x="58.50" y="1503.5" ></text>
</g>
<g >
<title>seastar::repeat&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (683 samples, 12.97%)</title><rect x="169.4" y="1797" width="153.0" height="15.0" fill="rgb(247,203,54)" rx="2" ry="2" />
<text  x="172.35" y="1807.5" >seastar::repeat&lt;mer..</text>
</g>
<g >
<title>db::schema_tables::diff_table_or_view (1 samples, 0.02%)</title><rect x="107.0" y="1893" width="0.3" height="15.0" fill="rgb(230,10,20)" rx="2" ry="2" />
<text  x="110.04" y="1903.5" ></text>
</g>
<g >
<title>std::__make_heap&lt;__gnu_cxx::__normal_iterator&lt;boost::iterator_range&lt;boost::intrusive::tree_iterator&lt;boost::intrusive::mhtraits&lt;range_tombstone_entry, boost::intrusive::set_member_hook&lt;boost::intrusive::link_mode&lt; (2 samples, 0.04%)</title><rect x="284.8" y="1637" width="0.4" height="15.0" fill="rgb(239,223,13)" rx="2" ry="2" />
<text  x="287.77" y="1647.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::~small_vector (5 samples, 0.09%)</title><rect x="478.4" y="1717" width="1.1" height="15.0" fill="rgb(205,61,30)" rx="2" ry="2" />
<text  x="481.41" y="1727.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::move_it (1 samples, 0.02%)</title><rect x="78.4" y="1893" width="0.2" height="15.0" fill="rgb(206,132,43)" rx="2" ry="2" />
<text  x="81.36" y="1903.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::impl (4 samples, 0.08%)</title><rect x="522.3" y="1701" width="0.9" height="15.0" fill="rgb(217,17,44)" rx="2" ry="2" />
<text  x="525.34" y="1711.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::get_bound_terms (1 samples, 0.02%)</title><rect x="726.5" y="1877" width="0.2" height="15.0" fill="rgb(223,106,5)" rx="2" ry="2" />
<text  x="729.52" y="1887.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (1 samples, 0.02%)</title><rect x="698.3" y="1893" width="0.2" height="15.0" fill="rgb(210,77,16)" rx="2" ry="2" />
<text  x="701.28" y="1903.5" ></text>
</g>
<g >
<title>reader_selector::has_new_readers (1 samples, 0.02%)</title><rect x="475.9" y="1717" width="0.3" height="15.0" fill="rgb(218,124,40)" rx="2" ry="2" />
<text  x="478.95" y="1727.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (22 samples, 0.42%)</title><rect x="745.3" y="1781" width="5.0" height="15.0" fill="rgb(247,76,40)" rx="2" ry="2" />
<text  x="748.34" y="1791.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;::~basic_sstring (1 samples, 0.02%)</title><rect x="674.3" y="1845" width="0.2" height="15.0" fill="rgb(220,31,50)" rx="2" ry="2" />
<text  x="677.30" y="1855.5" ></text>
</g>
<g >
<title>validation::validate_keyspace (2 samples, 0.04%)</title><rect x="80.8" y="1861" width="0.5" height="15.0" fill="rgb(254,44,9)" rx="2" ry="2" />
<text  x="83.82" y="1871.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (6 samples, 0.11%)</title><rect x="662.4" y="1893" width="1.4" height="15.0" fill="rgb(228,53,7)" rx="2" ry="2" />
<text  x="665.42" y="1903.5" ></text>
</g>
<g >
<title>std::pair&lt;auth::role_or_anonymous, auth::resource&gt;::pair&lt;auth::role_or_anonymous, auth::resource, true&gt; (5 samples, 0.09%)</title><rect x="796.0" y="1685" width="1.1" height="15.0" fill="rgb(218,55,5)" rx="2" ry="2" />
<text  x="798.99" y="1695.5" ></text>
</g>
<g >
<title>std::hash&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::operator (1 samples, 0.02%)</title><rect x="760.6" y="1765" width="0.2" height="15.0" fill="rgb(237,39,32)" rx="2" ry="2" />
<text  x="763.58" y="1775.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_token (1 samples, 0.02%)</title><rect x="650.5" y="1861" width="0.3" height="15.0" fill="rgb(210,89,25)" rx="2" ry="2" />
<text  x="653.54" y="1871.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::operator== (1 samples, 0.02%)</title><rect x="787.9" y="1557" width="0.3" height="15.0" fill="rgb(225,47,53)" rx="2" ry="2" />
<text  x="790.93" y="1567.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, enum_set&lt;super_enum&lt;auth::permission,  (1 samples, 0.02%)</title><rect x="79.9" y="1717" width="0.3" height="15.0" fill="rgb(234,69,39)" rx="2" ry="2" />
<text  x="82.93" y="1727.5" ></text>
</g>
<g >
<title>std::operator+ (3 samples, 0.06%)</title><rect x="61.1" y="1525" width="0.7" height="15.0" fill="rgb(217,87,24)" rx="2" ry="2" />
<text  x="64.10" y="1535.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="1136.2" y="1893" width="0.2" height="15.0" fill="rgb(252,161,7)" rx="2" ry="2" />
<text  x="1139.21" y="1903.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_Vector_base (1 samples, 0.02%)</title><rect x="58.0" y="1669" width="0.2" height="15.0" fill="rgb(217,41,2)" rx="2" ry="2" />
<text  x="60.96" y="1679.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::~deque (6 samples, 0.11%)</title><rect x="625.7" y="1829" width="1.3" height="15.0" fill="rgb(246,161,40)" rx="2" ry="2" />
<text  x="628.66" y="1839.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_M_reset (1 samples, 0.02%)</title><rect x="798.7" y="1669" width="0.2" height="15.0" fill="rgb(208,51,26)" rx="2" ry="2" />
<text  x="801.68" y="1679.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::take_value (2 samples, 0.04%)</title><rect x="115.6" y="1893" width="0.4" height="15.0" fill="rgb(215,153,6)" rx="2" ry="2" />
<text  x="118.56" y="1903.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::allocate (1 samples, 0.02%)</title><rect x="28.4" y="1653" width="0.2" height="15.0" fill="rgb(210,26,34)" rx="2" ry="2" />
<text  x="31.38" y="1663.5" ></text>
</g>
<g >
<title>std::__optional_hash_call_base&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, true&gt;::operator (2 samples, 0.04%)</title><rect x="794.6" y="1509" width="0.5" height="15.0" fill="rgb(251,77,11)" rx="2" ry="2" />
<text  x="797.65" y="1519.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (1 samples, 0.02%)</title><rect x="817.3" y="1845" width="0.2" height="15.0" fill="rgb(210,17,19)" rx="2" ry="2" />
<text  x="820.29" y="1855.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (1 samples, 0.02%)</title><rect x="715.3" y="1909" width="0.2" height="15.0" fill="rgb(252,14,36)" rx="2" ry="2" />
<text  x="718.31" y="1919.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.02%)</title><rect x="64.2" y="1717" width="0.3" height="15.0" fill="rgb(218,24,21)" rx="2" ry="2" />
<text  x="67.24" y="1727.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.04%)</title><rect x="670.5" y="1893" width="0.4" height="15.0" fill="rgb(209,9,22)" rx="2" ry="2" />
<text  x="673.49" y="1903.5" ></text>
</g>
<g >
<title>_ZN7seastar12continuationINS_8internal22promise_base_with_typeIvEEZNS_6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE14discard_resultEvEUlDpOT_E_ZNSA_14then_impl_nrvoISE_NS4_IvEEEET0_OT_EUlOS3_RSE_ONS_12future_stateIS9_EEE_S9_E15run_and_disposeEv (45 samples, 0.85%)</title><rect x="93.4" y="1925" width="10.1" height="15.0" fill="rgb(250,115,17)" rx="2" ry="2" />
<text  x="96.37" y="1935.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.02%)</title><rect x="10.7" y="2005" width="0.2" height="15.0" fill="rgb(217,195,3)" rx="2" ry="2" />
<text  x="13.67" y="2015.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;reader_permit::impl, true&gt;::make&lt;reader_concurrency_semaphore&amp;, schema const* const&amp;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;&amp;, reader_resources&amp;, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;&amp;&gt; (4 samples, 0.08%)</title><rect x="1017.2" y="1653" width="0.9" height="15.0" fill="rgb(207,195,0)" rx="2" ry="2" />
<text  x="1020.20" y="1663.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume_in_thread&lt;sstables::sstable_writer, flat_mutation_reader::no_filter&gt; (2 samples, 0.04%)</title><rect x="1186.6" y="229" width="0.5" height="15.0" fill="rgb(214,123,9)" rx="2" ry="2" />
<text  x="1189.64" y="239.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit_slot&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::memory_usage&lt;row::external_memory_usage (17 samples, 0.32%)</title><rect x="254.5" y="1541" width="3.8" height="15.0" fill="rgb(240,213,35)" rx="2" ry="2" />
<text  x="257.52" y="1551.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;managed_bytes&gt;::allocate (1 samples, 0.02%)</title><rect x="851.4" y="1765" width="0.2" height="15.0" fill="rgb(253,185,17)" rx="2" ry="2" />
<text  x="854.35" y="1775.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::~CqlParser (1 samples, 0.02%)</title><rect x="24.8" y="1845" width="0.2" height="15.0" fill="rgb(219,205,45)" rx="2" ry="2" />
<text  x="27.79" y="1855.5" ></text>
</g>
<g >
<title>std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;std::optional&lt;auth::resource&gt; &gt;, seastar::future&lt;bool&gt; &gt; &gt;::operator (3 samples, 0.06%)</title><rect x="802.7" y="1733" width="0.7" height="15.0" fill="rgb(220,171,34)" rx="2" ry="2" />
<text  x="805.72" y="1743.5" ></text>
</g>
<g >
<title>antlr3::Lexer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getCharIndex (1 samples, 0.02%)</title><rect x="33.8" y="1669" width="0.2" height="15.0" fill="rgb(222,19,44)" rx="2" ry="2" />
<text  x="36.76" y="1679.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (3 samples, 0.06%)</title><rect x="319.7" y="1701" width="0.7" height="15.0" fill="rgb(223,119,25)" rx="2" ry="2" />
<text  x="322.74" y="1711.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::vector (1 samples, 0.02%)</title><rect x="52.1" y="1733" width="0.3" height="15.0" fill="rgb(230,97,27)" rx="2" ry="2" />
<text  x="55.13" y="1743.5" ></text>
</g>
<g >
<title>utils::murmur_hash::hash3_x64_128&lt;legacy_compound_view&lt;compound_type&lt; (40 samples, 0.76%)</title><rect x="909.6" y="1797" width="9.0" height="15.0" fill="rgb(237,72,51)" rx="2" ry="2" />
<text  x="912.62" y="1807.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::do_fill_buffer (1 samples, 0.02%)</title><rect x="845.5" y="1893" width="0.2" height="15.0" fill="rgb(244,49,5)" rx="2" ry="2" />
<text  x="848.53" y="1903.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (9 samples, 0.17%)</title><rect x="471.2" y="1653" width="2.1" height="15.0" fill="rgb(246,182,31)" rx="2" ry="2" />
<text  x="474.24" y="1663.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (2 samples, 0.04%)</title><rect x="44.5" y="1717" width="0.5" height="15.0" fill="rgb(235,91,25)" rx="2" ry="2" />
<text  x="47.51" y="1727.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;cql3::statements::update_statement, false&gt;::make&lt;cql3::statements::statement_type const&amp;, unsigned long, seastar::lw_shared_ptr&lt;schema const&gt;&amp;, std::unique_ptr&lt;cql3::attributes, std::default_delete&lt;cql3::attributes&gt; &gt;, cql3::cql_stats&amp;&gt; (1 samples, 0.02%)</title><rect x="76.6" y="1845" width="0.2" height="15.0" fill="rgb(244,64,48)" rx="2" ry="2" />
<text  x="79.56" y="1855.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.02%)</title><rect x="1187.1" y="245" width="0.2" height="15.0" fill="rgb(245,223,54)" rx="2" ry="2" />
<text  x="1190.09" y="255.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.06%)</title><rect x="671.4" y="1877" width="0.7" height="15.0" fill="rgb(246,35,7)" rx="2" ry="2" />
<text  x="674.38" y="1887.5" ></text>
</g>
<g >
<title>std::function&lt;flat_mutation_reader  (431 samples, 8.19%)</title><rect x="460.3" y="1813" width="96.6" height="15.0" fill="rgb(252,154,43)" rx="2" ry="2" />
<text  x="463.26" y="1823.5" >std::functi..</text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (1 samples, 0.02%)</title><rect x="787.9" y="1573" width="0.3" height="15.0" fill="rgb(221,124,28)" rx="2" ry="2" />
<text  x="790.93" y="1583.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (1 samples, 0.02%)</title><rect x="518.5" y="1733" width="0.3" height="15.0" fill="rgb(233,95,47)" rx="2" ry="2" />
<text  x="521.53" y="1743.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::hasException (3 samples, 0.06%)</title><rect x="45.4" y="1781" width="0.7" height="15.0" fill="rgb(233,130,0)" rx="2" ry="2" />
<text  x="48.41" y="1791.5" ></text>
</g>
<g >
<title>mutation_querier::prepare_writers (1 samples, 0.02%)</title><rect x="339.5" y="1621" width="0.2" height="15.0" fill="rgb(212,113,23)" rx="2" ry="2" />
<text  x="342.46" y="1631.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (1 samples, 0.02%)</title><rect x="1053.7" y="1749" width="0.3" height="15.0" fill="rgb(232,162,15)" rx="2" ry="2" />
<text  x="1056.73" y="1759.5" ></text>
</g>
<g >
<title>operator delete (5 samples, 0.09%)</title><rect x="447.7" y="1685" width="1.1" height="15.0" fill="rgb(234,207,41)" rx="2" ry="2" />
<text  x="450.71" y="1695.5" ></text>
</g>
<g >
<title>logalloc::region_impl::alloc (1 samples, 0.02%)</title><rect x="19.4" y="1845" width="0.2" height="15.0" fill="rgb(209,59,19)" rx="2" ry="2" />
<text  x="22.41" y="1855.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (1 samples, 0.02%)</title><rect x="795.5" y="1653" width="0.3" height="15.0" fill="rgb(221,75,35)" rx="2" ry="2" />
<text  x="798.55" y="1663.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.02%)</title><rect x="1186.2" y="101" width="0.2" height="15.0" fill="rgb(224,87,14)" rx="2" ry="2" />
<text  x="1189.19" y="111.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.02%)</title><rect x="25.0" y="1781" width="0.2" height="15.0" fill="rgb(206,45,25)" rx="2" ry="2" />
<text  x="28.02" y="1791.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.04%)</title><rect x="575.7" y="1749" width="0.4" height="15.0" fill="rgb(223,64,3)" rx="2" ry="2" />
<text  x="578.68" y="1759.5" ></text>
</g>
<g >
<title>sstring_hash::operator (1 samples, 0.02%)</title><rect x="815.9" y="1733" width="0.3" height="15.0" fill="rgb(230,126,46)" rx="2" ry="2" />
<text  x="818.94" y="1743.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::pop_mutation_fragment (3 samples, 0.06%)</title><rect x="184.8" y="1669" width="0.7" height="15.0" fill="rgb(225,86,27)" rx="2" ry="2" />
<text  x="187.81" y="1679.5" ></text>
</g>
<g >
<title>dht::murmur3_partitioner::get_token (63 samples, 1.20%)</title><rect x="904.5" y="1813" width="14.1" height="15.0" fill="rgb(207,202,53)" rx="2" ry="2" />
<text  x="907.47" y="1823.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (1 samples, 0.02%)</title><rect x="1079.5" y="1797" width="0.2" height="15.0" fill="rgb(240,16,53)" rx="2" ry="2" />
<text  x="1082.51" y="1807.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (1 samples, 0.02%)</title><rect x="587.3" y="1765" width="0.3" height="15.0" fill="rgb(217,145,52)" rx="2" ry="2" />
<text  x="590.34" y="1775.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::~statement_restrictions (1 samples, 0.02%)</title><rect x="646.5" y="1877" width="0.2" height="15.0" fill="rgb(244,88,18)" rx="2" ry="2" />
<text  x="649.51" y="1887.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (7 samples, 0.13%)</title><rect x="1136.9" y="1909" width="1.6" height="15.0" fill="rgb(245,105,44)" rx="2" ry="2" />
<text  x="1139.88" y="1919.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (7 samples, 0.13%)</title><rect x="782.8" y="1621" width="1.5" height="15.0" fill="rgb(231,120,45)" rx="2" ry="2" />
<text  x="785.77" y="1631.5" ></text>
</g>
<g >
<title>scanning_reader::fill_buffer (2 samples, 0.04%)</title><rect x="107.5" y="1429" width="0.4" height="15.0" fill="rgb(245,196,49)" rx="2" ry="2" />
<text  x="110.49" y="1439.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_wrapped_common&lt;true, seastar::future&lt;void&gt;, utils::flush_queue&lt;db::replay_position, std::less&lt;db::replay_position&gt;, seastar::lowres_clock&gt;::run_with_ordered_post_op&lt;db::commitlog::segment::cycle (1 samples, 0.02%)</title><rect x="1121.9" y="1637" width="0.2" height="15.0" fill="rgb(237,133,17)" rx="2" ry="2" />
<text  x="1124.87" y="1647.5" ></text>
</g>
<g >
<title>std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (12 samples, 0.23%)</title><rect x="447.0" y="1717" width="2.7" height="15.0" fill="rgb(216,197,46)" rx="2" ry="2" />
<text  x="450.04" y="1727.5" ></text>
</g>
<g >
<title>range_tombstone_stream::empty (1 samples, 0.02%)</title><rect x="272.4" y="1653" width="0.3" height="15.0" fill="rgb(227,58,28)" rx="2" ry="2" />
<text  x="275.45" y="1663.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (2 samples, 0.04%)</title><rect x="326.2" y="1797" width="0.5" height="15.0" fill="rgb(247,184,48)" rx="2" ry="2" />
<text  x="329.24" y="1807.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (1 samples, 0.02%)</title><rect x="77.5" y="1781" width="0.2" height="15.0" fill="rgb(235,175,43)" rx="2" ry="2" />
<text  x="80.46" y="1791.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;partition_key, false, false&gt;::_Optional_base (2 samples, 0.04%)</title><rect x="1078.4" y="1765" width="0.4" height="15.0" fill="rgb(250,217,0)" rx="2" ry="2" />
<text  x="1081.39" y="1775.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (2 samples, 0.04%)</title><rect x="152.1" y="1861" width="0.4" height="15.0" fill="rgb(240,92,22)" rx="2" ry="2" />
<text  x="155.09" y="1871.5" ></text>
</g>
<g >
<title>antlr3::IntStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::_LA (3 samples, 0.06%)</title><rect x="32.2" y="1685" width="0.7" height="15.0" fill="rgb(225,133,38)" rx="2" ry="2" />
<text  x="35.19" y="1695.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.02%)</title><rect x="50.8" y="1573" width="0.2" height="15.0" fill="rgb(237,158,1)" rx="2" ry="2" />
<text  x="53.79" y="1583.5" ></text>
</g>
<g >
<title>query::result::builder::builder (16 samples, 0.30%)</title><rect x="609.5" y="1845" width="3.6" height="15.0" fill="rgb(235,102,12)" rx="2" ry="2" />
<text  x="612.53" y="1855.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (2 samples, 0.04%)</title><rect x="457.8" y="1829" width="0.4" height="15.0" fill="rgb(251,138,37)" rx="2" ry="2" />
<text  x="460.79" y="1839.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt;::_M_reset (2 samples, 0.04%)</title><rect x="584.4" y="1733" width="0.5" height="15.0" fill="rgb(218,118,39)" rx="2" ry="2" />
<text  x="587.42" y="1743.5" ></text>
</g>
<g >
<title>seastar::promise&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::promise (2 samples, 0.04%)</title><rect x="1114.5" y="1893" width="0.4" height="15.0" fill="rgb(205,54,23)" rx="2" ry="2" />
<text  x="1117.47" y="1903.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_4findERKNS5_10expressionENS5_6oper_tEEUlRS7_E_EES8_SE_T_EUlSG_E_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_8constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_11conjunctionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_12column_valueEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_5tokenEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13function_callEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4castEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_15field_selectionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4nullEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13bind_variableEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_16untyped_constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_17tuple_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_22collection_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSO_S6_SS_SW_S10_S14_S18_S1C_S1G_S1K_S1O_S1S_SK_S1W_S20_S24_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES29_S2C_ (1 samples, 0.02%)</title><rect x="651.4" y="1861" width="0.3" height="15.0" fill="rgb(213,114,3)" rx="2" ry="2" />
<text  x="654.44" y="1871.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::visit&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (1 samples, 0.02%)</title><rect x="10.7" y="1845" width="0.2" height="15.0" fill="rgb(254,184,41)" rx="2" ry="2" />
<text  x="13.67" y="1855.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (2 samples, 0.04%)</title><rect x="33.3" y="1621" width="0.5" height="15.0" fill="rgb(227,77,54)" rx="2" ry="2" />
<text  x="36.31" y="1631.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (1 samples, 0.02%)</title><rect x="239.7" y="1525" width="0.2" height="15.0" fill="rgb(207,143,45)" rx="2" ry="2" />
<text  x="242.72" y="1535.5" ></text>
</g>
<g >
<title>basic_atomic_cell_view&lt; (1 samples, 0.02%)</title><rect x="687.1" y="1685" width="0.2" height="15.0" fill="rgb(223,28,35)" rx="2" ry="2" />
<text  x="690.07" y="1695.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::execute (21 samples, 0.40%)</title><rect x="692.5" y="1893" width="4.7" height="15.0" fill="rgb(245,53,0)" rx="2" ry="2" />
<text  x="695.45" y="1903.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (442 samples, 8.40%)</title><rect x="196.7" y="1733" width="99.1" height="15.0" fill="rgb(218,46,32)" rx="2" ry="2" />
<text  x="199.69" y="1743.5" >partition_s..</text>
</g>
<g >
<title>cql3::query_processor::execute_prepared (370 samples, 7.03%)</title><rect x="736.4" y="1861" width="82.9" height="15.0" fill="rgb(225,22,26)" rx="2" ry="2" />
<text  x="739.38" y="1871.5" >cql3::que..</text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="102.1" y="1861" width="0.2" height="15.0" fill="rgb(220,134,49)" rx="2" ry="2" />
<text  x="105.11" y="1871.5" ></text>
</g>
<g >
<title>partition_version_ref::operator (1 samples, 0.02%)</title><rect x="261.9" y="1557" width="0.2" height="15.0" fill="rgb(246,50,36)" rx="2" ry="2" />
<text  x="264.91" y="1567.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_last_fragment_kind, 4ul&gt;::~small_vector (2 samples, 0.04%)</title><rect x="595.4" y="1797" width="0.5" height="15.0" fill="rgb(210,158,28)" rx="2" ry="2" />
<text  x="598.41" y="1807.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.02%)</title><rect x="51.9" y="1573" width="0.2" height="15.0" fill="rgb(251,47,37)" rx="2" ry="2" />
<text  x="54.91" y="1583.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.02%)</title><rect x="28.6" y="1637" width="0.2" height="15.0" fill="rgb(211,77,25)" rx="2" ry="2" />
<text  x="31.60" y="1647.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="25.0" y="1765" width="0.2" height="15.0" fill="rgb(210,159,29)" rx="2" ry="2" />
<text  x="28.02" y="1775.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::take (1 samples, 0.02%)</title><rect x="704.3" y="1861" width="0.3" height="15.0" fill="rgb(238,183,13)" rx="2" ry="2" />
<text  x="707.33" y="1871.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (1 samples, 0.02%)</title><rect x="64.9" y="1685" width="0.2" height="15.0" fill="rgb(245,103,30)" rx="2" ry="2" />
<text  x="67.91" y="1695.5" ></text>
</g>
<g >
<title>service::storage_proxy::create_write_response_handler_helper (4 samples, 0.08%)</title><rect x="1128.8" y="1637" width="0.9" height="15.0" fill="rgb(214,178,25)" rx="2" ry="2" />
<text  x="1131.81" y="1647.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_construct&lt;interval_bound&lt;dht::ring_position&gt; const&amp;&gt; (1 samples, 0.02%)</title><rect x="933.4" y="1797" width="0.2" height="15.0" fill="rgb(244,109,24)" rx="2" ry="2" />
<text  x="936.38" y="1807.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (1 samples, 0.02%)</title><rect x="247.6" y="1541" width="0.2" height="15.0" fill="rgb(242,149,38)" rx="2" ry="2" />
<text  x="250.57" y="1551.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="1162.9" y="1749" width="0.2" height="15.0" fill="rgb(219,5,6)" rx="2" ry="2" />
<text  x="1165.88" y="1759.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.08%)</title><rect x="878.5" y="1733" width="0.9" height="15.0" fill="rgb(253,78,48)" rx="2" ry="2" />
<text  x="881.47" y="1743.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::move_it (3 samples, 0.06%)</title><rect x="763.0" y="1829" width="0.7" height="15.0" fill="rgb(240,112,24)" rx="2" ry="2" />
<text  x="766.05" y="1839.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (1 samples, 0.02%)</title><rect x="106.8" y="1861" width="0.2" height="15.0" fill="rgb(233,136,3)" rx="2" ry="2" />
<text  x="109.82" y="1871.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::clear (1 samples, 0.02%)</title><rect x="701.2" y="1893" width="0.2" height="15.0" fill="rgb(250,222,52)" rx="2" ry="2" />
<text  x="704.19" y="1903.5" ></text>
</g>
<g >
<title>std::__copy_n_a&lt;legacy_compound_view&lt;compound_type&lt; (1 samples, 0.02%)</title><rect x="1116.7" y="1605" width="0.2" height="15.0" fill="rgb(250,56,53)" rx="2" ry="2" />
<text  x="1119.71" y="1615.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (2 samples, 0.04%)</title><rect x="53.3" y="1557" width="0.4" height="15.0" fill="rgb(241,147,27)" rx="2" ry="2" />
<text  x="56.26" y="1567.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (2 samples, 0.04%)</title><rect x="978.7" y="1685" width="0.4" height="15.0" fill="rgb(226,141,50)" rx="2" ry="2" />
<text  x="981.65" y="1695.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::clear (2 samples, 0.04%)</title><rect x="795.1" y="1621" width="0.4" height="15.0" fill="rgb(235,50,11)" rx="2" ry="2" />
<text  x="798.10" y="1631.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (5 samples, 0.09%)</title><rect x="125.6" y="1845" width="1.2" height="15.0" fill="rgb(227,35,44)" rx="2" ry="2" />
<text  x="128.65" y="1855.5" ></text>
</g>
<g >
<title>cql3::prepared_statements_cache::find (34 samples, 0.65%)</title><rect x="728.8" y="1861" width="7.6" height="15.0" fill="rgb(252,174,7)" rx="2" ry="2" />
<text  x="731.76" y="1871.5" ></text>
</g>
<g >
<title>bound_view::from_range_start&lt;nonwrapping_interval&gt; (3 samples, 0.06%)</title><rect x="264.8" y="1541" width="0.7" height="15.0" fill="rgb(219,202,46)" rx="2" ry="2" />
<text  x="267.83" y="1551.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="851.8" y="1749" width="0.2" height="15.0" fill="rgb(241,142,46)" rx="2" ry="2" />
<text  x="854.80" y="1759.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.06%)</title><rect x="932.5" y="1797" width="0.7" height="15.0" fill="rgb(225,27,6)" rx="2" ry="2" />
<text  x="935.48" y="1807.5" ></text>
</g>
<g >
<title>cql3::restrictions::partition_key_restrictions::needs_filtering (13 samples, 0.25%)</title><rect x="936.3" y="1829" width="2.9" height="15.0" fill="rgb(214,181,22)" rx="2" ry="2" />
<text  x="939.29" y="1839.5" ></text>
</g>
<g >
<title>mutation_partition::clustered_row (5 samples, 0.09%)</title><rect x="852.7" y="1701" width="1.1" height="15.0" fill="rgb(208,43,34)" rx="2" ry="2" />
<text  x="855.70" y="1711.5" ></text>
</g>
<g >
<title>free (1 samples, 0.02%)</title><rect x="99.4" y="1845" width="0.2" height="15.0" fill="rgb(234,125,47)" rx="2" ry="2" />
<text  x="102.42" y="1855.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::clear (1 samples, 0.02%)</title><rect x="426.2" y="1637" width="0.2" height="15.0" fill="rgb(225,39,53)" rx="2" ry="2" />
<text  x="429.19" y="1647.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;std::_List_iterator&lt;flat_mutation_reader&gt;, mutation_reader_merger::close (2 samples, 0.04%)</title><rect x="1162.7" y="1829" width="0.4" height="15.0" fill="rgb(208,71,40)" rx="2" ry="2" />
<text  x="1165.66" y="1839.5" ></text>
</g>
<g >
<title>operator new (8 samples, 0.15%)</title><rect x="1018.8" y="1685" width="1.8" height="15.0" fill="rgb(211,30,53)" rx="2" ry="2" />
<text  x="1021.77" y="1695.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::guard (1 samples, 0.02%)</title><rect x="548.1" y="1733" width="0.2" height="15.0" fill="rgb(213,18,53)" rx="2" ry="2" />
<text  x="551.12" y="1743.5" ></text>
</g>
<g >
<title>seastar::do_until&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::fill_buffer (1 samples, 0.02%)</title><rect x="1186.4" y="117" width="0.2" height="15.0" fill="rgb(231,111,48)" rx="2" ry="2" />
<text  x="1189.41" y="127.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (4 samples, 0.08%)</title><rect x="742.7" y="1765" width="0.8" height="15.0" fill="rgb(239,153,28)" rx="2" ry="2" />
<text  x="745.65" y="1775.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::find (1 samples, 0.02%)</title><rect x="943.9" y="1765" width="0.2" height="15.0" fill="rgb(207,184,34)" rx="2" ry="2" />
<text  x="946.91" y="1775.5" ></text>
</g>
<g >
<title>partition_key_view::legacy_form (1 samples, 0.02%)</title><rect x="924.9" y="1813" width="0.2" height="15.0" fill="rgb(221,179,19)" rx="2" ry="2" />
<text  x="927.86" y="1823.5" ></text>
</g>
<g >
<title>std::type_info::operator== (1 samples, 0.02%)</title><rect x="677.0" y="1877" width="0.2" height="15.0" fill="rgb(209,41,38)" rx="2" ry="2" />
<text  x="679.99" y="1887.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextTokenStr (54 samples, 1.03%)</title><rect x="30.8" y="1701" width="12.1" height="15.0" fill="rgb(248,31,25)" rx="2" ry="2" />
<text  x="33.84" y="1711.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEE4$_44ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_45ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_43ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_46ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_47ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_48ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_49ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_50ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_51ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_52ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_53ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_54ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_55ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_56ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_57ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_58EERS4_IJNSF_11conjunctionENSF_15binary_operatorENSF_12column_valueENSF_5tokenENSF_21unresolved_identifierENSF_25column_mutation_attributeENSF_13function_callENSF_4castENSF_15field_selectionENSF_4nullENSF_13bind_variableENSF_16untyped_constantENSF_8constantENSF_17tuple_constructorENSF_22collection_constructorENSF_20usertype_constructorEEEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES16_S1O_ (1 samples, 0.02%)</title><rect x="850.7" y="1765" width="0.2" height="15.0" fill="rgb(211,186,22)" rx="2" ry="2" />
<text  x="853.68" y="1775.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (5 samples, 0.09%)</title><rect x="686.8" y="1877" width="1.2" height="15.0" fill="rgb(232,184,7)" rx="2" ry="2" />
<text  x="689.85" y="1887.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (2 samples, 0.04%)</title><rect x="220.2" y="1557" width="0.5" height="15.0" fill="rgb(228,78,11)" rx="2" ry="2" />
<text  x="223.23" y="1567.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (1 samples, 0.02%)</title><rect x="988.7" y="1733" width="0.3" height="15.0" fill="rgb(210,19,9)" rx="2" ry="2" />
<text  x="991.74" y="1743.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::operator (2 samples, 0.04%)</title><rect x="107.5" y="1477" width="0.4" height="15.0" fill="rgb(214,58,4)" rx="2" ry="2" />
<text  x="110.49" y="1487.5" ></text>
</g>
<g >
<title>empty_flat_reader::close (5 samples, 0.09%)</title><rect x="572.3" y="1765" width="1.1" height="15.0" fill="rgb(221,118,10)" rx="2" ry="2" />
<text  x="575.32" y="1775.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_restrictions::size (1 samples, 0.02%)</title><rect x="871.5" y="1845" width="0.2" height="15.0" fill="rgb(207,93,46)" rx="2" ry="2" />
<text  x="874.52" y="1855.5" ></text>
</g>
<g >
<title>schema_registry::get_or_load (1 samples, 0.02%)</title><rect x="107.0" y="1829" width="0.3" height="15.0" fill="rgb(249,43,26)" rx="2" ry="2" />
<text  x="110.04" y="1839.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_Optional_payload_base (4 samples, 0.08%)</title><rect x="1077.9" y="1781" width="0.9" height="15.0" fill="rgb(218,14,7)" rx="2" ry="2" />
<text  x="1080.94" y="1791.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::set_urgent_state (1 samples, 0.02%)</title><rect x="846.0" y="1925" width="0.2" height="15.0" fill="rgb(232,170,46)" rx="2" ry="2" />
<text  x="848.97" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (1 samples, 0.02%)</title><rect x="75.2" y="1717" width="0.2" height="15.0" fill="rgb(224,116,4)" rx="2" ry="2" />
<text  x="78.22" y="1727.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;schema const&gt;::operator= (3 samples, 0.06%)</title><rect x="1022.4" y="1701" width="0.6" height="15.0" fill="rgb(226,173,52)" rx="2" ry="2" />
<text  x="1025.36" y="1711.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;auth::resource_kind, std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;auth::resource_kind&gt;, std::hash&lt;auth::resource_kind&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (2 samples, 0.04%)</title><rect x="767.8" y="1749" width="0.4" height="15.0" fill="rgb(205,12,54)" rx="2" ry="2" />
<text  x="770.75" y="1759.5" ></text>
</g>
<g >
<title>bplus::node&lt;long, intrusive_array&lt;memtable_entry&gt;, dht::raw_token_less_comparator, 16ul,  (1 samples, 0.02%)</title><rect x="1117.6" y="1557" width="0.2" height="15.0" fill="rgb(246,198,41)" rx="2" ry="2" />
<text  x="1120.61" y="1567.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (2 samples, 0.04%)</title><rect x="47.0" y="1733" width="0.4" height="15.0" fill="rgb(220,13,50)" rx="2" ry="2" />
<text  x="49.98" y="1743.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="315.9" y="1717" width="0.3" height="15.0" fill="rgb(227,140,53)" rx="2" ry="2" />
<text  x="318.93" y="1727.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_pausable_in_thread&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;sstables::sstable_writer&gt; &gt;, flat_mutation_reader::no_filter&gt; (2 samples, 0.04%)</title><rect x="1188.4" y="101" width="0.5" height="15.0" fill="rgb(251,36,42)" rx="2" ry="2" />
<text  x="1191.43" y="111.5" ></text>
</g>
<g >
<title>mutation_querier::query_static_row (1 samples, 0.02%)</title><rect x="359.6" y="1589" width="0.3" height="15.0" fill="rgb(236,226,16)" rx="2" ry="2" />
<text  x="362.63" y="1599.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (1 samples, 0.02%)</title><rect x="766.4" y="1765" width="0.2" height="15.0" fill="rgb(246,130,46)" rx="2" ry="2" />
<text  x="769.41" y="1775.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::clear (1 samples, 0.02%)</title><rect x="193.6" y="1685" width="0.2" height="15.0" fill="rgb(209,107,33)" rx="2" ry="2" />
<text  x="196.56" y="1695.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (2 samples, 0.04%)</title><rect x="1012.7" y="1573" width="0.5" height="15.0" fill="rgb(229,165,44)" rx="2" ry="2" />
<text  x="1015.72" y="1583.5" ></text>
</g>
<g >
<title>visit&lt;(anonymous namespace)::from_string_visitor&gt; (1 samples, 0.02%)</title><rect x="73.2" y="1717" width="0.2" height="15.0" fill="rgb(248,165,21)" rx="2" ry="2" />
<text  x="76.20" y="1727.5" ></text>
</g>
<g >
<title>mutation_partition::clear_gently (1 samples, 0.02%)</title><rect x="18.7" y="1941" width="0.3" height="15.0" fill="rgb(233,104,2)" rx="2" ry="2" />
<text  x="21.74" y="1951.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="652.6" y="1893" width="0.2" height="15.0" fill="rgb(247,185,46)" rx="2" ry="2" />
<text  x="655.56" y="1903.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (5 samples, 0.09%)</title><rect x="192.4" y="1685" width="1.2" height="15.0" fill="rgb(238,203,35)" rx="2" ry="2" />
<text  x="195.43" y="1695.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.04%)</title><rect x="773.1" y="1717" width="0.5" height="15.0" fill="rgb(254,118,28)" rx="2" ry="2" />
<text  x="776.13" y="1727.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate (84 samples, 1.60%)</title><rect x="877.8" y="1765" width="18.8" height="15.0" fill="rgb(229,100,4)" rx="2" ry="2" />
<text  x="880.80" y="1775.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (11 samples, 0.21%)</title><rect x="239.9" y="1541" width="2.5" height="15.0" fill="rgb(221,196,42)" rx="2" ry="2" />
<text  x="242.95" y="1551.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::find&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="77.5" y="1813" width="0.2" height="15.0" fill="rgb(218,47,30)" rx="2" ry="2" />
<text  x="80.46" y="1823.5" ></text>
</g>
<g >
<title>db::commitlog::segment::allocate (3 samples, 0.06%)</title><rect x="1121.4" y="1701" width="0.7" height="15.0" fill="rgb(244,103,52)" rx="2" ry="2" />
<text  x="1124.42" y="1711.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::find (3 samples, 0.06%)</title><rect x="651.7" y="1845" width="0.6" height="15.0" fill="rgb(252,72,36)" rx="2" ry="2" />
<text  x="654.66" y="1855.5" ></text>
</g>
<g >
<title>locator::effective_replication_map::get_natural_endpoints_without_node_being_replaced (73 samples, 1.39%)</title><rect x="1056.0" y="1733" width="16.3" height="15.0" fill="rgb(234,125,39)" rx="2" ry="2" />
<text  x="1058.98" y="1743.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::restrictions::has_eq_null (6 samples, 0.11%)</title><rect x="848.4" y="1765" width="1.4" height="15.0" fill="rgb(208,175,6)" rx="2" ry="2" />
<text  x="851.44" y="1775.5" ></text>
</g>
<g >
<title>seastar::internal::sharded_parallel_for_each (1 samples, 0.02%)</title><rect x="20.1" y="1861" width="0.2" height="15.0" fill="rgb(241,108,3)" rx="2" ry="2" />
<text  x="23.09" y="1871.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (6 samples, 0.11%)</title><rect x="784.8" y="1621" width="1.3" height="15.0" fill="rgb(233,195,7)" rx="2" ry="2" />
<text  x="787.79" y="1631.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (3 samples, 0.06%)</title><rect x="53.0" y="1653" width="0.7" height="15.0" fill="rgb(218,118,23)" rx="2" ry="2" />
<text  x="56.03" y="1663.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (3 samples, 0.06%)</title><rect x="604.8" y="1813" width="0.7" height="15.0" fill="rgb(221,9,48)" rx="2" ry="2" />
<text  x="607.82" y="1823.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;dht::token, std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt;, std::allocator&lt;std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;dht::token&gt;, std::hash&lt;dht::token&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (26 samples, 0.49%)</title><rect x="1065.4" y="1701" width="5.8" height="15.0" fill="rgb(223,15,22)" rx="2" ry="2" />
<text  x="1068.39" y="1711.5" ></text>
</g>
<g >
<title>intrusive_b::node&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (1 samples, 0.02%)</title><rect x="18.7" y="1925" width="0.3" height="15.0" fill="rgb(243,34,13)" rx="2" ry="2" />
<text  x="21.74" y="1935.5" ></text>
</g>
<g >
<title>ser::after_qr_cell__timestamp&lt;bytes_ostream&gt;::skip_expiry (15 samples, 0.28%)</title><rect x="386.7" y="1589" width="3.4" height="15.0" fill="rgb(234,181,49)" rx="2" ry="2" />
<text  x="389.75" y="1599.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (3 samples, 0.06%)</title><rect x="923.1" y="1765" width="0.6" height="15.0" fill="rgb(212,162,12)" rx="2" ry="2" />
<text  x="926.07" y="1775.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (1 samples, 0.02%)</title><rect x="1164.9" y="1941" width="0.2" height="15.0" fill="rgb(227,61,38)" rx="2" ry="2" />
<text  x="1167.90" y="1951.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::signal (3 samples, 0.06%)</title><rect x="126.1" y="1829" width="0.7" height="15.0" fill="rgb(218,53,32)" rx="2" ry="2" />
<text  x="129.09" y="1839.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;flat_mutation_reader::peek (1 samples, 0.02%)</title><rect x="456.0" y="1829" width="0.2" height="15.0" fill="rgb(235,44,14)" rx="2" ry="2" />
<text  x="459.00" y="1839.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.02%)</title><rect x="46.3" y="1637" width="0.2" height="15.0" fill="rgb(236,224,44)" rx="2" ry="2" />
<text  x="49.31" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_nodes (1 samples, 0.02%)</title><rect x="1157.5" y="1877" width="0.2" height="15.0" fill="rgb(233,9,46)" rx="2" ry="2" />
<text  x="1160.50" y="1887.5" ></text>
</g>
<g >
<title>query_result_builder::consume_new_partition (28 samples, 0.53%)</title><rect x="342.8" y="1621" width="6.3" height="15.0" fill="rgb(232,183,35)" rx="2" ry="2" />
<text  x="345.82" y="1631.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::merge_with (3 samples, 0.06%)</title><rect x="74.3" y="1765" width="0.7" height="15.0" fill="rgb(210,91,42)" rx="2" ry="2" />
<text  x="77.32" y="1775.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::~deque (2 samples, 0.04%)</title><rect x="627.2" y="1845" width="0.5" height="15.0" fill="rgb(248,99,10)" rx="2" ry="2" />
<text  x="630.23" y="1855.5" ></text>
</g>
<g >
<title>absl::hash_internal::AbslHashValue&lt;absl::hash_internal::HashState&gt; (4 samples, 0.08%)</title><rect x="1039.8" y="1701" width="0.9" height="15.0" fill="rgb(238,210,12)" rx="2" ry="2" />
<text  x="1042.84" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="82.8" y="2021" width="0.3" height="15.0" fill="rgb(222,198,34)" rx="2" ry="2" />
<text  x="85.84" y="2031.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (2 samples, 0.04%)</title><rect x="973.3" y="1685" width="0.4" height="15.0" fill="rgb(207,139,12)" rx="2" ry="2" />
<text  x="976.27" y="1695.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;std::function&lt;std::function&lt;partition_presence_checker_result  (1 samples, 0.02%)</title><rect x="618.7" y="1861" width="0.2" height="15.0" fill="rgb(242,154,37)" rx="2" ry="2" />
<text  x="621.71" y="1871.5" ></text>
</g>
<g >
<title>remove_or_mark_as_unique_owner (2 samples, 0.04%)</title><rect x="18.7" y="1957" width="0.5" height="15.0" fill="rgb(238,18,20)" rx="2" ry="2" />
<text  x="21.74" y="1967.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (4 samples, 0.08%)</title><rect x="60.9" y="1653" width="0.9" height="15.0" fill="rgb(241,50,5)" rx="2" ry="2" />
<text  x="63.88" y="1663.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="60.7" y="1589" width="0.2" height="15.0" fill="rgb(236,155,16)" rx="2" ry="2" />
<text  x="63.65" y="1599.5" ></text>
</g>
<g >
<title>read_simple&lt;unsigned short, managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="513.8" y="1637" width="0.2" height="15.0" fill="rgb(223,203,20)" rx="2" ry="2" />
<text  x="516.83" y="1647.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_construct&lt;interval_bound&lt;dht::ring_position&gt; const&amp;&gt; (3 samples, 0.06%)</title><rect x="934.7" y="1781" width="0.7" height="15.0" fill="rgb(225,212,51)" rx="2" ry="2" />
<text  x="937.73" y="1791.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.02%)</title><rect x="57.3" y="1493" width="0.2" height="15.0" fill="rgb(211,21,24)" rx="2" ry="2" />
<text  x="60.29" y="1503.5" ></text>
</g>
<g >
<title>row::external_memory_usage (2 samples, 0.04%)</title><rect x="260.6" y="1589" width="0.4" height="15.0" fill="rgb(240,194,46)" rx="2" ry="2" />
<text  x="263.57" y="1599.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="177.4" y="1717" width="0.2" height="15.0" fill="rgb(208,17,1)" rx="2" ry="2" />
<text  x="180.42" y="1727.5" ></text>
</g>
<g >
<title>service::abstract_read_resolver::~abstract_read_resolver (2 samples, 0.04%)</title><rect x="699.2" y="1893" width="0.4" height="15.0" fill="rgb(243,52,44)" rx="2" ry="2" />
<text  x="702.17" y="1903.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (1 samples, 0.02%)</title><rect x="696.9" y="1861" width="0.3" height="15.0" fill="rgb(206,116,4)" rx="2" ry="2" />
<text  x="699.93" y="1871.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::future (1 samples, 0.02%)</title><rect x="955.8" y="1797" width="0.2" height="15.0" fill="rgb(209,129,28)" rx="2" ry="2" />
<text  x="958.79" y="1807.5" ></text>
</g>
<g >
<title>locator::abstract_replication_strategy::get_natural_endpoints (64 samples, 1.22%)</title><rect x="1056.9" y="1717" width="14.3" height="15.0" fill="rgb(226,204,17)" rx="2" ry="2" />
<text  x="1059.87" y="1727.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (1 samples, 0.02%)</title><rect x="518.8" y="1733" width="0.2" height="15.0" fill="rgb(206,225,48)" rx="2" ry="2" />
<text  x="521.76" y="1743.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.02%)</title><rect x="585.5" y="1749" width="0.3" height="15.0" fill="rgb(231,116,33)" rx="2" ry="2" />
<text  x="588.54" y="1759.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::get_promise (1 samples, 0.02%)</title><rect x="997.3" y="1701" width="0.2" height="15.0" fill="rgb(223,151,42)" rx="2" ry="2" />
<text  x="1000.26" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (1 samples, 0.02%)</title><rect x="880.3" y="1733" width="0.2" height="15.0" fill="rgb(243,72,23)" rx="2" ry="2" />
<text  x="883.26" y="1743.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (3 samples, 0.06%)</title><rect x="50.3" y="1749" width="0.7" height="15.0" fill="rgb(211,138,42)" rx="2" ry="2" />
<text  x="53.34" y="1759.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (14 samples, 0.27%)</title><rect x="1186.2" y="997" width="3.1" height="15.0" fill="rgb(234,188,32)" rx="2" ry="2" />
<text  x="1189.19" y="1007.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (1 samples, 0.02%)</title><rect x="359.4" y="1589" width="0.2" height="15.0" fill="rgb(210,165,29)" rx="2" ry="2" />
<text  x="362.41" y="1599.5" ></text>
</g>
<g >
<title>seastar::logger::log&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;&amp;&gt; (1 samples, 0.02%)</title><rect x="817.7" y="1845" width="0.3" height="15.0" fill="rgb(227,83,25)" rx="2" ry="2" />
<text  x="820.73" y="1855.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.02%)</title><rect x="57.3" y="1573" width="0.2" height="15.0" fill="rgb(223,148,43)" rx="2" ry="2" />
<text  x="60.29" y="1583.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::forward_to (2 samples, 0.04%)</title><rect x="1130.2" y="1909" width="0.4" height="15.0" fill="rgb(245,87,10)" rx="2" ry="2" />
<text  x="1133.16" y="1919.5" ></text>
</g>
<g >
<title>allocation_strategy::construct&lt;rows_entry, schema const&amp;, position_in_partition_view&amp;, seastar::bool_class&lt;dummy_tag&gt;&amp;, seastar::bool_class&lt;continuous_tag&gt;&amp;&gt; (2 samples, 0.04%)</title><rect x="1119.4" y="1621" width="0.4" height="15.0" fill="rgb(228,151,39)" rx="2" ry="2" />
<text  x="1122.40" y="1631.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (4 samples, 0.08%)</title><rect x="1099.7" y="1829" width="0.9" height="15.0" fill="rgb(245,39,35)" rx="2" ry="2" />
<text  x="1102.68" y="1839.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::operation::set_value, cql3::expr::expression&amp;&gt; (2 samples, 0.04%)</title><rect x="62.0" y="1733" width="0.4" height="15.0" fill="rgb(208,89,19)" rx="2" ry="2" />
<text  x="65.00" y="1743.5" ></text>
</g>
<g >
<title>std::optional&lt;clustering_key_prefix&gt;::operator=&lt;clustering_key_prefix&amp;&gt; (3 samples, 0.06%)</title><rect x="426.4" y="1637" width="0.7" height="15.0" fill="rgb(211,78,13)" rx="2" ry="2" />
<text  x="429.42" y="1647.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_partition_key_range_concurrent (1 samples, 0.02%)</title><rect x="956.5" y="1781" width="0.2" height="15.0" fill="rgb(247,187,45)" rx="2" ry="2" />
<text  x="959.47" y="1791.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (2 samples, 0.04%)</title><rect x="102.6" y="1877" width="0.4" height="15.0" fill="rgb(244,106,15)" rx="2" ry="2" />
<text  x="105.56" y="1887.5" ></text>
</g>
<g >
<title>local_schema_registry (2 samples, 0.04%)</title><rect x="960.5" y="1781" width="0.4" height="15.0" fill="rgb(239,2,20)" rx="2" ry="2" />
<text  x="963.50" y="1791.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (6 samples, 0.11%)</title><rect x="836.3" y="1765" width="1.4" height="15.0" fill="rgb(208,171,54)" rx="2" ry="2" />
<text  x="839.34" y="1775.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;auth::resource, auth::resource, std::allocator&lt;auth::resource&gt;, std::__detail::_Identity, std::equal_to&lt;auth::resource&gt;, std::hash&lt;auth::resource&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;::find (13 samples, 0.25%)</title><rect x="803.6" y="1781" width="2.9" height="15.0" fill="rgb(239,84,26)" rx="2" ry="2" />
<text  x="806.61" y="1791.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.02%)</title><rect x="25.0" y="1797" width="0.2" height="15.0" fill="rgb(242,113,30)" rx="2" ry="2" />
<text  x="28.02" y="1807.5" ></text>
</g>
<g >
<title>reader_permit::impl::~impl (9 samples, 0.17%)</title><rect x="124.8" y="1861" width="2.0" height="15.0" fill="rgb(221,55,49)" rx="2" ry="2" />
<text  x="127.75" y="1871.5" ></text>
</g>
<g >
<title>cql3::restrictions::clustering_key_restrictions::needs_filtering (1 samples, 0.02%)</title><rect x="72.5" y="1829" width="0.3" height="15.0" fill="rgb(239,5,31)" rx="2" ry="2" />
<text  x="75.53" y="1839.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;compact_mutation_state&lt; (39 samples, 0.74%)</title><rect x="560.2" y="1845" width="8.8" height="15.0" fill="rgb(242,82,1)" rx="2" ry="2" />
<text  x="563.22" y="1855.5" ></text>
</g>
<g >
<title>sstables::write_cell_value&lt;bytes_ostream&gt; (1 samples, 0.02%)</title><rect x="1186.2" y="53" width="0.2" height="15.0" fill="rgb(230,108,6)" rx="2" ry="2" />
<text  x="1189.19" y="63.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_4findERKNS5_10expressionENS5_6oper_tEEUlRS7_E_EES8_SE_T_EUlSG_E_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_8constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_11conjunctionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_12column_valueEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_5tokenEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13function_callEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4castEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_15field_selectionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4nullEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13bind_variableEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_16untyped_constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_17tuple_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_22collection_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSO_S6_SS_SW_S10_S14_S18_S1C_S1G_S1K_S1O_S1S_SK_S1W_S20_S24_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES29_S2C_ (1 samples, 0.02%)</title><rect x="874.4" y="1813" width="0.3" height="15.0" fill="rgb(238,74,25)" rx="2" ry="2" />
<text  x="877.44" y="1823.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consumer_adapter&lt;sstables::sstable_writer&gt;::consume (1 samples, 0.02%)</title><rect x="1187.1" y="149" width="0.2" height="15.0" fill="rgb(218,98,50)" rx="2" ry="2" />
<text  x="1190.09" y="159.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume_in_thread&lt;sstables::sstable_writer&gt; (1 samples, 0.02%)</title><rect x="1186.2" y="277" width="0.2" height="15.0" fill="rgb(250,28,22)" rx="2" ry="2" />
<text  x="1189.19" y="287.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_esft&lt;partition_snapshot&gt;::dispose (1 samples, 0.02%)</title><rect x="582.6" y="1717" width="0.3" height="15.0" fill="rgb(211,85,37)" rx="2" ry="2" />
<text  x="585.63" y="1727.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="1158.2" y="1893" width="0.2" height="15.0" fill="rgb(242,151,7)" rx="2" ry="2" />
<text  x="1161.17" y="1903.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (5 samples, 0.09%)</title><rect x="722.3" y="1829" width="1.1" height="15.0" fill="rgb(229,177,1)" rx="2" ry="2" />
<text  x="725.26" y="1839.5" ></text>
</g>
<g >
<title>mutation::set_clustered_cell (1 samples, 0.02%)</title><rect x="106.8" y="1893" width="0.2" height="15.0" fill="rgb(239,196,47)" rx="2" ry="2" />
<text  x="109.82" y="1903.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::digest_read_result&gt;::clear (1 samples, 0.02%)</title><rect x="974.2" y="1765" width="0.2" height="15.0" fill="rgb(238,93,38)" rx="2" ry="2" />
<text  x="977.17" y="1775.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_singular (547 samples, 10.39%)</title><rect x="956.7" y="1797" width="122.6" height="15.0" fill="rgb(248,30,51)" rx="2" ry="2" />
<text  x="959.69" y="1807.5" >service::storag..</text>
</g>
<g >
<title>std::__invoke_impl&lt;bool, bool  (1 samples, 0.02%)</title><rect x="1073.2" y="1701" width="0.3" height="15.0" fill="rgb(238,11,36)" rx="2" ry="2" />
<text  x="1076.23" y="1711.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_pausable_in_thread&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;sstables::sstable_writer&gt; &gt;, flat_mutation_reader::no_filter&gt; (2 samples, 0.04%)</title><rect x="1186.6" y="197" width="0.5" height="15.0" fill="rgb(220,49,51)" rx="2" ry="2" />
<text  x="1189.64" y="207.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (21 samples, 0.40%)</title><rect x="913.0" y="1765" width="4.7" height="15.0" fill="rgb(252,98,44)" rx="2" ry="2" />
<text  x="915.99" y="1775.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.02%)</title><rect x="60.7" y="1541" width="0.2" height="15.0" fill="rgb(243,106,43)" rx="2" ry="2" />
<text  x="63.65" y="1551.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.02%)</title><rect x="64.0" y="1733" width="0.2" height="15.0" fill="rgb(210,39,14)" rx="2" ry="2" />
<text  x="67.01" y="1743.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.02%)</title><rect x="60.7" y="1605" width="0.2" height="15.0" fill="rgb(208,115,13)" rx="2" ry="2" />
<text  x="63.65" y="1615.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="900.7" y="1749" width="0.2" height="15.0" fill="rgb(236,221,19)" rx="2" ry="2" />
<text  x="903.66" y="1759.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::~merging_reader (1 samples, 0.02%)</title><rect x="597.0" y="1829" width="0.2" height="15.0" fill="rgb(252,120,21)" rx="2" ry="2" />
<text  x="599.97" y="1839.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.02%)</title><rect x="60.0" y="1509" width="0.2" height="15.0" fill="rgb(238,187,43)" rx="2" ry="2" />
<text  x="62.98" y="1519.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.02%)</title><rect x="20.1" y="1925" width="0.2" height="15.0" fill="rgb(228,35,29)" rx="2" ry="2" />
<text  x="23.09" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (1 samples, 0.02%)</title><rect x="728.8" y="1829" width="0.2" height="15.0" fill="rgb(230,47,21)" rx="2" ry="2" />
<text  x="731.76" y="1839.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.02%)</title><rect x="1186.2" y="293" width="0.2" height="15.0" fill="rgb(252,145,28)" rx="2" ry="2" />
<text  x="1189.19" y="303.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_pausable_in_thread&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;sstables::sstable_writer&gt; &gt;, flat_mutation_reader::no_filter&gt; (1 samples, 0.02%)</title><rect x="1188.9" y="85" width="0.2" height="15.0" fill="rgb(245,105,35)" rx="2" ry="2" />
<text  x="1191.88" y="95.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (1 samples, 0.02%)</title><rect x="55.9" y="1701" width="0.3" height="15.0" fill="rgb(243,151,7)" rx="2" ry="2" />
<text  x="58.94" y="1711.5" ></text>
</g>
<g >
<title>auth::resource::parent (5 samples, 0.09%)</title><rect x="774.0" y="1749" width="1.2" height="15.0" fill="rgb(233,173,16)" rx="2" ry="2" />
<text  x="777.03" y="1759.5" ></text>
</g>
<g >
<title>auth::standard_role_manager::start (1 samples, 0.02%)</title><rect x="688.0" y="1893" width="0.2" height="15.0" fill="rgb(247,144,15)" rx="2" ry="2" />
<text  x="690.97" y="1903.5" ></text>
</g>
<g >
<title>std::make_unique&lt;empty_flat_reader, seastar::lw_shared_ptr&lt;schema const&gt;, reader_permit&gt; (11 samples, 0.21%)</title><rect x="551.7" y="1701" width="2.5" height="15.0" fill="rgb(219,37,33)" rx="2" ry="2" />
<text  x="554.70" y="1711.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (4 samples, 0.08%)</title><rect x="126.8" y="1861" width="0.9" height="15.0" fill="rgb(215,186,15)" rx="2" ry="2" />
<text  x="129.77" y="1871.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (12 samples, 0.23%)</title><rect x="1186.6" y="309" width="2.7" height="15.0" fill="rgb(205,54,54)" rx="2" ry="2" />
<text  x="1189.64" y="319.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::do_merge_with (3 samples, 0.06%)</title><rect x="74.3" y="1749" width="0.7" height="15.0" fill="rgb(250,89,44)" rx="2" ry="2" />
<text  x="77.32" y="1759.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment&lt;schema const&amp;, rows_entry const&amp;&gt; (2 samples, 0.04%)</title><rect x="107.5" y="1237" width="0.4" height="15.0" fill="rgb(235,92,28)" rx="2" ry="2" />
<text  x="110.49" y="1247.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="603.9" y="1797" width="0.2" height="15.0" fill="rgb(217,225,54)" rx="2" ry="2" />
<text  x="606.92" y="1807.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (5 samples, 0.09%)</title><rect x="686.8" y="1861" width="1.2" height="15.0" fill="rgb(241,135,17)" rx="2" ry="2" />
<text  x="689.85" y="1871.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, auth::role_or_anonymous&amp;&amp;, auth::get_permissions (1 samples, 0.02%)</title><rect x="801.8" y="1733" width="0.2" height="15.0" fill="rgb(214,65,41)" rx="2" ry="2" />
<text  x="804.82" y="1743.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::move_it (2 samples, 0.04%)</title><rect x="667.1" y="1893" width="0.5" height="15.0" fill="rgb(206,197,8)" rx="2" ry="2" />
<text  x="670.12" y="1903.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation::data, std::default_delete&lt;mutation::data&gt; &gt;::~unique_ptr (2 samples, 0.04%)</title><rect x="1129.7" y="1749" width="0.5" height="15.0" fill="rgb(219,224,0)" rx="2" ry="2" />
<text  x="1132.71" y="1759.5" ></text>
</g>
<g >
<title>seastar::do_until&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (441 samples, 8.38%)</title><rect x="196.9" y="1717" width="98.9" height="15.0" fill="rgb(233,92,46)" rx="2" ry="2" />
<text  x="199.92" y="1727.5" >seastar::do..</text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.02%)</title><rect x="51.5" y="1621" width="0.2" height="15.0" fill="rgb(221,129,49)" rx="2" ry="2" />
<text  x="54.46" y="1631.5" ></text>
</g>
<g >
<title>bplus::searcher&lt;dht::ring_position, long, dht::raw_token_less_comparator, 16ul,  (17 samples, 0.32%)</title><rect x="496.1" y="1701" width="3.8" height="15.0" fill="rgb(238,72,21)" rx="2" ry="2" />
<text  x="499.12" y="1711.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (6 samples, 0.11%)</title><rect x="1156.4" y="1909" width="1.3" height="15.0" fill="rgb(237,168,15)" rx="2" ry="2" />
<text  x="1159.38" y="1919.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (2 samples, 0.04%)</title><rect x="57.1" y="1701" width="0.4" height="15.0" fill="rgb(229,39,16)" rx="2" ry="2" />
<text  x="60.07" y="1711.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::digest_read_resolver&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="715.5" y="1909" width="0.3" height="15.0" fill="rgb(205,135,30)" rx="2" ry="2" />
<text  x="718.53" y="1919.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, enum_set&lt;super_enum&lt;auth::permission,  (6 samples, 0.11%)</title><rect x="783.0" y="1605" width="1.3" height="15.0" fill="rgb(247,28,16)" rx="2" ry="2" />
<text  x="786.00" y="1615.5" ></text>
</g>
<g >
<title>std::vector&lt;seastar::shared_ptr&lt;cql3::operation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::operation&gt; &gt; &gt;::_M_realloc_insert&lt;seastar::shared_ptr&lt;cql3::operation&gt; &gt; (1 samples, 0.02%)</title><rect x="72.1" y="1813" width="0.2" height="15.0" fill="rgb(250,96,36)" rx="2" ry="2" />
<text  x="75.08" y="1823.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (1 samples, 0.02%)</title><rect x="1189.1" y="165" width="0.2" height="15.0" fill="rgb(249,193,35)" rx="2" ry="2" />
<text  x="1192.10" y="175.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;std::function&lt;flat_mutation_reader  (2 samples, 0.04%)</title><rect x="618.3" y="1861" width="0.4" height="15.0" fill="rgb(232,143,34)" rx="2" ry="2" />
<text  x="621.27" y="1871.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.06%)</title><rect x="955.1" y="1797" width="0.7" height="15.0" fill="rgb(211,195,27)" rx="2" ry="2" />
<text  x="958.12" y="1807.5" ></text>
</g>
<g >
<title>auth::permissions_cache::get (3 samples, 0.06%)</title><rect x="79.7" y="1765" width="0.7" height="15.0" fill="rgb(229,195,54)" rx="2" ry="2" />
<text  x="82.70" y="1775.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mHEXNUMBER (24 samples, 0.46%)</title><rect x="34.4" y="1685" width="5.4" height="15.0" fill="rgb(227,120,48)" rx="2" ry="2" />
<text  x="37.43" y="1695.5" ></text>
</g>
<g >
<title>query::result::builder::add_partition (9 samples, 0.17%)</title><rect x="344.6" y="1605" width="2.0" height="15.0" fill="rgb(223,101,0)" rx="2" ry="2" />
<text  x="347.61" y="1615.5" ></text>
</g>
<g >
<title>std::make_unique&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;, seastar::lw_shared_ptr&lt;schema const&gt;, reader_permit, dht::decorated_key, partition_snapshot_ptr&amp;, query::clustering_key_filter_ranges, bool&amp;, logalloc::region&amp;, logalloc::allocating_section&amp;, boost::any, schema const&amp;, flush_memory_accounter&amp;&gt; (1 samples, 0.02%)</title><rect x="1188.4" y="37" width="0.3" height="15.0" fill="rgb(207,112,15)" rx="2" ry="2" />
<text  x="1191.43" y="47.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (98 samples, 1.86%)</title><rect x="44.5" y="1797" width="22.0" height="15.0" fill="rgb(233,120,5)" rx="2" ry="2" />
<text  x="47.51" y="1807.5" >c..</text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (5 samples, 0.09%)</title><rect x="852.7" y="1685" width="1.1" height="15.0" fill="rgb(213,196,6)" rx="2" ry="2" />
<text  x="855.70" y="1695.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::local (1 samples, 0.02%)</title><rect x="763.7" y="1829" width="0.2" height="15.0" fill="rgb(249,1,4)" rx="2" ry="2" />
<text  x="766.72" y="1839.5" ></text>
</g>
<g >
<title>utils::sequenced_set&lt;gms::inet_address&gt;::insert (1 samples, 0.02%)</title><rect x="109.7" y="1893" width="0.3" height="15.0" fill="rgb(252,126,53)" rx="2" ry="2" />
<text  x="112.73" y="1903.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_M_reset (1 samples, 0.02%)</title><rect x="920.4" y="1765" width="0.2" height="15.0" fill="rgb(221,83,15)" rx="2" ry="2" />
<text  x="923.38" y="1775.5" ></text>
</g>
<g >
<title>mutation_querier::consume (233 samples, 4.43%)</title><rect x="350.9" y="1621" width="52.2" height="15.0" fill="rgb(252,41,51)" rx="2" ry="2" />
<text  x="353.89" y="1631.5" >mutat..</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; (2 samples, 0.04%)</title><rect x="55.3" y="1605" width="0.4" height="15.0" fill="rgb(219,31,26)" rx="2" ry="2" />
<text  x="58.27" y="1615.5" ></text>
</g>
<g >
<title>ser::qr_partition__static_row&lt;bytes_ostream&gt;::qr_partition__static_row (2 samples, 0.04%)</title><rect x="346.6" y="1605" width="0.5" height="15.0" fill="rgb(212,188,52)" rx="2" ry="2" />
<text  x="349.63" y="1615.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::clear (1 samples, 0.02%)</title><rect x="803.4" y="1733" width="0.2" height="15.0" fill="rgb(251,156,0)" rx="2" ry="2" />
<text  x="806.39" y="1743.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (4 samples, 0.08%)</title><rect x="160.2" y="1861" width="0.9" height="15.0" fill="rgb(244,47,6)" rx="2" ry="2" />
<text  x="163.16" y="1871.5" ></text>
</g>
<g >
<title>db::commitlog::segment::background_cycle (1 samples, 0.02%)</title><rect x="1121.9" y="1685" width="0.2" height="15.0" fill="rgb(209,164,1)" rx="2" ry="2" />
<text  x="1124.87" y="1695.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.02%)</title><rect x="60.2" y="1541" width="0.2" height="15.0" fill="rgb(216,65,48)" rx="2" ry="2" />
<text  x="63.20" y="1551.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt;::take_value (1 samples, 0.02%)</title><rect x="856.3" y="1829" width="0.2" height="15.0" fill="rgb(248,65,25)" rx="2" ry="2" />
<text  x="859.28" y="1839.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (1 samples, 0.02%)</title><rect x="1035.1" y="1749" width="0.3" height="15.0" fill="rgb(210,93,48)" rx="2" ry="2" />
<text  x="1038.13" y="1759.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (2 samples, 0.04%)</title><rect x="63.3" y="1765" width="0.5" height="15.0" fill="rgb(230,83,39)" rx="2" ry="2" />
<text  x="66.34" y="1775.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (1 samples, 0.02%)</title><rect x="24.1" y="1733" width="0.2" height="15.0" fill="rgb(225,179,7)" rx="2" ry="2" />
<text  x="27.12" y="1743.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consumer_adapter&lt;sstables::sstable_writer&gt;::consume (1 samples, 0.02%)</title><rect x="1188.7" y="69" width="0.2" height="15.0" fill="rgb(231,15,24)" rx="2" ry="2" />
<text  x="1191.66" y="79.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::lsa_partition_reader::next_row (1 samples, 0.02%)</title><rect x="1186.4" y="53" width="0.2" height="15.0" fill="rgb(224,125,35)" rx="2" ry="2" />
<text  x="1189.41" y="63.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (2 samples, 0.04%)</title><rect x="979.3" y="1685" width="0.5" height="15.0" fill="rgb(213,16,35)" rx="2" ry="2" />
<text  x="982.33" y="1695.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (195 samples, 3.70%)</title><rect x="25.0" y="1829" width="43.7" height="15.0" fill="rgb(240,145,9)" rx="2" ry="2" />
<text  x="28.02" y="1839.5" >cql3..</text>
</g>
<g >
<title>database::query (14 samples, 0.27%)</title><rect x="103.7" y="1925" width="3.1" height="15.0" fill="rgb(247,118,18)" rx="2" ry="2" />
<text  x="106.68" y="1935.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cfName (2 samples, 0.04%)</title><rect x="48.1" y="1765" width="0.4" height="15.0" fill="rgb(246,153,29)" rx="2" ry="2" />
<text  x="51.10" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt;::~_Variant_storage (1 samples, 0.02%)</title><rect x="895.3" y="1717" width="0.2" height="15.0" fill="rgb(228,163,31)" rx="2" ry="2" />
<text  x="898.28" y="1727.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (1 samples, 0.02%)</title><rect x="258.1" y="1525" width="0.2" height="15.0" fill="rgb(251,86,33)" rx="2" ry="2" />
<text  x="261.10" y="1535.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="512.5" y="1605" width="0.2" height="15.0" fill="rgb(240,196,53)" rx="2" ry="2" />
<text  x="515.48" y="1615.5" ></text>
</g>
<g >
<title>operator delete (5 samples, 0.09%)</title><rect x="1097.9" y="1845" width="1.1" height="15.0" fill="rgb(247,166,42)" rx="2" ry="2" />
<text  x="1100.89" y="1855.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql3::restrictions::single_column_restriction&gt;::~shared_ptr_count_for (1 samples, 0.02%)</title><rect x="646.5" y="1781" width="0.2" height="15.0" fill="rgb(211,28,1)" rx="2" ry="2" />
<text  x="649.51" y="1791.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (2 samples, 0.04%)</title><rect x="1188.4" y="165" width="0.5" height="15.0" fill="rgb(229,44,43)" rx="2" ry="2" />
<text  x="1191.43" y="175.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.06%)</title><rect x="827.1" y="1845" width="0.7" height="15.0" fill="rgb(233,82,47)" rx="2" ry="2" />
<text  x="830.15" y="1855.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (2 samples, 0.04%)</title><rect x="63.3" y="1733" width="0.5" height="15.0" fill="rgb(245,185,13)" rx="2" ry="2" />
<text  x="66.34" y="1743.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::execute (10 samples, 0.19%)</title><rect x="751.6" y="1829" width="2.3" height="15.0" fill="rgb(223,57,19)" rx="2" ry="2" />
<text  x="754.62" y="1839.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::value_ptr&gt;::future_state&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry_ptr&gt; (4 samples, 0.08%)</title><rect x="742.7" y="1749" width="0.8" height="15.0" fill="rgb(246,164,40)" rx="2" ry="2" />
<text  x="745.65" y="1759.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="807.9" y="1797" width="0.2" height="15.0" fill="rgb(206,222,8)" rx="2" ry="2" />
<text  x="810.87" y="1807.5" ></text>
</g>
<g >
<title>seastar::reactor::signal_pollfn::poll (1 samples, 0.02%)</title><rect x="1163.3" y="1941" width="0.3" height="15.0" fill="rgb(213,103,23)" rx="2" ry="2" />
<text  x="1166.33" y="1951.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each_state::add_future (1 samples, 0.02%)</title><rect x="1125.2" y="1701" width="0.3" height="15.0" fill="rgb(243,189,25)" rx="2" ry="2" />
<text  x="1128.23" y="1711.5" ></text>
</g>
<g >
<title>database::find_schema (19 samples, 0.36%)</title><rect x="809.9" y="1797" width="4.2" height="15.0" fill="rgb(219,76,23)" rx="2" ry="2" />
<text  x="812.89" y="1807.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::allocate (1 samples, 0.02%)</title><rect x="142.9" y="1717" width="0.2" height="15.0" fill="rgb(208,2,39)" rx="2" ry="2" />
<text  x="145.90" y="1727.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.02%)</title><rect x="48.1" y="1621" width="0.2" height="15.0" fill="rgb(215,156,51)" rx="2" ry="2" />
<text  x="51.10" y="1631.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_one (28 samples, 0.53%)</title><rect x="186.2" y="1685" width="6.2" height="15.0" fill="rgb(206,52,40)" rx="2" ry="2" />
<text  x="189.16" y="1695.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::leaf_node::allocate (18 samples, 0.34%)</title><rect x="242.4" y="1541" width="4.0" height="15.0" fill="rgb(236,58,27)" rx="2" ry="2" />
<text  x="245.41" y="1551.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.02%)</title><rect x="1177.0" y="2005" width="0.2" height="15.0" fill="rgb(225,32,32)" rx="2" ry="2" />
<text  x="1180.00" y="2015.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (14 samples, 0.27%)</title><rect x="1186.2" y="565" width="3.1" height="15.0" fill="rgb(242,201,27)" rx="2" ry="2" />
<text  x="1189.19" y="575.5" ></text>
</g>
<g >
<title>std::function&lt;seastar::future&lt;void&gt;  (1 samples, 0.02%)</title><rect x="20.1" y="1781" width="0.2" height="15.0" fill="rgb(243,165,13)" rx="2" ry="2" />
<text  x="23.09" y="1791.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="1096.5" y="1829" width="0.3" height="15.0" fill="rgb(226,136,1)" rx="2" ry="2" />
<text  x="1099.54" y="1839.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (1 samples, 0.02%)</title><rect x="42.5" y="1685" width="0.2" height="15.0" fill="rgb(234,209,18)" rx="2" ry="2" />
<text  x="45.50" y="1695.5" ></text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt;&amp;&gt; (4 samples, 0.08%)</title><rect x="1038.7" y="1717" width="0.9" height="15.0" fill="rgb(252,91,12)" rx="2" ry="2" />
<text  x="1041.72" y="1727.5" ></text>
</g>
<g >
<title>_start (4 samples, 0.08%)</title><rect x="1165.1" y="2053" width="0.9" height="15.0" fill="rgb(249,98,51)" rx="2" ry="2" />
<text  x="1168.12" y="2063.5" ></text>
</g>
<g >
<title>db::schema_tables::all_tables (1 samples, 0.02%)</title><rect x="20.1" y="1701" width="0.2" height="15.0" fill="rgb(216,3,48)" rx="2" ry="2" />
<text  x="23.09" y="1711.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::normalColumnOperation (47 samples, 0.89%)</title><rect x="52.4" y="1749" width="10.5" height="15.0" fill="rgb(217,175,45)" rx="2" ry="2" />
<text  x="55.36" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Insert_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, query::non_null_data_value&gt;, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, query::non_null_data_value&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, std::hash&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_insert_range&lt;std::__detail::_Node_iterator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, query::non_null_data_value&gt;, false, true&gt;, std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, query::non_null_data_value&gt;, true&gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="108.2" y="1829" width="0.2" height="15.0" fill="rgb(213,125,28)" rx="2" ry="2" />
<text  x="111.17" y="1839.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_28has_slice_or_needs_filteringERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES28_S2B_ (1 samples, 0.02%)</title><rect x="937.9" y="1765" width="0.2" height="15.0" fill="rgb(220,116,6)" rx="2" ry="2" />
<text  x="940.86" y="1775.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::move_it (2 samples, 0.04%)</title><rect x="637.8" y="1909" width="0.4" height="15.0" fill="rgb(243,33,48)" rx="2" ry="2" />
<text  x="640.76" y="1919.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (3 samples, 0.06%)</title><rect x="1104.8" y="1813" width="0.7" height="15.0" fill="rgb(237,8,4)" rx="2" ry="2" />
<text  x="1107.83" y="1823.5" ></text>
</g>
<g >
<title>cql3::query_processor::process_authorized_statement (19 samples, 0.36%)</title><rect x="751.2" y="1845" width="4.2" height="15.0" fill="rgb(231,177,8)" rx="2" ry="2" />
<text  x="754.17" y="1855.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::vector (17 samples, 0.32%)</title><rect x="931.6" y="1829" width="3.8" height="15.0" fill="rgb(214,35,40)" rx="2" ry="2" />
<text  x="934.59" y="1839.5" ></text>
</g>
<g >
<title>mutation_fragment::consume&lt;flat_mutation_reader::impl::consumer_adapter&lt;sstables::sstable_writer&gt; &gt; (2 samples, 0.04%)</title><rect x="1186.6" y="181" width="0.5" height="15.0" fill="rgb(230,198,42)" rx="2" ry="2" />
<text  x="1189.64" y="191.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_partition_key_ranges (1 samples, 0.02%)</title><rect x="864.6" y="1861" width="0.2" height="15.0" fill="rgb(225,205,13)" rx="2" ry="2" />
<text  x="867.58" y="1871.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.02%)</title><rect x="1188.2" y="213" width="0.2" height="15.0" fill="rgb(226,123,18)" rx="2" ry="2" />
<text  x="1191.21" y="223.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.04%)</title><rect x="51.7" y="1685" width="0.4" height="15.0" fill="rgb(212,49,11)" rx="2" ry="2" />
<text  x="54.69" y="1695.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reclaiming_disabled&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (2 samples, 0.04%)</title><rect x="107.5" y="1269" width="0.4" height="15.0" fill="rgb(244,7,19)" rx="2" ry="2" />
<text  x="110.49" y="1279.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (1 samples, 0.02%)</title><rect x="61.8" y="1669" width="0.2" height="15.0" fill="rgb(245,55,36)" rx="2" ry="2" />
<text  x="64.77" y="1679.5" ></text>
</g>
<g >
<title>seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::expand (6 samples, 0.11%)</title><rect x="527.7" y="1653" width="1.4" height="15.0" fill="rgb(228,36,9)" rx="2" ry="2" />
<text  x="530.72" y="1663.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (14 samples, 0.27%)</title><rect x="1186.2" y="933" width="3.1" height="15.0" fill="rgb(239,52,31)" rx="2" ry="2" />
<text  x="1189.19" y="943.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (1 samples, 0.02%)</title><rect x="427.3" y="1653" width="0.2" height="15.0" fill="rgb(205,29,28)" rx="2" ry="2" />
<text  x="430.31" y="1663.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="896.4" y="1717" width="0.2" height="15.0" fill="rgb(240,10,49)" rx="2" ry="2" />
<text  x="899.40" y="1727.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.02%)</title><rect x="49.7" y="1573" width="0.2" height="15.0" fill="rgb(249,127,53)" rx="2" ry="2" />
<text  x="52.67" y="1583.5" ></text>
</g>
<g >
<title>query::digester::digester (5 samples, 0.09%)</title><rect x="609.7" y="1829" width="1.2" height="15.0" fill="rgb(253,126,10)" rx="2" ry="2" />
<text  x="612.75" y="1839.5" ></text>
</g>
<g >
<title>sched_setaffinity@@GLIBC_2.3.4 (40 samples, 0.76%)</title><rect x="1177.2" y="2053" width="9.0" height="15.0" fill="rgb(210,196,0)" rx="2" ry="2" />
<text  x="1180.23" y="2063.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (14 samples, 0.27%)</title><rect x="1186.2" y="805" width="3.1" height="15.0" fill="rgb(242,54,3)" rx="2" ry="2" />
<text  x="1189.19" y="815.5" ></text>
</g>
<g >
<title>locator::abstract_replication_strategy::get_natural_endpoints (1 samples, 0.02%)</title><rect x="1129.0" y="1605" width="0.3" height="15.0" fill="rgb(218,118,19)" rx="2" ry="2" />
<text  x="1132.04" y="1615.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;mutation_reader_merger::reader_and_last_fragment_kind*, mutation_reader_merger::prepare_next (2 samples, 0.04%)</title><rect x="107.5" y="1509" width="0.4" height="15.0" fill="rgb(227,161,1)" rx="2" ry="2" />
<text  x="110.49" y="1519.5" ></text>
</g>
<g >
<title>partition_version_ref::operator (2 samples, 0.04%)</title><rect x="533.3" y="1653" width="0.5" height="15.0" fill="rgb(207,220,36)" rx="2" ry="2" />
<text  x="536.32" y="1663.5" ></text>
</g>
<g >
<title>mutation_querier::mutation_querier (8 samples, 0.15%)</title><rect x="342.8" y="1605" width="1.8" height="15.0" fill="rgb(249,181,51)" rx="2" ry="2" />
<text  x="345.82" y="1615.5" ></text>
</g>
<g >
<title>seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::expand (19 samples, 0.36%)</title><rect x="314.8" y="1733" width="4.3" height="15.0" fill="rgb(243,116,19)" rx="2" ry="2" />
<text  x="317.81" y="1743.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (2 samples, 0.04%)</title><rect x="580.4" y="1701" width="0.4" height="15.0" fill="rgb(231,13,22)" rx="2" ry="2" />
<text  x="583.39" y="1711.5" ></text>
</g>
<g >
<title>bound_view::from_range&lt;nonwrapping_interval&gt; (1 samples, 0.02%)</title><rect x="263.0" y="1573" width="0.3" height="15.0" fill="rgb(244,141,51)" rx="2" ry="2" />
<text  x="266.03" y="1583.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reserve&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::fill_buffer (1 samples, 0.02%)</title><rect x="1187.5" y="53" width="0.3" height="15.0" fill="rgb(219,103,21)" rx="2" ry="2" />
<text  x="1190.53" y="63.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::revoke_role_statement, std::default_delete&lt;cql3::statements::revoke_role_statement&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="67.8" y="1797" width="0.2" height="15.0" fill="rgb(215,77,52)" rx="2" ry="2" />
<text  x="70.82" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_node (2 samples, 0.04%)</title><rect x="664.4" y="1861" width="0.5" height="15.0" fill="rgb(241,95,10)" rx="2" ry="2" />
<text  x="667.43" y="1871.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (1 samples, 0.02%)</title><rect x="685.1" y="1909" width="0.2" height="15.0" fill="rgb(220,151,45)" rx="2" ry="2" />
<text  x="688.05" y="1919.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="259.4" y="1589" width="0.3" height="15.0" fill="rgb(239,164,28)" rx="2" ry="2" />
<text  x="262.45" y="1599.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (3 samples, 0.06%)</title><rect x="452.6" y="1797" width="0.7" height="15.0" fill="rgb(210,225,42)" rx="2" ry="2" />
<text  x="455.64" y="1807.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (2 samples, 0.04%)</title><rect x="46.1" y="1733" width="0.4" height="15.0" fill="rgb(222,137,9)" rx="2" ry="2" />
<text  x="49.08" y="1743.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, enum_set&lt;super_enum&lt;auth::permission,  (66 samples, 1.25%)</title><rect x="781.0" y="1669" width="14.8" height="15.0" fill="rgb(237,225,28)" rx="2" ry="2" />
<text  x="783.98" y="1679.5" ></text>
</g>
<g >
<title>db::schema_tables::merge_schema (3 samples, 0.06%)</title><rect x="107.5" y="1925" width="0.7" height="15.0" fill="rgb(252,189,21)" rx="2" ry="2" />
<text  x="110.49" y="1935.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.02%)</title><rect x="1139.3" y="1909" width="0.3" height="15.0" fill="rgb(221,201,43)" rx="2" ry="2" />
<text  x="1142.35" y="1919.5" ></text>
</g>
<g >
<title>std::construct_at&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::entry&gt; (1 samples, 0.02%)</title><rect x="1016.1" y="1637" width="0.2" height="15.0" fill="rgb(206,174,26)" rx="2" ry="2" />
<text  x="1019.08" y="1647.5" ></text>
</g>
<g >
<title>syscall-0 (1 samples, 0.02%)</title><rect x="1189.8" y="2069" width="0.2" height="15.0" fill="rgb(243,59,43)" rx="2" ry="2" />
<text  x="1192.78" y="2079.5" ></text>
</g>
<g >
<title>std::operator+ (3 samples, 0.06%)</title><rect x="53.0" y="1589" width="0.7" height="15.0" fill="rgb(249,54,34)" rx="2" ry="2" />
<text  x="56.03" y="1599.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::emplace_back&lt;unsigned int const&amp;&gt; (2 samples, 0.04%)</title><rect x="1096.8" y="1829" width="0.4" height="15.0" fill="rgb(232,29,44)" rx="2" ry="2" />
<text  x="1099.77" y="1839.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::create_clustering_ranges (1 samples, 0.02%)</title><rect x="851.8" y="1813" width="0.2" height="15.0" fill="rgb(232,160,13)" rx="2" ry="2" />
<text  x="854.80" y="1823.5" ></text>
</g>
<g >
<title>absl::hash_internal::HashState::combine_contiguous (1 samples, 0.02%)</title><rect x="826.9" y="1765" width="0.2" height="15.0" fill="rgb(208,223,5)" rx="2" ry="2" />
<text  x="829.92" y="1775.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (14 samples, 0.27%)</title><rect x="1186.2" y="1781" width="3.1" height="15.0" fill="rgb(209,132,33)" rx="2" ry="2" />
<text  x="1189.19" y="1791.5" ></text>
</g>
<g >
<title>managed_bytes::free_chain (3 samples, 0.06%)</title><rect x="440.3" y="1637" width="0.7" height="15.0" fill="rgb(241,15,39)" rx="2" ry="2" />
<text  x="443.31" y="1647.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="812.6" y="1717" width="0.2" height="15.0" fill="rgb(248,71,16)" rx="2" ry="2" />
<text  x="815.58" y="1727.5" ></text>
</g>
<g >
<title>is_system_keyspace (1 samples, 0.02%)</title><rect x="76.6" y="1781" width="0.2" height="15.0" fill="rgb(245,192,50)" rx="2" ry="2" />
<text  x="79.56" y="1791.5" ></text>
</g>
<g >
<title>std::operator==&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; (1 samples, 0.02%)</title><rect x="789.7" y="1573" width="0.2" height="15.0" fill="rgb(252,160,7)" rx="2" ry="2" />
<text  x="792.72" y="1583.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (1 samples, 0.02%)</title><rect x="653.0" y="1877" width="0.2" height="15.0" fill="rgb(218,131,54)" rx="2" ry="2" />
<text  x="656.00" y="1887.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (1 samples, 0.02%)</title><rect x="490.7" y="1733" width="0.3" height="15.0" fill="rgb(220,2,22)" rx="2" ry="2" />
<text  x="493.74" y="1743.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.02%)</title><rect x="1177.0" y="1989" width="0.2" height="15.0" fill="rgb(235,87,37)" rx="2" ry="2" />
<text  x="1180.00" y="1999.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;cql3::expr::expression&gt;::new_allocator (1 samples, 0.02%)</title><rect x="64.2" y="1653" width="0.3" height="15.0" fill="rgb(210,126,35)" rx="2" ry="2" />
<text  x="67.24" y="1663.5" ></text>
</g>
<g >
<title>service::storage_proxy::cannot_hint&lt;boost::range::joined_range&lt;utils::small_vector&lt;gms::inet_address, 3ul&gt;, utils::small_vector&lt;gms::inet_address, 1ul&gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="1129.3" y="1621" width="0.2" height="15.0" fill="rgb(244,138,8)" rx="2" ry="2" />
<text  x="1132.26" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;seastar::future&lt;void&gt; &gt;  (1 samples, 0.02%)</title><rect x="627.7" y="1861" width="0.2" height="15.0" fill="rgb(237,66,26)" rx="2" ry="2" />
<text  x="630.68" y="1871.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_pausable_in_thread&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;sstables::sstable_writer&gt; &gt;, flat_mutation_reader::no_filter&gt; (1 samples, 0.02%)</title><rect x="1187.1" y="181" width="0.2" height="15.0" fill="rgb(248,229,0)" rx="2" ry="2" />
<text  x="1190.09" y="191.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;seastar::file_impl&gt; &gt;, seastar::make_file_impl (1 samples, 0.02%)</title><rect x="674.7" y="1925" width="0.3" height="15.0" fill="rgb(211,139,37)" rx="2" ry="2" />
<text  x="677.74" y="1935.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.04%)</title><rect x="104.6" y="1909" width="0.4" height="15.0" fill="rgb(229,22,16)" rx="2" ry="2" />
<text  x="107.58" y="1919.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::check_access (14 samples, 0.27%)</title><rect x="78.4" y="1909" width="3.1" height="15.0" fill="rgb(239,59,34)" rx="2" ry="2" />
<text  x="81.36" y="1919.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (14 samples, 0.27%)</title><rect x="1186.2" y="501" width="3.1" height="15.0" fill="rgb(225,127,52)" rx="2" ry="2" />
<text  x="1189.19" y="511.5" ></text>
</g>
<g >
<title>seastar::memory::stats (2 samples, 0.04%)</title><rect x="199.2" y="1669" width="0.4" height="15.0" fill="rgb(252,190,34)" rx="2" ry="2" />
<text  x="202.16" y="1679.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (3 samples, 0.06%)</title><rect x="805.6" y="1701" width="0.7" height="15.0" fill="rgb(219,179,36)" rx="2" ry="2" />
<text  x="808.63" y="1711.5" ></text>
</g>
<g >
<title>ser::writer_of_std__optional__qr_cell&lt;bytes_ostream&gt;::write (1 samples, 0.02%)</title><rect x="364.3" y="1605" width="0.3" height="15.0" fill="rgb(236,216,17)" rx="2" ry="2" />
<text  x="367.34" y="1615.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::move_it (1 samples, 0.02%)</title><rect x="968.1" y="1781" width="0.2" height="15.0" fill="rgb(212,197,32)" rx="2" ry="2" />
<text  x="971.12" y="1791.5" ></text>
</g>
<g >
<title>cql3::relation::get_operator (1 samples, 0.02%)</title><rect x="72.3" y="1829" width="0.2" height="15.0" fill="rgb(250,35,28)" rx="2" ry="2" />
<text  x="75.31" y="1839.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value, std::allocator&lt;cql3::raw_value&gt; &gt;::vector (8 samples, 0.15%)</title><rect x="840.1" y="1893" width="1.8" height="15.0" fill="rgb(218,78,43)" rx="2" ry="2" />
<text  x="843.15" y="1903.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (3 samples, 0.06%)</title><rect x="204.5" y="1621" width="0.7" height="15.0" fill="rgb(253,124,8)" rx="2" ry="2" />
<text  x="207.54" y="1631.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_range_tombstone (16 samples, 0.30%)</title><rect x="267.3" y="1653" width="3.6" height="15.0" fill="rgb(211,71,42)" rx="2" ry="2" />
<text  x="270.29" y="1663.5" ></text>
</g>
<g >
<title>bound_view::tri_compare::operator (1 samples, 0.02%)</title><rect x="106.8" y="1781" width="0.2" height="15.0" fill="rgb(233,103,16)" rx="2" ry="2" />
<text  x="109.82" y="1791.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, cql3::statements::raw::parsed_statement*, std::default_delete&lt;cql3::statements::raw::parsed_statement&gt; &gt; (1 samples, 0.02%)</title><rect x="68.5" y="1733" width="0.2" height="15.0" fill="rgb(228,187,23)" rx="2" ry="2" />
<text  x="71.50" y="1743.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_psrstate (2 samples, 0.04%)</title><rect x="45.4" y="1765" width="0.5" height="15.0" fill="rgb(236,44,34)" rx="2" ry="2" />
<text  x="48.41" y="1775.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::add_operation (2 samples, 0.04%)</title><rect x="71.9" y="1845" width="0.4" height="15.0" fill="rgb(228,72,7)" rx="2" ry="2" />
<text  x="74.86" y="1855.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.02%)</title><rect x="1131.3" y="1797" width="0.2" height="15.0" fill="rgb(253,20,16)" rx="2" ry="2" />
<text  x="1134.28" y="1807.5" ></text>
</g>
<g >
<title>operator new (8 samples, 0.15%)</title><rect x="1101.5" y="1829" width="1.8" height="15.0" fill="rgb(247,193,25)" rx="2" ry="2" />
<text  x="1104.47" y="1839.5" ></text>
</g>
<g >
<title>_ZSt5applyIZN7seastar8internal12do_with_implIRKNS0_13basic_sstringIcjLj15ELb1EEEN4auth8resourceEJZNK7service12client_state24has_column_family_accessERK8databaseS6_S6_NS7_10permissionENS7_12command_desc4typeEE3$_4EEEDaOT_OT0_DpOT1_EUlDpOT_E_St5tupleIJS6_OS8_EEEDcSJ_SL_ (1 samples, 0.02%)</title><rect x="78.8" y="1877" width="0.2" height="15.0" fill="rgb(211,223,40)" rx="2" ry="2" />
<text  x="81.81" y="1887.5" ></text>
</g>
<g >
<title>service::storage_proxy::do_query (582 samples, 11.05%)</title><rect x="949.5" y="1813" width="130.5" height="15.0" fill="rgb(218,144,39)" rx="2" ry="2" />
<text  x="952.52" y="1823.5" >service::storage..</text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::clear (1 samples, 0.02%)</title><rect x="666.2" y="1909" width="0.3" height="15.0" fill="rgb(249,153,23)" rx="2" ry="2" />
<text  x="669.23" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (25 samples, 0.47%)</title><rect x="12.2" y="2021" width="5.6" height="15.0" fill="rgb(243,206,54)" rx="2" ry="2" />
<text  x="15.24" y="2031.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;compact_for_query&lt; (1 samples, 0.02%)</title><rect x="450.4" y="1765" width="0.2" height="15.0" fill="rgb(240,227,45)" rx="2" ry="2" />
<text  x="453.40" y="1775.5" ></text>
</g>
<g >
<title>reconcilable_result_builder::consume_end_of_partition (1 samples, 0.02%)</title><rect x="107.9" y="1653" width="0.3" height="15.0" fill="rgb(221,38,39)" rx="2" ry="2" />
<text  x="110.94" y="1663.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_locally (4 samples, 0.08%)</title><rect x="1123.4" y="1621" width="0.9" height="15.0" fill="rgb(252,166,23)" rx="2" ry="2" />
<text  x="1126.44" y="1631.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::constant (12 samples, 0.23%)</title><rect x="59.3" y="1701" width="2.7" height="15.0" fill="rgb(253,154,3)" rx="2" ry="2" />
<text  x="62.31" y="1711.5" ></text>
</g>
<g >
<title>db::schema_tables::read_tables_for_keyspaces (1 samples, 0.02%)</title><rect x="107.3" y="1909" width="0.2" height="15.0" fill="rgb(208,40,43)" rx="2" ry="2" />
<text  x="110.27" y="1919.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (4 samples, 0.08%)</title><rect x="428.7" y="1637" width="0.9" height="15.0" fill="rgb(235,138,28)" rx="2" ry="2" />
<text  x="431.66" y="1647.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::remove_if&lt;row::compact_and_expire (1 samples, 0.02%)</title><rect x="349.3" y="1637" width="0.2" height="15.0" fill="rgb(239,144,2)" rx="2" ry="2" />
<text  x="352.32" y="1647.5" ></text>
</g>
<g >
<title>_ZN7seastar12continuationINS_8internal22promise_base_with_typeIvEEZNS_6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE14discard_resultEvEUlDpOT_E_ZNSA_14then_impl_nrvoISE_NS4_IvEEEET0_OT_EUlOS3_RSE_ONS_12future_stateIS9_EEE_S9_E15run_and_disposeEv (1 samples, 0.02%)</title><rect x="84.9" y="1941" width="0.2" height="15.0" fill="rgb(241,95,24)" rx="2" ry="2" />
<text  x="87.86" y="1951.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (1 samples, 0.02%)</title><rect x="1160.9" y="1845" width="0.2" height="15.0" fill="rgb(230,1,7)" rx="2" ry="2" />
<text  x="1163.86" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::~_Variant_storage (2 samples, 0.04%)</title><rect x="879.6" y="1733" width="0.4" height="15.0" fill="rgb(212,167,20)" rx="2" ry="2" />
<text  x="882.59" y="1743.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.08%)</title><rect x="625.9" y="1797" width="0.9" height="15.0" fill="rgb(229,50,25)" rx="2" ry="2" />
<text  x="628.89" y="1807.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;std::function&lt;partition_presence_checker_result  (1 samples, 0.02%)</title><rect x="618.7" y="1845" width="0.2" height="15.0" fill="rgb(253,6,20)" rx="2" ry="2" />
<text  x="621.71" y="1855.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_9has_tokenERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES28_S2B_ (1 samples, 0.02%)</title><rect x="874.0" y="1829" width="0.2" height="15.0" fill="rgb(216,224,35)" rx="2" ry="2" />
<text  x="876.99" y="1839.5" ></text>
</g>
<g >
<title>dht::tri_compare (2 samples, 0.04%)</title><rect x="1058.4" y="1669" width="0.5" height="15.0" fill="rgb(241,193,48)" rx="2" ry="2" />
<text  x="1061.44" y="1679.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (2 samples, 0.04%)</title><rect x="815.3" y="1717" width="0.4" height="15.0" fill="rgb(205,105,36)" rx="2" ry="2" />
<text  x="818.27" y="1727.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_Optional_payload_base (3 samples, 0.06%)</title><rect x="934.7" y="1765" width="0.7" height="15.0" fill="rgb(240,97,18)" rx="2" ry="2" />
<text  x="937.73" y="1775.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (14 samples, 0.27%)</title><rect x="1186.2" y="2005" width="3.1" height="15.0" fill="rgb(251,73,5)" rx="2" ry="2" />
<text  x="1189.19" y="2015.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (43 samples, 0.82%)</title><rect x="847.5" y="1893" width="9.7" height="15.0" fill="rgb(237,224,10)" rx="2" ry="2" />
<text  x="850.54" y="1903.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;std::_List_iterator&lt;flat_mutation_reader&gt;, mutation_reader_merger::close (5 samples, 0.09%)</title><rect x="586.2" y="1797" width="1.1" height="15.0" fill="rgb(246,100,46)" rx="2" ry="2" />
<text  x="589.22" y="1807.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (1 samples, 0.02%)</title><rect x="803.4" y="1749" width="0.2" height="15.0" fill="rgb(213,54,8)" rx="2" ry="2" />
<text  x="806.39" y="1759.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (14 samples, 0.27%)</title><rect x="1186.2" y="1877" width="3.1" height="15.0" fill="rgb(222,80,38)" rx="2" ry="2" />
<text  x="1189.19" y="1887.5" ></text>
</g>
<g >
<title>ser::qr_partition__static_row&lt;bytes_ostream&gt;::start_cells (1 samples, 0.02%)</title><rect x="343.9" y="1589" width="0.3" height="15.0" fill="rgb(232,193,45)" rx="2" ry="2" />
<text  x="346.94" y="1599.5" ></text>
</g>
<g >
<title>cql3::attributes::raw::prepare (1 samples, 0.02%)</title><rect x="69.2" y="1861" width="0.2" height="15.0" fill="rgb(233,140,5)" rx="2" ry="2" />
<text  x="72.17" y="1871.5" ></text>
</g>
<g >
<title>from_hex (1 samples, 0.02%)</title><rect x="73.2" y="1701" width="0.2" height="15.0" fill="rgb(229,19,22)" rx="2" ry="2" />
<text  x="76.20" y="1711.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit_slot&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::walking_visitor&lt;row::for_each_cell&lt;sstables::mc::writer::write_cells (2 samples, 0.04%)</title><rect x="1186.6" y="53" width="0.5" height="15.0" fill="rgb(225,196,22)" rx="2" ry="2" />
<text  x="1189.64" y="63.5" ></text>
</g>
<g >
<title>std::variant&lt;query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::operator=&lt;query::noop_hasher&gt; (1 samples, 0.02%)</title><rect x="610.6" y="1813" width="0.3" height="15.0" fill="rgb(220,30,12)" rx="2" ry="2" />
<text  x="613.65" y="1823.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reserve&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::partition_snapshot_flat_reader&lt;memtable&amp;&gt; (48 samples, 0.91%)</title><rect x="523.2" y="1701" width="10.8" height="15.0" fill="rgb(245,97,4)" rx="2" ry="2" />
<text  x="526.24" y="1711.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_cql (1 samples, 0.02%)</title><rect x="665.1" y="1925" width="0.2" height="15.0" fill="rgb(254,25,41)" rx="2" ry="2" />
<text  x="668.11" y="1935.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.06%)</title><rect x="451.7" y="1749" width="0.7" height="15.0" fill="rgb(244,69,45)" rx="2" ry="2" />
<text  x="454.74" y="1759.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::do_wait_admission (1 samples, 0.02%)</title><rect x="1008.5" y="1669" width="0.2" height="15.0" fill="rgb(234,76,5)" rx="2" ry="2" />
<text  x="1011.46" y="1679.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="51.5" y="1685" width="0.2" height="15.0" fill="rgb(233,210,32)" rx="2" ry="2" />
<text  x="54.46" y="1695.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.02%)</title><rect x="46.8" y="1621" width="0.2" height="15.0" fill="rgb(252,75,7)" rx="2" ry="2" />
<text  x="49.76" y="1631.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_next (2 samples, 0.04%)</title><rect x="107.5" y="1525" width="0.4" height="15.0" fill="rgb(243,75,9)" rx="2" ry="2" />
<text  x="110.49" y="1535.5" ></text>
</g>
<g >
<title>reader_permit::consume_resources (1 samples, 0.02%)</title><rect x="259.9" y="1589" width="0.2" height="15.0" fill="rgb(243,147,11)" rx="2" ry="2" />
<text  x="262.90" y="1599.5" ></text>
</g>
<g >
<title>row_cache::do_make_reader (1 samples, 0.02%)</title><rect x="542.5" y="1765" width="0.2" height="15.0" fill="rgb(235,56,0)" rx="2" ry="2" />
<text  x="545.51" y="1775.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::pop_back (1 samples, 0.02%)</title><rect x="57.5" y="1669" width="0.2" height="15.0" fill="rgb(252,152,28)" rx="2" ry="2" />
<text  x="60.51" y="1679.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_erase_at_end (12 samples, 0.23%)</title><rect x="405.1" y="1605" width="2.7" height="15.0" fill="rgb(236,228,23)" rx="2" ry="2" />
<text  x="408.13" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::~_Variant_storage (1 samples, 0.02%)</title><rect x="895.7" y="1749" width="0.3" height="15.0" fill="rgb(221,162,54)" rx="2" ry="2" />
<text  x="898.73" y="1759.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.02%)</title><rect x="60.7" y="1509" width="0.2" height="15.0" fill="rgb(235,225,8)" rx="2" ry="2" />
<text  x="63.65" y="1519.5" ></text>
</g>
<g >
<title>seastar::repeat&lt;flat_mutation_reader::impl::consume_pausable&lt;flush_reader::fill_buffer (1 samples, 0.02%)</title><rect x="1186.4" y="165" width="0.2" height="15.0" fill="rgb(251,210,9)" rx="2" ry="2" />
<text  x="1189.41" y="175.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.02%)</title><rect x="49.0" y="1653" width="0.2" height="15.0" fill="rgb(244,118,36)" rx="2" ry="2" />
<text  x="52.00" y="1663.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;dht::ring_position&gt;::wrapping_interval (3 samples, 0.06%)</title><rect x="919.9" y="1781" width="0.7" height="15.0" fill="rgb(217,227,19)" rx="2" ry="2" />
<text  x="922.93" y="1791.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;interval_bound&lt;dht::ring_position&gt;, false, false&gt;::_Optional_base (2 samples, 0.04%)</title><rect x="934.3" y="1781" width="0.4" height="15.0" fill="rgb(245,13,8)" rx="2" ry="2" />
<text  x="937.28" y="1791.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::find&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (8 samples, 0.15%)</title><rect x="811.9" y="1749" width="1.8" height="15.0" fill="rgb(207,224,35)" rx="2" ry="2" />
<text  x="814.91" y="1759.5" ></text>
</g>
<g >
<title>query::querier&lt; (1,822 samples, 34.61%)</title><rect x="161.1" y="1861" width="408.3" height="15.0" fill="rgb(219,33,52)" rx="2" ry="2" />
<text  x="164.06" y="1871.5" >query::querier&lt;</text>
</g>
<g >
<title>db::filter_for_query (8 samples, 0.15%)</title><rect x="1041.6" y="1765" width="1.8" height="15.0" fill="rgb(233,143,42)" rx="2" ry="2" />
<text  x="1044.63" y="1775.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="688.6" y="1877" width="0.3" height="15.0" fill="rgb(210,161,6)" rx="2" ry="2" />
<text  x="691.64" y="1887.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::then_wrapped_common&lt;false, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (1 samples, 0.02%)</title><rect x="822.0" y="1861" width="0.2" height="15.0" fill="rgb(215,224,48)" rx="2" ry="2" />
<text  x="824.99" y="1871.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.08%)</title><rect x="97.4" y="1893" width="0.9" height="15.0" fill="rgb(220,110,45)" rx="2" ry="2" />
<text  x="100.41" y="1903.5" ></text>
</g>
<g >
<title>antlr3::Lexer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::~Lexer (1 samples, 0.02%)</title><rect x="23.9" y="1845" width="0.2" height="15.0" fill="rgb(225,156,40)" rx="2" ry="2" />
<text  x="26.90" y="1855.5" ></text>
</g>
<g >
<title>seastar::reactor_backend_aio::kernel_submit_work (1 samples, 0.02%)</title><rect x="1163.6" y="1941" width="0.2" height="15.0" fill="rgb(210,76,28)" rx="2" ry="2" />
<text  x="1166.55" y="1951.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (35 samples, 0.66%)</title><rect x="1122.3" y="1797" width="7.9" height="15.0" fill="rgb(235,59,25)" rx="2" ry="2" />
<text  x="1125.32" y="1807.5" ></text>
</g>
<g >
<title>__tls_init (1 samples, 0.02%)</title><rect x="525.3" y="1653" width="0.2" height="15.0" fill="rgb(250,23,4)" rx="2" ry="2" />
<text  x="528.26" y="1663.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::emplace_back&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; const&amp;&gt; (2 samples, 0.04%)</title><rect x="768.2" y="1781" width="0.5" height="15.0" fill="rgb(212,190,16)" rx="2" ry="2" />
<text  x="771.20" y="1791.5" ></text>
</g>
<g >
<title>seastar::basic_semaphore&lt;seastar::semaphore_default_exception_factory, std::chrono::_V2::steady_clock&gt;::wait (3 samples, 0.06%)</title><rect x="613.6" y="1861" width="0.6" height="15.0" fill="rgb(213,69,27)" rx="2" ry="2" />
<text  x="616.56" y="1871.5" ></text>
</g>
<g >
<title>utils::tuple_hash::operator (1 samples, 0.02%)</title><rect x="762.6" y="1781" width="0.2" height="15.0" fill="rgb(252,213,20)" rx="2" ry="2" />
<text  x="765.60" y="1791.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (3 samples, 0.06%)</title><rect x="159.5" y="1845" width="0.7" height="15.0" fill="rgb(233,132,20)" rx="2" ry="2" />
<text  x="162.49" y="1855.5" ></text>
</g>
<g >
<title>abstract_type::validate&lt;managed_bytes_basic_view&lt; (5 samples, 0.09%)</title><rect x="884.3" y="1701" width="1.1" height="15.0" fill="rgb(217,162,37)" rx="2" ry="2" />
<text  x="887.30" y="1711.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_no_esft&lt;query::read_command&gt;::shared_ptr_no_esft&lt;utils::UUID const&amp;, utils::UUID, query::partition_slice, query::max_result_size, query::row_limit, query::partition_limit, std::chrono::time_point&lt;gc_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt; &gt;&amp;, std::optional&lt;tracing::trace_info&gt;, utils::UUID, seastar::bool_class&lt;query::is_first_page_tag&gt; const&amp;, long&gt; (14 samples, 0.27%)</title><rect x="1103.3" y="1829" width="3.1" height="15.0" fill="rgb(242,201,53)" rx="2" ry="2" />
<text  x="1106.26" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::_Copy_ctor_base (3 samples, 0.06%)</title><rect x="347.8" y="1605" width="0.6" height="15.0" fill="rgb(225,15,5)" rx="2" ry="2" />
<text  x="350.75" y="1615.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (13 samples, 0.25%)</title><rect x="98.3" y="1893" width="2.9" height="15.0" fill="rgb(211,176,22)" rx="2" ry="2" />
<text  x="101.30" y="1903.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE9then_implIZNS6_14discard_resultEvEUlDpOT_E_NS0_IvEEEET0_OT_ (3 samples, 0.06%)</title><rect x="719.8" y="1909" width="0.7" height="15.0" fill="rgb(246,193,50)" rx="2" ry="2" />
<text  x="722.79" y="1919.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consumer_adapter&lt;sstables::sstable_writer&gt;::consume (1 samples, 0.02%)</title><rect x="1189.1" y="37" width="0.2" height="15.0" fill="rgb(242,169,4)" rx="2" ry="2" />
<text  x="1192.10" y="47.5" ></text>
</g>
<g >
<title>seastar::jmp_buf_link::switch_in (1 samples, 0.02%)</title><rect x="636.2" y="1909" width="0.2" height="15.0" fill="rgb(254,216,12)" rx="2" ry="2" />
<text  x="639.20" y="1919.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::construct&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (1 samples, 0.02%)</title><rect x="28.8" y="1669" width="0.3" height="15.0" fill="rgb(242,150,12)" rx="2" ry="2" />
<text  x="31.83" y="1679.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="901.8" y="1797" width="0.2" height="15.0" fill="rgb(215,125,10)" rx="2" ry="2" />
<text  x="904.78" y="1807.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_in_thread&lt;sstables::sstable_writer, flat_mutation_reader::no_filter&gt; (2 samples, 0.04%)</title><rect x="1186.6" y="213" width="0.5" height="15.0" fill="rgb(249,157,53)" rx="2" ry="2" />
<text  x="1189.64" y="223.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_wrapped_nrvo&lt;seastar::future&lt;void&gt;, utils::flush_queue&lt;db::replay_position, std::less&lt;db::replay_position&gt;, seastar::lowres_clock&gt;::run_with_ordered_post_op&lt;db::commitlog::segment::cycle (1 samples, 0.02%)</title><rect x="1121.9" y="1621" width="0.2" height="15.0" fill="rgb(241,42,21)" rx="2" ry="2" />
<text  x="1124.87" y="1631.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="460.7" y="1797" width="0.2" height="15.0" fill="rgb(219,196,4)" rx="2" ry="2" />
<text  x="463.71" y="1807.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (11 samples, 0.21%)</title><rect x="824.7" y="1813" width="2.4" height="15.0" fill="rgb(238,183,27)" rx="2" ry="2" />
<text  x="827.68" y="1823.5" ></text>
</g>
<g >
<title>sstables::compaction::run&lt;noop_compacted_fragments_consumer&gt; (1 samples, 0.02%)</title><rect x="1131.3" y="1861" width="0.2" height="15.0" fill="rgb(227,131,48)" rx="2" ry="2" />
<text  x="1134.28" y="1871.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (6 samples, 0.11%)</title><rect x="746.0" y="1733" width="1.4" height="15.0" fill="rgb(207,25,11)" rx="2" ry="2" />
<text  x="749.02" y="1743.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::execute (48 samples, 0.91%)</title><rect x="688.9" y="1925" width="10.7" height="15.0" fill="rgb(237,229,48)" rx="2" ry="2" />
<text  x="691.86" y="1935.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (4 samples, 0.08%)</title><rect x="1019.7" y="1653" width="0.9" height="15.0" fill="rgb(209,83,26)" rx="2" ry="2" />
<text  x="1022.67" y="1663.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (2 samples, 0.04%)</title><rect x="962.1" y="1749" width="0.4" height="15.0" fill="rgb(212,194,54)" rx="2" ry="2" />
<text  x="965.07" y="1759.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (3 samples, 0.06%)</title><rect x="458.2" y="1845" width="0.7" height="15.0" fill="rgb(243,136,4)" rx="2" ry="2" />
<text  x="461.24" y="1855.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (1 samples, 0.02%)</title><rect x="10.7" y="1909" width="0.2" height="15.0" fill="rgb(235,140,25)" rx="2" ry="2" />
<text  x="13.67" y="1919.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (1 samples, 0.02%)</title><rect x="160.8" y="1845" width="0.3" height="15.0" fill="rgb(217,4,10)" rx="2" ry="2" />
<text  x="163.83" y="1855.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (1 samples, 0.02%)</title><rect x="58.2" y="1669" width="0.2" height="15.0" fill="rgb(217,37,7)" rx="2" ry="2" />
<text  x="61.19" y="1679.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (2 samples, 0.04%)</title><rect x="196.2" y="1701" width="0.5" height="15.0" fill="rgb(227,208,12)" rx="2" ry="2" />
<text  x="199.25" y="1711.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="192.2" y="1669" width="0.2" height="15.0" fill="rgb(233,64,35)" rx="2" ry="2" />
<text  x="195.21" y="1679.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (8 samples, 0.15%)</title><rect x="510.9" y="1621" width="1.8" height="15.0" fill="rgb(214,100,34)" rx="2" ry="2" />
<text  x="513.91" y="1631.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::~modification_statement (1 samples, 0.02%)</title><rect x="646.5" y="1893" width="0.2" height="15.0" fill="rgb(243,124,10)" rx="2" ry="2" />
<text  x="649.51" y="1903.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::get_promise (1 samples, 0.02%)</title><rect x="1100.8" y="1845" width="0.2" height="15.0" fill="rgb(247,209,4)" rx="2" ry="2" />
<text  x="1103.80" y="1855.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="55.5" y="1509" width="0.2" height="15.0" fill="rgb(253,102,42)" rx="2" ry="2" />
<text  x="58.50" y="1519.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;void&gt;  (2 samples, 0.04%)</title><rect x="83.3" y="2037" width="0.4" height="15.0" fill="rgb(235,58,50)" rx="2" ry="2" />
<text  x="86.29" y="2047.5" ></text>
</g>
<g >
<title>tracing::add_table_name (2 samples, 0.04%)</title><rect x="1112.0" y="1845" width="0.5" height="15.0" fill="rgb(228,165,30)" rx="2" ry="2" />
<text  x="1115.01" y="1855.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::operator (9 samples, 0.17%)</title><rect x="184.1" y="1685" width="2.1" height="15.0" fill="rgb(211,155,39)" rx="2" ry="2" />
<text  x="187.14" y="1695.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::do_fill_buffer (341 samples, 6.48%)</title><rect x="199.6" y="1685" width="76.4" height="15.0" fill="rgb(216,132,39)" rx="2" ry="2" />
<text  x="202.61" y="1695.5" >partitio..</text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::indirect_move (1 samples, 0.02%)</title><rect x="1014.1" y="1573" width="0.2" height="15.0" fill="rgb(220,59,24)" rx="2" ry="2" />
<text  x="1017.06" y="1583.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (1 samples, 0.02%)</title><rect x="1039.4" y="1685" width="0.2" height="15.0" fill="rgb(215,171,46)" rx="2" ry="2" />
<text  x="1042.39" y="1695.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (20 samples, 0.38%)</title><rect x="731.2" y="1781" width="4.5" height="15.0" fill="rgb(251,151,36)" rx="2" ry="2" />
<text  x="734.22" y="1791.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;service::digest_read_result&gt;::set_value&lt;service::digest_read_result&gt; (1 samples, 0.02%)</title><rect x="706.1" y="1861" width="0.2" height="15.0" fill="rgb(240,104,47)" rx="2" ry="2" />
<text  x="709.12" y="1871.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (2 samples, 0.04%)</title><rect x="1111.6" y="1829" width="0.4" height="15.0" fill="rgb(224,110,38)" rx="2" ry="2" />
<text  x="1114.56" y="1839.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (2 samples, 0.04%)</title><rect x="1082.2" y="1829" width="0.4" height="15.0" fill="rgb(237,12,7)" rx="2" ry="2" />
<text  x="1085.20" y="1839.5" ></text>
</g>
<g >
<title>reader_permit::consume (1 samples, 0.02%)</title><rect x="530.4" y="1605" width="0.2" height="15.0" fill="rgb(249,129,27)" rx="2" ry="2" />
<text  x="533.41" y="1615.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (4 samples, 0.08%)</title><rect x="60.9" y="1605" width="0.9" height="15.0" fill="rgb(247,81,50)" rx="2" ry="2" />
<text  x="63.88" y="1615.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.02%)</title><rect x="551.5" y="1701" width="0.2" height="15.0" fill="rgb(252,167,18)" rx="2" ry="2" />
<text  x="554.48" y="1711.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_clear (13 samples, 0.25%)</title><rect x="590.7" y="1781" width="2.9" height="15.0" fill="rgb(248,164,10)" rx="2" ry="2" />
<text  x="593.70" y="1791.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;seastar::shared_ptr&lt;cql3::relation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::relation&gt; &gt; &gt;::get_allocator (1 samples, 0.02%)</title><rect x="66.3" y="1749" width="0.2" height="15.0" fill="rgb(205,187,54)" rx="2" ry="2" />
<text  x="69.25" y="1759.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::digest_read_result&gt;::move_it (1 samples, 0.02%)</title><rect x="968.3" y="1781" width="0.3" height="15.0" fill="rgb(230,22,24)" rx="2" ry="2" />
<text  x="971.34" y="1791.5" ></text>
</g>
<g >
<title>flat_mutation_reader::peek (701 samples, 13.31%)</title><rect x="166.2" y="1829" width="157.1" height="15.0" fill="rgb(229,35,51)" rx="2" ry="2" />
<text  x="169.21" y="1839.5" >flat_mutation_reader..</text>
</g>
<g >
<title>std::apply&lt;auth::get_permissions (4 samples, 0.08%)</title><rect x="79.7" y="1781" width="0.9" height="15.0" fill="rgb(240,198,28)" rx="2" ry="2" />
<text  x="82.70" y="1791.5" ></text>
</g>
<g >
<title>validation::validate_column_family (2 samples, 0.04%)</title><rect x="77.5" y="1877" width="0.4" height="15.0" fill="rgb(234,145,52)" rx="2" ry="2" />
<text  x="80.46" y="1887.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="49.7" y="1653" width="0.2" height="15.0" fill="rgb(227,18,11)" rx="2" ry="2" />
<text  x="52.67" y="1663.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::then_wrapped_nrvo&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (9 samples, 0.17%)</title><rect x="820.0" y="1829" width="2.0" height="15.0" fill="rgb(245,221,49)" rx="2" ry="2" />
<text  x="822.98" y="1839.5" ></text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::operator (9 samples, 0.17%)</title><rect x="751.8" y="1813" width="2.1" height="15.0" fill="rgb(228,229,25)" rx="2" ry="2" />
<text  x="754.84" y="1823.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::clear (1 samples, 0.02%)</title><rect x="477.7" y="1717" width="0.3" height="15.0" fill="rgb(234,100,3)" rx="2" ry="2" />
<text  x="480.74" y="1727.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, seastar::do_recursive_touch_directory (1 samples, 0.02%)</title><rect x="688.6" y="1925" width="0.3" height="15.0" fill="rgb(230,168,32)" rx="2" ry="2" />
<text  x="691.64" y="1935.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.02%)</title><rect x="115.3" y="1893" width="0.3" height="15.0" fill="rgb(248,132,45)" rx="2" ry="2" />
<text  x="118.34" y="1903.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::execute (634 samples, 12.04%)</title><rect x="940.6" y="1845" width="142.0" height="15.0" fill="rgb(213,52,39)" rx="2" ry="2" />
<text  x="943.55" y="1855.5" >cql3::statements::..</text>
</g>
<g >
<title>seastar::memory::cpu_pages::allocate_large (1 samples, 0.02%)</title><rect x="566.3" y="1733" width="0.2" height="15.0" fill="rgb(226,156,33)" rx="2" ry="2" />
<text  x="569.27" y="1743.5" ></text>
</g>
<g >
<title>mutation_fragment::operator= (1 samples, 0.02%)</title><rect x="188.8" y="1669" width="0.3" height="15.0" fill="rgb(235,164,29)" rx="2" ry="2" />
<text  x="191.85" y="1679.5" ></text>
</g>
<g >
<title>ser::writer_of_query_result&lt;bytes_ostream&gt;::start_partitions (1 samples, 0.02%)</title><rect x="610.9" y="1829" width="0.2" height="15.0" fill="rgb(245,210,2)" rx="2" ry="2" />
<text  x="613.87" y="1839.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (3 samples, 0.06%)</title><rect x="135.1" y="1797" width="0.6" height="15.0" fill="rgb(227,216,35)" rx="2" ry="2" />
<text  x="138.06" y="1807.5" ></text>
</g>
<g >
<title>cql3::constants::setter::execute (1 samples, 0.02%)</title><rect x="852.0" y="1765" width="0.2" height="15.0" fill="rgb(254,58,29)" rx="2" ry="2" />
<text  x="855.02" y="1775.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (10 samples, 0.19%)</title><rect x="975.1" y="1733" width="2.2" height="15.0" fill="rgb(242,229,42)" rx="2" ry="2" />
<text  x="978.07" y="1743.5" ></text>
</g>
<g >
<title>allocation_strategy::alloc&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::leaf_node&gt; (1 samples, 0.02%)</title><rect x="225.2" y="1541" width="0.2" height="15.0" fill="rgb(226,135,9)" rx="2" ry="2" />
<text  x="228.16" y="1551.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;flat_mutation_reader&gt;::allocate (1 samples, 0.02%)</title><rect x="465.4" y="1765" width="0.2" height="15.0" fill="rgb(240,79,39)" rx="2" ry="2" />
<text  x="468.42" y="1775.5" ></text>
</g>
<g >
<title>utils::tuple_hash::hash_impl&lt;2ul, auth::resource_kind, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (6 samples, 0.11%)</title><rect x="793.8" y="1541" width="1.3" height="15.0" fill="rgb(235,219,4)" rx="2" ry="2" />
<text  x="796.75" y="1551.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::unique_ptr&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, std::default_delete&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt; &gt;::new_allocator (1 samples, 0.02%)</title><rect x="24.6" y="1781" width="0.2" height="15.0" fill="rgb(227,38,25)" rx="2" ry="2" />
<text  x="27.57" y="1791.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (4 samples, 0.08%)</title><rect x="313.7" y="1717" width="0.9" height="15.0" fill="rgb(213,195,42)" rx="2" ry="2" />
<text  x="316.68" y="1727.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.02%)</title><rect x="51.5" y="1573" width="0.2" height="15.0" fill="rgb(241,142,12)" rx="2" ry="2" />
<text  x="54.46" y="1583.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (2 samples, 0.04%)</title><rect x="783.9" y="1557" width="0.4" height="15.0" fill="rgb(246,172,23)" rx="2" ry="2" />
<text  x="786.89" y="1567.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (2 samples, 0.04%)</title><rect x="47.0" y="1637" width="0.4" height="15.0" fill="rgb(227,74,43)" rx="2" ry="2" />
<text  x="49.98" y="1647.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="687.7" y="1733" width="0.3" height="15.0" fill="rgb(228,66,50)" rx="2" ry="2" />
<text  x="690.74" y="1743.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="646.5" y="1765" width="0.2" height="15.0" fill="rgb(245,189,30)" rx="2" ry="2" />
<text  x="649.51" y="1775.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.04%)</title><rect x="327.6" y="1717" width="0.4" height="15.0" fill="rgb(244,173,27)" rx="2" ry="2" />
<text  x="330.58" y="1727.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (2 samples, 0.04%)</title><rect x="51.7" y="1701" width="0.4" height="15.0" fill="rgb(253,82,17)" rx="2" ry="2" />
<text  x="54.69" y="1711.5" ></text>
</g>
<g >
<title>std::type_info::operator== (1 samples, 0.02%)</title><rect x="1023.3" y="1685" width="0.2" height="15.0" fill="rgb(226,229,37)" rx="2" ry="2" />
<text  x="1026.25" y="1695.5" ></text>
</g>
<g >
<title>partition_version::~partition_version (1 samples, 0.02%)</title><rect x="83.5" y="1909" width="0.2" height="15.0" fill="rgb(205,158,20)" rx="2" ry="2" />
<text  x="86.51" y="1919.5" ></text>
</g>
<g >
<title>std::__equal&lt;true&gt;::equal&lt;signed char&gt; (1 samples, 0.02%)</title><rect x="746.7" y="1701" width="0.2" height="15.0" fill="rgb(208,124,48)" rx="2" ry="2" />
<text  x="749.69" y="1711.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="665.8" y="1893" width="0.2" height="15.0" fill="rgb(233,25,44)" rx="2" ry="2" />
<text  x="668.78" y="1903.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (4 samples, 0.08%)</title><rect x="60.9" y="1621" width="0.9" height="15.0" fill="rgb(224,195,25)" rx="2" ry="2" />
<text  x="63.88" y="1631.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::inet_address (1 samples, 0.02%)</title><rect x="1043.6" y="1765" width="0.3" height="15.0" fill="rgb(240,179,50)" rx="2" ry="2" />
<text  x="1046.65" y="1775.5" ></text>
</g>
<g >
<title>seastar::promise&lt;void&gt;::promise (3 samples, 0.06%)</title><rect x="632.6" y="1909" width="0.7" height="15.0" fill="rgb(225,205,33)" rx="2" ry="2" />
<text  x="635.61" y="1919.5" ></text>
</g>
<g >
<title>row::external_memory_usage (29 samples, 0.55%)</title><rect x="252.9" y="1573" width="6.5" height="15.0" fill="rgb(244,51,51)" rx="2" ry="2" />
<text  x="255.95" y="1583.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::vector (1 samples, 0.02%)</title><rect x="851.6" y="1781" width="0.2" height="15.0" fill="rgb(249,59,40)" rx="2" ry="2" />
<text  x="854.58" y="1791.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::clear (1 samples, 0.02%)</title><rect x="809.4" y="1765" width="0.3" height="15.0" fill="rgb(212,74,2)" rx="2" ry="2" />
<text  x="812.44" y="1775.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;std::optional&lt;auth::resource&gt; &gt;, seastar::future&lt;bool&gt; &gt;, std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;std::optional&lt;auth::resource&gt; &gt;, seastar::future&lt;bool&gt; &gt; &gt; &gt;::~unique_ptr (6 samples, 0.11%)</title><rect x="802.0" y="1749" width="1.4" height="15.0" fill="rgb(238,145,1)" rx="2" ry="2" />
<text  x="805.05" y="1759.5" ></text>
</g>
<g >
<title>db::commitlog::segment::cycle (1 samples, 0.02%)</title><rect x="1121.9" y="1669" width="0.2" height="15.0" fill="rgb(244,95,10)" rx="2" ry="2" />
<text  x="1124.87" y="1679.5" ></text>
</g>
<g >
<title>bplus::tree&lt;long, intrusive_array&lt;memtable_entry&gt;, dht::raw_token_less_comparator, 16ul,  (4 samples, 0.08%)</title><rect x="1117.2" y="1621" width="0.9" height="15.0" fill="rgb(237,104,54)" rx="2" ry="2" />
<text  x="1120.16" y="1631.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_clear (2 samples, 0.04%)</title><rect x="477.3" y="1717" width="0.4" height="15.0" fill="rgb(208,105,23)" rx="2" ry="2" />
<text  x="480.29" y="1727.5" ></text>
</g>
<g >
<title>service::abstract_write_response_handler::signal (1 samples, 0.02%)</title><rect x="716.0" y="1877" width="0.2" height="15.0" fill="rgb(222,211,20)" rx="2" ry="2" />
<text  x="718.98" y="1887.5" ></text>
</g>
<g >
<title>mutation_fragment::visit&lt;partition_snapshot_read_accounter&amp;&gt; (1 samples, 0.02%)</title><rect x="202.3" y="1669" width="0.2" height="15.0" fill="rgb(238,115,13)" rx="2" ry="2" />
<text  x="205.30" y="1679.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (2 samples, 0.04%)</title><rect x="1080.9" y="1797" width="0.4" height="15.0" fill="rgb(211,186,7)" rx="2" ry="2" />
<text  x="1083.85" y="1807.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (8 samples, 0.15%)</title><rect x="1090.5" y="1765" width="1.8" height="15.0" fill="rgb(236,26,54)" rx="2" ry="2" />
<text  x="1093.49" y="1775.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (2 samples, 0.04%)</title><rect x="536.2" y="1749" width="0.5" height="15.0" fill="rgb(242,135,45)" rx="2" ry="2" />
<text  x="539.24" y="1759.5" ></text>
</g>
<g >
<title>database::find_column_family (5 samples, 0.09%)</title><rect x="810.6" y="1765" width="1.1" height="15.0" fill="rgb(214,10,54)" rx="2" ry="2" />
<text  x="813.56" y="1775.5" ></text>
</g>
<g >
<title>__strlen_avx2 (16 samples, 0.30%)</title><rect x="999.5" y="1669" width="3.6" height="15.0" fill="rgb(232,136,43)" rx="2" ry="2" />
<text  x="1002.50" y="1679.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (1 samples, 0.02%)</title><rect x="142.9" y="1813" width="0.2" height="15.0" fill="rgb(226,150,24)" rx="2" ry="2" />
<text  x="145.90" y="1823.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="830.3" y="1765" width="0.2" height="15.0" fill="rgb(207,44,11)" rx="2" ry="2" />
<text  x="833.28" y="1775.5" ></text>
</g>
<g >
<title>ser::mutation_view::partition (1 samples, 0.02%)</title><rect x="1115.6" y="1653" width="0.2" height="15.0" fill="rgb(232,178,2)" rx="2" ry="2" />
<text  x="1118.59" y="1663.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (10 samples, 0.19%)</title><rect x="548.6" y="1733" width="2.2" height="15.0" fill="rgb(225,182,50)" rx="2" ry="2" />
<text  x="551.56" y="1743.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.02%)</title><rect x="1131.3" y="1781" width="0.2" height="15.0" fill="rgb(210,17,13)" rx="2" ry="2" />
<text  x="1134.28" y="1791.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (14 samples, 0.27%)</title><rect x="1186.2" y="661" width="3.1" height="15.0" fill="rgb(240,173,21)" rx="2" ry="2" />
<text  x="1189.19" y="671.5" ></text>
</g>
<g >
<title>nonwrapping_interval&lt;clustering_key_prefix&gt;::nonwrapping_interval (7 samples, 0.13%)</title><rect x="1086.5" y="1797" width="1.5" height="15.0" fill="rgb(207,67,28)" rx="2" ry="2" />
<text  x="1089.46" y="1807.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_sync (1 samples, 0.02%)</title><rect x="1189.6" y="2053" width="0.2" height="15.0" fill="rgb(243,142,31)" rx="2" ry="2" />
<text  x="1192.55" y="2063.5" ></text>
</g>
<g >
<title>database::find_schema (2 samples, 0.04%)</title><rect x="77.5" y="1861" width="0.4" height="15.0" fill="rgb(229,30,4)" rx="2" ry="2" />
<text  x="80.46" y="1871.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_state&lt;std::tuple&lt;std::optional&lt;auth::resource&gt; &gt;, seastar::future&lt;bool&gt; &gt;::do_with_state&lt;std::optional&lt;auth::resource&gt; &gt; (2 samples, 0.04%)</title><rect x="773.6" y="1733" width="0.4" height="15.0" fill="rgb(235,1,28)" rx="2" ry="2" />
<text  x="776.58" y="1743.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="826.0" y="1781" width="0.3" height="15.0" fill="rgb(253,170,42)" rx="2" ry="2" />
<text  x="829.03" y="1791.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql3::statements::update_statement&gt;::~shared_ptr_count_for (1 samples, 0.02%)</title><rect x="646.5" y="1909" width="0.2" height="15.0" fill="rgb(245,164,22)" rx="2" ry="2" />
<text  x="649.51" y="1919.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::needs_post_query_ordering (6 samples, 0.11%)</title><rect x="651.2" y="1893" width="1.4" height="15.0" fill="rgb(218,21,51)" rx="2" ry="2" />
<text  x="654.21" y="1903.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_singular (128 samples, 2.43%)</title><rect x="1133.3" y="1925" width="28.7" height="15.0" fill="rgb(225,28,30)" rx="2" ry="2" />
<text  x="1136.30" y="1935.5" >se..</text>
</g>
<g >
<title>standard_allocation_strategy::free (3 samples, 0.06%)</title><rect x="438.3" y="1621" width="0.7" height="15.0" fill="rgb(231,120,37)" rx="2" ry="2" />
<text  x="441.30" y="1631.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (2 samples, 0.04%)</title><rect x="443.5" y="1653" width="0.4" height="15.0" fill="rgb(231,46,25)" rx="2" ry="2" />
<text  x="446.45" y="1663.5" ></text>
</g>
<g >
<title>db::system_keyspace::query (1 samples, 0.02%)</title><rect x="107.3" y="1877" width="0.2" height="15.0" fill="rgb(206,24,0)" rx="2" ry="2" />
<text  x="110.27" y="1887.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::get0 (3 samples, 0.06%)</title><rect x="1138.5" y="1909" width="0.6" height="15.0" fill="rgb(206,73,34)" rx="2" ry="2" />
<text  x="1141.45" y="1919.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (1 samples, 0.02%)</title><rect x="324.4" y="1813" width="0.3" height="15.0" fill="rgb(252,42,28)" rx="2" ry="2" />
<text  x="327.44" y="1823.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::clear (2 samples, 0.04%)</title><rect x="678.8" y="1909" width="0.4" height="15.0" fill="rgb(237,96,49)" rx="2" ry="2" />
<text  x="681.78" y="1919.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::pop_mutation_fragment (1 samples, 0.02%)</title><rect x="174.7" y="1749" width="0.3" height="15.0" fill="rgb(227,151,51)" rx="2" ry="2" />
<text  x="177.73" y="1759.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (3 samples, 0.06%)</title><rect x="808.8" y="1765" width="0.6" height="15.0" fill="rgb(244,188,46)" rx="2" ry="2" />
<text  x="811.77" y="1775.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.02%)</title><rect x="64.7" y="1621" width="0.2" height="15.0" fill="rgb(216,26,43)" rx="2" ry="2" />
<text  x="67.69" y="1631.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::digest_read_result&gt;::future (4 samples, 0.08%)</title><rect x="967.2" y="1781" width="0.9" height="15.0" fill="rgb(232,188,13)" rx="2" ry="2" />
<text  x="970.22" y="1791.5" ></text>
</g>
<g >
<title>partition_key_view::legacy_tri_compare (29 samples, 0.55%)</title><rect x="507.5" y="1669" width="6.5" height="15.0" fill="rgb(247,56,40)" rx="2" ry="2" />
<text  x="510.55" y="1679.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.06%)</title><rect x="897.5" y="1717" width="0.7" height="15.0" fill="rgb(212,227,0)" rx="2" ry="2" />
<text  x="900.52" y="1727.5" ></text>
</g>
<g >
<title>cql3::raw_value_view::make_temporary (2 samples, 0.04%)</title><rect x="849.3" y="1717" width="0.5" height="15.0" fill="rgb(227,132,43)" rx="2" ry="2" />
<text  x="852.34" y="1727.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (1 samples, 0.02%)</title><rect x="642.2" y="1909" width="0.3" height="15.0" fill="rgb(239,130,22)" rx="2" ry="2" />
<text  x="645.25" y="1919.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (1 samples, 0.02%)</title><rect x="666.9" y="1893" width="0.2" height="15.0" fill="rgb(231,126,22)" rx="2" ry="2" />
<text  x="669.90" y="1903.5" ></text>
</g>
<g >
<title>absl::hash_internal::AbslHashValue&lt;absl::hash_internal::HashState&gt; (2 samples, 0.04%)</title><rect x="826.7" y="1781" width="0.4" height="15.0" fill="rgb(221,193,26)" rx="2" ry="2" />
<text  x="829.70" y="1791.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_read_executor (208 samples, 3.95%)</title><rect x="1030.2" y="1781" width="46.6" height="15.0" fill="rgb(213,17,25)" rx="2" ry="2" />
<text  x="1033.20" y="1791.5" >serv..</text>
</g>
<g >
<title>std::_Vector_base&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::_M_create_storage (3 samples, 0.06%)</title><rect x="157.5" y="1829" width="0.6" height="15.0" fill="rgb(239,187,12)" rx="2" ry="2" />
<text  x="160.47" y="1839.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (2 samples, 0.04%)</title><rect x="63.3" y="1701" width="0.5" height="15.0" fill="rgb(215,14,8)" rx="2" ry="2" />
<text  x="66.34" y="1711.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::untyped_constant&gt; (2 samples, 0.04%)</title><rect x="58.2" y="1701" width="0.4" height="15.0" fill="rgb(235,213,51)" rx="2" ry="2" />
<text  x="61.19" y="1711.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::net::inet_address&gt;::operator (3 samples, 0.06%)</title><rect x="713.3" y="1845" width="0.7" height="15.0" fill="rgb(213,156,36)" rx="2" ry="2" />
<text  x="716.29" y="1855.5" ></text>
</g>
<g >
<title>std::operator+ (2 samples, 0.04%)</title><rect x="50.6" y="1605" width="0.4" height="15.0" fill="rgb(230,75,50)" rx="2" ry="2" />
<text  x="53.57" y="1615.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (1 samples, 0.02%)</title><rect x="808.5" y="1781" width="0.3" height="15.0" fill="rgb(247,14,25)" rx="2" ry="2" />
<text  x="811.55" y="1791.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (2,304 samples, 43.76%)</title><rect x="116.2" y="1893" width="516.4" height="15.0" fill="rgb(253,57,53)" rx="2" ry="2" />
<text  x="119.23" y="1903.5" >seastar::noncopyable_function&lt;seastar::future&lt;void&gt; </text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (1 samples, 0.02%)</title><rect x="1106.2" y="1813" width="0.2" height="15.0" fill="rgb(219,9,23)" rx="2" ry="2" />
<text  x="1109.18" y="1823.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector (4 samples, 0.08%)</title><rect x="1051.7" y="1717" width="0.9" height="15.0" fill="rgb(225,165,43)" rx="2" ry="2" />
<text  x="1054.72" y="1727.5" ></text>
</g>
<g >
<title>bytes_ostream::linearize (2 samples, 0.04%)</title><rect x="606.8" y="1829" width="0.5" height="15.0" fill="rgb(231,71,13)" rx="2" ry="2" />
<text  x="609.84" y="1839.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_in_thread&lt;sstables::sstable_writer, flat_mutation_reader::no_filter&gt; (1 samples, 0.02%)</title><rect x="1186.2" y="245" width="0.2" height="15.0" fill="rgb(234,28,0)" rx="2" ry="2" />
<text  x="1189.19" y="255.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (3 samples, 0.06%)</title><rect x="50.3" y="1669" width="0.7" height="15.0" fill="rgb(236,225,5)" rx="2" ry="2" />
<text  x="53.34" y="1679.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally&lt;single_node_cql_env::execute_prepared_with_qo (4 samples, 0.08%)</title><rect x="726.7" y="1877" width="0.9" height="15.0" fill="rgb(246,7,39)" rx="2" ry="2" />
<text  x="729.74" y="1887.5" ></text>
</g>
<g >
<title>antlr3::DefaultAllocPolicy::StackType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::pop (1 samples, 0.02%)</title><rect x="57.5" y="1685" width="0.2" height="15.0" fill="rgb(227,101,0)" rx="2" ry="2" />
<text  x="60.51" y="1695.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::key_is_in_relation (5 samples, 0.09%)</title><rect x="651.4" y="1877" width="1.2" height="15.0" fill="rgb(213,187,29)" rx="2" ry="2" />
<text  x="654.44" y="1887.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.02%)</title><rect x="46.3" y="1685" width="0.2" height="15.0" fill="rgb(231,225,48)" rx="2" ry="2" />
<text  x="49.31" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, flat_mutation_reader, reader_concurrency_semaphore::inactive_read_handle&gt;::_Move_ctor_base (1 samples, 0.02%)</title><rect x="628.4" y="1813" width="0.2" height="15.0" fill="rgb(246,133,23)" rx="2" ry="2" />
<text  x="631.35" y="1823.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;partition_snapshot&gt;::make&lt;seastar::lw_shared_ptr&lt;schema const&gt;&amp;, logalloc::region&amp;, mutation_cleaner&amp;, partition_entry*, cache_tracker*&amp;, unsigned long&amp;&gt; (3 samples, 0.06%)</title><rect x="538.3" y="1717" width="0.6" height="15.0" fill="rgb(212,182,21)" rx="2" ry="2" />
<text  x="541.25" y="1727.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (7 samples, 0.13%)</title><rect x="814.6" y="1749" width="1.6" height="15.0" fill="rgb(238,33,52)" rx="2" ry="2" />
<text  x="817.60" y="1759.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::clear (1 samples, 0.02%)</title><rect x="988.5" y="1733" width="0.2" height="15.0" fill="rgb(234,225,24)" rx="2" ry="2" />
<text  x="991.51" y="1743.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (2 samples, 0.04%)</title><rect x="47.0" y="1701" width="0.4" height="15.0" fill="rgb(221,169,35)" rx="2" ry="2" />
<text  x="49.98" y="1711.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (14 samples, 0.27%)</title><rect x="1186.2" y="1621" width="3.1" height="15.0" fill="rgb(248,182,23)" rx="2" ry="2" />
<text  x="1189.19" y="1631.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (2 samples, 0.04%)</title><rect x="847.1" y="1861" width="0.4" height="15.0" fill="rgb(234,192,19)" rx="2" ry="2" />
<text  x="850.09" y="1871.5" ></text>
</g>
<g >
<title>query::querier_base::~querier_base (1 samples, 0.02%)</title><rect x="120.9" y="1877" width="0.3" height="15.0" fill="rgb(248,68,30)" rx="2" ry="2" />
<text  x="123.94" y="1887.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::~partition_snapshot_flat_reader (26 samples, 0.49%)</title><rect x="577.7" y="1733" width="5.8" height="15.0" fill="rgb(245,225,43)" rx="2" ry="2" />
<text  x="580.70" y="1743.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (1 samples, 0.02%)</title><rect x="1161.5" y="1845" width="0.3" height="15.0" fill="rgb(218,66,43)" rx="2" ry="2" />
<text  x="1164.54" y="1855.5" ></text>
</g>
<g >
<title>parse_raw (1 samples, 0.02%)</title><rect x="108.8" y="1781" width="0.3" height="15.0" fill="rgb(242,129,36)" rx="2" ry="2" />
<text  x="111.84" y="1791.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_pausable&lt;flush_reader::fill_buffer (1 samples, 0.02%)</title><rect x="1186.4" y="149" width="0.2" height="15.0" fill="rgb(247,227,46)" rx="2" ry="2" />
<text  x="1189.41" y="159.5" ></text>
</g>
<g >
<title>auth::standard_role_manager::create_metadata_tables_if_missing (1 samples, 0.02%)</title><rect x="688.0" y="1877" width="0.2" height="15.0" fill="rgb(221,116,43)" rx="2" ry="2" />
<text  x="690.97" y="1887.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::set_urgent_state (4 samples, 0.08%)</title><rect x="644.9" y="1909" width="0.9" height="15.0" fill="rgb(245,33,51)" rx="2" ry="2" />
<text  x="647.94" y="1919.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_pausable_in_thread&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;sstables::sstable_writer&gt; &gt;, flat_mutation_reader::no_filter&gt; (1 samples, 0.02%)</title><rect x="1188.2" y="117" width="0.2" height="15.0" fill="rgb(248,8,27)" rx="2" ry="2" />
<text  x="1191.21" y="127.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (4 samples, 0.08%)</title><rect x="420.6" y="1557" width="0.9" height="15.0" fill="rgb(236,151,37)" rx="2" ry="2" />
<text  x="423.59" y="1567.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (2 samples, 0.04%)</title><rect x="530.2" y="1621" width="0.4" height="15.0" fill="rgb(249,21,47)" rx="2" ry="2" />
<text  x="533.19" y="1631.5" ></text>
</g>
<g >
<title>operator delete (7 samples, 0.13%)</title><rect x="442.3" y="1669" width="1.6" height="15.0" fill="rgb(214,117,38)" rx="2" ry="2" />
<text  x="445.33" y="1679.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (4 samples, 0.08%)</title><rect x="308.5" y="1749" width="0.9" height="15.0" fill="rgb(240,105,30)" rx="2" ry="2" />
<text  x="311.53" y="1759.5" ></text>
</g>
<g >
<title>std::optional&lt;position_in_partition&gt;::operator=&lt;position_in_partition&gt; (3 samples, 0.06%)</title><rect x="273.1" y="1653" width="0.7" height="15.0" fill="rgb(241,15,11)" rx="2" ry="2" />
<text  x="276.12" y="1663.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate (67 samples, 1.27%)</title><rect x="880.5" y="1749" width="15.0" height="15.0" fill="rgb(227,26,44)" rx="2" ry="2" />
<text  x="883.49" y="1759.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (3 samples, 0.06%)</title><rect x="244.2" y="1525" width="0.7" height="15.0" fill="rgb(230,72,8)" rx="2" ry="2" />
<text  x="247.21" y="1535.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::disable_abort_on_alloc_failure_temporarily (1 samples, 0.02%)</title><rect x="554.2" y="1749" width="0.2" height="15.0" fill="rgb(205,26,27)" rx="2" ry="2" />
<text  x="557.17" y="1759.5" ></text>
</g>
<g >
<title>service::storage_proxy::create_write_response_handler (18 samples, 0.34%)</title><rect x="1125.7" y="1653" width="4.0" height="15.0" fill="rgb(224,1,54)" rx="2" ry="2" />
<text  x="1128.68" y="1663.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::lower_bound&lt;mutation_partition, schema const&amp;, nonwrapping_interval&lt;clustering_key_prefix&gt; const&amp;&gt; (2 samples, 0.04%)</title><rect x="263.3" y="1573" width="0.4" height="15.0" fill="rgb(231,178,2)" rx="2" ry="2" />
<text  x="266.26" y="1583.5" ></text>
</g>
<g >
<title>seastar::promise&lt;void&gt;::promise (1 samples, 0.02%)</title><rect x="1013.8" y="1557" width="0.3" height="15.0" fill="rgb(254,144,16)" rx="2" ry="2" />
<text  x="1016.84" y="1567.5" ></text>
</g>
<g >
<title>make_random_seq (1 samples, 0.02%)</title><rect x="844.4" y="1909" width="0.2" height="15.0" fill="rgb(237,67,9)" rx="2" ry="2" />
<text  x="847.40" y="1919.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (4 samples, 0.08%)</title><rect x="52.8" y="1733" width="0.9" height="15.0" fill="rgb(246,78,34)" rx="2" ry="2" />
<text  x="55.81" y="1743.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.02%)</title><rect x="51.9" y="1621" width="0.2" height="15.0" fill="rgb(236,70,52)" rx="2" ry="2" />
<text  x="54.91" y="1631.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;bytes_ostream::chunk, std::default_delete&lt;bytes_ostream::chunk&gt; &gt;::~unique_ptr (8 samples, 0.15%)</title><rect x="99.4" y="1861" width="1.8" height="15.0" fill="rgb(222,41,13)" rx="2" ry="2" />
<text  x="102.42" y="1871.5" ></text>
</g>
<g >
<title>ser::after_qr_cell__value&lt;bytes_ostream&gt;::skip_ttl (19 samples, 0.36%)</title><rect x="390.1" y="1589" width="4.3" height="15.0" fill="rgb(250,225,11)" rx="2" ry="2" />
<text  x="393.11" y="1599.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;gms::inet_address*, __gnu_cxx::__ops::_Iter_pred&lt;std::unary_negate&lt;std::binder1st&lt;std::_Mem_fn&lt;bool  (5 samples, 0.09%)</title><rect x="1072.3" y="1733" width="1.2" height="15.0" fill="rgb(231,223,28)" rx="2" ry="2" />
<text  x="1075.34" y="1743.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.08%)</title><rect x="624.8" y="1845" width="0.9" height="15.0" fill="rgb(224,15,22)" rx="2" ry="2" />
<text  x="627.77" y="1855.5" ></text>
</g>
<g >
<title>std::__relocate_object_a&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt; (3 samples, 0.06%)</title><rect x="55.3" y="1621" width="0.6" height="15.0" fill="rgb(253,162,9)" rx="2" ry="2" />
<text  x="58.27" y="1631.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;reader_concurrency_semaphore::entry&gt;::_M_reset (2 samples, 0.04%)</title><rect x="133.9" y="1813" width="0.5" height="15.0" fill="rgb(206,59,25)" rx="2" ry="2" />
<text  x="136.94" y="1823.5" ></text>
</g>
<g >
<title>std::hash&lt;auth::resource&gt;::operator (1 samples, 0.02%)</title><rect x="789.9" y="1589" width="0.3" height="15.0" fill="rgb(238,197,23)" rx="2" ry="2" />
<text  x="792.94" y="1599.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (43 samples, 0.82%)</title><rect x="847.5" y="1877" width="9.7" height="15.0" fill="rgb(225,118,29)" rx="2" ry="2" />
<text  x="850.54" y="1887.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_slice_or_needs_filtering (1 samples, 0.02%)</title><rect x="937.9" y="1781" width="0.2" height="15.0" fill="rgb(224,72,12)" rx="2" ry="2" />
<text  x="940.86" y="1791.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_next (83 samples, 1.58%)</title><rect x="178.1" y="1733" width="18.6" height="15.0" fill="rgb(219,153,34)" rx="2" ry="2" />
<text  x="181.09" y="1743.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::local (2 samples, 0.04%)</title><rect x="822.4" y="1861" width="0.5" height="15.0" fill="rgb(207,200,37)" rx="2" ry="2" />
<text  x="825.44" y="1871.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (14 samples, 0.27%)</title><rect x="1186.2" y="1637" width="3.1" height="15.0" fill="rgb(246,171,16)" rx="2" ry="2" />
<text  x="1189.19" y="1647.5" ></text>
</g>
<g >
<title>operator delete (5 samples, 0.09%)</title><rect x="800.5" y="1701" width="1.1" height="15.0" fill="rgb(253,85,51)" rx="2" ry="2" />
<text  x="803.48" y="1711.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::signal (1 samples, 0.02%)</title><rect x="314.6" y="1717" width="0.2" height="15.0" fill="rgb(234,134,49)" rx="2" ry="2" />
<text  x="317.58" y="1727.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_map&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::at&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt; &gt; (17 samples, 0.32%)</title><rect x="1037.1" y="1749" width="3.9" height="15.0" fill="rgb(229,157,43)" rx="2" ry="2" />
<text  x="1040.15" y="1759.5" ></text>
</g>
<g >
<title>query_result_builder::consume_new_partition (2 samples, 0.04%)</title><rect x="404.0" y="1637" width="0.5" height="15.0" fill="rgb(224,202,2)" rx="2" ry="2" />
<text  x="407.01" y="1647.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (14 samples, 0.27%)</title><rect x="1186.2" y="853" width="3.1" height="15.0" fill="rgb(249,91,31)" rx="2" ry="2" />
<text  x="1189.19" y="863.5" ></text>
</g>
<g >
<title>operator new (10 samples, 0.19%)</title><rect x="565.1" y="1765" width="2.3" height="15.0" fill="rgb(248,97,49)" rx="2" ry="2" />
<text  x="568.15" y="1775.5" ></text>
</g>
<g >
<title>std::optional&lt;clustering_key_prefix&gt;::operator=&lt;clustering_key_prefix const&amp;&gt; (3 samples, 0.06%)</title><rect x="271.3" y="1637" width="0.7" height="15.0" fill="rgb(254,32,35)" rx="2" ry="2" />
<text  x="274.33" y="1647.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (2 samples, 0.04%)</title><rect x="1021.0" y="1685" width="0.5" height="15.0" fill="rgb(253,165,18)" rx="2" ry="2" />
<text  x="1024.01" y="1695.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (3 samples, 0.06%)</title><rect x="271.3" y="1621" width="0.7" height="15.0" fill="rgb(214,50,54)" rx="2" ry="2" />
<text  x="274.33" y="1631.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::execute (267 samples, 5.07%)</title><rect x="970.1" y="1781" width="59.9" height="15.0" fill="rgb(224,67,14)" rx="2" ry="2" />
<text  x="973.14" y="1791.5" >servic..</text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.02%)</title><rect x="48.1" y="1589" width="0.2" height="15.0" fill="rgb(235,188,48)" rx="2" ry="2" />
<text  x="51.10" y="1599.5" ></text>
</g>
<g >
<title>mutation_partition::lower_bound (2 samples, 0.04%)</title><rect x="263.3" y="1557" width="0.4" height="15.0" fill="rgb(212,221,9)" rx="2" ry="2" />
<text  x="266.26" y="1567.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::remove_if&lt;row::compact_and_expire (50 samples, 0.95%)</title><rect x="412.3" y="1605" width="11.2" height="15.0" fill="rgb(224,105,16)" rx="2" ry="2" />
<text  x="415.30" y="1615.5" ></text>
</g>
<g >
<title>dht::murmur3_partitioner::get_token (1 samples, 0.02%)</title><rect x="1123.4" y="1589" width="0.3" height="15.0" fill="rgb(253,147,4)" rx="2" ry="2" />
<text  x="1126.44" y="1599.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume_in_thread&lt;sstables::sstable_writer, flat_mutation_reader::no_filter&gt; (1 samples, 0.02%)</title><rect x="1186.2" y="261" width="0.2" height="15.0" fill="rgb(223,19,45)" rx="2" ry="2" />
<text  x="1189.19" y="271.5" ></text>
</g>
<g >
<title>service::storage_proxy::query (1 samples, 0.02%)</title><rect x="107.3" y="1861" width="0.2" height="15.0" fill="rgb(244,218,10)" rx="2" ry="2" />
<text  x="110.27" y="1871.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;std::function&lt;flat_mutation_reader  (3 samples, 0.06%)</title><rect x="630.8" y="1829" width="0.7" height="15.0" fill="rgb(212,5,36)" rx="2" ry="2" />
<text  x="633.82" y="1839.5" ></text>
</g>
<g >
<title>utils::basic_ihistogram&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt; &gt;::mark (1 samples, 0.02%)</title><rect x="615.1" y="1845" width="0.3" height="15.0" fill="rgb(236,84,34)" rx="2" ry="2" />
<text  x="618.13" y="1855.5" ></text>
</g>
<g >
<title>db::schema_tables::do_merge_schema (2 samples, 0.04%)</title><rect x="107.0" y="1925" width="0.5" height="15.0" fill="rgb(224,212,27)" rx="2" ry="2" />
<text  x="110.04" y="1935.5" ></text>
</g>
<g >
<title>sstables::sstable_writer::consume_new_partition (1 samples, 0.02%)</title><rect x="1188.2" y="69" width="0.2" height="15.0" fill="rgb(243,36,1)" rx="2" ry="2" />
<text  x="1191.21" y="79.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::find (1 samples, 0.02%)</title><rect x="850.2" y="1797" width="0.3" height="15.0" fill="rgb(209,24,46)" rx="2" ry="2" />
<text  x="853.23" y="1807.5" ></text>
</g>
<g >
<title>antlr3::IntStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::mark (1 samples, 0.02%)</title><rect x="42.0" y="1669" width="0.3" height="15.0" fill="rgb(211,18,49)" rx="2" ry="2" />
<text  x="45.05" y="1679.5" ></text>
</g>
<g >
<title>std::_Optional_base_impl&lt;mutation_querier, std::_Optional_base&lt;mutation_querier, false, false&gt; &gt;::_M_construct&lt;mutation_querier&gt; (1 samples, 0.02%)</title><rect x="348.9" y="1589" width="0.2" height="15.0" fill="rgb(222,63,22)" rx="2" ry="2" />
<text  x="351.87" y="1599.5" ></text>
</g>
</g>
</svg>
