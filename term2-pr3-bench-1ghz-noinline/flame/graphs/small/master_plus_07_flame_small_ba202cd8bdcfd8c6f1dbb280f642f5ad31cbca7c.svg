<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="774" onload="init(evt)" viewBox="0 0 1200 774" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="774.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="757" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="757" > </text>
<g id="frames">
<g >
<title>fmt::v7::detail::fallback_formatter&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, char, void&gt;::format&lt;fmt::v7::detail::buffer_appender&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="19.2" y="533" width="0.2" height="15.0" fill="rgb(254,219,0)" rx="2" ry="2" />
<text  x="22.20" y="543.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::do_merge_with (2 samples, 0.04%)</title><rect x="73.1" y="389" width="0.4" height="15.0" fill="rgb(212,196,9)" rx="2" ry="2" />
<text  x="76.06" y="399.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (1 samples, 0.02%)</title><rect x="40.9" y="437" width="0.2" height="15.0" fill="rgb(249,116,8)" rx="2" ry="2" />
<text  x="43.87" y="447.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="74.2" y="389" width="0.2" height="15.0" fill="rgb(247,114,24)" rx="2" ry="2" />
<text  x="77.16" y="399.5" ></text>
</g>
<g >
<title>schema_builder::build (1 samples, 0.02%)</title><rect x="107.2" y="469" width="0.2" height="15.0" fill="rgb(252,103,37)" rx="2" ry="2" />
<text  x="110.22" y="479.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::update_and_check (3 samples, 0.06%)</title><rect x="366.0" y="245" width="0.7" height="15.0" fill="rgb(219,65,48)" rx="2" ry="2" />
<text  x="369.04" y="255.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (8 samples, 0.15%)</title><rect x="1151.2" y="437" width="1.8" height="15.0" fill="rgb(224,116,8)" rx="2" ry="2" />
<text  x="1154.24" y="447.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (1 samples, 0.02%)</title><rect x="108.3" y="405" width="0.2" height="15.0" fill="rgb(230,65,51)" rx="2" ry="2" />
<text  x="111.32" y="415.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;::basic_sstring (4 samples, 0.07%)</title><rect x="756.0" y="421" width="0.9" height="15.0" fill="rgb(252,142,22)" rx="2" ry="2" />
<text  x="759.01" y="431.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (1 samples, 0.02%)</title><rect x="60.8" y="309" width="0.2" height="15.0" fill="rgb(252,120,38)" rx="2" ry="2" />
<text  x="63.80" y="319.5" ></text>
</g>
<g >
<title>query_result_builder::consume_new_partition (2 samples, 0.04%)</title><rect x="401.7" y="277" width="0.5" height="15.0" fill="rgb(213,223,29)" rx="2" ry="2" />
<text  x="404.73" y="287.5" ></text>
</g>
<g >
<title>reader_selector::has_new_readers (2 samples, 0.04%)</title><rect x="474.9" y="341" width="0.4" height="15.0" fill="rgb(223,18,52)" rx="2" ry="2" />
<text  x="477.86" y="351.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;managed_bytes&gt;::dispose (1 samples, 0.02%)</title><rect x="864.8" y="389" width="0.3" height="15.0" fill="rgb(239,30,22)" rx="2" ry="2" />
<text  x="867.84" y="399.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.02%)</title><rect x="17.9" y="581" width="0.2" height="15.0" fill="rgb(222,56,45)" rx="2" ry="2" />
<text  x="20.88" y="591.5" ></text>
</g>
<g >
<title>std::tuple&lt;cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::tuple&lt;true, true&gt; (1 samples, 0.02%)</title><rect x="61.0" y="277" width="0.2" height="15.0" fill="rgb(248,0,1)" rx="2" ry="2" />
<text  x="64.02" y="287.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (2 samples, 0.04%)</title><rect x="461.7" y="405" width="0.5" height="15.0" fill="rgb(242,169,25)" rx="2" ry="2" />
<text  x="464.72" y="415.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::close (1 samples, 0.02%)</title><rect x="593.3" y="405" width="0.2" height="15.0" fill="rgb(214,132,16)" rx="2" ry="2" />
<text  x="596.32" y="415.5" ></text>
</g>
<g >
<title>ser::serializer&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;::write&lt;seastar::measuring_output_stream&gt; (1 samples, 0.02%)</title><rect x="1132.6" y="165" width="0.3" height="15.0" fill="rgb(214,190,23)" rx="2" ry="2" />
<text  x="1135.63" y="175.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (2 samples, 0.04%)</title><rect x="47.9" y="357" width="0.4" height="15.0" fill="rgb(211,120,35)" rx="2" ry="2" />
<text  x="50.88" y="367.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="51.6" y="261" width="0.2" height="15.0" fill="rgb(235,184,16)" rx="2" ry="2" />
<text  x="54.60" y="271.5" ></text>
</g>
<g >
<title>mutation::set_clustered_cell (1 samples, 0.02%)</title><rect x="106.6" y="533" width="0.2" height="15.0" fill="rgb(219,88,5)" rx="2" ry="2" />
<text  x="109.56" y="543.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::reset_state (52 samples, 0.96%)</title><rect x="280.9" y="309" width="11.3" height="15.0" fill="rgb(238,117,49)" rx="2" ry="2" />
<text  x="283.86" y="319.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEENK4$_43clERKNSF_15binary_operatorEEUlRKNSF_12column_valueEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_17tuple_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlNSF_5tokenEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlSS_E_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_11conjunctionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_8constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_21unresolved_identifierEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_25column_mutation_attributeEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13function_callEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4castEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_15field_selectionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4nullEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13bind_variableEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_16untyped_constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_22collection_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_20usertype_constructorEE_EERS4_IJS14_SQ_ST_S11_S1C_S1G_S1K_S1O_S1S_S1W_S20_S24_S18_SX_S28_S2C_EEEJEEESt16integer_sequenceImJLm2EEEE14__visit_invokeES2H_S2J_ (2 samples, 0.04%)</title><rect x="913.7" y="453" width="0.4" height="15.0" fill="rgb(236,113,36)" rx="2" ry="2" />
<text  x="916.67" y="463.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (3 samples, 0.06%)</title><rect x="312.2" y="389" width="0.6" height="15.0" fill="rgb(239,183,54)" rx="2" ry="2" />
<text  x="315.17" y="399.5" ></text>
</g>
<g >
<title>single_node_cql_env::do_with (2 samples, 0.04%)</title><rect x="17.7" y="629" width="0.4" height="15.0" fill="rgb(207,57,32)" rx="2" ry="2" />
<text  x="20.66" y="639.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;service::write_response_handler, true&gt;::make&lt;seastar::shared_ptr&lt;service::storage_proxy&gt;, keyspace&amp;, db::consistency_level&amp;, db::write_type&amp;, std::unique_ptr&lt;service::mutation_holder, std::default_delete&lt;service::mutation_holder&gt; &gt;, utils::small_vector&lt;gms::inet_address, 3ul&gt;, utils::small_vector&lt;gms::inet_address, 1ul&gt; const&amp;, utils::small_vector&lt;gms::inet_address, 1ul&gt;, tracing::trace_state_ptr, service::storage_proxy_stats::write_stats&amp;, service_permit&gt; (2 samples, 0.04%)</title><rect x="1133.3" y="245" width="0.4" height="15.0" fill="rgb(232,163,44)" rx="2" ry="2" />
<text  x="1136.29" y="255.5" ></text>
</g>
<g >
<title>clustering_row::external_memory_usage (29 samples, 0.54%)</title><rect x="253.3" y="229" width="6.3" height="15.0" fill="rgb(224,17,51)" rx="2" ry="2" />
<text  x="256.27" y="239.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (1 samples, 0.02%)</title><rect x="827.2" y="341" width="0.2" height="15.0" fill="rgb(246,76,1)" rx="2" ry="2" />
<text  x="830.18" y="351.5" ></text>
</g>
<g >
<title>seastar::make_shared&lt;cql3::single_column_relation, seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, cql3::expr::oper_t&amp;, cql3::expr::expression&gt; (2 samples, 0.04%)</title><rect x="61.7" y="389" width="0.4" height="15.0" fill="rgb(244,199,21)" rx="2" ry="2" />
<text  x="64.68" y="399.5" ></text>
</g>
<g >
<title>partition_key::from_range&lt;std::vector&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, std::allocator&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="570.1" y="453" width="0.2" height="15.0" fill="rgb(220,166,34)" rx="2" ry="2" />
<text  x="573.11" y="463.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::clear (4 samples, 0.07%)</title><rect x="301.4" y="341" width="0.9" height="15.0" fill="rgb(219,15,5)" rx="2" ry="2" />
<text  x="304.44" y="351.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (1 samples, 0.02%)</title><rect x="108.3" y="389" width="0.2" height="15.0" fill="rgb(249,31,46)" rx="2" ry="2" />
<text  x="111.32" y="399.5" ></text>
</g>
<g >
<title>__strlen_avx2 (1 samples, 0.02%)</title><rect x="26.6" y="325" width="0.3" height="15.0" fill="rgb(211,34,18)" rx="2" ry="2" />
<text  x="29.64" y="335.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql3::column_identifier&gt;::shared_ptr_count_for&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const&amp;, bool&gt; (1 samples, 0.02%)</title><rect x="72.2" y="373" width="0.2" height="15.0" fill="rgb(240,3,4)" rx="2" ry="2" />
<text  x="75.19" y="383.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (2 samples, 0.04%)</title><rect x="48.3" y="357" width="0.5" height="15.0" fill="rgb(239,102,14)" rx="2" ry="2" />
<text  x="51.32" y="367.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (4 samples, 0.07%)</title><rect x="336.3" y="325" width="0.8" height="15.0" fill="rgb(234,23,26)" rx="2" ry="2" />
<text  x="339.26" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::vector&lt;boost::iterators::transform_iterator&lt;boost::range_detail::select_second_mutable&lt;std::unordered_map&lt;column_definition const*, cql3::expr::expression, std::hash&lt;column_definition const*&gt;, std::equal_to&lt;column_definition const*&gt;, std::allocator&lt;std::pair&lt;column_definition const* const, cql3::expr::expression&gt; &gt; &gt; &gt;, std::__detail::_Node_iterator&lt;std::pair&lt;column_definition const* const, cql3::expr::expression&gt;, false, false&gt;, boost::use_default, boost::use_default&gt;, void&gt; (1 samples, 0.02%)</title><rect x="74.4" y="453" width="0.2" height="15.0" fill="rgb(234,183,17)" rx="2" ry="2" />
<text  x="77.38" y="463.5" ></text>
</g>
<g >
<title>service::abstract_write_response_handler::max_backlog (2 samples, 0.04%)</title><rect x="728.2" y="485" width="0.4" height="15.0" fill="rgb(211,148,40)" rx="2" ry="2" />
<text  x="731.20" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="157.8" y="485" width="0.2" height="15.0" fill="rgb(238,29,22)" rx="2" ry="2" />
<text  x="160.80" y="495.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (5 samples, 0.09%)</title><rect x="417.7" y="197" width="1.1" height="15.0" fill="rgb(219,163,20)" rx="2" ry="2" />
<text  x="420.71" y="207.5" ></text>
</g>
<g >
<title>__libc_start_main (4,959 samples, 92.02%)</title><rect x="84.7" y="693" width="1085.8" height="15.0" fill="rgb(220,4,19)" rx="2" ry="2" />
<text  x="87.67" y="703.5" >__libc_start_main</text>
</g>
<g >
<title>seastar::memory::cpu_pages::allocate_large_and_trim (2 samples, 0.04%)</title><rect x="1018.8" y="245" width="0.4" height="15.0" fill="rgb(251,36,0)" rx="2" ry="2" />
<text  x="1021.77" y="255.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reclaiming_disabled&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (1 samples, 0.02%)</title><rect x="859.6" y="405" width="0.2" height="15.0" fill="rgb(213,34,6)" rx="2" ry="2" />
<text  x="862.58" y="415.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::got_response (14 samples, 0.26%)</title><rect x="720.3" y="501" width="3.1" height="15.0" fill="rgb(254,143,52)" rx="2" ry="2" />
<text  x="723.32" y="511.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;mutation_reader_merger::operator (38 samples, 0.71%)</title><rect x="296.2" y="373" width="8.3" height="15.0" fill="rgb(207,11,47)" rx="2" ry="2" />
<text  x="299.19" y="383.5" ></text>
</g>
<g >
<title>ser::serializer&lt;ser::deletable_row_view&gt;::read&lt;seastar::simple_memory_input_stream&gt; (2 samples, 0.04%)</title><rect x="1123.4" y="261" width="0.5" height="15.0" fill="rgb(227,197,1)" rx="2" ry="2" />
<text  x="1126.43" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (2 samples, 0.04%)</title><rect x="655.1" y="549" width="0.4" height="15.0" fill="rgb(237,49,40)" rx="2" ry="2" />
<text  x="658.07" y="559.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.02%)</title><rect x="48.1" y="213" width="0.2" height="15.0" fill="rgb(252,183,8)" rx="2" ry="2" />
<text  x="51.10" y="223.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (2 samples, 0.04%)</title><rect x="50.3" y="293" width="0.4" height="15.0" fill="rgb(206,75,12)" rx="2" ry="2" />
<text  x="53.29" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.04%)</title><rect x="854.1" y="485" width="0.4" height="15.0" fill="rgb(236,16,31)" rx="2" ry="2" />
<text  x="857.11" y="495.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;11ul, cql3::expr::untyped_constant&gt; (1 samples, 0.02%)</title><rect x="52.9" y="261" width="0.2" height="15.0" fill="rgb(249,169,20)" rx="2" ry="2" />
<text  x="55.92" y="271.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_ctor_base (1 samples, 0.02%)</title><rect x="56.2" y="341" width="0.2" height="15.0" fill="rgb(205,144,42)" rx="2" ry="2" />
<text  x="59.20" y="351.5" ></text>
</g>
<g >
<title>partition_snapshot::versions (1 samples, 0.02%)</title><rect x="264.0" y="229" width="0.2" height="15.0" fill="rgb(235,59,49)" rx="2" ry="2" />
<text  x="267.00" y="239.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::~holder (2 samples, 0.04%)</title><rect x="490.8" y="389" width="0.5" height="15.0" fill="rgb(210,181,21)" rx="2" ry="2" />
<text  x="493.85" y="399.5" ></text>
</g>
<g >
<title>memtable::find_or_create_partition_slow (5 samples, 0.09%)</title><rect x="1118.4" y="309" width="1.1" height="15.0" fill="rgb(223,45,26)" rx="2" ry="2" />
<text  x="1121.40" y="319.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (2 samples, 0.04%)</title><rect x="675.7" y="517" width="0.4" height="15.0" fill="rgb(225,133,16)" rx="2" ry="2" />
<text  x="678.65" y="527.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::untyped_constant&gt; (3 samples, 0.06%)</title><rect x="60.8" y="341" width="0.7" height="15.0" fill="rgb(233,213,3)" rx="2" ry="2" />
<text  x="63.80" y="351.5" ></text>
</g>
<g >
<title>std::apply&lt;auth::permissions_cache::get (1 samples, 0.02%)</title><rect x="77.0" y="389" width="0.2" height="15.0" fill="rgb(215,35,7)" rx="2" ry="2" />
<text  x="80.00" y="399.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="520.4" y="357" width="0.2" height="15.0" fill="rgb(237,185,38)" rx="2" ry="2" />
<text  x="523.41" y="367.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::take_value (1 samples, 0.02%)</title><rect x="199.4" y="325" width="0.2" height="15.0" fill="rgb(210,109,20)" rx="2" ry="2" />
<text  x="202.40" y="335.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (1 samples, 0.02%)</title><rect x="1118.6" y="165" width="0.2" height="15.0" fill="rgb(239,118,28)" rx="2" ry="2" />
<text  x="1121.62" y="175.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::constant (7 samples, 0.13%)</title><rect x="54.7" y="341" width="1.5" height="15.0" fill="rgb(209,154,21)" rx="2" ry="2" />
<text  x="57.67" y="351.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cident (8 samples, 0.15%)</title><rect x="45.9" y="405" width="1.8" height="15.0" fill="rgb(233,136,4)" rx="2" ry="2" />
<text  x="48.91" y="415.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::read_next (1 samples, 0.02%)</title><rect x="79.4" y="421" width="0.2" height="15.0" fill="rgb(233,88,16)" rx="2" ry="2" />
<text  x="82.41" y="431.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::push_mutation_fragment&lt;schema const&amp;, reader_permit&amp;, partition_start&gt; (29 samples, 0.54%)</title><rect x="528.7" y="309" width="6.4" height="15.0" fill="rgb(236,27,28)" rx="2" ry="2" />
<text  x="531.73" y="319.5" ></text>
</g>
<g >
<title>compound_type&lt; (15 samples, 0.28%)</title><rect x="918.9" y="421" width="3.3" height="15.0" fill="rgb(212,14,15)" rx="2" ry="2" />
<text  x="921.92" y="431.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;mutation_querier&gt;::_M_reset (1 samples, 0.02%)</title><rect x="576.9" y="485" width="0.2" height="15.0" fill="rgb(243,89,23)" rx="2" ry="2" />
<text  x="579.90" y="495.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;bytes_ostream::chunk, std::default_delete&lt;bytes_ostream::chunk&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="101.1" y="469" width="0.2" height="15.0" fill="rgb(243,120,50)" rx="2" ry="2" />
<text  x="104.09" y="479.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="772.2" y="389" width="0.2" height="15.0" fill="rgb(212,129,12)" rx="2" ry="2" />
<text  x="775.22" y="399.5" ></text>
</g>
<g >
<title>database::has_keyspace (14 samples, 0.26%)</title><rect x="845.3" y="469" width="3.1" height="15.0" fill="rgb(239,203,26)" rx="2" ry="2" />
<text  x="848.35" y="479.5" ></text>
</g>
<g >
<title>db::schema_tables::read_table_mutations (1 samples, 0.02%)</title><rect x="108.1" y="549" width="0.2" height="15.0" fill="rgb(220,129,39)" rx="2" ry="2" />
<text  x="111.10" y="559.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::invoke&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (1 samples, 0.02%)</title><rect x="107.7" y="197" width="0.2" height="15.0" fill="rgb(241,2,44)" rx="2" ry="2" />
<text  x="110.66" y="207.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.02%)</title><rect x="51.6" y="149" width="0.2" height="15.0" fill="rgb(236,174,26)" rx="2" ry="2" />
<text  x="54.60" y="159.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value_view, std::allocator&lt;cql3::raw_value_view&gt; &gt;::_M_check_len (1 samples, 0.02%)</title><rect x="853.5" y="421" width="0.2" height="15.0" fill="rgb(221,191,7)" rx="2" ry="2" />
<text  x="856.45" y="431.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;nonwrapping_interval&lt;dht::ring_position&gt; const, std::default_delete&lt;nonwrapping_interval&lt;dht::ring_position&gt; const&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="643.2" y="501" width="0.3" height="15.0" fill="rgb(231,30,14)" rx="2" ry="2" />
<text  x="646.25" y="511.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::move_it (1 samples, 0.02%)</title><rect x="683.5" y="549" width="0.3" height="15.0" fill="rgb(206,13,13)" rx="2" ry="2" />
<text  x="686.53" y="559.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="530.9" y="293" width="0.2" height="15.0" fill="rgb(225,60,24)" rx="2" ry="2" />
<text  x="533.92" y="303.5" ></text>
</g>
<g >
<title>mutation_fragment::operator= (3 samples, 0.06%)</title><rect x="195.5" y="293" width="0.6" height="15.0" fill="rgb(213,222,27)" rx="2" ry="2" />
<text  x="198.46" y="303.5" ></text>
</g>
<g >
<title>database::find_schema (21 samples, 0.39%)</title><rect x="769.2" y="469" width="4.5" height="15.0" fill="rgb(222,84,11)" rx="2" ry="2" />
<text  x="772.15" y="479.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.02%)</title><rect x="1026.7" y="229" width="0.2" height="15.0" fill="rgb(232,110,43)" rx="2" ry="2" />
<text  x="1029.65" y="239.5" ></text>
</g>
<g >
<title>sstables::mc::writer::write_row_body (7 samples, 0.13%)</title><rect x="81.8" y="469" width="1.6" height="15.0" fill="rgb(211,223,0)" rx="2" ry="2" />
<text  x="84.82" y="479.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::fill_buffer (1 samples, 0.02%)</title><rect x="79.4" y="485" width="0.2" height="15.0" fill="rgb(214,55,3)" rx="2" ry="2" />
<text  x="82.41" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (2 samples, 0.04%)</title><rect x="28.6" y="261" width="0.4" height="15.0" fill="rgb(206,32,44)" rx="2" ry="2" />
<text  x="31.61" y="271.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::small_vector (3 samples, 0.06%)</title><rect x="482.1" y="325" width="0.6" height="15.0" fill="rgb(243,87,5)" rx="2" ry="2" />
<text  x="485.09" y="335.5" ></text>
</g>
<g >
<title>tracing::global_trace_state_ptr::get (2 samples, 0.04%)</title><rect x="1036.9" y="325" width="0.5" height="15.0" fill="rgb(217,4,40)" rx="2" ry="2" />
<text  x="1039.94" y="335.5" ></text>
</g>
<g >
<title>__pthread_disable_asynccancel (1 samples, 0.02%)</title><rect x="1189.8" y="645" width="0.2" height="15.0" fill="rgb(242,133,20)" rx="2" ry="2" />
<text  x="1192.78" y="655.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_destroy_data (4 samples, 0.07%)</title><rect x="404.8" y="229" width="0.9" height="15.0" fill="rgb(247,168,42)" rx="2" ry="2" />
<text  x="407.79" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::assign (3 samples, 0.06%)</title><rect x="29.9" y="293" width="0.7" height="15.0" fill="rgb(228,143,14)" rx="2" ry="2" />
<text  x="32.93" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::allocate_aligned (3 samples, 0.06%)</title><rect x="244.7" y="133" width="0.7" height="15.0" fill="rgb(247,167,45)" rx="2" ry="2" />
<text  x="247.73" y="143.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (3 samples, 0.06%)</title><rect x="650.3" y="533" width="0.6" height="15.0" fill="rgb(211,31,29)" rx="2" ry="2" />
<text  x="653.25" y="543.5" ></text>
</g>
<g >
<title>cql3::keyspace_element_name::keyspace_element_name (1 samples, 0.02%)</title><rect x="43.7" y="421" width="0.2" height="15.0" fill="rgb(236,220,34)" rx="2" ry="2" />
<text  x="46.72" y="431.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;std::tuple&lt;std::optional&lt;clustering_key_prefix&gt; &gt; &gt;::take_value (1 samples, 0.02%)</title><rect x="565.7" y="485" width="0.3" height="15.0" fill="rgb(244,40,52)" rx="2" ry="2" />
<text  x="568.73" y="495.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::execute (2 samples, 0.04%)</title><rect x="19.6" y="517" width="0.5" height="15.0" fill="rgb(250,29,47)" rx="2" ry="2" />
<text  x="22.63" y="527.5" ></text>
</g>
<g >
<title>std::__optional_hash_call_base&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, true&gt;::operator (1 samples, 0.02%)</title><rect x="821.0" y="357" width="0.3" height="15.0" fill="rgb(235,188,19)" rx="2" ry="2" />
<text  x="824.04" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (1 samples, 0.02%)</title><rect x="367.6" y="229" width="0.2" height="15.0" fill="rgb(222,159,6)" rx="2" ry="2" />
<text  x="370.57" y="239.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.06%)</title><rect x="674.3" y="549" width="0.7" height="15.0" fill="rgb(218,120,33)" rx="2" ry="2" />
<text  x="677.34" y="559.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;service::storage_proxy_coordinator_query_result&gt;::set_value&lt;service::storage_proxy_coordinator_query_result&gt; (2 samples, 0.04%)</title><rect x="1144.0" y="549" width="0.5" height="15.0" fill="rgb(218,6,3)" rx="2" ry="2" />
<text  x="1147.02" y="559.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::attributes, std::default_delete&lt;cql3::attributes&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="75.7" y="501" width="0.2" height="15.0" fill="rgb(214,215,4)" rx="2" ry="2" />
<text  x="78.69" y="511.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::digest_read_result&gt;::clear (2 samples, 0.04%)</title><rect x="712.2" y="533" width="0.5" height="15.0" fill="rgb(250,162,50)" rx="2" ry="2" />
<text  x="715.22" y="543.5" ></text>
</g>
<g >
<title>mutation_fragment::consume&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (410 samples, 7.61%)</title><rect x="338.0" y="325" width="89.8" height="15.0" fill="rgb(226,21,2)" rx="2" ry="2" />
<text  x="341.01" y="335.5" >mutation_f..</text>
</g>
<g >
<title>logalloc::region_group::update_maximal_rg (1 samples, 0.02%)</title><rect x="80.9" y="469" width="0.3" height="15.0" fill="rgb(205,53,2)" rx="2" ry="2" />
<text  x="83.94" y="479.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_M_copy_assign (3 samples, 0.06%)</title><rect x="811.6" y="341" width="0.7" height="15.0" fill="rgb(240,67,1)" rx="2" ry="2" />
<text  x="814.63" y="351.5" ></text>
</g>
<g >
<title>ser::writer_of_query_result&lt;bytes_ostream&gt;::writer_of_query_result (2 samples, 0.04%)</title><rect x="622.4" y="485" width="0.5" height="15.0" fill="rgb(237,53,1)" rx="2" ry="2" />
<text  x="625.44" y="495.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (2 samples, 0.04%)</title><rect x="741.8" y="405" width="0.4" height="15.0" fill="rgb(246,124,25)" rx="2" ry="2" />
<text  x="744.78" y="415.5" ></text>
</g>
<g >
<title>schema::rebuild (1 samples, 0.02%)</title><rect x="109.0" y="421" width="0.2" height="15.0" fill="rgb(208,117,25)" rx="2" ry="2" />
<text  x="111.97" y="431.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::range_or_slice_eq_null (4 samples, 0.07%)</title><rect x="861.1" y="453" width="0.9" height="15.0" fill="rgb(210,150,50)" rx="2" ry="2" />
<text  x="864.12" y="463.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;seastar::file_impl&gt; &gt;, seastar::make_file_impl (1 samples, 0.02%)</title><rect x="692.5" y="565" width="0.2" height="15.0" fill="rgb(216,181,41)" rx="2" ry="2" />
<text  x="695.51" y="575.5" ></text>
</g>
<g >
<title>basic_atomic_cell_view&lt; (1 samples, 0.02%)</title><rect x="82.5" y="389" width="0.2" height="15.0" fill="rgb(249,114,4)" rx="2" ry="2" />
<text  x="85.48" y="399.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::fetch (593 samples, 11.00%)</title><rect x="178.8" y="405" width="129.9" height="15.0" fill="rgb(247,7,1)" rx="2" ry="2" />
<text  x="181.82" y="415.5" >mutation_fragmen..</text>
</g>
<g >
<title>logalloc::allocating_section::reserve (5 samples, 0.09%)</title><rect x="201.2" y="325" width="1.1" height="15.0" fill="rgb(226,202,45)" rx="2" ry="2" />
<text  x="204.16" y="335.5" ></text>
</g>
<g >
<title>service::get_local_priority_manager (3 samples, 0.06%)</title><rect x="142.5" y="517" width="0.6" height="15.0" fill="rgb(209,204,39)" rx="2" ry="2" />
<text  x="145.47" y="527.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reclaiming_disabled&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (1 samples, 0.02%)</title><rect x="337.8" y="149" width="0.2" height="15.0" fill="rgb(217,227,1)" rx="2" ry="2" />
<text  x="340.79" y="159.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="59.0" y="293" width="0.3" height="15.0" fill="rgb(220,53,54)" rx="2" ry="2" />
<text  x="62.05" y="303.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::enqueue_waiter (46 samples, 0.85%)</title><rect x="1019.9" y="277" width="10.0" height="15.0" fill="rgb(238,101,37)" rx="2" ry="2" />
<text  x="1022.86" y="287.5" ></text>
</g>
<g >
<title>position_in_partition_view::for_range_end (1 samples, 0.02%)</title><rect x="279.5" y="309" width="0.3" height="15.0" fill="rgb(254,29,39)" rx="2" ry="2" />
<text  x="282.55" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="51.2" y="309" width="0.2" height="15.0" fill="rgb(212,229,46)" rx="2" ry="2" />
<text  x="54.17" y="319.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="1132.4" y="197" width="0.2" height="15.0" fill="rgb(215,187,20)" rx="2" ry="2" />
<text  x="1135.41" y="207.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (2 samples, 0.04%)</title><rect x="911.0" y="373" width="0.5" height="15.0" fill="rgb(227,42,8)" rx="2" ry="2" />
<text  x="914.04" y="383.5" ></text>
</g>
<g >
<title>db::schema_tables::create_table_from_mutations (2 samples, 0.04%)</title><rect x="108.8" y="469" width="0.4" height="15.0" fill="rgb(250,84,49)" rx="2" ry="2" />
<text  x="111.75" y="479.5" ></text>
</g>
<g >
<title>ser::start_frame&lt;__gnu_cxx::__normal_iterator&lt;seastar::temporary_buffer&lt;char&gt;*, std::vector&lt;seastar::temporary_buffer&lt;char&gt;, std::allocator&lt;seastar::temporary_buffer&lt;char&gt; &gt; &gt; &gt; &gt; (2 samples, 0.04%)</title><rect x="1125.0" y="293" width="0.4" height="15.0" fill="rgb(245,207,52)" rx="2" ry="2" />
<text  x="1127.97" y="303.5" ></text>
</g>
<g >
<title>db::schema_tables::v3::functions (1 samples, 0.02%)</title><rect x="17.7" y="325" width="0.2" height="15.0" fill="rgb(249,209,0)" rx="2" ry="2" />
<text  x="20.66" y="335.5" ></text>
</g>
<g >
<title>reader_permit::impl::impl (1 samples, 0.02%)</title><rect x="1033.2" y="277" width="0.2" height="15.0" fill="rgb(226,223,38)" rx="2" ry="2" />
<text  x="1036.22" y="287.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_mutations_locally (1 samples, 0.02%)</title><rect x="108.1" y="501" width="0.2" height="15.0" fill="rgb(210,52,28)" rx="2" ry="2" />
<text  x="111.10" y="511.5" ></text>
</g>
<g >
<title>bplus::tree&lt;long, intrusive_array&lt;memtable_entry&gt;, dht::raw_token_less_comparator, 16ul,  (4 samples, 0.07%)</title><rect x="1118.6" y="261" width="0.9" height="15.0" fill="rgb(235,18,10)" rx="2" ry="2" />
<text  x="1121.62" y="271.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (1 samples, 0.02%)</title><rect x="1065.0" y="373" width="0.2" height="15.0" fill="rgb(225,204,26)" rx="2" ry="2" />
<text  x="1067.97" y="383.5" ></text>
</g>
<g >
<title>partition_key::from_range&lt;std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt; const&amp;&gt; (25 samples, 0.46%)</title><rect x="932.1" y="453" width="5.4" height="15.0" fill="rgb(219,74,15)" rx="2" ry="2" />
<text  x="935.06" y="463.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (13 samples, 0.24%)</title><rect x="80.9" y="645" width="2.9" height="15.0" fill="rgb(229,212,4)" rx="2" ry="2" />
<text  x="83.94" y="655.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (1 samples, 0.02%)</title><rect x="453.8" y="469" width="0.3" height="15.0" fill="rgb(211,89,12)" rx="2" ry="2" />
<text  x="456.84" y="479.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="318.3" y="357" width="0.2" height="15.0" fill="rgb(250,49,4)" rx="2" ry="2" />
<text  x="321.30" y="367.5" ></text>
</g>
<g >
<title>posix_memalign (11 samples, 0.20%)</title><rect x="240.1" y="117" width="2.4" height="15.0" fill="rgb(247,166,12)" rx="2" ry="2" />
<text  x="243.13" y="127.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureINS_10bool_classIN22mutation_reader_merger15needs_merge_tagEEEE9then_implIZNS5_14discard_resultEvEUlDpOT_E_NS0_IvEEEET0_OT_ (2 samples, 0.04%)</title><rect x="188.7" y="341" width="0.4" height="15.0" fill="rgb(207,180,17)" rx="2" ry="2" />
<text  x="191.68" y="351.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_nodes (1 samples, 0.02%)</title><rect x="1161.8" y="517" width="0.2" height="15.0" fill="rgb(221,78,46)" rx="2" ry="2" />
<text  x="1164.75" y="527.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.04%)</title><rect x="46.3" y="293" width="0.5" height="15.0" fill="rgb(233,198,23)" rx="2" ry="2" />
<text  x="49.35" y="303.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (5 samples, 0.09%)</title><rect x="45.9" y="389" width="1.1" height="15.0" fill="rgb(238,34,19)" rx="2" ry="2" />
<text  x="48.91" y="399.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_restrictions::empty (2 samples, 0.04%)</title><rect x="952.6" y="469" width="0.5" height="15.0" fill="rgb(247,11,5)" rx="2" ry="2" />
<text  x="955.64" y="479.5" ></text>
</g>
<g >
<title>std::function&lt;seastar::future&lt;void&gt;  (1 samples, 0.02%)</title><rect x="17.7" y="421" width="0.2" height="15.0" fill="rgb(248,17,5)" rx="2" ry="2" />
<text  x="20.66" y="431.5" ></text>
</g>
<g >
<title>cql3::restrictions::partition_key_restrictions::needs_filtering (5 samples, 0.09%)</title><rect x="668.6" y="517" width="1.1" height="15.0" fill="rgb(222,175,44)" rx="2" ry="2" />
<text  x="671.65" y="527.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reclaiming_disabled&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::lsa_partition_reader::next_row (1 samples, 0.02%)</title><rect x="81.4" y="389" width="0.2" height="15.0" fill="rgb(232,195,38)" rx="2" ry="2" />
<text  x="84.38" y="399.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::result_set, std::default_delete&lt;cql3::result_set&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="674.1" y="501" width="0.2" height="15.0" fill="rgb(214,224,26)" rx="2" ry="2" />
<text  x="677.12" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;seastar::shared_ptr&lt;cql3::operation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::operation&gt; &gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="664.9" y="517" width="0.2" height="15.0" fill="rgb(245,100,7)" rx="2" ry="2" />
<text  x="667.92" y="527.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;partition_key, false, false&gt;::_Optional_base (1 samples, 0.02%)</title><rect x="576.7" y="469" width="0.2" height="15.0" fill="rgb(254,136,0)" rx="2" ry="2" />
<text  x="579.68" y="479.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (1 samples, 0.02%)</title><rect x="998.2" y="373" width="0.2" height="15.0" fill="rgb(231,152,16)" rx="2" ry="2" />
<text  x="1001.19" y="383.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (2 samples, 0.04%)</title><rect x="55.5" y="197" width="0.5" height="15.0" fill="rgb(254,155,54)" rx="2" ry="2" />
<text  x="58.54" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="862.6" y="357" width="0.3" height="15.0" fill="rgb(231,215,7)" rx="2" ry="2" />
<text  x="865.65" y="367.5" ></text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;void&gt;, database*, seastar::lw_shared_ptr&lt;schema const&gt;, frozen_mutation const&amp;, tracing::trace_state_ptr, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, seastar::bool_class&lt;db::force_sync_tag&gt; &gt;::make_stage_for_group (42 samples, 0.78%)</title><rect x="1117.5" y="469" width="9.2" height="15.0" fill="rgb(222,36,34)" rx="2" ry="2" />
<text  x="1120.52" y="479.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (1 samples, 0.02%)</title><rect x="806.8" y="261" width="0.2" height="15.0" fill="rgb(214,66,50)" rx="2" ry="2" />
<text  x="809.81" y="271.5" ></text>
</g>
<g >
<title>antlr3::IntStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::seek (1 samples, 0.02%)</title><rect x="38.2" y="293" width="0.3" height="15.0" fill="rgb(244,164,44)" rx="2" ry="2" />
<text  x="41.25" y="303.5" ></text>
</g>
<g >
<title>std::__optional_hash_call_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, true&gt;::operator (1 samples, 0.02%)</title><rect x="802.4" y="229" width="0.3" height="15.0" fill="rgb(221,127,23)" rx="2" ry="2" />
<text  x="805.43" y="239.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;managed_bytes const*, managed_bytes*&gt; (4 samples, 0.07%)</title><rect x="910.6" y="389" width="0.9" height="15.0" fill="rgb(248,18,22)" rx="2" ry="2" />
<text  x="913.60" y="399.5" ></text>
</g>
<g >
<title>partition_snapshot::versions (1 samples, 0.02%)</title><rect x="263.8" y="197" width="0.2" height="15.0" fill="rgb(230,17,2)" rx="2" ry="2" />
<text  x="266.78" y="207.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (14 samples, 0.26%)</title><rect x="655.5" y="549" width="3.1" height="15.0" fill="rgb(230,198,52)" rx="2" ry="2" />
<text  x="658.51" y="559.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (1 samples, 0.02%)</title><rect x="56.0" y="293" width="0.2" height="15.0" fill="rgb(216,117,12)" rx="2" ry="2" />
<text  x="58.98" y="303.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.04%)</title><rect x="785.6" y="373" width="0.4" height="15.0" fill="rgb(225,199,29)" rx="2" ry="2" />
<text  x="788.57" y="383.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (1 samples, 0.02%)</title><rect x="435.7" y="277" width="0.2" height="15.0" fill="rgb(227,89,13)" rx="2" ry="2" />
<text  x="438.67" y="287.5" ></text>
</g>
<g >
<title>partition_entry::~partition_entry (1 samples, 0.02%)</title><rect x="16.6" y="581" width="0.2" height="15.0" fill="rgb(250,171,25)" rx="2" ry="2" />
<text  x="19.57" y="591.5" ></text>
</g>
<g >
<title>fmt::v7::basic_printf_context&lt;fmt::v7::detail::buffer_appender&lt;char&gt;, char&gt;::format&lt;fmt::v7::printf_arg_formatter&lt;fmt::v7::detail::buffer_appender&lt;char&gt;, char&gt; &gt; (3 samples, 0.06%)</title><rect x="18.8" y="565" width="0.6" height="15.0" fill="rgb(247,146,47)" rx="2" ry="2" />
<text  x="21.76" y="575.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::operator (617 samples, 11.45%)</title><rect x="177.9" y="421" width="135.1" height="15.0" fill="rgb(244,150,6)" rx="2" ry="2" />
<text  x="180.95" y="431.5" >mutation_fragment..</text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (2 samples, 0.04%)</title><rect x="46.3" y="245" width="0.5" height="15.0" fill="rgb(231,196,19)" rx="2" ry="2" />
<text  x="49.35" y="255.5" ></text>
</g>
<g >
<title>utils::tuple_hash::hash_impl&lt;1ul, auth::resource_kind, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (5 samples, 0.09%)</title><rect x="805.7" y="165" width="1.1" height="15.0" fill="rgb(228,123,52)" rx="2" ry="2" />
<text  x="808.72" y="175.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::process_where_clause (14 samples, 0.26%)</title><rect x="72.2" y="485" width="3.1" height="15.0" fill="rgb(237,205,49)" rx="2" ry="2" />
<text  x="75.19" y="495.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (13 samples, 0.24%)</title><rect x="80.9" y="677" width="2.9" height="15.0" fill="rgb(224,8,40)" rx="2" ry="2" />
<text  x="83.94" y="687.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::clone&lt;row::row (120 samples, 2.23%)</title><rect x="224.8" y="197" width="26.3" height="15.0" fill="rgb(234,151,47)" rx="2" ry="2" />
<text  x="227.80" y="207.5" >c..</text>
</g>
<g >
<title>std::__detail::_Map_base&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::at (1 samples, 0.02%)</title><rect x="823.7" y="389" width="0.2" height="15.0" fill="rgb(212,66,13)" rx="2" ry="2" />
<text  x="826.67" y="399.5" ></text>
</g>
<g >
<title>database::find_column_family (2 samples, 0.04%)</title><rect x="1010.2" y="325" width="0.5" height="15.0" fill="rgb(223,204,17)" rx="2" ry="2" />
<text  x="1013.23" y="335.5" ></text>
</g>
<g >
<title>cql3::cf_name::~cf_name (1 samples, 0.02%)</title><rect x="44.8" y="405" width="0.2" height="15.0" fill="rgb(219,214,51)" rx="2" ry="2" />
<text  x="47.82" y="415.5" ></text>
</g>
<g >
<title>std::__lower_bound&lt;__gnu_cxx::__normal_iterator&lt;dht::token const*, std::vector&lt;dht::token, std::allocator&lt;dht::token&gt; &gt; &gt;, dht::token, __gnu_cxx::__ops::_Iter_less_val&gt; (26 samples, 0.48%)</title><rect x="1074.8" y="309" width="5.7" height="15.0" fill="rgb(234,213,21)" rx="2" ry="2" />
<text  x="1077.82" y="319.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_prepared (71 samples, 1.32%)</title><rect x="748.3" y="485" width="15.6" height="15.0" fill="rgb(251,110,6)" rx="2" ry="2" />
<text  x="751.35" y="495.5" ></text>
</g>
<g >
<title>mutation_querier::consume (192 samples, 3.56%)</title><rect x="358.4" y="261" width="42.0" height="15.0" fill="rgb(235,98,28)" rx="2" ry="2" />
<text  x="361.37" y="271.5" >mut..</text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::do_flush (1,146 samples, 21.27%)</title><rect x="866.6" y="549" width="250.9" height="15.0" fill="rgb(208,225,49)" rx="2" ry="2" />
<text  x="869.59" y="559.5" >seastar::concrete_execution_stage..</text>
</g>
<g >
<title>db::schema_tables::fill_column_info (1 samples, 0.02%)</title><rect x="108.3" y="469" width="0.2" height="15.0" fill="rgb(222,223,46)" rx="2" ry="2" />
<text  x="111.32" y="479.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (1 samples, 0.02%)</title><rect x="107.0" y="373" width="0.2" height="15.0" fill="rgb(238,165,17)" rx="2" ry="2" />
<text  x="110.00" y="383.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.07%)</title><rect x="766.5" y="469" width="0.9" height="15.0" fill="rgb(242,53,21)" rx="2" ry="2" />
<text  x="769.52" y="479.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;service::storage_proxy_coordinator_query_result&gt;, seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::finally_body&lt;service::storage_proxy::do_query (1 samples, 0.02%)</title><rect x="86.6" y="581" width="0.3" height="15.0" fill="rgb(250,95,46)" rx="2" ry="2" />
<text  x="89.64" y="591.5" ></text>
</g>
<g >
<title>database::find_uuid (21 samples, 0.39%)</title><rect x="823.9" y="421" width="4.6" height="15.0" fill="rgb(224,72,3)" rx="2" ry="2" />
<text  x="826.89" y="431.5" ></text>
</g>
<g >
<title>memtable::apply (32 samples, 0.59%)</title><rect x="1118.0" y="325" width="7.0" height="15.0" fill="rgb(227,80,39)" rx="2" ry="2" />
<text  x="1120.96" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::~vector (2 samples, 0.04%)</title><rect x="602.1" y="421" width="0.4" height="15.0" fill="rgb(238,223,16)" rx="2" ry="2" />
<text  x="605.08" y="431.5" ></text>
</g>
<g >
<title>row::compact_and_expire (74 samples, 1.37%)</title><rect x="405.7" y="277" width="16.2" height="15.0" fill="rgb(245,229,54)" rx="2" ry="2" />
<text  x="408.67" y="287.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::impl (6 samples, 0.11%)</title><rect x="524.1" y="341" width="1.3" height="15.0" fill="rgb(242,35,22)" rx="2" ry="2" />
<text  x="527.13" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.02%)</title><rect x="844.5" y="437" width="0.2" height="15.0" fill="rgb(212,85,12)" rx="2" ry="2" />
<text  x="847.47" y="447.5" ></text>
</g>
<g >
<title>schema_registry_entry::get_schema (1 samples, 0.02%)</title><rect x="978.9" y="405" width="0.2" height="15.0" fill="rgb(228,86,54)" rx="2" ry="2" />
<text  x="981.92" y="415.5" ></text>
</g>
<g >
<title>memtable::make_flat_reader (255 samples, 4.73%)</title><rect x="487.6" y="405" width="55.8" height="15.0" fill="rgb(219,41,46)" rx="2" ry="2" />
<text  x="490.56" y="415.5" >memta..</text>
</g>
<g >
<title>seastar::future_state&lt;bool&gt;::move_it (1 samples, 0.02%)</title><rect x="76.3" y="469" width="0.3" height="15.0" fill="rgb(232,104,45)" rx="2" ry="2" />
<text  x="79.35" y="479.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_slice_or_needs_filtering (4 samples, 0.07%)</title><rect x="950.7" y="453" width="0.8" height="15.0" fill="rgb(248,26,45)" rx="2" ry="2" />
<text  x="953.67" y="463.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, schema::dropped_column&gt;, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, schema::dropped_column&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, std::hash&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (1 samples, 0.02%)</title><rect x="17.7" y="277" width="0.2" height="15.0" fill="rgb(230,196,36)" rx="2" ry="2" />
<text  x="20.66" y="287.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::forward_to (1 samples, 0.02%)</title><rect x="661.0" y="549" width="0.2" height="15.0" fill="rgb(234,58,23)" rx="2" ry="2" />
<text  x="663.98" y="559.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::set_urgent_state (4 samples, 0.07%)</title><rect x="686.2" y="533" width="0.8" height="15.0" fill="rgb(229,155,34)" rx="2" ry="2" />
<text  x="689.16" y="543.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_map&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::at&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt; &gt; (1 samples, 0.02%)</title><rect x="823.2" y="421" width="0.3" height="15.0" fill="rgb(229,70,18)" rx="2" ry="2" />
<text  x="826.23" y="431.5" ></text>
</g>
<g >
<title>_ZSt5visitIR18overloaded_functorIJZN4cql34expr9find_atomIZNS2_4findERKNS2_10expressionENS2_6oper_tEEUlRKNS2_15binary_operatorEE_EEPS9_S6_T_EUlSA_E_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_8constantEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_11conjunctionEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_12column_valueEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_5tokenEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_21unresolved_identifierEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_25column_mutation_attributeEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_13function_callEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_4castEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_15field_selectionEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_4nullEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_13bind_variableEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_16untyped_constantEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_17tuple_constructorEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_22collection_constructorEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_20usertype_constructorEE_EEJRSt7variantIJSJ_S8_SN_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_SF_S1R_S1V_S1Z_EEEENSt13invoke_resultISD_JDpDTclsr3stdE3getILm0EEclsr3stdE7declvalIT0_EEEEEE4typeEOSD_DpOS29_ (1 samples, 0.02%)</title><rect x="670.8" y="469" width="0.3" height="15.0" fill="rgb(239,229,28)" rx="2" ry="2" />
<text  x="673.84" y="479.5" ></text>
</g>
<g >
<title>mutation_partition_serializer::write_serialized&lt;ser::writer_of_mutation_partition&lt;bytes_ostream&gt; &gt; (11 samples, 0.20%)</title><rect x="1130.0" y="229" width="2.4" height="15.0" fill="rgb(249,210,15)" rx="2" ry="2" />
<text  x="1133.00" y="239.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (2 samples, 0.04%)</title><rect x="55.5" y="181" width="0.5" height="15.0" fill="rgb(229,187,0)" rx="2" ry="2" />
<text  x="58.54" y="191.5" ></text>
</g>
<g >
<title>seastar::reactor::io_queue_submission_pollfn::poll (2 samples, 0.04%)</title><rect x="1168.5" y="565" width="0.5" height="15.0" fill="rgb(237,173,21)" rx="2" ry="2" />
<text  x="1171.54" y="575.5" ></text>
</g>
<g >
<title>evictable_reader::fill_buffer (1 samples, 0.02%)</title><rect x="107.7" y="277" width="0.2" height="15.0" fill="rgb(217,87,29)" rx="2" ry="2" />
<text  x="110.66" y="287.5" ></text>
</g>
<g >
<title>row_cache::do_make_reader (53 samples, 0.98%)</title><rect x="545.4" y="389" width="11.6" height="15.0" fill="rgb(220,159,13)" rx="2" ry="2" />
<text  x="548.37" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.02%)</title><rect x="109.0" y="341" width="0.2" height="15.0" fill="rgb(241,5,3)" rx="2" ry="2" />
<text  x="111.97" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="74.2" y="373" width="0.2" height="15.0" fill="rgb(243,113,1)" rx="2" ry="2" />
<text  x="77.16" y="383.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;, seastar::future&lt;void&gt; &gt;, std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;, seastar::future&lt;void&gt; &gt; &gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="830.9" y="469" width="0.2" height="15.0" fill="rgb(242,41,3)" rx="2" ry="2" />
<text  x="833.90" y="479.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned int, std::less&lt;unsigned int&gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;unsigned int&gt; &gt;::find (5 samples, 0.09%)</title><rect x="39.8" y="373" width="1.1" height="15.0" fill="rgb(222,151,25)" rx="2" ry="2" />
<text  x="42.78" y="383.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::read_next (1 samples, 0.02%)</title><rect x="337.8" y="181" width="0.2" height="15.0" fill="rgb(239,126,38)" rx="2" ry="2" />
<text  x="340.79" y="191.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.06%)</title><rect x="539.2" y="325" width="0.7" height="15.0" fill="rgb(207,148,39)" rx="2" ry="2" />
<text  x="542.24" y="335.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_with_triggers (2 samples, 0.04%)</title><rect x="860.5" y="453" width="0.4" height="15.0" fill="rgb(242,133,29)" rx="2" ry="2" />
<text  x="863.46" y="463.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.02%)</title><rect x="1121.9" y="245" width="0.2" height="15.0" fill="rgb(240,133,50)" rx="2" ry="2" />
<text  x="1124.90" y="255.5" ></text>
</g>
<g >
<title>seastar::internal::repeater&lt;flat_mutation_reader::impl::consume_pausable&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (1 samples, 0.02%)</title><rect x="858.9" y="565" width="0.2" height="15.0" fill="rgb(220,86,1)" rx="2" ry="2" />
<text  x="861.93" y="575.5" ></text>
</g>
<g >
<title>service::storage_service::init_server (1 samples, 0.02%)</title><rect x="11.1" y="597" width="0.2" height="15.0" fill="rgb(205,91,20)" rx="2" ry="2" />
<text  x="14.09" y="607.5" ></text>
</g>
<g >
<title>bytes_view_hasher::finalize (1 samples, 0.02%)</title><rect x="17.9" y="389" width="0.2" height="15.0" fill="rgb(229,178,33)" rx="2" ry="2" />
<text  x="20.88" y="399.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.02%)</title><rect x="991.8" y="325" width="0.3" height="15.0" fill="rgb(221,180,6)" rx="2" ry="2" />
<text  x="994.84" y="335.5" ></text>
</g>
<g >
<title>intrusive_array&lt;memtable_entry&gt;::lower_bound&lt;dht::ring_position, dht::ring_position_comparator&gt; (60 samples, 1.11%)</title><rect x="503.1" y="373" width="13.1" height="15.0" fill="rgb(222,92,35)" rx="2" ry="2" />
<text  x="506.11" y="383.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (1 samples, 0.02%)</title><rect x="1146.9" y="469" width="0.2" height="15.0" fill="rgb(218,93,28)" rx="2" ry="2" />
<text  x="1149.86" y="479.5" ></text>
</g>
<g >
<title>do_query_on_all_shards&lt;(anonymous namespace)::mutation_query_result_builder&gt; (1 samples, 0.02%)</title><rect x="107.7" y="405" width="0.2" height="15.0" fill="rgb(226,60,15)" rx="2" ry="2" />
<text  x="110.66" y="415.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::~impl (2 samples, 0.04%)</title><rect x="582.6" y="373" width="0.4" height="15.0" fill="rgb(230,200,45)" rx="2" ry="2" />
<text  x="585.59" y="383.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_need_rehash (4 samples, 0.07%)</title><rect x="1154.7" y="517" width="0.9" height="15.0" fill="rgb(251,18,38)" rx="2" ry="2" />
<text  x="1157.75" y="527.5" ></text>
</g>
<g >
<title>operator delete (5 samples, 0.09%)</title><rect x="1141.2" y="549" width="1.1" height="15.0" fill="rgb(215,166,37)" rx="2" ry="2" />
<text  x="1144.17" y="559.5" ></text>
</g>
<g >
<title>seastar::future&lt;mutation_fragment*&gt;::then_impl&lt;query::consume_page&lt; (564 samples, 10.47%)</title><rect x="326.6" y="469" width="123.5" height="15.0" fill="rgb(236,178,40)" rx="2" ry="2" />
<text  x="329.62" y="479.5" >seastar::future..</text>
</g>
<g >
<title>reader_permit::impl::mark_unused (4 samples, 0.07%)</title><rect x="702.4" y="533" width="0.8" height="15.0" fill="rgb(205,54,35)" rx="2" ry="2" />
<text  x="705.37" y="543.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::initial_key_restrictions&lt;partition_key&gt;::do_merge_to (2 samples, 0.04%)</title><rect x="73.1" y="437" width="0.4" height="15.0" fill="rgb(224,132,53)" rx="2" ry="2" />
<text  x="76.06" y="447.5" ></text>
</g>
<g >
<title>bound_view::tri_compare::operator (1 samples, 0.02%)</title><rect x="106.6" y="421" width="0.2" height="15.0" fill="rgb(229,130,9)" rx="2" ry="2" />
<text  x="109.56" y="431.5" ></text>
</g>
<g >
<title>bplus::searcher&lt;dht::ring_position, long, dht::raw_token_less_comparator, 16ul,  (6 samples, 0.11%)</title><rect x="495.4" y="357" width="1.4" height="15.0" fill="rgb(229,30,18)" rx="2" ry="2" />
<text  x="498.44" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="1107.0" y="469" width="0.2" height="15.0" fill="rgb(215,169,52)" rx="2" ry="2" />
<text  x="1110.01" y="479.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (1 samples, 0.02%)</title><rect x="1116.2" y="485" width="0.2" height="15.0" fill="rgb(254,191,31)" rx="2" ry="2" />
<text  x="1119.21" y="495.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::inet_address (1 samples, 0.02%)</title><rect x="1060.2" y="405" width="0.2" height="15.0" fill="rgb(251,78,12)" rx="2" ry="2" />
<text  x="1063.15" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="72.6" y="389" width="0.2" height="15.0" fill="rgb(235,202,30)" rx="2" ry="2" />
<text  x="75.62" y="399.5" ></text>
</g>
<g >
<title>intrusive_b::node&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (1 samples, 0.02%)</title><rect x="1139.4" y="389" width="0.2" height="15.0" fill="rgb(248,193,51)" rx="2" ry="2" />
<text  x="1142.42" y="399.5" ></text>
</g>
<g >
<title>cql3::statements::update_statement::add_update_for_key (8 samples, 0.15%)</title><rect x="863.3" y="421" width="1.8" height="15.0" fill="rgb(254,172,37)" rx="2" ry="2" />
<text  x="866.30" y="431.5" ></text>
</g>
<g >
<title>seastar::api_v3::and_newer::make_file_output_stream (1 samples, 0.02%)</title><rect x="701.1" y="533" width="0.2" height="15.0" fill="rgb(212,155,29)" rx="2" ry="2" />
<text  x="704.05" y="543.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::__do_dyncast (7 samples, 0.13%)</title><rect x="12.0" y="645" width="1.5" height="15.0" fill="rgb(219,155,14)" rx="2" ry="2" />
<text  x="14.97" y="655.5" ></text>
</g>
<g >
<title>memtable::find_or_create_partition (4 samples, 0.07%)</title><rect x="1118.6" y="293" width="0.9" height="15.0" fill="rgb(205,129,18)" rx="2" ry="2" />
<text  x="1121.62" y="303.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::~statement_restrictions (1 samples, 0.02%)</title><rect x="74.6" y="469" width="0.2" height="15.0" fill="rgb(243,93,46)" rx="2" ry="2" />
<text  x="77.59" y="479.5" ></text>
</g>
<g >
<title>std::hash&lt;wrapping_interval&lt;dht::token&gt; &gt;::operator (1 samples, 0.02%)</title><rect x="1156.9" y="517" width="0.3" height="15.0" fill="rgb(236,48,43)" rx="2" ry="2" />
<text  x="1159.94" y="527.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::at (1 samples, 0.02%)</title><rect x="1087.5" y="405" width="0.2" height="15.0" fill="rgb(251,132,53)" rx="2" ry="2" />
<text  x="1090.52" y="415.5" ></text>
</g>
<g >
<title>utils::phased_barrier::operation::~operation (3 samples, 0.06%)</title><rect x="105.9" y="549" width="0.7" height="15.0" fill="rgb(225,49,28)" rx="2" ry="2" />
<text  x="108.91" y="559.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (3 samples, 0.06%)</title><rect x="247.6" y="181" width="0.6" height="15.0" fill="rgb(232,44,14)" rx="2" ry="2" />
<text  x="250.58" y="191.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.06%)</title><rect x="290.5" y="245" width="0.7" height="15.0" fill="rgb(214,214,13)" rx="2" ry="2" />
<text  x="293.49" y="255.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (2 samples, 0.04%)</title><rect x="142.0" y="517" width="0.5" height="15.0" fill="rgb(210,196,40)" rx="2" ry="2" />
<text  x="145.04" y="527.5" ></text>
</g>
<g >
<title>seastar::memory::allocate_aligned (11 samples, 0.20%)</title><rect x="240.1" y="101" width="2.4" height="15.0" fill="rgb(241,74,29)" rx="2" ry="2" />
<text  x="243.13" y="111.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.02%)</title><rect x="51.6" y="341" width="0.2" height="15.0" fill="rgb(223,95,34)" rx="2" ry="2" />
<text  x="54.60" y="351.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::on_permit_unused (1 samples, 0.02%)</title><rect x="137.2" y="485" width="0.2" height="15.0" fill="rgb(229,79,6)" rx="2" ry="2" />
<text  x="140.22" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::vector (1 samples, 0.02%)</title><rect x="1105.5" y="469" width="0.2" height="15.0" fill="rgb(244,209,18)" rx="2" ry="2" />
<text  x="1108.48" y="479.5" ></text>
</g>
<g >
<title>antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;::get_currentLine (1 samples, 0.02%)</title><rect x="27.3" y="325" width="0.2" height="15.0" fill="rgb(217,39,10)" rx="2" ry="2" />
<text  x="30.30" y="335.5" ></text>
</g>
<g >
<title>mutation_querier::prepare_writers (6 samples, 0.11%)</title><rect x="364.5" y="245" width="1.3" height="15.0" fill="rgb(236,146,45)" rx="2" ry="2" />
<text  x="367.50" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (3 samples, 0.06%)</title><rect x="29.9" y="277" width="0.7" height="15.0" fill="rgb(210,173,51)" rx="2" ry="2" />
<text  x="32.93" y="287.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::clear (3 samples, 0.06%)</title><rect x="323.6" y="421" width="0.6" height="15.0" fill="rgb(237,96,28)" rx="2" ry="2" />
<text  x="326.56" y="431.5" ></text>
</g>
<g >
<title>std::construct_at&lt;mutation_fragment, schema const&amp;, reader_permit&amp;, partition_start&gt; (17 samples, 0.32%)</title><rect x="531.1" y="293" width="3.8" height="15.0" fill="rgb(252,144,30)" rx="2" ry="2" />
<text  x="534.14" y="303.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.02%)</title><rect x="45.0" y="229" width="0.3" height="15.0" fill="rgb(207,177,11)" rx="2" ry="2" />
<text  x="48.03" y="239.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.07%)</title><rect x="841.6" y="485" width="0.9" height="15.0" fill="rgb(253,136,48)" rx="2" ry="2" />
<text  x="844.63" y="495.5" ></text>
</g>
<g >
<title>std::construct_at&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (2 samples, 0.04%)</title><rect x="23.6" y="293" width="0.4" height="15.0" fill="rgb(249,202,38)" rx="2" ry="2" />
<text  x="26.58" y="303.5" ></text>
</g>
<g >
<title>non-virtual thunk to cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::~single_column_primary_key_restrictions (1 samples, 0.02%)</title><rect x="664.3" y="501" width="0.2" height="15.0" fill="rgb(248,148,5)" rx="2" ry="2" />
<text  x="667.27" y="511.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::impl (3 samples, 0.06%)</title><rect x="555.2" y="309" width="0.7" height="15.0" fill="rgb(253,101,29)" rx="2" ry="2" />
<text  x="558.22" y="319.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (35 samples, 0.65%)</title><rect x="428.2" y="309" width="7.7" height="15.0" fill="rgb(231,210,45)" rx="2" ry="2" />
<text  x="431.22" y="319.5" ></text>
</g>
<g >
<title>antlr3::IntStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::_LA (1 samples, 0.02%)</title><rect x="35.8" y="309" width="0.3" height="15.0" fill="rgb(241,134,20)" rx="2" ry="2" />
<text  x="38.84" y="319.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::set_value&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt; (2 samples, 0.04%)</title><rect x="710.0" y="517" width="0.5" height="15.0" fill="rgb(232,196,4)" rx="2" ry="2" />
<text  x="713.03" y="527.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (1 samples, 0.02%)</title><rect x="663.8" y="549" width="0.2" height="15.0" fill="rgb(233,54,23)" rx="2" ry="2" />
<text  x="666.83" y="559.5" ></text>
</g>
<g >
<title>_ZN7seastar12continuationINS_8internal22promise_base_with_typeIvEEZNS_6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE14discard_resultEvEUlDpOT_E_ZNSA_14then_impl_nrvoISE_NS4_IvEEEET0_OT_EUlOS3_RSE_ONS_12future_stateIS9_EEE_S9_E15run_and_disposeEv (42 samples, 0.78%)</title><rect x="93.9" y="565" width="9.2" height="15.0" fill="rgb(228,12,23)" rx="2" ry="2" />
<text  x="96.86" y="575.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::cql3_type::raw&gt;::shared_ptr (1 samples, 0.02%)</title><rect x="62.1" y="389" width="0.2" height="15.0" fill="rgb(229,205,11)" rx="2" ry="2" />
<text  x="65.11" y="399.5" ></text>
</g>
<g >
<title>std::make_unique&lt;merging_reader&lt;mutation_reader_merger&gt;, seastar::lw_shared_ptr&lt;schema const&gt;&amp;, reader_permit, seastar::bool_class&lt;streamed_mutation::forwarding_tag&gt;&amp;, mutation_reader_merger&gt; (29 samples, 0.54%)</title><rect x="479.5" y="373" width="6.3" height="15.0" fill="rgb(248,205,11)" rx="2" ry="2" />
<text  x="482.46" y="383.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;cql3::expr::untyped_constant, void, void, cql3::expr::untyped_constant, void&gt; (7 samples, 0.13%)</title><rect x="52.5" y="309" width="1.5" height="15.0" fill="rgb(212,104,49)" rx="2" ry="2" />
<text  x="55.48" y="319.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::visit&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (1 samples, 0.02%)</title><rect x="858.9" y="501" width="0.2" height="15.0" fill="rgb(246,75,28)" rx="2" ry="2" />
<text  x="861.93" y="511.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::hasException (1 samples, 0.02%)</title><rect x="45.7" y="405" width="0.2" height="15.0" fill="rgb(247,56,47)" rx="2" ry="2" />
<text  x="48.69" y="415.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.02%)</title><rect x="48.3" y="261" width="0.2" height="15.0" fill="rgb(224,117,12)" rx="2" ry="2" />
<text  x="51.32" y="271.5" ></text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::operator (4 samples, 0.07%)</title><rect x="765.6" y="453" width="0.9" height="15.0" fill="rgb(242,191,48)" rx="2" ry="2" />
<text  x="768.65" y="463.5" ></text>
</g>
<g >
<title>boost::intrusive::bstree_algorithms&lt;boost::intrusive::rbtree_node_traits&lt;void*, false&gt; &gt;::clear_and_dispose&lt;boost::intrusive::detail::node_disposer&lt;current_deleter&lt;range_tombstone_entry&gt; (1 samples, 0.02%)</title><rect x="590.9" y="325" width="0.2" height="15.0" fill="rgb(246,182,27)" rx="2" ry="2" />
<text  x="593.91" y="335.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (2 samples, 0.04%)</title><rect x="752.3" y="437" width="0.4" height="15.0" fill="rgb(226,68,9)" rx="2" ry="2" />
<text  x="755.29" y="447.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.02%)</title><rect x="44.4" y="309" width="0.2" height="15.0" fill="rgb(221,86,47)" rx="2" ry="2" />
<text  x="47.38" y="319.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;compact_for_query&lt; (3 samples, 0.06%)</title><rect x="449.5" y="453" width="0.6" height="15.0" fill="rgb(224,46,14)" rx="2" ry="2" />
<text  x="452.46" y="463.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.06%)</title><rect x="539.2" y="341" width="0.7" height="15.0" fill="rgb(250,150,31)" rx="2" ry="2" />
<text  x="542.24" y="351.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (2 samples, 0.04%)</title><rect x="1104.6" y="453" width="0.4" height="15.0" fill="rgb(254,145,27)" rx="2" ry="2" />
<text  x="1107.60" y="463.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.02%)</title><rect x="58.6" y="181" width="0.2" height="15.0" fill="rgb(222,122,35)" rx="2" ry="2" />
<text  x="61.61" y="191.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;3ul, cql3::expr::untyped_constant&gt; (1 samples, 0.02%)</title><rect x="53.6" y="53" width="0.2" height="15.0" fill="rgb(206,214,49)" rx="2" ry="2" />
<text  x="56.57" y="63.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql_transport::messages::result_message&gt;::~shared_ptr (2 samples, 0.04%)</title><rect x="1138.5" y="565" width="0.5" height="15.0" fill="rgb(240,98,35)" rx="2" ry="2" />
<text  x="1141.54" y="575.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (1 samples, 0.02%)</title><rect x="712.0" y="517" width="0.2" height="15.0" fill="rgb(241,15,17)" rx="2" ry="2" />
<text  x="715.00" y="527.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="990.5" y="389" width="0.2" height="15.0" fill="rgb(248,212,20)" rx="2" ry="2" />
<text  x="993.52" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (5 samples, 0.09%)</title><rect x="843.6" y="453" width="1.1" height="15.0" fill="rgb(217,206,42)" rx="2" ry="2" />
<text  x="846.60" y="463.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (18 samples, 0.33%)</title><rect x="423.4" y="309" width="3.9" height="15.0" fill="rgb(205,38,51)" rx="2" ry="2" />
<text  x="426.41" y="319.5" ></text>
</g>
<g >
<title>std::forward&lt;std::default_delete&lt;cql3::expr::expression::impl&gt; &gt; (1 samples, 0.02%)</title><rect x="56.4" y="229" width="0.2" height="15.0" fill="rgb(231,75,40)" rx="2" ry="2" />
<text  x="59.42" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_clear (14 samples, 0.26%)</title><rect x="599.0" y="421" width="3.1" height="15.0" fill="rgb(223,109,41)" rx="2" ry="2" />
<text  x="602.01" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (2 samples, 0.04%)</title><rect x="1141.8" y="533" width="0.5" height="15.0" fill="rgb(225,58,35)" rx="2" ry="2" />
<text  x="1144.83" y="543.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::clear (1 samples, 0.02%)</title><rect x="477.9" y="357" width="0.2" height="15.0" fill="rgb(211,192,31)" rx="2" ry="2" />
<text  x="480.93" y="367.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::reset (1 samples, 0.02%)</title><rect x="54.2" y="293" width="0.2" height="15.0" fill="rgb(219,8,39)" rx="2" ry="2" />
<text  x="57.23" y="303.5" ></text>
</g>
<g >
<title>partition_snapshot::~partition_snapshot (2 samples, 0.04%)</title><rect x="590.5" y="325" width="0.4" height="15.0" fill="rgb(211,166,11)" rx="2" ry="2" />
<text  x="593.48" y="335.5" ></text>
</g>
<g >
<title>std::hash&lt;auth::resource&gt;::operator (14 samples, 0.26%)</title><rect x="803.7" y="213" width="3.1" height="15.0" fill="rgb(207,60,48)" rx="2" ry="2" />
<text  x="806.75" y="223.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (2 samples, 0.04%)</title><rect x="484.3" y="341" width="0.4" height="15.0" fill="rgb(244,127,52)" rx="2" ry="2" />
<text  x="487.28" y="351.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (1 samples, 0.02%)</title><rect x="17.2" y="581" width="0.2" height="15.0" fill="rgb(249,3,28)" rx="2" ry="2" />
<text  x="20.23" y="591.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.02%)</title><rect x="742.0" y="357" width="0.2" height="15.0" fill="rgb(250,115,47)" rx="2" ry="2" />
<text  x="745.00" y="367.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;query::result&gt;::operator= (1 samples, 0.02%)</title><rect x="719.9" y="501" width="0.2" height="15.0" fill="rgb(229,67,52)" rx="2" ry="2" />
<text  x="722.88" y="511.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="660.1" y="533" width="0.2" height="15.0" fill="rgb(226,65,31)" rx="2" ry="2" />
<text  x="663.11" y="543.5" ></text>
</g>
<g >
<title>all (5,389 samples, 100%)</title><rect x="10.0" y="725" width="1180.0" height="15.0" fill="rgb(243,193,12)" rx="2" ry="2" />
<text  x="13.00" y="735.5" ></text>
</g>
<g >
<title>service::never_speculating_read_executor::~never_speculating_read_executor (14 samples, 0.26%)</title><rect x="1164.2" y="517" width="3.0" height="15.0" fill="rgb(215,99,31)" rx="2" ry="2" />
<text  x="1167.16" y="527.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;cql3::column_identifier, false&gt;::make&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const&amp;, bool&gt; (1 samples, 0.02%)</title><rect x="72.2" y="389" width="0.2" height="15.0" fill="rgb(246,66,18)" rx="2" ry="2" />
<text  x="75.19" y="399.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="60.4" y="293" width="0.2" height="15.0" fill="rgb(210,86,17)" rx="2" ry="2" />
<text  x="63.36" y="303.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (2 samples, 0.04%)</title><rect x="810.3" y="277" width="0.5" height="15.0" fill="rgb(241,11,5)" rx="2" ry="2" />
<text  x="813.32" y="287.5" ></text>
</g>
<g >
<title>atomic_cell_or_collection::copy (1 samples, 0.02%)</title><rect x="223.1" y="197" width="0.2" height="15.0" fill="rgb(249,157,51)" rx="2" ry="2" />
<text  x="226.05" y="207.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="705.4" y="533" width="0.3" height="15.0" fill="rgb(241,71,31)" rx="2" ry="2" />
<text  x="708.43" y="543.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_allocate_buckets (10 samples, 0.19%)</title><rect x="1151.0" y="469" width="2.2" height="15.0" fill="rgb(217,167,22)" rx="2" ry="2" />
<text  x="1154.02" y="479.5" ></text>
</g>
<g >
<title>antlr3::Lexer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::Lexer (1 samples, 0.02%)</title><rect x="20.7" y="485" width="0.2" height="15.0" fill="rgb(208,157,47)" rx="2" ry="2" />
<text  x="23.73" y="495.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::get_promise (1 samples, 0.02%)</title><rect x="736.7" y="517" width="0.3" height="15.0" fill="rgb(241,24,8)" rx="2" ry="2" />
<text  x="739.74" y="527.5" ></text>
</g>
<g >
<title>absl::hash_internal::AbslHashValue&lt;absl::hash_internal::HashState&gt; (1 samples, 0.02%)</title><rect x="848.0" y="405" width="0.2" height="15.0" fill="rgb(230,124,41)" rx="2" ry="2" />
<text  x="850.98" y="415.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::clear (1 samples, 0.02%)</title><rect x="602.5" y="421" width="0.2" height="15.0" fill="rgb(240,39,7)" rx="2" ry="2" />
<text  x="605.52" y="431.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::process_results (37 samples, 0.69%)</title><rect x="666.2" y="549" width="8.1" height="15.0" fill="rgb(211,21,0)" rx="2" ry="2" />
<text  x="669.24" y="559.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.09%)</title><rect x="852.4" y="421" width="1.1" height="15.0" fill="rgb(230,158,31)" rx="2" ry="2" />
<text  x="855.36" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (1 samples, 0.02%)</title><rect x="421.4" y="213" width="0.3" height="15.0" fill="rgb(216,111,14)" rx="2" ry="2" />
<text  x="424.43" y="223.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::list_service_level_statement, std::default_delete&lt;cql3::statements::list_service_level_statement&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="68.0" y="453" width="0.2" height="15.0" fill="rgb(241,13,54)" rx="2" ry="2" />
<text  x="71.03" y="463.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.02%)</title><rect x="50.5" y="229" width="0.2" height="15.0" fill="rgb(207,138,34)" rx="2" ry="2" />
<text  x="53.51" y="239.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (2 samples, 0.04%)</title><rect x="42.0" y="197" width="0.4" height="15.0" fill="rgb(241,170,27)" rx="2" ry="2" />
<text  x="44.97" y="207.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (2 samples, 0.04%)</title><rect x="433.5" y="245" width="0.4" height="15.0" fill="rgb(245,40,44)" rx="2" ry="2" />
<text  x="436.48" y="255.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.02%)</title><rect x="1169.9" y="517" width="0.2" height="15.0" fill="rgb(219,24,25)" rx="2" ry="2" />
<text  x="1172.86" y="527.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_esft&lt;schema&gt;::dispose (1 samples, 0.02%)</title><rect x="703.5" y="245" width="0.2" height="15.0" fill="rgb(251,89,2)" rx="2" ry="2" />
<text  x="706.46" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::assign (2 samples, 0.04%)</title><rect x="28.6" y="277" width="0.4" height="15.0" fill="rgb(235,192,32)" rx="2" ry="2" />
<text  x="31.61" y="287.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="1120.8" y="245" width="0.2" height="15.0" fill="rgb(254,148,30)" rx="2" ry="2" />
<text  x="1123.81" y="255.5" ></text>
</g>
<g >
<title>std::pair&lt;auth::authenticated_user, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;::pair (6 samples, 0.11%)</title><rect x="755.8" y="437" width="1.3" height="15.0" fill="rgb(248,127,42)" rx="2" ry="2" />
<text  x="758.79" y="447.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (1 samples, 0.02%)</title><rect x="106.6" y="469" width="0.2" height="15.0" fill="rgb(249,81,5)" rx="2" ry="2" />
<text  x="109.56" y="479.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (1 samples, 0.02%)</title><rect x="329.7" y="437" width="0.2" height="15.0" fill="rgb(243,17,47)" rx="2" ry="2" />
<text  x="332.69" y="447.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (1 samples, 0.02%)</title><rect x="720.1" y="501" width="0.2" height="15.0" fill="rgb(214,67,4)" rx="2" ry="2" />
<text  x="723.10" y="511.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.07%)</title><rect x="1162.4" y="517" width="0.9" height="15.0" fill="rgb(219,72,38)" rx="2" ry="2" />
<text  x="1165.41" y="527.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="556.5" y="325" width="0.3" height="15.0" fill="rgb(241,32,12)" rx="2" ry="2" />
<text  x="559.54" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="814.3" y="341" width="0.2" height="15.0" fill="rgb(249,114,3)" rx="2" ry="2" />
<text  x="817.26" y="351.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::entry::entry (1 samples, 0.02%)</title><rect x="1030.2" y="261" width="0.2" height="15.0" fill="rgb(253,140,52)" rx="2" ry="2" />
<text  x="1033.16" y="271.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="81.2" y="501" width="0.2" height="15.0" fill="rgb(244,139,20)" rx="2" ry="2" />
<text  x="84.16" y="511.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::then_wrapped_nrvo&lt;void, service::abstract_read_executor::make_data_requests (1 samples, 0.02%)</title><rect x="998.0" y="373" width="0.2" height="15.0" fill="rgb(215,117,15)" rx="2" ry="2" />
<text  x="1000.97" y="383.5" ></text>
</g>
<g >
<title>make_empty_flat_reader (13 samples, 0.24%)</title><rect x="554.1" y="373" width="2.9" height="15.0" fill="rgb(224,214,10)" rx="2" ry="2" />
<text  x="557.13" y="383.5" ></text>
</g>
<g >
<title>utils::array_search_gt (1 samples, 0.02%)</title><rect x="495.9" y="341" width="0.2" height="15.0" fill="rgb(205,32,1)" rx="2" ry="2" />
<text  x="498.88" y="351.5" ></text>
</g>
<g >
<title>operator new (9 samples, 0.17%)</title><rect x="471.6" y="309" width="1.9" height="15.0" fill="rgb(249,220,16)" rx="2" ry="2" />
<text  x="474.58" y="319.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="680.0" y="501" width="0.3" height="15.0" fill="rgb(231,127,29)" rx="2" ry="2" />
<text  x="683.03" y="511.5" ></text>
</g>
<g >
<title>dht::ring_position::as_decorated_key (8 samples, 0.15%)</title><rect x="491.7" y="389" width="1.8" height="15.0" fill="rgb(224,70,15)" rx="2" ry="2" />
<text  x="494.72" y="399.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="217.8" y="277" width="0.2" height="15.0" fill="rgb(216,47,46)" rx="2" ry="2" />
<text  x="220.80" y="287.5" ></text>
</g>
<g >
<title>std::operator+ (2 samples, 0.04%)</title><rect x="55.5" y="149" width="0.5" height="15.0" fill="rgb(230,69,27)" rx="2" ry="2" />
<text  x="58.54" y="159.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.04%)</title><rect x="690.1" y="517" width="0.4" height="15.0" fill="rgb(226,83,31)" rx="2" ry="2" />
<text  x="693.10" y="527.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;utils::small_vector&lt;service::storage_proxy::unique_response_handler, 1ul&gt; &gt;::clear (1 samples, 0.02%)</title><rect x="1127.6" y="389" width="0.2" height="15.0" fill="rgb(236,125,50)" rx="2" ry="2" />
<text  x="1130.60" y="399.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::allocate (5 samples, 0.09%)</title><rect x="529.8" y="277" width="1.1" height="15.0" fill="rgb(208,70,25)" rx="2" ry="2" />
<text  x="532.82" y="287.5" ></text>
</g>
<g >
<title>partition_key_view::legacy_tri_compare (39 samples, 0.72%)</title><rect x="507.3" y="309" width="8.5" height="15.0" fill="rgb(222,22,24)" rx="2" ry="2" />
<text  x="510.27" y="319.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (1 samples, 0.02%)</title><rect x="929.4" y="453" width="0.3" height="15.0" fill="rgb(251,112,20)" rx="2" ry="2" />
<text  x="932.43" y="463.5" ></text>
</g>
<g >
<title>sstables::mc::writer::consume (9 samples, 0.17%)</title><rect x="81.6" y="517" width="2.0" height="15.0" fill="rgb(218,207,35)" rx="2" ry="2" />
<text  x="84.60" y="527.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_M_reset (2 samples, 0.04%)</title><rect x="1100.4" y="453" width="0.5" height="15.0" fill="rgb(235,186,13)" rx="2" ry="2" />
<text  x="1103.44" y="463.5" ></text>
</g>
<g >
<title>seastar::repeat&lt;flat_mutation_reader::impl::consume_pausable&lt;flush_reader::fill_buffer (1 samples, 0.02%)</title><rect x="81.4" y="517" width="0.2" height="15.0" fill="rgb(206,48,30)" rx="2" ry="2" />
<text  x="84.38" y="527.5" ></text>
</g>
<g >
<title>query_result_builder::consume (203 samples, 3.77%)</title><rect x="357.3" y="277" width="44.4" height="15.0" fill="rgb(249,90,2)" rx="2" ry="2" />
<text  x="360.28" y="287.5" >quer..</text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct_single&lt;std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, cql3::expr::binary_operator const&amp;&gt; (2 samples, 0.04%)</title><rect x="73.1" y="245" width="0.4" height="15.0" fill="rgb(225,101,16)" rx="2" ry="2" />
<text  x="76.06" y="255.5" ></text>
</g>
<g >
<title>utils::tuple_hash::operator (1 samples, 0.02%)</title><rect x="828.3" y="389" width="0.2" height="15.0" fill="rgb(227,225,11)" rx="2" ry="2" />
<text  x="831.27" y="399.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_M_move_assign (1 samples, 0.02%)</title><rect x="1099.8" y="437" width="0.2" height="15.0" fill="rgb(219,102,16)" rx="2" ry="2" />
<text  x="1102.79" y="447.5" ></text>
</g>
<g >
<title>partition_snapshot::get_change_mark (4 samples, 0.07%)</title><rect x="273.9" y="213" width="0.8" height="15.0" fill="rgb(220,148,14)" rx="2" ry="2" />
<text  x="276.85" y="223.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (3 samples, 0.06%)</title><rect x="42.8" y="389" width="0.7" height="15.0" fill="rgb(243,215,43)" rx="2" ry="2" />
<text  x="45.84" y="399.5" ></text>
</g>
<g >
<title>reader_permit::consume_resources (2 samples, 0.04%)</title><rect x="533.3" y="245" width="0.5" height="15.0" fill="rgb(221,126,18)" rx="2" ry="2" />
<text  x="536.33" y="255.5" ></text>
</g>
<g >
<title>query_mutations_on_all_shards (1 samples, 0.02%)</title><rect x="107.7" y="421" width="0.2" height="15.0" fill="rgb(246,23,43)" rx="2" ry="2" />
<text  x="110.66" y="431.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_psrstate (1 samples, 0.02%)</title><rect x="49.4" y="373" width="0.2" height="15.0" fill="rgb(241,184,20)" rx="2" ry="2" />
<text  x="52.41" y="383.5" ></text>
</g>
<g >
<title>row::apply_monotonically (1 samples, 0.02%)</title><rect x="864.0" y="357" width="0.2" height="15.0" fill="rgb(209,29,6)" rx="2" ry="2" />
<text  x="866.96" y="367.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_construct&lt;interval_bound&lt;dht::ring_position&gt; const&amp;&gt; (4 samples, 0.07%)</title><rect x="634.9" y="501" width="0.9" height="15.0" fill="rgb(222,94,4)" rx="2" ry="2" />
<text  x="637.92" y="511.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;gms::inet_address, gms::inet_address, std::allocator&lt;gms::inet_address&gt;, std::__detail::_Identity, std::equal_to&lt;gms::inet_address&gt;, std::hash&lt;gms::inet_address&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert&lt;gms::inet_address const&amp;, std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;gms::inet_address, false&gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="109.6" y="517" width="0.2" height="15.0" fill="rgb(221,220,37)" rx="2" ry="2" />
<text  x="112.63" y="527.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (1 samples, 0.02%)</title><rect x="675.2" y="549" width="0.2" height="15.0" fill="rgb(206,45,49)" rx="2" ry="2" />
<text  x="678.21" y="559.5" ></text>
</g>
<g >
<title>row::external_memory_usage (24 samples, 0.45%)</title><rect x="254.4" y="213" width="5.2" height="15.0" fill="rgb(207,186,41)" rx="2" ry="2" />
<text  x="257.36" y="223.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.02%)</title><rect x="24.7" y="293" width="0.2" height="15.0" fill="rgb(210,37,24)" rx="2" ry="2" />
<text  x="27.67" y="303.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.07%)</title><rect x="886.5" y="373" width="0.9" height="15.0" fill="rgb(206,15,11)" rx="2" ry="2" />
<text  x="889.52" y="383.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (2 samples, 0.04%)</title><rect x="835.7" y="421" width="0.5" height="15.0" fill="rgb(254,94,16)" rx="2" ry="2" />
<text  x="838.72" y="431.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.02%)</title><rect x="55.8" y="101" width="0.2" height="15.0" fill="rgb(223,53,35)" rx="2" ry="2" />
<text  x="58.76" y="111.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.02%)</title><rect x="1165.9" y="485" width="0.2" height="15.0" fill="rgb(206,147,37)" rx="2" ry="2" />
<text  x="1168.91" y="495.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="534.2" y="261" width="0.2" height="15.0" fill="rgb(206,37,1)" rx="2" ry="2" />
<text  x="537.20" y="271.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (2 samples, 0.04%)</title><rect x="48.3" y="277" width="0.5" height="15.0" fill="rgb(237,90,23)" rx="2" ry="2" />
<text  x="51.32" y="287.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (688 samples, 12.77%)</title><rect x="174.9" y="453" width="150.6" height="15.0" fill="rgb(217,219,3)" rx="2" ry="2" />
<text  x="177.88" y="463.5" >merging_reader&lt;muta..</text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (1 samples, 0.02%)</title><rect x="537.3" y="357" width="0.2" height="15.0" fill="rgb(238,9,20)" rx="2" ry="2" />
<text  x="540.27" y="367.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::modification_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::do_flush (30 samples, 0.56%)</title><rect x="860.0" y="549" width="6.6" height="15.0" fill="rgb(252,196,17)" rx="2" ry="2" />
<text  x="863.02" y="559.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;service::storage_proxy_coordinator_query_result&gt;, seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::finally_body&lt;service::storage_proxy::do_query (37 samples, 0.69%)</title><rect x="693.0" y="565" width="8.1" height="15.0" fill="rgb(234,156,21)" rx="2" ry="2" />
<text  x="695.95" y="575.5" ></text>
</g>
<g >
<title>single_node_cql_env::make_query_state (47 samples, 0.87%)</title><rect x="838.1" y="501" width="10.3" height="15.0" fill="rgb(207,218,30)" rx="2" ry="2" />
<text  x="841.12" y="511.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::operator== (1 samples, 0.02%)</title><rect x="798.5" y="197" width="0.2" height="15.0" fill="rgb(208,187,23)" rx="2" ry="2" />
<text  x="801.49" y="207.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (2 samples, 0.04%)</title><rect x="826.1" y="341" width="0.4" height="15.0" fill="rgb(246,224,53)" rx="2" ry="2" />
<text  x="829.08" y="351.5" ></text>
</g>
<g >
<title>ser::serializer&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;::write_fragmented&lt;bytes_ostream, fragment_range&lt;managed_bytes_basic_view&lt; (22 samples, 0.41%)</title><rect x="391.7" y="229" width="4.8" height="15.0" fill="rgb(228,109,44)" rx="2" ry="2" />
<text  x="394.66" y="239.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="183.0" y="357" width="0.2" height="15.0" fill="rgb(242,161,5)" rx="2" ry="2" />
<text  x="185.98" y="367.5" ></text>
</g>
<g >
<title>std::optional&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::optional (1 samples, 0.02%)</title><rect x="43.5" y="389" width="0.2" height="15.0" fill="rgb(213,18,34)" rx="2" ry="2" />
<text  x="46.50" y="399.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_M_reset (1 samples, 0.02%)</title><rect x="1114.7" y="485" width="0.2" height="15.0" fill="rgb(211,194,27)" rx="2" ry="2" />
<text  x="1117.68" y="495.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextTokenStr (59 samples, 1.09%)</title><rect x="26.2" y="341" width="12.9" height="15.0" fill="rgb(221,27,17)" rx="2" ry="2" />
<text  x="29.20" y="351.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::contains&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (6 samples, 0.11%)</title><rect x="829.1" y="405" width="1.4" height="15.0" fill="rgb(220,128,2)" rx="2" ry="2" />
<text  x="832.15" y="415.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (1 samples, 0.02%)</title><rect x="859.4" y="453" width="0.2" height="15.0" fill="rgb(249,154,31)" rx="2" ry="2" />
<text  x="862.36" y="463.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;void&gt;  (1 samples, 0.02%)</title><rect x="106.8" y="469" width="0.2" height="15.0" fill="rgb(236,137,11)" rx="2" ry="2" />
<text  x="109.78" y="479.5" ></text>
</g>
<g >
<title>cql3::raw_value::make_value (23 samples, 0.43%)</title><rect x="893.5" y="341" width="5.1" height="15.0" fill="rgb(232,85,7)" rx="2" ry="2" />
<text  x="896.52" y="351.5" ></text>
</g>
<g >
<title>operator new (12 samples, 0.22%)</title><rect x="973.7" y="421" width="2.6" height="15.0" fill="rgb(237,148,27)" rx="2" ry="2" />
<text  x="976.66" y="431.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;query::querier&lt; (22 samples, 0.41%)</title><rect x="636.0" y="501" width="4.8" height="15.0" fill="rgb(243,141,20)" rx="2" ry="2" />
<text  x="639.02" y="511.5" ></text>
</g>
<g >
<title>sstring_hash::operator (1 samples, 0.02%)</title><rect x="841.2" y="453" width="0.2" height="15.0" fill="rgb(214,104,18)" rx="2" ry="2" />
<text  x="844.19" y="463.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::~timer (10 samples, 0.19%)</title><rect x="132.0" y="453" width="2.2" height="15.0" fill="rgb(252,100,40)" rx="2" ry="2" />
<text  x="134.96" y="463.5" ></text>
</g>
<g >
<title>basic_atomic_cell_view&lt; (1 samples, 0.02%)</title><rect x="1131.1" y="165" width="0.2" height="15.0" fill="rgb(218,71,5)" rx="2" ry="2" />
<text  x="1134.10" y="175.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;gms::inet_address, std::pair&lt;gms::inet_address const, table::cache_hit_rate&gt;, std::allocator&lt;std::pair&lt;gms::inet_address const, table::cache_hit_rate&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;gms::inet_address&gt;, std::hash&lt;gms::inet_address&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (4 samples, 0.07%)</title><rect x="724.7" y="485" width="0.9" height="15.0" fill="rgb(246,17,28)" rx="2" ry="2" />
<text  x="727.70" y="495.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (2 samples, 0.04%)</title><rect x="1028.4" y="261" width="0.4" height="15.0" fill="rgb(209,215,45)" rx="2" ry="2" />
<text  x="1031.40" y="271.5" ></text>
</g>
<g >
<title>auth::get_permissions (1 samples, 0.02%)</title><rect x="77.0" y="437" width="0.2" height="15.0" fill="rgb(244,70,40)" rx="2" ry="2" />
<text  x="80.00" y="447.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::take_value (1 samples, 0.02%)</title><rect x="200.1" y="341" width="0.2" height="15.0" fill="rgb(227,196,6)" rx="2" ry="2" />
<text  x="203.06" y="351.5" ></text>
</g>
<g >
<title>compound_type&lt; (1 samples, 0.02%)</title><rect x="915.2" y="453" width="0.2" height="15.0" fill="rgb(226,224,39)" rx="2" ry="2" />
<text  x="918.20" y="463.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (1 samples, 0.02%)</title><rect x="754.7" y="421" width="0.2" height="15.0" fill="rgb(240,46,29)" rx="2" ry="2" />
<text  x="757.70" y="431.5" ></text>
</g>
<g >
<title>std::default_delete&lt;seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::entry&gt;::operator (1 samples, 0.02%)</title><rect x="137.0" y="469" width="0.2" height="15.0" fill="rgb(209,3,18)" rx="2" ry="2" />
<text  x="140.00" y="479.5" ></text>
</g>
<g >
<title>partition_key::from_range&lt;std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt; const&amp;&gt; (1 samples, 0.02%)</title><rect x="862.4" y="405" width="0.2" height="15.0" fill="rgb(238,67,44)" rx="2" ry="2" />
<text  x="865.43" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_S_do_relocate (1 samples, 0.02%)</title><rect x="558.5" y="405" width="0.2" height="15.0" fill="rgb(230,229,7)" rx="2" ry="2" />
<text  x="561.51" y="415.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (4 samples, 0.07%)</title><rect x="104.8" y="549" width="0.9" height="15.0" fill="rgb(216,156,46)" rx="2" ry="2" />
<text  x="107.81" y="559.5" ></text>
</g>
<g >
<title>auth::data_resource_view::table (1 samples, 0.02%)</title><rect x="820.8" y="373" width="0.2" height="15.0" fill="rgb(232,43,46)" rx="2" ry="2" />
<text  x="823.83" y="383.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (1 samples, 0.02%)</title><rect x="58.8" y="357" width="0.2" height="15.0" fill="rgb(212,185,6)" rx="2" ry="2" />
<text  x="61.83" y="367.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;cql3::column_identifier, false&gt;::make&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; const&amp;, seastar::shared_ptr&lt;abstract_type const&gt;&amp;&gt; (1 samples, 0.02%)</title><rect x="109.0" y="389" width="0.2" height="15.0" fill="rgb(207,34,24)" rx="2" ry="2" />
<text  x="111.97" y="399.5" ></text>
</g>
<g >
<title>read_simple&lt;unsigned short, managed_bytes_basic_view&lt; (4 samples, 0.07%)</title><rect x="921.3" y="405" width="0.9" height="15.0" fill="rgb(226,23,45)" rx="2" ry="2" />
<text  x="924.33" y="415.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::make_partition_slice (54 samples, 1.00%)</title><rect x="1094.5" y="485" width="11.9" height="15.0" fill="rgb(207,16,23)" rx="2" ry="2" />
<text  x="1097.53" y="495.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.04%)</title><rect x="813.8" y="341" width="0.5" height="15.0" fill="rgb(227,8,30)" rx="2" ry="2" />
<text  x="816.82" y="351.5" ></text>
</g>
<g >
<title>abstract_type::bound_value_needs_to_be_reserialized (5 samples, 0.09%)</title><rect x="889.4" y="357" width="1.1" height="15.0" fill="rgb(225,177,40)" rx="2" ry="2" />
<text  x="892.36" y="367.5" ></text>
</g>
<g >
<title>std::addressof&lt;char&gt; (1 samples, 0.02%)</title><rect x="24.5" y="213" width="0.2" height="15.0" fill="rgb(223,0,17)" rx="2" ry="2" />
<text  x="27.45" y="223.5" ></text>
</g>
<g >
<title>nonwrapping_interval&lt;dht::ring_position&gt;::nonwrapping_interval (1 samples, 0.02%)</title><rect x="862.2" y="389" width="0.2" height="15.0" fill="rgb(228,215,2)" rx="2" ry="2" />
<text  x="865.21" y="399.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (1 samples, 0.02%)</title><rect x="717.7" y="501" width="0.2" height="15.0" fill="rgb(217,172,11)" rx="2" ry="2" />
<text  x="720.69" y="511.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (1 samples, 0.02%)</title><rect x="294.0" y="261" width="0.2" height="15.0" fill="rgb(224,85,14)" rx="2" ry="2" />
<text  x="297.00" y="271.5" ></text>
</g>
<g >
<title>cql3::expr::expression::~expression (1 samples, 0.02%)</title><rect x="51.2" y="357" width="0.2" height="15.0" fill="rgb(252,70,18)" rx="2" ry="2" />
<text  x="54.17" y="367.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;clustering_key_prefix&gt;::_M_reset (1 samples, 0.02%)</title><rect x="447.7" y="421" width="0.2" height="15.0" fill="rgb(219,184,27)" rx="2" ry="2" />
<text  x="450.71" y="431.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::~statement_restrictions (2 samples, 0.04%)</title><rect x="664.3" y="517" width="0.4" height="15.0" fill="rgb(206,53,52)" rx="2" ry="2" />
<text  x="667.27" y="527.5" ></text>
</g>
<g >
<title>std::make_unique&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;, seastar::lw_shared_ptr&lt;schema const&gt;, reader_permit, dht::decorated_key, partition_snapshot_ptr&amp;, query::clustering_key_filter_ranges, bool&amp;, logalloc::region&amp;, logalloc::allocating_section&amp;, boost::any, memtable&amp;&gt; (77 samples, 1.43%)</title><rect x="521.1" y="373" width="16.8" height="15.0" fill="rgb(236,59,27)" rx="2" ry="2" />
<text  x="524.06" y="383.5" ></text>
</g>
<g >
<title>cql_transport::messages::result_message::rows::rows (3 samples, 0.06%)</title><rect x="673.5" y="501" width="0.6" height="15.0" fill="rgb(225,124,20)" rx="2" ry="2" />
<text  x="676.46" y="511.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.07%)</title><rect x="943.4" y="437" width="0.9" height="15.0" fill="rgb(234,119,27)" rx="2" ry="2" />
<text  x="946.45" y="447.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::__uniq_ptr_impl (1 samples, 0.02%)</title><rect x="56.4" y="293" width="0.2" height="15.0" fill="rgb(245,9,39)" rx="2" ry="2" />
<text  x="59.42" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="104.2" y="549" width="0.2" height="15.0" fill="rgb(248,150,40)" rx="2" ry="2" />
<text  x="107.15" y="559.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.06%)</title><rect x="1106.6" y="485" width="0.6" height="15.0" fill="rgb(244,86,17)" rx="2" ry="2" />
<text  x="1109.57" y="495.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_push_back_aux&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (4 samples, 0.07%)</title><rect x="24.0" y="325" width="0.9" height="15.0" fill="rgb(241,46,30)" rx="2" ry="2" />
<text  x="27.01" y="335.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.02%)</title><rect x="55.5" y="133" width="0.3" height="15.0" fill="rgb(227,105,6)" rx="2" ry="2" />
<text  x="58.54" y="143.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="911.5" y="421" width="0.2" height="15.0" fill="rgb(242,19,30)" rx="2" ry="2" />
<text  x="914.48" y="431.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.02%)</title><rect x="58.6" y="357" width="0.2" height="15.0" fill="rgb(251,217,8)" rx="2" ry="2" />
<text  x="61.61" y="367.5" ></text>
</g>
<g >
<title>locator::i_endpoint_snitch::get_local_snitch_ptr (1 samples, 0.02%)</title><rect x="1085.6" y="373" width="0.2" height="15.0" fill="rgb(235,46,30)" rx="2" ry="2" />
<text  x="1088.55" y="383.5" ></text>
</g>
<g >
<title>row::row (140 samples, 2.60%)</title><rect x="222.6" y="213" width="30.7" height="15.0" fill="rgb(243,97,12)" rx="2" ry="2" />
<text  x="225.61" y="223.5" >ro..</text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::emplace_back&lt;std::_List_iterator&lt;flat_mutation_reader&gt; const&amp;, mutation_fragment&gt; (4 samples, 0.07%)</title><rect x="197.2" y="309" width="0.9" height="15.0" fill="rgb(210,179,39)" rx="2" ry="2" />
<text  x="200.21" y="319.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::schedule&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::make_data_requests (4 samples, 0.07%)</title><rect x="994.0" y="357" width="0.9" height="15.0" fill="rgb(219,164,13)" rx="2" ry="2" />
<text  x="997.03" y="367.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (3 samples, 0.06%)</title><rect x="648.9" y="549" width="0.7" height="15.0" fill="rgb(213,213,27)" rx="2" ry="2" />
<text  x="651.94" y="559.5" ></text>
</g>
<g >
<title>seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::expand (9 samples, 0.17%)</title><rect x="528.9" y="293" width="2.0" height="15.0" fill="rgb(248,18,13)" rx="2" ry="2" />
<text  x="531.95" y="303.5" ></text>
</g>
<g >
<title>list_reader_selector::list_reader_selector (3 samples, 0.06%)</title><rect x="465.2" y="389" width="0.7" height="15.0" fill="rgb(222,22,50)" rx="2" ry="2" />
<text  x="468.23" y="399.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_pausable_in_thread&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;sstables::sstable_writer&gt; &gt;, flat_mutation_reader::no_filter&gt; (13 samples, 0.24%)</title><rect x="80.9" y="565" width="2.9" height="15.0" fill="rgb(225,14,39)" rx="2" ry="2" />
<text  x="83.94" y="575.5" ></text>
</g>
<g >
<title>std::function&lt;seastar::future&lt;void&gt;  (1 samples, 0.02%)</title><rect x="106.8" y="421" width="0.2" height="15.0" fill="rgb(251,8,51)" rx="2" ry="2" />
<text  x="109.78" y="431.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;, service::storage_proxy::query_result_local (17 samples, 0.32%)</title><rect x="658.6" y="565" width="3.7" height="15.0" fill="rgb(220,98,19)" rx="2" ry="2" />
<text  x="661.57" y="575.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::finally_body&lt;service::storage_proxy::do_query (9 samples, 0.17%)</title><rect x="693.6" y="549" width="2.0" height="15.0" fill="rgb(220,162,15)" rx="2" ry="2" />
<text  x="696.61" y="559.5" ></text>
</g>
<g >
<title>bytes_ostream::alloc_new (1 samples, 0.02%)</title><rect x="1131.5" y="149" width="0.3" height="15.0" fill="rgb(208,15,33)" rx="2" ry="2" />
<text  x="1134.54" y="159.5" ></text>
</g>
<g >
<title>remove_or_mark_as_unique_owner (1 samples, 0.02%)</title><rect x="1139.4" y="437" width="0.2" height="15.0" fill="rgb(253,162,17)" rx="2" ry="2" />
<text  x="1142.42" y="447.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (1 samples, 0.02%)</title><rect x="337.8" y="133" width="0.2" height="15.0" fill="rgb(216,63,46)" rx="2" ry="2" />
<text  x="340.79" y="143.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_construct&lt;interval_bound&lt;dht::ring_position&gt; const&amp;&gt; (3 samples, 0.06%)</title><rect x="948.3" y="421" width="0.6" height="15.0" fill="rgb(226,225,11)" rx="2" ry="2" />
<text  x="951.26" y="431.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="199.8" y="325" width="0.3" height="15.0" fill="rgb(248,61,53)" rx="2" ry="2" />
<text  x="202.84" y="335.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::clear (1 samples, 0.02%)</title><rect x="176.4" y="437" width="0.2" height="15.0" fill="rgb(214,207,24)" rx="2" ry="2" />
<text  x="179.41" y="447.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt; (1 samples, 0.02%)</title><rect x="54.0" y="229" width="0.2" height="15.0" fill="rgb(250,200,5)" rx="2" ry="2" />
<text  x="57.01" y="239.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.02%)</title><rect x="55.8" y="117" width="0.2" height="15.0" fill="rgb(239,211,6)" rx="2" ry="2" />
<text  x="58.76" y="127.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment&lt;schema const&amp;, rows_entry const&amp;&gt; (1 samples, 0.02%)</title><rect x="81.4" y="357" width="0.2" height="15.0" fill="rgb(205,44,23)" rx="2" ry="2" />
<text  x="84.38" y="367.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::take_value (2 samples, 0.04%)</title><rect x="314.1" y="405" width="0.5" height="15.0" fill="rgb(228,10,12)" rx="2" ry="2" />
<text  x="317.14" y="415.5" ></text>
</g>
<g >
<title>mutation_partition::mutation_partition (1 samples, 0.02%)</title><rect x="1124.3" y="261" width="0.2" height="15.0" fill="rgb(243,196,45)" rx="2" ry="2" />
<text  x="1127.31" y="271.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (2 samples, 0.04%)</title><rect x="1092.8" y="469" width="0.4" height="15.0" fill="rgb(211,22,40)" rx="2" ry="2" />
<text  x="1095.78" y="479.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;column_definition const*, std::pair&lt;column_definition const* const, cql3::expr::expression&gt;, std::allocator&lt;std::pair&lt;column_definition const* const, cql3::expr::expression&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;column_definition const*&gt;, std::hash&lt;column_definition const*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_insert_unique_node (1 samples, 0.02%)</title><rect x="73.9" y="405" width="0.3" height="15.0" fill="rgb(243,47,51)" rx="2" ry="2" />
<text  x="76.94" y="415.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="556.1" y="309" width="0.2" height="15.0" fill="rgb(250,136,17)" rx="2" ry="2" />
<text  x="559.10" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;unsigned int&gt;::_Rb_tree_const_iterator (1 samples, 0.02%)</title><rect x="39.6" y="341" width="0.2" height="15.0" fill="rgb(240,51,28)" rx="2" ry="2" />
<text  x="42.56" y="351.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (14 samples, 0.26%)</title><rect x="98.2" y="533" width="3.1" height="15.0" fill="rgb(219,222,43)" rx="2" ry="2" />
<text  x="101.24" y="543.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;, service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (22 samples, 0.41%)</title><rect x="1129.1" y="357" width="4.8" height="15.0" fill="rgb(230,221,51)" rx="2" ry="2" />
<text  x="1132.13" y="367.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (1 samples, 0.02%)</title><rect x="715.9" y="517" width="0.3" height="15.0" fill="rgb(225,196,33)" rx="2" ry="2" />
<text  x="718.94" y="527.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::has_available_units (1 samples, 0.02%)</title><rect x="585.9" y="325" width="0.2" height="15.0" fill="rgb(243,194,24)" rx="2" ry="2" />
<text  x="588.88" y="335.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="331.4" y="357" width="0.3" height="15.0" fill="rgb(253,141,51)" rx="2" ry="2" />
<text  x="334.44" y="367.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;void&gt;  (1 samples, 0.02%)</title><rect x="11.8" y="661" width="0.2" height="15.0" fill="rgb(254,164,46)" rx="2" ry="2" />
<text  x="14.75" y="671.5" ></text>
</g>
<g >
<title>mutation_reader_merger::maybe_add_readers (1 samples, 0.02%)</title><rect x="465.9" y="373" width="0.2" height="15.0" fill="rgb(220,150,17)" rx="2" ry="2" />
<text  x="468.88" y="383.5" ></text>
</g>
<g >
<title>cql3::relation::to_column_definition (1 samples, 0.02%)</title><rect x="72.2" y="421" width="0.2" height="15.0" fill="rgb(208,170,3)" rx="2" ry="2" />
<text  x="75.19" y="431.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::digest_read_resolver&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="982.2" y="421" width="0.2" height="15.0" fill="rgb(250,50,31)" rx="2" ry="2" />
<text  x="985.20" y="431.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (1 samples, 0.02%)</title><rect x="833.7" y="469" width="0.3" height="15.0" fill="rgb(239,84,29)" rx="2" ry="2" />
<text  x="836.74" y="479.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;mutation_reader_merger::operator (3 samples, 0.06%)</title><rect x="307.6" y="389" width="0.6" height="15.0" fill="rgb(244,133,16)" rx="2" ry="2" />
<text  x="310.57" y="399.5" ></text>
</g>
<g >
<title>utils::array_search_gt (1 samples, 0.02%)</title><rect x="499.8" y="325" width="0.2" height="15.0" fill="rgb(249,215,30)" rx="2" ry="2" />
<text  x="502.82" y="335.5" ></text>
</g>
<g >
<title>__start_context (2 samples, 0.04%)</title><rect x="83.8" y="645" width="0.4" height="15.0" fill="rgb(225,55,48)" rx="2" ry="2" />
<text  x="86.79" y="655.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.07%)</title><rect x="598.1" y="421" width="0.9" height="15.0" fill="rgb(219,36,41)" rx="2" ry="2" />
<text  x="601.14" y="431.5" ></text>
</g>
<g >
<title>seastar::internal::uninitialized_wrapper_base&lt;service::storage_proxy_coordinator_query_result, false&gt;::uninitialized_set&lt;service::storage_proxy_coordinator_query_result&gt; (8 samples, 0.15%)</title><rect x="696.5" y="533" width="1.7" height="15.0" fill="rgb(206,38,35)" rx="2" ry="2" />
<text  x="699.45" y="543.5" ></text>
</g>
<g >
<title>dht::minimum_token (1 samples, 0.02%)</title><rect x="465.0" y="389" width="0.2" height="15.0" fill="rgb(216,111,42)" rx="2" ry="2" />
<text  x="468.01" y="399.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="660.1" y="549" width="0.2" height="15.0" fill="rgb(211,150,3)" rx="2" ry="2" />
<text  x="663.11" y="559.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;clustering_key_prefix&gt;::_M_reset (1 samples, 0.02%)</title><rect x="634.7" y="501" width="0.2" height="15.0" fill="rgb(239,15,1)" rx="2" ry="2" />
<text  x="637.71" y="511.5" ></text>
</g>
<g >
<title>db::get_cdc_generation_mutations (1 samples, 0.02%)</title><rect x="17.9" y="485" width="0.2" height="15.0" fill="rgb(237,5,1)" rx="2" ry="2" />
<text  x="20.88" y="495.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::execute (642 samples, 11.91%)</title><rect x="953.1" y="485" width="140.6" height="15.0" fill="rgb(212,131,20)" rx="2" ry="2" />
<text  x="956.08" y="495.5" >cql3::statements:..</text>
</g>
<g >
<title>basic_atomic_cell_view&lt; (17 samples, 0.32%)</title><rect x="381.4" y="229" width="3.7" height="15.0" fill="rgb(224,33,5)" rx="2" ry="2" />
<text  x="384.36" y="239.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="515.6" y="277" width="0.2" height="15.0" fill="rgb(234,226,7)" rx="2" ry="2" />
<text  x="518.59" y="287.5" ></text>
</g>
<g >
<title>logalloc::segment::record_alloc (1 samples, 0.02%)</title><rect x="1118.8" y="213" width="0.3" height="15.0" fill="rgb(224,214,41)" rx="2" ry="2" />
<text  x="1121.84" y="223.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (3 samples, 0.06%)</title><rect x="755.1" y="421" width="0.7" height="15.0" fill="rgb(240,223,19)" rx="2" ry="2" />
<text  x="758.14" y="431.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getText[abi:cxx11] (1 samples, 0.02%)</title><rect x="43.9" y="405" width="0.3" height="15.0" fill="rgb(225,139,48)" rx="2" ry="2" />
<text  x="46.94" y="415.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::with_ready_permit (2 samples, 0.04%)</title><rect x="1030.2" y="277" width="0.4" height="15.0" fill="rgb(215,39,40)" rx="2" ry="2" />
<text  x="1033.16" y="287.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::query_processor::process_authorized_statement (13 samples, 0.24%)</title><rect x="662.3" y="565" width="2.8" height="15.0" fill="rgb(228,112,13)" rx="2" ry="2" />
<text  x="665.30" y="575.5" ></text>
</g>
<g >
<title>seastar::internal::uninitialized_wrapper_base&lt;service::storage_proxy_coordinator_query_result, false&gt;::uninitialized_set&lt;service::storage_proxy_coordinator_query_result&gt; (1 samples, 0.02%)</title><rect x="700.2" y="533" width="0.2" height="15.0" fill="rgb(224,19,36)" rx="2" ry="2" />
<text  x="703.18" y="543.5" ></text>
</g>
<g >
<title>memtable_entry::memtable_entry (1 samples, 0.02%)</title><rect x="1118.6" y="213" width="0.2" height="15.0" fill="rgb(216,19,18)" rx="2" ry="2" />
<text  x="1121.62" y="223.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::move_it (5 samples, 0.09%)</title><rect x="685.1" y="533" width="1.1" height="15.0" fill="rgb(225,186,1)" rx="2" ry="2" />
<text  x="688.07" y="543.5" ></text>
</g>
<g >
<title>allocation_strategy::alloc&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::leaf_node&gt; (4 samples, 0.07%)</title><rect x="243.9" y="165" width="0.8" height="15.0" fill="rgb(242,107,51)" rx="2" ry="2" />
<text  x="246.85" y="175.5" ></text>
</g>
<g >
<title>seastar::memory::allocate_aligned (1 samples, 0.02%)</title><rect x="245.4" y="149" width="0.2" height="15.0" fill="rgb(216,199,0)" rx="2" ry="2" />
<text  x="248.39" y="159.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.07%)</title><rect x="662.3" y="549" width="0.9" height="15.0" fill="rgb(239,59,31)" rx="2" ry="2" />
<text  x="665.30" y="559.5" ></text>
</g>
<g >
<title>db::is_datacenter_local (2 samples, 0.04%)</title><rect x="973.0" y="421" width="0.4" height="15.0" fill="rgb(235,223,17)" rx="2" ry="2" />
<text  x="976.01" y="431.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;managed_bytes&gt;::make&lt;managed_bytes&gt; (4 samples, 0.07%)</title><rect x="903.4" y="373" width="0.9" height="15.0" fill="rgb(227,103,25)" rx="2" ry="2" />
<text  x="906.38" y="383.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::do_flush (1 samples, 0.02%)</title><rect x="651.3" y="565" width="0.3" height="15.0" fill="rgb(242,100,10)" rx="2" ry="2" />
<text  x="654.35" y="575.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (1 samples, 0.02%)</title><rect x="1105.0" y="453" width="0.3" height="15.0" fill="rgb(237,31,25)" rx="2" ry="2" />
<text  x="1108.04" y="463.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_next_bkt (1 samples, 0.02%)</title><rect x="108.8" y="341" width="0.2" height="15.0" fill="rgb(237,138,16)" rx="2" ry="2" />
<text  x="111.75" y="351.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;cql3::column_identifier, false&gt;::make&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; const&amp;, seastar::shared_ptr&lt;abstract_type const&gt;&amp;&gt; (1 samples, 0.02%)</title><rect x="107.2" y="405" width="0.2" height="15.0" fill="rgb(236,54,36)" rx="2" ry="2" />
<text  x="110.22" y="415.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::set_urgent_state (2 samples, 0.04%)</title><rect x="663.4" y="549" width="0.4" height="15.0" fill="rgb(207,22,27)" rx="2" ry="2" />
<text  x="666.39" y="559.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (3 samples, 0.06%)</title><rect x="1133.9" y="293" width="0.7" height="15.0" fill="rgb(235,4,14)" rx="2" ry="2" />
<text  x="1136.95" y="303.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (2 samples, 0.04%)</title><rect x="47.9" y="341" width="0.4" height="15.0" fill="rgb(207,139,51)" rx="2" ry="2" />
<text  x="50.88" y="351.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_insert_unique_node (14 samples, 0.26%)</title><rect x="1150.1" y="517" width="3.1" height="15.0" fill="rgb(249,198,8)" rx="2" ry="2" />
<text  x="1153.15" y="527.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="1139.4" y="549" width="0.2" height="15.0" fill="rgb(235,10,20)" rx="2" ry="2" />
<text  x="1142.42" y="559.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;cql3::constants::value, true&gt;::make&lt;cql3::raw_value, seastar::shared_ptr&lt;abstract_type const&gt; const&amp;&gt; (1 samples, 0.02%)</title><rect x="71.3" y="437" width="0.2" height="15.0" fill="rgb(209,21,53)" rx="2" ry="2" />
<text  x="74.31" y="447.5" ></text>
</g>
<g >
<title>visit&lt;(anonymous namespace)::validate_visitor&lt;managed_bytes_basic_view&lt; (2 samples, 0.04%)</title><rect x="892.0" y="325" width="0.4" height="15.0" fill="rgb(243,36,5)" rx="2" ry="2" />
<text  x="894.99" y="335.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (1 samples, 0.02%)</title><rect x="19.9" y="453" width="0.2" height="15.0" fill="rgb(207,53,13)" rx="2" ry="2" />
<text  x="22.85" y="463.5" ></text>
</g>
<g >
<title>antlr3::IntStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::rewind (2 samples, 0.04%)</title><rect x="37.8" y="293" width="0.4" height="15.0" fill="rgb(205,225,25)" rx="2" ry="2" />
<text  x="40.81" y="303.5" ></text>
</g>
<g >
<title>table::set_hit_rate (9 samples, 0.17%)</title><rect x="723.8" y="517" width="2.0" height="15.0" fill="rgb(226,227,11)" rx="2" ry="2" />
<text  x="726.82" y="527.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_locally (2 samples, 0.04%)</title><rect x="1128.3" y="261" width="0.4" height="15.0" fill="rgb(218,70,50)" rx="2" ry="2" />
<text  x="1131.25" y="271.5" ></text>
</g>
<g >
<title>utils::tuple_hash::operator (5 samples, 0.09%)</title><rect x="760.6" y="373" width="1.1" height="15.0" fill="rgb(219,134,35)" rx="2" ry="2" />
<text  x="763.61" y="383.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::raw::update_statement, std::default_delete&lt;cql3::statements::raw::update_statement&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::statements::raw::update_statement&gt;, void&gt; (1 samples, 0.02%)</title><rect x="63.2" y="405" width="0.2" height="15.0" fill="rgb(243,211,36)" rx="2" ry="2" />
<text  x="66.21" y="415.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (1 samples, 0.02%)</title><rect x="911.3" y="357" width="0.2" height="15.0" fill="rgb(226,46,37)" rx="2" ry="2" />
<text  x="914.26" y="367.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;::_Tuple_impl&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const&amp;, auth::resource, void&gt; (6 samples, 0.11%)</title><rect x="777.0" y="421" width="1.3" height="15.0" fill="rgb(213,68,14)" rx="2" ry="2" />
<text  x="780.03" y="431.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (1 samples, 0.02%)</title><rect x="865.3" y="389" width="0.2" height="15.0" fill="rgb(253,138,19)" rx="2" ry="2" />
<text  x="868.28" y="399.5" ></text>
</g>
<g >
<title>ser::integral_serializer&lt;unsigned int&gt;::read&lt;seastar::simple_memory_input_stream&gt; (2 samples, 0.04%)</title><rect x="1122.6" y="245" width="0.4" height="15.0" fill="rgb(249,72,35)" rx="2" ry="2" />
<text  x="1125.56" y="255.5" ></text>
</g>
<g >
<title>db::system_keyspace_make (6 samples, 0.11%)</title><rect x="108.3" y="565" width="1.3" height="15.0" fill="rgb(254,47,46)" rx="2" ry="2" />
<text  x="111.32" y="575.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (2 samples, 0.04%)</title><rect x="1016.4" y="277" width="0.4" height="15.0" fill="rgb(230,53,26)" rx="2" ry="2" />
<text  x="1019.36" y="287.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.02%)</title><rect x="24.0" y="293" width="0.2" height="15.0" fill="rgb(250,5,31)" rx="2" ry="2" />
<text  x="27.01" y="303.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEE4$_44ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_45ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_43ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_46ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_47ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_48ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_49ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_50ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_51ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_52ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_53ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_54ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_55ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_56ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_57ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_58EERS4_IJNSF_11conjunctionENSF_15binary_operatorENSF_12column_valueENSF_5tokenENSF_21unresolved_identifierENSF_25column_mutation_attributeENSF_13function_callENSF_4castENSF_15field_selectionENSF_4nullENSF_13bind_variableENSF_16untyped_constantENSF_8constantENSF_17tuple_constructorENSF_22collection_constructorENSF_20usertype_constructorEEEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES16_S1O_ (133 samples, 2.47%)</title><rect x="884.5" y="453" width="29.2" height="15.0" fill="rgb(230,144,18)" rx="2" ry="2" />
<text  x="887.54" y="463.5" >_Z..</text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;7ul, cql3::expr::untyped_constant&gt; (2 samples, 0.04%)</title><rect x="53.4" y="117" width="0.4" height="15.0" fill="rgb(231,168,41)" rx="2" ry="2" />
<text  x="56.35" y="127.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;query::querier&lt; (1 samples, 0.02%)</title><rect x="143.1" y="517" width="0.2" height="15.0" fill="rgb(230,122,38)" rx="2" ry="2" />
<text  x="146.13" y="527.5" ></text>
</g>
<g >
<title>compound_type&lt; (23 samples, 0.43%)</title><rect x="510.6" y="277" width="5.0" height="15.0" fill="rgb(219,126,48)" rx="2" ry="2" />
<text  x="513.55" y="287.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (2 samples, 0.04%)</title><rect x="48.3" y="309" width="0.5" height="15.0" fill="rgb(220,0,0)" rx="2" ry="2" />
<text  x="51.32" y="319.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_range_tombstone (1 samples, 0.02%)</title><rect x="276.3" y="261" width="0.2" height="15.0" fill="rgb(219,150,1)" rx="2" ry="2" />
<text  x="279.26" y="271.5" ></text>
</g>
<g >
<title>mutation_source::mutation_source (6 samples, 0.11%)</title><rect x="644.1" y="485" width="1.3" height="15.0" fill="rgb(217,121,28)" rx="2" ry="2" />
<text  x="647.12" y="495.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::key_is_in_relation (3 samples, 0.06%)</title><rect x="670.4" y="517" width="0.7" height="15.0" fill="rgb(233,224,23)" rx="2" ry="2" />
<text  x="673.40" y="527.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="485.6" y="357" width="0.2" height="15.0" fill="rgb(246,177,51)" rx="2" ry="2" />
<text  x="488.59" y="367.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::leaf_node::free (4 samples, 0.07%)</title><rect x="434.6" y="277" width="0.8" height="15.0" fill="rgb(250,134,26)" rx="2" ry="2" />
<text  x="437.57" y="287.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_ba202cd8bdcfd8c6f1dbb280f642f5ad31cbca7c] (1 samples, 0.02%)</title><rect x="507.7" y="277" width="0.2" height="15.0" fill="rgb(213,94,26)" rx="2" ry="2" />
<text  x="510.71" y="287.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="56.0" y="229" width="0.2" height="15.0" fill="rgb(220,200,0)" rx="2" ry="2" />
<text  x="58.98" y="239.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (5 samples, 0.09%)</title><rect x="1159.3" y="549" width="1.1" height="15.0" fill="rgb(221,145,29)" rx="2" ry="2" />
<text  x="1162.34" y="559.5" ></text>
</g>
<g >
<title>absl::container_internal::operator== (1 samples, 0.02%)</title><rect x="828.9" y="405" width="0.2" height="15.0" fill="rgb(225,156,28)" rx="2" ry="2" />
<text  x="831.93" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.06%)</title><rect x="290.5" y="229" width="0.7" height="15.0" fill="rgb(223,83,52)" rx="2" ry="2" />
<text  x="293.49" y="239.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::signal (1 samples, 0.02%)</title><rect x="125.8" y="469" width="0.3" height="15.0" fill="rgb(251,53,15)" rx="2" ry="2" />
<text  x="128.83" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (6 samples, 0.11%)</title><rect x="676.3" y="549" width="1.3" height="15.0" fill="rgb(222,92,16)" rx="2" ry="2" />
<text  x="679.31" y="559.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;, service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (21 samples, 0.39%)</title><rect x="1129.3" y="325" width="4.6" height="15.0" fill="rgb(243,73,11)" rx="2" ry="2" />
<text  x="1132.35" y="335.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;bool&gt;::take_value (1 samples, 0.02%)</title><rect x="783.4" y="421" width="0.2" height="15.0" fill="rgb(221,191,26)" rx="2" ry="2" />
<text  x="786.38" y="431.5" ></text>
</g>
<g >
<title>auth::resource::resource (10 samples, 0.19%)</title><rect x="778.6" y="453" width="2.2" height="15.0" fill="rgb(227,179,22)" rx="2" ry="2" />
<text  x="781.57" y="463.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (1 samples, 0.02%)</title><rect x="1090.8" y="437" width="0.2" height="15.0" fill="rgb(216,111,30)" rx="2" ry="2" />
<text  x="1093.81" y="447.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::deallocate (2 samples, 0.04%)</title><rect x="594.6" y="421" width="0.5" height="15.0" fill="rgb(212,217,37)" rx="2" ry="2" />
<text  x="597.64" y="431.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (1 samples, 0.02%)</title><rect x="294.2" y="261" width="0.2" height="15.0" fill="rgb(213,117,5)" rx="2" ry="2" />
<text  x="297.22" y="271.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::drop_table_statement, std::default_delete&lt;cql3::statements::drop_table_statement&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="65.4" y="437" width="0.2" height="15.0" fill="rgb(247,188,24)" rx="2" ry="2" />
<text  x="68.40" y="447.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (1 samples, 0.02%)</title><rect x="81.4" y="277" width="0.2" height="15.0" fill="rgb(235,101,48)" rx="2" ry="2" />
<text  x="84.38" y="287.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (1 samples, 0.02%)</title><rect x="45.0" y="373" width="0.3" height="15.0" fill="rgb(231,176,1)" rx="2" ry="2" />
<text  x="48.03" y="383.5" ></text>
</g>
<g >
<title>ser::deletable_row_view::key (1 samples, 0.02%)</title><rect x="1123.0" y="293" width="0.2" height="15.0" fill="rgb(250,9,38)" rx="2" ry="2" />
<text  x="1126.00" y="303.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (2 samples, 0.04%)</title><rect x="195.7" y="277" width="0.4" height="15.0" fill="rgb(249,109,5)" rx="2" ry="2" />
<text  x="198.68" y="287.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (279 samples, 5.18%)</title><rect x="18.1" y="629" width="61.1" height="15.0" fill="rgb(241,148,3)" rx="2" ry="2" />
<text  x="21.10" y="639.5" >std::_..</text>
</g>
<g >
<title>utils::loading_cache&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, enum_set&lt;super_enum&lt;auth::permission,  (3 samples, 0.06%)</title><rect x="793.5" y="245" width="0.6" height="15.0" fill="rgb(247,209,23)" rx="2" ry="2" />
<text  x="796.46" y="255.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::lower_bound&lt;mutation_partition, schema const&amp;, nonwrapping_interval&lt;clustering_key_prefix&gt; const&amp;&gt; (6 samples, 0.11%)</title><rect x="283.9" y="277" width="1.3" height="15.0" fill="rgb(213,216,51)" rx="2" ry="2" />
<text  x="286.92" y="287.5" ></text>
</g>
<g >
<title>abstract_type::from_string (3 samples, 0.06%)</title><rect x="70.2" y="437" width="0.7" height="15.0" fill="rgb(250,40,4)" rx="2" ry="2" />
<text  x="73.22" y="447.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::EqualElement&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (4 samples, 0.07%)</title><rect x="825.6" y="357" width="0.9" height="15.0" fill="rgb(214,71,10)" rx="2" ry="2" />
<text  x="828.64" y="367.5" ></text>
</g>
<g >
<title>utils::tuple_hash::hash_impl&lt;2ul, auth::resource_kind, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (5 samples, 0.09%)</title><rect x="805.7" y="181" width="1.1" height="15.0" fill="rgb(254,169,36)" rx="2" ry="2" />
<text  x="808.72" y="191.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (1 samples, 0.02%)</title><rect x="778.3" y="421" width="0.3" height="15.0" fill="rgb(235,29,33)" rx="2" ry="2" />
<text  x="781.35" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (2 samples, 0.04%)</title><rect x="735.4" y="453" width="0.5" height="15.0" fill="rgb(222,208,6)" rx="2" ry="2" />
<text  x="738.43" y="463.5" ></text>
</g>
<g >
<title>seastar::future&lt;std::tuple&lt;std::optional&lt;clustering_key_prefix&gt; &gt; &gt;::then_impl&lt;query::querier&lt; (4 samples, 0.07%)</title><rect x="564.6" y="485" width="0.9" height="15.0" fill="rgb(211,123,23)" rx="2" ry="2" />
<text  x="567.64" y="495.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.02%)</title><rect x="51.6" y="325" width="0.2" height="15.0" fill="rgb(217,95,50)" rx="2" ry="2" />
<text  x="54.60" y="335.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;query::result_digest, 3ul&gt;::emplace_back&lt;query::result_digest const&gt; (2 samples, 0.04%)</title><rect x="723.4" y="501" width="0.4" height="15.0" fill="rgb(213,139,2)" rx="2" ry="2" />
<text  x="726.39" y="511.5" ></text>
</g>
<g >
<title>dht::i_partitioner::decorate_key (1 samples, 0.02%)</title><rect x="109.2" y="373" width="0.2" height="15.0" fill="rgb(235,123,37)" rx="2" ry="2" />
<text  x="112.19" y="383.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, flat_mutation_reader, reader_concurrency_semaphore::inactive_read_handle&gt;::_Move_ctor_base (1 samples, 0.02%)</title><rect x="642.4" y="453" width="0.2" height="15.0" fill="rgb(212,14,24)" rx="2" ry="2" />
<text  x="645.37" y="463.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::clear (1 samples, 0.02%)</title><rect x="807.0" y="277" width="0.2" height="15.0" fill="rgb(223,93,41)" rx="2" ry="2" />
<text  x="810.03" y="287.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (3 samples, 0.06%)</title><rect x="736.1" y="501" width="0.6" height="15.0" fill="rgb(218,9,11)" rx="2" ry="2" />
<text  x="739.09" y="511.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::get_local_service (1 samples, 0.02%)</title><rect x="1039.8" y="341" width="0.2" height="15.0" fill="rgb(208,144,46)" rx="2" ry="2" />
<text  x="1042.79" y="351.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::query_state&gt;::~shared_ptr (2 samples, 0.04%)</title><rect x="688.8" y="549" width="0.4" height="15.0" fill="rgb(249,163,22)" rx="2" ry="2" />
<text  x="691.79" y="559.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (3 samples, 0.06%)</title><rect x="792.1" y="293" width="0.7" height="15.0" fill="rgb(233,39,49)" rx="2" ry="2" />
<text  x="795.14" y="303.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (2 samples, 0.04%)</title><rect x="991.6" y="341" width="0.5" height="15.0" fill="rgb(210,130,29)" rx="2" ry="2" />
<text  x="994.62" y="351.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (210 samples, 3.90%)</title><rect x="21.8" y="453" width="46.0" height="15.0" fill="rgb(208,186,39)" rx="2" ry="2" />
<text  x="24.82" y="463.5" >cql3..</text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.02%)</title><rect x="48.1" y="325" width="0.2" height="15.0" fill="rgb(239,205,27)" rx="2" ry="2" />
<text  x="51.10" y="335.5" ></text>
</g>
<g >
<title>schema::column_at (1 samples, 0.02%)</title><rect x="421.7" y="245" width="0.2" height="15.0" fill="rgb(211,100,30)" rx="2" ry="2" />
<text  x="424.65" y="255.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::move_it (1 samples, 0.02%)</title><rect x="773.7" y="469" width="0.3" height="15.0" fill="rgb(212,81,3)" rx="2" ry="2" />
<text  x="776.75" y="479.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (1 samples, 0.02%)</title><rect x="794.6" y="277" width="0.2" height="15.0" fill="rgb(235,87,19)" rx="2" ry="2" />
<text  x="797.55" y="287.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::operator (3 samples, 0.06%)</title><rect x="760.0" y="357" width="0.6" height="15.0" fill="rgb(208,188,11)" rx="2" ry="2" />
<text  x="762.95" y="367.5" ></text>
</g>
<g >
<title>seastar::reactor_backend_aio::kernel_submit_work (1 samples, 0.02%)</title><rect x="1169.0" y="565" width="0.2" height="15.0" fill="rgb(245,125,15)" rx="2" ry="2" />
<text  x="1171.98" y="575.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (2 samples, 0.04%)</title><rect x="614.3" y="437" width="0.5" height="15.0" fill="rgb(223,46,20)" rx="2" ry="2" />
<text  x="617.34" y="447.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (1 samples, 0.02%)</title><rect x="520.6" y="373" width="0.2" height="15.0" fill="rgb(227,13,51)" rx="2" ry="2" />
<text  x="523.63" y="383.5" ></text>
</g>
<g >
<title>mutation::data::data (1 samples, 0.02%)</title><rect x="109.2" y="389" width="0.2" height="15.0" fill="rgb(242,87,32)" rx="2" ry="2" />
<text  x="112.19" y="399.5" ></text>
</g>
<g >
<title>sstables::mc::writer::write_clustered (8 samples, 0.15%)</title><rect x="81.8" y="485" width="1.8" height="15.0" fill="rgb(250,24,27)" rx="2" ry="2" />
<text  x="84.82" y="495.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="80.7" y="645" width="0.2" height="15.0" fill="rgb(225,17,50)" rx="2" ry="2" />
<text  x="83.73" y="655.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (1 samples, 0.02%)</title><rect x="81.4" y="261" width="0.2" height="15.0" fill="rgb(240,32,46)" rx="2" ry="2" />
<text  x="84.38" y="271.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::apply_updates (10 samples, 0.19%)</title><rect x="863.3" y="437" width="2.2" height="15.0" fill="rgb(241,159,17)" rx="2" ry="2" />
<text  x="866.30" y="447.5" ></text>
</g>
<g >
<title>std::default_delete&lt;nonwrapping_interval&lt;dht::ring_position&gt; const&gt;::operator (2 samples, 0.04%)</title><rect x="611.3" y="469" width="0.4" height="15.0" fill="rgb(226,128,47)" rx="2" ry="2" />
<text  x="614.28" y="479.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (1 samples, 0.02%)</title><rect x="900.5" y="389" width="0.2" height="15.0" fill="rgb(252,26,14)" rx="2" ry="2" />
<text  x="903.53" y="399.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_Optional_payload_base (1 samples, 0.02%)</title><rect x="756.9" y="421" width="0.2" height="15.0" fill="rgb(225,62,42)" rx="2" ry="2" />
<text  x="759.89" y="431.5" ></text>
</g>
<g >
<title>ser::serializer&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;::write_fragmented&lt;bytes_ostream, fragment_range&lt;managed_bytes_basic_view&lt; (2 samples, 0.04%)</title><rect x="1131.5" y="165" width="0.5" height="15.0" fill="rgb(239,222,48)" rx="2" ry="2" />
<text  x="1134.54" y="175.5" ></text>
</g>
<g >
<title>db::get_cdc_streams_descriptions_v2_mutation (1 samples, 0.02%)</title><rect x="106.6" y="565" width="0.2" height="15.0" fill="rgb(228,104,41)" rx="2" ry="2" />
<text  x="109.56" y="575.5" ></text>
</g>
<g >
<title>seastar::future&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry_ptr&gt;::then_impl&lt;utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (10 samples, 0.19%)</title><rect x="752.7" y="437" width="2.2" height="15.0" fill="rgb(251,206,20)" rx="2" ry="2" />
<text  x="755.73" y="447.5" ></text>
</g>
<g >
<title>atomic_cell::make_live (3 samples, 0.06%)</title><rect x="1120.4" y="293" width="0.6" height="15.0" fill="rgb(224,181,42)" rx="2" ry="2" />
<text  x="1123.37" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, unsigned int, std::_Identity&lt;unsigned int&gt;, std::less&lt;unsigned int&gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;unsigned int&gt; &gt;::end (1 samples, 0.02%)</title><rect x="39.6" y="357" width="0.2" height="15.0" fill="rgb(214,4,19)" rx="2" ry="2" />
<text  x="42.56" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.04%)</title><rect x="563.5" y="469" width="0.5" height="15.0" fill="rgb(243,166,39)" rx="2" ry="2" />
<text  x="566.54" y="479.5" ></text>
</g>
<g >
<title>fmt::v7::detail::formatbuf&lt;char&gt;::xsputn (1 samples, 0.02%)</title><rect x="11.5" y="661" width="0.3" height="15.0" fill="rgb(224,211,38)" rx="2" ry="2" />
<text  x="14.53" y="671.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::clear (1 samples, 0.02%)</title><rect x="807.7" y="261" width="0.2" height="15.0" fill="rgb(247,149,7)" rx="2" ry="2" />
<text  x="810.69" y="271.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment (13 samples, 0.24%)</title><rect x="531.6" y="277" width="2.8" height="15.0" fill="rgb(228,217,2)" rx="2" ry="2" />
<text  x="534.57" y="287.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="51.2" y="325" width="0.2" height="15.0" fill="rgb(249,198,33)" rx="2" ry="2" />
<text  x="54.17" y="335.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, seastar::sharded&lt;database&gt;::stop (1 samples, 0.02%)</title><rect x="703.5" y="565" width="0.2" height="15.0" fill="rgb(252,78,41)" rx="2" ry="2" />
<text  x="706.46" y="575.5" ></text>
</g>
<g >
<title>std::operator==&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; (1 samples, 0.02%)</title><rect x="802.2" y="213" width="0.2" height="15.0" fill="rgb(211,79,24)" rx="2" ry="2" />
<text  x="805.21" y="223.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (1 samples, 0.02%)</title><rect x="937.1" y="421" width="0.2" height="15.0" fill="rgb(236,95,2)" rx="2" ry="2" />
<text  x="940.10" y="431.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::drop_view_statement, std::default_delete&lt;cql3::statements::drop_view_statement&gt; &gt;::__uniq_ptr_impl (1 samples, 0.02%)</title><rect x="65.6" y="405" width="0.2" height="15.0" fill="rgb(214,28,49)" rx="2" ry="2" />
<text  x="68.62" y="415.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_token (2 samples, 0.04%)</title><rect x="951.5" y="421" width="0.5" height="15.0" fill="rgb(247,206,25)" rx="2" ry="2" />
<text  x="954.55" y="431.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::emplace_back&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; const&amp;&gt; (2 samples, 0.04%)</title><rect x="779.9" y="421" width="0.4" height="15.0" fill="rgb(205,213,43)" rx="2" ry="2" />
<text  x="782.88" y="431.5" ></text>
</g>
<g >
<title>validation::validate_column_family (3 samples, 0.06%)</title><rect x="831.1" y="469" width="0.7" height="15.0" fill="rgb(205,199,7)" rx="2" ry="2" />
<text  x="834.12" y="479.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (2 samples, 0.04%)</title><rect x="899.0" y="341" width="0.4" height="15.0" fill="rgb(213,67,7)" rx="2" ry="2" />
<text  x="902.00" y="351.5" ></text>
</g>
<g >
<title>absl::hash_internal::HashState::combine_contiguous (1 samples, 0.02%)</title><rect x="78.1" y="485" width="0.2" height="15.0" fill="rgb(229,75,2)" rx="2" ry="2" />
<text  x="81.10" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (2 samples, 0.04%)</title><rect x="54.7" y="309" width="0.4" height="15.0" fill="rgb(219,210,11)" rx="2" ry="2" />
<text  x="57.67" y="319.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::get_per_partition_limit (1 samples, 0.02%)</title><rect x="1102.9" y="469" width="0.2" height="15.0" fill="rgb(228,177,22)" rx="2" ry="2" />
<text  x="1105.85" y="479.5" ></text>
</g>
<g >
<title>std::_Optional_base_impl&lt;query::querier&lt; (2 samples, 0.04%)</title><rect x="634.3" y="501" width="0.4" height="15.0" fill="rgb(226,5,54)" rx="2" ry="2" />
<text  x="637.27" y="511.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::allocate_large (1 samples, 0.02%)</title><rect x="976.1" y="373" width="0.2" height="15.0" fill="rgb(218,1,30)" rx="2" ry="2" />
<text  x="979.07" y="383.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::clear (2 samples, 0.04%)</title><rect x="787.5" y="357" width="0.5" height="15.0" fill="rgb(242,106,16)" rx="2" ry="2" />
<text  x="790.54" y="367.5" ></text>
</g>
<g >
<title>dht::tri_compare (12 samples, 0.22%)</title><rect x="1077.9" y="293" width="2.6" height="15.0" fill="rgb(242,116,7)" rx="2" ry="2" />
<text  x="1080.89" y="303.5" ></text>
</g>
<g >
<title>bplus::tree&lt;long, intrusive_array&lt;memtable_entry&gt;, dht::raw_token_less_comparator, 16ul,  (42 samples, 0.78%)</title><rect x="493.9" y="373" width="9.2" height="15.0" fill="rgb(223,43,30)" rx="2" ry="2" />
<text  x="496.91" y="383.5" ></text>
</g>
<g >
<title>schema::rebuild (1 samples, 0.02%)</title><rect x="107.2" y="437" width="0.2" height="15.0" fill="rgb(228,141,51)" rx="2" ry="2" />
<text  x="110.22" y="447.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.02%)</title><rect x="58.6" y="277" width="0.2" height="15.0" fill="rgb(220,176,20)" rx="2" ry="2" />
<text  x="61.61" y="287.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (2 samples, 0.04%)</title><rect x="1027.1" y="213" width="0.4" height="15.0" fill="rgb(219,127,48)" rx="2" ry="2" />
<text  x="1030.09" y="223.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (1 samples, 0.02%)</title><rect x="593.5" y="437" width="0.3" height="15.0" fill="rgb(244,37,30)" rx="2" ry="2" />
<text  x="596.54" y="447.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_type (1 samples, 0.02%)</title><rect x="48.8" y="357" width="0.2" height="15.0" fill="rgb(244,103,28)" rx="2" ry="2" />
<text  x="51.76" y="367.5" ></text>
</g>
<g >
<title>list_reader_selector::~list_reader_selector (7 samples, 0.13%)</title><rect x="596.6" y="421" width="1.5" height="15.0" fill="rgb(250,177,20)" rx="2" ry="2" />
<text  x="599.61" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;unsigned long, std::pair&lt;unsigned long const, unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::operator[] (1 samples, 0.02%)</title><rect x="1124.7" y="309" width="0.3" height="15.0" fill="rgb(247,146,0)" rx="2" ry="2" />
<text  x="1127.75" y="319.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::operator= (1 samples, 0.02%)</title><rect x="50.9" y="325" width="0.3" height="15.0" fill="rgb(235,195,16)" rx="2" ry="2" />
<text  x="53.95" y="335.5" ></text>
</g>
<g >
<title>db::system_keyspace::make (1 samples, 0.02%)</title><rect x="17.7" y="389" width="0.2" height="15.0" fill="rgb(230,136,41)" rx="2" ry="2" />
<text  x="20.66" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="703.5" y="213" width="0.2" height="15.0" fill="rgb(244,9,8)" rx="2" ry="2" />
<text  x="706.46" y="223.5" ></text>
</g>
<g >
<title>database::find_schema (2 samples, 0.04%)</title><rect x="823.5" y="421" width="0.4" height="15.0" fill="rgb(254,35,48)" rx="2" ry="2" />
<text  x="826.45" y="431.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (1 samples, 0.02%)</title><rect x="817.3" y="389" width="0.2" height="15.0" fill="rgb(214,25,2)" rx="2" ry="2" />
<text  x="820.32" y="399.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_Optional_payload_base (4 samples, 0.07%)</title><rect x="634.9" y="485" width="0.9" height="15.0" fill="rgb(211,127,1)" rx="2" ry="2" />
<text  x="637.92" y="495.5" ></text>
</g>
<g >
<title>managed_bytes::operator= (4 samples, 0.07%)</title><rect x="938.4" y="469" width="0.9" height="15.0" fill="rgb(244,36,15)" rx="2" ry="2" />
<text  x="941.41" y="479.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="594.0" y="421" width="0.2" height="15.0" fill="rgb(225,95,12)" rx="2" ry="2" />
<text  x="596.98" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.07%)</title><rect x="445.3" y="389" width="0.9" height="15.0" fill="rgb(254,47,6)" rx="2" ry="2" />
<text  x="448.30" y="399.5" ></text>
</g>
<g >
<title>bplus::node&lt;long, intrusive_array&lt;cache_entry&gt;, dht::raw_token_less_comparator, 16ul,  (1 samples, 0.02%)</title><rect x="16.8" y="565" width="0.2" height="15.0" fill="rgb(208,181,22)" rx="2" ry="2" />
<text  x="19.79" y="575.5" ></text>
</g>
<g >
<title>db::assure_sufficient_live_nodes&lt;utils::small_vector&lt;gms::inet_address, 3ul&gt;, std::array&lt;gms::inet_address, 0ul&gt; &gt; (3 samples, 0.06%)</title><rect x="1059.1" y="405" width="0.6" height="15.0" fill="rgb(235,120,45)" rx="2" ry="2" />
<text  x="1062.06" y="415.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (2 samples, 0.04%)</title><rect x="49.0" y="261" width="0.4" height="15.0" fill="rgb(208,150,22)" rx="2" ry="2" />
<text  x="51.98" y="271.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::build_partition_keys (4 samples, 0.07%)</title><rect x="862.0" y="453" width="0.9" height="15.0" fill="rgb(211,9,27)" rx="2" ry="2" />
<text  x="864.99" y="463.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_Optional_payload_base (2 samples, 0.04%)</title><rect x="938.0" y="453" width="0.4" height="15.0" fill="rgb(252,43,25)" rx="2" ry="2" />
<text  x="940.97" y="463.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (103 samples, 1.91%)</title><rect x="41.1" y="437" width="22.5" height="15.0" fill="rgb(254,156,35)" rx="2" ry="2" />
<text  x="44.09" y="447.5" >c..</text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.02%)</title><rect x="49.2" y="197" width="0.2" height="15.0" fill="rgb(231,183,30)" rx="2" ry="2" />
<text  x="52.19" y="207.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;void&gt;::set_value&lt;&gt; (1 samples, 0.02%)</title><rect x="707.8" y="533" width="0.3" height="15.0" fill="rgb(219,191,22)" rx="2" ry="2" />
<text  x="710.84" y="543.5" ></text>
</g>
<g >
<title>ser::serializer&lt;utils::UUID&gt;::skip&lt;seastar::simple_memory_input_stream&gt; (1 samples, 0.02%)</title><rect x="1118.2" y="293" width="0.2" height="15.0" fill="rgb(237,94,26)" rx="2" ry="2" />
<text  x="1121.18" y="303.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.02%)</title><rect x="80.7" y="597" width="0.2" height="15.0" fill="rgb(219,118,28)" rx="2" ry="2" />
<text  x="83.73" y="607.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;11ul, cql3::expr::untyped_constant&gt; (3 samples, 0.06%)</title><rect x="53.1" y="213" width="0.7" height="15.0" fill="rgb(212,62,54)" rx="2" ry="2" />
<text  x="56.14" y="223.5" ></text>
</g>
<g >
<title>tombstone::apply (3 samples, 0.06%)</title><rect x="421.9" y="261" width="0.6" height="15.0" fill="rgb(211,149,27)" rx="2" ry="2" />
<text  x="424.87" y="271.5" ></text>
</g>
<g >
<title>database::do_apply (40 samples, 0.74%)</title><rect x="1117.5" y="405" width="8.8" height="15.0" fill="rgb(242,128,42)" rx="2" ry="2" />
<text  x="1120.52" y="415.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (2 samples, 0.04%)</title><rect x="809.9" y="293" width="0.4" height="15.0" fill="rgb(242,65,38)" rx="2" ry="2" />
<text  x="812.88" y="303.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (3 samples, 0.06%)</title><rect x="1133.9" y="341" width="0.7" height="15.0" fill="rgb(212,102,43)" rx="2" ry="2" />
<text  x="1136.95" y="351.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::key_is_in_relation (7 samples, 0.13%)</title><rect x="958.3" y="453" width="1.6" height="15.0" fill="rgb(218,72,10)" rx="2" ry="2" />
<text  x="961.34" y="463.5" ></text>
</g>
<g >
<title>ser::set_size&lt;bytes_ostream, partition_key&gt; (1 samples, 0.02%)</title><rect x="1132.6" y="213" width="0.3" height="15.0" fill="rgb(218,15,17)" rx="2" ry="2" />
<text  x="1135.63" y="223.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (2 samples, 0.04%)</title><rect x="1104.6" y="437" width="0.4" height="15.0" fill="rgb(224,159,3)" rx="2" ry="2" />
<text  x="1107.60" y="447.5" ></text>
</g>
<g >
<title>double_decker&lt;long, cache_entry, dht::raw_token_less_comparator, dht::ring_position_comparator, 16,  (1 samples, 0.02%)</title><rect x="545.1" y="389" width="0.3" height="15.0" fill="rgb(232,91,46)" rx="2" ry="2" />
<text  x="548.15" y="399.5" ></text>
</g>
<g >
<title>schema_registry::learn (5 samples, 0.09%)</title><rect x="108.3" y="533" width="1.1" height="15.0" fill="rgb(231,40,38)" rx="2" ry="2" />
<text  x="111.32" y="543.5" ></text>
</g>
<g >
<title>query::querier_base::querier_base (515 samples, 9.56%)</title><rect x="451.7" y="485" width="112.7" height="15.0" fill="rgb(229,150,29)" rx="2" ry="2" />
<text  x="454.65" y="495.5" >query::querie..</text>
</g>
<g >
<title>atomic_cell_or_collection::copy (1 samples, 0.02%)</title><rect x="81.4" y="293" width="0.2" height="15.0" fill="rgb(209,83,34)" rx="2" ry="2" />
<text  x="84.38" y="303.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mHEXNUMBER (23 samples, 0.43%)</title><rect x="30.6" y="325" width="5.0" height="15.0" fill="rgb(230,123,0)" rx="2" ry="2" />
<text  x="33.58" y="335.5" ></text>
</g>
<g >
<title>free (3 samples, 0.06%)</title><rect x="434.8" y="261" width="0.6" height="15.0" fill="rgb(230,76,35)" rx="2" ry="2" />
<text  x="437.79" y="271.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (2 samples, 0.04%)</title><rect x="554.3" y="341" width="0.5" height="15.0" fill="rgb(251,156,32)" rx="2" ry="2" />
<text  x="557.35" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (1 samples, 0.02%)</title><rect x="23.8" y="261" width="0.2" height="15.0" fill="rgb(224,222,32)" rx="2" ry="2" />
<text  x="26.79" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="474.6" y="325" width="0.3" height="15.0" fill="rgb(243,119,41)" rx="2" ry="2" />
<text  x="477.64" y="335.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.02%)</title><rect x="46.1" y="245" width="0.2" height="15.0" fill="rgb(233,9,13)" rx="2" ry="2" />
<text  x="49.13" y="255.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_M_reset (1 samples, 0.02%)</title><rect x="1098.7" y="421" width="0.2" height="15.0" fill="rgb(239,4,54)" rx="2" ry="2" />
<text  x="1101.69" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.04%)</title><rect x="486.2" y="373" width="0.5" height="15.0" fill="rgb(228,51,42)" rx="2" ry="2" />
<text  x="489.25" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;seastar::shared_ptr&lt;cql3::relation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::relation&gt; &gt; &gt;::emplace_back&lt;seastar::shared_ptr&lt;cql3::single_column_relation&gt; &gt; (3 samples, 0.06%)</title><rect x="62.3" y="389" width="0.7" height="15.0" fill="rgb(239,98,46)" rx="2" ry="2" />
<text  x="65.33" y="399.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (2 samples, 0.04%)</title><rect x="44.2" y="389" width="0.4" height="15.0" fill="rgb(227,28,41)" rx="2" ry="2" />
<text  x="47.16" y="399.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.02%)</title><rect x="80.7" y="613" width="0.2" height="15.0" fill="rgb(220,92,18)" rx="2" ry="2" />
<text  x="83.73" y="623.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (4 samples, 0.07%)</title><rect x="41.7" y="357" width="0.9" height="15.0" fill="rgb(222,226,5)" rx="2" ry="2" />
<text  x="44.75" y="367.5" ></text>
</g>
<g >
<title>antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;::RecognizerType&lt;antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::RecognizerType (1 samples, 0.02%)</title><rect x="20.9" y="453" width="0.3" height="15.0" fill="rgb(218,89,8)" rx="2" ry="2" />
<text  x="23.95" y="463.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt;, true, true&gt;::__uniq_ptr_data (1 samples, 0.02%)</title><rect x="49.9" y="261" width="0.2" height="15.0" fill="rgb(212,228,35)" rx="2" ry="2" />
<text  x="52.85" y="271.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_M_reset (1 samples, 0.02%)</title><rect x="657.9" y="533" width="0.2" height="15.0" fill="rgb(210,20,6)" rx="2" ry="2" />
<text  x="660.92" y="543.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="564.0" y="469" width="0.2" height="15.0" fill="rgb(224,208,13)" rx="2" ry="2" />
<text  x="566.98" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::vector (2 samples, 0.04%)</title><rect x="73.1" y="325" width="0.4" height="15.0" fill="rgb(207,111,18)" rx="2" ry="2" />
<text  x="76.06" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (2 samples, 0.04%)</title><rect x="592.9" y="389" width="0.4" height="15.0" fill="rgb(207,103,32)" rx="2" ry="2" />
<text  x="595.88" y="399.5" ></text>
</g>
<g >
<title>mutation::set_cell (1 samples, 0.02%)</title><rect x="17.9" y="469" width="0.2" height="15.0" fill="rgb(211,27,50)" rx="2" ry="2" />
<text  x="20.88" y="479.5" ></text>
</g>
<g >
<title>antlr3::IntStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::consume (2 samples, 0.04%)</title><rect x="35.2" y="309" width="0.4" height="15.0" fill="rgb(210,157,9)" rx="2" ry="2" />
<text  x="38.18" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_clear (1 samples, 0.02%)</title><rect x="479.2" y="373" width="0.3" height="15.0" fill="rgb(247,127,19)" rx="2" ry="2" />
<text  x="482.24" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="475.3" y="341" width="0.2" height="15.0" fill="rgb(212,94,31)" rx="2" ry="2" />
<text  x="478.30" y="351.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;mutation_querier, false, false&gt;::_Optional_base (1 samples, 0.02%)</title><rect x="575.4" y="485" width="0.2" height="15.0" fill="rgb(240,118,46)" rx="2" ry="2" />
<text  x="578.37" y="495.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_M_reset (1 samples, 0.02%)</title><rect x="1070.2" y="389" width="0.2" height="15.0" fill="rgb(240,220,50)" rx="2" ry="2" />
<text  x="1073.23" y="399.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::lw_shared_ptr&lt;schema const&gt;  (1 samples, 0.02%)</title><rect x="107.2" y="517" width="0.2" height="15.0" fill="rgb(225,103,23)" rx="2" ry="2" />
<text  x="110.22" y="527.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;void&gt;  (1 samples, 0.02%)</title><rect x="106.8" y="405" width="0.2" height="15.0" fill="rgb(213,184,36)" rx="2" ry="2" />
<text  x="109.78" y="415.5" ></text>
</g>
<g >
<title>query::result::builder::build (1 samples, 0.02%)</title><rect x="122.5" y="517" width="0.3" height="15.0" fill="rgb(249,211,16)" rx="2" ry="2" />
<text  x="125.55" y="527.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_slice_or_needs_filtering (3 samples, 0.06%)</title><rect x="668.9" y="501" width="0.6" height="15.0" fill="rgb(209,131,2)" rx="2" ry="2" />
<text  x="671.86" y="511.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (3 samples, 0.06%)</title><rect x="305.6" y="389" width="0.7" height="15.0" fill="rgb(249,13,41)" rx="2" ry="2" />
<text  x="308.60" y="399.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (1 samples, 0.02%)</title><rect x="654.2" y="533" width="0.2" height="15.0" fill="rgb(214,0,22)" rx="2" ry="2" />
<text  x="657.19" y="543.5" ></text>
</g>
<g >
<title>memtable::memtable_encoding_stats_collector::update_timestamp (1 samples, 0.02%)</title><rect x="1119.9" y="245" width="0.3" height="15.0" fill="rgb(249,109,0)" rx="2" ry="2" />
<text  x="1122.93" y="255.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, auth::role_or_anonymous&amp;&amp;, auth::get_permissions (1 samples, 0.02%)</title><rect x="814.7" y="373" width="0.2" height="15.0" fill="rgb(241,62,51)" rx="2" ry="2" />
<text  x="817.69" y="383.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::lsa_partition_reader::next_row (1 samples, 0.02%)</title><rect x="79.4" y="373" width="0.2" height="15.0" fill="rgb(232,84,48)" rx="2" ry="2" />
<text  x="82.41" y="383.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (1 samples, 0.02%)</title><rect x="1049.2" y="389" width="0.2" height="15.0" fill="rgb(245,26,33)" rx="2" ry="2" />
<text  x="1052.21" y="399.5" ></text>
</g>
<g >
<title>std::__make_heap&lt;__gnu_cxx::__normal_iterator&lt;boost::iterator_range&lt;boost::intrusive::tree_iterator&lt;boost::intrusive::mhtraits&lt;range_tombstone_entry, boost::intrusive::set_member_hook&lt;boost::intrusive::link_mode&lt; (2 samples, 0.04%)</title><rect x="288.7" y="277" width="0.5" height="15.0" fill="rgb(247,118,20)" rx="2" ry="2" />
<text  x="291.74" y="287.5" ></text>
</g>
<g >
<title>TLS init function for bound_view::_empty_prefix (6 samples, 0.11%)</title><rect x="286.1" y="245" width="1.3" height="15.0" fill="rgb(227,11,15)" rx="2" ry="2" />
<text  x="289.11" y="255.5" ></text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::EqualElement&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt;&amp;&gt; (3 samples, 0.06%)</title><rect x="771.8" y="405" width="0.6" height="15.0" fill="rgb(239,14,27)" rx="2" ry="2" />
<text  x="774.78" y="415.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.02%)</title><rect x="50.3" y="245" width="0.2" height="15.0" fill="rgb(218,20,22)" rx="2" ry="2" />
<text  x="53.29" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::_M_range_initialize&lt;nonwrapping_interval&lt;dht::ring_position&gt; const*&gt; (3 samples, 0.06%)</title><rect x="945.0" y="469" width="0.6" height="15.0" fill="rgb(235,14,20)" rx="2" ry="2" />
<text  x="947.98" y="479.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.02%)</title><rect x="59.0" y="309" width="0.3" height="15.0" fill="rgb(219,208,10)" rx="2" ry="2" />
<text  x="62.05" y="319.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mK_UPDATE (1 samples, 0.02%)</title><rect x="39.1" y="341" width="0.2" height="15.0" fill="rgb(249,159,25)" rx="2" ry="2" />
<text  x="42.12" y="351.5" ></text>
</g>
<g >
<title>schema_builder::build (1 samples, 0.02%)</title><rect x="17.7" y="309" width="0.2" height="15.0" fill="rgb(243,8,5)" rx="2" ry="2" />
<text  x="20.66" y="319.5" ></text>
</g>
<g >
<title>logalloc::segment_pool::refill_emergency_reserve (1 samples, 0.02%)</title><rect x="528.3" y="325" width="0.2" height="15.0" fill="rgb(248,96,20)" rx="2" ry="2" />
<text  x="531.29" y="335.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.02%)</title><rect x="51.6" y="309" width="0.2" height="15.0" fill="rgb(241,196,10)" rx="2" ry="2" />
<text  x="54.60" y="319.5" ></text>
</g>
<g >
<title>compound_type&lt; (16 samples, 0.30%)</title><rect x="933.6" y="421" width="3.5" height="15.0" fill="rgb(246,104,3)" rx="2" ry="2" />
<text  x="936.59" y="431.5" ></text>
</g>
<g >
<title>cql3::restrictions::partition_key_restrictions::merge_to (2 samples, 0.04%)</title><rect x="73.1" y="421" width="0.4" height="15.0" fill="rgb(212,75,1)" rx="2" ry="2" />
<text  x="76.06" y="431.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.02%)</title><rect x="11.1" y="549" width="0.2" height="15.0" fill="rgb(254,91,39)" rx="2" ry="2" />
<text  x="14.09" y="559.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::clear (16 samples, 0.30%)</title><rect x="402.2" y="277" width="3.5" height="15.0" fill="rgb(227,42,23)" rx="2" ry="2" />
<text  x="405.17" y="287.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate (44 samples, 0.82%)</title><rect x="890.7" y="357" width="9.6" height="15.0" fill="rgb(208,67,52)" rx="2" ry="2" />
<text  x="893.68" y="367.5" ></text>
</g>
<g >
<title>std::operator+ (2 samples, 0.04%)</title><rect x="43.1" y="261" width="0.4" height="15.0" fill="rgb(248,143,54)" rx="2" ry="2" />
<text  x="46.06" y="271.5" ></text>
</g>
<g >
<title>frozen_schema::unfreeze (3 samples, 0.06%)</title><rect x="108.8" y="485" width="0.6" height="15.0" fill="rgb(228,54,14)" rx="2" ry="2" />
<text  x="111.75" y="495.5" ></text>
</g>
<g >
<title>write_fragmented&lt;managed_bytes_basic_view&lt; (13 samples, 0.24%)</title><rect x="895.7" y="325" width="2.9" height="15.0" fill="rgb(246,8,9)" rx="2" ry="2" />
<text  x="898.71" y="335.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (1 samples, 0.02%)</title><rect x="108.3" y="373" width="0.2" height="15.0" fill="rgb(225,193,23)" rx="2" ry="2" />
<text  x="111.32" y="383.5" ></text>
</g>
<g >
<title>std::__copy_n_a&lt;legacy_compound_view&lt;compound_type&lt; (19 samples, 0.35%)</title><rect x="925.3" y="421" width="4.1" height="15.0" fill="rgb(227,18,37)" rx="2" ry="2" />
<text  x="928.27" y="431.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;mutation_querier&gt;::_M_reset (1 samples, 0.02%)</title><rect x="444.4" y="421" width="0.2" height="15.0" fill="rgb(243,21,2)" rx="2" ry="2" />
<text  x="447.43" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, seastar::lw_shared_ptr&lt;schema const&gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_node (1 samples, 0.02%)</title><rect x="703.5" y="261" width="0.2" height="15.0" fill="rgb(231,133,5)" rx="2" ry="2" />
<text  x="706.46" y="271.5" ></text>
</g>
<g >
<title>query::result_set_builder::accept_new_partition (1 samples, 0.02%)</title><rect x="108.8" y="389" width="0.2" height="15.0" fill="rgb(216,13,53)" rx="2" ry="2" />
<text  x="111.75" y="399.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="689.9" y="533" width="0.2" height="15.0" fill="rgb(221,54,0)" rx="2" ry="2" />
<text  x="692.88" y="543.5" ></text>
</g>
<g >
<title>range_tombstone_list::~range_tombstone_list (1 samples, 0.02%)</title><rect x="590.9" y="357" width="0.2" height="15.0" fill="rgb(213,27,36)" rx="2" ry="2" />
<text  x="593.91" y="367.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt; &gt;, seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (11 samples, 0.20%)</title><rect x="808.6" y="325" width="2.4" height="15.0" fill="rgb(218,121,1)" rx="2" ry="2" />
<text  x="811.56" y="335.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (3 samples, 0.06%)</title><rect x="816.7" y="357" width="0.6" height="15.0" fill="rgb(235,0,6)" rx="2" ry="2" />
<text  x="819.67" y="367.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::raw::batch_statement, std::default_delete&lt;cql3::statements::raw::batch_statement&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="66.1" y="421" width="0.2" height="15.0" fill="rgb(253,64,12)" rx="2" ry="2" />
<text  x="69.05" y="431.5" ></text>
</g>
<g >
<title>std::hash&lt;auth::resource&gt;::hash_data (10 samples, 0.19%)</title><rect x="819.3" y="389" width="2.2" height="15.0" fill="rgb(207,53,33)" rx="2" ry="2" />
<text  x="822.29" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::~vector (3 samples, 0.06%)</title><rect x="597.5" y="405" width="0.6" height="15.0" fill="rgb(239,59,37)" rx="2" ry="2" />
<text  x="600.48" y="415.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::get_tokenStartCharIndex (1 samples, 0.02%)</title><rect x="29.7" y="325" width="0.2" height="15.0" fill="rgb(252,87,8)" rx="2" ry="2" />
<text  x="32.71" y="335.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (12 samples, 0.22%)</title><rect x="838.6" y="453" width="2.6" height="15.0" fill="rgb(232,97,30)" rx="2" ry="2" />
<text  x="841.56" y="463.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="58.6" y="293" width="0.2" height="15.0" fill="rgb(254,210,44)" rx="2" ry="2" />
<text  x="61.61" y="303.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (1 samples, 0.02%)</title><rect x="169.2" y="485" width="0.2" height="15.0" fill="rgb(250,31,1)" rx="2" ry="2" />
<text  x="172.19" y="495.5" ></text>
</g>
<g >
<title>seastar::promise&lt;void&gt;::promise (2 samples, 0.04%)</title><rect x="1026.2" y="197" width="0.5" height="15.0" fill="rgb(207,185,32)" rx="2" ry="2" />
<text  x="1029.21" y="207.5" ></text>
</g>
<g >
<title>mutation_reader_merger::maybe_add_readers_at_partition_boundary (9 samples, 0.17%)</title><rect x="185.2" y="357" width="1.9" height="15.0" fill="rgb(218,58,29)" rx="2" ry="2" />
<text  x="188.17" y="367.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (1 samples, 0.02%)</title><rect x="864.6" y="325" width="0.2" height="15.0" fill="rgb(246,200,15)" rx="2" ry="2" />
<text  x="867.62" y="335.5" ></text>
</g>
<g >
<title>logalloc::basic_region_impl::set_reclaiming_enabled (1 samples, 0.02%)</title><rect x="292.7" y="277" width="0.2" height="15.0" fill="rgb(216,201,21)" rx="2" ry="2" />
<text  x="295.68" y="287.5" ></text>
</g>
<g >
<title>cql3::restrictions::has_eq_null (4 samples, 0.07%)</title><rect x="861.1" y="421" width="0.9" height="15.0" fill="rgb(210,32,27)" rx="2" ry="2" />
<text  x="864.12" y="431.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;auth::resource, auth::resource, std::allocator&lt;auth::resource&gt;, std::__detail::_Identity, std::equal_to&lt;auth::resource&gt;, std::hash&lt;auth::resource&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;::find (17 samples, 0.32%)</title><rect x="817.8" y="421" width="3.7" height="15.0" fill="rgb(240,158,52)" rx="2" ry="2" />
<text  x="820.76" y="431.5" ></text>
</g>
<g >
<title>partition_entry::evict (1 samples, 0.02%)</title><rect x="83.8" y="597" width="0.2" height="15.0" fill="rgb(227,67,10)" rx="2" ry="2" />
<text  x="86.79" y="607.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::vector (2 samples, 0.04%)</title><rect x="913.2" y="437" width="0.5" height="15.0" fill="rgb(252,65,41)" rx="2" ry="2" />
<text  x="916.23" y="447.5" ></text>
</g>
<g >
<title>absl::hash_internal::AbslHashValue&lt;absl::hash_internal::HashState&gt; (1 samples, 0.02%)</title><rect x="830.2" y="357" width="0.3" height="15.0" fill="rgb(205,121,0)" rx="2" ry="2" />
<text  x="833.24" y="367.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (4 samples, 0.07%)</title><rect x="41.7" y="309" width="0.9" height="15.0" fill="rgb(233,203,54)" rx="2" ry="2" />
<text  x="44.75" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (12 samples, 0.22%)</title><rect x="973.7" y="405" width="2.6" height="15.0" fill="rgb(243,145,43)" rx="2" ry="2" />
<text  x="976.66" y="415.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, enum_set&lt;super_enum&lt;auth::permission,  (1 samples, 0.02%)</title><rect x="77.0" y="373" width="0.2" height="15.0" fill="rgb(238,61,27)" rx="2" ry="2" />
<text  x="80.00" y="383.5" ></text>
</g>
<g >
<title>compound_type&lt; (1 samples, 0.02%)</title><rect x="862.4" y="389" width="0.2" height="15.0" fill="rgb(245,224,31)" rx="2" ry="2" />
<text  x="865.43" y="399.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::storage_proxy&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="982.4" y="421" width="0.2" height="15.0" fill="rgb(229,42,39)" rx="2" ry="2" />
<text  x="985.42" y="431.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (1 samples, 0.02%)</title><rect x="575.8" y="485" width="0.2" height="15.0" fill="rgb(221,97,16)" rx="2" ry="2" />
<text  x="578.80" y="495.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (1 samples, 0.02%)</title><rect x="325.7" y="437" width="0.3" height="15.0" fill="rgb(242,60,5)" rx="2" ry="2" />
<text  x="328.75" y="447.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_nonsingular_mutations_locally (1 samples, 0.02%)</title><rect x="107.7" y="453" width="0.2" height="15.0" fill="rgb(254,218,17)" rx="2" ry="2" />
<text  x="110.66" y="463.5" ></text>
</g>
<g >
<title>utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (1 samples, 0.02%)</title><rect x="793.7" y="213" width="0.2" height="15.0" fill="rgb(247,40,26)" rx="2" ry="2" />
<text  x="796.67" y="223.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, fragmented_temporary_buffer::view, managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="861.6" y="325" width="0.2" height="15.0" fill="rgb(237,173,44)" rx="2" ry="2" />
<text  x="864.55" y="335.5" ></text>
</g>
<g >
<title>perf_simple_que (5,388 samples, 99.98%)</title><rect x="10.0" y="709" width="1179.8" height="15.0" fill="rgb(210,43,34)" rx="2" ry="2" />
<text  x="13.00" y="719.5" >perf_simple_que</text>
</g>
<g >
<title>global_schema_ptr::global_schema_ptr (6 samples, 0.11%)</title><rect x="1005.2" y="341" width="1.3" height="15.0" fill="rgb(225,56,21)" rx="2" ry="2" />
<text  x="1008.19" y="351.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (267 samples, 4.95%)</title><rect x="19.6" y="565" width="58.5" height="15.0" fill="rgb(247,181,42)" rx="2" ry="2" />
<text  x="22.63" y="575.5" >cql3::..</text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="791.9" y="309" width="0.2" height="15.0" fill="rgb(241,111,28)" rx="2" ry="2" />
<text  x="794.92" y="319.5" ></text>
</g>
<g >
<title>nonwrapping_interval&lt;dht::ring_position&gt;::make_singular (9 samples, 0.17%)</title><rect x="930.1" y="453" width="2.0" height="15.0" fill="rgb(209,199,33)" rx="2" ry="2" />
<text  x="933.09" y="463.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.02%)</title><rect x="48.1" y="245" width="0.2" height="15.0" fill="rgb(214,29,1)" rx="2" ry="2" />
<text  x="51.10" y="255.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (42 samples, 0.78%)</title><rect x="1117.5" y="437" width="9.2" height="15.0" fill="rgb(208,91,6)" rx="2" ry="2" />
<text  x="1120.52" y="447.5" ></text>
</g>
<g >
<title>ser::serialize_array_helper&lt;false, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;::doit&lt;std::vector&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, std::allocator&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt;, bytes_ostream&gt; (1 samples, 0.02%)</title><rect x="1132.4" y="213" width="0.2" height="15.0" fill="rgb(245,63,13)" rx="2" ry="2" />
<text  x="1135.41" y="223.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::cancel (2 samples, 0.04%)</title><rect x="722.3" y="485" width="0.4" height="15.0" fill="rgb(205,208,52)" rx="2" ry="2" />
<text  x="725.29" y="495.5" ></text>
</g>
<g >
<title>rows_entry::tri_compare::operator (1 samples, 0.02%)</title><rect x="106.6" y="437" width="0.2" height="15.0" fill="rgb(230,178,36)" rx="2" ry="2" />
<text  x="109.56" y="447.5" ></text>
</g>
<g >
<title>schema_mutations::schema_mutations (1 samples, 0.02%)</title><rect x="109.2" y="437" width="0.2" height="15.0" fill="rgb(231,52,32)" rx="2" ry="2" />
<text  x="112.19" y="447.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (4 samples, 0.07%)</title><rect x="894.8" y="325" width="0.9" height="15.0" fill="rgb(208,141,44)" rx="2" ry="2" />
<text  x="897.84" y="335.5" ></text>
</g>
<g >
<title>std::function&lt;seastar::future&lt;void&gt;  (1 samples, 0.02%)</title><rect x="17.4" y="613" width="0.3" height="15.0" fill="rgb(250,113,54)" rx="2" ry="2" />
<text  x="20.44" y="623.5" ></text>
</g>
<g >
<title>seastar::basic_semaphore&lt;seastar::semaphore_default_exception_factory, std::chrono::_V2::steady_clock&gt;::wait (1 samples, 0.02%)</title><rect x="623.1" y="501" width="0.2" height="15.0" fill="rgb(209,70,53)" rx="2" ry="2" />
<text  x="626.10" y="511.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (1 samples, 0.02%)</title><rect x="755.8" y="421" width="0.2" height="15.0" fill="rgb(215,214,8)" rx="2" ry="2" />
<text  x="758.79" y="431.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="54.9" y="293" width="0.2" height="15.0" fill="rgb(209,11,24)" rx="2" ry="2" />
<text  x="57.89" y="303.5" ></text>
</g>
<g >
<title>mutation_querier::mutation_querier (1 samples, 0.02%)</title><rect x="343.0" y="261" width="0.3" height="15.0" fill="rgb(248,158,51)" rx="2" ry="2" />
<text  x="346.05" y="271.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::digest_read_resolver&gt;::~shared_ptr (5 samples, 0.09%)</title><rect x="987.5" y="405" width="1.1" height="15.0" fill="rgb(208,123,15)" rx="2" ry="2" />
<text  x="990.46" y="415.5" ></text>
</g>
<g >
<title>std::construct_at&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::entry&gt; (7 samples, 0.13%)</title><rect x="135.5" y="469" width="1.5" height="15.0" fill="rgb(235,129,28)" rx="2" ry="2" />
<text  x="138.47" y="479.5" ></text>
</g>
<g >
<title>seastar::internal::awaiter&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::await_suspend&lt;seastar::internal::coroutine_traits_base&lt;service::storage_proxy_coordinator_query_result&gt;::promise_type&gt; (1 samples, 0.02%)</title><rect x="968.4" y="437" width="0.2" height="15.0" fill="rgb(215,90,17)" rx="2" ry="2" />
<text  x="971.41" y="447.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="44.2" y="357" width="0.2" height="15.0" fill="rgb(208,116,32)" rx="2" ry="2" />
<text  x="47.16" y="367.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (1,119 samples, 20.76%)</title><rect x="872.5" y="533" width="245.0" height="15.0" fill="rgb(210,152,31)" rx="2" ry="2" />
<text  x="875.50" y="543.5" >seastar::noncopyable_function&lt;se..</text>
</g>
<g >
<title>locator::token_metadata::pending_endpoints_for (1 samples, 0.02%)</title><rect x="1133.1" y="261" width="0.2" height="15.0" fill="rgb(205,50,39)" rx="2" ry="2" />
<text  x="1136.07" y="271.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;schema_registry_entry&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;schema_registry_entry&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (3 samples, 0.06%)</title><rect x="978.3" y="373" width="0.6" height="15.0" fill="rgb(245,66,30)" rx="2" ry="2" />
<text  x="981.26" y="383.5" ></text>
</g>
<g >
<title>antlr3::Lexer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getCharIndex (1 samples, 0.02%)</title><rect x="29.0" y="309" width="0.3" height="15.0" fill="rgb(217,119,46)" rx="2" ry="2" />
<text  x="32.05" y="319.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.07%)</title><rect x="259.6" y="229" width="0.9" height="15.0" fill="rgb(225,113,4)" rx="2" ry="2" />
<text  x="262.62" y="239.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;boost::iterators::transform_iterator&lt;boost::range_detail::select_second_mutable&lt;std::unordered_map&lt;column_definition const*, cql3::expr::expression, std::hash&lt;column_definition const*&gt;, std::equal_to&lt;column_definition const*&gt;, std::allocator&lt;std::pair&lt;column_definition const* const, cql3::expr::expression&gt; &gt; &gt; &gt;, std::__detail::_Node_iterator&lt;std::pair&lt;column_definition const* const, cql3::expr::expression&gt;, false, false&gt;, boost::use_default, boost::use_default&gt;, cql3::expr::expression*&gt; (1 samples, 0.02%)</title><rect x="74.4" y="421" width="0.2" height="15.0" fill="rgb(225,184,12)" rx="2" ry="2" />
<text  x="77.38" y="431.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.02%)</title><rect x="24.9" y="341" width="0.2" height="15.0" fill="rgb(209,92,35)" rx="2" ry="2" />
<text  x="27.89" y="351.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::get_promise (1 samples, 0.02%)</title><rect x="997.1" y="341" width="0.2" height="15.0" fill="rgb(228,156,12)" rx="2" ry="2" />
<text  x="1000.09" y="351.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::construct&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (1 samples, 0.02%)</title><rect x="24.5" y="309" width="0.2" height="15.0" fill="rgb(216,110,13)" rx="2" ry="2" />
<text  x="27.45" y="319.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.02%)</title><rect x="24.7" y="277" width="0.2" height="15.0" fill="rgb(240,63,30)" rx="2" ry="2" />
<text  x="27.67" y="287.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getText[abi:cxx11] (2 samples, 0.04%)</title><rect x="54.7" y="325" width="0.4" height="15.0" fill="rgb(231,94,49)" rx="2" ry="2" />
<text  x="57.67" y="335.5" ></text>
</g>
<g >
<title>seastar::sprint&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; (3 samples, 0.06%)</title><rect x="18.8" y="581" width="0.6" height="15.0" fill="rgb(216,98,2)" rx="2" ry="2" />
<text  x="21.76" y="591.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::local (1 samples, 0.02%)</title><rect x="1112.5" y="485" width="0.2" height="15.0" fill="rgb(212,97,29)" rx="2" ry="2" />
<text  x="1115.49" y="495.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (1 samples, 0.02%)</title><rect x="821.9" y="421" width="0.2" height="15.0" fill="rgb(228,23,17)" rx="2" ry="2" />
<text  x="824.92" y="431.5" ></text>
</g>
<g >
<title>std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, true&gt; (1 samples, 0.02%)</title><rect x="106.8" y="309" width="0.2" height="15.0" fill="rgb(226,148,51)" rx="2" ry="2" />
<text  x="109.78" y="319.5" ></text>
</g>
<g >
<title>log_heap&lt;logalloc::segment_descriptor, logalloc::segment_descriptor_hist_options&gt;::adjust_up (1 samples, 0.02%)</title><rect x="10.9" y="565" width="0.2" height="15.0" fill="rgb(214,185,12)" rx="2" ry="2" />
<text  x="13.88" y="575.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt;::construct&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; (1 samples, 0.02%)</title><rect x="289.4" y="261" width="0.2" height="15.0" fill="rgb(244,220,16)" rx="2" ry="2" />
<text  x="292.40" y="271.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (3 samples, 0.06%)</title><rect x="705.7" y="549" width="0.6" height="15.0" fill="rgb(206,180,39)" rx="2" ry="2" />
<text  x="708.65" y="559.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::clear (1 samples, 0.02%)</title><rect x="1008.5" y="341" width="0.2" height="15.0" fill="rgb(230,212,8)" rx="2" ry="2" />
<text  x="1011.48" y="351.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::untyped_constant&gt; (8 samples, 0.15%)</title><rect x="52.3" y="341" width="1.7" height="15.0" fill="rgb(211,130,48)" rx="2" ry="2" />
<text  x="55.26" y="351.5" ></text>
</g>
<g >
<title>seastar::chunked_fifo&lt;seastar::expiring_fifo&lt;seastar::basic_semaphore&lt;seastar::semaphore_default_exception_factory, std::chrono::_V2::steady_clock&gt;::entry, std::function&lt;void  (1 samples, 0.02%)</title><rect x="701.1" y="485" width="0.2" height="15.0" fill="rgb(231,208,34)" rx="2" ry="2" />
<text  x="704.05" y="495.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;seastar::posix_file_real_impl&gt;::shared_ptr_count_for&lt;int&amp;, seastar::open_flags, seastar::file_open_options, seastar::internal::fs_info const&amp;, unsigned long&amp;&gt; (1 samples, 0.02%)</title><rect x="692.5" y="533" width="0.2" height="15.0" fill="rgb(216,194,21)" rx="2" ry="2" />
<text  x="695.51" y="543.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (1 samples, 0.02%)</title><rect x="50.7" y="341" width="0.2" height="15.0" fill="rgb(210,29,36)" rx="2" ry="2" />
<text  x="53.73" y="351.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.07%)</title><rect x="909.7" y="389" width="0.9" height="15.0" fill="rgb(236,66,20)" rx="2" ry="2" />
<text  x="912.73" y="399.5" ></text>
</g>
<g >
<title>ser::writer_of_qr_cell&lt;bytes_ostream&gt;::skip_timestamp (9 samples, 0.17%)</title><rect x="396.5" y="229" width="1.9" height="15.0" fill="rgb(238,79,41)" rx="2" ry="2" />
<text  x="399.47" y="239.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (2 samples, 0.04%)</title><rect x="47.0" y="389" width="0.4" height="15.0" fill="rgb(221,224,1)" rx="2" ry="2" />
<text  x="50.01" y="399.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (3 samples, 0.06%)</title><rect x="795.9" y="229" width="0.6" height="15.0" fill="rgb(213,225,33)" rx="2" ry="2" />
<text  x="798.86" y="239.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;schema_registry_entry&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;schema_registry_entry&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (8 samples, 0.15%)</title><rect x="977.2" y="389" width="1.7" height="15.0" fill="rgb(228,38,21)" rx="2" ry="2" />
<text  x="980.17" y="399.5" ></text>
</g>
<g >
<title>ser::serializer&lt;partition_key&gt;::write&lt;seastar::measuring_output_stream&gt; (1 samples, 0.02%)</title><rect x="1132.6" y="181" width="0.3" height="15.0" fill="rgb(213,188,1)" rx="2" ry="2" />
<text  x="1135.63" y="191.5" ></text>
</g>
<g >
<title>utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;::lru_entry::touch (5 samples, 0.09%)</title><rect x="744.6" y="469" width="1.1" height="15.0" fill="rgb(205,141,54)" rx="2" ry="2" />
<text  x="747.63" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (3 samples, 0.06%)</title><rect x="975.6" y="389" width="0.7" height="15.0" fill="rgb(241,8,29)" rx="2" ry="2" />
<text  x="978.63" y="399.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::statements::create_type_statement, std::default_delete&lt;cql3::statements::create_type_statement&gt;, true, true&gt;::__uniq_ptr_data (1 samples, 0.02%)</title><rect x="64.5" y="421" width="0.2" height="15.0" fill="rgb(245,148,14)" rx="2" ry="2" />
<text  x="67.52" y="431.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::fillBuffer (84 samples, 1.56%)</title><rect x="22.5" y="389" width="18.4" height="15.0" fill="rgb(243,227,5)" rx="2" ry="2" />
<text  x="25.48" y="399.5" ></text>
</g>
<g >
<title>start_thread (1 samples, 0.02%)</title><rect x="1189.8" y="693" width="0.2" height="15.0" fill="rgb(251,69,18)" rx="2" ry="2" />
<text  x="1192.78" y="703.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;column_definition const*, std::pair&lt;column_definition const* const, cql3::expr::expression&gt;, std::allocator&lt;std::pair&lt;column_definition const* const, cql3::expr::expression&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;column_definition const*&gt;, std::hash&lt;column_definition const*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (1 samples, 0.02%)</title><rect x="73.7" y="437" width="0.2" height="15.0" fill="rgb(208,68,3)" rx="2" ry="2" />
<text  x="76.72" y="447.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.04%)</title><rect x="486.2" y="389" width="0.5" height="15.0" fill="rgb(217,186,53)" rx="2" ry="2" />
<text  x="489.25" y="399.5" ></text>
</g>
<g >
<title>utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::lru_entry::touch (4 samples, 0.07%)</title><rect x="753.8" y="373" width="0.9" height="15.0" fill="rgb(207,105,28)" rx="2" ry="2" />
<text  x="756.82" y="383.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::execute (44 samples, 0.82%)</title><rect x="703.7" y="565" width="9.6" height="15.0" fill="rgb(207,32,14)" rx="2" ry="2" />
<text  x="706.68" y="575.5" ></text>
</g>
<g >
<title>seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::expand (7 samples, 0.13%)</title><rect x="207.7" y="277" width="1.6" height="15.0" fill="rgb(243,82,20)" rx="2" ry="2" />
<text  x="210.72" y="287.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector (1 samples, 0.02%)</title><rect x="1070.4" y="389" width="0.3" height="15.0" fill="rgb(240,1,21)" rx="2" ry="2" />
<text  x="1073.45" y="399.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;std::tuple&lt;seastar::lw_shared_ptr&lt;query::result&gt;, cache_temperature&gt; &gt;::clear (1 samples, 0.02%)</title><rect x="1035.0" y="325" width="0.2" height="15.0" fill="rgb(231,204,6)" rx="2" ry="2" />
<text  x="1037.97" y="335.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;11ul, cql3::expr::untyped_constant&gt; (1 samples, 0.02%)</title><rect x="52.7" y="277" width="0.2" height="15.0" fill="rgb(208,50,54)" rx="2" ry="2" />
<text  x="55.70" y="287.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector (2 samples, 0.04%)</title><rect x="1069.1" y="357" width="0.5" height="15.0" fill="rgb(212,177,29)" rx="2" ry="2" />
<text  x="1072.13" y="367.5" ></text>
</g>
<g >
<title>table::make_maintenance_sstable_set (1 samples, 0.02%)</title><rect x="109.4" y="485" width="0.2" height="15.0" fill="rgb(228,8,19)" rx="2" ry="2" />
<text  x="112.41" y="495.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::contains&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (13 samples, 0.24%)</title><rect x="838.6" y="469" width="2.8" height="15.0" fill="rgb(247,212,17)" rx="2" ry="2" />
<text  x="841.56" y="479.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::metadata&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="671.7" y="533" width="0.2" height="15.0" fill="rgb(217,56,38)" rx="2" ry="2" />
<text  x="674.71" y="543.5" ></text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.04%)</title><rect x="13.7" y="645" width="0.5" height="15.0" fill="rgb(210,225,29)" rx="2" ry="2" />
<text  x="16.72" y="655.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;11ul, cql3::expr::untyped_constant&gt; (3 samples, 0.06%)</title><rect x="53.1" y="181" width="0.7" height="15.0" fill="rgb(208,169,35)" rx="2" ry="2" />
<text  x="56.14" y="191.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (1 samples, 0.02%)</title><rect x="712.0" y="533" width="0.2" height="15.0" fill="rgb(215,154,43)" rx="2" ry="2" />
<text  x="715.00" y="543.5" ></text>
</g>
<g >
<title>flat_mutation_reader::close (1 samples, 0.02%)</title><rect x="578.9" y="485" width="0.2" height="15.0" fill="rgb(207,99,19)" rx="2" ry="2" />
<text  x="581.87" y="495.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::fill_buffer (1 samples, 0.02%)</title><rect x="81.4" y="485" width="0.2" height="15.0" fill="rgb(207,77,22)" rx="2" ry="2" />
<text  x="84.38" y="495.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::operator (3 samples, 0.06%)</title><rect x="859.1" y="549" width="0.7" height="15.0" fill="rgb(221,128,16)" rx="2" ry="2" />
<text  x="862.14" y="559.5" ></text>
</g>
<g >
<title>query::result_view::consume&lt;query::result_set_builder&amp;&gt; (1 samples, 0.02%)</title><rect x="108.8" y="421" width="0.2" height="15.0" fill="rgb(220,171,23)" rx="2" ry="2" />
<text  x="111.75" y="431.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_next (74 samples, 1.37%)</title><rect x="184.1" y="373" width="16.2" height="15.0" fill="rgb(228,12,3)" rx="2" ry="2" />
<text  x="187.08" y="383.5" ></text>
</g>
<g >
<title>reader_permit::consume_memory (2 samples, 0.04%)</title><rect x="533.3" y="261" width="0.5" height="15.0" fill="rgb(245,115,23)" rx="2" ry="2" />
<text  x="536.33" y="271.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::create_clustering_ranges (2 samples, 0.04%)</title><rect x="862.9" y="453" width="0.4" height="15.0" fill="rgb(231,227,4)" rx="2" ry="2" />
<text  x="865.87" y="463.5" ></text>
</g>
<g >
<title>__tls_init (1 samples, 0.02%)</title><rect x="551.9" y="357" width="0.3" height="15.0" fill="rgb(237,82,6)" rx="2" ry="2" />
<text  x="554.94" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.06%)</title><rect x="644.3" y="437" width="0.7" height="15.0" fill="rgb(208,93,28)" rx="2" ry="2" />
<text  x="647.34" y="447.5" ></text>
</g>
<g >
<title>sstring_hash::operator (3 samples, 0.06%)</title><rect x="1057.7" y="357" width="0.7" height="15.0" fill="rgb(237,227,39)" rx="2" ry="2" />
<text  x="1060.75" y="367.5" ></text>
</g>
<g >
<title>antlr3::IntStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::consume (2 samples, 0.04%)</title><rect x="36.1" y="293" width="0.4" height="15.0" fill="rgb(207,94,25)" rx="2" ry="2" />
<text  x="39.06" y="303.5" ></text>
</g>
<g >
<title>difference&lt;std::map, utils::UUID, schema_mutations, std::equal_to&lt;schema_mutations&gt;, std::less&lt;utils::UUID&gt;, std::allocator&lt;std::pair&lt;utils::UUID const, schema_mutations&gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="107.0" y="517" width="0.2" height="15.0" fill="rgb(210,131,44)" rx="2" ry="2" />
<text  x="110.00" y="527.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_pausable&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (477 samples, 8.85%)</title><rect x="334.7" y="341" width="104.5" height="15.0" fill="rgb(245,190,9)" rx="2" ry="2" />
<text  x="337.72" y="351.5" >flat_mutatio..</text>
</g>
<g >
<title>seastar::smp::submit_to&lt;seastar::sharded&lt;database&gt;::invoke_on_all (1 samples, 0.02%)</title><rect x="106.8" y="437" width="0.2" height="15.0" fill="rgb(207,51,10)" rx="2" ry="2" />
<text  x="109.78" y="447.5" ></text>
</g>
<g >
<title>std::_Enable_default_constructor&lt;true, std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt;::_Enable_default_constructor (1 samples, 0.02%)</title><rect x="52.5" y="293" width="0.2" height="15.0" fill="rgb(251,183,4)" rx="2" ry="2" />
<text  x="55.48" y="303.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, fragmented_temporary_buffer::view, managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="900.1" y="341" width="0.2" height="15.0" fill="rgb(243,226,35)" rx="2" ry="2" />
<text  x="903.09" y="351.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::get_promise (1 samples, 0.02%)</title><rect x="77.7" y="549" width="0.2" height="15.0" fill="rgb(235,60,33)" rx="2" ry="2" />
<text  x="80.66" y="559.5" ></text>
</g>
<g >
<title>db::commitlog::add_entry (6 samples, 0.11%)</title><rect x="1125.0" y="373" width="1.3" height="15.0" fill="rgb(245,48,19)" rx="2" ry="2" />
<text  x="1127.97" y="383.5" ></text>
</g>
<g >
<title>reader_permit::consume (3 samples, 0.06%)</title><rect x="261.6" y="213" width="0.6" height="15.0" fill="rgb(248,84,36)" rx="2" ry="2" />
<text  x="264.59" y="223.5" ></text>
</g>
<g >
<title>utils::tuple_hash::operator (19 samples, 0.35%)</title><rect x="802.7" y="229" width="4.1" height="15.0" fill="rgb(229,125,44)" rx="2" ry="2" />
<text  x="805.65" y="239.5" ></text>
</g>
<g >
<title>fmt::v7::detail::parse_replacement_field&lt;char, fmt::v7::detail::format_handler&lt;fmt::v7::detail::buffer_appender&lt;char&gt;, char, fmt::v7::basic_format_context&lt;fmt::v7::detail::buffer_appender&lt;char&gt;, char&gt; &gt;&amp;&gt; (1 samples, 0.02%)</title><rect x="80.3" y="677" width="0.2" height="15.0" fill="rgb(247,57,32)" rx="2" ry="2" />
<text  x="83.29" y="687.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::get_mutations (12 samples, 0.22%)</title><rect x="863.3" y="453" width="2.6" height="15.0" fill="rgb(235,212,43)" rx="2" ry="2" />
<text  x="866.30" y="463.5" ></text>
</g>
<g >
<title>allocation_strategy::destroy&lt;rows_entry&gt; (1 samples, 0.02%)</title><rect x="1139.4" y="373" width="0.2" height="15.0" fill="rgb(228,173,32)" rx="2" ry="2" />
<text  x="1142.42" y="383.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.02%)</title><rect x="45.0" y="309" width="0.3" height="15.0" fill="rgb(217,32,24)" rx="2" ry="2" />
<text  x="48.03" y="319.5" ></text>
</g>
<g >
<title>std::apply&lt;service::client_state::has_column_family_access (2 samples, 0.04%)</title><rect x="830.5" y="469" width="0.4" height="15.0" fill="rgb(230,164,10)" rx="2" ry="2" />
<text  x="833.46" y="479.5" ></text>
</g>
<g >
<title>local_schema_registry (1 samples, 0.02%)</title><rect x="973.4" y="421" width="0.3" height="15.0" fill="rgb(252,54,46)" rx="2" ry="2" />
<text  x="976.44" y="431.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::forward_to (3 samples, 0.06%)</title><rect x="1134.6" y="549" width="0.7" height="15.0" fill="rgb(233,161,11)" rx="2" ry="2" />
<text  x="1137.60" y="559.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (1 samples, 0.02%)</title><rect x="60.4" y="325" width="0.2" height="15.0" fill="rgb(210,87,53)" rx="2" ry="2" />
<text  x="63.36" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_move_assign (5 samples, 0.09%)</title><rect x="468.5" y="325" width="1.1" height="15.0" fill="rgb(246,55,51)" rx="2" ry="2" />
<text  x="471.51" y="335.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.04%)</title><rect x="605.6" y="453" width="0.4" height="15.0" fill="rgb(233,18,46)" rx="2" ry="2" />
<text  x="608.58" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::stats (1 samples, 0.02%)</title><rect x="543.0" y="389" width="0.2" height="15.0" fill="rgb(216,126,6)" rx="2" ry="2" />
<text  x="545.96" y="399.5" ></text>
</g>
<g >
<title>std::type_info::operator== (1 samples, 0.02%)</title><rect x="1068.9" y="357" width="0.2" height="15.0" fill="rgb(217,121,15)" rx="2" ry="2" />
<text  x="1071.91" y="367.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::reserve (1 samples, 0.02%)</title><rect x="1133.7" y="277" width="0.2" height="15.0" fill="rgb(210,46,2)" rx="2" ry="2" />
<text  x="1136.73" y="287.5" ></text>
</g>
<g >
<title>query::querier_base::close (128 samples, 2.38%)</title><rect x="578.4" y="501" width="28.1" height="15.0" fill="rgb(208,201,6)" rx="2" ry="2" />
<text  x="581.43" y="511.5" >q..</text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::lsa_partition_reader (1 samples, 0.02%)</title><rect x="536.8" y="341" width="0.2" height="15.0" fill="rgb(214,19,18)" rx="2" ry="2" />
<text  x="539.83" y="351.5" ></text>
</g>
<g >
<title>make_combined_reader (111 samples, 2.06%)</title><rect x="463.3" y="405" width="24.3" height="15.0" fill="rgb(225,45,44)" rx="2" ry="2" />
<text  x="466.26" y="415.5" >m..</text>
</g>
<g >
<title>cql3::raw_value_view::make_temporary (1 samples, 0.02%)</title><rect x="864.6" y="357" width="0.2" height="15.0" fill="rgb(229,19,41)" rx="2" ry="2" />
<text  x="867.62" y="367.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::execute_without_condition (28 samples, 0.52%)</title><rect x="860.2" y="485" width="6.2" height="15.0" fill="rgb(209,101,35)" rx="2" ry="2" />
<text  x="863.24" y="495.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (2 samples, 0.04%)</title><rect x="50.3" y="357" width="0.4" height="15.0" fill="rgb(244,33,18)" rx="2" ry="2" />
<text  x="53.29" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (6 samples, 0.11%)</title><rect x="1063.0" y="373" width="1.3" height="15.0" fill="rgb(213,24,25)" rx="2" ry="2" />
<text  x="1066.00" y="383.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::do_fill_buffer (1 samples, 0.02%)</title><rect x="859.6" y="453" width="0.2" height="15.0" fill="rgb(230,59,43)" rx="2" ry="2" />
<text  x="862.58" y="463.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (227 samples, 4.21%)</title><rect x="218.2" y="293" width="49.7" height="15.0" fill="rgb(224,195,8)" rx="2" ry="2" />
<text  x="221.24" y="303.5" >parti..</text>
</g>
<g >
<title>ser::mutation_partition_view::rows (2 samples, 0.04%)</title><rect x="1123.4" y="293" width="0.5" height="15.0" fill="rgb(229,194,3)" rx="2" ry="2" />
<text  x="1126.43" y="303.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (3 samples, 0.06%)</title><rect x="55.5" y="325" width="0.7" height="15.0" fill="rgb(218,43,14)" rx="2" ry="2" />
<text  x="58.54" y="335.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (42 samples, 0.78%)</title><rect x="797.6" y="245" width="9.2" height="15.0" fill="rgb(249,13,35)" rx="2" ry="2" />
<text  x="800.62" y="255.5" ></text>
</g>
<g >
<title>locator::abstract_replication_strategy::get_natural_endpoints (1 samples, 0.02%)</title><rect x="1132.9" y="261" width="0.2" height="15.0" fill="rgb(245,164,48)" rx="2" ry="2" />
<text  x="1135.85" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt;::reserve (5 samples, 0.09%)</title><rect x="1147.7" y="517" width="1.1" height="15.0" fill="rgb(223,221,27)" rx="2" ry="2" />
<text  x="1150.74" y="527.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::operator= (1 samples, 0.02%)</title><rect x="60.4" y="341" width="0.2" height="15.0" fill="rgb(232,200,11)" rx="2" ry="2" />
<text  x="63.36" y="351.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;auth::role_or_anonymous&gt;, seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (5 samples, 0.09%)</title><rect x="813.6" y="357" width="1.1" height="15.0" fill="rgb(211,141,17)" rx="2" ry="2" />
<text  x="816.60" y="367.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (1 samples, 0.02%)</title><rect x="52.0" y="325" width="0.3" height="15.0" fill="rgb(206,134,10)" rx="2" ry="2" />
<text  x="55.04" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (4 samples, 0.07%)</title><rect x="1144.5" y="549" width="0.8" height="15.0" fill="rgb(216,30,36)" rx="2" ry="2" />
<text  x="1147.46" y="559.5" ></text>
</g>
<g >
<title>mutation_fragment::consume&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (3 samples, 0.06%)</title><rect x="701.3" y="405" width="0.6" height="15.0" fill="rgb(216,123,31)" rx="2" ry="2" />
<text  x="704.27" y="415.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (22 samples, 0.41%)</title><rect x="1129.1" y="373" width="4.8" height="15.0" fill="rgb(207,132,11)" rx="2" ry="2" />
<text  x="1132.13" y="383.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reserve&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::partition_snapshot_flat_reader&lt;memtable&amp;&gt; (52 samples, 0.96%)</title><rect x="525.4" y="341" width="11.4" height="15.0" fill="rgb(240,80,7)" rx="2" ry="2" />
<text  x="528.44" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::stats (2 samples, 0.04%)</title><rect x="201.8" y="309" width="0.5" height="15.0" fill="rgb(253,184,8)" rx="2" ry="2" />
<text  x="204.81" y="319.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (1 samples, 0.02%)</title><rect x="213.2" y="277" width="0.2" height="15.0" fill="rgb(249,64,44)" rx="2" ry="2" />
<text  x="216.20" y="287.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.02%)</title><rect x="46.1" y="309" width="0.2" height="15.0" fill="rgb(220,176,33)" rx="2" ry="2" />
<text  x="49.13" y="319.5" ></text>
</g>
<g >
<title>mutation_partition::lower_bound (3 samples, 0.06%)</title><rect x="283.3" y="277" width="0.6" height="15.0" fill="rgb(244,195,23)" rx="2" ry="2" />
<text  x="286.27" y="287.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::expr::expression::impl&gt;, void&gt; (1 samples, 0.02%)</title><rect x="61.0" y="325" width="0.2" height="15.0" fill="rgb(246,171,26)" rx="2" ry="2" />
<text  x="64.02" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::configure (1 samples, 0.02%)</title><rect x="1170.3" y="597" width="0.2" height="15.0" fill="rgb(240,124,31)" rx="2" ry="2" />
<text  x="1173.29" y="607.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (9 samples, 0.17%)</title><rect x="647.0" y="549" width="1.9" height="15.0" fill="rgb(231,143,41)" rx="2" ry="2" />
<text  x="649.97" y="559.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_restrictions::size (1 samples, 0.02%)</title><rect x="667.6" y="533" width="0.2" height="15.0" fill="rgb(246,60,37)" rx="2" ry="2" />
<text  x="670.55" y="543.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (1 samples, 0.02%)</title><rect x="700.0" y="517" width="0.2" height="15.0" fill="rgb(226,109,1)" rx="2" ry="2" />
<text  x="702.96" y="527.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::then_wrapped_nrvo&lt;void, service::abstract_read_executor::make_data_requests (11 samples, 0.20%)</title><rect x="994.9" y="357" width="2.4" height="15.0" fill="rgb(228,27,23)" rx="2" ry="2" />
<text  x="997.90" y="367.5" ></text>
</g>
<g >
<title>double_decker&lt;long, memtable_entry, dht::raw_token_less_comparator, dht::ring_position_comparator, 16,  (104 samples, 1.93%)</title><rect x="493.5" y="389" width="22.7" height="15.0" fill="rgb(208,81,21)" rx="2" ry="2" />
<text  x="496.47" y="399.5" >d..</text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_range_tombstone (39 samples, 0.72%)</title><rect x="267.9" y="293" width="8.6" height="15.0" fill="rgb(226,90,1)" rx="2" ry="2" />
<text  x="270.94" y="303.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, cql3::statements::create_type_statement*, false&gt;::_M_head (1 samples, 0.02%)</title><rect x="64.7" y="373" width="0.3" height="15.0" fill="rgb(216,88,52)" rx="2" ry="2" />
<text  x="67.74" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="109.0" y="357" width="0.2" height="15.0" fill="rgb(245,156,40)" rx="2" ry="2" />
<text  x="111.97" y="367.5" ></text>
</g>
<g >
<title>allocation_strategy::get_standard_migrator&lt;blob_storage&gt; (2 samples, 0.04%)</title><rect x="238.8" y="117" width="0.5" height="15.0" fill="rgb(244,22,11)" rx="2" ry="2" />
<text  x="241.82" y="127.5" ></text>
</g>
<g >
<title>std::optional&lt;position_in_partition&gt;::operator=&lt;position_in_partition&gt; (3 samples, 0.06%)</title><rect x="278.9" y="293" width="0.6" height="15.0" fill="rgb(248,88,15)" rx="2" ry="2" />
<text  x="281.89" y="303.5" ></text>
</g>
<g >
<title>bplus::tree&lt;long, intrusive_array&lt;cache_entry&gt;, dht::raw_token_less_comparator, 16ul,  (11 samples, 0.20%)</title><rect x="548.2" y="357" width="2.4" height="15.0" fill="rgb(214,26,11)" rx="2" ry="2" />
<text  x="551.21" y="367.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (2 samples, 0.04%)</title><rect x="42.0" y="213" width="0.4" height="15.0" fill="rgb(224,19,43)" rx="2" ry="2" />
<text  x="44.97" y="223.5" ></text>
</g>
<g >
<title>partition_snapshot::static_row (8 samples, 0.15%)</title><rect x="292.9" y="277" width="1.8" height="15.0" fill="rgb(239,7,43)" rx="2" ry="2" />
<text  x="295.90" y="287.5" ></text>
</g>
<g >
<title>seastar::app_template::run (4,959 samples, 92.02%)</title><rect x="84.7" y="661" width="1085.8" height="15.0" fill="rgb(226,27,48)" rx="2" ry="2" />
<text  x="87.67" y="671.5" >seastar::app_template::run</text>
</g>
<g >
<title>std::apply&lt;service::client_state::check_has_permission (2 samples, 0.04%)</title><rect x="76.8" y="453" width="0.4" height="15.0" fill="rgb(231,214,17)" rx="2" ry="2" />
<text  x="79.78" y="463.5" ></text>
</g>
<g >
<title>db::commitlog::add_entry (2 samples, 0.04%)</title><rect x="1125.0" y="325" width="0.4" height="15.0" fill="rgb(244,49,20)" rx="2" ry="2" />
<text  x="1127.97" y="335.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.02%)</title><rect x="46.1" y="261" width="0.2" height="15.0" fill="rgb(212,169,41)" rx="2" ry="2" />
<text  x="49.13" y="271.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (2 samples, 0.04%)</title><rect x="894.2" y="325" width="0.4" height="15.0" fill="rgb(223,188,52)" rx="2" ry="2" />
<text  x="897.18" y="335.5" ></text>
</g>
<g >
<title>schema_registry_entry::get_schema (3 samples, 0.06%)</title><rect x="108.8" y="501" width="0.6" height="15.0" fill="rgb(209,36,37)" rx="2" ry="2" />
<text  x="111.75" y="511.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_recognizer (1 samples, 0.02%)</title><rect x="55.3" y="309" width="0.2" height="15.0" fill="rgb(218,149,40)" rx="2" ry="2" />
<text  x="58.33" y="319.5" ></text>
</g>
<g >
<title>logalloc::region_impl::free (1 samples, 0.02%)</title><rect x="16.8" y="549" width="0.2" height="15.0" fill="rgb(240,110,14)" rx="2" ry="2" />
<text  x="19.79" y="559.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;query::result&gt;::operator= (1 samples, 0.02%)</title><rect x="719.4" y="485" width="0.3" height="15.0" fill="rgb(207,17,45)" rx="2" ry="2" />
<text  x="722.45" y="495.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt;::allocate (1 samples, 0.02%)</title><rect x="160.6" y="469" width="0.3" height="15.0" fill="rgb(228,17,17)" rx="2" ry="2" />
<text  x="163.65" y="479.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.02%)</title><rect x="42.6" y="389" width="0.2" height="15.0" fill="rgb(216,79,29)" rx="2" ry="2" />
<text  x="45.63" y="399.5" ></text>
</g>
<g >
<title>frozen_mutation::partition (2 samples, 0.04%)</title><rect x="1118.0" y="309" width="0.4" height="15.0" fill="rgb(239,57,20)" rx="2" ry="2" />
<text  x="1120.96" y="319.5" ></text>
</g>
<g >
<title>database::find_uuid (19 samples, 0.35%)</title><rect x="769.6" y="453" width="4.1" height="15.0" fill="rgb(229,69,26)" rx="2" ry="2" />
<text  x="772.59" y="463.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (1 samples, 0.02%)</title><rect x="58.8" y="373" width="0.2" height="15.0" fill="rgb(205,141,49)" rx="2" ry="2" />
<text  x="61.83" y="383.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;schema const&gt;::operator= (3 samples, 0.06%)</title><rect x="1005.9" y="325" width="0.6" height="15.0" fill="rgb(231,125,40)" rx="2" ry="2" />
<text  x="1008.85" y="335.5" ></text>
</g>
<g >
<title>cql3::restrictions::(anonymous namespace)::range_from_bytes (1 samples, 0.02%)</title><rect x="880.8" y="485" width="0.2" height="15.0" fill="rgb(220,129,35)" rx="2" ry="2" />
<text  x="883.82" y="495.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::lsa_partition_reader::next_row (1 samples, 0.02%)</title><rect x="81.4" y="373" width="0.2" height="15.0" fill="rgb(251,208,14)" rx="2" ry="2" />
<text  x="84.38" y="383.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (3 samples, 0.06%)</title><rect x="350.1" y="229" width="0.6" height="15.0" fill="rgb(206,40,39)" rx="2" ry="2" />
<text  x="353.05" y="239.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::push_back (7 samples, 0.13%)</title><rect x="23.4" y="341" width="1.5" height="15.0" fill="rgb(225,4,30)" rx="2" ry="2" />
<text  x="26.36" y="351.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (1 samples, 0.02%)</title><rect x="823.7" y="373" width="0.2" height="15.0" fill="rgb(207,142,50)" rx="2" ry="2" />
<text  x="826.67" y="383.5" ></text>
</g>
<g >
<title>partition_version_ref::operator (1 samples, 0.02%)</title><rect x="536.2" y="277" width="0.2" height="15.0" fill="rgb(248,126,12)" rx="2" ry="2" />
<text  x="539.17" y="287.5" ></text>
</g>
<g >
<title>_dl_fixup (1 samples, 0.02%)</title><rect x="11.3" y="661" width="0.2" height="15.0" fill="rgb(236,217,10)" rx="2" ry="2" />
<text  x="14.31" y="671.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;::operator== (1 samples, 0.02%)</title><rect x="759.5" y="357" width="0.2" height="15.0" fill="rgb(218,0,20)" rx="2" ry="2" />
<text  x="762.52" y="367.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_max_result_size (6 samples, 0.11%)</title><rect x="1113.1" y="485" width="1.4" height="15.0" fill="rgb(237,194,21)" rx="2" ry="2" />
<text  x="1116.14" y="495.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnFamilyName (8 samples, 0.15%)</title><rect x="43.9" y="421" width="1.8" height="15.0" fill="rgb(251,226,51)" rx="2" ry="2" />
<text  x="46.94" y="431.5" ></text>
</g>
<g >
<title>seastar::gate::leave (1 samples, 0.02%)</title><rect x="106.3" y="533" width="0.3" height="15.0" fill="rgb(237,132,32)" rx="2" ry="2" />
<text  x="109.34" y="543.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (1 samples, 0.02%)</title><rect x="1150.8" y="469" width="0.2" height="15.0" fill="rgb(247,118,34)" rx="2" ry="2" />
<text  x="1153.81" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (5 samples, 0.09%)</title><rect x="532.2" y="245" width="1.1" height="15.0" fill="rgb(228,132,5)" rx="2" ry="2" />
<text  x="535.23" y="255.5" ></text>
</g>
<g >
<title>std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (11 samples, 0.20%)</title><rect x="440.5" y="357" width="2.4" height="15.0" fill="rgb(205,208,49)" rx="2" ry="2" />
<text  x="443.48" y="367.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::then_wrapped_common&lt;true, void, service::abstract_read_executor::make_data_requests (1 samples, 0.02%)</title><rect x="992.5" y="389" width="0.2" height="15.0" fill="rgb(213,43,8)" rx="2" ry="2" />
<text  x="995.49" y="399.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_live_endpoints (1 samples, 0.02%)</title><rect x="1070.7" y="405" width="0.2" height="15.0" fill="rgb(231,38,10)" rx="2" ry="2" />
<text  x="1073.66" y="415.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.02%)</title><rect x="44.2" y="277" width="0.2" height="15.0" fill="rgb(227,67,3)" rx="2" ry="2" />
<text  x="47.16" y="287.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::on_new_range (40 samples, 0.74%)</title><rect x="204.9" y="309" width="8.7" height="15.0" fill="rgb(240,182,27)" rx="2" ry="2" />
<text  x="207.88" y="319.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="57.7" y="373" width="0.3" height="15.0" fill="rgb(254,209,19)" rx="2" ry="2" />
<text  x="60.73" y="383.5" ></text>
</g>
<g >
<title>absl::container_internal::probe_seq&lt;16ul&gt;::probe_seq (1 samples, 0.02%)</title><rect x="847.8" y="421" width="0.2" height="15.0" fill="rgb(221,85,3)" rx="2" ry="2" />
<text  x="850.76" y="431.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (9 samples, 0.17%)</title><rect x="245.6" y="181" width="2.0" height="15.0" fill="rgb(213,195,14)" rx="2" ry="2" />
<text  x="248.61" y="191.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (1 samples, 0.02%)</title><rect x="45.9" y="341" width="0.2" height="15.0" fill="rgb(206,110,27)" rx="2" ry="2" />
<text  x="48.91" y="351.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::indirect_move (1 samples, 0.02%)</title><rect x="1031.7" y="293" width="0.2" height="15.0" fill="rgb(233,100,33)" rx="2" ry="2" />
<text  x="1034.69" y="303.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::allocate (4 samples, 0.07%)</title><rect x="208.4" y="261" width="0.9" height="15.0" fill="rgb(239,48,36)" rx="2" ry="2" />
<text  x="211.38" y="271.5" ></text>
</g>
<g >
<title>empty_flat_reader::empty_flat_reader (6 samples, 0.11%)</title><rect x="555.0" y="325" width="1.3" height="15.0" fill="rgb(250,75,8)" rx="2" ry="2" />
<text  x="558.00" y="335.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::list_permissions_statement, std::default_delete&lt;cql3::statements::list_permissions_statement&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="65.8" y="421" width="0.3" height="15.0" fill="rgb(205,165,22)" rx="2" ry="2" />
<text  x="68.84" y="431.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (8 samples, 0.15%)</title><rect x="1052.5" y="373" width="1.7" height="15.0" fill="rgb(223,222,39)" rx="2" ry="2" />
<text  x="1055.49" y="383.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;query::result_memory_limiter::new_data_read (5 samples, 0.09%)</title><rect x="628.1" y="501" width="1.1" height="15.0" fill="rgb(219,145,46)" rx="2" ry="2" />
<text  x="631.14" y="511.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume_in_thread&lt;sstables::sstable_writer, flat_mutation_reader::no_filter&gt; (13 samples, 0.24%)</title><rect x="80.9" y="597" width="2.9" height="15.0" fill="rgb(251,228,47)" rx="2" ry="2" />
<text  x="83.94" y="607.5" ></text>
</g>
<g >
<title>reader_permit::consume (1 samples, 0.02%)</title><rect x="207.9" y="261" width="0.3" height="15.0" fill="rgb(219,182,15)" rx="2" ry="2" />
<text  x="210.94" y="271.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (2 samples, 0.04%)</title><rect x="534.4" y="277" width="0.5" height="15.0" fill="rgb(252,150,33)" rx="2" ry="2" />
<text  x="537.42" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::vector (9 samples, 0.17%)</title><rect x="1100.9" y="453" width="2.0" height="15.0" fill="rgb(253,97,8)" rx="2" ry="2" />
<text  x="1103.88" y="463.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;nonwrapping_interval&lt;dht::ring_position&gt; const, std::default_delete&lt;nonwrapping_interval&lt;dht::ring_position&gt; const&gt; &gt;::~unique_ptr (6 samples, 0.11%)</title><rect x="610.4" y="485" width="1.3" height="15.0" fill="rgb(217,36,22)" rx="2" ry="2" />
<text  x="613.40" y="495.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.06%)</title><rect x="530.3" y="261" width="0.6" height="15.0" fill="rgb(228,131,29)" rx="2" ry="2" />
<text  x="533.26" y="271.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::close (63 samples, 1.17%)</title><rect x="580.0" y="453" width="13.8" height="15.0" fill="rgb(222,128,53)" rx="2" ry="2" />
<text  x="582.96" y="463.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (1 samples, 0.02%)</title><rect x="107.7" y="245" width="0.2" height="15.0" fill="rgb(241,100,30)" rx="2" ry="2" />
<text  x="110.66" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::_M_realloc_insert&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; (2 samples, 0.04%)</title><rect x="49.9" y="341" width="0.4" height="15.0" fill="rgb(254,81,54)" rx="2" ry="2" />
<text  x="52.85" y="351.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::need_filtering (2 samples, 0.04%)</title><rect x="875.6" y="501" width="0.4" height="15.0" fill="rgb(226,163,10)" rx="2" ry="2" />
<text  x="878.57" y="511.5" ></text>
</g>
<g >
<title>ser::mutation_partition__static_row&lt;bytes_ostream&gt;::start_columns (1 samples, 0.02%)</title><rect x="1130.2" y="213" width="0.2" height="15.0" fill="rgb(216,3,32)" rx="2" ry="2" />
<text  x="1133.22" y="223.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::do_get_limit (1 samples, 0.02%)</title><rect x="1094.1" y="469" width="0.2" height="15.0" fill="rgb(232,49,22)" rx="2" ry="2" />
<text  x="1097.09" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, std::_Select1st&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; &gt;, std::less&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; &gt; &gt;::_M_construct_node&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const&amp;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const&amp;&gt; (1 samples, 0.02%)</title><rect x="106.8" y="325" width="0.2" height="15.0" fill="rgb(221,203,10)" rx="2" ry="2" />
<text  x="109.78" y="335.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.02%)</title><rect x="58.2" y="309" width="0.2" height="15.0" fill="rgb(218,161,20)" rx="2" ry="2" />
<text  x="61.17" y="319.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; const*, nonwrapping_interval&lt;clustering_key_prefix&gt;*&gt; (2 samples, 0.04%)</title><rect x="1102.4" y="421" width="0.5" height="15.0" fill="rgb(217,172,44)" rx="2" ry="2" />
<text  x="1105.41" y="431.5" ></text>
</g>
<g >
<title>antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;::InputStream (1 samples, 0.02%)</title><rect x="20.5" y="485" width="0.2" height="15.0" fill="rgb(205,146,14)" rx="2" ry="2" />
<text  x="23.51" y="495.5" ></text>
</g>
<g >
<title>ser::qr_partition__static_row&lt;bytes_ostream&gt;::start_cells (4 samples, 0.07%)</title><rect x="345.9" y="229" width="0.9" height="15.0" fill="rgb(212,40,19)" rx="2" ry="2" />
<text  x="348.89" y="239.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (13 samples, 0.24%)</title><rect x="231.8" y="165" width="2.9" height="15.0" fill="rgb(221,13,7)" rx="2" ry="2" />
<text  x="234.81" y="175.5" ></text>
</g>
<g >
<title>absl::hash_internal::HashState::combine_contiguous (1 samples, 0.02%)</title><rect x="1058.2" y="341" width="0.2" height="15.0" fill="rgb(223,137,28)" rx="2" ry="2" />
<text  x="1061.18" y="351.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql_transport::messages::result_message::rows&gt;::shared_ptr_count_for&lt;cql3::result&gt; (5 samples, 0.09%)</title><rect x="673.2" y="517" width="1.1" height="15.0" fill="rgb(207,228,46)" rx="2" ry="2" />
<text  x="676.24" y="527.5" ></text>
</g>
<g >
<title>managed_bytes::free_chain (1 samples, 0.02%)</title><rect x="1134.4" y="261" width="0.2" height="15.0" fill="rgb(228,209,18)" rx="2" ry="2" />
<text  x="1137.38" y="271.5" ></text>
</g>
<g >
<title>service::storage_proxy_stats::split_stats::get_ep_stat (1 samples, 0.02%)</title><rect x="1047.7" y="357" width="0.2" height="15.0" fill="rgb(217,189,15)" rx="2" ry="2" />
<text  x="1050.67" y="367.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::clear (1 samples, 0.02%)</title><rect x="695.8" y="549" width="0.2" height="15.0" fill="rgb(242,49,5)" rx="2" ry="2" />
<text  x="698.80" y="559.5" ></text>
</g>
<g >
<title>utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::get_or_load&lt;utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (24 samples, 0.45%)</title><rect x="757.1" y="437" width="5.3" height="15.0" fill="rgb(234,168,42)" rx="2" ry="2" />
<text  x="760.11" y="447.5" ></text>
</g>
<g >
<title>auth::permissions_cache::get (1 samples, 0.02%)</title><rect x="77.0" y="405" width="0.2" height="15.0" fill="rgb(211,175,50)" rx="2" ry="2" />
<text  x="80.00" y="415.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate_to_raw_view (96 samples, 1.78%)</title><rect x="885.4" y="421" width="21.0" height="15.0" fill="rgb(219,28,4)" rx="2" ry="2" />
<text  x="888.42" y="431.5" ></text>
</g>
<g >
<title>mutation_reader_merger::maybe_add_readers (43 samples, 0.80%)</title><rect x="467.2" y="357" width="9.4" height="15.0" fill="rgb(253,19,14)" rx="2" ry="2" />
<text  x="470.20" y="367.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::operator= (5 samples, 0.09%)</title><rect x="871.2" y="517" width="1.1" height="15.0" fill="rgb(228,17,11)" rx="2" ry="2" />
<text  x="874.19" y="527.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (1 samples, 0.02%)</title><rect x="24.9" y="373" width="0.2" height="15.0" fill="rgb(226,166,43)" rx="2" ry="2" />
<text  x="27.89" y="383.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="638.9" y="469" width="0.2" height="15.0" fill="rgb(223,219,21)" rx="2" ry="2" />
<text  x="641.87" y="479.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_ba202cd8bdcfd8c6f1dbb280f642f5ad31cbca7c] (1 samples, 0.02%)</title><rect x="934.9" y="405" width="0.2" height="15.0" fill="rgb(209,33,0)" rx="2" ry="2" />
<text  x="937.91" y="415.5" ></text>
</g>
<g >
<title>db::commitlog::segment_manager::allocate_when_possible&lt;db::commitlog::add_entry (5 samples, 0.09%)</title><rect x="1125.0" y="357" width="1.1" height="15.0" fill="rgb(246,111,8)" rx="2" ry="2" />
<text  x="1127.97" y="367.5" ></text>
</g>
<g >
<title>partition_version_ref::operator* (1 samples, 0.02%)</title><rect x="536.6" y="293" width="0.2" height="15.0" fill="rgb(240,57,20)" rx="2" ry="2" />
<text  x="539.61" y="303.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (7 samples, 0.13%)</title><rect x="1088.6" y="421" width="1.6" height="15.0" fill="rgb(230,181,17)" rx="2" ry="2" />
<text  x="1091.62" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;utils::UUID, std::pair&lt;utils::UUID const, unsigned long&gt;, std::allocator&lt;std::pair&lt;utils::UUID const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::operator[] (2 samples, 0.04%)</title><rect x="1125.4" y="325" width="0.4" height="15.0" fill="rgb(218,92,32)" rx="2" ry="2" />
<text  x="1128.41" y="335.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::lru_entry, boost::intrusive::list_node_traits&lt;void*&gt;,  (2 samples, 0.04%)</title><rect x="754.3" y="357" width="0.4" height="15.0" fill="rgb(213,54,6)" rx="2" ry="2" />
<text  x="757.26" y="367.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::truncate_statement, std::default_delete&lt;cql3::statements::truncate_statement&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="67.6" y="437" width="0.2" height="15.0" fill="rgb(236,134,45)" rx="2" ry="2" />
<text  x="70.59" y="447.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="55.1" y="245" width="0.2" height="15.0" fill="rgb(252,24,53)" rx="2" ry="2" />
<text  x="58.11" y="255.5" ></text>
</g>
<g >
<title>database::add_column_family (6 samples, 0.11%)</title><rect x="108.3" y="549" width="1.3" height="15.0" fill="rgb(240,62,36)" rx="2" ry="2" />
<text  x="111.32" y="559.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (2 samples, 0.04%)</title><rect x="792.4" y="277" width="0.4" height="15.0" fill="rgb(249,124,15)" rx="2" ry="2" />
<text  x="795.36" y="287.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_last_fragment_kind, 4ul&gt;::small_vector (1 samples, 0.02%)</title><rect x="485.2" y="341" width="0.2" height="15.0" fill="rgb(205,144,29)" rx="2" ry="2" />
<text  x="488.15" y="351.5" ></text>
</g>
<g >
<title>std::__copy_n_a&lt;legacy_compound_view&lt;compound_type&lt; (1 samples, 0.02%)</title><rect x="862.0" y="389" width="0.2" height="15.0" fill="rgb(220,185,34)" rx="2" ry="2" />
<text  x="864.99" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (5 samples, 0.09%)</title><rect x="855.4" y="485" width="1.1" height="15.0" fill="rgb(247,187,0)" rx="2" ry="2" />
<text  x="858.42" y="495.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::clone (2 samples, 0.04%)</title><rect x="520.2" y="373" width="0.4" height="15.0" fill="rgb(229,26,13)" rx="2" ry="2" />
<text  x="523.19" y="383.5" ></text>
</g>
<g >
<title>std::__lower_bound&lt;__gnu_cxx::__normal_iterator&lt;long*, std::vector&lt;long, std::allocator&lt;long&gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_less_val&gt; (1 samples, 0.02%)</title><rect x="83.6" y="485" width="0.2" height="15.0" fill="rgb(215,54,47)" rx="2" ry="2" />
<text  x="86.57" y="495.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_token (1 samples, 0.02%)</title><rect x="669.5" y="501" width="0.2" height="15.0" fill="rgb(215,169,4)" rx="2" ry="2" />
<text  x="672.52" y="511.5" ></text>
</g>
<g >
<title>bplus::node&lt;long, intrusive_array&lt;cache_entry&gt;, dht::raw_token_less_comparator, 16ul,  (1 samples, 0.02%)</title><rect x="16.8" y="597" width="0.2" height="15.0" fill="rgb(226,179,49)" rx="2" ry="2" />
<text  x="19.79" y="607.5" ></text>
</g>
<g >
<title>memtable::memtable_encoding_stats_collector::update (3 samples, 0.06%)</title><rect x="1119.5" y="293" width="0.7" height="15.0" fill="rgb(238,15,9)" rx="2" ry="2" />
<text  x="1122.49" y="303.5" ></text>
</g>
<g >
<title>reader_permit::impl::on_admission (1 samples, 0.02%)</title><rect x="137.4" y="485" width="0.3" height="15.0" fill="rgb(236,116,6)" rx="2" ry="2" />
<text  x="140.44" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="654.9" y="549" width="0.2" height="15.0" fill="rgb(253,22,19)" rx="2" ry="2" />
<text  x="657.85" y="559.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (1 samples, 0.02%)</title><rect x="101.3" y="501" width="0.2" height="15.0" fill="rgb(217,224,49)" rx="2" ry="2" />
<text  x="104.31" y="511.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (86 samples, 1.60%)</title><rect x="22.0" y="421" width="18.9" height="15.0" fill="rgb(211,132,47)" rx="2" ry="2" />
<text  x="25.04" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.07%)</title><rect x="320.1" y="325" width="0.8" height="15.0" fill="rgb(235,85,53)" rx="2" ry="2" />
<text  x="323.05" y="335.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::size (1 samples, 0.02%)</title><rect x="952.4" y="469" width="0.2" height="15.0" fill="rgb(209,218,8)" rx="2" ry="2" />
<text  x="955.42" y="479.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="1058.4" y="357" width="0.2" height="15.0" fill="rgb(253,209,49)" rx="2" ry="2" />
<text  x="1061.40" y="367.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;, seastar::future&lt;void&gt; &gt;, std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;, seastar::future&lt;void&gt; &gt; &gt; &gt;::~unique_ptr (5 samples, 0.09%)</title><rect x="821.7" y="453" width="1.1" height="15.0" fill="rgb(230,136,45)" rx="2" ry="2" />
<text  x="824.70" y="463.5" ></text>
</g>
<g >
<title>make_flat_mutation_reader&lt;empty_flat_reader, seastar::lw_shared_ptr&lt;schema const&gt;, reader_permit&gt; (13 samples, 0.24%)</title><rect x="554.1" y="357" width="2.9" height="15.0" fill="rgb(225,80,26)" rx="2" ry="2" />
<text  x="557.13" y="367.5" ></text>
</g>
<g >
<title>service::client_state::get_timestamp (2 samples, 0.04%)</title><rect x="1112.7" y="485" width="0.4" height="15.0" fill="rgb(210,179,1)" rx="2" ry="2" />
<text  x="1115.71" y="495.5" ></text>
</g>
<g >
<title>locator::token_metadata_impl::first_token_index (31 samples, 0.58%)</title><rect x="1073.7" y="325" width="6.8" height="15.0" fill="rgb(207,152,26)" rx="2" ry="2" />
<text  x="1076.73" y="335.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;gms::inet_address, std::pair&lt;gms::inet_address const, utils::UUID&gt;, std::allocator&lt;std::pair&lt;gms::inet_address const, utils::UUID&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;gms::inet_address&gt;, std::hash&lt;gms::inet_address&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (5 samples, 0.09%)</title><rect x="1146.2" y="501" width="1.1" height="15.0" fill="rgb(223,58,50)" rx="2" ry="2" />
<text  x="1149.21" y="511.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (1 samples, 0.02%)</title><rect x="671.1" y="533" width="0.2" height="15.0" fill="rgb(231,127,20)" rx="2" ry="2" />
<text  x="674.05" y="543.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.07%)</title><rect x="559.6" y="373" width="0.9" height="15.0" fill="rgb(224,189,26)" rx="2" ry="2" />
<text  x="562.60" y="383.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;service::query_state, false&gt;::make&lt;service::client_state&amp;, service_permit&gt; (8 samples, 0.15%)</title><rect x="842.9" y="485" width="1.8" height="15.0" fill="rgb(231,173,0)" rx="2" ry="2" />
<text  x="845.94" y="495.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::make_ready&lt; (3 samples, 0.06%)</title><rect x="140.7" y="517" width="0.7" height="15.0" fill="rgb(231,132,24)" rx="2" ry="2" />
<text  x="143.72" y="527.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (21 samples, 0.39%)</title><rect x="1129.3" y="309" width="4.6" height="15.0" fill="rgb(250,4,51)" rx="2" ry="2" />
<text  x="1132.35" y="319.5" ></text>
</g>
<g >
<title>cql3::statements::raw::modification_statement::prepare (34 samples, 0.63%)</title><rect x="68.7" y="533" width="7.4" height="15.0" fill="rgb(213,216,16)" rx="2" ry="2" />
<text  x="71.68" y="543.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (2 samples, 0.04%)</title><rect x="591.4" y="357" width="0.4" height="15.0" fill="rgb(238,132,37)" rx="2" ry="2" />
<text  x="594.35" y="367.5" ></text>
</g>
<g >
<title>service::never_speculating_read_executor::~never_speculating_read_executor (1 samples, 0.02%)</title><rect x="1162.2" y="533" width="0.2" height="15.0" fill="rgb(227,156,19)" rx="2" ry="2" />
<text  x="1165.19" y="543.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (2 samples, 0.04%)</title><rect x="44.2" y="373" width="0.4" height="15.0" fill="rgb(213,194,25)" rx="2" ry="2" />
<text  x="47.16" y="383.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.02%)</title><rect x="58.8" y="341" width="0.2" height="15.0" fill="rgb(235,46,4)" rx="2" ry="2" />
<text  x="61.83" y="351.5" ></text>
</g>
<g >
<title>seastar::internal::future_base::future_base (1 samples, 0.02%)</title><rect x="792.8" y="325" width="0.2" height="15.0" fill="rgb(216,130,34)" rx="2" ry="2" />
<text  x="795.80" y="335.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.02%)</title><rect x="50.3" y="197" width="0.2" height="15.0" fill="rgb(223,163,34)" rx="2" ry="2" />
<text  x="53.29" y="207.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (1 samples, 0.02%)</title><rect x="56.9" y="405" width="0.2" height="15.0" fill="rgb(248,180,50)" rx="2" ry="2" />
<text  x="59.86" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.07%)</title><rect x="886.5" y="357" width="0.9" height="15.0" fill="rgb(242,174,48)" rx="2" ry="2" />
<text  x="889.52" y="367.5" ></text>
</g>
<g >
<title>cql3::statements::raw::cf_statement::keyspace (1 samples, 0.02%)</title><rect x="69.3" y="517" width="0.3" height="15.0" fill="rgb(225,120,45)" rx="2" ry="2" />
<text  x="72.34" y="527.5" ></text>
</g>
<g >
<title>ser::serializer&lt;schema_mutations&gt;::write&lt;seastar::measuring_output_stream&gt; (1 samples, 0.02%)</title><rect x="108.5" y="453" width="0.3" height="15.0" fill="rgb(253,26,21)" rx="2" ry="2" />
<text  x="111.53" y="463.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.02%)</title><rect x="44.2" y="341" width="0.2" height="15.0" fill="rgb(233,177,48)" rx="2" ry="2" />
<text  x="47.16" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="598.8" y="405" width="0.2" height="15.0" fill="rgb(207,124,53)" rx="2" ry="2" />
<text  x="601.80" y="415.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_partition_key_ranges (3 samples, 0.06%)</title><rect x="862.0" y="437" width="0.6" height="15.0" fill="rgb(222,80,35)" rx="2" ry="2" />
<text  x="864.99" y="447.5" ></text>
</g>
<g >
<title>utils::crc32::process (1 samples, 0.02%)</title><rect x="1125.8" y="325" width="0.3" height="15.0" fill="rgb(222,167,30)" rx="2" ry="2" />
<text  x="1128.84" y="335.5" ></text>
</g>
<g >
<title>schema::get_column_definition (1 samples, 0.02%)</title><rect x="17.9" y="453" width="0.2" height="15.0" fill="rgb(250,83,49)" rx="2" ry="2" />
<text  x="20.88" y="463.5" ></text>
</g>
<g >
<title>cql3::column_identifier::column_identifier (1 samples, 0.02%)</title><rect x="72.2" y="357" width="0.2" height="15.0" fill="rgb(245,21,37)" rx="2" ry="2" />
<text  x="75.19" y="367.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.02%)</title><rect x="11.8" y="565" width="0.2" height="15.0" fill="rgb(223,161,36)" rx="2" ry="2" />
<text  x="14.75" y="575.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (3 samples, 0.06%)</title><rect x="829.6" y="357" width="0.6" height="15.0" fill="rgb(233,158,35)" rx="2" ry="2" />
<text  x="832.58" y="367.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.02%)</title><rect x="79.4" y="645" width="0.2" height="15.0" fill="rgb(226,187,0)" rx="2" ry="2" />
<text  x="82.41" y="655.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.02%)</title><rect x="45.9" y="325" width="0.2" height="15.0" fill="rgb(236,79,28)" rx="2" ry="2" />
<text  x="48.91" y="335.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.04%)</title><rect x="43.1" y="357" width="0.4" height="15.0" fill="rgb(254,180,3)" rx="2" ry="2" />
<text  x="46.06" y="367.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (4 samples, 0.07%)</title><rect x="1166.1" y="485" width="0.9" height="15.0" fill="rgb(212,121,50)" rx="2" ry="2" />
<text  x="1169.13" y="495.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;std::pair&lt;seastar::shared_ptr&lt;service::abstract_read_executor&gt;, nonwrapping_interval&lt;dht::token&gt; &gt;, 1ul&gt;::emplace_back&lt;seastar::shared_ptr&lt;service::abstract_read_executor&gt;&amp;, nonwrapping_interval&lt;dht::token&gt; &gt; (1 samples, 0.02%)</title><rect x="1090.6" y="421" width="0.2" height="15.0" fill="rgb(229,214,44)" rx="2" ry="2" />
<text  x="1093.59" y="431.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;::operator (1 samples, 0.02%)</title><rect x="742.2" y="405" width="0.2" height="15.0" fill="rgb(219,225,20)" rx="2" ry="2" />
<text  x="745.22" y="415.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (5 samples, 0.09%)</title><rect x="758.6" y="373" width="1.1" height="15.0" fill="rgb(243,76,38)" rx="2" ry="2" />
<text  x="761.64" y="383.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (2 samples, 0.04%)</title><rect x="701.3" y="373" width="0.4" height="15.0" fill="rgb(242,163,10)" rx="2" ry="2" />
<text  x="704.27" y="383.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::operator= (2 samples, 0.04%)</title><rect x="832.9" y="469" width="0.4" height="15.0" fill="rgb(211,66,2)" rx="2" ry="2" />
<text  x="835.87" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;seastar::shared_ptr&lt;cql3::operation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::operation&gt; &gt; &gt;::emplace_back&lt;seastar::shared_ptr&lt;cql3::operation&gt; &gt; (2 samples, 0.04%)</title><rect x="71.7" y="469" width="0.5" height="15.0" fill="rgb(239,205,45)" rx="2" ry="2" />
<text  x="74.75" y="479.5" ></text>
</g>
<g >
<title>std::__apply_impl&lt;seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (35 samples, 0.65%)</title><rect x="1126.9" y="533" width="7.7" height="15.0" fill="rgb(205,214,2)" rx="2" ry="2" />
<text  x="1129.94" y="543.5" ></text>
</g>
<g >
<title>std::__lower_bound&lt;__gnu_cxx::__normal_iterator&lt;long*, std::vector&lt;long, std::allocator&lt;long&gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_less_val&gt; (4 samples, 0.07%)</title><rect x="1157.4" y="517" width="0.9" height="15.0" fill="rgb(217,109,33)" rx="2" ry="2" />
<text  x="1160.37" y="527.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::remove_if&lt;row::compact_and_expire (53 samples, 0.98%)</title><rect x="410.0" y="245" width="11.7" height="15.0" fill="rgb(237,193,32)" rx="2" ry="2" />
<text  x="413.05" y="255.5" ></text>
</g>
<g >
<title>std::apply&lt;service::client_state::has_column_family_access (185 samples, 3.43%)</title><rect x="781.0" y="453" width="40.5" height="15.0" fill="rgb(248,216,46)" rx="2" ry="2" />
<text  x="783.97" y="463.5" >std..</text>
</g>
<g >
<title>seastar::basic_semaphore&lt;seastar::semaphore_default_exception_factory, std::chrono::_V2::steady_clock&gt;::signal (2 samples, 0.04%)</title><rect x="99.3" y="485" width="0.5" height="15.0" fill="rgb(243,1,7)" rx="2" ry="2" />
<text  x="102.34" y="495.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (271 samples, 5.03%)</title><rect x="19.4" y="581" width="59.4" height="15.0" fill="rgb(253,201,46)" rx="2" ry="2" />
<text  x="22.42" y="591.5" >single..</text>
</g>
<g >
<title>mutation_partition::clustered_row (1 samples, 0.02%)</title><rect x="106.6" y="517" width="0.2" height="15.0" fill="rgb(239,59,38)" rx="2" ry="2" />
<text  x="109.56" y="527.5" ></text>
</g>
<g >
<title>ser::qr_partition__rows&lt;bytes_ostream&gt;::add (1 samples, 0.02%)</title><rect x="369.8" y="245" width="0.2" height="15.0" fill="rgb(240,192,46)" rx="2" ry="2" />
<text  x="372.76" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (3 samples, 0.06%)</title><rect x="29.9" y="309" width="0.7" height="15.0" fill="rgb(212,8,13)" rx="2" ry="2" />
<text  x="32.93" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (2 samples, 0.04%)</title><rect x="986.4" y="325" width="0.4" height="15.0" fill="rgb(242,90,51)" rx="2" ry="2" />
<text  x="989.36" y="335.5" ></text>
</g>
<g >
<title>reader_selector::~reader_selector (3 samples, 0.06%)</title><rect x="596.8" y="405" width="0.7" height="15.0" fill="rgb(253,26,26)" rx="2" ry="2" />
<text  x="599.83" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="121.5" y="501" width="0.2" height="15.0" fill="rgb(228,98,7)" rx="2" ry="2" />
<text  x="124.45" y="511.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::bool_class&lt;mutation_reader_merger::needs_merge_tag&gt; &gt;::take_value (1 samples, 0.02%)</title><rect x="188.9" y="325" width="0.2" height="15.0" fill="rgb(251,92,41)" rx="2" ry="2" />
<text  x="191.89" y="335.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;boost::iterator_range&lt;mutation_fragment*&gt; &gt;::take_value (1 samples, 0.02%)</title><rect x="308.2" y="389" width="0.2" height="15.0" fill="rgb(217,174,5)" rx="2" ry="2" />
<text  x="311.23" y="399.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::set_urgent_state (1 samples, 0.02%)</title><rect x="858.0" y="565" width="0.3" height="15.0" fill="rgb(243,180,41)" rx="2" ry="2" />
<text  x="861.05" y="575.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (1 samples, 0.02%)</title><rect x="679.4" y="533" width="0.2" height="15.0" fill="rgb(212,90,37)" rx="2" ry="2" />
<text  x="682.37" y="543.5" ></text>
</g>
<g >
<title>fmt::v7::detail::value&lt;fmt::v7::basic_format_context&lt;fmt::v7::detail::buffer_appender&lt;char&gt;, char&gt; &gt;::format_custom_arg&lt;sstables::formatted_sstables_list, fmt::v7::detail::fallback_formatter&lt;sstables::formatted_sstables_list, char, void&gt; &gt; (1 samples, 0.02%)</title><rect x="80.3" y="661" width="0.2" height="15.0" fill="rgb(214,163,48)" rx="2" ry="2" />
<text  x="83.29" y="671.5" ></text>
</g>
<g >
<title>seastar::reactor::del_timer (1 samples, 0.02%)</title><rect x="722.5" y="469" width="0.2" height="15.0" fill="rgb(216,8,40)" rx="2" ry="2" />
<text  x="725.51" y="479.5" ></text>
</g>
<g >
<title>query::result_set::result_set (1 samples, 0.02%)</title><rect x="108.8" y="453" width="0.2" height="15.0" fill="rgb(211,203,14)" rx="2" ry="2" />
<text  x="111.75" y="463.5" ></text>
</g>
<g >
<title>validation::is_cql_key_invalid (1 samples, 0.02%)</title><rect x="862.6" y="421" width="0.3" height="15.0" fill="rgb(209,219,5)" rx="2" ry="2" />
<text  x="865.65" y="431.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.02%)</title><rect x="592.2" y="373" width="0.2" height="15.0" fill="rgb(234,152,5)" rx="2" ry="2" />
<text  x="595.23" y="383.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (4 samples, 0.07%)</title><rect x="678.1" y="549" width="0.8" height="15.0" fill="rgb(237,101,17)" rx="2" ry="2" />
<text  x="681.06" y="559.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::construct&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; const&amp;&gt; (1 samples, 0.02%)</title><rect x="41.5" y="373" width="0.2" height="15.0" fill="rgb(220,19,22)" rx="2" ry="2" />
<text  x="44.53" y="383.5" ></text>
</g>
<g >
<title>seastar::deferred_action&lt;table::query (10 samples, 0.19%)</title><rect x="623.3" y="501" width="2.2" height="15.0" fill="rgb(248,142,13)" rx="2" ry="2" />
<text  x="626.32" y="511.5" ></text>
</g>
<g >
<title>std::default_delete&lt;mutation::data&gt;::operator (1 samples, 0.02%)</title><rect x="107.0" y="469" width="0.2" height="15.0" fill="rgb(239,116,15)" rx="2" ry="2" />
<text  x="110.00" y="479.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;signed char, std::char_traits&lt;signed char&gt; &gt;::substr (1 samples, 0.02%)</title><rect x="918.3" y="405" width="0.2" height="15.0" fill="rgb(220,20,11)" rx="2" ry="2" />
<text  x="921.26" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value_view, std::allocator&lt;cql3::raw_value_view&gt; &gt;::_M_realloc_insert&lt;cql3::raw_value_view&gt; (1 samples, 0.02%)</title><rect x="851.5" y="453" width="0.2" height="15.0" fill="rgb(229,127,19)" rx="2" ry="2" />
<text  x="854.48" y="463.5" ></text>
</g>
<g >
<title>service::storage_proxy::remove_response_handler_entry (1 samples, 0.02%)</title><rect x="728.6" y="533" width="0.3" height="15.0" fill="rgb(252,205,22)" rx="2" ry="2" />
<text  x="731.64" y="543.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (1 samples, 0.02%)</title><rect x="308.9" y="405" width="0.2" height="15.0" fill="rgb(232,213,28)" rx="2" ry="2" />
<text  x="311.89" y="415.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.02%)</title><rect x="50.3" y="229" width="0.2" height="15.0" fill="rgb(215,217,7)" rx="2" ry="2" />
<text  x="53.29" y="239.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (1 samples, 0.02%)</title><rect x="56.0" y="277" width="0.2" height="15.0" fill="rgb(236,169,30)" rx="2" ry="2" />
<text  x="58.98" y="287.5" ></text>
</g>
<g >
<title>v3_columns::from_v2_schema (1 samples, 0.02%)</title><rect x="109.0" y="405" width="0.2" height="15.0" fill="rgb(233,88,26)" rx="2" ry="2" />
<text  x="111.97" y="415.5" ></text>
</g>
<g >
<title>nonwrapping_interval&lt;clustering_key_prefix&gt;::make_open_ended_both_sides (2 samples, 0.04%)</title><rect x="1103.1" y="469" width="0.4" height="15.0" fill="rgb(215,115,9)" rx="2" ry="2" />
<text  x="1106.07" y="479.5" ></text>
</g>
<g >
<title>cql3::expr::prepare_term (6 samples, 0.11%)</title><rect x="70.2" y="469" width="1.3" height="15.0" fill="rgb(243,97,53)" rx="2" ry="2" />
<text  x="73.22" y="479.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_range_tombstone (1 samples, 0.02%)</title><rect x="218.0" y="293" width="0.2" height="15.0" fill="rgb(208,121,1)" rx="2" ry="2" />
<text  x="221.02" y="303.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (2 samples, 0.04%)</title><rect x="1026.2" y="181" width="0.5" height="15.0" fill="rgb(216,17,0)" rx="2" ry="2" />
<text  x="1029.21" y="191.5" ></text>
</g>
<g >
<title>schema_builder::build (1 samples, 0.02%)</title><rect x="109.0" y="453" width="0.2" height="15.0" fill="rgb(220,151,0)" rx="2" ry="2" />
<text  x="111.97" y="463.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;::basic_sstring (2 samples, 0.04%)</title><rect x="737.0" y="533" width="0.4" height="15.0" fill="rgb(205,88,12)" rx="2" ry="2" />
<text  x="739.96" y="543.5" ></text>
</g>
<g >
<title>__tls_init (5 samples, 0.09%)</title><rect x="552.6" y="341" width="1.1" height="15.0" fill="rgb(238,157,37)" rx="2" ry="2" />
<text  x="555.59" y="351.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::get_token (2 samples, 0.04%)</title><rect x="25.8" y="341" width="0.4" height="15.0" fill="rgb(230,67,17)" rx="2" ry="2" />
<text  x="28.77" y="351.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="44.2" y="325" width="0.2" height="15.0" fill="rgb(240,195,43)" rx="2" ry="2" />
<text  x="47.16" y="335.5" ></text>
</g>
<g >
<title>bound_view::tri_compare::operator (1 samples, 0.02%)</title><rect x="83.4" y="453" width="0.2" height="15.0" fill="rgb(217,225,23)" rx="2" ry="2" />
<text  x="86.35" y="463.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::~impl (5 samples, 0.09%)</title><rect x="594.0" y="437" width="1.1" height="15.0" fill="rgb(243,77,15)" rx="2" ry="2" />
<text  x="596.98" y="447.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;mutation_fragment*&gt;::take_value (1 samples, 0.02%)</title><rect x="450.8" y="469" width="0.2" height="15.0" fill="rgb(233,167,6)" rx="2" ry="2" />
<text  x="453.78" y="479.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;bool  (10 samples, 0.19%)</title><rect x="1168.1" y="581" width="2.2" height="15.0" fill="rgb(223,74,52)" rx="2" ry="2" />
<text  x="1171.10" y="591.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (3 samples, 0.06%)</title><rect x="1091.7" y="437" width="0.6" height="15.0" fill="rgb(209,157,25)" rx="2" ry="2" />
<text  x="1094.68" y="447.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (5 samples, 0.09%)</title><rect x="47.7" y="389" width="1.1" height="15.0" fill="rgb(230,130,23)" rx="2" ry="2" />
<text  x="50.66" y="399.5" ></text>
</g>
<g >
<title>atomic_cell_or_collection::external_memory_usage (1 samples, 0.02%)</title><rect x="256.3" y="181" width="0.3" height="15.0" fill="rgb(208,225,32)" rx="2" ry="2" />
<text  x="259.34" y="191.5" ></text>
</g>
<g >
<title>schema::column_at (5 samples, 0.09%)</title><rect x="366.7" y="245" width="1.1" height="15.0" fill="rgb(233,146,21)" rx="2" ry="2" />
<text  x="369.69" y="255.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (2 samples, 0.04%)</title><rect x="642.6" y="453" width="0.4" height="15.0" fill="rgb(211,181,9)" rx="2" ry="2" />
<text  x="645.59" y="463.5" ></text>
</g>
<g >
<title>mutation_partition::lower_bound (2 samples, 0.04%)</title><rect x="264.7" y="197" width="0.4" height="15.0" fill="rgb(238,40,35)" rx="2" ry="2" />
<text  x="267.66" y="207.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.02%)</title><rect x="44.2" y="293" width="0.2" height="15.0" fill="rgb(214,74,2)" rx="2" ry="2" />
<text  x="47.16" y="303.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::close (2 samples, 0.04%)</title><rect x="606.0" y="469" width="0.5" height="15.0" fill="rgb(251,212,52)" rx="2" ry="2" />
<text  x="609.02" y="479.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::drop_expired_front (2 samples, 0.04%)</title><rect x="128.9" y="469" width="0.4" height="15.0" fill="rgb(239,141,26)" rx="2" ry="2" />
<text  x="131.90" y="479.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (2 samples, 0.04%)</title><rect x="73.1" y="277" width="0.4" height="15.0" fill="rgb(224,118,33)" rx="2" ry="2" />
<text  x="76.06" y="287.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::truncate_statement, std::default_delete&lt;cql3::statements::truncate_statement&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="67.6" y="421" width="0.2" height="15.0" fill="rgb(253,152,16)" rx="2" ry="2" />
<text  x="70.59" y="431.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (1 samples, 0.02%)</title><rect x="109.6" y="485" width="0.2" height="15.0" fill="rgb(223,90,0)" rx="2" ry="2" />
<text  x="112.63" y="495.5" ></text>
</g>
<g >
<title>query::result_set_builder::deserialize (1 samples, 0.02%)</title><rect x="108.8" y="373" width="0.2" height="15.0" fill="rgb(247,164,37)" rx="2" ry="2" />
<text  x="111.75" y="383.5" ></text>
</g>
<g >
<title>bound_view::from_range_start&lt;nonwrapping_interval&gt; (2 samples, 0.04%)</title><rect x="288.3" y="245" width="0.4" height="15.0" fill="rgb(206,10,38)" rx="2" ry="2" />
<text  x="291.30" y="255.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (1 samples, 0.02%)</title><rect x="438.5" y="309" width="0.2" height="15.0" fill="rgb(245,62,50)" rx="2" ry="2" />
<text  x="441.51" y="319.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;, seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::finally_body&lt;seastar::smp::submit_to&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (1 samples, 0.02%)</title><rect x="85.3" y="581" width="0.2" height="15.0" fill="rgb(217,84,8)" rx="2" ry="2" />
<text  x="88.32" y="591.5" ></text>
</g>
<g >
<title>std::forward_as_tuple&lt;std::optional&lt;auth::resource&gt;, service::client_state::check_has_permission (1 samples, 0.02%)</title><rect x="77.2" y="453" width="0.2" height="15.0" fill="rgb(220,44,12)" rx="2" ry="2" />
<text  x="80.22" y="463.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate (2 samples, 0.04%)</title><rect x="860.5" y="437" width="0.4" height="15.0" fill="rgb(219,180,7)" rx="2" ry="2" />
<text  x="863.46" y="447.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;boost::range_detail::integer_iterator&lt;unsigned int&gt;, std::function&lt;seastar::future&lt;void&gt;  (1 samples, 0.02%)</title><rect x="703.5" y="501" width="0.2" height="15.0" fill="rgb(238,227,12)" rx="2" ry="2" />
<text  x="706.46" y="511.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::fetch (3 samples, 0.06%)</title><rect x="859.1" y="533" width="0.7" height="15.0" fill="rgb(235,140,23)" rx="2" ry="2" />
<text  x="862.14" y="543.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (2 samples, 0.04%)</title><rect x="692.1" y="501" width="0.4" height="15.0" fill="rgb(205,48,21)" rx="2" ry="2" />
<text  x="695.07" y="511.5" ></text>
</g>
<g >
<title>partition_snapshot::version_count (3 samples, 0.06%)</title><rect x="274.1" y="197" width="0.6" height="15.0" fill="rgb(222,6,21)" rx="2" ry="2" />
<text  x="277.07" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt;::emplace_back&lt;seastar::lw_shared_ptr&lt;schema const&gt; const&amp;, partition_key const&gt; (1 samples, 0.02%)</title><rect x="865.3" y="421" width="0.2" height="15.0" fill="rgb(238,84,15)" rx="2" ry="2" />
<text  x="868.28" y="431.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_state&lt;std::tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;, seastar::future&lt;void&gt; &gt;::do_with_state&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const&amp;, auth::resource&gt; (9 samples, 0.17%)</title><rect x="776.6" y="437" width="2.0" height="15.0" fill="rgb(253,73,29)" rx="2" ry="2" />
<text  x="779.59" y="447.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.02%)</title><rect x="56.4" y="341" width="0.2" height="15.0" fill="rgb(228,172,27)" rx="2" ry="2" />
<text  x="59.42" y="351.5" ></text>
</g>
<g >
<title>bplus::searcher&lt;dht::ring_position, long, dht::raw_token_less_comparator, 16ul,  (8 samples, 0.15%)</title><rect x="548.9" y="341" width="1.7" height="15.0" fill="rgb(215,41,34)" rx="2" ry="2" />
<text  x="551.87" y="351.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.02%)</title><rect x="11.8" y="533" width="0.2" height="15.0" fill="rgb(219,152,41)" rx="2" ry="2" />
<text  x="14.75" y="543.5" ></text>
</g>
<g >
<title>cql3::column_identifier_raw::prepare_column_identifier (1 samples, 0.02%)</title><rect x="69.8" y="485" width="0.2" height="15.0" fill="rgb(237,94,46)" rx="2" ry="2" />
<text  x="72.78" y="495.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::lower_bound&lt;mutation_partition, schema const&amp;, nonwrapping_interval&lt;clustering_key_prefix&gt; const&amp;&gt; (3 samples, 0.06%)</title><rect x="264.4" y="213" width="0.7" height="15.0" fill="rgb(225,139,36)" rx="2" ry="2" />
<text  x="267.44" y="223.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;10ul, cql3::expr::untyped_constant&gt; (3 samples, 0.06%)</title><rect x="53.1" y="165" width="0.7" height="15.0" fill="rgb(249,151,18)" rx="2" ry="2" />
<text  x="56.14" y="175.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (3 samples, 0.06%)</title><rect x="807.2" y="277" width="0.7" height="15.0" fill="rgb(209,55,22)" rx="2" ry="2" />
<text  x="810.25" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.04%)</title><rect x="785.6" y="357" width="0.4" height="15.0" fill="rgb(217,86,44)" rx="2" ry="2" />
<text  x="788.57" y="367.5" ></text>
</g>
<g >
<title>free (1 samples, 0.02%)</title><rect x="1134.2" y="229" width="0.2" height="15.0" fill="rgb(216,212,3)" rx="2" ry="2" />
<text  x="1137.16" y="239.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="594.9" y="405" width="0.2" height="15.0" fill="rgb(229,163,38)" rx="2" ry="2" />
<text  x="597.85" y="415.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_S_construct&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (2 samples, 0.04%)</title><rect x="23.6" y="309" width="0.4" height="15.0" fill="rgb(227,80,31)" rx="2" ry="2" />
<text  x="26.58" y="319.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="59.0" y="325" width="0.3" height="15.0" fill="rgb(209,36,22)" rx="2" ry="2" />
<text  x="62.05" y="335.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql3::restrictions::single_column_restrictions&gt;::~shared_ptr_count_for (1 samples, 0.02%)</title><rect x="664.3" y="485" width="0.2" height="15.0" fill="rgb(231,198,52)" rx="2" ry="2" />
<text  x="667.27" y="495.5" ></text>
</g>
<g >
<title>cql3::get_cql3_kind (1 samples, 0.02%)</title><rect x="71.1" y="421" width="0.2" height="15.0" fill="rgb(225,195,42)" rx="2" ry="2" />
<text  x="74.09" y="431.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="692.7" y="549" width="0.3" height="15.0" fill="rgb(240,203,53)" rx="2" ry="2" />
<text  x="695.73" y="559.5" ></text>
</g>
<g >
<title>ser::query_result__partitions&lt;bytes_ostream&gt;::add (5 samples, 0.09%)</title><rect x="352.5" y="245" width="1.1" height="15.0" fill="rgb(230,186,26)" rx="2" ry="2" />
<text  x="355.46" y="255.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.02%)</title><rect x="44.4" y="325" width="0.2" height="15.0" fill="rgb(226,61,3)" rx="2" ry="2" />
<text  x="47.38" y="335.5" ></text>
</g>
<g >
<title>db::schema_tables::calculate_schema_digest (3 samples, 0.06%)</title><rect x="107.4" y="533" width="0.7" height="15.0" fill="rgb(217,178,17)" rx="2" ry="2" />
<text  x="110.44" y="543.5" ></text>
</g>
<g >
<title>cql3::constants::value::value (1 samples, 0.02%)</title><rect x="71.3" y="421" width="0.2" height="15.0" fill="rgb(235,179,32)" rx="2" ry="2" />
<text  x="74.31" y="431.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (1 samples, 0.02%)</title><rect x="158.0" y="501" width="0.2" height="15.0" fill="rgb(207,65,32)" rx="2" ry="2" />
<text  x="161.02" y="511.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (1 samples, 0.02%)</title><rect x="112.5" y="549" width="0.2" height="15.0" fill="rgb(242,68,3)" rx="2" ry="2" />
<text  x="115.48" y="559.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.07%)</title><rect x="559.6" y="389" width="0.9" height="15.0" fill="rgb(234,99,30)" rx="2" ry="2" />
<text  x="562.60" y="399.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (2 samples, 0.04%)</title><rect x="684.4" y="533" width="0.4" height="15.0" fill="rgb(249,147,52)" rx="2" ry="2" />
<text  x="687.41" y="543.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.04%)</title><rect x="48.3" y="293" width="0.5" height="15.0" fill="rgb(240,184,31)" rx="2" ry="2" />
<text  x="51.32" y="303.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (218 samples, 4.05%)</title><rect x="219.3" y="261" width="47.8" height="15.0" fill="rgb(225,163,19)" rx="2" ry="2" />
<text  x="222.33" y="271.5" >part..</text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (1 samples, 0.02%)</title><rect x="811.4" y="341" width="0.2" height="15.0" fill="rgb(226,153,28)" rx="2" ry="2" />
<text  x="814.41" y="351.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::clear (2 samples, 0.04%)</title><rect x="140.1" y="517" width="0.4" height="15.0" fill="rgb(213,216,43)" rx="2" ry="2" />
<text  x="143.06" y="527.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::visit&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (33 samples, 0.61%)</title><rect x="428.7" y="293" width="7.2" height="15.0" fill="rgb(221,198,38)" rx="2" ry="2" />
<text  x="431.66" y="303.5" ></text>
</g>
<g >
<title>[unknown] (7 samples, 0.13%)</title><rect x="10.4" y="677" width="1.6" height="15.0" fill="rgb(244,131,16)" rx="2" ry="2" />
<text  x="13.44" y="687.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.02%)</title><rect x="698.2" y="549" width="0.2" height="15.0" fill="rgb(220,6,15)" rx="2" ry="2" />
<text  x="701.21" y="559.5" ></text>
</g>
<g >
<title>partition_entry::partition_entry (1 samples, 0.02%)</title><rect x="84.0" y="581" width="0.2" height="15.0" fill="rgb(239,208,9)" rx="2" ry="2" />
<text  x="87.01" y="591.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (2 samples, 0.04%)</title><rect x="321.6" y="389" width="0.4" height="15.0" fill="rgb(246,102,50)" rx="2" ry="2" />
<text  x="324.59" y="399.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.02%)</title><rect x="653.1" y="549" width="0.2" height="15.0" fill="rgb(209,227,16)" rx="2" ry="2" />
<text  x="656.10" y="559.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.02%)</title><rect x="1143.8" y="549" width="0.2" height="15.0" fill="rgb(235,101,44)" rx="2" ry="2" />
<text  x="1146.80" y="559.5" ></text>
</g>
<g >
<title>seastar::reactor::add_timer (2 samples, 0.04%)</title><rect x="992.1" y="341" width="0.4" height="15.0" fill="rgb(206,123,30)" rx="2" ry="2" />
<text  x="995.06" y="351.5" ></text>
</g>
<g >
<title>antlr3::IntStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::consume (1 samples, 0.02%)</title><rect x="37.6" y="293" width="0.2" height="15.0" fill="rgb(231,188,2)" rx="2" ry="2" />
<text  x="40.59" y="303.5" ></text>
</g>
<g >
<title>std::function&lt;seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (2 samples, 0.04%)</title><rect x="794.8" y="277" width="0.4" height="15.0" fill="rgb(237,83,23)" rx="2" ry="2" />
<text  x="797.77" y="287.5" ></text>
</g>
<g >
<title>database::shard_of (1 samples, 0.02%)</title><rect x="1128.5" y="245" width="0.2" height="15.0" fill="rgb(251,203,11)" rx="2" ry="2" />
<text  x="1131.47" y="255.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::cql_statement&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="833.5" y="485" width="0.2" height="15.0" fill="rgb(236,202,52)" rx="2" ry="2" />
<text  x="836.53" y="495.5" ></text>
</g>
<g >
<title>seastar::get_units&lt;db::commitlog::segment_manager::request_controller_timeout_exception_factory, seastar::lowres_clock&gt; (1 samples, 0.02%)</title><rect x="1126.1" y="357" width="0.2" height="15.0" fill="rgb(235,229,14)" rx="2" ry="2" />
<text  x="1129.06" y="367.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.02%)</title><rect x="58.6" y="261" width="0.2" height="15.0" fill="rgb(225,19,40)" rx="2" ry="2" />
<text  x="61.61" y="271.5" ></text>
</g>
<g >
<title>single_node_cql_env::do_with (1 samples, 0.02%)</title><rect x="11.1" y="613" width="0.2" height="15.0" fill="rgb(235,161,28)" rx="2" ry="2" />
<text  x="14.09" y="623.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (6 samples, 0.11%)</title><rect x="95.2" y="549" width="1.3" height="15.0" fill="rgb(234,207,9)" rx="2" ry="2" />
<text  x="98.18" y="559.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::execute (7 samples, 0.13%)</title><rect x="765.0" y="469" width="1.5" height="15.0" fill="rgb(252,104,32)" rx="2" ry="2" />
<text  x="767.99" y="479.5" ></text>
</g>
<g >
<title>_ZSt5applyIZN7seastar8internal12do_with_implIN4auth17role_or_anonymousEZNS3_15get_permissionsERKNS3_7serviceERKNS3_18authenticated_userERKNS3_8resourceEE3$_9JEEEDaOT_OT0_DpOT1_EUlDpOT_E_St5tupleIJOS4_EEEDcSG_SI_ (9 samples, 0.17%)</title><rect x="789.3" y="357" width="2.0" height="15.0" fill="rgb(221,53,51)" rx="2" ry="2" />
<text  x="792.29" y="367.5" ></text>
</g>
<g >
<title>partition_entry::partition_entry (1 samples, 0.02%)</title><rect x="1118.6" y="197" width="0.2" height="15.0" fill="rgb(253,5,15)" rx="2" ry="2" />
<text  x="1121.62" y="207.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (1 samples, 0.02%)</title><rect x="354.7" y="245" width="0.2" height="15.0" fill="rgb(228,128,27)" rx="2" ry="2" />
<text  x="357.65" y="255.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (1 samples, 0.02%)</title><rect x="1114.5" y="485" width="0.2" height="15.0" fill="rgb(253,205,46)" rx="2" ry="2" />
<text  x="1117.46" y="495.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (3 samples, 0.06%)</title><rect x="514.9" y="245" width="0.7" height="15.0" fill="rgb(205,3,30)" rx="2" ry="2" />
<text  x="517.93" y="255.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;void&gt;::set_urgent_state (3 samples, 0.06%)</title><rect x="858.3" y="565" width="0.6" height="15.0" fill="rgb(231,84,44)" rx="2" ry="2" />
<text  x="861.27" y="575.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;nonwrapping_interval&lt;dht::ring_position&gt; const*, nonwrapping_interval&lt;dht::ring_position&gt;*&gt; (5 samples, 0.09%)</title><rect x="1044.6" y="309" width="1.1" height="15.0" fill="rgb(251,161,31)" rx="2" ry="2" />
<text  x="1047.61" y="319.5" ></text>
</g>
<g >
<title>flush_reader::fill_buffer (1 samples, 0.02%)</title><rect x="79.4" y="549" width="0.2" height="15.0" fill="rgb(225,224,27)" rx="2" ry="2" />
<text  x="82.41" y="559.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;compact_mutation_state&lt; (13 samples, 0.24%)</title><rect x="637.8" y="485" width="2.8" height="15.0" fill="rgb(242,211,54)" rx="2" ry="2" />
<text  x="640.77" y="495.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.02%)</title><rect x="347.4" y="229" width="0.2" height="15.0" fill="rgb(232,31,45)" rx="2" ry="2" />
<text  x="350.42" y="239.5" ></text>
</g>
<g >
<title>visit&lt;(anonymous namespace)::from_string_visitor&gt; (3 samples, 0.06%)</title><rect x="70.2" y="421" width="0.7" height="15.0" fill="rgb(249,62,21)" rx="2" ry="2" />
<text  x="73.22" y="431.5" ></text>
</g>
<g >
<title>operator delete (5 samples, 0.09%)</title><rect x="907.8" y="421" width="1.0" height="15.0" fill="rgb(220,17,39)" rx="2" ry="2" />
<text  x="910.75" y="431.5" ></text>
</g>
<g >
<title>std::tuple&lt;cql3::statements::revoke_role_statement*, std::default_delete&lt;cql3::statements::revoke_role_statement&gt; &gt;::tuple&lt;true, true&gt; (1 samples, 0.02%)</title><rect x="67.4" y="405" width="0.2" height="15.0" fill="rgb(245,165,32)" rx="2" ry="2" />
<text  x="70.37" y="415.5" ></text>
</g>
<g >
<title>__tls_init (1 samples, 0.02%)</title><rect x="528.1" y="293" width="0.2" height="15.0" fill="rgb(254,54,9)" rx="2" ry="2" />
<text  x="531.07" y="303.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (1 samples, 0.02%)</title><rect x="780.5" y="421" width="0.3" height="15.0" fill="rgb(229,167,7)" rx="2" ry="2" />
<text  x="783.54" y="431.5" ></text>
</g>
<g >
<title>libat_store_16_i1 (1 samples, 0.02%)</title><rect x="728.0" y="549" width="0.2" height="15.0" fill="rgb(214,92,28)" rx="2" ry="2" />
<text  x="730.98" y="559.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;table&gt;::make&lt;seastar::lw_shared_ptr&lt;schema const&gt;&amp;, table::config, db::commitlog&amp;, compaction_manager&amp;, cell_locker_stats&amp;, cache_tracker&amp;&gt; (1 samples, 0.02%)</title><rect x="109.4" y="533" width="0.2" height="15.0" fill="rgb(220,152,25)" rx="2" ry="2" />
<text  x="112.41" y="543.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (2 samples, 0.04%)</title><rect x="562.9" y="453" width="0.4" height="15.0" fill="rgb(205,166,41)" rx="2" ry="2" />
<text  x="565.89" y="463.5" ></text>
</g>
<g >
<title>table::do_apply&lt;frozen_mutation const&amp;, seastar::lw_shared_ptr&lt;schema const&gt; const&amp;&gt; (33 samples, 0.61%)</title><rect x="1117.7" y="341" width="7.3" height="15.0" fill="rgb(233,181,8)" rx="2" ry="2" />
<text  x="1120.74" y="351.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::clone&lt;row::row (1 samples, 0.02%)</title><rect x="81.4" y="309" width="0.2" height="15.0" fill="rgb(212,157,5)" rx="2" ry="2" />
<text  x="84.38" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (2 samples, 0.04%)</title><rect x="1110.3" y="437" width="0.4" height="15.0" fill="rgb(212,136,27)" rx="2" ry="2" />
<text  x="1113.30" y="447.5" ></text>
</g>
<g >
<title>db::schema_tables::read_schema_partition_for_table (1 samples, 0.02%)</title><rect x="108.1" y="533" width="0.2" height="15.0" fill="rgb(229,165,1)" rx="2" ry="2" />
<text  x="111.10" y="543.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::clear (2 samples, 0.04%)</title><rect x="816.9" y="341" width="0.4" height="15.0" fill="rgb(217,43,42)" rx="2" ry="2" />
<text  x="819.88" y="351.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment (13 samples, 0.24%)</title><rect x="210.6" y="293" width="2.8" height="15.0" fill="rgb(243,161,34)" rx="2" ry="2" />
<text  x="213.57" y="303.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::then_wrapped_common&lt;true, void, service::abstract_read_executor::make_data_requests (18 samples, 0.33%)</title><rect x="994.0" y="373" width="4.0" height="15.0" fill="rgb(242,100,26)" rx="2" ry="2" />
<text  x="997.03" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (1 samples, 0.02%)</title><rect x="700.6" y="549" width="0.2" height="15.0" fill="rgb(205,26,18)" rx="2" ry="2" />
<text  x="703.61" y="559.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.02%)</title><rect x="59.0" y="213" width="0.3" height="15.0" fill="rgb(228,5,3)" rx="2" ry="2" />
<text  x="62.05" y="223.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, cql3::operation::raw_update*, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="50.1" y="149" width="0.2" height="15.0" fill="rgb(219,22,40)" rx="2" ry="2" />
<text  x="53.07" y="159.5" ></text>
</g>
<g >
<title>mutation_reader_merger::mutation_reader_merger (1 samples, 0.02%)</title><rect x="485.8" y="389" width="0.2" height="15.0" fill="rgb(228,205,52)" rx="2" ry="2" />
<text  x="488.81" y="399.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (1 samples, 0.02%)</title><rect x="106.6" y="501" width="0.2" height="15.0" fill="rgb(224,52,14)" rx="2" ry="2" />
<text  x="109.56" y="511.5" ></text>
</g>
<g >
<title>managed_bytes::external_memory_usage (2 samples, 0.04%)</title><rect x="531.1" y="277" width="0.5" height="15.0" fill="rgb(252,180,25)" rx="2" ry="2" />
<text  x="534.14" y="287.5" ></text>
</g>
<g >
<title>seastar::internal::awaiter&lt;query::result_memory_accounter&gt;::awaiter (1 samples, 0.02%)</title><rect x="631.0" y="501" width="0.2" height="15.0" fill="rgb(243,114,36)" rx="2" ry="2" />
<text  x="633.98" y="511.5" ></text>
</g>
<g >
<title>__strlen_avx2 (13 samples, 0.24%)</title><rect x="1013.5" y="309" width="2.9" height="15.0" fill="rgb(230,172,15)" rx="2" ry="2" />
<text  x="1016.51" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::stats (1 samples, 0.02%)</title><rect x="859.4" y="437" width="0.2" height="15.0" fill="rgb(211,58,41)" rx="2" ry="2" />
<text  x="862.36" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (5 samples, 0.09%)</title><rect x="1018.1" y="277" width="1.1" height="15.0" fill="rgb(253,20,24)" rx="2" ry="2" />
<text  x="1021.11" y="287.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (1 samples, 0.02%)</title><rect x="821.3" y="325" width="0.2" height="15.0" fill="rgb(205,94,6)" rx="2" ry="2" />
<text  x="824.26" y="335.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (1 samples, 0.02%)</title><rect x="337.8" y="261" width="0.2" height="15.0" fill="rgb(207,136,12)" rx="2" ry="2" />
<text  x="340.79" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="672.8" y="501" width="0.2" height="15.0" fill="rgb(208,59,9)" rx="2" ry="2" />
<text  x="675.81" y="511.5" ></text>
</g>
<g >
<title>service::storage_proxy::create_write_response_handler_helper (4 samples, 0.07%)</title><rect x="1132.9" y="277" width="0.8" height="15.0" fill="rgb(207,205,49)" rx="2" ry="2" />
<text  x="1135.85" y="287.5" ></text>
</g>
<g >
<title>partition_snapshot::partition_tombstone (1 samples, 0.02%)</title><rect x="535.1" y="309" width="0.2" height="15.0" fill="rgb(208,184,11)" rx="2" ry="2" />
<text  x="538.08" y="319.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; const, column_definition const*&gt;, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; const, column_definition const*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;, std::hash&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (1 samples, 0.02%)</title><rect x="17.9" y="437" width="0.2" height="15.0" fill="rgb(250,65,41)" rx="2" ry="2" />
<text  x="20.88" y="447.5" ></text>
</g>
<g >
<title>ser::writer_of_qr_partition&lt;bytes_ostream&gt;::skip_key (1 samples, 0.02%)</title><rect x="349.4" y="229" width="0.2" height="15.0" fill="rgb(220,118,53)" rx="2" ry="2" />
<text  x="352.40" y="239.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;seastar::file_impl&gt; &gt;, seastar::reactor::open_directory (1 samples, 0.02%)</title><rect x="692.7" y="565" width="0.3" height="15.0" fill="rgb(205,93,46)" rx="2" ry="2" />
<text  x="695.73" y="575.5" ></text>
</g>
<g >
<title>cql3::column_identifier::column_identifier (1 samples, 0.02%)</title><rect x="107.2" y="373" width="0.2" height="15.0" fill="rgb(247,221,11)" rx="2" ry="2" />
<text  x="110.22" y="383.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::entry::entry (1 samples, 0.02%)</title><rect x="1029.9" y="277" width="0.3" height="15.0" fill="rgb(245,98,32)" rx="2" ry="2" />
<text  x="1032.94" y="287.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (2 samples, 0.04%)</title><rect x="1035.2" y="325" width="0.4" height="15.0" fill="rgb(212,162,36)" rx="2" ry="2" />
<text  x="1038.19" y="335.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::revoke_role_statement, std::default_delete&lt;cql3::statements::revoke_role_statement&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="68.5" y="453" width="0.2" height="15.0" fill="rgb(229,14,22)" rx="2" ry="2" />
<text  x="71.46" y="463.5" ></text>
</g>
<g >
<title>bplus::tree&lt;long, intrusive_array&lt;cache_entry&gt;, dht::raw_token_less_comparator, 16ul,  (1 samples, 0.02%)</title><rect x="16.8" y="613" width="0.2" height="15.0" fill="rgb(225,110,24)" rx="2" ry="2" />
<text  x="19.79" y="623.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (2 samples, 0.04%)</title><rect x="46.3" y="277" width="0.5" height="15.0" fill="rgb(205,14,30)" rx="2" ry="2" />
<text  x="49.35" y="287.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::maybe_decay_reserve (1 samples, 0.02%)</title><rect x="11.8" y="517" width="0.2" height="15.0" fill="rgb(205,65,24)" rx="2" ry="2" />
<text  x="14.75" y="527.5" ></text>
</g>
<g >
<title>boost::range_detail::default_constructible_unary_fn_wrapper&lt;service::abstract_write_response_handler::max_backlog (1 samples, 0.02%)</title><rect x="728.4" y="469" width="0.2" height="15.0" fill="rgb(225,53,20)" rx="2" ry="2" />
<text  x="731.42" y="479.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::then_wrapped_common&lt;false, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (9 samples, 0.17%)</title><rect x="834.2" y="485" width="2.0" height="15.0" fill="rgb(207,121,52)" rx="2" ry="2" />
<text  x="837.18" y="495.5" ></text>
</g>
<g >
<title>antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;::RecognizerSharedStateType&lt;antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::RecognizerSharedStateType (1 samples, 0.02%)</title><rect x="20.9" y="421" width="0.3" height="15.0" fill="rgb(237,115,27)" rx="2" ry="2" />
<text  x="23.95" y="431.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (3 samples, 0.06%)</title><rect x="48.8" y="373" width="0.6" height="15.0" fill="rgb(221,127,38)" rx="2" ry="2" />
<text  x="51.76" y="383.5" ></text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::EqualElement&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt;&amp;&gt; (1 samples, 0.02%)</title><rect x="824.1" y="389" width="0.2" height="15.0" fill="rgb(223,204,27)" rx="2" ry="2" />
<text  x="827.11" y="399.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_one (24 samples, 0.45%)</title><rect x="192.8" y="325" width="5.3" height="15.0" fill="rgb(230,201,26)" rx="2" ry="2" />
<text  x="195.84" y="335.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::maybe_refresh_state (13 samples, 0.24%)</title><rect x="262.9" y="245" width="2.9" height="15.0" fill="rgb(223,162,40)" rx="2" ry="2" />
<text  x="265.90" y="255.5" ></text>
</g>
<g >
<title>ser::idl::serializers::internal::vector_serializer&lt;utils::chunked_vector&lt;ser::deletable_row_view, 131072ul&gt; &gt;::read&lt;seastar::simple_memory_input_stream&gt; (2 samples, 0.04%)</title><rect x="1123.4" y="277" width="0.5" height="15.0" fill="rgb(206,106,30)" rx="2" ry="2" />
<text  x="1126.43" y="287.5" ></text>
</g>
<g >
<title>service::abstract_write_response_handler::apply_locally (2 samples, 0.04%)</title><rect x="1128.3" y="309" width="0.4" height="15.0" fill="rgb(244,168,38)" rx="2" ry="2" />
<text  x="1131.25" y="319.5" ></text>
</g>
<g >
<title>gms::gossiper::run (1 samples, 0.02%)</title><rect x="1168.3" y="549" width="0.2" height="15.0" fill="rgb(246,182,33)" rx="2" ry="2" />
<text  x="1171.32" y="559.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (3 samples, 0.06%)</title><rect x="798.5" y="213" width="0.6" height="15.0" fill="rgb(216,133,10)" rx="2" ry="2" />
<text  x="801.49" y="223.5" ></text>
</g>
<g >
<title>mutation_fragment::operator= (2 samples, 0.04%)</title><rect x="193.9" y="309" width="0.5" height="15.0" fill="rgb(254,177,44)" rx="2" ry="2" />
<text  x="196.93" y="319.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_internal (1 samples, 0.02%)</title><rect x="11.1" y="469" width="0.2" height="15.0" fill="rgb(208,60,17)" rx="2" ry="2" />
<text  x="14.09" y="479.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, cql3::expr::expression::impl*, false&gt;::_M_head (1 samples, 0.02%)</title><rect x="54.0" y="213" width="0.2" height="15.0" fill="rgb(234,216,13)" rx="2" ry="2" />
<text  x="57.01" y="223.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::clear (4 samples, 0.07%)</title><rect x="1135.3" y="549" width="0.8" height="15.0" fill="rgb(230,56,33)" rx="2" ry="2" />
<text  x="1138.26" y="559.5" ></text>
</g>
<g >
<title>auth::permissions_cache::get (91 samples, 1.69%)</title><rect x="791.5" y="341" width="19.9" height="15.0" fill="rgb(220,206,6)" rx="2" ry="2" />
<text  x="794.48" y="351.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_nodes (13 samples, 0.24%)</title><rect x="679.6" y="517" width="2.8" height="15.0" fill="rgb(245,125,26)" rx="2" ry="2" />
<text  x="682.59" y="527.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (10 samples, 0.19%)</title><rect x="205.5" y="277" width="2.2" height="15.0" fill="rgb(233,125,32)" rx="2" ry="2" />
<text  x="208.54" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (4 samples, 0.07%)</title><rect x="577.3" y="485" width="0.9" height="15.0" fill="rgb(209,36,50)" rx="2" ry="2" />
<text  x="580.34" y="495.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="639.7" y="453" width="0.3" height="15.0" fill="rgb(212,30,14)" rx="2" ry="2" />
<text  x="642.74" y="463.5" ></text>
</g>
<g >
<title>db::system_distributed_keyspace::insert_cdc_generation (1 samples, 0.02%)</title><rect x="17.9" y="501" width="0.2" height="15.0" fill="rgb(215,167,52)" rx="2" ry="2" />
<text  x="20.88" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_M_range_initialize&lt;boost::iterators::transform_iterator&lt;boost::range_detail::select_second_mutable&lt;std::unordered_map&lt;column_definition const*, cql3::expr::expression, std::hash&lt;column_definition const*&gt;, std::equal_to&lt;column_definition const*&gt;, std::allocator&lt;std::pair&lt;column_definition const* const, cql3::expr::expression&gt; &gt; &gt; &gt;, std::__detail::_Node_iterator&lt;std::pair&lt;column_definition const* const, cql3::expr::expression&gt;, false, false&gt;, boost::use_default, boost::use_default&gt; &gt; (1 samples, 0.02%)</title><rect x="74.4" y="437" width="0.2" height="15.0" fill="rgb(235,182,12)" rx="2" ry="2" />
<text  x="77.38" y="447.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::timer (4 samples, 0.07%)</title><rect x="1024.7" y="213" width="0.9" height="15.0" fill="rgb(238,71,12)" rx="2" ry="2" />
<text  x="1027.68" y="223.5" ></text>
</g>
<g >
<title>std::move&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;&amp;&gt; (1 samples, 0.02%)</title><rect x="56.6" y="373" width="0.3" height="15.0" fill="rgb(218,47,34)" rx="2" ry="2" />
<text  x="59.64" y="383.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::get_mutations (24 samples, 0.45%)</title><rect x="860.9" y="469" width="5.3" height="15.0" fill="rgb(222,65,31)" rx="2" ry="2" />
<text  x="863.90" y="479.5" ></text>
</g>
<g >
<title>partition_snapshot::partition_tombstone (5 samples, 0.09%)</title><rect x="535.3" y="293" width="1.1" height="15.0" fill="rgb(220,159,15)" rx="2" ry="2" />
<text  x="538.30" y="303.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_Optional_payload_base (1 samples, 0.02%)</title><rect x="1040.4" y="325" width="0.3" height="15.0" fill="rgb(212,157,27)" rx="2" ry="2" />
<text  x="1043.45" y="335.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (1,286 samples, 23.86%)</title><rect x="169.6" y="485" width="281.6" height="15.0" fill="rgb(219,103,15)" rx="2" ry="2" />
<text  x="172.63" y="495.5" >query::consume_page&lt;</text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="305.2" y="357" width="0.2" height="15.0" fill="rgb(206,125,49)" rx="2" ry="2" />
<text  x="308.16" y="367.5" ></text>
</g>
<g >
<title>seastar::reactor::add_timer (1 samples, 0.02%)</title><rect x="1024.5" y="213" width="0.2" height="15.0" fill="rgb(220,3,17)" rx="2" ry="2" />
<text  x="1027.46" y="223.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;void&gt;::satisfy_with_result_of&lt;seastar::future&lt;service::digest_read_result&gt;::then_wrapped_nrvo&lt;void, service::abstract_read_executor::execute (25 samples, 0.46%)</title><rect x="706.3" y="549" width="5.5" height="15.0" fill="rgb(217,194,25)" rx="2" ry="2" />
<text  x="709.31" y="559.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::allocate_large_and_trim (1 samples, 0.02%)</title><rect x="701.1" y="437" width="0.2" height="15.0" fill="rgb(242,117,48)" rx="2" ry="2" />
<text  x="704.05" y="447.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.02%)</title><rect x="79.4" y="309" width="0.2" height="15.0" fill="rgb(243,69,26)" rx="2" ry="2" />
<text  x="82.41" y="319.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.02%)</title><rect x="1021.6" y="229" width="0.2" height="15.0" fill="rgb(225,150,26)" rx="2" ry="2" />
<text  x="1024.62" y="239.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (6 samples, 0.11%)</title><rect x="1007.2" y="309" width="1.3" height="15.0" fill="rgb(205,138,38)" rx="2" ry="2" />
<text  x="1010.16" y="319.5" ></text>
</g>
<g >
<title>ser::deserialize&lt;seastar::simple_memory_input_stream&gt; (4 samples, 0.07%)</title><rect x="1122.1" y="277" width="0.9" height="15.0" fill="rgb(241,208,18)" rx="2" ry="2" />
<text  x="1125.12" y="287.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::hasException (1 samples, 0.02%)</title><rect x="55.3" y="325" width="0.2" height="15.0" fill="rgb(217,182,35)" rx="2" ry="2" />
<text  x="58.33" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="680.0" y="485" width="0.3" height="15.0" fill="rgb(208,81,5)" rx="2" ry="2" />
<text  x="683.03" y="495.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (6 samples, 0.11%)</title><rect x="380.1" y="229" width="1.3" height="15.0" fill="rgb(230,49,17)" rx="2" ry="2" />
<text  x="383.05" y="239.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::clear (1 samples, 0.02%)</title><rect x="305.2" y="373" width="0.2" height="15.0" fill="rgb(239,92,18)" rx="2" ry="2" />
<text  x="308.16" y="383.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (2 samples, 0.04%)</title><rect x="125.6" y="485" width="0.5" height="15.0" fill="rgb(224,97,13)" rx="2" ry="2" />
<text  x="128.61" y="495.5" ></text>
</g>
<g >
<title>flush_reader::get_next_partition (2 samples, 0.04%)</title><rect x="80.9" y="517" width="0.5" height="15.0" fill="rgb(241,26,20)" rx="2" ry="2" />
<text  x="83.94" y="527.5" ></text>
</g>
<g >
<title>cql3::selection::simple_selection::is_aggregate (2 samples, 0.04%)</title><rect x="876.0" y="501" width="0.4" height="15.0" fill="rgb(224,154,7)" rx="2" ry="2" />
<text  x="879.00" y="511.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="862.6" y="341" width="0.3" height="15.0" fill="rgb(230,218,42)" rx="2" ry="2" />
<text  x="865.65" y="351.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_construct&lt;interval_bound&lt;dht::ring_position&gt; const&amp;&gt; (2 samples, 0.04%)</title><rect x="1040.2" y="341" width="0.5" height="15.0" fill="rgb(234,126,24)" rx="2" ry="2" />
<text  x="1043.23" y="351.5" ></text>
</g>
<g >
<title>seastar::futurize_invoke&lt;seastar::future&lt;void&gt;  (514 samples, 9.54%)</title><rect x="330.6" y="405" width="112.5" height="15.0" fill="rgb(240,156,35)" rx="2" ry="2" />
<text  x="333.56" y="415.5" >seastar::futu..</text>
</g>
<g >
<title>allocation_strategy::alloc&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::leaf_node&gt; (1 samples, 0.02%)</title><rect x="230.3" y="181" width="0.2" height="15.0" fill="rgb(236,101,36)" rx="2" ry="2" />
<text  x="233.28" y="191.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::abstract_read_executor (19 samples, 0.35%)</title><rect x="1065.4" y="373" width="4.2" height="15.0" fill="rgb(215,104,27)" rx="2" ry="2" />
<text  x="1068.41" y="383.5" ></text>
</g>
<g >
<title>db::schema_tables::diff_table_or_view (2 samples, 0.04%)</title><rect x="107.0" y="533" width="0.4" height="15.0" fill="rgb(227,39,39)" rx="2" ry="2" />
<text  x="110.00" y="543.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.07%)</title><rect x="841.6" y="469" width="0.9" height="15.0" fill="rgb(250,43,39)" rx="2" ry="2" />
<text  x="844.63" y="479.5" ></text>
</g>
<g >
<title>partition_snapshot::get_change_mark (3 samples, 0.06%)</title><rect x="262.2" y="245" width="0.7" height="15.0" fill="rgb(213,184,38)" rx="2" ry="2" />
<text  x="265.25" y="255.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (11 samples, 0.20%)</title><rect x="1016.8" y="293" width="2.4" height="15.0" fill="rgb(215,176,32)" rx="2" ry="2" />
<text  x="1019.80" y="303.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::value_ptr&gt; &gt;::invoke&lt;utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (8 samples, 0.15%)</title><rect x="752.9" y="421" width="1.8" height="15.0" fill="rgb(232,219,18)" rx="2" ry="2" />
<text  x="755.95" y="431.5" ></text>
</g>
<g >
<title>__vfprintf_internal (1 samples, 0.02%)</title><rect x="79.4" y="677" width="0.2" height="15.0" fill="rgb(242,209,43)" rx="2" ry="2" />
<text  x="82.41" y="687.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.02%)</title><rect x="52.0" y="341" width="0.3" height="15.0" fill="rgb(241,95,28)" rx="2" ry="2" />
<text  x="55.04" y="351.5" ></text>
</g>
<g >
<title>database::query (2 samples, 0.04%)</title><rect x="84.7" y="581" width="0.4" height="15.0" fill="rgb(205,177,25)" rx="2" ry="2" />
<text  x="87.67" y="591.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::allocate_on (1 samples, 0.02%)</title><rect x="864.0" y="325" width="0.2" height="15.0" fill="rgb(248,90,36)" rx="2" ry="2" />
<text  x="866.96" y="335.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, std::pair&lt;auth::role_or_anonymous, auth::resource&gt;&amp;&amp;, auth::permissions_cache::get (1 samples, 0.02%)</title><rect x="812.7" y="341" width="0.2" height="15.0" fill="rgb(219,60,8)" rx="2" ry="2" />
<text  x="815.72" y="351.5" ></text>
</g>
<g >
<title>nonwrapping_interval&lt;clustering_key_prefix&gt;::make_open_ended_both_sides (13 samples, 0.24%)</title><rect x="1097.6" y="453" width="2.8" height="15.0" fill="rgb(225,166,25)" rx="2" ry="2" />
<text  x="1100.60" y="463.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (4 samples, 0.07%)</title><rect x="41.7" y="293" width="0.9" height="15.0" fill="rgb(241,59,34)" rx="2" ry="2" />
<text  x="44.75" y="303.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::take (1 samples, 0.02%)</title><rect x="1143.6" y="549" width="0.2" height="15.0" fill="rgb(219,120,28)" rx="2" ry="2" />
<text  x="1146.58" y="559.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::value (5 samples, 0.09%)</title><rect x="60.6" y="373" width="1.1" height="15.0" fill="rgb(246,131,15)" rx="2" ry="2" />
<text  x="63.58" y="383.5" ></text>
</g>
<g >
<title>operator delete (5 samples, 0.09%)</title><rect x="539.9" y="389" width="1.1" height="15.0" fill="rgb(224,43,24)" rx="2" ry="2" />
<text  x="542.89" y="399.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::drop_table_statement, std::default_delete&lt;cql3::statements::drop_table_statement&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="65.4" y="421" width="0.2" height="15.0" fill="rgb(231,44,49)" rx="2" ry="2" />
<text  x="68.40" y="431.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql3::statements::update_statement&gt;::~shared_ptr_count_for (4 samples, 0.07%)</title><rect x="664.3" y="549" width="0.8" height="15.0" fill="rgb(226,190,19)" rx="2" ry="2" />
<text  x="667.27" y="559.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (1 samples, 0.02%)</title><rect x="294.0" y="245" width="0.2" height="15.0" fill="rgb(242,94,24)" rx="2" ry="2" />
<text  x="297.00" y="255.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (2 samples, 0.04%)</title><rect x="606.9" y="485" width="0.4" height="15.0" fill="rgb(223,33,43)" rx="2" ry="2" />
<text  x="609.90" y="495.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.04%)</title><rect x="854.1" y="501" width="0.4" height="15.0" fill="rgb(206,38,46)" rx="2" ry="2" />
<text  x="857.11" y="511.5" ></text>
</g>
<g >
<title>dht::ring_position::as_decorated_key (1 samples, 0.02%)</title><rect x="461.1" y="405" width="0.2" height="15.0" fill="rgb(220,208,43)" rx="2" ry="2" />
<text  x="464.07" y="415.5" ></text>
</g>
<g >
<title>seastar::do_until&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::fill_buffer (1 samples, 0.02%)</title><rect x="79.4" y="469" width="0.2" height="15.0" fill="rgb(225,54,48)" rx="2" ry="2" />
<text  x="82.41" y="479.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_token (2 samples, 0.04%)</title><rect x="883.9" y="469" width="0.4" height="15.0" fill="rgb(246,24,4)" rx="2" ry="2" />
<text  x="886.89" y="479.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::CqlParser (1 samples, 0.02%)</title><rect x="20.9" y="485" width="0.3" height="15.0" fill="rgb(214,30,23)" rx="2" ry="2" />
<text  x="23.95" y="495.5" ></text>
</g>
<g >
<title>seastar::internal::do_until_state&lt;executor&lt;test_read (2 samples, 0.04%)</title><rect x="88.0" y="581" width="0.4" height="15.0" fill="rgb(230,142,30)" rx="2" ry="2" />
<text  x="90.95" y="591.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (1 samples, 0.02%)</title><rect x="671.5" y="517" width="0.2" height="15.0" fill="rgb(211,60,11)" rx="2" ry="2" />
<text  x="674.49" y="527.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;partition_snapshot&gt;::make&lt;seastar::lw_shared_ptr&lt;schema const&gt;&amp;, logalloc::region&amp;, mutation_cleaner&amp;, partition_entry*, cache_tracker*&amp;, unsigned long&amp;&gt; (4 samples, 0.07%)</title><rect x="539.0" y="357" width="0.9" height="15.0" fill="rgb(216,138,36)" rx="2" ry="2" />
<text  x="542.02" y="367.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (217 samples, 4.03%)</title><rect x="21.2" y="485" width="47.5" height="15.0" fill="rgb(243,21,17)" rx="2" ry="2" />
<text  x="24.17" y="495.5" >seas..</text>
</g>
<g >
<title>seastar::app_template::run_deprecated (4,959 samples, 92.02%)</title><rect x="84.7" y="629" width="1085.8" height="15.0" fill="rgb(239,137,44)" rx="2" ry="2" />
<text  x="87.67" y="639.5" >seastar::app_template::run_deprecated</text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="51.6" y="293" width="0.2" height="15.0" fill="rgb(210,157,38)" rx="2" ry="2" />
<text  x="54.60" y="303.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::relation (25 samples, 0.46%)</title><rect x="57.5" y="405" width="5.5" height="15.0" fill="rgb(208,33,32)" rx="2" ry="2" />
<text  x="60.52" y="415.5" ></text>
</g>
<g >
<title>operator new (10 samples, 0.19%)</title><rect x="210.8" y="277" width="2.2" height="15.0" fill="rgb(225,69,9)" rx="2" ry="2" />
<text  x="213.79" y="287.5" ></text>
</g>
<g >
<title>query_result_builder::query_result_builder (1 samples, 0.02%)</title><rect x="123.0" y="517" width="0.2" height="15.0" fill="rgb(253,45,44)" rx="2" ry="2" />
<text  x="125.99" y="527.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (3 samples, 0.06%)</title><rect x="41.7" y="261" width="0.7" height="15.0" fill="rgb(223,122,15)" rx="2" ry="2" />
<text  x="44.75" y="271.5" ></text>
</g>
<g >
<title>cql3::selection::raw_selector::raw_selector (1 samples, 0.02%)</title><rect x="11.1" y="245" width="0.2" height="15.0" fill="rgb(250,191,54)" rx="2" ry="2" />
<text  x="14.09" y="255.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql3::metadata&gt;::~shared_ptr_count_for (3 samples, 0.06%)</title><rect x="102.4" y="533" width="0.7" height="15.0" fill="rgb(236,13,45)" rx="2" ry="2" />
<text  x="105.40" y="543.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_ba202cd8bdcfd8c6f1dbb280f642f5ad31cbca7c] (1 samples, 0.02%)</title><rect x="470.3" y="325" width="0.2" height="15.0" fill="rgb(227,6,16)" rx="2" ry="2" />
<text  x="473.26" y="335.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (2 samples, 0.04%)</title><rect x="803.3" y="181" width="0.4" height="15.0" fill="rgb(227,209,36)" rx="2" ry="2" />
<text  x="806.31" y="191.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="58.4" y="341" width="0.2" height="15.0" fill="rgb(236,216,40)" rx="2" ry="2" />
<text  x="61.39" y="351.5" ></text>
</g>
<g >
<title>partition_builder::accept_row_cell (3 samples, 0.06%)</title><rect x="1121.5" y="293" width="0.6" height="15.0" fill="rgb(214,44,9)" rx="2" ry="2" />
<text  x="1124.46" y="303.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;gms::inet_address*, __gnu_cxx::__ops::_Iter_pred&lt;std::unary_negate&lt;std::binder1st&lt;std::_Mem_fn&lt;bool  (4 samples, 0.07%)</title><rect x="1084.2" y="373" width="0.9" height="15.0" fill="rgb(252,121,7)" rx="2" ry="2" />
<text  x="1087.24" y="383.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="455.2" y="437" width="0.2" height="15.0" fill="rgb(212,3,34)" rx="2" ry="2" />
<text  x="458.15" y="447.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::contains&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (14 samples, 0.26%)</title><rect x="845.3" y="453" width="3.1" height="15.0" fill="rgb(238,127,46)" rx="2" ry="2" />
<text  x="848.35" y="463.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::term (27 samples, 0.50%)</title><rect x="50.3" y="373" width="5.9" height="15.0" fill="rgb(211,144,41)" rx="2" ry="2" />
<text  x="53.29" y="383.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (2 samples, 0.04%)</title><rect x="1133.9" y="261" width="0.5" height="15.0" fill="rgb(214,153,23)" rx="2" ry="2" />
<text  x="1136.95" y="271.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (10 samples, 0.19%)</title><rect x="551.5" y="373" width="2.2" height="15.0" fill="rgb(209,87,32)" rx="2" ry="2" />
<text  x="554.50" y="383.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::validate (2 samples, 0.04%)</title><rect x="831.8" y="485" width="0.4" height="15.0" fill="rgb(228,8,54)" rx="2" ry="2" />
<text  x="834.77" y="495.5" ></text>
</g>
<g >
<title>auth::resource::parent (7 samples, 0.13%)</title><rect x="786.4" y="389" width="1.6" height="15.0" fill="rgb(227,147,0)" rx="2" ry="2" />
<text  x="789.45" y="399.5" ></text>
</g>
<g >
<title>__GI___pthread_cleanup_upto (1 samples, 0.02%)</title><rect x="84.4" y="693" width="0.3" height="15.0" fill="rgb(207,210,54)" rx="2" ry="2" />
<text  x="87.45" y="703.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::get_at (1 samples, 0.02%)</title><rect x="357.5" y="261" width="0.2" height="15.0" fill="rgb(213,220,51)" rx="2" ry="2" />
<text  x="360.50" y="271.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.02%)</title><rect x="59.0" y="261" width="0.3" height="15.0" fill="rgb(217,169,12)" rx="2" ry="2" />
<text  x="62.05" y="271.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::clear (1 samples, 0.02%)</title><rect x="684.8" y="533" width="0.3" height="15.0" fill="rgb(235,128,2)" rx="2" ry="2" />
<text  x="687.85" y="543.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="701.1" y="469" width="0.2" height="15.0" fill="rgb(243,142,21)" rx="2" ry="2" />
<text  x="704.05" y="479.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.02%)</title><rect x="59.0" y="373" width="0.3" height="15.0" fill="rgb(206,209,14)" rx="2" ry="2" />
<text  x="62.05" y="383.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;interval_bound&lt;dht::ring_position&gt;, false, false&gt;::_Optional_base (1 samples, 0.02%)</title><rect x="1047.9" y="357" width="0.2" height="15.0" fill="rgb(208,108,3)" rx="2" ry="2" />
<text  x="1050.89" y="367.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (21 samples, 0.39%)</title><rect x="797.8" y="229" width="4.6" height="15.0" fill="rgb(233,121,54)" rx="2" ry="2" />
<text  x="800.83" y="239.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::impl&gt;::_S_destroy&lt;seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::impl, mutation_fragment&gt; (1 samples, 0.02%)</title><rect x="208.2" y="261" width="0.2" height="15.0" fill="rgb(214,36,24)" rx="2" ry="2" />
<text  x="211.16" y="271.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (8 samples, 0.15%)</title><rect x="919.6" y="405" width="1.7" height="15.0" fill="rgb(253,214,18)" rx="2" ry="2" />
<text  x="922.58" y="415.5" ></text>
</g>
<g >
<title>sstring_hash::operator (1 samples, 0.02%)</title><rect x="830.2" y="373" width="0.3" height="15.0" fill="rgb(218,163,41)" rx="2" ry="2" />
<text  x="833.24" y="383.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.02%)</title><rect x="1139.4" y="485" width="0.2" height="15.0" fill="rgb(223,135,18)" rx="2" ry="2" />
<text  x="1142.42" y="495.5" ></text>
</g>
<g >
<title>write_fragmented&lt;managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="863.7" y="277" width="0.3" height="15.0" fill="rgb(232,73,39)" rx="2" ry="2" />
<text  x="866.74" y="287.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (3 samples, 0.06%)</title><rect x="935.1" y="405" width="0.7" height="15.0" fill="rgb(234,121,34)" rx="2" ry="2" />
<text  x="938.13" y="415.5" ></text>
</g>
<g >
<title>auth::resource::parent (1 samples, 0.02%)</title><rect x="784.3" y="405" width="0.2" height="15.0" fill="rgb(249,58,29)" rx="2" ry="2" />
<text  x="787.26" y="415.5" ></text>
</g>
<g >
<title>cql3::expr::untyped_constant_test_assignment (1 samples, 0.02%)</title><rect x="71.1" y="437" width="0.2" height="15.0" fill="rgb(217,92,11)" rx="2" ry="2" />
<text  x="74.09" y="447.5" ></text>
</g>
<g >
<title>service::client_state::check_has_permission (1 samples, 0.02%)</title><rect x="76.1" y="485" width="0.2" height="15.0" fill="rgb(215,223,5)" rx="2" ry="2" />
<text  x="79.13" y="495.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation::data, std::default_delete&lt;mutation::data&gt; &gt;::~unique_ptr (3 samples, 0.06%)</title><rect x="1133.9" y="389" width="0.7" height="15.0" fill="rgb(215,33,14)" rx="2" ry="2" />
<text  x="1136.95" y="399.5" ></text>
</g>
<g >
<title>cql3::expr::expression::operator= (1 samples, 0.02%)</title><rect x="60.4" y="373" width="0.2" height="15.0" fill="rgb(231,59,40)" rx="2" ry="2" />
<text  x="63.36" y="383.5" ></text>
</g>
<g >
<title>_ZSt5applyIZN7seastar8internal12do_with_implIRKNS0_13basic_sstringIcjLj15ELb1EEEN4auth8resourceEJZNK7service12client_state24has_column_family_accessERK8databaseS6_S6_NS7_10permissionENS7_12command_desc4typeEE3$_4EEEDaOT_OT0_DpOT1_EUlDpOT_E_St5tupleIJS6_OS8_EEEDcSJ_SL_ (12 samples, 0.22%)</title><rect x="775.9" y="453" width="2.7" height="15.0" fill="rgb(209,36,19)" rx="2" ry="2" />
<text  x="778.94" y="463.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::trivial_direct_move&lt;8ul&gt; (1 samples, 0.02%)</title><rect x="991.8" y="309" width="0.3" height="15.0" fill="rgb(235,177,9)" rx="2" ry="2" />
<text  x="994.84" y="319.5" ></text>
</g>
<g >
<title>std::operator+ (2 samples, 0.04%)</title><rect x="49.0" y="229" width="0.4" height="15.0" fill="rgb(208,68,34)" rx="2" ry="2" />
<text  x="51.98" y="239.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.02%)</title><rect x="46.1" y="229" width="0.2" height="15.0" fill="rgb(254,68,19)" rx="2" ry="2" />
<text  x="49.13" y="239.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (3 samples, 0.06%)</title><rect x="652.2" y="549" width="0.7" height="15.0" fill="rgb(234,151,50)" rx="2" ry="2" />
<text  x="655.22" y="559.5" ></text>
</g>
<g >
<title>seastar::future&lt;mutation_fragment*&gt;::then_impl&lt;query::consume_page&lt; (1 samples, 0.02%)</title><rect x="564.4" y="485" width="0.2" height="15.0" fill="rgb(222,22,21)" rx="2" ry="2" />
<text  x="567.42" y="495.5" ></text>
</g>
<g >
<title>std::make_unique&lt;compact_for_query&lt; (8 samples, 0.15%)</title><rect x="444.6" y="421" width="1.8" height="15.0" fill="rgb(241,10,6)" rx="2" ry="2" />
<text  x="447.64" y="431.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.02%)</title><rect x="1029.3" y="261" width="0.2" height="15.0" fill="rgb(214,102,45)" rx="2" ry="2" />
<text  x="1032.28" y="271.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="55.1" y="277" width="0.2" height="15.0" fill="rgb(234,123,3)" rx="2" ry="2" />
<text  x="58.11" y="287.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;seastar::future&lt;void&gt; &gt;  (125 samples, 2.32%)</title><rect x="579.1" y="485" width="27.4" height="15.0" fill="rgb(241,176,11)" rx="2" ry="2" />
<text  x="582.09" y="495.5" >s..</text>
</g>
<g >
<title>locator::abstract_replication_strategy::get_natural_endpoints (2 samples, 0.04%)</title><rect x="1072.2" y="373" width="0.4" height="15.0" fill="rgb(228,176,3)" rx="2" ry="2" />
<text  x="1075.20" y="383.5" ></text>
</g>
<g >
<title>antlr3::Lexer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchc (1 samples, 0.02%)</title><rect x="29.5" y="325" width="0.2" height="15.0" fill="rgb(235,73,35)" rx="2" ry="2" />
<text  x="32.49" y="335.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (2 samples, 0.04%)</title><rect x="83.8" y="613" width="0.4" height="15.0" fill="rgb(216,211,11)" rx="2" ry="2" />
<text  x="86.79" y="623.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::~vector (3 samples, 0.06%)</title><rect x="560.5" y="405" width="0.6" height="15.0" fill="rgb(241,145,13)" rx="2" ry="2" />
<text  x="563.48" y="415.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (1 samples, 0.02%)</title><rect x="624.2" y="469" width="0.2" height="15.0" fill="rgb(219,137,22)" rx="2" ry="2" />
<text  x="627.20" y="479.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;mutation_querier&gt;::_M_reset (1 samples, 0.02%)</title><rect x="442.0" y="325" width="0.2" height="15.0" fill="rgb(253,56,17)" rx="2" ry="2" />
<text  x="445.02" y="335.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::add_data (23 samples, 0.43%)</title><rect x="718.8" y="517" width="5.0" height="15.0" fill="rgb(232,89,7)" rx="2" ry="2" />
<text  x="721.79" y="527.5" ></text>
</g>
<g >
<title>mutation::set_cell (1 samples, 0.02%)</title><rect x="106.6" y="549" width="0.2" height="15.0" fill="rgb(230,82,48)" rx="2" ry="2" />
<text  x="109.56" y="559.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;::operator (7 samples, 0.13%)</title><rect x="742.9" y="389" width="1.5" height="15.0" fill="rgb(205,23,23)" rx="2" ry="2" />
<text  x="745.87" y="399.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::push_mutation_fragment&lt;mutation_fragment&gt; (1 samples, 0.02%)</title><rect x="203.1" y="309" width="0.2" height="15.0" fill="rgb(221,143,11)" rx="2" ry="2" />
<text  x="206.13" y="319.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (11 samples, 0.20%)</title><rect x="424.9" y="277" width="2.4" height="15.0" fill="rgb(207,37,9)" rx="2" ry="2" />
<text  x="427.94" y="287.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;9ul, cql3::expr::untyped_constant&gt; (3 samples, 0.06%)</title><rect x="53.1" y="149" width="0.7" height="15.0" fill="rgb(234,113,31)" rx="2" ry="2" />
<text  x="56.14" y="159.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.02%)</title><rect x="59.0" y="277" width="0.3" height="15.0" fill="rgb(233,29,40)" rx="2" ry="2" />
<text  x="62.05" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (7 samples, 0.13%)</title><rect x="1043.1" y="277" width="1.5" height="15.0" fill="rgb(239,22,10)" rx="2" ry="2" />
<text  x="1046.07" y="287.5" ></text>
</g>
<g >
<title>from_hex (3 samples, 0.06%)</title><rect x="70.2" y="405" width="0.7" height="15.0" fill="rgb(226,113,5)" rx="2" ry="2" />
<text  x="73.22" y="415.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_read_executor (175 samples, 3.25%)</title><rect x="1049.4" y="421" width="38.3" height="15.0" fill="rgb(215,185,25)" rx="2" ry="2" />
<text  x="1052.42" y="431.5" >ser..</text>
</g>
<g >
<title>__memcmp_avx2_movbe (2 samples, 0.04%)</title><rect x="847.3" y="389" width="0.5" height="15.0" fill="rgb(220,31,51)" rx="2" ry="2" />
<text  x="850.32" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (2 samples, 0.04%)</title><rect x="433.0" y="229" width="0.5" height="15.0" fill="rgb(243,13,4)" rx="2" ry="2" />
<text  x="436.04" y="239.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::sharded_parallel_for_each (1 samples, 0.02%)</title><rect x="106.8" y="517" width="0.2" height="15.0" fill="rgb(238,102,14)" rx="2" ry="2" />
<text  x="109.78" y="527.5" ></text>
</g>
<g >
<title>seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;::swap (5 samples, 0.09%)</title><rect x="739.8" y="469" width="1.1" height="15.0" fill="rgb(249,13,9)" rx="2" ry="2" />
<text  x="742.81" y="479.5" ></text>
</g>
<g >
<title>db::schema_tables::read_tables_for_keyspaces (1 samples, 0.02%)</title><rect x="108.1" y="565" width="0.2" height="15.0" fill="rgb(254,206,51)" rx="2" ry="2" />
<text  x="111.10" y="575.5" ></text>
</g>
<g >
<title>locator::token_metadata_impl::first_token_index (1 samples, 0.02%)</title><rect x="1080.5" y="341" width="0.2" height="15.0" fill="rgb(232,12,54)" rx="2" ry="2" />
<text  x="1083.52" y="351.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.02%)</title><rect x="58.8" y="213" width="0.2" height="15.0" fill="rgb(245,52,15)" rx="2" ry="2" />
<text  x="61.83" y="223.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::operator== (3 samples, 0.06%)</title><rect x="758.9" y="357" width="0.6" height="15.0" fill="rgb(227,192,33)" rx="2" ry="2" />
<text  x="761.86" y="367.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;partition_key, false, false&gt;::_Optional_base (1 samples, 0.02%)</title><rect x="1090.4" y="405" width="0.2" height="15.0" fill="rgb(230,195,0)" rx="2" ry="2" />
<text  x="1093.37" y="415.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;query::read_command&gt;::make&lt;utils::UUID const&amp;, utils::UUID, query::partition_slice, query::max_result_size, query::row_limit, query::partition_limit, std::chrono::time_point&lt;gc_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt; &gt;&amp;, std::optional&lt;tracing::trace_info&gt;, utils::UUID, seastar::bool_class&lt;query::is_first_page_tag&gt; const&amp;, long&gt; (18 samples, 0.33%)</title><rect x="1108.5" y="485" width="4.0" height="15.0" fill="rgb(228,60,44)" rx="2" ry="2" />
<text  x="1111.55" y="495.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.09%)</title><rect x="319.8" y="341" width="1.1" height="15.0" fill="rgb(205,42,41)" rx="2" ry="2" />
<text  x="322.83" y="351.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (3 samples, 0.06%)</title><rect x="326.6" y="453" width="0.7" height="15.0" fill="rgb(251,51,34)" rx="2" ry="2" />
<text  x="329.62" y="463.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_28has_slice_or_needs_filteringERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES28_S2B_ (1 samples, 0.02%)</title><rect x="668.6" y="501" width="0.3" height="15.0" fill="rgb(253,193,45)" rx="2" ry="2" />
<text  x="671.65" y="511.5" ></text>
</g>
<g >
<title>distributed_loader::init_system_keyspace (1 samples, 0.02%)</title><rect x="17.7" y="613" width="0.2" height="15.0" fill="rgb(224,2,52)" rx="2" ry="2" />
<text  x="20.66" y="623.5" ></text>
</g>
<g >
<title>cql3::restrictions::(anonymous namespace)::range_from_bytes (111 samples, 2.06%)</title><rect x="914.1" y="469" width="24.3" height="15.0" fill="rgb(220,54,36)" rx="2" ry="2" />
<text  x="917.10" y="479.5" >c..</text>
</g>
<g >
<title>canonical_mutation::canonical_mutation (1 samples, 0.02%)</title><rect x="108.5" y="437" width="0.3" height="15.0" fill="rgb(227,43,2)" rx="2" ry="2" />
<text  x="111.53" y="447.5" ></text>
</g>
<g >
<title>allocation_strategy::destroy&lt;bplus::data&lt;long, intrusive_array&lt;memtable_entry&gt;, dht::raw_token_less_comparator, 16ul,  (2 samples, 0.04%)</title><rect x="16.3" y="597" width="0.5" height="15.0" fill="rgb(206,138,28)" rx="2" ry="2" />
<text  x="19.35" y="607.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::_M_create_storage (1 samples, 0.02%)</title><rect x="159.8" y="485" width="0.2" height="15.0" fill="rgb(244,50,17)" rx="2" ry="2" />
<text  x="162.77" y="495.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;partition_key, false, false&gt;::_Optional_base (1 samples, 0.02%)</title><rect x="575.6" y="485" width="0.2" height="15.0" fill="rgb(244,64,27)" rx="2" ry="2" />
<text  x="578.59" y="495.5" ></text>
</g>
<g >
<title>posix_memalign (1 samples, 0.02%)</title><rect x="81.4" y="245" width="0.2" height="15.0" fill="rgb(225,75,38)" rx="2" ry="2" />
<text  x="84.38" y="255.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (2 samples, 0.04%)</title><rect x="304.5" y="373" width="0.4" height="15.0" fill="rgb(234,167,42)" rx="2" ry="2" />
<text  x="307.51" y="383.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::get0 (1 samples, 0.02%)</title><rect x="331.7" y="357" width="0.2" height="15.0" fill="rgb(220,57,40)" rx="2" ry="2" />
<text  x="334.66" y="367.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::find (1 samples, 0.02%)</title><rect x="670.2" y="517" width="0.2" height="15.0" fill="rgb(208,161,11)" rx="2" ry="2" />
<text  x="673.18" y="527.5" ></text>
</g>
<g >
<title>std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;, seastar::future&lt;void&gt; &gt; &gt;::operator (5 samples, 0.09%)</title><rect x="821.7" y="437" width="1.1" height="15.0" fill="rgb(209,182,19)" rx="2" ry="2" />
<text  x="824.70" y="447.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::constant (1 samples, 0.02%)</title><rect x="61.5" y="357" width="0.2" height="15.0" fill="rgb(223,67,37)" rx="2" ry="2" />
<text  x="64.46" y="367.5" ></text>
</g>
<g >
<title>bplus::tree&lt;long, intrusive_array&lt;memtable_entry&gt;, dht::raw_token_less_comparator, 16ul,  (1 samples, 0.02%)</title><rect x="1119.3" y="245" width="0.2" height="15.0" fill="rgb(222,69,8)" rx="2" ry="2" />
<text  x="1122.27" y="255.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="337.6" y="309" width="0.2" height="15.0" fill="rgb(242,201,15)" rx="2" ry="2" />
<text  x="340.57" y="319.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::visit&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (1 samples, 0.02%)</title><rect x="107.0" y="357" width="0.2" height="15.0" fill="rgb(208,101,33)" rx="2" ry="2" />
<text  x="110.00" y="367.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::execution_loop (2,472 samples, 45.87%)</title><rect x="110.1" y="565" width="541.2" height="15.0" fill="rgb(237,8,37)" rx="2" ry="2" />
<text  x="113.07" y="575.5" >reader_concurrency_semaphore::execution_loop</text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::do_fill_buffer (1 samples, 0.02%)</title><rect x="337.8" y="197" width="0.2" height="15.0" fill="rgb(249,191,7)" rx="2" ry="2" />
<text  x="340.79" y="207.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::operator= (2 samples, 0.04%)</title><rect x="54.0" y="309" width="0.4" height="15.0" fill="rgb(225,199,10)" rx="2" ry="2" />
<text  x="57.01" y="319.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.02%)</title><rect x="48.5" y="197" width="0.3" height="15.0" fill="rgb(236,221,29)" rx="2" ry="2" />
<text  x="51.54" y="207.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;signed char, std::char_traits&lt;signed char&gt; &gt;::substr (1 samples, 0.02%)</title><rect x="921.1" y="389" width="0.2" height="15.0" fill="rgb(216,61,9)" rx="2" ry="2" />
<text  x="924.11" y="399.5" ></text>
</g>
<g >
<title>row::~row (1 samples, 0.02%)</title><rect x="295.5" y="325" width="0.2" height="15.0" fill="rgb(241,77,51)" rx="2" ry="2" />
<text  x="298.53" y="335.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (22 samples, 0.41%)</title><rect x="237.7" y="149" width="4.8" height="15.0" fill="rgb(213,215,45)" rx="2" ry="2" />
<text  x="240.72" y="159.5" ></text>
</g>
<g >
<title>std::default_delete&lt;mutation::data&gt;::operator (3 samples, 0.06%)</title><rect x="1133.9" y="373" width="0.7" height="15.0" fill="rgb(208,152,32)" rx="2" ry="2" />
<text  x="1136.95" y="383.5" ></text>
</g>
<g >
<title>reader_permit::mark_unused (1 samples, 0.02%)</title><rect x="126.1" y="517" width="0.2" height="15.0" fill="rgb(250,79,39)" rx="2" ry="2" />
<text  x="129.05" y="527.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::untyped_constant&gt; (8 samples, 0.15%)</title><rect x="52.3" y="325" width="1.7" height="15.0" fill="rgb(219,143,28)" rx="2" ry="2" />
<text  x="55.26" y="335.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (1 samples, 0.02%)</title><rect x="822.6" y="405" width="0.2" height="15.0" fill="rgb(230,85,34)" rx="2" ry="2" />
<text  x="825.58" y="415.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (13 samples, 0.24%)</title><rect x="679.6" y="533" width="2.8" height="15.0" fill="rgb(236,123,50)" rx="2" ry="2" />
<text  x="682.59" y="543.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;cql3::metadata, false&gt;::make&lt;cql3::metadata&amp;&gt; (1 samples, 0.02%)</title><rect x="672.4" y="533" width="0.2" height="15.0" fill="rgb(221,68,3)" rx="2" ry="2" />
<text  x="675.37" y="543.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::emplace_mutation_fragment (4 samples, 0.07%)</title><rect x="204.0" y="309" width="0.9" height="15.0" fill="rgb(232,217,44)" rx="2" ry="2" />
<text  x="207.00" y="319.5" ></text>
</g>
<g >
<title>db::schema_tables::merge_keyspaces (1 samples, 0.02%)</title><rect x="106.8" y="549" width="0.2" height="15.0" fill="rgb(217,119,28)" rx="2" ry="2" />
<text  x="109.78" y="559.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (11 samples, 0.20%)</title><rect x="916.1" y="421" width="2.4" height="15.0" fill="rgb(242,17,26)" rx="2" ry="2" />
<text  x="919.08" y="431.5" ></text>
</g>
<g >
<title>operator new (9 samples, 0.17%)</title><rect x="1006.5" y="341" width="2.0" height="15.0" fill="rgb(253,170,33)" rx="2" ry="2" />
<text  x="1009.51" y="351.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate_to_raw_view (3 samples, 0.06%)</title><rect x="864.2" y="373" width="0.6" height="15.0" fill="rgb(248,101,45)" rx="2" ry="2" />
<text  x="867.18" y="383.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::emplace_back&lt;unsigned int const&amp;&gt; (2 samples, 0.04%)</title><rect x="1105.7" y="469" width="0.4" height="15.0" fill="rgb(205,122,45)" rx="2" ry="2" />
<text  x="1108.70" y="479.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment&lt;schema const&amp;, rows_entry const&amp;&gt; (1 samples, 0.02%)</title><rect x="219.1" y="261" width="0.2" height="15.0" fill="rgb(236,140,30)" rx="2" ry="2" />
<text  x="222.11" y="271.5" ></text>
</g>
<g >
<title>ser::column_view::c (4 samples, 0.07%)</title><rect x="1122.1" y="293" width="0.9" height="15.0" fill="rgb(226,45,41)" rx="2" ry="2" />
<text  x="1125.12" y="303.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.02%)</title><rect x="74.4" y="405" width="0.2" height="15.0" fill="rgb(227,227,39)" rx="2" ry="2" />
<text  x="77.38" y="415.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned char, std::pair&lt;unsigned char const, std::optional&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned char const, std::optional&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned char&gt;, std::hash&lt;unsigned char&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::clear (2 samples, 0.04%)</title><rect x="691.2" y="501" width="0.4" height="15.0" fill="rgb(239,61,46)" rx="2" ry="2" />
<text  x="694.20" y="511.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reclaiming_disabled&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::get_static_row (12 samples, 0.22%)</title><rect x="292.5" y="293" width="2.6" height="15.0" fill="rgb(224,25,21)" rx="2" ry="2" />
<text  x="295.46" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt;::allocate (1 samples, 0.02%)</title><rect x="946.1" y="453" width="0.2" height="15.0" fill="rgb(215,223,40)" rx="2" ry="2" />
<text  x="949.07" y="463.5" ></text>
</g>
<g >
<title>reader_permit::consume (1 samples, 0.02%)</title><rect x="260.5" y="229" width="0.2" height="15.0" fill="rgb(250,99,32)" rx="2" ry="2" />
<text  x="263.50" y="239.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="700.4" y="549" width="0.2" height="15.0" fill="rgb(218,185,48)" rx="2" ry="2" />
<text  x="703.40" y="559.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (1 samples, 0.02%)</title><rect x="817.5" y="389" width="0.3" height="15.0" fill="rgb(215,25,2)" rx="2" ry="2" />
<text  x="820.54" y="399.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::CommonToken (1 samples, 0.02%)</title><rect x="20.9" y="389" width="0.3" height="15.0" fill="rgb(232,225,25)" rx="2" ry="2" />
<text  x="23.95" y="399.5" ></text>
</g>
<g >
<title>absl::hash_internal::AbslHashValue&lt;absl::hash_internal::HashState&gt; (2 samples, 0.04%)</title><rect x="1057.7" y="341" width="0.5" height="15.0" fill="rgb(240,66,17)" rx="2" ry="2" />
<text  x="1060.75" y="351.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="525.2" y="325" width="0.2" height="15.0" fill="rgb(225,99,18)" rx="2" ry="2" />
<text  x="528.22" y="335.5" ></text>
</g>
<g >
<title>ser::writer_of_query_result&lt;bytes_ostream&gt;::start_partitions (3 samples, 0.06%)</title><rect x="620.3" y="469" width="0.6" height="15.0" fill="rgb(209,1,47)" rx="2" ry="2" />
<text  x="623.25" y="479.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (2 samples, 0.04%)</title><rect x="631.2" y="501" width="0.4" height="15.0" fill="rgb(245,99,31)" rx="2" ry="2" />
<text  x="634.20" y="511.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.02%)</title><rect x="1038.5" y="341" width="0.2" height="15.0" fill="rgb(236,12,30)" rx="2" ry="2" />
<text  x="1041.48" y="351.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (2 samples, 0.04%)</title><rect x="326.2" y="469" width="0.4" height="15.0" fill="rgb(236,87,8)" rx="2" ry="2" />
<text  x="329.18" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (1 samples, 0.02%)</title><rect x="28.4" y="277" width="0.2" height="15.0" fill="rgb(251,32,15)" rx="2" ry="2" />
<text  x="31.39" y="287.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::push_mutation_fragment&lt;schema const&amp;, reader_permit&amp;, partition_start&gt; (1 samples, 0.02%)</title><rect x="525.9" y="325" width="0.2" height="15.0" fill="rgb(253,53,3)" rx="2" ry="2" />
<text  x="528.88" y="335.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;auth::resource&gt;::_Optional_payload_base (2 samples, 0.04%)</title><rect x="786.0" y="357" width="0.4" height="15.0" fill="rgb(225,181,20)" rx="2" ry="2" />
<text  x="789.01" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;column_definition const*, std::pair&lt;column_definition const* const, seastar::shared_ptr&lt;cql3::restrictions::single_column_restriction&gt; &gt;, std::_Select1st&lt;std::pair&lt;column_definition const* const, seastar::shared_ptr&lt;cql3::restrictions::single_column_restriction&gt; &gt; &gt;, cql3::restrictions::single_column_restrictions::column_definition_comparator, std::allocator&lt;std::pair&lt;column_definition const* const, seastar::shared_ptr&lt;cql3::restrictions::single_column_restriction&gt; &gt; &gt; &gt;::_M_erase (1 samples, 0.02%)</title><rect x="664.3" y="453" width="0.2" height="15.0" fill="rgb(252,161,39)" rx="2" ry="2" />
<text  x="667.27" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::disable_abort_on_alloc_failure_temporarily (1 samples, 0.02%)</title><rect x="294.7" y="277" width="0.2" height="15.0" fill="rgb(235,2,49)" rx="2" ry="2" />
<text  x="297.65" y="287.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.02%)</title><rect x="131.5" y="453" width="0.2" height="15.0" fill="rgb(249,226,3)" rx="2" ry="2" />
<text  x="134.53" y="463.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::~__si_class_type_info (20 samples, 0.37%)</title><rect x="12.0" y="677" width="4.3" height="15.0" fill="rgb(211,10,46)" rx="2" ry="2" />
<text  x="14.97" y="687.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (1 samples, 0.02%)</title><rect x="675.2" y="533" width="0.2" height="15.0" fill="rgb(221,28,1)" rx="2" ry="2" />
<text  x="678.21" y="543.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.02%)</title><rect x="266.8" y="245" width="0.3" height="15.0" fill="rgb(233,112,8)" rx="2" ry="2" />
<text  x="269.85" y="255.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (6 samples, 0.11%)</title><rect x="363.2" y="245" width="1.3" height="15.0" fill="rgb(250,121,15)" rx="2" ry="2" />
<text  x="366.19" y="255.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql_transport::messages::result_message::rows&gt;::~shared_ptr_count_for (28 samples, 0.52%)</title><rect x="96.9" y="549" width="6.2" height="15.0" fill="rgb(243,220,36)" rx="2" ry="2" />
<text  x="99.93" y="559.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate (2 samples, 0.04%)</title><rect x="861.1" y="357" width="0.5" height="15.0" fill="rgb(206,208,45)" rx="2" ry="2" />
<text  x="864.12" y="367.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, flat_mutation_reader::impl::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (4 samples, 0.07%)</title><rect x="701.3" y="453" width="0.8" height="15.0" fill="rgb(246,1,40)" rx="2" ry="2" />
<text  x="704.27" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (3 samples, 0.06%)</title><rect x="250.4" y="181" width="0.7" height="15.0" fill="rgb(254,153,41)" rx="2" ry="2" />
<text  x="253.42" y="191.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::signal (2 samples, 0.04%)</title><rect x="125.2" y="485" width="0.4" height="15.0" fill="rgb(235,73,46)" rx="2" ry="2" />
<text  x="128.18" y="495.5" ></text>
</g>
<g >
<title>std::filesystem::__cxx11::path::_M_split_cmpts (1 samples, 0.02%)</title><rect x="84.2" y="677" width="0.2" height="15.0" fill="rgb(248,22,29)" rx="2" ry="2" />
<text  x="87.23" y="687.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::future&lt;void&gt;  (34 samples, 0.63%)</title><rect x="1127.2" y="421" width="7.4" height="15.0" fill="rgb(244,89,35)" rx="2" ry="2" />
<text  x="1130.16" y="431.5" ></text>
</g>
<g >
<title>[[vdso]] (15 samples, 0.28%)</title><rect x="1172.5" y="677" width="3.3" height="15.0" fill="rgb(253,41,26)" rx="2" ry="2" />
<text  x="1175.48" y="687.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.02%)</title><rect x="50.5" y="213" width="0.2" height="15.0" fill="rgb(224,186,13)" rx="2" ry="2" />
<text  x="53.51" y="223.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="45.9" y="309" width="0.2" height="15.0" fill="rgb(232,5,4)" rx="2" ry="2" />
<text  x="48.91" y="319.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;bytes_ostream::chunk, std::default_delete&lt;bytes_ostream::chunk&gt; &gt;::~unique_ptr (2 samples, 0.04%)</title><rect x="621.8" y="453" width="0.4" height="15.0" fill="rgb(232,219,38)" rx="2" ry="2" />
<text  x="624.79" y="463.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::push_static_row (14 samples, 0.26%)</title><rect x="292.2" y="325" width="3.1" height="15.0" fill="rgb(232,224,13)" rx="2" ry="2" />
<text  x="295.25" y="335.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.02%)</title><rect x="46.1" y="277" width="0.2" height="15.0" fill="rgb(208,111,42)" rx="2" ry="2" />
<text  x="49.13" y="287.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::term (12 samples, 0.22%)</title><rect x="59.0" y="389" width="2.7" height="15.0" fill="rgb(230,43,54)" rx="2" ry="2" />
<text  x="62.05" y="399.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;auth::resource_kind, std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;auth::resource_kind&gt;, std::hash&lt;auth::resource_kind&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (2 samples, 0.04%)</title><rect x="779.4" y="389" width="0.5" height="15.0" fill="rgb(234,211,18)" rx="2" ry="2" />
<text  x="782.44" y="399.5" ></text>
</g>
<g >
<title>sstables::metadata_collector::update (1 samples, 0.02%)</title><rect x="83.6" y="517" width="0.2" height="15.0" fill="rgb(227,62,0)" rx="2" ry="2" />
<text  x="86.57" y="527.5" ></text>
</g>
<g >
<title>reader_permit::consume_memory (1 samples, 0.02%)</title><rect x="213.0" y="277" width="0.2" height="15.0" fill="rgb(206,224,1)" rx="2" ry="2" />
<text  x="215.98" y="287.5" ></text>
</g>
<g >
<title>schema_registry_entry::load (3 samples, 0.06%)</title><rect x="108.8" y="517" width="0.6" height="15.0" fill="rgb(233,169,11)" rx="2" ry="2" />
<text  x="111.75" y="527.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (1 samples, 0.02%)</title><rect x="58.0" y="341" width="0.2" height="15.0" fill="rgb(242,156,21)" rx="2" ry="2" />
<text  x="60.95" y="351.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (1 samples, 0.02%)</title><rect x="938.2" y="437" width="0.2" height="15.0" fill="rgb(230,29,40)" rx="2" ry="2" />
<text  x="941.19" y="447.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;mutation_querier, false, false&gt;::_Optional_base (1 samples, 0.02%)</title><rect x="444.2" y="421" width="0.2" height="15.0" fill="rgb(226,95,26)" rx="2" ry="2" />
<text  x="447.21" y="431.5" ></text>
</g>
<g >
<title>service::abstract_write_response_handler::delay&lt;service::abstract_write_response_handler::signal (2 samples, 0.04%)</title><rect x="728.2" y="501" width="0.4" height="15.0" fill="rgb(251,157,11)" rx="2" ry="2" />
<text  x="731.20" y="511.5" ></text>
</g>
<g >
<title>reader_permit::consume (1 samples, 0.02%)</title><rect x="320.9" y="341" width="0.2" height="15.0" fill="rgb(252,43,22)" rx="2" ry="2" />
<text  x="323.93" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.02%)</title><rect x="856.3" y="469" width="0.2" height="15.0" fill="rgb(229,66,10)" rx="2" ry="2" />
<text  x="859.30" y="479.5" ></text>
</g>
<g >
<title>cql3::query_processor::process_authorized_statement (2 samples, 0.04%)</title><rect x="19.6" y="533" width="0.5" height="15.0" fill="rgb(232,46,2)" rx="2" ry="2" />
<text  x="22.63" y="543.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="319.0" y="357" width="0.2" height="15.0" fill="rgb(254,84,10)" rx="2" ry="2" />
<text  x="321.96" y="367.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::get_at (1 samples, 0.02%)</title><rect x="362.5" y="245" width="0.3" height="15.0" fill="rgb(205,19,44)" rx="2" ry="2" />
<text  x="365.53" y="255.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (43 samples, 0.80%)</title><rect x="797.4" y="261" width="9.4" height="15.0" fill="rgb(239,220,14)" rx="2" ry="2" />
<text  x="800.40" y="271.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::query_state&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="837.0" y="501" width="0.2" height="15.0" fill="rgb(234,112,13)" rx="2" ry="2" />
<text  x="840.03" y="511.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (1 samples, 0.02%)</title><rect x="45.0" y="389" width="0.3" height="15.0" fill="rgb(217,32,22)" rx="2" ry="2" />
<text  x="48.03" y="399.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEENK4$_43clERKNSF_15binary_operatorEEUlRKNSF_12column_valueEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_17tuple_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlNSF_5tokenEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlSS_E_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_11conjunctionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_8constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_21unresolved_identifierEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_25column_mutation_attributeEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13function_callEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4castEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_15field_selectionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4nullEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13bind_variableEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_16untyped_constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_22collection_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_20usertype_constructorEE_EERS4_IJS14_SQ_ST_S11_S1C_S1G_S1K_S1O_S1S_S1W_S20_S24_S18_SX_S28_S2C_EEEJEEESt16integer_sequenceImJLm2EEEE14__visit_invokeES2H_S2J_ (124 samples, 2.30%)</title><rect x="884.5" y="437" width="27.2" height="15.0" fill="rgb(211,138,24)" rx="2" ry="2" />
<text  x="887.54" y="447.5" >_..</text>
</g>
<g >
<title>std::_Function_handler&lt;flat_mutation_reader  (483 samples, 8.96%)</title><rect x="455.4" y="437" width="105.7" height="15.0" fill="rgb(237,220,22)" rx="2" ry="2" />
<text  x="458.37" y="447.5" >std::_Functi..</text>
</g>
<g >
<title>cql3::statements::select_statement::do_execute (1,096 samples, 20.34%)</title><rect x="876.4" y="501" width="240.0" height="15.0" fill="rgb(252,50,21)" rx="2" ry="2" />
<text  x="879.44" y="511.5" >cql3::statements::select_statem..</text>
</g>
<g >
<title>cql3::constants::marker::to_expression (9 samples, 0.17%)</title><rect x="886.1" y="389" width="1.9" height="15.0" fill="rgb(243,32,18)" rx="2" ry="2" />
<text  x="889.08" y="399.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::find&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (15 samples, 0.28%)</title><rect x="770.5" y="421" width="3.2" height="15.0" fill="rgb(221,215,13)" rx="2" ry="2" />
<text  x="773.46" y="431.5" ></text>
</g>
<g >
<title>global_schema_ptr::global_schema_ptr (1 samples, 0.02%)</title><rect x="999.9" y="357" width="0.3" height="15.0" fill="rgb(247,151,20)" rx="2" ry="2" />
<text  x="1002.94" y="367.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (3 samples, 0.06%)</title><rect x="137.7" y="517" width="0.6" height="15.0" fill="rgb(220,128,7)" rx="2" ry="2" />
<text  x="140.66" y="527.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (2 samples, 0.04%)</title><rect x="614.3" y="453" width="0.5" height="15.0" fill="rgb(222,58,18)" rx="2" ry="2" />
<text  x="617.34" y="463.5" ></text>
</g>
<g >
<title>cql3::operation::requires_read (1 samples, 0.02%)</title><rect x="70.0" y="485" width="0.2" height="15.0" fill="rgb(248,45,48)" rx="2" ry="2" />
<text  x="73.00" y="495.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;11ul, cql3::expr::untyped_constant&gt; (1 samples, 0.02%)</title><rect x="53.8" y="245" width="0.2" height="15.0" fill="rgb(218,194,49)" rx="2" ry="2" />
<text  x="56.79" y="255.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.02%)</title><rect x="51.6" y="277" width="0.2" height="15.0" fill="rgb(233,52,54)" rx="2" ry="2" />
<text  x="54.60" y="287.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (2 samples, 0.04%)</title><rect x="49.0" y="277" width="0.4" height="15.0" fill="rgb(207,70,0)" rx="2" ry="2" />
<text  x="51.98" y="287.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_singular (63 samples, 1.17%)</title><rect x="1145.6" y="549" width="13.7" height="15.0" fill="rgb(242,218,8)" rx="2" ry="2" />
<text  x="1148.55" y="559.5" ></text>
</g>
<g >
<title>utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (1 samples, 0.02%)</title><rect x="793.9" y="229" width="0.2" height="15.0" fill="rgb(216,84,25)" rx="2" ry="2" />
<text  x="796.89" y="239.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (4 samples, 0.07%)</title><rect x="839.0" y="421" width="0.9" height="15.0" fill="rgb(212,4,3)" rx="2" ry="2" />
<text  x="842.00" y="431.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume_in_thread&lt;sstables::sstable_writer, flat_mutation_reader::no_filter&gt; (1 samples, 0.02%)</title><rect x="80.7" y="565" width="0.2" height="15.0" fill="rgb(221,63,7)" rx="2" ry="2" />
<text  x="83.73" y="575.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::needs_post_query_ordering (4 samples, 0.07%)</title><rect x="670.2" y="533" width="0.9" height="15.0" fill="rgb(208,45,38)" rx="2" ry="2" />
<text  x="673.18" y="543.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_pausable&lt;flush_reader::fill_buffer (1 samples, 0.02%)</title><rect x="81.4" y="501" width="0.2" height="15.0" fill="rgb(219,78,35)" rx="2" ry="2" />
<text  x="84.38" y="511.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::__uniq_ptr_data (1 samples, 0.02%)</title><rect x="56.4" y="309" width="0.2" height="15.0" fill="rgb(209,76,48)" rx="2" ry="2" />
<text  x="59.42" y="319.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;column_definition const*, column_definition const*, std::allocator&lt;column_definition const*&gt;, std::__detail::_Identity, std::equal_to&lt;column_definition const*&gt;, std::hash&lt;column_definition const*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::~_Hashtable (1 samples, 0.02%)</title><rect x="74.6" y="453" width="0.2" height="15.0" fill="rgb(244,23,6)" rx="2" ry="2" />
<text  x="77.59" y="463.5" ></text>
</g>
<g >
<title>_ZSt5applyIZN7seastar8internal12do_with_implISt8optionalIN4auth8resourceEEZNK7service12client_state20check_has_permissionENS4_12command_descEE3$_7JEEEDaOT_OT0_DpOT1_EUlDpOT_E_St5tupleIJOS6_EEEDcSC_SE_ (6 samples, 0.11%)</title><rect x="785.1" y="389" width="1.3" height="15.0" fill="rgb(230,183,5)" rx="2" ry="2" />
<text  x="788.13" y="399.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;, service::storage_proxy::query_result_local (1 samples, 0.02%)</title><rect x="85.5" y="581" width="0.3" height="15.0" fill="rgb(218,213,19)" rx="2" ry="2" />
<text  x="88.54" y="591.5" ></text>
</g>
<g >
<title>cql3::statements::raw::modification_statement::prepare (29 samples, 0.54%)</title><rect x="69.6" y="517" width="6.3" height="15.0" fill="rgb(226,84,6)" rx="2" ry="2" />
<text  x="72.56" y="527.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;, nonwrapping_interval&lt;managed_bytes&gt; &gt;::~_Variant_storage (1 samples, 0.02%)</title><rect x="942.6" y="469" width="0.2" height="15.0" fill="rgb(209,3,37)" rx="2" ry="2" />
<text  x="945.57" y="479.5" ></text>
</g>
<g >
<title>seastar::internal::awaiter&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::awaiter (1 samples, 0.02%)</title><rect x="980.7" y="421" width="0.2" height="15.0" fill="rgb(205,113,39)" rx="2" ry="2" />
<text  x="983.67" y="431.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="49.9" y="245" width="0.2" height="15.0" fill="rgb(211,73,7)" rx="2" ry="2" />
<text  x="52.85" y="255.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (2 samples, 0.04%)</title><rect x="438.7" y="293" width="0.5" height="15.0" fill="rgb(248,228,25)" rx="2" ry="2" />
<text  x="441.73" y="303.5" ></text>
</g>
<g >
<title>boost::intrusive::bstree_algorithms&lt;boost::intrusive::rbtree_node_traits&lt;void*, false&gt; &gt;::swap_tree (1 samples, 0.02%)</title><rect x="1124.3" y="229" width="0.2" height="15.0" fill="rgb(230,61,0)" rx="2" ry="2" />
<text  x="1127.31" y="239.5" ></text>
</g>
<g >
<title>seastar::future&lt;query::result_memory_accounter&gt;::get0 (3 samples, 0.06%)</title><rect x="138.5" y="517" width="0.7" height="15.0" fill="rgb(218,60,47)" rx="2" ry="2" />
<text  x="141.53" y="527.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_cachedSize (1 samples, 0.02%)</title><rect x="41.1" y="389" width="0.2" height="15.0" fill="rgb(225,142,15)" rx="2" ry="2" />
<text  x="44.09" y="399.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::find (2 samples, 0.04%)</title><rect x="883.4" y="469" width="0.5" height="15.0" fill="rgb(205,105,15)" rx="2" ry="2" />
<text  x="886.45" y="479.5" ></text>
</g>
<g >
<title>cql3::statements::update_statement::execute_operations_for_key (8 samples, 0.15%)</title><rect x="863.3" y="405" width="1.8" height="15.0" fill="rgb(232,106,17)" rx="2" ry="2" />
<text  x="866.30" y="415.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::set_channel (1 samples, 0.02%)</title><rect x="26.9" y="325" width="0.2" height="15.0" fill="rgb(228,199,46)" rx="2" ry="2" />
<text  x="29.86" y="335.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt; (1 samples, 0.02%)</title><rect x="906.2" y="405" width="0.2" height="15.0" fill="rgb(205,102,40)" rx="2" ry="2" />
<text  x="909.22" y="415.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.02%)</title><rect x="46.1" y="197" width="0.2" height="15.0" fill="rgb(250,225,49)" rx="2" ry="2" />
<text  x="49.13" y="207.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (4 samples, 0.07%)</title><rect x="657.0" y="533" width="0.9" height="15.0" fill="rgb(231,99,12)" rx="2" ry="2" />
<text  x="660.04" y="543.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::indirect_move (1 samples, 0.02%)</title><rect x="1026.0" y="197" width="0.2" height="15.0" fill="rgb(228,121,46)" rx="2" ry="2" />
<text  x="1029.00" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (2 samples, 0.04%)</title><rect x="643.7" y="501" width="0.4" height="15.0" fill="rgb(225,150,2)" rx="2" ry="2" />
<text  x="646.68" y="511.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;mutation_fragment_merger&lt;mutation_reader_merger&gt;::operator (16 samples, 0.30%)</title><rect x="309.3" y="405" width="3.5" height="15.0" fill="rgb(247,222,26)" rx="2" ry="2" />
<text  x="312.32" y="415.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_data_request (229 samples, 4.25%)</title><rect x="998.4" y="373" width="50.1" height="15.0" fill="rgb(228,178,18)" rx="2" ry="2" />
<text  x="1001.41" y="383.5" >servi..</text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (1 samples, 0.02%)</title><rect x="786.2" y="341" width="0.2" height="15.0" fill="rgb(241,72,5)" rx="2" ry="2" />
<text  x="789.23" y="351.5" ></text>
</g>
<g >
<title>seastar::repeat&lt;flat_mutation_reader::impl::consume_pausable&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (4 samples, 0.07%)</title><rect x="701.3" y="437" width="0.8" height="15.0" fill="rgb(213,107,8)" rx="2" ry="2" />
<text  x="704.27" y="447.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (1 samples, 0.02%)</title><rect x="56.2" y="325" width="0.2" height="15.0" fill="rgb(210,138,11)" rx="2" ry="2" />
<text  x="59.20" y="335.5" ></text>
</g>
<g >
<title>service::storage_proxy::do_query (584 samples, 10.84%)</title><rect x="963.6" y="453" width="127.9" height="15.0" fill="rgb(212,148,27)" rx="2" ry="2" />
<text  x="966.59" y="463.5" >service::storage..</text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;query::result&gt;::make&lt;query::result&gt; (6 samples, 0.11%)</title><rect x="631.9" y="501" width="1.3" height="15.0" fill="rgb(249,50,13)" rx="2" ry="2" />
<text  x="634.86" y="511.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (14 samples, 0.26%)</title><rect x="741.6" y="437" width="3.0" height="15.0" fill="rgb(240,78,24)" rx="2" ry="2" />
<text  x="744.56" y="447.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::emplace_back&lt;mutation_reader_merger::reader_and_fragment&gt; (1 samples, 0.02%)</title><rect x="303.4" y="341" width="0.2" height="15.0" fill="rgb(224,208,21)" rx="2" ry="2" />
<text  x="306.41" y="351.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt; (1 samples, 0.02%)</title><rect x="905.1" y="389" width="0.2" height="15.0" fill="rgb(251,141,35)" rx="2" ry="2" />
<text  x="908.13" y="399.5" ></text>
</g>
<g >
<title>std::hash&lt;gms::inet_address&gt;::operator (1 samples, 0.02%)</title><rect x="725.6" y="485" width="0.2" height="15.0" fill="rgb(216,188,1)" rx="2" ry="2" />
<text  x="728.58" y="495.5" ></text>
</g>
<g >
<title>database::find_column_family (1 samples, 0.02%)</title><rect x="823.7" y="405" width="0.2" height="15.0" fill="rgb(211,50,39)" rx="2" ry="2" />
<text  x="826.67" y="415.5" ></text>
</g>
<g >
<title>operator new (7 samples, 0.13%)</title><rect x="843.2" y="469" width="1.5" height="15.0" fill="rgb(254,187,11)" rx="2" ry="2" />
<text  x="846.16" y="479.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::partition_tombstone (7 samples, 0.13%)</title><rect x="535.3" y="309" width="1.5" height="15.0" fill="rgb(218,23,43)" rx="2" ry="2" />
<text  x="538.30" y="319.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::operator (1 samples, 0.02%)</title><rect x="1133.1" y="229" width="0.2" height="15.0" fill="rgb(215,91,45)" rx="2" ry="2" />
<text  x="1136.07" y="239.5" ></text>
</g>
<g >
<title>mutation_reader_merger::add_readers (19 samples, 0.35%)</title><rect x="469.8" y="341" width="4.2" height="15.0" fill="rgb(236,150,21)" rx="2" ry="2" />
<text  x="472.83" y="351.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.02%)</title><rect x="58.8" y="197" width="0.2" height="15.0" fill="rgb(235,198,44)" rx="2" ry="2" />
<text  x="61.83" y="207.5" ></text>
</g>
<g >
<title>schema::column_at (8 samples, 0.15%)</title><rect x="248.7" y="181" width="1.7" height="15.0" fill="rgb(216,129,39)" rx="2" ry="2" />
<text  x="251.67" y="191.5" ></text>
</g>
<g >
<title>cql3::raw_value_view::raw_value_view (1 samples, 0.02%)</title><rect x="861.6" y="341" width="0.2" height="15.0" fill="rgb(248,102,36)" rx="2" ry="2" />
<text  x="864.55" y="351.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.02%)</title><rect x="45.0" y="245" width="0.3" height="15.0" fill="rgb(234,41,17)" rx="2" ry="2" />
<text  x="48.03" y="255.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (1 samples, 0.02%)</title><rect x="1029.5" y="261" width="0.2" height="15.0" fill="rgb(217,113,46)" rx="2" ry="2" />
<text  x="1032.50" y="271.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::pop_mutation_fragment (6 samples, 0.11%)</title><rect x="181.9" y="373" width="1.3" height="15.0" fill="rgb(208,64,19)" rx="2" ry="2" />
<text  x="184.89" y="383.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::impl&gt;::_S_destroy&lt;seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::impl, mutation_fragment&gt; (1 samples, 0.02%)</title><rect x="209.3" y="277" width="0.2" height="15.0" fill="rgb(254,81,0)" rx="2" ry="2" />
<text  x="212.26" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value, std::allocator&lt;cql3::raw_value&gt; &gt;::vector (8 samples, 0.15%)</title><rect x="855.2" y="533" width="1.8" height="15.0" fill="rgb(219,128,25)" rx="2" ry="2" />
<text  x="858.20" y="543.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;4ul, cql3::expr::untyped_constant&gt; (1 samples, 0.02%)</title><rect x="53.4" y="85" width="0.2" height="15.0" fill="rgb(222,45,13)" rx="2" ry="2" />
<text  x="56.35" y="95.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;::basic_sstring (1 samples, 0.02%)</title><rect x="864.2" y="293" width="0.2" height="15.0" fill="rgb(252,215,12)" rx="2" ry="2" />
<text  x="867.18" y="303.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS4_12restrictionsL11has_eq_nullERKNS4_13query_optionsERKNS5_10expressionEE3$_8EES8_SI_T_EUlRS7_E_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_8constantEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_11conjunctionEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_12column_valueEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_5tokenEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_13function_callEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_4castEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_15field_selectionEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_4nullEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_13bind_variableEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_16untyped_constantEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_17tuple_constructorEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_22collection_constructorEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSR_S6_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_S1V_SN_S1Z_S23_S27_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES2C_S2F_ (4 samples, 0.07%)</title><rect x="861.1" y="389" width="0.9" height="15.0" fill="rgb(249,122,33)" rx="2" ry="2" />
<text  x="864.12" y="399.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_pausable&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (1 samples, 0.02%)</title><rect x="858.9" y="549" width="0.2" height="15.0" fill="rgb(246,79,47)" rx="2" ry="2" />
<text  x="861.93" y="559.5" ></text>
</g>
<g >
<title>std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;::~pair (1 samples, 0.02%)</title><rect x="50.1" y="213" width="0.2" height="15.0" fill="rgb(208,114,50)" rx="2" ry="2" />
<text  x="53.07" y="223.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::~_Variant_storage (2 samples, 0.04%)</title><rect x="354.2" y="245" width="0.5" height="15.0" fill="rgb(244,141,1)" rx="2" ry="2" />
<text  x="357.21" y="255.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::~_Variant_storage (2 samples, 0.04%)</title><rect x="59.5" y="341" width="0.4" height="15.0" fill="rgb(244,137,31)" rx="2" ry="2" />
<text  x="62.49" y="351.5" ></text>
</g>
<g >
<title>bplus::data&lt;long, intrusive_array&lt;memtable_entry&gt;, dht::raw_token_less_comparator, 16ul,  (1 samples, 0.02%)</title><rect x="10.9" y="597" width="0.2" height="15.0" fill="rgb(223,21,40)" rx="2" ry="2" />
<text  x="13.88" y="607.5" ></text>
</g>
<g >
<title>std::hash&lt;auth::resource&gt;::operator (11 samples, 0.20%)</title><rect x="819.1" y="405" width="2.4" height="15.0" fill="rgb(251,206,23)" rx="2" ry="2" />
<text  x="822.07" y="415.5" ></text>
</g>
<g >
<title>[unknown] (338 samples, 6.27%)</title><rect x="10.4" y="693" width="74.0" height="15.0" fill="rgb(247,48,10)" rx="2" ry="2" />
<text  x="13.44" y="703.5" >[unknown]</text>
</g>
<g >
<title>std::optional&lt;reader_concurrency_semaphore::entry&gt;::optional&lt;reader_concurrency_semaphore::entry, true&gt; (5 samples, 0.09%)</title><rect x="1025.6" y="213" width="1.1" height="15.0" fill="rgb(215,42,17)" rx="2" ry="2" />
<text  x="1028.56" y="223.5" ></text>
</g>
<g >
<title>antlr3::Lexer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchc (2 samples, 0.04%)</title><rect x="36.1" y="309" width="0.4" height="15.0" fill="rgb(213,25,20)" rx="2" ry="2" />
<text  x="39.06" y="319.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::~_Variant_storage (1 samples, 0.02%)</title><rect x="664.5" y="421" width="0.2" height="15.0" fill="rgb(220,34,47)" rx="2" ry="2" />
<text  x="667.49" y="431.5" ></text>
</g>
<g >
<title>cql3::cf_name::cf_name (1 samples, 0.02%)</title><rect x="43.5" y="421" width="0.2" height="15.0" fill="rgb(241,58,50)" rx="2" ry="2" />
<text  x="46.50" y="431.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (1 samples, 0.02%)</title><rect x="756.9" y="405" width="0.2" height="15.0" fill="rgb(211,217,11)" rx="2" ry="2" />
<text  x="759.89" y="415.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_no_esft&lt;query::read_command&gt;::shared_ptr_no_esft&lt;utils::UUID const&amp;, utils::UUID, query::partition_slice, query::max_result_size, query::row_limit, query::partition_limit, std::chrono::time_point&lt;gc_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt; &gt;&amp;, std::optional&lt;tracing::trace_info&gt;, utils::UUID, seastar::bool_class&lt;query::is_first_page_tag&gt; const&amp;, long&gt; (7 samples, 0.13%)</title><rect x="1110.7" y="469" width="1.6" height="15.0" fill="rgb(230,105,30)" rx="2" ry="2" />
<text  x="1113.73" y="479.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.02%)</title><rect x="45.9" y="261" width="0.2" height="15.0" fill="rgb(224,157,49)" rx="2" ry="2" />
<text  x="48.91" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.06%)</title><rect x="1034.1" y="309" width="0.7" height="15.0" fill="rgb(208,209,7)" rx="2" ry="2" />
<text  x="1037.10" y="319.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (1 samples, 0.02%)</title><rect x="61.5" y="341" width="0.2" height="15.0" fill="rgb(218,46,53)" rx="2" ry="2" />
<text  x="64.46" y="351.5" ></text>
</g>
<g >
<title>schema::~schema (1 samples, 0.02%)</title><rect x="703.5" y="229" width="0.2" height="15.0" fill="rgb(222,106,12)" rx="2" ry="2" />
<text  x="706.46" y="239.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;managed_bytes&gt;::_M_reset (1 samples, 0.02%)</title><rect x="909.1" y="421" width="0.2" height="15.0" fill="rgb(207,158,41)" rx="2" ry="2" />
<text  x="912.07" y="431.5" ></text>
</g>
<g >
<title>utils::array_search_gt (1 samples, 0.02%)</title><rect x="502.9" y="357" width="0.2" height="15.0" fill="rgb(229,113,50)" rx="2" ry="2" />
<text  x="505.89" y="367.5" ></text>
</g>
<g >
<title>cql3::statements::update_statement::execute_operations_for_key (1 samples, 0.02%)</title><rect x="865.1" y="421" width="0.2" height="15.0" fill="rgb(222,19,8)" rx="2" ry="2" />
<text  x="868.06" y="431.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="570.5" y="437" width="0.3" height="15.0" fill="rgb(216,158,42)" rx="2" ry="2" />
<text  x="573.55" y="447.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (1 samples, 0.02%)</title><rect x="1119.3" y="229" width="0.2" height="15.0" fill="rgb(231,199,46)" rx="2" ry="2" />
<text  x="1122.27" y="239.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.02%)</title><rect x="43.3" y="213" width="0.2" height="15.0" fill="rgb(254,19,24)" rx="2" ry="2" />
<text  x="46.28" y="223.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;void&gt;  (2 samples, 0.04%)</title><rect x="83.8" y="677" width="0.4" height="15.0" fill="rgb(206,207,16)" rx="2" ry="2" />
<text  x="86.79" y="687.5" ></text>
</g>
<g >
<title>__dynamic_cast (1 samples, 0.02%)</title><rect x="10.7" y="661" width="0.2" height="15.0" fill="rgb(220,70,2)" rx="2" ry="2" />
<text  x="13.66" y="671.5" ></text>
</g>
<g >
<title>fmt::v7::detail::fallback_formatter&lt;sstables::formatted_sstables_list, char, void&gt;::format&lt;fmt::v7::detail::buffer_appender&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="80.3" y="645" width="0.2" height="15.0" fill="rgb(218,129,42)" rx="2" ry="2" />
<text  x="83.29" y="655.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;query::result_memory_accounter&gt;::take (3 samples, 0.06%)</title><rect x="625.7" y="485" width="0.7" height="15.0" fill="rgb(221,29,39)" rx="2" ry="2" />
<text  x="628.73" y="495.5" ></text>
</g>
<g >
<title>seastar::semaphore_units&lt;seastar::semaphore_default_exception_factory, std::chrono::_V2::steady_clock&gt;::return_all (3 samples, 0.06%)</title><rect x="99.1" y="501" width="0.7" height="15.0" fill="rgb(235,123,43)" rx="2" ry="2" />
<text  x="102.12" y="511.5" ></text>
</g>
<g >
<title>nonwrapping_interval&lt;clustering_key_prefix&gt;::nonwrapping_interval (10 samples, 0.19%)</title><rect x="1097.6" y="437" width="2.2" height="15.0" fill="rgb(252,117,16)" rx="2" ry="2" />
<text  x="1100.60" y="447.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (14 samples, 0.26%)</title><rect x="845.3" y="437" width="3.1" height="15.0" fill="rgb(216,200,7)" rx="2" ry="2" />
<text  x="848.35" y="447.5" ></text>
</g>
<g >
<title>std::__relocate_a_1&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;*, std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;*, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="50.1" y="277" width="0.2" height="15.0" fill="rgb(228,62,25)" rx="2" ry="2" />
<text  x="53.07" y="287.5" ></text>
</g>
<g >
<title>compare_unsigned&lt;managed_bytes_basic_view&lt; (6 samples, 0.11%)</title><rect x="509.2" y="277" width="1.4" height="15.0" fill="rgb(254,11,48)" rx="2" ry="2" />
<text  x="512.24" y="287.5" ></text>
</g>
<g >
<title>fmt::v7::detail::arg_formatter_base&lt;fmt::v7::detail::buffer_appender&lt;char&gt;, char, fmt::v7::detail::error_handler&gt;::operator (1 samples, 0.02%)</title><rect x="80.3" y="613" width="0.2" height="15.0" fill="rgb(221,28,34)" rx="2" ry="2" />
<text  x="83.29" y="623.5" ></text>
</g>
<g >
<title>managed_bytes::free_chain (1 samples, 0.02%)</title><rect x="435.4" y="277" width="0.3" height="15.0" fill="rgb(232,199,1)" rx="2" ry="2" />
<text  x="438.45" y="287.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (3 samples, 0.06%)</title><rect x="1111.4" y="453" width="0.6" height="15.0" fill="rgb(217,34,27)" rx="2" ry="2" />
<text  x="1114.39" y="463.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.02%)</title><rect x="17.7" y="581" width="0.2" height="15.0" fill="rgb(215,78,43)" rx="2" ry="2" />
<text  x="20.66" y="591.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (4 samples, 0.07%)</title><rect x="543.8" y="405" width="0.9" height="15.0" fill="rgb(252,183,8)" rx="2" ry="2" />
<text  x="546.84" y="415.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reclaiming_disabled&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::lsa_partition_reader::next_row (1 samples, 0.02%)</title><rect x="79.4" y="389" width="0.2" height="15.0" fill="rgb(246,125,24)" rx="2" ry="2" />
<text  x="82.41" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="107.0" y="293" width="0.2" height="15.0" fill="rgb(223,40,38)" rx="2" ry="2" />
<text  x="110.00" y="303.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::then_impl&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (3 samples, 0.06%)</title><rect x="175.8" y="437" width="0.6" height="15.0" fill="rgb(240,140,53)" rx="2" ry="2" />
<text  x="178.76" y="447.5" ></text>
</g>
<g >
<title>ser::writer_of_query_result&lt;bytes_ostream&gt;::start_partitions (1 samples, 0.02%)</title><rect x="622.2" y="485" width="0.2" height="15.0" fill="rgb(252,88,42)" rx="2" ry="2" />
<text  x="625.22" y="495.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::clear (2 samples, 0.04%)</title><rect x="303.0" y="341" width="0.4" height="15.0" fill="rgb(247,228,39)" rx="2" ry="2" />
<text  x="305.97" y="351.5" ></text>
</g>
<g >
<title>seastar::repeat&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (679 samples, 12.60%)</title><rect x="176.6" y="437" width="148.7" height="15.0" fill="rgb(230,19,19)" rx="2" ry="2" />
<text  x="179.63" y="447.5" >seastar::repeat&lt;me..</text>
</g>
<g >
<title>operator new (4 samples, 0.07%)</title><rect x="1033.9" y="325" width="0.9" height="15.0" fill="rgb(243,17,53)" rx="2" ry="2" />
<text  x="1036.88" y="335.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;void&gt;::set_value&lt;&gt; (1 samples, 0.02%)</title><rect x="94.7" y="549" width="0.3" height="15.0" fill="rgb(247,12,34)" rx="2" ry="2" />
<text  x="97.74" y="559.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="791.0" y="341" width="0.3" height="15.0" fill="rgb(249,89,7)" rx="2" ry="2" />
<text  x="794.05" y="351.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_mutations_locally (1 samples, 0.02%)</title><rect x="107.7" y="469" width="0.2" height="15.0" fill="rgb(237,102,33)" rx="2" ry="2" />
<text  x="110.66" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.06%)</title><rect x="632.5" y="469" width="0.7" height="15.0" fill="rgb(220,114,38)" rx="2" ry="2" />
<text  x="635.52" y="479.5" ></text>
</g>
<g >
<title>operator delete (7 samples, 0.13%)</title><rect x="704.1" y="549" width="1.6" height="15.0" fill="rgb(235,26,2)" rx="2" ry="2" />
<text  x="707.12" y="559.5" ></text>
</g>
<g >
<title>_start (4 samples, 0.07%)</title><rect x="1171.4" y="693" width="0.9" height="15.0" fill="rgb(205,68,22)" rx="2" ry="2" />
<text  x="1174.39" y="703.5" ></text>
</g>
<g >
<title>std::default_delete&lt;cql3::expr::expression::impl&gt;::operator (1 samples, 0.02%)</title><rect x="664.5" y="485" width="0.2" height="15.0" fill="rgb(217,158,16)" rx="2" ry="2" />
<text  x="667.49" y="495.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (3 samples, 0.06%)</title><rect x="283.9" y="261" width="0.7" height="15.0" fill="rgb(246,100,8)" rx="2" ry="2" />
<text  x="286.92" y="271.5" ></text>
</g>
<g >
<title>std::optional&lt;mutation_querier&gt;::emplace&lt;mutation_querier&gt; (7 samples, 0.13%)</title><rect x="354.9" y="245" width="1.5" height="15.0" fill="rgb(238,128,23)" rx="2" ry="2" />
<text  x="357.87" y="255.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::contains&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (2 samples, 0.04%)</title><rect x="828.5" y="421" width="0.4" height="15.0" fill="rgb(212,63,6)" rx="2" ry="2" />
<text  x="831.49" y="431.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (1 samples, 0.02%)</title><rect x="1167.4" y="565" width="0.3" height="15.0" fill="rgb(248,69,31)" rx="2" ry="2" />
<text  x="1170.45" y="575.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.02%)</title><rect x="767.4" y="469" width="0.2" height="15.0" fill="rgb(211,12,1)" rx="2" ry="2" />
<text  x="770.40" y="479.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::pop_back (1 samples, 0.02%)</title><rect x="41.3" y="389" width="0.2" height="15.0" fill="rgb(236,2,28)" rx="2" ry="2" />
<text  x="44.31" y="399.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (1 samples, 0.02%)</title><rect x="1106.4" y="485" width="0.2" height="15.0" fill="rgb(208,1,1)" rx="2" ry="2" />
<text  x="1109.36" y="495.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt;::_Copy_ctor_base (1 samples, 0.02%)</title><rect x="856.7" y="485" width="0.3" height="15.0" fill="rgb(224,138,19)" rx="2" ry="2" />
<text  x="859.74" y="495.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::CommonToken (2 samples, 0.04%)</title><rect x="23.6" y="277" width="0.4" height="15.0" fill="rgb(249,157,28)" rx="2" ry="2" />
<text  x="26.58" y="287.5" ></text>
</g>
<g >
<title>_ZSt5visitIR18overloaded_functorIJZN4cql34expr9find_atomIZNS2_4findERKNS2_10expressionENS2_6oper_tEEUlRKNS2_15binary_operatorEE_EEPS9_S6_T_EUlSA_E_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_8constantEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_11conjunctionEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_12column_valueEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_5tokenEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_21unresolved_identifierEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_25column_mutation_attributeEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_13function_callEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_4castEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_15field_selectionEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_4nullEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_13bind_variableEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_16untyped_constantEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_17tuple_constructorEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_22collection_constructorEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_20usertype_constructorEE_EEJRSt7variantIJSJ_S8_SN_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_SF_S1R_S1V_S1Z_EEEENSt13invoke_resultISD_JDpDTclsr3stdE3getILm0EEclsr3stdE7declvalIT0_EEEEEE4typeEOSD_DpOS29_ (1 samples, 0.02%)</title><rect x="670.4" y="485" width="0.2" height="15.0" fill="rgb(242,152,53)" rx="2" ry="2" />
<text  x="673.40" y="495.5" ></text>
</g>
<g >
<title>reader_permit::consume_resources (2 samples, 0.04%)</title><rect x="260.7" y="213" width="0.5" height="15.0" fill="rgb(222,223,28)" rx="2" ry="2" />
<text  x="263.71" y="223.5" ></text>
</g>
<g >
<title>posix_memalign (1 samples, 0.02%)</title><rect x="239.3" y="133" width="0.2" height="15.0" fill="rgb(218,42,5)" rx="2" ry="2" />
<text  x="242.26" y="143.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt;::_Copy_ctor_base (1 samples, 0.02%)</title><rect x="864.4" y="309" width="0.2" height="15.0" fill="rgb(238,93,48)" rx="2" ry="2" />
<text  x="867.40" y="319.5" ></text>
</g>
<g >
<title>_ZSt5visitIR18overloaded_functorIJZN4cql34expr9find_atomIZNS2_28has_slice_or_needs_filteringERKNS2_10expressionEEUlRKNS2_15binary_operatorEE_EEPS8_S6_T_EUlS9_E_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_8constantEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_11conjunctionEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_12column_valueEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_5tokenEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_21unresolved_identifierEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_25column_mutation_attributeEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_13function_callEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_4castEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_15field_selectionEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_4nullEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_13bind_variableEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_16untyped_constantEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_17tuple_constructorEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_22collection_constructorEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_20usertype_constructorEE_EEJRSt7variantIJSI_S7_SM_SQ_SU_SY_S12_S16_S1A_S1E_S1I_S1M_SE_S1Q_S1U_S1Y_EEEENSt13invoke_resultISC_JDpDTclsr3stdE3getILm0EEclsr3stdE7declvalIT0_EEEEEE4typeEOSC_DpOS28_ (1 samples, 0.02%)</title><rect x="669.3" y="485" width="0.2" height="15.0" fill="rgb(223,21,45)" rx="2" ry="2" />
<text  x="672.30" y="495.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::result_memory_accounter (2 samples, 0.04%)</title><rect x="630.1" y="485" width="0.4" height="15.0" fill="rgb(216,138,18)" rx="2" ry="2" />
<text  x="633.11" y="495.5" ></text>
</g>
<g >
<title>database::query (16 samples, 0.30%)</title><rect x="103.1" y="565" width="3.5" height="15.0" fill="rgb(234,101,53)" rx="2" ry="2" />
<text  x="106.06" y="575.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (4 samples, 0.07%)</title><rect x="728.9" y="565" width="0.8" height="15.0" fill="rgb(220,179,39)" rx="2" ry="2" />
<text  x="731.86" y="575.5" ></text>
</g>
<g >
<title>seastar::internal::uninitialized_wrapper_base&lt;service::storage_proxy_coordinator_query_result, false&gt;::uninitialized_set&lt;service::storage_proxy_coordinator_query_result&gt; (2 samples, 0.04%)</title><rect x="1144.0" y="533" width="0.5" height="15.0" fill="rgb(217,142,19)" rx="2" ry="2" />
<text  x="1147.02" y="543.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (2 samples, 0.04%)</title><rect x="440.0" y="341" width="0.5" height="15.0" fill="rgb(222,75,9)" rx="2" ry="2" />
<text  x="443.05" y="351.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.04%)</title><rect x="48.3" y="325" width="0.5" height="15.0" fill="rgb(229,39,0)" rx="2" ry="2" />
<text  x="51.32" y="335.5" ></text>
</g>
<g >
<title>bytes_view_hasher::update (1 samples, 0.02%)</title><rect x="761.5" y="325" width="0.2" height="15.0" fill="rgb(214,49,30)" rx="2" ry="2" />
<text  x="764.49" y="335.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="48.1" y="277" width="0.2" height="15.0" fill="rgb(238,155,10)" rx="2" ry="2" />
<text  x="51.10" y="287.5" ></text>
</g>
<g >
<title>__strcmp_avx2 (10 samples, 0.19%)</title><rect x="14.2" y="645" width="2.1" height="15.0" fill="rgb(250,183,20)" rx="2" ry="2" />
<text  x="17.16" y="655.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="863.7" y="261" width="0.3" height="15.0" fill="rgb(224,138,14)" rx="2" ry="2" />
<text  x="866.74" y="271.5" ></text>
</g>
<g >
<title>absl::container_internal::probe_seq&lt;16ul&gt;::probe_seq (2 samples, 0.04%)</title><rect x="1054.5" y="373" width="0.4" height="15.0" fill="rgb(228,35,47)" rx="2" ry="2" />
<text  x="1057.46" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;seastar::lw_shared_ptr&lt;cql3::column_specification&gt;, std::allocator&lt;seastar::lw_shared_ptr&lt;cql3::column_specification&gt; &gt; &gt;::vector (1 samples, 0.02%)</title><rect x="72.8" y="421" width="0.3" height="15.0" fill="rgb(209,193,39)" rx="2" ry="2" />
<text  x="75.84" y="431.5" ></text>
</g>
<g >
<title>cql3::constants::value::get (1 samples, 0.02%)</title><rect x="864.4" y="325" width="0.2" height="15.0" fill="rgb(223,89,0)" rx="2" ry="2" />
<text  x="867.40" y="335.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="49.9" y="325" width="0.2" height="15.0" fill="rgb(240,86,6)" rx="2" ry="2" />
<text  x="52.85" y="335.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (2 samples, 0.04%)</title><rect x="786.9" y="373" width="0.4" height="15.0" fill="rgb(254,200,29)" rx="2" ry="2" />
<text  x="789.89" y="383.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (2 samples, 0.04%)</title><rect x="58.0" y="373" width="0.4" height="15.0" fill="rgb(248,132,41)" rx="2" ry="2" />
<text  x="60.95" y="383.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, database::query (5 samples, 0.09%)</title><rect x="702.4" y="565" width="1.1" height="15.0" fill="rgb(247,167,19)" rx="2" ry="2" />
<text  x="705.37" y="575.5" ></text>
</g>
<g >
<title>boost::heap::binomial_heap&lt;logalloc::region_group*, boost::heap::compare&lt;logalloc::region_group::subgroup_maximal_region_ascending_less_comparator&gt;, boost::heap::allocator&lt;std::allocator&lt;logalloc::region_group*&gt; &gt;, boost::heap::constant_time_size&lt;false&gt;, boost::parameter::void_&gt;::top (1 samples, 0.02%)</title><rect x="80.9" y="453" width="0.3" height="15.0" fill="rgb(243,66,12)" rx="2" ry="2" />
<text  x="83.94" y="463.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::abstract_read_executor&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="727.3" y="549" width="0.2" height="15.0" fill="rgb(242,100,5)" rx="2" ry="2" />
<text  x="730.33" y="559.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value, std::allocator&lt;cql3::raw_value&gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="854.8" y="501" width="0.2" height="15.0" fill="rgb(226,8,35)" rx="2" ry="2" />
<text  x="857.77" y="511.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.02%)</title><rect x="58.2" y="325" width="0.2" height="15.0" fill="rgb(231,153,34)" rx="2" ry="2" />
<text  x="61.17" y="335.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (2 samples, 0.04%)</title><rect x="134.8" y="437" width="0.4" height="15.0" fill="rgb(216,113,25)" rx="2" ry="2" />
<text  x="137.81" y="447.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_nodes (1 samples, 0.02%)</title><rect x="682.4" y="533" width="0.3" height="15.0" fill="rgb(241,70,30)" rx="2" ry="2" />
<text  x="685.44" y="543.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (1 samples, 0.02%)</title><rect x="337.8" y="165" width="0.2" height="15.0" fill="rgb(222,10,46)" rx="2" ry="2" />
<text  x="340.79" y="175.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::emplace_back&lt;mutation_fragment&gt; (3 samples, 0.06%)</title><rect x="302.3" y="341" width="0.7" height="15.0" fill="rgb(231,62,18)" rx="2" ry="2" />
<text  x="305.32" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (3 samples, 0.06%)</title><rect x="28.4" y="293" width="0.6" height="15.0" fill="rgb(233,55,52)" rx="2" ry="2" />
<text  x="31.39" y="303.5" ></text>
</g>
<g >
<title>ser::qr_clustered_row__cells&lt;bytes_ostream&gt;::qr_clustered_row__cells (3 samples, 0.06%)</title><rect x="367.8" y="245" width="0.6" height="15.0" fill="rgb(229,132,43)" rx="2" ry="2" />
<text  x="370.79" y="255.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (1 samples, 0.02%)</title><rect x="58.0" y="325" width="0.2" height="15.0" fill="rgb(237,210,6)" rx="2" ry="2" />
<text  x="60.95" y="335.5" ></text>
</g>
<g >
<title>gms::gossiper::is_alive (1 samples, 0.02%)</title><rect x="1084.5" y="341" width="0.2" height="15.0" fill="rgb(211,110,53)" rx="2" ry="2" />
<text  x="1087.46" y="351.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_data_requests (45 samples, 0.84%)</title><rect x="716.2" y="533" width="9.8" height="15.0" fill="rgb(206,53,27)" rx="2" ry="2" />
<text  x="719.16" y="543.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::entry::entry (3 samples, 0.06%)</title><rect x="1021.2" y="261" width="0.6" height="15.0" fill="rgb(228,55,31)" rx="2" ry="2" />
<text  x="1024.18" y="271.5" ></text>
</g>
<g >
<title>sstables::write&lt;unsigned int, unsigned char&gt; (1 samples, 0.02%)</title><rect x="80.7" y="469" width="0.2" height="15.0" fill="rgb(236,175,50)" rx="2" ry="2" />
<text  x="83.73" y="479.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.06%)</title><rect x="447.1" y="437" width="0.6" height="15.0" fill="rgb(216,65,19)" rx="2" ry="2" />
<text  x="450.05" y="447.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::_M_create_storage (3 samples, 0.06%)</title><rect x="160.9" y="469" width="0.6" height="15.0" fill="rgb(213,229,34)" rx="2" ry="2" />
<text  x="163.87" y="479.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (1 samples, 0.02%)</title><rect x="1111.8" y="437" width="0.2" height="15.0" fill="rgb(232,4,46)" rx="2" ry="2" />
<text  x="1114.83" y="447.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (1 samples, 0.02%)</title><rect x="812.1" y="325" width="0.2" height="15.0" fill="rgb(216,91,39)" rx="2" ry="2" />
<text  x="815.07" y="335.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;std::unique_ptr&lt;char [], seastar::mmap_deleter&gt;  (1 samples, 0.02%)</title><rect x="1170.3" y="549" width="0.2" height="15.0" fill="rgb(248,205,44)" rx="2" ry="2" />
<text  x="1173.29" y="559.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.02%)</title><rect x="73.3" y="229" width="0.2" height="15.0" fill="rgb(220,94,27)" rx="2" ry="2" />
<text  x="76.28" y="239.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::disable_abort_on_alloc_failure_temporarily (1 samples, 0.02%)</title><rect x="276.0" y="245" width="0.3" height="15.0" fill="rgb(238,134,19)" rx="2" ry="2" />
<text  x="279.04" y="255.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::execute (305 samples, 5.66%)</title><rect x="982.6" y="421" width="66.8" height="15.0" fill="rgb(218,87,39)" rx="2" ry="2" />
<text  x="985.64" y="431.5" >service..</text>
</g>
<g >
<title>locator::effective_replication_map::get_natural_endpoints_without_node_being_replaced (2 samples, 0.04%)</title><rect x="1070.9" y="389" width="0.4" height="15.0" fill="rgb(232,98,53)" rx="2" ry="2" />
<text  x="1073.88" y="399.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (1 samples, 0.02%)</title><rect x="1057.5" y="325" width="0.2" height="15.0" fill="rgb(208,168,2)" rx="2" ry="2" />
<text  x="1060.53" y="335.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (3 samples, 0.06%)</title><rect x="921.5" y="389" width="0.7" height="15.0" fill="rgb(247,182,30)" rx="2" ry="2" />
<text  x="924.55" y="399.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (6 samples, 0.11%)</title><rect x="223.5" y="197" width="1.3" height="15.0" fill="rgb(227,36,39)" rx="2" ry="2" />
<text  x="226.49" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="537.9" y="373" width="0.2" height="15.0" fill="rgb(248,172,3)" rx="2" ry="2" />
<text  x="540.92" y="383.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (1 samples, 0.02%)</title><rect x="333.8" y="293" width="0.3" height="15.0" fill="rgb(208,95,51)" rx="2" ry="2" />
<text  x="336.85" y="303.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (1 samples, 0.02%)</title><rect x="77.0" y="325" width="0.2" height="15.0" fill="rgb(229,88,9)" rx="2" ry="2" />
<text  x="80.00" y="335.5" ></text>
</g>
<g >
<title>cql3::restrictions::restriction::restriction (2 samples, 0.04%)</title><rect x="72.4" y="405" width="0.4" height="15.0" fill="rgb(245,178,12)" rx="2" ry="2" />
<text  x="75.40" y="415.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::maybe_decay_reserve (1 samples, 0.02%)</title><rect x="218.5" y="277" width="0.2" height="15.0" fill="rgb(243,100,53)" rx="2" ry="2" />
<text  x="221.45" y="287.5" ></text>
</g>
<g >
<title>flat_mutation_reader::peek (2 samples, 0.04%)</title><rect x="168.7" y="485" width="0.5" height="15.0" fill="rgb(216,50,37)" rx="2" ry="2" />
<text  x="171.75" y="495.5" ></text>
</g>
<g >
<title>cql3::expr::expression::~expression (1 samples, 0.02%)</title><rect x="57.7" y="389" width="0.3" height="15.0" fill="rgb(241,89,46)" rx="2" ry="2" />
<text  x="60.73" y="399.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::storage_proxy::send_to_live_endpoints (4 samples, 0.07%)</title><rect x="728.0" y="565" width="0.9" height="15.0" fill="rgb(235,70,14)" rx="2" ry="2" />
<text  x="730.98" y="575.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="17.4" y="581" width="0.3" height="15.0" fill="rgb(224,96,45)" rx="2" ry="2" />
<text  x="20.44" y="591.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (4 samples, 0.07%)</title><rect x="701.3" y="501" width="0.8" height="15.0" fill="rgb(222,210,24)" rx="2" ry="2" />
<text  x="704.27" y="511.5" ></text>
</g>
<g >
<title>seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::expand (2 samples, 0.04%)</title><rect x="322.0" y="389" width="0.5" height="15.0" fill="rgb(216,134,42)" rx="2" ry="2" />
<text  x="325.02" y="399.5" ></text>
</g>
<g >
<title>std::apply&lt;auth::permissions_cache::get (1 samples, 0.02%)</title><rect x="812.3" y="341" width="0.2" height="15.0" fill="rgb(220,193,1)" rx="2" ry="2" />
<text  x="815.29" y="351.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (10 samples, 0.19%)</title><rect x="588.7" y="357" width="2.2" height="15.0" fill="rgb(243,222,15)" rx="2" ry="2" />
<text  x="591.72" y="367.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (1 samples, 0.02%)</title><rect x="776.8" y="421" width="0.2" height="15.0" fill="rgb(213,213,51)" rx="2" ry="2" />
<text  x="779.81" y="431.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="197.9" y="293" width="0.2" height="15.0" fill="rgb(245,117,16)" rx="2" ry="2" />
<text  x="200.87" y="303.5" ></text>
</g>
<g >
<title>allocation_strategy::construct&lt;partition_version, mutation_partition&gt; (1 samples, 0.02%)</title><rect x="84.0" y="549" width="0.2" height="15.0" fill="rgb(214,116,15)" rx="2" ry="2" />
<text  x="87.01" y="559.5" ></text>
</g>
<g >
<title>seastar::future&lt;bool&gt;::get0 (1 samples, 0.02%)</title><rect x="82.7" y="373" width="0.2" height="15.0" fill="rgb(232,54,22)" rx="2" ry="2" />
<text  x="85.70" y="383.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate (1 samples, 0.02%)</title><rect x="888.9" y="373" width="0.2" height="15.0" fill="rgb(219,164,42)" rx="2" ry="2" />
<text  x="891.92" y="383.5" ></text>
</g>
<g >
<title>position_in_partition_view::position_in_partition_view (1 samples, 0.02%)</title><rect x="278.2" y="277" width="0.3" height="15.0" fill="rgb(251,79,27)" rx="2" ry="2" />
<text  x="281.23" y="287.5" ></text>
</g>
<g >
<title>seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;::swap (4 samples, 0.07%)</title><rect x="754.9" y="437" width="0.9" height="15.0" fill="rgb(242,51,24)" rx="2" ry="2" />
<text  x="757.92" y="447.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (1 samples, 0.02%)</title><rect x="1030.6" y="277" width="0.2" height="15.0" fill="rgb(225,227,32)" rx="2" ry="2" />
<text  x="1033.59" y="287.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::has_token (2 samples, 0.04%)</title><rect x="951.5" y="437" width="0.5" height="15.0" fill="rgb(248,199,24)" rx="2" ry="2" />
<text  x="954.55" y="447.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_ba202cd8bdcfd8c6f1dbb280f642f5ad31cbca7c] (1 samples, 0.02%)</title><rect x="193.7" y="309" width="0.2" height="15.0" fill="rgb(236,172,32)" rx="2" ry="2" />
<text  x="196.71" y="319.5" ></text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::modification_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::operator (2 samples, 0.04%)</title><rect x="19.6" y="501" width="0.5" height="15.0" fill="rgb(230,157,14)" rx="2" ry="2" />
<text  x="22.63" y="511.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::find_and_unlink_span_reclaiming (1 samples, 0.02%)</title><rect x="976.1" y="341" width="0.2" height="15.0" fill="rgb(228,53,31)" rx="2" ry="2" />
<text  x="979.07" y="351.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="56.4" y="245" width="0.2" height="15.0" fill="rgb(213,28,29)" rx="2" ry="2" />
<text  x="59.42" y="255.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="54.9" y="277" width="0.2" height="15.0" fill="rgb(223,140,47)" rx="2" ry="2" />
<text  x="57.89" y="287.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (1 samples, 0.02%)</title><rect x="303.6" y="357" width="0.3" height="15.0" fill="rgb(225,132,43)" rx="2" ry="2" />
<text  x="306.63" y="367.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (1 samples, 0.02%)</title><rect x="859.6" y="389" width="0.2" height="15.0" fill="rgb(253,45,47)" rx="2" ry="2" />
<text  x="862.58" y="399.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::result_memory_accounter (2 samples, 0.04%)</title><rect x="619.8" y="469" width="0.5" height="15.0" fill="rgb(209,116,45)" rx="2" ry="2" />
<text  x="622.82" y="479.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;interval_bound&lt;dht::ring_position&gt;, false, false&gt;::_Optional_base (1 samples, 0.02%)</title><rect x="948.0" y="421" width="0.3" height="15.0" fill="rgb(231,69,44)" rx="2" ry="2" />
<text  x="951.04" y="431.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (3 samples, 0.06%)</title><rect x="793.5" y="261" width="0.6" height="15.0" fill="rgb(235,89,27)" rx="2" ry="2" />
<text  x="796.46" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::find_and_unlink_span_reclaiming (2 samples, 0.04%)</title><rect x="1018.8" y="229" width="0.4" height="15.0" fill="rgb(231,119,15)" rx="2" ry="2" />
<text  x="1021.77" y="239.5" ></text>
</g>
<g >
<title>std::forward_as_tuple&lt;auth::role_or_anonymous, auth::get_permissions (1 samples, 0.02%)</title><rect x="813.4" y="357" width="0.2" height="15.0" fill="rgb(221,89,19)" rx="2" ry="2" />
<text  x="816.38" y="367.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (1 samples, 0.02%)</title><rect x="937.3" y="437" width="0.2" height="15.0" fill="rgb(251,217,36)" rx="2" ry="2" />
<text  x="940.31" y="447.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;seastar::shared_ptr&lt;cql3::relation&gt; &gt; &gt;::allocate (1 samples, 0.02%)</title><rect x="62.8" y="341" width="0.2" height="15.0" fill="rgb(223,48,41)" rx="2" ry="2" />
<text  x="65.77" y="351.5" ></text>
</g>
<g >
<title>schema::get_partitioner (3 samples, 0.06%)</title><rect x="941.3" y="469" width="0.6" height="15.0" fill="rgb(207,59,17)" rx="2" ry="2" />
<text  x="944.26" y="479.5" ></text>
</g>
<g >
<title>seastar::execution_stage::flush (1 samples, 0.02%)</title><rect x="19.9" y="469" width="0.2" height="15.0" fill="rgb(219,207,36)" rx="2" ry="2" />
<text  x="22.85" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="520.4" y="341" width="0.2" height="15.0" fill="rgb(226,202,20)" rx="2" ry="2" />
<text  x="523.41" y="351.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const&amp;, auth::resource&amp;&amp;, service::client_state::has_column_family_access (1 samples, 0.02%)</title><rect x="821.5" y="453" width="0.2" height="15.0" fill="rgb(244,146,10)" rx="2" ry="2" />
<text  x="824.48" y="463.5" ></text>
</g>
<g >
<title>__start_context (287 samples, 5.33%)</title><rect x="16.3" y="677" width="62.9" height="15.0" fill="rgb(228,165,46)" rx="2" ry="2" />
<text  x="19.35" y="687.5" >__star..</text>
</g>
<g >
<title>service::write_response_handler::write_response_handler (1 samples, 0.02%)</title><rect x="1133.5" y="229" width="0.2" height="15.0" fill="rgb(221,94,50)" rx="2" ry="2" />
<text  x="1136.51" y="239.5" ></text>
</g>
<g >
<title>std::operator+ (3 samples, 0.06%)</title><rect x="41.7" y="245" width="0.7" height="15.0" fill="rgb(209,134,53)" rx="2" ry="2" />
<text  x="44.75" y="255.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::_M_create_storage (5 samples, 0.09%)</title><rect x="943.2" y="453" width="1.1" height="15.0" fill="rgb(212,0,9)" rx="2" ry="2" />
<text  x="946.23" y="463.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::local (1 samples, 0.02%)</title><rect x="982.0" y="421" width="0.2" height="15.0" fill="rgb(207,154,5)" rx="2" ry="2" />
<text  x="984.98" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="95.0" y="549" width="0.2" height="15.0" fill="rgb(219,223,39)" rx="2" ry="2" />
<text  x="97.96" y="559.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="24.9" y="357" width="0.2" height="15.0" fill="rgb(246,189,51)" rx="2" ry="2" />
<text  x="27.89" y="367.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;database&gt;::~shared_ptr_count_for (1 samples, 0.02%)</title><rect x="703.5" y="405" width="0.2" height="15.0" fill="rgb(208,132,29)" rx="2" ry="2" />
<text  x="706.46" y="415.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_allocate_node&lt;nonwrapping_interval&lt;dht::token&gt;, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; (7 samples, 0.13%)</title><rect x="1153.2" y="517" width="1.5" height="15.0" fill="rgb(224,21,51)" rx="2" ry="2" />
<text  x="1156.21" y="527.5" ></text>
</g>
<g >
<title>mutation_partition::~mutation_partition (1 samples, 0.02%)</title><rect x="107.0" y="453" width="0.2" height="15.0" fill="rgb(232,58,53)" rx="2" ry="2" />
<text  x="110.00" y="463.5" ></text>
</g>
<g >
<title>antlr3::IntStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::get_super (1 samples, 0.02%)</title><rect x="29.0" y="293" width="0.3" height="15.0" fill="rgb(207,217,29)" rx="2" ry="2" />
<text  x="32.05" y="303.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (2 samples, 0.04%)</title><rect x="671.3" y="533" width="0.4" height="15.0" fill="rgb(230,46,33)" rx="2" ry="2" />
<text  x="674.27" y="543.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="80.7" y="661" width="0.2" height="15.0" fill="rgb(217,189,6)" rx="2" ry="2" />
<text  x="83.73" y="671.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::range_tombstone_accumulator (18 samples, 0.33%)</title><rect x="570.3" y="453" width="4.0" height="15.0" fill="rgb(232,213,49)" rx="2" ry="2" />
<text  x="573.33" y="463.5" ></text>
</g>
<g >
<title>seastar::repeat&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (1 samples, 0.02%)</title><rect x="337.8" y="309" width="0.2" height="15.0" fill="rgb(244,121,2)" rx="2" ry="2" />
<text  x="340.79" y="319.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.04%)</title><rect x="49.0" y="325" width="0.4" height="15.0" fill="rgb(239,173,11)" rx="2" ry="2" />
<text  x="51.98" y="335.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (3 samples, 0.06%)</title><rect x="1031.0" y="293" width="0.7" height="15.0" fill="rgb(227,101,12)" rx="2" ry="2" />
<text  x="1034.03" y="303.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (2 samples, 0.04%)</title><rect x="55.5" y="293" width="0.5" height="15.0" fill="rgb(251,207,28)" rx="2" ry="2" />
<text  x="58.54" y="303.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cident (3 samples, 0.06%)</title><rect x="58.0" y="389" width="0.6" height="15.0" fill="rgb(254,128,3)" rx="2" ry="2" />
<text  x="60.95" y="399.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, flat_mutation_reader, reader_concurrency_semaphore::inactive_read_handle&gt;::~_Variant_storage (2 samples, 0.04%)</title><rect x="607.3" y="485" width="0.5" height="15.0" fill="rgb(238,153,18)" rx="2" ry="2" />
<text  x="610.34" y="495.5" ></text>
</g>
<g >
<title>utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (48 samples, 0.89%)</title><rect x="796.5" y="277" width="10.5" height="15.0" fill="rgb(211,27,41)" rx="2" ry="2" />
<text  x="799.52" y="287.5" ></text>
</g>
<g >
<title>absl::hash_internal::AbslHashValue&lt;absl::hash_internal::HashState&gt; (5 samples, 0.09%)</title><rect x="840.1" y="421" width="1.1" height="15.0" fill="rgb(210,207,12)" rx="2" ry="2" />
<text  x="843.09" y="431.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;managed_bytes&gt;::allocate (1 samples, 0.02%)</title><rect x="943.0" y="453" width="0.2" height="15.0" fill="rgb(241,222,24)" rx="2" ry="2" />
<text  x="946.01" y="463.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (2 samples, 0.04%)</title><rect x="806.4" y="133" width="0.4" height="15.0" fill="rgb(232,4,2)" rx="2" ry="2" />
<text  x="809.37" y="143.5" ></text>
</g>
<g >
<title>std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="865.9" y="453" width="0.3" height="15.0" fill="rgb(234,128,15)" rx="2" ry="2" />
<text  x="868.93" y="463.5" ></text>
</g>
<g >
<title>std::optional&lt;query::querier&lt; (1 samples, 0.02%)</title><rect x="143.3" y="517" width="0.3" height="15.0" fill="rgb(241,38,50)" rx="2" ry="2" />
<text  x="146.35" y="527.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.02%)</title><rect x="58.6" y="165" width="0.2" height="15.0" fill="rgb(206,190,0)" rx="2" ry="2" />
<text  x="61.61" y="175.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned short, std::allocator&lt;unsigned short&gt; &gt;::_M_create_storage (1 samples, 0.02%)</title><rect x="69.1" y="501" width="0.2" height="15.0" fill="rgb(241,80,50)" rx="2" ry="2" />
<text  x="72.12" y="511.5" ></text>
</g>
<g >
<title>service::storage_proxy::got_response (3 samples, 0.06%)</title><rect x="728.2" y="549" width="0.7" height="15.0" fill="rgb(253,88,25)" rx="2" ry="2" />
<text  x="731.20" y="559.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (2 samples, 0.04%)</title><rect x="49.0" y="357" width="0.4" height="15.0" fill="rgb(205,226,18)" rx="2" ry="2" />
<text  x="51.98" y="367.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (16 samples, 0.30%)</title><rect x="439.6" y="373" width="3.5" height="15.0" fill="rgb(221,61,50)" rx="2" ry="2" />
<text  x="442.61" y="383.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (3 samples, 0.06%)</title><rect x="196.6" y="293" width="0.6" height="15.0" fill="rgb(234,27,43)" rx="2" ry="2" />
<text  x="199.56" y="303.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::selectStatement (1 samples, 0.02%)</title><rect x="11.1" y="341" width="0.2" height="15.0" fill="rgb(211,205,26)" rx="2" ry="2" />
<text  x="14.09" y="351.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::deallocate (1 samples, 0.02%)</title><rect x="322.5" y="389" width="0.2" height="15.0" fill="rgb(252,185,20)" rx="2" ry="2" />
<text  x="325.46" y="399.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::clear (1 samples, 0.02%)</title><rect x="730.8" y="565" width="0.3" height="15.0" fill="rgb(214,120,41)" rx="2" ry="2" />
<text  x="733.83" y="575.5" ></text>
</g>
<g >
<title>mutation_reader_merger::~mutation_reader_merger (1 samples, 0.02%)</title><rect x="486.0" y="389" width="0.2" height="15.0" fill="rgb(207,117,22)" rx="2" ry="2" />
<text  x="489.03" y="399.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (2 samples, 0.04%)</title><rect x="324.9" y="421" width="0.4" height="15.0" fill="rgb(249,127,36)" rx="2" ry="2" />
<text  x="327.87" y="431.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::maybe_drop_from (1 samples, 0.02%)</title><rect x="406.5" y="261" width="0.3" height="15.0" fill="rgb(246,16,42)" rx="2" ry="2" />
<text  x="409.54" y="271.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (17 samples, 0.32%)</title><rect x="1054.9" y="373" width="3.7" height="15.0" fill="rgb(228,182,49)" rx="2" ry="2" />
<text  x="1057.90" y="383.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::~result_memory_accounter (1 samples, 0.02%)</title><rect x="122.8" y="517" width="0.2" height="15.0" fill="rgb(237,27,46)" rx="2" ry="2" />
<text  x="125.77" y="527.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_Deque_iterator (1 samples, 0.02%)</title><rect x="24.9" y="261" width="0.2" height="15.0" fill="rgb(236,57,33)" rx="2" ry="2" />
<text  x="27.89" y="271.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.02%)</title><rect x="24.9" y="293" width="0.2" height="15.0" fill="rgb(209,108,7)" rx="2" ry="2" />
<text  x="27.89" y="303.5" ></text>
</g>
<g >
<title>ser::serializer&lt;schema_mutations&gt;::read&lt;seastar::simple_memory_input_stream&gt; (1 samples, 0.02%)</title><rect x="109.2" y="453" width="0.2" height="15.0" fill="rgb(251,77,31)" rx="2" ry="2" />
<text  x="112.19" y="463.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;database&gt;::operator= (1 samples, 0.02%)</title><rect x="703.5" y="437" width="0.2" height="15.0" fill="rgb(206,41,23)" rx="2" ry="2" />
<text  x="706.46" y="447.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.02%)</title><rect x="50.3" y="181" width="0.2" height="15.0" fill="rgb(242,39,0)" rx="2" ry="2" />
<text  x="53.29" y="191.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;false, false, std::random_access_iterator_tag&gt;::__copy_m&lt;char const*, fmt::v7::detail::buffer_appender&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="80.3" y="581" width="0.2" height="15.0" fill="rgb(253,108,16)" rx="2" ry="2" />
<text  x="83.29" y="591.5" ></text>
</g>
<g >
<title>std::__push_heap&lt;mutation_reader_merger::reader_and_fragment*, long, mutation_reader_merger::reader_and_fragment, __gnu_cxx::__ops::_Iter_comp_val&lt;mutation_reader_merger::reader_heap_compare&gt; &gt; (2 samples, 0.04%)</title><rect x="196.1" y="293" width="0.5" height="15.0" fill="rgb(224,74,53)" rx="2" ry="2" />
<text  x="199.12" y="303.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (1 samples, 0.02%)</title><rect x="645.4" y="485" width="0.3" height="15.0" fill="rgb(229,96,2)" rx="2" ry="2" />
<text  x="648.44" y="495.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (1 samples, 0.02%)</title><rect x="11.1" y="581" width="0.2" height="15.0" fill="rgb(235,121,44)" rx="2" ry="2" />
<text  x="14.09" y="591.5" ></text>
</g>
<g >
<title>row_cache::do_update (1 samples, 0.02%)</title><rect x="11.8" y="613" width="0.2" height="15.0" fill="rgb(209,119,3)" rx="2" ry="2" />
<text  x="14.75" y="623.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (1 samples, 0.02%)</title><rect x="865.7" y="437" width="0.2" height="15.0" fill="rgb(249,74,24)" rx="2" ry="2" />
<text  x="868.71" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.07%)</title><rect x="1032.3" y="261" width="0.9" height="15.0" fill="rgb(213,124,23)" rx="2" ry="2" />
<text  x="1035.35" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.02%)</title><rect x="644.8" y="421" width="0.2" height="15.0" fill="rgb(208,168,1)" rx="2" ry="2" />
<text  x="647.78" y="431.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;11ul, cql3::expr::untyped_constant&gt; (3 samples, 0.06%)</title><rect x="53.1" y="245" width="0.7" height="15.0" fill="rgb(240,88,25)" rx="2" ry="2" />
<text  x="56.14" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_List_node_base::_M_transfer (1 samples, 0.02%)</title><rect x="194.8" y="309" width="0.2" height="15.0" fill="rgb(208,102,0)" rx="2" ry="2" />
<text  x="197.81" y="319.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.02%)</title><rect x="55.1" y="261" width="0.2" height="15.0" fill="rgb(218,201,44)" rx="2" ry="2" />
<text  x="58.11" y="271.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.02%)</title><rect x="44.2" y="309" width="0.2" height="15.0" fill="rgb(248,73,8)" rx="2" ry="2" />
<text  x="47.16" y="319.5" ></text>
</g>
<g >
<title>partition_snapshot::slide_to_oldest (2 samples, 0.04%)</title><rect x="588.3" y="357" width="0.4" height="15.0" fill="rgb(209,114,21)" rx="2" ry="2" />
<text  x="591.29" y="367.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment&lt;schema const&amp;, rows_entry const&amp;&gt; (1 samples, 0.02%)</title><rect x="859.6" y="373" width="0.2" height="15.0" fill="rgb(219,68,29)" rx="2" ry="2" />
<text  x="862.58" y="383.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.02%)</title><rect x="56.0" y="197" width="0.2" height="15.0" fill="rgb(220,191,52)" rx="2" ry="2" />
<text  x="58.98" y="207.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (33 samples, 0.61%)</title><rect x="1172.3" y="693" width="7.2" height="15.0" fill="rgb(225,171,10)" rx="2" ry="2" />
<text  x="1175.26" y="703.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.02%)</title><rect x="43.3" y="229" width="0.2" height="15.0" fill="rgb(249,38,20)" rx="2" ry="2" />
<text  x="46.28" y="239.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="661" width="0.3" height="15.0" fill="rgb(252,38,15)" rx="2" ry="2" />
<text  x="13.44" y="671.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::check_queue_size (1 samples, 0.02%)</title><rect x="1021.0" y="261" width="0.2" height="15.0" fill="rgb(226,207,30)" rx="2" ry="2" />
<text  x="1023.96" y="271.5" ></text>
</g>
<g >
<title>table::make_reader (475 samples, 8.81%)</title><rect x="457.1" y="421" width="104.0" height="15.0" fill="rgb(220,147,9)" rx="2" ry="2" />
<text  x="460.13" y="431.5" >table::make_..</text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;5ul, cql3::expr::untyped_constant&gt; (1 samples, 0.02%)</title><rect x="53.6" y="85" width="0.2" height="15.0" fill="rgb(221,131,21)" rx="2" ry="2" />
<text  x="56.57" y="95.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::impl (1 samples, 0.02%)</title><rect x="556.3" y="325" width="0.2" height="15.0" fill="rgb(235,182,23)" rx="2" ry="2" />
<text  x="559.32" y="335.5" ></text>
</g>
<g >
<title>operator new (7 samples, 0.13%)</title><rect x="561.1" y="469" width="1.6" height="15.0" fill="rgb(248,35,7)" rx="2" ry="2" />
<text  x="564.13" y="479.5" ></text>
</g>
<g >
<title>partition_snapshot_row_cursor::prepare_heap (1 samples, 0.02%)</title><rect x="17.2" y="597" width="0.2" height="15.0" fill="rgb(239,59,22)" rx="2" ry="2" />
<text  x="20.23" y="607.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.04%)</title><rect x="522.6" y="341" width="0.4" height="15.0" fill="rgb(229,181,38)" rx="2" ry="2" />
<text  x="525.60" y="351.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (1 samples, 0.02%)</title><rect x="336.0" y="325" width="0.3" height="15.0" fill="rgb(238,96,22)" rx="2" ry="2" />
<text  x="339.04" y="335.5" ></text>
</g>
<g >
<title>single_node_cql_env::make_query_state (2 samples, 0.04%)</title><rect x="848.4" y="517" width="0.5" height="15.0" fill="rgb(216,199,39)" rx="2" ry="2" />
<text  x="851.42" y="527.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.07%)</title><rect x="909.7" y="373" width="0.9" height="15.0" fill="rgb(212,84,42)" rx="2" ry="2" />
<text  x="912.73" y="383.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::operator= (3 samples, 0.06%)</title><rect x="719.0" y="501" width="0.7" height="15.0" fill="rgb(235,70,3)" rx="2" ry="2" />
<text  x="722.01" y="511.5" ></text>
</g>
<g >
<title>utils::murmur_hash::hash3_x64_128&lt;legacy_compound_view&lt;compound_type&lt; (1 samples, 0.02%)</title><rect x="109.2" y="341" width="0.2" height="15.0" fill="rgb(227,85,3)" rx="2" ry="2" />
<text  x="112.19" y="351.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.02%)</title><rect x="46.1" y="357" width="0.2" height="15.0" fill="rgb(251,22,4)" rx="2" ry="2" />
<text  x="49.13" y="367.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="1139.4" y="533" width="0.2" height="15.0" fill="rgb(245,19,43)" rx="2" ry="2" />
<text  x="1142.42" y="543.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_clustering_bounds (26 samples, 0.48%)</title><rect x="1097.2" y="469" width="5.7" height="15.0" fill="rgb(212,143,4)" rx="2" ry="2" />
<text  x="1100.16" y="479.5" ></text>
</g>
<g >
<title>freeze (16 samples, 0.30%)</title><rect x="1129.3" y="261" width="3.6" height="15.0" fill="rgb(213,195,36)" rx="2" ry="2" />
<text  x="1132.35" y="271.5" ></text>
</g>
<g >
<title>mutation_fragment::visit&lt;partition_snapshot_read_accounter&amp;&gt; (2 samples, 0.04%)</title><rect x="204.4" y="293" width="0.5" height="15.0" fill="rgb(234,23,38)" rx="2" ry="2" />
<text  x="207.44" y="303.5" ></text>
</g>
<g >
<title>dht::ring_position_comparator::operator (58 samples, 1.08%)</title><rect x="503.5" y="357" width="12.7" height="15.0" fill="rgb(210,206,17)" rx="2" ry="2" />
<text  x="506.55" y="367.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.02%)</title><rect x="622.9" y="501" width="0.2" height="15.0" fill="rgb(216,176,23)" rx="2" ry="2" />
<text  x="625.88" y="511.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.02%)</title><rect x="642.4" y="437" width="0.2" height="15.0" fill="rgb(225,96,1)" rx="2" ry="2" />
<text  x="645.37" y="447.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;void&gt;::set_value&lt;&gt; (1 samples, 0.02%)</title><rect x="702.8" y="517" width="0.2" height="15.0" fill="rgb(233,149,53)" rx="2" ry="2" />
<text  x="705.80" y="527.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (1 samples, 0.02%)</title><rect x="96.5" y="549" width="0.2" height="15.0" fill="rgb(243,229,27)" rx="2" ry="2" />
<text  x="99.49" y="559.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="82.9" y="373" width="0.2" height="15.0" fill="rgb(219,138,16)" rx="2" ry="2" />
<text  x="85.92" y="383.5" ></text>
</g>
<g >
<title>std::apply&lt;service::client_state::check_has_permission (1 samples, 0.02%)</title><rect x="77.4" y="469" width="0.3" height="15.0" fill="rgb(205,192,48)" rx="2" ry="2" />
<text  x="80.44" y="479.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;managed_bytes&gt;::allocate (1 samples, 0.02%)</title><rect x="943.2" y="437" width="0.2" height="15.0" fill="rgb(246,5,22)" rx="2" ry="2" />
<text  x="946.23" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (6 samples, 0.11%)</title><rect x="1153.4" y="485" width="1.3" height="15.0" fill="rgb(244,33,29)" rx="2" ry="2" />
<text  x="1156.43" y="495.5" ></text>
</g>
<g >
<title>db::system_keyspace_make (1 samples, 0.02%)</title><rect x="17.7" y="373" width="0.2" height="15.0" fill="rgb(240,38,0)" rx="2" ry="2" />
<text  x="20.66" y="383.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment&lt;schema const&amp;, rows_entry const&amp;&gt; (188 samples, 3.49%)</title><rect x="221.1" y="245" width="41.1" height="15.0" fill="rgb(221,185,49)" rx="2" ry="2" />
<text  x="224.08" y="255.5" >mut..</text>
</g>
<g >
<title>query::result::builder::builder (13 samples, 0.24%)</title><rect x="619.4" y="485" width="2.8" height="15.0" fill="rgb(218,17,54)" rx="2" ry="2" />
<text  x="622.38" y="495.5" ></text>
</g>
<g >
<title>cql3::to_managed_bytes_opt (1 samples, 0.02%)</title><rect x="906.7" y="421" width="0.2" height="15.0" fill="rgb(246,70,37)" rx="2" ry="2" />
<text  x="909.66" y="431.5" ></text>
</g>
<g >
<title>row::row (1 samples, 0.02%)</title><rect x="81.4" y="325" width="0.2" height="15.0" fill="rgb(214,133,4)" rx="2" ry="2" />
<text  x="84.38" y="335.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (10 samples, 0.19%)</title><rect x="500.0" y="325" width="2.2" height="15.0" fill="rgb(214,107,35)" rx="2" ry="2" />
<text  x="503.04" y="335.5" ></text>
</g>
<g >
<title>abstract_type::is_collection (1 samples, 0.02%)</title><rect x="70.9" y="437" width="0.2" height="15.0" fill="rgb(205,117,34)" rx="2" ry="2" />
<text  x="73.87" y="447.5" ></text>
</g>
<g >
<title>std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;std::optional&lt;auth::resource&gt; &gt;, seastar::future&lt;bool&gt; &gt; &gt;::operator (5 samples, 0.09%)</title><rect x="816.2" y="373" width="1.1" height="15.0" fill="rgb(251,136,36)" rx="2" ry="2" />
<text  x="819.23" y="383.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.02%)</title><rect x="51.6" y="229" width="0.2" height="15.0" fill="rgb(243,42,30)" rx="2" ry="2" />
<text  x="54.60" y="239.5" ></text>
</g>
<g >
<title>query::result::builder::add_partition (3 samples, 0.06%)</title><rect x="343.3" y="261" width="0.6" height="15.0" fill="rgb(224,31,2)" rx="2" ry="2" />
<text  x="346.26" y="271.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::cql_statement&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="767.6" y="469" width="0.2" height="15.0" fill="rgb(211,154,53)" rx="2" ry="2" />
<text  x="770.62" y="479.5" ></text>
</g>
<g >
<title>partition_snapshot_row_cursor::maybe_advance_to (1 samples, 0.02%)</title><rect x="17.2" y="613" width="0.2" height="15.0" fill="rgb(227,152,17)" rx="2" ry="2" />
<text  x="20.23" y="623.5" ></text>
</g>
<g >
<title>seastar::app_template::run (4,959 samples, 92.02%)</title><rect x="84.7" y="645" width="1085.8" height="15.0" fill="rgb(254,204,47)" rx="2" ry="2" />
<text  x="87.67" y="655.5" >seastar::app_template::run</text>
</g>
<g >
<title>mutation_partition_view::do_accept&lt;partition_builder&gt; (19 samples, 0.35%)</title><rect x="1120.2" y="309" width="4.1" height="15.0" fill="rgb(207,147,22)" rx="2" ry="2" />
<text  x="1123.15" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (1 samples, 0.02%)</title><rect x="24.5" y="229" width="0.2" height="15.0" fill="rgb(217,134,20)" rx="2" ry="2" />
<text  x="27.45" y="239.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::BaseRecognizer (1 samples, 0.02%)</title><rect x="20.7" y="469" width="0.2" height="15.0" fill="rgb(243,211,15)" rx="2" ry="2" />
<text  x="23.73" y="479.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (5 samples, 0.09%)</title><rect x="45.9" y="373" width="1.1" height="15.0" fill="rgb(239,107,54)" rx="2" ry="2" />
<text  x="48.91" y="383.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::clear (2 samples, 0.04%)</title><rect x="422.5" y="277" width="0.5" height="15.0" fill="rgb(209,57,37)" rx="2" ry="2" />
<text  x="425.53" y="287.5" ></text>
</g>
<g >
<title>dht::tri_compare (2 samples, 0.04%)</title><rect x="515.8" y="341" width="0.4" height="15.0" fill="rgb(233,40,53)" rx="2" ry="2" />
<text  x="518.81" y="351.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::forward_to (1 samples, 0.02%)</title><rect x="695.6" y="549" width="0.2" height="15.0" fill="rgb(224,91,35)" rx="2" ry="2" />
<text  x="698.58" y="559.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (2 samples, 0.04%)</title><rect x="710.5" y="517" width="0.4" height="15.0" fill="rgb(217,10,33)" rx="2" ry="2" />
<text  x="713.47" y="527.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (1 samples, 0.02%)</title><rect x="662.1" y="549" width="0.2" height="15.0" fill="rgb(252,30,15)" rx="2" ry="2" />
<text  x="665.08" y="559.5" ></text>
</g>
<g >
<title>bplus::tree&lt;long, intrusive_array&lt;memtable_entry&gt;, dht::raw_token_less_comparator, 16ul,  (1 samples, 0.02%)</title><rect x="10.9" y="613" width="0.2" height="15.0" fill="rgb(205,165,18)" rx="2" ry="2" />
<text  x="13.88" y="623.5" ></text>
</g>
<g >
<title>bytes_ostream::alloc_new (4 samples, 0.07%)</title><rect x="620.9" y="453" width="0.9" height="15.0" fill="rgb(206,209,34)" rx="2" ry="2" />
<text  x="623.91" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (2 samples, 0.04%)</title><rect x="437.9" y="293" width="0.4" height="15.0" fill="rgb(230,180,0)" rx="2" ry="2" />
<text  x="440.86" y="303.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::get0 (3 samples, 0.06%)</title><rect x="313.0" y="421" width="0.7" height="15.0" fill="rgb(206,31,51)" rx="2" ry="2" />
<text  x="316.05" y="431.5" ></text>
</g>
<g >
<title>seastar::schedule (1 samples, 0.02%)</title><rect x="96.7" y="549" width="0.2" height="15.0" fill="rgb(223,136,48)" rx="2" ry="2" />
<text  x="99.71" y="559.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::emplace_back&lt;mutation_reader_merger::reader_and_fragment&gt; (2 samples, 0.04%)</title><rect x="304.1" y="357" width="0.4" height="15.0" fill="rgb(238,161,11)" rx="2" ry="2" />
<text  x="307.07" y="367.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;std::pair&lt;seastar::shared_ptr&lt;service::abstract_read_executor&gt;, nonwrapping_interval&lt;dht::token&gt; &gt;, 1ul&gt;::clear (22 samples, 0.41%)</title><rect x="1162.4" y="533" width="4.8" height="15.0" fill="rgb(236,189,18)" rx="2" ry="2" />
<text  x="1165.41" y="543.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::pop_clustering_row (5 samples, 0.09%)</title><rect x="265.8" y="245" width="1.0" height="15.0" fill="rgb(229,201,47)" rx="2" ry="2" />
<text  x="268.75" y="255.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::leaf_node::allocate (8 samples, 0.15%)</title><rect x="243.9" y="181" width="1.7" height="15.0" fill="rgb(211,185,22)" rx="2" ry="2" />
<text  x="246.85" y="191.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (1 samples, 0.02%)</title><rect x="574.9" y="469" width="0.2" height="15.0" fill="rgb(207,123,21)" rx="2" ry="2" />
<text  x="577.93" y="479.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="75.0" y="469" width="0.3" height="15.0" fill="rgb(233,23,33)" rx="2" ry="2" />
<text  x="78.03" y="479.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::operator (3 samples, 0.06%)</title><rect x="803.1" y="197" width="0.6" height="15.0" fill="rgb(246,62,45)" rx="2" ry="2" />
<text  x="806.09" y="207.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::do_wait_admission (53 samples, 0.98%)</title><rect x="1019.4" y="293" width="11.6" height="15.0" fill="rgb(206,160,33)" rx="2" ry="2" />
<text  x="1022.43" y="303.5" ></text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt;&amp;&gt; (3 samples, 0.06%)</title><rect x="847.1" y="421" width="0.7" height="15.0" fill="rgb(246,189,30)" rx="2" ry="2" />
<text  x="850.10" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;seastar::shared_ptr&lt;cql3::relation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::relation&gt; &gt; &gt;::_M_check_len (1 samples, 0.02%)</title><rect x="62.3" y="373" width="0.3" height="15.0" fill="rgb(228,51,36)" rx="2" ry="2" />
<text  x="65.33" y="383.5" ></text>
</g>
<g >
<title>seastar::reactor_backend_aio::reap_kernel_completions (5 samples, 0.09%)</title><rect x="1169.2" y="565" width="1.1" height="15.0" fill="rgb(212,84,38)" rx="2" ry="2" />
<text  x="1172.20" y="575.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::done (1 samples, 0.02%)</title><rect x="618.1" y="501" width="0.2" height="15.0" fill="rgb(249,147,35)" rx="2" ry="2" />
<text  x="621.06" y="511.5" ></text>
</g>
<g >
<title>TLS init function for simple_date_type (1 samples, 0.02%)</title><rect x="69.8" y="469" width="0.2" height="15.0" fill="rgb(241,177,34)" rx="2" ry="2" />
<text  x="72.78" y="479.5" ></text>
</g>
<g >
<title>seastar::internal::sharded_parallel_for_each (1 samples, 0.02%)</title><rect x="703.5" y="517" width="0.2" height="15.0" fill="rgb(208,190,13)" rx="2" ry="2" />
<text  x="706.46" y="527.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (2 samples, 0.04%)</title><rect x="46.3" y="341" width="0.5" height="15.0" fill="rgb(246,161,45)" rx="2" ry="2" />
<text  x="49.35" y="351.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::EqualElement&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (2 samples, 0.04%)</title><rect x="771.8" y="389" width="0.4" height="15.0" fill="rgb(222,31,7)" rx="2" ry="2" />
<text  x="774.78" y="399.5" ></text>
</g>
<g >
<title>std::optional&lt;dht::decorated_key&gt;::emplace&lt;dht::decorated_key&gt; (1 samples, 0.02%)</title><rect x="701.7" y="389" width="0.2" height="15.0" fill="rgb(208,194,51)" rx="2" ry="2" />
<text  x="704.71" y="399.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::~timer (1 samples, 0.02%)</title><rect x="713.1" y="517" width="0.2" height="15.0" fill="rgb(220,46,16)" rx="2" ry="2" />
<text  x="716.10" y="527.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (3 samples, 0.06%)</title><rect x="496.1" y="341" width="0.7" height="15.0" fill="rgb(230,92,37)" rx="2" ry="2" />
<text  x="499.10" y="351.5" ></text>
</g>
<g >
<title>mutation_querier::query_static_row (5 samples, 0.09%)</title><rect x="364.7" y="229" width="1.1" height="15.0" fill="rgb(254,52,16)" rx="2" ry="2" />
<text  x="367.72" y="239.5" ></text>
</g>
<g >
<title>basic_atomic_cell_view&lt; (28 samples, 0.52%)</title><rect x="412.7" y="229" width="6.1" height="15.0" fill="rgb(227,59,12)" rx="2" ry="2" />
<text  x="415.68" y="239.5" ></text>
</g>
<g >
<title>antlr3::DefaultAllocPolicy::StackType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::push (1 samples, 0.02%)</title><rect x="41.5" y="405" width="0.2" height="15.0" fill="rgb(254,114,49)" rx="2" ry="2" />
<text  x="44.53" y="415.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;static_row&gt;::_M_reset (1 samples, 0.02%)</title><rect x="427.3" y="309" width="0.3" height="15.0" fill="rgb(250,31,38)" rx="2" ry="2" />
<text  x="430.35" y="319.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="575.1" y="469" width="0.3" height="15.0" fill="rgb(214,77,40)" rx="2" ry="2" />
<text  x="578.15" y="479.5" ></text>
</g>
<g >
<title>list_reader_selector::create_new_readers (8 samples, 0.15%)</title><rect x="468.1" y="341" width="1.7" height="15.0" fill="rgb(226,218,38)" rx="2" ry="2" />
<text  x="471.07" y="351.5" ></text>
</g>
<g >
<title>seastar::internal::coroutine_traits_base&lt;service::storage_proxy_coordinator_query_result&gt;::promise_type::run_and_dispose (2 samples, 0.04%)</title><rect x="87.1" y="581" width="0.4" height="15.0" fill="rgb(248,112,48)" rx="2" ry="2" />
<text  x="90.08" y="591.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;database&gt;::operator= (1 samples, 0.02%)</title><rect x="703.5" y="421" width="0.2" height="15.0" fill="rgb(207,200,54)" rx="2" ry="2" />
<text  x="706.46" y="431.5" ></text>
</g>
<g >
<title>service::client_state::has_column_family_access (257 samples, 4.77%)</title><rect x="774.2" y="469" width="56.3" height="15.0" fill="rgb(224,189,4)" rx="2" ry="2" />
<text  x="777.19" y="479.5" >servi..</text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_clear (4 samples, 0.07%)</title><rect x="604.3" y="437" width="0.8" height="15.0" fill="rgb(229,17,19)" rx="2" ry="2" />
<text  x="607.27" y="447.5" ></text>
</g>
<g >
<title>utils::tuple_hash::hash_impl&lt;2ul, auth::resource_kind, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (2 samples, 0.04%)</title><rect x="821.0" y="373" width="0.5" height="15.0" fill="rgb(225,94,5)" rx="2" ry="2" />
<text  x="824.04" y="383.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::add_raw_update (3 samples, 0.06%)</title><rect x="49.6" y="373" width="0.7" height="15.0" fill="rgb(234,104,0)" rx="2" ry="2" />
<text  x="52.63" y="383.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_map&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::at&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt; &gt; (20 samples, 0.37%)</title><rect x="824.1" y="405" width="4.4" height="15.0" fill="rgb(238,153,17)" rx="2" ry="2" />
<text  x="827.11" y="415.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (2 samples, 0.04%)</title><rect x="635.4" y="469" width="0.4" height="15.0" fill="rgb(232,216,43)" rx="2" ry="2" />
<text  x="638.36" y="479.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.04%)</title><rect x="121.2" y="517" width="0.5" height="15.0" fill="rgb(229,121,14)" rx="2" ry="2" />
<text  x="124.23" y="527.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::reserve (1 samples, 0.02%)</title><rect x="1189.6" y="693" width="0.2" height="15.0" fill="rgb(221,179,14)" rx="2" ry="2" />
<text  x="1192.56" y="703.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::construct&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (2 samples, 0.04%)</title><rect x="23.6" y="325" width="0.4" height="15.0" fill="rgb(207,131,17)" rx="2" ry="2" />
<text  x="26.58" y="335.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume_in_thread&lt;sstables::sstable_writer&gt; (1 samples, 0.02%)</title><rect x="80.7" y="581" width="0.2" height="15.0" fill="rgb(227,209,4)" rx="2" ry="2" />
<text  x="83.73" y="591.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (3 samples, 0.06%)</title><rect x="46.3" y="357" width="0.7" height="15.0" fill="rgb(210,185,51)" rx="2" ry="2" />
<text  x="49.35" y="367.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned char, std::pair&lt;unsigned char const, std::optional&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned char const, std::optional&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned char&gt;, std::hash&lt;unsigned char&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::~_Hashtable (3 samples, 0.06%)</title><rect x="691.0" y="517" width="0.6" height="15.0" fill="rgb(235,214,23)" rx="2" ry="2" />
<text  x="693.98" y="527.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;mutation_fragment*&gt;, flat_mutation_reader::peek (1 samples, 0.02%)</title><rect x="85.1" y="581" width="0.2" height="15.0" fill="rgb(216,63,24)" rx="2" ry="2" />
<text  x="88.10" y="591.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::untyped_constant&gt; (3 samples, 0.06%)</title><rect x="60.8" y="357" width="0.7" height="15.0" fill="rgb(246,113,44)" rx="2" ry="2" />
<text  x="63.80" y="367.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;clustering_key_prefix&gt;::_M_reset (1 samples, 0.02%)</title><rect x="329.5" y="421" width="0.2" height="15.0" fill="rgb(221,226,20)" rx="2" ry="2" />
<text  x="332.47" y="431.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;cql3::column_identifier_raw, false&gt;::make&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, bool&gt; (1 samples, 0.02%)</title><rect x="58.4" y="357" width="0.2" height="15.0" fill="rgb(210,215,12)" rx="2" ry="2" />
<text  x="61.39" y="367.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;void&gt;  (1 samples, 0.02%)</title><rect x="17.7" y="469" width="0.2" height="15.0" fill="rgb(251,9,26)" rx="2" ry="2" />
<text  x="20.66" y="479.5" ></text>
</g>
<g >
<title>managed_bytes::external_memory_usage (1 samples, 0.02%)</title><rect x="257.2" y="165" width="0.2" height="15.0" fill="rgb(224,89,7)" rx="2" ry="2" />
<text  x="260.21" y="175.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (13 samples, 0.24%)</title><rect x="741.6" y="421" width="2.8" height="15.0" fill="rgb(215,171,24)" rx="2" ry="2" />
<text  x="744.56" y="431.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.02%)</title><rect x="49.0" y="197" width="0.2" height="15.0" fill="rgb(240,144,28)" rx="2" ry="2" />
<text  x="51.98" y="207.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (1 samples, 0.02%)</title><rect x="703.2" y="549" width="0.3" height="15.0" fill="rgb(220,10,19)" rx="2" ry="2" />
<text  x="706.24" y="559.5" ></text>
</g>
<g >
<title>absl::hash_internal::HashState::combine_contiguous (4 samples, 0.07%)</title><rect x="840.3" y="405" width="0.9" height="15.0" fill="rgb(242,216,24)" rx="2" ry="2" />
<text  x="843.31" y="415.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (1 samples, 0.02%)</title><rect x="691.0" y="501" width="0.2" height="15.0" fill="rgb(252,78,4)" rx="2" ry="2" />
<text  x="693.98" y="511.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (7 samples, 0.13%)</title><rect x="162.4" y="501" width="1.5" height="15.0" fill="rgb(211,32,0)" rx="2" ry="2" />
<text  x="165.40" y="511.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_range_tombstone (36 samples, 0.67%)</title><rect x="268.6" y="277" width="7.9" height="15.0" fill="rgb(236,137,22)" rx="2" ry="2" />
<text  x="271.60" y="287.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;,  (16 samples, 0.30%)</title><rect x="741.1" y="469" width="3.5" height="15.0" fill="rgb(244,215,34)" rx="2" ry="2" />
<text  x="744.12" y="479.5" ></text>
</g>
<g >
<title>dht::shard_of (4 samples, 0.07%)</title><rect x="999.1" y="357" width="0.8" height="15.0" fill="rgb(213,226,50)" rx="2" ry="2" />
<text  x="1002.06" y="367.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (1 samples, 0.02%)</title><rect x="1164.2" y="501" width="0.2" height="15.0" fill="rgb(229,35,31)" rx="2" ry="2" />
<text  x="1167.16" y="511.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::get_limit (4 samples, 0.07%)</title><rect x="1093.7" y="485" width="0.8" height="15.0" fill="rgb(214,163,6)" rx="2" ry="2" />
<text  x="1096.66" y="495.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (7 samples, 0.13%)</title><rect x="1067.2" y="357" width="1.5" height="15.0" fill="rgb(224,131,2)" rx="2" ry="2" />
<text  x="1070.16" y="367.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_esft&lt;partition_snapshot&gt;::dispose (1 samples, 0.02%)</title><rect x="591.1" y="357" width="0.3" height="15.0" fill="rgb(244,150,45)" rx="2" ry="2" />
<text  x="594.13" y="367.5" ></text>
</g>
<g >
<title>cql3::raw_value_view::with_value&lt;cql3::update_parameters::make_cell (1 samples, 0.02%)</title><rect x="863.7" y="341" width="0.3" height="15.0" fill="rgb(208,19,25)" rx="2" ry="2" />
<text  x="866.74" y="351.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::execute (17 samples, 0.32%)</title><rect x="708.1" y="533" width="3.7" height="15.0" fill="rgb(244,130,30)" rx="2" ry="2" />
<text  x="711.06" y="543.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::upper_bound&lt;mutation_partition, schema const&amp;, nonwrapping_interval&lt;clustering_key_prefix&gt; const&amp;&gt; (1 samples, 0.02%)</title><rect x="285.2" y="277" width="0.3" height="15.0" fill="rgb(233,83,53)" rx="2" ry="2" />
<text  x="288.24" y="287.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::find (1 samples, 0.02%)</title><rect x="959.6" y="437" width="0.3" height="15.0" fill="rgb(232,4,43)" rx="2" ry="2" />
<text  x="962.65" y="447.5" ></text>
</g>
<g >
<title>database::has_keyspace (1 samples, 0.02%)</title><rect x="78.1" y="549" width="0.2" height="15.0" fill="rgb(224,27,7)" rx="2" ry="2" />
<text  x="81.10" y="559.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (2 samples, 0.04%)</title><rect x="811.0" y="325" width="0.4" height="15.0" fill="rgb(226,202,22)" rx="2" ry="2" />
<text  x="813.97" y="335.5" ></text>
</g>
<g >
<title>schema::clustering_key_columns (1 samples, 0.02%)</title><rect x="73.5" y="453" width="0.2" height="15.0" fill="rgb(222,37,47)" rx="2" ry="2" />
<text  x="76.50" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value, std::allocator&lt;cql3::raw_value&gt; &gt;::_M_range_initialize&lt;cql3::raw_value const*&gt; (8 samples, 0.15%)</title><rect x="855.2" y="517" width="1.8" height="15.0" fill="rgb(242,160,17)" rx="2" ry="2" />
<text  x="858.20" y="527.5" ></text>
</g>
<g >
<title>service::storage_proxy::create_write_response_handler (21 samples, 0.39%)</title><rect x="1129.3" y="293" width="4.6" height="15.0" fill="rgb(235,59,35)" rx="2" ry="2" />
<text  x="1132.35" y="303.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.02%)</title><rect x="17.9" y="565" width="0.2" height="15.0" fill="rgb(228,122,50)" rx="2" ry="2" />
<text  x="20.88" y="575.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.02%)</title><rect x="58.8" y="229" width="0.2" height="15.0" fill="rgb(245,81,4)" rx="2" ry="2" />
<text  x="61.83" y="239.5" ></text>
</g>
<g >
<title>sstables::mc::writer::consume_end_of_partition (1 samples, 0.02%)</title><rect x="83.6" y="533" width="0.2" height="15.0" fill="rgb(234,162,51)" rx="2" ry="2" />
<text  x="86.57" y="543.5" ></text>
</g>
<g >
<title>schema::schema (1 samples, 0.02%)</title><rect x="107.2" y="453" width="0.2" height="15.0" fill="rgb(219,68,25)" rx="2" ry="2" />
<text  x="110.22" y="463.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::forward_to (1 samples, 0.02%)</title><rect x="111.6" y="549" width="0.2" height="15.0" fill="rgb(244,228,1)" rx="2" ry="2" />
<text  x="114.60" y="559.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;service::storage_proxy::unique_response_handler*, service::storage_proxy::mutate_begin (4 samples, 0.07%)</title><rect x="1128.0" y="341" width="0.9" height="15.0" fill="rgb(243,9,13)" rx="2" ry="2" />
<text  x="1131.03" y="351.5" ></text>
</g>
<g >
<title>seastar::future&lt;utils::small_vector&lt;service::storage_proxy::unique_response_handler, 1ul&gt; &gt;::then_impl&lt;service::storage_proxy::mutate_internal&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt; &gt; (4 samples, 0.07%)</title><rect x="1128.0" y="373" width="0.9" height="15.0" fill="rgb(219,161,41)" rx="2" ry="2" />
<text  x="1131.03" y="383.5" ></text>
</g>
<g >
<title>row::row (1 samples, 0.02%)</title><rect x="859.6" y="341" width="0.2" height="15.0" fill="rgb(248,154,53)" rx="2" ry="2" />
<text  x="862.58" y="351.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (1 samples, 0.02%)</title><rect x="721.6" y="485" width="0.3" height="15.0" fill="rgb(238,209,9)" rx="2" ry="2" />
<text  x="724.63" y="495.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (2 samples, 0.04%)</title><rect x="395.2" y="213" width="0.4" height="15.0" fill="rgb(214,117,49)" rx="2" ry="2" />
<text  x="398.16" y="223.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::BaseRecognizer (1 samples, 0.02%)</title><rect x="20.9" y="437" width="0.3" height="15.0" fill="rgb(234,217,17)" rx="2" ry="2" />
<text  x="23.95" y="447.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::~unique_ptr (9 samples, 0.17%)</title><rect x="900.7" y="389" width="2.0" height="15.0" fill="rgb(210,123,45)" rx="2" ry="2" />
<text  x="903.75" y="399.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::net::inet_address&gt;::operator (1 samples, 0.02%)</title><rect x="1147.1" y="469" width="0.2" height="15.0" fill="rgb(239,147,14)" rx="2" ry="2" />
<text  x="1150.08" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.02%)</title><rect x="1033.0" y="245" width="0.2" height="15.0" fill="rgb(253,51,39)" rx="2" ry="2" />
<text  x="1036.00" y="255.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (2 samples, 0.04%)</title><rect x="333.6" y="309" width="0.5" height="15.0" fill="rgb(232,218,49)" rx="2" ry="2" />
<text  x="336.63" y="319.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::clear (1 samples, 0.02%)</title><rect x="1143.4" y="549" width="0.2" height="15.0" fill="rgb(208,40,52)" rx="2" ry="2" />
<text  x="1146.36" y="559.5" ></text>
</g>
<g >
<title>logalloc::segment_pool::refill_emergency_reserve (1 samples, 0.02%)</title><rect x="202.3" y="325" width="0.2" height="15.0" fill="rgb(228,187,25)" rx="2" ry="2" />
<text  x="205.25" y="335.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_Optional_payload_base (1 samples, 0.02%)</title><rect x="1099.6" y="405" width="0.2" height="15.0" fill="rgb(251,176,33)" rx="2" ry="2" />
<text  x="1102.57" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.06%)</title><rect x="943.7" y="421" width="0.6" height="15.0" fill="rgb(248,92,7)" rx="2" ry="2" />
<text  x="946.66" y="431.5" ></text>
</g>
<g >
<title>antlr3::DefaultAllocPolicy::StackType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::pop (1 samples, 0.02%)</title><rect x="51.8" y="325" width="0.2" height="15.0" fill="rgb(220,34,8)" rx="2" ry="2" />
<text  x="54.82" y="335.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;clustering_key_prefix, false, false&gt;::_Optional_base (1 samples, 0.02%)</title><rect x="279.3" y="277" width="0.2" height="15.0" fill="rgb(213,170,48)" rx="2" ry="2" />
<text  x="282.33" y="287.5" ></text>
</g>
<g >
<title>cql3::statements::update_statement::add_update_for_key (1 samples, 0.02%)</title><rect x="865.5" y="437" width="0.2" height="15.0" fill="rgb(233,34,48)" rx="2" ry="2" />
<text  x="868.49" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;seastar::shared_ptr&lt;cql3::operation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::operation&gt; &gt; &gt;::_M_realloc_insert&lt;seastar::shared_ptr&lt;cql3::operation&gt; &gt; (2 samples, 0.04%)</title><rect x="71.7" y="453" width="0.5" height="15.0" fill="rgb(224,195,29)" rx="2" ry="2" />
<text  x="74.75" y="463.5" ></text>
</g>
<g >
<title>seastar::promise&lt;void&gt;::promise (1 samples, 0.02%)</title><rect x="135.2" y="469" width="0.3" height="15.0" fill="rgb(227,111,19)" rx="2" ry="2" />
<text  x="138.25" y="479.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="83.1" y="373" width="0.3" height="15.0" fill="rgb(218,205,16)" rx="2" ry="2" />
<text  x="86.13" y="383.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reserve&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (1 samples, 0.02%)</title><rect x="337.8" y="213" width="0.2" height="15.0" fill="rgb(239,17,52)" rx="2" ry="2" />
<text  x="340.79" y="223.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (3 samples, 0.06%)</title><rect x="1119.5" y="277" width="0.7" height="15.0" fill="rgb(247,88,2)" rx="2" ry="2" />
<text  x="1122.49" y="287.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (2 samples, 0.04%)</title><rect x="1092.3" y="469" width="0.5" height="15.0" fill="rgb(231,102,22)" rx="2" ry="2" />
<text  x="1095.34" y="479.5" ></text>
</g>
<g >
<title>cql3::query_options::query_options (18 samples, 0.33%)</title><rect x="850.2" y="501" width="3.9" height="15.0" fill="rgb(239,218,52)" rx="2" ry="2" />
<text  x="853.17" y="511.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.02%)</title><rect x="59.0" y="245" width="0.3" height="15.0" fill="rgb(213,49,51)" rx="2" ry="2" />
<text  x="62.05" y="255.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::alloc (4 samples, 0.07%)</title><rect x="244.7" y="165" width="0.9" height="15.0" fill="rgb(245,72,42)" rx="2" ry="2" />
<text  x="247.73" y="175.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (19 samples, 0.35%)</title><rect x="158.2" y="501" width="4.2" height="15.0" fill="rgb(250,26,39)" rx="2" ry="2" />
<text  x="161.24" y="511.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.06%)</title><rect x="541.0" y="389" width="0.6" height="15.0" fill="rgb(229,71,28)" rx="2" ry="2" />
<text  x="543.99" y="399.5" ></text>
</g>
<g >
<title>seastar::api_v3::and_newer::make_file_data_sink (1 samples, 0.02%)</title><rect x="701.1" y="517" width="0.2" height="15.0" fill="rgb(242,198,50)" rx="2" ry="2" />
<text  x="704.05" y="527.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="929.2" y="405" width="0.2" height="15.0" fill="rgb(251,193,6)" rx="2" ry="2" />
<text  x="932.21" y="415.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;flat_mutation_reader::impl::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (10 samples, 0.19%)</title><rect x="331.9" y="357" width="2.2" height="15.0" fill="rgb(206,155,52)" rx="2" ry="2" />
<text  x="334.88" y="367.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit_slot&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::walking_visitor&lt;row::for_each_cell&lt;(anonymous namespace)::write_row_cells&lt;ser::deletable_row__cells&lt;bytes_ostream&gt; &gt; (1 samples, 0.02%)</title><rect x="108.5" y="373" width="0.3" height="15.0" fill="rgb(227,135,34)" rx="2" ry="2" />
<text  x="111.53" y="383.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (2 samples, 0.04%)</title><rect x="49.0" y="213" width="0.4" height="15.0" fill="rgb(234,168,41)" rx="2" ry="2" />
<text  x="51.98" y="223.5" ></text>
</g>
<g >
<title>seastar::future&lt;boost::iterator_range&lt;mutation_fragment*&gt; &gt;::then_impl&lt;mutation_fragment_merger&lt;mutation_reader_merger&gt;::fetch (6 samples, 0.11%)</title><rect x="306.3" y="389" width="1.3" height="15.0" fill="rgb(214,189,41)" rx="2" ry="2" />
<text  x="309.26" y="399.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (1 samples, 0.02%)</title><rect x="1139.4" y="517" width="0.2" height="15.0" fill="rgb(227,141,54)" rx="2" ry="2" />
<text  x="1142.42" y="527.5" ></text>
</g>
<g >
<title>set_value&lt;fragment_range&lt;managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="863.7" y="293" width="0.3" height="15.0" fill="rgb(240,72,47)" rx="2" ry="2" />
<text  x="866.74" y="303.5" ></text>
</g>
<g >
<title>sstables::mc::writer::write_cells (7 samples, 0.13%)</title><rect x="81.8" y="453" width="1.6" height="15.0" fill="rgb(248,21,20)" rx="2" ry="2" />
<text  x="84.82" y="463.5" ></text>
</g>
<g >
<title>compound_type&lt; (11 samples, 0.20%)</title><rect x="567.7" y="421" width="2.4" height="15.0" fill="rgb(228,136,54)" rx="2" ry="2" />
<text  x="570.70" y="431.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::sharded&lt;database&gt;::invoke_on_all (1 samples, 0.02%)</title><rect x="106.8" y="453" width="0.2" height="15.0" fill="rgb(207,118,50)" rx="2" ry="2" />
<text  x="109.78" y="463.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (1 samples, 0.02%)</title><rect x="611.1" y="469" width="0.2" height="15.0" fill="rgb(231,220,24)" rx="2" ry="2" />
<text  x="614.06" y="479.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;clustering_key_prefix&gt;::wrapping_interval (3 samples, 0.06%)</title><rect x="1099.1" y="421" width="0.7" height="15.0" fill="rgb(230,10,26)" rx="2" ry="2" />
<text  x="1102.13" y="431.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::lsa_partition_reader::next_row (1 samples, 0.02%)</title><rect x="81.4" y="405" width="0.2" height="15.0" fill="rgb(217,187,8)" rx="2" ry="2" />
<text  x="84.38" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (2 samples, 0.04%)</title><rect x="614.8" y="453" width="0.4" height="15.0" fill="rgb(251,105,23)" rx="2" ry="2" />
<text  x="617.78" y="463.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="664.5" y="453" width="0.2" height="15.0" fill="rgb(234,60,9)" rx="2" ry="2" />
<text  x="667.49" y="463.5" ></text>
</g>
<g >
<title>hwloc_linux_set_tid_cpubind (1 samples, 0.02%)</title><rect x="1179.5" y="693" width="0.2" height="15.0" fill="rgb(226,24,30)" rx="2" ry="2" />
<text  x="1182.49" y="703.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="728.6" y="501" width="0.3" height="15.0" fill="rgb(207,10,33)" rx="2" ry="2" />
<text  x="731.64" y="511.5" ></text>
</g>
<g >
<title>reader_permit::impl::~impl (9 samples, 0.17%)</title><rect x="124.1" y="501" width="2.0" height="15.0" fill="rgb(243,195,11)" rx="2" ry="2" />
<text  x="127.08" y="511.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;11ul, cql3::expr::untyped_constant&gt; (3 samples, 0.06%)</title><rect x="53.1" y="197" width="0.7" height="15.0" fill="rgb(223,92,16)" rx="2" ry="2" />
<text  x="56.14" y="207.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="864.4" y="293" width="0.2" height="15.0" fill="rgb(208,103,15)" rx="2" ry="2" />
<text  x="867.40" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (3 samples, 0.06%)</title><rect x="584.6" y="373" width="0.6" height="15.0" fill="rgb(214,229,54)" rx="2" ry="2" />
<text  x="587.56" y="383.5" ></text>
</g>
<g >
<title>antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;::setupInputStream (1 samples, 0.02%)</title><rect x="20.5" y="469" width="0.2" height="15.0" fill="rgb(217,34,3)" rx="2" ry="2" />
<text  x="23.51" y="479.5" ></text>
</g>
<g >
<title>partition_entry::evict (1 samples, 0.02%)</title><rect x="1139.4" y="453" width="0.2" height="15.0" fill="rgb(212,137,49)" rx="2" ry="2" />
<text  x="1142.42" y="463.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (2 samples, 0.04%)</title><rect x="316.3" y="357" width="0.5" height="15.0" fill="rgb(241,212,1)" rx="2" ry="2" />
<text  x="319.33" y="367.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;11ul, cql3::expr::untyped_constant&gt; (4 samples, 0.07%)</title><rect x="53.1" y="261" width="0.9" height="15.0" fill="rgb(229,3,50)" rx="2" ry="2" />
<text  x="56.14" y="271.5" ></text>
</g>
<g >
<title>flat_mutation_reader::close (122 samples, 2.26%)</title><rect x="579.3" y="469" width="26.7" height="15.0" fill="rgb(250,76,6)" rx="2" ry="2" />
<text  x="582.31" y="479.5" >f..</text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (5 samples, 0.09%)</title><rect x="557.2" y="405" width="1.1" height="15.0" fill="rgb(243,175,46)" rx="2" ry="2" />
<text  x="560.19" y="415.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (3 samples, 0.06%)</title><rect x="859.1" y="501" width="0.7" height="15.0" fill="rgb(214,2,19)" rx="2" ry="2" />
<text  x="862.14" y="511.5" ></text>
</g>
<g >
<title>std::function&lt;bool  (1 samples, 0.02%)</title><rect x="574.7" y="453" width="0.2" height="15.0" fill="rgb(230,124,35)" rx="2" ry="2" />
<text  x="577.71" y="463.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="302.1" y="325" width="0.2" height="15.0" fill="rgb(238,13,10)" rx="2" ry="2" />
<text  x="305.10" y="335.5" ></text>
</g>
<g >
<title>partition_snapshot::get_change_mark (3 samples, 0.06%)</title><rect x="263.3" y="229" width="0.7" height="15.0" fill="rgb(234,140,46)" rx="2" ry="2" />
<text  x="266.34" y="239.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_impl&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (4 samples, 0.07%)</title><rect x="701.3" y="469" width="0.8" height="15.0" fill="rgb(233,126,50)" rx="2" ry="2" />
<text  x="704.27" y="479.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, cql3::statements::raw::batch_statement*, std::default_delete&lt;cql3::statements::raw::batch_statement&gt; &gt; (1 samples, 0.02%)</title><rect x="66.1" y="405" width="0.2" height="15.0" fill="rgb(209,106,51)" rx="2" ry="2" />
<text  x="69.05" y="415.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (4 samples, 0.07%)</title><rect x="740.0" y="453" width="0.9" height="15.0" fill="rgb(254,175,43)" rx="2" ry="2" />
<text  x="743.03" y="463.5" ></text>
</g>
<g >
<title>compound_type&lt; (1 samples, 0.02%)</title><rect x="862.4" y="373" width="0.2" height="15.0" fill="rgb(214,43,25)" rx="2" ry="2" />
<text  x="865.43" y="383.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (13 samples, 0.24%)</title><rect x="80.9" y="629" width="2.9" height="15.0" fill="rgb(246,189,52)" rx="2" ry="2" />
<text  x="83.94" y="639.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (17 samples, 0.32%)</title><rect x="678.9" y="549" width="3.8" height="15.0" fill="rgb(223,24,52)" rx="2" ry="2" />
<text  x="681.94" y="559.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (4 samples, 0.07%)</title><rect x="41.7" y="277" width="0.9" height="15.0" fill="rgb(250,102,11)" rx="2" ry="2" />
<text  x="44.75" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::vector (23 samples, 0.43%)</title><rect x="1040.7" y="341" width="5.0" height="15.0" fill="rgb(253,41,50)" rx="2" ry="2" />
<text  x="1043.67" y="351.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (1 samples, 0.02%)</title><rect x="794.3" y="261" width="0.3" height="15.0" fill="rgb(211,200,46)" rx="2" ry="2" />
<text  x="797.33" y="271.5" ></text>
</g>
<g >
<title>allocation_strategy::get_standard_migrator&lt;partition_version&gt; (1 samples, 0.02%)</title><rect x="84.0" y="533" width="0.2" height="15.0" fill="rgb(253,154,46)" rx="2" ry="2" />
<text  x="87.01" y="543.5" ></text>
</g>
<g >
<title>logalloc::segment_pool::refill_emergency_reserve (1 samples, 0.02%)</title><rect x="518.9" y="389" width="0.2" height="15.0" fill="rgb(241,5,2)" rx="2" ry="2" />
<text  x="521.87" y="399.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (2 samples, 0.04%)</title><rect x="43.1" y="341" width="0.4" height="15.0" fill="rgb(214,19,40)" rx="2" ry="2" />
<text  x="46.06" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (10 samples, 0.19%)</title><rect x="210.8" y="261" width="2.2" height="15.0" fill="rgb(211,11,24)" rx="2" ry="2" />
<text  x="213.79" y="271.5" ></text>
</g>
<g >
<title>std::__equal&lt;true&gt;::equal&lt;char&gt; (4 samples, 0.07%)</title><rect x="800.9" y="181" width="0.9" height="15.0" fill="rgb(227,105,17)" rx="2" ry="2" />
<text  x="803.90" y="191.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (2 samples, 0.04%)</title><rect x="1144.0" y="517" width="0.5" height="15.0" fill="rgb(253,55,52)" rx="2" ry="2" />
<text  x="1147.02" y="527.5" ></text>
</g>
<g >
<title>ser::serializer&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;::write_fragmented&lt;bytes_ostream, fragment_range&lt;managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="370.0" y="245" width="0.2" height="15.0" fill="rgb(247,97,27)" rx="2" ry="2" />
<text  x="372.98" y="255.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::list_permissions_statement, std::default_delete&lt;cql3::statements::list_permissions_statement&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="65.8" y="437" width="0.3" height="15.0" fill="rgb(243,207,36)" rx="2" ry="2" />
<text  x="68.84" y="447.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;query::result&gt;::dispose (10 samples, 0.19%)</title><rect x="99.1" y="517" width="2.2" height="15.0" fill="rgb(230,150,45)" rx="2" ry="2" />
<text  x="102.12" y="527.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::execute_without_condition (3 samples, 0.06%)</title><rect x="860.2" y="469" width="0.7" height="15.0" fill="rgb(242,184,24)" rx="2" ry="2" />
<text  x="863.24" y="479.5" ></text>
</g>
<g >
<title>managed_bytes::operator= (5 samples, 0.09%)</title><rect x="333.0" y="325" width="1.1" height="15.0" fill="rgb(236,227,52)" rx="2" ry="2" />
<text  x="335.97" y="335.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;11ul, cql3::expr::untyped_constant, cql3::expr::untyped_constant, void&gt; (6 samples, 0.11%)</title><rect x="52.7" y="293" width="1.3" height="15.0" fill="rgb(230,14,12)" rx="2" ry="2" />
<text  x="55.70" y="303.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;service::query_state&gt;::~shared_ptr_count_for (3 samples, 0.06%)</title><rect x="689.2" y="549" width="0.7" height="15.0" fill="rgb(219,98,42)" rx="2" ry="2" />
<text  x="692.23" y="559.5" ></text>
</g>
<g >
<title>emptyable&lt;bool&gt;::verify (1 samples, 0.02%)</title><rect x="72.4" y="341" width="0.2" height="15.0" fill="rgb(248,224,22)" rx="2" ry="2" />
<text  x="75.40" y="351.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, cql3::statements::create_type_statement*, std::default_delete&lt;cql3::statements::create_type_statement&gt; &gt; (1 samples, 0.02%)</title><rect x="64.7" y="389" width="0.3" height="15.0" fill="rgb(253,131,5)" rx="2" ry="2" />
<text  x="67.74" y="399.5" ></text>
</g>
<g >
<title>db::schema_tables::calculate_schema_digest (3 samples, 0.06%)</title><rect x="107.4" y="501" width="0.7" height="15.0" fill="rgb(246,143,23)" rx="2" ry="2" />
<text  x="110.44" y="511.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql_transport::messages::result_message::rows&gt;::shared_ptr_count_for&lt;cql3::result&gt; (1 samples, 0.02%)</title><rect x="672.1" y="533" width="0.3" height="15.0" fill="rgb(228,119,7)" rx="2" ry="2" />
<text  x="675.15" y="543.5" ></text>
</g>
<g >
<title>seastar::do_until&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::fill_buffer (1 samples, 0.02%)</title><rect x="81.4" y="469" width="0.2" height="15.0" fill="rgb(231,223,29)" rx="2" ry="2" />
<text  x="84.38" y="479.5" ></text>
</g>
<g >
<title>tombstone::operator&lt;=&gt; (1 samples, 0.02%)</title><rect x="422.3" y="245" width="0.2" height="15.0" fill="rgb(217,188,8)" rx="2" ry="2" />
<text  x="425.31" y="255.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mTokens (8 samples, 0.15%)</title><rect x="36.7" y="325" width="1.8" height="15.0" fill="rgb(253,43,45)" rx="2" ry="2" />
<text  x="39.71" y="335.5" ></text>
</g>
<g >
<title>operator delete (5 samples, 0.09%)</title><rect x="97.1" y="533" width="1.1" height="15.0" fill="rgb(254,14,23)" rx="2" ry="2" />
<text  x="100.15" y="543.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;6ul, cql3::expr::untyped_constant&gt; (2 samples, 0.04%)</title><rect x="53.4" y="101" width="0.4" height="15.0" fill="rgb(212,26,42)" rx="2" ry="2" />
<text  x="56.35" y="111.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="50.7" y="309" width="0.2" height="15.0" fill="rgb(251,138,38)" rx="2" ry="2" />
<text  x="53.73" y="319.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::check (2 samples, 0.04%)</title><rect x="340.6" y="277" width="0.5" height="15.0" fill="rgb(219,88,4)" rx="2" ry="2" />
<text  x="343.64" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::stats (6 samples, 0.11%)</title><rect x="517.3" y="373" width="1.4" height="15.0" fill="rgb(210,0,17)" rx="2" ry="2" />
<text  x="520.34" y="383.5" ></text>
</g>
<g >
<title>cql3::restrictions::(anonymous namespace)::range_from_bytes (3 samples, 0.06%)</title><rect x="862.0" y="421" width="0.6" height="15.0" fill="rgb(246,195,45)" rx="2" ry="2" />
<text  x="864.99" y="431.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::partition_slice const, std::default_delete&lt;query::partition_slice const&gt; &gt;::~unique_ptr (16 samples, 0.30%)</title><rect x="611.7" y="485" width="3.5" height="15.0" fill="rgb(224,107,41)" rx="2" ry="2" />
<text  x="614.71" y="495.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (5 samples, 0.09%)</title><rect x="829.4" y="389" width="1.1" height="15.0" fill="rgb(210,209,50)" rx="2" ry="2" />
<text  x="832.37" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="469.6" y="325" width="0.2" height="15.0" fill="rgb(228,207,34)" rx="2" ry="2" />
<text  x="472.61" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="210.4" y="245" width="0.2" height="15.0" fill="rgb(240,28,35)" rx="2" ry="2" />
<text  x="213.35" y="255.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::find (6 samples, 0.11%)</title><rect x="958.3" y="437" width="1.3" height="15.0" fill="rgb(248,60,54)" rx="2" ry="2" />
<text  x="961.34" y="447.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperation (53 samples, 0.98%)</title><rect x="45.7" y="421" width="11.6" height="15.0" fill="rgb(221,144,7)" rx="2" ry="2" />
<text  x="48.69" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="94.5" y="533" width="0.2" height="15.0" fill="rgb(225,95,13)" rx="2" ry="2" />
<text  x="97.52" y="543.5" ></text>
</g>
<g >
<title>seastar::reactor::service_highres_timer (1 samples, 0.02%)</title><rect x="1170.1" y="517" width="0.2" height="15.0" fill="rgb(246,65,3)" rx="2" ry="2" />
<text  x="1173.07" y="527.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (3 samples, 0.06%)</title><rect x="156.5" y="501" width="0.6" height="15.0" fill="rgb(205,30,24)" rx="2" ry="2" />
<text  x="159.49" y="511.5" ></text>
</g>
<g >
<title>auth::resource::resource (8 samples, 0.15%)</title><rect x="778.6" y="437" width="1.7" height="15.0" fill="rgb(216,41,30)" rx="2" ry="2" />
<text  x="781.57" y="447.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="1105.3" y="469" width="0.2" height="15.0" fill="rgb(230,155,39)" rx="2" ry="2" />
<text  x="1108.26" y="479.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.06%)</title><rect x="834.8" y="437" width="0.7" height="15.0" fill="rgb(244,36,47)" rx="2" ry="2" />
<text  x="837.84" y="447.5" ></text>
</g>
<g >
<title>nonwrapping_interval&lt;dht::ring_position&gt;::make_singular (1 samples, 0.02%)</title><rect x="939.9" y="469" width="0.3" height="15.0" fill="rgb(206,27,36)" rx="2" ry="2" />
<text  x="942.94" y="479.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="98.7" y="517" width="0.2" height="15.0" fill="rgb(247,218,35)" rx="2" ry="2" />
<text  x="101.68" y="527.5" ></text>
</g>
<g >
<title>cql3::raw_value_view::make_temporary (13 samples, 0.24%)</title><rect x="902.7" y="405" width="2.9" height="15.0" fill="rgb(250,23,13)" rx="2" ry="2" />
<text  x="905.72" y="415.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::impl&gt;::_S_destroy&lt;seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::impl, mutation_fragment&gt; (2 samples, 0.04%)</title><rect x="318.5" y="357" width="0.5" height="15.0" fill="rgb(208,156,54)" rx="2" ry="2" />
<text  x="321.52" y="367.5" ></text>
</g>
<g >
<title>__strcmp_avx2 (1 samples, 0.02%)</title><rect x="79.2" y="677" width="0.2" height="15.0" fill="rgb(246,7,2)" rx="2" ry="2" />
<text  x="82.19" y="687.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.02%)</title><rect x="11.1" y="533" width="0.2" height="15.0" fill="rgb(227,12,7)" rx="2" ry="2" />
<text  x="14.09" y="543.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="54.4" y="325" width="0.3" height="15.0" fill="rgb(246,2,16)" rx="2" ry="2" />
<text  x="57.45" y="335.5" ></text>
</g>
<g >
<title>locator::token_metadata::get_host_id_if_known (6 samples, 0.11%)</title><rect x="1146.2" y="517" width="1.3" height="15.0" fill="rgb(254,80,36)" rx="2" ry="2" />
<text  x="1149.21" y="527.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (3 samples, 0.06%)</title><rect x="939.3" y="469" width="0.6" height="15.0" fill="rgb(205,214,32)" rx="2" ry="2" />
<text  x="942.29" y="479.5" ></text>
</g>
<g >
<title>service::storage_proxy::create_write_response_handler (2 samples, 0.04%)</title><rect x="1133.3" y="261" width="0.4" height="15.0" fill="rgb(244,156,26)" rx="2" ry="2" />
<text  x="1136.29" y="271.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::iterator_at (1 samples, 0.02%)</title><rect x="839.9" y="437" width="0.2" height="15.0" fill="rgb(205,109,24)" rx="2" ry="2" />
<text  x="842.88" y="447.5" ></text>
</g>
<g >
<title>seastar::with_semaphore&lt;seastar::semaphore_default_exception_factory, gms::gossiper::run (1 samples, 0.02%)</title><rect x="1168.3" y="533" width="0.2" height="15.0" fill="rgb(229,178,26)" rx="2" ry="2" />
<text  x="1171.32" y="543.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;boost::range_detail::integer_iterator&lt;unsigned int&gt;, std::function&lt;seastar::future&lt;void&gt;  (1 samples, 0.02%)</title><rect x="17.7" y="485" width="0.2" height="15.0" fill="rgb(246,33,7)" rx="2" ry="2" />
<text  x="20.66" y="495.5" ></text>
</g>
<g >
<title>main (4,959 samples, 92.02%)</title><rect x="84.7" y="677" width="1085.8" height="15.0" fill="rgb(227,77,51)" rx="2" ry="2" />
<text  x="87.67" y="687.5" >main</text>
</g>
<g >
<title>mutation_fragment::visit&lt;partition_snapshot_read_accounter&amp;&gt; (1 samples, 0.02%)</title><rect x="203.8" y="309" width="0.2" height="15.0" fill="rgb(228,42,53)" rx="2" ry="2" />
<text  x="206.78" y="319.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.02%)</title><rect x="48.5" y="261" width="0.3" height="15.0" fill="rgb(241,44,46)" rx="2" ry="2" />
<text  x="51.54" y="271.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::value_ptr&gt;::future_state&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry_ptr&gt; (5 samples, 0.09%)</title><rect x="753.6" y="389" width="1.1" height="15.0" fill="rgb(241,93,6)" rx="2" ry="2" />
<text  x="756.60" y="399.5" ></text>
</g>
<g >
<title>std::push_heap&lt;mutation_reader_merger::reader_and_fragment*, mutation_reader_merger::reader_heap_compare&gt; (1 samples, 0.02%)</title><rect x="199.6" y="325" width="0.2" height="15.0" fill="rgb(221,203,41)" rx="2" ry="2" />
<text  x="202.62" y="335.5" ></text>
</g>
<g >
<title>tests::random::get_int&lt;unsigned long&gt; (5 samples, 0.09%)</title><rect x="857.0" y="533" width="1.0" height="15.0" fill="rgb(223,209,4)" rx="2" ry="2" />
<text  x="859.95" y="543.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::insertToken (7 samples, 0.13%)</title><rect x="23.4" y="373" width="1.5" height="15.0" fill="rgb(243,20,43)" rx="2" ry="2" />
<text  x="26.36" y="383.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::restrictions::multi_column_restriction&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="671.9" y="533" width="0.2" height="15.0" fill="rgb(241,152,12)" rx="2" ry="2" />
<text  x="674.93" y="543.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser&lt;std::_Mem_fn&lt;std::unique_ptr&lt;cql3::statements::raw::parsed_statement, std::default_delete&lt;cql3::statements::raw::parsed_statement&gt; &gt;  (222 samples, 4.12%)</title><rect x="20.1" y="517" width="48.6" height="15.0" fill="rgb(231,170,0)" rx="2" ry="2" />
<text  x="23.07" y="527.5" >cql3..</text>
</g>
<g >
<title>operator delete (4 samples, 0.07%)</title><rect x="815.4" y="373" width="0.8" height="15.0" fill="rgb(215,112,0)" rx="2" ry="2" />
<text  x="818.35" y="383.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::check_access (7 samples, 0.13%)</title><rect x="76.1" y="549" width="1.6" height="15.0" fill="rgb(214,125,35)" rx="2" ry="2" />
<text  x="79.13" y="559.5" ></text>
</g>
<g >
<title>mutation::mutation (1 samples, 0.02%)</title><rect x="109.2" y="405" width="0.2" height="15.0" fill="rgb(237,163,16)" rx="2" ry="2" />
<text  x="112.19" y="415.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::~small_vector (5 samples, 0.09%)</title><rect x="602.7" y="421" width="1.1" height="15.0" fill="rgb(237,70,21)" rx="2" ry="2" />
<text  x="605.74" y="431.5" ></text>
</g>
<g >
<title>cql3::prepare_context::get_partition_key_bind_indexes (1 samples, 0.02%)</title><rect x="69.1" y="517" width="0.2" height="15.0" fill="rgb(213,228,36)" rx="2" ry="2" />
<text  x="72.12" y="527.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::set_value&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; (1 samples, 0.02%)</title><rect x="631.6" y="501" width="0.3" height="15.0" fill="rgb(210,143,18)" rx="2" ry="2" />
<text  x="634.64" y="511.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_partition_key_ranges (307 samples, 5.70%)</title><rect x="881.7" y="485" width="67.2" height="15.0" fill="rgb(230,111,34)" rx="2" ry="2" />
<text  x="884.70" y="495.5" >cql3::r..</text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (1 samples, 0.02%)</title><rect x="594.2" y="421" width="0.2" height="15.0" fill="rgb(214,1,5)" rx="2" ry="2" />
<text  x="597.20" y="431.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (1 samples, 0.02%)</title><rect x="701.5" y="325" width="0.2" height="15.0" fill="rgb(235,113,32)" rx="2" ry="2" />
<text  x="704.49" y="335.5" ></text>
</g>
<g >
<title>partition_builder::accept_row (2 samples, 0.04%)</title><rect x="1121.0" y="293" width="0.5" height="15.0" fill="rgb(252,35,52)" rx="2" ry="2" />
<text  x="1124.03" y="303.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (2 samples, 0.04%)</title><rect x="266.4" y="229" width="0.4" height="15.0" fill="rgb(230,153,23)" rx="2" ry="2" />
<text  x="269.41" y="239.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::read_next (1 samples, 0.02%)</title><rect x="81.4" y="421" width="0.2" height="15.0" fill="rgb(249,210,34)" rx="2" ry="2" />
<text  x="84.38" y="431.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_erase_at_end (10 samples, 0.19%)</title><rect x="403.5" y="245" width="2.2" height="15.0" fill="rgb(246,177,24)" rx="2" ry="2" />
<text  x="406.48" y="255.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_p (1 samples, 0.02%)</title><rect x="58.0" y="309" width="0.2" height="15.0" fill="rgb(210,91,13)" rx="2" ry="2" />
<text  x="60.95" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_next_bkt (6 samples, 0.11%)</title><rect x="1155.6" y="517" width="1.3" height="15.0" fill="rgb(252,183,49)" rx="2" ry="2" />
<text  x="1158.62" y="527.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="161.3" y="453" width="0.2" height="15.0" fill="rgb(229,177,41)" rx="2" ry="2" />
<text  x="164.30" y="463.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::insertToken (7 samples, 0.13%)</title><rect x="23.4" y="357" width="1.5" height="15.0" fill="rgb(221,19,52)" rx="2" ry="2" />
<text  x="26.36" y="367.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::query_options, std::default_delete&lt;cql3::query_options&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="855.0" y="533" width="0.2" height="15.0" fill="rgb(219,149,31)" rx="2" ry="2" />
<text  x="857.98" y="543.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, fragmented_temporary_buffer::view, managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="904.3" y="373" width="0.2" height="15.0" fill="rgb(244,82,43)" rx="2" ry="2" />
<text  x="907.25" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.07%)</title><rect x="946.5" y="421" width="0.9" height="15.0" fill="rgb(205,168,53)" rx="2" ry="2" />
<text  x="949.51" y="431.5" ></text>
</g>
<g >
<title>nonwrapping_interval&lt;dht::ring_position&gt;::make_singular (1 samples, 0.02%)</title><rect x="862.2" y="405" width="0.2" height="15.0" fill="rgb(217,63,36)" rx="2" ry="2" />
<text  x="865.21" y="415.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::raw::update_statement, std::default_delete&lt;cql3::statements::raw::update_statement&gt; &gt;::release (1 samples, 0.02%)</title><rect x="66.9" y="405" width="0.2" height="15.0" fill="rgb(218,229,49)" rx="2" ry="2" />
<text  x="69.93" y="415.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::take (2 samples, 0.04%)</title><rect x="439.2" y="341" width="0.4" height="15.0" fill="rgb(213,40,52)" rx="2" ry="2" />
<text  x="442.17" y="351.5" ></text>
</g>
<g >
<title>seastar::make_shared&lt;cql3::column_identifier_raw, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, bool&gt; (1 samples, 0.02%)</title><rect x="47.4" y="389" width="0.3" height="15.0" fill="rgb(222,67,8)" rx="2" ry="2" />
<text  x="50.44" y="399.5" ></text>
</g>
<g >
<title>empty_flat_reader::~empty_flat_reader (3 samples, 0.06%)</title><rect x="582.6" y="389" width="0.6" height="15.0" fill="rgb(245,11,23)" rx="2" ry="2" />
<text  x="585.59" y="399.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (1 samples, 0.02%)</title><rect x="1189.8" y="661" width="0.2" height="15.0" fill="rgb(236,71,30)" rx="2" ry="2" />
<text  x="1192.78" y="671.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (1 samples, 0.02%)</title><rect x="1189.3" y="693" width="0.3" height="15.0" fill="rgb(239,62,31)" rx="2" ry="2" />
<text  x="1192.34" y="703.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (2 samples, 0.04%)</title><rect x="456.7" y="421" width="0.4" height="15.0" fill="rgb(239,68,23)" rx="2" ry="2" />
<text  x="459.69" y="431.5" ></text>
</g>
<g >
<title>cql3::terminal::to_expression (1 samples, 0.02%)</title><rect x="864.4" y="341" width="0.2" height="15.0" fill="rgb(248,206,30)" rx="2" ry="2" />
<text  x="867.40" y="351.5" ></text>
</g>
<g >
<title>__mmap (1 samples, 0.02%)</title><rect x="1170.3" y="517" width="0.2" height="15.0" fill="rgb(250,78,44)" rx="2" ry="2" />
<text  x="1173.29" y="527.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, enum_set&lt;super_enum&lt;auth::permission,  (66 samples, 1.22%)</title><rect x="793.5" y="293" width="14.4" height="15.0" fill="rgb(247,215,29)" rx="2" ry="2" />
<text  x="796.46" y="303.5" ></text>
</g>
<g >
<title>seastar::future&lt;std::tuple&lt;std::optional&lt;clustering_key_prefix&gt; &gt; &gt;::then_impl&lt;query::querier&lt; (2 samples, 0.04%)</title><rect x="626.4" y="501" width="0.4" height="15.0" fill="rgb(214,208,1)" rx="2" ry="2" />
<text  x="629.39" y="511.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (1 samples, 0.02%)</title><rect x="912.4" y="437" width="0.2" height="15.0" fill="rgb(230,228,12)" rx="2" ry="2" />
<text  x="915.35" y="447.5" ></text>
</g>
<g >
<title>seastar::reactor_backend_aio::~reactor_backend_aio (1 samples, 0.02%)</title><rect x="80.7" y="677" width="0.2" height="15.0" fill="rgb(225,162,49)" rx="2" ry="2" />
<text  x="83.73" y="687.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="633.2" y="501" width="0.2" height="15.0" fill="rgb(216,144,49)" rx="2" ry="2" />
<text  x="636.17" y="511.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="701.1" y="453" width="0.2" height="15.0" fill="rgb(235,114,26)" rx="2" ry="2" />
<text  x="704.05" y="463.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_data_requests (1 samples, 0.02%)</title><rect x="727.5" y="549" width="0.3" height="15.0" fill="rgb(241,211,10)" rx="2" ry="2" />
<text  x="730.55" y="559.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="385.1" y="229" width="0.2" height="15.0" fill="rgb(210,60,15)" rx="2" ry="2" />
<text  x="388.09" y="239.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::digest_read_result&gt;::schedule&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::execute (9 samples, 0.17%)</title><rect x="984.8" y="373" width="2.0" height="15.0" fill="rgb(225,158,16)" rx="2" ry="2" />
<text  x="987.83" y="383.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (2 samples, 0.04%)</title><rect x="284.8" y="245" width="0.4" height="15.0" fill="rgb(242,196,8)" rx="2" ry="2" />
<text  x="287.80" y="255.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.02%)</title><rect x="108.5" y="389" width="0.3" height="15.0" fill="rgb(236,22,39)" rx="2" ry="2" />
<text  x="111.53" y="399.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.02%)</title><rect x="537.5" y="357" width="0.2" height="15.0" fill="rgb(253,193,8)" rx="2" ry="2" />
<text  x="540.49" y="367.5" ></text>
</g>
<g >
<title>std::optional&lt;clustering_key_prefix&gt;::operator=&lt;clustering_key_prefix const&amp;&gt; (2 samples, 0.04%)</title><rect x="276.7" y="277" width="0.4" height="15.0" fill="rgb(207,102,51)" rx="2" ry="2" />
<text  x="279.70" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (9 samples, 0.17%)</title><rect x="1006.5" y="325" width="2.0" height="15.0" fill="rgb(231,129,19)" rx="2" ry="2" />
<text  x="1009.51" y="335.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::remove_if&lt;row::compact_and_expire (69 samples, 1.28%)</title><rect x="406.8" y="261" width="15.1" height="15.0" fill="rgb(220,0,11)" rx="2" ry="2" />
<text  x="409.76" y="271.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (2 samples, 0.04%)</title><rect x="829.8" y="341" width="0.4" height="15.0" fill="rgb(229,129,14)" rx="2" ry="2" />
<text  x="832.80" y="351.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, std::pair&lt;auth::role_or_anonymous, auth::resource&gt;&amp;&amp;, auth::permissions_cache::get (1 samples, 0.02%)</title><rect x="812.9" y="341" width="0.3" height="15.0" fill="rgb(225,199,5)" rx="2" ry="2" />
<text  x="815.94" y="351.5" ></text>
</g>
<g >
<title>database::query_mutations (1 samples, 0.02%)</title><rect x="108.1" y="469" width="0.2" height="15.0" fill="rgb(210,81,30)" rx="2" ry="2" />
<text  x="111.10" y="479.5" ></text>
</g>
<g >
<title>read_simple&lt;long, managed_bytes_basic_view&lt; (2 samples, 0.04%)</title><rect x="419.0" y="229" width="0.5" height="15.0" fill="rgb(214,163,47)" rx="2" ry="2" />
<text  x="422.03" y="239.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reclaiming_disabled&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (223 samples, 4.14%)</title><rect x="218.7" y="277" width="48.8" height="15.0" fill="rgb(231,226,31)" rx="2" ry="2" />
<text  x="221.67" y="287.5" >loga..</text>
</g>
<g >
<title>allocation_strategy::construct&lt;partition_version, mutation_partition&gt; (1 samples, 0.02%)</title><rect x="1118.6" y="181" width="0.2" height="15.0" fill="rgb(252,57,16)" rx="2" ry="2" />
<text  x="1121.62" y="191.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="50.9" y="293" width="0.3" height="15.0" fill="rgb(220,8,52)" rx="2" ry="2" />
<text  x="53.95" y="303.5" ></text>
</g>
<g >
<title>schema::column_at (1 samples, 0.02%)</title><rect x="81.8" y="405" width="0.2" height="15.0" fill="rgb(207,117,24)" rx="2" ry="2" />
<text  x="84.82" y="415.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE8scheduleINS_8internal22promise_base_with_typeIvEEZNS6_14discard_resultEvEUlDpOT_E_ZNS6_14then_impl_nrvoISE_NS0_IvEEEET0_OT_EUlOSA_RSE_ONS_12future_stateIS5_EEE_EEvSJ_OSH_OT1_ (12 samples, 0.22%)</title><rect x="733.2" y="501" width="2.7" height="15.0" fill="rgb(238,134,50)" rx="2" ry="2" />
<text  x="736.24" y="511.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::clear (1 samples, 0.02%)</title><rect x="303.9" y="357" width="0.2" height="15.0" fill="rgb(225,21,1)" rx="2" ry="2" />
<text  x="306.85" y="367.5" ></text>
</g>
<g >
<title>cql3::operation::set_value::set_value (1 samples, 0.02%)</title><rect x="56.4" y="357" width="0.2" height="15.0" fill="rgb(227,223,0)" rx="2" ry="2" />
<text  x="59.42" y="367.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::RecognizerSharedState (1 samples, 0.02%)</title><rect x="20.9" y="405" width="0.3" height="15.0" fill="rgb(250,142,24)" rx="2" ry="2" />
<text  x="23.95" y="415.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.02%)</title><rect x="1121.7" y="213" width="0.2" height="15.0" fill="rgb(211,213,29)" rx="2" ry="2" />
<text  x="1124.68" y="223.5" ></text>
</g>
<g >
<title>fmt::v7::detail::value&lt;fmt::v7::basic_printf_context&lt;fmt::v7::detail::buffer_appender&lt;char&gt;, char&gt; &gt;::format_custom_arg&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, fmt::v7::detail::fallback_formatter&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, char, void&gt; &gt; (1 samples, 0.02%)</title><rect x="19.2" y="549" width="0.2" height="15.0" fill="rgb(223,213,31)" rx="2" ry="2" />
<text  x="22.20" y="559.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::_Move_ctor_base (1 samples, 0.02%)</title><rect x="354.0" y="245" width="0.2" height="15.0" fill="rgb(241,184,19)" rx="2" ry="2" />
<text  x="356.99" y="255.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume_in_thread&lt;sstables::sstable_writer&gt; (13 samples, 0.24%)</title><rect x="80.9" y="613" width="2.9" height="15.0" fill="rgb(230,5,9)" rx="2" ry="2" />
<text  x="83.94" y="623.5" ></text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (1 samples, 0.02%)</title><rect x="13.5" y="645" width="0.2" height="15.0" fill="rgb(207,27,38)" rx="2" ry="2" />
<text  x="16.50" y="655.5" ></text>
</g>
<g >
<title>mutation::set_clustered_cell (1 samples, 0.02%)</title><rect x="108.3" y="437" width="0.2" height="15.0" fill="rgb(241,134,53)" rx="2" ry="2" />
<text  x="111.32" y="447.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::make_ready&lt; (2 samples, 0.04%)</title><rect x="111.8" y="549" width="0.5" height="15.0" fill="rgb(225,0,20)" rx="2" ry="2" />
<text  x="114.82" y="559.5" ></text>
</g>
<g >
<title>std::default_delete&lt;query::partition_slice const&gt;::operator (9 samples, 0.17%)</title><rect x="613.2" y="469" width="2.0" height="15.0" fill="rgb(244,81,35)" rx="2" ry="2" />
<text  x="616.25" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::emplace_back&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; (2 samples, 0.04%)</title><rect x="49.9" y="357" width="0.4" height="15.0" fill="rgb(219,204,23)" rx="2" ry="2" />
<text  x="52.85" y="367.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_rehash_aux (11 samples, 0.20%)</title><rect x="1150.8" y="485" width="2.4" height="15.0" fill="rgb(232,42,7)" rx="2" ry="2" />
<text  x="1153.81" y="495.5" ></text>
</g>
<g >
<title>partition_entry::read (1 samples, 0.02%)</title><rect x="541.6" y="389" width="0.3" height="15.0" fill="rgb(211,180,28)" rx="2" ry="2" />
<text  x="544.65" y="399.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (4 samples, 0.07%)</title><rect x="826.5" y="357" width="0.9" height="15.0" fill="rgb(224,170,32)" rx="2" ry="2" />
<text  x="829.52" y="367.5" ></text>
</g>
<g >
<title>row::row (1 samples, 0.02%)</title><rect x="294.4" y="261" width="0.3" height="15.0" fill="rgb(223,15,24)" rx="2" ry="2" />
<text  x="297.43" y="271.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::~resource_units (1 samples, 0.02%)</title><rect x="438.3" y="309" width="0.2" height="15.0" fill="rgb(254,145,48)" rx="2" ry="2" />
<text  x="441.29" y="319.5" ></text>
</g>
<g >
<title>syscall-0 (1 samples, 0.02%)</title><rect x="1189.8" y="709" width="0.2" height="15.0" fill="rgb(252,46,39)" rx="2" ry="2" />
<text  x="1192.78" y="719.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::handle_exception&lt;cql3::query_processor::execute_prepared (2 samples, 0.04%)</title><rect x="762.4" y="469" width="0.4" height="15.0" fill="rgb(218,34,2)" rx="2" ry="2" />
<text  x="765.36" y="479.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (3 samples, 0.06%)</title><rect x="562.7" y="469" width="0.6" height="15.0" fill="rgb(218,170,47)" rx="2" ry="2" />
<text  x="565.67" y="479.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (64 samples, 1.19%)</title><rect x="342.6" y="277" width="14.0" height="15.0" fill="rgb(213,86,53)" rx="2" ry="2" />
<text  x="345.61" y="287.5" ></text>
</g>
<g >
<title>__memset_avx2_erms (1 samples, 0.02%)</title><rect x="80.7" y="453" width="0.2" height="15.0" fill="rgb(220,176,30)" rx="2" ry="2" />
<text  x="83.73" y="463.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;compact_for_query&lt; (1 samples, 0.02%)</title><rect x="446.4" y="421" width="0.2" height="15.0" fill="rgb(231,53,14)" rx="2" ry="2" />
<text  x="449.40" y="431.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;bytes_ostream::chunk, std::default_delete&lt;bytes_ostream::chunk&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="100.9" y="453" width="0.2" height="15.0" fill="rgb(207,182,29)" rx="2" ry="2" />
<text  x="103.87" y="463.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (2 samples, 0.04%)</title><rect x="83.8" y="661" width="0.4" height="15.0" fill="rgb(210,83,43)" rx="2" ry="2" />
<text  x="86.79" y="671.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.02%)</title><rect x="23.6" y="261" width="0.2" height="15.0" fill="rgb(212,87,16)" rx="2" ry="2" />
<text  x="26.58" y="271.5" ></text>
</g>
<g >
<title>fmt::v7::detail::buffer&lt;char&gt;::push_back (1 samples, 0.02%)</title><rect x="19.2" y="501" width="0.2" height="15.0" fill="rgb(250,174,27)" rx="2" ry="2" />
<text  x="22.20" y="511.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (1 samples, 0.02%)</title><rect x="594.4" y="405" width="0.2" height="15.0" fill="rgb(224,160,52)" rx="2" ry="2" />
<text  x="597.42" y="415.5" ></text>
</g>
<g >
<title>std::construct_at&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::entry&gt; (1 samples, 0.02%)</title><rect x="702.6" y="501" width="0.2" height="15.0" fill="rgb(207,41,19)" rx="2" ry="2" />
<text  x="705.58" y="511.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;2ul, cql3::expr::untyped_constant&gt; (1 samples, 0.02%)</title><rect x="53.6" y="37" width="0.2" height="15.0" fill="rgb(215,131,19)" rx="2" ry="2" />
<text  x="56.57" y="47.5" ></text>
</g>
<g >
<title>bplus::node&lt;long, intrusive_array&lt;memtable_entry&gt;, dht::raw_token_less_comparator, 16ul,  (1 samples, 0.02%)</title><rect x="1119.1" y="245" width="0.2" height="15.0" fill="rgb(206,79,30)" rx="2" ry="2" />
<text  x="1122.06" y="255.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.02%)</title><rect x="55.1" y="293" width="0.2" height="15.0" fill="rgb(212,161,0)" rx="2" ry="2" />
<text  x="58.11" y="303.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::pop_mutation_fragment (3 samples, 0.06%)</title><rect x="337.1" y="325" width="0.7" height="15.0" fill="rgb(247,43,24)" rx="2" ry="2" />
<text  x="340.13" y="335.5" ></text>
</g>
<g >
<title>database::find_column_family (2 samples, 0.04%)</title><rect x="1016.4" y="309" width="0.4" height="15.0" fill="rgb(213,55,37)" rx="2" ry="2" />
<text  x="1019.36" y="319.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.07%)</title><rect x="1032.3" y="277" width="0.9" height="15.0" fill="rgb(207,178,15)" rx="2" ry="2" />
<text  x="1035.35" y="287.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.29] (1 samples, 0.02%)</title><rect x="962.7" y="453" width="0.2" height="15.0" fill="rgb(214,227,53)" rx="2" ry="2" />
<text  x="965.71" y="463.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.02%)</title><rect x="1136.1" y="549" width="0.3" height="15.0" fill="rgb(251,129,8)" rx="2" ry="2" />
<text  x="1139.13" y="559.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.02%)</title><rect x="46.1" y="213" width="0.2" height="15.0" fill="rgb(218,32,21)" rx="2" ry="2" />
<text  x="49.13" y="223.5" ></text>
</g>
<g >
<title>range_tombstone_list::slice (15 samples, 0.28%)</title><rect x="285.5" y="277" width="3.2" height="15.0" fill="rgb(221,40,10)" rx="2" ry="2" />
<text  x="288.46" y="287.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.02%)</title><rect x="809.2" y="309" width="0.2" height="15.0" fill="rgb(236,23,44)" rx="2" ry="2" />
<text  x="812.22" y="319.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.02%)</title><rect x="58.8" y="245" width="0.2" height="15.0" fill="rgb(249,133,11)" rx="2" ry="2" />
<text  x="61.83" y="255.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (6 samples, 0.11%)</title><rect x="332.8" y="341" width="1.3" height="15.0" fill="rgb(214,155,21)" rx="2" ry="2" />
<text  x="335.75" y="351.5" ></text>
</g>
<g >
<title>std::optional&lt;dht::decorated_key&gt;::emplace&lt;dht::decorated_key&gt; (1 samples, 0.02%)</title><rect x="427.6" y="309" width="0.2" height="15.0" fill="rgb(228,201,42)" rx="2" ry="2" />
<text  x="430.57" y="319.5" ></text>
</g>
<g >
<title>std::__make_heap&lt;__gnu_cxx::__normal_iterator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position*, std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::heap_compare&gt; &gt; (1 samples, 0.02%)</title><rect x="291.8" y="293" width="0.2" height="15.0" fill="rgb(209,91,17)" rx="2" ry="2" />
<text  x="294.81" y="303.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned int, std::less&lt;unsigned int&gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;unsigned int&gt; &gt;::end (1 samples, 0.02%)</title><rect x="39.6" y="373" width="0.2" height="15.0" fill="rgb(219,173,0)" rx="2" ry="2" />
<text  x="42.56" y="383.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.02%)</title><rect x="59.0" y="341" width="0.3" height="15.0" fill="rgb(239,104,50)" rx="2" ry="2" />
<text  x="62.05" y="351.5" ></text>
</g>
<g >
<title>ser::get_sizeof&lt;partition_key&gt; (1 samples, 0.02%)</title><rect x="1132.6" y="197" width="0.3" height="15.0" fill="rgb(216,111,36)" rx="2" ry="2" />
<text  x="1135.63" y="207.5" ></text>
</g>
<g >
<title>auth::data_resource_view::table (1 samples, 0.02%)</title><rect x="782.1" y="437" width="0.2" height="15.0" fill="rgb(232,176,8)" rx="2" ry="2" />
<text  x="785.07" y="447.5" ></text>
</g>
<g >
<title>ser::after_qr_cell__timestamp&lt;bytes_ostream&gt;::skip_expiry (14 samples, 0.26%)</title><rect x="385.3" y="229" width="3.1" height="15.0" fill="rgb(226,98,18)" rx="2" ry="2" />
<text  x="388.31" y="239.5" ></text>
</g>
<g >
<title>service::storage_proxy::do_query (1 samples, 0.02%)</title><rect x="961.0" y="469" width="0.2" height="15.0" fill="rgb(214,211,8)" rx="2" ry="2" />
<text  x="963.96" y="479.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.06%)</title><rect x="587.6" y="357" width="0.7" height="15.0" fill="rgb(210,27,5)" rx="2" ry="2" />
<text  x="590.63" y="367.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::get_limit (3 samples, 0.06%)</title><rect x="1116.4" y="501" width="0.7" height="15.0" fill="rgb(233,214,2)" rx="2" ry="2" />
<text  x="1119.43" y="511.5" ></text>
</g>
<g >
<title>utils::fb_utilities::get_broadcast_address (1 samples, 0.02%)</title><rect x="1047.7" y="341" width="0.2" height="15.0" fill="rgb(226,182,38)" rx="2" ry="2" />
<text  x="1050.67" y="351.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::take (1 samples, 0.02%)</title><rect x="323.3" y="421" width="0.3" height="15.0" fill="rgb(219,163,27)" rx="2" ry="2" />
<text  x="326.34" y="431.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::raw::parsed_statement, std::default_delete&lt;cql3::statements::raw::parsed_statement&gt; &gt;::reset (1 samples, 0.02%)</title><rect x="66.7" y="421" width="0.2" height="15.0" fill="rgb(249,44,3)" rx="2" ry="2" />
<text  x="69.71" y="431.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;bytes_ostream::chunk, std::default_delete&lt;bytes_ostream::chunk&gt; &gt;::~unique_ptr (4 samples, 0.07%)</title><rect x="143.6" y="517" width="0.8" height="15.0" fill="rgb(236,67,6)" rx="2" ry="2" />
<text  x="146.57" y="527.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="537.7" y="357" width="0.2" height="15.0" fill="rgb(252,46,34)" rx="2" ry="2" />
<text  x="540.70" y="367.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.09%)</title><rect x="571.6" y="421" width="1.1" height="15.0" fill="rgb(211,48,23)" rx="2" ry="2" />
<text  x="574.64" y="431.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_range_tombstone (20 samples, 0.37%)</title><rect x="271.4" y="245" width="4.4" height="15.0" fill="rgb(231,64,45)" rx="2" ry="2" />
<text  x="274.44" y="255.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::set_text (3 samples, 0.06%)</title><rect x="29.9" y="325" width="0.7" height="15.0" fill="rgb(238,37,32)" rx="2" ry="2" />
<text  x="32.93" y="335.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;, mutation_fragment_merger&lt;mutation_reader_merger&gt;::operator (2 samples, 0.04%)</title><rect x="651.6" y="565" width="0.4" height="15.0" fill="rgb(246,23,51)" rx="2" ry="2" />
<text  x="654.57" y="575.5" ></text>
</g>
<g >
<title>table::table (1 samples, 0.02%)</title><rect x="109.4" y="517" width="0.2" height="15.0" fill="rgb(249,49,47)" rx="2" ry="2" />
<text  x="112.41" y="527.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;void&gt;  (3 samples, 0.06%)</title><rect x="73.7" y="453" width="0.7" height="15.0" fill="rgb(235,86,0)" rx="2" ry="2" />
<text  x="76.72" y="463.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (3 samples, 0.06%)</title><rect x="827.6" y="357" width="0.7" height="15.0" fill="rgb(235,113,48)" rx="2" ry="2" />
<text  x="830.61" y="367.5" ></text>
</g>
<g >
<title>__start_context (2 samples, 0.04%)</title><rect x="10.9" y="661" width="0.4" height="15.0" fill="rgb(216,146,48)" rx="2" ry="2" />
<text  x="13.88" y="671.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::schedule&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (7 samples, 0.13%)</title><rect x="834.6" y="453" width="1.6" height="15.0" fill="rgb(247,83,37)" rx="2" ry="2" />
<text  x="837.62" y="463.5" ></text>
</g>
<g >
<title>db::schema_tables::merge_schema (3 samples, 0.06%)</title><rect x="107.4" y="565" width="0.7" height="15.0" fill="rgb(246,35,13)" rx="2" ry="2" />
<text  x="110.44" y="575.5" ></text>
</g>
<g >
<title>row_tombstone::apply (3 samples, 0.06%)</title><rect x="421.9" y="277" width="0.6" height="15.0" fill="rgb(224,7,18)" rx="2" ry="2" />
<text  x="424.87" y="287.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base&lt;11ul, cql3::expr::untyped_constant&gt; (5 samples, 0.09%)</title><rect x="52.9" y="277" width="1.1" height="15.0" fill="rgb(234,223,53)" rx="2" ry="2" />
<text  x="55.92" y="287.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation::data, std::default_delete&lt;mutation::data&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="107.0" y="485" width="0.2" height="15.0" fill="rgb(229,72,24)" rx="2" ry="2" />
<text  x="110.00" y="495.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;service::digest_read_resolver, false&gt;::make&lt;seastar::lw_shared_ptr&lt;schema const&gt;&amp;, db::consistency_level&amp;, unsigned long&amp;, unsigned long, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;&amp;&gt; (17 samples, 0.32%)</title><rect x="988.8" y="405" width="3.7" height="15.0" fill="rgb(207,104,15)" rx="2" ry="2" />
<text  x="991.77" y="415.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (4 samples, 0.07%)</title><rect x="41.7" y="389" width="0.9" height="15.0" fill="rgb(219,165,44)" rx="2" ry="2" />
<text  x="44.75" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::allocate_large_and_trim (1 samples, 0.02%)</title><rect x="976.1" y="357" width="0.2" height="15.0" fill="rgb(223,1,17)" rx="2" ry="2" />
<text  x="979.07" y="367.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="529.6" y="277" width="0.2" height="15.0" fill="rgb(222,36,53)" rx="2" ry="2" />
<text  x="532.60" y="287.5" ></text>
</g>
<g >
<title>db::schema_tables::create_table_from_mutations (1 samples, 0.02%)</title><rect x="107.2" y="485" width="0.2" height="15.0" fill="rgb(242,190,27)" rx="2" ry="2" />
<text  x="110.22" y="495.5" ></text>
</g>
<g >
<title>boost::intrusive::bstree_impl&lt;boost::intrusive::mhtraits&lt;range_tombstone_entry, boost::intrusive::set_member_hook&lt;boost::intrusive::link_mode&lt; (1 samples, 0.02%)</title><rect x="1124.3" y="245" width="0.2" height="15.0" fill="rgb(209,58,29)" rx="2" ry="2" />
<text  x="1127.31" y="255.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::do_refresh_state (45 samples, 0.84%)</title><rect x="281.3" y="293" width="9.9" height="15.0" fill="rgb(254,137,42)" rx="2" ry="2" />
<text  x="284.30" y="303.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::forward_to (7 samples, 0.13%)</title><rect x="870.7" y="533" width="1.6" height="15.0" fill="rgb(221,19,33)" rx="2" ry="2" />
<text  x="873.75" y="543.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.09%)</title><rect x="855.4" y="501" width="1.1" height="15.0" fill="rgb(231,77,7)" rx="2" ry="2" />
<text  x="858.42" y="511.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::~abstract_read_executor (1 samples, 0.02%)</title><rect x="1163.9" y="517" width="0.3" height="15.0" fill="rgb(210,25,42)" rx="2" ry="2" />
<text  x="1166.94" y="527.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (1 samples, 0.02%)</title><rect x="1142.3" y="533" width="0.2" height="15.0" fill="rgb(224,112,34)" rx="2" ry="2" />
<text  x="1145.27" y="543.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.02%)</title><rect x="887.6" y="357" width="0.2" height="15.0" fill="rgb(246,182,26)" rx="2" ry="2" />
<text  x="890.61" y="367.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.02%)</title><rect x="48.1" y="261" width="0.2" height="15.0" fill="rgb(247,229,22)" rx="2" ry="2" />
<text  x="51.10" y="271.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (1 samples, 0.02%)</title><rect x="1000.2" y="357" width="0.2" height="15.0" fill="rgb(215,131,50)" rx="2" ry="2" />
<text  x="1003.16" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="1112.0" y="453" width="0.3" height="15.0" fill="rgb(230,61,42)" rx="2" ry="2" />
<text  x="1115.05" y="463.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;false, false, std::random_access_iterator_tag&gt;::__copy_m&lt;char*, fmt::v7::detail::buffer_appender&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="19.2" y="517" width="0.2" height="15.0" fill="rgb(253,198,50)" rx="2" ry="2" />
<text  x="22.20" y="527.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_esft&lt;partition_snapshot&gt;::dispose (2 samples, 0.04%)</title><rect x="590.5" y="341" width="0.4" height="15.0" fill="rgb(220,186,53)" rx="2" ry="2" />
<text  x="593.48" y="351.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (1 samples, 0.02%)</title><rect x="79.0" y="597" width="0.2" height="15.0" fill="rgb(217,80,24)" rx="2" ry="2" />
<text  x="81.97" y="607.5" ></text>
</g>
<g >
<title>partition_entry::read (5 samples, 0.09%)</title><rect x="538.8" y="373" width="1.1" height="15.0" fill="rgb(242,7,43)" rx="2" ry="2" />
<text  x="541.80" y="383.5" ></text>
</g>
<g >
<title>std::operator== (1 samples, 0.02%)</title><rect x="40.7" y="341" width="0.2" height="15.0" fill="rgb(209,122,17)" rx="2" ry="2" />
<text  x="43.66" y="351.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::mutation_fragment_merger (15 samples, 0.28%)</title><rect x="481.0" y="341" width="3.3" height="15.0" fill="rgb(248,166,29)" rx="2" ry="2" />
<text  x="483.99" y="351.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (3 samples, 0.06%)</title><rect x="59.5" y="357" width="0.6" height="15.0" fill="rgb(213,74,11)" rx="2" ry="2" />
<text  x="62.49" y="367.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_data_requests (255 samples, 4.73%)</title><rect x="992.7" y="389" width="55.8" height="15.0" fill="rgb(229,197,47)" rx="2" ry="2" />
<text  x="995.71" y="399.5" >servi..</text>
</g>
<g >
<title>std::__detail::_Map_base&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::at (2 samples, 0.04%)</title><rect x="1016.4" y="293" width="0.4" height="15.0" fill="rgb(245,136,44)" rx="2" ry="2" />
<text  x="1019.36" y="303.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.02%)</title><rect x="79.4" y="661" width="0.2" height="15.0" fill="rgb(228,123,43)" rx="2" ry="2" />
<text  x="82.41" y="671.5" ></text>
</g>
<g >
<title>auth::data_resource_view::keyspace (3 samples, 0.06%)</title><rect x="804.6" y="181" width="0.7" height="15.0" fill="rgb(247,125,8)" rx="2" ry="2" />
<text  x="807.62" y="191.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (2 samples, 0.04%)</title><rect x="633.4" y="501" width="0.4" height="15.0" fill="rgb(207,64,22)" rx="2" ry="2" />
<text  x="636.39" y="511.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, flat_mutation_reader, reader_concurrency_semaphore::inactive_read_handle&gt;::~_Variant_storage (1 samples, 0.02%)</title><rect x="640.8" y="501" width="0.3" height="15.0" fill="rgb(236,110,0)" rx="2" ry="2" />
<text  x="643.84" y="511.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (2 samples, 0.04%)</title><rect x="55.5" y="165" width="0.5" height="15.0" fill="rgb(226,41,54)" rx="2" ry="2" />
<text  x="58.54" y="175.5" ></text>
</g>
<g >
<title>cql3::query_processor::prepare_internal (1 samples, 0.02%)</title><rect x="11.1" y="453" width="0.2" height="15.0" fill="rgb(228,0,20)" rx="2" ry="2" />
<text  x="14.09" y="463.5" ></text>
</g>
<g >
<title>cql3::update_parameters::make_cell (2 samples, 0.04%)</title><rect x="863.5" y="357" width="0.5" height="15.0" fill="rgb(224,88,10)" rx="2" ry="2" />
<text  x="866.52" y="367.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (2 samples, 0.04%)</title><rect x="660.5" y="549" width="0.5" height="15.0" fill="rgb(207,161,14)" rx="2" ry="2" />
<text  x="663.54" y="559.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::storage_proxy&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="1133.3" y="229" width="0.2" height="15.0" fill="rgb(216,204,22)" rx="2" ry="2" />
<text  x="1136.29" y="239.5" ></text>
</g>
<g >
<title>service::write_response_handler::~write_response_handler (1 samples, 0.02%)</title><rect x="1167.2" y="565" width="0.2" height="15.0" fill="rgb(236,83,43)" rx="2" ry="2" />
<text  x="1170.23" y="575.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (6 samples, 0.11%)</title><rect x="416.0" y="213" width="1.3" height="15.0" fill="rgb(215,180,42)" rx="2" ry="2" />
<text  x="418.96" y="223.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::response_count (1 samples, 0.02%)</title><rect x="722.9" y="485" width="0.3" height="15.0" fill="rgb(251,147,11)" rx="2" ry="2" />
<text  x="725.95" y="495.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIN7seastar10shared_ptrIN4cql34termEEEEER18overloaded_functorIJZNS6_4expr12prepare_termERKNSB_10expressionER8databaseRKNS4_13basic_sstringIcjLj15ELb1EEENS4_13lw_shared_ptrINS6_20column_specificationEEEE3$_0ZNSB_12prepare_termESE_SG_SK_SN_E3$_1ZNSB_12prepare_termESE_SG_SK_SN_E3$_2ZNSB_12prepare_termESE_SG_SK_SN_E3$_3ZNSB_12prepare_termESE_SG_SK_SN_E3$_4ZNSB_12prepare_termESE_SG_SK_SN_E3$_5ZNSB_12prepare_termESE_SG_SK_SN_E3$_6ZNSB_12prepare_termESE_SG_SK_SN_E3$_7ZNSB_12prepare_termESE_SG_SK_SN_E3$_8ZNSB_12prepare_termESE_SG_SK_SN_E3$_9ZNSB_12prepare_termESE_SG_SK_SN_E4$_10ZNSB_12prepare_termESE_SG_SK_SN_E4$_11ZNSB_12prepare_termESE_SG_SK_SN_E4$_12ZNSB_12prepare_termESE_SG_SK_SN_E4$_13ZNSB_12prepare_termESE_SG_SK_SN_E4$_14ZNSB_12prepare_termESE_SG_SK_SN_E4$_15EERSt7variantIJNSB_11conjunctionENSB_15binary_operatorENSB_12column_valueENSB_5tokenENSB_21unresolved_identifierENSB_25column_mutation_attributeENSB_13function_callENSB_4castENSB_15field_selectionENSB_4nullENSB_13bind_variableENSB_16untyped_constantENSB_8constantENSB_17tuple_constructorENSB_22collection_constructorENSB_20usertype_constructorEEEEJEEESt16integer_sequenceImJLm11EEEE14__visit_invokeES15_S1O_ (6 samples, 0.11%)</title><rect x="70.2" y="453" width="1.3" height="15.0" fill="rgb(235,141,3)" rx="2" ry="2" />
<text  x="73.22" y="463.5" ></text>
</g>
<g >
<title>schema::schema (1 samples, 0.02%)</title><rect x="109.0" y="437" width="0.2" height="15.0" fill="rgb(241,110,19)" rx="2" ry="2" />
<text  x="111.97" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="74.4" y="373" width="0.2" height="15.0" fill="rgb(245,131,33)" rx="2" ry="2" />
<text  x="77.38" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.06%)</title><rect x="541.0" y="373" width="0.6" height="15.0" fill="rgb(227,106,46)" rx="2" ry="2" />
<text  x="543.99" y="383.5" ></text>
</g>
<g >
<title>db::schema_tables::make_schema_mutations (1 samples, 0.02%)</title><rect x="108.3" y="501" width="0.2" height="15.0" fill="rgb(230,23,45)" rx="2" ry="2" />
<text  x="111.32" y="511.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit_slot&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::walking_visitor&lt;row::for_each_cell&lt;sstables::mc::writer::write_cells (7 samples, 0.13%)</title><rect x="81.8" y="421" width="1.6" height="15.0" fill="rgb(252,113,26)" rx="2" ry="2" />
<text  x="84.82" y="431.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (2 samples, 0.04%)</title><rect x="1142.9" y="533" width="0.5" height="15.0" fill="rgb(233,86,2)" rx="2" ry="2" />
<text  x="1145.92" y="543.5" ></text>
</g>
<g >
<title>table::as_mutation_source (7 samples, 0.13%)</title><rect x="644.1" y="501" width="1.6" height="15.0" fill="rgb(252,191,49)" rx="2" ry="2" />
<text  x="647.12" y="511.5" ></text>
</g>
<g >
<title>cql3::expr::expression::operator= (2 samples, 0.04%)</title><rect x="54.0" y="341" width="0.4" height="15.0" fill="rgb(238,223,32)" rx="2" ry="2" />
<text  x="57.01" y="351.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment&lt;schema const&amp;, rows_entry const&amp;&gt; (1 samples, 0.02%)</title><rect x="337.8" y="117" width="0.2" height="15.0" fill="rgb(245,188,44)" rx="2" ry="2" />
<text  x="340.79" y="127.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;compact_for_query&lt; (5 samples, 0.09%)</title><rect x="448.4" y="437" width="1.1" height="15.0" fill="rgb(215,180,6)" rx="2" ry="2" />
<text  x="451.37" y="447.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (36 samples, 0.67%)</title><rect x="234.7" y="165" width="7.8" height="15.0" fill="rgb(234,40,52)" rx="2" ry="2" />
<text  x="237.66" y="175.5" ></text>
</g>
<g >
<title>multishard_combining_reader::fill_buffer (1 samples, 0.02%)</title><rect x="107.7" y="325" width="0.2" height="15.0" fill="rgb(245,39,42)" rx="2" ry="2" />
<text  x="110.66" y="335.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::statements::drop_view_statement, std::default_delete&lt;cql3::statements::drop_view_statement&gt;, true, true&gt;::__uniq_ptr_data (1 samples, 0.02%)</title><rect x="65.6" y="421" width="0.2" height="15.0" fill="rgb(219,19,16)" rx="2" ry="2" />
<text  x="68.62" y="431.5" ></text>
</g>
<g >
<title>cql3::expr::conjunction::~conjunction (1 samples, 0.02%)</title><rect x="60.6" y="341" width="0.2" height="15.0" fill="rgb(243,40,42)" rx="2" ry="2" />
<text  x="63.58" y="351.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (1 samples, 0.02%)</title><rect x="1136.4" y="549" width="0.2" height="15.0" fill="rgb(223,121,29)" rx="2" ry="2" />
<text  x="1139.35" y="559.5" ></text>
</g>
<g >
<title>std::push_heap&lt;mutation_reader_merger::reader_and_fragment*, mutation_reader_merger::reader_heap_compare&gt; (10 samples, 0.19%)</title><rect x="195.0" y="309" width="2.2" height="15.0" fill="rgb(246,99,31)" rx="2" ry="2" />
<text  x="198.03" y="319.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="776.4" y="437" width="0.2" height="15.0" fill="rgb(254,122,16)" rx="2" ry="2" />
<text  x="779.38" y="447.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.04%)</title><rect x="651.6" y="549" width="0.4" height="15.0" fill="rgb(219,112,33)" rx="2" ry="2" />
<text  x="654.57" y="559.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.07%)</title><rect x="93.9" y="549" width="0.8" height="15.0" fill="rgb(207,229,15)" rx="2" ry="2" />
<text  x="96.86" y="559.5" ></text>
</g>
<g >
<title>mutation_reader_merger::close (62 samples, 1.15%)</title><rect x="580.0" y="437" width="13.5" height="15.0" fill="rgb(249,104,15)" rx="2" ry="2" />
<text  x="582.96" y="447.5" ></text>
</g>
<g >
<title>boost::algorithm::any_of&lt;std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;, std::_Bind_front&lt;bool  (4 samples, 0.07%)</title><rect x="861.1" y="437" width="0.9" height="15.0" fill="rgb(219,124,43)" rx="2" ry="2" />
<text  x="864.12" y="447.5" ></text>
</g>
<g >
<title>cql3::raw_value_view::raw_value_view (3 samples, 0.06%)</title><rect x="905.6" y="405" width="0.6" height="15.0" fill="rgb(242,202,0)" rx="2" ry="2" />
<text  x="908.57" y="415.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_M_reset (1 samples, 0.02%)</title><rect x="1087.3" y="405" width="0.2" height="15.0" fill="rgb(251,146,25)" rx="2" ry="2" />
<text  x="1090.31" y="415.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_destroy_data (1 samples, 0.02%)</title><rect x="640.4" y="453" width="0.2" height="15.0" fill="rgb(208,173,12)" rx="2" ry="2" />
<text  x="643.40" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="1153.0" y="453" width="0.2" height="15.0" fill="rgb(212,43,54)" rx="2" ry="2" />
<text  x="1155.99" y="463.5" ></text>
</g>
<g >
<title>global_schema_ptr::get (1 samples, 0.02%)</title><rect x="1033.7" y="325" width="0.2" height="15.0" fill="rgb(248,99,1)" rx="2" ry="2" />
<text  x="1036.66" y="335.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;boost::range_detail::integer_iterator&lt;unsigned int&gt;, std::function&lt;seastar::future&lt;void&gt;  (1 samples, 0.02%)</title><rect x="106.8" y="485" width="0.2" height="15.0" fill="rgb(205,43,50)" rx="2" ry="2" />
<text  x="109.78" y="495.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;cql3::raw_value_view&gt;::allocate (1 samples, 0.02%)</title><rect x="851.7" y="437" width="0.2" height="15.0" fill="rgb(253,16,31)" rx="2" ry="2" />
<text  x="854.70" y="447.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::clear (2 samples, 0.04%)</title><rect x="811.0" y="309" width="0.4" height="15.0" fill="rgb(230,144,27)" rx="2" ry="2" />
<text  x="813.97" y="319.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;service::digest_read_resolver&gt;::shared_ptr_count_for&lt;seastar::lw_shared_ptr&lt;schema const&gt;&amp;, db::consistency_level&amp;, unsigned long&amp;, unsigned long, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;&amp;&gt; (1 samples, 0.02%)</title><rect x="988.6" y="405" width="0.2" height="15.0" fill="rgb(210,62,40)" rx="2" ry="2" />
<text  x="991.55" y="415.5" ></text>
</g>
<g >
<title>std::default_delete&lt;mutation_fragment::data&gt;::operator (1 samples, 0.02%)</title><rect x="435.9" y="325" width="0.2" height="15.0" fill="rgb(213,34,13)" rx="2" ry="2" />
<text  x="438.89" y="335.5" ></text>
</g>
<g >
<title>cql3::to_managed_bytes_opt (2 samples, 0.04%)</title><rect x="911.9" y="437" width="0.5" height="15.0" fill="rgb(250,9,9)" rx="2" ry="2" />
<text  x="914.92" y="447.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::destroy_slots (1 samples, 0.02%)</title><rect x="703.5" y="357" width="0.2" height="15.0" fill="rgb(245,78,52)" rx="2" ry="2" />
<text  x="706.46" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="543.2" y="389" width="0.2" height="15.0" fill="rgb(228,87,16)" rx="2" ry="2" />
<text  x="546.18" y="399.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::small_vector (1 samples, 0.02%)</title><rect x="484.9" y="341" width="0.3" height="15.0" fill="rgb(238,92,54)" rx="2" ry="2" />
<text  x="487.93" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="687.3" y="549" width="0.2" height="15.0" fill="rgb(244,204,24)" rx="2" ry="2" />
<text  x="690.26" y="559.5" ></text>
</g>
<g >
<title>ser::serializer&lt;partition_key&gt;::write&lt;bytes_ostream&gt; (2 samples, 0.04%)</title><rect x="1132.4" y="229" width="0.5" height="15.0" fill="rgb(230,126,32)" rx="2" ry="2" />
<text  x="1135.41" y="239.5" ></text>
</g>
<g >
<title>cql3::keyspace_element_name::keyspace_element_name (1 samples, 0.02%)</title><rect x="43.5" y="405" width="0.2" height="15.0" fill="rgb(239,189,31)" rx="2" ry="2" />
<text  x="46.50" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_insert&lt;flat_mutation_reader&gt; (12 samples, 0.22%)</title><rect x="470.9" y="325" width="2.6" height="15.0" fill="rgb(234,208,4)" rx="2" ry="2" />
<text  x="473.92" y="335.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;query::result_memory_accounter&gt;::clear (2 samples, 0.04%)</title><rect x="629.2" y="501" width="0.5" height="15.0" fill="rgb(236,126,26)" rx="2" ry="2" />
<text  x="632.23" y="511.5" ></text>
</g>
<g >
<title>allocation_strategy::destroy&lt;rows_entry&gt; (3 samples, 0.06%)</title><rect x="1133.9" y="309" width="0.7" height="15.0" fill="rgb(206,155,13)" rx="2" ry="2" />
<text  x="1136.95" y="319.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_M_reset (1 samples, 0.02%)</title><rect x="862.9" y="421" width="0.2" height="15.0" fill="rgb(253,202,47)" rx="2" ry="2" />
<text  x="865.87" y="431.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (2 samples, 0.04%)</title><rect x="362.8" y="245" width="0.4" height="15.0" fill="rgb(232,4,28)" rx="2" ry="2" />
<text  x="365.75" y="255.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_no_esft&lt;std::function&lt;flat_mutation_reader  (1 samples, 0.02%)</title><rect x="644.1" y="453" width="0.2" height="15.0" fill="rgb(224,37,23)" rx="2" ry="2" />
<text  x="647.12" y="463.5" ></text>
</g>
<g >
<title>logalloc::region_impl::alloc (1 samples, 0.02%)</title><rect x="1118.8" y="229" width="0.3" height="15.0" fill="rgb(243,20,24)" rx="2" ry="2" />
<text  x="1121.84" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="60.6" y="325" width="0.2" height="15.0" fill="rgb(239,56,12)" rx="2" ry="2" />
<text  x="63.58" y="335.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (2 samples, 0.04%)</title><rect x="19.6" y="549" width="0.5" height="15.0" fill="rgb(245,59,53)" rx="2" ry="2" />
<text  x="22.63" y="559.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (1 samples, 0.02%)</title><rect x="1139.4" y="405" width="0.2" height="15.0" fill="rgb(233,5,46)" rx="2" ry="2" />
<text  x="1142.42" y="415.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_ba202cd8bdcfd8c6f1dbb280f642f5ad31cbca7c] (1 samples, 0.02%)</title><rect x="18.5" y="565" width="0.3" height="15.0" fill="rgb(235,29,47)" rx="2" ry="2" />
<text  x="21.54" y="575.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;seastar::sharded&lt;database&gt;::invoke_on_all (1 samples, 0.02%)</title><rect x="17.4" y="597" width="0.3" height="15.0" fill="rgb(214,182,2)" rx="2" ry="2" />
<text  x="20.44" y="607.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::make_data_requests (1 samples, 0.02%)</title><rect x="996.9" y="325" width="0.2" height="15.0" fill="rgb(210,214,6)" rx="2" ry="2" />
<text  x="999.87" y="335.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;locator::snitch_ptr&gt;::local (2 samples, 0.04%)</title><rect x="1086.2" y="373" width="0.4" height="15.0" fill="rgb(229,199,15)" rx="2" ry="2" />
<text  x="1089.21" y="383.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::read_next (1 samples, 0.02%)</title><rect x="295.3" y="325" width="0.2" height="15.0" fill="rgb(219,143,33)" rx="2" ry="2" />
<text  x="298.31" y="335.5" ></text>
</g>
<g >
<title>commitlog_entry_writer::serialize&lt;seastar::memory_output_stream&lt;__gnu_cxx::__normal_iterator&lt;seastar::temporary_buffer&lt;char&gt;*, std::vector&lt;seastar::temporary_buffer&lt;char&gt;, std::allocator&lt;seastar::temporary_buffer&lt;char&gt; &gt; &gt; &gt; &gt; &gt; (2 samples, 0.04%)</title><rect x="1125.0" y="309" width="0.4" height="15.0" fill="rgb(243,75,0)" rx="2" ry="2" />
<text  x="1127.97" y="319.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const*, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;*&gt; (4 samples, 0.07%)</title><rect x="795.6" y="245" width="0.9" height="15.0" fill="rgb(222,204,19)" rx="2" ry="2" />
<text  x="798.64" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="862.6" y="373" width="0.3" height="15.0" fill="rgb(254,39,14)" rx="2" ry="2" />
<text  x="865.65" y="383.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::create_type_statement, std::default_delete&lt;cql3::statements::create_type_statement&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="64.7" y="421" width="0.3" height="15.0" fill="rgb(230,181,12)" rx="2" ry="2" />
<text  x="67.74" y="431.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (2 samples, 0.04%)</title><rect x="899.7" y="341" width="0.4" height="15.0" fill="rgb(207,180,0)" rx="2" ry="2" />
<text  x="902.65" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (5 samples, 0.09%)</title><rect x="571.6" y="405" width="1.1" height="15.0" fill="rgb(205,185,27)" rx="2" ry="2" />
<text  x="574.64" y="415.5" ></text>
</g>
<g >
<title>query::querier_base::~querier_base (1 samples, 0.02%)</title><rect x="122.3" y="517" width="0.2" height="15.0" fill="rgb(209,34,42)" rx="2" ry="2" />
<text  x="125.33" y="527.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (3 samples, 0.06%)</title><rect x="222.0" y="197" width="0.6" height="15.0" fill="rgb(222,34,50)" rx="2" ry="2" />
<text  x="224.96" y="207.5" ></text>
</g>
<g >
<title>database::get_unlimited_query_max_result_size (4 samples, 0.07%)</title><rect x="1113.1" y="469" width="0.9" height="15.0" fill="rgb(226,51,21)" rx="2" ry="2" />
<text  x="1116.14" y="479.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;std::tuple&lt;std::optional&lt;clustering_key_prefix&gt; &gt; &gt;::clear (1 samples, 0.02%)</title><rect x="565.5" y="485" width="0.2" height="15.0" fill="rgb(250,67,17)" rx="2" ry="2" />
<text  x="568.51" y="495.5" ></text>
</g>
<g >
<title>__tls_init (1 samples, 0.02%)</title><rect x="550.8" y="357" width="0.3" height="15.0" fill="rgb(250,22,4)" rx="2" ry="2" />
<text  x="553.84" y="367.5" ></text>
</g>
<g >
<title>dht::shard_of (6 samples, 0.11%)</title><rect x="1003.9" y="341" width="1.3" height="15.0" fill="rgb(219,36,36)" rx="2" ry="2" />
<text  x="1006.88" y="351.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (1 samples, 0.02%)</title><rect x="894.6" y="325" width="0.2" height="15.0" fill="rgb(244,199,53)" rx="2" ry="2" />
<text  x="897.62" y="335.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::create_type_statement, std::default_delete&lt;cql3::statements::create_type_statement&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="64.7" y="437" width="0.3" height="15.0" fill="rgb(230,204,10)" rx="2" ry="2" />
<text  x="67.74" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="1129.8" y="197" width="0.2" height="15.0" fill="rgb(242,128,33)" rx="2" ry="2" />
<text  x="1132.78" y="207.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;void&gt;, service::storage_proxy*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt;, db::consistency_level, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, tracing::trace_state_ptr, service_permit, bool, seastar::lw_shared_ptr&lt;cdc::operation_result_tracker&gt; &gt;::operator (2 samples, 0.04%)</title><rect x="860.5" y="405" width="0.4" height="15.0" fill="rgb(249,38,29)" rx="2" ry="2" />
<text  x="863.46" y="415.5" ></text>
</g>
<g >
<title>memtable_entry::snapshot (7 samples, 0.13%)</title><rect x="538.4" y="389" width="1.5" height="15.0" fill="rgb(211,122,15)" rx="2" ry="2" />
<text  x="541.36" y="399.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::~abstract_read_executor (13 samples, 0.24%)</title><rect x="1164.4" y="501" width="2.8" height="15.0" fill="rgb(213,39,42)" rx="2" ry="2" />
<text  x="1167.38" y="511.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.02%)</title><rect x="58.6" y="213" width="0.2" height="15.0" fill="rgb(212,143,51)" rx="2" ry="2" />
<text  x="61.61" y="223.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::relationType (2 samples, 0.04%)</title><rect x="58.6" y="389" width="0.4" height="15.0" fill="rgb(232,39,11)" rx="2" ry="2" />
<text  x="61.61" y="399.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;column_definition const*, std::pair&lt;column_definition const* const, cql3::expr::expression&gt;, std::allocator&lt;std::pair&lt;column_definition const* const, cql3::expr::expression&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;column_definition const*&gt;, std::hash&lt;column_definition const*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::~_Hashtable (1 samples, 0.02%)</title><rect x="74.8" y="469" width="0.2" height="15.0" fill="rgb(237,36,54)" rx="2" ry="2" />
<text  x="77.81" y="479.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::get_promise (1 samples, 0.02%)</title><rect x="1034.8" y="325" width="0.2" height="15.0" fill="rgb(211,84,35)" rx="2" ry="2" />
<text  x="1037.75" y="335.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;auth::resource_kind, std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;auth::resource_kind&gt;, std::hash&lt;auth::resource_kind&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (4 samples, 0.07%)</title><rect x="779.0" y="405" width="0.9" height="15.0" fill="rgb(219,47,7)" rx="2" ry="2" />
<text  x="782.00" y="415.5" ></text>
</g>
<g >
<title>table::as_mutation_source (1 samples, 0.02%)</title><rect x="144.7" y="517" width="0.2" height="15.0" fill="rgb(241,84,29)" rx="2" ry="2" />
<text  x="147.66" y="527.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.02%)</title><rect x="56.2" y="357" width="0.2" height="15.0" fill="rgb(209,188,24)" rx="2" ry="2" />
<text  x="59.20" y="367.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (1 samples, 0.02%)</title><rect x="16.3" y="565" width="0.3" height="15.0" fill="rgb(254,161,44)" rx="2" ry="2" />
<text  x="19.35" y="575.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (2 samples, 0.04%)</title><rect x="248.2" y="181" width="0.5" height="15.0" fill="rgb(248,228,15)" rx="2" ry="2" />
<text  x="251.23" y="191.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reserve&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::fill_buffer (1 samples, 0.02%)</title><rect x="81.4" y="453" width="0.2" height="15.0" fill="rgb(215,66,20)" rx="2" ry="2" />
<text  x="84.38" y="463.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;service::digest_read_resolver&gt;::~shared_ptr_count_for (6 samples, 0.11%)</title><rect x="712.0" y="549" width="1.3" height="15.0" fill="rgb(247,160,47)" rx="2" ry="2" />
<text  x="715.00" y="559.5" ></text>
</g>
<g >
<title>intrusive_array&lt;memtable_entry&gt;::intrusive_array&lt;seastar::lw_shared_ptr&lt;schema const&gt;&amp;, dht::decorated_key, mutation_partition&gt; (1 samples, 0.02%)</title><rect x="1118.6" y="229" width="0.2" height="15.0" fill="rgb(232,176,14)" rx="2" ry="2" />
<text  x="1121.62" y="239.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (1 samples, 0.02%)</title><rect x="941.9" y="469" width="0.2" height="15.0" fill="rgb(247,113,48)" rx="2" ry="2" />
<text  x="944.91" y="479.5" ></text>
</g>
<g >
<title>cql3::raw_value_view::make_temporary (1 samples, 0.02%)</title><rect x="861.6" y="357" width="0.2" height="15.0" fill="rgb(205,229,11)" rx="2" ry="2" />
<text  x="864.55" y="367.5" ></text>
</g>
<g >
<title>seastar::future&lt;query::result_memory_accounter&gt;::get0 (4 samples, 0.07%)</title><rect x="625.5" y="501" width="0.9" height="15.0" fill="rgb(222,78,1)" rx="2" ry="2" />
<text  x="628.51" y="511.5" ></text>
</g>
<g >
<title>seastar::smp::submit_to&lt;seastar::sharded&lt;database&gt;::stop (1 samples, 0.02%)</title><rect x="703.5" y="453" width="0.2" height="15.0" fill="rgb(223,213,18)" rx="2" ry="2" />
<text  x="706.46" y="463.5" ></text>
</g>
<g >
<title>utils::basic_ihistogram&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt; &gt;::mark&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; (3 samples, 0.06%)</title><rect x="624.9" y="469" width="0.6" height="15.0" fill="rgb(240,161,48)" rx="2" ry="2" />
<text  x="627.85" y="479.5" ></text>
</g>
<g >
<title>seastar::make_shared&lt;cql3::selection::raw_selector, cql3::expr::expression&amp;, seastar::shared_ptr&lt;cql3::column_identifier&gt;&amp;&gt; (1 samples, 0.02%)</title><rect x="11.1" y="293" width="0.2" height="15.0" fill="rgb(235,150,1)" rx="2" ry="2" />
<text  x="14.09" y="303.5" ></text>
</g>
<g >
<title>bytes_view_hasher::finalize (3 samples, 0.06%)</title><rect x="760.8" y="325" width="0.7" height="15.0" fill="rgb(209,216,50)" rx="2" ry="2" />
<text  x="763.83" y="335.5" ></text>
</g>
<g >
<title>mutation_fragment::destroy_data (1 samples, 0.02%)</title><rect x="858.9" y="533" width="0.2" height="15.0" fill="rgb(216,75,26)" rx="2" ry="2" />
<text  x="861.93" y="543.5" ></text>
</g>
<g >
<title>std::hash&lt;std::basic_string_view&lt;signed char, std::char_traits&lt;signed char&gt; &gt; &gt;::operator (1 samples, 0.02%)</title><rect x="17.9" y="405" width="0.2" height="15.0" fill="rgb(249,164,42)" rx="2" ry="2" />
<text  x="20.88" y="415.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt;::_M_reset (1 samples, 0.02%)</title><rect x="591.8" y="357" width="0.2" height="15.0" fill="rgb(219,130,36)" rx="2" ry="2" />
<text  x="594.79" y="367.5" ></text>
</g>
<g >
<title>mutation_partition::clustered_row (1 samples, 0.02%)</title><rect x="108.3" y="421" width="0.2" height="15.0" fill="rgb(219,135,29)" rx="2" ry="2" />
<text  x="111.32" y="431.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;void&gt;  (1 samples, 0.02%)</title><rect x="703.5" y="485" width="0.2" height="15.0" fill="rgb(227,113,50)" rx="2" ry="2" />
<text  x="706.46" y="495.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::find (1 samples, 0.02%)</title><rect x="670.8" y="485" width="0.3" height="15.0" fill="rgb(247,190,31)" rx="2" ry="2" />
<text  x="673.84" y="495.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::forward_to (1 samples, 0.02%)</title><rect x="652.9" y="549" width="0.2" height="15.0" fill="rgb(210,22,11)" rx="2" ry="2" />
<text  x="655.88" y="559.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::operator== (9 samples, 0.17%)</title><rect x="799.8" y="197" width="2.0" height="15.0" fill="rgb(238,187,5)" rx="2" ry="2" />
<text  x="802.81" y="207.5" ></text>
</g>
<g >
<title>absl::hash_internal::HashState::combine_contiguous (1 samples, 0.02%)</title><rect x="848.2" y="405" width="0.2" height="15.0" fill="rgb(245,30,40)" rx="2" ry="2" />
<text  x="851.20" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::allocate_large_and_trim (1 samples, 0.02%)</title><rect x="574.1" y="341" width="0.2" height="15.0" fill="rgb(245,103,24)" rx="2" ry="2" />
<text  x="577.05" y="351.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, seastar::lw_shared_ptr&lt;schema const&gt; &gt;, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, seastar::lw_shared_ptr&lt;schema const&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, std::hash&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (1 samples, 0.02%)</title><rect x="703.5" y="293" width="0.2" height="15.0" fill="rgb(230,113,15)" rx="2" ry="2" />
<text  x="706.46" y="303.5" ></text>
</g>
<g >
<title>clustering_row::clustering_row (146 samples, 2.71%)</title><rect x="221.3" y="229" width="32.0" height="15.0" fill="rgb(219,31,43)" rx="2" ry="2" />
<text  x="224.30" y="239.5" >cl..</text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_pausable&lt;flush_reader::fill_buffer (1 samples, 0.02%)</title><rect x="79.4" y="501" width="0.2" height="15.0" fill="rgb(225,179,12)" rx="2" ry="2" />
<text  x="82.41" y="511.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (22 samples, 0.41%)</title><rect x="254.8" y="197" width="4.8" height="15.0" fill="rgb(242,217,41)" rx="2" ry="2" />
<text  x="257.80" y="207.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_M_set_node (1 samples, 0.02%)</title><rect x="58.6" y="197" width="0.2" height="15.0" fill="rgb(209,117,50)" rx="2" ry="2" />
<text  x="61.61" y="207.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;std::function&lt;std::function&lt;partition_presence_checker_result  (5 samples, 0.09%)</title><rect x="644.3" y="469" width="1.1" height="15.0" fill="rgb(240,166,15)" rx="2" ry="2" />
<text  x="647.34" y="479.5" ></text>
</g>
<g >
<title>utils::loading_shared_values&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater, 256ul&gt;::find&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt; &gt; (16 samples, 0.30%)</title><rect x="741.1" y="453" width="3.5" height="15.0" fill="rgb(238,161,23)" rx="2" ry="2" />
<text  x="744.12" y="463.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (2 samples, 0.04%)</title><rect x="509.9" y="245" width="0.4" height="15.0" fill="rgb(220,149,43)" rx="2" ry="2" />
<text  x="512.90" y="255.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (2 samples, 0.04%)</title><rect x="478.8" y="373" width="0.4" height="15.0" fill="rgb(245,27,35)" rx="2" ry="2" />
<text  x="481.80" y="383.5" ></text>
</g>
<g >
<title>validation::validate_keyspace (9 samples, 0.17%)</title><rect x="828.5" y="437" width="2.0" height="15.0" fill="rgb(230,165,4)" rx="2" ry="2" />
<text  x="831.49" y="447.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_M_reset (2 samples, 0.04%)</title><rect x="1100.0" y="437" width="0.4" height="15.0" fill="rgb(246,228,31)" rx="2" ry="2" />
<text  x="1103.01" y="447.5" ></text>
</g>
<g >
<title>cql3::query_options::fill_value_views (11 samples, 0.20%)</title><rect x="851.3" y="469" width="2.4" height="15.0" fill="rgb(210,52,53)" rx="2" ry="2" />
<text  x="854.26" y="479.5" ></text>
</g>
<g >
<title>dirty_memory_manager::account_potentially_cleaned_up_memory (1 samples, 0.02%)</title><rect x="80.9" y="501" width="0.3" height="15.0" fill="rgb(245,161,48)" rx="2" ry="2" />
<text  x="83.94" y="511.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (2 samples, 0.04%)</title><rect x="822.1" y="421" width="0.5" height="15.0" fill="rgb(236,208,6)" rx="2" ry="2" />
<text  x="825.14" y="431.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::then_wrapped_nrvo&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (9 samples, 0.17%)</title><rect x="834.2" y="469" width="2.0" height="15.0" fill="rgb(212,5,54)" rx="2" ry="2" />
<text  x="837.18" y="479.5" ></text>
</g>
<g >
<title>cql3::authorized_prepared_statements_cache_key::hash (9 samples, 0.17%)</title><rect x="759.7" y="389" width="2.0" height="15.0" fill="rgb(239,215,41)" rx="2" ry="2" />
<text  x="762.73" y="399.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::at (8 samples, 0.15%)</title><rect x="1052.5" y="389" width="1.7" height="15.0" fill="rgb(235,45,5)" rx="2" ry="2" />
<text  x="1055.49" y="399.5" ></text>
</g>
<g >
<title>service::abstract_read_resolver::abstract_read_resolver (6 samples, 0.11%)</title><rect x="991.2" y="357" width="1.3" height="15.0" fill="rgb(230,29,53)" rx="2" ry="2" />
<text  x="994.18" y="367.5" ></text>
</g>
<g >
<title>auth::get_permissions (120 samples, 2.23%)</title><rect x="788.4" y="373" width="26.3" height="15.0" fill="rgb(231,177,40)" rx="2" ry="2" />
<text  x="791.42" y="383.5" >a..</text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.02%)</title><rect x="24.7" y="261" width="0.2" height="15.0" fill="rgb(235,85,7)" rx="2" ry="2" />
<text  x="27.67" y="271.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="45.0" y="293" width="0.3" height="15.0" fill="rgb(241,148,15)" rx="2" ry="2" />
<text  x="48.03" y="303.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="61.7" y="373" width="0.2" height="15.0" fill="rgb(225,157,27)" rx="2" ry="2" />
<text  x="64.68" y="383.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::selectClause (1 samples, 0.02%)</title><rect x="11.1" y="325" width="0.2" height="15.0" fill="rgb(234,85,23)" rx="2" ry="2" />
<text  x="14.09" y="335.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (5 samples, 0.09%)</title><rect x="47.7" y="373" width="1.1" height="15.0" fill="rgb(229,8,11)" rx="2" ry="2" />
<text  x="50.66" y="383.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::invoke_on_all (1 samples, 0.02%)</title><rect x="106.8" y="533" width="0.2" height="15.0" fill="rgb(219,227,4)" rx="2" ry="2" />
<text  x="109.78" y="543.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (1 samples, 0.02%)</title><rect x="675.0" y="549" width="0.2" height="15.0" fill="rgb(208,146,8)" rx="2" ry="2" />
<text  x="678.00" y="559.5" ></text>
</g>
<g >
<title>std::__detail::_List_node_header::_List_node_header (1 samples, 0.02%)</title><rect x="481.6" y="325" width="0.3" height="15.0" fill="rgb(245,15,6)" rx="2" ry="2" />
<text  x="484.65" y="335.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (2 samples, 0.04%)</title><rect x="49.0" y="309" width="0.4" height="15.0" fill="rgb(249,184,2)" rx="2" ry="2" />
<text  x="51.98" y="319.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.02%)</title><rect x="56.0" y="245" width="0.2" height="15.0" fill="rgb(232,116,41)" rx="2" ry="2" />
<text  x="58.98" y="255.5" ></text>
</g>
<g >
<title>sstables::write_unsigned_vint&lt;bytes_ostream&gt; (1 samples, 0.02%)</title><rect x="83.1" y="389" width="0.3" height="15.0" fill="rgb(229,186,19)" rx="2" ry="2" />
<text  x="86.13" y="399.5" ></text>
</g>
<g >
<title>seastar::syscall_work_queue::complete (1 samples, 0.02%)</title><rect x="1139.4" y="565" width="0.2" height="15.0" fill="rgb(225,215,23)" rx="2" ry="2" />
<text  x="1142.42" y="575.5" ></text>
</g>
<g >
<title>row::append_cell (3 samples, 0.06%)</title><rect x="1121.5" y="277" width="0.6" height="15.0" fill="rgb(245,191,29)" rx="2" ry="2" />
<text  x="1124.46" y="287.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (1 samples, 0.02%)</title><rect x="660.3" y="549" width="0.2" height="15.0" fill="rgb(236,92,25)" rx="2" ry="2" />
<text  x="663.32" y="559.5" ></text>
</g>
<g >
<title>partition_entry::partition_entry (1 samples, 0.02%)</title><rect x="84.0" y="565" width="0.2" height="15.0" fill="rgb(228,213,34)" rx="2" ry="2" />
<text  x="87.01" y="575.5" ></text>
</g>
<g >
<title>empty_flat_reader::~empty_flat_reader (3 samples, 0.06%)</title><rect x="581.7" y="405" width="0.7" height="15.0" fill="rgb(221,98,44)" rx="2" ry="2" />
<text  x="584.72" y="415.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (8 samples, 0.15%)</title><rect x="1103.5" y="469" width="1.8" height="15.0" fill="rgb(234,139,9)" rx="2" ry="2" />
<text  x="1106.51" y="479.5" ></text>
</g>
<g >
<title>bplus::tree&lt;long, intrusive_array&lt;cache_entry&gt;, dht::raw_token_less_comparator, 16ul,  (1 samples, 0.02%)</title><rect x="547.6" y="373" width="0.2" height="15.0" fill="rgb(250,124,27)" rx="2" ry="2" />
<text  x="550.56" y="383.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::~merging_reader (54 samples, 1.00%)</title><rect x="593.8" y="453" width="11.8" height="15.0" fill="rgb(226,10,49)" rx="2" ry="2" />
<text  x="596.76" y="463.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (2 samples, 0.04%)</title><rect x="675.7" y="533" width="0.4" height="15.0" fill="rgb(237,38,39)" rx="2" ry="2" />
<text  x="678.65" y="543.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.04%)</title><rect x="260.1" y="213" width="0.4" height="15.0" fill="rgb(236,61,28)" rx="2" ry="2" />
<text  x="263.06" y="223.5" ></text>
</g>
<g >
<title>db::commitlog::segment::allocate (5 samples, 0.09%)</title><rect x="1125.0" y="341" width="1.1" height="15.0" fill="rgb(245,193,1)" rx="2" ry="2" />
<text  x="1127.97" y="351.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::then_impl&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (41 samples, 0.76%)</title><rect x="313.7" y="421" width="9.0" height="15.0" fill="rgb(249,89,20)" rx="2" ry="2" />
<text  x="316.70" y="431.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (1 samples, 0.02%)</title><rect x="456.5" y="421" width="0.2" height="15.0" fill="rgb(216,67,44)" rx="2" ry="2" />
<text  x="459.47" y="431.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (3 samples, 0.06%)</title><rect x="59.5" y="373" width="0.6" height="15.0" fill="rgb(238,173,39)" rx="2" ry="2" />
<text  x="62.49" y="383.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (11 samples, 0.20%)</title><rect x="749.2" y="437" width="2.4" height="15.0" fill="rgb(245,95,12)" rx="2" ry="2" />
<text  x="752.22" y="447.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (1 samples, 0.02%)</title><rect x="86.4" y="581" width="0.2" height="15.0" fill="rgb(254,79,10)" rx="2" ry="2" />
<text  x="89.42" y="591.5" ></text>
</g>
<g >
<title>db::schema_tables::query_partition_mutation (1 samples, 0.02%)</title><rect x="108.1" y="517" width="0.2" height="15.0" fill="rgb(243,169,19)" rx="2" ry="2" />
<text  x="111.10" y="527.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::clear (1 samples, 0.02%)</title><rect x="731.1" y="565" width="0.2" height="15.0" fill="rgb(241,21,24)" rx="2" ry="2" />
<text  x="734.05" y="575.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume_in_thread&lt;sstables::sstable_writer&gt; (1 samples, 0.02%)</title><rect x="79.4" y="613" width="0.2" height="15.0" fill="rgb(211,137,20)" rx="2" ry="2" />
<text  x="82.41" y="623.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.04%)</title><rect x="586.5" y="341" width="0.5" height="15.0" fill="rgb(231,120,29)" rx="2" ry="2" />
<text  x="589.53" y="351.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;abstract_type const&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="71.3" y="405" width="0.2" height="15.0" fill="rgb(211,227,52)" rx="2" ry="2" />
<text  x="74.31" y="415.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (2 samples, 0.04%)</title><rect x="533.8" y="261" width="0.4" height="15.0" fill="rgb(250,103,27)" rx="2" ry="2" />
<text  x="536.76" y="271.5" ></text>
</g>
<g >
<title>seastar::promise&lt;void&gt;::promise (1 samples, 0.02%)</title><rect x="1029.7" y="261" width="0.2" height="15.0" fill="rgb(250,35,39)" rx="2" ry="2" />
<text  x="1032.72" y="271.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (3 samples, 0.06%)</title><rect x="936.2" y="389" width="0.7" height="15.0" fill="rgb(236,160,43)" rx="2" ry="2" />
<text  x="939.22" y="399.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (7 samples, 0.13%)</title><rect x="1160.4" y="549" width="1.6" height="15.0" fill="rgb(243,108,17)" rx="2" ry="2" />
<text  x="1163.44" y="559.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.04%)</title><rect x="1148.4" y="501" width="0.4" height="15.0" fill="rgb(231,50,29)" rx="2" ry="2" />
<text  x="1151.40" y="511.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (2,421 samples, 44.92%)</title><rect x="116.6" y="533" width="530.1" height="15.0" fill="rgb(247,141,6)" rx="2" ry="2" />
<text  x="119.64" y="543.5" >seastar::noncopyable_function&lt;seastar::future&lt;void&gt; </text>
</g>
<g >
<title>reader_permit::impl::mark_unused (50 samples, 0.93%)</title><rect x="126.7" y="501" width="11.0" height="15.0" fill="rgb(205,219,17)" rx="2" ry="2" />
<text  x="129.71" y="511.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::future&lt;void&gt;  (42 samples, 0.78%)</title><rect x="1117.5" y="421" width="9.2" height="15.0" fill="rgb(233,186,3)" rx="2" ry="2" />
<text  x="1120.52" y="431.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (1 samples, 0.02%)</title><rect x="202.5" y="325" width="0.2" height="15.0" fill="rgb(207,137,29)" rx="2" ry="2" />
<text  x="205.47" y="335.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_state&lt;std::tuple&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt; &gt;, seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (3 samples, 0.06%)</title><rect x="792.1" y="309" width="0.7" height="15.0" fill="rgb(238,60,54)" rx="2" ry="2" />
<text  x="795.14" y="319.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;std::tuple&lt;std::optional&lt;clustering_key_prefix&gt; &gt; &gt; &gt;::satisfy_with_result_of&lt;seastar::future&lt;mutation_fragment*&gt;::then_impl_nrvo&lt;query::consume_page&lt; (5 samples, 0.09%)</title><rect x="701.3" y="549" width="1.1" height="15.0" fill="rgb(245,146,38)" rx="2" ry="2" />
<text  x="704.27" y="559.5" ></text>
</g>
<g >
<title>std::default_delete&lt;compact_for_query&lt; (1 samples, 0.02%)</title><rect x="441.1" y="341" width="0.3" height="15.0" fill="rgb(220,222,39)" rx="2" ry="2" />
<text  x="444.14" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::allocate_large (1 samples, 0.02%)</title><rect x="574.1" y="357" width="0.2" height="15.0" fill="rgb(247,140,16)" rx="2" ry="2" />
<text  x="577.05" y="367.5" ></text>
</g>
<g >
<title>cql3::authorized_prepared_statements_cache::insert (62 samples, 1.15%)</title><rect x="748.8" y="469" width="13.6" height="15.0" fill="rgb(226,200,52)" rx="2" ry="2" />
<text  x="751.79" y="479.5" ></text>
</g>
<g >
<title>seastar::futurize_invoke&lt;seastar::future&lt;void&gt;  (4 samples, 0.07%)</title><rect x="701.3" y="485" width="0.8" height="15.0" fill="rgb(225,182,42)" rx="2" ry="2" />
<text  x="704.27" y="495.5" ></text>
</g>
<g >
<title>std::pair&lt;auth::role_or_anonymous, auth::resource&gt;::pair&lt;auth::role_or_anonymous, auth::resource, true&gt; (1 samples, 0.02%)</title><rect x="813.2" y="341" width="0.2" height="15.0" fill="rgb(253,36,28)" rx="2" ry="2" />
<text  x="816.16" y="351.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (3 samples, 0.06%)</title><rect x="835.5" y="437" width="0.7" height="15.0" fill="rgb(230,203,27)" rx="2" ry="2" />
<text  x="838.50" y="447.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_wrapped_nrvo&lt;seastar::future&lt;void&gt;, service::storage_proxy::mutate_internal&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="1128.9" y="373" width="0.2" height="15.0" fill="rgb(210,41,13)" rx="2" ry="2" />
<text  x="1131.91" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.02%)</title><rect x="574.1" y="373" width="0.2" height="15.0" fill="rgb(251,161,8)" rx="2" ry="2" />
<text  x="577.05" y="383.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::local (2 samples, 0.04%)</title><rect x="1114.0" y="469" width="0.5" height="15.0" fill="rgb(225,110,26)" rx="2" ry="2" />
<text  x="1117.02" y="479.5" ></text>
</g>
<g >
<title>seastar::internal::sharded_parallel_for_each (1 samples, 0.02%)</title><rect x="17.7" y="501" width="0.2" height="15.0" fill="rgb(246,95,46)" rx="2" ry="2" />
<text  x="20.66" y="511.5" ></text>
</g>
<g >
<title>antlr3::Lexer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_rec (2 samples, 0.04%)</title><rect x="25.3" y="341" width="0.5" height="15.0" fill="rgb(233,68,27)" rx="2" ry="2" />
<text  x="28.33" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="58.4" y="325" width="0.2" height="15.0" fill="rgb(235,199,33)" rx="2" ry="2" />
<text  x="61.39" y="335.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (1 samples, 0.02%)</title><rect x="11.1" y="405" width="0.2" height="15.0" fill="rgb(210,206,3)" rx="2" ry="2" />
<text  x="14.09" y="415.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_Optional_payload_base (2 samples, 0.04%)</title><rect x="161.7" y="453" width="0.5" height="15.0" fill="rgb(248,86,36)" rx="2" ry="2" />
<text  x="164.74" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (2 samples, 0.04%)</title><rect x="104.4" y="549" width="0.4" height="15.0" fill="rgb(212,124,20)" rx="2" ry="2" />
<text  x="107.37" y="559.5" ></text>
</g>
<g >
<title>cql3::expr::conjunction::~conjunction (1 samples, 0.02%)</title><rect x="59.3" y="373" width="0.2" height="15.0" fill="rgb(250,198,0)" rx="2" ry="2" />
<text  x="62.27" y="383.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="1129.8" y="213" width="0.2" height="15.0" fill="rgb(246,111,37)" rx="2" ry="2" />
<text  x="1132.78" y="223.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperationDifferentiator (42 samples, 0.78%)</title><rect x="47.7" y="405" width="9.2" height="15.0" fill="rgb(214,124,54)" rx="2" ry="2" />
<text  x="50.66" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::~vector (2 samples, 0.04%)</title><rect x="1048.1" y="357" width="0.4" height="15.0" fill="rgb(235,132,20)" rx="2" ry="2" />
<text  x="1051.11" y="367.5" ></text>
</g>
<g >
<title>seastar::internal::sharded_parallel_for_each (1 samples, 0.02%)</title><rect x="106.8" y="501" width="0.2" height="15.0" fill="rgb(239,26,43)" rx="2" ry="2" />
<text  x="109.78" y="511.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (4 samples, 0.07%)</title><rect x="701.3" y="533" width="0.8" height="15.0" fill="rgb(236,5,19)" rx="2" ry="2" />
<text  x="704.27" y="543.5" ></text>
</g>
<g >
<title>sstring_hash::operator (1 samples, 0.02%)</title><rect x="1058.8" y="373" width="0.3" height="15.0" fill="rgb(248,24,44)" rx="2" ry="2" />
<text  x="1061.84" y="383.5" ></text>
</g>
<g >
<title>TLS init function for cql3::query_options::specific_options::DEFAULT (1 samples, 0.02%)</title><rect x="18.1" y="581" width="0.2" height="15.0" fill="rgb(206,61,43)" rx="2" ry="2" />
<text  x="21.10" y="591.5" ></text>
</g>
<g >
<title>compound_type&lt; (23 samples, 0.43%)</title><rect x="932.3" y="437" width="5.0" height="15.0" fill="rgb(239,194,18)" rx="2" ry="2" />
<text  x="935.28" y="447.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_ba202cd8bdcfd8c6f1dbb280f642f5ad31cbca7c] (1 samples, 0.02%)</title><rect x="1160.9" y="533" width="0.2" height="15.0" fill="rgb(227,154,7)" rx="2" ry="2" />
<text  x="1163.88" y="543.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (572 samples, 10.61%)</title><rect x="180.4" y="389" width="125.2" height="15.0" fill="rgb(238,164,6)" rx="2" ry="2" />
<text  x="183.35" y="399.5" >mutation_reader..</text>
</g>
<g >
<title>std::__detail::__variant::_Uninitialized&lt;cql3::expr::constant, false&gt;::_Uninitialized&lt;cql3::expr::constant&gt; (1 samples, 0.02%)</title><rect x="861.3" y="341" width="0.3" height="15.0" fill="rgb(251,205,32)" rx="2" ry="2" />
<text  x="864.33" y="351.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;query::read_command&gt;::dispose (2 samples, 0.04%)</title><rect x="101.3" y="533" width="0.4" height="15.0" fill="rgb(220,180,2)" rx="2" ry="2" />
<text  x="104.31" y="543.5" ></text>
</g>
<g >
<title>posix_memalign (3 samples, 0.06%)</title><rect x="244.7" y="149" width="0.7" height="15.0" fill="rgb(207,104,35)" rx="2" ry="2" />
<text  x="247.73" y="159.5" ></text>
</g>
<g >
<title>reader_permit::impl::on_permit_inactive (1 samples, 0.02%)</title><rect x="1021.8" y="261" width="0.3" height="15.0" fill="rgb(241,199,35)" rx="2" ry="2" />
<text  x="1024.84" y="271.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::on_permit_destroyed (3 samples, 0.06%)</title><rect x="124.5" y="485" width="0.7" height="15.0" fill="rgb(216,147,44)" rx="2" ry="2" />
<text  x="127.52" y="495.5" ></text>
</g>
<g >
<title>_int_malloc (2 samples, 0.04%)</title><rect x="79.6" y="677" width="0.5" height="15.0" fill="rgb(247,157,27)" rx="2" ry="2" />
<text  x="82.63" y="687.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::raw::update_statement, std::default_delete&lt;cql3::statements::raw::update_statement&gt; &gt;::release (1 samples, 0.02%)</title><rect x="66.9" y="421" width="0.2" height="15.0" fill="rgb(207,82,37)" rx="2" ry="2" />
<text  x="69.93" y="431.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (1 samples, 0.02%)</title><rect x="60.4" y="357" width="0.2" height="15.0" fill="rgb(237,183,44)" rx="2" ry="2" />
<text  x="63.36" y="367.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.02%)</title><rect x="42.4" y="261" width="0.2" height="15.0" fill="rgb(215,201,5)" rx="2" ry="2" />
<text  x="45.41" y="271.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::needs_post_query_ordering (7 samples, 0.13%)</title><rect x="958.3" y="469" width="1.6" height="15.0" fill="rgb(231,199,1)" rx="2" ry="2" />
<text  x="961.34" y="479.5" ></text>
</g>
<g >
<title>seastar::internal::do_until_state&lt;executor&lt;test_read (579 samples, 10.74%)</title><rect x="731.3" y="565" width="126.7" height="15.0" fill="rgb(205,3,37)" rx="2" ry="2" />
<text  x="734.27" y="575.5" >seastar::intern..</text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;nonwrapping_interval&lt;dht::ring_position&gt; const*, nonwrapping_interval&lt;dht::ring_position&gt;*&gt; (7 samples, 0.13%)</title><rect x="947.4" y="437" width="1.5" height="15.0" fill="rgb(237,21,19)" rx="2" ry="2" />
<text  x="950.39" y="447.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;, nonwrapping_interval&lt;managed_bytes&gt; &gt;::~_Variant_storage (1 samples, 0.02%)</title><rect x="1114.9" y="485" width="0.2" height="15.0" fill="rgb(227,44,45)" rx="2" ry="2" />
<text  x="1117.90" y="495.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;position_in_partition&gt;::_M_reset (1 samples, 0.02%)</title><rect x="291.2" y="293" width="0.2" height="15.0" fill="rgb(252,123,54)" rx="2" ry="2" />
<text  x="294.15" y="303.5" ></text>
</g>
<g >
<title>absl::container_internal::operator== (1 samples, 0.02%)</title><rect x="829.1" y="389" width="0.3" height="15.0" fill="rgb(250,7,1)" rx="2" ry="2" />
<text  x="832.15" y="399.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.02%)</title><rect x="56.0" y="213" width="0.2" height="15.0" fill="rgb(216,61,44)" rx="2" ry="2" />
<text  x="58.98" y="223.5" ></text>
</g>
<g >
<title>bplus::tree&lt;long, intrusive_array&lt;memtable_entry&gt;, dht::raw_token_less_comparator, 16ul,  (28 samples, 0.52%)</title><rect x="496.8" y="357" width="6.1" height="15.0" fill="rgb(238,175,8)" rx="2" ry="2" />
<text  x="499.76" y="367.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.02%)</title><rect x="17.7" y="565" width="0.2" height="15.0" fill="rgb(253,202,16)" rx="2" ry="2" />
<text  x="20.66" y="575.5" ></text>
</g>
<g >
<title>partition_key::from_range&lt;std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt; const&amp;&gt; (2 samples, 0.04%)</title><rect x="940.8" y="469" width="0.5" height="15.0" fill="rgb(225,219,20)" rx="2" ry="2" />
<text  x="943.82" y="479.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (1 samples, 0.02%)</title><rect x="476.4" y="325" width="0.2" height="15.0" fill="rgb(214,130,16)" rx="2" ry="2" />
<text  x="479.39" y="335.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::guard (1 samples, 0.02%)</title><rect x="516.5" y="389" width="0.2" height="15.0" fill="rgb(254,42,51)" rx="2" ry="2" />
<text  x="519.47" y="399.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (1 samples, 0.02%)</title><rect x="795.4" y="245" width="0.2" height="15.0" fill="rgb(236,170,38)" rx="2" ry="2" />
<text  x="798.43" y="255.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.02%)</title><rect x="48.5" y="229" width="0.3" height="15.0" fill="rgb(228,107,14)" rx="2" ry="2" />
<text  x="51.54" y="239.5" ></text>
</g>
<g >
<title>ser::writer_of_qr_clustered_row&lt;bytes_ostream&gt;::skip_key (5 samples, 0.09%)</title><rect x="370.2" y="245" width="1.1" height="15.0" fill="rgb(206,104,31)" rx="2" ry="2" />
<text  x="373.20" y="255.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="451.4" y="469" width="0.3" height="15.0" fill="rgb(254,223,1)" rx="2" ry="2" />
<text  x="454.43" y="479.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_ctor_base (2 samples, 0.04%)</title><rect x="73.1" y="261" width="0.4" height="15.0" fill="rgb(232,180,7)" rx="2" ry="2" />
<text  x="76.06" y="271.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::forward_to (1 samples, 0.02%)</title><rect x="730.2" y="565" width="0.2" height="15.0" fill="rgb(235,0,12)" rx="2" ry="2" />
<text  x="733.17" y="575.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (1 samples, 0.02%)</title><rect x="714.4" y="549" width="0.2" height="15.0" fill="rgb(237,177,36)" rx="2" ry="2" />
<text  x="717.41" y="559.5" ></text>
</g>
<g >
<title>dht::murmur3_partitioner::get_token (1 samples, 0.02%)</title><rect x="862.0" y="405" width="0.2" height="15.0" fill="rgb(210,11,36)" rx="2" ry="2" />
<text  x="864.99" y="415.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;seastar::shared_ptr&lt;cql3::operation&gt; &gt;::allocate (1 samples, 0.02%)</title><rect x="71.7" y="437" width="0.3" height="15.0" fill="rgb(252,136,42)" rx="2" ry="2" />
<text  x="74.75" y="447.5" ></text>
</g>
<g >
<title>std::apply&lt;service::client_state::has_column_family_access (7 samples, 0.13%)</title><rect x="76.1" y="517" width="1.6" height="15.0" fill="rgb(221,16,10)" rx="2" ry="2" />
<text  x="79.13" y="527.5" ></text>
</g>
<g >
<title>operator new (8 samples, 0.15%)</title><rect x="1151.2" y="453" width="1.8" height="15.0" fill="rgb(222,159,18)" rx="2" ry="2" />
<text  x="1154.24" y="463.5" ></text>
</g>
<g >
<title>cql3::restrictions::partition_key_restrictions::needs_filtering (10 samples, 0.19%)</title><rect x="950.0" y="469" width="2.2" height="15.0" fill="rgb(225,182,29)" rx="2" ry="2" />
<text  x="953.01" y="479.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (2 samples, 0.04%)</title><rect x="43.1" y="309" width="0.4" height="15.0" fill="rgb(213,50,27)" rx="2" ry="2" />
<text  x="46.06" y="319.5" ></text>
</g>
<g >
<title>double_decker&lt;long, cache_entry, dht::raw_token_less_comparator, dht::ring_position_comparator, 16,  (13 samples, 0.24%)</title><rect x="547.8" y="373" width="2.8" height="15.0" fill="rgb(208,129,18)" rx="2" ry="2" />
<text  x="550.78" y="383.5" ></text>
</g>
<g >
<title>auth::data_resource_view::table (2 samples, 0.04%)</title><rect x="805.3" y="181" width="0.4" height="15.0" fill="rgb(254,117,36)" rx="2" ry="2" />
<text  x="808.28" y="191.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="902.1" y="357" width="0.2" height="15.0" fill="rgb(244,44,10)" rx="2" ry="2" />
<text  x="905.06" y="367.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (1 samples, 0.02%)</title><rect x="44.4" y="357" width="0.2" height="15.0" fill="rgb(205,214,42)" rx="2" ry="2" />
<text  x="47.38" y="367.5" ></text>
</g>
<g >
<title>std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt; &gt;, seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (7 samples, 0.13%)</title><rect x="809.4" y="309" width="1.6" height="15.0" fill="rgb(242,46,51)" rx="2" ry="2" />
<text  x="812.44" y="319.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (1 samples, 0.02%)</title><rect x="693.4" y="549" width="0.2" height="15.0" fill="rgb(216,58,3)" rx="2" ry="2" />
<text  x="696.39" y="559.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;reader_concurrency_semaphore::entry&gt;::_M_reset (5 samples, 0.09%)</title><rect x="134.2" y="453" width="1.0" height="15.0" fill="rgb(242,44,20)" rx="2" ry="2" />
<text  x="137.15" y="463.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::execute (1 samples, 0.02%)</title><rect x="984.6" y="373" width="0.2" height="15.0" fill="rgb(239,98,33)" rx="2" ry="2" />
<text  x="987.61" y="383.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.02%)</title><rect x="58.8" y="293" width="0.2" height="15.0" fill="rgb(208,216,26)" rx="2" ry="2" />
<text  x="61.83" y="303.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_S_construct&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (1 samples, 0.02%)</title><rect x="23.4" y="325" width="0.2" height="15.0" fill="rgb(244,190,1)" rx="2" ry="2" />
<text  x="26.36" y="335.5" ></text>
</g>
<g >
<title>compound_wrapper&lt;partition_key, partition_key_view&gt;::make_empty (15 samples, 0.28%)</title><rect x="566.8" y="453" width="3.3" height="15.0" fill="rgb(252,205,7)" rx="2" ry="2" />
<text  x="569.83" y="463.5" ></text>
</g>
<g >
<title>query_result_builder::consume_new_partition (57 samples, 1.06%)</title><rect x="343.9" y="261" width="12.5" height="15.0" fill="rgb(227,176,41)" rx="2" ry="2" />
<text  x="346.92" y="271.5" ></text>
</g>
<g >
<title>log_heap_options::bucket_of (1 samples, 0.02%)</title><rect x="10.9" y="549" width="0.2" height="15.0" fill="rgb(250,178,42)" rx="2" ry="2" />
<text  x="13.88" y="559.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, false, false&gt;::~_Optional_base (1 samples, 0.02%)</title><rect x="44.8" y="389" width="0.2" height="15.0" fill="rgb(222,168,35)" rx="2" ry="2" />
<text  x="47.82" y="399.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql3::restrictions::single_column_restriction&gt;::~shared_ptr_count_for (1 samples, 0.02%)</title><rect x="664.3" y="437" width="0.2" height="15.0" fill="rgb(233,37,34)" rx="2" ry="2" />
<text  x="667.27" y="447.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_token (2 samples, 0.04%)</title><rect x="951.5" y="453" width="0.5" height="15.0" fill="rgb(217,113,14)" rx="2" ry="2" />
<text  x="954.55" y="463.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::allocator (1 samples, 0.02%)</title><rect x="20.9" y="373" width="0.3" height="15.0" fill="rgb(236,95,54)" rx="2" ry="2" />
<text  x="23.95" y="383.5" ></text>
</g>
<g >
<title>std::uniform_int_distribution&lt;unsigned long&gt;::operator (3 samples, 0.06%)</title><rect x="857.4" y="517" width="0.6" height="15.0" fill="rgb(218,51,31)" rx="2" ry="2" />
<text  x="860.39" y="527.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::release (1 samples, 0.02%)</title><rect x="60.4" y="309" width="0.2" height="15.0" fill="rgb(251,33,36)" rx="2" ry="2" />
<text  x="63.36" y="319.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.06%)</title><rect x="940.2" y="469" width="0.6" height="15.0" fill="rgb(227,112,29)" rx="2" ry="2" />
<text  x="943.16" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="81.2" y="485" width="0.2" height="15.0" fill="rgb(218,58,49)" rx="2" ry="2" />
<text  x="84.16" y="495.5" ></text>
</g>
<g >
<title>db::schema_tables::calculate_schema_digest (3 samples, 0.06%)</title><rect x="107.4" y="517" width="0.7" height="15.0" fill="rgb(238,120,23)" rx="2" ry="2" />
<text  x="110.44" y="527.5" ></text>
</g>
<g >
<title>db::schema_tables::add_column_to_schema_mutation (1 samples, 0.02%)</title><rect x="108.3" y="485" width="0.2" height="15.0" fill="rgb(217,34,8)" rx="2" ry="2" />
<text  x="111.32" y="495.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.04%)</title><rect x="321.1" y="357" width="0.5" height="15.0" fill="rgb(225,73,21)" rx="2" ry="2" />
<text  x="324.15" y="367.5" ></text>
</g>
<g >
<title>read_page&lt;(anonymous namespace)::mutation_query_result_builder&gt; (1 samples, 0.02%)</title><rect x="107.7" y="373" width="0.2" height="15.0" fill="rgb(211,146,13)" rx="2" ry="2" />
<text  x="110.66" y="383.5" ></text>
</g>
<g >
<title>std::hash&lt;std::basic_string_view&lt;signed char, std::char_traits&lt;signed char&gt; &gt; &gt;::operator (5 samples, 0.09%)</title><rect x="743.3" y="373" width="1.1" height="15.0" fill="rgb(206,156,36)" rx="2" ry="2" />
<text  x="746.31" y="383.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.02%)</title><rect x="829.6" y="341" width="0.2" height="15.0" fill="rgb(221,119,5)" rx="2" ry="2" />
<text  x="832.58" y="351.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;cql3::restrictions::single_column_restriction, false&gt;::make&lt;column_definition const&amp;&gt; (2 samples, 0.04%)</title><rect x="72.4" y="421" width="0.4" height="15.0" fill="rgb(230,25,31)" rx="2" ry="2" />
<text  x="75.40" y="431.5" ></text>
</g>
<g >
<title>clustering_row::clustering_row (1 samples, 0.02%)</title><rect x="81.4" y="341" width="0.2" height="15.0" fill="rgb(226,205,33)" rx="2" ry="2" />
<text  x="84.38" y="351.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;std::_List_iterator&lt;flat_mutation_reader&gt;, mutation_reader_merger::close (60 samples, 1.11%)</title><rect x="580.4" y="421" width="13.1" height="15.0" fill="rgb(221,194,41)" rx="2" ry="2" />
<text  x="583.40" y="431.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (45 samples, 0.84%)</title><rect x="682.7" y="565" width="9.8" height="15.0" fill="rgb(239,141,53)" rx="2" ry="2" />
<text  x="685.66" y="575.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.07%)</title><rect x="632.3" y="485" width="0.9" height="15.0" fill="rgb(224,166,7)" rx="2" ry="2" />
<text  x="635.30" y="495.5" ></text>
</g>
<g >
<title>bplus::tree&lt;long, intrusive_array&lt;memtable_entry&gt;, dht::raw_token_less_comparator, 16ul,  (2 samples, 0.04%)</title><rect x="491.3" y="389" width="0.4" height="15.0" fill="rgb(252,84,5)" rx="2" ry="2" />
<text  x="494.28" y="399.5" ></text>
</g>
<g >
<title>sstables::mc::writer::maybe_record_large_cells (1 samples, 0.02%)</title><rect x="82.7" y="389" width="0.2" height="15.0" fill="rgb(233,78,24)" rx="2" ry="2" />
<text  x="85.70" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::~disable_abort_on_alloc_failure_temporarily (1 samples, 0.02%)</title><rect x="267.3" y="261" width="0.2" height="15.0" fill="rgb(216,38,37)" rx="2" ry="2" />
<text  x="270.28" y="271.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (5 samples, 0.09%)</title><rect x="772.7" y="389" width="1.0" height="15.0" fill="rgb(213,212,20)" rx="2" ry="2" />
<text  x="775.65" y="399.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::make_data_requests (66 samples, 1.22%)</title><rect x="713.3" y="565" width="14.5" height="15.0" fill="rgb(218,88,11)" rx="2" ry="2" />
<text  x="716.31" y="575.5" ></text>
</g>
<g >
<title>row_marker::compact_and_expire (1 samples, 0.02%)</title><rect x="423.2" y="293" width="0.2" height="15.0" fill="rgb(251,31,31)" rx="2" ry="2" />
<text  x="426.19" y="303.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="56.4" y="261" width="0.2" height="15.0" fill="rgb(205,159,46)" rx="2" ry="2" />
<text  x="59.42" y="271.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;reader_permit::impl, true&gt;::make&lt;reader_concurrency_semaphore&amp;, schema const* const&amp;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;&amp;, reader_resources&amp;, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;&amp;&gt; (7 samples, 0.13%)</title><rect x="1031.9" y="293" width="1.5" height="15.0" fill="rgb(237,111,32)" rx="2" ry="2" />
<text  x="1034.91" y="303.5" ></text>
</g>
<g >
<title>ser::set_size&lt;bytes_ostream, schema_mutations&gt; (1 samples, 0.02%)</title><rect x="108.5" y="485" width="0.3" height="15.0" fill="rgb(210,123,46)" rx="2" ry="2" />
<text  x="111.53" y="495.5" ></text>
</g>
<g >
<title>nonwrapping_interval&lt;dht::ring_position&gt;::nonwrapping_interval (6 samples, 0.11%)</title><rect x="930.5" y="437" width="1.3" height="15.0" fill="rgb(212,43,22)" rx="2" ry="2" />
<text  x="933.53" y="447.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::~partition_snapshot_flat_reader (24 samples, 0.45%)</title><rect x="587.0" y="373" width="5.2" height="15.0" fill="rgb(215,50,48)" rx="2" ry="2" />
<text  x="589.97" y="383.5" ></text>
</g>
<g >
<title>query::digester::digester (1 samples, 0.02%)</title><rect x="619.6" y="469" width="0.2" height="15.0" fill="rgb(209,102,33)" rx="2" ry="2" />
<text  x="622.60" y="479.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (1 samples, 0.02%)</title><rect x="864.6" y="341" width="0.2" height="15.0" fill="rgb(213,75,47)" rx="2" ry="2" />
<text  x="867.62" y="351.5" ></text>
</g>
<g >
<title>auth::data_resource_view::keyspace (1 samples, 0.02%)</title><rect x="820.6" y="373" width="0.2" height="15.0" fill="rgb(254,110,33)" rx="2" ry="2" />
<text  x="823.61" y="383.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_ctor_base (1 samples, 0.02%)</title><rect x="73.3" y="213" width="0.2" height="15.0" fill="rgb(231,112,31)" rx="2" ry="2" />
<text  x="76.28" y="223.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (6 samples, 0.11%)</title><rect x="135.7" y="437" width="1.3" height="15.0" fill="rgb(214,203,34)" rx="2" ry="2" />
<text  x="138.69" y="447.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (1 samples, 0.02%)</title><rect x="1060.4" y="405" width="0.2" height="15.0" fill="rgb(215,141,40)" rx="2" ry="2" />
<text  x="1063.37" y="415.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::raw::update_statement, std::default_delete&lt;cql3::statements::raw::update_statement&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="63.2" y="373" width="0.2" height="15.0" fill="rgb(209,160,20)" rx="2" ry="2" />
<text  x="66.21" y="383.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::make_ready&lt; (1 samples, 0.02%)</title><rect x="709.8" y="517" width="0.2" height="15.0" fill="rgb(244,209,19)" rx="2" ry="2" />
<text  x="712.81" y="527.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::move_it (2 samples, 0.04%)</title><rect x="654.4" y="533" width="0.5" height="15.0" fill="rgb(247,96,9)" rx="2" ry="2" />
<text  x="657.41" y="543.5" ></text>
</g>
<g >
<title>tracing::global_trace_state_ptr::get (2 samples, 0.04%)</title><rect x="1047.0" y="341" width="0.5" height="15.0" fill="rgb(243,141,50)" rx="2" ry="2" />
<text  x="1050.02" y="351.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;service::storage_proxy_coordinator_query_result&gt;::set_urgent_state (9 samples, 0.17%)</title><rect x="698.4" y="549" width="2.0" height="15.0" fill="rgb(238,80,48)" rx="2" ry="2" />
<text  x="701.42" y="559.5" ></text>
</g>
<g >
<title>seastar::schedule (1 samples, 0.02%)</title><rect x="1137.2" y="565" width="0.2" height="15.0" fill="rgb(215,83,23)" rx="2" ry="2" />
<text  x="1140.23" y="575.5" ></text>
</g>
<g >
<title>ser::writer_of_query_result&lt;bytes_ostream&gt;::writer_of_query_result (6 samples, 0.11%)</title><rect x="620.9" y="469" width="1.3" height="15.0" fill="rgb(220,90,26)" rx="2" ry="2" />
<text  x="623.91" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="447.9" y="437" width="0.2" height="15.0" fill="rgb(208,154,1)" rx="2" ry="2" />
<text  x="450.93" y="447.5" ></text>
</g>
<g >
<title>dht::tri_compare (11 samples, 0.20%)</title><rect x="504.2" y="325" width="2.4" height="15.0" fill="rgb(206,27,51)" rx="2" ry="2" />
<text  x="507.20" y="335.5" ></text>
</g>
<g >
<title>std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;, true&gt; (1 samples, 0.02%)</title><rect x="49.9" y="293" width="0.2" height="15.0" fill="rgb(212,166,22)" rx="2" ry="2" />
<text  x="52.85" y="303.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="50.1" y="197" width="0.2" height="15.0" fill="rgb(220,124,1)" rx="2" ry="2" />
<text  x="53.07" y="207.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::schedule&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::make_data_requests (4 samples, 0.07%)</title><rect x="996.2" y="341" width="0.9" height="15.0" fill="rgb(216,113,35)" rx="2" ry="2" />
<text  x="999.22" y="351.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;reader_concurrency_semaphore::entry&gt; &gt;::destroy&lt;reader_concurrency_semaphore::entry&gt; (2 samples, 0.04%)</title><rect x="650.9" y="533" width="0.4" height="15.0" fill="rgb(232,2,21)" rx="2" ry="2" />
<text  x="653.91" y="543.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (1 samples, 0.02%)</title><rect x="899.4" y="325" width="0.3" height="15.0" fill="rgb(249,216,26)" rx="2" ry="2" />
<text  x="902.43" y="335.5" ></text>
</g>
<g >
<title>antlr3::IntStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::_LA (10 samples, 0.19%)</title><rect x="33.0" y="309" width="2.2" height="15.0" fill="rgb(251,116,10)" rx="2" ry="2" />
<text  x="35.99" y="319.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="58.6" y="325" width="0.2" height="15.0" fill="rgb(217,3,33)" rx="2" ry="2" />
<text  x="61.61" y="335.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::do_wait_admission (1 samples, 0.02%)</title><rect x="1019.2" y="309" width="0.2" height="15.0" fill="rgb(236,204,25)" rx="2" ry="2" />
<text  x="1022.21" y="319.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::~_Deque_base (2 samples, 0.04%)</title><rect x="640.0" y="453" width="0.4" height="15.0" fill="rgb(226,210,0)" rx="2" ry="2" />
<text  x="642.96" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.06%)</title><rect x="447.1" y="421" width="0.6" height="15.0" fill="rgb(212,67,25)" rx="2" ry="2" />
<text  x="450.05" y="431.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;position_in_partition&gt;::_M_reset (1 samples, 0.02%)</title><rect x="592.4" y="373" width="0.3" height="15.0" fill="rgb(205,68,3)" rx="2" ry="2" />
<text  x="595.45" y="383.5" ></text>
</g>
<g >
<title>evictable_reader::fill_buffer (1 samples, 0.02%)</title><rect x="107.7" y="293" width="0.2" height="15.0" fill="rgb(208,148,33)" rx="2" ry="2" />
<text  x="110.66" y="303.5" ></text>
</g>
<g >
<title>std::hash&lt;auth::resource&gt;::hash_data (13 samples, 0.24%)</title><rect x="804.0" y="197" width="2.8" height="15.0" fill="rgb(209,131,51)" rx="2" ry="2" />
<text  x="806.97" y="207.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (1 samples, 0.02%)</title><rect x="858.9" y="517" width="0.2" height="15.0" fill="rgb(210,140,28)" rx="2" ry="2" />
<text  x="861.93" y="527.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (3 samples, 0.06%)</title><rect x="662.5" y="533" width="0.7" height="15.0" fill="rgb(219,17,51)" rx="2" ry="2" />
<text  x="665.51" y="543.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;gms::inet_address, std::pair&lt;gms::inet_address const, utils::UUID&gt;, std::allocator&lt;std::pair&lt;gms::inet_address const, utils::UUID&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;gms::inet_address&gt;, std::hash&lt;gms::inet_address&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (2 samples, 0.04%)</title><rect x="1146.6" y="485" width="0.5" height="15.0" fill="rgb(248,98,6)" rx="2" ry="2" />
<text  x="1149.65" y="495.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::digest_read_resolver (6 samples, 0.11%)</title><rect x="991.2" y="373" width="1.3" height="15.0" fill="rgb(220,162,52)" rx="2" ry="2" />
<text  x="994.18" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::~vector (6 samples, 0.11%)</title><rect x="1045.7" y="341" width="1.3" height="15.0" fill="rgb(225,199,6)" rx="2" ry="2" />
<text  x="1048.70" y="351.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::reserve (1 samples, 0.02%)</title><rect x="1128.7" y="309" width="0.2" height="15.0" fill="rgb(221,188,26)" rx="2" ry="2" />
<text  x="1131.69" y="319.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (8 samples, 0.15%)</title><rect x="516.9" y="389" width="1.8" height="15.0" fill="rgb(217,131,13)" rx="2" ry="2" />
<text  x="519.90" y="399.5" ></text>
</g>
<g >
<title>bplus::tree&lt;long, intrusive_array&lt;memtable_entry&gt;, dht::raw_token_less_comparator, 16ul,  (2 samples, 0.04%)</title><rect x="16.3" y="629" width="0.5" height="15.0" fill="rgb(254,21,51)" rx="2" ry="2" />
<text  x="19.35" y="639.5" ></text>
</g>
<g >
<title>query::result::result (1 samples, 0.02%)</title><rect x="617.8" y="501" width="0.3" height="15.0" fill="rgb(208,165,44)" rx="2" ry="2" />
<text  x="620.85" y="511.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.02%)</title><rect x="11.8" y="549" width="0.2" height="15.0" fill="rgb(223,14,29)" rx="2" ry="2" />
<text  x="14.75" y="559.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::clear (1 samples, 0.02%)</title><rect x="478.1" y="341" width="0.3" height="15.0" fill="rgb(247,157,6)" rx="2" ry="2" />
<text  x="481.15" y="351.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (1 samples, 0.02%)</title><rect x="599.5" y="405" width="0.2" height="15.0" fill="rgb(205,90,27)" rx="2" ry="2" />
<text  x="602.45" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.07%)</title><rect x="766.5" y="453" width="0.9" height="15.0" fill="rgb(240,114,10)" rx="2" ry="2" />
<text  x="769.52" y="463.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (1 samples, 0.02%)</title><rect x="859.6" y="421" width="0.2" height="15.0" fill="rgb(224,222,46)" rx="2" ry="2" />
<text  x="862.58" y="431.5" ></text>
</g>
<g >
<title>ser::deserialize&lt;seastar::simple_memory_input_stream&gt; (1 samples, 0.02%)</title><rect x="1123.2" y="277" width="0.2" height="15.0" fill="rgb(238,205,40)" rx="2" ry="2" />
<text  x="1126.22" y="287.5" ></text>
</g>
<g >
<title>sstables::metadata_collector::update_min_max_components (1 samples, 0.02%)</title><rect x="83.4" y="469" width="0.2" height="15.0" fill="rgb(236,170,16)" rx="2" ry="2" />
<text  x="86.35" y="479.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (1 samples, 0.02%)</title><rect x="11.1" y="373" width="0.2" height="15.0" fill="rgb(220,136,48)" rx="2" ry="2" />
<text  x="14.09" y="383.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (1 samples, 0.02%)</title><rect x="106.8" y="293" width="0.2" height="15.0" fill="rgb(231,84,6)" rx="2" ry="2" />
<text  x="109.78" y="303.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (2 samples, 0.04%)</title><rect x="50.3" y="261" width="0.4" height="15.0" fill="rgb(224,198,35)" rx="2" ry="2" />
<text  x="53.29" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.04%)</title><rect x="530.5" y="245" width="0.4" height="15.0" fill="rgb(213,110,23)" rx="2" ry="2" />
<text  x="533.48" y="255.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.02%)</title><rect x="58.2" y="341" width="0.2" height="15.0" fill="rgb(240,204,20)" rx="2" ry="2" />
<text  x="61.17" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (4 samples, 0.07%)</title><rect x="1153.9" y="469" width="0.8" height="15.0" fill="rgb(248,210,6)" rx="2" ry="2" />
<text  x="1156.87" y="479.5" ></text>
</g>
<g >
<title>fmt::v7::basic_printf_context&lt;fmt::v7::detail::buffer_appender&lt;char&gt;, char&gt;::get_arg (1 samples, 0.02%)</title><rect x="19.0" y="549" width="0.2" height="15.0" fill="rgb(240,52,49)" rx="2" ry="2" />
<text  x="21.98" y="559.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="646.7" y="533" width="0.3" height="15.0" fill="rgb(212,24,20)" rx="2" ry="2" />
<text  x="649.75" y="543.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (2 samples, 0.04%)</title><rect x="212.5" y="245" width="0.5" height="15.0" fill="rgb(205,64,4)" rx="2" ry="2" />
<text  x="215.54" y="255.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;compact_for_query&lt; (1 samples, 0.02%)</title><rect x="443.3" y="405" width="0.2" height="15.0" fill="rgb(240,173,25)" rx="2" ry="2" />
<text  x="446.33" y="415.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;query::result_memory_accounter&gt;::move_it (4 samples, 0.07%)</title><rect x="629.7" y="501" width="0.8" height="15.0" fill="rgb(211,167,37)" rx="2" ry="2" />
<text  x="632.67" y="511.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::_Move_ctor_base (1 samples, 0.02%)</title><rect x="355.7" y="213" width="0.3" height="15.0" fill="rgb(222,196,18)" rx="2" ry="2" />
<text  x="358.75" y="223.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::reserve (1 samples, 0.02%)</title><rect x="162.2" y="485" width="0.2" height="15.0" fill="rgb(248,81,49)" rx="2" ry="2" />
<text  x="165.18" y="495.5" ></text>
</g>
<g >
<title>ser::writer_of_std__optional__qr_cell&lt;bytes_ostream&gt;::write (9 samples, 0.17%)</title><rect x="398.4" y="229" width="2.0" height="15.0" fill="rgb(247,211,3)" rx="2" ry="2" />
<text  x="401.44" y="239.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.02%)</title><rect x="17.9" y="549" width="0.2" height="15.0" fill="rgb(241,115,28)" rx="2" ry="2" />
<text  x="20.88" y="559.5" ></text>
</g>
<g >
<title>sstables::sstable::write_simple&lt; (1 samples, 0.02%)</title><rect x="80.7" y="517" width="0.2" height="15.0" fill="rgb(219,9,53)" rx="2" ry="2" />
<text  x="83.73" y="527.5" ></text>
</g>
<g >
<title>std::_Optional_payload&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, false, false, false&gt;::_Optional_payload (1 samples, 0.02%)</title><rect x="43.5" y="373" width="0.2" height="15.0" fill="rgb(229,114,45)" rx="2" ry="2" />
<text  x="46.50" y="383.5" ></text>
</g>
<g >
<title>cql3::prepare_context::set_bound_variables (1 samples, 0.02%)</title><rect x="21.6" y="453" width="0.2" height="15.0" fill="rgb(212,75,6)" rx="2" ry="2" />
<text  x="24.61" y="463.5" ></text>
</g>
<g >
<title>seastar::hrtimer_aio_completion::complete_with (4 samples, 0.07%)</title><rect x="1169.4" y="533" width="0.9" height="15.0" fill="rgb(207,119,10)" rx="2" ry="2" />
<text  x="1172.42" y="543.5" ></text>
</g>
<g >
<title>table::add_coordinator_read_latency (1 samples, 0.02%)</title><rect x="1162.0" y="549" width="0.2" height="15.0" fill="rgb(224,199,37)" rx="2" ry="2" />
<text  x="1164.97" y="559.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::splice (2 samples, 0.04%)</title><rect x="194.4" y="309" width="0.4" height="15.0" fill="rgb(206,85,30)" rx="2" ry="2" />
<text  x="197.37" y="319.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (1 samples, 0.02%)</title><rect x="52.3" y="293" width="0.2" height="15.0" fill="rgb(234,222,49)" rx="2" ry="2" />
<text  x="55.26" y="303.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::operator (1 samples, 0.02%)</title><rect x="765.4" y="453" width="0.2" height="15.0" fill="rgb(206,62,39)" rx="2" ry="2" />
<text  x="768.43" y="463.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;11ul, cql3::expr::untyped_constant&gt; (3 samples, 0.06%)</title><rect x="53.1" y="229" width="0.7" height="15.0" fill="rgb(240,65,18)" rx="2" ry="2" />
<text  x="56.14" y="239.5" ></text>
</g>
<g >
<title>service::abstract_write_response_handler::abstract_write_response_handler (1 samples, 0.02%)</title><rect x="1133.5" y="213" width="0.2" height="15.0" fill="rgb(210,139,6)" rx="2" ry="2" />
<text  x="1136.51" y="223.5" ></text>
</g>
<g >
<title>schema_mutations::operator== (1 samples, 0.02%)</title><rect x="107.0" y="501" width="0.2" height="15.0" fill="rgb(210,205,33)" rx="2" ry="2" />
<text  x="110.00" y="511.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.02%)</title><rect x="45.9" y="293" width="0.2" height="15.0" fill="rgb(208,93,39)" rx="2" ry="2" />
<text  x="48.91" y="303.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (4 samples, 0.07%)</title><rect x="1000.4" y="357" width="0.9" height="15.0" fill="rgb(227,219,27)" rx="2" ry="2" />
<text  x="1003.38" y="367.5" ></text>
</g>
<g >
<title>cql3::prepared_statements_cache::find (27 samples, 0.50%)</title><rect x="739.8" y="501" width="5.9" height="15.0" fill="rgb(245,228,11)" rx="2" ry="2" />
<text  x="742.81" y="511.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.06%)</title><rect x="903.6" y="341" width="0.7" height="15.0" fill="rgb(220,218,36)" rx="2" ry="2" />
<text  x="906.59" y="351.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cfName (1 samples, 0.02%)</title><rect x="45.0" y="405" width="0.3" height="15.0" fill="rgb(226,84,25)" rx="2" ry="2" />
<text  x="48.03" y="415.5" ></text>
</g>
<g >
<title>seastar::reactor::lowres_timer_pollfn::poll (1 samples, 0.02%)</title><rect x="88.6" y="581" width="0.2" height="15.0" fill="rgb(210,128,34)" rx="2" ry="2" />
<text  x="91.61" y="591.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_allocate_node (1 samples, 0.02%)</title><rect x="24.0" y="309" width="0.2" height="15.0" fill="rgb(220,203,47)" rx="2" ry="2" />
<text  x="27.01" y="319.5" ></text>
</g>
<g >
<title>_ZSt5visitIR18overloaded_functorIJZN4cql34expr9find_atomIZNS2_4findERKNS2_10expressionENS2_6oper_tEEUlRKNS2_15binary_operatorEE_EEPS9_S6_T_EUlSA_E_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_8constantEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_11conjunctionEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_12column_valueEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_5tokenEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_21unresolved_identifierEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_25column_mutation_attributeEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_13function_callEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_4castEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_15field_selectionEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_4nullEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_13bind_variableEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_16untyped_constantEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_17tuple_constructorEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_22collection_constructorEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_20usertype_constructorEE_EEJRSt7variantIJSJ_S8_SN_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_SF_S1R_S1V_S1Z_EEEENSt13invoke_resultISD_JDpDTclsr3stdE3getILm0EEclsr3stdE7declvalIT0_EEEEEE4typeEOSD_DpOS29_ (1 samples, 0.02%)</title><rect x="959.0" y="421" width="0.2" height="15.0" fill="rgb(221,128,10)" rx="2" ry="2" />
<text  x="961.99" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value_view, std::allocator&lt;cql3::raw_value_view&gt; &gt;::emplace_back&lt;cql3::raw_value_view&gt; (2 samples, 0.04%)</title><rect x="853.7" y="469" width="0.4" height="15.0" fill="rgb(241,62,42)" rx="2" ry="2" />
<text  x="856.67" y="479.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (2 samples, 0.04%)</title><rect x="1161.1" y="533" width="0.4" height="15.0" fill="rgb(212,60,21)" rx="2" ry="2" />
<text  x="1164.10" y="543.5" ></text>
</g>
<g >
<title>absl::hash_internal::HashState::combine_contiguous (1 samples, 0.02%)</title><rect x="1058.0" y="325" width="0.2" height="15.0" fill="rgb(237,26,10)" rx="2" ry="2" />
<text  x="1060.96" y="335.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (48 samples, 0.89%)</title><rect x="126.7" y="485" width="10.5" height="15.0" fill="rgb(223,90,34)" rx="2" ry="2" />
<text  x="129.71" y="495.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (1 samples, 0.02%)</title><rect x="131.7" y="453" width="0.3" height="15.0" fill="rgb(217,141,54)" rx="2" ry="2" />
<text  x="134.74" y="463.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::followPush (1 samples, 0.02%)</title><rect x="41.5" y="421" width="0.2" height="15.0" fill="rgb(238,186,38)" rx="2" ry="2" />
<text  x="44.53" y="431.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (6 samples, 0.11%)</title><rect x="158.5" y="485" width="1.3" height="15.0" fill="rgb(216,184,13)" rx="2" ry="2" />
<text  x="161.46" y="495.5" ></text>
</g>
<g >
<title>cql3::raw_value_view::with_value&lt;cql3::raw_value_view::validate (1 samples, 0.02%)</title><rect x="898.6" y="341" width="0.2" height="15.0" fill="rgb(251,119,38)" rx="2" ry="2" />
<text  x="901.56" y="351.5" ></text>
</g>
<g >
<title>sstring_hash::operator (2 samples, 0.04%)</title><rect x="848.0" y="421" width="0.4" height="15.0" fill="rgb(211,202,34)" rx="2" ry="2" />
<text  x="850.98" y="431.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_impl&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (512 samples, 9.50%)</title><rect x="331.0" y="389" width="112.1" height="15.0" fill="rgb(223,99,29)" rx="2" ry="2" />
<text  x="334.00" y="399.5" >seastar::inte..</text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (3 samples, 0.06%)</title><rect x="837.5" y="485" width="0.6" height="15.0" fill="rgb(244,39,47)" rx="2" ry="2" />
<text  x="840.47" y="495.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (2 samples, 0.04%)</title><rect x="44.2" y="405" width="0.4" height="15.0" fill="rgb(242,165,13)" rx="2" ry="2" />
<text  x="47.16" y="415.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (2 samples, 0.04%)</title><rect x="847.3" y="405" width="0.5" height="15.0" fill="rgb(219,161,46)" rx="2" ry="2" />
<text  x="850.32" y="415.5" ></text>
</g>
<g >
<title>utils::tuple_hash::operator (9 samples, 0.17%)</title><rect x="742.4" y="405" width="2.0" height="15.0" fill="rgb(234,226,5)" rx="2" ry="2" />
<text  x="745.44" y="415.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;compact_mutation_state&lt; (43 samples, 0.80%)</title><rect x="566.0" y="485" width="9.4" height="15.0" fill="rgb(212,166,31)" rx="2" ry="2" />
<text  x="568.95" y="495.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_p (1 samples, 0.02%)</title><rect x="47.9" y="325" width="0.2" height="15.0" fill="rgb(205,162,29)" rx="2" ry="2" />
<text  x="50.88" y="335.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.02%)</title><rect x="55.1" y="213" width="0.2" height="15.0" fill="rgb(224,51,47)" rx="2" ry="2" />
<text  x="58.11" y="223.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (2 samples, 0.04%)</title><rect x="54.0" y="325" width="0.4" height="15.0" fill="rgb(254,104,25)" rx="2" ry="2" />
<text  x="57.01" y="335.5" ></text>
</g>
<g >
<title>__dynamic_cast (1 samples, 0.02%)</title><rect x="667.3" y="533" width="0.3" height="15.0" fill="rgb(223,17,30)" rx="2" ry="2" />
<text  x="670.33" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, std::_Select1st&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; &gt;, std::less&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; &gt; &gt;::_M_emplace_unique&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const&amp;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const&amp;&gt; (1 samples, 0.02%)</title><rect x="106.8" y="357" width="0.2" height="15.0" fill="rgb(208,206,4)" rx="2" ry="2" />
<text  x="109.78" y="367.5" ></text>
</g>
<g >
<title>do_query&lt;(anonymous namespace)::mutation_query_result_builder&gt; (1 samples, 0.02%)</title><rect x="107.7" y="389" width="0.2" height="15.0" fill="rgb(243,100,45)" rx="2" ry="2" />
<text  x="110.66" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::_S_do_relocate (1 samples, 0.02%)</title><rect x="50.1" y="309" width="0.2" height="15.0" fill="rgb(225,172,5)" rx="2" ry="2" />
<text  x="53.07" y="319.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::~holder (3 samples, 0.06%)</title><rect x="585.2" y="373" width="0.7" height="15.0" fill="rgb(239,39,39)" rx="2" ry="2" />
<text  x="588.22" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (8 samples, 0.15%)</title><rect x="1109.0" y="453" width="1.7" height="15.0" fill="rgb(222,113,47)" rx="2" ry="2" />
<text  x="1111.98" y="463.5" ></text>
</g>
<g >
<title>utils::basic_ihistogram&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt; &gt;::mark&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; (4 samples, 0.07%)</title><rect x="694.7" y="517" width="0.9" height="15.0" fill="rgb(228,136,34)" rx="2" ry="2" />
<text  x="697.70" y="527.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (42 samples, 0.78%)</title><rect x="1117.5" y="453" width="9.2" height="15.0" fill="rgb(251,40,33)" rx="2" ry="2" />
<text  x="1120.52" y="463.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="672.8" y="517" width="0.2" height="15.0" fill="rgb(221,95,49)" rx="2" ry="2" />
<text  x="675.81" y="527.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::trivial_direct_move&lt;16ul&gt; (2 samples, 0.04%)</title><rect x="1025.1" y="197" width="0.5" height="15.0" fill="rgb(240,136,36)" rx="2" ry="2" />
<text  x="1028.12" y="207.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (2 samples, 0.04%)</title><rect x="624.4" y="469" width="0.5" height="15.0" fill="rgb(210,43,54)" rx="2" ry="2" />
<text  x="627.41" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::do_resize (1 samples, 0.02%)</title><rect x="1170.3" y="565" width="0.2" height="15.0" fill="rgb(205,37,11)" rx="2" ry="2" />
<text  x="1173.29" y="575.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="331.4" y="341" width="0.3" height="15.0" fill="rgb(250,13,32)" rx="2" ry="2" />
<text  x="334.44" y="351.5" ></text>
</g>
<g >
<title>utils::basic_ihistogram&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt; &gt;::mark (1 samples, 0.02%)</title><rect x="624.0" y="485" width="0.2" height="15.0" fill="rgb(239,168,29)" rx="2" ry="2" />
<text  x="626.98" y="495.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (1 samples, 0.02%)</title><rect x="106.6" y="485" width="0.2" height="15.0" fill="rgb(246,148,43)" rx="2" ry="2" />
<text  x="109.56" y="495.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (40 samples, 0.74%)</title><rect x="566.2" y="469" width="8.7" height="15.0" fill="rgb(238,164,51)" rx="2" ry="2" />
<text  x="569.17" y="479.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::operator (1 samples, 0.02%)</title><rect x="189.1" y="341" width="0.2" height="15.0" fill="rgb(226,199,54)" rx="2" ry="2" />
<text  x="192.11" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.02%)</title><rect x="996.7" y="293" width="0.2" height="15.0" fill="rgb(205,81,52)" rx="2" ry="2" />
<text  x="999.65" y="303.5" ></text>
</g>
<g >
<title>frozen_mutation::frozen_mutation (16 samples, 0.30%)</title><rect x="1129.3" y="245" width="3.6" height="15.0" fill="rgb(252,157,41)" rx="2" ry="2" />
<text  x="1132.35" y="255.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;query::result&gt;::operator= (2 samples, 0.04%)</title><rect x="116.0" y="533" width="0.4" height="15.0" fill="rgb(235,61,44)" rx="2" ry="2" />
<text  x="118.98" y="543.5" ></text>
</g>
<g >
<title>utils::fb_utilities::get_broadcast_address (1 samples, 0.02%)</title><rect x="1086.6" y="389" width="0.3" height="15.0" fill="rgb(210,187,45)" rx="2" ry="2" />
<text  x="1089.65" y="399.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (2 samples, 0.04%)</title><rect x="1121.5" y="229" width="0.4" height="15.0" fill="rgb(208,109,20)" rx="2" ry="2" />
<text  x="1124.46" y="239.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (1 samples, 0.02%)</title><rect x="717.7" y="517" width="0.2" height="15.0" fill="rgb(232,180,10)" rx="2" ry="2" />
<text  x="720.69" y="527.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.02%)</title><rect x="51.6" y="197" width="0.2" height="15.0" fill="rgb(205,137,18)" rx="2" ry="2" />
<text  x="54.60" y="207.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.02%)</title><rect x="59.9" y="341" width="0.2" height="15.0" fill="rgb(243,164,18)" rx="2" ry="2" />
<text  x="62.92" y="351.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (2 samples, 0.04%)</title><rect x="611.3" y="453" width="0.4" height="15.0" fill="rgb(232,228,1)" rx="2" ry="2" />
<text  x="614.28" y="463.5" ></text>
</g>
<g >
<title>compound_type&lt; (13 samples, 0.24%)</title><rect x="915.6" y="437" width="2.9" height="15.0" fill="rgb(249,224,33)" rx="2" ry="2" />
<text  x="918.64" y="447.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::raw::select_statement, std::default_delete&lt;cql3::statements::raw::select_statement&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::statements::raw::select_statement&gt;, void&gt; (1 samples, 0.02%)</title><rect x="68.2" y="453" width="0.3" height="15.0" fill="rgb(212,16,0)" rx="2" ry="2" />
<text  x="71.24" y="463.5" ></text>
</g>
<g >
<title>service::client_state::ensure_has_permission (156 samples, 2.89%)</title><rect x="783.6" y="421" width="34.2" height="15.0" fill="rgb(225,57,49)" rx="2" ry="2" />
<text  x="786.60" y="431.5" >se..</text>
</g>
<g >
<title>std::__detail::_List_node_base::_M_hook (1 samples, 0.02%)</title><rect x="473.5" y="325" width="0.3" height="15.0" fill="rgb(248,46,10)" rx="2" ry="2" />
<text  x="476.55" y="335.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, cql3::statements::raw::update_statement*, std::default_delete&lt;cql3::statements::raw::update_statement&gt; &gt; (1 samples, 0.02%)</title><rect x="66.9" y="373" width="0.2" height="15.0" fill="rgb(228,6,0)" rx="2" ry="2" />
<text  x="69.93" y="383.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (1 samples, 0.02%)</title><rect x="516.2" y="389" width="0.3" height="15.0" fill="rgb(251,29,40)" rx="2" ry="2" />
<text  x="519.25" y="399.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="1139.0" y="565" width="0.2" height="15.0" fill="rgb(230,227,13)" rx="2" ry="2" />
<text  x="1141.98" y="575.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (3 samples, 0.06%)</title><rect x="906.9" y="421" width="0.6" height="15.0" fill="rgb(210,50,20)" rx="2" ry="2" />
<text  x="909.88" y="431.5" ></text>
</g>
<g >
<title>memtable::memtable_encoding_stats_collector::update (3 samples, 0.06%)</title><rect x="1119.5" y="309" width="0.7" height="15.0" fill="rgb(229,12,45)" rx="2" ry="2" />
<text  x="1122.49" y="319.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::make_partition_slice (2 samples, 0.04%)</title><rect x="1117.1" y="501" width="0.4" height="15.0" fill="rgb(207,81,30)" rx="2" ry="2" />
<text  x="1120.08" y="511.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.02%)</title><rect x="58.8" y="325" width="0.2" height="15.0" fill="rgb(238,45,52)" rx="2" ry="2" />
<text  x="61.83" y="335.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (5 samples, 0.09%)</title><rect x="1053.1" y="357" width="1.1" height="15.0" fill="rgb(219,184,44)" rx="2" ry="2" />
<text  x="1056.15" y="367.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql3::restrictions::single_column_restrictions&gt;::~shared_ptr_count_for (1 samples, 0.02%)</title><rect x="664.7" y="517" width="0.2" height="15.0" fill="rgb(209,187,18)" rx="2" ry="2" />
<text  x="667.70" y="527.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::followPop (1 samples, 0.02%)</title><rect x="41.3" y="421" width="0.2" height="15.0" fill="rgb(211,218,15)" rx="2" ry="2" />
<text  x="44.31" y="431.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="484.7" y="341" width="0.2" height="15.0" fill="rgb(248,48,44)" rx="2" ry="2" />
<text  x="487.72" y="351.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::find (2 samples, 0.04%)</title><rect x="959.2" y="421" width="0.4" height="15.0" fill="rgb(245,141,46)" rx="2" ry="2" />
<text  x="962.21" y="431.5" ></text>
</g>
<g >
<title>cql3::attributes::is_timeout_set (1 samples, 0.02%)</title><rect x="958.1" y="469" width="0.2" height="15.0" fill="rgb(233,91,19)" rx="2" ry="2" />
<text  x="961.12" y="479.5" ></text>
</g>
<g >
<title>utils::config_file::named_value&lt;unsigned long&gt;::the_value (3 samples, 0.06%)</title><rect x="1113.4" y="453" width="0.6" height="15.0" fill="rgb(227,27,1)" rx="2" ry="2" />
<text  x="1116.36" y="463.5" ></text>
</g>
<g >
<title>partition_entry::make_evictable (1 samples, 0.02%)</title><rect x="84.0" y="597" width="0.2" height="15.0" fill="rgb(210,149,43)" rx="2" ry="2" />
<text  x="87.01" y="607.5" ></text>
</g>
<g >
<title>seastar::internal::do_until_state&lt;mutation_cleaner_impl::start_worker (1 samples, 0.02%)</title><rect x="88.4" y="581" width="0.2" height="15.0" fill="rgb(240,156,45)" rx="2" ry="2" />
<text  x="91.39" y="591.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (4 samples, 0.07%)</title><rect x="701.3" y="517" width="0.8" height="15.0" fill="rgb(231,44,39)" rx="2" ry="2" />
<text  x="704.27" y="527.5" ></text>
</g>
<g >
<title>seastar::chunked_fifo&lt;seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::entry, 128ul&gt;::emplace_back&lt;reader_concurrency_semaphore::entry, seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;&amp;, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;&amp;&gt; (23 samples, 0.43%)</title><rect x="1022.5" y="245" width="5.0" height="15.0" fill="rgb(254,77,2)" rx="2" ry="2" />
<text  x="1025.49" y="255.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (1 samples, 0.02%)</title><rect x="635.6" y="453" width="0.2" height="15.0" fill="rgb(251,85,0)" rx="2" ry="2" />
<text  x="638.58" y="463.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement::execute (80 samples, 1.48%)</title><rect x="665.1" y="565" width="17.6" height="15.0" fill="rgb(222,94,10)" rx="2" ry="2" />
<text  x="668.14" y="575.5" ></text>
</g>
<g >
<title>cql3::single_column_relation::new_EQ_restriction (4 samples, 0.07%)</title><rect x="72.2" y="437" width="0.9" height="15.0" fill="rgb(252,114,1)" rx="2" ry="2" />
<text  x="75.19" y="447.5" ></text>
</g>
<g >
<title>__start_context (13 samples, 0.24%)</title><rect x="80.9" y="661" width="2.9" height="15.0" fill="rgb(249,102,39)" rx="2" ry="2" />
<text  x="83.94" y="671.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (2 samples, 0.04%)</title><rect x="356.0" y="213" width="0.4" height="15.0" fill="rgb(241,189,38)" rx="2" ry="2" />
<text  x="358.96" y="223.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned char, std::pair&lt;unsigned char const, std::optional&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned char const, std::optional&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned char&gt;, std::hash&lt;unsigned char&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::clear (1 samples, 0.02%)</title><rect x="690.8" y="517" width="0.2" height="15.0" fill="rgb(234,224,22)" rx="2" ry="2" />
<text  x="693.76" y="527.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (1 samples, 0.02%)</title><rect x="135.5" y="453" width="0.2" height="15.0" fill="rgb(248,79,37)" rx="2" ry="2" />
<text  x="138.47" y="463.5" ></text>
</g>
<g >
<title>seastar::repeat&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (1 samples, 0.02%)</title><rect x="107.7" y="229" width="0.2" height="15.0" fill="rgb(241,71,17)" rx="2" ry="2" />
<text  x="110.66" y="239.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (1 samples, 0.02%)</title><rect x="337.8" y="245" width="0.2" height="15.0" fill="rgb(230,122,51)" rx="2" ry="2" />
<text  x="340.79" y="255.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.07%)</title><rect x="157.1" y="501" width="0.9" height="15.0" fill="rgb(217,228,11)" rx="2" ry="2" />
<text  x="160.14" y="511.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (5 samples, 0.09%)</title><rect x="492.4" y="373" width="1.1" height="15.0" fill="rgb(247,129,6)" rx="2" ry="2" />
<text  x="495.38" y="383.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.09%)</title><rect x="445.1" y="405" width="1.1" height="15.0" fill="rgb(221,184,52)" rx="2" ry="2" />
<text  x="448.08" y="415.5" ></text>
</g>
<g >
<title>schema::column_at (9 samples, 0.17%)</title><rect x="257.4" y="165" width="2.0" height="15.0" fill="rgb(211,30,41)" rx="2" ry="2" />
<text  x="260.43" y="175.5" ></text>
</g>
<g >
<title>cql3::query_processor::parse_statement (1 samples, 0.02%)</title><rect x="11.1" y="437" width="0.2" height="15.0" fill="rgb(234,136,31)" rx="2" ry="2" />
<text  x="14.09" y="447.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (2 samples, 0.04%)</title><rect x="357.7" y="261" width="0.5" height="15.0" fill="rgb(232,135,36)" rx="2" ry="2" />
<text  x="360.72" y="271.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::storage_proxy&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="1061.2" y="405" width="0.3" height="15.0" fill="rgb(210,1,2)" rx="2" ry="2" />
<text  x="1064.25" y="415.5" ></text>
</g>
<g >
<title>std::__equal&lt;true&gt;::equal&lt;char&gt; (1 samples, 0.02%)</title><rect x="759.3" y="341" width="0.2" height="15.0" fill="rgb(233,10,42)" rx="2" ry="2" />
<text  x="762.30" y="351.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mT__206 (1 samples, 0.02%)</title><rect x="36.5" y="325" width="0.2" height="15.0" fill="rgb(211,185,27)" rx="2" ry="2" />
<text  x="39.49" y="335.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.02%)</title><rect x="49.0" y="181" width="0.2" height="15.0" fill="rgb(206,100,4)" rx="2" ry="2" />
<text  x="51.98" y="191.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="594.6" y="405" width="0.3" height="15.0" fill="rgb(242,164,2)" rx="2" ry="2" />
<text  x="597.64" y="415.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (1 samples, 0.02%)</title><rect x="264.9" y="181" width="0.2" height="15.0" fill="rgb(238,94,52)" rx="2" ry="2" />
<text  x="267.87" y="191.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (1 samples, 0.02%)</title><rect x="794.1" y="277" width="0.2" height="15.0" fill="rgb(209,184,44)" rx="2" ry="2" />
<text  x="797.11" y="287.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt; (1 samples, 0.02%)</title><rect x="54.0" y="245" width="0.2" height="15.0" fill="rgb(251,143,46)" rx="2" ry="2" />
<text  x="57.01" y="255.5" ></text>
</g>
<g >
<title>range_tombstone_stream::get_next (1 samples, 0.02%)</title><rect x="275.8" y="245" width="0.2" height="15.0" fill="rgb(214,60,25)" rx="2" ry="2" />
<text  x="278.82" y="255.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_no_esft&lt;std::function&lt;std::function&lt;partition_presence_checker_result  (2 samples, 0.04%)</title><rect x="645.0" y="453" width="0.4" height="15.0" fill="rgb(221,182,7)" rx="2" ry="2" />
<text  x="648.00" y="463.5" ></text>
</g>
<g >
<title>schema::column_at (9 samples, 0.17%)</title><rect x="251.3" y="197" width="2.0" height="15.0" fill="rgb(230,72,1)" rx="2" ry="2" />
<text  x="254.30" y="207.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (1 samples, 0.02%)</title><rect x="183.9" y="373" width="0.2" height="15.0" fill="rgb(208,22,41)" rx="2" ry="2" />
<text  x="186.86" y="383.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::_Copy_ctor_base (2 samples, 0.04%)</title><rect x="349.6" y="229" width="0.5" height="15.0" fill="rgb(212,16,24)" rx="2" ry="2" />
<text  x="352.61" y="239.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;reconcilable_result&gt; &gt;, cache_temperature&gt; &gt; &gt;::invoke&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_mutations_locally (1 samples, 0.02%)</title><rect x="108.1" y="485" width="0.2" height="15.0" fill="rgb(252,191,24)" rx="2" ry="2" />
<text  x="111.10" y="495.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (14 samples, 0.26%)</title><rect x="436.1" y="325" width="3.1" height="15.0" fill="rgb(222,44,14)" rx="2" ry="2" />
<text  x="439.11" y="335.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.07%)</title><rect x="439.6" y="357" width="0.9" height="15.0" fill="rgb(237,58,1)" rx="2" ry="2" />
<text  x="442.61" y="367.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (1 samples, 0.02%)</title><rect x="861.8" y="357" width="0.2" height="15.0" fill="rgb(237,181,0)" rx="2" ry="2" />
<text  x="864.77" y="367.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::has_available_units (1 samples, 0.02%)</title><rect x="316.6" y="341" width="0.2" height="15.0" fill="rgb(230,229,5)" rx="2" ry="2" />
<text  x="319.55" y="351.5" ></text>
</g>
<g >
<title>atomic_cell_type::make_live&lt;fragment_range&lt;managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="863.7" y="309" width="0.3" height="15.0" fill="rgb(246,193,10)" rx="2" ry="2" />
<text  x="866.74" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (7 samples, 0.13%)</title><rect x="989.0" y="373" width="1.5" height="15.0" fill="rgb(232,49,2)" rx="2" ry="2" />
<text  x="991.99" y="383.5" ></text>
</g>
<g >
<title>bplus::searcher&lt;dht::ring_position, long, dht::raw_token_less_comparator, 16ul,  (12 samples, 0.22%)</title><rect x="499.6" y="341" width="2.6" height="15.0" fill="rgb(245,212,54)" rx="2" ry="2" />
<text  x="502.60" y="351.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="418.8" y="229" width="0.2" height="15.0" fill="rgb(246,46,29)" rx="2" ry="2" />
<text  x="421.81" y="239.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (2 samples, 0.04%)</title><rect x="967.8" y="405" width="0.4" height="15.0" fill="rgb(247,95,21)" rx="2" ry="2" />
<text  x="970.75" y="415.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="304.9" y="373" width="0.3" height="15.0" fill="rgb(226,121,36)" rx="2" ry="2" />
<text  x="307.95" y="383.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (217 samples, 4.03%)</title><rect x="21.2" y="469" width="47.5" height="15.0" fill="rgb(224,130,41)" rx="2" ry="2" />
<text  x="24.17" y="479.5" >cql3..</text>
</g>
<g >
<title>seastar::do_until&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (1 samples, 0.02%)</title><rect x="337.8" y="229" width="0.2" height="15.0" fill="rgb(220,99,30)" rx="2" ry="2" />
<text  x="340.79" y="239.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (1 samples, 0.02%)</title><rect x="107.0" y="437" width="0.2" height="15.0" fill="rgb(235,105,42)" rx="2" ry="2" />
<text  x="110.00" y="447.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (2 samples, 0.04%)</title><rect x="701.3" y="389" width="0.4" height="15.0" fill="rgb(210,161,11)" rx="2" ry="2" />
<text  x="704.27" y="399.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_last_fragment_kind, 4ul&gt;::~small_vector (2 samples, 0.04%)</title><rect x="478.4" y="357" width="0.4" height="15.0" fill="rgb(238,10,31)" rx="2" ry="2" />
<text  x="481.37" y="367.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::digest_read_resolver&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="1139.2" y="565" width="0.2" height="15.0" fill="rgb(251,225,21)" rx="2" ry="2" />
<text  x="1142.20" y="575.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::query_options, std::default_delete&lt;cql3::query_options&gt; &gt;::~unique_ptr (12 samples, 0.22%)</title><rect x="689.9" y="549" width="2.6" height="15.0" fill="rgb(214,114,41)" rx="2" ry="2" />
<text  x="692.88" y="559.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.02%)</title><rect x="56.0" y="181" width="0.2" height="15.0" fill="rgb(210,13,7)" rx="2" ry="2" />
<text  x="58.98" y="191.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::raw::parsed_statement, std::default_delete&lt;cql3::statements::raw::parsed_statement&gt; &gt;::get (1 samples, 0.02%)</title><rect x="66.3" y="437" width="0.2" height="15.0" fill="rgb(235,138,23)" rx="2" ry="2" />
<text  x="69.27" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.02%)</title><rect x="1152.8" y="421" width="0.2" height="15.0" fill="rgb(213,132,23)" rx="2" ry="2" />
<text  x="1155.78" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="854.5" y="501" width="0.3" height="15.0" fill="rgb(230,192,34)" rx="2" ry="2" />
<text  x="857.55" y="511.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::move_it (4 samples, 0.07%)</title><rect x="699.3" y="533" width="0.9" height="15.0" fill="rgb(240,111,26)" rx="2" ry="2" />
<text  x="702.30" y="543.5" ></text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt;&amp;&gt; (4 samples, 0.07%)</title><rect x="839.0" y="437" width="0.9" height="15.0" fill="rgb(222,34,0)" rx="2" ry="2" />
<text  x="842.00" y="447.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::set&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; (1 samples, 0.02%)</title><rect x="630.8" y="501" width="0.2" height="15.0" fill="rgb(223,69,53)" rx="2" ry="2" />
<text  x="633.76" y="511.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (1 samples, 0.02%)</title><rect x="766.1" y="405" width="0.2" height="15.0" fill="rgb(231,151,47)" rx="2" ry="2" />
<text  x="769.08" y="415.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit_slot&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::walking_visitor&lt;row::for_each_cell&lt;memtable::memtable_encoding_stats_collector::update (3 samples, 0.06%)</title><rect x="1119.5" y="261" width="0.7" height="15.0" fill="rgb(212,227,32)" rx="2" ry="2" />
<text  x="1122.49" y="271.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::take_value (1 samples, 0.02%)</title><rect x="140.5" y="517" width="0.2" height="15.0" fill="rgb(241,75,13)" rx="2" ry="2" />
<text  x="143.50" y="527.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_Optional_payload_base (1 samples, 0.02%)</title><rect x="1070.0" y="389" width="0.2" height="15.0" fill="rgb(214,67,3)" rx="2" ry="2" />
<text  x="1073.01" y="399.5" ></text>
</g>
<g >
<title>service::client_state::set_keyspace (17 samples, 0.32%)</title><rect x="844.7" y="485" width="3.7" height="15.0" fill="rgb(239,140,23)" rx="2" ry="2" />
<text  x="847.69" y="495.5" ></text>
</g>
<g >
<title>database::find_keyspace (22 samples, 0.41%)</title><rect x="1054.2" y="405" width="4.9" height="15.0" fill="rgb(245,87,29)" rx="2" ry="2" />
<text  x="1057.24" y="415.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::find (1 samples, 0.02%)</title><rect x="670.6" y="485" width="0.2" height="15.0" fill="rgb(225,185,6)" rx="2" ry="2" />
<text  x="673.62" y="495.5" ></text>
</g>
<g >
<title>memtable::upgrade_entry (2 samples, 0.04%)</title><rect x="543.4" y="405" width="0.4" height="15.0" fill="rgb(247,177,53)" rx="2" ry="2" />
<text  x="546.40" y="415.5" ></text>
</g>
<g >
<title>seastar::chunked_fifo&lt;seastar::concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::modification_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::work_item, 128ul&gt;::back_chunk_new (1 samples, 0.02%)</title><rect x="19.6" y="469" width="0.3" height="15.0" fill="rgb(209,72,44)" rx="2" ry="2" />
<text  x="22.63" y="479.5" ></text>
</g>
<g >
<title>multishard_combining_reader::handle_empty_reader_buffer (1 samples, 0.02%)</title><rect x="107.7" y="309" width="0.2" height="15.0" fill="rgb(228,39,48)" rx="2" ry="2" />
<text  x="110.66" y="319.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (1 samples, 0.02%)</title><rect x="198.1" y="325" width="0.2" height="15.0" fill="rgb(211,84,18)" rx="2" ry="2" />
<text  x="201.09" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="337.8" y="101" width="0.2" height="15.0" fill="rgb(228,222,8)" rx="2" ry="2" />
<text  x="340.79" y="111.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (6 samples, 0.11%)</title><rect x="795.2" y="261" width="1.3" height="15.0" fill="rgb(244,12,30)" rx="2" ry="2" />
<text  x="798.21" y="271.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="45.9" y="277" width="0.2" height="15.0" fill="rgb(215,117,40)" rx="2" ry="2" />
<text  x="48.91" y="287.5" ></text>
</g>
<g >
<title>operator delete (7 samples, 0.13%)</title><rect x="436.8" y="309" width="1.5" height="15.0" fill="rgb(237,176,32)" rx="2" ry="2" />
<text  x="439.76" y="319.5" ></text>
</g>
<g >
<title>std::default_delete&lt;cql3::expr::expression::impl&gt;::operator (1 samples, 0.02%)</title><rect x="664.5" y="437" width="0.2" height="15.0" fill="rgb(249,37,10)" rx="2" ry="2" />
<text  x="667.49" y="447.5" ></text>
</g>
<g >
<title>std::ios_base::ios_base (1 samples, 0.02%)</title><rect x="10.4" y="645" width="0.3" height="15.0" fill="rgb(238,132,46)" rx="2" ry="2" />
<text  x="13.44" y="655.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (2 samples, 0.04%)</title><rect x="55.5" y="261" width="0.5" height="15.0" fill="rgb(232,8,47)" rx="2" ry="2" />
<text  x="58.54" y="271.5" ></text>
</g>
<g >
<title>seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::expand (20 samples, 0.37%)</title><rect x="316.8" y="373" width="4.3" height="15.0" fill="rgb(235,104,23)" rx="2" ry="2" />
<text  x="319.77" y="383.5" ></text>
</g>
<g >
<title>cql3::expr::expression::~expression (1 samples, 0.02%)</title><rect x="54.4" y="341" width="0.3" height="15.0" fill="rgb(222,170,22)" rx="2" ry="2" />
<text  x="57.45" y="351.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::alter_service_level_statement, std::default_delete&lt;cql3::statements::alter_service_level_statement&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="64.3" y="437" width="0.2" height="15.0" fill="rgb(223,4,26)" rx="2" ry="2" />
<text  x="67.30" y="447.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (1 samples, 0.02%)</title><rect x="1040.4" y="309" width="0.3" height="15.0" fill="rgb(216,88,49)" rx="2" ry="2" />
<text  x="1043.45" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::disable_abort_on_alloc_failure_temporarily (1 samples, 0.02%)</title><rect x="557.0" y="405" width="0.2" height="15.0" fill="rgb(218,118,4)" rx="2" ry="2" />
<text  x="559.97" y="415.5" ></text>
</g>
<g >
<title>operator new (7 samples, 0.13%)</title><rect x="989.0" y="389" width="1.5" height="15.0" fill="rgb(251,134,7)" rx="2" ry="2" />
<text  x="991.99" y="399.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_M_reset (1 samples, 0.02%)</title><rect x="577.1" y="485" width="0.2" height="15.0" fill="rgb(250,164,6)" rx="2" ry="2" />
<text  x="580.12" y="495.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::emplace_back&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;&amp;&gt; (2 samples, 0.04%)</title><rect x="780.3" y="437" width="0.5" height="15.0" fill="rgb(240,208,21)" rx="2" ry="2" />
<text  x="783.32" y="447.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt;::_Copy_ctor_base (1 samples, 0.02%)</title><rect x="864.2" y="309" width="0.2" height="15.0" fill="rgb(248,160,9)" rx="2" ry="2" />
<text  x="867.18" y="319.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate (57 samples, 1.06%)</title><rect x="888.0" y="389" width="12.5" height="15.0" fill="rgb(227,147,54)" rx="2" ry="2" />
<text  x="891.05" y="399.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;bool  (3 samples, 0.06%)</title><rect x="639.1" y="469" width="0.6" height="15.0" fill="rgb(250,134,47)" rx="2" ry="2" />
<text  x="642.09" y="479.5" ></text>
</g>
<g >
<title>free (1 samples, 0.02%)</title><rect x="858.9" y="469" width="0.2" height="15.0" fill="rgb(212,146,39)" rx="2" ry="2" />
<text  x="861.93" y="479.5" ></text>
</g>
<g >
<title>reader_permit::used_guard::~used_guard (52 samples, 0.96%)</title><rect x="126.3" y="517" width="11.4" height="15.0" fill="rgb(227,100,49)" rx="2" ry="2" />
<text  x="129.27" y="527.5" ></text>
</g>
<g >
<title>service::storage_proxy::query (599 samples, 11.12%)</title><rect x="961.2" y="469" width="131.1" height="15.0" fill="rgb(242,141,37)" rx="2" ry="2" />
<text  x="964.18" y="479.5" >service::storage..</text>
</g>
<g >
<title>read_simple&lt;long, managed_bytes_basic_view&lt; (7 samples, 0.13%)</title><rect x="417.3" y="213" width="1.5" height="15.0" fill="rgb(214,15,34)" rx="2" ry="2" />
<text  x="420.27" y="223.5" ></text>
</g>
<g >
<title>service::abstract_write_response_handler::response (2 samples, 0.04%)</title><rect x="728.2" y="533" width="0.4" height="15.0" fill="rgb(237,130,26)" rx="2" ry="2" />
<text  x="731.20" y="543.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.02%)</title><rect x="563.3" y="469" width="0.2" height="15.0" fill="rgb(238,99,17)" rx="2" ry="2" />
<text  x="566.32" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="59.7" y="325" width="0.2" height="15.0" fill="rgb(246,151,16)" rx="2" ry="2" />
<text  x="62.70" y="335.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.04%)</title><rect x="55.5" y="245" width="0.5" height="15.0" fill="rgb(211,150,54)" rx="2" ry="2" />
<text  x="58.54" y="255.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="109.0" y="373" width="0.2" height="15.0" fill="rgb(250,68,35)" rx="2" ry="2" />
<text  x="111.97" y="383.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::list_service_level_statement, std::default_delete&lt;cql3::statements::list_service_level_statement&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="63.9" y="437" width="0.2" height="15.0" fill="rgb(253,5,40)" rx="2" ry="2" />
<text  x="66.87" y="447.5" ></text>
</g>
<g >
<title>list_reader_selector::list_reader_selector (3 samples, 0.06%)</title><rect x="462.2" y="405" width="0.6" height="15.0" fill="rgb(210,225,26)" rx="2" ry="2" />
<text  x="465.16" y="415.5" ></text>
</g>
<g >
<title>seastar::reactor::del_timer (5 samples, 0.09%)</title><rect x="133.1" y="437" width="1.1" height="15.0" fill="rgb(253,143,52)" rx="2" ry="2" />
<text  x="136.06" y="447.5" ></text>
</g>
<g >
<title>std::hash&lt;wrapping_interval&lt;dht::token&gt; &gt;::operator (1 samples, 0.02%)</title><rect x="1089.9" y="405" width="0.3" height="15.0" fill="rgb(231,88,16)" rx="2" ry="2" />
<text  x="1092.93" y="415.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::merge_with (2 samples, 0.04%)</title><rect x="73.1" y="405" width="0.4" height="15.0" fill="rgb(214,19,45)" rx="2" ry="2" />
<text  x="76.06" y="415.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_Optional_payload_base (1 samples, 0.02%)</title><rect x="948.7" y="405" width="0.2" height="15.0" fill="rgb(206,169,13)" rx="2" ry="2" />
<text  x="951.70" y="415.5" ></text>
</g>
<g >
<title>operator new (8 samples, 0.15%)</title><rect x="1109.0" y="469" width="1.7" height="15.0" fill="rgb(205,129,54)" rx="2" ry="2" />
<text  x="1111.98" y="479.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::~raw_hash_set (1 samples, 0.02%)</title><rect x="703.5" y="373" width="0.2" height="15.0" fill="rgb(223,88,28)" rx="2" ry="2" />
<text  x="706.46" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="862.6" y="325" width="0.3" height="15.0" fill="rgb(253,13,8)" rx="2" ry="2" />
<text  x="865.65" y="335.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_Optional_payload_base (4 samples, 0.07%)</title><rect x="576.0" y="485" width="0.9" height="15.0" fill="rgb(242,18,50)" rx="2" ry="2" />
<text  x="579.02" y="495.5" ></text>
</g>
<g >
<title>ser::writer_of_std__optional__qr_cell&lt;bytes_ostream&gt;::write (2 samples, 0.04%)</title><rect x="371.3" y="245" width="0.4" height="15.0" fill="rgb(253,191,17)" rx="2" ry="2" />
<text  x="374.29" y="255.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::maybe_decay_reserve (2 samples, 0.04%)</title><rect x="270.3" y="245" width="0.5" height="15.0" fill="rgb(215,125,5)" rx="2" ry="2" />
<text  x="273.35" y="255.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (1 samples, 0.02%)</title><rect x="822.6" y="421" width="0.2" height="15.0" fill="rgb(243,157,10)" rx="2" ry="2" />
<text  x="825.58" y="431.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::operator= (3 samples, 0.06%)</title><rect x="832.6" y="485" width="0.7" height="15.0" fill="rgb(220,135,42)" rx="2" ry="2" />
<text  x="835.65" y="495.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (1 samples, 0.02%)</title><rect x="1065.2" y="373" width="0.2" height="15.0" fill="rgb(225,211,18)" rx="2" ry="2" />
<text  x="1068.19" y="383.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::restrictions::multi_column_restriction&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="670.0" y="517" width="0.2" height="15.0" fill="rgb(242,195,20)" rx="2" ry="2" />
<text  x="672.96" y="527.5" ></text>
</g>
<g >
<title>set_value&lt;ser::buffer_view&lt;bytes_ostream::fragment_iterator&gt; &gt; (2 samples, 0.04%)</title><rect x="1120.6" y="261" width="0.4" height="15.0" fill="rgb(222,163,13)" rx="2" ry="2" />
<text  x="1123.59" y="271.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.04%)</title><rect x="522.6" y="357" width="0.4" height="15.0" fill="rgb(227,79,0)" rx="2" ry="2" />
<text  x="525.60" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="114.4" y="517" width="0.3" height="15.0" fill="rgb(211,77,30)" rx="2" ry="2" />
<text  x="117.45" y="527.5" ></text>
</g>
<g >
<title>locator::token_metadata_impl::pending_endpoints_for (1 samples, 0.02%)</title><rect x="1133.1" y="245" width="0.2" height="15.0" fill="rgb(247,149,40)" rx="2" ry="2" />
<text  x="1136.07" y="255.5" ></text>
</g>
<g >
<title>auth::resource::resource (1 samples, 0.02%)</title><rect x="768.9" y="469" width="0.3" height="15.0" fill="rgb(216,129,31)" rx="2" ry="2" />
<text  x="771.93" y="479.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (1 samples, 0.02%)</title><rect x="808.3" y="309" width="0.3" height="15.0" fill="rgb(215,188,48)" rx="2" ry="2" />
<text  x="811.34" y="319.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;, seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::finally_body&lt;seastar::smp::submit_to&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (30 samples, 0.56%)</title><rect x="652.0" y="565" width="6.6" height="15.0" fill="rgb(242,91,41)" rx="2" ry="2" />
<text  x="655.00" y="575.5" ></text>
</g>
<g >
<title>dht::murmur3_partitioner::get_token (64 samples, 1.19%)</title><rect x="915.4" y="453" width="14.0" height="15.0" fill="rgb(232,210,17)" rx="2" ry="2" />
<text  x="918.42" y="463.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::sharded&lt;database&gt;::stop (1 samples, 0.02%)</title><rect x="703.5" y="469" width="0.2" height="15.0" fill="rgb(219,210,11)" rx="2" ry="2" />
<text  x="706.46" y="479.5" ></text>
</g>
<g >
<title>antlr3::RuleReturnValue&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::~RuleReturnValue (1 samples, 0.02%)</title><rect x="21.4" y="453" width="0.2" height="15.0" fill="rgb(229,199,15)" rx="2" ry="2" />
<text  x="24.39" y="463.5" ></text>
</g>
<g >
<title>ser::mutation_partition_view::tomb (1 samples, 0.02%)</title><rect x="1124.5" y="309" width="0.2" height="15.0" fill="rgb(230,58,3)" rx="2" ry="2" />
<text  x="1127.53" y="319.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (1 samples, 0.02%)</title><rect x="772.0" y="357" width="0.2" height="15.0" fill="rgb(211,67,17)" rx="2" ry="2" />
<text  x="775.00" y="367.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_pausable_in_thread&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;sstables::sstable_writer&gt; &gt;, flat_mutation_reader::no_filter&gt; (1 samples, 0.02%)</title><rect x="79.4" y="565" width="0.2" height="15.0" fill="rgb(211,14,48)" rx="2" ry="2" />
<text  x="82.41" y="575.5" ></text>
</g>
<g >
<title>query::partition_slice::row_ranges (1 samples, 0.02%)</title><rect x="357.1" y="277" width="0.2" height="15.0" fill="rgb(217,112,5)" rx="2" ry="2" />
<text  x="360.06" y="287.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::get0 (2 samples, 0.04%)</title><rect x="717.9" y="517" width="0.5" height="15.0" fill="rgb(210,134,5)" rx="2" ry="2" />
<text  x="720.91" y="527.5" ></text>
</g>
<g >
<title>reader_permit::consume (1 samples, 0.02%)</title><rect x="260.9" y="197" width="0.3" height="15.0" fill="rgb(224,63,53)" rx="2" ry="2" />
<text  x="263.93" y="207.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;dht::ring_position&gt;::wrapping_interval (3 samples, 0.06%)</title><rect x="931.2" y="421" width="0.6" height="15.0" fill="rgb(247,70,32)" rx="2" ry="2" />
<text  x="934.18" y="431.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.06%)</title><rect x="903.6" y="357" width="0.7" height="15.0" fill="rgb(206,25,27)" rx="2" ry="2" />
<text  x="906.59" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="1127.8" y="357" width="0.2" height="15.0" fill="rgb(229,25,28)" rx="2" ry="2" />
<text  x="1130.81" y="367.5" ></text>
</g>
<g >
<title>std::hash&lt;gms::inet_address&gt;::operator (1 samples, 0.02%)</title><rect x="1147.3" y="501" width="0.2" height="15.0" fill="rgb(245,44,34)" rx="2" ry="2" />
<text  x="1150.30" y="511.5" ></text>
</g>
<g >
<title>dht::murmur3_partitioner::get_token (1 samples, 0.02%)</title><rect x="109.2" y="357" width="0.2" height="15.0" fill="rgb(234,216,19)" rx="2" ry="2" />
<text  x="112.19" y="367.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::digests_match (1 samples, 0.02%)</title><rect x="722.7" y="485" width="0.2" height="15.0" fill="rgb(246,119,27)" rx="2" ry="2" />
<text  x="725.73" y="495.5" ></text>
</g>
<g >
<title>reader_permit::used_guard::~used_guard (4 samples, 0.07%)</title><rect x="702.4" y="549" width="0.8" height="15.0" fill="rgb(252,205,18)" rx="2" ry="2" />
<text  x="705.37" y="559.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.02%)</title><rect x="79.4" y="629" width="0.2" height="15.0" fill="rgb(236,194,39)" rx="2" ry="2" />
<text  x="82.41" y="639.5" ></text>
</g>
<g >
<title>service::client_state::has_access (179 samples, 3.32%)</title><rect x="782.3" y="437" width="39.2" height="15.0" fill="rgb(245,102,5)" rx="2" ry="2" />
<text  x="785.29" y="447.5" >ser..</text>
</g>
<g >
<title>service::shared_mutation::apply_locally (2 samples, 0.04%)</title><rect x="1128.3" y="293" width="0.4" height="15.0" fill="rgb(219,147,1)" rx="2" ry="2" />
<text  x="1131.25" y="303.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::Parser (1 samples, 0.02%)</title><rect x="20.9" y="469" width="0.3" height="15.0" fill="rgb(213,188,52)" rx="2" ry="2" />
<text  x="23.95" y="479.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="56.0" y="261" width="0.2" height="15.0" fill="rgb(242,1,7)" rx="2" ry="2" />
<text  x="58.98" y="271.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.02%)</title><rect x="55.1" y="149" width="0.2" height="15.0" fill="rgb(208,46,33)" rx="2" ry="2" />
<text  x="58.11" y="159.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::vector (10 samples, 0.19%)</title><rect x="160.0" y="485" width="2.2" height="15.0" fill="rgb(233,160,11)" rx="2" ry="2" />
<text  x="162.99" y="495.5" ></text>
</g>
<g >
<title>_ZSt13__invoke_implISt10unique_ptrIN7seastar8internal13do_with_stateISt5tupleIJN20flat_mutation_reader4impl16consumer_adapterI35stable_flattened_mutations_consumerI17compact_for_queryIL19emit_only_live_rows1EN5query27clustering_position_trackerI20query_result_builderEEEEEEEENS1_6futureIvEEEESt14default_deleteISL_EEZNS2_12do_with_implISH_ZNS6_7consumeISG_EEDaT_EUlRSH_E_JEEEDaOSR_OT0_DpOT1_EUlDpOT_E_JSH_EESR_St14__invoke_otherSW_SZ_ (2 samples, 0.04%)</title><rect x="331.2" y="373" width="0.5" height="15.0" fill="rgb(249,150,54)" rx="2" ry="2" />
<text  x="334.22" y="383.5" ></text>
</g>
<g >
<title>validation::validate_cql_key (1 samples, 0.02%)</title><rect x="862.6" y="437" width="0.3" height="15.0" fill="rgb(209,85,36)" rx="2" ry="2" />
<text  x="865.65" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::resize (1 samples, 0.02%)</title><rect x="1170.3" y="581" width="0.2" height="15.0" fill="rgb(212,183,34)" rx="2" ry="2" />
<text  x="1173.29" y="591.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql3::selection::raw_selector&gt;::shared_ptr_count_for&lt;cql3::expr::expression&amp;, seastar::shared_ptr&lt;cql3::column_identifier&gt;&amp;&gt; (1 samples, 0.02%)</title><rect x="11.1" y="261" width="0.2" height="15.0" fill="rgb(246,195,23)" rx="2" ry="2" />
<text  x="14.09" y="271.5" ></text>
</g>
<g >
<title>std::tuple&lt;cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::tuple (1 samples, 0.02%)</title><rect x="56.4" y="277" width="0.2" height="15.0" fill="rgb(208,48,15)" rx="2" ry="2" />
<text  x="59.42" y="287.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::emplace&lt;atomic_cell_or_collection, seastar::optimized_optional&lt;cell_hash&gt; &gt; (1 samples, 0.02%)</title><rect x="864.0" y="341" width="0.2" height="15.0" fill="rgb(206,5,0)" rx="2" ry="2" />
<text  x="866.96" y="351.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::set_urgent_state (4 samples, 0.07%)</title><rect x="661.2" y="549" width="0.9" height="15.0" fill="rgb(221,19,12)" rx="2" ry="2" />
<text  x="664.20" y="559.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;cql3::expr::untyped_constant, void, void, cql3::expr::untyped_constant, void&gt; (1 samples, 0.02%)</title><rect x="61.2" y="325" width="0.3" height="15.0" fill="rgb(228,202,21)" rx="2" ry="2" />
<text  x="64.24" y="335.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (3 samples, 0.06%)</title><rect x="699.3" y="501" width="0.7" height="15.0" fill="rgb(208,113,13)" rx="2" ry="2" />
<text  x="702.30" y="511.5" ></text>
</g>
<g >
<title>db::block_for (1 samples, 0.02%)</title><rect x="1059.7" y="405" width="0.2" height="15.0" fill="rgb(252,142,21)" rx="2" ry="2" />
<text  x="1062.72" y="415.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (1,112 samples, 20.63%)</title><rect x="874.0" y="517" width="243.5" height="15.0" fill="rgb(251,91,9)" rx="2" ry="2" />
<text  x="877.03" y="527.5" >seastar::noncopyable_function&lt;se..</text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::get_static_row (13 samples, 0.24%)</title><rect x="292.5" y="309" width="2.8" height="15.0" fill="rgb(212,118,32)" rx="2" ry="2" />
<text  x="295.46" y="319.5" ></text>
</g>
<g >
<title>cql3::column_identifier_raw::prepare_column_identifier (1 samples, 0.02%)</title><rect x="72.2" y="405" width="0.2" height="15.0" fill="rgb(221,38,9)" rx="2" ry="2" />
<text  x="75.19" y="415.5" ></text>
</g>
<g >
<title>antlr3::Lexer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_rec (1 samples, 0.02%)</title><rect x="29.3" y="325" width="0.2" height="15.0" fill="rgb(242,175,12)" rx="2" ry="2" />
<text  x="32.27" y="335.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::future (1 samples, 0.02%)</title><rect x="980.5" y="421" width="0.2" height="15.0" fill="rgb(230,191,23)" rx="2" ry="2" />
<text  x="983.45" y="431.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.02%)</title><rect x="41.1" y="421" width="0.2" height="15.0" fill="rgb(240,44,19)" rx="2" ry="2" />
<text  x="44.09" y="431.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (8 samples, 0.15%)</title><rect x="41.7" y="405" width="1.8" height="15.0" fill="rgb(234,200,8)" rx="2" ry="2" />
<text  x="44.75" y="415.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_M_reset (1 samples, 0.02%)</title><rect x="1167.0" y="485" width="0.2" height="15.0" fill="rgb(226,135,6)" rx="2" ry="2" />
<text  x="1170.01" y="495.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.02%)</title><rect x="960.7" y="469" width="0.3" height="15.0" fill="rgb(221,186,1)" rx="2" ry="2" />
<text  x="963.74" y="479.5" ></text>
</g>
<g >
<title>range_tombstone_stream::get_next (5 samples, 0.09%)</title><rect x="274.7" y="229" width="1.1" height="15.0" fill="rgb(208,171,39)" rx="2" ry="2" />
<text  x="277.73" y="239.5" ></text>
</g>
<g >
<title>skip_empty_fragments&lt;managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="936.9" y="389" width="0.2" height="15.0" fill="rgb(241,7,53)" rx="2" ry="2" />
<text  x="939.88" y="399.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::lsa_partition_reader::next_row (1 samples, 0.02%)</title><rect x="79.4" y="405" width="0.2" height="15.0" fill="rgb(205,165,47)" rx="2" ry="2" />
<text  x="82.41" y="415.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="109.8" y="565" width="0.3" height="15.0" fill="rgb(213,183,5)" rx="2" ry="2" />
<text  x="112.85" y="575.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_internal&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt; &gt; (4 samples, 0.07%)</title><rect x="1128.0" y="357" width="0.9" height="15.0" fill="rgb(213,116,36)" rx="2" ry="2" />
<text  x="1131.03" y="367.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (7 samples, 0.13%)</title><rect x="81.8" y="437" width="1.6" height="15.0" fill="rgb(214,14,46)" rx="2" ry="2" />
<text  x="84.82" y="447.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::operator= (1 samples, 0.02%)</title><rect x="1142.3" y="549" width="0.2" height="15.0" fill="rgb(232,221,26)" rx="2" ry="2" />
<text  x="1145.27" y="559.5" ></text>
</g>
<g >
<title>sstring_hash::operator (5 samples, 0.09%)</title><rect x="840.1" y="437" width="1.1" height="15.0" fill="rgb(253,70,19)" rx="2" ry="2" />
<text  x="843.09" y="447.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_result_local (212 samples, 3.93%)</title><rect x="1001.3" y="357" width="46.4" height="15.0" fill="rgb(226,82,29)" rx="2" ry="2" />
<text  x="1004.25" y="367.5" >serv..</text>
</g>
<g >
<title>std::__cxx11::list&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_insert&lt;flat_mutation_reader&gt; (1 samples, 0.02%)</title><rect x="475.5" y="341" width="0.2" height="15.0" fill="rgb(239,1,51)" rx="2" ry="2" />
<text  x="478.52" y="351.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.02%)</title><rect x="24.7" y="309" width="0.2" height="15.0" fill="rgb(245,119,30)" rx="2" ry="2" />
<text  x="27.67" y="319.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry&gt;::operator= (2 samples, 0.04%)</title><rect x="761.9" y="421" width="0.5" height="15.0" fill="rgb(209,62,9)" rx="2" ry="2" />
<text  x="764.92" y="431.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.02%)</title><rect x="58.6" y="373" width="0.2" height="15.0" fill="rgb(242,54,26)" rx="2" ry="2" />
<text  x="61.61" y="383.5" ></text>
</g>
<g >
<title>service::storage_service::join_token_ring (1 samples, 0.02%)</title><rect x="17.9" y="533" width="0.2" height="15.0" fill="rgb(218,215,44)" rx="2" ry="2" />
<text  x="20.88" y="543.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::emplace&lt;atomic_cell_or_collection, seastar::optimized_optional&lt;cell_hash&gt; &gt; (3 samples, 0.06%)</title><rect x="1121.5" y="261" width="0.6" height="15.0" fill="rgb(234,174,19)" rx="2" ry="2" />
<text  x="1124.46" y="271.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::raw::parsed_statement, std::default_delete&lt;cql3::statements::raw::parsed_statement&gt; &gt;::operator (1 samples, 0.02%)</title><rect x="66.5" y="437" width="0.2" height="15.0" fill="rgb(244,221,43)" rx="2" ry="2" />
<text  x="69.49" y="447.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::waiting_for (1 samples, 0.02%)</title><rect x="723.2" y="485" width="0.2" height="15.0" fill="rgb(224,48,46)" rx="2" ry="2" />
<text  x="726.17" y="495.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_M_reset (1 samples, 0.02%)</title><rect x="942.1" y="469" width="0.3" height="15.0" fill="rgb(223,34,53)" rx="2" ry="2" />
<text  x="945.13" y="479.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextToken (66 samples, 1.22%)</title><rect x="25.1" y="373" width="14.5" height="15.0" fill="rgb(239,27,0)" rx="2" ry="2" />
<text  x="28.11" y="383.5" ></text>
</g>
<g >
<title>cql3::statements::prepared_statement::checked_weak_from_this (5 samples, 0.09%)</title><rect x="739.8" y="485" width="1.1" height="15.0" fill="rgb(211,72,16)" rx="2" ry="2" />
<text  x="742.81" y="495.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::initial_key_restrictions&lt;partition_key&gt;::merge_to (2 samples, 0.04%)</title><rect x="73.1" y="453" width="0.4" height="15.0" fill="rgb(220,198,35)" rx="2" ry="2" />
<text  x="76.06" y="463.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const*, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;*&gt; (1 samples, 0.02%)</title><rect x="808.3" y="293" width="0.3" height="15.0" fill="rgb(228,208,33)" rx="2" ry="2" />
<text  x="811.34" y="303.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="485.4" y="357" width="0.2" height="15.0" fill="rgb(212,27,25)" rx="2" ry="2" />
<text  x="488.37" y="367.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_singular (555 samples, 10.30%)</title><rect x="969.3" y="437" width="121.5" height="15.0" fill="rgb(226,107,38)" rx="2" ry="2" />
<text  x="972.28" y="447.5" >service::storag..</text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::lw_shared_ptr&lt;schema const&gt;  (1 samples, 0.02%)</title><rect x="107.2" y="501" width="0.2" height="15.0" fill="rgb(235,45,52)" rx="2" ry="2" />
<text  x="110.22" y="511.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::take_value (1 samples, 0.02%)</title><rect x="324.2" y="421" width="0.2" height="15.0" fill="rgb(223,73,34)" rx="2" ry="2" />
<text  x="327.21" y="431.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.02%)</title><rect x="48.1" y="293" width="0.2" height="15.0" fill="rgb(254,223,30)" rx="2" ry="2" />
<text  x="51.10" y="303.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (2 samples, 0.04%)</title><rect x="55.5" y="277" width="0.5" height="15.0" fill="rgb(229,148,47)" rx="2" ry="2" />
<text  x="58.54" y="287.5" ></text>
</g>
<g >
<title>cql3::statements::raw::update_statement::prepare_internal (27 samples, 0.50%)</title><rect x="69.8" y="501" width="5.9" height="15.0" fill="rgb(248,209,20)" rx="2" ry="2" />
<text  x="72.78" y="511.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::statements::raw::update_statement, std::default_delete&lt;cql3::statements::raw::update_statement&gt;, true, true&gt;::__uniq_ptr_impl (1 samples, 0.02%)</title><rect x="63.2" y="389" width="0.2" height="15.0" fill="rgb(211,184,24)" rx="2" ry="2" />
<text  x="66.21" y="399.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.02%)</title><rect x="1167.9" y="565" width="0.2" height="15.0" fill="rgb(236,70,2)" rx="2" ry="2" />
<text  x="1170.88" y="575.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.02%)</title><rect x="592.7" y="389" width="0.2" height="15.0" fill="rgb(239,35,30)" rx="2" ry="2" />
<text  x="595.66" y="399.5" ></text>
</g>
<g >
<title>query::querier_base::querier_base (5 samples, 0.09%)</title><rect x="641.9" y="469" width="1.1" height="15.0" fill="rgb(241,149,14)" rx="2" ry="2" />
<text  x="644.93" y="479.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (11 samples, 0.20%)</title><rect x="896.1" y="309" width="2.5" height="15.0" fill="rgb(233,95,46)" rx="2" ry="2" />
<text  x="899.15" y="319.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::_Copy_ctor_base (2 samples, 0.04%)</title><rect x="353.6" y="245" width="0.4" height="15.0" fill="rgb(236,131,25)" rx="2" ry="2" />
<text  x="356.56" y="255.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (1 samples, 0.02%)</title><rect x="1106.1" y="469" width="0.3" height="15.0" fill="rgb(223,101,14)" rx="2" ry="2" />
<text  x="1109.14" y="479.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="51.2" y="341" width="0.2" height="15.0" fill="rgb(237,46,21)" rx="2" ry="2" />
<text  x="54.17" y="351.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::inet_address (5 samples, 0.09%)</title><rect x="980.9" y="421" width="1.1" height="15.0" fill="rgb(240,218,7)" rx="2" ry="2" />
<text  x="983.89" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;seastar::shared_ptr&lt;cql3::operation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::operation&gt; &gt; &gt;::_M_check_len (1 samples, 0.02%)</title><rect x="72.0" y="437" width="0.2" height="15.0" fill="rgb(254,189,13)" rx="2" ry="2" />
<text  x="74.97" y="447.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (7 samples, 0.13%)</title><rect x="549.1" y="325" width="1.5" height="15.0" fill="rgb(243,229,50)" rx="2" ry="2" />
<text  x="552.09" y="335.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::value (22 samples, 0.41%)</title><rect x="51.4" y="357" width="4.8" height="15.0" fill="rgb(221,212,3)" rx="2" ry="2" />
<text  x="54.38" y="367.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (2 samples, 0.04%)</title><rect x="43.1" y="245" width="0.4" height="15.0" fill="rgb(225,164,17)" rx="2" ry="2" />
<text  x="46.06" y="255.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::get_promise (1 samples, 0.02%)</title><rect x="832.4" y="485" width="0.2" height="15.0" fill="rgb(235,60,34)" rx="2" ry="2" />
<text  x="835.43" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt;::emplace_back&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; (8 samples, 0.15%)</title><rect x="289.4" y="277" width="1.8" height="15.0" fill="rgb(224,140,42)" rx="2" ry="2" />
<text  x="292.40" y="287.5" ></text>
</g>
<g >
<title>reader_permit::consume (1 samples, 0.02%)</title><rect x="213.2" y="261" width="0.2" height="15.0" fill="rgb(239,49,50)" rx="2" ry="2" />
<text  x="216.20" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.02%)</title><rect x="1064.1" y="357" width="0.2" height="15.0" fill="rgb(207,122,51)" rx="2" ry="2" />
<text  x="1067.10" y="367.5" ></text>
</g>
<g >
<title>seastar::posix_thread::start_routine (1 samples, 0.02%)</title><rect x="1189.8" y="677" width="0.2" height="15.0" fill="rgb(221,25,7)" rx="2" ry="2" />
<text  x="1192.78" y="687.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_map&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::at&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt; &gt; (22 samples, 0.41%)</title><rect x="1054.2" y="389" width="4.9" height="15.0" fill="rgb(246,168,35)" rx="2" ry="2" />
<text  x="1057.24" y="399.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::digest_read_result&gt;::then_wrapped_nrvo&lt;void, service::abstract_read_executor::execute (12 samples, 0.22%)</title><rect x="984.2" y="389" width="2.6" height="15.0" fill="rgb(236,145,36)" rx="2" ry="2" />
<text  x="987.17" y="399.5" ></text>
</g>
<g >
<title>validation::validate_column_family (1 samples, 0.02%)</title><rect x="75.9" y="517" width="0.2" height="15.0" fill="rgb(226,115,44)" rx="2" ry="2" />
<text  x="78.91" y="527.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;compact_for_query&lt; (1 samples, 0.02%)</title><rect x="442.9" y="357" width="0.2" height="15.0" fill="rgb(231,214,17)" rx="2" ry="2" />
<text  x="445.89" y="367.5" ></text>
</g>
<g >
<title>database::apply_in_memory (34 samples, 0.63%)</title><rect x="1117.5" y="357" width="7.5" height="15.0" fill="rgb(233,201,21)" rx="2" ry="2" />
<text  x="1120.52" y="367.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::move_it (2 samples, 0.04%)</title><rect x="661.6" y="533" width="0.5" height="15.0" fill="rgb(210,20,47)" rx="2" ry="2" />
<text  x="664.64" y="543.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="17.4" y="565" width="0.3" height="15.0" fill="rgb(237,56,45)" rx="2" ry="2" />
<text  x="20.44" y="575.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (7 samples, 0.13%)</title><rect x="758.2" y="389" width="1.5" height="15.0" fill="rgb(233,74,37)" rx="2" ry="2" />
<text  x="761.20" y="399.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="652.0" y="549" width="0.2" height="15.0" fill="rgb(218,122,0)" rx="2" ry="2" />
<text  x="655.00" y="559.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (18 samples, 0.33%)</title><rect x="758.0" y="421" width="3.9" height="15.0" fill="rgb(219,132,10)" rx="2" ry="2" />
<text  x="760.98" y="431.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (3 samples, 0.06%)</title><rect x="41.7" y="229" width="0.7" height="15.0" fill="rgb(217,191,11)" rx="2" ry="2" />
<text  x="44.75" y="239.5" ></text>
</g>
<g >
<title>mutation_querier::consume_end_of_stream (2 samples, 0.04%)</title><rect x="340.2" y="277" width="0.4" height="15.0" fill="rgb(220,191,46)" rx="2" ry="2" />
<text  x="343.20" y="287.5" ></text>
</g>
<g >
<title>schema::column_at (1 samples, 0.02%)</title><rect x="259.4" y="181" width="0.2" height="15.0" fill="rgb(209,145,32)" rx="2" ry="2" />
<text  x="262.40" y="191.5" ></text>
</g>
<g >
<title>abstract_type::decompose (1 samples, 0.02%)</title><rect x="72.4" y="373" width="0.2" height="15.0" fill="rgb(245,163,34)" rx="2" ry="2" />
<text  x="75.40" y="383.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::invoke_on_all (1 samples, 0.02%)</title><rect x="17.7" y="533" width="0.2" height="15.0" fill="rgb(224,130,53)" rx="2" ry="2" />
<text  x="20.66" y="543.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.02%)</title><rect x="759.1" y="341" width="0.2" height="15.0" fill="rgb(233,57,17)" rx="2" ry="2" />
<text  x="762.08" y="351.5" ></text>
</g>
<g >
<title>std::hash&lt;gms::inet_address&gt;::operator (1 samples, 0.02%)</title><rect x="1147.1" y="485" width="0.2" height="15.0" fill="rgb(214,6,52)" rx="2" ry="2" />
<text  x="1150.08" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="586.8" y="325" width="0.2" height="15.0" fill="rgb(232,229,5)" rx="2" ry="2" />
<text  x="589.75" y="335.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::create_type_statement, std::default_delete&lt;cql3::statements::create_type_statement&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::statements::create_type_statement&gt;, void&gt; (1 samples, 0.02%)</title><rect x="64.5" y="437" width="0.2" height="15.0" fill="rgb(247,116,32)" rx="2" ry="2" />
<text  x="67.52" y="447.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE14then_impl_nrvoIZNS6_14discard_resultEvEUlDpOT_E_NS0_IvEEEET0_OT_ (17 samples, 0.32%)</title><rect x="733.0" y="517" width="3.7" height="15.0" fill="rgb(248,156,46)" rx="2" ry="2" />
<text  x="736.02" y="527.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="57.7" y="341" width="0.3" height="15.0" fill="rgb(217,54,13)" rx="2" ry="2" />
<text  x="60.73" y="351.5" ></text>
</g>
<g >
<title>allocation_strategy::destroy&lt;rows_entry&gt; (1 samples, 0.02%)</title><rect x="107.0" y="389" width="0.2" height="15.0" fill="rgb(223,103,12)" rx="2" ry="2" />
<text  x="110.00" y="399.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::forward_to (2 samples, 0.04%)</title><rect x="730.4" y="565" width="0.4" height="15.0" fill="rgb(226,59,22)" rx="2" ry="2" />
<text  x="733.39" y="575.5" ></text>
</g>
<g >
<title>cql3::query_options::get_value_at (1 samples, 0.02%)</title><rect x="900.3" y="357" width="0.2" height="15.0" fill="rgb(250,191,42)" rx="2" ry="2" />
<text  x="903.31" y="367.5" ></text>
</g>
<g >
<title>database::query (105 samples, 1.95%)</title><rect x="1010.7" y="325" width="23.0" height="15.0" fill="rgb(205,153,47)" rx="2" ry="2" />
<text  x="1013.67" y="335.5" >d..</text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.02%)</title><rect x="57.5" y="389" width="0.2" height="15.0" fill="rgb(206,214,37)" rx="2" ry="2" />
<text  x="60.52" y="399.5" ></text>
</g>
<g >
<title>seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::expand (1 samples, 0.02%)</title><rect x="213.4" y="293" width="0.2" height="15.0" fill="rgb(254,15,47)" rx="2" ry="2" />
<text  x="216.42" y="303.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;bytes_ostream::chunk, std::default_delete&lt;bytes_ostream::chunk&gt; &gt;::~unique_ptr (6 samples, 0.11%)</title><rect x="100.0" y="501" width="1.3" height="15.0" fill="rgb(221,1,6)" rx="2" ry="2" />
<text  x="102.99" y="511.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="809.0" y="293" width="0.2" height="15.0" fill="rgb(243,4,36)" rx="2" ry="2" />
<text  x="812.00" y="303.5" ></text>
</g>
<g >
<title>std::pair&lt;auth::authenticated_user, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;::pair (2 samples, 0.04%)</title><rect x="751.6" y="453" width="0.5" height="15.0" fill="rgb(252,200,30)" rx="2" ry="2" />
<text  x="754.63" y="463.5" ></text>
</g>
<g >
<title>flat_mutation_reader::upgrade_schema (2 samples, 0.04%)</title><rect x="461.3" y="405" width="0.4" height="15.0" fill="rgb(241,108,9)" rx="2" ry="2" />
<text  x="464.29" y="415.5" ></text>
</g>
<g >
<title>gms::gossiper::is_alive (2 samples, 0.04%)</title><rect x="1084.7" y="325" width="0.4" height="15.0" fill="rgb(252,86,24)" rx="2" ry="2" />
<text  x="1087.68" y="335.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (1 samples, 0.02%)</title><rect x="862.2" y="357" width="0.2" height="15.0" fill="rgb(231,165,40)" rx="2" ry="2" />
<text  x="865.21" y="367.5" ></text>
</g>
<g >
<title>free (12 samples, 0.22%)</title><rect x="430.8" y="245" width="2.7" height="15.0" fill="rgb(221,151,40)" rx="2" ry="2" />
<text  x="433.85" y="255.5" ></text>
</g>
<g >
<title>cql3::expr::possible_lhs_values (1 samples, 0.02%)</title><rect x="880.6" y="485" width="0.2" height="15.0" fill="rgb(240,104,33)" rx="2" ry="2" />
<text  x="883.60" y="495.5" ></text>
</g>
<g >
<title>service::abstract_write_response_handler::signal (2 samples, 0.04%)</title><rect x="728.2" y="517" width="0.4" height="15.0" fill="rgb(241,200,30)" rx="2" ry="2" />
<text  x="731.20" y="527.5" ></text>
</g>
<g >
<title>mutation::set_clustered_cell (1 samples, 0.02%)</title><rect x="108.3" y="453" width="0.2" height="15.0" fill="rgb(251,181,11)" rx="2" ry="2" />
<text  x="111.32" y="463.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="610.8" y="469" width="0.3" height="15.0" fill="rgb(247,131,11)" rx="2" ry="2" />
<text  x="613.84" y="479.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_create_nodes (7 samples, 0.13%)</title><rect x="572.7" y="421" width="1.6" height="15.0" fill="rgb(246,147,54)" rx="2" ry="2" />
<text  x="575.74" y="431.5" ></text>
</g>
<g >
<title>std::__optional_hash_call_base&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, true&gt;::operator (3 samples, 0.06%)</title><rect x="806.2" y="149" width="0.6" height="15.0" fill="rgb(239,52,16)" rx="2" ry="2" />
<text  x="809.16" y="159.5" ></text>
</g>
<g >
<title>clustering_row::external_memory_usage (1 samples, 0.02%)</title><rect x="79.4" y="341" width="0.2" height="15.0" fill="rgb(236,61,24)" rx="2" ry="2" />
<text  x="82.41" y="351.5" ></text>
</g>
<g >
<title>intrusive_b::searcher&lt;clustering_key_prefix, rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare,  (1 samples, 0.02%)</title><rect x="106.6" y="453" width="0.2" height="15.0" fill="rgb(231,62,8)" rx="2" ry="2" />
<text  x="109.56" y="463.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (1 samples, 0.02%)</title><rect x="312.8" y="405" width="0.2" height="15.0" fill="rgb(224,35,14)" rx="2" ry="2" />
<text  x="315.83" y="415.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="664.5" y="501" width="0.2" height="15.0" fill="rgb(208,5,9)" rx="2" ry="2" />
<text  x="667.49" y="511.5" ></text>
</g>
<g >
<title>mutation_partition::~mutation_partition (3 samples, 0.06%)</title><rect x="1133.9" y="357" width="0.7" height="15.0" fill="rgb(251,84,45)" rx="2" ry="2" />
<text  x="1136.95" y="367.5" ></text>
</g>
<g >
<title>schema::get_column_definition (2 samples, 0.04%)</title><rect x="75.3" y="485" width="0.4" height="15.0" fill="rgb(227,138,7)" rx="2" ry="2" />
<text  x="78.25" y="495.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::maybe_decay_reserve (1 samples, 0.02%)</title><rect x="516.7" y="389" width="0.2" height="15.0" fill="rgb(218,100,27)" rx="2" ry="2" />
<text  x="519.68" y="399.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="42.6" y="373" width="0.2" height="15.0" fill="rgb(228,105,4)" rx="2" ry="2" />
<text  x="45.63" y="383.5" ></text>
</g>
<g >
<title>seastar::reactor::do_run (4,958 samples, 92.00%)</title><rect x="84.7" y="597" width="1085.6" height="15.0" fill="rgb(241,223,3)" rx="2" ry="2" />
<text  x="87.67" y="607.5" >seastar::reactor::do_run</text>
</g>
<g >
<title>db::schema_tables::merge_keyspaces (1 samples, 0.02%)</title><rect x="106.8" y="389" width="0.2" height="15.0" fill="rgb(243,17,37)" rx="2" ry="2" />
<text  x="109.78" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt;::emplace_back&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; (1 samples, 0.02%)</title><rect x="292.0" y="293" width="0.2" height="15.0" fill="rgb(240,197,29)" rx="2" ry="2" />
<text  x="295.03" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;seastar::shared_ptr&lt;cql3::relation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::relation&gt; &gt; &gt;::_M_realloc_insert&lt;seastar::shared_ptr&lt;cql3::single_column_relation&gt; &gt; (2 samples, 0.04%)</title><rect x="62.6" y="373" width="0.4" height="15.0" fill="rgb(225,191,18)" rx="2" ry="2" />
<text  x="65.55" y="383.5" ></text>
</g>
<g >
<title>sstables::mc::writer::write_clustered&lt;clustering_row&gt; (8 samples, 0.15%)</title><rect x="81.8" y="501" width="1.8" height="15.0" fill="rgb(248,224,25)" rx="2" ry="2" />
<text  x="84.82" y="511.5" ></text>
</g>
<g >
<title>[libpthread-2.33.so] (1 samples, 0.02%)</title><rect x="18.3" y="565" width="0.2" height="15.0" fill="rgb(249,138,17)" rx="2" ry="2" />
<text  x="21.32" y="575.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (85 samples, 1.58%)</title><rect x="22.3" y="405" width="18.6" height="15.0" fill="rgb(232,84,17)" rx="2" ry="2" />
<text  x="25.26" y="415.5" ></text>
</g>
<g >
<title>list_reader_selector::create_new_readers (1 samples, 0.02%)</title><rect x="467.0" y="357" width="0.2" height="15.0" fill="rgb(242,210,41)" rx="2" ry="2" />
<text  x="469.98" y="367.5" ></text>
</g>
<g >
<title>rows_entry::tri_compare::operator (1 samples, 0.02%)</title><rect x="108.3" y="341" width="0.2" height="15.0" fill="rgb(234,36,16)" rx="2" ry="2" />
<text  x="111.32" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::~vector (2 samples, 0.04%)</title><rect x="658.1" y="533" width="0.5" height="15.0" fill="rgb(206,93,10)" rx="2" ry="2" />
<text  x="661.14" y="543.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (6 samples, 0.11%)</title><rect x="573.0" y="389" width="1.3" height="15.0" fill="rgb(215,71,8)" rx="2" ry="2" />
<text  x="575.96" y="399.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (1 samples, 0.02%)</title><rect x="17.7" y="245" width="0.2" height="15.0" fill="rgb(244,153,9)" rx="2" ry="2" />
<text  x="20.66" y="255.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_requests (260 samples, 4.82%)</title><rect x="992.5" y="405" width="56.9" height="15.0" fill="rgb(227,9,35)" rx="2" ry="2" />
<text  x="995.49" y="415.5" >servic..</text>
</g>
<g >
<title>operator new (4 samples, 0.07%)</title><rect x="959.9" y="469" width="0.8" height="15.0" fill="rgb(239,150,32)" rx="2" ry="2" />
<text  x="962.87" y="479.5" ></text>
</g>
<g >
<title>std::visit&lt;overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::has_token (1 samples, 0.02%)</title><rect x="669.5" y="453" width="0.2" height="15.0" fill="rgb(218,26,40)" rx="2" ry="2" />
<text  x="672.52" y="463.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;query::result&gt;::operator= (1 samples, 0.02%)</title><rect x="141.8" y="517" width="0.2" height="15.0" fill="rgb(220,21,40)" rx="2" ry="2" />
<text  x="144.82" y="527.5" ></text>
</g>
<g >
<title>cql3::prepare_context::bound_variables_size (1 samples, 0.02%)</title><rect x="69.6" y="501" width="0.2" height="15.0" fill="rgb(247,80,41)" rx="2" ry="2" />
<text  x="72.56" y="511.5" ></text>
</g>
<g >
<title>partition_snapshot::~partition_snapshot (1 samples, 0.02%)</title><rect x="590.3" y="341" width="0.2" height="15.0" fill="rgb(210,164,17)" rx="2" ry="2" />
<text  x="593.26" y="351.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume_in_thread&lt;sstables::sstable_writer, flat_mutation_reader::no_filter&gt; (1 samples, 0.02%)</title><rect x="79.4" y="597" width="0.2" height="15.0" fill="rgb(241,160,49)" rx="2" ry="2" />
<text  x="82.41" y="607.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::check_local_limit (1 samples, 0.02%)</title><rect x="366.5" y="229" width="0.2" height="15.0" fill="rgb(220,164,47)" rx="2" ry="2" />
<text  x="369.47" y="239.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_S_construct&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (1 samples, 0.02%)</title><rect x="24.5" y="293" width="0.2" height="15.0" fill="rgb(253,41,52)" rx="2" ry="2" />
<text  x="27.45" y="303.5" ></text>
</g>
<g >
<title>_ZNSt10unique_ptrIZN7seastar5asyncIZZN3gms8gossiper3runEvENK4$_17clEvEUlvE_JEEENS0_8futurizeINSt9result_ofIFNSt5decayIT_E4typeEDpNS8_IT0_E4typeEEE4typeEE4typeENS0_17thread_attributesEOS9_DpOSC_E4workSt14default_deleteISP_EED2Ev (1 samples, 0.02%)</title><rect x="1168.3" y="517" width="0.2" height="15.0" fill="rgb(213,75,50)" rx="2" ry="2" />
<text  x="1171.32" y="527.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::~disable_abort_on_alloc_failure_temporarily (1 samples, 0.02%)</title><rect x="267.7" y="277" width="0.2" height="15.0" fill="rgb(240,107,7)" rx="2" ry="2" />
<text  x="270.72" y="287.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (1 samples, 0.02%)</title><rect x="52.3" y="277" width="0.2" height="15.0" fill="rgb(231,29,27)" rx="2" ry="2" />
<text  x="55.26" y="287.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (1 samples, 0.02%)</title><rect x="50.9" y="309" width="0.3" height="15.0" fill="rgb(213,203,51)" rx="2" ry="2" />
<text  x="53.95" y="319.5" ></text>
</g>
<g >
<title>evictable_reader::do_fill_buffer (1 samples, 0.02%)</title><rect x="107.7" y="261" width="0.2" height="15.0" fill="rgb(245,95,30)" rx="2" ry="2" />
<text  x="110.66" y="271.5" ></text>
</g>
<g >
<title>antlr3::CyclicDFA&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, cql3_parser::CqlLexer&gt;::predict&lt;cql3_parser::CqlLexerCyclicDFA44&gt; (8 samples, 0.15%)</title><rect x="36.7" y="309" width="1.8" height="15.0" fill="rgb(220,215,2)" rx="2" ry="2" />
<text  x="39.71" y="319.5" ></text>
</g>
<g >
<title>std::apply&lt;auth::permissions_cache::get (68 samples, 1.26%)</title><rect x="793.0" y="325" width="14.9" height="15.0" fill="rgb(252,152,33)" rx="2" ry="2" />
<text  x="796.02" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.04%)</title><rect x="1148.4" y="485" width="0.4" height="15.0" fill="rgb(219,197,52)" rx="2" ry="2" />
<text  x="1151.40" y="495.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;,  (22 samples, 0.41%)</title><rect x="740.9" y="485" width="4.8" height="15.0" fill="rgb(211,188,51)" rx="2" ry="2" />
<text  x="743.90" y="495.5" ></text>
</g>
<g >
<title>mutation_partition_view::do_accept&lt;partition_builder&gt; (1 samples, 0.02%)</title><rect x="107.9" y="469" width="0.2" height="15.0" fill="rgb(238,137,26)" rx="2" ry="2" />
<text  x="110.88" y="479.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (2 samples, 0.04%)</title><rect x="384.6" y="213" width="0.5" height="15.0" fill="rgb(208,149,27)" rx="2" ry="2" />
<text  x="387.65" y="223.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;service::never_speculating_read_executor, true&gt;::make&lt;seastar::lw_shared_ptr&lt;schema const&gt;&amp;, seastar::lw_shared_ptr&lt;table&gt;&amp;, seastar::shared_ptr&lt;service::storage_proxy&gt;&amp;, seastar::lw_shared_ptr&lt;query::read_command&gt;&amp;, nonwrapping_interval&lt;dht::ring_position&gt;, db::consistency_level&amp;, utils::small_vector&lt;gms::inet_address, 3ul&gt;, tracing::trace_state_ptr, service_permit&gt; (42 samples, 0.78%)</title><rect x="1061.5" y="405" width="9.2" height="15.0" fill="rgb(251,210,27)" rx="2" ry="2" />
<text  x="1064.47" y="415.5" ></text>
</g>
<g >
<title>std::construct_at&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (1 samples, 0.02%)</title><rect x="24.5" y="277" width="0.2" height="15.0" fill="rgb(252,219,51)" rx="2" ry="2" />
<text  x="27.45" y="287.5" ></text>
</g>
<g >
<title>std::_Optional_base_impl&lt;query::querier&lt; (6 samples, 0.11%)</title><rect x="641.9" y="485" width="1.3" height="15.0" fill="rgb(209,96,18)" rx="2" ry="2" />
<text  x="644.93" y="495.5" ></text>
</g>
<g >
<title>schema_registry::get_entry (12 samples, 0.22%)</title><rect x="976.3" y="405" width="2.6" height="15.0" fill="rgb(206,95,1)" rx="2" ry="2" />
<text  x="979.29" y="415.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::sharded_parallel_for_each (1 samples, 0.02%)</title><rect x="703.5" y="533" width="0.2" height="15.0" fill="rgb(209,79,29)" rx="2" ry="2" />
<text  x="706.46" y="543.5" ></text>
</g>
<g >
<title>partition_entry::apply (1 samples, 0.02%)</title><rect x="1124.3" y="309" width="0.2" height="15.0" fill="rgb(231,85,44)" rx="2" ry="2" />
<text  x="1127.31" y="319.5" ></text>
</g>
<g >
<title>service::abstract_read_resolver::~abstract_read_resolver (2 samples, 0.04%)</title><rect x="712.9" y="533" width="0.4" height="15.0" fill="rgb(206,172,11)" rx="2" ry="2" />
<text  x="715.88" y="543.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;seastar::future&lt;void&gt; &gt;  (3 samples, 0.06%)</title><rect x="641.1" y="501" width="0.6" height="15.0" fill="rgb(227,25,47)" rx="2" ry="2" />
<text  x="644.06" y="511.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consumer_adapter&lt;sstables::sstable_writer&gt;::consume (9 samples, 0.17%)</title><rect x="81.6" y="533" width="2.0" height="15.0" fill="rgb(214,117,44)" rx="2" ry="2" />
<text  x="84.60" y="543.5" ></text>
</g>
<g >
<title>basic_atomic_cell_view&lt; (3 samples, 0.06%)</title><rect x="409.4" y="245" width="0.6" height="15.0" fill="rgb(227,164,13)" rx="2" ry="2" />
<text  x="412.39" y="255.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.06%)</title><rect x="901.6" y="373" width="0.7" height="15.0" fill="rgb(219,33,42)" rx="2" ry="2" />
<text  x="904.62" y="383.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (34 samples, 0.63%)</title><rect x="1127.2" y="501" width="7.4" height="15.0" fill="rgb(218,108,4)" rx="2" ry="2" />
<text  x="1130.16" y="511.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="261.2" y="213" width="0.2" height="15.0" fill="rgb(247,34,49)" rx="2" ry="2" />
<text  x="264.15" y="223.5" ></text>
</g>
<g >
<title>std::__equal&lt;false&gt;::equal&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;*, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const*&gt; (14 samples, 0.26%)</title><rect x="799.1" y="213" width="3.1" height="15.0" fill="rgb(253,45,40)" rx="2" ry="2" />
<text  x="802.15" y="223.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (1 samples, 0.02%)</title><rect x="816.7" y="341" width="0.2" height="15.0" fill="rgb(247,133,35)" rx="2" ry="2" />
<text  x="819.67" y="351.5" ></text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::EqualElement&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt;&amp;&gt; (8 samples, 0.15%)</title><rect x="825.6" y="373" width="1.8" height="15.0" fill="rgb(208,216,2)" rx="2" ry="2" />
<text  x="828.64" y="383.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::take_value (3 samples, 0.06%)</title><rect x="115.3" y="533" width="0.7" height="15.0" fill="rgb(218,11,52)" rx="2" ry="2" />
<text  x="118.32" y="543.5" ></text>
</g>
<g >
<title>seastar::future&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (3 samples, 0.06%)</title><rect x="793.5" y="277" width="0.6" height="15.0" fill="rgb(237,63,42)" rx="2" ry="2" />
<text  x="796.46" y="287.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (3 samples, 0.06%)</title><rect x="787.3" y="373" width="0.7" height="15.0" fill="rgb(205,197,14)" rx="2" ry="2" />
<text  x="790.32" y="383.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.02%)</title><rect x="51.6" y="213" width="0.2" height="15.0" fill="rgb(237,107,53)" rx="2" ry="2" />
<text  x="54.60" y="223.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.02%)</title><rect x="45.0" y="277" width="0.3" height="15.0" fill="rgb(231,88,35)" rx="2" ry="2" />
<text  x="48.03" y="287.5" ></text>
</g>
<g >
<title>sstables::mc::writer::write_cell (6 samples, 0.11%)</title><rect x="82.0" y="405" width="1.4" height="15.0" fill="rgb(215,24,7)" rx="2" ry="2" />
<text  x="85.04" y="415.5" ></text>
</g>
<g >
<title>seastar::reactor::run (4,958 samples, 92.00%)</title><rect x="84.7" y="613" width="1085.6" height="15.0" fill="rgb(233,60,5)" rx="2" ry="2" />
<text  x="87.67" y="623.5" >seastar::reactor::run</text>
</g>
<g >
<title>cql3_parser::CqlParser::normalColumnOperation (37 samples, 0.69%)</title><rect x="48.8" y="389" width="8.1" height="15.0" fill="rgb(235,217,23)" rx="2" ry="2" />
<text  x="51.76" y="399.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.02%)</title><rect x="45.0" y="261" width="0.3" height="15.0" fill="rgb(229,160,38)" rx="2" ry="2" />
<text  x="48.03" y="271.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (1 samples, 0.02%)</title><rect x="17.2" y="565" width="0.2" height="15.0" fill="rgb(214,65,16)" rx="2" ry="2" />
<text  x="20.23" y="575.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="57.5" y="341" width="0.2" height="15.0" fill="rgb(207,138,47)" rx="2" ry="2" />
<text  x="60.52" y="351.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_initialize_map (16 samples, 0.30%)</title><rect x="570.8" y="437" width="3.5" height="15.0" fill="rgb(248,62,0)" rx="2" ry="2" />
<text  x="573.77" y="447.5" ></text>
</g>
<g >
<title>intrusive_array&lt;memtable_entry&gt;::~intrusive_array (1 samples, 0.02%)</title><rect x="16.3" y="581" width="0.3" height="15.0" fill="rgb(228,182,8)" rx="2" ry="2" />
<text  x="19.35" y="591.5" ></text>
</g>
<g >
<title>seastar::future&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (1 samples, 0.02%)</title><rect x="77.0" y="341" width="0.2" height="15.0" fill="rgb(220,201,7)" rx="2" ry="2" />
<text  x="80.00" y="351.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::impl (2 samples, 0.04%)</title><rect x="480.6" y="341" width="0.4" height="15.0" fill="rgb(208,13,23)" rx="2" ry="2" />
<text  x="483.55" y="351.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_erase_at_end (5 samples, 0.09%)</title><rect x="402.2" y="261" width="1.1" height="15.0" fill="rgb(229,45,14)" rx="2" ry="2" />
<text  x="405.17" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, unsigned int, std::_Identity&lt;unsigned int&gt;, std::less&lt;unsigned int&gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;unsigned int&gt; &gt;::find (4 samples, 0.07%)</title><rect x="40.0" y="357" width="0.9" height="15.0" fill="rgb(235,203,54)" rx="2" ry="2" />
<text  x="43.00" y="367.5" ></text>
</g>
<g >
<title>query::result::builder::build (12 samples, 0.22%)</title><rect x="615.2" y="501" width="2.6" height="15.0" fill="rgb(227,145,31)" rx="2" ry="2" />
<text  x="618.22" y="511.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;query::querier&lt; (1 samples, 0.02%)</title><rect x="105.7" y="549" width="0.2" height="15.0" fill="rgb(209,42,30)" rx="2" ry="2" />
<text  x="108.69" y="559.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::operator (4 samples, 0.07%)</title><rect x="765.6" y="437" width="0.9" height="15.0" fill="rgb(205,189,52)" rx="2" ry="2" />
<text  x="768.65" y="447.5" ></text>
</g>
<g >
<title>std::__relocate_a&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;*, std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;*, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="50.1" y="293" width="0.2" height="15.0" fill="rgb(245,120,3)" rx="2" ry="2" />
<text  x="53.07" y="303.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::raw::update_statement, std::default_delete&lt;cql3::statements::raw::update_statement&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="66.9" y="389" width="0.2" height="15.0" fill="rgb(225,188,47)" rx="2" ry="2" />
<text  x="69.93" y="399.5" ></text>
</g>
<g >
<title>absl::container_internal::operator== (3 samples, 0.06%)</title><rect x="769.8" y="421" width="0.7" height="15.0" fill="rgb(206,75,51)" rx="2" ry="2" />
<text  x="772.81" y="431.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="57.7" y="357" width="0.3" height="15.0" fill="rgb(242,229,32)" rx="2" ry="2" />
<text  x="60.73" y="367.5" ></text>
</g>
<g >
<title>frozen_mutation::unfreeze (1 samples, 0.02%)</title><rect x="107.9" y="485" width="0.2" height="15.0" fill="rgb(228,113,42)" rx="2" ry="2" />
<text  x="110.88" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (7 samples, 0.13%)</title><rect x="985.3" y="341" width="1.5" height="15.0" fill="rgb(213,72,48)" rx="2" ry="2" />
<text  x="988.27" y="351.5" ></text>
</g>
<g >
<title>cql3::raw_value_view::raw_value_view (11 samples, 0.20%)</title><rect x="902.7" y="389" width="2.4" height="15.0" fill="rgb(211,94,38)" rx="2" ry="2" />
<text  x="905.72" y="399.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::alter_role_statement, std::default_delete&lt;cql3::statements::alter_role_statement&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::statements::alter_role_statement&gt;, void&gt; (1 samples, 0.02%)</title><rect x="67.8" y="453" width="0.2" height="15.0" fill="rgb(239,27,9)" rx="2" ry="2" />
<text  x="70.81" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;mutation_fragment&gt;::allocate (1 samples, 0.02%)</title><rect x="530.0" y="261" width="0.3" height="15.0" fill="rgb(229,217,43)" rx="2" ry="2" />
<text  x="533.04" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_M_range_initialize&lt;cql3::expr::expression const*&gt; (2 samples, 0.04%)</title><rect x="73.1" y="309" width="0.4" height="15.0" fill="rgb(232,190,44)" rx="2" ry="2" />
<text  x="76.06" y="319.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::constant&gt;  (1 samples, 0.02%)</title><rect x="864.2" y="325" width="0.2" height="15.0" fill="rgb(213,8,21)" rx="2" ry="2" />
<text  x="867.18" y="335.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (2 samples, 0.04%)</title><rect x="43.1" y="293" width="0.4" height="15.0" fill="rgb(218,119,8)" rx="2" ry="2" />
<text  x="46.06" y="303.5" ></text>
</g>
<g >
<title>partition_snapshot::slide_to_oldest (1 samples, 0.02%)</title><rect x="590.0" y="341" width="0.3" height="15.0" fill="rgb(215,86,48)" rx="2" ry="2" />
<text  x="593.04" y="351.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureIvE9then_implIZZN5query12consume_pageIL19emit_only_live_rows1E20query_result_builderEEDaR20flat_mutation_readerNS_13lw_shared_ptrI22compact_mutation_stateIXT_EL20compact_for_sstables0EEEERKNS3_15partition_sliceEOT0_mjNSt6chrono10time_pointI8gc_clockNSJ_8durationIlSt5ratioILl1ELl1EEEEEEENUlP17mutation_fragmentE_clESS_EUlDpOT_E_NS0_ISt5tupleIJSt8optionalI21clustering_key_prefixEEEEEEESH_OT_ (6 samples, 0.11%)</title><rect x="328.4" y="437" width="1.3" height="15.0" fill="rgb(236,84,23)" rx="2" ry="2" />
<text  x="331.37" y="447.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (5 samples, 0.09%)</title><rect x="762.8" y="453" width="1.1" height="15.0" fill="rgb(240,55,17)" rx="2" ry="2" />
<text  x="765.80" y="463.5" ></text>
</g>
<g >
<title>write_fragmented&lt;managed_bytes_basic_view&lt; (6 samples, 0.11%)</title><rect x="935.8" y="405" width="1.3" height="15.0" fill="rgb(208,167,17)" rx="2" ry="2" />
<text  x="938.78" y="415.5" ></text>
</g>
<g >
<title>cql3::expr::(anonymous namespace)::explode_conjunction (2 samples, 0.04%)</title><rect x="73.1" y="357" width="0.4" height="15.0" fill="rgb(254,219,43)" rx="2" ry="2" />
<text  x="76.06" y="367.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (7 samples, 0.13%)</title><rect x="753.2" y="405" width="1.5" height="15.0" fill="rgb(219,9,49)" rx="2" ry="2" />
<text  x="756.17" y="415.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;dht::token, std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt;, std::allocator&lt;std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;dht::token&gt;, std::hash&lt;dht::token&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (1 samples, 0.02%)</title><rect x="1084.0" y="357" width="0.2" height="15.0" fill="rgb(244,99,41)" rx="2" ry="2" />
<text  x="1087.02" y="367.5" ></text>
</g>
<g >
<title>seastar::basic_semaphore&lt;seastar::semaphore_default_exception_factory, std::chrono::_V2::steady_clock&gt;::wait (1 samples, 0.02%)</title><rect x="138.3" y="517" width="0.2" height="15.0" fill="rgb(205,42,35)" rx="2" ry="2" />
<text  x="141.31" y="527.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.06%)</title><rect x="834.8" y="421" width="0.7" height="15.0" fill="rgb(211,127,36)" rx="2" ry="2" />
<text  x="837.84" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (3 samples, 0.06%)</title><rect x="680.3" y="501" width="0.6" height="15.0" fill="rgb(233,119,6)" rx="2" ry="2" />
<text  x="683.25" y="511.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt;  (2 samples, 0.04%)</title><rect x="17.0" y="629" width="0.4" height="15.0" fill="rgb(252,16,19)" rx="2" ry="2" />
<text  x="20.01" y="639.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (3 samples, 0.06%)</title><rect x="1136.6" y="565" width="0.6" height="15.0" fill="rgb(228,138,53)" rx="2" ry="2" />
<text  x="1139.57" y="575.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE9then_implIZNS6_14discard_resultEvEUlDpOT_E_NS0_IvEEEET0_OT_ (18 samples, 0.33%)</title><rect x="733.0" y="533" width="4.0" height="15.0" fill="rgb(206,127,53)" rx="2" ry="2" />
<text  x="736.02" y="543.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (7 samples, 0.13%)</title><rect x="696.7" y="517" width="1.5" height="15.0" fill="rgb(229,209,53)" rx="2" ry="2" />
<text  x="699.67" y="527.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, cql3::operation::raw_update*, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; (1 samples, 0.02%)</title><rect x="50.1" y="165" width="0.2" height="15.0" fill="rgb(228,43,0)" rx="2" ry="2" />
<text  x="53.07" y="175.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (2 samples, 0.04%)</title><rect x="541.9" y="389" width="0.4" height="15.0" fill="rgb(232,23,19)" rx="2" ry="2" />
<text  x="544.86" y="399.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_type (1 samples, 0.02%)</title><rect x="22.3" y="389" width="0.2" height="15.0" fill="rgb(252,98,46)" rx="2" ry="2" />
<text  x="25.26" y="399.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::sharded&lt;database&gt;::invoke_on_all (1 samples, 0.02%)</title><rect x="17.7" y="453" width="0.2" height="15.0" fill="rgb(249,34,23)" rx="2" ry="2" />
<text  x="20.66" y="463.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::emplace_back&lt;gms::inet_address const&amp;&gt; (1 samples, 0.02%)</title><rect x="725.8" y="517" width="0.2" height="15.0" fill="rgb(237,208,34)" rx="2" ry="2" />
<text  x="728.80" y="527.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (7 samples, 0.13%)</title><rect x="1130.9" y="197" width="1.5" height="15.0" fill="rgb(234,17,2)" rx="2" ry="2" />
<text  x="1133.88" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, std::_Select1st&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; &gt;, std::less&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; &gt; &gt;::_M_create_node&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const&amp;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const&amp;&gt; (1 samples, 0.02%)</title><rect x="106.8" y="341" width="0.2" height="15.0" fill="rgb(241,110,43)" rx="2" ry="2" />
<text  x="109.78" y="351.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="1027.5" y="245" width="0.2" height="15.0" fill="rgb(245,3,37)" rx="2" ry="2" />
<text  x="1030.53" y="255.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (1 samples, 0.02%)</title><rect x="640.6" y="485" width="0.2" height="15.0" fill="rgb(227,78,52)" rx="2" ry="2" />
<text  x="643.62" y="495.5" ></text>
</g>
<g >
<title>std::queue&lt;reader_concurrency_semaphore::entry, seastar::circular_buffer&lt;reader_concurrency_semaphore::entry, std::allocator&lt;reader_concurrency_semaphore::entry&gt; &gt; &gt;::pop (8 samples, 0.15%)</title><rect x="649.6" y="549" width="1.7" height="15.0" fill="rgb(221,129,16)" rx="2" ry="2" />
<text  x="652.60" y="559.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.07%)</title><rect x="959.9" y="453" width="0.8" height="15.0" fill="rgb(236,182,10)" rx="2" ry="2" />
<text  x="962.87" y="463.5" ></text>
</g>
<g >
<title>cql3::expr::expression::operator= (1 samples, 0.02%)</title><rect x="50.9" y="357" width="0.3" height="15.0" fill="rgb(227,196,52)" rx="2" ry="2" />
<text  x="53.95" y="367.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (1 samples, 0.02%)</title><rect x="606.7" y="485" width="0.2" height="15.0" fill="rgb(227,166,43)" rx="2" ry="2" />
<text  x="609.68" y="495.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (34 samples, 0.63%)</title><rect x="1127.2" y="437" width="7.4" height="15.0" fill="rgb(246,134,27)" rx="2" ry="2" />
<text  x="1130.16" y="447.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (1 samples, 0.02%)</title><rect x="907.5" y="421" width="0.3" height="15.0" fill="rgb(220,199,29)" rx="2" ry="2" />
<text  x="910.54" y="431.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (1 samples, 0.02%)</title><rect x="50.9" y="341" width="0.3" height="15.0" fill="rgb(212,35,15)" rx="2" ry="2" />
<text  x="53.95" y="351.5" ></text>
</g>
<g >
<title>seastar::promise&lt;void&gt;::promise (3 samples, 0.06%)</title><rect x="1026.9" y="229" width="0.6" height="15.0" fill="rgb(252,82,51)" rx="2" ry="2" />
<text  x="1029.87" y="239.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_rec (1 samples, 0.02%)</title><rect x="21.2" y="453" width="0.2" height="15.0" fill="rgb(239,204,50)" rx="2" ry="2" />
<text  x="24.17" y="463.5" ></text>
</g>
<g >
<title>seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;::swap (4 samples, 0.07%)</title><rect x="837.2" y="501" width="0.9" height="15.0" fill="rgb(219,137,42)" rx="2" ry="2" />
<text  x="840.25" y="511.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.02%)</title><rect x="41.1" y="405" width="0.2" height="15.0" fill="rgb(215,155,17)" rx="2" ry="2" />
<text  x="44.09" y="415.5" ></text>
</g>
<g >
<title>std::function&lt;flat_mutation_reader  (485 samples, 9.00%)</title><rect x="454.9" y="453" width="106.2" height="15.0" fill="rgb(218,83,10)" rx="2" ry="2" />
<text  x="457.94" y="463.5" >std::functio..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (1 samples, 0.02%)</title><rect x="38.5" y="325" width="0.2" height="15.0" fill="rgb(222,214,45)" rx="2" ry="2" />
<text  x="41.47" y="335.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::deallocate (1 samples, 0.02%)</title><rect x="534.9" y="293" width="0.2" height="15.0" fill="rgb(220,11,20)" rx="2" ry="2" />
<text  x="537.86" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree_header::_Rb_tree_header (1 samples, 0.02%)</title><rect x="866.2" y="469" width="0.2" height="15.0" fill="rgb(228,159,50)" rx="2" ry="2" />
<text  x="869.15" y="479.5" ></text>
</g>
<g >
<title>database::apply_with_commitlog (34 samples, 0.63%)</title><rect x="1117.5" y="373" width="7.5" height="15.0" fill="rgb(222,35,16)" rx="2" ry="2" />
<text  x="1120.52" y="383.5" ></text>
</g>
<g >
<title>utils::timed_rate_moving_average_and_histogram::mark&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; (4 samples, 0.07%)</title><rect x="694.7" y="533" width="0.9" height="15.0" fill="rgb(251,2,44)" rx="2" ry="2" />
<text  x="697.70" y="543.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (2 samples, 0.04%)</title><rect x="46.3" y="213" width="0.5" height="15.0" fill="rgb(217,139,51)" rx="2" ry="2" />
<text  x="49.35" y="223.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (1 samples, 0.02%)</title><rect x="17.7" y="597" width="0.2" height="15.0" fill="rgb(208,108,36)" rx="2" ry="2" />
<text  x="20.66" y="607.5" ></text>
</g>
<g >
<title>service::never_speculating_read_executor::never_speculating_read_executor (24 samples, 0.45%)</title><rect x="1064.8" y="389" width="5.2" height="15.0" fill="rgb(221,44,24)" rx="2" ry="2" />
<text  x="1067.75" y="399.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="1127.8" y="373" width="0.2" height="15.0" fill="rgb(248,166,5)" rx="2" ry="2" />
<text  x="1130.81" y="383.5" ></text>
</g>
<g >
<title>mutation_reader_merger::maybe_add_readers_at_partition_boundary (3 samples, 0.06%)</title><rect x="183.2" y="373" width="0.7" height="15.0" fill="rgb(212,120,10)" rx="2" ry="2" />
<text  x="186.20" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;column_definition const*, std::pair&lt;column_definition const* const, seastar::shared_ptr&lt;cql3::restrictions::single_column_restriction&gt; &gt;, std::_Select1st&lt;std::pair&lt;column_definition const* const, seastar::shared_ptr&lt;cql3::restrictions::single_column_restriction&gt; &gt; &gt;, cql3::restrictions::single_column_restrictions::column_definition_comparator, std::allocator&lt;std::pair&lt;column_definition const* const, seastar::shared_ptr&lt;cql3::restrictions::single_column_restriction&gt; &gt; &gt; &gt;::~_Rb_tree (1 samples, 0.02%)</title><rect x="664.3" y="469" width="0.2" height="15.0" fill="rgb(226,196,34)" rx="2" ry="2" />
<text  x="667.27" y="479.5" ></text>
</g>
<g >
<title>skip_empty_fragments&lt;managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="510.3" y="261" width="0.3" height="15.0" fill="rgb(217,88,31)" rx="2" ry="2" />
<text  x="513.33" y="271.5" ></text>
</g>
<g >
<title>std::variant&lt;fragmented_temporary_buffer::view, managed_bytes_basic_view&lt; (3 samples, 0.06%)</title><rect x="904.5" y="373" width="0.6" height="15.0" fill="rgb(253,108,44)" rx="2" ry="2" />
<text  x="907.47" y="383.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::unique_ptr (1 samples, 0.02%)</title><rect x="56.4" y="325" width="0.2" height="15.0" fill="rgb(254,57,50)" rx="2" ry="2" />
<text  x="59.42" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.02%)</title><rect x="1034.5" y="293" width="0.3" height="15.0" fill="rgb(218,42,22)" rx="2" ry="2" />
<text  x="1037.54" y="303.5" ></text>
</g>
<g >
<title>std::_Optional_base_impl&lt;mutation_querier, std::_Optional_base&lt;mutation_querier, false, false&gt; &gt;::_M_construct&lt;mutation_querier&gt; (7 samples, 0.13%)</title><rect x="354.9" y="229" width="1.5" height="15.0" fill="rgb(210,79,0)" rx="2" ry="2" />
<text  x="357.87" y="239.5" ></text>
</g>
<g >
<title>row_cache::do_update (1 samples, 0.02%)</title><rect x="11.8" y="629" width="0.2" height="15.0" fill="rgb(249,26,33)" rx="2" ry="2" />
<text  x="14.75" y="639.5" ></text>
</g>
<g >
<title>service::shared_mutation::shared_mutation (16 samples, 0.30%)</title><rect x="1129.3" y="277" width="3.6" height="15.0" fill="rgb(217,77,26)" rx="2" ry="2" />
<text  x="1132.35" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt;::~vector (3 samples, 0.06%)</title><rect x="1133.9" y="405" width="0.7" height="15.0" fill="rgb(230,193,41)" rx="2" ry="2" />
<text  x="1136.95" y="415.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::do_execute (28 samples, 0.52%)</title><rect x="860.2" y="501" width="6.2" height="15.0" fill="rgb(223,47,7)" rx="2" ry="2" />
<text  x="863.24" y="511.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::get0 (6 samples, 0.11%)</title><rect x="626.8" y="501" width="1.3" height="15.0" fill="rgb(212,202,8)" rx="2" ry="2" />
<text  x="629.82" y="511.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.09%)</title><rect x="967.1" y="437" width="1.1" height="15.0" fill="rgb(218,51,18)" rx="2" ry="2" />
<text  x="970.09" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="556.5" y="309" width="0.3" height="15.0" fill="rgb(235,22,54)" rx="2" ry="2" />
<text  x="559.54" y="319.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;dht::token, std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt;, std::allocator&lt;std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;dht::token&gt;, std::hash&lt;dht::token&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (13 samples, 0.24%)</title><rect x="1081.2" y="325" width="2.8" height="15.0" fill="rgb(208,130,34)" rx="2" ry="2" />
<text  x="1084.17" y="335.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="57.1" y="405" width="0.2" height="15.0" fill="rgb(250,214,41)" rx="2" ry="2" />
<text  x="60.08" y="415.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="56.2" y="309" width="0.2" height="15.0" fill="rgb(209,217,42)" rx="2" ry="2" />
<text  x="59.20" y="319.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (4 samples, 0.07%)</title><rect x="1142.5" y="549" width="0.9" height="15.0" fill="rgb(205,27,0)" rx="2" ry="2" />
<text  x="1145.48" y="559.5" ></text>
</g>
<g >
<title>seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;::check (1 samples, 0.02%)</title><rect x="832.2" y="485" width="0.2" height="15.0" fill="rgb(254,150,2)" rx="2" ry="2" />
<text  x="835.21" y="495.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mQUOTED_NAME (1 samples, 0.02%)</title><rect x="39.3" y="341" width="0.3" height="15.0" fill="rgb(212,83,19)" rx="2" ry="2" />
<text  x="42.34" y="351.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.02%)</title><rect x="56.0" y="165" width="0.2" height="15.0" fill="rgb(222,59,25)" rx="2" ry="2" />
<text  x="58.98" y="175.5" ></text>
</g>
<g >
<title>table::estimate_read_memory_cost (2 samples, 0.04%)</title><rect x="1036.5" y="325" width="0.4" height="15.0" fill="rgb(209,228,8)" rx="2" ry="2" />
<text  x="1039.51" y="335.5" ></text>
</g>
<g >
<title>reader_selector::has_new_readers (1 samples, 0.02%)</title><rect x="186.9" y="325" width="0.2" height="15.0" fill="rgb(241,185,35)" rx="2" ry="2" />
<text  x="189.92" y="335.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::thread_context, std::default_delete&lt;seastar::thread_context&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="1168.3" y="501" width="0.2" height="15.0" fill="rgb(243,14,48)" rx="2" ry="2" />
<text  x="1171.32" y="511.5" ></text>
</g>
<g >
<title>logalloc::basic_region_impl::set_reclaiming_enabled (1 samples, 0.02%)</title><rect x="463.0" y="405" width="0.3" height="15.0" fill="rgb(246,167,1)" rx="2" ry="2" />
<text  x="466.04" y="415.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::restrictions::has_eq_null (4 samples, 0.07%)</title><rect x="861.1" y="405" width="0.9" height="15.0" fill="rgb(243,0,24)" rx="2" ry="2" />
<text  x="864.12" y="415.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::make_ready&lt; (1 samples, 0.02%)</title><rect x="663.2" y="549" width="0.2" height="15.0" fill="rgb(205,9,1)" rx="2" ry="2" />
<text  x="666.17" y="559.5" ></text>
</g>
<g >
<title>nonwrapping_interval&lt;clustering_key_prefix&gt;::make_open_ended_both_sides (1 samples, 0.02%)</title><rect x="863.1" y="437" width="0.2" height="15.0" fill="rgb(219,225,36)" rx="2" ry="2" />
<text  x="866.09" y="447.5" ></text>
</g>
<g >
<title>query::partition_slice::row_ranges (1 samples, 0.02%)</title><rect x="349.2" y="229" width="0.2" height="15.0" fill="rgb(249,196,12)" rx="2" ry="2" />
<text  x="352.18" y="239.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.02%)</title><rect x="1030.8" y="277" width="0.2" height="15.0" fill="rgb(218,31,51)" rx="2" ry="2" />
<text  x="1033.81" y="287.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.02%)</title><rect x="80.7" y="629" width="0.2" height="15.0" fill="rgb(242,74,19)" rx="2" ry="2" />
<text  x="83.73" y="639.5" ></text>
</g>
<g >
<title>database::find_schema (1 samples, 0.02%)</title><rect x="780.8" y="453" width="0.2" height="15.0" fill="rgb(207,222,25)" rx="2" ry="2" />
<text  x="783.76" y="463.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::do_fill_buffer (355 samples, 6.59%)</title><rect x="202.7" y="325" width="77.7" height="15.0" fill="rgb(206,30,39)" rx="2" ry="2" />
<text  x="205.69" y="335.5" >partitio..</text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (2 samples, 0.04%)</title><rect x="394.7" y="213" width="0.5" height="15.0" fill="rgb(220,188,49)" rx="2" ry="2" />
<text  x="397.72" y="223.5" ></text>
</g>
<g >
<title>cql3::query_processor::parse_statement (222 samples, 4.12%)</title><rect x="20.1" y="533" width="48.6" height="15.0" fill="rgb(225,72,25)" rx="2" ry="2" />
<text  x="23.07" y="543.5" >cql3..</text>
</g>
<g >
<title>std::type_info::operator== (1 samples, 0.02%)</title><rect x="1166.8" y="469" width="0.2" height="15.0" fill="rgb(248,228,48)" rx="2" ry="2" />
<text  x="1169.79" y="479.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::raw::parsed_statement, std::default_delete&lt;cql3::statements::raw::parsed_statement&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="66.5" y="405" width="0.2" height="15.0" fill="rgb(233,128,35)" rx="2" ry="2" />
<text  x="69.49" y="415.5" ></text>
</g>
<g >
<title>ser::serializer&lt;ser::mutation_partition_view&gt;::read&lt;seastar::simple_memory_input_stream&gt; (1 samples, 0.02%)</title><rect x="1118.0" y="293" width="0.2" height="15.0" fill="rgb(217,144,21)" rx="2" ry="2" />
<text  x="1120.96" y="303.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (2 samples, 0.04%)</title><rect x="58.0" y="357" width="0.4" height="15.0" fill="rgb(209,131,38)" rx="2" ry="2" />
<text  x="60.95" y="367.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::statements::raw::update_statement, cql3::cf_name, std::unique_ptr&lt;cql3::attributes::raw, std::default_delete&lt;cql3::attributes::raw&gt; &gt;, std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;, std::vector&lt;seastar::shared_ptr&lt;cql3::relation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::relation&gt; &gt; &gt;, std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, seastar::lw_shared_ptr&lt;cql3::column_condition::raw&gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, seastar::lw_shared_ptr&lt;cql3::column_condition::raw&gt; &gt; &gt; &gt;, bool&amp;&gt; (1 samples, 0.02%)</title><rect x="63.2" y="421" width="0.2" height="15.0" fill="rgb(212,70,29)" rx="2" ry="2" />
<text  x="66.21" y="431.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_singular (126 samples, 2.34%)</title><rect x="1139.6" y="565" width="27.6" height="15.0" fill="rgb(216,103,3)" rx="2" ry="2" />
<text  x="1142.64" y="575.5" >s..</text>
</g>
<g >
<title>cql3::query_processor::execute_internal (1 samples, 0.02%)</title><rect x="11.1" y="485" width="0.2" height="15.0" fill="rgb(218,114,20)" rx="2" ry="2" />
<text  x="14.09" y="495.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (2 samples, 0.04%)</title><rect x="1093.2" y="469" width="0.5" height="15.0" fill="rgb(236,193,46)" rx="2" ry="2" />
<text  x="1096.22" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.07%)</title><rect x="790.0" y="325" width="0.8" height="15.0" fill="rgb(241,54,17)" rx="2" ry="2" />
<text  x="792.95" y="335.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::trivial_direct_move&lt;16ul&gt; (3 samples, 0.06%)</title><rect x="1023.6" y="213" width="0.6" height="15.0" fill="rgb(239,127,2)" rx="2" ry="2" />
<text  x="1026.59" y="223.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (1 samples, 0.02%)</title><rect x="569.9" y="405" width="0.2" height="15.0" fill="rgb(212,55,47)" rx="2" ry="2" />
<text  x="572.89" y="415.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::maybe_decay_reserve (1 samples, 0.02%)</title><rect x="551.3" y="373" width="0.2" height="15.0" fill="rgb(251,57,9)" rx="2" ry="2" />
<text  x="554.28" y="383.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (3 samples, 0.06%)</title><rect x="55.5" y="309" width="0.7" height="15.0" fill="rgb(226,169,47)" rx="2" ry="2" />
<text  x="58.54" y="319.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (4 samples, 0.07%)</title><rect x="1170.5" y="693" width="0.9" height="15.0" fill="rgb(233,10,51)" rx="2" ry="2" />
<text  x="1173.51" y="703.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.02%)</title><rect x="990.3" y="357" width="0.2" height="15.0" fill="rgb(209,38,50)" rx="2" ry="2" />
<text  x="993.30" y="367.5" ></text>
</g>
<g >
<title>query::partition_slice::row_ranges (3 samples, 0.06%)</title><rect x="542.3" y="389" width="0.7" height="15.0" fill="rgb(228,30,2)" rx="2" ry="2" />
<text  x="545.30" y="399.5" ></text>
</g>
<g >
<title>locator::abstract_replication_strategy::get_natural_endpoints (50 samples, 0.93%)</title><rect x="1073.1" y="357" width="10.9" height="15.0" fill="rgb(248,10,43)" rx="2" ry="2" />
<text  x="1076.07" y="367.5" ></text>
</g>
<g >
<title>bplus::node&lt;long, intrusive_array&lt;cache_entry&gt;, dht::raw_token_less_comparator, 16ul,  (1 samples, 0.02%)</title><rect x="16.8" y="581" width="0.2" height="15.0" fill="rgb(209,42,2)" rx="2" ry="2" />
<text  x="19.79" y="591.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;std::function&lt;flat_mutation_reader  (1 samples, 0.02%)</title><rect x="644.1" y="469" width="0.2" height="15.0" fill="rgb(223,64,2)" rx="2" ry="2" />
<text  x="647.12" y="479.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::guard (1 samples, 0.02%)</title><rect x="200.9" y="325" width="0.3" height="15.0" fill="rgb(254,197,26)" rx="2" ry="2" />
<text  x="203.94" y="335.5" ></text>
</g>
<g >
<title>service::storage_proxy::do_mutate (29 samples, 0.54%)</title><rect x="1127.6" y="405" width="6.3" height="15.0" fill="rgb(240,73,39)" rx="2" ry="2" />
<text  x="1130.60" y="415.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::trivial_direct_move&lt;16ul&gt; (1 samples, 0.02%)</title><rect x="1027.7" y="213" width="0.3" height="15.0" fill="rgb(237,146,24)" rx="2" ry="2" />
<text  x="1030.75" y="223.5" ></text>
</g>
<g >
<title>utils::tuple_hash::operator (1 samples, 0.02%)</title><rect x="761.7" y="389" width="0.2" height="15.0" fill="rgb(224,155,1)" rx="2" ry="2" />
<text  x="764.71" y="399.5" ></text>
</g>
<g >
<title>allocation_strategy::get_standard_migrator&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::leaf_node&gt; (1 samples, 0.02%)</title><rect x="244.5" y="149" width="0.2" height="15.0" fill="rgb(218,8,0)" rx="2" ry="2" />
<text  x="247.51" y="159.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take (1 samples, 0.02%)</title><rect x="630.5" y="501" width="0.3" height="15.0" fill="rgb(251,202,17)" rx="2" ry="2" />
<text  x="633.55" y="511.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;compact_for_query&lt; (1 samples, 0.02%)</title><rect x="443.5" y="421" width="0.3" height="15.0" fill="rgb(248,26,7)" rx="2" ry="2" />
<text  x="446.55" y="431.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="74.4" y="389" width="0.2" height="15.0" fill="rgb(237,37,10)" rx="2" ry="2" />
<text  x="77.38" y="399.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (3 samples, 0.06%)</title><rect x="1091.7" y="453" width="0.6" height="15.0" fill="rgb(212,137,23)" rx="2" ry="2" />
<text  x="1094.68" y="463.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;mutation_querier&gt;::_M_reset (1 samples, 0.02%)</title><rect x="446.2" y="405" width="0.2" height="15.0" fill="rgb(239,37,15)" rx="2" ry="2" />
<text  x="449.18" y="415.5" ></text>
</g>
<g >
<title>bplus::searcher&lt;long, long, dht::raw_token_less_comparator, 16ul,  (1 samples, 0.02%)</title><rect x="1119.1" y="229" width="0.2" height="15.0" fill="rgb(224,44,34)" rx="2" ry="2" />
<text  x="1122.06" y="239.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_restrictions::size (2 samples, 0.04%)</title><rect x="881.3" y="485" width="0.4" height="15.0" fill="rgb(224,76,35)" rx="2" ry="2" />
<text  x="884.26" y="495.5" ></text>
</g>
<g >
<title>std::forward_as_tuple&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt; &gt; (1 samples, 0.02%)</title><rect x="812.5" y="341" width="0.2" height="15.0" fill="rgb(243,71,38)" rx="2" ry="2" />
<text  x="815.51" y="351.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take (2 samples, 0.04%)</title><rect x="139.6" y="517" width="0.5" height="15.0" fill="rgb(225,216,11)" rx="2" ry="2" />
<text  x="142.63" y="527.5" ></text>
</g>
<g >
<title>write_cell&lt;ser::qr_clustered_row__cells__cells&lt;bytes_ostream&gt; &gt; (131 samples, 2.43%)</title><rect x="371.7" y="245" width="28.7" height="15.0" fill="rgb(207,137,32)" rx="2" ry="2" />
<text  x="374.73" y="255.5" >wr..</text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (221 samples, 4.10%)</title><rect x="20.3" y="501" width="48.4" height="15.0" fill="rgb(207,135,38)" rx="2" ry="2" />
<text  x="23.29" y="511.5" >cql3..</text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::empty (1 samples, 0.02%)</title><rect x="952.2" y="469" width="0.2" height="15.0" fill="rgb(210,190,0)" rx="2" ry="2" />
<text  x="955.20" y="479.5" ></text>
</g>
<g >
<title>v3_columns::from_v2_schema (1 samples, 0.02%)</title><rect x="107.2" y="421" width="0.2" height="15.0" fill="rgb(226,140,54)" rx="2" ry="2" />
<text  x="110.22" y="431.5" ></text>
</g>
<g >
<title>db::schema_tables::all_tables (1 samples, 0.02%)</title><rect x="17.7" y="341" width="0.2" height="15.0" fill="rgb(244,136,24)" rx="2" ry="2" />
<text  x="20.66" y="351.5" ></text>
</g>
<g >
<title>atomic_cell_or_collection::copy (55 samples, 1.02%)</title><rect x="230.5" y="181" width="12.0" height="15.0" fill="rgb(210,26,17)" rx="2" ry="2" />
<text  x="233.50" y="191.5" ></text>
</g>
<g >
<title>query_result_builder::consume (1 samples, 0.02%)</title><rect x="701.5" y="357" width="0.2" height="15.0" fill="rgb(220,0,34)" rx="2" ry="2" />
<text  x="704.49" y="367.5" ></text>
</g>
<g >
<title>std::default_delete&lt;bytes_ostream::chunk&gt;::operator (3 samples, 0.06%)</title><rect x="100.7" y="485" width="0.6" height="15.0" fill="rgb(232,16,54)" rx="2" ry="2" />
<text  x="103.65" y="495.5" ></text>
</g>
<g >
<title>database::find_column_family (8 samples, 0.15%)</title><rect x="1052.5" y="405" width="1.7" height="15.0" fill="rgb(228,88,38)" rx="2" ry="2" />
<text  x="1055.49" y="415.5" ></text>
</g>
<g >
<title>cql3::operation::set_value::prepare (6 samples, 0.11%)</title><rect x="70.2" y="485" width="1.3" height="15.0" fill="rgb(251,7,51)" rx="2" ry="2" />
<text  x="73.22" y="495.5" ></text>
</g>
<g >
<title>auth::data_resource_view::data_resource_view (1 samples, 0.02%)</title><rect x="819.1" y="389" width="0.2" height="15.0" fill="rgb(212,77,52)" rx="2" ry="2" />
<text  x="822.07" y="399.5" ></text>
</g>
<g >
<title>absl::container_internal::operator== (1 samples, 0.02%)</title><rect x="824.3" y="389" width="0.2" height="15.0" fill="rgb(254,122,0)" rx="2" ry="2" />
<text  x="827.33" y="399.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.02%)</title><rect x="55.1" y="181" width="0.2" height="15.0" fill="rgb(221,33,34)" rx="2" ry="2" />
<text  x="58.11" y="191.5" ></text>
</g>
<g >
<title>reader_permit::consume_resources (1 samples, 0.02%)</title><rect x="213.0" y="261" width="0.2" height="15.0" fill="rgb(231,200,52)" rx="2" ry="2" />
<text  x="215.98" y="271.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.06%)</title><rect x="644.3" y="453" width="0.7" height="15.0" fill="rgb(250,199,44)" rx="2" ry="2" />
<text  x="647.34" y="463.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (4 samples, 0.07%)</title><rect x="1056.7" y="325" width="0.8" height="15.0" fill="rgb(228,149,43)" rx="2" ry="2" />
<text  x="1059.65" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="98.7" y="501" width="0.2" height="15.0" fill="rgb(231,99,41)" rx="2" ry="2" />
<text  x="101.68" y="511.5" ></text>
</g>
<g >
<title>partition_key::legacy_tri_compare (42 samples, 0.78%)</title><rect x="506.6" y="325" width="9.2" height="15.0" fill="rgb(250,7,29)" rx="2" ry="2" />
<text  x="509.61" y="335.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, unsigned long&gt;, std::allocator&lt;std::pair&lt;utils::UUID const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (2 samples, 0.04%)</title><rect x="1125.4" y="309" width="0.4" height="15.0" fill="rgb(244,104,48)" rx="2" ry="2" />
<text  x="1128.41" y="319.5" ></text>
</g>
<g >
<title>_ZSt5applyIZN7seastar8internal12do_with_implISt4pairIN4auth17role_or_anonymousENS4_8resourceEEZNS4_17permissions_cache3getERKS5_RKS6_E3$_0JEEEDaOT_OT0_DpOT1_EUlDpOT_E_St5tupleIJOS7_EEEDcSF_SH_ (5 samples, 0.09%)</title><rect x="791.7" y="325" width="1.1" height="15.0" fill="rgb(244,46,6)" rx="2" ry="2" />
<text  x="794.70" y="335.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.02%)</title><rect x="51.6" y="181" width="0.2" height="15.0" fill="rgb(242,133,7)" rx="2" ry="2" />
<text  x="54.60" y="191.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (29 samples, 0.54%)</title><rect x="860.2" y="517" width="6.4" height="15.0" fill="rgb(233,104,11)" rx="2" ry="2" />
<text  x="863.24" y="527.5" ></text>
</g>
<g >
<title>logalloc::region_impl::free (1 samples, 0.02%)</title><rect x="10.9" y="581" width="0.2" height="15.0" fill="rgb(212,9,15)" rx="2" ry="2" />
<text  x="13.88" y="591.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;std::allocator&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="38.7" y="325" width="0.2" height="15.0" fill="rgb(237,45,49)" rx="2" ry="2" />
<text  x="41.68" y="335.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="50.1" y="181" width="0.2" height="15.0" fill="rgb(214,167,22)" rx="2" ry="2" />
<text  x="53.07" y="191.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;bool  (2 samples, 0.04%)</title><rect x="574.3" y="453" width="0.4" height="15.0" fill="rgb(250,112,3)" rx="2" ry="2" />
<text  x="577.27" y="463.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_last_fragment_kind, 4ul&gt;::emplace_back&lt;std::_List_iterator&lt;flat_mutation_reader&gt;, mutation_fragment::kind&gt; (1 samples, 0.02%)</title><rect x="305.4" y="373" width="0.2" height="15.0" fill="rgb(227,83,1)" rx="2" ry="2" />
<text  x="308.38" y="383.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.04%)</title><rect x="55.5" y="213" width="0.5" height="15.0" fill="rgb(225,167,48)" rx="2" ry="2" />
<text  x="58.54" y="223.5" ></text>
</g>
<g >
<title>_ZSt5applyIZN7seastar8internal12do_with_implIN4auth17role_or_anonymousEZNS3_15get_permissionsERKNS3_7serviceERKNS3_18authenticated_userERKNS3_8resourceEE3$_9JEEEDaOT_OT0_DpOT1_EUlDpOT_E_St5tupleIJOS4_EEEDcSG_SI_ (1 samples, 0.02%)</title><rect x="788.2" y="373" width="0.2" height="15.0" fill="rgb(249,1,20)" rx="2" ry="2" />
<text  x="791.20" y="383.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::entry::entry (16 samples, 0.30%)</title><rect x="1023.1" y="229" width="3.6" height="15.0" fill="rgb(235,184,10)" rx="2" ry="2" />
<text  x="1026.15" y="239.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.02%)</title><rect x="58.6" y="309" width="0.2" height="15.0" fill="rgb(227,78,31)" rx="2" ry="2" />
<text  x="61.61" y="319.5" ></text>
</g>
<g >
<title>mutation_source::make_reader (489 samples, 9.07%)</title><rect x="454.1" y="469" width="107.0" height="15.0" fill="rgb(234,31,16)" rx="2" ry="2" />
<text  x="457.06" y="479.5" >mutation_sour..</text>
</g>
<g >
<title>auth::operator== (1 samples, 0.02%)</title><rect x="798.3" y="213" width="0.2" height="15.0" fill="rgb(207,212,15)" rx="2" ry="2" />
<text  x="801.27" y="223.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;cql3::column_identifier_raw, false&gt;::make&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, bool&gt; (1 samples, 0.02%)</title><rect x="47.4" y="373" width="0.3" height="15.0" fill="rgb(225,100,25)" rx="2" ry="2" />
<text  x="50.44" y="383.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (4 samples, 0.07%)</title><rect x="928.3" y="389" width="0.9" height="15.0" fill="rgb(239,99,36)" rx="2" ry="2" />
<text  x="931.34" y="399.5" ></text>
</g>
<g >
<title>locator::simple_strategy::calculate_natural_endpoints (1 samples, 0.02%)</title><rect x="109.6" y="549" width="0.2" height="15.0" fill="rgb(223,226,46)" rx="2" ry="2" />
<text  x="112.63" y="559.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::trivial_direct_destroy (5 samples, 0.09%)</title><rect x="130.4" y="453" width="1.1" height="15.0" fill="rgb(242,183,41)" rx="2" ry="2" />
<text  x="133.43" y="463.5" ></text>
</g>
<g >
<title>service::endpoints_to_replica_ids (14 samples, 0.26%)</title><rect x="1145.8" y="533" width="3.0" height="15.0" fill="rgb(210,16,36)" rx="2" ry="2" />
<text  x="1148.77" y="543.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;void&gt;, database*, seastar::lw_shared_ptr&lt;schema const&gt;, frozen_mutation const&amp;, tracing::trace_state_ptr, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, seastar::bool_class&lt;db::force_sync_tag&gt; &gt;::do_flush (42 samples, 0.78%)</title><rect x="1117.5" y="549" width="9.2" height="15.0" fill="rgb(226,20,13)" rx="2" ry="2" />
<text  x="1120.52" y="559.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, enum_set&lt;super_enum&lt;auth::permission,  (1 samples, 0.02%)</title><rect x="77.0" y="357" width="0.2" height="15.0" fill="rgb(222,81,39)" rx="2" ry="2" />
<text  x="80.00" y="367.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="918.0" y="405" width="0.3" height="15.0" fill="rgb(228,147,47)" rx="2" ry="2" />
<text  x="921.05" y="415.5" ></text>
</g>
<g >
<title>ser::serializer&lt;ser::row_view&gt;::read&lt;seastar::simple_memory_input_stream&gt; (1 samples, 0.02%)</title><rect x="1124.1" y="293" width="0.2" height="15.0" fill="rgb(246,59,2)" rx="2" ry="2" />
<text  x="1127.09" y="303.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.02%)</title><rect x="58.6" y="341" width="0.2" height="15.0" fill="rgb(214,0,9)" rx="2" ry="2" />
<text  x="61.61" y="351.5" ></text>
</g>
<g >
<title>make_partition_snapshot_flat_reader_from_snp_schema (87 samples, 1.61%)</title><rect x="519.1" y="389" width="19.0" height="15.0" fill="rgb(238,195,5)" rx="2" ry="2" />
<text  x="522.09" y="399.5" ></text>
</g>
<g >
<title>mutation_reader_merger::~mutation_reader_merger (10 samples, 0.19%)</title><rect x="476.6" y="373" width="2.2" height="15.0" fill="rgb(228,33,40)" rx="2" ry="2" />
<text  x="479.61" y="383.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (1 samples, 0.02%)</title><rect x="60.8" y="293" width="0.2" height="15.0" fill="rgb(241,150,50)" rx="2" ry="2" />
<text  x="63.80" y="303.5" ></text>
</g>
<g >
<title>TLS init function for bound_view::_empty_prefix (1 samples, 0.02%)</title><rect x="288.5" y="229" width="0.2" height="15.0" fill="rgb(212,206,10)" rx="2" ry="2" />
<text  x="291.52" y="239.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="58.8" y="309" width="0.2" height="15.0" fill="rgb(213,8,8)" rx="2" ry="2" />
<text  x="61.83" y="319.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, cql3::statements::create_type_statement*, std::default_delete&lt;cql3::statements::create_type_statement&gt; &gt; (1 samples, 0.02%)</title><rect x="64.7" y="405" width="0.3" height="15.0" fill="rgb(218,166,42)" rx="2" ry="2" />
<text  x="67.74" y="415.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (1 samples, 0.02%)</title><rect x="520.8" y="373" width="0.3" height="15.0" fill="rgb(221,76,19)" rx="2" ry="2" />
<text  x="523.84" y="383.5" ></text>
</g>
<g >
<title>dht::tri_compare (3 samples, 0.06%)</title><rect x="1074.2" y="309" width="0.6" height="15.0" fill="rgb(242,210,43)" rx="2" ry="2" />
<text  x="1077.17" y="319.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::do_fill_buffer (1 samples, 0.02%)</title><rect x="79.4" y="437" width="0.2" height="15.0" fill="rgb(244,124,35)" rx="2" ry="2" />
<text  x="82.41" y="447.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.02%)</title><rect x="55.1" y="165" width="0.2" height="15.0" fill="rgb(239,114,16)" rx="2" ry="2" />
<text  x="58.11" y="175.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (2 samples, 0.04%)</title><rect x="718.4" y="517" width="0.4" height="15.0" fill="rgb(228,185,13)" rx="2" ry="2" />
<text  x="721.35" y="527.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;managed_bytes&gt;::dispose (1 samples, 0.02%)</title><rect x="908.8" y="421" width="0.3" height="15.0" fill="rgb(239,184,0)" rx="2" ry="2" />
<text  x="911.85" y="431.5" ></text>
</g>
<g >
<title>range_tombstone_stream::empty (2 samples, 0.04%)</title><rect x="278.5" y="293" width="0.4" height="15.0" fill="rgb(206,165,20)" rx="2" ry="2" />
<text  x="281.45" y="303.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.06%)</title><rect x="682.7" y="549" width="0.6" height="15.0" fill="rgb(218,152,13)" rx="2" ry="2" />
<text  x="685.66" y="559.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::digest_read_result&gt;::get0 (2 samples, 0.04%)</title><rect x="707.4" y="533" width="0.4" height="15.0" fill="rgb(220,16,22)" rx="2" ry="2" />
<text  x="710.40" y="543.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (2 samples, 0.04%)</title><rect x="45.3" y="405" width="0.4" height="15.0" fill="rgb(214,67,5)" rx="2" ry="2" />
<text  x="48.25" y="415.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.02%)</title><rect x="50.5" y="245" width="0.2" height="15.0" fill="rgb(232,1,49)" rx="2" ry="2" />
<text  x="53.51" y="255.5" ></text>
</g>
<g >
<title>LZ4_compress_fast_extState (1 samples, 0.02%)</title><rect x="10.0" y="693" width="0.2" height="15.0" fill="rgb(240,164,5)" rx="2" ry="2" />
<text  x="13.00" y="703.5" ></text>
</g>
<g >
<title>db::schema_tables::do_merge_schema (3 samples, 0.06%)</title><rect x="106.8" y="565" width="0.6" height="15.0" fill="rgb(233,189,21)" rx="2" ry="2" />
<text  x="109.78" y="575.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.04%)</title><rect x="43.1" y="325" width="0.4" height="15.0" fill="rgb(223,32,24)" rx="2" ry="2" />
<text  x="46.06" y="335.5" ></text>
</g>
<g >
<title>seastar::promise&lt;void&gt;::promise (6 samples, 0.11%)</title><rect x="135.7" y="453" width="1.3" height="15.0" fill="rgb(211,107,53)" rx="2" ry="2" />
<text  x="138.69" y="463.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;std::optional&lt;auth::resource&gt; &gt;, seastar::future&lt;bool&gt; &gt;, std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;std::optional&lt;auth::resource&gt; &gt;, seastar::future&lt;bool&gt; &gt; &gt; &gt;::~unique_ptr (10 samples, 0.19%)</title><rect x="815.1" y="389" width="2.2" height="15.0" fill="rgb(215,192,17)" rx="2" ry="2" />
<text  x="818.13" y="399.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;bool&gt;::take (1 samples, 0.02%)</title><rect x="82.7" y="357" width="0.2" height="15.0" fill="rgb(219,58,39)" rx="2" ry="2" />
<text  x="85.70" y="367.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::need_filtering (11 samples, 0.20%)</title><rect x="667.8" y="533" width="2.4" height="15.0" fill="rgb(216,54,3)" rx="2" ry="2" />
<text  x="670.77" y="543.5" ></text>
</g>
<g >
<title>std::default_delete&lt;cql3::expr::expression::impl&gt;::operator (2 samples, 0.04%)</title><rect x="902.3" y="373" width="0.4" height="15.0" fill="rgb(239,98,28)" rx="2" ry="2" />
<text  x="905.28" y="383.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;service::digest_read_resolver&gt;::shared_ptr_count_for&lt;seastar::lw_shared_ptr&lt;schema const&gt;&amp;, db::consistency_level&amp;, unsigned long&amp;, unsigned long, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;&amp;&gt; (8 samples, 0.15%)</title><rect x="990.7" y="389" width="1.8" height="15.0" fill="rgb(221,74,5)" rx="2" ry="2" />
<text  x="993.74" y="399.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector (2 samples, 0.04%)</title><rect x="1069.6" y="373" width="0.4" height="15.0" fill="rgb(244,99,3)" rx="2" ry="2" />
<text  x="1072.57" y="383.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::contains&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="78.1" y="533" width="0.2" height="15.0" fill="rgb(220,223,22)" rx="2" ry="2" />
<text  x="81.10" y="543.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (1 samples, 0.02%)</title><rect x="607.6" y="469" width="0.2" height="15.0" fill="rgb(234,182,25)" rx="2" ry="2" />
<text  x="610.55" y="479.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (1 samples, 0.02%)</title><rect x="687.0" y="533" width="0.3" height="15.0" fill="rgb(217,30,44)" rx="2" ry="2" />
<text  x="690.04" y="543.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (1 samples, 0.02%)</title><rect x="52.3" y="309" width="0.2" height="15.0" fill="rgb(223,21,52)" rx="2" ry="2" />
<text  x="55.26" y="319.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::visit&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (3 samples, 0.06%)</title><rect x="1133.9" y="277" width="0.7" height="15.0" fill="rgb(239,176,1)" rx="2" ry="2" />
<text  x="1136.95" y="287.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (3 samples, 0.06%)</title><rect x="897.9" y="293" width="0.7" height="15.0" fill="rgb(221,75,39)" rx="2" ry="2" />
<text  x="900.90" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;gms::inet_address, std::pair&lt;gms::inet_address const, table::cache_hit_rate&gt;, std::allocator&lt;std::pair&lt;gms::inet_address const, table::cache_hit_rate&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;gms::inet_address&gt;, std::hash&lt;gms::inet_address&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::operator[] (8 samples, 0.15%)</title><rect x="724.0" y="501" width="1.8" height="15.0" fill="rgb(217,155,31)" rx="2" ry="2" />
<text  x="727.04" y="511.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;flat_mutation_reader::peek (3 samples, 0.06%)</title><rect x="450.1" y="469" width="0.7" height="15.0" fill="rgb(234,4,31)" rx="2" ry="2" />
<text  x="453.12" y="479.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="743.3" y="357" width="0.2" height="15.0" fill="rgb(207,46,41)" rx="2" ry="2" />
<text  x="746.31" y="367.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_in_thread&lt;sstables::sstable_writer, flat_mutation_reader::no_filter&gt; (13 samples, 0.24%)</title><rect x="80.9" y="581" width="2.9" height="15.0" fill="rgb(237,6,39)" rx="2" ry="2" />
<text  x="83.94" y="591.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (1 samples, 0.02%)</title><rect x="83.8" y="549" width="0.2" height="15.0" fill="rgb(219,188,20)" rx="2" ry="2" />
<text  x="86.79" y="559.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::constant&gt;  (52 samples, 0.96%)</title><rect x="889.1" y="373" width="11.4" height="15.0" fill="rgb(236,27,25)" rx="2" ry="2" />
<text  x="892.14" y="383.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate (2 samples, 0.04%)</title><rect x="864.2" y="357" width="0.4" height="15.0" fill="rgb(246,1,17)" rx="2" ry="2" />
<text  x="867.18" y="367.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::~timer (1 samples, 0.02%)</title><rect x="712.7" y="533" width="0.2" height="15.0" fill="rgb(254,228,51)" rx="2" ry="2" />
<text  x="715.66" y="543.5" ></text>
</g>
<g >
<title>antlr3::IntStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::consume (1 samples, 0.02%)</title><rect x="36.5" y="293" width="0.2" height="15.0" fill="rgb(217,76,5)" rx="2" ry="2" />
<text  x="39.49" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (1 samples, 0.02%)</title><rect x="47.2" y="373" width="0.2" height="15.0" fill="rgb(235,123,41)" rx="2" ry="2" />
<text  x="50.22" y="383.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::raw::parsed_statement, std::default_delete&lt;cql3::statements::raw::parsed_statement&gt; &gt;::reset (1 samples, 0.02%)</title><rect x="67.1" y="437" width="0.3" height="15.0" fill="rgb(214,114,4)" rx="2" ry="2" />
<text  x="70.15" y="447.5" ></text>
</g>
<g >
<title>ser::writer_of_column&lt;bytes_ostream&gt;::write_id (1 samples, 0.02%)</title><rect x="1132.0" y="181" width="0.2" height="15.0" fill="rgb(214,177,46)" rx="2" ry="2" />
<text  x="1134.97" y="191.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (1 samples, 0.02%)</title><rect x="641.7" y="501" width="0.2" height="15.0" fill="rgb(234,97,17)" rx="2" ry="2" />
<text  x="644.71" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="1112.3" y="469" width="0.2" height="15.0" fill="rgb(252,44,7)" rx="2" ry="2" />
<text  x="1115.27" y="479.5" ></text>
</g>
<g >
<title>cql3::single_column_relation::single_column_relation (1 samples, 0.02%)</title><rect x="61.9" y="357" width="0.2" height="15.0" fill="rgb(226,162,48)" rx="2" ry="2" />
<text  x="64.89" y="367.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (2 samples, 0.04%)</title><rect x="46.3" y="197" width="0.5" height="15.0" fill="rgb(223,115,36)" rx="2" ry="2" />
<text  x="49.35" y="207.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (6 samples, 0.11%)</title><rect x="1107.2" y="469" width="1.3" height="15.0" fill="rgb(216,105,1)" rx="2" ry="2" />
<text  x="1110.23" y="479.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.02%)</title><rect x="1139.4" y="469" width="0.2" height="15.0" fill="rgb(228,164,39)" rx="2" ry="2" />
<text  x="1142.42" y="479.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.02%)</title><rect x="24.9" y="309" width="0.2" height="15.0" fill="rgb(207,207,31)" rx="2" ry="2" />
<text  x="27.89" y="319.5" ></text>
</g>
<g >
<title>__tls_init (2 samples, 0.04%)</title><rect x="518.2" y="357" width="0.5" height="15.0" fill="rgb(242,86,15)" rx="2" ry="2" />
<text  x="521.22" y="367.5" ></text>
</g>
<g >
<title>std::make_unique&lt;empty_flat_reader, seastar::lw_shared_ptr&lt;schema const&gt;, reader_permit&gt; (9 samples, 0.17%)</title><rect x="554.8" y="341" width="2.0" height="15.0" fill="rgb(253,133,38)" rx="2" ry="2" />
<text  x="557.78" y="351.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (1 samples, 0.02%)</title><rect x="991.4" y="341" width="0.2" height="15.0" fill="rgb(235,72,16)" rx="2" ry="2" />
<text  x="994.40" y="351.5" ></text>
</g>
<g >
<title>mutation_querier::consume (1 samples, 0.02%)</title><rect x="701.5" y="341" width="0.2" height="15.0" fill="rgb(207,33,54)" rx="2" ry="2" />
<text  x="704.49" y="351.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::set_tokText (3 samples, 0.06%)</title><rect x="28.4" y="309" width="0.6" height="15.0" fill="rgb(240,58,41)" rx="2" ry="2" />
<text  x="31.39" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value, std::allocator&lt;cql3::raw_value&gt; &gt;::~vector (4 samples, 0.07%)</title><rect x="691.6" y="517" width="0.9" height="15.0" fill="rgb(231,71,48)" rx="2" ry="2" />
<text  x="694.64" y="527.5" ></text>
</g>
<g >
<title>reader_permit::impl::on_admission (4 samples, 0.07%)</title><rect x="128.0" y="469" width="0.9" height="15.0" fill="rgb(253,19,44)" rx="2" ry="2" />
<text  x="131.02" y="479.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::query_processor::process_authorized_statement (3 samples, 0.06%)</title><rect x="85.8" y="581" width="0.6" height="15.0" fill="rgb(226,58,34)" rx="2" ry="2" />
<text  x="88.76" y="591.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="984.0" y="405" width="0.2" height="15.0" fill="rgb(249,106,4)" rx="2" ry="2" />
<text  x="986.95" y="415.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;position_in_partition&gt;::_M_reset (2 samples, 0.04%)</title><rect x="279.8" y="309" width="0.4" height="15.0" fill="rgb(236,159,18)" rx="2" ry="2" />
<text  x="282.76" y="319.5" ></text>
</g>
<g >
<title>mutation_partition_serializer::write_serialized&lt;ser::writer_of_mutation_partition&lt;bytes_ostream&gt; &gt; (1 samples, 0.02%)</title><rect x="108.5" y="421" width="0.3" height="15.0" fill="rgb(249,175,32)" rx="2" ry="2" />
<text  x="111.53" y="431.5" ></text>
</g>
<g >
<title>sstables::file_writer::make (1 samples, 0.02%)</title><rect x="701.1" y="549" width="0.2" height="15.0" fill="rgb(232,50,14)" rx="2" ry="2" />
<text  x="704.05" y="559.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;::operator (1 samples, 0.02%)</title><rect x="17.9" y="421" width="0.2" height="15.0" fill="rgb(222,86,40)" rx="2" ry="2" />
<text  x="20.88" y="431.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="554.1" y="341" width="0.2" height="15.0" fill="rgb(217,99,38)" rx="2" ry="2" />
<text  x="557.13" y="351.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="486.9" y="389" width="0.2" height="15.0" fill="rgb(238,183,34)" rx="2" ry="2" />
<text  x="489.90" y="399.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;void&gt;::set_urgent_state (1 samples, 0.02%)</title><rect x="112.3" y="549" width="0.2" height="15.0" fill="rgb(224,7,50)" rx="2" ry="2" />
<text  x="115.26" y="559.5" ></text>
</g>
<g >
<title>reader_permit::impl::~impl (13 samples, 0.24%)</title><rect x="123.2" y="517" width="2.9" height="15.0" fill="rgb(254,224,13)" rx="2" ry="2" />
<text  x="126.20" y="527.5" ></text>
</g>
<g >
<title>std::default_delete&lt;seastar::thread_context&gt;::operator (1 samples, 0.02%)</title><rect x="1168.3" y="485" width="0.2" height="15.0" fill="rgb(243,81,39)" rx="2" ry="2" />
<text  x="1171.32" y="495.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.02%)</title><rect x="711.8" y="549" width="0.2" height="15.0" fill="rgb(233,44,51)" rx="2" ry="2" />
<text  x="714.78" y="559.5" ></text>
</g>
<g >
<title>seastar::repeat&lt;flat_mutation_reader::impl::consume_pausable&lt;flush_reader::fill_buffer (1 samples, 0.02%)</title><rect x="79.4" y="517" width="0.2" height="15.0" fill="rgb(212,180,15)" rx="2" ry="2" />
<text  x="82.41" y="527.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (6 samples, 0.11%)</title><rect x="561.4" y="453" width="1.3" height="15.0" fill="rgb(215,97,38)" rx="2" ry="2" />
<text  x="564.35" y="463.5" ></text>
</g>
<g >
<title>operator delete (6 samples, 0.11%)</title><rect x="681.1" y="485" width="1.3" height="15.0" fill="rgb(219,70,3)" rx="2" ry="2" />
<text  x="684.13" y="495.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.06%)</title><rect x="996.2" y="325" width="0.7" height="15.0" fill="rgb(225,180,13)" rx="2" ry="2" />
<text  x="999.22" y="335.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.04%)</title><rect x="470.5" y="325" width="0.4" height="15.0" fill="rgb(220,143,43)" rx="2" ry="2" />
<text  x="473.48" y="335.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (2 samples, 0.04%)</title><rect x="502.5" y="341" width="0.4" height="15.0" fill="rgb(252,132,52)" rx="2" ry="2" />
<text  x="505.45" y="351.5" ></text>
</g>
<g >
<title>__tls_init (1 samples, 0.02%)</title><rect x="201.6" y="309" width="0.2" height="15.0" fill="rgb(205,68,0)" rx="2" ry="2" />
<text  x="204.59" y="319.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::push_mutation_fragment&lt;mutation_fragment&gt; (23 samples, 0.43%)</title><rect x="205.5" y="293" width="5.1" height="15.0" fill="rgb(218,203,45)" rx="2" ry="2" />
<text  x="208.54" y="303.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::~_Variant_storage (1 samples, 0.02%)</title><rect x="356.4" y="261" width="0.2" height="15.0" fill="rgb(249,114,18)" rx="2" ry="2" />
<text  x="359.40" y="271.5" ></text>
</g>
<g >
<title>schema::column_at (1 samples, 0.02%)</title><rect x="1131.3" y="165" width="0.2" height="15.0" fill="rgb(244,87,50)" rx="2" ry="2" />
<text  x="1134.32" y="175.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, seastar::lw_shared_ptr&lt;schema const&gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_nodes (1 samples, 0.02%)</title><rect x="703.5" y="277" width="0.2" height="15.0" fill="rgb(233,178,7)" rx="2" ry="2" />
<text  x="706.46" y="287.5" ></text>
</g>
<g >
<title>mutation_querier::mutation_querier (12 samples, 0.22%)</title><rect x="345.0" y="245" width="2.6" height="15.0" fill="rgb(233,204,1)" rx="2" ry="2" />
<text  x="348.02" y="255.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (1 samples, 0.02%)</title><rect x="807.5" y="261" width="0.2" height="15.0" fill="rgb(220,26,6)" rx="2" ry="2" />
<text  x="810.47" y="271.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_last_fragment_kind, 4ul&gt;::small_vector (7 samples, 0.13%)</title><rect x="482.7" y="325" width="1.6" height="15.0" fill="rgb(215,197,19)" rx="2" ry="2" />
<text  x="485.74" y="335.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::clear (1 samples, 0.02%)</title><rect x="810.8" y="277" width="0.2" height="15.0" fill="rgb(212,160,42)" rx="2" ry="2" />
<text  x="813.75" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;mutation_fragment&gt;::allocate (1 samples, 0.02%)</title><rect x="318.1" y="357" width="0.2" height="15.0" fill="rgb(239,228,22)" rx="2" ry="2" />
<text  x="321.08" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::allocate_large (2 samples, 0.04%)</title><rect x="1018.8" y="261" width="0.4" height="15.0" fill="rgb(236,33,26)" rx="2" ry="2" />
<text  x="1021.77" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="575.1" y="453" width="0.3" height="15.0" fill="rgb(223,8,35)" rx="2" ry="2" />
<text  x="578.15" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::disable_abort_on_alloc_failure_temporarily (1 samples, 0.02%)</title><rect x="267.1" y="261" width="0.2" height="15.0" fill="rgb(237,123,26)" rx="2" ry="2" />
<text  x="270.06" y="271.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::revoke_role_statement, std::default_delete&lt;cql3::statements::revoke_role_statement&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::statements::revoke_role_statement&gt;, void&gt; (1 samples, 0.02%)</title><rect x="67.4" y="437" width="0.2" height="15.0" fill="rgb(222,2,33)" rx="2" ry="2" />
<text  x="70.37" y="447.5" ></text>
</g>
<g >
<title>reader_permit::set_max_result_size (1 samples, 0.02%)</title><rect x="114.7" y="533" width="0.2" height="15.0" fill="rgb(246,132,49)" rx="2" ry="2" />
<text  x="117.67" y="543.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="601.9" y="389" width="0.2" height="15.0" fill="rgb(231,61,25)" rx="2" ry="2" />
<text  x="604.86" y="399.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (3 samples, 0.06%)</title><rect x="595.9" y="421" width="0.7" height="15.0" fill="rgb(251,91,42)" rx="2" ry="2" />
<text  x="598.95" y="431.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::operator (1 samples, 0.02%)</title><rect x="308.7" y="405" width="0.2" height="15.0" fill="rgb(243,18,42)" rx="2" ry="2" />
<text  x="311.67" y="415.5" ></text>
</g>
<g >
<title>boost::variant&lt;ser::live_cell_view, ser::expiring_cell_view, ser::dead_cell_view, ser::counter_cell_view, ser::unknown_variant_type&gt;::variant (1 samples, 0.02%)</title><rect x="1122.1" y="261" width="0.2" height="15.0" fill="rgb(237,27,44)" rx="2" ry="2" />
<text  x="1125.12" y="271.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.02%)</title><rect x="17.7" y="549" width="0.2" height="15.0" fill="rgb(225,206,5)" rx="2" ry="2" />
<text  x="20.66" y="559.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;mutation_querier, false, false&gt;::_Optional_base (1 samples, 0.02%)</title><rect x="451.0" y="469" width="0.2" height="15.0" fill="rgb(236,121,50)" rx="2" ry="2" />
<text  x="453.99" y="479.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (1 samples, 0.02%)</title><rect x="76.6" y="453" width="0.2" height="15.0" fill="rgb(213,226,2)" rx="2" ry="2" />
<text  x="79.57" y="463.5" ></text>
</g>
<g >
<title>std::type_info::operator== (1 samples, 0.02%)</title><rect x="1068.5" y="341" width="0.2" height="15.0" fill="rgb(219,27,15)" rx="2" ry="2" />
<text  x="1071.47" y="351.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (1 samples, 0.02%)</title><rect x="101.3" y="517" width="0.2" height="15.0" fill="rgb(225,127,54)" rx="2" ry="2" />
<text  x="104.31" y="527.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;keyspace_metadata&gt;::dispose (1 samples, 0.02%)</title><rect x="703.5" y="325" width="0.2" height="15.0" fill="rgb(220,141,11)" rx="2" ry="2" />
<text  x="706.46" y="335.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;dht::token, std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt;, std::allocator&lt;std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;dht::token&gt;, std::hash&lt;dht::token&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (15 samples, 0.28%)</title><rect x="1080.7" y="341" width="3.3" height="15.0" fill="rgb(226,105,51)" rx="2" ry="2" />
<text  x="1083.74" y="351.5" ></text>
</g>
<g >
<title>validation::validate_column_family (35 samples, 0.65%)</title><rect x="822.8" y="453" width="7.7" height="15.0" fill="rgb(210,167,31)" rx="2" ry="2" />
<text  x="825.80" y="463.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (1 samples, 0.02%)</title><rect x="74.6" y="437" width="0.2" height="15.0" fill="rgb(221,187,44)" rx="2" ry="2" />
<text  x="77.59" y="447.5" ></text>
</g>
<g >
<title>operator delete (7 samples, 0.13%)</title><rect x="611.7" y="469" width="1.5" height="15.0" fill="rgb(247,11,49)" rx="2" ry="2" />
<text  x="614.71" y="479.5" ></text>
</g>
<g >
<title>query_result_builder::consume_end_of_partition (5 samples, 0.09%)</title><rect x="340.0" y="293" width="1.1" height="15.0" fill="rgb(218,220,44)" rx="2" ry="2" />
<text  x="342.98" y="303.5" ></text>
</g>
<g >
<title>allocation_strategy::alloc&lt;blob_storage&gt; (5 samples, 0.09%)</title><rect x="238.2" y="133" width="1.1" height="15.0" fill="rgb(248,123,46)" rx="2" ry="2" />
<text  x="241.16" y="143.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.02%)</title><rect x="55.1" y="197" width="0.2" height="15.0" fill="rgb(218,53,42)" rx="2" ry="2" />
<text  x="58.11" y="207.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate_to_raw_view (4 samples, 0.07%)</title><rect x="861.1" y="373" width="0.9" height="15.0" fill="rgb(242,97,15)" rx="2" ry="2" />
<text  x="864.12" y="383.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_M_reset (1 samples, 0.02%)</title><rect x="931.0" y="421" width="0.2" height="15.0" fill="rgb(218,217,20)" rx="2" ry="2" />
<text  x="933.96" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::stats (7 samples, 0.13%)</title><rect x="552.2" y="357" width="1.5" height="15.0" fill="rgb(217,70,37)" rx="2" ry="2" />
<text  x="555.16" y="367.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;query::result_memory_accounter&gt;::clear (2 samples, 0.04%)</title><rect x="139.2" y="517" width="0.4" height="15.0" fill="rgb(235,179,33)" rx="2" ry="2" />
<text  x="142.19" y="527.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;4ul, cql3::expr::untyped_constant&gt; (1 samples, 0.02%)</title><rect x="53.6" y="69" width="0.2" height="15.0" fill="rgb(222,178,37)" rx="2" ry="2" />
<text  x="56.57" y="79.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate (1 samples, 0.02%)</title><rect x="860.2" y="453" width="0.3" height="15.0" fill="rgb(227,107,12)" rx="2" ry="2" />
<text  x="863.24" y="463.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::remove_if&lt;row::compact_and_expire (2 samples, 0.04%)</title><rect x="356.6" y="277" width="0.5" height="15.0" fill="rgb(228,4,4)" rx="2" ry="2" />
<text  x="359.62" y="287.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_last_fragment_kind, 4ul&gt;::~small_vector (1 samples, 0.02%)</title><rect x="603.8" y="421" width="0.3" height="15.0" fill="rgb(254,108,29)" rx="2" ry="2" />
<text  x="606.83" y="431.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;::lru_entry, boost::intrusive::list_node_traits&lt;void*&gt;,  (2 samples, 0.04%)</title><rect x="745.3" y="453" width="0.4" height="15.0" fill="rgb(248,26,7)" rx="2" ry="2" />
<text  x="748.28" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::vector (15 samples, 0.28%)</title><rect x="945.6" y="469" width="3.3" height="15.0" fill="rgb(241,154,8)" rx="2" ry="2" />
<text  x="948.64" y="479.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (518 samples, 9.61%)</title><rect x="330.1" y="421" width="113.4" height="15.0" fill="rgb(243,105,3)" rx="2" ry="2" />
<text  x="333.13" y="431.5" >flat_mutation_..</text>
</g>
<g >
<title>cql3::query_processor::get_statement (256 samples, 4.75%)</title><rect x="20.1" y="549" width="56.0" height="15.0" fill="rgb(234,173,33)" rx="2" ry="2" />
<text  x="23.07" y="559.5" >cql3:..</text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.02%)</title><rect x="537.0" y="341" width="0.3" height="15.0" fill="rgb(228,190,35)" rx="2" ry="2" />
<text  x="540.05" y="351.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.02%)</title><rect x="702.6" y="469" width="0.2" height="15.0" fill="rgb(230,51,4)" rx="2" ry="2" />
<text  x="705.58" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="592.0" y="357" width="0.2" height="15.0" fill="rgb(250,85,34)" rx="2" ry="2" />
<text  x="595.01" y="367.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::get_promise (3 samples, 0.06%)</title><rect x="962.9" y="453" width="0.7" height="15.0" fill="rgb(250,188,5)" rx="2" ry="2" />
<text  x="965.93" y="463.5" ></text>
</g>
<g >
<title>managed_bytes::free_chain (1 samples, 0.02%)</title><rect x="1134.2" y="245" width="0.2" height="15.0" fill="rgb(218,86,12)" rx="2" ry="2" />
<text  x="1137.16" y="255.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (1 samples, 0.02%)</title><rect x="898.8" y="341" width="0.2" height="15.0" fill="rgb(206,77,42)" rx="2" ry="2" />
<text  x="901.78" y="351.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;void&gt;, service::storage_proxy*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt;, db::consistency_level, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, tracing::trace_state_ptr, service_permit, bool, seastar::lw_shared_ptr&lt;cdc::operation_result_tracker&gt; &gt;::do_flush (36 samples, 0.67%)</title><rect x="1126.7" y="549" width="7.9" height="15.0" fill="rgb(252,103,30)" rx="2" ry="2" />
<text  x="1129.72" y="559.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.02%)</title><rect x="58.8" y="261" width="0.2" height="15.0" fill="rgb(242,140,26)" rx="2" ry="2" />
<text  x="61.83" y="271.5" ></text>
</g>
<g >
<title>mutation_fragment::destroy_data (1 samples, 0.02%)</title><rect x="701.9" y="405" width="0.2" height="15.0" fill="rgb(250,86,43)" rx="2" ry="2" />
<text  x="704.93" y="415.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::~impl (5 samples, 0.09%)</title><rect x="585.9" y="373" width="1.1" height="15.0" fill="rgb(251,126,5)" rx="2" ry="2" />
<text  x="588.88" y="383.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::guard (2 samples, 0.04%)</title><rect x="550.6" y="373" width="0.5" height="15.0" fill="rgb(252,51,32)" rx="2" ry="2" />
<text  x="553.62" y="383.5" ></text>
</g>
<g >
<title>cql3::constants::value::get (1 samples, 0.02%)</title><rect x="861.1" y="341" width="0.2" height="15.0" fill="rgb(209,85,25)" rx="2" ry="2" />
<text  x="864.12" y="351.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (1 samples, 0.02%)</title><rect x="251.1" y="197" width="0.2" height="15.0" fill="rgb(217,188,23)" rx="2" ry="2" />
<text  x="254.08" y="207.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::~disable_abort_on_alloc_failure_temporarily (1 samples, 0.02%)</title><rect x="294.9" y="277" width="0.2" height="15.0" fill="rgb(238,195,39)" rx="2" ry="2" />
<text  x="297.87" y="287.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;void&gt;::satisfy_with_result_of&lt;seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::then_wrapped_nrvo&lt;void, service::abstract_read_executor::make_data_requests (54 samples, 1.00%)</title><rect x="714.6" y="549" width="11.9" height="15.0" fill="rgb(246,160,44)" rx="2" ry="2" />
<text  x="717.63" y="559.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (4 samples, 0.07%)</title><rect x="41.7" y="373" width="0.9" height="15.0" fill="rgb(238,4,50)" rx="2" ry="2" />
<text  x="44.75" y="383.5" ></text>
</g>
<g >
<title>managed_bytes::free_chain (17 samples, 0.32%)</title><rect x="430.2" y="261" width="3.7" height="15.0" fill="rgb(219,41,16)" rx="2" ry="2" />
<text  x="433.19" y="271.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (1 samples, 0.02%)</title><rect x="334.1" y="357" width="0.2" height="15.0" fill="rgb(242,11,23)" rx="2" ry="2" />
<text  x="337.07" y="367.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (4 samples, 0.07%)</title><rect x="261.4" y="229" width="0.8" height="15.0" fill="rgb(227,71,22)" rx="2" ry="2" />
<text  x="264.37" y="239.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;bool, bool  (2 samples, 0.04%)</title><rect x="1084.7" y="341" width="0.4" height="15.0" fill="rgb(205,196,43)" rx="2" ry="2" />
<text  x="1087.68" y="351.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (4 samples, 0.07%)</title><rect x="41.7" y="325" width="0.9" height="15.0" fill="rgb(254,49,48)" rx="2" ry="2" />
<text  x="44.75" y="335.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.02%)</title><rect x="46.1" y="341" width="0.2" height="15.0" fill="rgb(254,9,22)" rx="2" ry="2" />
<text  x="49.13" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::vector (6 samples, 0.11%)</title><rect x="943.0" y="469" width="1.3" height="15.0" fill="rgb(239,76,32)" rx="2" ry="2" />
<text  x="946.01" y="479.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="20.7" y="437" width="0.2" height="15.0" fill="rgb(253,112,8)" rx="2" ry="2" />
<text  x="23.73" y="447.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_slice_or_needs_filtering (1 samples, 0.02%)</title><rect x="668.4" y="517" width="0.2" height="15.0" fill="rgb(230,138,13)" rx="2" ry="2" />
<text  x="671.43" y="527.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_destroy_data_aux (2 samples, 0.04%)</title><rect x="405.2" y="213" width="0.5" height="15.0" fill="rgb(249,164,39)" rx="2" ry="2" />
<text  x="408.23" y="223.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;cql3::selection::raw_selector, false&gt;::make&lt;cql3::expr::expression&amp;, seastar::shared_ptr&lt;cql3::column_identifier&gt;&amp;&gt; (1 samples, 0.02%)</title><rect x="11.1" y="277" width="0.2" height="15.0" fill="rgb(218,35,35)" rx="2" ry="2" />
<text  x="14.09" y="287.5" ></text>
</g>
<g >
<title>logalloc::segment_pool::refill_emergency_reserve (1 samples, 0.02%)</title><rect x="553.9" y="373" width="0.2" height="15.0" fill="rgb(238,193,33)" rx="2" ry="2" />
<text  x="556.91" y="383.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::allocate_on (2 samples, 0.04%)</title><rect x="1121.5" y="245" width="0.4" height="15.0" fill="rgb(254,102,6)" rx="2" ry="2" />
<text  x="1124.46" y="255.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.07%)</title><rect x="790.0" y="341" width="0.8" height="15.0" fill="rgb(205,26,32)" rx="2" ry="2" />
<text  x="792.95" y="351.5" ></text>
</g>
<g >
<title>service::client_state::ensure_has_permission (6 samples, 0.11%)</title><rect x="76.3" y="485" width="1.4" height="15.0" fill="rgb(250,37,10)" rx="2" ry="2" />
<text  x="79.35" y="495.5" ></text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;void&gt;, service::storage_proxy*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt;, db::consistency_level, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, tracing::trace_state_ptr, service_permit, bool, seastar::lw_shared_ptr&lt;cdc::operation_result_tracker&gt; &gt;::operator (2 samples, 0.04%)</title><rect x="860.5" y="421" width="0.4" height="15.0" fill="rgb(251,143,36)" rx="2" ry="2" />
<text  x="863.46" y="431.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;tracking_allocator&lt;mutation_fragment&gt; &gt;::_S_destroy&lt;tracking_allocator&lt;mutation_fragment&gt;, mutation_fragment&gt; (2 samples, 0.04%)</title><rect x="192.2" y="309" width="0.4" height="15.0" fill="rgb(237,147,9)" rx="2" ry="2" />
<text  x="195.18" y="319.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::free (1 samples, 0.02%)</title><rect x="434.4" y="261" width="0.2" height="15.0" fill="rgb(232,199,47)" rx="2" ry="2" />
<text  x="437.35" y="271.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;gms::inet_address, gms::inet_address, std::allocator&lt;gms::inet_address&gt;, std::__detail::_Identity, std::equal_to&lt;gms::inet_address&gt;, std::hash&lt;gms::inet_address&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_find_before_node (1 samples, 0.02%)</title><rect x="109.6" y="501" width="0.2" height="15.0" fill="rgb(253,142,7)" rx="2" ry="2" />
<text  x="112.63" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::~vector (3 samples, 0.06%)</title><rect x="944.3" y="469" width="0.7" height="15.0" fill="rgb(216,45,23)" rx="2" ry="2" />
<text  x="947.32" y="479.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;schema_registry_entry&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;schema_registry_entry&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (2 samples, 0.04%)</title><rect x="979.1" y="405" width="0.5" height="15.0" fill="rgb(231,163,47)" rx="2" ry="2" />
<text  x="982.14" y="415.5" ></text>
</g>
<g >
<title>query::result_view::consume&lt;query::result_set_builder&amp;&gt; (1 samples, 0.02%)</title><rect x="108.8" y="405" width="0.2" height="15.0" fill="rgb(208,228,19)" rx="2" ry="2" />
<text  x="111.75" y="415.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, auth::role_or_anonymous&amp;&amp;, auth::get_permissions (1 samples, 0.02%)</title><rect x="814.9" y="373" width="0.2" height="15.0" fill="rgb(209,202,23)" rx="2" ry="2" />
<text  x="817.91" y="383.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::untyped_constant&gt; (1 samples, 0.02%)</title><rect x="60.1" y="373" width="0.3" height="15.0" fill="rgb(219,89,54)" rx="2" ry="2" />
<text  x="63.14" y="383.5" ></text>
</g>
<g >
<title>operator new (6 samples, 0.11%)</title><rect x="1153.4" y="501" width="1.3" height="15.0" fill="rgb(247,136,20)" rx="2" ry="2" />
<text  x="1156.43" y="511.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.04%)</title><rect x="49.0" y="293" width="0.4" height="15.0" fill="rgb(228,187,53)" rx="2" ry="2" />
<text  x="51.98" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="469.4" y="309" width="0.2" height="15.0" fill="rgb(242,133,37)" rx="2" ry="2" />
<text  x="472.39" y="319.5" ></text>
</g>
<g >
<title>utils::phased_barrier::start (5 samples, 0.09%)</title><rect x="1037.4" y="325" width="1.1" height="15.0" fill="rgb(234,172,49)" rx="2" ry="2" />
<text  x="1040.38" y="335.5" ></text>
</g>
<g >
<title>service::client_state::has_column_family_access (7 samples, 0.13%)</title><rect x="76.1" y="533" width="1.6" height="15.0" fill="rgb(223,65,28)" rx="2" ry="2" />
<text  x="79.13" y="543.5" ></text>
</g>
<g >
<title>operator delete (5 samples, 0.09%)</title><rect x="588.9" y="341" width="1.1" height="15.0" fill="rgb(205,118,32)" rx="2" ry="2" />
<text  x="591.94" y="351.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (1 samples, 0.02%)</title><rect x="808.3" y="277" width="0.3" height="15.0" fill="rgb(205,43,46)" rx="2" ry="2" />
<text  x="811.34" y="287.5" ></text>
</g>
<g >
<title>cql3::restrictions::partition_key_restrictions::needs_filtering (1 samples, 0.02%)</title><rect x="881.0" y="485" width="0.3" height="15.0" fill="rgb(234,7,18)" rx="2" ry="2" />
<text  x="884.04" y="495.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;void&gt;::set_value&lt;&gt; (1 samples, 0.02%)</title><rect x="719.7" y="501" width="0.2" height="15.0" fill="rgb(246,168,17)" rx="2" ry="2" />
<text  x="722.66" y="511.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (520 samples, 9.65%)</title><rect x="329.9" y="437" width="113.9" height="15.0" fill="rgb(216,206,36)" rx="2" ry="2" />
<text  x="332.91" y="447.5" >flat_mutation_..</text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.02%)</title><rect x="726.5" y="549" width="0.2" height="15.0" fill="rgb(242,67,36)" rx="2" ry="2" />
<text  x="729.45" y="559.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (3 samples, 0.06%)</title><rect x="698.6" y="533" width="0.7" height="15.0" fill="rgb(249,66,25)" rx="2" ry="2" />
<text  x="701.64" y="543.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt;::~_Variant_storage (1 samples, 0.02%)</title><rect x="899.4" y="341" width="0.3" height="15.0" fill="rgb(250,136,0)" rx="2" ry="2" />
<text  x="902.43" y="351.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_channel (1 samples, 0.02%)</title><rect x="42.8" y="357" width="0.3" height="15.0" fill="rgb(242,102,38)" rx="2" ry="2" />
<text  x="45.84" y="367.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (1 samples, 0.02%)</title><rect x="664.0" y="549" width="0.3" height="15.0" fill="rgb(236,76,33)" rx="2" ry="2" />
<text  x="667.05" y="559.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::create_type_statement, std::default_delete&lt;cql3::statements::create_type_statement&gt; &gt;::__uniq_ptr_impl (1 samples, 0.02%)</title><rect x="64.5" y="405" width="0.2" height="15.0" fill="rgb(240,86,38)" rx="2" ry="2" />
<text  x="67.52" y="415.5" ></text>
</g>
<g >
<title>utils::basic_ihistogram&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt; &gt;::set_latency (1 samples, 0.02%)</title><rect x="645.9" y="501" width="0.2" height="15.0" fill="rgb(253,142,26)" rx="2" ry="2" />
<text  x="648.87" y="511.5" ></text>
</g>
<g >
<title>operator delete (5 samples, 0.09%)</title><rect x="713.3" y="549" width="1.1" height="15.0" fill="rgb(229,168,43)" rx="2" ry="2" />
<text  x="716.31" y="559.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (2 samples, 0.04%)</title><rect x="50.3" y="325" width="0.4" height="15.0" fill="rgb(223,118,9)" rx="2" ry="2" />
<text  x="53.29" y="335.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt; &gt;::invoke&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (136 samples, 2.52%)</title><rect x="1008.7" y="341" width="29.8" height="15.0" fill="rgb(245,41,23)" rx="2" ry="2" />
<text  x="1011.70" y="351.5" >se..</text>
</g>
<g >
<title>clustering_row::clustering_row (1 samples, 0.02%)</title><rect x="859.6" y="357" width="0.2" height="15.0" fill="rgb(207,221,23)" rx="2" ry="2" />
<text  x="862.58" y="367.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.02%)</title><rect x="858.9" y="485" width="0.2" height="15.0" fill="rgb(215,184,43)" rx="2" ry="2" />
<text  x="861.93" y="495.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;, nonwrapping_interval&lt;managed_bytes&gt; &gt; (3 samples, 0.06%)</title><rect x="1115.1" y="485" width="0.7" height="15.0" fill="rgb(233,214,4)" rx="2" ry="2" />
<text  x="1118.11" y="495.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::operator (9 samples, 0.17%)</title><rect x="310.2" y="389" width="2.0" height="15.0" fill="rgb(235,29,34)" rx="2" ry="2" />
<text  x="313.20" y="399.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (1 samples, 0.02%)</title><rect x="693.0" y="549" width="0.2" height="15.0" fill="rgb(243,57,13)" rx="2" ry="2" />
<text  x="695.95" y="559.5" ></text>
</g>
<g >
<title>bytes_ostream::alloc_new (1 samples, 0.02%)</title><rect x="619.4" y="469" width="0.2" height="15.0" fill="rgb(218,225,30)" rx="2" ry="2" />
<text  x="622.38" y="479.5" ></text>
</g>
<g >
<title>std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;auth::role_or_anonymous&gt;, seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (1 samples, 0.02%)</title><rect x="814.5" y="341" width="0.2" height="15.0" fill="rgb(207,26,30)" rx="2" ry="2" />
<text  x="817.48" y="351.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (1 samples, 0.02%)</title><rect x="683.3" y="549" width="0.2" height="15.0" fill="rgb(249,10,16)" rx="2" ry="2" />
<text  x="686.32" y="559.5" ></text>
</g>
<g >
<title>service::get_local_priority_manager (1 samples, 0.02%)</title><rect x="633.8" y="501" width="0.2" height="15.0" fill="rgb(220,201,33)" rx="2" ry="2" />
<text  x="636.83" y="511.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.02%)</title><rect x="864.0" y="309" width="0.2" height="15.0" fill="rgb(246,180,32)" rx="2" ry="2" />
<text  x="866.96" y="319.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::RecognizerSharedState (1 samples, 0.02%)</title><rect x="20.7" y="453" width="0.2" height="15.0" fill="rgb(221,40,23)" rx="2" ry="2" />
<text  x="23.73" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::reserve (4 samples, 0.07%)</title><rect x="559.6" y="405" width="0.9" height="15.0" fill="rgb(222,49,47)" rx="2" ry="2" />
<text  x="562.60" y="415.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (1 samples, 0.02%)</title><rect x="276.9" y="261" width="0.2" height="15.0" fill="rgb(244,87,29)" rx="2" ry="2" />
<text  x="279.92" y="271.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (8 samples, 0.15%)</title><rect x="41.7" y="421" width="1.8" height="15.0" fill="rgb(240,202,53)" rx="2" ry="2" />
<text  x="44.75" y="431.5" ></text>
</g>
<g >
<title>seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;::swap (5 samples, 0.09%)</title><rect x="762.8" y="469" width="1.1" height="15.0" fill="rgb(246,154,5)" rx="2" ry="2" />
<text  x="765.80" y="479.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::check_access (292 samples, 5.42%)</title><rect x="767.8" y="485" width="64.0" height="15.0" fill="rgb(232,75,46)" rx="2" ry="2" />
<text  x="770.84" y="495.5" >cql3::s..</text>
</g>
<g >
<title>operator delete (2 samples, 0.04%)</title><rect x="640.0" y="437" width="0.4" height="15.0" fill="rgb(240,28,22)" rx="2" ry="2" />
<text  x="642.96" y="447.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (438 samples, 8.13%)</title><rect x="200.3" y="373" width="95.9" height="15.0" fill="rgb(219,162,52)" rx="2" ry="2" />
<text  x="203.28" y="383.5" >partition_s..</text>
</g>
<g >
<title>bytes_ostream::linearize (3 samples, 0.06%)</title><rect x="1129.3" y="229" width="0.7" height="15.0" fill="rgb(250,85,22)" rx="2" ry="2" />
<text  x="1132.35" y="239.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_partition_key_ranges (1 samples, 0.02%)</title><rect x="860.9" y="453" width="0.2" height="15.0" fill="rgb(254,39,21)" rx="2" ry="2" />
<text  x="863.90" y="463.5" ></text>
</g>
<g >
<title>std::variant&lt;fragmented_temporary_buffer::view, managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="905.3" y="389" width="0.3" height="15.0" fill="rgb(254,0,40)" rx="2" ry="2" />
<text  x="908.35" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (1 samples, 0.02%)</title><rect x="101.5" y="517" width="0.2" height="15.0" fill="rgb(244,189,51)" rx="2" ry="2" />
<text  x="104.53" y="527.5" ></text>
</g>
<g >
<title>std::make_unique&lt;seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::entry, reader_concurrency_semaphore::entry, seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;&amp;, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;&amp;&gt; (3 samples, 0.06%)</title><rect x="1027.7" y="245" width="0.7" height="15.0" fill="rgb(239,206,15)" rx="2" ry="2" />
<text  x="1030.75" y="255.5" ></text>
</g>
<g >
<title>write_row&lt;ser::writer_of_deletable_row&lt;bytes_ostream&gt; &gt; (8 samples, 0.15%)</title><rect x="1130.7" y="213" width="1.7" height="15.0" fill="rgb(247,3,42)" rx="2" ry="2" />
<text  x="1133.66" y="223.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;schema_registry_entry&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;schema_registry_entry&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (1 samples, 0.02%)</title><rect x="976.9" y="389" width="0.3" height="15.0" fill="rgb(235,131,20)" rx="2" ry="2" />
<text  x="979.95" y="399.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (2 samples, 0.04%)</title><rect x="741.8" y="389" width="0.4" height="15.0" fill="rgb(237,185,20)" rx="2" ry="2" />
<text  x="744.78" y="399.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (373 samples, 6.92%)</title><rect x="341.3" y="293" width="81.7" height="15.0" fill="rgb(235,65,7)" rx="2" ry="2" />
<text  x="344.29" y="303.5" >compact_m..</text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::fetch (1 samples, 0.02%)</title><rect x="337.8" y="277" width="0.2" height="15.0" fill="rgb(245,44,47)" rx="2" ry="2" />
<text  x="340.79" y="287.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, cql3::statements::list_permissions_statement*, std::default_delete&lt;cql3::statements::list_permissions_statement&gt; &gt; (1 samples, 0.02%)</title><rect x="65.8" y="405" width="0.3" height="15.0" fill="rgb(235,214,20)" rx="2" ry="2" />
<text  x="68.84" y="415.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_prepared (402 samples, 7.46%)</title><rect x="745.9" y="501" width="88.1" height="15.0" fill="rgb(250,216,39)" rx="2" ry="2" />
<text  x="748.94" y="511.5" >cql3::quer..</text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.02%)</title><rect x="872.3" y="533" width="0.2" height="15.0" fill="rgb(235,199,46)" rx="2" ry="2" />
<text  x="875.28" y="543.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;::unique_ptr (1 samples, 0.02%)</title><rect x="49.9" y="277" width="0.2" height="15.0" fill="rgb(246,69,16)" rx="2" ry="2" />
<text  x="52.85" y="287.5" ></text>
</g>
<g >
<title>ser::schema_view::mutations (1 samples, 0.02%)</title><rect x="109.2" y="469" width="0.2" height="15.0" fill="rgb(242,190,11)" rx="2" ry="2" />
<text  x="112.19" y="479.5" ></text>
</g>
<g >
<title>std::destroy_at&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="50.1" y="229" width="0.2" height="15.0" fill="rgb(215,174,22)" rx="2" ry="2" />
<text  x="53.07" y="239.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_ba202cd8bdcfd8c6f1dbb280f642f5ad31cbca7c] (1 samples, 0.02%)</title><rect x="758.9" y="341" width="0.2" height="15.0" fill="rgb(242,63,40)" rx="2" ry="2" />
<text  x="761.86" y="351.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_9has_tokenERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES28_S2B_ (2 samples, 0.04%)</title><rect x="951.5" y="405" width="0.5" height="15.0" fill="rgb(205,168,33)" rx="2" ry="2" />
<text  x="954.55" y="415.5" ></text>
</g>
<g >
<title>executor&lt;test_read (575 samples, 10.67%)</title><rect x="732.1" y="549" width="125.9" height="15.0" fill="rgb(231,24,12)" rx="2" ry="2" />
<text  x="735.15" y="559.5" >executor&lt;test_r..</text>
</g>
<g >
<title>ser::serializer&lt;ser::tombstone_view&gt;::read&lt;seastar::simple_memory_input_stream&gt; (1 samples, 0.02%)</title><rect x="107.9" y="437" width="0.2" height="15.0" fill="rgb(254,93,15)" rx="2" ry="2" />
<text  x="110.88" y="447.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (2 samples, 0.04%)</title><rect x="793.5" y="229" width="0.4" height="15.0" fill="rgb(226,154,17)" rx="2" ry="2" />
<text  x="796.46" y="239.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::clear (1 samples, 0.02%)</title><rect x="423.0" y="293" width="0.2" height="15.0" fill="rgb(222,135,33)" rx="2" ry="2" />
<text  x="425.97" y="303.5" ></text>
</g>
<g >
<title>rows_entry::tri_compare::operator (1 samples, 0.02%)</title><rect x="17.2" y="549" width="0.2" height="15.0" fill="rgb(239,75,43)" rx="2" ry="2" />
<text  x="20.23" y="559.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;compact_for_query&lt; (7 samples, 0.13%)</title><rect x="441.4" y="341" width="1.5" height="15.0" fill="rgb(250,144,6)" rx="2" ry="2" />
<text  x="444.36" y="351.5" ></text>
</g>
<g >
<title>bound_view::from_range_end&lt;nonwrapping_interval&gt; (4 samples, 0.07%)</title><rect x="287.4" y="245" width="0.9" height="15.0" fill="rgb(210,1,0)" rx="2" ry="2" />
<text  x="290.43" y="255.5" ></text>
</g>
<g >
<title>mutation_source::operator= (1 samples, 0.02%)</title><rect x="11.8" y="597" width="0.2" height="15.0" fill="rgb(220,39,6)" rx="2" ry="2" />
<text  x="14.75" y="607.5" ></text>
</g>
<g >
<title>std::optional&lt;position_in_partition&gt;::operator=&lt;position_in_partition&gt; (1 samples, 0.02%)</title><rect x="280.2" y="309" width="0.2" height="15.0" fill="rgb(213,228,22)" rx="2" ry="2" />
<text  x="283.20" y="319.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, cql3::statements::drop_table_statement*, std::default_delete&lt;cql3::statements::drop_table_statement&gt; &gt; (1 samples, 0.02%)</title><rect x="65.4" y="405" width="0.2" height="15.0" fill="rgb(254,126,5)" rx="2" ry="2" />
<text  x="68.40" y="415.5" ></text>
</g>
<g >
<title>__tls_init (2 samples, 0.04%)</title><rect x="490.4" y="389" width="0.4" height="15.0" fill="rgb(211,203,47)" rx="2" ry="2" />
<text  x="493.41" y="399.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.04%)</title><rect x="50.3" y="309" width="0.4" height="15.0" fill="rgb(205,204,23)" rx="2" ry="2" />
<text  x="53.29" y="319.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (3 samples, 0.06%)</title><rect x="859.1" y="517" width="0.7" height="15.0" fill="rgb(239,192,13)" rx="2" ry="2" />
<text  x="862.14" y="527.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (1 samples, 0.02%)</title><rect x="538.1" y="389" width="0.3" height="15.0" fill="rgb(246,204,21)" rx="2" ry="2" />
<text  x="541.14" y="399.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (1 samples, 0.02%)</title><rect x="654.2" y="517" width="0.2" height="15.0" fill="rgb(253,101,35)" rx="2" ry="2" />
<text  x="657.19" y="527.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="864.2" y="277" width="0.2" height="15.0" fill="rgb(219,158,53)" rx="2" ry="2" />
<text  x="867.18" y="287.5" ></text>
</g>
<g >
<title>utils::tuple_hash::operator (1 samples, 0.02%)</title><rect x="744.4" y="421" width="0.2" height="15.0" fill="rgb(225,66,46)" rx="2" ry="2" />
<text  x="747.41" y="431.5" ></text>
</g>
<g >
<title>std::__optional_hash_call_base&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, true&gt;::operator (1 samples, 0.02%)</title><rect x="821.3" y="341" width="0.2" height="15.0" fill="rgb(229,45,54)" rx="2" ry="2" />
<text  x="824.26" y="351.5" ></text>
</g>
<g >
<title>sched_setaffinity@@GLIBC_2.3.4 (44 samples, 0.82%)</title><rect x="1179.7" y="693" width="9.6" height="15.0" fill="rgb(220,37,22)" rx="2" ry="2" />
<text  x="1182.71" y="703.5" ></text>
</g>
<g >
<title>operator new (8 samples, 0.15%)</title><rect x="734.1" y="485" width="1.8" height="15.0" fill="rgb(232,147,20)" rx="2" ry="2" />
<text  x="737.12" y="495.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt; (1 samples, 0.02%)</title><rect x="60.4" y="277" width="0.2" height="15.0" fill="rgb(227,146,47)" rx="2" ry="2" />
<text  x="63.36" y="287.5" ></text>
</g>
<g >
<title>boost::intrusive::bstbase&lt;boost::intrusive::mhtraits&lt;range_tombstone_entry, boost::intrusive::set_member_hook&lt;boost::intrusive::link_mode&lt; (3 samples, 0.06%)</title><rect x="587.0" y="357" width="0.6" height="15.0" fill="rgb(246,136,7)" rx="2" ry="2" />
<text  x="589.97" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::str (1 samples, 0.02%)</title><rect x="78.8" y="581" width="0.2" height="15.0" fill="rgb(231,55,35)" rx="2" ry="2" />
<text  x="81.75" y="591.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::raw::batch_statement, std::default_delete&lt;cql3::statements::raw::batch_statement&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="66.1" y="437" width="0.2" height="15.0" fill="rgb(229,37,21)" rx="2" ry="2" />
<text  x="69.05" y="447.5" ></text>
</g>
<g >
<title>ser::serializer&lt;tombstone&gt;::write&lt;bytes_ostream&gt; (1 samples, 0.02%)</title><rect x="1130.4" y="213" width="0.3" height="15.0" fill="rgb(212,145,16)" rx="2" ry="2" />
<text  x="1133.44" y="223.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.02%)</title><rect x="50.7" y="357" width="0.2" height="15.0" fill="rgb(252,200,42)" rx="2" ry="2" />
<text  x="53.73" y="367.5" ></text>
</g>
<g >
<title>ser::qr_partition__static_row&lt;bytes_ostream&gt;::start_cells (2 samples, 0.04%)</title><rect x="352.0" y="245" width="0.5" height="15.0" fill="rgb(239,140,43)" rx="2" ry="2" />
<text  x="355.02" y="255.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (3 samples, 0.06%)</title><rect x="726.7" y="549" width="0.6" height="15.0" fill="rgb(209,148,3)" rx="2" ry="2" />
<text  x="729.67" y="559.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (5 samples, 0.09%)</title><rect x="852.4" y="405" width="1.1" height="15.0" fill="rgb(241,226,17)" rx="2" ry="2" />
<text  x="855.36" y="415.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::move_it (1 samples, 0.02%)</title><rect x="987.0" y="405" width="0.2" height="15.0" fill="rgb(218,76,20)" rx="2" ry="2" />
<text  x="990.02" y="415.5" ></text>
</g>
<g >
<title>mutation_fragment::destroy_data (37 samples, 0.69%)</title><rect x="427.8" y="325" width="8.1" height="15.0" fill="rgb(233,201,14)" rx="2" ry="2" />
<text  x="430.78" y="335.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (287 samples, 5.33%)</title><rect x="16.3" y="661" width="62.9" height="15.0" fill="rgb(215,180,24)" rx="2" ry="2" />
<text  x="19.35" y="671.5" >seasta..</text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.02%)</title><rect x="56.0" y="149" width="0.2" height="15.0" fill="rgb(243,190,49)" rx="2" ry="2" />
<text  x="58.98" y="159.5" ></text>
</g>
<g >
<title>__tls_init (2 samples, 0.04%)</title><rect x="526.5" y="309" width="0.5" height="15.0" fill="rgb(244,89,4)" rx="2" ry="2" />
<text  x="529.54" y="319.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, seastar::lw_shared_ptr&lt;schema const&gt; &gt;, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, seastar::lw_shared_ptr&lt;schema const&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, std::hash&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (1 samples, 0.02%)</title><rect x="703.5" y="309" width="0.2" height="15.0" fill="rgb(231,199,53)" rx="2" ry="2" />
<text  x="706.46" y="319.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_Optional_payload_base (2 samples, 0.04%)</title><rect x="807.9" y="309" width="0.4" height="15.0" fill="rgb(232,2,46)" rx="2" ry="2" />
<text  x="810.91" y="319.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::with_permit (64 samples, 1.19%)</title><rect x="1019.4" y="309" width="14.0" height="15.0" fill="rgb(252,140,14)" rx="2" ry="2" />
<text  x="1022.43" y="319.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, flat_mutation_reader::impl::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (493 samples, 9.15%)</title><rect x="331.7" y="373" width="107.9" height="15.0" fill="rgb(225,202,21)" rx="2" ry="2" />
<text  x="334.66" y="383.5" >std::__invoke..</text>
</g>
<g >
<title>__memcmp_avx2_movbe (6 samples, 0.11%)</title><rect x="507.9" y="277" width="1.3" height="15.0" fill="rgb(251,159,26)" rx="2" ry="2" />
<text  x="510.93" y="287.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="63.0" y="405" width="0.2" height="15.0" fill="rgb(235,0,12)" rx="2" ry="2" />
<text  x="65.99" y="415.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.02%)</title><rect x="59.0" y="357" width="0.3" height="15.0" fill="rgb(226,155,28)" rx="2" ry="2" />
<text  x="62.05" y="367.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;seastar::lw_shared_ptr&lt;sstables::sstable&gt;, seastar::lw_shared_ptr&lt;sstables::sstable&gt;, std::allocator&lt;seastar::lw_shared_ptr&lt;sstables::sstable&gt; &gt;, std::__detail::_Identity, std::equal_to&lt;seastar::lw_shared_ptr&lt;sstables::sstable&gt; &gt;, std::hash&lt;seastar::lw_shared_ptr&lt;sstables::sstable&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;::~_Hashtable (1 samples, 0.02%)</title><rect x="109.4" y="469" width="0.2" height="15.0" fill="rgb(235,71,37)" rx="2" ry="2" />
<text  x="112.41" y="479.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.02%)</title><rect x="11.1" y="389" width="0.2" height="15.0" fill="rgb(229,121,38)" rx="2" ry="2" />
<text  x="14.09" y="399.5" ></text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt;&amp;&gt; (3 samples, 0.06%)</title><rect x="829.6" y="373" width="0.6" height="15.0" fill="rgb(246,216,48)" rx="2" ry="2" />
<text  x="832.58" y="383.5" ></text>
</g>
<g >
<title>antlr3::IntStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::_LA (1 samples, 0.02%)</title><rect x="27.5" y="325" width="0.2" height="15.0" fill="rgb(227,93,38)" rx="2" ry="2" />
<text  x="30.52" y="335.5" ></text>
</g>
<g >
<title>seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;::swap (11 samples, 0.20%)</title><rect x="749.2" y="453" width="2.4" height="15.0" fill="rgb(230,136,34)" rx="2" ry="2" />
<text  x="752.22" y="463.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (2 samples, 0.04%)</title><rect x="771.8" y="373" width="0.4" height="15.0" fill="rgb(228,178,51)" rx="2" ry="2" />
<text  x="774.78" y="383.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_Optional_payload_base (1 samples, 0.02%)</title><rect x="1068.7" y="357" width="0.2" height="15.0" fill="rgb(208,79,37)" rx="2" ry="2" />
<text  x="1071.69" y="367.5" ></text>
</g>
<g >
<title>utils::tuple_hash::operator (6 samples, 0.11%)</title><rect x="772.4" y="405" width="1.3" height="15.0" fill="rgb(247,4,22)" rx="2" ry="2" />
<text  x="775.43" y="415.5" ></text>
</g>
<g >
<title>keyspace::~keyspace (1 samples, 0.02%)</title><rect x="703.5" y="341" width="0.2" height="15.0" fill="rgb(244,94,5)" rx="2" ry="2" />
<text  x="706.46" y="351.5" ></text>
</g>
<g >
<title>position_in_partition_view::for_range_end (6 samples, 0.11%)</title><rect x="277.1" y="293" width="1.4" height="15.0" fill="rgb(231,116,30)" rx="2" ry="2" />
<text  x="280.14" y="303.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::entry::entry (3 samples, 0.06%)</title><rect x="1027.7" y="229" width="0.7" height="15.0" fill="rgb(220,123,41)" rx="2" ry="2" />
<text  x="1030.75" y="239.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_live_sorted_endpoints (73 samples, 1.35%)</title><rect x="1070.9" y="405" width="16.0" height="15.0" fill="rgb(209,118,24)" rx="2" ry="2" />
<text  x="1073.88" y="415.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_prepared_with_qo (503 samples, 9.33%)</title><rect x="738.3" y="517" width="110.1" height="15.0" fill="rgb(253,131,11)" rx="2" ry="2" />
<text  x="741.28" y="527.5" >single_node_c..</text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::iterator_at (1 samples, 0.02%)</title><rect x="1058.6" y="373" width="0.2" height="15.0" fill="rgb(250,195,28)" rx="2" ry="2" />
<text  x="1061.62" y="383.5" ></text>
</g>
<g >
<title>absl::hash_internal::HashState::combine_contiguous (1 samples, 0.02%)</title><rect x="848.0" y="389" width="0.2" height="15.0" fill="rgb(241,201,25)" rx="2" ry="2" />
<text  x="850.98" y="399.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.02%)</title><rect x="866.4" y="501" width="0.2" height="15.0" fill="rgb(210,69,28)" rx="2" ry="2" />
<text  x="869.37" y="511.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, cql3::statements::raw::parsed_statement*, std::default_delete&lt;cql3::statements::raw::parsed_statement&gt; &gt; (1 samples, 0.02%)</title><rect x="66.5" y="389" width="0.2" height="15.0" fill="rgb(208,164,53)" rx="2" ry="2" />
<text  x="69.49" y="399.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::set&lt;&gt; (1 samples, 0.02%)</title><rect x="94.7" y="533" width="0.3" height="15.0" fill="rgb(246,187,50)" rx="2" ry="2" />
<text  x="97.74" y="543.5" ></text>
</g>
<g >
<title>list_reader_selector::~list_reader_selector (3 samples, 0.06%)</title><rect x="595.1" y="437" width="0.6" height="15.0" fill="rgb(209,181,48)" rx="2" ry="2" />
<text  x="598.07" y="447.5" ></text>
</g>
<g >
<title>operator new (6 samples, 0.11%)</title><rect x="573.0" y="405" width="1.3" height="15.0" fill="rgb(210,65,5)" rx="2" ry="2" />
<text  x="575.96" y="415.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::operator (1 samples, 0.02%)</title><rect x="17.7" y="261" width="0.2" height="15.0" fill="rgb(237,109,52)" rx="2" ry="2" />
<text  x="20.66" y="271.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (1 samples, 0.02%)</title><rect x="57.5" y="373" width="0.2" height="15.0" fill="rgb(246,99,29)" rx="2" ry="2" />
<text  x="60.52" y="383.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt; &gt;  (2 samples, 0.04%)</title><rect x="73.1" y="341" width="0.4" height="15.0" fill="rgb(216,29,23)" rx="2" ry="2" />
<text  x="76.06" y="351.5" ></text>
</g>
<g >
<title>seastar::make_file_impl (1 samples, 0.02%)</title><rect x="692.5" y="549" width="0.2" height="15.0" fill="rgb(226,80,18)" rx="2" ry="2" />
<text  x="695.51" y="559.5" ></text>
</g>
<g >
<title>make_stable_flattened_mutations_consumer&lt;compact_for_query&lt; (13 samples, 0.24%)</title><rect x="443.8" y="437" width="2.8" height="15.0" fill="rgb(228,67,38)" rx="2" ry="2" />
<text  x="446.77" y="447.5" ></text>
</g>
<g >
<title>managed_bytes::external_memory_usage (1 samples, 0.02%)</title><rect x="532.0" y="261" width="0.2" height="15.0" fill="rgb(231,167,33)" rx="2" ry="2" />
<text  x="535.01" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (1 samples, 0.02%)</title><rect x="116.4" y="533" width="0.2" height="15.0" fill="rgb(246,164,36)" rx="2" ry="2" />
<text  x="119.42" y="543.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.02%)</title><rect x="51.6" y="165" width="0.2" height="15.0" fill="rgb(248,134,19)" rx="2" ry="2" />
<text  x="54.60" y="175.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::clear (2 samples, 0.04%)</title><rect x="603.4" y="405" width="0.4" height="15.0" fill="rgb(226,108,8)" rx="2" ry="2" />
<text  x="606.39" y="415.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::maybe_decay_reserve (1 samples, 0.02%)</title><rect x="462.8" y="405" width="0.2" height="15.0" fill="rgb(245,90,36)" rx="2" ry="2" />
<text  x="465.82" y="415.5" ></text>
</g>
<g >
<title>cql3::raw_value_view::make_temporary (1 samples, 0.02%)</title><rect x="906.4" y="421" width="0.3" height="15.0" fill="rgb(205,173,42)" rx="2" ry="2" />
<text  x="909.44" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (1 samples, 0.02%)</title><rect x="250.2" y="165" width="0.2" height="15.0" fill="rgb(213,145,53)" rx="2" ry="2" />
<text  x="253.20" y="175.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;sstables::file_writer&gt;, sstables::sstable::make_component_file_writer (1 samples, 0.02%)</title><rect x="701.1" y="565" width="0.2" height="15.0" fill="rgb(241,200,53)" rx="2" ry="2" />
<text  x="704.05" y="575.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (2 samples, 0.04%)</title><rect x="924.8" y="421" width="0.5" height="15.0" fill="rgb(236,163,27)" rx="2" ry="2" />
<text  x="927.83" y="431.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::query_options, db::consistency_level&amp;, std::vector&lt;cql3::raw_value, std::allocator&lt;cql3::raw_value&gt; &gt;, cql3::query_options::specific_options&gt; (28 samples, 0.52%)</title><rect x="848.9" y="517" width="6.1" height="15.0" fill="rgb(246,130,33)" rx="2" ry="2" />
<text  x="851.85" y="527.5" ></text>
</g>
<g >
<title>frozen_schema::frozen_schema (2 samples, 0.04%)</title><rect x="108.3" y="517" width="0.5" height="15.0" fill="rgb(228,75,33)" rx="2" ry="2" />
<text  x="111.32" y="527.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::set_value&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; (2 samples, 0.04%)</title><rect x="141.4" y="517" width="0.4" height="15.0" fill="rgb(225,107,37)" rx="2" ry="2" />
<text  x="144.38" y="527.5" ></text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;void&gt;, service::storage_proxy*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt;, db::consistency_level, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, tracing::trace_state_ptr, service_permit, bool, seastar::lw_shared_ptr&lt;cdc::operation_result_tracker&gt; &gt;::make_stage_for_group (34 samples, 0.63%)</title><rect x="1127.2" y="469" width="7.4" height="15.0" fill="rgb(242,90,24)" rx="2" ry="2" />
<text  x="1130.16" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (1 samples, 0.02%)</title><rect x="259.2" y="149" width="0.2" height="15.0" fill="rgb(209,98,2)" rx="2" ry="2" />
<text  x="262.18" y="159.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;cql3::single_column_relation, true&gt;::make&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, cql3::expr::oper_t&amp;, cql3::expr::expression&gt; (1 samples, 0.02%)</title><rect x="61.9" y="373" width="0.2" height="15.0" fill="rgb(212,176,52)" rx="2" ry="2" />
<text  x="64.89" y="383.5" ></text>
</g>
<g >
<title>sstring_hash::operator (1 samples, 0.02%)</title><rect x="78.1" y="501" width="0.2" height="15.0" fill="rgb(234,173,33)" rx="2" ry="2" />
<text  x="81.10" y="511.5" ></text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt;&amp;&gt; (6 samples, 0.11%)</title><rect x="1056.4" y="357" width="1.3" height="15.0" fill="rgb(226,60,4)" rx="2" ry="2" />
<text  x="1059.43" y="367.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (6 samples, 0.11%)</title><rect x="1107.2" y="485" width="1.3" height="15.0" fill="rgb(213,21,54)" rx="2" ry="2" />
<text  x="1110.23" y="495.5" ></text>
</g>
<g >
<title>query::result::builder::add_partition (14 samples, 0.26%)</title><rect x="347.6" y="245" width="3.1" height="15.0" fill="rgb(205,168,35)" rx="2" ry="2" />
<text  x="350.64" y="255.5" ></text>
</g>
<g >
<title>seastar::smp::configure (1 samples, 0.02%)</title><rect x="1170.3" y="613" width="0.2" height="15.0" fill="rgb(232,211,23)" rx="2" ry="2" />
<text  x="1173.29" y="623.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="63.4" y="421" width="0.2" height="15.0" fill="rgb(233,13,4)" rx="2" ry="2" />
<text  x="66.43" y="431.5" ></text>
</g>
<g >
<title>read_simple&lt;unsigned short, managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="922.9" y="437" width="0.2" height="15.0" fill="rgb(223,10,47)" rx="2" ry="2" />
<text  x="925.86" y="447.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (1 samples, 0.02%)</title><rect x="98.9" y="517" width="0.2" height="15.0" fill="rgb(241,77,26)" rx="2" ry="2" />
<text  x="101.90" y="527.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::push_back (1 samples, 0.02%)</title><rect x="41.5" y="389" width="0.2" height="15.0" fill="rgb(251,37,48)" rx="2" ry="2" />
<text  x="44.53" y="399.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_locally (2 samples, 0.04%)</title><rect x="1128.3" y="277" width="0.4" height="15.0" fill="rgb(239,190,17)" rx="2" ry="2" />
<text  x="1131.25" y="287.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="61.0" y="261" width="0.2" height="15.0" fill="rgb(249,229,28)" rx="2" ry="2" />
<text  x="64.02" y="271.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (17 samples, 0.32%)</title><rect x="918.5" y="437" width="3.7" height="15.0" fill="rgb(219,68,10)" rx="2" ry="2" />
<text  x="921.48" y="447.5" ></text>
</g>
<g >
<title>double_decker&lt;long, memtable_entry, dht::raw_token_less_comparator, dht::ring_position_comparator, 16,  (4 samples, 0.07%)</title><rect x="1118.6" y="277" width="0.9" height="15.0" fill="rgb(224,219,51)" rx="2" ry="2" />
<text  x="1121.62" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::_M_range_initialize&lt;managed_bytes const*&gt; (8 samples, 0.15%)</title><rect x="909.7" y="405" width="1.8" height="15.0" fill="rgb(245,134,7)" rx="2" ry="2" />
<text  x="912.73" y="415.5" ></text>
</g>
<g >
<title>seastar::make_shared&lt;cql3::column_identifier_raw, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, bool&gt; (1 samples, 0.02%)</title><rect x="58.4" y="373" width="0.2" height="15.0" fill="rgb(222,203,51)" rx="2" ry="2" />
<text  x="61.39" y="383.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (6 samples, 0.11%)</title><rect x="242.5" y="181" width="1.4" height="15.0" fill="rgb(220,158,6)" rx="2" ry="2" />
<text  x="245.54" y="191.5" ></text>
</g>
<g >
<title>seastar::timer_set&lt;seastar::timer&lt;std::chrono::_V2::steady_clock&gt;, &amp;seastar::timer&lt;std::chrono::_V2::steady_clock&gt;::_link&gt;::expire (1 samples, 0.02%)</title><rect x="1170.1" y="501" width="0.2" height="15.0" fill="rgb(251,3,31)" rx="2" ry="2" />
<text  x="1173.07" y="511.5" ></text>
</g>
<g >
<title>utils::estimated_histogram::add (4 samples, 0.07%)</title><rect x="1157.4" y="533" width="0.9" height="15.0" fill="rgb(214,222,35)" rx="2" ry="2" />
<text  x="1160.37" y="543.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (3 samples, 0.06%)</title><rect x="646.1" y="501" width="0.6" height="15.0" fill="rgb(226,223,40)" rx="2" ry="2" />
<text  x="649.09" y="511.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (1 samples, 0.02%)</title><rect x="1091.0" y="437" width="0.2" height="15.0" fill="rgb(224,52,23)" rx="2" ry="2" />
<text  x="1094.03" y="447.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_last_fragment_kind, 4ul&gt;::emplace_back&lt;std::_List_iterator&lt;flat_mutation_reader&gt;, mutation_fragment::kind&gt; (1 samples, 0.02%)</title><rect x="473.8" y="325" width="0.2" height="15.0" fill="rgb(227,81,51)" rx="2" ry="2" />
<text  x="476.77" y="335.5" ></text>
</g>
<g >
<title>seastar::future&lt;boost::iterator_range&lt;mutation_fragment*&gt; &gt;::then_impl&lt;mutation_fragment_merger&lt;mutation_reader_merger&gt;::fetch (1 samples, 0.02%)</title><rect x="309.1" y="405" width="0.2" height="15.0" fill="rgb(209,44,35)" rx="2" ry="2" />
<text  x="312.11" y="415.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (1 samples, 0.02%)</title><rect x="326.0" y="453" width="0.2" height="15.0" fill="rgb(205,223,1)" rx="2" ry="2" />
<text  x="328.97" y="463.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::~small_vector (2 samples, 0.04%)</title><rect x="605.1" y="437" width="0.5" height="15.0" fill="rgb(237,122,17)" rx="2" ry="2" />
<text  x="608.15" y="447.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, enum_set&lt;super_enum&lt;auth::permission,  (68 samples, 1.26%)</title><rect x="793.0" y="309" width="14.9" height="15.0" fill="rgb(248,153,50)" rx="2" ry="2" />
<text  x="796.02" y="319.5" ></text>
</g>
<g >
<title>dht::ring_position_tri_compare (54 samples, 1.00%)</title><rect x="504.0" y="341" width="11.8" height="15.0" fill="rgb(210,135,15)" rx="2" ry="2" />
<text  x="506.98" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt;::emplace_back&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; (2 samples, 0.04%)</title><rect x="265.3" y="213" width="0.5" height="15.0" fill="rgb(210,0,32)" rx="2" ry="2" />
<text  x="268.31" y="223.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;cql3::raw_value const*, cql3::raw_value*&gt; (2 samples, 0.04%)</title><rect x="856.5" y="501" width="0.5" height="15.0" fill="rgb(218,22,24)" rx="2" ry="2" />
<text  x="859.52" y="511.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (1 samples, 0.02%)</title><rect x="1088.4" y="421" width="0.2" height="15.0" fill="rgb(216,13,53)" rx="2" ry="2" />
<text  x="1091.40" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.06%)</title><rect x="208.6" y="229" width="0.7" height="15.0" fill="rgb(233,41,2)" rx="2" ry="2" />
<text  x="211.60" y="239.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_one (49 samples, 0.91%)</title><rect x="189.3" y="341" width="10.8" height="15.0" fill="rgb(220,155,24)" rx="2" ry="2" />
<text  x="192.33" y="351.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="60.4" y="261" width="0.2" height="15.0" fill="rgb(235,156,7)" rx="2" ry="2" />
<text  x="63.36" y="271.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reserve&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (2 samples, 0.04%)</title><rect x="859.4" y="469" width="0.4" height="15.0" fill="rgb(218,165,50)" rx="2" ry="2" />
<text  x="862.36" y="479.5" ></text>
</g>
<g >
<title>seastar::do_until&lt;flush_reader::fill_buffer (1 samples, 0.02%)</title><rect x="79.4" y="533" width="0.2" height="15.0" fill="rgb(236,100,27)" rx="2" ry="2" />
<text  x="82.41" y="543.5" ></text>
</g>
<g >
<title>mutation_fragment::operator= (3 samples, 0.06%)</title><rect x="217.4" y="293" width="0.6" height="15.0" fill="rgb(229,26,26)" rx="2" ry="2" />
<text  x="220.36" y="303.5" ></text>
</g>
<g >
<title>cdc::generation_service::make_new_generation (1 samples, 0.02%)</title><rect x="17.9" y="517" width="0.2" height="15.0" fill="rgb(251,114,20)" rx="2" ry="2" />
<text  x="20.88" y="527.5" ></text>
</g>
<g >
<title>do_lookup_x (1 samples, 0.02%)</title><rect x="80.1" y="677" width="0.2" height="15.0" fill="rgb(220,96,51)" rx="2" ry="2" />
<text  x="83.07" y="687.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::promise&lt;void&gt; &gt;::_M_move_assign (1 samples, 0.02%)</title><rect x="703.0" y="517" width="0.2" height="15.0" fill="rgb(216,110,15)" rx="2" ry="2" />
<text  x="706.02" y="527.5" ></text>
</g>
<g >
<title>db::schema_tables::update_schema_version_and_announce (3 samples, 0.06%)</title><rect x="107.4" y="549" width="0.7" height="15.0" fill="rgb(227,119,36)" rx="2" ry="2" />
<text  x="110.44" y="559.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (10 samples, 0.19%)</title><rect x="607.8" y="485" width="2.2" height="15.0" fill="rgb(216,115,32)" rx="2" ry="2" />
<text  x="610.77" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (1 samples, 0.02%)</title><rect x="38.9" y="325" width="0.2" height="15.0" fill="rgb(218,9,46)" rx="2" ry="2" />
<text  x="41.90" y="335.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (1 samples, 0.02%)</title><rect x="1016.6" y="261" width="0.2" height="15.0" fill="rgb(219,3,11)" rx="2" ry="2" />
<text  x="1019.58" y="271.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (1 samples, 0.02%)</title><rect x="578.2" y="485" width="0.2" height="15.0" fill="rgb(239,54,32)" rx="2" ry="2" />
<text  x="581.21" y="495.5" ></text>
</g>
<g >
<title>query::result_set::from_raw_result (1 samples, 0.02%)</title><rect x="108.8" y="437" width="0.2" height="15.0" fill="rgb(225,86,52)" rx="2" ry="2" />
<text  x="111.75" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (6 samples, 0.11%)</title><rect x="1101.1" y="405" width="1.3" height="15.0" fill="rgb(245,19,15)" rx="2" ry="2" />
<text  x="1104.10" y="415.5" ></text>
</g>
<g >
<title>seastar::gate::enter (1 samples, 0.02%)</title><rect x="1033.4" y="309" width="0.3" height="15.0" fill="rgb(206,87,23)" rx="2" ry="2" />
<text  x="1036.44" y="319.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (2,440 samples, 45.28%)</title><rect x="112.7" y="549" width="534.3" height="15.0" fill="rgb(253,216,24)" rx="2" ry="2" />
<text  x="115.69" y="559.5" >seastar::noncopyable_function&lt;seastar::future&lt;void&gt; </text>
</g>
<g >
<title>std::_Optional_payload_base&lt;clustering_key_prefix&gt;::_M_reset (1 samples, 0.02%)</title><rect x="448.1" y="437" width="0.3" height="15.0" fill="rgb(210,207,14)" rx="2" ry="2" />
<text  x="451.15" y="447.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::allocate (9 samples, 0.17%)</title><rect x="319.2" y="357" width="1.9" height="15.0" fill="rgb(221,123,0)" rx="2" ry="2" />
<text  x="322.18" y="367.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::take (1 samples, 0.02%)</title><rect x="313.5" y="405" width="0.2" height="15.0" fill="rgb(235,29,7)" rx="2" ry="2" />
<text  x="316.48" y="415.5" ></text>
</g>
<g >
<title>schema::column_at (3 samples, 0.06%)</title><rect x="400.4" y="261" width="0.7" height="15.0" fill="rgb(230,96,18)" rx="2" ry="2" />
<text  x="403.41" y="271.5" ></text>
</g>
<g >
<title>ser::row_view::columns (1 samples, 0.02%)</title><rect x="1123.9" y="293" width="0.2" height="15.0" fill="rgb(233,116,12)" rx="2" ry="2" />
<text  x="1126.87" y="303.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::indirect_move (2 samples, 0.04%)</title><rect x="1028.8" y="261" width="0.5" height="15.0" fill="rgb(226,188,49)" rx="2" ry="2" />
<text  x="1031.84" y="271.5" ></text>
</g>
<g >
<title>std::default_delete&lt;cql3::query_options&gt;::operator (11 samples, 0.20%)</title><rect x="690.1" y="533" width="2.4" height="15.0" fill="rgb(242,145,43)" rx="2" ry="2" />
<text  x="693.10" y="543.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit_slot&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::memory_usage&lt;row::external_memory_usage (13 samples, 0.24%)</title><rect x="256.6" y="181" width="2.8" height="15.0" fill="rgb(226,218,34)" rx="2" ry="2" />
<text  x="259.55" y="191.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.07%)</title><rect x="967.3" y="421" width="0.9" height="15.0" fill="rgb(229,2,27)" rx="2" ry="2" />
<text  x="970.31" y="431.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::_Move_ctor_base (3 samples, 0.06%)</title><rect x="346.8" y="229" width="0.6" height="15.0" fill="rgb(238,227,1)" rx="2" ry="2" />
<text  x="349.77" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::~vector (4 samples, 0.07%)</title><rect x="475.7" y="341" width="0.9" height="15.0" fill="rgb(252,106,17)" rx="2" ry="2" />
<text  x="478.74" y="351.5" ></text>
</g>
<g >
<title>schema::partition_key_size (1 samples, 0.02%)</title><rect x="669.7" y="517" width="0.3" height="15.0" fill="rgb(252,112,14)" rx="2" ry="2" />
<text  x="672.74" y="527.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.02%)</title><rect x="48.5" y="245" width="0.3" height="15.0" fill="rgb(236,150,0)" rx="2" ry="2" />
<text  x="51.54" y="255.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="54.0" y="261" width="0.2" height="15.0" fill="rgb(207,192,22)" rx="2" ry="2" />
<text  x="57.01" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.06%)</title><rect x="996.2" y="309" width="0.7" height="15.0" fill="rgb(252,108,49)" rx="2" ry="2" />
<text  x="999.22" y="319.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;cql3::expr::expression const*, cql3::expr::expression*&gt; (2 samples, 0.04%)</title><rect x="73.1" y="293" width="0.4" height="15.0" fill="rgb(209,161,0)" rx="2" ry="2" />
<text  x="76.06" y="303.5" ></text>
</g>
<g >
<title>bytes_view_hasher::update (2 samples, 0.04%)</title><rect x="742.9" y="373" width="0.4" height="15.0" fill="rgb(227,184,33)" rx="2" ry="2" />
<text  x="745.87" y="383.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="46.1" y="293" width="0.2" height="15.0" fill="rgb(217,45,48)" rx="2" ry="2" />
<text  x="49.13" y="303.5" ></text>
</g>
<g >
<title>mutation_reader_merger::mutation_reader_merger (48 samples, 0.89%)</title><rect x="466.1" y="373" width="10.5" height="15.0" fill="rgb(208,39,20)" rx="2" ry="2" />
<text  x="469.10" y="383.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;clustering_key_prefix, false, false&gt;::_Optional_base (1 samples, 0.02%)</title><rect x="643.0" y="469" width="0.2" height="15.0" fill="rgb(226,194,17)" rx="2" ry="2" />
<text  x="646.03" y="479.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="46.1" y="325" width="0.2" height="15.0" fill="rgb(229,108,17)" rx="2" ry="2" />
<text  x="49.13" y="335.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::__uniq_ptr_impl (1 samples, 0.02%)</title><rect x="61.0" y="309" width="0.2" height="15.0" fill="rgb(235,59,1)" rx="2" ry="2" />
<text  x="64.02" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (3 samples, 0.06%)</title><rect x="101.7" y="533" width="0.7" height="15.0" fill="rgb(238,219,26)" rx="2" ry="2" />
<text  x="104.75" y="543.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="841.4" y="469" width="0.2" height="15.0" fill="rgb(221,40,48)" rx="2" ry="2" />
<text  x="844.41" y="479.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (1 samples, 0.02%)</title><rect x="794.3" y="277" width="0.3" height="15.0" fill="rgb(241,58,44)" rx="2" ry="2" />
<text  x="797.33" y="287.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.02%)</title><rect x="454.9" y="437" width="0.3" height="15.0" fill="rgb(246,50,30)" rx="2" ry="2" />
<text  x="457.94" y="447.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.02%)</title><rect x="55.1" y="229" width="0.2" height="15.0" fill="rgb(220,25,29)" rx="2" ry="2" />
<text  x="58.11" y="239.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_prepared (537 samples, 9.96%)</title><rect x="737.4" y="533" width="117.6" height="15.0" fill="rgb(230,50,13)" rx="2" ry="2" />
<text  x="740.40" y="543.5" >single_node_cq..</text>
</g>
<g >
<title>bound_view::from_range&lt;nonwrapping_interval&gt; (13 samples, 0.24%)</title><rect x="285.9" y="261" width="2.8" height="15.0" fill="rgb(206,80,51)" rx="2" ry="2" />
<text  x="288.90" y="271.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::destroy&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="50.1" y="245" width="0.2" height="15.0" fill="rgb(253,87,46)" rx="2" ry="2" />
<text  x="53.07" y="255.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (1 samples, 0.02%)</title><rect x="337.8" y="325" width="0.2" height="15.0" fill="rgb(211,180,12)" rx="2" ry="2" />
<text  x="340.79" y="335.5" ></text>
</g>
<g >
<title>allocation_strategy::construct&lt;bplus::data&lt;long, intrusive_array&lt;memtable_entry&gt;, dht::raw_token_less_comparator, 16ul,  (2 samples, 0.04%)</title><rect x="1118.6" y="245" width="0.5" height="15.0" fill="rgb(237,141,18)" rx="2" ry="2" />
<text  x="1121.62" y="255.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, cql3::statements::truncate_statement*, std::default_delete&lt;cql3::statements::truncate_statement&gt; &gt; (1 samples, 0.02%)</title><rect x="67.6" y="405" width="0.2" height="15.0" fill="rgb(252,144,19)" rx="2" ry="2" />
<text  x="70.59" y="415.5" ></text>
</g>
<g >
<title>mutation_fragment::consume&lt;flat_mutation_reader::impl::consumer_adapter&lt;sstables::sstable_writer&gt; &gt; (10 samples, 0.19%)</title><rect x="81.6" y="549" width="2.2" height="15.0" fill="rgb(228,35,28)" rx="2" ry="2" />
<text  x="84.60" y="559.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.02%)</title><rect x="44.2" y="245" width="0.2" height="15.0" fill="rgb(208,66,33)" rx="2" ry="2" />
<text  x="47.16" y="255.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::__uniq_ptr_impl (1 samples, 0.02%)</title><rect x="61.0" y="293" width="0.2" height="15.0" fill="rgb(240,226,13)" rx="2" ry="2" />
<text  x="64.02" y="303.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;frozen_mutation const&gt;::dispose (1 samples, 0.02%)</title><rect x="728.6" y="517" width="0.3" height="15.0" fill="rgb(250,193,39)" rx="2" ry="2" />
<text  x="731.64" y="527.5" ></text>
</g>
<g >
<title>ser::qr_partition__rows&lt;bytes_ostream&gt;::add (3 samples, 0.06%)</title><rect x="401.1" y="261" width="0.6" height="15.0" fill="rgb(229,34,31)" rx="2" ry="2" />
<text  x="404.07" y="271.5" ></text>
</g>
<g >
<title>seastar::reactor::add_timer (1 samples, 0.02%)</title><rect x="1028.0" y="213" width="0.2" height="15.0" fill="rgb(212,36,38)" rx="2" ry="2" />
<text  x="1030.97" y="223.5" ></text>
</g>
<g >
<title>database::find_schema (1 samples, 0.02%)</title><rect x="769.4" y="453" width="0.2" height="15.0" fill="rgb(226,135,8)" rx="2" ry="2" />
<text  x="772.37" y="463.5" ></text>
</g>
<g >
<title>logalloc::basic_region_impl::set_reclaiming_enabled (1 samples, 0.02%)</title><rect x="518.7" y="389" width="0.2" height="15.0" fill="rgb(247,160,28)" rx="2" ry="2" />
<text  x="521.65" y="399.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="57.5" y="357" width="0.2" height="15.0" fill="rgb(215,16,11)" rx="2" ry="2" />
<text  x="60.52" y="367.5" ></text>
</g>
<g >
<title>std::tuple&lt;cql3::statements::drop_view_statement*, std::default_delete&lt;cql3::statements::drop_view_statement&gt; &gt;::tuple&lt;true, true&gt; (1 samples, 0.02%)</title><rect x="65.6" y="389" width="0.2" height="15.0" fill="rgb(226,57,43)" rx="2" ry="2" />
<text  x="68.62" y="399.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.09%)</title><rect x="532.2" y="261" width="1.1" height="15.0" fill="rgb(251,205,44)" rx="2" ry="2" />
<text  x="535.23" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::disable_abort_on_alloc_failure_temporarily (1 samples, 0.02%)</title><rect x="295.1" y="293" width="0.2" height="15.0" fill="rgb(242,66,1)" rx="2" ry="2" />
<text  x="298.09" y="303.5" ></text>
</g>
<g >
<title>db::system_keyspace::load_host_ids (1 samples, 0.02%)</title><rect x="11.1" y="517" width="0.2" height="15.0" fill="rgb(207,206,28)" rx="2" ry="2" />
<text  x="14.09" y="527.5" ></text>
</g>
<g >
<title>seastar::reactor::do_expire_lowres_timers (1 samples, 0.02%)</title><rect x="1168.3" y="565" width="0.2" height="15.0" fill="rgb(217,90,23)" rx="2" ry="2" />
<text  x="1171.32" y="575.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="643.5" y="501" width="0.2" height="15.0" fill="rgb(219,67,15)" rx="2" ry="2" />
<text  x="646.46" y="511.5" ></text>
</g>
<g >
<title>operator new (11 samples, 0.20%)</title><rect x="1016.8" y="309" width="2.4" height="15.0" fill="rgb(224,172,51)" rx="2" ry="2" />
<text  x="1019.80" y="319.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_live_endpoints (63 samples, 1.17%)</title><rect x="1071.3" y="389" width="13.8" height="15.0" fill="rgb(243,18,49)" rx="2" ry="2" />
<text  x="1074.32" y="399.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (3 samples, 0.06%)</title><rect x="163.3" y="485" width="0.6" height="15.0" fill="rgb(254,119,10)" rx="2" ry="2" />
<text  x="166.28" y="495.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (2 samples, 0.04%)</title><rect x="800.5" y="181" width="0.4" height="15.0" fill="rgb(216,26,39)" rx="2" ry="2" />
<text  x="803.46" y="191.5" ></text>
</g>
<g >
<title>flat_mutation_reader::close (50 samples, 0.93%)</title><rect x="582.4" y="405" width="10.9" height="15.0" fill="rgb(248,183,35)" rx="2" ry="2" />
<text  x="585.37" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt;::_M_realloc_insert&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; (7 samples, 0.13%)</title><rect x="289.6" y="261" width="1.6" height="15.0" fill="rgb(248,211,38)" rx="2" ry="2" />
<text  x="292.62" y="271.5" ></text>
</g>
<g >
<title>row_cache::make_reader (56 samples, 1.04%)</title><rect x="544.7" y="405" width="12.3" height="15.0" fill="rgb(242,176,54)" rx="2" ry="2" />
<text  x="547.71" y="415.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.02%)</title><rect x="107.0" y="341" width="0.2" height="15.0" fill="rgb(251,16,36)" rx="2" ry="2" />
<text  x="110.00" y="351.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (2 samples, 0.04%)</title><rect x="702.4" y="517" width="0.4" height="15.0" fill="rgb(229,82,33)" rx="2" ry="2" />
<text  x="705.37" y="527.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::get_promise (1 samples, 0.02%)</title><rect x="968.2" y="437" width="0.2" height="15.0" fill="rgb(235,73,0)" rx="2" ry="2" />
<text  x="971.19" y="447.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::invoke&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (2 samples, 0.04%)</title><rect x="324.4" y="421" width="0.5" height="15.0" fill="rgb(214,158,8)" rx="2" ry="2" />
<text  x="327.43" y="431.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (1 samples, 0.02%)</title><rect x="45.9" y="357" width="0.2" height="15.0" fill="rgb(207,218,34)" rx="2" ry="2" />
<text  x="48.91" y="367.5" ></text>
</g>
<g >
<title>schema_registry::get (15 samples, 0.28%)</title><rect x="976.3" y="421" width="3.3" height="15.0" fill="rgb(243,118,51)" rx="2" ry="2" />
<text  x="979.29" y="431.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_pausable&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (4 samples, 0.07%)</title><rect x="701.3" y="421" width="0.8" height="15.0" fill="rgb(205,170,30)" rx="2" ry="2" />
<text  x="704.27" y="431.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (1 samples, 0.02%)</title><rect x="45.0" y="341" width="0.3" height="15.0" fill="rgb(247,172,19)" rx="2" ry="2" />
<text  x="48.03" y="351.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::deallocate (2 samples, 0.04%)</title><rect x="321.1" y="373" width="0.5" height="15.0" fill="rgb(238,7,5)" rx="2" ry="2" />
<text  x="324.15" y="383.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_istream (1 samples, 0.02%)</title><rect x="46.8" y="341" width="0.2" height="15.0" fill="rgb(214,189,29)" rx="2" ry="2" />
<text  x="49.79" y="351.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="727.8" y="549" width="0.2" height="15.0" fill="rgb(215,196,26)" rx="2" ry="2" />
<text  x="730.77" y="559.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::signal (2 samples, 0.04%)</title><rect x="586.1" y="341" width="0.4" height="15.0" fill="rgb(241,163,15)" rx="2" ry="2" />
<text  x="589.10" y="351.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.02%)</title><rect x="604.1" y="437" width="0.2" height="15.0" fill="rgb(213,145,27)" rx="2" ry="2" />
<text  x="607.05" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="776.4" y="421" width="0.2" height="15.0" fill="rgb(209,151,52)" rx="2" ry="2" />
<text  x="779.38" y="431.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (16 samples, 0.30%)</title><rect x="925.7" y="405" width="3.5" height="15.0" fill="rgb(239,29,52)" rx="2" ry="2" />
<text  x="928.71" y="415.5" ></text>
</g>
<g >
<title>std::construct_at&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="49.9" y="309" width="0.2" height="15.0" fill="rgb(224,0,34)" rx="2" ry="2" />
<text  x="52.85" y="319.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (2 samples, 0.04%)</title><rect x="55.5" y="229" width="0.5" height="15.0" fill="rgb(228,62,43)" rx="2" ry="2" />
<text  x="58.54" y="239.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::cql_statement&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="1138.3" y="565" width="0.2" height="15.0" fill="rgb(239,64,5)" rx="2" ry="2" />
<text  x="1141.32" y="575.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (1 samples, 0.02%)</title><rect x="125.6" y="469" width="0.2" height="15.0" fill="rgb(236,177,48)" rx="2" ry="2" />
<text  x="128.61" y="479.5" ></text>
</g>
<g >
<title>compound_type&lt; (1 samples, 0.02%)</title><rect x="862.6" y="405" width="0.3" height="15.0" fill="rgb(231,189,34)" rx="2" ry="2" />
<text  x="865.65" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.02%)</title><rect x="960.5" y="437" width="0.2" height="15.0" fill="rgb(240,120,49)" rx="2" ry="2" />
<text  x="963.53" y="447.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (14 samples, 0.26%)</title><rect x="511.2" y="261" width="3.1" height="15.0" fill="rgb(250,120,3)" rx="2" ry="2" />
<text  x="514.21" y="271.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (1 samples, 0.02%)</title><rect x="825.9" y="341" width="0.2" height="15.0" fill="rgb(236,214,34)" rx="2" ry="2" />
<text  x="828.86" y="351.5" ></text>
</g>
<g >
<title>seastar::do_until&lt;flush_reader::fill_buffer (3 samples, 0.06%)</title><rect x="80.9" y="533" width="0.7" height="15.0" fill="rgb(237,119,3)" rx="2" ry="2" />
<text  x="83.94" y="543.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (1 samples, 0.02%)</title><rect x="217.1" y="293" width="0.3" height="15.0" fill="rgb(242,47,49)" rx="2" ry="2" />
<text  x="220.14" y="303.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_internal&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt; &gt; (27 samples, 0.50%)</title><rect x="1128.0" y="389" width="5.9" height="15.0" fill="rgb(230,80,51)" rx="2" ry="2" />
<text  x="1131.03" y="399.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.29] (1 samples, 0.02%)</title><rect x="10.2" y="693" width="0.2" height="15.0" fill="rgb(208,185,2)" rx="2" ry="2" />
<text  x="13.22" y="703.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (1 samples, 0.02%)</title><rect x="795.0" y="261" width="0.2" height="15.0" fill="rgb(214,202,30)" rx="2" ry="2" />
<text  x="797.99" y="271.5" ></text>
</g>
<g >
<title>flat_mutation_reader::peek (703 samples, 13.05%)</title><rect x="172.3" y="469" width="153.9" height="15.0" fill="rgb(216,26,45)" rx="2" ry="2" />
<text  x="175.25" y="479.5" >flat_mutation_reade..</text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::deallocate (2 samples, 0.04%)</title><rect x="586.5" y="357" width="0.5" height="15.0" fill="rgb(239,6,14)" rx="2" ry="2" />
<text  x="589.53" y="367.5" ></text>
</g>
<g >
<title>intrusive_b::searcher&lt;rows_entry, rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare,  (1 samples, 0.02%)</title><rect x="108.3" y="357" width="0.2" height="15.0" fill="rgb(249,157,11)" rx="2" ry="2" />
<text  x="111.32" y="367.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::~small_vector (1 samples, 0.02%)</title><rect x="478.1" y="357" width="0.3" height="15.0" fill="rgb(250,10,38)" rx="2" ry="2" />
<text  x="481.15" y="367.5" ></text>
</g>
<g >
<title>single_node_cql_env::make_query_state (3 samples, 0.06%)</title><rect x="78.1" y="565" width="0.7" height="15.0" fill="rgb(246,100,27)" rx="2" ry="2" />
<text  x="81.10" y="575.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::_M_create_storage (1 samples, 0.02%)</title><rect x="942.4" y="469" width="0.2" height="15.0" fill="rgb(210,59,46)" rx="2" ry="2" />
<text  x="945.35" y="479.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;tracking_allocator&lt;mutation_fragment&gt; &gt;::_S_destroy&lt;tracking_allocator&lt;mutation_fragment&gt;, mutation_fragment&gt; (2 samples, 0.04%)</title><rect x="191.7" y="293" width="0.5" height="15.0" fill="rgb(214,161,32)" rx="2" ry="2" />
<text  x="194.74" y="303.5" ></text>
</g>
<g >
<title>utils::timed_rate_moving_average_and_histogram::mark (6 samples, 0.11%)</title><rect x="624.2" y="485" width="1.3" height="15.0" fill="rgb(243,50,35)" rx="2" ry="2" />
<text  x="627.20" y="495.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_M_set_node (1 samples, 0.02%)</title><rect x="24.2" y="309" width="0.3" height="15.0" fill="rgb(243,58,51)" rx="2" ry="2" />
<text  x="27.23" y="319.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (9 samples, 0.17%)</title><rect x="205.8" y="261" width="1.9" height="15.0" fill="rgb(248,57,5)" rx="2" ry="2" />
<text  x="208.75" y="271.5" ></text>
</g>
<g >
<title>antlr3::Lexer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::emit (7 samples, 0.13%)</title><rect x="27.7" y="325" width="1.6" height="15.0" fill="rgb(220,127,36)" rx="2" ry="2" />
<text  x="30.74" y="335.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.02%)</title><rect x="11.1" y="565" width="0.2" height="15.0" fill="rgb(210,77,50)" rx="2" ry="2" />
<text  x="14.09" y="575.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (86 samples, 1.60%)</title><rect x="22.0" y="437" width="18.9" height="15.0" fill="rgb(240,154,25)" rx="2" ry="2" />
<text  x="25.04" y="447.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (1 samples, 0.02%)</title><rect x="726.0" y="533" width="0.2" height="15.0" fill="rgb(246,28,37)" rx="2" ry="2" />
<text  x="729.01" y="543.5" ></text>
</g>
<g >
<title>boost::intrusive::bstree_impl&lt;boost::intrusive::mhtraits&lt;range_tombstone_entry, boost::intrusive::set_member_hook&lt;boost::intrusive::link_mode&lt; (1 samples, 0.02%)</title><rect x="590.9" y="341" width="0.2" height="15.0" fill="rgb(252,79,43)" rx="2" ry="2" />
<text  x="593.91" y="351.5" ></text>
</g>
<g >
<title>bytes_view_hasher::finalize (1 samples, 0.02%)</title><rect x="75.5" y="421" width="0.2" height="15.0" fill="rgb(236,229,38)" rx="2" ry="2" />
<text  x="78.47" y="431.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.06%)</title><rect x="808.6" y="309" width="0.6" height="15.0" fill="rgb(219,123,24)" rx="2" ry="2" />
<text  x="811.56" y="319.5" ></text>
</g>
<g >
<title>cql3::attributes::raw::prepare (1 samples, 0.02%)</title><rect x="68.9" y="517" width="0.2" height="15.0" fill="rgb(208,117,14)" rx="2" ry="2" />
<text  x="71.90" y="527.5" ></text>
</g>
<g >
<title>bytes_view_hasher::finalize (4 samples, 0.07%)</title><rect x="743.5" y="357" width="0.9" height="15.0" fill="rgb(217,206,35)" rx="2" ry="2" />
<text  x="746.53" y="367.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.07%)</title><rect x="946.5" y="437" width="0.9" height="15.0" fill="rgb(241,224,44)" rx="2" ry="2" />
<text  x="949.51" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value_view, std::allocator&lt;cql3::raw_value_view&gt; &gt;::emplace_back&lt;cql3::raw_value_view&gt; (9 samples, 0.17%)</title><rect x="851.7" y="453" width="2.0" height="15.0" fill="rgb(243,76,45)" rx="2" ry="2" />
<text  x="854.70" y="463.5" ></text>
</g>
<g >
<title>abstract_type::validate&lt;managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="890.5" y="357" width="0.2" height="15.0" fill="rgb(235,14,4)" rx="2" ry="2" />
<text  x="893.46" y="367.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::do_refresh_state (7 samples, 0.13%)</title><rect x="264.2" y="229" width="1.6" height="15.0" fill="rgb(229,54,49)" rx="2" ry="2" />
<text  x="267.22" y="239.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (1 samples, 0.02%)</title><rect x="11.1" y="357" width="0.2" height="15.0" fill="rgb(229,160,46)" rx="2" ry="2" />
<text  x="14.09" y="367.5" ></text>
</g>
<g >
<title>cql3::expr::possible_lhs_values (136 samples, 2.52%)</title><rect x="884.3" y="469" width="29.8" height="15.0" fill="rgb(254,180,41)" rx="2" ry="2" />
<text  x="887.33" y="479.5" >cq..</text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally&lt;single_node_cql_env::execute_prepared_with_qo (2 samples, 0.04%)</title><rect x="737.8" y="517" width="0.5" height="15.0" fill="rgb(209,90,8)" rx="2" ry="2" />
<text  x="740.84" y="527.5" ></text>
</g>
<g >
<title>remove_or_mark_as_unique_owner (1 samples, 0.02%)</title><rect x="83.8" y="581" width="0.2" height="15.0" fill="rgb(216,207,2)" rx="2" ry="2" />
<text  x="86.79" y="591.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;flat_mutation_reader::peek (2 samples, 0.04%)</title><rect x="325.5" y="453" width="0.5" height="15.0" fill="rgb(250,72,10)" rx="2" ry="2" />
<text  x="328.53" y="463.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.02%)</title><rect x="55.8" y="133" width="0.2" height="15.0" fill="rgb(233,201,50)" rx="2" ry="2" />
<text  x="58.76" y="143.5" ></text>
</g>
<g >
<title>utils::approx_exponential_histogram&lt;512ul, 33554432ul, 4ul&gt;::add (1 samples, 0.02%)</title><rect x="645.7" y="501" width="0.2" height="15.0" fill="rgb(217,141,3)" rx="2" ry="2" />
<text  x="648.65" y="511.5" ></text>
</g>
<g >
<title>bytes_ostream::linearize (2 samples, 0.04%)</title><rect x="617.0" y="469" width="0.4" height="15.0" fill="rgb(242,61,8)" rx="2" ry="2" />
<text  x="619.97" y="479.5" ></text>
</g>
<g >
<title>locator::calculate_effective_replication_map (1 samples, 0.02%)</title><rect x="109.6" y="565" width="0.2" height="15.0" fill="rgb(233,167,29)" rx="2" ry="2" />
<text  x="112.63" y="575.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::_M_range_initialize&lt;nonwrapping_interval&lt;dht::ring_position&gt; const*&gt; (12 samples, 0.22%)</title><rect x="946.3" y="453" width="2.6" height="15.0" fill="rgb(239,69,46)" rx="2" ry="2" />
<text  x="949.29" y="463.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (1 samples, 0.02%)</title><rect x="1167.7" y="565" width="0.2" height="15.0" fill="rgb(248,76,19)" rx="2" ry="2" />
<text  x="1170.67" y="575.5" ></text>
</g>
<g >
<title>seastar::memory::stats (6 samples, 0.11%)</title><rect x="527.0" y="309" width="1.3" height="15.0" fill="rgb(221,46,26)" rx="2" ry="2" />
<text  x="529.98" y="319.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (1 samples, 0.02%)</title><rect x="17.9" y="597" width="0.2" height="15.0" fill="rgb(241,195,22)" rx="2" ry="2" />
<text  x="20.88" y="607.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;std::optional&lt;clustering_key_prefix&gt; &gt;::dispose (1 samples, 0.02%)</title><rect x="447.7" y="437" width="0.2" height="15.0" fill="rgb(227,3,41)" rx="2" ry="2" />
<text  x="450.71" y="447.5" ></text>
</g>
<g >
<title>mutation_partition::append_clustered_row (1 samples, 0.02%)</title><rect x="1121.2" y="277" width="0.3" height="15.0" fill="rgb(249,164,3)" rx="2" ry="2" />
<text  x="1124.25" y="287.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (1 samples, 0.02%)</title><rect x="821.0" y="341" width="0.3" height="15.0" fill="rgb(220,49,43)" rx="2" ry="2" />
<text  x="824.04" y="351.5" ></text>
</g>
<g >
<title>range_tombstone_stream::get_next (1 samples, 0.02%)</title><rect x="81.6" y="485" width="0.2" height="15.0" fill="rgb(242,65,32)" rx="2" ry="2" />
<text  x="84.60" y="495.5" ></text>
</g>
<g >
<title>std::operator==&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; (2 samples, 0.04%)</title><rect x="798.7" y="197" width="0.4" height="15.0" fill="rgb(206,194,20)" rx="2" ry="2" />
<text  x="801.71" y="207.5" ></text>
</g>
<g >
<title>cql3::expr::constant::make_bool (1 samples, 0.02%)</title><rect x="72.4" y="389" width="0.2" height="15.0" fill="rgb(240,208,32)" rx="2" ry="2" />
<text  x="75.40" y="399.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::need_filtering (19 samples, 0.35%)</title><rect x="948.9" y="485" width="4.2" height="15.0" fill="rgb(232,69,26)" rx="2" ry="2" />
<text  x="951.92" y="495.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::default_delete&lt;cql3::expr::expression::impl&gt;, true&gt;::_Head_base (1 samples, 0.02%)</title><rect x="61.0" y="245" width="0.2" height="15.0" fill="rgb(208,89,23)" rx="2" ry="2" />
<text  x="64.02" y="255.5" ></text>
</g>
<g >
<title>std::__equal&lt;true&gt;::equal&lt;char&gt; (2 samples, 0.04%)</title><rect x="801.8" y="197" width="0.4" height="15.0" fill="rgb(213,142,43)" rx="2" ry="2" />
<text  x="804.78" y="207.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (2 samples, 0.04%)</title><rect x="83.8" y="629" width="0.4" height="15.0" fill="rgb(217,78,18)" rx="2" ry="2" />
<text  x="86.79" y="639.5" ></text>
</g>
<g >
<title>database::~database (1 samples, 0.02%)</title><rect x="703.5" y="389" width="0.2" height="15.0" fill="rgb(209,64,1)" rx="2" ry="2" />
<text  x="706.46" y="399.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="130.2" y="453" width="0.2" height="15.0" fill="rgb(226,53,8)" rx="2" ry="2" />
<text  x="133.21" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="621.6" y="437" width="0.2" height="15.0" fill="rgb(238,26,27)" rx="2" ry="2" />
<text  x="624.57" y="447.5" ></text>
</g>
<g >
<title>ser::qr_partition__static_row&lt;bytes_ostream&gt;::qr_partition__static_row (6 samples, 0.11%)</title><rect x="350.7" y="245" width="1.3" height="15.0" fill="rgb(226,62,22)" rx="2" ry="2" />
<text  x="353.71" y="255.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::deallocate (1 samples, 0.02%)</title><rect x="583.0" y="373" width="0.2" height="15.0" fill="rgb(238,150,9)" rx="2" ry="2" />
<text  x="586.03" y="383.5" ></text>
</g>
<g >
<title>table::table (1 samples, 0.02%)</title><rect x="109.4" y="501" width="0.2" height="15.0" fill="rgb(205,161,4)" rx="2" ry="2" />
<text  x="112.41" y="511.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="780.3" y="421" width="0.2" height="15.0" fill="rgb(240,136,15)" rx="2" ry="2" />
<text  x="783.32" y="431.5" ></text>
</g>
<g >
<title>seastar::internal::repeater&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (3 samples, 0.06%)</title><rect x="859.1" y="565" width="0.7" height="15.0" fill="rgb(235,130,51)" rx="2" ry="2" />
<text  x="862.14" y="575.5" ></text>
</g>
<g >
<title>bound_view::tri_compare::operator (1 samples, 0.02%)</title><rect x="108.3" y="325" width="0.2" height="15.0" fill="rgb(211,32,49)" rx="2" ry="2" />
<text  x="111.32" y="335.5" ></text>
</g>
<g >
<title>logalloc::basic_region_impl::set_reclaiming_enabled (1 samples, 0.02%)</title><rect x="218.9" y="261" width="0.2" height="15.0" fill="rgb(208,134,6)" rx="2" ry="2" />
<text  x="221.89" y="271.5" ></text>
</g>
<g >
<title>logalloc::basic_region_impl::set_reclaiming_enabled (1 samples, 0.02%)</title><rect x="553.7" y="373" width="0.2" height="15.0" fill="rgb(205,229,47)" rx="2" ry="2" />
<text  x="556.69" y="383.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (1 samples, 0.02%)</title><rect x="1145.3" y="549" width="0.3" height="15.0" fill="rgb(211,174,51)" rx="2" ry="2" />
<text  x="1148.33" y="559.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::_M_range_initialize&lt;nonwrapping_interval&lt;dht::ring_position&gt; const*&gt; (23 samples, 0.43%)</title><rect x="1040.7" y="325" width="5.0" height="15.0" fill="rgb(246,214,13)" rx="2" ry="2" />
<text  x="1043.67" y="335.5" ></text>
</g>
<g >
<title>seastar::repeat&lt;flat_mutation_reader::impl::consume_pausable&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (481 samples, 8.93%)</title><rect x="334.3" y="357" width="105.3" height="15.0" fill="rgb(229,212,0)" rx="2" ry="2" />
<text  x="337.29" y="367.5" >seastar::rep..</text>
</g>
<g >
<title>flat_mutation_reader::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (1 samples, 0.02%)</title><rect x="327.3" y="453" width="0.2" height="15.0" fill="rgb(244,131,12)" rx="2" ry="2" />
<text  x="330.28" y="463.5" ></text>
</g>
<g >
<title>seastar::schedule_urgent (1 samples, 0.02%)</title><rect x="688.6" y="549" width="0.2" height="15.0" fill="rgb(228,149,16)" rx="2" ry="2" />
<text  x="691.57" y="559.5" ></text>
</g>
<g >
<title>utils::estimated_histogram::add (1 samples, 0.02%)</title><rect x="83.6" y="501" width="0.2" height="15.0" fill="rgb(235,154,50)" rx="2" ry="2" />
<text  x="86.57" y="511.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (2 samples, 0.04%)</title><rect x="677.6" y="549" width="0.5" height="15.0" fill="rgb(253,10,25)" rx="2" ry="2" />
<text  x="680.62" y="559.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (2 samples, 0.04%)</title><rect x="49.0" y="341" width="0.4" height="15.0" fill="rgb(227,215,24)" rx="2" ry="2" />
<text  x="51.98" y="351.5" ></text>
</g>
<g >
<title>std::optional&lt;query::querier&lt; (6 samples, 0.11%)</title><rect x="641.9" y="501" width="1.3" height="15.0" fill="rgb(246,133,31)" rx="2" ry="2" />
<text  x="644.93" y="511.5" ></text>
</g>
<g >
<title>std::__apply_impl&lt;seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (42 samples, 0.78%)</title><rect x="1117.5" y="533" width="9.2" height="15.0" fill="rgb(207,160,24)" rx="2" ry="2" />
<text  x="1120.52" y="543.5" ></text>
</g>
<g >
<title>service::storage_proxy::new_read_repair_decision (3 samples, 0.06%)</title><rect x="1087.7" y="421" width="0.7" height="15.0" fill="rgb(241,97,15)" rx="2" ry="2" />
<text  x="1090.74" y="431.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (2 samples, 0.04%)</title><rect x="316.3" y="373" width="0.5" height="15.0" fill="rgb(210,33,21)" rx="2" ry="2" />
<text  x="319.33" y="383.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;void&gt;  (2 samples, 0.04%)</title><rect x="73.9" y="437" width="0.5" height="15.0" fill="rgb(252,52,25)" rx="2" ry="2" />
<text  x="76.94" y="447.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_state&lt;std::tuple&lt;auth::role_or_anonymous&gt;, seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (1 samples, 0.02%)</title><rect x="790.8" y="341" width="0.2" height="15.0" fill="rgb(238,62,51)" rx="2" ry="2" />
<text  x="793.83" y="351.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::partition_slice, std::default_delete&lt;query::partition_slice&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="558.3" y="405" width="0.2" height="15.0" fill="rgb(227,80,37)" rx="2" ry="2" />
<text  x="561.29" y="415.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="1131.8" y="149" width="0.2" height="15.0" fill="rgb(231,84,23)" rx="2" ry="2" />
<text  x="1134.76" y="159.5" ></text>
</g>
<g >
<title>utils::approx_exponential_histogram&lt;512ul, 33554432ul, 4ul&gt;::add (1 samples, 0.02%)</title><rect x="694.5" y="533" width="0.2" height="15.0" fill="rgb(231,79,18)" rx="2" ry="2" />
<text  x="697.48" y="543.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::alloc (14 samples, 0.26%)</title><rect x="239.5" y="133" width="3.0" height="15.0" fill="rgb(244,28,10)" rx="2" ry="2" />
<text  x="242.47" y="143.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::storage_proxy&gt;::~shared_ptr (2 samples, 0.04%)</title><rect x="968.8" y="437" width="0.5" height="15.0" fill="rgb(226,51,34)" rx="2" ry="2" />
<text  x="971.85" y="447.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (2 samples, 0.04%)</title><rect x="49.0" y="245" width="0.4" height="15.0" fill="rgb(233,3,21)" rx="2" ry="2" />
<text  x="51.98" y="255.5" ></text>
</g>
<g >
<title>free (1 samples, 0.02%)</title><rect x="107.0" y="309" width="0.2" height="15.0" fill="rgb(227,143,51)" rx="2" ry="2" />
<text  x="110.00" y="319.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::on_permit_destroyed (1 samples, 0.02%)</title><rect x="123.9" y="501" width="0.2" height="15.0" fill="rgb(244,20,29)" rx="2" ry="2" />
<text  x="126.86" y="511.5" ></text>
</g>
<g >
<title>seastar::internal::when_all_state&lt;seastar::internal::extract_values_from_futures_tuple&lt;seastar::future&lt;void&gt;, seastar::future&lt;void&gt; &gt;, seastar::future&lt;void&gt;, seastar::future&lt;void&gt; &gt;::wait_all (1 samples, 0.02%)</title><rect x="1127.8" y="389" width="0.2" height="15.0" fill="rgb(220,138,5)" rx="2" ry="2" />
<text  x="1130.81" y="399.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reserve&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::fill_buffer (1 samples, 0.02%)</title><rect x="79.4" y="453" width="0.2" height="15.0" fill="rgb(209,100,14)" rx="2" ry="2" />
<text  x="82.41" y="463.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::create_view_statement, std::default_delete&lt;cql3::statements::create_view_statement&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="65.0" y="437" width="0.2" height="15.0" fill="rgb(216,220,12)" rx="2" ry="2" />
<text  x="67.96" y="447.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_Optional_payload_base (1 samples, 0.02%)</title><rect x="1098.9" y="421" width="0.2" height="15.0" fill="rgb(232,159,19)" rx="2" ry="2" />
<text  x="1101.91" y="431.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.02%)</title><rect x="1024.2" y="213" width="0.3" height="15.0" fill="rgb(207,180,30)" rx="2" ry="2" />
<text  x="1027.24" y="223.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (4 samples, 0.07%)</title><rect x="1044.8" y="261" width="0.9" height="15.0" fill="rgb(242,104,24)" rx="2" ry="2" />
<text  x="1047.83" y="271.5" ></text>
</g>
<g >
<title>canonical_mutation::to_mutation (1 samples, 0.02%)</title><rect x="109.2" y="421" width="0.2" height="15.0" fill="rgb(234,144,48)" rx="2" ry="2" />
<text  x="112.19" y="431.5" ></text>
</g>
<g >
<title>database::has_keyspace (14 samples, 0.26%)</title><rect x="838.6" y="485" width="3.0" height="15.0" fill="rgb(252,218,18)" rx="2" ry="2" />
<text  x="841.56" y="495.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql3::constants::setter&gt;::~shared_ptr_count_for (1 samples, 0.02%)</title><rect x="664.9" y="501" width="0.2" height="15.0" fill="rgb(249,76,41)" rx="2" ry="2" />
<text  x="667.92" y="511.5" ></text>
</g>
<g >
<title>seastar::thread_context::~thread_context (1 samples, 0.02%)</title><rect x="1168.3" y="469" width="0.2" height="15.0" fill="rgb(221,11,45)" rx="2" ry="2" />
<text  x="1171.32" y="479.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::raw::parsed_statement, std::default_delete&lt;cql3::statements::raw::parsed_statement&gt; &gt;::operator=&lt;cql3::statements::raw::update_statement, std::default_delete&lt;cql3::statements::raw::update_statement&gt; &gt; (2 samples, 0.04%)</title><rect x="66.7" y="437" width="0.4" height="15.0" fill="rgb(247,4,21)" rx="2" ry="2" />
<text  x="69.71" y="447.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_digest_requests (3 samples, 0.06%)</title><rect x="1048.5" y="389" width="0.7" height="15.0" fill="rgb(254,212,3)" rx="2" ry="2" />
<text  x="1051.55" y="399.5" ></text>
</g>
<g >
<title>ser::safe_serialize_as_uint32&lt;bytes_ostream&gt; (4 samples, 0.07%)</title><rect x="395.6" y="213" width="0.9" height="15.0" fill="rgb(252,159,32)" rx="2" ry="2" />
<text  x="398.60" y="223.5" ></text>
</g>
<g >
<title>seastar::logger::log&lt;dht::token const&amp;, utils::small_vector&lt;gms::inet_address, 3ul&gt;&amp;, utils::small_vector&lt;gms::inet_address, 3ul&gt;&amp;, db::read_repair_decision&amp;&gt; (1 samples, 0.02%)</title><rect x="1059.9" y="405" width="0.3" height="15.0" fill="rgb(246,112,32)" rx="2" ry="2" />
<text  x="1062.94" y="415.5" ></text>
</g>
<g >
<title>cql3::expr::make_conjunction (2 samples, 0.04%)</title><rect x="73.1" y="373" width="0.4" height="15.0" fill="rgb(251,210,1)" rx="2" ry="2" />
<text  x="76.06" y="383.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;signed char, std::char_traits&lt;signed char&gt; &gt;::substr (1 samples, 0.02%)</title><rect x="514.1" y="245" width="0.2" height="15.0" fill="rgb(238,183,41)" rx="2" ry="2" />
<text  x="517.06" y="255.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (2 samples, 0.04%)</title><rect x="50.3" y="341" width="0.4" height="15.0" fill="rgb(210,2,27)" rx="2" ry="2" />
<text  x="53.29" y="351.5" ></text>
</g>
<g >
<title>sstables::mc::writer::drain_tombstones (1 samples, 0.02%)</title><rect x="81.6" y="501" width="0.2" height="15.0" fill="rgb(217,174,24)" rx="2" ry="2" />
<text  x="84.60" y="511.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::has_token (1 samples, 0.02%)</title><rect x="669.5" y="485" width="0.2" height="15.0" fill="rgb(228,163,27)" rx="2" ry="2" />
<text  x="672.52" y="495.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.02%)</title><rect x="58.6" y="245" width="0.2" height="15.0" fill="rgb(234,56,10)" rx="2" ry="2" />
<text  x="61.61" y="255.5" ></text>
</g>
<g >
<title>seastar::execution_stage::flush (1 samples, 0.02%)</title><rect x="860.7" y="389" width="0.2" height="15.0" fill="rgb(222,26,1)" rx="2" ry="2" />
<text  x="863.68" y="399.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally&lt;single_node_cql_env::execute_prepared_with_qo (9 samples, 0.17%)</title><rect x="834.2" y="501" width="2.0" height="15.0" fill="rgb(210,56,3)" rx="2" ry="2" />
<text  x="837.18" y="511.5" ></text>
</g>
<g >
<title>intrusive_b::node&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (1 samples, 0.02%)</title><rect x="107.0" y="421" width="0.2" height="15.0" fill="rgb(243,161,31)" rx="2" ry="2" />
<text  x="110.00" y="431.5" ></text>
</g>
<g >
<title>atomic_cell_type::make_live&lt;ser::buffer_view&lt;bytes_ostream::fragment_iterator&gt; &gt; (2 samples, 0.04%)</title><rect x="1120.6" y="277" width="0.4" height="15.0" fill="rgb(248,157,31)" rx="2" ry="2" />
<text  x="1123.59" y="287.5" ></text>
</g>
<g >
<title>fmt::v7::formatter&lt;fmt::v7::basic_string_view&lt;char&gt;, char, void&gt;::format&lt;fmt::v7::basic_format_context&lt;fmt::v7::detail::buffer_appender&lt;char&gt;, char&gt; &gt; (1 samples, 0.02%)</title><rect x="80.3" y="629" width="0.2" height="15.0" fill="rgb(240,164,9)" rx="2" ry="2" />
<text  x="83.29" y="639.5" ></text>
</g>
<g >
<title>cql3::query_processor::process_authorized_statement (18 samples, 0.33%)</title><rect x="763.9" y="485" width="3.9" height="15.0" fill="rgb(239,218,9)" rx="2" ry="2" />
<text  x="766.89" y="495.5" ></text>
</g>
<g >
<title>antlr3::DefaultAllocPolicy::StackType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::pop (1 samples, 0.02%)</title><rect x="41.3" y="405" width="0.2" height="15.0" fill="rgb(243,169,19)" rx="2" ry="2" />
<text  x="44.31" y="415.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.02%)</title><rect x="676.1" y="549" width="0.2" height="15.0" fill="rgb(208,202,2)" rx="2" ry="2" />
<text  x="679.09" y="559.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_rehash (12 samples, 0.22%)</title><rect x="1150.6" y="501" width="2.6" height="15.0" fill="rgb(236,216,11)" rx="2" ry="2" />
<text  x="1153.59" y="511.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (2 samples, 0.04%)</title><rect x="658.1" y="517" width="0.5" height="15.0" fill="rgb(229,39,10)" rx="2" ry="2" />
<text  x="661.14" y="527.5" ></text>
</g>
<g >
<title>partition_version::partition_version (1 samples, 0.02%)</title><rect x="1124.3" y="277" width="0.2" height="15.0" fill="rgb(233,173,40)" rx="2" ry="2" />
<text  x="1127.31" y="287.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="664.9" y="485" width="0.2" height="15.0" fill="rgb(226,4,50)" rx="2" ry="2" />
<text  x="667.92" y="495.5" ></text>
</g>
<g >
<title>seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;::swap (1 samples, 0.02%)</title><rect x="833.7" y="485" width="0.3" height="15.0" fill="rgb(250,6,27)" rx="2" ry="2" />
<text  x="836.74" y="495.5" ></text>
</g>
<g >
<title>seastar::reactor::run_some_tasks (4,929 samples, 91.46%)</title><rect x="88.8" y="581" width="1079.3" height="15.0" fill="rgb(226,117,31)" rx="2" ry="2" />
<text  x="91.83" y="591.5" >seastar::reactor::run_some_tasks</text>
</g>
<g >
<title>seastar::future&lt;service::digest_read_result&gt;::then_wrapped_common&lt;true, void, service::abstract_read_executor::execute (12 samples, 0.22%)</title><rect x="984.2" y="405" width="2.6" height="15.0" fill="rgb(218,132,10)" rx="2" ry="2" />
<text  x="987.17" y="415.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.04%)</title><rect x="114.2" y="533" width="0.5" height="15.0" fill="rgb(218,72,0)" rx="2" ry="2" />
<text  x="117.23" y="543.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (3 samples, 0.06%)</title><rect x="97.6" y="517" width="0.6" height="15.0" fill="rgb(245,82,37)" rx="2" ry="2" />
<text  x="100.59" y="527.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;dht::decorated_key&gt;::_M_reset (1 samples, 0.02%)</title><rect x="443.1" y="405" width="0.2" height="15.0" fill="rgb(219,15,26)" rx="2" ry="2" />
<text  x="446.11" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="682.2" y="469" width="0.2" height="15.0" fill="rgb(240,121,4)" rx="2" ry="2" />
<text  x="685.22" y="479.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_psrstate (1 samples, 0.02%)</title><rect x="44.6" y="405" width="0.2" height="15.0" fill="rgb(241,159,54)" rx="2" ry="2" />
<text  x="47.60" y="415.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (5 samples, 0.09%)</title><rect x="777.3" y="405" width="1.0" height="15.0" fill="rgb(225,160,53)" rx="2" ry="2" />
<text  x="780.25" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value_view, std::allocator&lt;cql3::raw_value_view&gt; &gt;::_M_realloc_insert&lt;cql3::raw_value_view&gt; (8 samples, 0.15%)</title><rect x="851.9" y="437" width="1.8" height="15.0" fill="rgb(221,56,47)" rx="2" ry="2" />
<text  x="854.92" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (8 samples, 0.15%)</title><rect x="471.8" y="293" width="1.7" height="15.0" fill="rgb(239,183,1)" rx="2" ry="2" />
<text  x="474.80" y="303.5" ></text>
</g>
<g >
<title>seastar::promise&lt;void&gt;::promise (1 samples, 0.02%)</title><rect x="702.6" y="485" width="0.2" height="15.0" fill="rgb(231,94,1)" rx="2" ry="2" />
<text  x="705.58" y="495.5" ></text>
</g>
<g >
<title>clustering_row::external_memory_usage (1 samples, 0.02%)</title><rect x="220.9" y="245" width="0.2" height="15.0" fill="rgb(246,11,37)" rx="2" ry="2" />
<text  x="223.86" y="255.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (2 samples, 0.04%)</title><rect x="929.7" y="453" width="0.4" height="15.0" fill="rgb(226,68,45)" rx="2" ry="2" />
<text  x="932.65" y="463.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (4 samples, 0.07%)</title><rect x="221.7" y="213" width="0.9" height="15.0" fill="rgb(237,101,25)" rx="2" ry="2" />
<text  x="224.74" y="223.5" ></text>
</g>
<g >
<title>partition_key_view::legacy_form (3 samples, 0.06%)</title><rect x="922.2" y="437" width="0.7" height="15.0" fill="rgb(236,30,50)" rx="2" ry="2" />
<text  x="925.21" y="447.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="1189.3" y="677" width="0.3" height="15.0" fill="rgb(213,100,52)" rx="2" ry="2" />
<text  x="1192.34" y="687.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::read_next (1 samples, 0.02%)</title><rect x="859.6" y="437" width="0.2" height="15.0" fill="rgb(205,59,50)" rx="2" ry="2" />
<text  x="862.58" y="447.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;void&gt;::set_value&lt;&gt; (1 samples, 0.02%)</title><rect x="722.1" y="485" width="0.2" height="15.0" fill="rgb(237,224,38)" rx="2" ry="2" />
<text  x="725.07" y="495.5" ></text>
</g>
<g >
<title>seastar::internal::future_base::do_wait (2 samples, 0.04%)</title><rect x="18.3" y="581" width="0.5" height="15.0" fill="rgb(230,150,6)" rx="2" ry="2" />
<text  x="21.32" y="591.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (3 samples, 0.06%)</title><rect x="42.8" y="373" width="0.7" height="15.0" fill="rgb(217,113,4)" rx="2" ry="2" />
<text  x="45.84" y="383.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::clear (1 samples, 0.02%)</title><rect x="1165.7" y="485" width="0.2" height="15.0" fill="rgb(241,9,10)" rx="2" ry="2" />
<text  x="1168.69" y="495.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (2 samples, 0.04%)</title><rect x="10.9" y="645" width="0.4" height="15.0" fill="rgb(230,207,27)" rx="2" ry="2" />
<text  x="13.88" y="655.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (2 samples, 0.04%)</title><rect x="48.3" y="341" width="0.5" height="15.0" fill="rgb(230,180,47)" rx="2" ry="2" />
<text  x="51.32" y="351.5" ></text>
</g>
<g >
<title>db::schema_tables::create_keyspace_from_schema_partition (1 samples, 0.02%)</title><rect x="106.8" y="373" width="0.2" height="15.0" fill="rgb(249,4,7)" rx="2" ry="2" />
<text  x="109.78" y="383.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::modification_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::operator (2 samples, 0.04%)</title><rect x="19.6" y="485" width="0.5" height="15.0" fill="rgb(231,177,52)" rx="2" ry="2" />
<text  x="22.63" y="495.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.02%)</title><rect x="771.8" y="357" width="0.2" height="15.0" fill="rgb(248,8,2)" rx="2" ry="2" />
<text  x="774.78" y="367.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;::operator== (1 samples, 0.02%)</title><rect x="742.0" y="373" width="0.2" height="15.0" fill="rgb(223,34,41)" rx="2" ry="2" />
<text  x="745.00" y="383.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::move_it (10 samples, 0.19%)</title><rect x="696.0" y="549" width="2.2" height="15.0" fill="rgb(223,166,8)" rx="2" ry="2" />
<text  x="699.02" y="559.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="735.9" y="501" width="0.2" height="15.0" fill="rgb(237,206,12)" rx="2" ry="2" />
<text  x="738.87" y="511.5" ></text>
</g>
<g >
<title>std::default_delete&lt;compact_for_query&lt; (3 samples, 0.06%)</title><rect x="442.2" y="325" width="0.7" height="15.0" fill="rgb(254,18,54)" rx="2" ry="2" />
<text  x="445.24" y="335.5" ></text>
</g>
<g >
<title>std::pair&lt;auth::role_or_anonymous, auth::resource&gt;::pair&lt;auth::role_or_anonymous, auth::resource, true&gt; (3 samples, 0.06%)</title><rect x="807.9" y="325" width="0.7" height="15.0" fill="rgb(235,186,31)" rx="2" ry="2" />
<text  x="810.91" y="335.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (1 samples, 0.02%)</title><rect x="948.7" y="389" width="0.2" height="15.0" fill="rgb(215,57,14)" rx="2" ry="2" />
<text  x="951.70" y="399.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::invoke&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (37 samples, 0.69%)</title><rect x="314.6" y="405" width="8.1" height="15.0" fill="rgb(239,221,28)" rx="2" ry="2" />
<text  x="317.58" y="415.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="480.8" y="325" width="0.2" height="15.0" fill="rgb(222,135,23)" rx="2" ry="2" />
<text  x="483.77" y="335.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (1 samples, 0.02%)</title><rect x="1130.0" y="197" width="0.2" height="15.0" fill="rgb(214,14,32)" rx="2" ry="2" />
<text  x="1133.00" y="207.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::push_mutation_fragment&lt;mutation_fragment&gt; (26 samples, 0.48%)</title><rect x="315.9" y="389" width="5.7" height="15.0" fill="rgb(244,142,3)" rx="2" ry="2" />
<text  x="318.89" y="399.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (5 samples, 0.09%)</title><rect x="715.1" y="533" width="1.1" height="15.0" fill="rgb(205,10,49)" rx="2" ry="2" />
<text  x="718.07" y="543.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt; &gt;::satisfy_with_result_of&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::then_wrapped_nrvo&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (16 samples, 0.30%)</title><rect x="683.8" y="549" width="3.5" height="15.0" fill="rgb(229,150,31)" rx="2" ry="2" />
<text  x="686.75" y="559.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (15 samples, 0.28%)</title><rect x="1041.3" y="293" width="3.3" height="15.0" fill="rgb(236,192,12)" rx="2" ry="2" />
<text  x="1044.32" y="303.5" ></text>
</g>
<g >
<title>std::default_delete&lt;bytes_ostream::chunk&gt;::operator (1 samples, 0.02%)</title><rect x="99.8" y="501" width="0.2" height="15.0" fill="rgb(213,114,34)" rx="2" ry="2" />
<text  x="102.78" y="511.5" ></text>
</g>
<g >
<title>operator delete (11 samples, 0.20%)</title><rect x="599.7" y="405" width="2.4" height="15.0" fill="rgb(237,217,34)" rx="2" ry="2" />
<text  x="602.67" y="415.5" ></text>
</g>
<g >
<title>db::schema_tables::merge_tables_and_views (2 samples, 0.04%)</title><rect x="107.0" y="549" width="0.4" height="15.0" fill="rgb(217,25,48)" rx="2" ry="2" />
<text  x="110.00" y="559.5" ></text>
</g>
<g >
<title>make_combined_reader (91 samples, 1.69%)</title><rect x="465.9" y="389" width="19.9" height="15.0" fill="rgb(254,27,23)" rx="2" ry="2" />
<text  x="468.88" y="399.5" ></text>
</g>
<g >
<title>seastar::do_until&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (438 samples, 8.13%)</title><rect x="200.3" y="357" width="95.9" height="15.0" fill="rgb(234,34,52)" rx="2" ry="2" />
<text  x="203.28" y="367.5" >seastar::do..</text>
</g>
<g >
<title>managed_bytes::free_chain (1 samples, 0.02%)</title><rect x="107.0" y="325" width="0.2" height="15.0" fill="rgb(217,143,32)" rx="2" ry="2" />
<text  x="110.00" y="335.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.02%)</title><rect x="44.2" y="229" width="0.2" height="15.0" fill="rgb(244,83,54)" rx="2" ry="2" />
<text  x="47.16" y="239.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;interval_bound&lt;dht::ring_position&gt;, false, false&gt;::_Optional_base (1 samples, 0.02%)</title><rect x="1040.0" y="341" width="0.2" height="15.0" fill="rgb(229,108,14)" rx="2" ry="2" />
<text  x="1043.01" y="351.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (287 samples, 5.33%)</title><rect x="16.3" y="645" width="62.9" height="15.0" fill="rgb(211,93,24)" rx="2" ry="2" />
<text  x="19.35" y="655.5" >seasta..</text>
</g>
<g >
<title>ser::deserialize&lt;seastar::simple_memory_input_stream&gt; (3 samples, 0.06%)</title><rect x="1122.3" y="261" width="0.7" height="15.0" fill="rgb(238,28,19)" rx="2" ry="2" />
<text  x="1125.34" y="271.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (1 samples, 0.02%)</title><rect x="711.1" y="501" width="0.2" height="15.0" fill="rgb(222,115,52)" rx="2" ry="2" />
<text  x="714.12" y="511.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::partition_snapshot_flat_reader&lt;memtable&amp;&gt; (65 samples, 1.21%)</title><rect x="523.0" y="357" width="14.3" height="15.0" fill="rgb(248,104,48)" rx="2" ry="2" />
<text  x="526.03" y="367.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::operator= (1 samples, 0.02%)</title><rect x="833.3" y="485" width="0.2" height="15.0" fill="rgb(235,27,40)" rx="2" ry="2" />
<text  x="836.31" y="495.5" ></text>
</g>
<g >
<title>seastar::schedule_urgent (4 samples, 0.07%)</title><rect x="1137.4" y="565" width="0.9" height="15.0" fill="rgb(222,34,33)" rx="2" ry="2" />
<text  x="1140.45" y="575.5" ></text>
</g>
<g >
<title>std::__make_heap&lt;__gnu_cxx::__normal_iterator&lt;boost::iterator_range&lt;boost::intrusive::tree_iterator&lt;boost::intrusive::mhtraits&lt;range_tombstone_entry, boost::intrusive::set_member_hook&lt;boost::intrusive::link_mode&lt; (1 samples, 0.02%)</title><rect x="265.1" y="213" width="0.2" height="15.0" fill="rgb(231,45,42)" rx="2" ry="2" />
<text  x="268.09" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="942.6" y="453" width="0.2" height="15.0" fill="rgb(234,76,32)" rx="2" ry="2" />
<text  x="945.57" y="463.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::find (3 samples, 0.06%)</title><rect x="670.4" y="501" width="0.7" height="15.0" fill="rgb(207,205,10)" rx="2" ry="2" />
<text  x="673.40" y="511.5" ></text>
</g>
<g >
<title>cql3::query_options::query_options (16 samples, 0.30%)</title><rect x="850.6" y="485" width="3.5" height="15.0" fill="rgb(216,27,4)" rx="2" ry="2" />
<text  x="853.60" y="495.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_in_thread&lt;sstables::sstable_writer, flat_mutation_reader::no_filter&gt; (1 samples, 0.02%)</title><rect x="80.7" y="549" width="0.2" height="15.0" fill="rgb(231,151,15)" rx="2" ry="2" />
<text  x="83.73" y="559.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (42 samples, 0.78%)</title><rect x="1117.5" y="517" width="9.2" height="15.0" fill="rgb(206,165,17)" rx="2" ry="2" />
<text  x="1120.52" y="527.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.02%)</title><rect x="46.1" y="181" width="0.2" height="15.0" fill="rgb(249,161,7)" rx="2" ry="2" />
<text  x="49.13" y="191.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;std::pair&lt;seastar::shared_ptr&lt;service::abstract_read_executor&gt;, nonwrapping_interval&lt;dht::token&gt; &gt;, 1ul&gt;::reserve (1 samples, 0.02%)</title><rect x="1091.2" y="437" width="0.3" height="15.0" fill="rgb(238,119,31)" rx="2" ry="2" />
<text  x="1094.25" y="447.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (1 samples, 0.02%)</title><rect x="1091.5" y="453" width="0.2" height="15.0" fill="rgb(243,139,54)" rx="2" ry="2" />
<text  x="1094.47" y="463.5" ></text>
</g>
<g >
<title>std::default_delete&lt;query::partition_slice const&gt;::operator (2 samples, 0.04%)</title><rect x="610.0" y="485" width="0.4" height="15.0" fill="rgb(238,124,34)" rx="2" ry="2" />
<text  x="612.96" y="495.5" ></text>
</g>
<g >
<title>partition_snapshot_row_cursor::ensure_entry_if_complete (1 samples, 0.02%)</title><rect x="17.0" y="613" width="0.2" height="15.0" fill="rgb(227,214,30)" rx="2" ry="2" />
<text  x="20.01" y="623.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.02%)</title><rect x="56.0" y="133" width="0.2" height="15.0" fill="rgb(208,135,37)" rx="2" ry="2" />
<text  x="58.98" y="143.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::set_input (1 samples, 0.02%)</title><rect x="27.1" y="325" width="0.2" height="15.0" fill="rgb(230,100,33)" rx="2" ry="2" />
<text  x="30.08" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::allocate_anonymous_memory (1 samples, 0.02%)</title><rect x="1170.3" y="533" width="0.2" height="15.0" fill="rgb(253,187,6)" rx="2" ry="2" />
<text  x="1173.29" y="543.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::get (1 samples, 0.02%)</title><rect x="358.2" y="261" width="0.2" height="15.0" fill="rgb(210,170,52)" rx="2" ry="2" />
<text  x="361.15" y="271.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate (78 samples, 1.45%)</title><rect x="885.6" y="405" width="17.1" height="15.0" fill="rgb(213,64,6)" rx="2" ry="2" />
<text  x="888.64" y="415.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::clear (5 samples, 0.09%)</title><rect x="198.3" y="325" width="1.1" height="15.0" fill="rgb(245,35,16)" rx="2" ry="2" />
<text  x="201.31" y="335.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="58.8" y="277" width="0.2" height="15.0" fill="rgb(231,137,34)" rx="2" ry="2" />
<text  x="61.83" y="287.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql3::column_identifier&gt;::shared_ptr_count_for&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; const&amp;, seastar::shared_ptr&lt;abstract_type const&gt;&amp;&gt; (1 samples, 0.02%)</title><rect x="107.2" y="389" width="0.2" height="15.0" fill="rgb(228,143,7)" rx="2" ry="2" />
<text  x="110.22" y="399.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;gms::inet_address, std::pair&lt;gms::inet_address const, utils::UUID&gt;, std::allocator&lt;std::pair&lt;gms::inet_address const, utils::UUID&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;gms::inet_address&gt;, std::hash&lt;gms::inet_address&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (1 samples, 0.02%)</title><rect x="1147.5" y="517" width="0.2" height="15.0" fill="rgb(226,97,28)" rx="2" ry="2" />
<text  x="1150.52" y="527.5" ></text>
</g>
<g >
<title>operator delete (5 samples, 0.09%)</title><rect x="636.7" y="485" width="1.1" height="15.0" fill="rgb(226,103,41)" rx="2" ry="2" />
<text  x="639.68" y="495.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (42 samples, 0.78%)</title><rect x="1117.5" y="501" width="9.2" height="15.0" fill="rgb(225,173,46)" rx="2" ry="2" />
<text  x="1120.52" y="511.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (28 samples, 0.52%)</title><rect x="297.5" y="357" width="6.1" height="15.0" fill="rgb(218,195,48)" rx="2" ry="2" />
<text  x="300.50" y="367.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="50.7" y="325" width="0.2" height="15.0" fill="rgb(252,220,11)" rx="2" ry="2" />
<text  x="53.73" y="335.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (2 samples, 0.04%)</title><rect x="839.4" y="405" width="0.5" height="15.0" fill="rgb(220,98,6)" rx="2" ry="2" />
<text  x="842.44" y="415.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (26 samples, 0.48%)</title><rect x="428.9" y="277" width="5.7" height="15.0" fill="rgb(238,93,11)" rx="2" ry="2" />
<text  x="431.88" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="62.8" y="309" width="0.2" height="15.0" fill="rgb(251,159,24)" rx="2" ry="2" />
<text  x="65.77" y="319.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::storage_proxy::mutate_internal&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="727.8" y="565" width="0.2" height="15.0" fill="rgb(209,62,25)" rx="2" ry="2" />
<text  x="730.77" y="575.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::digest_read_result&gt;::move_it (1 samples, 0.02%)</title><rect x="987.2" y="405" width="0.3" height="15.0" fill="rgb(227,152,19)" rx="2" ry="2" />
<text  x="990.24" y="415.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.02%)</title><rect x="58.6" y="229" width="0.2" height="15.0" fill="rgb(234,105,19)" rx="2" ry="2" />
<text  x="61.61" y="239.5" ></text>
</g>
<g >
<title>schema::schema (1 samples, 0.02%)</title><rect x="17.7" y="293" width="0.2" height="15.0" fill="rgb(251,116,3)" rx="2" ry="2" />
<text  x="20.66" y="303.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (1 samples, 0.02%)</title><rect x="778.8" y="421" width="0.2" height="15.0" fill="rgb(221,112,6)" rx="2" ry="2" />
<text  x="781.78" y="431.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (1 samples, 0.02%)</title><rect x="810.8" y="261" width="0.2" height="15.0" fill="rgb(249,3,50)" rx="2" ry="2" />
<text  x="813.75" y="271.5" ></text>
</g>
<g >
<title>boost::iterator_range&lt;boost::iterators::transform_iterator&lt;boost::range_detail::default_constructible_unary_fn_wrapper&lt;service::abstract_write_response_handler::max_backlog (1 samples, 0.02%)</title><rect x="728.2" y="469" width="0.2" height="15.0" fill="rgb(253,167,16)" rx="2" ry="2" />
<text  x="731.20" y="479.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::~deque (4 samples, 0.07%)</title><rect x="639.7" y="469" width="0.9" height="15.0" fill="rgb(216,47,47)" rx="2" ry="2" />
<text  x="642.74" y="479.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::operator (1 samples, 0.02%)</title><rect x="847.1" y="405" width="0.2" height="15.0" fill="rgb(224,107,39)" rx="2" ry="2" />
<text  x="850.10" y="415.5" ></text>
</g>
<g >
<title>utils::array_search_gt (1 samples, 0.02%)</title><rect x="502.2" y="341" width="0.3" height="15.0" fill="rgb(229,202,14)" rx="2" ry="2" />
<text  x="505.23" y="351.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::leaf_node::allocate (1 samples, 0.02%)</title><rect x="223.3" y="197" width="0.2" height="15.0" fill="rgb(219,14,45)" rx="2" ry="2" />
<text  x="226.27" y="207.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;single_node_cql_env::core_local_state&gt;::local (2 samples, 0.04%)</title><rect x="78.3" y="549" width="0.5" height="15.0" fill="rgb(238,206,19)" rx="2" ry="2" />
<text  x="81.32" y="559.5" ></text>
</g>
<g >
<title>get_common_indices.constprop.0 (1 samples, 0.02%)</title><rect x="80.5" y="677" width="0.2" height="15.0" fill="rgb(241,19,6)" rx="2" ry="2" />
<text  x="83.51" y="687.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;void&gt;  (1 samples, 0.02%)</title><rect x="17.7" y="405" width="0.2" height="15.0" fill="rgb(234,166,12)" rx="2" ry="2" />
<text  x="20.66" y="415.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (1 samples, 0.02%)</title><rect x="635.8" y="501" width="0.2" height="15.0" fill="rgb(247,27,47)" rx="2" ry="2" />
<text  x="638.80" y="511.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::create_index_statement, std::default_delete&lt;cql3::statements::create_index_statement&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="63.6" y="437" width="0.3" height="15.0" fill="rgb(211,55,5)" rx="2" ry="2" />
<text  x="66.65" y="447.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;utils::small_vector&lt;service::storage_proxy::unique_response_handler, 1ul&gt; &gt; &gt;::invoke&lt;service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;, service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (22 samples, 0.41%)</title><rect x="1129.1" y="341" width="4.8" height="15.0" fill="rgb(206,60,18)" rx="2" ry="2" />
<text  x="1132.13" y="351.5" ></text>
</g>
<g >
<title>database::find_column_family (2 samples, 0.04%)</title><rect x="1126.3" y="405" width="0.4" height="15.0" fill="rgb(251,156,19)" rx="2" ry="2" />
<text  x="1129.28" y="415.5" ></text>
</g>
<g >
<title>__libc_read (2 samples, 0.04%)</title><rect x="1169.4" y="517" width="0.5" height="15.0" fill="rgb(215,50,10)" rx="2" ry="2" />
<text  x="1172.42" y="527.5" ></text>
</g>
<g >
<title>utils::tuple_hash::hash_impl&lt;1ul, auth::resource_kind, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (1 samples, 0.02%)</title><rect x="821.3" y="357" width="0.2" height="15.0" fill="rgb(248,171,21)" rx="2" ry="2" />
<text  x="824.26" y="367.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.02%)</title><rect x="48.1" y="229" width="0.2" height="15.0" fill="rgb(225,67,53)" rx="2" ry="2" />
<text  x="51.10" y="239.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.02%)</title><rect x="55.1" y="325" width="0.2" height="15.0" fill="rgb(229,30,37)" rx="2" ry="2" />
<text  x="58.11" y="335.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::clear (1 samples, 0.02%)</title><rect x="836.6" y="501" width="0.2" height="15.0" fill="rgb(249,89,20)" rx="2" ry="2" />
<text  x="839.59" y="511.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::~modification_statement (4 samples, 0.07%)</title><rect x="664.3" y="533" width="0.8" height="15.0" fill="rgb(226,92,48)" rx="2" ry="2" />
<text  x="667.27" y="543.5" ></text>
</g>
<g >
<title>abstract_type::get_string (1 samples, 0.02%)</title><rect x="107.2" y="357" width="0.2" height="15.0" fill="rgb(246,120,17)" rx="2" ry="2" />
<text  x="110.22" y="367.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (9 samples, 0.17%)</title><rect x="339.1" y="309" width="2.0" height="15.0" fill="rgb(230,81,17)" rx="2" ry="2" />
<text  x="342.10" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (3 samples, 0.06%)</title><rect x="100.0" y="485" width="0.7" height="15.0" fill="rgb(210,115,8)" rx="2" ry="2" />
<text  x="102.99" y="495.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.06%)</title><rect x="208.6" y="245" width="0.7" height="15.0" fill="rgb(205,103,52)" rx="2" ry="2" />
<text  x="211.60" y="255.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.04%)</title><rect x="46.3" y="325" width="0.5" height="15.0" fill="rgb(210,122,13)" rx="2" ry="2" />
<text  x="49.35" y="335.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (42 samples, 0.78%)</title><rect x="1117.5" y="485" width="9.2" height="15.0" fill="rgb(213,192,19)" rx="2" ry="2" />
<text  x="1120.52" y="495.5" ></text>
</g>
<g >
<title>partition_snapshot::version_count (2 samples, 0.04%)</title><rect x="263.6" y="213" width="0.4" height="15.0" fill="rgb(218,41,29)" rx="2" ry="2" />
<text  x="266.56" y="223.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::CommonToken (1 samples, 0.02%)</title><rect x="24.5" y="261" width="0.2" height="15.0" fill="rgb(221,88,54)" rx="2" ry="2" />
<text  x="27.45" y="271.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::drop_function_statement, std::default_delete&lt;cql3::statements::drop_function_statement&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="65.2" y="437" width="0.2" height="15.0" fill="rgb(226,8,46)" rx="2" ry="2" />
<text  x="68.18" y="447.5" ></text>
</g>
<g >
<title>cql3::query_options::prepare (1 samples, 0.02%)</title><rect x="745.7" y="501" width="0.2" height="15.0" fill="rgb(211,187,17)" rx="2" ry="2" />
<text  x="748.72" y="511.5" ></text>
</g>
<g >
<title>seastar::fair_queue::dispatch_requests (1 samples, 0.02%)</title><rect x="1168.8" y="549" width="0.2" height="15.0" fill="rgb(253,104,18)" rx="2" ry="2" />
<text  x="1171.76" y="559.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::~partition_snapshot_flat_reader (34 samples, 0.63%)</title><rect x="585.2" y="389" width="7.5" height="15.0" fill="rgb(238,173,47)" rx="2" ry="2" />
<text  x="588.22" y="399.5" ></text>
</g>
<g >
<title>locator::token_metadata::first_token (33 samples, 0.61%)</title><rect x="1073.3" y="341" width="7.2" height="15.0" fill="rgb(205,219,32)" rx="2" ry="2" />
<text  x="1076.29" y="351.5" ></text>
</g>
<g >
<title>query::querier&lt; (1,893 samples, 35.13%)</title><rect x="163.9" y="501" width="414.5" height="15.0" fill="rgb(250,143,25)" rx="2" ry="2" />
<text  x="166.93" y="511.5" >query::querier&lt;</text>
</g>
<g >
<title>logalloc::allocating_section::with_reserve&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (435 samples, 8.07%)</title><rect x="200.7" y="341" width="95.3" height="15.0" fill="rgb(213,222,48)" rx="2" ry="2" />
<text  x="203.72" y="351.5" >logalloc::a..</text>
</g>
<g >
<title>std::vector&lt;managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="862.6" y="389" width="0.3" height="15.0" fill="rgb(250,103,30)" rx="2" ry="2" />
<text  x="865.65" y="399.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::set_charPositionInLine (1 samples, 0.02%)</title><rect x="28.2" y="309" width="0.2" height="15.0" fill="rgb(205,8,1)" rx="2" ry="2" />
<text  x="31.17" y="319.5" ></text>
</g>
<g >
<title>std::__optional_hash_call_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, true&gt;::operator (4 samples, 0.07%)</title><rect x="802.9" y="213" width="0.8" height="15.0" fill="rgb(245,103,9)" rx="2" ry="2" />
<text  x="805.87" y="223.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::raw::parsed_statement, std::default_delete&lt;cql3::statements::raw::parsed_statement&gt; &gt;::reset (1 samples, 0.02%)</title><rect x="66.7" y="405" width="0.2" height="15.0" fill="rgb(236,58,46)" rx="2" ry="2" />
<text  x="69.71" y="415.5" ></text>
</g>
<g >
<title>bound_view::from_range_end&lt;nonwrapping_interval&gt; (2 samples, 0.04%)</title><rect x="277.8" y="277" width="0.4" height="15.0" fill="rgb(252,155,22)" rx="2" ry="2" />
<text  x="280.79" y="287.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::drop_view_statement, std::default_delete&lt;cql3::statements::drop_view_statement&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::statements::drop_view_statement&gt;, void&gt; (1 samples, 0.02%)</title><rect x="65.6" y="437" width="0.2" height="15.0" fill="rgb(205,56,34)" rx="2" ry="2" />
<text  x="68.62" y="447.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::clear (11 samples, 0.20%)</title><rect x="403.3" y="261" width="2.4" height="15.0" fill="rgb(254,17,21)" rx="2" ry="2" />
<text  x="406.26" y="271.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="312.0" y="373" width="0.2" height="15.0" fill="rgb(252,218,1)" rx="2" ry="2" />
<text  x="314.95" y="383.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (2 samples, 0.04%)</title><rect x="887.4" y="373" width="0.4" height="15.0" fill="rgb(251,97,24)" rx="2" ry="2" />
<text  x="890.39" y="383.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.02%)</title><rect x="60.6" y="357" width="0.2" height="15.0" fill="rgb(227,177,31)" rx="2" ry="2" />
<text  x="63.58" y="367.5" ></text>
</g>
<g >
<title>ser::writer_of_column&lt;bytes_ostream&gt;::writer_of_column (1 samples, 0.02%)</title><rect x="1132.2" y="181" width="0.2" height="15.0" fill="rgb(247,43,32)" rx="2" ry="2" />
<text  x="1135.19" y="191.5" ></text>
</g>
<g >
<title>std::tuple&lt;cql3::statements::create_type_statement*, std::default_delete&lt;cql3::statements::create_type_statement&gt; &gt;::tuple&lt;true, true&gt; (1 samples, 0.02%)</title><rect x="64.5" y="389" width="0.2" height="15.0" fill="rgb(218,229,9)" rx="2" ry="2" />
<text  x="67.52" y="399.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (557 samples, 10.34%)</title><rect x="327.5" y="453" width="122.0" height="15.0" fill="rgb(207,178,51)" rx="2" ry="2" />
<text  x="330.50" y="463.5" >query::consume_..</text>
</g>
<g >
<title>intrusive_b::node&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (3 samples, 0.06%)</title><rect x="1133.9" y="325" width="0.7" height="15.0" fill="rgb(232,152,14)" rx="2" ry="2" />
<text  x="1136.95" y="335.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (34 samples, 0.63%)</title><rect x="1127.2" y="453" width="7.4" height="15.0" fill="rgb(207,195,23)" rx="2" ry="2" />
<text  x="1130.16" y="463.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::release (1 samples, 0.02%)</title><rect x="54.0" y="277" width="0.2" height="15.0" fill="rgb(250,166,6)" rx="2" ry="2" />
<text  x="57.01" y="287.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="1115.8" y="485" width="0.2" height="15.0" fill="rgb(230,198,47)" rx="2" ry="2" />
<text  x="1118.77" y="495.5" ></text>
</g>
<g >
<title>query::result::result (8 samples, 0.15%)</title><rect x="615.7" y="485" width="1.7" height="15.0" fill="rgb(250,123,21)" rx="2" ry="2" />
<text  x="618.66" y="495.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (1 samples, 0.02%)</title><rect x="566.8" y="437" width="0.2" height="15.0" fill="rgb(237,212,33)" rx="2" ry="2" />
<text  x="569.83" y="447.5" ></text>
</g>
<g >
<title>service::client_state::check_has_permission (151 samples, 2.80%)</title><rect x="784.7" y="405" width="33.1" height="15.0" fill="rgb(245,179,8)" rx="2" ry="2" />
<text  x="787.70" y="415.5" >se..</text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::sharded_parallel_for_each (1 samples, 0.02%)</title><rect x="17.7" y="517" width="0.2" height="15.0" fill="rgb(223,179,38)" rx="2" ry="2" />
<text  x="20.66" y="527.5" ></text>
</g>
<g >
<title>seastar::promise&lt;void&gt;::promise (1 samples, 0.02%)</title><rect x="1030.4" y="261" width="0.2" height="15.0" fill="rgb(224,142,2)" rx="2" ry="2" />
<text  x="1033.37" y="271.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;compact_for_query&lt; (1 samples, 0.02%)</title><rect x="702.1" y="533" width="0.3" height="15.0" fill="rgb(225,1,34)" rx="2" ry="2" />
<text  x="705.15" y="543.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::digest_read_result&gt;::then_wrapped_nrvo&lt;void, service::abstract_read_executor::execute (1 samples, 0.02%)</title><rect x="986.8" y="405" width="0.2" height="15.0" fill="rgb(246,123,10)" rx="2" ry="2" />
<text  x="989.80" y="415.5" ></text>
</g>
<g >
<title>query::querier_base::~querier_base (40 samples, 0.74%)</title><rect x="606.5" y="501" width="8.7" height="15.0" fill="rgb(235,62,39)" rx="2" ry="2" />
<text  x="609.46" y="511.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="24.9" y="325" width="0.2" height="15.0" fill="rgb(236,226,27)" rx="2" ry="2" />
<text  x="27.89" y="335.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::cql_statement&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="836.8" y="501" width="0.2" height="15.0" fill="rgb(239,193,33)" rx="2" ry="2" />
<text  x="839.81" y="511.5" ></text>
</g>
<g >
<title>seastar::execution_stage::flush (1 samples, 0.02%)</title><rect x="766.1" y="421" width="0.2" height="15.0" fill="rgb(253,108,14)" rx="2" ry="2" />
<text  x="769.08" y="431.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.02%)</title><rect x="24.9" y="277" width="0.2" height="15.0" fill="rgb(229,83,24)" rx="2" ry="2" />
<text  x="27.89" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="56.2" y="293" width="0.2" height="15.0" fill="rgb(236,224,0)" rx="2" ry="2" />
<text  x="59.20" y="303.5" ></text>
</g>
<g >
<title>operator delete (9 samples, 0.17%)</title><rect x="583.2" y="389" width="2.0" height="15.0" fill="rgb(244,150,51)" rx="2" ry="2" />
<text  x="586.25" y="399.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment&lt;schema const&amp;, rows_entry const&amp;&gt; (1 samples, 0.02%)</title><rect x="79.4" y="357" width="0.2" height="15.0" fill="rgb(214,215,23)" rx="2" ry="2" />
<text  x="82.41" y="367.5" ></text>
</g>
<g >
<title>create_partitions (278 samples, 5.16%)</title><rect x="18.1" y="597" width="60.9" height="15.0" fill="rgb(240,163,5)" rx="2" ry="2" />
<text  x="21.10" y="607.5" >create..</text>
</g>
<g >
<title>service::storage_proxy::send_to_live_endpoints (4 samples, 0.07%)</title><rect x="1128.0" y="325" width="0.9" height="15.0" fill="rgb(252,86,27)" rx="2" ry="2" />
<text  x="1131.03" y="335.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::metadata const&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="673.0" y="517" width="0.2" height="15.0" fill="rgb(233,204,45)" rx="2" ry="2" />
<text  x="676.02" y="527.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="690.5" y="517" width="0.3" height="15.0" fill="rgb(205,204,43)" rx="2" ry="2" />
<text  x="693.54" y="527.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (1 samples, 0.02%)</title><rect x="826.3" y="325" width="0.2" height="15.0" fill="rgb(231,66,51)" rx="2" ry="2" />
<text  x="829.30" y="335.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser&lt;std::_Mem_fn&lt;std::unique_ptr&lt;cql3::statements::raw::parsed_statement, std::default_delete&lt;cql3::statements::raw::parsed_statement&gt; &gt;  (1 samples, 0.02%)</title><rect x="11.1" y="421" width="0.2" height="15.0" fill="rgb(216,84,38)" rx="2" ry="2" />
<text  x="14.09" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="1064.3" y="389" width="0.2" height="15.0" fill="rgb(214,21,27)" rx="2" ry="2" />
<text  x="1067.31" y="399.5" ></text>
</g>
<g >
<title>cql3::constants::setter::execute (6 samples, 0.11%)</title><rect x="863.5" y="389" width="1.3" height="15.0" fill="rgb(234,59,12)" rx="2" ry="2" />
<text  x="866.52" y="399.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;cql3::raw_value&gt;::allocate (1 samples, 0.02%)</title><rect x="855.2" y="501" width="0.2" height="15.0" fill="rgb(243,195,18)" rx="2" ry="2" />
<text  x="858.20" y="511.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::pop_mutation_fragment (3 samples, 0.06%)</title><rect x="300.8" y="341" width="0.6" height="15.0" fill="rgb(237,225,44)" rx="2" ry="2" />
<text  x="303.78" y="351.5" ></text>
</g>
<g >
<title>database::has_keyspace (7 samples, 0.13%)</title><rect x="828.9" y="421" width="1.6" height="15.0" fill="rgb(219,208,14)" rx="2" ry="2" />
<text  x="831.93" y="431.5" ></text>
</g>
<g >
<title>bytes_view_hasher::update (1 samples, 0.02%)</title><rect x="75.3" y="437" width="0.2" height="15.0" fill="rgb(225,129,24)" rx="2" ry="2" />
<text  x="78.25" y="447.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit_slot&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::walking_visitor&lt;row::for_each_cell&lt;(anonymous namespace)::write_row_cells&lt;ser::deletable_row__cells&lt;bytes_ostream&gt; &gt; (4 samples, 0.07%)</title><rect x="1131.1" y="181" width="0.9" height="15.0" fill="rgb(245,70,11)" rx="2" ry="2" />
<text  x="1134.10" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::vector (10 samples, 0.19%)</title><rect x="909.3" y="421" width="2.2" height="15.0" fill="rgb(240,6,7)" rx="2" ry="2" />
<text  x="912.29" y="431.5" ></text>
</g>
<g >
<title>std::__relocate_object_a&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="50.1" y="261" width="0.2" height="15.0" fill="rgb(245,104,49)" rx="2" ry="2" />
<text  x="53.07" y="271.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::set_urgent_state (7 samples, 0.13%)</title><rect x="653.3" y="549" width="1.6" height="15.0" fill="rgb(222,48,29)" rx="2" ry="2" />
<text  x="656.32" y="559.5" ></text>
</g>
<g >
<title>query_state::query_state (21 samples, 0.39%)</title><rect x="618.3" y="501" width="4.6" height="15.0" fill="rgb(219,72,46)" rx="2" ry="2" />
<text  x="621.28" y="511.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (2 samples, 0.04%)</title><rect x="46.3" y="261" width="0.5" height="15.0" fill="rgb(252,190,7)" rx="2" ry="2" />
<text  x="49.35" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::emplace_back&lt;flat_mutation_reader&gt; (4 samples, 0.07%)</title><rect x="558.7" y="405" width="0.9" height="15.0" fill="rgb(231,182,9)" rx="2" ry="2" />
<text  x="561.73" y="415.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::merging_reader (24 samples, 0.45%)</title><rect x="480.1" y="357" width="5.3" height="15.0" fill="rgb(231,159,33)" rx="2" ry="2" />
<text  x="483.12" y="367.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::_S_destroy&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;, antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="51.8" y="293" width="0.2" height="15.0" fill="rgb(237,7,52)" rx="2" ry="2" />
<text  x="54.82" y="303.5" ></text>
</g>
<g >
<title>std::apply&lt;service::client_state::check_has_permission (124 samples, 2.30%)</title><rect x="788.0" y="389" width="27.1" height="15.0" fill="rgb(239,179,0)" rx="2" ry="2" />
<text  x="790.98" y="399.5" >s..</text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::local (3 samples, 0.06%)</title><rect x="1060.6" y="405" width="0.6" height="15.0" fill="rgb(240,167,36)" rx="2" ry="2" />
<text  x="1063.59" y="415.5" ></text>
</g>
<g >
<title>schema::column_at (10 samples, 0.19%)</title><rect x="419.5" y="229" width="2.2" height="15.0" fill="rgb(212,210,50)" rx="2" ry="2" />
<text  x="422.46" y="239.5" ></text>
</g>
<g >
<title>abstract_type::validate&lt;managed_bytes_basic_view&lt; (3 samples, 0.06%)</title><rect x="891.8" y="341" width="0.6" height="15.0" fill="rgb(207,104,51)" rx="2" ry="2" />
<text  x="894.77" y="351.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::statement_restrictions (11 samples, 0.20%)</title><rect x="72.2" y="469" width="2.4" height="15.0" fill="rgb(224,192,2)" rx="2" ry="2" />
<text  x="75.19" y="479.5" ></text>
</g>
<g >
<title>tracing::global_trace_state_ptr::global_trace_state_ptr (1 samples, 0.02%)</title><rect x="1047.5" y="341" width="0.2" height="15.0" fill="rgb(226,13,12)" rx="2" ry="2" />
<text  x="1050.45" y="351.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (10 samples, 0.19%)</title><rect x="526.1" y="325" width="2.2" height="15.0" fill="rgb(246,35,44)" rx="2" ry="2" />
<text  x="529.10" y="335.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (2 samples, 0.04%)</title><rect x="46.3" y="309" width="0.5" height="15.0" fill="rgb(221,160,20)" rx="2" ry="2" />
<text  x="49.35" y="319.5" ></text>
</g>
<g >
<title>sstables::mc::writer::consume_end_of_stream (1 samples, 0.02%)</title><rect x="80.7" y="533" width="0.2" height="15.0" fill="rgb(221,75,53)" rx="2" ry="2" />
<text  x="83.73" y="543.5" ></text>
</g>
<g >
<title>std::default_delete&lt;mutation_fragment::data&gt;::operator (2 samples, 0.04%)</title><rect x="438.7" y="309" width="0.5" height="15.0" fill="rgb(220,208,0)" rx="2" ry="2" />
<text  x="441.73" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (8 samples, 0.15%)</title><rect x="734.1" y="469" width="1.8" height="15.0" fill="rgb(240,99,27)" rx="2" ry="2" />
<text  x="737.12" y="479.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (4 samples, 0.07%)</title><rect x="41.7" y="341" width="0.9" height="15.0" fill="rgb(250,178,53)" rx="2" ry="2" />
<text  x="44.75" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="485.4" y="341" width="0.2" height="15.0" fill="rgb(214,102,11)" rx="2" ry="2" />
<text  x="488.37" y="351.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (38 samples, 0.71%)</title><rect x="507.5" y="293" width="8.3" height="15.0" fill="rgb(212,0,44)" rx="2" ry="2" />
<text  x="510.49" y="303.5" ></text>
</g>
<g >
<title>seastar::internal::future_base::future_base (1 samples, 0.02%)</title><rect x="774.0" y="469" width="0.2" height="15.0" fill="rgb(249,106,47)" rx="2" ry="2" />
<text  x="776.97" y="479.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::_S_construct&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; const&amp;&gt; (1 samples, 0.02%)</title><rect x="41.5" y="357" width="0.2" height="15.0" fill="rgb(226,214,48)" rx="2" ry="2" />
<text  x="44.53" y="367.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_token (1 samples, 0.02%)</title><rect x="669.5" y="469" width="0.2" height="15.0" fill="rgb(231,68,13)" rx="2" ry="2" />
<text  x="672.52" y="479.5" ></text>
</g>
<g >
<title>fmt::v7::detail::write&lt;char, char, fmt::v7::detail::buffer_appender&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="80.3" y="597" width="0.2" height="15.0" fill="rgb(211,147,2)" rx="2" ry="2" />
<text  x="83.29" y="607.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_clustering_bounds (1 samples, 0.02%)</title><rect x="862.9" y="437" width="0.2" height="15.0" fill="rgb(209,131,36)" rx="2" ry="2" />
<text  x="865.87" y="447.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::cql_statement&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="77.9" y="549" width="0.2" height="15.0" fill="rgb(243,14,39)" rx="2" ry="2" />
<text  x="80.88" y="559.5" ></text>
</g>
<g >
<title>reader_permit::consume_memory (3 samples, 0.06%)</title><rect x="260.7" y="229" width="0.7" height="15.0" fill="rgb(243,208,52)" rx="2" ry="2" />
<text  x="263.71" y="239.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.02%)</title><rect x="48.5" y="213" width="0.3" height="15.0" fill="rgb(236,173,6)" rx="2" ry="2" />
<text  x="51.54" y="223.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::operator= (2 samples, 0.04%)</title><rect x="836.2" y="501" width="0.4" height="15.0" fill="rgb(213,115,53)" rx="2" ry="2" />
<text  x="839.15" y="511.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_Optional_payload_base (1 samples, 0.02%)</title><rect x="564.2" y="469" width="0.2" height="15.0" fill="rgb(222,179,51)" rx="2" ry="2" />
<text  x="567.20" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, unsigned int, std::_Identity&lt;unsigned int&gt;, std::less&lt;unsigned int&gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;unsigned int&gt; &gt;::_M_end (1 samples, 0.02%)</title><rect x="40.2" y="341" width="0.2" height="15.0" fill="rgb(237,32,39)" rx="2" ry="2" />
<text  x="43.22" y="351.5" ></text>
</g>
<g >
<title>operator new (6 samples, 0.11%)</title><rect x="1063.0" y="389" width="1.3" height="15.0" fill="rgb(214,167,37)" rx="2" ry="2" />
<text  x="1066.00" y="399.5" ></text>
</g>
<g >
<title>cql3::column_identifier_raw::column_identifier_raw (1 samples, 0.02%)</title><rect x="47.4" y="357" width="0.3" height="15.0" fill="rgb(230,7,14)" rx="2" ry="2" />
<text  x="50.44" y="367.5" ></text>
</g>
<g >
<title>std::hash&lt;std::basic_string_view&lt;signed char, std::char_traits&lt;signed char&gt; &gt; &gt;::operator (4 samples, 0.07%)</title><rect x="760.8" y="341" width="0.9" height="15.0" fill="rgb(243,188,32)" rx="2" ry="2" />
<text  x="763.83" y="351.5" ></text>
</g>
<g >
<title>sstables::write (1 samples, 0.02%)</title><rect x="80.7" y="485" width="0.2" height="15.0" fill="rgb(218,174,6)" rx="2" ry="2" />
<text  x="83.73" y="495.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.02%)</title><rect x="55.1" y="309" width="0.2" height="15.0" fill="rgb(221,18,35)" rx="2" ry="2" />
<text  x="58.11" y="319.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;::operator (2 samples, 0.04%)</title><rect x="75.3" y="453" width="0.4" height="15.0" fill="rgb(205,156,45)" rx="2" ry="2" />
<text  x="78.25" y="463.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::selector (1 samples, 0.02%)</title><rect x="11.1" y="309" width="0.2" height="15.0" fill="rgb(238,218,54)" rx="2" ry="2" />
<text  x="14.09" y="319.5" ></text>
</g>
<g >
<title>do_cql_test (279 samples, 5.18%)</title><rect x="18.1" y="613" width="61.1" height="15.0" fill="rgb(231,127,49)" rx="2" ry="2" />
<text  x="21.10" y="623.5" >do_cql..</text>
</g>
<g >
<title>position_in_partition::position_in_partition (3 samples, 0.06%)</title><rect x="276.5" y="293" width="0.6" height="15.0" fill="rgb(244,50,52)" rx="2" ry="2" />
<text  x="279.48" y="303.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (12 samples, 0.22%)</title><rect x="424.7" y="293" width="2.6" height="15.0" fill="rgb(243,128,7)" rx="2" ry="2" />
<text  x="427.72" y="303.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::~_Variant_storage (1 samples, 0.02%)</title><rect x="664.5" y="469" width="0.2" height="15.0" fill="rgb(206,159,5)" rx="2" ry="2" />
<text  x="667.49" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::find_and_unlink_span_reclaiming (1 samples, 0.02%)</title><rect x="574.1" y="325" width="0.2" height="15.0" fill="rgb(211,13,43)" rx="2" ry="2" />
<text  x="577.05" y="335.5" ></text>
</g>
<g >
<title>seastar::reactor_backend_aio::await_events (5 samples, 0.09%)</title><rect x="1169.2" y="549" width="1.1" height="15.0" fill="rgb(232,209,16)" rx="2" ry="2" />
<text  x="1172.20" y="559.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (1 samples, 0.02%)</title><rect x="661.4" y="533" width="0.2" height="15.0" fill="rgb(220,167,16)" rx="2" ry="2" />
<text  x="664.42" y="543.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (3 samples, 0.06%)</title><rect x="706.7" y="533" width="0.7" height="15.0" fill="rgb(206,155,3)" rx="2" ry="2" />
<text  x="709.75" y="543.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mQUOTED_NAME (4 samples, 0.07%)</title><rect x="35.6" y="325" width="0.9" height="15.0" fill="rgb(245,186,17)" rx="2" ry="2" />
<text  x="38.62" y="335.5" ></text>
</g>
<g >
<title>service::storage_proxy::sort_endpoints_by_proximity (7 samples, 0.13%)</title><rect x="1085.1" y="389" width="1.5" height="15.0" fill="rgb(230,207,38)" rx="2" ry="2" />
<text  x="1088.12" y="399.5" ></text>
</g>
<g >
<title>multishard_combining_reader::fill_buffer (1 samples, 0.02%)</title><rect x="107.7" y="341" width="0.2" height="15.0" fill="rgb(218,121,30)" rx="2" ry="2" />
<text  x="110.66" y="351.5" ></text>
</g>
<g >
<title>sstables::sstable::do_write_simple (1 samples, 0.02%)</title><rect x="80.7" y="501" width="0.2" height="15.0" fill="rgb(235,188,52)" rx="2" ry="2" />
<text  x="83.73" y="511.5" ></text>
</g>
<g >
<title>serialize (1 samples, 0.02%)</title><rect x="72.4" y="357" width="0.2" height="15.0" fill="rgb(241,159,40)" rx="2" ry="2" />
<text  x="75.40" y="367.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (1 samples, 0.02%)</title><rect x="585.9" y="341" width="0.2" height="15.0" fill="rgb(252,28,45)" rx="2" ry="2" />
<text  x="588.88" y="351.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.07%)</title><rect x="613.5" y="453" width="0.8" height="15.0" fill="rgb(223,164,54)" rx="2" ry="2" />
<text  x="616.47" y="463.5" ></text>
</g>
<g >
<title>row_cache::do_update (1 samples, 0.02%)</title><rect x="11.8" y="645" width="0.2" height="15.0" fill="rgb(250,202,39)" rx="2" ry="2" />
<text  x="14.75" y="655.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (29 samples, 0.54%)</title><rect x="860.2" y="533" width="6.4" height="15.0" fill="rgb(246,76,30)" rx="2" ry="2" />
<text  x="863.24" y="543.5" ></text>
</g>
<g >
<title>ser::deletable_row_view::deleted_at (1 samples, 0.02%)</title><rect x="107.9" y="453" width="0.2" height="15.0" fill="rgb(219,76,1)" rx="2" ry="2" />
<text  x="110.88" y="463.5" ></text>
</g>
<g >
<title>antlr3::Lexer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchc (1 samples, 0.02%)</title><rect x="36.5" y="309" width="0.2" height="15.0" fill="rgb(240,196,23)" rx="2" ry="2" />
<text  x="39.49" y="319.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_Optional_payload_base (4 samples, 0.07%)</title><rect x="1044.8" y="277" width="0.9" height="15.0" fill="rgb(221,75,10)" rx="2" ry="2" />
<text  x="1047.83" y="287.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::read_next (301 samples, 5.59%)</title><rect x="213.6" y="309" width="65.9" height="15.0" fill="rgb(246,37,50)" rx="2" ry="2" />
<text  x="216.64" y="319.5" >partiti..</text>
</g>
<g >
<title>seastar::future_state_base::any::operator= (2 samples, 0.04%)</title><rect x="832.9" y="453" width="0.4" height="15.0" fill="rgb(210,9,39)" rx="2" ry="2" />
<text  x="835.87" y="463.5" ></text>
</g>
<g >
<title>seastar::lambda_task&lt;seastar::execution_stage::flush (1,264 samples, 23.46%)</title><rect x="859.8" y="565" width="276.8" height="15.0" fill="rgb(205,95,42)" rx="2" ry="2" />
<text  x="862.80" y="575.5" >seastar::lambda_task&lt;seastar::executi..</text>
</g>
<g >
<title>ser::after_qr_cell__value&lt;bytes_ostream&gt;::skip_ttl (15 samples, 0.28%)</title><rect x="388.4" y="229" width="3.3" height="15.0" fill="rgb(209,38,42)" rx="2" ry="2" />
<text  x="391.37" y="239.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_28has_slice_or_needs_filteringERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES28_S2B_ (1 samples, 0.02%)</title><rect x="951.1" y="421" width="0.2" height="15.0" fill="rgb(221,116,25)" rx="2" ry="2" />
<text  x="954.11" y="431.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;8ul, cql3::expr::untyped_constant&gt; (3 samples, 0.06%)</title><rect x="53.1" y="133" width="0.7" height="15.0" fill="rgb(230,80,36)" rx="2" ry="2" />
<text  x="56.14" y="143.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (1 samples, 0.02%)</title><rect x="700.8" y="549" width="0.3" height="15.0" fill="rgb(254,120,36)" rx="2" ry="2" />
<text  x="703.83" y="559.5" ></text>
</g>
<g >
<title>std::pair&lt;auth::role_or_anonymous, auth::resource&gt;::pair (6 samples, 0.11%)</title><rect x="795.2" y="277" width="1.3" height="15.0" fill="rgb(254,3,41)" rx="2" ry="2" />
<text  x="798.21" y="287.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="45.0" y="325" width="0.3" height="15.0" fill="rgb(219,68,13)" rx="2" ry="2" />
<text  x="48.03" y="335.5" ></text>
</g>
<g >
<title>seastar::do_until&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (3 samples, 0.06%)</title><rect x="859.1" y="485" width="0.7" height="15.0" fill="rgb(245,171,6)" rx="2" ry="2" />
<text  x="862.14" y="495.5" ></text>
</g>
<g >
<title>std::apply&lt;service::storage_proxy::query_nonsingular_mutations_locally (1 samples, 0.02%)</title><rect x="107.7" y="437" width="0.2" height="15.0" fill="rgb(250,222,46)" rx="2" ry="2" />
<text  x="110.66" y="447.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::pop_mutation_fragment (5 samples, 0.09%)</title><rect x="191.1" y="309" width="1.1" height="15.0" fill="rgb(249,178,42)" rx="2" ry="2" />
<text  x="194.08" y="319.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::abstract_read_executor&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="968.6" y="437" width="0.2" height="15.0" fill="rgb(222,17,45)" rx="2" ry="2" />
<text  x="971.63" y="447.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::partition_snapshot_flat_reader&lt;memtable&amp;&gt; (38 samples, 0.71%)</title><rect x="528.5" y="325" width="8.3" height="15.0" fill="rgb(218,126,35)" rx="2" ry="2" />
<text  x="531.51" y="335.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;std::function&lt;std::function&lt;partition_presence_checker_result  (1 samples, 0.02%)</title><rect x="11.8" y="581" width="0.2" height="15.0" fill="rgb(224,19,22)" rx="2" ry="2" />
<text  x="14.75" y="591.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;auth::resource_kind, std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;auth::resource_kind&gt;, std::hash&lt;auth::resource_kind&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::at (4 samples, 0.07%)</title><rect x="779.0" y="421" width="0.9" height="15.0" fill="rgb(213,2,21)" rx="2" ry="2" />
<text  x="782.00" y="431.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="48.1" y="309" width="0.2" height="15.0" fill="rgb(237,122,36)" rx="2" ry="2" />
<text  x="51.10" y="319.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.02%)</title><rect x="55.1" y="133" width="0.2" height="15.0" fill="rgb(217,6,47)" rx="2" ry="2" />
<text  x="58.11" y="143.5" ></text>
</g>
<g >
<title>ser::deletable_row_view::marker (1 samples, 0.02%)</title><rect x="1123.2" y="293" width="0.2" height="15.0" fill="rgb(221,12,4)" rx="2" ry="2" />
<text  x="1126.22" y="303.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.02%)</title><rect x="115.1" y="533" width="0.2" height="15.0" fill="rgb(247,17,18)" rx="2" ry="2" />
<text  x="118.10" y="543.5" ></text>
</g>
<g >
<title>sstables::write_cell_value&lt;bytes_ostream&gt; (1 samples, 0.02%)</title><rect x="82.9" y="389" width="0.2" height="15.0" fill="rgb(228,50,7)" rx="2" ry="2" />
<text  x="85.92" y="399.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.07%)</title><rect x="474.0" y="341" width="0.9" height="15.0" fill="rgb(228,171,50)" rx="2" ry="2" />
<text  x="476.99" y="351.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;boost::iterator_range&lt;mutation_fragment*&gt; &gt;::take_value (2 samples, 0.04%)</title><rect x="307.1" y="373" width="0.5" height="15.0" fill="rgb(248,155,1)" rx="2" ry="2" />
<text  x="310.13" y="383.5" ></text>
</g>
<g >
<title>database::has_keyspace (1 samples, 0.02%)</title><rect x="75.9" y="501" width="0.2" height="15.0" fill="rgb(230,59,28)" rx="2" ry="2" />
<text  x="78.91" y="511.5" ></text>
</g>
<g >
<title>__tls_init (1 samples, 0.02%)</title><rect x="525.7" y="325" width="0.2" height="15.0" fill="rgb(213,147,35)" rx="2" ry="2" />
<text  x="528.66" y="335.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::maybe_refresh_state (7 samples, 0.13%)</title><rect x="273.2" y="229" width="1.5" height="15.0" fill="rgb(234,117,27)" rx="2" ry="2" />
<text  x="276.20" y="239.5" ></text>
</g>
<g >
<title>[unknown] (20 samples, 0.37%)</title><rect x="12.0" y="661" width="4.3" height="15.0" fill="rgb(250,105,10)" rx="2" ry="2" />
<text  x="14.97" y="671.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;void&gt; &gt;::satisfy_with_result_of&lt;seastar::future&lt;void&gt;::then_wrapped_nrvo&lt;seastar::future&lt;void&gt;, seastar::sharded&lt;database&gt;::stop (1 samples, 0.02%)</title><rect x="703.5" y="549" width="0.2" height="15.0" fill="rgb(219,39,20)" rx="2" ry="2" />
<text  x="706.46" y="559.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="44.4" y="341" width="0.2" height="15.0" fill="rgb(230,203,50)" rx="2" ry="2" />
<text  x="47.38" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="144.4" y="517" width="0.3" height="15.0" fill="rgb(226,224,6)" rx="2" ry="2" />
<text  x="147.44" y="527.5" ></text>
</g>
<g >
<title>cql3::constants::setter::execute (3 samples, 0.06%)</title><rect x="863.5" y="373" width="0.7" height="15.0" fill="rgb(244,189,31)" rx="2" ry="2" />
<text  x="866.52" y="383.5" ></text>
</g>
<g >
<title>seastar::smp::submit_to&lt;seastar::sharded&lt;database&gt;::invoke_on_all (1 samples, 0.02%)</title><rect x="17.7" y="437" width="0.2" height="15.0" fill="rgb(210,30,54)" rx="2" ry="2" />
<text  x="20.66" y="447.5" ></text>
</g>
<g >
<title>bytes_ostream::chunk::~chunk (2 samples, 0.04%)</title><rect x="100.7" y="469" width="0.4" height="15.0" fill="rgb(210,65,3)" rx="2" ry="2" />
<text  x="103.65" y="479.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="693.2" y="549" width="0.2" height="15.0" fill="rgb(206,3,39)" rx="2" ry="2" />
<text  x="696.17" y="559.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::abstract_read_executor&gt;::~shared_ptr (3 samples, 0.06%)</title><rect x="1163.3" y="517" width="0.6" height="15.0" fill="rgb(212,135,44)" rx="2" ry="2" />
<text  x="1166.29" y="527.5" ></text>
</g>
<g >
<title>mutation_partition::upper_bound (1 samples, 0.02%)</title><rect x="285.2" y="261" width="0.3" height="15.0" fill="rgb(226,218,35)" rx="2" ry="2" />
<text  x="288.24" y="271.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, query::non_null_data_value&gt;, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, query::non_null_data_value&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, std::hash&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_emplace&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const&amp;, data_value&gt; (1 samples, 0.02%)</title><rect x="108.8" y="357" width="0.2" height="15.0" fill="rgb(235,13,36)" rx="2" ry="2" />
<text  x="111.75" y="367.5" ></text>
</g>
<g >
<title>service::storage_service::join_cluster (1 samples, 0.02%)</title><rect x="17.9" y="613" width="0.2" height="15.0" fill="rgb(249,41,23)" rx="2" ry="2" />
<text  x="20.88" y="623.5" ></text>
</g>
<g >
<title>partition_key_view::legacy_form (2 samples, 0.04%)</title><rect x="937.5" y="453" width="0.5" height="15.0" fill="rgb(230,49,0)" rx="2" ry="2" />
<text  x="940.53" y="463.5" ></text>
</g>
<g >
<title>partition_version_ref::operator (1 samples, 0.02%)</title><rect x="536.4" y="293" width="0.2" height="15.0" fill="rgb(212,190,48)" rx="2" ry="2" />
<text  x="539.39" y="303.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="54.4" y="309" width="0.3" height="15.0" fill="rgb(212,222,46)" rx="2" ry="2" />
<text  x="57.45" y="319.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (35 samples, 0.65%)</title><rect x="1126.9" y="517" width="7.7" height="15.0" fill="rgb(242,220,48)" rx="2" ry="2" />
<text  x="1129.94" y="527.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::push_back (29 samples, 0.54%)</title><rect x="1022.1" y="261" width="6.3" height="15.0" fill="rgb(227,31,54)" rx="2" ry="2" />
<text  x="1025.05" y="271.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; const*, std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt; &gt;, nonwrapping_interval&lt;clustering_key_prefix&gt;*&gt; (3 samples, 0.06%)</title><rect x="161.5" y="469" width="0.7" height="15.0" fill="rgb(248,118,13)" rx="2" ry="2" />
<text  x="164.52" y="479.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;column_definition const*, std::pair&lt;column_definition const* const, cql3::expr::expression&gt;, std::allocator&lt;std::pair&lt;column_definition const* const, cql3::expr::expression&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;column_definition const*&gt;, std::hash&lt;column_definition const*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::operator[] (2 samples, 0.04%)</title><rect x="73.9" y="421" width="0.5" height="15.0" fill="rgb(213,37,16)" rx="2" ry="2" />
<text  x="76.94" y="431.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.02%)</title><rect x="555.9" y="309" width="0.2" height="15.0" fill="rgb(229,228,52)" rx="2" ry="2" />
<text  x="558.88" y="319.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="78.1" y="517" width="0.2" height="15.0" fill="rgb(205,206,12)" rx="2" ry="2" />
<text  x="81.10" y="527.5" ></text>
</g>
<g >
<title>std::construct_at&lt;mutation, seastar::lw_shared_ptr&lt;schema const&gt; const&amp;, partition_key const&gt; (1 samples, 0.02%)</title><rect x="865.3" y="405" width="0.2" height="15.0" fill="rgb(250,1,36)" rx="2" ry="2" />
<text  x="868.28" y="415.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::move_it (1 samples, 0.02%)</title><rect x="766.3" y="421" width="0.2" height="15.0" fill="rgb(236,206,43)" rx="2" ry="2" />
<text  x="769.30" y="431.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::pop_back (1 samples, 0.02%)</title><rect x="51.8" y="309" width="0.2" height="15.0" fill="rgb(252,27,34)" rx="2" ry="2" />
<text  x="54.82" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="791.9" y="293" width="0.2" height="15.0" fill="rgb(216,75,48)" rx="2" ry="2" />
<text  x="794.92" y="303.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_construct&lt;interval_bound&lt;dht::ring_position&gt; const&amp;&gt; (4 samples, 0.07%)</title><rect x="1044.8" y="293" width="0.9" height="15.0" fill="rgb(226,16,50)" rx="2" ry="2" />
<text  x="1047.83" y="303.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;empty_flat_reader, std::default_delete&lt;empty_flat_reader&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="556.8" y="341" width="0.2" height="15.0" fill="rgb(250,26,39)" rx="2" ry="2" />
<text  x="559.75" y="351.5" ></text>
</g>
<g >
<title>seastar::internal::uninitialized_wrapper_base&lt;service::storage_proxy_coordinator_query_result, false&gt;::uninitialized_set&lt;service::storage_proxy_coordinator_query_result&gt; (3 samples, 0.06%)</title><rect x="699.3" y="517" width="0.7" height="15.0" fill="rgb(213,162,48)" rx="2" ry="2" />
<text  x="702.30" y="527.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_allocate_node&lt;nonwrapping_interval&lt;dht::token&gt;, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="1157.2" y="533" width="0.2" height="15.0" fill="rgb(233,26,13)" rx="2" ry="2" />
<text  x="1160.16" y="543.5" ></text>
</g>
<g >
<title>seastar::chunked_fifo&lt;seastar::concrete_execution_stage&lt;seastar::future&lt;void&gt;, service::storage_proxy*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt;, db::consistency_level, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, tracing::trace_state_ptr, service_permit, bool, seastar::lw_shared_ptr&lt;cdc::operation_result_tracker&gt; &gt;::work_item, 128ul&gt;::emplace_back&lt;service::storage_proxy*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt;, db::consistency_level, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, tracing::trace_state_ptr, service_permit, bool, seastar::lw_shared_ptr&lt;cdc::operation_result_tracker&gt; &gt; (1 samples, 0.02%)</title><rect x="860.5" y="389" width="0.2" height="15.0" fill="rgb(219,36,49)" rx="2" ry="2" />
<text  x="863.46" y="399.5" ></text>
</g>
<g >
<title>read_simple&lt;unsigned short, managed_bytes_basic_view&lt; (6 samples, 0.11%)</title><rect x="514.3" y="261" width="1.3" height="15.0" fill="rgb(245,113,41)" rx="2" ry="2" />
<text  x="517.28" y="271.5" ></text>
</g>
<g >
<title>logalloc::basic_region_impl::set_reclaiming_enabled (3 samples, 0.06%)</title><rect x="270.8" y="245" width="0.6" height="15.0" fill="rgb(233,118,12)" rx="2" ry="2" />
<text  x="273.79" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, unsigned int, std::_Identity&lt;unsigned int&gt;, std::less&lt;unsigned int&gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;unsigned int&gt; &gt;::end (1 samples, 0.02%)</title><rect x="40.4" y="341" width="0.3" height="15.0" fill="rgb(212,88,6)" rx="2" ry="2" />
<text  x="43.44" y="351.5" ></text>
</g>
<g >
<title>std::visit&lt;overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::has_token (1 samples, 0.02%)</title><rect x="884.1" y="453" width="0.2" height="15.0" fill="rgb(209,72,51)" rx="2" ry="2" />
<text  x="887.11" y="463.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (17 samples, 0.32%)</title><rect x="1175.8" y="677" width="3.7" height="15.0" fill="rgb(219,77,3)" rx="2" ry="2" />
<text  x="1178.77" y="687.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::done (2 samples, 0.04%)</title><rect x="617.4" y="485" width="0.4" height="15.0" fill="rgb(218,157,42)" rx="2" ry="2" />
<text  x="620.41" y="495.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;::operator (4 samples, 0.07%)</title><rect x="760.8" y="357" width="0.9" height="15.0" fill="rgb(210,205,21)" rx="2" ry="2" />
<text  x="763.83" y="367.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (376 samples, 6.98%)</title><rect x="341.1" y="309" width="82.3" height="15.0" fill="rgb(213,50,15)" rx="2" ry="2" />
<text  x="344.07" y="319.5" >flat_muta..</text>
</g>
<g >
<title>cql3_parser::CqlParser::whereClause (27 samples, 0.50%)</title><rect x="57.3" y="421" width="5.9" height="15.0" fill="rgb(220,94,35)" rx="2" ry="2" />
<text  x="60.30" y="431.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="308.4" y="389" width="0.3" height="15.0" fill="rgb(211,220,11)" rx="2" ry="2" />
<text  x="311.45" y="399.5" ></text>
</g>
<g >
<title>std::apply&lt;auth::get_permissions (100 samples, 1.86%)</title><rect x="791.5" y="357" width="21.9" height="15.0" fill="rgb(242,4,39)" rx="2" ry="2" />
<text  x="794.48" y="367.5" >s..</text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::term&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="1094.3" y="469" width="0.2" height="15.0" fill="rgb(249,8,53)" rx="2" ry="2" />
<text  x="1097.31" y="479.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::small_vector (1 samples, 0.02%)</title><rect x="481.9" y="325" width="0.2" height="15.0" fill="rgb(226,101,48)" rx="2" ry="2" />
<text  x="484.87" y="335.5" ></text>
</g>
<g >
<title>service::client_state::check_has_permission (4 samples, 0.07%)</title><rect x="76.6" y="469" width="0.8" height="15.0" fill="rgb(235,15,2)" rx="2" ry="2" />
<text  x="79.57" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::~vector (2 samples, 0.04%)</title><rect x="487.1" y="389" width="0.5" height="15.0" fill="rgb(233,219,15)" rx="2" ry="2" />
<text  x="490.12" y="399.5" ></text>
</g>
<g >
<title>ser::get_sizeof&lt;schema_mutations&gt; (1 samples, 0.02%)</title><rect x="108.5" y="469" width="0.3" height="15.0" fill="rgb(248,112,49)" rx="2" ry="2" />
<text  x="111.53" y="479.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="936.7" y="373" width="0.2" height="15.0" fill="rgb(237,104,38)" rx="2" ry="2" />
<text  x="939.66" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="589.8" y="325" width="0.2" height="15.0" fill="rgb(234,209,45)" rx="2" ry="2" />
<text  x="592.82" y="335.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reserve&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::partition_snapshot_flat_reader&lt;memtable&amp;&gt; (1 samples, 0.02%)</title><rect x="522.4" y="357" width="0.2" height="15.0" fill="rgb(251,120,10)" rx="2" ry="2" />
<text  x="525.38" y="367.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="441.8" y="325" width="0.2" height="15.0" fill="rgb(250,3,33)" rx="2" ry="2" />
<text  x="444.80" y="335.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;cql_transport::messages::result_message::rows, false&gt;::make&lt;cql3::result&gt; (8 samples, 0.15%)</title><rect x="672.6" y="533" width="1.7" height="15.0" fill="rgb(253,72,46)" rx="2" ry="2" />
<text  x="675.59" y="543.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (4 samples, 0.07%)</title><rect x="509.5" y="261" width="0.8" height="15.0" fill="rgb(243,172,35)" rx="2" ry="2" />
<text  x="512.46" y="271.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::do_fill_buffer (1 samples, 0.02%)</title><rect x="81.4" y="437" width="0.2" height="15.0" fill="rgb(250,13,21)" rx="2" ry="2" />
<text  x="84.38" y="447.5" ></text>
</g>
<g >
<title>seastar::internal::future_base::future_base (1 samples, 0.02%)</title><rect x="784.5" y="405" width="0.2" height="15.0" fill="rgb(212,99,20)" rx="2" ry="2" />
<text  x="787.48" y="415.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.02%)</title><rect x="1139.4" y="501" width="0.2" height="15.0" fill="rgb(243,228,1)" rx="2" ry="2" />
<text  x="1142.42" y="511.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (2 samples, 0.04%)</title><rect x="1161.5" y="533" width="0.5" height="15.0" fill="rgb(230,38,37)" rx="2" ry="2" />
<text  x="1164.53" y="543.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (47 samples, 0.87%)</title><rect x="752.1" y="453" width="10.3" height="15.0" fill="rgb(223,184,41)" rx="2" ry="2" />
<text  x="755.07" y="463.5" ></text>
</g>
<g >
<title>mutation_partition::clear_gently (1 samples, 0.02%)</title><rect x="83.8" y="565" width="0.2" height="15.0" fill="rgb(247,92,38)" rx="2" ry="2" />
<text  x="86.79" y="575.5" ></text>
</g>
<g >
<title>db::query_context::execute_cql&lt;&gt; (1 samples, 0.02%)</title><rect x="11.1" y="501" width="0.2" height="15.0" fill="rgb(208,221,5)" rx="2" ry="2" />
<text  x="14.09" y="511.5" ></text>
</g>
<g >
<title>std::__make_heap&lt;__gnu_cxx::__normal_iterator&lt;boost::iterator_range&lt;boost::intrusive::tree_iterator&lt;boost::intrusive::mhtraits&lt;range_tombstone_entry, boost::intrusive::set_member_hook&lt;boost::intrusive::link_mode&lt; (2 samples, 0.04%)</title><rect x="291.4" y="293" width="0.4" height="15.0" fill="rgb(221,25,47)" rx="2" ry="2" />
<text  x="294.37" y="303.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::~_Variant_storage (1 samples, 0.02%)</title><rect x="442.7" y="309" width="0.2" height="15.0" fill="rgb(223,16,16)" rx="2" ry="2" />
<text  x="445.67" y="319.5" ></text>
</g>
<g >
<title>operator new (7 samples, 0.13%)</title><rect x="985.3" y="357" width="1.5" height="15.0" fill="rgb(243,183,21)" rx="2" ry="2" />
<text  x="988.27" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="693.2" y="533" width="0.2" height="15.0" fill="rgb(238,47,4)" rx="2" ry="2" />
<text  x="696.17" y="543.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;cql3::statements::drop_view_statement&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="65.6" y="373" width="0.2" height="15.0" fill="rgb(233,210,44)" rx="2" ry="2" />
<text  x="68.62" y="383.5" ></text>
</g>
<g >
<title>database::find_schema (25 samples, 0.46%)</title><rect x="823.0" y="437" width="5.5" height="15.0" fill="rgb(229,73,54)" rx="2" ry="2" />
<text  x="826.02" y="447.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;seastar::shared_ptr&lt;cql3::relation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::relation&gt; &gt; &gt;::_M_allocate (1 samples, 0.02%)</title><rect x="62.8" y="357" width="0.2" height="15.0" fill="rgb(208,135,11)" rx="2" ry="2" />
<text  x="65.77" y="367.5" ></text>
</g>
<g >
<title>mutation_partition::clear_gently (1 samples, 0.02%)</title><rect x="1139.4" y="421" width="0.2" height="15.0" fill="rgb(236,135,54)" rx="2" ry="2" />
<text  x="1142.42" y="431.5" ></text>
</g>
<g >
<title>logalloc::region_group::update (1 samples, 0.02%)</title><rect x="80.9" y="485" width="0.3" height="15.0" fill="rgb(215,24,15)" rx="2" ry="2" />
<text  x="83.94" y="495.5" ></text>
</g>
<g >
<title>std::operator- (2 samples, 0.04%)</title><rect x="46.3" y="229" width="0.5" height="15.0" fill="rgb(211,71,53)" rx="2" ry="2" />
<text  x="49.35" y="239.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::then_impl&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (1 samples, 0.02%)</title><rect x="107.7" y="213" width="0.2" height="15.0" fill="rgb(205,129,7)" rx="2" ry="2" />
<text  x="110.66" y="223.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (1 samples, 0.02%)</title><rect x="54.0" y="293" width="0.2" height="15.0" fill="rgb(207,205,25)" rx="2" ry="2" />
<text  x="57.01" y="303.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (34 samples, 0.63%)</title><rect x="1127.2" y="485" width="7.4" height="15.0" fill="rgb(224,90,18)" rx="2" ry="2" />
<text  x="1130.16" y="495.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (1 samples, 0.02%)</title><rect x="887.8" y="373" width="0.2" height="15.0" fill="rgb(216,67,1)" rx="2" ry="2" />
<text  x="890.83" y="383.5" ></text>
</g>
<g >
<title>mutation_querier::query_static_row (1 samples, 0.02%)</title><rect x="365.8" y="245" width="0.2" height="15.0" fill="rgb(240,23,18)" rx="2" ry="2" />
<text  x="368.82" y="255.5" ></text>
</g>
<g >
<title>bplus::data&lt;long, intrusive_array&lt;memtable_entry&gt;, dht::raw_token_less_comparator, 16ul,  (2 samples, 0.04%)</title><rect x="16.3" y="613" width="0.5" height="15.0" fill="rgb(243,74,24)" rx="2" ry="2" />
<text  x="19.35" y="623.5" ></text>
</g>
<g >
<title>TLS init function for cql3::query_options::specific_options::DEFAULT (1 samples, 0.02%)</title><rect x="732.8" y="533" width="0.2" height="15.0" fill="rgb(234,155,9)" rx="2" ry="2" />
<text  x="735.80" y="543.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;std::pair&lt;seastar::shared_ptr&lt;service::abstract_read_executor&gt;, nonwrapping_interval&lt;dht::token&gt; &gt;, 1ul&gt;::~small_vector (23 samples, 0.43%)</title><rect x="1162.2" y="549" width="5.0" height="15.0" fill="rgb(212,130,32)" rx="2" ry="2" />
<text  x="1165.19" y="559.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="1116.0" y="485" width="0.2" height="15.0" fill="rgb(218,114,46)" rx="2" ry="2" />
<text  x="1118.99" y="495.5" ></text>
</g>
<g >
<title>boost::iterators::filter_iterator&lt;mutation_partition::non_dummy_rows (1 samples, 0.02%)</title><rect x="1130.0" y="213" width="0.2" height="15.0" fill="rgb(241,127,51)" rx="2" ry="2" />
<text  x="1133.00" y="223.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::~guard (1 samples, 0.02%)</title><rect x="551.1" y="373" width="0.2" height="15.0" fill="rgb(218,124,18)" rx="2" ry="2" />
<text  x="554.06" y="383.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (2 samples, 0.04%)</title><rect x="1086.9" y="405" width="0.4" height="15.0" fill="rgb(231,170,25)" rx="2" ry="2" />
<text  x="1089.87" y="415.5" ></text>
</g>
<g >
<title>boost::intrusive::bstree_algorithms&lt;boost::intrusive::rbtree_node_traits&lt;void*, false&gt; &gt;::clear_and_dispose&lt;boost::intrusive::detail::node_disposer&lt;boost::intrusive::detail::null_disposer, boost::intrusive::mhtraits&lt;range_tombstone_entry, boost::intrusive::set_member_hook&lt;boost::intrusive::link_mode&lt; (1 samples, 0.02%)</title><rect x="587.4" y="341" width="0.2" height="15.0" fill="rgb(221,73,36)" rx="2" ry="2" />
<text  x="590.41" y="351.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;auth::resource&gt;::_M_reset (1 samples, 0.02%)</title><rect x="816.4" y="357" width="0.3" height="15.0" fill="rgb(235,40,49)" rx="2" ry="2" />
<text  x="819.45" y="367.5" ></text>
</g>
<g >
<title>seastar::promise&lt;void&gt;::promise (1 samples, 0.02%)</title><rect x="1021.6" y="245" width="0.2" height="15.0" fill="rgb(226,133,48)" rx="2" ry="2" />
<text  x="1024.62" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::_S_relocate (1 samples, 0.02%)</title><rect x="50.1" y="325" width="0.2" height="15.0" fill="rgb(229,11,38)" rx="2" ry="2" />
<text  x="53.07" y="335.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (6 samples, 0.11%)</title><rect x="1056.4" y="341" width="1.3" height="15.0" fill="rgb(228,116,53)" rx="2" ry="2" />
<text  x="1059.43" y="351.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.07%)</title><rect x="209.7" y="261" width="0.9" height="15.0" fill="rgb(253,220,10)" rx="2" ry="2" />
<text  x="212.70" y="271.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::digest_read_result&gt;::get0 (2 samples, 0.04%)</title><rect x="709.4" y="517" width="0.4" height="15.0" fill="rgb(242,113,3)" rx="2" ry="2" />
<text  x="712.37" y="527.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="161.3" y="437" width="0.2" height="15.0" fill="rgb(228,37,19)" rx="2" ry="2" />
<text  x="164.30" y="447.5" ></text>
</g>
<g >
<title>database::apply (1 samples, 0.02%)</title><rect x="1128.3" y="245" width="0.2" height="15.0" fill="rgb(252,170,6)" rx="2" ry="2" />
<text  x="1131.25" y="255.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_map&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::at&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt; &gt; (19 samples, 0.35%)</title><rect x="769.6" y="437" width="4.1" height="15.0" fill="rgb(238,5,31)" rx="2" ry="2" />
<text  x="772.59" y="447.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (1 samples, 0.02%)</title><rect x="942.8" y="469" width="0.2" height="15.0" fill="rgb(221,227,47)" rx="2" ry="2" />
<text  x="945.79" y="479.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::make_ready&lt; (1 samples, 0.02%)</title><rect x="721.9" y="485" width="0.2" height="15.0" fill="rgb(218,53,34)" rx="2" ry="2" />
<text  x="724.85" y="495.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::set&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt; (2 samples, 0.04%)</title><rect x="710.0" y="501" width="0.5" height="15.0" fill="rgb(230,190,41)" rx="2" ry="2" />
<text  x="713.03" y="511.5" ></text>
</g>
<g >
<title>write_row&lt;ser::writer_of_deletable_row&lt;bytes_ostream&gt; &gt; (1 samples, 0.02%)</title><rect x="108.5" y="405" width="0.3" height="15.0" fill="rgb(246,140,14)" rx="2" ry="2" />
<text  x="111.53" y="415.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::get_promise (3 samples, 0.06%)</title><rect x="997.3" y="357" width="0.7" height="15.0" fill="rgb(252,219,42)" rx="2" ry="2" />
<text  x="1000.31" y="367.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (2 samples, 0.04%)</title><rect x="10.9" y="629" width="0.4" height="15.0" fill="rgb(238,110,36)" rx="2" ry="2" />
<text  x="13.88" y="639.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::_M_range_initialize&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; const*&gt; (9 samples, 0.17%)</title><rect x="1100.9" y="437" width="2.0" height="15.0" fill="rgb(228,79,49)" rx="2" ry="2" />
<text  x="1103.88" y="447.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;column_definition const* const, cql3::expr::expression&gt;, false&gt; &gt; &gt;::_M_allocate_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;column_definition const* const&amp;&gt;, std::tuple&lt;&gt; &gt; (1 samples, 0.02%)</title><rect x="74.2" y="405" width="0.2" height="15.0" fill="rgb(226,180,28)" rx="2" ry="2" />
<text  x="77.16" y="415.5" ></text>
</g>
<g >
<title>double_decker&lt;long, cache_entry, dht::raw_token_less_comparator, dht::ring_position_comparator, 16,  (1 samples, 0.02%)</title><rect x="16.8" y="629" width="0.2" height="15.0" fill="rgb(242,71,53)" rx="2" ry="2" />
<text  x="19.79" y="639.5" ></text>
</g>
<g >
<title>service::client_state::has_access (7 samples, 0.13%)</title><rect x="76.1" y="501" width="1.6" height="15.0" fill="rgb(228,216,41)" rx="2" ry="2" />
<text  x="79.13" y="511.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (1 samples, 0.02%)</title><rect x="594.4" y="421" width="0.2" height="15.0" fill="rgb(243,203,41)" rx="2" ry="2" />
<text  x="597.42" y="431.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (2 samples, 0.04%)</title><rect x="451.2" y="485" width="0.5" height="15.0" fill="rgb(207,56,20)" rx="2" ry="2" />
<text  x="454.21" y="495.5" ></text>
</g>
<g >
<title>intrusive_b::node&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (1 samples, 0.02%)</title><rect x="107.0" y="405" width="0.2" height="15.0" fill="rgb(214,196,5)" rx="2" ry="2" />
<text  x="110.00" y="415.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; const, column_definition const*&gt;, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; const, column_definition const*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;, std::hash&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (2 samples, 0.04%)</title><rect x="75.3" y="469" width="0.4" height="15.0" fill="rgb(206,182,8)" rx="2" ry="2" />
<text  x="78.25" y="479.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::statements::revoke_role_statement, std::default_delete&lt;cql3::statements::revoke_role_statement&gt;, true, true&gt;::__uniq_ptr_data (1 samples, 0.02%)</title><rect x="67.4" y="421" width="0.2" height="15.0" fill="rgb(205,194,50)" rx="2" ry="2" />
<text  x="70.37" y="431.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt;::_M_reset (1 samples, 0.02%)</title><rect x="295.7" y="325" width="0.3" height="15.0" fill="rgb(222,67,38)" rx="2" ry="2" />
<text  x="298.75" y="335.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::operation::set_value, cql3::expr::expression&amp;&gt; (2 samples, 0.04%)</title><rect x="56.2" y="373" width="0.4" height="15.0" fill="rgb(224,189,41)" rx="2" ry="2" />
<text  x="59.20" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (5 samples, 0.09%)</title><rect x="687.5" y="549" width="1.1" height="15.0" fill="rgb(216,117,7)" rx="2" ry="2" />
<text  x="690.48" y="559.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextToken (66 samples, 1.22%)</title><rect x="25.1" y="357" width="14.5" height="15.0" fill="rgb(251,199,4)" rx="2" ry="2" />
<text  x="28.11" y="367.5" ></text>
</g>
<g >
<title>schema_registry::get_entry (4 samples, 0.07%)</title><rect x="979.6" y="421" width="0.9" height="15.0" fill="rgb(208,188,47)" rx="2" ry="2" />
<text  x="982.58" y="431.5" ></text>
</g>
<g >
<title>dht::i_partitioner::decorate_key (1 samples, 0.02%)</title><rect x="1118.4" y="293" width="0.2" height="15.0" fill="rgb(220,181,48)" rx="2" ry="2" />
<text  x="1121.40" y="303.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.02%)</title><rect x="44.2" y="261" width="0.2" height="15.0" fill="rgb(210,2,14)" rx="2" ry="2" />
<text  x="47.16" y="271.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::has_token (1 samples, 0.02%)</title><rect x="952.0" y="453" width="0.2" height="15.0" fill="rgb(240,192,13)" rx="2" ry="2" />
<text  x="954.99" y="463.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="834.0" y="501" width="0.2" height="15.0" fill="rgb(227,211,8)" rx="2" ry="2" />
<text  x="836.96" y="511.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector (5 samples, 0.09%)</title><rect x="1158.3" y="533" width="1.0" height="15.0" fill="rgb(231,188,13)" rx="2" ry="2" />
<text  x="1161.25" y="543.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (2 samples, 0.04%)</title><rect x="446.6" y="421" width="0.5" height="15.0" fill="rgb(248,217,18)" rx="2" ry="2" />
<text  x="449.62" y="431.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (18 samples, 0.33%)</title><rect x="758.0" y="405" width="3.9" height="15.0" fill="rgb(219,101,21)" rx="2" ry="2" />
<text  x="760.98" y="415.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment (1 samples, 0.02%)</title><rect x="528.7" y="293" width="0.2" height="15.0" fill="rgb(206,97,10)" rx="2" ry="2" />
<text  x="531.73" y="303.5" ></text>
</g>
<g >
<title>partition_snapshot_row_cursor::recreate_current_row (1 samples, 0.02%)</title><rect x="17.0" y="597" width="0.2" height="15.0" fill="rgb(246,28,23)" rx="2" ry="2" />
<text  x="20.01" y="607.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_ba202cd8bdcfd8c6f1dbb280f642f5ad31cbca7c] (1 samples, 0.02%)</title><rect x="679.2" y="533" width="0.2" height="15.0" fill="rgb(211,227,39)" rx="2" ry="2" />
<text  x="682.16" y="543.5" ></text>
</g>
<g >
<title>TLS init function for cql3::statements::select_statement::_default_parameters (1 samples, 0.02%)</title><rect x="765.2" y="453" width="0.2" height="15.0" fill="rgb(240,170,11)" rx="2" ry="2" />
<text  x="768.21" y="463.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (2 samples, 0.04%)</title><rect x="433.9" y="261" width="0.5" height="15.0" fill="rgb(216,141,35)" rx="2" ry="2" />
<text  x="436.92" y="271.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::on_new_range (1 samples, 0.02%)</title><rect x="296.0" y="341" width="0.2" height="15.0" fill="rgb(217,226,38)" rx="2" ry="2" />
<text  x="298.97" y="351.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_M_reset (1 samples, 0.02%)</title><rect x="931.8" y="437" width="0.3" height="15.0" fill="rgb(233,0,23)" rx="2" ry="2" />
<text  x="934.84" y="447.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::node_size (3 samples, 0.06%)</title><rect x="253.7" y="213" width="0.7" height="15.0" fill="rgb(219,127,43)" rx="2" ry="2" />
<text  x="256.71" y="223.5" ></text>
</g>
<g >
<title>table::set_hit_rate (1 samples, 0.02%)</title><rect x="726.2" y="533" width="0.3" height="15.0" fill="rgb(246,229,3)" rx="2" ry="2" />
<text  x="729.23" y="543.5" ></text>
</g>
<g >
<title>fmt::v7::basic_format_args&lt;fmt::v7::basic_printf_context&lt;fmt::v7::detail::buffer_appender&lt;char&gt;, char&gt; &gt;::get (1 samples, 0.02%)</title><rect x="19.0" y="533" width="0.2" height="15.0" fill="rgb(212,142,37)" rx="2" ry="2" />
<text  x="21.98" y="543.5" ></text>
</g>
<g >
<title>service::abstract_read_resolver::abstract_read_resolver (1 samples, 0.02%)</title><rect x="991.0" y="373" width="0.2" height="15.0" fill="rgb(206,42,4)" rx="2" ry="2" />
<text  x="993.96" y="383.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::operator (1 samples, 0.02%)</title><rect x="337.8" y="293" width="0.2" height="15.0" fill="rgb(217,212,49)" rx="2" ry="2" />
<text  x="340.79" y="303.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="791.3" y="357" width="0.2" height="15.0" fill="rgb(254,174,25)" rx="2" ry="2" />
<text  x="794.27" y="367.5" ></text>
</g>
<g >
<title>ser::qr_clustered_row__cells&lt;bytes_ostream&gt;::start_cells (6 samples, 0.11%)</title><rect x="368.4" y="245" width="1.4" height="15.0" fill="rgb(207,190,16)" rx="2" ry="2" />
<text  x="371.44" y="255.5" ></text>
</g>
<g >
<title>locator::effective_replication_map::get_natural_endpoints_without_node_being_replaced (53 samples, 0.98%)</title><rect x="1072.6" y="373" width="11.6" height="15.0" fill="rgb(219,43,30)" rx="2" ry="2" />
<text  x="1075.63" y="383.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, cql3::statements::drop_table_statement*, std::default_delete&lt;cql3::statements::drop_table_statement&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="65.4" y="389" width="0.2" height="15.0" fill="rgb(217,22,24)" rx="2" ry="2" />
<text  x="68.40" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::disable_abort_on_alloc_failure_temporarily (1 samples, 0.02%)</title><rect x="267.5" y="277" width="0.2" height="15.0" fill="rgb(239,222,1)" rx="2" ry="2" />
<text  x="270.50" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_node (7 samples, 0.13%)</title><rect x="680.9" y="501" width="1.5" height="15.0" fill="rgb(249,169,18)" rx="2" ry="2" />
<text  x="683.91" y="511.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.02%)</title><rect x="51.6" y="245" width="0.2" height="15.0" fill="rgb(221,180,48)" rx="2" ry="2" />
<text  x="54.60" y="255.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="169.4" y="485" width="0.2" height="15.0" fill="rgb(215,155,28)" rx="2" ry="2" />
<text  x="172.41" y="495.5" ></text>
</g>
<g >
<title>std::hash&lt;std::basic_string_view&lt;signed char, std::char_traits&lt;signed char&gt; &gt; &gt;::operator (1 samples, 0.02%)</title><rect x="75.5" y="437" width="0.2" height="15.0" fill="rgb(207,190,36)" rx="2" ry="2" />
<text  x="78.47" y="447.5" ></text>
</g>
<g >
<title>utils::sequenced_set&lt;gms::inet_address&gt;::insert (1 samples, 0.02%)</title><rect x="109.6" y="533" width="0.2" height="15.0" fill="rgb(222,195,39)" rx="2" ry="2" />
<text  x="112.63" y="543.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_Optional_payload_base (2 samples, 0.04%)</title><rect x="1090.2" y="421" width="0.4" height="15.0" fill="rgb(226,29,43)" rx="2" ry="2" />
<text  x="1093.15" y="431.5" ></text>
</g>
<g >
<title>mutation_reader_merger::maybe_add_readers (3 samples, 0.06%)</title><rect x="186.5" y="341" width="0.6" height="15.0" fill="rgb(243,65,35)" rx="2" ry="2" />
<text  x="189.49" y="351.5" ></text>
</g>
<g >
<title>locator::i_endpoint_snitch::snitch_instance (2 samples, 0.04%)</title><rect x="1085.8" y="373" width="0.4" height="15.0" fill="rgb(231,109,45)" rx="2" ry="2" />
<text  x="1088.77" y="383.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reclaiming_disabled&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_range_tombstone (34 samples, 0.63%)</title><rect x="268.8" y="261" width="7.5" height="15.0" fill="rgb(219,171,54)" rx="2" ry="2" />
<text  x="271.82" y="271.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::clear (3 samples, 0.06%)</title><rect x="675.4" y="549" width="0.7" height="15.0" fill="rgb(223,147,5)" rx="2" ry="2" />
<text  x="678.43" y="559.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="62.8" y="325" width="0.2" height="15.0" fill="rgb(245,184,27)" rx="2" ry="2" />
<text  x="65.77" y="335.5" ></text>
</g>
<g >
<title>database::apply_with_commitlog (40 samples, 0.74%)</title><rect x="1117.5" y="389" width="8.8" height="15.0" fill="rgb(225,20,4)" rx="2" ry="2" />
<text  x="1120.52" y="399.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.02%)</title><rect x="59.0" y="229" width="0.3" height="15.0" fill="rgb(214,68,3)" rx="2" ry="2" />
<text  x="62.05" y="239.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::storage_proxy&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="1064.5" y="389" width="0.3" height="15.0" fill="rgb(221,114,18)" rx="2" ry="2" />
<text  x="1067.53" y="399.5" ></text>
</g>
<g >
<title>std::__optional_hash_call_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, true&gt;::operator (3 samples, 0.06%)</title><rect x="760.0" y="373" width="0.6" height="15.0" fill="rgb(231,169,44)" rx="2" ry="2" />
<text  x="762.95" y="383.5" ></text>
</g>
<g >
<title>utils::fb_utilities::get_broadcast_address (2 samples, 0.04%)</title><rect x="1084.7" y="309" width="0.4" height="15.0" fill="rgb(221,82,43)" rx="2" ry="2" />
<text  x="1087.68" y="319.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;mutation_reader_merger::reader_and_last_fragment_kind*, mutation_reader_merger::prepare_next (60 samples, 1.11%)</title><rect x="187.1" y="357" width="13.2" height="15.0" fill="rgb(210,1,24)" rx="2" ry="2" />
<text  x="190.14" y="367.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::term&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="1102.9" y="453" width="0.2" height="15.0" fill="rgb(217,186,8)" rx="2" ry="2" />
<text  x="1105.85" y="463.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (3 samples, 0.06%)</title><rect x="585.9" y="357" width="0.6" height="15.0" fill="rgb(212,55,48)" rx="2" ry="2" />
<text  x="588.88" y="367.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;schema const&gt;::operator= (5 samples, 0.09%)</title><rect x="1038.7" y="341" width="1.1" height="15.0" fill="rgb(233,38,0)" rx="2" ry="2" />
<text  x="1041.70" y="351.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="192.6" y="309" width="0.2" height="15.0" fill="rgb(241,10,48)" rx="2" ry="2" />
<text  x="195.62" y="319.5" ></text>
</g>
<g >
<title>reader_permit::consume (5 samples, 0.09%)</title><rect x="423.6" y="293" width="1.1" height="15.0" fill="rgb(214,12,2)" rx="2" ry="2" />
<text  x="426.62" y="303.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.04%)</title><rect x="446.6" y="437" width="0.5" height="15.0" fill="rgb(207,186,43)" rx="2" ry="2" />
<text  x="449.62" y="447.5" ></text>
</g>
<g >
<title>service::abstract_read_resolver::done (2 samples, 0.04%)</title><rect x="711.3" y="517" width="0.5" height="15.0" fill="rgb(218,169,2)" rx="2" ry="2" />
<text  x="714.34" y="527.5" ></text>
</g>
<g >
<title>flush_reader::fill_buffer (3 samples, 0.06%)</title><rect x="80.9" y="549" width="0.7" height="15.0" fill="rgb(211,136,9)" rx="2" ry="2" />
<text  x="83.94" y="559.5" ></text>
</g>
<g >
<title>row::external_memory_usage (1 samples, 0.02%)</title><rect x="79.4" y="325" width="0.2" height="15.0" fill="rgb(247,122,46)" rx="2" ry="2" />
<text  x="82.41" y="335.5" ></text>
</g>
<g >
<title>db::system_keyspace::query_mutations (1 samples, 0.02%)</title><rect x="107.7" y="485" width="0.2" height="15.0" fill="rgb(232,125,48)" rx="2" ry="2" />
<text  x="110.66" y="495.5" ></text>
</g>
<g >
<title>mutation_partition::lower_bound (3 samples, 0.06%)</title><rect x="284.6" y="261" width="0.6" height="15.0" fill="rgb(228,143,20)" rx="2" ry="2" />
<text  x="287.58" y="271.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate_to_raw_view (1 samples, 0.02%)</title><rect x="911.7" y="437" width="0.2" height="15.0" fill="rgb(218,69,52)" rx="2" ry="2" />
<text  x="914.70" y="447.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::deallocate (5 samples, 0.09%)</title><rect x="209.5" y="277" width="1.1" height="15.0" fill="rgb(253,145,32)" rx="2" ry="2" />
<text  x="212.48" y="287.5" ></text>
</g>
<g >
<title>table::query (2,292 samples, 42.53%)</title><rect x="144.9" y="517" width="501.8" height="15.0" fill="rgb(212,67,38)" rx="2" ry="2" />
<text  x="147.88" y="527.5" >table::query</text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (1 samples, 0.02%)</title><rect x="45.0" y="357" width="0.3" height="15.0" fill="rgb(219,179,30)" rx="2" ry="2" />
<text  x="48.03" y="367.5" ></text>
</g>
<g >
<title>cql3::query_options::get_value_at (5 samples, 0.09%)</title><rect x="892.4" y="341" width="1.1" height="15.0" fill="rgb(231,170,48)" rx="2" ry="2" />
<text  x="895.43" y="351.5" ></text>
</g>
<g >
<title>seastar::internal::coroutine_traits_base&lt;std::tuple&lt;seastar::lw_shared_ptr&lt;query::result&gt;, cache_temperature&gt; &gt;::promise_type::run_and_dispose (2 samples, 0.04%)</title><rect x="87.5" y="581" width="0.5" height="15.0" fill="rgb(226,187,39)" rx="2" ry="2" />
<text  x="90.51" y="591.5" ></text>
</g>
<g >
<title>operator new (16 samples, 0.30%)</title><rect x="1041.1" y="309" width="3.5" height="15.0" fill="rgb(210,77,22)" rx="2" ry="2" />
<text  x="1044.10" y="319.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::alter_role_statement, std::default_delete&lt;cql3::statements::alter_role_statement&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="64.1" y="437" width="0.2" height="15.0" fill="rgb(207,184,12)" rx="2" ry="2" />
<text  x="67.08" y="447.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::on_read_resolved (2 samples, 0.04%)</title><rect x="710.9" y="517" width="0.4" height="15.0" fill="rgb(207,113,28)" rx="2" ry="2" />
<text  x="713.91" y="527.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::invoke_on_all (1 samples, 0.02%)</title><rect x="17.4" y="629" width="0.3" height="15.0" fill="rgb(223,200,10)" rx="2" ry="2" />
<text  x="20.44" y="639.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::operator (12 samples, 0.22%)</title><rect x="190.2" y="325" width="2.6" height="15.0" fill="rgb(245,142,13)" rx="2" ry="2" />
<text  x="193.21" y="335.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (2 samples, 0.04%)</title><rect x="725.1" y="469" width="0.5" height="15.0" fill="rgb(234,23,47)" rx="2" ry="2" />
<text  x="728.14" y="479.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="325.3" y="437" width="0.2" height="15.0" fill="rgb(216,70,54)" rx="2" ry="2" />
<text  x="328.31" y="447.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (3 samples, 0.06%)</title><rect x="760.0" y="341" width="0.6" height="15.0" fill="rgb(244,68,50)" rx="2" ry="2" />
<text  x="762.95" y="351.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (1 samples, 0.02%)</title><rect x="60.8" y="325" width="0.2" height="15.0" fill="rgb(232,130,27)" rx="2" ry="2" />
<text  x="63.80" y="335.5" ></text>
</g>
<g >
<title>std::__make_heap&lt;__gnu_cxx::__normal_iterator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position*, std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::heap_compare&gt; &gt; (1 samples, 0.02%)</title><rect x="289.2" y="277" width="0.2" height="15.0" fill="rgb(242,88,3)" rx="2" ry="2" />
<text  x="292.18" y="287.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.02%)</title><rect x="50.3" y="213" width="0.2" height="15.0" fill="rgb(240,147,1)" rx="2" ry="2" />
<text  x="53.29" y="223.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::find&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (17 samples, 0.32%)</title><rect x="824.5" y="389" width="3.8" height="15.0" fill="rgb(234,146,53)" rx="2" ry="2" />
<text  x="827.55" y="399.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.02%)</title><rect x="428.4" y="293" width="0.3" height="15.0" fill="rgb(223,160,28)" rx="2" ry="2" />
<text  x="431.44" y="303.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.02%)</title><rect x="50.5" y="197" width="0.2" height="15.0" fill="rgb(213,10,23)" rx="2" ry="2" />
<text  x="53.51" y="207.5" ></text>
</g>
<g >
<title>utils::tuple_hash::operator (4 samples, 0.07%)</title><rect x="827.4" y="373" width="0.9" height="15.0" fill="rgb(238,127,21)" rx="2" ry="2" />
<text  x="830.39" y="383.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::on_new_range (54 samples, 1.00%)</title><rect x="280.4" y="325" width="11.8" height="15.0" fill="rgb(235,55,54)" rx="2" ry="2" />
<text  x="283.42" y="335.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_4findERKNS5_10expressionENS5_6oper_tEEUlRS7_E_EES8_SE_T_EUlSG_E_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_8constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_11conjunctionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_12column_valueEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_5tokenEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13function_callEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4castEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_15field_selectionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4nullEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13bind_variableEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_16untyped_constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_17tuple_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_22collection_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSO_S6_SS_SW_S10_S14_S18_S1C_S1G_S1K_S1O_S1S_SK_S1W_S20_S24_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES29_S2C_ (3 samples, 0.06%)</title><rect x="882.8" y="469" width="0.6" height="15.0" fill="rgb(205,36,37)" rx="2" ry="2" />
<text  x="885.79" y="479.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::has_slice_or_needs_filtering (3 samples, 0.06%)</title><rect x="950.9" y="437" width="0.6" height="15.0" fill="rgb(235,132,53)" rx="2" ry="2" />
<text  x="953.89" y="447.5" ></text>
</g>
<g >
<title>std::apply&lt;auth::get_permissions (1 samples, 0.02%)</title><rect x="77.0" y="421" width="0.2" height="15.0" fill="rgb(220,85,51)" rx="2" ry="2" />
<text  x="80.00" y="431.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;mutation_fragment_merger&lt;mutation_reader_merger&gt;::operator (3 samples, 0.06%)</title><rect x="322.7" y="421" width="0.6" height="15.0" fill="rgb(229,153,52)" rx="2" ry="2" />
<text  x="325.68" y="431.5" ></text>
</g>
<g >
<title>ser::serializer&lt;schema_mutations&gt;::write&lt;bytes_ostream&gt; (1 samples, 0.02%)</title><rect x="108.5" y="501" width="0.3" height="15.0" fill="rgb(232,223,18)" rx="2" ry="2" />
<text  x="111.53" y="511.5" ></text>
</g>
<g >
<title>cql3::relation::to_restriction (4 samples, 0.07%)</title><rect x="72.2" y="453" width="0.9" height="15.0" fill="rgb(235,87,21)" rx="2" ry="2" />
<text  x="75.19" y="463.5" ></text>
</g>
<g >
<title>mutation_reader_merger::~mutation_reader_merger (38 samples, 0.71%)</title><rect x="595.7" y="437" width="8.4" height="15.0" fill="rgb(235,99,38)" rx="2" ry="2" />
<text  x="598.73" y="447.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::timer (1 samples, 0.02%)</title><rect x="1028.2" y="213" width="0.2" height="15.0" fill="rgb(228,133,15)" rx="2" ry="2" />
<text  x="1031.19" y="223.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate (1 samples, 0.02%)</title><rect x="864.2" y="341" width="0.2" height="15.0" fill="rgb(254,189,12)" rx="2" ry="2" />
<text  x="867.18" y="351.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.02%)</title><rect x="454.7" y="453" width="0.2" height="15.0" fill="rgb(234,27,50)" rx="2" ry="2" />
<text  x="457.72" y="463.5" ></text>
</g>
<g >
<title>operator new (6 samples, 0.11%)</title><rect x="1101.1" y="421" width="1.3" height="15.0" fill="rgb(252,78,1)" rx="2" ry="2" />
<text  x="1104.10" y="431.5" ></text>
</g>
<g >
<title>partition_key::from_range&lt;std::vector&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, std::allocator&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt; &gt; (14 samples, 0.26%)</title><rect x="567.0" y="437" width="3.1" height="15.0" fill="rgb(229,174,45)" rx="2" ry="2" />
<text  x="570.05" y="447.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment (2 samples, 0.04%)</title><rect x="203.3" y="309" width="0.5" height="15.0" fill="rgb(212,159,11)" rx="2" ry="2" />
<text  x="206.35" y="319.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_emplace&lt;nonwrapping_interval&lt;dht::token&gt;, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; (38 samples, 0.71%)</title><rect x="1148.8" y="533" width="8.4" height="15.0" fill="rgb(243,165,14)" rx="2" ry="2" />
<text  x="1151.83" y="543.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.04%)</title><rect x="50.3" y="277" width="0.4" height="15.0" fill="rgb(223,92,48)" rx="2" ry="2" />
<text  x="53.29" y="287.5" ></text>
</g>
<g >
<title>allocation_strategy::construct&lt;partition_version, mutation_partition&gt; (1 samples, 0.02%)</title><rect x="1124.3" y="293" width="0.2" height="15.0" fill="rgb(249,226,34)" rx="2" ry="2" />
<text  x="1127.31" y="303.5" ></text>
</g>
<g >
<title>atomic_cell::make_live (1 samples, 0.02%)</title><rect x="863.7" y="325" width="0.3" height="15.0" fill="rgb(220,218,33)" rx="2" ry="2" />
<text  x="866.74" y="335.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::get0 (2 samples, 0.04%)</title><rect x="729.7" y="565" width="0.5" height="15.0" fill="rgb(241,22,34)" rx="2" ry="2" />
<text  x="732.74" y="575.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, seastar::future&lt;void&gt;::finally_body&lt;seastar::with_file&lt;sstables::remove_by_toc_name (1 samples, 0.02%)</title><rect x="86.9" y="581" width="0.2" height="15.0" fill="rgb(212,181,33)" rx="2" ry="2" />
<text  x="89.86" y="591.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;managed_bytes&gt;::dispose (3 samples, 0.06%)</title><rect x="912.6" y="437" width="0.6" height="15.0" fill="rgb(213,20,27)" rx="2" ry="2" />
<text  x="915.57" y="447.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (1 samples, 0.02%)</title><rect x="109.4" y="453" width="0.2" height="15.0" fill="rgb(246,66,15)" rx="2" ry="2" />
<text  x="112.41" y="463.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="582.8" y="357" width="0.2" height="15.0" fill="rgb(226,124,17)" rx="2" ry="2" />
<text  x="585.81" y="367.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (2 samples, 0.04%)</title><rect x="43.1" y="277" width="0.4" height="15.0" fill="rgb(235,167,9)" rx="2" ry="2" />
<text  x="46.06" y="287.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (3 samples, 0.06%)</title><rect x="810.3" y="293" width="0.7" height="15.0" fill="rgb(208,101,35)" rx="2" ry="2" />
<text  x="813.32" y="303.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;std::tuple&lt;std::optional&lt;clustering_key_prefix&gt; &gt; &gt;, query::consume_page&lt; (5 samples, 0.09%)</title><rect x="701.3" y="565" width="1.1" height="15.0" fill="rgb(229,32,31)" rx="2" ry="2" />
<text  x="704.27" y="575.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (1 samples, 0.02%)</title><rect x="24.5" y="245" width="0.2" height="15.0" fill="rgb(222,198,36)" rx="2" ry="2" />
<text  x="27.45" y="255.5" ></text>
</g>
<g >
<title>reader_permit::used_guard::~used_guard (1 samples, 0.02%)</title><rect x="114.9" y="533" width="0.2" height="15.0" fill="rgb(216,111,50)" rx="2" ry="2" />
<text  x="117.88" y="543.5" ></text>
</g>
<g >
<title>__tls_init (2 samples, 0.04%)</title><rect x="516.9" y="373" width="0.4" height="15.0" fill="rgb(246,200,6)" rx="2" ry="2" />
<text  x="519.90" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="486.7" y="389" width="0.2" height="15.0" fill="rgb(230,158,15)" rx="2" ry="2" />
<text  x="489.69" y="399.5" ></text>
</g>
<g >
<title>query::querier&lt; (3 samples, 0.06%)</title><rect x="121.7" y="517" width="0.6" height="15.0" fill="rgb(253,156,29)" rx="2" ry="2" />
<text  x="124.67" y="527.5" ></text>
</g>
<g >
<title>utils::murmur_hash::hash3_x64_128&lt;legacy_compound_view&lt;compound_type&lt; (29 samples, 0.54%)</title><rect x="923.1" y="437" width="6.3" height="15.0" fill="rgb(220,2,21)" rx="2" ry="2" />
<text  x="926.08" y="447.5" ></text>
</g>
<g >
<title>std::__find_if&lt;gms::inet_address*, __gnu_cxx::__ops::_Iter_pred&lt;std::unary_negate&lt;std::binder1st&lt;std::_Mem_fn&lt;bool  (3 samples, 0.06%)</title><rect x="1084.5" y="357" width="0.6" height="15.0" fill="rgb(209,171,8)" rx="2" ry="2" />
<text  x="1087.46" y="367.5" ></text>
</g>
<g >
<title>db::system_keyspace::all_tables (1 samples, 0.02%)</title><rect x="17.7" y="357" width="0.2" height="15.0" fill="rgb(208,127,53)" rx="2" ry="2" />
<text  x="20.66" y="367.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::raw::parsed_statement, std::default_delete&lt;cql3::statements::raw::parsed_statement&gt; &gt;::get (1 samples, 0.02%)</title><rect x="66.5" y="421" width="0.2" height="15.0" fill="rgb(206,92,52)" rx="2" ry="2" />
<text  x="69.49" y="431.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_slice_or_needs_filtering (1 samples, 0.02%)</title><rect x="951.3" y="421" width="0.2" height="15.0" fill="rgb(218,33,32)" rx="2" ry="2" />
<text  x="954.33" y="431.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;dht::ring_position&gt;::wrapping_interval (1 samples, 0.02%)</title><rect x="862.2" y="373" width="0.2" height="15.0" fill="rgb(249,77,48)" rx="2" ry="2" />
<text  x="865.21" y="383.5" ></text>
</g>
<g >
<title>seastar::file_data_sink_impl::file_data_sink_impl (1 samples, 0.02%)</title><rect x="701.1" y="501" width="0.2" height="15.0" fill="rgb(235,130,0)" rx="2" ry="2" />
<text  x="704.05" y="511.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::add_operation (3 samples, 0.06%)</title><rect x="71.5" y="485" width="0.7" height="15.0" fill="rgb(206,180,0)" rx="2" ry="2" />
<text  x="74.53" y="495.5" ></text>
</g>
<g >
<title>std::type_info::operator== (2 samples, 0.04%)</title><rect x="1000.8" y="341" width="0.5" height="15.0" fill="rgb(240,102,24)" rx="2" ry="2" />
<text  x="1003.81" y="351.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::pop_front (27 samples, 0.50%)</title><rect x="129.3" y="469" width="5.9" height="15.0" fill="rgb(220,109,30)" rx="2" ry="2" />
<text  x="132.34" y="479.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_in_thread&lt;sstables::sstable_writer, flat_mutation_reader::no_filter&gt; (1 samples, 0.02%)</title><rect x="79.4" y="581" width="0.2" height="15.0" fill="rgb(221,63,13)" rx="2" ry="2" />
<text  x="82.41" y="591.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureIN5utils15timestamped_valINS_11checked_ptrINS_8weak_ptrIN4cql310statements18prepared_statementEEENS_25default_null_deref_actionEEENS5_40authorized_prepared_statements_cache_keyENS5_41authorized_prepared_statements_cache_sizeESt4hashISB_ESt8equal_toISB_ENS5_36authorized_prepared_statements_cache50authorized_prepared_statements_cache_stats_updaterEE9value_ptrEE9then_implIZNSL_14discard_resultEvEUlDpOT_E_NS0_IvEEEET0_OT_ (1 samples, 0.02%)</title><rect x="749.0" y="453" width="0.2" height="15.0" fill="rgb(237,19,47)" rx="2" ry="2" />
<text  x="752.01" y="463.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::local (2 samples, 0.04%)</title><rect x="842.5" y="485" width="0.4" height="15.0" fill="rgb(215,220,7)" rx="2" ry="2" />
<text  x="845.50" y="495.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::followPop (1 samples, 0.02%)</title><rect x="51.8" y="341" width="0.2" height="15.0" fill="rgb(225,91,24)" rx="2" ry="2" />
<text  x="54.82" y="351.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_state&lt;std::tuple&lt;std::optional&lt;auth::resource&gt; &gt;, seastar::future&lt;bool&gt; &gt;::do_with_state&lt;std::optional&lt;auth::resource&gt; &gt; (2 samples, 0.04%)</title><rect x="786.0" y="373" width="0.4" height="15.0" fill="rgb(214,15,44)" rx="2" ry="2" />
<text  x="789.01" y="383.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::get_local_service (4 samples, 0.07%)</title><rect x="1035.6" y="325" width="0.9" height="15.0" fill="rgb(251,138,31)" rx="2" ry="2" />
<text  x="1038.63" y="335.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;interval_bound&lt;dht::ring_position&gt;, false, false&gt;::_Optional_base (1 samples, 0.02%)</title><rect x="634.0" y="501" width="0.3" height="15.0" fill="rgb(215,40,27)" rx="2" ry="2" />
<text  x="637.05" y="511.5" ></text>
</g>
<g >
<title>flat_mutation_reader::peek (1 samples, 0.02%)</title><rect x="107.7" y="357" width="0.2" height="15.0" fill="rgb(227,129,33)" rx="2" ry="2" />
<text  x="110.66" y="367.5" ></text>
</g>
</g>
</svg>
