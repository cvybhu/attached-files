<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1862" onload="init(evt)" viewBox="0 0 1200 1862" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="1862.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="1845" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="1845" > </text>
<g id="frames">
<g >
<title>seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;::check (1 samples, 0.02%)</title><rect x="820.8" y="1573" width="0.2" height="15.0" fill="rgb(233,150,42)" rx="2" ry="2" />
<text  x="823.78" y="1583.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;seastar::shared_ptr&lt;cql3::relation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::relation&gt; &gt; &gt;::_Vector_impl_data::_Vector_impl_data (1 samples, 0.02%)</title><rect x="61.4" y="1461" width="0.2" height="15.0" fill="rgb(224,91,37)" rx="2" ry="2" />
<text  x="64.39" y="1471.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (2 samples, 0.04%)</title><rect x="828.9" y="1493" width="0.5" height="15.0" fill="rgb(207,79,16)" rx="2" ry="2" />
<text  x="831.94" y="1503.5" ></text>
</g>
<g >
<title>tombstone::apply (1 samples, 0.02%)</title><rect x="419.4" y="1349" width="0.2" height="15.0" fill="rgb(242,142,33)" rx="2" ry="2" />
<text  x="422.36" y="1359.5" ></text>
</g>
<g >
<title>cql3::constants::value::value (1 samples, 0.02%)</title><rect x="68.7" y="1509" width="0.2" height="15.0" fill="rgb(213,52,41)" rx="2" ry="2" />
<text  x="71.67" y="1519.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_emplace&lt;nonwrapping_interval&lt;dht::token&gt;, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt;&amp;&gt; (1 samples, 0.02%)</title><rect x="78.8" y="1269" width="0.2" height="15.0" fill="rgb(208,129,25)" rx="2" ry="2" />
<text  x="81.81" y="1279.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate (1 samples, 0.02%)</title><rect x="855.2" y="1461" width="0.2" height="15.0" fill="rgb(211,160,30)" rx="2" ry="2" />
<text  x="858.19" y="1471.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (1 samples, 0.02%)</title><rect x="1069.1" y="1445" width="0.3" height="15.0" fill="rgb(229,113,22)" rx="2" ry="2" />
<text  x="1072.13" y="1455.5" ></text>
</g>
<g >
<title>operator delete (5 samples, 0.09%)</title><rect x="1092.5" y="1573" width="1.1" height="15.0" fill="rgb(227,125,12)" rx="2" ry="2" />
<text  x="1095.51" y="1583.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::impl (4 samples, 0.07%)</title><rect x="512.7" y="1429" width="0.8" height="15.0" fill="rgb(245,121,39)" rx="2" ry="2" />
<text  x="515.66" y="1439.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; const*, std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt; &gt;, nonwrapping_interval&lt;clustering_key_prefix&gt;*&gt; (1 samples, 0.02%)</title><rect x="151.6" y="1573" width="0.2" height="15.0" fill="rgb(215,149,10)" rx="2" ry="2" />
<text  x="154.60" y="1583.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="917" width="0.3" height="15.0" fill="rgb(207,121,0)" rx="2" ry="2" />
<text  x="13.44" y="927.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_destroy_data (1 samples, 0.02%)</title><rect x="398.0" y="1333" width="0.2" height="15.0" fill="rgb(231,71,41)" rx="2" ry="2" />
<text  x="400.97" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.02%)</title><rect x="854.5" y="1397" width="0.2" height="15.0" fill="rgb(240,220,25)" rx="2" ry="2" />
<text  x="857.53" y="1407.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_impl&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (2 samples, 0.04%)</title><rect x="689.8" y="1557" width="0.4" height="15.0" fill="rgb(219,90,42)" rx="2" ry="2" />
<text  x="692.77" y="1567.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextTokenStr (40 samples, 0.75%)</title><rect x="26.1" y="1429" width="8.8" height="15.0" fill="rgb(213,203,21)" rx="2" ry="2" />
<text  x="29.10" y="1439.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (4 samples, 0.07%)</title><rect x="134.2" y="1605" width="0.9" height="15.0" fill="rgb(233,66,40)" rx="2" ry="2" />
<text  x="137.18" y="1615.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (3 samples, 0.06%)</title><rect x="604.2" y="1541" width="0.7" height="15.0" fill="rgb(235,32,14)" rx="2" ry="2" />
<text  x="607.19" y="1551.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.02%)</title><rect x="22.6" y="1381" width="0.2" height="15.0" fill="rgb(243,27,3)" rx="2" ry="2" />
<text  x="25.57" y="1391.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (1 samples, 0.02%)</title><rect x="785.9" y="1285" width="0.3" height="15.0" fill="rgb(220,218,52)" rx="2" ry="2" />
<text  x="788.93" y="1295.5" ></text>
</g>
<g >
<title>flat_mutation_reader::close (1 samples, 0.02%)</title><rect x="566.7" y="1509" width="0.2" height="15.0" fill="rgb(228,128,9)" rx="2" ry="2" />
<text  x="569.70" y="1519.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::statements::revoke_statement, std::default_delete&lt;cql3::statements::revoke_statement&gt;, true, true&gt;::__uniq_ptr_data (1 samples, 0.02%)</title><rect x="64.0" y="1509" width="0.3" height="15.0" fill="rgb(250,14,26)" rx="2" ry="2" />
<text  x="67.04" y="1519.5" ></text>
</g>
<g >
<title>seastar::memory::allocate_aligned (1 samples, 0.02%)</title><rect x="250.6" y="1237" width="0.3" height="15.0" fill="rgb(236,219,33)" rx="2" ry="2" />
<text  x="253.63" y="1247.5" ></text>
</g>
<g >
<title>partition_key::from_range&lt;std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt; const&amp;&gt; (2 samples, 0.04%)</title><rect x="851.9" y="1493" width="0.4" height="15.0" fill="rgb(207,33,21)" rx="2" ry="2" />
<text  x="854.88" y="1503.5" ></text>
</g>
<g >
<title>seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::expand (2 samples, 0.04%)</title><rect x="326.1" y="1477" width="0.4" height="15.0" fill="rgb(206,168,41)" rx="2" ry="2" />
<text  x="329.06" y="1487.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (1 samples, 0.02%)</title><rect x="1130.0" y="1413" width="0.2" height="15.0" fill="rgb(221,168,19)" rx="2" ry="2" />
<text  x="1133.01" y="1423.5" ></text>
</g>
<g >
<title>absl::container_internal::TrailingZeros&lt;unsigned int&gt; (1 samples, 0.02%)</title><rect x="757.0" y="1509" width="0.3" height="15.0" fill="rgb(253,103,46)" rx="2" ry="2" />
<text  x="760.04" y="1519.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::_M_get_Tp_allocator (1 samples, 0.02%)</title><rect x="39.6" y="1445" width="0.2" height="15.0" fill="rgb(222,13,13)" rx="2" ry="2" />
<text  x="42.56" y="1455.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;mutation_fragment*&gt;::take_value (1 samples, 0.02%)</title><rect x="447.4" y="1557" width="0.2" height="15.0" fill="rgb(211,151,9)" rx="2" ry="2" />
<text  x="450.37" y="1567.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::_M_create_storage (9 samples, 0.17%)</title><rect x="154.5" y="1557" width="2.0" height="15.0" fill="rgb(244,18,0)" rx="2" ry="2" />
<text  x="157.47" y="1567.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::operator= (1 samples, 0.02%)</title><rect x="821.2" y="1573" width="0.2" height="15.0" fill="rgb(236,110,52)" rx="2" ry="2" />
<text  x="824.22" y="1583.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (7 samples, 0.13%)</title><rect x="1043.3" y="1461" width="1.6" height="15.0" fill="rgb(237,213,30)" rx="2" ry="2" />
<text  x="1046.33" y="1471.5" ></text>
</g>
<g >
<title>table::add_coordinator_read_latency (3 samples, 0.06%)</title><rect x="1151.6" y="1621" width="0.7" height="15.0" fill="rgb(249,63,47)" rx="2" ry="2" />
<text  x="1154.62" y="1631.5" ></text>
</g>
<g >
<title>db::system_keyspace::load_local_host_id (1 samples, 0.02%)</title><rect x="10.4" y="293" width="0.3" height="15.0" fill="rgb(221,191,36)" rx="2" ry="2" />
<text  x="13.44" y="303.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="1109" width="0.3" height="15.0" fill="rgb(227,11,41)" rx="2" ry="2" />
<text  x="13.44" y="1119.5" ></text>
</g>
<g >
<title>ser::schema_view::mutations (1 samples, 0.02%)</title><rect x="102.4" y="1557" width="0.2" height="15.0" fill="rgb(228,197,19)" rx="2" ry="2" />
<text  x="105.41" y="1567.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::~timer (7 samples, 0.13%)</title><rect x="124.5" y="1541" width="1.5" height="15.0" fill="rgb(239,56,0)" rx="2" ry="2" />
<text  x="127.47" y="1551.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::digest_read_resolver&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="964.4" y="1509" width="0.2" height="15.0" fill="rgb(245,210,12)" rx="2" ry="2" />
<text  x="967.37" y="1519.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.04%)</title><rect x="51.5" y="1349" width="0.4" height="15.0" fill="rgb(218,184,11)" rx="2" ry="2" />
<text  x="54.47" y="1359.5" ></text>
</g>
<g >
<title>skip_empty_fragments&lt;managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="890.0" y="1397" width="0.3" height="15.0" fill="rgb(241,31,7)" rx="2" ry="2" />
<text  x="893.04" y="1407.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mIDENT (1 samples, 0.02%)</title><rect x="34.9" y="1429" width="0.2" height="15.0" fill="rgb(253,160,4)" rx="2" ry="2" />
<text  x="37.92" y="1439.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.02%)</title><rect x="1130.0" y="1509" width="0.2" height="15.0" fill="rgb(223,220,15)" rx="2" ry="2" />
<text  x="1133.01" y="1519.5" ></text>
</g>
<g >
<title>std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt;::~vector (2 samples, 0.04%)</title><rect x="1127.6" y="1493" width="0.4" height="15.0" fill="rgb(234,209,7)" rx="2" ry="2" />
<text  x="1130.58" y="1503.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, enum_set&lt;super_enum&lt;auth::permission,  (2 samples, 0.04%)</title><rect x="75.9" y="1445" width="0.5" height="15.0" fill="rgb(216,148,41)" rx="2" ry="2" />
<text  x="78.95" y="1455.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (1 samples, 0.02%)</title><rect x="24.6" y="1301" width="0.2" height="15.0" fill="rgb(230,96,45)" rx="2" ry="2" />
<text  x="27.56" y="1311.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_no_esft&lt;lister&gt;::shared_ptr_no_esft&lt;seastar::file, std::unordered_set&lt;seastar::directory_entry_type, seastar::enum_hash&lt;seastar::directory_entry_type&gt;, std::equal_to&lt;seastar::directory_entry_type&gt;, std::allocator&lt;seastar::directory_entry_type&gt; &gt; const, std::function&lt;seastar::future&lt;void&gt;  (1 samples, 0.02%)</title><rect x="690.7" y="1605" width="0.2" height="15.0" fill="rgb(212,202,24)" rx="2" ry="2" />
<text  x="693.65" y="1615.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::~CqlParser (4 samples, 0.07%)</title><rect x="21.5" y="1573" width="0.9" height="15.0" fill="rgb(252,27,30)" rx="2" ry="2" />
<text  x="24.47" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::~_Variant_storage (1 samples, 0.02%)</title><rect x="53.2" y="1397" width="0.3" height="15.0" fill="rgb(225,187,40)" rx="2" ry="2" />
<text  x="56.23" y="1407.5" ></text>
</g>
<g >
<title>cql3::restrictions::(anonymous namespace)::range_from_bytes (3 samples, 0.06%)</title><rect x="851.7" y="1509" width="0.6" height="15.0" fill="rgb(232,203,53)" rx="2" ry="2" />
<text  x="854.66" y="1519.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="43.5" y="1397" width="0.2" height="15.0" fill="rgb(226,66,41)" rx="2" ry="2" />
<text  x="46.53" y="1407.5" ></text>
</g>
<g >
<title>std::function&lt;seastar::future&lt;void&gt;  (1 samples, 0.02%)</title><rect x="17.1" y="1509" width="0.2" height="15.0" fill="rgb(243,118,4)" rx="2" ry="2" />
<text  x="20.06" y="1519.5" ></text>
</g>
<g >
<title>std::vector&lt;bplus::node&lt;long, intrusive_array&lt;memtable_entry&gt;, dht::raw_token_less_comparator, 16ul,  (2 samples, 0.04%)</title><rect x="1113.7" y="1301" width="0.4" height="15.0" fill="rgb(217,174,51)" rx="2" ry="2" />
<text  x="1116.69" y="1311.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::pop_clustering_row (7 samples, 0.13%)</title><rect x="268.5" y="1333" width="1.5" height="15.0" fill="rgb(222,189,40)" rx="2" ry="2" />
<text  x="271.50" y="1343.5" ></text>
</g>
<g >
<title>locator::effective_replication_map::get_natural_endpoints_without_node_being_replaced (1 samples, 0.02%)</title><rect x="1122.1" y="1365" width="0.2" height="15.0" fill="rgb(252,57,22)" rx="2" ry="2" />
<text  x="1125.07" y="1375.5" ></text>
</g>
<g >
<title>[unknown] (15 samples, 0.28%)</title><rect x="11.8" y="1749" width="3.3" height="15.0" fill="rgb(207,123,0)" rx="2" ry="2" />
<text  x="14.76" y="1759.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (1 samples, 0.02%)</title><rect x="266.5" y="1269" width="0.2" height="15.0" fill="rgb(232,33,5)" rx="2" ry="2" />
<text  x="269.51" y="1279.5" ></text>
</g>
<g >
<title>memtable::make_flat_reader (276 samples, 5.16%)</title><rect x="475.2" y="1493" width="60.8" height="15.0" fill="rgb(222,35,2)" rx="2" ry="2" />
<text  x="478.16" y="1503.5" >memtab..</text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;query::read_command&gt;::dispose (14 samples, 0.26%)</title><rect x="92.0" y="1621" width="3.1" height="15.0" fill="rgb(229,211,15)" rx="2" ry="2" />
<text  x="95.05" y="1631.5" ></text>
</g>
<g >
<title>malloc (2 samples, 0.04%)</title><rect x="611.5" y="1525" width="0.4" height="15.0" fill="rgb(229,212,26)" rx="2" ry="2" />
<text  x="614.47" y="1535.5" ></text>
</g>
<g >
<title>std::uniform_int_distribution&lt;unsigned long&gt;::operator (7 samples, 0.13%)</title><rect x="844.8" y="1605" width="1.6" height="15.0" fill="rgb(223,37,43)" rx="2" ry="2" />
<text  x="847.82" y="1615.5" ></text>
</g>
<g >
<title>std::vector&lt;seastar::shared_ptr&lt;cql3::relation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::relation&gt; &gt; &gt;::_M_move_assign (1 samples, 0.02%)</title><rect x="61.4" y="1493" width="0.2" height="15.0" fill="rgb(247,181,13)" rx="2" ry="2" />
<text  x="64.39" y="1503.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.06%)</title><rect x="471.4" y="1445" width="0.7" height="15.0" fill="rgb(227,50,35)" rx="2" ry="2" />
<text  x="474.41" y="1455.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_clustering_bounds (1 samples, 0.02%)</title><rect x="852.8" y="1525" width="0.2" height="15.0" fill="rgb(218,38,17)" rx="2" ry="2" />
<text  x="855.76" y="1535.5" ></text>
</g>
<g >
<title>std::ios_base::~ios_base (1 samples, 0.02%)</title><rect x="82.3" y="1765" width="0.3" height="15.0" fill="rgb(212,129,9)" rx="2" ry="2" />
<text  x="85.34" y="1775.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (2 samples, 0.04%)</title><rect x="436.8" y="1381" width="0.4" height="15.0" fill="rgb(236,127,54)" rx="2" ry="2" />
<text  x="439.79" y="1391.5" ></text>
</g>
<g >
<title>std::make_unique&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;, seastar::lw_shared_ptr&lt;schema const&gt;, reader_permit, dht::decorated_key, partition_snapshot_ptr&amp;, query::clustering_key_filter_ranges, bool&amp;, logalloc::region&amp;, logalloc::allocating_section&amp;, boost::any, memtable&amp;&gt; (1 samples, 0.02%)</title><rect x="535.6" y="1477" width="0.2" height="15.0" fill="rgb(208,88,54)" rx="2" ry="2" />
<text  x="538.60" y="1487.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="270.0" y="1349" width="0.3" height="15.0" fill="rgb(239,173,45)" rx="2" ry="2" />
<text  x="273.04" y="1359.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::future&lt;void&gt;  (24 samples, 0.45%)</title><rect x="1112.6" y="1509" width="5.3" height="15.0" fill="rgb(240,98,1)" rx="2" ry="2" />
<text  x="1115.58" y="1519.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="1136.6" y="1621" width="0.2" height="15.0" fill="rgb(207,110,31)" rx="2" ry="2" />
<text  x="1139.62" y="1631.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.02%)</title><rect x="70.7" y="1461" width="0.2" height="15.0" fill="rgb(225,181,38)" rx="2" ry="2" />
<text  x="73.65" y="1471.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;void&gt;  (1 samples, 0.02%)</title><rect x="17.1" y="1493" width="0.2" height="15.0" fill="rgb(246,118,29)" rx="2" ry="2" />
<text  x="20.06" y="1503.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="920.9" y="1493" width="0.2" height="15.0" fill="rgb(228,112,19)" rx="2" ry="2" />
<text  x="923.92" y="1503.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, flat_mutation_reader::impl::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (2 samples, 0.04%)</title><rect x="689.8" y="1541" width="0.4" height="15.0" fill="rgb(207,149,49)" rx="2" ry="2" />
<text  x="692.77" y="1551.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::query_options&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="1131.8" y="1653" width="0.2" height="15.0" fill="rgb(222,13,9)" rx="2" ry="2" />
<text  x="1134.77" y="1663.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (1 samples, 0.02%)</title><rect x="94.9" y="1605" width="0.2" height="15.0" fill="rgb(230,103,26)" rx="2" ry="2" />
<text  x="97.92" y="1615.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.02%)</title><rect x="42.4" y="1269" width="0.2" height="15.0" fill="rgb(239,191,27)" rx="2" ry="2" />
<text  x="45.42" y="1279.5" ></text>
</g>
<g >
<title>compound_type&lt; (10 samples, 0.19%)</title><rect x="904.2" y="1525" width="2.2" height="15.0" fill="rgb(212,187,22)" rx="2" ry="2" />
<text  x="907.15" y="1535.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::construct&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; const&amp;&gt; (1 samples, 0.02%)</title><rect x="44.0" y="1429" width="0.2" height="15.0" fill="rgb(222,176,28)" rx="2" ry="2" />
<text  x="46.97" y="1439.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_805ba145d71de739aa5a49a7dfdfc7655f960912] (2 samples, 0.04%)</title><rect x="1038.3" y="1413" width="0.4" height="15.0" fill="rgb(242,163,9)" rx="2" ry="2" />
<text  x="1041.25" y="1423.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::with_permit (69 samples, 1.29%)</title><rect x="1000.5" y="1397" width="15.3" height="15.0" fill="rgb(227,217,43)" rx="2" ry="2" />
<text  x="1003.54" y="1407.5" ></text>
</g>
<g >
<title>seastar::lambda_task&lt;seastar::execution_stage::flush (1,274 samples, 23.81%)</title><rect x="849.0" y="1653" width="281.0" height="15.0" fill="rgb(238,105,19)" rx="2" ry="2" />
<text  x="852.01" y="1663.5" >seastar::lambda_task&lt;seastar::executi..</text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::sharded_parallel_for_each (1 samples, 0.02%)</title><rect x="17.1" y="1605" width="0.2" height="15.0" fill="rgb(245,70,28)" rx="2" ry="2" />
<text  x="20.06" y="1615.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.04%)</title><rect x="677.4" y="1605" width="0.5" height="15.0" fill="rgb(247,150,13)" rx="2" ry="2" />
<text  x="680.42" y="1615.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;interval_bound&lt;dht::ring_position&gt;, false, false&gt;::_Optional_base (2 samples, 0.04%)</title><rect x="621.6" y="1589" width="0.5" height="15.0" fill="rgb(246,12,11)" rx="2" ry="2" />
<text  x="624.61" y="1599.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (1 samples, 0.02%)</title><rect x="627.6" y="1573" width="0.2" height="15.0" fill="rgb(220,195,3)" rx="2" ry="2" />
<text  x="630.57" y="1583.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;query::result&gt;::make&lt;query::result&gt; (5 samples, 0.09%)</title><rect x="619.4" y="1589" width="1.1" height="15.0" fill="rgb(241,59,14)" rx="2" ry="2" />
<text  x="622.41" y="1599.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;reader_concurrency_semaphore::entry&gt;::_M_reset (2 samples, 0.04%)</title><rect x="127.1" y="1557" width="0.5" height="15.0" fill="rgb(205,54,41)" rx="2" ry="2" />
<text  x="130.12" y="1567.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::read_next (1 samples, 0.02%)</title><rect x="100.9" y="1045" width="0.2" height="15.0" fill="rgb(212,131,37)" rx="2" ry="2" />
<text  x="103.87" y="1055.5" ></text>
</g>
<g >
<title>multishard_combining_reader::fill_buffer (2 samples, 0.04%)</title><rect x="100.4" y="1429" width="0.5" height="15.0" fill="rgb(237,165,40)" rx="2" ry="2" />
<text  x="103.43" y="1439.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::leaf_node::allocate (2 samples, 0.04%)</title><rect x="853.6" y="1397" width="0.5" height="15.0" fill="rgb(225,8,43)" rx="2" ry="2" />
<text  x="856.64" y="1407.5" ></text>
</g>
<g >
<title>bound_view::from_range&lt;nonwrapping_interval&gt; (1 samples, 0.02%)</title><rect x="283.1" y="1365" width="0.2" height="15.0" fill="rgb(252,76,45)" rx="2" ry="2" />
<text  x="286.05" y="1375.5" ></text>
</g>
<g >
<title>std::optional&lt;mutation_querier&gt;::emplace&lt;mutation_querier&gt; (7 samples, 0.13%)</title><rect x="356.5" y="1333" width="1.5" height="15.0" fill="rgb(226,167,24)" rx="2" ry="2" />
<text  x="359.50" y="1343.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (4 samples, 0.07%)</title><rect x="821.9" y="1557" width="0.9" height="15.0" fill="rgb(224,129,54)" rx="2" ry="2" />
<text  x="824.88" y="1567.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (14 samples, 0.26%)</title><rect x="211.4" y="1349" width="3.1" height="15.0" fill="rgb(233,227,14)" rx="2" ry="2" />
<text  x="214.37" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (1 samples, 0.02%)</title><rect x="71.8" y="1493" width="0.2" height="15.0" fill="rgb(230,134,2)" rx="2" ry="2" />
<text  x="74.76" y="1503.5" ></text>
</g>
<g >
<title>schema::~schema (1 samples, 0.02%)</title><rect x="100.2" y="1541" width="0.2" height="15.0" fill="rgb(245,210,33)" rx="2" ry="2" />
<text  x="103.21" y="1551.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::fetch (610 samples, 11.40%)</title><rect x="174.5" y="1493" width="134.6" height="15.0" fill="rgb(216,64,43)" rx="2" ry="2" />
<text  x="177.54" y="1503.5" >mutation_fragment..</text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, seastar::lw_shared_ptr&lt;cql3::column_condition::raw&gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, seastar::lw_shared_ptr&lt;cql3::column_condition::raw&gt; &gt; &gt; &gt;::vector (1 samples, 0.02%)</title><rect x="61.2" y="1493" width="0.2" height="15.0" fill="rgb(242,228,23)" rx="2" ry="2" />
<text  x="64.17" y="1503.5" ></text>
</g>
<g >
<title>intrusive_array&lt;memtable_entry&gt;::lower_bound&lt;dht::ring_position, dht::ring_position_comparator&gt; (46 samples, 0.86%)</title><rect x="488.8" y="1461" width="10.2" height="15.0" fill="rgb(207,97,36)" rx="2" ry="2" />
<text  x="491.84" y="1471.5" ></text>
</g>
<g >
<title>database::get_reader_concurrency_semaphore (1 samples, 0.02%)</title><rect x="995.7" y="1413" width="0.2" height="15.0" fill="rgb(230,137,40)" rx="2" ry="2" />
<text  x="998.69" y="1423.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_recognizer (1 samples, 0.02%)</title><rect x="44.2" y="1461" width="0.2" height="15.0" fill="rgb(247,66,44)" rx="2" ry="2" />
<text  x="47.19" y="1471.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.06%)</title><rect x="843.5" y="1573" width="0.7" height="15.0" fill="rgb(219,209,11)" rx="2" ry="2" />
<text  x="846.50" y="1583.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (252 samples, 4.71%)</title><rect x="19.3" y="1637" width="55.5" height="15.0" fill="rgb(225,49,30)" rx="2" ry="2" />
<text  x="22.26" y="1647.5" >cql3:..</text>
</g>
<g >
<title>mutation_reader_merger::operator (27 samples, 0.50%)</title><rect x="298.1" y="1445" width="5.9" height="15.0" fill="rgb(238,204,8)" rx="2" ry="2" />
<text  x="301.05" y="1455.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (12 samples, 0.22%)</title><rect x="500.5" y="1477" width="2.7" height="15.0" fill="rgb(254,95,44)" rx="2" ry="2" />
<text  x="503.53" y="1487.5" ></text>
</g>
<g >
<title>locator::token_metadata::tokens_iterator::operator++ (1 samples, 0.02%)</title><rect x="17.3" y="1541" width="0.2" height="15.0" fill="rgb(205,9,51)" rx="2" ry="2" />
<text  x="20.28" y="1551.5" ></text>
</g>
<g >
<title>flat_mutation_reader::close (2 samples, 0.04%)</title><rect x="565.2" y="1573" width="0.4" height="15.0" fill="rgb(217,159,29)" rx="2" ry="2" />
<text  x="568.15" y="1583.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="48.4" y="1365" width="0.2" height="15.0" fill="rgb(252,112,45)" rx="2" ry="2" />
<text  x="51.38" y="1375.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::sharded&lt;db::view::view_update_generator&gt;::stop (1 samples, 0.02%)</title><rect x="692.2" y="1557" width="0.2" height="15.0" fill="rgb(241,197,46)" rx="2" ry="2" />
<text  x="695.19" y="1567.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::~Parser (3 samples, 0.06%)</title><rect x="21.7" y="1557" width="0.7" height="15.0" fill="rgb(218,219,26)" rx="2" ry="2" />
<text  x="24.69" y="1567.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.04%)</title><rect x="931.5" y="1525" width="0.4" height="15.0" fill="rgb(219,3,2)" rx="2" ry="2" />
<text  x="934.50" y="1535.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.02%)</title><rect x="43.5" y="1365" width="0.2" height="15.0" fill="rgb(233,70,5)" rx="2" ry="2" />
<text  x="46.53" y="1375.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::clear (10 samples, 0.19%)</title><rect x="397.5" y="1349" width="2.2" height="15.0" fill="rgb(223,185,7)" rx="2" ry="2" />
<text  x="400.53" y="1359.5" ></text>
</g>
<g >
<title>service::abstract_write_response_handler::apply_locally (3 samples, 0.06%)</title><rect x="1120.3" y="1397" width="0.7" height="15.0" fill="rgb(239,111,11)" rx="2" ry="2" />
<text  x="1123.30" y="1407.5" ></text>
</g>
<g >
<title>cql3::query_processor::parse_statement (209 samples, 3.91%)</title><rect x="19.5" y="1621" width="46.1" height="15.0" fill="rgb(226,109,23)" rx="2" ry="2" />
<text  x="22.48" y="1631.5" >cql3..</text>
</g>
<g >
<title>managed_bytes::managed_bytes (2 samples, 0.04%)</title><rect x="338.9" y="1397" width="0.4" height="15.0" fill="rgb(233,93,4)" rx="2" ry="2" />
<text  x="341.86" y="1407.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::check_access (303 samples, 5.66%)</title><rect x="753.5" y="1573" width="66.8" height="15.0" fill="rgb(233,21,17)" rx="2" ry="2" />
<text  x="756.51" y="1583.5" >cql3::s..</text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::metadata&gt;::~shared_ptr (3 samples, 0.06%)</title><rect x="667.9" y="1637" width="0.7" height="15.0" fill="rgb(233,3,12)" rx="2" ry="2" />
<text  x="670.93" y="1647.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::statements::raw::update_statement, cql3::cf_name, std::unique_ptr&lt;cql3::attributes::raw, std::default_delete&lt;cql3::attributes::raw&gt; &gt;, std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;, std::vector&lt;seastar::shared_ptr&lt;cql3::relation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::relation&gt; &gt; &gt;, std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, seastar::lw_shared_ptr&lt;cql3::column_condition::raw&gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, seastar::lw_shared_ptr&lt;cql3::column_condition::raw&gt; &gt; &gt; &gt;, bool&amp;&gt; (4 samples, 0.07%)</title><rect x="60.5" y="1509" width="0.9" height="15.0" fill="rgb(209,50,24)" rx="2" ry="2" />
<text  x="63.51" y="1519.5" ></text>
</g>
<g >
<title>std::variant&lt;fragmented_temporary_buffer::view, managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="896.0" y="1461" width="0.2" height="15.0" fill="rgb(252,12,54)" rx="2" ry="2" />
<text  x="898.99" y="1471.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.02%)</title><rect x="78.8" y="1701" width="0.2" height="15.0" fill="rgb(251,109,6)" rx="2" ry="2" />
<text  x="81.81" y="1711.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (1 samples, 0.02%)</title><rect x="10.7" y="1733" width="0.2" height="15.0" fill="rgb(211,157,38)" rx="2" ry="2" />
<text  x="13.66" y="1743.5" ></text>
</g>
<g >
<title>seastar::future&lt;mutation_fragment*&gt;::then_impl&lt;query::consume_page&lt; (530 samples, 9.91%)</title><rect x="330.3" y="1557" width="116.9" height="15.0" fill="rgb(246,200,21)" rx="2" ry="2" />
<text  x="333.25" y="1567.5" >seastar::futur..</text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (114 samples, 2.13%)</title><rect x="36.9" y="1525" width="25.2" height="15.0" fill="rgb(233,83,46)" rx="2" ry="2" />
<text  x="39.91" y="1535.5" >c..</text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::storage_proxy::send_to_live_endpoints (5 samples, 0.09%)</title><rect x="712.5" y="1653" width="1.1" height="15.0" fill="rgb(249,159,37)" rx="2" ry="2" />
<text  x="715.49" y="1663.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mK_UPDATE (2 samples, 0.04%)</title><rect x="31.2" y="1413" width="0.4" height="15.0" fill="rgb(220,175,14)" rx="2" ry="2" />
<text  x="34.17" y="1423.5" ></text>
</g>
<g >
<title>database::add_column_family (5 samples, 0.09%)</title><rect x="101.5" y="1637" width="1.1" height="15.0" fill="rgb(211,146,20)" rx="2" ry="2" />
<text  x="104.53" y="1647.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::operator= (2 samples, 0.04%)</title><rect x="51.0" y="1413" width="0.5" height="15.0" fill="rgb(230,75,9)" rx="2" ry="2" />
<text  x="54.02" y="1423.5" ></text>
</g>
<g >
<title>cql3::authorized_prepared_statements_cache_key::hash (13 samples, 0.24%)</title><rect x="744.2" y="1477" width="2.9" height="15.0" fill="rgb(207,70,52)" rx="2" ry="2" />
<text  x="747.25" y="1487.5" ></text>
</g>
<g >
<title>atomic_cell_or_collection::copy (2 samples, 0.04%)</title><rect x="223.7" y="1285" width="0.5" height="15.0" fill="rgb(213,31,3)" rx="2" ry="2" />
<text  x="226.72" y="1295.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, seastar::lw_shared_ptr&lt;cql3::column_condition::raw&gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, seastar::lw_shared_ptr&lt;cql3::column_condition::raw&gt; &gt; &gt; &gt;::_Vector_base (1 samples, 0.02%)</title><rect x="61.6" y="1493" width="0.2" height="15.0" fill="rgb(249,210,5)" rx="2" ry="2" />
<text  x="64.61" y="1503.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.02%)</title><rect x="528.1" y="1429" width="0.2" height="15.0" fill="rgb(210,48,6)" rx="2" ry="2" />
<text  x="531.10" y="1439.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.04%)</title><rect x="680.1" y="1637" width="0.4" height="15.0" fill="rgb(234,106,23)" rx="2" ry="2" />
<text  x="683.06" y="1647.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::raw::parsed_statement, std::default_delete&lt;cql3::statements::raw::parsed_statement&gt; &gt;::reset (1 samples, 0.02%)</title><rect x="64.9" y="1493" width="0.2" height="15.0" fill="rgb(209,83,6)" rx="2" ry="2" />
<text  x="67.92" y="1503.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::make_data_requests (54 samples, 1.01%)</title><rect x="700.6" y="1653" width="11.9" height="15.0" fill="rgb(219,146,24)" rx="2" ry="2" />
<text  x="703.58" y="1663.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::truncate_statement, std::default_delete&lt;cql3::statements::truncate_statement&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::statements::truncate_statement&gt;, void&gt; (1 samples, 0.02%)</title><rect x="64.3" y="1525" width="0.2" height="15.0" fill="rgb(251,110,4)" rx="2" ry="2" />
<text  x="67.26" y="1535.5" ></text>
</g>
<g >
<title>allocation_strategy::alloc&lt;blob_storage&gt; (7 samples, 0.13%)</title><rect x="238.5" y="1221" width="1.5" height="15.0" fill="rgb(228,164,13)" rx="2" ry="2" />
<text  x="241.50" y="1231.5" ></text>
</g>
<g >
<title>std::variant&lt;fragmented_temporary_buffer::view, managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="854.7" y="1413" width="0.3" height="15.0" fill="rgb(218,141,25)" rx="2" ry="2" />
<text  x="857.75" y="1423.5" ></text>
</g>
<g >
<title>cql3::query_options::query_options (1 samples, 0.02%)</title><rect x="77.7" y="1637" width="0.2" height="15.0" fill="rgb(248,213,3)" rx="2" ry="2" />
<text  x="80.71" y="1647.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.06%)</title><rect x="999.9" y="1397" width="0.6" height="15.0" fill="rgb(243,175,27)" rx="2" ry="2" />
<text  x="1002.88" y="1407.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="1167.7" y="1653" width="0.2" height="15.0" fill="rgb(205,167,29)" rx="2" ry="2" />
<text  x="1170.72" y="1663.5" ></text>
</g>
<g >
<title>multishard_combining_reader::handle_empty_reader_buffer (2 samples, 0.04%)</title><rect x="100.4" y="1397" width="0.5" height="15.0" fill="rgb(237,207,32)" rx="2" ry="2" />
<text  x="103.43" y="1407.5" ></text>
</g>
<g >
<title>cql3::query_options::query_options (2 samples, 0.04%)</title><rect x="850.8" y="1525" width="0.4" height="15.0" fill="rgb(208,50,22)" rx="2" ry="2" />
<text  x="853.78" y="1535.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="1125.4" y="1205" width="0.2" height="15.0" fill="rgb(213,166,35)" rx="2" ry="2" />
<text  x="1128.38" y="1215.5" ></text>
</g>
<g >
<title>reader_permit::used_guard::~used_guard (1 samples, 0.02%)</title><rect x="108.1" y="1621" width="0.3" height="15.0" fill="rgb(247,209,52)" rx="2" ry="2" />
<text  x="111.15" y="1631.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reclaiming_disabled&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (1 samples, 0.02%)</title><rect x="100.9" y="1013" width="0.2" height="15.0" fill="rgb(236,2,7)" rx="2" ry="2" />
<text  x="103.87" y="1023.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;::basic_sstring (1 samples, 0.02%)</title><rect x="741.4" y="1509" width="0.2" height="15.0" fill="rgb(222,88,42)" rx="2" ry="2" />
<text  x="744.38" y="1519.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::operation::set_value, cql3::expr::expression&amp;&gt; (1 samples, 0.02%)</title><rect x="56.5" y="1461" width="0.3" height="15.0" fill="rgb(215,203,31)" rx="2" ry="2" />
<text  x="59.54" y="1471.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;service::digest_read_resolver&gt;::shared_ptr_count_for&lt;seastar::lw_shared_ptr&lt;schema const&gt;&amp;, db::consistency_level&amp;, unsigned long&amp;, unsigned long, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;&amp;&gt; (9 samples, 0.17%)</title><rect x="972.7" y="1477" width="2.0" height="15.0" fill="rgb(233,36,47)" rx="2" ry="2" />
<text  x="975.75" y="1487.5" ></text>
</g>
<g >
<title>db::schema_tables::diff_table_or_view (1 samples, 0.02%)</title><rect x="100.2" y="1621" width="0.2" height="15.0" fill="rgb(230,227,19)" rx="2" ry="2" />
<text  x="103.21" y="1631.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;std::allocator&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="20.4" y="1557" width="0.2" height="15.0" fill="rgb(245,0,45)" rx="2" ry="2" />
<text  x="23.37" y="1567.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (1 samples, 0.02%)</title><rect x="880.3" y="1461" width="0.3" height="15.0" fill="rgb(219,171,35)" rx="2" ry="2" />
<text  x="883.33" y="1471.5" ></text>
</g>
<g >
<title>partition_version_ref::operator (1 samples, 0.02%)</title><rect x="285.5" y="1365" width="0.2" height="15.0" fill="rgb(246,109,37)" rx="2" ry="2" />
<text  x="288.48" y="1375.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::push_back (1 samples, 0.02%)</title><rect x="44.0" y="1445" width="0.2" height="15.0" fill="rgb(221,58,32)" rx="2" ry="2" />
<text  x="46.97" y="1455.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;utils::UUID&gt;::allocate (1 samples, 0.02%)</title><rect x="1141.3" y="1605" width="0.2" height="15.0" fill="rgb(230,10,16)" rx="2" ry="2" />
<text  x="1144.26" y="1615.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE14then_impl_nrvoIZNS6_14discard_resultEvEUlDpOT_E_NS0_IvEEEET0_OT_ (12 samples, 0.22%)</title><rect x="718.9" y="1605" width="2.6" height="15.0" fill="rgb(242,199,47)" rx="2" ry="2" />
<text  x="721.88" y="1615.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::operator (1 samples, 0.02%)</title><rect x="1130.0" y="1141" width="0.2" height="15.0" fill="rgb(253,97,38)" rx="2" ry="2" />
<text  x="1133.01" y="1151.5" ></text>
</g>
<g >
<title>mutation_partition::apply_monotonically (1 samples, 0.02%)</title><rect x="1116.8" y="1381" width="0.2" height="15.0" fill="rgb(216,183,17)" rx="2" ry="2" />
<text  x="1119.77" y="1391.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="649.2" y="1509" width="0.2" height="15.0" fill="rgb(227,184,1)" rx="2" ry="2" />
<text  x="652.19" y="1519.5" ></text>
</g>
<g >
<title>compressed_file_data_sink_impl&lt;crc32_utils,  (1 samples, 0.02%)</title><rect x="10.7" y="1493" width="0.2" height="15.0" fill="rgb(249,140,11)" rx="2" ry="2" />
<text  x="13.66" y="1503.5" ></text>
</g>
<g >
<title>row::compact_and_expire (1 samples, 0.02%)</title><rect x="690.0" y="1445" width="0.2" height="15.0" fill="rgb(221,82,26)" rx="2" ry="2" />
<text  x="692.99" y="1455.5" ></text>
</g>
<g >
<title>query::result_set::from_raw_result (1 samples, 0.02%)</title><rect x="101.3" y="1621" width="0.2" height="15.0" fill="rgb(254,186,13)" rx="2" ry="2" />
<text  x="104.31" y="1631.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_clear (1 samples, 0.02%)</title><rect x="596.7" y="1525" width="0.2" height="15.0" fill="rgb(229,51,25)" rx="2" ry="2" />
<text  x="599.69" y="1535.5" ></text>
</g>
<g >
<title>std::operator+ (2 samples, 0.04%)</title><rect x="45.3" y="1317" width="0.4" height="15.0" fill="rgb(211,132,38)" rx="2" ry="2" />
<text  x="48.29" y="1327.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (2 samples, 0.04%)</title><rect x="364.7" y="1333" width="0.4" height="15.0" fill="rgb(243,23,26)" rx="2" ry="2" />
<text  x="367.66" y="1343.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::update_and_check (1 samples, 0.02%)</title><rect x="365.8" y="1333" width="0.2" height="15.0" fill="rgb(217,183,25)" rx="2" ry="2" />
<text  x="368.76" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (6 samples, 0.11%)</title><rect x="598.7" y="1573" width="1.3" height="15.0" fill="rgb(231,217,15)" rx="2" ry="2" />
<text  x="601.68" y="1583.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (3 samples, 0.06%)</title><rect x="46.2" y="1461" width="0.6" height="15.0" fill="rgb(241,185,33)" rx="2" ry="2" />
<text  x="49.17" y="1471.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (1 samples, 0.02%)</title><rect x="22.6" y="1541" width="0.2" height="15.0" fill="rgb(252,24,45)" rx="2" ry="2" />
<text  x="25.57" y="1551.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_destroy_data_aux (1 samples, 0.02%)</title><rect x="627.3" y="1541" width="0.3" height="15.0" fill="rgb(245,41,28)" rx="2" ry="2" />
<text  x="630.35" y="1551.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (2 samples, 0.04%)</title><rect x="585.0" y="1461" width="0.4" height="15.0" fill="rgb(235,114,7)" rx="2" ry="2" />
<text  x="588.00" y="1471.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::operator (2 samples, 0.04%)</title><rect x="181.8" y="1429" width="0.5" height="15.0" fill="rgb(254,10,30)" rx="2" ry="2" />
<text  x="184.82" y="1439.5" ></text>
</g>
<g >
<title>absl::hash_internal::HashState::combine_contiguous (2 samples, 0.04%)</title><rect x="819.5" y="1429" width="0.4" height="15.0" fill="rgb(252,169,8)" rx="2" ry="2" />
<text  x="822.46" y="1439.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;flat_mutation_reader::peek (5 samples, 0.09%)</title><rect x="328.7" y="1541" width="1.1" height="15.0" fill="rgb(215,88,53)" rx="2" ry="2" />
<text  x="331.71" y="1551.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (2 samples, 0.04%)</title><rect x="915.2" y="1541" width="0.4" height="15.0" fill="rgb(240,26,48)" rx="2" ry="2" />
<text  x="918.18" y="1551.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_token (2 samples, 0.04%)</title><rect x="935.3" y="1525" width="0.4" height="15.0" fill="rgb(246,95,14)" rx="2" ry="2" />
<text  x="938.25" y="1535.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::operator (2 samples, 0.04%)</title><rect x="848.6" y="1637" width="0.4" height="15.0" fill="rgb(206,195,27)" rx="2" ry="2" />
<text  x="851.57" y="1647.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (2 samples, 0.04%)</title><rect x="725.5" y="1541" width="0.4" height="15.0" fill="rgb(232,47,29)" rx="2" ry="2" />
<text  x="728.50" y="1551.5" ></text>
</g>
<g >
<title>service::abstract_read_resolver::~abstract_read_resolver (2 samples, 0.04%)</title><rect x="699.9" y="1621" width="0.5" height="15.0" fill="rgb(209,30,16)" rx="2" ry="2" />
<text  x="702.91" y="1631.5" ></text>
</g>
<g >
<title>operator delete (6 samples, 0.11%)</title><rect x="324.3" y="1445" width="1.3" height="15.0" fill="rgb(250,43,16)" rx="2" ry="2" />
<text  x="327.30" y="1455.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::deallocate (5 samples, 0.09%)</title><rect x="209.4" y="1365" width="1.1" height="15.0" fill="rgb(219,106,45)" rx="2" ry="2" />
<text  x="212.39" y="1375.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (2 samples, 0.04%)</title><rect x="548.4" y="1397" width="0.4" height="15.0" fill="rgb(222,170,3)" rx="2" ry="2" />
<text  x="551.39" y="1407.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (5 samples, 0.09%)</title><rect x="41.5" y="1413" width="1.1" height="15.0" fill="rgb(247,26,41)" rx="2" ry="2" />
<text  x="44.54" y="1423.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="1120.1" y="1397" width="0.2" height="15.0" fill="rgb(245,109,42)" rx="2" ry="2" />
<text  x="1123.08" y="1407.5" ></text>
</g>
<g >
<title>do_query&lt;(anonymous namespace)::mutation_query_result_builder&gt; (3 samples, 0.06%)</title><rect x="100.4" y="1477" width="0.7" height="15.0" fill="rgb(222,208,22)" rx="2" ry="2" />
<text  x="103.43" y="1487.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::on_permit_unused (1 samples, 0.02%)</title><rect x="117.4" y="1589" width="0.2" height="15.0" fill="rgb(206,16,42)" rx="2" ry="2" />
<text  x="120.41" y="1599.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;::basic_sstring (3 samples, 0.06%)</title><rect x="721.7" y="1621" width="0.7" height="15.0" fill="rgb(251,206,47)" rx="2" ry="2" />
<text  x="724.75" y="1631.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (2 samples, 0.04%)</title><rect x="579.5" y="1429" width="0.4" height="15.0" fill="rgb(218,25,52)" rx="2" ry="2" />
<text  x="582.49" y="1439.5" ></text>
</g>
<g >
<title>bound_view::from_range&lt;nonwrapping_interval&gt; (14 samples, 0.26%)</title><rect x="285.9" y="1349" width="3.1" height="15.0" fill="rgb(225,118,28)" rx="2" ry="2" />
<text  x="288.92" y="1359.5" ></text>
</g>
<g >
<title>flat_mutation_reader::peek (2 samples, 0.04%)</title><rect x="328.9" y="1525" width="0.5" height="15.0" fill="rgb(252,105,9)" rx="2" ry="2" />
<text  x="331.93" y="1535.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (43 samples, 0.80%)</title><rect x="1118.5" y="1525" width="9.5" height="15.0" fill="rgb(227,95,42)" rx="2" ry="2" />
<text  x="1121.54" y="1535.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_Vector_base (2 samples, 0.04%)</title><rect x="52.8" y="1397" width="0.4" height="15.0" fill="rgb(247,85,13)" rx="2" ry="2" />
<text  x="55.79" y="1407.5" ></text>
</g>
<g >
<title>evictable_reader::fill_buffer (1 samples, 0.02%)</title><rect x="100.9" y="1333" width="0.2" height="15.0" fill="rgb(251,207,51)" rx="2" ry="2" />
<text  x="103.87" y="1343.5" ></text>
</g>
<g >
<title>cql3::restrictions::partition_key_restrictions::merge_to (1 samples, 0.02%)</title><rect x="70.7" y="1509" width="0.2" height="15.0" fill="rgb(209,98,6)" rx="2" ry="2" />
<text  x="73.65" y="1519.5" ></text>
</g>
<g >
<title>partition_entry::partition_entry (1 samples, 0.02%)</title><rect x="16.0" y="1701" width="0.2" height="15.0" fill="rgb(231,194,3)" rx="2" ry="2" />
<text  x="18.96" y="1711.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="902.2" y="1525" width="0.2" height="15.0" fill="rgb(254,46,28)" rx="2" ry="2" />
<text  x="905.17" y="1535.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.07%)</title><rect x="462.8" y="1397" width="0.9" height="15.0" fill="rgb(224,208,37)" rx="2" ry="2" />
<text  x="465.81" y="1407.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;11ul, cql3::expr::untyped_constant, cql3::expr::untyped_constant, void&gt; (2 samples, 0.04%)</title><rect x="53.7" y="1381" width="0.4" height="15.0" fill="rgb(246,159,51)" rx="2" ry="2" />
<text  x="56.67" y="1391.5" ></text>
</g>
<g >
<title>db::system_keyspace_make (5 samples, 0.09%)</title><rect x="101.5" y="1653" width="1.1" height="15.0" fill="rgb(215,191,44)" rx="2" ry="2" />
<text  x="104.53" y="1663.5" ></text>
</g>
<g >
<title>locator::token_metadata::first_token (28 samples, 0.52%)</title><rect x="1054.8" y="1429" width="6.2" height="15.0" fill="rgb(248,219,2)" rx="2" ry="2" />
<text  x="1057.80" y="1439.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_rec (1 samples, 0.02%)</title><rect x="21.5" y="1557" width="0.2" height="15.0" fill="rgb(238,225,19)" rx="2" ry="2" />
<text  x="24.47" y="1567.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (2 samples, 0.04%)</title><rect x="44.4" y="1429" width="0.4" height="15.0" fill="rgb(247,72,5)" rx="2" ry="2" />
<text  x="47.41" y="1439.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (1 samples, 0.02%)</title><rect x="1130.4" y="1653" width="0.3" height="15.0" fill="rgb(239,221,29)" rx="2" ry="2" />
<text  x="1133.45" y="1663.5" ></text>
</g>
<g >
<title>seastar::sprint&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; (2 samples, 0.04%)</title><rect x="18.6" y="1669" width="0.4" height="15.0" fill="rgb(238,146,32)" rx="2" ry="2" />
<text  x="21.60" y="1679.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="135.1" y="1605" width="0.2" height="15.0" fill="rgb(214,200,2)" rx="2" ry="2" />
<text  x="138.06" y="1615.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.02%)</title><rect x="690.9" y="1429" width="0.2" height="15.0" fill="rgb(229,27,49)" rx="2" ry="2" />
<text  x="693.87" y="1439.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (2 samples, 0.04%)</title><rect x="38.2" y="1365" width="0.5" height="15.0" fill="rgb(211,54,20)" rx="2" ry="2" />
<text  x="41.23" y="1375.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.06%)</title><rect x="1143.9" y="1589" width="0.7" height="15.0" fill="rgb(205,116,10)" rx="2" ry="2" />
<text  x="1146.90" y="1599.5" ></text>
</g>
<g >
<title>sstables::write&lt;unsigned int, unsigned char&gt; (1 samples, 0.02%)</title><rect x="79.3" y="1541" width="0.2" height="15.0" fill="rgb(249,98,25)" rx="2" ry="2" />
<text  x="82.26" y="1551.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (1 samples, 0.02%)</title><rect x="783.5" y="1397" width="0.2" height="15.0" fill="rgb(217,99,27)" rx="2" ry="2" />
<text  x="786.51" y="1407.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (3 samples, 0.06%)</title><rect x="528.5" y="1445" width="0.7" height="15.0" fill="rgb(224,115,49)" rx="2" ry="2" />
<text  x="531.54" y="1455.5" ></text>
</g>
<g >
<title>ser::writer_of_qr_partition&lt;bytes_ostream&gt;::skip_key (2 samples, 0.04%)</title><rect x="354.1" y="1317" width="0.4" height="15.0" fill="rgb(209,88,46)" rx="2" ry="2" />
<text  x="357.07" y="1327.5" ></text>
</g>
<g >
<title>seastar::internal::uninitialized_wrapper_base&lt;service::storage_proxy_coordinator_query_result, false&gt;::uninitialized_set&lt;service::storage_proxy_coordinator_query_result&gt; (5 samples, 0.09%)</title><rect x="687.6" y="1605" width="1.1" height="15.0" fill="rgb(208,14,39)" rx="2" ry="2" />
<text  x="690.56" y="1615.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (15 samples, 0.28%)</title><rect x="990.8" y="1413" width="3.3" height="15.0" fill="rgb(226,62,18)" rx="2" ry="2" />
<text  x="993.83" y="1423.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (1 samples, 0.02%)</title><rect x="422.9" y="1381" width="0.2" height="15.0" fill="rgb(208,119,18)" rx="2" ry="2" />
<text  x="425.89" y="1391.5" ></text>
</g>
<g >
<title>database::find_column_family (9 samples, 0.17%)</title><rect x="1033.8" y="1493" width="2.0" height="15.0" fill="rgb(238,55,51)" rx="2" ry="2" />
<text  x="1036.84" y="1503.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::enqueue_waiter (50 samples, 0.93%)</title><rect x="1002.1" y="1365" width="11.0" height="15.0" fill="rgb(250,196,47)" rx="2" ry="2" />
<text  x="1005.08" y="1375.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::alloc (22 samples, 0.41%)</title><rect x="240.0" y="1221" width="4.9" height="15.0" fill="rgb(241,129,40)" rx="2" ry="2" />
<text  x="243.04" y="1231.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.02%)</title><rect x="861.6" y="1621" width="0.2" height="15.0" fill="rgb(227,224,53)" rx="2" ry="2" />
<text  x="864.59" y="1631.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::allocator (1 samples, 0.02%)</title><rect x="21.2" y="1461" width="0.3" height="15.0" fill="rgb(206,207,21)" rx="2" ry="2" />
<text  x="24.25" y="1471.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.02%)</title><rect x="17.1" y="1653" width="0.2" height="15.0" fill="rgb(210,66,26)" rx="2" ry="2" />
<text  x="20.06" y="1663.5" ></text>
</g>
<g >
<title>partition_snapshot::~partition_snapshot (1 samples, 0.02%)</title><rect x="581.5" y="1429" width="0.2" height="15.0" fill="rgb(216,142,27)" rx="2" ry="2" />
<text  x="584.47" y="1439.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="915.0" y="1493" width="0.2" height="15.0" fill="rgb(246,127,10)" rx="2" ry="2" />
<text  x="917.96" y="1503.5" ></text>
</g>
<g >
<title>bplus::tree&lt;long, intrusive_array&lt;cache_entry&gt;, dht::raw_token_less_comparator, 16ul,  (8 samples, 0.15%)</title><rect x="540.4" y="1445" width="1.8" height="15.0" fill="rgb(236,18,46)" rx="2" ry="2" />
<text  x="543.45" y="1455.5" ></text>
</g>
<g >
<title>mutation_querier::prepare_writers (1 samples, 0.02%)</title><rect x="345.5" y="1365" width="0.2" height="15.0" fill="rgb(220,100,37)" rx="2" ry="2" />
<text  x="348.47" y="1375.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::storage_proxy&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="945.4" y="1541" width="0.2" height="15.0" fill="rgb(246,18,36)" rx="2" ry="2" />
<text  x="948.40" y="1551.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.02%)</title><rect x="58.3" y="1381" width="0.2" height="15.0" fill="rgb(243,156,24)" rx="2" ry="2" />
<text  x="61.30" y="1391.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::raw::parsed_statement, std::default_delete&lt;cql3::statements::raw::parsed_statement&gt; &gt;::operator= (1 samples, 0.02%)</title><rect x="64.9" y="1509" width="0.2" height="15.0" fill="rgb(239,204,41)" rx="2" ry="2" />
<text  x="67.92" y="1519.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.02%)</title><rect x="44.8" y="1301" width="0.3" height="15.0" fill="rgb(251,95,39)" rx="2" ry="2" />
<text  x="47.85" y="1311.5" ></text>
</g>
<g >
<title>seastar::continuation_base_with_promise&lt;seastar::internal::promise_base_with_type&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;, void&gt;::waiting_task (1 samples, 0.02%)</title><rect x="78.8" y="1765" width="0.2" height="15.0" fill="rgb(238,37,24)" rx="2" ry="2" />
<text  x="81.81" y="1775.5" ></text>
</g>
<g >
<title>std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt;::emplace_back&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; (9 samples, 0.17%)</title><rect x="290.8" y="1365" width="2.0" height="15.0" fill="rgb(206,34,2)" rx="2" ry="2" />
<text  x="293.77" y="1375.5" ></text>
</g>
<g >
<title>cql3::query_options::fill_value_views (1 samples, 0.02%)</title><rect x="836.4" y="1573" width="0.3" height="15.0" fill="rgb(237,170,21)" rx="2" ry="2" />
<text  x="839.44" y="1583.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_result_local (1 samples, 0.02%)</title><rect x="1028.5" y="1461" width="0.3" height="15.0" fill="rgb(237,218,28)" rx="2" ry="2" />
<text  x="1031.55" y="1471.5" ></text>
</g>
<g >
<title>ser::qr_partition__static_row&lt;bytes_ostream&gt;::qr_partition__static_row (1 samples, 0.02%)</title><rect x="355.0" y="1333" width="0.2" height="15.0" fill="rgb(209,225,40)" rx="2" ry="2" />
<text  x="357.96" y="1343.5" ></text>
</g>
<g >
<title>std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;, true&gt; (1 samples, 0.02%)</title><rect x="48.8" y="1381" width="0.2" height="15.0" fill="rgb(212,163,37)" rx="2" ry="2" />
<text  x="51.82" y="1391.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (1 samples, 0.02%)</title><rect x="808.9" y="1541" width="0.2" height="15.0" fill="rgb(212,38,52)" rx="2" ry="2" />
<text  x="811.87" y="1551.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (2 samples, 0.04%)</title><rect x="481.8" y="1429" width="0.4" height="15.0" fill="rgb(225,44,30)" rx="2" ry="2" />
<text  x="484.78" y="1439.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::entry::entry (5 samples, 0.09%)</title><rect x="1003.8" y="1349" width="1.1" height="15.0" fill="rgb(218,78,45)" rx="2" ry="2" />
<text  x="1006.85" y="1359.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::~small_vector (1 samples, 0.02%)</title><rect x="1163.5" y="1573" width="0.3" height="15.0" fill="rgb(254,97,5)" rx="2" ry="2" />
<text  x="1166.53" y="1583.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (2 samples, 0.04%)</title><rect x="689.8" y="1605" width="0.4" height="15.0" fill="rgb(234,215,15)" rx="2" ry="2" />
<text  x="692.77" y="1615.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_nonsingular_data_locally (1 samples, 0.02%)</title><rect x="10.4" y="533" width="0.3" height="15.0" fill="rgb(206,14,33)" rx="2" ry="2" />
<text  x="13.44" y="543.5" ></text>
</g>
<g >
<title>std::apply&lt;auth::get_permissions (96 samples, 1.79%)</title><rect x="780.0" y="1445" width="21.2" height="15.0" fill="rgb(236,20,46)" rx="2" ry="2" />
<text  x="782.98" y="1455.5" ></text>
</g>
<g >
<title>ser::serializer&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;::write_fragmented&lt;bytes_ostream, fragment_range&lt;managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="1124.5" y="1253" width="0.2" height="15.0" fill="rgb(238,76,47)" rx="2" ry="2" />
<text  x="1127.49" y="1263.5" ></text>
</g>
<g >
<title>query::result_set::result_set (1 samples, 0.02%)</title><rect x="101.3" y="1637" width="0.2" height="15.0" fill="rgb(233,166,24)" rx="2" ry="2" />
<text  x="104.31" y="1647.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (5 samples, 0.09%)</title><rect x="128.0" y="1525" width="1.1" height="15.0" fill="rgb(226,33,38)" rx="2" ry="2" />
<text  x="131.00" y="1535.5" ></text>
</g>
<g >
<title>sstables::sstable::write_simple&lt; (1 samples, 0.02%)</title><rect x="79.3" y="1589" width="0.2" height="15.0" fill="rgb(235,161,33)" rx="2" ry="2" />
<text  x="82.26" y="1599.5" ></text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::EqualElement&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt;&amp;&gt; (3 samples, 0.06%)</title><rect x="758.6" y="1493" width="0.6" height="15.0" fill="rgb(244,68,6)" rx="2" ry="2" />
<text  x="761.58" y="1503.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="1189" width="0.3" height="15.0" fill="rgb(207,102,34)" rx="2" ry="2" />
<text  x="13.44" y="1199.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.02%)</title><rect x="36.2" y="1413" width="0.3" height="15.0" fill="rgb(222,32,39)" rx="2" ry="2" />
<text  x="39.25" y="1423.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt;, true, true&gt;::__uniq_ptr_impl&lt;std::default_delete&lt;cql3::operation::set_value&gt; &gt; (2 samples, 0.04%)</title><rect x="56.8" y="1445" width="0.4" height="15.0" fill="rgb(230,203,24)" rx="2" ry="2" />
<text  x="59.76" y="1455.5" ></text>
</g>
<g >
<title>sstables::regular_compaction::stop_sstable_writer (1 samples, 0.02%)</title><rect x="17.5" y="1637" width="0.2" height="15.0" fill="rgb(231,111,5)" rx="2" ry="2" />
<text  x="20.50" y="1647.5" ></text>
</g>
<g >
<title>cql3::prepared_statements_cache::find (27 samples, 0.50%)</title><rect x="724.8" y="1589" width="6.0" height="15.0" fill="rgb(241,74,3)" rx="2" ry="2" />
<text  x="727.84" y="1599.5" ></text>
</g>
<g >
<title>seastar::app_template::run_deprecated (4,921 samples, 91.98%)</title><rect x="82.6" y="1717" width="1085.3" height="15.0" fill="rgb(247,50,23)" rx="2" ry="2" />
<text  x="85.56" y="1727.5" >seastar::app_template::run_deprecated</text>
</g>
<g >
<title>cql3::expr::possible_lhs_values (130 samples, 2.43%)</title><rect x="873.9" y="1557" width="28.7" height="15.0" fill="rgb(223,183,52)" rx="2" ry="2" />
<text  x="876.94" y="1567.5" >cq..</text>
</g>
<g >
<title>seastar::internal::do_until_state&lt;seastar::posix_file_impl::list_directory (1 samples, 0.02%)</title><rect x="846.8" y="1653" width="0.2" height="15.0" fill="rgb(248,25,15)" rx="2" ry="2" />
<text  x="849.81" y="1663.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::emplace_back&lt;unsigned int const&amp;&gt; (1 samples, 0.02%)</title><rect x="1091.9" y="1557" width="0.2" height="15.0" fill="rgb(230,48,3)" rx="2" ry="2" />
<text  x="1094.85" y="1567.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::small_vector (1 samples, 0.02%)</title><rect x="470.1" y="1413" width="0.2" height="15.0" fill="rgb(224,192,52)" rx="2" ry="2" />
<text  x="473.09" y="1423.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate (3 samples, 0.06%)</title><rect x="854.1" y="1445" width="0.6" height="15.0" fill="rgb(236,158,21)" rx="2" ry="2" />
<text  x="857.09" y="1455.5" ></text>
</g>
<g >
<title>seastar::reactor::service_highres_timer (1 samples, 0.02%)</title><rect x="1167.3" y="1605" width="0.2" height="15.0" fill="rgb(216,11,17)" rx="2" ry="2" />
<text  x="1170.28" y="1615.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (7 samples, 0.13%)</title><rect x="662.9" y="1637" width="1.5" height="15.0" fill="rgb(235,153,39)" rx="2" ry="2" />
<text  x="665.86" y="1647.5" ></text>
</g>
<g >
<title>__vfprintf_internal (1 samples, 0.02%)</title><rect x="78.4" y="1765" width="0.2" height="15.0" fill="rgb(245,147,52)" rx="2" ry="2" />
<text  x="81.37" y="1775.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="50.6" y="1397" width="0.2" height="15.0" fill="rgb(231,196,53)" rx="2" ry="2" />
<text  x="53.58" y="1407.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.02%)</title><rect x="57.9" y="1349" width="0.2" height="15.0" fill="rgb(217,119,39)" rx="2" ry="2" />
<text  x="60.86" y="1359.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="68.4" y="1493" width="0.3" height="15.0" fill="rgb(213,92,18)" rx="2" ry="2" />
<text  x="71.45" y="1503.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.04%)</title><rect x="40.9" y="1365" width="0.4" height="15.0" fill="rgb(236,13,30)" rx="2" ry="2" />
<text  x="43.88" y="1375.5" ></text>
</g>
<g >
<title>operator delete (5 samples, 0.09%)</title><rect x="600.2" y="1557" width="1.1" height="15.0" fill="rgb(213,229,43)" rx="2" ry="2" />
<text  x="603.22" y="1567.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::forward_to (3 samples, 0.06%)</title><rect x="860.7" y="1621" width="0.7" height="15.0" fill="rgb(216,126,3)" rx="2" ry="2" />
<text  x="863.70" y="1631.5" ></text>
</g>
<g >
<title>locator::token_metadata_impl::first_token_index (1 samples, 0.02%)</title><rect x="1126.9" y="1301" width="0.2" height="15.0" fill="rgb(233,48,0)" rx="2" ry="2" />
<text  x="1129.92" y="1311.5" ></text>
</g>
<g >
<title>abstract_type::compare (1 samples, 0.02%)</title><rect x="17.1" y="1269" width="0.2" height="15.0" fill="rgb(224,115,23)" rx="2" ry="2" />
<text  x="20.06" y="1279.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (1 samples, 0.02%)</title><rect x="47.3" y="1413" width="0.2" height="15.0" fill="rgb(232,191,25)" rx="2" ry="2" />
<text  x="50.27" y="1423.5" ></text>
</g>
<g >
<title>std::tuple&lt;cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::tuple&lt;true, true&gt; (1 samples, 0.02%)</title><rect x="53.5" y="1349" width="0.2" height="15.0" fill="rgb(214,53,5)" rx="2" ry="2" />
<text  x="56.45" y="1359.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;service::storage_proxy_coordinator_query_result&gt;::set_value&lt;service::storage_proxy_coordinator_query_result&gt; (4 samples, 0.07%)</title><rect x="1139.1" y="1637" width="0.8" height="15.0" fill="rgb(214,69,25)" rx="2" ry="2" />
<text  x="1142.05" y="1647.5" ></text>
</g>
<g >
<title>empty_flat_reader::empty_flat_reader (5 samples, 0.09%)</title><rect x="547.7" y="1413" width="1.1" height="15.0" fill="rgb(236,93,14)" rx="2" ry="2" />
<text  x="550.73" y="1423.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (2 samples, 0.04%)</title><rect x="38.2" y="1477" width="0.5" height="15.0" fill="rgb(254,63,29)" rx="2" ry="2" />
<text  x="41.23" y="1487.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::vector (2 samples, 0.04%)</title><rect x="52.8" y="1413" width="0.4" height="15.0" fill="rgb(206,92,49)" rx="2" ry="2" />
<text  x="55.79" y="1423.5" ></text>
</g>
<g >
<title>row::apply_monotonically (2 samples, 0.04%)</title><rect x="16.4" y="1685" width="0.4" height="15.0" fill="rgb(226,13,4)" rx="2" ry="2" />
<text  x="19.40" y="1695.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (1 samples, 0.02%)</title><rect x="77.9" y="1573" width="0.3" height="15.0" fill="rgb(216,162,1)" rx="2" ry="2" />
<text  x="80.93" y="1583.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;std::unique_ptr&lt;seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt; const, std::default_delete&lt;seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt; const&gt; &gt; &gt;::~foreign_ptr (1 samples, 0.02%)</title><rect x="100.7" y="1381" width="0.2" height="15.0" fill="rgb(250,171,27)" rx="2" ry="2" />
<text  x="103.65" y="1391.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;seastar::semaphore_units&lt;seastar::semaphore_default_exception_factory, std::chrono::_V2::steady_clock&gt; &gt;::dispose (1 samples, 0.02%)</title><rect x="675.2" y="1621" width="0.2" height="15.0" fill="rgb(252,25,21)" rx="2" ry="2" />
<text  x="678.21" y="1631.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql3::statements::update_statement&gt;::shared_ptr_count_for&lt;cql3::statements::statement_type const&amp;, unsigned long, seastar::lw_shared_ptr&lt;schema const&gt;&amp;, std::unique_ptr&lt;cql3::attributes, std::default_delete&lt;cql3::attributes&gt; &gt;, cql3::cql_stats&amp;&gt; (3 samples, 0.06%)</title><rect x="72.4" y="1557" width="0.7" height="15.0" fill="rgb(236,103,42)" rx="2" ry="2" />
<text  x="75.42" y="1567.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (2 samples, 0.04%)</title><rect x="643.2" y="1637" width="0.5" height="15.0" fill="rgb(224,188,4)" rx="2" ry="2" />
<text  x="646.23" y="1647.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (1 samples, 0.02%)</title><rect x="510.2" y="1445" width="0.3" height="15.0" fill="rgb(227,140,7)" rx="2" ry="2" />
<text  x="513.23" y="1455.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::process_results (1 samples, 0.02%)</title><rect x="95.6" y="1653" width="0.2" height="15.0" fill="rgb(232,31,24)" rx="2" ry="2" />
<text  x="98.58" y="1663.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt; &gt;::invoke&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (122 samples, 2.28%)</title><rect x="994.6" y="1429" width="26.9" height="15.0" fill="rgb(254,5,18)" rx="2" ry="2" />
<text  x="997.58" y="1439.5" >s..</text>
</g>
<g >
<title>seastar::future_state&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::clear (2 samples, 0.04%)</title><rect x="193.3" y="1413" width="0.4" height="15.0" fill="rgb(231,131,52)" rx="2" ry="2" />
<text  x="196.29" y="1423.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (2 samples, 0.04%)</title><rect x="727.0" y="1477" width="0.5" height="15.0" fill="rgb(250,99,7)" rx="2" ry="2" />
<text  x="730.04" y="1487.5" ></text>
</g>
<g >
<title>cql3::query_options::fill_value_views (9 samples, 0.17%)</title><rect x="837.3" y="1557" width="2.0" height="15.0" fill="rgb(221,108,14)" rx="2" ry="2" />
<text  x="840.32" y="1567.5" ></text>
</g>
<g >
<title>partition_snapshot::versions (1 samples, 0.02%)</title><rect x="265.9" y="1301" width="0.2" height="15.0" fill="rgb(254,29,48)" rx="2" ry="2" />
<text  x="268.85" y="1311.5" ></text>
</g>
<g >
<title>sstables::size_tiered_compaction_strategy::get_reshaping_job (1 samples, 0.02%)</title><rect x="15.5" y="1621" width="0.2" height="15.0" fill="rgb(230,29,11)" rx="2" ry="2" />
<text  x="18.51" y="1631.5" ></text>
</g>
<g >
<title>bplus::node&lt;long, intrusive_array&lt;memtable_entry&gt;, dht::raw_token_less_comparator, 16ul,  (2 samples, 0.04%)</title><rect x="1113.7" y="1333" width="0.4" height="15.0" fill="rgb(212,116,22)" rx="2" ry="2" />
<text  x="1116.69" y="1343.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (31 samples, 0.58%)</title><rect x="789.9" y="1333" width="6.8" height="15.0" fill="rgb(235,66,6)" rx="2" ry="2" />
<text  x="792.90" y="1343.5" ></text>
</g>
<g >
<title>reader_permit::impl::mark_used (1 samples, 0.02%)</title><rect x="107.7" y="1621" width="0.2" height="15.0" fill="rgb(250,16,33)" rx="2" ry="2" />
<text  x="110.71" y="1631.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (2 samples, 0.04%)</title><rect x="547.1" y="1429" width="0.4" height="15.0" fill="rgb(213,153,53)" rx="2" ry="2" />
<text  x="550.07" y="1439.5" ></text>
</g>
<g >
<title>row::external_memory_usage (1 samples, 0.02%)</title><rect x="262.3" y="1317" width="0.2" height="15.0" fill="rgb(241,94,15)" rx="2" ry="2" />
<text  x="265.32" y="1327.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::modification_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::operator (1 samples, 0.02%)</title><rect x="19.0" y="1573" width="0.3" height="15.0" fill="rgb(246,118,34)" rx="2" ry="2" />
<text  x="22.04" y="1583.5" ></text>
</g>
<g >
<title>clustering_row::clustering_row (138 samples, 2.58%)</title><rect x="223.1" y="1317" width="30.4" height="15.0" fill="rgb(222,81,9)" rx="2" ry="2" />
<text  x="226.06" y="1327.5" >cl..</text>
</g>
<g >
<title>cql3::expr::expression::operator= (1 samples, 0.02%)</title><rect x="57.6" y="1477" width="0.3" height="15.0" fill="rgb(247,89,31)" rx="2" ry="2" />
<text  x="60.64" y="1487.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="94.3" y="1605" width="0.2" height="15.0" fill="rgb(232,63,30)" rx="2" ry="2" />
<text  x="97.25" y="1615.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (1 samples, 0.02%)</title><rect x="102.0" y="1493" width="0.2" height="15.0" fill="rgb(229,161,23)" rx="2" ry="2" />
<text  x="104.97" y="1503.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.02%)</title><rect x="690.9" y="1445" width="0.2" height="15.0" fill="rgb(207,154,18)" rx="2" ry="2" />
<text  x="693.87" y="1455.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="767.8" y="1509" width="0.3" height="15.0" fill="rgb(212,189,16)" rx="2" ry="2" />
<text  x="770.85" y="1519.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (8 samples, 0.15%)</title><rect x="947.8" y="1509" width="1.8" height="15.0" fill="rgb(213,195,29)" rx="2" ry="2" />
<text  x="950.82" y="1519.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (1 samples, 0.02%)</title><rect x="1164.0" y="1653" width="0.2" height="15.0" fill="rgb(244,184,35)" rx="2" ry="2" />
<text  x="1166.97" y="1663.5" ></text>
</g>
<g >
<title>_ZSt5applyIZN7seastar8internal12do_with_implISt8optionalIN4auth8resourceEEZNK7service12client_state20check_has_permissionENS4_12command_descEE3$_7JEEEDaOT_OT0_DpOT1_EUlDpOT_E_St5tupleIJOS6_EEEDcSC_SE_ (2 samples, 0.04%)</title><rect x="75.3" y="1541" width="0.4" height="15.0" fill="rgb(230,15,53)" rx="2" ry="2" />
<text  x="78.29" y="1551.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_M_set_node (1 samples, 0.02%)</title><rect x="38.2" y="1301" width="0.3" height="15.0" fill="rgb(223,45,36)" rx="2" ry="2" />
<text  x="41.23" y="1311.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="1189.8" y="1765" width="0.2" height="15.0" fill="rgb(239,127,14)" rx="2" ry="2" />
<text  x="1192.78" y="1775.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::clear (3 samples, 0.06%)</title><rect x="194.8" y="1429" width="0.7" height="15.0" fill="rgb(247,131,22)" rx="2" ry="2" />
<text  x="197.83" y="1439.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;std::function&lt;std::function&lt;partition_presence_checker_result  (2 samples, 0.04%)</title><rect x="634.0" y="1573" width="0.4" height="15.0" fill="rgb(218,85,0)" rx="2" ry="2" />
<text  x="636.97" y="1583.5" ></text>
</g>
<g >
<title>db::schema_tables::create_table_from_mutations (2 samples, 0.04%)</title><rect x="102.0" y="1557" width="0.4" height="15.0" fill="rgb(247,209,15)" rx="2" ry="2" />
<text  x="104.97" y="1567.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (3 samples, 0.06%)</title><rect x="795.0" y="1237" width="0.6" height="15.0" fill="rgb(233,115,9)" rx="2" ry="2" />
<text  x="797.98" y="1247.5" ></text>
</g>
<g >
<title>std::default_delete&lt;seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt; const&gt;::operator (1 samples, 0.02%)</title><rect x="100.7" y="1349" width="0.2" height="15.0" fill="rgb(229,211,47)" rx="2" ry="2" />
<text  x="103.65" y="1359.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_one (1 samples, 0.02%)</title><rect x="1130.0" y="1157" width="0.2" height="15.0" fill="rgb(234,205,50)" rx="2" ry="2" />
<text  x="1133.01" y="1167.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;gms::inet_address, gms::inet_address, std::allocator&lt;gms::inet_address&gt;, std::__detail::_Identity, std::equal_to&lt;gms::inet_address&gt;, std::hash&lt;gms::inet_address&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_find_before_node (1 samples, 0.02%)</title><rect x="102.6" y="1589" width="0.3" height="15.0" fill="rgb(251,172,8)" rx="2" ry="2" />
<text  x="105.64" y="1599.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.02%)</title><rect x="790.1" y="1269" width="0.2" height="15.0" fill="rgb(254,205,53)" rx="2" ry="2" />
<text  x="793.12" y="1279.5" ></text>
</g>
<g >
<title>database::find_column_family (9 samples, 0.17%)</title><rect x="809.3" y="1493" width="2.0" height="15.0" fill="rgb(225,57,35)" rx="2" ry="2" />
<text  x="812.31" y="1503.5" ></text>
</g>
<g >
<title>cql3::query_options::get_value_at (3 samples, 0.06%)</title><rect x="883.4" y="1429" width="0.7" height="15.0" fill="rgb(214,2,16)" rx="2" ry="2" />
<text  x="886.42" y="1439.5" ></text>
</g>
<g >
<title>memtable_entry::snapshot (1 samples, 0.02%)</title><rect x="536.3" y="1493" width="0.2" height="15.0" fill="rgb(206,135,39)" rx="2" ry="2" />
<text  x="539.26" y="1503.5" ></text>
</g>
<g >
<title>cql3::statements::update_statement::add_update_for_key (11 samples, 0.21%)</title><rect x="853.0" y="1509" width="2.4" height="15.0" fill="rgb(245,203,52)" rx="2" ry="2" />
<text  x="855.98" y="1519.5" ></text>
</g>
<g >
<title>std::__equal&lt;true&gt;::equal&lt;char&gt; (1 samples, 0.02%)</title><rect x="790.3" y="1269" width="0.3" height="15.0" fill="rgb(215,88,5)" rx="2" ry="2" />
<text  x="793.34" y="1279.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (1 samples, 0.02%)</title><rect x="834.7" y="1477" width="0.2" height="15.0" fill="rgb(232,13,50)" rx="2" ry="2" />
<text  x="837.68" y="1487.5" ></text>
</g>
<g >
<title>range_tombstone_list::~range_tombstone_list (5 samples, 0.09%)</title><rect x="582.6" y="1445" width="1.1" height="15.0" fill="rgb(219,66,54)" rx="2" ry="2" />
<text  x="585.58" y="1455.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (3 samples, 0.06%)</title><rect x="689.8" y="1621" width="0.6" height="15.0" fill="rgb(205,125,13)" rx="2" ry="2" />
<text  x="692.77" y="1631.5" ></text>
</g>
<g >
<title>seastar::internal::extract_values_from_futures_tuple&lt;seastar::future&lt;void&gt;, seastar::future&lt;void&gt;, seastar::future&lt;void&gt; &gt;::set_promise (1 samples, 0.02%)</title><rect x="79.0" y="1749" width="0.3" height="15.0" fill="rgb(210,88,18)" rx="2" ry="2" />
<text  x="82.04" y="1759.5" ></text>
</g>
<g >
<title>sstables::mc::writer::write_clustered&lt;clustering_row&gt; (5 samples, 0.09%)</title><rect x="80.8" y="1589" width="1.1" height="15.0" fill="rgb(245,64,50)" rx="2" ry="2" />
<text  x="83.80" y="1599.5" ></text>
</g>
<g >
<title>__tls_init (2 samples, 0.04%)</title><rect x="499.9" y="1461" width="0.4" height="15.0" fill="rgb(224,141,37)" rx="2" ry="2" />
<text  x="502.87" y="1471.5" ></text>
</g>
<g >
<title>atomic_cell_type::make_live&lt;fragment_range&lt;managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="853.2" y="1397" width="0.2" height="15.0" fill="rgb(243,225,37)" rx="2" ry="2" />
<text  x="856.20" y="1407.5" ></text>
</g>
<g >
<title>allocation_strategy::alloc&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::leaf_node&gt; (5 samples, 0.09%)</title><rect x="248.4" y="1253" width="1.1" height="15.0" fill="rgb(253,187,53)" rx="2" ry="2" />
<text  x="251.43" y="1263.5" ></text>
</g>
<g >
<title>std::_Optional_base_impl&lt;mutation_querier, std::_Optional_base&lt;mutation_querier, false, false&gt; &gt;::_M_construct&lt;mutation_querier&gt; (7 samples, 0.13%)</title><rect x="356.5" y="1317" width="1.5" height="15.0" fill="rgb(218,106,4)" rx="2" ry="2" />
<text  x="359.50" y="1327.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_805ba145d71de739aa5a49a7dfdfc7655f960912] (1 samples, 0.02%)</title><rect x="815.0" y="1445" width="0.3" height="15.0" fill="rgb(239,119,54)" rx="2" ry="2" />
<text  x="818.05" y="1455.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (1 samples, 0.02%)</title><rect x="100.9" y="1109" width="0.2" height="15.0" fill="rgb(243,65,20)" rx="2" ry="2" />
<text  x="103.87" y="1119.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::process_results (45 samples, 0.84%)</title><rect x="651.6" y="1637" width="9.9" height="15.0" fill="rgb(243,189,18)" rx="2" ry="2" />
<text  x="654.61" y="1647.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="583.9" y="1445" width="0.2" height="15.0" fill="rgb(228,73,7)" rx="2" ry="2" />
<text  x="586.90" y="1455.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt; &gt;::satisfy_with_result_of&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::then_wrapped_nrvo&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (11 samples, 0.21%)</title><rect x="672.1" y="1637" width="2.4" height="15.0" fill="rgb(235,45,5)" rx="2" ry="2" />
<text  x="675.12" y="1647.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (8 samples, 0.15%)</title><rect x="635.3" y="1637" width="1.8" height="15.0" fill="rgb(205,129,32)" rx="2" ry="2" />
<text  x="638.29" y="1647.5" ></text>
</g>
<g >
<title>table::make_reader (1 samples, 0.02%)</title><rect x="1165.3" y="1557" width="0.2" height="15.0" fill="rgb(241,124,21)" rx="2" ry="2" />
<text  x="1168.30" y="1567.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt;::_M_reset (1 samples, 0.02%)</title><rect x="529.6" y="1445" width="0.3" height="15.0" fill="rgb(211,172,35)" rx="2" ry="2" />
<text  x="532.64" y="1455.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::get_promise (9 samples, 0.17%)</title><rect x="1094.9" y="1573" width="2.0" height="15.0" fill="rgb(206,196,0)" rx="2" ry="2" />
<text  x="1097.94" y="1583.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (1 samples, 0.02%)</title><rect x="664.8" y="1605" width="0.3" height="15.0" fill="rgb(253,82,24)" rx="2" ry="2" />
<text  x="667.84" y="1615.5" ></text>
</g>
<g >
<title>db::marshal::type_parser::do_parse (1 samples, 0.02%)</title><rect x="1130.0" y="933" width="0.2" height="15.0" fill="rgb(250,198,20)" rx="2" ry="2" />
<text  x="1133.01" y="943.5" ></text>
</g>
<g >
<title>query::result_view::consume&lt;query::result_set_builder&amp;&gt; (1 samples, 0.02%)</title><rect x="101.3" y="1605" width="0.2" height="15.0" fill="rgb(253,202,35)" rx="2" ry="2" />
<text  x="104.31" y="1615.5" ></text>
</g>
<g >
<title>__libc_start_main (4,921 samples, 91.98%)</title><rect x="82.6" y="1781" width="1085.3" height="15.0" fill="rgb(250,138,26)" rx="2" ry="2" />
<text  x="85.56" y="1791.5" >__libc_start_main</text>
</g>
<g >
<title>__tls_init (1 samples, 0.02%)</title><rect x="515.1" y="1397" width="0.2" height="15.0" fill="rgb(234,26,34)" rx="2" ry="2" />
<text  x="518.08" y="1407.5" ></text>
</g>
<g >
<title>partition_entry::evict (1 samples, 0.02%)</title><rect x="690.9" y="1397" width="0.2" height="15.0" fill="rgb(232,115,53)" rx="2" ry="2" />
<text  x="693.87" y="1407.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::allocate (12 samples, 0.22%)</title><rect x="321.4" y="1445" width="2.7" height="15.0" fill="rgb(228,68,24)" rx="2" ry="2" />
<text  x="324.43" y="1455.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (3 samples, 0.06%)</title><rect x="46.2" y="1429" width="0.6" height="15.0" fill="rgb(238,185,45)" rx="2" ry="2" />
<text  x="49.17" y="1439.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;auth::resource_kind, std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;auth::resource_kind&gt;, std::hash&lt;auth::resource_kind&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (5 samples, 0.09%)</title><rect x="766.1" y="1493" width="1.1" height="15.0" fill="rgb(245,142,12)" rx="2" ry="2" />
<text  x="769.08" y="1503.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.06%)</title><rect x="645.0" y="1637" width="0.7" height="15.0" fill="rgb(226,113,20)" rx="2" ry="2" />
<text  x="647.99" y="1647.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.02%)</title><rect x="58.3" y="1285" width="0.2" height="15.0" fill="rgb(225,89,12)" rx="2" ry="2" />
<text  x="61.30" y="1295.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::revoke_statement, std::default_delete&lt;cql3::statements::revoke_statement&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="62.7" y="1525" width="0.2" height="15.0" fill="rgb(234,170,7)" rx="2" ry="2" />
<text  x="65.71" y="1535.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (1 samples, 0.02%)</title><rect x="79.0" y="1477" width="0.3" height="15.0" fill="rgb(243,139,46)" rx="2" ry="2" />
<text  x="82.04" y="1487.5" ></text>
</g>
<g >
<title>sstables::write (1 samples, 0.02%)</title><rect x="79.3" y="1557" width="0.2" height="15.0" fill="rgb(229,96,17)" rx="2" ry="2" />
<text  x="82.26" y="1567.5" ></text>
</g>
<g >
<title>schema::column_at (2 samples, 0.04%)</title><rect x="253.1" y="1285" width="0.4" height="15.0" fill="rgb(208,177,18)" rx="2" ry="2" />
<text  x="256.06" y="1295.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (2 samples, 0.04%)</title><rect x="38.2" y="1461" width="0.5" height="15.0" fill="rgb(242,120,18)" rx="2" ry="2" />
<text  x="41.23" y="1471.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (1 samples, 0.02%)</title><rect x="1009.6" y="1285" width="0.2" height="15.0" fill="rgb(205,76,0)" rx="2" ry="2" />
<text  x="1012.58" y="1295.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_M_copy_assign (1 samples, 0.02%)</title><rect x="800.7" y="1429" width="0.2" height="15.0" fill="rgb(239,63,23)" rx="2" ry="2" />
<text  x="803.71" y="1439.5" ></text>
</g>
<g >
<title>std::__lower_bound&lt;__gnu_cxx::__normal_iterator&lt;dht::token const*, std::vector&lt;dht::token, std::allocator&lt;dht::token&gt; &gt; &gt;, dht::token, __gnu_cxx::__ops::_Iter_less_val&gt; (22 samples, 0.41%)</title><rect x="1056.1" y="1397" width="4.9" height="15.0" fill="rgb(227,137,28)" rx="2" ry="2" />
<text  x="1059.12" y="1407.5" ></text>
</g>
<g >
<title>table::do_apply&lt;frozen_mutation const&amp;, seastar::lw_shared_ptr&lt;schema const&gt; const&amp;&gt; (20 samples, 0.37%)</title><rect x="1112.8" y="1429" width="4.4" height="15.0" fill="rgb(243,141,6)" rx="2" ry="2" />
<text  x="1115.80" y="1439.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_9has_tokenERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES28_S2B_ (1 samples, 0.02%)</title><rect x="935.9" y="1509" width="0.2" height="15.0" fill="rgb(222,73,33)" rx="2" ry="2" />
<text  x="938.91" y="1519.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (1 samples, 0.02%)</title><rect x="644.8" y="1605" width="0.2" height="15.0" fill="rgb(251,211,16)" rx="2" ry="2" />
<text  x="647.77" y="1615.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::find (2 samples, 0.04%)</title><rect x="656.5" y="1573" width="0.4" height="15.0" fill="rgb(249,84,8)" rx="2" ry="2" />
<text  x="659.46" y="1583.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (3 samples, 0.06%)</title><rect x="699.0" y="1621" width="0.7" height="15.0" fill="rgb(219,76,31)" rx="2" ry="2" />
<text  x="702.03" y="1631.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (1 samples, 0.02%)</title><rect x="712.9" y="1589" width="0.2" height="15.0" fill="rgb(209,66,39)" rx="2" ry="2" />
<text  x="715.93" y="1599.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;std::tuple&lt;std::optional&lt;clustering_key_prefix&gt; &gt; &gt; &gt;::satisfy_with_result_of&lt;seastar::future&lt;mutation_fragment*&gt;::then_impl_nrvo&lt;query::consume_page&lt; (3 samples, 0.06%)</title><rect x="689.8" y="1637" width="0.6" height="15.0" fill="rgb(247,99,22)" rx="2" ry="2" />
<text  x="692.77" y="1647.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (1 samples, 0.02%)</title><rect x="798.9" y="1397" width="0.3" height="15.0" fill="rgb(207,28,21)" rx="2" ry="2" />
<text  x="801.95" y="1407.5" ></text>
</g>
<g >
<title>do_cql_test (274 samples, 5.12%)</title><rect x="17.7" y="1701" width="60.5" height="15.0" fill="rgb(224,55,34)" rx="2" ry="2" />
<text  x="20.72" y="1711.5" >do_cql..</text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.02%)</title><rect x="36.2" y="1333" width="0.3" height="15.0" fill="rgb(245,80,22)" rx="2" ry="2" />
<text  x="39.25" y="1343.5" ></text>
</g>
<g >
<title>cache_entry::~cache_entry (1 samples, 0.02%)</title><rect x="79.0" y="1493" width="0.3" height="15.0" fill="rgb(211,66,12)" rx="2" ry="2" />
<text  x="82.04" y="1503.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="1165.1" y="1637" width="0.2" height="15.0" fill="rgb(233,100,5)" rx="2" ry="2" />
<text  x="1168.08" y="1647.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::_M_deleter (1 samples, 0.02%)</title><rect x="47.3" y="1397" width="0.2" height="15.0" fill="rgb(254,71,16)" rx="2" ry="2" />
<text  x="50.27" y="1407.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (1 samples, 0.02%)</title><rect x="68.4" y="1525" width="0.3" height="15.0" fill="rgb(220,119,20)" rx="2" ry="2" />
<text  x="71.45" y="1535.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*&gt; &gt;::clear (1 samples, 0.02%)</title><rect x="20.6" y="1557" width="0.2" height="15.0" fill="rgb(219,177,31)" rx="2" ry="2" />
<text  x="23.59" y="1567.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.02%)</title><rect x="58.5" y="1349" width="0.2" height="15.0" fill="rgb(248,61,47)" rx="2" ry="2" />
<text  x="61.52" y="1359.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;*, std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt; &gt;::__normal_iterator (1 samples, 0.02%)</title><rect x="47.9" y="1445" width="0.3" height="15.0" fill="rgb(244,118,8)" rx="2" ry="2" />
<text  x="50.94" y="1455.5" ></text>
</g>
<g >
<title>ser::serializer&lt;clustering_key_prefix&gt;::read&lt;seastar::simple_memory_input_stream&gt; (1 samples, 0.02%)</title><rect x="102.4" y="1429" width="0.2" height="15.0" fill="rgb(236,149,21)" rx="2" ry="2" />
<text  x="105.41" y="1439.5" ></text>
</g>
<g >
<title>logalloc::basic_region_impl::set_reclaiming_enabled (1 samples, 0.02%)</title><rect x="546.2" y="1461" width="0.2" height="15.0" fill="rgb(206,46,52)" rx="2" ry="2" />
<text  x="549.18" y="1471.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (1 samples, 0.02%)</title><rect x="704.1" y="1605" width="0.2" height="15.0" fill="rgb(226,110,20)" rx="2" ry="2" />
<text  x="707.10" y="1615.5" ></text>
</g>
<g >
<title>sstring_hash::operator (3 samples, 0.06%)</title><rect x="819.2" y="1461" width="0.7" height="15.0" fill="rgb(242,43,24)" rx="2" ry="2" />
<text  x="822.24" y="1471.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::allocate (3 samples, 0.06%)</title><rect x="519.3" y="1365" width="0.6" height="15.0" fill="rgb(224,22,16)" rx="2" ry="2" />
<text  x="522.27" y="1375.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="1621" width="0.3" height="15.0" fill="rgb(247,207,43)" rx="2" ry="2" />
<text  x="13.44" y="1631.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::_M_get_Tp_allocator (1 samples, 0.02%)</title><rect x="36.7" y="1493" width="0.2" height="15.0" fill="rgb(253,135,20)" rx="2" ry="2" />
<text  x="39.69" y="1503.5" ></text>
</g>
<g >
<title>mutation_partition::append_clustered_row (1 samples, 0.02%)</title><rect x="1115.0" y="1365" width="0.2" height="15.0" fill="rgb(248,121,19)" rx="2" ry="2" />
<text  x="1118.01" y="1375.5" ></text>
</g>
<g >
<title>seastar::internal::uninitialized_wrapper_base&lt;utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::value_ptr, false&gt;::uninitialized_set&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry_ptr&gt; (1 samples, 0.02%)</title><rect x="738.1" y="1461" width="0.2" height="15.0" fill="rgb(214,6,13)" rx="2" ry="2" />
<text  x="741.07" y="1471.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_prepared (64 samples, 1.20%)</title><rect x="734.1" y="1573" width="14.1" height="15.0" fill="rgb(243,143,35)" rx="2" ry="2" />
<text  x="737.10" y="1583.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit_slot&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::memory_usage&lt;row::external_memory_usage (1 samples, 0.02%)</title><rect x="79.7" y="1429" width="0.2" height="15.0" fill="rgb(239,95,1)" rx="2" ry="2" />
<text  x="82.70" y="1439.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::visit&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (28 samples, 0.52%)</title><rect x="426.6" y="1381" width="6.2" height="15.0" fill="rgb(209,120,29)" rx="2" ry="2" />
<text  x="429.64" y="1391.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::pop_mutation_fragment (1 samples, 0.02%)</title><rect x="177.2" y="1461" width="0.2" height="15.0" fill="rgb(254,133,17)" rx="2" ry="2" />
<text  x="180.19" y="1471.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.04%)</title><rect x="92.7" y="1605" width="0.5" height="15.0" fill="rgb(234,34,33)" rx="2" ry="2" />
<text  x="95.71" y="1615.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="446.3" y="1525" width="0.2" height="15.0" fill="rgb(240,173,9)" rx="2" ry="2" />
<text  x="449.27" y="1535.5" ></text>
</g>
<g >
<title>cql3::raw_value_view::raw_value_view (8 samples, 0.15%)</title><rect x="894.4" y="1477" width="1.8" height="15.0" fill="rgb(247,26,50)" rx="2" ry="2" />
<text  x="897.45" y="1487.5" ></text>
</g>
<g >
<title>cql3::to_managed_bytes_opt (1 samples, 0.02%)</title><rect x="897.3" y="1509" width="0.2" height="15.0" fill="rgb(228,215,27)" rx="2" ry="2" />
<text  x="900.32" y="1519.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume_in_thread&lt;stable_flattened_mutations_consumer&lt;compact_for_compaction&lt;sstables::compacting_sstable_writer, noop_compacted_fragments_consumer&gt; &gt;, flat_mutation_reader::no_filter&gt; (1 samples, 0.02%)</title><rect x="1130.0" y="1317" width="0.2" height="15.0" fill="rgb(208,195,36)" rx="2" ry="2" />
<text  x="1133.01" y="1327.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="855.0" y="1413" width="0.2" height="15.0" fill="rgb(220,71,48)" rx="2" ry="2" />
<text  x="857.97" y="1423.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::do_execute (1,105 samples, 20.65%)</title><rect x="867.5" y="1589" width="243.8" height="15.0" fill="rgb(254,164,26)" rx="2" ry="2" />
<text  x="870.54" y="1599.5" >cql3::statements::select_stateme..</text>
</g>
<g >
<title>compound_type&lt; (2 samples, 0.04%)</title><rect x="559.4" y="1493" width="0.5" height="15.0" fill="rgb(236,195,54)" rx="2" ry="2" />
<text  x="562.42" y="1503.5" ></text>
</g>
<g >
<title>seastar::hrtimer_aio_completion::complete_with (1 samples, 0.02%)</title><rect x="1167.3" y="1621" width="0.2" height="15.0" fill="rgb(245,70,2)" rx="2" ry="2" />
<text  x="1170.28" y="1631.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="58.1" y="1381" width="0.2" height="15.0" fill="rgb(215,176,16)" rx="2" ry="2" />
<text  x="61.08" y="1391.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;cql3::expr::untyped_constant, void, void, cql3::expr::untyped_constant, void&gt; (2 samples, 0.04%)</title><rect x="53.7" y="1397" width="0.4" height="15.0" fill="rgb(214,9,54)" rx="2" ry="2" />
<text  x="56.67" y="1407.5" ></text>
</g>
<g >
<title>ser::set_size&lt;bytes_ostream, partition_key&gt; (2 samples, 0.04%)</title><rect x="1125.8" y="1301" width="0.5" height="15.0" fill="rgb(233,142,35)" rx="2" ry="2" />
<text  x="1128.82" y="1311.5" ></text>
</g>
<g >
<title>row::row (135 samples, 2.52%)</title><rect x="223.7" y="1301" width="29.8" height="15.0" fill="rgb(227,72,48)" rx="2" ry="2" />
<text  x="226.72" y="1311.5" >ro..</text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::~small_vector (1 samples, 0.02%)</title><rect x="1166.0" y="1557" width="0.2" height="15.0" fill="rgb(236,66,48)" rx="2" ry="2" />
<text  x="1168.96" y="1567.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (4 samples, 0.07%)</title><rect x="752.6" y="1525" width="0.9" height="15.0" fill="rgb(218,135,40)" rx="2" ry="2" />
<text  x="755.63" y="1535.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate (1 samples, 0.02%)</title><rect x="855.2" y="1429" width="0.2" height="15.0" fill="rgb(241,98,48)" rx="2" ry="2" />
<text  x="858.19" y="1439.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::fill_buffer (2 samples, 0.04%)</title><rect x="79.7" y="1573" width="0.4" height="15.0" fill="rgb(242,107,22)" rx="2" ry="2" />
<text  x="82.70" y="1583.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (4 samples, 0.07%)</title><rect x="1107.5" y="1573" width="0.9" height="15.0" fill="rgb(244,111,38)" rx="2" ry="2" />
<text  x="1110.51" y="1583.5" ></text>
</g>
<g >
<title>_ZSt13__invoke_implISt10unique_ptrIN7seastar8internal13do_with_stateISt5tupleIJN20flat_mutation_reader4impl16consumer_adapterI35stable_flattened_mutations_consumerI17compact_for_queryIL19emit_only_live_rows1EN5query27clustering_position_trackerI20query_result_builderEEEEEEEENS1_6futureIvEEEESt14default_deleteISL_EEZNS2_12do_with_implISH_ZNS6_7consumeISG_EEDaT_EUlRSH_E_JEEEDaOSR_OT0_DpOT1_EUlDpOT_E_JSH_EESR_St14__invoke_otherSW_SZ_ (5 samples, 0.09%)</title><rect x="335.8" y="1461" width="1.1" height="15.0" fill="rgb(237,152,22)" rx="2" ry="2" />
<text  x="338.77" y="1471.5" ></text>
</g>
<g >
<title>_ZSt5applyIZN7seastar8internal12do_with_implISt8optionalIN4auth8resourceEEZNK7service12client_state20check_has_permissionENS4_12command_descEE3$_7JEEEDaOT_OT0_DpOT1_EUlDpOT_E_St5tupleIJOS6_EEEDcSC_SE_ (7 samples, 0.13%)</title><rect x="772.7" y="1477" width="1.5" height="15.0" fill="rgb(237,207,17)" rx="2" ry="2" />
<text  x="775.70" y="1487.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (10 samples, 0.19%)</title><rect x="205.6" y="1365" width="2.2" height="15.0" fill="rgb(248,108,23)" rx="2" ry="2" />
<text  x="208.64" y="1375.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::lower_bound&lt;mutation_partition, schema const&amp;, nonwrapping_interval&lt;clustering_key_prefix&gt; const&amp;&gt; (9 samples, 0.17%)</title><rect x="283.3" y="1365" width="2.0" height="15.0" fill="rgb(233,46,14)" rx="2" ry="2" />
<text  x="286.27" y="1375.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::populate_slot (2 samples, 0.04%)</title><rect x="853.6" y="1413" width="0.5" height="15.0" fill="rgb(241,82,37)" rx="2" ry="2" />
<text  x="856.64" y="1423.5" ></text>
</g>
<g >
<title>mutation_partition_view::do_accept&lt;partition_builder&gt; (1 samples, 0.02%)</title><rect x="101.1" y="1557" width="0.2" height="15.0" fill="rgb(215,168,6)" rx="2" ry="2" />
<text  x="104.09" y="1567.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (50 samples, 0.93%)</title><rect x="118.1" y="1573" width="11.0" height="15.0" fill="rgb(240,126,45)" rx="2" ry="2" />
<text  x="121.07" y="1583.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::operator== (7 samples, 0.13%)</title><rect x="790.8" y="1285" width="1.5" height="15.0" fill="rgb(216,132,49)" rx="2" ry="2" />
<text  x="793.79" y="1295.5" ></text>
</g>
<g >
<title>validation::validate_keyspace (2 samples, 0.04%)</title><rect x="74.0" y="1589" width="0.4" height="15.0" fill="rgb(228,69,27)" rx="2" ry="2" />
<text  x="76.96" y="1599.5" ></text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;void&gt;, service::storage_proxy*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt;, db::consistency_level, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, tracing::trace_state_ptr, service_permit, bool, seastar::lw_shared_ptr&lt;cdc::operation_result_tracker&gt; &gt;::operator (1 samples, 0.02%)</title><rect x="849.7" y="1509" width="0.2" height="15.0" fill="rgb(208,143,7)" rx="2" ry="2" />
<text  x="852.67" y="1519.5" ></text>
</g>
<g >
<title>bplus::tree&lt;long, intrusive_array&lt;memtable_entry&gt;, dht::raw_token_less_comparator, 16ul,  (36 samples, 0.67%)</title><rect x="480.9" y="1461" width="7.9" height="15.0" fill="rgb(243,179,40)" rx="2" ry="2" />
<text  x="483.90" y="1471.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;mutation_reader_merger::reader_and_last_fragment_kind*, mutation_reader_merger::prepare_next (1 samples, 0.02%)</title><rect x="1130.0" y="1173" width="0.2" height="15.0" fill="rgb(217,223,47)" rx="2" ry="2" />
<text  x="1133.01" y="1183.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::clear (1 samples, 0.02%)</title><rect x="722.4" y="1621" width="0.2" height="15.0" fill="rgb(248,51,26)" rx="2" ry="2" />
<text  x="725.41" y="1631.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_initialize_map (7 samples, 0.13%)</title><rect x="560.5" y="1525" width="1.6" height="15.0" fill="rgb(206,51,34)" rx="2" ry="2" />
<text  x="563.52" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;auth::resource_kind, std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;auth::resource_kind&gt;, std::hash&lt;auth::resource_kind&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::at (5 samples, 0.09%)</title><rect x="766.1" y="1509" width="1.1" height="15.0" fill="rgb(215,82,7)" rx="2" ry="2" />
<text  x="769.08" y="1519.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::CommonToken (1 samples, 0.02%)</title><rect x="24.6" y="1349" width="0.2" height="15.0" fill="rgb(234,141,3)" rx="2" ry="2" />
<text  x="27.56" y="1359.5" ></text>
</g>
<g >
<title>seastar::smp::submit_to&lt;seastar::sharded&lt;database&gt;::invoke_on_all (1 samples, 0.02%)</title><rect x="17.1" y="1525" width="0.2" height="15.0" fill="rgb(208,46,22)" rx="2" ry="2" />
<text  x="20.06" y="1535.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::vector (1 samples, 0.02%)</title><rect x="901.9" y="1525" width="0.3" height="15.0" fill="rgb(251,186,19)" rx="2" ry="2" />
<text  x="904.95" y="1535.5" ></text>
</g>
<g >
<title>reader_permit::signal (1 samples, 0.02%)</title><rect x="575.1" y="1445" width="0.2" height="15.0" fill="rgb(221,89,19)" rx="2" ry="2" />
<text  x="578.08" y="1455.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (1 samples, 0.02%)</title><rect x="365.1" y="1317" width="0.2" height="15.0" fill="rgb(230,12,17)" rx="2" ry="2" />
<text  x="368.10" y="1327.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_slice_or_needs_filtering (1 samples, 0.02%)</title><rect x="654.3" y="1557" width="0.2" height="15.0" fill="rgb(241,134,3)" rx="2" ry="2" />
<text  x="657.26" y="1567.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="1221" width="0.3" height="15.0" fill="rgb(246,12,30)" rx="2" ry="2" />
<text  x="13.44" y="1231.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::execute (20 samples, 0.37%)</title><rect x="693.7" y="1621" width="4.4" height="15.0" fill="rgb(212,83,46)" rx="2" ry="2" />
<text  x="696.74" y="1631.5" ></text>
</g>
<g >
<title>cql3::expr::constant::make_bool (1 samples, 0.02%)</title><rect x="69.8" y="1477" width="0.2" height="15.0" fill="rgb(232,202,29)" rx="2" ry="2" />
<text  x="72.77" y="1487.5" ></text>
</g>
<g >
<title>antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;::RecognizerType&lt;antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::RecognizerType (3 samples, 0.06%)</title><rect x="20.8" y="1541" width="0.7" height="15.0" fill="rgb(212,190,18)" rx="2" ry="2" />
<text  x="23.81" y="1551.5" ></text>
</g>
<g >
<title>seastar::future&lt;boost::iterator_range&lt;mutation_fragment*&gt; &gt;::then_impl&lt;mutation_fragment_merger&lt;mutation_reader_merger&gt;::fetch (10 samples, 0.19%)</title><rect x="305.8" y="1477" width="2.2" height="15.0" fill="rgb(230,116,48)" rx="2" ry="2" />
<text  x="308.77" y="1487.5" ></text>
</g>
<g >
<title>memtable::memtable_encoding_stats_collector::update (1 samples, 0.02%)</title><rect x="1114.3" y="1333" width="0.3" height="15.0" fill="rgb(209,166,23)" rx="2" ry="2" />
<text  x="1117.35" y="1343.5" ></text>
</g>
<g >
<title>bplus::tree&lt;long, intrusive_array&lt;memtable_entry&gt;, dht::raw_token_less_comparator, 16ul,  (1 samples, 0.02%)</title><rect x="478.0" y="1477" width="0.3" height="15.0" fill="rgb(211,90,34)" rx="2" ry="2" />
<text  x="481.03" y="1487.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (9 samples, 0.17%)</title><rect x="940.8" y="1541" width="2.0" height="15.0" fill="rgb(236,140,0)" rx="2" ry="2" />
<text  x="943.77" y="1551.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (47 samples, 0.88%)</title><rect x="736.7" y="1541" width="10.4" height="15.0" fill="rgb(243,77,53)" rx="2" ry="2" />
<text  x="739.75" y="1551.5" ></text>
</g>
<g >
<title>flat_mutation_reader::close (85 samples, 1.59%)</title><rect x="568.5" y="1493" width="18.7" height="15.0" fill="rgb(247,74,49)" rx="2" ry="2" />
<text  x="571.46" y="1503.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="1077" width="0.3" height="15.0" fill="rgb(206,150,20)" rx="2" ry="2" />
<text  x="13.44" y="1087.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::move_it (2 samples, 0.04%)</title><rect x="962.8" y="1509" width="0.5" height="15.0" fill="rgb(234,85,33)" rx="2" ry="2" />
<text  x="965.82" y="1519.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_9has_tokenERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES28_S2B_ (1 samples, 0.02%)</title><rect x="934.1" y="1541" width="0.3" height="15.0" fill="rgb(237,94,47)" rx="2" ry="2" />
<text  x="937.15" y="1551.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.04%)</title><rect x="521.7" y="1333" width="0.4" height="15.0" fill="rgb(237,156,33)" rx="2" ry="2" />
<text  x="524.70" y="1343.5" ></text>
</g>
<g >
<title>antlr3::RuleReturnValue&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::RuleReturnValue (1 samples, 0.02%)</title><rect x="55.9" y="1413" width="0.2" height="15.0" fill="rgb(236,152,36)" rx="2" ry="2" />
<text  x="58.88" y="1423.5" ></text>
</g>
<g >
<title>seastar::reactor::do_run (4,920 samples, 91.96%)</title><rect x="82.6" y="1685" width="1085.1" height="15.0" fill="rgb(229,16,23)" rx="2" ry="2" />
<text  x="85.56" y="1695.5" >seastar::reactor::do_run</text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (3 samples, 0.06%)</title><rect x="36.9" y="1509" width="0.7" height="15.0" fill="rgb(241,47,36)" rx="2" ry="2" />
<text  x="39.91" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;6ul, cql3::expr::untyped_constant&gt; (1 samples, 0.02%)</title><rect x="53.7" y="1189" width="0.2" height="15.0" fill="rgb(222,102,5)" rx="2" ry="2" />
<text  x="56.67" y="1199.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (2 samples, 0.04%)</title><rect x="46.4" y="1349" width="0.4" height="15.0" fill="rgb(244,114,15)" rx="2" ry="2" />
<text  x="49.39" y="1359.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (44 samples, 0.82%)</title><rect x="1118.3" y="1541" width="9.7" height="15.0" fill="rgb(216,155,11)" rx="2" ry="2" />
<text  x="1121.32" y="1551.5" ></text>
</g>
<g >
<title>scanning_reader::fill_buffer_from_delegate (1 samples, 0.02%)</title><rect x="100.4" y="1141" width="0.3" height="15.0" fill="rgb(243,149,40)" rx="2" ry="2" />
<text  x="103.43" y="1151.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="36.2" y="1445" width="0.3" height="15.0" fill="rgb(250,192,45)" rx="2" ry="2" />
<text  x="39.25" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;11ul, cql3::expr::untyped_constant&gt; (1 samples, 0.02%)</title><rect x="53.7" y="1269" width="0.2" height="15.0" fill="rgb(227,216,16)" rx="2" ry="2" />
<text  x="56.67" y="1279.5" ></text>
</g>
<g >
<title>bplus::tree&lt;long, intrusive_array&lt;memtable_entry&gt;, dht::raw_token_less_comparator, 16ul,  (30 samples, 0.56%)</title><rect x="482.2" y="1445" width="6.6" height="15.0" fill="rgb(250,127,20)" rx="2" ry="2" />
<text  x="485.22" y="1455.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (1 samples, 0.02%)</title><rect x="921.6" y="1509" width="0.2" height="15.0" fill="rgb(224,79,8)" rx="2" ry="2" />
<text  x="924.58" y="1519.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::clear (1 samples, 0.02%)</title><rect x="465.9" y="1445" width="0.2" height="15.0" fill="rgb(230,103,21)" rx="2" ry="2" />
<text  x="468.90" y="1455.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::add_raw_update (11 samples, 0.21%)</title><rect x="47.5" y="1461" width="2.4" height="15.0" fill="rgb(230,156,33)" rx="2" ry="2" />
<text  x="50.50" y="1471.5" ></text>
</g>
<g >
<title>std::get&lt;2ul, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; (2 samples, 0.04%)</title><rect x="1107.1" y="1573" width="0.4" height="15.0" fill="rgb(205,63,20)" rx="2" ry="2" />
<text  x="1110.07" y="1583.5" ></text>
</g>
<g >
<title>free (1 samples, 0.02%)</title><rect x="82.1" y="1557" width="0.2" height="15.0" fill="rgb(247,47,27)" rx="2" ry="2" />
<text  x="85.12" y="1567.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;nonwrapping_interval&lt;dht::ring_position&gt; const, std::default_delete&lt;nonwrapping_interval&lt;dht::ring_position&gt; const&gt; &gt;::~unique_ptr (7 samples, 0.13%)</title><rect x="600.0" y="1573" width="1.5" height="15.0" fill="rgb(245,77,42)" rx="2" ry="2" />
<text  x="603.00" y="1583.5" ></text>
</g>
<g >
<title>evictable_reader::fill_buffer (1 samples, 0.02%)</title><rect x="100.4" y="1381" width="0.3" height="15.0" fill="rgb(219,62,39)" rx="2" ry="2" />
<text  x="103.43" y="1391.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.02%)</title><rect x="41.5" y="1317" width="0.3" height="15.0" fill="rgb(219,190,29)" rx="2" ry="2" />
<text  x="44.54" y="1327.5" ></text>
</g>
<g >
<title>tombstone::apply (1 samples, 0.02%)</title><rect x="16.8" y="1685" width="0.3" height="15.0" fill="rgb(224,1,24)" rx="2" ry="2" />
<text  x="19.84" y="1695.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.07%)</title><rect x="626.0" y="1541" width="0.9" height="15.0" fill="rgb(238,101,21)" rx="2" ry="2" />
<text  x="629.03" y="1551.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::done (4 samples, 0.07%)</title><rect x="607.5" y="1573" width="0.9" height="15.0" fill="rgb(251,117,37)" rx="2" ry="2" />
<text  x="610.50" y="1583.5" ></text>
</g>
<g >
<title>read_simple&lt;unsigned short, managed_bytes_basic_view&lt; (2 samples, 0.04%)</title><rect x="497.9" y="1349" width="0.4" height="15.0" fill="rgb(254,222,17)" rx="2" ry="2" />
<text  x="500.88" y="1359.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::attributes::raw, std::default_delete&lt;cql3::attributes::raw&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::attributes::raw&gt;, void&gt; (1 samples, 0.02%)</title><rect x="60.3" y="1493" width="0.2" height="15.0" fill="rgb(240,11,2)" rx="2" ry="2" />
<text  x="63.29" y="1503.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::cancel (1 samples, 0.02%)</title><rect x="713.1" y="1605" width="0.3" height="15.0" fill="rgb(246,176,14)" rx="2" ry="2" />
<text  x="716.15" y="1615.5" ></text>
</g>
<g >
<title>ser::safe_serialize_as_uint32&lt;bytes_ostream&gt; (4 samples, 0.07%)</title><rect x="388.9" y="1301" width="0.9" height="15.0" fill="rgb(254,132,7)" rx="2" ry="2" />
<text  x="391.92" y="1311.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_singular (63 samples, 1.18%)</title><rect x="1141.0" y="1637" width="13.9" height="15.0" fill="rgb(214,170,9)" rx="2" ry="2" />
<text  x="1144.04" y="1647.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment&lt;schema const&amp;, rows_entry const&amp;&gt; (1 samples, 0.02%)</title><rect x="100.4" y="965" width="0.3" height="15.0" fill="rgb(222,59,12)" rx="2" ry="2" />
<text  x="103.43" y="975.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (1 samples, 0.02%)</title><rect x="559.9" y="1493" width="0.2" height="15.0" fill="rgb(228,59,22)" rx="2" ry="2" />
<text  x="562.86" y="1503.5" ></text>
</g>
<g >
<title>seastar::promise&lt;void&gt;::promise (2 samples, 0.04%)</title><rect x="634.8" y="1637" width="0.5" height="15.0" fill="rgb(225,136,45)" rx="2" ry="2" />
<text  x="637.85" y="1647.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::leaf_node::allocate (1 samples, 0.02%)</title><rect x="11.5" y="1461" width="0.3" height="15.0" fill="rgb(252,121,24)" rx="2" ry="2" />
<text  x="14.54" y="1471.5" ></text>
</g>
<g >
<title>seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;::swap (4 samples, 0.07%)</title><rect x="740.3" y="1525" width="0.9" height="15.0" fill="rgb(219,91,13)" rx="2" ry="2" />
<text  x="743.28" y="1535.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="949" width="0.3" height="15.0" fill="rgb(209,159,13)" rx="2" ry="2" />
<text  x="13.44" y="959.5" ></text>
</g>
<g >
<title>row_cache::do_update (1 samples, 0.02%)</title><rect x="11.5" y="1701" width="0.3" height="15.0" fill="rgb(236,54,35)" rx="2" ry="2" />
<text  x="14.54" y="1711.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_insert&lt;flat_mutation_reader&gt; (1 samples, 0.02%)</title><rect x="464.6" y="1429" width="0.2" height="15.0" fill="rgb(225,6,49)" rx="2" ry="2" />
<text  x="467.58" y="1439.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::digest_read_result&gt;::schedule&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::execute (1 samples, 0.02%)</title><rect x="966.6" y="1477" width="0.2" height="15.0" fill="rgb(247,151,38)" rx="2" ry="2" />
<text  x="969.57" y="1487.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (3 samples, 0.06%)</title><rect x="828.9" y="1509" width="0.7" height="15.0" fill="rgb(219,37,54)" rx="2" ry="2" />
<text  x="831.94" y="1519.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.07%)</title><rect x="763.4" y="1525" width="0.9" height="15.0" fill="rgb(209,76,41)" rx="2" ry="2" />
<text  x="766.44" y="1535.5" ></text>
</g>
<g >
<title>seastar::future&lt;query::result_memory_accounter&gt;::get0 (4 samples, 0.07%)</title><rect x="129.5" y="1605" width="0.9" height="15.0" fill="rgb(245,225,23)" rx="2" ry="2" />
<text  x="132.54" y="1615.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.06%)</title><rect x="619.6" y="1557" width="0.7" height="15.0" fill="rgb(235,26,11)" rx="2" ry="2" />
<text  x="622.63" y="1567.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (1 samples, 0.02%)</title><rect x="1027.4" y="1445" width="0.3" height="15.0" fill="rgb(235,225,28)" rx="2" ry="2" />
<text  x="1030.45" y="1455.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="805" width="0.3" height="15.0" fill="rgb(224,141,2)" rx="2" ry="2" />
<text  x="13.44" y="815.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::~small_vector (1 samples, 0.02%)</title><rect x="472.3" y="1461" width="0.2" height="15.0" fill="rgb(225,147,1)" rx="2" ry="2" />
<text  x="475.30" y="1471.5" ></text>
</g>
<g >
<title>seastar::gate::enter (3 samples, 0.06%)</title><rect x="1016.2" y="1381" width="0.7" height="15.0" fill="rgb(249,102,18)" rx="2" ry="2" />
<text  x="1019.20" y="1391.5" ></text>
</g>
<g >
<title>sstring_hash::operator (6 samples, 0.11%)</title><rect x="1039.6" y="1445" width="1.3" height="15.0" fill="rgb(232,161,32)" rx="2" ry="2" />
<text  x="1042.58" y="1455.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::range_tombstone_accumulator (7 samples, 0.13%)</title><rect x="560.5" y="1541" width="1.6" height="15.0" fill="rgb(216,220,9)" rx="2" ry="2" />
<text  x="563.52" y="1551.5" ></text>
</g>
<g >
<title>std::function&lt;flat_mutation_reader  (466 samples, 8.71%)</title><rect x="451.6" y="1541" width="102.7" height="15.0" fill="rgb(205,157,32)" rx="2" ry="2" />
<text  x="454.56" y="1551.5" >std::functio..</text>
</g>
<g >
<title>boost::dynamic_bitset&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::dynamic_bitset (2 samples, 0.04%)</title><rect x="72.6" y="1509" width="0.5" height="15.0" fill="rgb(234,228,9)" rx="2" ry="2" />
<text  x="75.64" y="1519.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (1 samples, 0.02%)</title><rect x="24.6" y="1333" width="0.2" height="15.0" fill="rgb(254,64,53)" rx="2" ry="2" />
<text  x="27.56" y="1343.5" ></text>
</g>
<g >
<title>seastar::reactor::add_timer (1 samples, 0.02%)</title><rect x="1011.6" y="1317" width="0.2" height="15.0" fill="rgb(207,6,47)" rx="2" ry="2" />
<text  x="1014.57" y="1327.5" ></text>
</g>
<g >
<title>partition_key_view::legacy_tri_compare (1 samples, 0.02%)</title><rect x="498.8" y="1413" width="0.2" height="15.0" fill="rgb(228,126,31)" rx="2" ry="2" />
<text  x="501.76" y="1423.5" ></text>
</g>
<g >
<title>all (5,350 samples, 100%)</title><rect x="10.0" y="1813" width="1180.0" height="15.0" fill="rgb(233,20,5)" rx="2" ry="2" />
<text  x="13.00" y="1823.5" ></text>
</g>
<g >
<title>antlr3::Lexer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchc (1 samples, 0.02%)</title><rect x="31.8" y="1397" width="0.3" height="15.0" fill="rgb(207,138,48)" rx="2" ry="2" />
<text  x="34.84" y="1407.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_destroy_data_aux (1 samples, 0.02%)</title><rect x="399.5" y="1301" width="0.2" height="15.0" fill="rgb(233,75,30)" rx="2" ry="2" />
<text  x="402.51" y="1311.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::initial_key_restrictions&lt;partition_key&gt;::do_merge_to (2 samples, 0.04%)</title><rect x="70.7" y="1525" width="0.4" height="15.0" fill="rgb(207,172,47)" rx="2" ry="2" />
<text  x="73.65" y="1535.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.02%)</title><rect x="43.5" y="1349" width="0.2" height="15.0" fill="rgb(218,66,11)" rx="2" ry="2" />
<text  x="46.53" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;1ul, cql3::expr::untyped_constant&gt; (1 samples, 0.02%)</title><rect x="53.7" y="1109" width="0.2" height="15.0" fill="rgb(248,125,6)" rx="2" ry="2" />
<text  x="56.67" y="1119.5" ></text>
</g>
<g >
<title>service::abstract_read_resolver::~abstract_read_resolver (1 samples, 0.02%)</title><rect x="700.4" y="1637" width="0.2" height="15.0" fill="rgb(226,130,19)" rx="2" ry="2" />
<text  x="703.36" y="1647.5" ></text>
</g>
<g >
<title>__tls_init (1 samples, 0.02%)</title><rect x="499.6" y="1461" width="0.3" height="15.0" fill="rgb(252,132,23)" rx="2" ry="2" />
<text  x="502.64" y="1471.5" ></text>
</g>
<g >
<title>seastar::memory::allocate_aligned (19 samples, 0.36%)</title><rect x="240.7" y="1189" width="4.2" height="15.0" fill="rgb(217,5,53)" rx="2" ry="2" />
<text  x="243.71" y="1199.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="517" width="0.3" height="15.0" fill="rgb(216,95,30)" rx="2" ry="2" />
<text  x="13.44" y="527.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_istream (1 samples, 0.02%)</title><rect x="41.3" y="1397" width="0.2" height="15.0" fill="rgb(221,94,32)" rx="2" ry="2" />
<text  x="44.32" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::at (4 samples, 0.07%)</title><rect x="755.7" y="1509" width="0.9" height="15.0" fill="rgb(246,111,18)" rx="2" ry="2" />
<text  x="758.72" y="1519.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::abstract_read_executor&gt;::~shared_ptr (2 samples, 0.04%)</title><rect x="1160.7" y="1605" width="0.4" height="15.0" fill="rgb(235,209,13)" rx="2" ry="2" />
<text  x="1163.67" y="1615.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::disable_abort_on_alloc_failure_temporarily (1 samples, 0.02%)</title><rect x="273.3" y="1333" width="0.3" height="15.0" fill="rgb(238,164,5)" rx="2" ry="2" />
<text  x="276.35" y="1343.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::insertToken (1 samples, 0.02%)</title><rect x="36.5" y="1477" width="0.2" height="15.0" fill="rgb(252,3,1)" rx="2" ry="2" />
<text  x="39.47" y="1487.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::then_impl&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (64 samples, 1.20%)</title><rect x="313.1" y="1509" width="14.1" height="15.0" fill="rgb(236,150,41)" rx="2" ry="2" />
<text  x="316.05" y="1519.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::~resource_units (2 samples, 0.04%)</title><rect x="436.3" y="1381" width="0.5" height="15.0" fill="rgb(215,86,28)" rx="2" ry="2" />
<text  x="439.34" y="1391.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (1 samples, 0.02%)</title><rect x="681.8" y="1621" width="0.2" height="15.0" fill="rgb(236,143,6)" rx="2" ry="2" />
<text  x="684.83" y="1631.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::digest_read_result&gt;::then_wrapped_nrvo&lt;void, service::abstract_read_executor::execute (10 samples, 0.19%)</title><rect x="966.8" y="1477" width="2.2" height="15.0" fill="rgb(223,2,14)" rx="2" ry="2" />
<text  x="969.79" y="1487.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="632.2" y="1525" width="0.2" height="15.0" fill="rgb(214,54,30)" rx="2" ry="2" />
<text  x="635.20" y="1535.5" ></text>
</g>
<g >
<title>mutation_reader_merger::add_readers (7 samples, 0.13%)</title><rect x="462.1" y="1429" width="1.6" height="15.0" fill="rgb(213,90,37)" rx="2" ry="2" />
<text  x="465.15" y="1439.5" ></text>
</g>
<g >
<title>schema::column_at (6 samples, 0.11%)</title><rect x="416.7" y="1317" width="1.3" height="15.0" fill="rgb(243,190,23)" rx="2" ry="2" />
<text  x="419.71" y="1327.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (1 samples, 0.02%)</title><rect x="680.9" y="1621" width="0.3" height="15.0" fill="rgb(243,128,7)" rx="2" ry="2" />
<text  x="683.95" y="1631.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_Optional_payload_base (2 samples, 0.04%)</title><rect x="923.6" y="1541" width="0.4" height="15.0" fill="rgb(253,13,31)" rx="2" ry="2" />
<text  x="926.56" y="1551.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*&gt; &gt;::~_Deque_base (1 samples, 0.02%)</title><rect x="21.7" y="1493" width="0.2" height="15.0" fill="rgb(242,148,50)" rx="2" ry="2" />
<text  x="24.69" y="1503.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_prepared_with_qo (509 samples, 9.51%)</title><rect x="723.1" y="1605" width="112.2" height="15.0" fill="rgb(234,187,18)" rx="2" ry="2" />
<text  x="726.07" y="1615.5" >single_node_c..</text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (1 samples, 0.02%)</title><rect x="748.0" y="1541" width="0.2" height="15.0" fill="rgb(236,157,9)" rx="2" ry="2" />
<text  x="751.00" y="1551.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.06%)</title><rect x="670.4" y="1589" width="0.6" height="15.0" fill="rgb(216,182,41)" rx="2" ry="2" />
<text  x="673.36" y="1599.5" ></text>
</g>
<g >
<title>distributed_loader::reshape (1 samples, 0.02%)</title><rect x="15.5" y="1717" width="0.2" height="15.0" fill="rgb(240,19,12)" rx="2" ry="2" />
<text  x="18.51" y="1727.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperationDifferentiator (63 samples, 1.18%)</title><rect x="43.3" y="1493" width="13.9" height="15.0" fill="rgb(243,86,11)" rx="2" ry="2" />
<text  x="46.30" y="1503.5" ></text>
</g>
<g >
<title>antlr3::Lexer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::emit (1 samples, 0.02%)</title><rect x="27.6" y="1413" width="0.3" height="15.0" fill="rgb(234,171,49)" rx="2" ry="2" />
<text  x="30.64" y="1423.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.02%)</title><rect x="38.7" y="1333" width="0.2" height="15.0" fill="rgb(207,51,35)" rx="2" ry="2" />
<text  x="41.67" y="1343.5" ></text>
</g>
<g >
<title>compound_type&lt; (1 samples, 0.02%)</title><rect x="1125.4" y="1221" width="0.2" height="15.0" fill="rgb(249,107,54)" rx="2" ry="2" />
<text  x="1128.38" y="1231.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (721 samples, 13.48%)</title><rect x="169.7" y="1541" width="159.0" height="15.0" fill="rgb(215,78,53)" rx="2" ry="2" />
<text  x="172.69" y="1551.5" >merging_reader&lt;mutat..</text>
</g>
<g >
<title>operator new (2 samples, 0.04%)</title><rect x="830.0" y="1573" width="0.5" height="15.0" fill="rgb(237,6,35)" rx="2" ry="2" />
<text  x="833.04" y="1583.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (3 samples, 0.06%)</title><rect x="195.9" y="1429" width="0.7" height="15.0" fill="rgb(252,105,40)" rx="2" ry="2" />
<text  x="198.93" y="1439.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_create_nodes (1 samples, 0.02%)</title><rect x="19.9" y="1541" width="0.2" height="15.0" fill="rgb(211,189,32)" rx="2" ry="2" />
<text  x="22.93" y="1551.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.02%)</title><rect x="59.2" y="1333" width="0.2" height="15.0" fill="rgb(234,140,37)" rx="2" ry="2" />
<text  x="62.19" y="1343.5" ></text>
</g>
<g >
<title>ser::get_sizeof&lt;clustering_key_prefix&gt; (1 samples, 0.02%)</title><rect x="1125.6" y="1237" width="0.2" height="15.0" fill="rgb(240,34,24)" rx="2" ry="2" />
<text  x="1128.60" y="1247.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::CqlParser (1 samples, 0.02%)</title><rect x="65.4" y="1589" width="0.2" height="15.0" fill="rgb(205,106,19)" rx="2" ry="2" />
<text  x="68.36" y="1599.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_reserve_map_at_back (1 samples, 0.02%)</title><rect x="24.8" y="1397" width="0.2" height="15.0" fill="rgb(236,222,13)" rx="2" ry="2" />
<text  x="27.78" y="1407.5" ></text>
</g>
<g >
<title>cql3::query_processor::for_each_cql_result (1 samples, 0.02%)</title><rect x="639.0" y="1637" width="0.3" height="15.0" fill="rgb(216,155,45)" rx="2" ry="2" />
<text  x="642.04" y="1647.5" ></text>
</g>
<g >
<title>compound_wrapper&lt;clustering_key_prefix, clustering_key_prefix_view&gt;::make_empty (1 samples, 0.02%)</title><rect x="853.0" y="1493" width="0.2" height="15.0" fill="rgb(245,162,53)" rx="2" ry="2" />
<text  x="855.98" y="1503.5" ></text>
</g>
<g >
<title>ser::deletable_row_view::shadowable_deleted_at (1 samples, 0.02%)</title><rect x="1115.5" y="1381" width="0.2" height="15.0" fill="rgb(252,27,17)" rx="2" ry="2" />
<text  x="1118.45" y="1391.5" ></text>
</g>
<g >
<title>seastar::internal::sharded_parallel_for_each (1 samples, 0.02%)</title><rect x="692.2" y="1605" width="0.2" height="15.0" fill="rgb(232,204,48)" rx="2" ry="2" />
<text  x="695.19" y="1615.5" ></text>
</g>
<g >
<title>std::make_unique&lt;compact_for_query&lt; (1 samples, 0.02%)</title><rect x="690.2" y="1589" width="0.2" height="15.0" fill="rgb(215,205,4)" rx="2" ry="2" />
<text  x="693.21" y="1599.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (1 samples, 0.02%)</title><rect x="690.9" y="1461" width="0.2" height="15.0" fill="rgb(221,142,25)" rx="2" ry="2" />
<text  x="693.87" y="1471.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take (4 samples, 0.07%)</title><rect x="616.5" y="1589" width="0.9" height="15.0" fill="rgb(233,109,16)" rx="2" ry="2" />
<text  x="619.54" y="1599.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, cql3::statements::raw::parsed_statement*, std::default_delete&lt;cql3::statements::raw::parsed_statement&gt; &gt; (1 samples, 0.02%)</title><rect x="64.9" y="1477" width="0.2" height="15.0" fill="rgb(248,114,10)" rx="2" ry="2" />
<text  x="67.92" y="1487.5" ></text>
</g>
<g >
<title>sstables::mc::writer::write_clustered (5 samples, 0.09%)</title><rect x="80.8" y="1573" width="1.1" height="15.0" fill="rgb(252,146,3)" rx="2" ry="2" />
<text  x="83.80" y="1583.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_S_construct&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (1 samples, 0.02%)</title><rect x="24.6" y="1381" width="0.2" height="15.0" fill="rgb(205,114,21)" rx="2" ry="2" />
<text  x="27.56" y="1391.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.02%)</title><rect x="492.8" y="1365" width="0.2" height="15.0" fill="rgb(228,49,43)" rx="2" ry="2" />
<text  x="495.81" y="1375.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::digest_read_result&gt;::set&lt;service::digest_read_result&gt; (4 samples, 0.07%)</title><rect x="706.3" y="1557" width="0.9" height="15.0" fill="rgb(243,19,3)" rx="2" ry="2" />
<text  x="709.31" y="1567.5" ></text>
</g>
<g >
<title>std::tuple&lt;cql3::statements::revoke_statement*, std::default_delete&lt;cql3::statements::revoke_statement&gt; &gt;::tuple&lt;true, true&gt; (1 samples, 0.02%)</title><rect x="64.0" y="1477" width="0.3" height="15.0" fill="rgb(250,65,49)" rx="2" ry="2" />
<text  x="67.04" y="1487.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="1653" width="0.3" height="15.0" fill="rgb(235,168,50)" rx="2" ry="2" />
<text  x="13.44" y="1663.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::set_urgent_state (3 samples, 0.06%)</title><rect x="648.1" y="1637" width="0.6" height="15.0" fill="rgb(239,118,32)" rx="2" ry="2" />
<text  x="651.08" y="1647.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="846.8" y="1589" width="0.2" height="15.0" fill="rgb(214,51,24)" rx="2" ry="2" />
<text  x="849.81" y="1599.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.02%)</title><rect x="1130.0" y="1525" width="0.2" height="15.0" fill="rgb(223,35,33)" rx="2" ry="2" />
<text  x="1133.01" y="1535.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;bytes_ostream::chunk, std::default_delete&lt;bytes_ostream::chunk&gt; &gt;::~unique_ptr (6 samples, 0.11%)</title><rect x="90.7" y="1589" width="1.3" height="15.0" fill="rgb(211,86,10)" rx="2" ry="2" />
<text  x="93.73" y="1599.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::maybe_refresh_state (24 samples, 0.45%)</title><rect x="263.2" y="1333" width="5.3" height="15.0" fill="rgb(214,222,21)" rx="2" ry="2" />
<text  x="266.20" y="1343.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_clear (3 samples, 0.06%)</title><rect x="467.9" y="1461" width="0.6" height="15.0" fill="rgb(225,98,40)" rx="2" ry="2" />
<text  x="470.88" y="1471.5" ></text>
</g>
<g >
<title>dht::tri_compare (10 samples, 0.19%)</title><rect x="1058.8" y="1381" width="2.2" height="15.0" fill="rgb(220,160,16)" rx="2" ry="2" />
<text  x="1061.77" y="1391.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (1 samples, 0.02%)</title><rect x="100.9" y="1285" width="0.2" height="15.0" fill="rgb(236,55,46)" rx="2" ry="2" />
<text  x="103.87" y="1295.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (2 samples, 0.04%)</title><rect x="643.7" y="1621" width="0.4" height="15.0" fill="rgb(249,40,12)" rx="2" ry="2" />
<text  x="646.67" y="1631.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="280.2" y="1397" width="0.2" height="15.0" fill="rgb(221,77,15)" rx="2" ry="2" />
<text  x="283.19" y="1407.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt;, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, std::hash&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (1 samples, 0.02%)</title><rect x="1121.0" y="1397" width="0.2" height="15.0" fill="rgb(225,64,32)" rx="2" ry="2" />
<text  x="1123.96" y="1407.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE14then_impl_nrvoIZNS6_14discard_resultEvEUlDpOT_E_NS0_IvEEEET0_OT_ (1 samples, 0.02%)</title><rect x="718.4" y="1621" width="0.3" height="15.0" fill="rgb(227,104,26)" rx="2" ry="2" />
<text  x="721.44" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::constant&gt;  (1 samples, 0.02%)</title><rect x="855.2" y="1413" width="0.2" height="15.0" fill="rgb(227,60,20)" rx="2" ry="2" />
<text  x="858.19" y="1423.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.04%)</title><rect x="208.7" y="1333" width="0.5" height="15.0" fill="rgb(228,65,15)" rx="2" ry="2" />
<text  x="211.73" y="1343.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;1ul, std::default_delete&lt;cql3::expr::expression::impl&gt;&gt; (1 samples, 0.02%)</title><rect x="47.3" y="1381" width="0.2" height="15.0" fill="rgb(253,215,0)" rx="2" ry="2" />
<text  x="50.27" y="1391.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (2 samples, 0.04%)</title><rect x="252.6" y="1269" width="0.5" height="15.0" fill="rgb(210,148,36)" rx="2" ry="2" />
<text  x="255.62" y="1279.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reserve&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::fill_buffer (2 samples, 0.04%)</title><rect x="79.7" y="1541" width="0.4" height="15.0" fill="rgb(241,63,9)" rx="2" ry="2" />
<text  x="82.70" y="1551.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::get_timeout (1 samples, 0.02%)</title><rect x="939.7" y="1557" width="0.2" height="15.0" fill="rgb(207,162,35)" rx="2" ry="2" />
<text  x="942.66" y="1567.5" ></text>
</g>
<g >
<title>compound_type&lt; (1 samples, 0.02%)</title><rect x="852.5" y="1493" width="0.3" height="15.0" fill="rgb(240,121,19)" rx="2" ry="2" />
<text  x="855.54" y="1503.5" ></text>
</g>
<g >
<title>mutation_querier::consume (1 samples, 0.02%)</title><rect x="102.0" y="1477" width="0.2" height="15.0" fill="rgb(233,203,46)" rx="2" ry="2" />
<text  x="104.97" y="1487.5" ></text>
</g>
<g >
<title>skip_empty_fragments&lt;managed_bytes_basic_view&lt; (2 samples, 0.04%)</title><rect x="887.6" y="1413" width="0.5" height="15.0" fill="rgb(230,142,21)" rx="2" ry="2" />
<text  x="890.61" y="1423.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (1 samples, 0.02%)</title><rect x="59.4" y="1429" width="0.2" height="15.0" fill="rgb(234,107,33)" rx="2" ry="2" />
<text  x="62.41" y="1439.5" ></text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt;&amp;&gt; (3 samples, 0.06%)</title><rect x="818.6" y="1461" width="0.6" height="15.0" fill="rgb(235,52,1)" rx="2" ry="2" />
<text  x="821.58" y="1471.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::move_it (12 samples, 0.22%)</title><rect x="683.6" y="1637" width="2.6" height="15.0" fill="rgb(225,186,18)" rx="2" ry="2" />
<text  x="686.59" y="1647.5" ></text>
</g>
<g >
<title>range_tombstone_list::slice (1 samples, 0.02%)</title><rect x="293.0" y="1381" width="0.2" height="15.0" fill="rgb(224,141,50)" rx="2" ry="2" />
<text  x="295.98" y="1391.5" ></text>
</g>
<g >
<title>std::construct_at&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (3 samples, 0.06%)</title><rect x="23.5" y="1381" width="0.6" height="15.0" fill="rgb(213,45,31)" rx="2" ry="2" />
<text  x="26.45" y="1391.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::lru_entry, boost::intrusive::list_node_traits&lt;void*&gt;,  (3 samples, 0.06%)</title><rect x="739.2" y="1445" width="0.6" height="15.0" fill="rgb(243,142,25)" rx="2" ry="2" />
<text  x="742.17" y="1455.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS4_12restrictionsL11has_eq_nullERKNS4_13query_optionsERKNS5_10expressionEE3$_8EES8_SI_T_EUlRS7_E_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_8constantEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_11conjunctionEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_12column_valueEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_5tokenEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_13function_callEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_4castEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_15field_selectionEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_4nullEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_13bind_variableEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_16untyped_constantEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_17tuple_constructorEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_22collection_constructorEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSR_S6_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_S1V_SN_S1Z_S23_S27_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES2C_S2F_ (3 samples, 0.06%)</title><rect x="849.9" y="1477" width="0.7" height="15.0" fill="rgb(217,80,50)" rx="2" ry="2" />
<text  x="852.90" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.02%)</title><rect x="71.5" y="1493" width="0.3" height="15.0" fill="rgb(226,10,45)" rx="2" ry="2" />
<text  x="74.54" y="1503.5" ></text>
</g>
<g >
<title>row::compact_and_expire (83 samples, 1.55%)</title><rect x="400.4" y="1365" width="18.3" height="15.0" fill="rgb(226,116,20)" rx="2" ry="2" />
<text  x="403.39" y="1375.5" ></text>
</g>
<g >
<title>seastar::smp::configure (1 samples, 0.02%)</title><rect x="1167.7" y="1701" width="0.2" height="15.0" fill="rgb(227,130,42)" rx="2" ry="2" />
<text  x="1170.72" y="1711.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::reserve (9 samples, 0.17%)</title><rect x="552.1" y="1493" width="2.0" height="15.0" fill="rgb(235,180,32)" rx="2" ry="2" />
<text  x="555.14" y="1503.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="326.9" y="1493" width="0.3" height="15.0" fill="rgb(215,126,45)" rx="2" ry="2" />
<text  x="329.95" y="1503.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::~merging_reader (1 samples, 0.02%)</title><rect x="1166.0" y="1589" width="0.2" height="15.0" fill="rgb(218,10,24)" rx="2" ry="2" />
<text  x="1168.96" y="1599.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;, service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (28 samples, 0.52%)</title><rect x="1121.4" y="1413" width="6.2" height="15.0" fill="rgb(253,13,38)" rx="2" ry="2" />
<text  x="1124.41" y="1423.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE8scheduleINS_8internal22promise_base_with_typeIvEEZNS6_14discard_resultEvEUlDpOT_E_ZNS6_14then_impl_nrvoISE_NS0_IvEEEET0_OT_EUlOSA_RSE_ONS_12future_stateIS5_EEE_EEvSJ_OSH_OT1_ (9 samples, 0.17%)</title><rect x="719.1" y="1589" width="2.0" height="15.0" fill="rgb(206,176,17)" rx="2" ry="2" />
<text  x="722.10" y="1599.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="869" width="0.3" height="15.0" fill="rgb(249,220,10)" rx="2" ry="2" />
<text  x="13.44" y="879.5" ></text>
</g>
<g >
<title>ser::get_sizeof&lt;partition_key&gt; (2 samples, 0.04%)</title><rect x="1125.8" y="1285" width="0.5" height="15.0" fill="rgb(248,12,40)" rx="2" ry="2" />
<text  x="1128.82" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::at (2 samples, 0.04%)</title><rect x="999.4" y="1381" width="0.5" height="15.0" fill="rgb(243,119,51)" rx="2" ry="2" />
<text  x="1002.44" y="1391.5" ></text>
</g>
<g >
<title>seastar::internal::coroutine_traits_base&lt;service::storage_proxy_coordinator_query_result&gt;::promise_type::run_and_dispose (1 samples, 0.02%)</title><rect x="82.8" y="1669" width="0.2" height="15.0" fill="rgb(240,69,25)" rx="2" ry="2" />
<text  x="85.79" y="1679.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (5 samples, 0.09%)</title><rect x="510.5" y="1429" width="1.1" height="15.0" fill="rgb(234,225,49)" rx="2" ry="2" />
<text  x="513.45" y="1439.5" ></text>
</g>
<g >
<title>read_simple&lt;int, managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="855.2" y="1365" width="0.2" height="15.0" fill="rgb(247,100,11)" rx="2" ry="2" />
<text  x="858.19" y="1375.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::operator (5 samples, 0.09%)</title><rect x="309.7" y="1477" width="1.1" height="15.0" fill="rgb(252,186,48)" rx="2" ry="2" />
<text  x="312.74" y="1487.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (15 samples, 0.28%)</title><rect x="726.6" y="1509" width="3.3" height="15.0" fill="rgb(217,225,9)" rx="2" ry="2" />
<text  x="729.60" y="1519.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (7 samples, 0.13%)</title><rect x="928.6" y="1509" width="1.6" height="15.0" fill="rgb(240,93,31)" rx="2" ry="2" />
<text  x="931.64" y="1519.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::clear (1 samples, 0.02%)</title><rect x="808.9" y="1525" width="0.2" height="15.0" fill="rgb(234,62,46)" rx="2" ry="2" />
<text  x="811.87" y="1535.5" ></text>
</g>
<g >
<title>flush_reader::fill_buffer (4 samples, 0.07%)</title><rect x="79.5" y="1637" width="0.9" height="15.0" fill="rgb(237,186,33)" rx="2" ry="2" />
<text  x="82.48" y="1647.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (2 samples, 0.04%)</title><rect x="1038.9" y="1413" width="0.5" height="15.0" fill="rgb(213,82,18)" rx="2" ry="2" />
<text  x="1041.92" y="1423.5" ></text>
</g>
<g >
<title>compound_type&lt; (15 samples, 0.28%)</title><rect x="918.7" y="1525" width="3.3" height="15.0" fill="rgb(220,207,24)" rx="2" ry="2" />
<text  x="921.71" y="1535.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.02%)</title><rect x="22.6" y="1349" width="0.2" height="15.0" fill="rgb(235,139,45)" rx="2" ry="2" />
<text  x="25.57" y="1359.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::key_is_in_relation (3 samples, 0.06%)</title><rect x="940.1" y="1541" width="0.7" height="15.0" fill="rgb(253,165,20)" rx="2" ry="2" />
<text  x="943.10" y="1551.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt;  (1 samples, 0.02%)</title><rect x="11.5" y="1605" width="0.3" height="15.0" fill="rgb(252,7,29)" rx="2" ry="2" />
<text  x="14.54" y="1615.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (2 samples, 0.04%)</title><rect x="983.1" y="1445" width="0.5" height="15.0" fill="rgb(224,94,2)" rx="2" ry="2" />
<text  x="986.11" y="1455.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::resize (1 samples, 0.02%)</title><rect x="77.9" y="1621" width="0.3" height="15.0" fill="rgb(219,30,25)" rx="2" ry="2" />
<text  x="80.93" y="1631.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (6 samples, 0.11%)</title><rect x="888.7" y="1397" width="1.3" height="15.0" fill="rgb(236,45,3)" rx="2" ry="2" />
<text  x="891.71" y="1407.5" ></text>
</g>
<g >
<title>boost::intrusive::bstbase&lt;boost::intrusive::mhtraits&lt;range_tombstone_entry, boost::intrusive::set_member_hook&lt;boost::intrusive::link_mode&lt; (3 samples, 0.06%)</title><rect x="577.9" y="1445" width="0.7" height="15.0" fill="rgb(207,88,33)" rx="2" ry="2" />
<text  x="580.94" y="1455.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (4 samples, 0.07%)</title><rect x="785.3" y="1317" width="0.9" height="15.0" fill="rgb(245,204,21)" rx="2" ry="2" />
<text  x="788.27" y="1327.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.02%)</title><rect x="57.9" y="1301" width="0.2" height="15.0" fill="rgb(232,203,50)" rx="2" ry="2" />
<text  x="60.86" y="1311.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.02%)</title><rect x="57.9" y="1365" width="0.2" height="15.0" fill="rgb(218,7,22)" rx="2" ry="2" />
<text  x="60.86" y="1375.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::finally_body&lt;service::storage_proxy::do_query (11 samples, 0.21%)</title><rect x="681.2" y="1637" width="2.4" height="15.0" fill="rgb(220,57,17)" rx="2" ry="2" />
<text  x="684.17" y="1647.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.02%)</title><rect x="78.8" y="1589" width="0.2" height="15.0" fill="rgb(233,193,47)" rx="2" ry="2" />
<text  x="81.81" y="1599.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::set_value&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt; (2 samples, 0.04%)</title><rect x="696.2" y="1605" width="0.4" height="15.0" fill="rgb(250,99,42)" rx="2" ry="2" />
<text  x="699.16" y="1615.5" ></text>
</g>
<g >
<title>mutation_partition::lower_bound (7 samples, 0.13%)</title><rect x="283.7" y="1349" width="1.6" height="15.0" fill="rgb(241,186,3)" rx="2" ry="2" />
<text  x="286.72" y="1359.5" ></text>
</g>
<g >
<title>utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::touch (2 samples, 0.04%)</title><rect x="739.8" y="1461" width="0.5" height="15.0" fill="rgb(253,228,35)" rx="2" ry="2" />
<text  x="742.84" y="1471.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (1 samples, 0.02%)</title><rect x="435.5" y="1397" width="0.2" height="15.0" fill="rgb(253,165,16)" rx="2" ry="2" />
<text  x="438.46" y="1407.5" ></text>
</g>
<g >
<title>antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;::InputStream (1 samples, 0.02%)</title><rect x="20.1" y="1573" width="0.3" height="15.0" fill="rgb(232,91,5)" rx="2" ry="2" />
<text  x="23.15" y="1583.5" ></text>
</g>
<g >
<title>reader_permit::consume_resources (2 samples, 0.04%)</title><rect x="522.6" y="1333" width="0.4" height="15.0" fill="rgb(244,173,37)" rx="2" ry="2" />
<text  x="525.58" y="1343.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::mutation_fragment_merger (1 samples, 0.02%)</title><rect x="471.2" y="1445" width="0.2" height="15.0" fill="rgb(223,8,26)" rx="2" ry="2" />
<text  x="474.19" y="1455.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;void&gt;  (1 samples, 0.02%)</title><rect x="692.2" y="1573" width="0.2" height="15.0" fill="rgb(208,59,6)" rx="2" ry="2" />
<text  x="695.19" y="1583.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (2 samples, 0.04%)</title><rect x="44.4" y="1253" width="0.4" height="15.0" fill="rgb(209,159,34)" rx="2" ry="2" />
<text  x="47.41" y="1263.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::query_options, std::default_delete&lt;cql3::query_options&gt; &gt;::~unique_ptr (2 samples, 0.04%)</title><rect x="841.7" y="1605" width="0.5" height="15.0" fill="rgb(235,47,42)" rx="2" ry="2" />
<text  x="844.73" y="1615.5" ></text>
</g>
<g >
<title>mutation_fragment::operator= (1 samples, 0.02%)</title><rect x="187.6" y="1397" width="0.2" height="15.0" fill="rgb(227,57,4)" rx="2" ry="2" />
<text  x="190.55" y="1407.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (1 samples, 0.02%)</title><rect x="1106.8" y="1573" width="0.3" height="15.0" fill="rgb(225,33,13)" rx="2" ry="2" />
<text  x="1109.85" y="1583.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (2 samples, 0.04%)</title><rect x="911.7" y="1509" width="0.4" height="15.0" fill="rgb(218,73,33)" rx="2" ry="2" />
<text  x="914.65" y="1519.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::operator= (1 samples, 0.02%)</title><rect x="824.5" y="1589" width="0.3" height="15.0" fill="rgb(250,43,7)" rx="2" ry="2" />
<text  x="827.53" y="1599.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.02%)</title><rect x="58.5" y="1445" width="0.2" height="15.0" fill="rgb(248,134,40)" rx="2" ry="2" />
<text  x="61.52" y="1455.5" ></text>
</g>
<g >
<title>bound_view::from_range_end&lt;nonwrapping_interval&gt; (1 samples, 0.02%)</title><rect x="267.2" y="1269" width="0.2" height="15.0" fill="rgb(245,44,16)" rx="2" ry="2" />
<text  x="270.17" y="1279.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextToken (45 samples, 0.84%)</title><rect x="25.2" y="1461" width="9.9" height="15.0" fill="rgb(237,55,44)" rx="2" ry="2" />
<text  x="28.22" y="1471.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;std::tuple&lt;std::optional&lt;clustering_key_prefix&gt; &gt; &gt;::clear (1 samples, 0.02%)</title><rect x="617.6" y="1589" width="0.3" height="15.0" fill="rgb(240,28,28)" rx="2" ry="2" />
<text  x="620.64" y="1599.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate (53 samples, 0.99%)</title><rect x="881.0" y="1445" width="11.7" height="15.0" fill="rgb(218,95,36)" rx="2" ry="2" />
<text  x="883.99" y="1455.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.02%)</title><rect x="79.3" y="1669" width="0.2" height="15.0" fill="rgb(232,228,40)" rx="2" ry="2" />
<text  x="82.26" y="1679.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;auth::resource, auth::resource, std::allocator&lt;auth::resource&gt;, std::__detail::_Identity, std::equal_to&lt;auth::resource&gt;, std::hash&lt;auth::resource&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;::find (12 samples, 0.22%)</title><rect x="804.9" y="1509" width="2.6" height="15.0" fill="rgb(227,73,1)" rx="2" ry="2" />
<text  x="807.90" y="1519.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_wrapped_nrvo&lt;seastar::future&lt;void&gt;, seastar::future&lt;void&gt;::finally_body&lt;seastar::output_stream&lt;char&gt;::close (1 samples, 0.02%)</title><rect x="10.7" y="1445" width="0.2" height="15.0" fill="rgb(220,64,53)" rx="2" ry="2" />
<text  x="13.66" y="1455.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.02%)</title><rect x="50.6" y="1381" width="0.2" height="15.0" fill="rgb(217,215,25)" rx="2" ry="2" />
<text  x="53.58" y="1391.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (2 samples, 0.04%)</title><rect x="818.8" y="1445" width="0.4" height="15.0" fill="rgb(231,173,27)" rx="2" ry="2" />
<text  x="821.80" y="1455.5" ></text>
</g>
<g >
<title>seastar::output_stream&lt;char&gt;::write (1 samples, 0.02%)</title><rect x="17.5" y="1493" width="0.2" height="15.0" fill="rgb(247,46,46)" rx="2" ry="2" />
<text  x="20.50" y="1503.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned char, std::pair&lt;unsigned char const, std::optional&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned char const, std::optional&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned char&gt;, std::hash&lt;unsigned char&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::clear (1 samples, 0.02%)</title><rect x="677.9" y="1589" width="0.2" height="15.0" fill="rgb(234,163,34)" rx="2" ry="2" />
<text  x="680.86" y="1599.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::range_or_slice_eq_null (7 samples, 0.13%)</title><rect x="849.9" y="1541" width="1.5" height="15.0" fill="rgb(217,191,15)" rx="2" ry="2" />
<text  x="852.90" y="1551.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (1 samples, 0.02%)</title><rect x="53.7" y="1061" width="0.2" height="15.0" fill="rgb(251,9,28)" rx="2" ry="2" />
<text  x="56.67" y="1071.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::metadata const&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="658.0" y="1621" width="0.2" height="15.0" fill="rgb(239,212,11)" rx="2" ry="2" />
<text  x="661.01" y="1631.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;bool&gt;::take_value (2 samples, 0.04%)</title><rect x="770.1" y="1509" width="0.4" height="15.0" fill="rgb(246,4,6)" rx="2" ry="2" />
<text  x="773.05" y="1519.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="1166.2" y="1573" width="0.2" height="15.0" fill="rgb(248,1,41)" rx="2" ry="2" />
<text  x="1169.18" y="1583.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::get_text[abi:cxx11] (1 samples, 0.02%)</title><rect x="27.9" y="1413" width="0.2" height="15.0" fill="rgb(247,212,39)" rx="2" ry="2" />
<text  x="30.87" y="1423.5" ></text>
</g>
<g >
<title>visit&lt;(anonymous namespace)::from_string_visitor&gt; (5 samples, 0.09%)</title><rect x="67.1" y="1509" width="1.1" height="15.0" fill="rgb(231,109,3)" rx="2" ry="2" />
<text  x="70.13" y="1519.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;std::tuple&lt;std::optional&lt;clustering_key_prefix&gt; &gt; &gt;, query::consume_page&lt; (3 samples, 0.06%)</title><rect x="689.8" y="1653" width="0.6" height="15.0" fill="rgb(214,202,38)" rx="2" ry="2" />
<text  x="692.77" y="1663.5" ></text>
</g>
<g >
<title>seastar::reactor::del_timer (5 samples, 0.09%)</title><rect x="124.9" y="1525" width="1.1" height="15.0" fill="rgb(252,84,41)" rx="2" ry="2" />
<text  x="127.91" y="1535.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (2 samples, 0.04%)</title><rect x="93.2" y="1605" width="0.4" height="15.0" fill="rgb(211,177,50)" rx="2" ry="2" />
<text  x="96.15" y="1615.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="649.2" y="1525" width="0.2" height="15.0" fill="rgb(207,147,27)" rx="2" ry="2" />
<text  x="652.19" y="1535.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::finally_body&lt;table::stop (1 samples, 0.02%)</title><rect x="690.9" y="1637" width="0.2" height="15.0" fill="rgb(212,83,33)" rx="2" ry="2" />
<text  x="693.87" y="1647.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::make_ready&lt; (1 samples, 0.02%)</title><rect x="847.5" y="1653" width="0.2" height="15.0" fill="rgb(247,216,11)" rx="2" ry="2" />
<text  x="850.47" y="1663.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (2 samples, 0.04%)</title><rect x="848.6" y="1605" width="0.4" height="15.0" fill="rgb(221,196,6)" rx="2" ry="2" />
<text  x="851.57" y="1615.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.04%)</title><rect x="54.3" y="1397" width="0.5" height="15.0" fill="rgb(244,106,0)" rx="2" ry="2" />
<text  x="57.33" y="1407.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.02%)</title><rect x="11.5" y="1637" width="0.3" height="15.0" fill="rgb(207,16,27)" rx="2" ry="2" />
<text  x="14.54" y="1647.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.04%)</title><rect x="626.9" y="1525" width="0.4" height="15.0" fill="rgb(220,22,32)" rx="2" ry="2" />
<text  x="629.91" y="1535.5" ></text>
</g>
<g >
<title>__tls_init (1 samples, 0.02%)</title><rect x="546.0" y="1429" width="0.2" height="15.0" fill="rgb(241,170,37)" rx="2" ry="2" />
<text  x="548.96" y="1439.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (1 samples, 0.02%)</title><rect x="897.5" y="1509" width="0.3" height="15.0" fill="rgb(245,200,8)" rx="2" ry="2" />
<text  x="900.54" y="1519.5" ></text>
</g>
<g >
<title>std::hash&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::operator (1 samples, 0.02%)</title><rect x="795.6" y="1237" width="0.3" height="15.0" fill="rgb(217,139,54)" rx="2" ry="2" />
<text  x="798.64" y="1247.5" ></text>
</g>
<g >
<title>reader_permit::consume_memory (4 samples, 0.07%)</title><rect x="522.1" y="1349" width="0.9" height="15.0" fill="rgb(234,30,37)" rx="2" ry="2" />
<text  x="525.14" y="1359.5" ></text>
</g>
<g >
<title>query::result::result (1 samples, 0.02%)</title><rect x="620.3" y="1573" width="0.2" height="15.0" fill="rgb(239,64,26)" rx="2" ry="2" />
<text  x="623.29" y="1583.5" ></text>
</g>
<g >
<title>std::queue&lt;reader_concurrency_semaphore::entry, seastar::circular_buffer&lt;reader_concurrency_semaphore::entry, std::allocator&lt;reader_concurrency_semaphore::entry&gt; &gt; &gt;::pop (1 samples, 0.02%)</title><rect x="1164.2" y="1653" width="0.2" height="15.0" fill="rgb(243,181,54)" rx="2" ry="2" />
<text  x="1167.19" y="1663.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt; &gt;::invoke&lt;flat_mutation_reader_v2::impl::consume_pausable&lt;downgrade_to_v1 (1 samples, 0.02%)</title><rect x="1130.0" y="1109" width="0.2" height="15.0" fill="rgb(213,119,42)" rx="2" ry="2" />
<text  x="1133.01" y="1119.5" ></text>
</g>
<g >
<title>seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::expand (7 samples, 0.13%)</title><rect x="518.4" y="1381" width="1.5" height="15.0" fill="rgb(237,117,33)" rx="2" ry="2" />
<text  x="521.39" y="1391.5" ></text>
</g>
<g >
<title>mutation_reader_merger::maybe_add_readers (14 samples, 0.26%)</title><rect x="461.7" y="1445" width="3.1" height="15.0" fill="rgb(207,100,44)" rx="2" ry="2" />
<text  x="464.71" y="1455.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::set_lineStart (1 samples, 0.02%)</title><rect x="27.2" y="1413" width="0.2" height="15.0" fill="rgb(226,227,7)" rx="2" ry="2" />
<text  x="30.20" y="1423.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.04%)</title><rect x="45.3" y="1413" width="0.4" height="15.0" fill="rgb(210,84,20)" rx="2" ry="2" />
<text  x="48.29" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (1 samples, 0.02%)</title><rect x="896.7" y="1493" width="0.2" height="15.0" fill="rgb(225,152,44)" rx="2" ry="2" />
<text  x="899.65" y="1503.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::operator+ (1 samples, 0.02%)</title><rect x="79.0" y="1669" width="0.3" height="15.0" fill="rgb(235,122,7)" rx="2" ry="2" />
<text  x="82.04" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="501" width="0.3" height="15.0" fill="rgb(231,18,4)" rx="2" ry="2" />
<text  x="13.44" y="511.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::operator (5 samples, 0.09%)</title><rect x="750.9" y="1525" width="1.1" height="15.0" fill="rgb(220,178,11)" rx="2" ry="2" />
<text  x="753.86" y="1535.5" ></text>
</g>
<g >
<title>seastar::internal::future_base::do_wait (2 samples, 0.04%)</title><rect x="17.9" y="1669" width="0.5" height="15.0" fill="rgb(252,76,52)" rx="2" ry="2" />
<text  x="20.94" y="1679.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (5 samples, 0.09%)</title><rect x="523.5" y="1365" width="1.1" height="15.0" fill="rgb(218,132,37)" rx="2" ry="2" />
<text  x="526.47" y="1375.5" ></text>
</g>
<g >
<title>reader_selector::has_new_readers (1 samples, 0.02%)</title><rect x="179.8" y="1413" width="0.3" height="15.0" fill="rgb(247,76,11)" rx="2" ry="2" />
<text  x="182.83" y="1423.5" ></text>
</g>
<g >
<title>std::default_delete&lt;bytes_ostream::chunk&gt;::operator (2 samples, 0.04%)</title><rect x="91.6" y="1573" width="0.4" height="15.0" fill="rgb(239,173,53)" rx="2" ry="2" />
<text  x="94.61" y="1583.5" ></text>
</g>
<g >
<title>__tls_init (1 samples, 0.02%)</title><rect x="501.0" y="1461" width="0.2" height="15.0" fill="rgb(249,125,7)" rx="2" ry="2" />
<text  x="503.97" y="1471.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql3::restrictions::single_column_restrictions&gt;::~shared_ptr_count_for (2 samples, 0.04%)</title><rect x="649.4" y="1589" width="0.4" height="15.0" fill="rgb(244,12,26)" rx="2" ry="2" />
<text  x="652.41" y="1599.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="498.3" y="1365" width="0.2" height="15.0" fill="rgb(245,161,2)" rx="2" ry="2" />
<text  x="501.32" y="1375.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;bool  (1 samples, 0.02%)</title><rect x="562.1" y="1541" width="0.2" height="15.0" fill="rgb(214,184,13)" rx="2" ry="2" />
<text  x="565.06" y="1551.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (1 samples, 0.02%)</title><rect x="222.6" y="1333" width="0.2" height="15.0" fill="rgb(240,98,36)" rx="2" ry="2" />
<text  x="225.62" y="1343.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (4 samples, 0.07%)</title><rect x="971.9" y="1445" width="0.8" height="15.0" fill="rgb(254,67,29)" rx="2" ry="2" />
<text  x="974.87" y="1455.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::clone&lt;row::row (1 samples, 0.02%)</title><rect x="848.8" y="1413" width="0.2" height="15.0" fill="rgb(250,72,16)" rx="2" ry="2" />
<text  x="851.79" y="1423.5" ></text>
</g>
<g >
<title>cql3::constants::marker::to_expression (14 samples, 0.26%)</title><rect x="877.5" y="1477" width="3.1" height="15.0" fill="rgb(254,101,23)" rx="2" ry="2" />
<text  x="880.47" y="1487.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (2 samples, 0.04%)</title><rect x="74.0" y="1541" width="0.4" height="15.0" fill="rgb(211,60,6)" rx="2" ry="2" />
<text  x="76.96" y="1551.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.02%)</title><rect x="36.2" y="1429" width="0.3" height="15.0" fill="rgb(221,209,33)" rx="2" ry="2" />
<text  x="39.25" y="1439.5" ></text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::EqualElement&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt;&amp;&gt; (9 samples, 0.17%)</title><rect x="812.6" y="1461" width="2.0" height="15.0" fill="rgb(238,31,7)" rx="2" ry="2" />
<text  x="815.62" y="1471.5" ></text>
</g>
<g >
<title>partition_version_ref::operator* (2 samples, 0.04%)</title><rect x="526.6" y="1381" width="0.4" height="15.0" fill="rgb(253,174,38)" rx="2" ry="2" />
<text  x="529.55" y="1391.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;,  (17 samples, 0.32%)</title><rect x="726.2" y="1557" width="3.7" height="15.0" fill="rgb(250,162,20)" rx="2" ry="2" />
<text  x="729.16" y="1567.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.02%)</title><rect x="55.2" y="1269" width="0.2" height="15.0" fill="rgb(240,74,0)" rx="2" ry="2" />
<text  x="58.21" y="1279.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;bytes_ostream::chunk, std::default_delete&lt;bytes_ostream::chunk&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="611.9" y="1525" width="0.2" height="15.0" fill="rgb(239,133,45)" rx="2" ry="2" />
<text  x="614.91" y="1535.5" ></text>
</g>
<g >
<title>auth::data_resource_view::table (1 samples, 0.02%)</title><rect x="794.8" y="1269" width="0.2" height="15.0" fill="rgb(206,157,17)" rx="2" ry="2" />
<text  x="797.76" y="1279.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt;::allocator (1 samples, 0.02%)</title><rect x="61.8" y="1477" width="0.3" height="15.0" fill="rgb(212,99,25)" rx="2" ry="2" />
<text  x="64.83" y="1487.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="115.0" y="1589" width="0.2" height="15.0" fill="rgb(220,171,52)" rx="2" ry="2" />
<text  x="117.99" y="1599.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_Optional_payload_base (1 samples, 0.02%)</title><rect x="1089.0" y="1509" width="0.2" height="15.0" fill="rgb(243,211,38)" rx="2" ry="2" />
<text  x="1091.98" y="1519.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.02%)</title><rect x="1018.6" y="1381" width="0.2" height="15.0" fill="rgb(253,227,52)" rx="2" ry="2" />
<text  x="1021.62" y="1391.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reclaiming_disabled&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (1 samples, 0.02%)</title><rect x="848.8" y="1493" width="0.2" height="15.0" fill="rgb(230,14,29)" rx="2" ry="2" />
<text  x="851.79" y="1503.5" ></text>
</g>
<g >
<title>sstables::column_translation::get_for_schema (1 samples, 0.02%)</title><rect x="1130.0" y="1013" width="0.2" height="15.0" fill="rgb(229,17,39)" rx="2" ry="2" />
<text  x="1133.01" y="1023.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.02%)</title><rect x="50.6" y="1413" width="0.2" height="15.0" fill="rgb(224,131,41)" rx="2" ry="2" />
<text  x="53.58" y="1423.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (2 samples, 0.04%)</title><rect x="999.4" y="1365" width="0.5" height="15.0" fill="rgb(206,100,28)" rx="2" ry="2" />
<text  x="1002.44" y="1375.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (2 samples, 0.04%)</title><rect x="38.2" y="1349" width="0.5" height="15.0" fill="rgb(228,58,49)" rx="2" ry="2" />
<text  x="41.23" y="1359.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.02%)</title><rect x="41.5" y="1285" width="0.3" height="15.0" fill="rgb(234,167,26)" rx="2" ry="2" />
<text  x="44.54" y="1295.5" ></text>
</g>
<g >
<title>seastar::smp::submit_to&lt;seastar::sharded&lt;db::view::view_update_generator&gt;::stop (1 samples, 0.02%)</title><rect x="692.2" y="1541" width="0.2" height="15.0" fill="rgb(217,203,32)" rx="2" ry="2" />
<text  x="695.19" y="1551.5" ></text>
</g>
<g >
<title>_ZSt5applyIZN7seastar8internal12do_with_implIN4auth17role_or_anonymousEZNS3_15get_permissionsERKNS3_7serviceERKNS3_18authenticated_userERKNS3_8resourceEE3$_9JEEEDaOT_OT0_DpOT1_EUlDpOT_E_St5tupleIJOS4_EEEDcSG_SI_ (4 samples, 0.07%)</title><rect x="778.2" y="1445" width="0.9" height="15.0" fill="rgb(253,109,26)" rx="2" ry="2" />
<text  x="781.21" y="1455.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::clear (1 samples, 0.02%)</title><rect x="776.7" y="1445" width="0.2" height="15.0" fill="rgb(215,106,49)" rx="2" ry="2" />
<text  x="779.67" y="1455.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.04%)</title><rect x="215.3" y="1365" width="0.5" height="15.0" fill="rgb(248,161,38)" rx="2" ry="2" />
<text  x="218.34" y="1375.5" ></text>
</g>
<g >
<title>keyspace::get_replication_strategy (1 samples, 0.02%)</title><rect x="1126.7" y="1349" width="0.2" height="15.0" fill="rgb(211,226,4)" rx="2" ry="2" />
<text  x="1129.70" y="1359.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (2 samples, 0.04%)</title><rect x="366.2" y="1317" width="0.4" height="15.0" fill="rgb(228,1,49)" rx="2" ry="2" />
<text  x="369.21" y="1327.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, cql3::operation::raw_update*, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;::_Tuple_impl&lt;cql3::operation::raw_update*&amp;, std::default_delete&lt;cql3::operation::set_value&gt;, void&gt; (1 samples, 0.02%)</title><rect x="57.0" y="1397" width="0.2" height="15.0" fill="rgb(250,78,41)" rx="2" ry="2" />
<text  x="59.98" y="1407.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (1 samples, 0.02%)</title><rect x="706.1" y="1573" width="0.2" height="15.0" fill="rgb(230,58,14)" rx="2" ry="2" />
<text  x="709.09" y="1583.5" ></text>
</g>
<g >
<title>antlr3::IntStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::_LA (5 samples, 0.09%)</title><rect x="29.9" y="1397" width="1.1" height="15.0" fill="rgb(206,206,8)" rx="2" ry="2" />
<text  x="32.85" y="1407.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (32 samples, 0.60%)</title><rect x="789.7" y="1349" width="7.0" height="15.0" fill="rgb(206,77,36)" rx="2" ry="2" />
<text  x="792.68" y="1359.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;std::pair&lt;seastar::shared_ptr&lt;service::abstract_read_executor&gt;, nonwrapping_interval&lt;dht::token&gt; &gt;, 1ul&gt;::clear (22 samples, 0.41%)</title><rect x="1158.9" y="1621" width="4.9" height="15.0" fill="rgb(207,26,24)" rx="2" ry="2" />
<text  x="1161.90" y="1631.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::single_column_primary_key_restrictions (1 samples, 0.02%)</title><rect x="70.9" y="1493" width="0.2" height="15.0" fill="rgb(251,87,29)" rx="2" ry="2" />
<text  x="73.87" y="1503.5" ></text>
</g>
<g >
<title>deletable_row::apply_monotonically (3 samples, 0.06%)</title><rect x="16.4" y="1701" width="0.7" height="15.0" fill="rgb(228,16,14)" rx="2" ry="2" />
<text  x="19.40" y="1711.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="462.6" y="1413" width="0.2" height="15.0" fill="rgb(212,153,32)" rx="2" ry="2" />
<text  x="465.59" y="1423.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (3 samples, 0.06%)</title><rect x="1075.3" y="1541" width="0.7" height="15.0" fill="rgb(219,23,1)" rx="2" ry="2" />
<text  x="1078.31" y="1551.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (1 samples, 0.02%)</title><rect x="88.7" y="1637" width="0.3" height="15.0" fill="rgb(245,202,18)" rx="2" ry="2" />
<text  x="91.74" y="1647.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;mutation_querier&gt;::_M_reset (1 samples, 0.02%)</title><rect x="563.8" y="1573" width="0.2" height="15.0" fill="rgb(239,100,30)" rx="2" ry="2" />
<text  x="566.83" y="1583.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment (3 samples, 0.06%)</title><rect x="203.0" y="1397" width="0.7" height="15.0" fill="rgb(247,153,38)" rx="2" ry="2" />
<text  x="205.99" y="1407.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (2 samples, 0.04%)</title><rect x="185.1" y="1381" width="0.5" height="15.0" fill="rgb(228,113,28)" rx="2" ry="2" />
<text  x="188.13" y="1391.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.02%)</title><rect x="968.1" y="1413" width="0.2" height="15.0" fill="rgb(232,176,50)" rx="2" ry="2" />
<text  x="971.12" y="1423.5" ></text>
</g>
<g >
<title>logalloc::region_impl::alloc (1 samples, 0.02%)</title><rect x="16.0" y="1653" width="0.2" height="15.0" fill="rgb(228,13,47)" rx="2" ry="2" />
<text  x="18.96" y="1663.5" ></text>
</g>
<g >
<title>partition_entry::apply (1 samples, 0.02%)</title><rect x="1116.8" y="1397" width="0.2" height="15.0" fill="rgb(253,221,36)" rx="2" ry="2" />
<text  x="1119.77" y="1407.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="53.5" y="1333" width="0.2" height="15.0" fill="rgb(246,107,54)" rx="2" ry="2" />
<text  x="56.45" y="1343.5" ></text>
</g>
<g >
<title>reader_permit::consume_resources (2 samples, 0.04%)</title><rect x="214.5" y="1349" width="0.4" height="15.0" fill="rgb(219,117,11)" rx="2" ry="2" />
<text  x="217.46" y="1359.5" ></text>
</g>
<g >
<title>__tls_init (2 samples, 0.04%)</title><rect x="502.7" y="1445" width="0.5" height="15.0" fill="rgb(236,172,44)" rx="2" ry="2" />
<text  x="505.73" y="1455.5" ></text>
</g>
<g >
<title>absl::container_internal::probe_seq&lt;16ul&gt;::probe_seq (1 samples, 0.02%)</title><rect x="829.6" y="1525" width="0.2" height="15.0" fill="rgb(252,71,18)" rx="2" ry="2" />
<text  x="832.60" y="1535.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.02%)</title><rect x="843.9" y="1557" width="0.3" height="15.0" fill="rgb(239,67,8)" rx="2" ry="2" />
<text  x="846.94" y="1567.5" ></text>
</g>
<g >
<title>reader_permit::consume_memory (1 samples, 0.02%)</title><rect x="261.7" y="1317" width="0.2" height="15.0" fill="rgb(216,35,22)" rx="2" ry="2" />
<text  x="264.66" y="1327.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::has_available_units (1 samples, 0.02%)</title><rect x="119.2" y="1557" width="0.2" height="15.0" fill="rgb(215,178,51)" rx="2" ry="2" />
<text  x="122.18" y="1567.5" ></text>
</g>
<g >
<title>utils::phased_barrier::operation::~operation (3 samples, 0.06%)</title><rect x="99.5" y="1637" width="0.7" height="15.0" fill="rgb(225,59,18)" rx="2" ry="2" />
<text  x="102.55" y="1647.5" ></text>
</g>
<g >
<title>absl::container_internal::operator== (2 samples, 0.04%)</title><rect x="827.4" y="1541" width="0.4" height="15.0" fill="rgb(219,3,36)" rx="2" ry="2" />
<text  x="830.40" y="1551.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;service::storage_proxy_coordinator_query_result&gt;, seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::finally_body&lt;service::storage_proxy::do_query (44 samples, 0.82%)</title><rect x="680.1" y="1653" width="9.7" height="15.0" fill="rgb(207,7,20)" rx="2" ry="2" />
<text  x="683.06" y="1663.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;auth::resource&gt;::_Optional_payload_base (2 samples, 0.04%)</title><rect x="75.3" y="1525" width="0.4" height="15.0" fill="rgb(250,192,4)" rx="2" ry="2" />
<text  x="78.29" y="1535.5" ></text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::modification_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::operator (1 samples, 0.02%)</title><rect x="19.0" y="1589" width="0.3" height="15.0" fill="rgb(206,160,17)" rx="2" ry="2" />
<text  x="22.04" y="1599.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (1 samples, 0.02%)</title><rect x="813.7" y="1445" width="0.2" height="15.0" fill="rgb(224,56,19)" rx="2" ry="2" />
<text  x="816.72" y="1455.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.02%)</title><rect x="37.3" y="1397" width="0.3" height="15.0" fill="rgb(239,203,23)" rx="2" ry="2" />
<text  x="40.35" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct_single&lt;std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, cql3::expr::constant&gt; (1 samples, 0.02%)</title><rect x="70.0" y="1461" width="0.2" height="15.0" fill="rgb(218,195,41)" rx="2" ry="2" />
<text  x="72.99" y="1471.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate (1 samples, 0.02%)</title><rect x="855.2" y="1445" width="0.2" height="15.0" fill="rgb(246,87,52)" rx="2" ry="2" />
<text  x="858.19" y="1455.5" ></text>
</g>
<g >
<title>std::_Bind_front&lt;bool  (1 samples, 0.02%)</title><rect x="850.6" y="1509" width="0.2" height="15.0" fill="rgb(234,196,42)" rx="2" ry="2" />
<text  x="853.56" y="1519.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;cql3::constants::value, true&gt;::make&lt;cql3::raw_value, seastar::shared_ptr&lt;abstract_type const&gt; const&amp;&gt; (1 samples, 0.02%)</title><rect x="68.7" y="1525" width="0.2" height="15.0" fill="rgb(251,145,20)" rx="2" ry="2" />
<text  x="71.67" y="1535.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.02%)</title><rect x="11.1" y="1733" width="0.2" height="15.0" fill="rgb(232,15,4)" rx="2" ry="2" />
<text  x="14.10" y="1743.5" ></text>
</g>
<g >
<title>compound_type&lt; (5 samples, 0.09%)</title><rect x="559.0" y="1509" width="1.1" height="15.0" fill="rgb(237,44,1)" rx="2" ry="2" />
<text  x="561.98" y="1519.5" ></text>
</g>
<g >
<title>bytes_view_hasher::finalize (4 samples, 0.07%)</title><rect x="728.4" y="1445" width="0.8" height="15.0" fill="rgb(228,92,47)" rx="2" ry="2" />
<text  x="731.37" y="1455.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.02%)</title><rect x="612.4" y="1589" width="0.2" height="15.0" fill="rgb(243,169,43)" rx="2" ry="2" />
<text  x="615.35" y="1599.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::_M_range_initialize&lt;nonwrapping_interval&lt;dht::ring_position&gt; const*&gt; (8 samples, 0.15%)</title><rect x="1024.1" y="1413" width="1.8" height="15.0" fill="rgb(207,227,51)" rx="2" ry="2" />
<text  x="1027.14" y="1423.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (4 samples, 0.07%)</title><rect x="948.7" y="1493" width="0.9" height="15.0" fill="rgb(248,10,15)" rx="2" ry="2" />
<text  x="951.71" y="1503.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="1237" width="0.3" height="15.0" fill="rgb(237,124,43)" rx="2" ry="2" />
<text  x="13.44" y="1247.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (1 samples, 0.02%)</title><rect x="77.1" y="1493" width="0.2" height="15.0" fill="rgb(238,125,20)" rx="2" ry="2" />
<text  x="80.05" y="1503.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::get_at (2 samples, 0.04%)</title><rect x="358.9" y="1349" width="0.5" height="15.0" fill="rgb(244,216,35)" rx="2" ry="2" />
<text  x="361.93" y="1359.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_pausable&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (3 samples, 0.06%)</title><rect x="337.5" y="1445" width="0.7" height="15.0" fill="rgb(224,200,6)" rx="2" ry="2" />
<text  x="340.53" y="1455.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (1 samples, 0.02%)</title><rect x="782.8" y="1365" width="0.3" height="15.0" fill="rgb(209,34,48)" rx="2" ry="2" />
<text  x="785.84" y="1375.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (1 samples, 0.02%)</title><rect x="574.9" y="1445" width="0.2" height="15.0" fill="rgb(254,101,11)" rx="2" ry="2" />
<text  x="577.86" y="1455.5" ></text>
</g>
<g >
<title>service::abstract_write_response_handler::delay&lt;service::abstract_write_response_handler::signal (1 samples, 0.02%)</title><rect x="712.5" y="1605" width="0.2" height="15.0" fill="rgb(230,79,5)" rx="2" ry="2" />
<text  x="715.49" y="1615.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.02%)</title><rect x="25.0" y="1365" width="0.2" height="15.0" fill="rgb(213,187,12)" rx="2" ry="2" />
<text  x="28.00" y="1375.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_requests (245 samples, 4.58%)</title><rect x="974.7" y="1493" width="54.1" height="15.0" fill="rgb(242,85,9)" rx="2" ry="2" />
<text  x="977.73" y="1503.5" >servi..</text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="1061" width="0.3" height="15.0" fill="rgb(240,114,29)" rx="2" ry="2" />
<text  x="13.44" y="1071.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::do_flush (1,161 samples, 21.70%)</title><rect x="856.1" y="1637" width="256.0" height="15.0" fill="rgb(227,30,35)" rx="2" ry="2" />
<text  x="859.07" y="1647.5" >seastar::concrete_execution_stage&lt;..</text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.04%)</title><rect x="548.8" y="1397" width="0.5" height="15.0" fill="rgb(213,211,43)" rx="2" ry="2" />
<text  x="551.83" y="1407.5" ></text>
</g>
<g >
<title>row::row (1 samples, 0.02%)</title><rect x="296.7" y="1349" width="0.2" height="15.0" fill="rgb(225,162,0)" rx="2" ry="2" />
<text  x="299.73" y="1359.5" ></text>
</g>
<g >
<title>row_cache::make_reader (67 samples, 1.25%)</title><rect x="537.1" y="1493" width="14.8" height="15.0" fill="rgb(218,5,16)" rx="2" ry="2" />
<text  x="540.14" y="1503.5" ></text>
</g>
<g >
<title>seastar::weakly_referencable&lt;cql3::statements::prepared_statement&gt;::weak_from_this (2 samples, 0.04%)</title><rect x="725.5" y="1557" width="0.4" height="15.0" fill="rgb(241,35,48)" rx="2" ry="2" />
<text  x="728.50" y="1567.5" ></text>
</g>
<g >
<title>range_tombstone_list::slice (5 samples, 0.09%)</title><rect x="267.0" y="1301" width="1.1" height="15.0" fill="rgb(230,53,10)" rx="2" ry="2" />
<text  x="269.95" y="1311.5" ></text>
</g>
<g >
<title>seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;::swap (1 samples, 0.02%)</title><rect x="736.3" y="1541" width="0.2" height="15.0" fill="rgb(251,207,48)" rx="2" ry="2" />
<text  x="739.31" y="1551.5" ></text>
</g>
<g >
<title>range_tombstone_list::~range_tombstone_list (1 samples, 0.02%)</title><rect x="1114.6" y="1381" width="0.2" height="15.0" fill="rgb(208,43,52)" rx="2" ry="2" />
<text  x="1117.57" y="1391.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::~BaseRecognizer (1 samples, 0.02%)</title><rect x="19.7" y="1573" width="0.2" height="15.0" fill="rgb(251,3,7)" rx="2" ry="2" />
<text  x="22.70" y="1583.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;std::pair&lt;seastar::shared_ptr&lt;service::abstract_read_executor&gt;, nonwrapping_interval&lt;dht::token&gt; &gt;, 1ul&gt;::emplace_back&lt;seastar::shared_ptr&lt;service::abstract_read_executor&gt;&amp;, nonwrapping_interval&lt;dht::token&gt; &gt; (1 samples, 0.02%)</title><rect x="1074.9" y="1525" width="0.2" height="15.0" fill="rgb(219,32,17)" rx="2" ry="2" />
<text  x="1077.87" y="1535.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="1525" width="0.3" height="15.0" fill="rgb(246,225,12)" rx="2" ry="2" />
<text  x="13.44" y="1535.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (1 samples, 0.02%)</title><rect x="295.8" y="1397" width="0.3" height="15.0" fill="rgb(252,123,51)" rx="2" ry="2" />
<text  x="298.85" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, flat_mutation_reader, reader_concurrency_semaphore::inactive_read_handle&gt;::~_Variant_storage (1 samples, 0.02%)</title><rect x="627.8" y="1589" width="0.2" height="15.0" fill="rgb(212,159,53)" rx="2" ry="2" />
<text  x="630.79" y="1599.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (2 samples, 0.04%)</title><rect x="631.1" y="1589" width="0.4" height="15.0" fill="rgb(251,187,19)" rx="2" ry="2" />
<text  x="634.10" y="1599.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;reader_concurrency_semaphore::entry&gt; &gt;::destroy&lt;reader_concurrency_semaphore::entry&gt; (3 samples, 0.06%)</title><rect x="637.3" y="1637" width="0.6" height="15.0" fill="rgb(247,95,23)" rx="2" ry="2" />
<text  x="640.27" y="1647.5" ></text>
</g>
<g >
<title>empty_flat_reader::~empty_flat_reader (7 samples, 0.13%)</title><rect x="568.9" y="1477" width="1.5" height="15.0" fill="rgb(250,188,29)" rx="2" ry="2" />
<text  x="571.90" y="1487.5" ></text>
</g>
<g >
<title>std::hash&lt;std::basic_string_view&lt;signed char, std::char_traits&lt;signed char&gt; &gt; &gt;::operator (10 samples, 0.19%)</title><rect x="727.7" y="1461" width="2.2" height="15.0" fill="rgb(205,138,36)" rx="2" ry="2" />
<text  x="730.70" y="1471.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::CommonToken (2 samples, 0.04%)</title><rect x="23.5" y="1365" width="0.4" height="15.0" fill="rgb(230,93,12)" rx="2" ry="2" />
<text  x="26.45" y="1375.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_partition_key_ranges (5 samples, 0.09%)</title><rect x="851.4" y="1525" width="1.1" height="15.0" fill="rgb(249,4,1)" rx="2" ry="2" />
<text  x="854.44" y="1535.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.02%)</title><rect x="58.3" y="1413" width="0.2" height="15.0" fill="rgb(248,193,14)" rx="2" ry="2" />
<text  x="61.30" y="1423.5" ></text>
</g>
<g >
<title>sstables::mc::row_has_complex_deletion (2 samples, 0.04%)</title><rect x="80.8" y="1557" width="0.4" height="15.0" fill="rgb(253,184,11)" rx="2" ry="2" />
<text  x="83.80" y="1567.5" ></text>
</g>
<g >
<title>std::apply&lt;auth::permissions_cache::get (60 samples, 1.12%)</title><rect x="783.5" y="1413" width="13.2" height="15.0" fill="rgb(244,58,24)" rx="2" ry="2" />
<text  x="786.51" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;void&gt;  (2 samples, 0.04%)</title><rect x="71.5" y="1541" width="0.5" height="15.0" fill="rgb(240,31,31)" rx="2" ry="2" />
<text  x="74.54" y="1551.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (3 samples, 0.06%)</title><rect x="55.2" y="1317" width="0.7" height="15.0" fill="rgb(251,108,12)" rx="2" ry="2" />
<text  x="58.21" y="1327.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;::lru_entry, boost::intrusive::list_node_traits&lt;void*&gt;,  (2 samples, 0.04%)</title><rect x="730.4" y="1541" width="0.4" height="15.0" fill="rgb(236,4,12)" rx="2" ry="2" />
<text  x="733.35" y="1551.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_emplace&lt;nonwrapping_interval&lt;dht::token&gt;, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; (28 samples, 0.52%)</title><rect x="1144.6" y="1621" width="6.1" height="15.0" fill="rgb(254,17,29)" rx="2" ry="2" />
<text  x="1147.56" y="1631.5" ></text>
</g>
<g >
<title>clustering_row::clustering_row (1 samples, 0.02%)</title><rect x="848.8" y="1445" width="0.2" height="15.0" fill="rgb(211,216,28)" rx="2" ry="2" />
<text  x="851.79" y="1455.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_esft&lt;partition_snapshot&gt;::dispose (4 samples, 0.07%)</title><rect x="581.7" y="1429" width="0.9" height="15.0" fill="rgb(222,59,8)" rx="2" ry="2" />
<text  x="584.69" y="1439.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;void&gt;  (1 samples, 0.02%)</title><rect x="78.8" y="1493" width="0.2" height="15.0" fill="rgb(209,93,50)" rx="2" ry="2" />
<text  x="81.81" y="1503.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::_M_range_initialize&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; const*&gt; (1 samples, 0.02%)</title><rect x="1087.2" y="1541" width="0.2" height="15.0" fill="rgb(213,79,26)" rx="2" ry="2" />
<text  x="1090.22" y="1551.5" ></text>
</g>
<g >
<title>database::find_uuid (21 samples, 0.39%)</title><rect x="756.6" y="1541" width="4.6" height="15.0" fill="rgb(214,142,28)" rx="2" ry="2" />
<text  x="759.60" y="1551.5" ></text>
</g>
<g >
<title>service::get_local_priority_manager (1 samples, 0.02%)</title><rect x="135.3" y="1605" width="0.2" height="15.0" fill="rgb(224,34,39)" rx="2" ry="2" />
<text  x="138.28" y="1615.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::operator (1 samples, 0.02%)</title><rect x="100.9" y="1253" width="0.2" height="15.0" fill="rgb(250,168,48)" rx="2" ry="2" />
<text  x="103.87" y="1263.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="1637" width="0.3" height="15.0" fill="rgb(211,149,25)" rx="2" ry="2" />
<text  x="13.44" y="1647.5" ></text>
</g>
<g >
<title>operator new (8 samples, 0.15%)</title><rect x="1017.1" y="1413" width="1.7" height="15.0" fill="rgb(234,106,15)" rx="2" ry="2" />
<text  x="1020.08" y="1423.5" ></text>
</g>
<g >
<title>ser::serializer&lt;utils::UUID&gt;::skip&lt;seastar::simple_memory_input_stream&gt; (1 samples, 0.02%)</title><rect x="1113.5" y="1381" width="0.2" height="15.0" fill="rgb(224,129,18)" rx="2" ry="2" />
<text  x="1116.47" y="1391.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (1 samples, 0.02%)</title><rect x="925.1" y="1525" width="0.2" height="15.0" fill="rgb(223,184,9)" rx="2" ry="2" />
<text  x="928.11" y="1535.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.02%)</title><rect x="50.6" y="1269" width="0.2" height="15.0" fill="rgb(217,137,53)" rx="2" ry="2" />
<text  x="53.58" y="1279.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;std::optional&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt; &gt; &gt;::invoke&lt;cql3::query_processor::for_each_cql_result (1 samples, 0.02%)</title><rect x="639.0" y="1621" width="0.3" height="15.0" fill="rgb(227,117,21)" rx="2" ry="2" />
<text  x="642.04" y="1631.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (11 samples, 0.21%)</title><rect x="790.1" y="1317" width="2.4" height="15.0" fill="rgb(248,104,29)" rx="2" ry="2" />
<text  x="793.12" y="1327.5" ></text>
</g>
<g >
<title>service::abstract_write_response_handler::response (3 samples, 0.06%)</title><rect x="712.5" y="1621" width="0.6" height="15.0" fill="rgb(230,204,45)" rx="2" ry="2" />
<text  x="715.49" y="1631.5" ></text>
</g>
<g >
<title>std::optional&lt;cql3::expr::expression&gt;::optional (1 samples, 0.02%)</title><rect x="60.1" y="1477" width="0.2" height="15.0" fill="rgb(248,17,50)" rx="2" ry="2" />
<text  x="63.07" y="1487.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.02%)</title><rect x="50.6" y="1333" width="0.2" height="15.0" fill="rgb(221,73,3)" rx="2" ry="2" />
<text  x="53.58" y="1343.5" ></text>
</g>
<g >
<title>row::apply_monotonically (3 samples, 0.06%)</title><rect x="853.4" y="1445" width="0.7" height="15.0" fill="rgb(245,69,19)" rx="2" ry="2" />
<text  x="856.42" y="1455.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.02%)</title><rect x="1130.0" y="1397" width="0.2" height="15.0" fill="rgb(249,186,54)" rx="2" ry="2" />
<text  x="1133.01" y="1407.5" ></text>
</g>
<g >
<title>multishard_combining_reader::fill_buffer (1 samples, 0.02%)</title><rect x="100.9" y="1397" width="0.2" height="15.0" fill="rgb(210,168,37)" rx="2" ry="2" />
<text  x="103.87" y="1407.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (5 samples, 0.09%)</title><rect x="993.0" y="1397" width="1.1" height="15.0" fill="rgb(205,23,2)" rx="2" ry="2" />
<text  x="996.04" y="1407.5" ></text>
</g>
<g >
<title>bound_view::from_range_end&lt;nonwrapping_interval&gt; (2 samples, 0.04%)</title><rect x="289.0" y="1349" width="0.5" height="15.0" fill="rgb(239,90,45)" rx="2" ry="2" />
<text  x="292.01" y="1359.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (2 samples, 0.04%)</title><rect x="685.8" y="1605" width="0.4" height="15.0" fill="rgb(230,142,36)" rx="2" ry="2" />
<text  x="688.80" y="1615.5" ></text>
</g>
<g >
<title>absl::container_internal::operator== (2 samples, 0.04%)</title><rect x="811.3" y="1477" width="0.4" height="15.0" fill="rgb(211,79,45)" rx="2" ry="2" />
<text  x="814.30" y="1487.5" ></text>
</g>
<g >
<title>db::schema_tables::calculate_schema_digest (4 samples, 0.07%)</title><rect x="100.4" y="1621" width="0.9" height="15.0" fill="rgb(253,199,6)" rx="2" ry="2" />
<text  x="103.43" y="1631.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (34 samples, 0.64%)</title><rect x="150.5" y="1589" width="7.5" height="15.0" fill="rgb(229,121,45)" rx="2" ry="2" />
<text  x="153.50" y="1599.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;mutation_reader_merger::reader_and_last_fragment_kind*, mutation_reader_merger::prepare_next (1 samples, 0.02%)</title><rect x="100.4" y="1237" width="0.3" height="15.0" fill="rgb(230,107,12)" rx="2" ry="2" />
<text  x="103.43" y="1247.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (24 samples, 0.45%)</title><rect x="1112.6" y="1525" width="5.3" height="15.0" fill="rgb(210,120,21)" rx="2" ry="2" />
<text  x="1115.58" y="1535.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::get_promise (1 samples, 0.02%)</title><rect x="1019.9" y="1413" width="0.3" height="15.0" fill="rgb(228,175,4)" rx="2" ry="2" />
<text  x="1022.95" y="1423.5" ></text>
</g>
<g >
<title>utils::timed_rate_moving_average_and_histogram::mark (3 samples, 0.06%)</title><rect x="613.2" y="1573" width="0.7" height="15.0" fill="rgb(242,94,3)" rx="2" ry="2" />
<text  x="616.23" y="1583.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, query::non_null_data_value&gt;, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, query::non_null_data_value&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, std::hash&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::operator= (1 samples, 0.02%)</title><rect x="101.3" y="1557" width="0.2" height="15.0" fill="rgb(247,85,2)" rx="2" ry="2" />
<text  x="104.31" y="1567.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::take (1 samples, 0.02%)</title><rect x="1138.6" y="1621" width="0.2" height="15.0" fill="rgb(205,18,43)" rx="2" ry="2" />
<text  x="1141.61" y="1631.5" ></text>
</g>
<g >
<title>dht::ring_position::as_decorated_key (6 samples, 0.11%)</title><rect x="478.3" y="1477" width="1.3" height="15.0" fill="rgb(218,228,46)" rx="2" ry="2" />
<text  x="481.25" y="1487.5" ></text>
</g>
<g >
<title>std::allocator&lt;cql3::expr::expression&gt;::allocator (2 samples, 0.04%)</title><rect x="52.8" y="1381" width="0.4" height="15.0" fill="rgb(243,14,13)" rx="2" ry="2" />
<text  x="55.79" y="1391.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.02%)</title><rect x="980.0" y="1397" width="0.2" height="15.0" fill="rgb(243,104,14)" rx="2" ry="2" />
<text  x="983.03" y="1407.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (5 samples, 0.09%)</title><rect x="885.8" y="1413" width="1.1" height="15.0" fill="rgb(209,164,14)" rx="2" ry="2" />
<text  x="888.85" y="1423.5" ></text>
</g>
<g >
<title>sstables::mc::writer::write_cells (3 samples, 0.06%)</title><rect x="81.2" y="1541" width="0.7" height="15.0" fill="rgb(208,219,33)" rx="2" ry="2" />
<text  x="84.24" y="1551.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.09%)</title><rect x="155.3" y="1541" width="1.2" height="15.0" fill="rgb(224,160,17)" rx="2" ry="2" />
<text  x="158.35" y="1551.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (2 samples, 0.04%)</title><rect x="506.0" y="1461" width="0.5" height="15.0" fill="rgb(236,14,3)" rx="2" ry="2" />
<text  x="509.04" y="1471.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::emplace_back&lt;mutation_reader_merger::reader_and_fragment&gt; (1 samples, 0.02%)</title><rect x="304.2" y="1445" width="0.2" height="15.0" fill="rgb(231,203,16)" rx="2" ry="2" />
<text  x="307.23" y="1455.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.02%)</title><rect x="25.0" y="1397" width="0.2" height="15.0" fill="rgb(215,45,16)" rx="2" ry="2" />
<text  x="28.00" y="1407.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.02%)</title><rect x="44.8" y="1397" width="0.3" height="15.0" fill="rgb(231,195,52)" rx="2" ry="2" />
<text  x="47.85" y="1407.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::take_value (3 samples, 0.06%)</title><rect x="314.6" y="1493" width="0.7" height="15.0" fill="rgb(234,44,8)" rx="2" ry="2" />
<text  x="317.59" y="1503.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (2 samples, 0.04%)</title><rect x="58.1" y="1461" width="0.4" height="15.0" fill="rgb(241,207,22)" rx="2" ry="2" />
<text  x="61.08" y="1471.5" ></text>
</g>
<g >
<title>sstables::compaction::finish_new_sstable (1 samples, 0.02%)</title><rect x="17.5" y="1621" width="0.2" height="15.0" fill="rgb(215,32,3)" rx="2" ry="2" />
<text  x="20.50" y="1631.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_psrstate (1 samples, 0.02%)</title><rect x="37.8" y="1509" width="0.2" height="15.0" fill="rgb(220,177,21)" rx="2" ry="2" />
<text  x="40.79" y="1519.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (3 samples, 0.06%)</title><rect x="668.6" y="1637" width="0.7" height="15.0" fill="rgb(212,44,45)" rx="2" ry="2" />
<text  x="671.59" y="1647.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.02%)</title><rect x="686.2" y="1637" width="0.3" height="15.0" fill="rgb(223,89,12)" rx="2" ry="2" />
<text  x="689.24" y="1647.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;std::_List_iterator&lt;flat_mutation_reader&gt;, mutation_reader_merger::close (94 samples, 1.76%)</title><rect x="566.9" y="1509" width="20.7" height="15.0" fill="rgb(216,39,21)" rx="2" ry="2" />
<text  x="569.92" y="1519.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.04%)</title><rect x="633.5" y="1541" width="0.5" height="15.0" fill="rgb(206,100,2)" rx="2" ry="2" />
<text  x="636.53" y="1551.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEE4$_44ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_45ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_43ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_46ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_47ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_48ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_49ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_50ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_51ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_52ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_53ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_54ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_55ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_56ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_57ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_58EERS4_IJNSF_11conjunctionENSF_15binary_operatorENSF_12column_valueENSF_5tokenENSF_21unresolved_identifierENSF_25column_mutation_attributeENSF_13function_callENSF_4castENSF_15field_selectionENSF_4nullENSF_13bind_variableENSF_16untyped_constantENSF_8constantENSF_17tuple_constructorENSF_22collection_constructorENSF_20usertype_constructorEEEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES16_S1O_ (2 samples, 0.04%)</title><rect x="873.3" y="1557" width="0.4" height="15.0" fill="rgb(243,57,51)" rx="2" ry="2" />
<text  x="876.27" y="1567.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureINS_10bool_classIN22mutation_reader_merger15needs_merge_tagEEEE9then_implIZNS5_14discard_resultEvEUlDpOT_E_NS0_IvEEEET0_OT_ (2 samples, 0.04%)</title><rect x="181.4" y="1429" width="0.4" height="15.0" fill="rgb(220,99,35)" rx="2" ry="2" />
<text  x="184.38" y="1439.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (4 samples, 0.07%)</title><rect x="667.1" y="1637" width="0.8" height="15.0" fill="rgb(245,17,47)" rx="2" ry="2" />
<text  x="670.05" y="1647.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (1 samples, 0.02%)</title><rect x="499.0" y="1477" width="0.2" height="15.0" fill="rgb(216,204,17)" rx="2" ry="2" />
<text  x="501.98" y="1487.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_4findERKNS5_10expressionENS5_6oper_tEEUlRS7_E_EES8_SE_T_EUlSG_E_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_8constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_11conjunctionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_12column_valueEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_5tokenEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13function_callEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4castEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_15field_selectionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4nullEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13bind_variableEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_16untyped_constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_17tuple_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_22collection_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSO_S6_SS_SW_S10_S14_S18_S1C_S1G_S1K_S1O_S1S_SK_S1W_S20_S24_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES29_S2C_ (1 samples, 0.02%)</title><rect x="940.5" y="1477" width="0.3" height="15.0" fill="rgb(220,9,50)" rx="2" ry="2" />
<text  x="943.55" y="1487.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (1 samples, 0.02%)</title><rect x="764.5" y="1493" width="0.3" height="15.0" fill="rgb(245,199,37)" rx="2" ry="2" />
<text  x="767.54" y="1503.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_M_reset (2 samples, 0.04%)</title><rect x="802.0" y="1413" width="0.5" height="15.0" fill="rgb(250,135,30)" rx="2" ry="2" />
<text  x="805.03" y="1423.5" ></text>
</g>
<g >
<title>cql3::query_options::query_options (13 samples, 0.24%)</title><rect x="836.7" y="1573" width="2.8" height="15.0" fill="rgb(251,138,48)" rx="2" ry="2" />
<text  x="839.66" y="1583.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (274 samples, 5.12%)</title><rect x="17.7" y="1717" width="60.5" height="15.0" fill="rgb(252,146,54)" rx="2" ry="2" />
<text  x="20.72" y="1727.5" >std::_..</text>
</g>
<g >
<title>seastar::futurize&lt;void&gt;::satisfy_with_result_of&lt;seastar::future&lt;service::digest_read_result&gt;::then_wrapped_nrvo&lt;void, service::abstract_read_executor::execute (1 samples, 0.02%)</title><rect x="716.0" y="1653" width="0.2" height="15.0" fill="rgb(225,143,14)" rx="2" ry="2" />
<text  x="719.01" y="1663.5" ></text>
</g>
<g >
<title>std::forward_as_tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const&amp;, auth::resource, service::client_state::has_column_family_access (1 samples, 0.02%)</title><rect x="807.5" y="1541" width="0.3" height="15.0" fill="rgb(252,69,4)" rx="2" ry="2" />
<text  x="810.55" y="1551.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="1445" width="0.3" height="15.0" fill="rgb(214,23,17)" rx="2" ry="2" />
<text  x="13.44" y="1455.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (4 samples, 0.07%)</title><rect x="38.2" y="1493" width="0.9" height="15.0" fill="rgb(209,137,19)" rx="2" ry="2" />
<text  x="41.23" y="1503.5" ></text>
</g>
<g >
<title>write_row&lt;ser::writer_of_deletable_row&lt;bytes_ostream&gt; &gt; (12 samples, 0.22%)</title><rect x="1123.2" y="1301" width="2.6" height="15.0" fill="rgb(249,61,22)" rx="2" ry="2" />
<text  x="1126.17" y="1311.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::clear (1 samples, 0.02%)</title><rect x="714.9" y="1653" width="0.2" height="15.0" fill="rgb(247,31,13)" rx="2" ry="2" />
<text  x="717.91" y="1663.5" ></text>
</g>
<g >
<title>sstables::mc::writer::consume_end_of_stream (1 samples, 0.02%)</title><rect x="17.5" y="1605" width="0.2" height="15.0" fill="rgb(207,213,16)" rx="2" ry="2" />
<text  x="20.50" y="1615.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="49.3" y="1333" width="0.2" height="15.0" fill="rgb(216,109,28)" rx="2" ry="2" />
<text  x="52.26" y="1343.5" ></text>
</g>
<g >
<title>ser::after_qr_cell__value&lt;bytes_ostream&gt;::skip_ttl (1 samples, 0.02%)</title><rect x="366.6" y="1333" width="0.3" height="15.0" fill="rgb(215,106,25)" rx="2" ry="2" />
<text  x="369.65" y="1343.5" ></text>
</g>
<g >
<title>std::__find_if&lt;gms::inet_address*, __gnu_cxx::__ops::_Iter_equals_val&lt;gms::inet_address const&gt; &gt; (1 samples, 0.02%)</title><rect x="712.9" y="1605" width="0.2" height="15.0" fill="rgb(240,118,47)" rx="2" ry="2" />
<text  x="715.93" y="1615.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::_M_realloc_insert&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; (7 samples, 0.13%)</title><rect x="48.4" y="1429" width="1.5" height="15.0" fill="rgb(205,175,25)" rx="2" ry="2" />
<text  x="51.38" y="1439.5" ></text>
</g>
<g >
<title>sstables::compaction::setup&lt;noop_compacted_fragments_consumer&gt; (1 samples, 0.02%)</title><rect x="1130.0" y="1477" width="0.2" height="15.0" fill="rgb(242,213,12)" rx="2" ry="2" />
<text  x="1133.01" y="1487.5" ></text>
</g>
<g >
<title>make_empty_flat_reader (21 samples, 0.39%)</title><rect x="546.4" y="1461" width="4.6" height="15.0" fill="rgb(249,137,3)" rx="2" ry="2" />
<text  x="549.40" y="1471.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (2 samples, 0.04%)</title><rect x="534.1" y="1461" width="0.4" height="15.0" fill="rgb(215,167,6)" rx="2" ry="2" />
<text  x="537.05" y="1471.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;std::function&lt;std::function&lt;partition_presence_checker_result  (1 samples, 0.02%)</title><rect x="11.5" y="1669" width="0.3" height="15.0" fill="rgb(236,131,36)" rx="2" ry="2" />
<text  x="14.54" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::at (8 samples, 0.15%)</title><rect x="809.5" y="1477" width="1.8" height="15.0" fill="rgb(211,150,42)" rx="2" ry="2" />
<text  x="812.53" y="1487.5" ></text>
</g>
<g >
<title>bound_view::from_range_end&lt;nonwrapping_interval&gt; (4 samples, 0.07%)</title><rect x="287.5" y="1333" width="0.8" height="15.0" fill="rgb(207,79,9)" rx="2" ry="2" />
<text  x="290.47" y="1343.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::has_token (4 samples, 0.07%)</title><rect x="935.7" y="1525" width="0.9" height="15.0" fill="rgb(247,115,50)" rx="2" ry="2" />
<text  x="938.69" y="1535.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;mutation_fragment&gt;::allocate (1 samples, 0.02%)</title><rect x="208.5" y="1333" width="0.2" height="15.0" fill="rgb(245,27,30)" rx="2" ry="2" />
<text  x="211.50" y="1343.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.02%)</title><rect x="556.1" y="1573" width="0.2" height="15.0" fill="rgb(247,135,28)" rx="2" ry="2" />
<text  x="559.11" y="1583.5" ></text>
</g>
<g >
<title>seastar::repeat&lt;flat_mutation_reader::impl::consume_pausable&lt;scanning_reader::consumer&gt; (1 samples, 0.02%)</title><rect x="100.9" y="1141" width="0.2" height="15.0" fill="rgb(253,95,27)" rx="2" ry="2" />
<text  x="103.87" y="1151.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;tracking_allocator&lt;mutation_fragment&gt; &gt;::_S_destroy&lt;tracking_allocator&lt;mutation_fragment&gt;, mutation_fragment&gt; (1 samples, 0.02%)</title><rect x="100.7" y="1333" width="0.2" height="15.0" fill="rgb(219,199,19)" rx="2" ry="2" />
<text  x="103.65" y="1343.5" ></text>
</g>
<g >
<title>service::client_state::check_has_permission (7 samples, 0.13%)</title><rect x="75.3" y="1557" width="1.5" height="15.0" fill="rgb(252,196,46)" rx="2" ry="2" />
<text  x="78.29" y="1567.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::pop_mutation_fragment (1 samples, 0.02%)</title><rect x="302.0" y="1429" width="0.2" height="15.0" fill="rgb(233,10,49)" rx="2" ry="2" />
<text  x="305.02" y="1439.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEE4$_44ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_45ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_43ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_46ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_47ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_48ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_49ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_50ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_51ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_52ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_53ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_54ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_55ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_56ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_57ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_58EERS4_IJNSF_11conjunctionENSF_15binary_operatorENSF_12column_valueENSF_5tokenENSF_21unresolved_identifierENSF_25column_mutation_attributeENSF_13function_callENSF_4castENSF_15field_selectionENSF_4nullENSF_13bind_variableENSF_16untyped_constantENSF_8constantENSF_17tuple_constructorENSF_22collection_constructorENSF_20usertype_constructorEEEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES16_S1O_ (127 samples, 2.37%)</title><rect x="874.4" y="1541" width="28.0" height="15.0" fill="rgb(237,45,45)" rx="2" ry="2" />
<text  x="877.38" y="1551.5" >_..</text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::~_Variant_storage (1 samples, 0.02%)</title><rect x="441.0" y="1397" width="0.2" height="15.0" fill="rgb(221,207,27)" rx="2" ry="2" />
<text  x="443.98" y="1407.5" ></text>
</g>
<g >
<title>db::view::view_update_generator::~view_update_generator (1 samples, 0.02%)</title><rect x="692.2" y="1477" width="0.2" height="15.0" fill="rgb(240,202,32)" rx="2" ry="2" />
<text  x="695.19" y="1487.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::sharded&lt;database&gt;::invoke_on_all (1 samples, 0.02%)</title><rect x="78.8" y="1477" width="0.2" height="15.0" fill="rgb(243,191,21)" rx="2" ry="2" />
<text  x="81.81" y="1487.5" ></text>
</g>
<g >
<title>boost::intrusive::bstree_algorithms&lt;boost::intrusive::rbtree_node_traits&lt;void*, false&gt; &gt;::clear_and_dispose&lt;boost::intrusive::detail::node_disposer&lt;boost::intrusive::detail::null_disposer, boost::intrusive::mhtraits&lt;range_tombstone_entry, boost::intrusive::set_member_hook&lt;boost::intrusive::link_mode&lt; (1 samples, 0.02%)</title><rect x="578.6" y="1445" width="0.2" height="15.0" fill="rgb(206,26,44)" rx="2" ry="2" />
<text  x="581.61" y="1455.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.02%)</title><rect x="58.3" y="1301" width="0.2" height="15.0" fill="rgb(247,184,3)" rx="2" ry="2" />
<text  x="61.30" y="1311.5" ></text>
</g>
<g >
<title>schema_builder::build (1 samples, 0.02%)</title><rect x="100.2" y="1557" width="0.2" height="15.0" fill="rgb(249,214,5)" rx="2" ry="2" />
<text  x="103.21" y="1567.5" ></text>
</g>
<g >
<title>row_cache::do_make_reader (1 samples, 0.02%)</title><rect x="1165.3" y="1541" width="0.2" height="15.0" fill="rgb(234,113,21)" rx="2" ry="2" />
<text  x="1168.30" y="1551.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::trivial_direct_destroy (9 samples, 0.17%)</title><rect x="121.8" y="1541" width="2.0" height="15.0" fill="rgb(226,100,49)" rx="2" ry="2" />
<text  x="124.82" y="1551.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::apply_updates (12 samples, 0.22%)</title><rect x="853.0" y="1525" width="2.6" height="15.0" fill="rgb(252,161,50)" rx="2" ry="2" />
<text  x="855.98" y="1535.5" ></text>
</g>
<g >
<title>seastar::repeat&lt;flat_mutation_reader::impl::consume_pausable&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (449 samples, 8.39%)</title><rect x="339.3" y="1445" width="99.0" height="15.0" fill="rgb(220,3,5)" rx="2" ry="2" />
<text  x="342.30" y="1455.5" >seastar::re..</text>
</g>
<g >
<title>operator new (10 samples, 0.19%)</title><rect x="954.2" y="1509" width="2.2" height="15.0" fill="rgb(242,80,21)" rx="2" ry="2" />
<text  x="957.22" y="1519.5" ></text>
</g>
<g >
<title>db::system_keyspace_make (1 samples, 0.02%)</title><rect x="17.1" y="1461" width="0.2" height="15.0" fill="rgb(247,140,35)" rx="2" ry="2" />
<text  x="20.06" y="1471.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="901" width="0.3" height="15.0" fill="rgb(247,183,23)" rx="2" ry="2" />
<text  x="13.44" y="911.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.02%)</title><rect x="76.6" y="1525" width="0.2" height="15.0" fill="rgb(239,174,52)" rx="2" ry="2" />
<text  x="79.61" y="1535.5" ></text>
</g>
<g >
<title>query_result_builder::consume_end_of_partition (4 samples, 0.07%)</title><rect x="344.8" y="1381" width="0.9" height="15.0" fill="rgb(230,123,20)" rx="2" ry="2" />
<text  x="347.81" y="1391.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::~_Deque_base (2 samples, 0.04%)</title><rect x="626.9" y="1541" width="0.4" height="15.0" fill="rgb(231,55,17)" rx="2" ry="2" />
<text  x="629.91" y="1551.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="1148.3" y="1525" width="0.2" height="15.0" fill="rgb(225,161,51)" rx="2" ry="2" />
<text  x="1151.31" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_List_node_header::_List_node_header (1 samples, 0.02%)</title><rect x="470.8" y="1429" width="0.2" height="15.0" fill="rgb(246,175,4)" rx="2" ry="2" />
<text  x="473.75" y="1439.5" ></text>
</g>
<g >
<title>position_in_partition::position_in_partition (7 samples, 0.13%)</title><rect x="278.4" y="1397" width="1.6" height="15.0" fill="rgb(227,192,10)" rx="2" ry="2" />
<text  x="281.42" y="1407.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.02%)</title><rect x="359.4" y="1349" width="0.2" height="15.0" fill="rgb(231,179,25)" rx="2" ry="2" />
<text  x="362.37" y="1359.5" ></text>
</g>
<g >
<title>reader_permit::impl::~impl (1 samples, 0.02%)</title><rect x="107.9" y="1621" width="0.2" height="15.0" fill="rgb(234,38,5)" rx="2" ry="2" />
<text  x="110.93" y="1631.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (1 samples, 0.02%)</title><rect x="1130.0" y="1557" width="0.2" height="15.0" fill="rgb(226,153,21)" rx="2" ry="2" />
<text  x="1133.01" y="1567.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_state&lt;std::tuple&lt;std::optional&lt;auth::resource&gt; &gt;, seastar::future&lt;bool&gt; &gt;::do_with_state&lt;std::optional&lt;auth::resource&gt; &gt; (4 samples, 0.07%)</title><rect x="773.4" y="1461" width="0.8" height="15.0" fill="rgb(254,217,27)" rx="2" ry="2" />
<text  x="776.36" y="1471.5" ></text>
</g>
<g >
<title>flat_mutation_reader::close (2 samples, 0.04%)</title><rect x="1165.5" y="1541" width="0.5" height="15.0" fill="rgb(212,107,51)" rx="2" ry="2" />
<text  x="1168.52" y="1551.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;std::vector&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::allocator&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; &gt;::_Optional_payload_base (1 samples, 0.02%)</title><rect x="851.2" y="1525" width="0.2" height="15.0" fill="rgb(224,108,41)" rx="2" ry="2" />
<text  x="854.22" y="1535.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::~impl (10 samples, 0.19%)</title><rect x="574.0" y="1461" width="2.2" height="15.0" fill="rgb(217,119,17)" rx="2" ry="2" />
<text  x="576.97" y="1471.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (2 samples, 0.04%)</title><rect x="326.5" y="1477" width="0.4" height="15.0" fill="rgb(231,159,29)" rx="2" ry="2" />
<text  x="329.50" y="1487.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (1 samples, 0.02%)</title><rect x="563.6" y="1573" width="0.2" height="15.0" fill="rgb(240,224,4)" rx="2" ry="2" />
<text  x="566.61" y="1583.5" ></text>
</g>
<g >
<title>reader_permit::consume (1 samples, 0.02%)</title><rect x="523.0" y="1333" width="0.2" height="15.0" fill="rgb(209,27,42)" rx="2" ry="2" />
<text  x="526.02" y="1343.5" ></text>
</g>
<g >
<title>validation::validate_column_family (1 samples, 0.02%)</title><rect x="74.6" y="1621" width="0.2" height="15.0" fill="rgb(222,52,20)" rx="2" ry="2" />
<text  x="77.62" y="1631.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;managed_bytes&gt;::make&lt;managed_bytes&gt; (7 samples, 0.13%)</title><rect x="894.4" y="1461" width="1.6" height="15.0" fill="rgb(248,222,35)" rx="2" ry="2" />
<text  x="897.45" y="1471.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="438.8" y="1429" width="0.2" height="15.0" fill="rgb(254,128,0)" rx="2" ry="2" />
<text  x="441.77" y="1439.5" ></text>
</g>
<g >
<title>seastar::basic_semaphore&lt;seastar::semaphore_default_exception_factory, std::chrono::_V2::steady_clock&gt;::wait (2 samples, 0.04%)</title><rect x="612.6" y="1589" width="0.4" height="15.0" fill="rgb(238,72,17)" rx="2" ry="2" />
<text  x="615.57" y="1599.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_no_esft&lt;query::read_command&gt;::shared_ptr_no_esft&lt;utils::UUID const&amp;, utils::UUID, query::partition_slice, query::max_result_size, query::row_limit, query::partition_limit, std::chrono::time_point&lt;gc_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt; &gt;&amp;, std::optional&lt;tracing::trace_info&gt;, utils::UUID, seastar::bool_class&lt;query::is_first_page_tag&gt; const&amp;, long&gt; (10 samples, 0.19%)</title><rect x="1100.2" y="1557" width="2.2" height="15.0" fill="rgb(211,126,4)" rx="2" ry="2" />
<text  x="1103.23" y="1567.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (2 samples, 0.04%)</title><rect x="55.4" y="1269" width="0.5" height="15.0" fill="rgb(247,211,26)" rx="2" ry="2" />
<text  x="58.44" y="1279.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::metadata const&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="95.4" y="1621" width="0.2" height="15.0" fill="rgb(205,106,1)" rx="2" ry="2" />
<text  x="98.36" y="1631.5" ></text>
</g>
<g >
<title>make_partition_snapshot_flat_reader_from_snp_schema (1 samples, 0.02%)</title><rect x="474.9" y="1493" width="0.3" height="15.0" fill="rgb(251,108,13)" rx="2" ry="2" />
<text  x="477.94" y="1503.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (3 samples, 0.06%)</title><rect x="51.5" y="1429" width="0.6" height="15.0" fill="rgb(239,118,51)" rx="2" ry="2" />
<text  x="54.47" y="1439.5" ></text>
</g>
<g >
<title>std::default_delete&lt;cql3::query_options&gt;::operator (14 samples, 0.26%)</title><rect x="676.8" y="1621" width="3.0" height="15.0" fill="rgb(252,109,47)" rx="2" ry="2" />
<text  x="679.76" y="1631.5" ></text>
</g>
<g >
<title>seastar::chunked_fifo&lt;seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::entry, 128ul&gt;::emplace_back&lt;reader_concurrency_semaphore::entry, seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;&amp;, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;&amp;&gt; (31 samples, 0.58%)</title><rect x="1005.2" y="1333" width="6.8" height="15.0" fill="rgb(240,136,43)" rx="2" ry="2" />
<text  x="1008.17" y="1343.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::pop_mutation_fragment (7 samples, 0.13%)</title><rect x="341.5" y="1413" width="1.5" height="15.0" fill="rgb(206,193,18)" rx="2" ry="2" />
<text  x="344.50" y="1423.5" ></text>
</g>
<g >
<title>std::optional&lt;clustering_key_prefix&gt;::operator=&lt;clustering_key_prefix const&amp;&gt; (4 samples, 0.07%)</title><rect x="276.7" y="1381" width="0.8" height="15.0" fill="rgb(241,120,7)" rx="2" ry="2" />
<text  x="279.66" y="1391.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;interval_bound&lt;dht::ring_position&gt;, false, false&gt;::_Optional_base (1 samples, 0.02%)</title><rect x="1025.7" y="1397" width="0.2" height="15.0" fill="rgb(233,128,1)" rx="2" ry="2" />
<text  x="1028.68" y="1407.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::list_service_level_statement, std::default_delete&lt;cql3::statements::list_service_level_statement&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="63.6" y="1525" width="0.2" height="15.0" fill="rgb(243,162,35)" rx="2" ry="2" />
<text  x="66.60" y="1535.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::emplace_back&lt;std::_List_iterator&lt;flat_mutation_reader&gt; const&amp;, mutation_fragment&gt; (1 samples, 0.02%)</title><rect x="192.8" y="1397" width="0.3" height="15.0" fill="rgb(251,88,10)" rx="2" ry="2" />
<text  x="195.84" y="1407.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.06%)</title><rect x="692.4" y="1637" width="0.7" height="15.0" fill="rgb(233,187,19)" rx="2" ry="2" />
<text  x="695.41" y="1647.5" ></text>
</g>
<g >
<title>db::query_context::execute_cql&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; (1 samples, 0.02%)</title><rect x="10.4" y="277" width="0.3" height="15.0" fill="rgb(240,74,29)" rx="2" ry="2" />
<text  x="13.44" y="287.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;, service::storage_proxy::query_result_local (12 samples, 0.22%)</title><rect x="645.0" y="1653" width="2.6" height="15.0" fill="rgb(251,125,14)" rx="2" ry="2" />
<text  x="647.99" y="1663.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_S_construct&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (4 samples, 0.07%)</title><rect x="23.5" y="1397" width="0.8" height="15.0" fill="rgb(230,61,29)" rx="2" ry="2" />
<text  x="26.45" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;void&gt;  (2 samples, 0.04%)</title><rect x="71.5" y="1525" width="0.5" height="15.0" fill="rgb(226,132,52)" rx="2" ry="2" />
<text  x="74.54" y="1535.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.06%)</title><rect x="209.6" y="1349" width="0.7" height="15.0" fill="rgb(245,194,50)" rx="2" ry="2" />
<text  x="212.61" y="1359.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="1269" width="0.3" height="15.0" fill="rgb(238,181,37)" rx="2" ry="2" />
<text  x="13.44" y="1279.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (2 samples, 0.04%)</title><rect x="657.6" y="1605" width="0.4" height="15.0" fill="rgb(251,218,17)" rx="2" ry="2" />
<text  x="660.57" y="1615.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="59.4" y="1333" width="0.2" height="15.0" fill="rgb(246,166,29)" rx="2" ry="2" />
<text  x="62.41" y="1343.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit_slot&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::walking_visitor&lt;row::for_each_cell&lt;sstables::mc::writer::write_cells (3 samples, 0.06%)</title><rect x="81.2" y="1509" width="0.7" height="15.0" fill="rgb(220,115,43)" rx="2" ry="2" />
<text  x="84.24" y="1519.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.02%)</title><rect x="59.4" y="1253" width="0.2" height="15.0" fill="rgb(250,143,24)" rx="2" ry="2" />
<text  x="62.41" y="1263.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.06%)</title><rect x="671.2" y="1573" width="0.7" height="15.0" fill="rgb(220,108,8)" rx="2" ry="2" />
<text  x="674.24" y="1583.5" ></text>
</g>
<g >
<title>single_node_cql_env::local_qp (2 samples, 0.04%)</title><rect x="835.3" y="1605" width="0.5" height="15.0" fill="rgb(222,49,48)" rx="2" ry="2" />
<text  x="838.34" y="1615.5" ></text>
</g>
<g >
<title>seastar::memory::stats (1 samples, 0.02%)</title><rect x="297.2" y="1413" width="0.2" height="15.0" fill="rgb(214,197,20)" rx="2" ry="2" />
<text  x="300.17" y="1423.5" ></text>
</g>
<g >
<title>mutation_fragment::visit&lt;partition_snapshot_read_accounter&amp;&gt; (4 samples, 0.07%)</title><rect x="204.1" y="1381" width="0.9" height="15.0" fill="rgb(235,60,8)" rx="2" ry="2" />
<text  x="207.09" y="1391.5" ></text>
</g>
<g >
<title>mutation_querier::consume (160 samples, 2.99%)</title><rect x="360.3" y="1349" width="35.2" height="15.0" fill="rgb(221,61,18)" rx="2" ry="2" />
<text  x="363.25" y="1359.5" >mu..</text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::clear (2 samples, 0.04%)</title><rect x="804.0" y="1429" width="0.5" height="15.0" fill="rgb(245,170,20)" rx="2" ry="2" />
<text  x="807.02" y="1439.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.06%)</title><rect x="261.0" y="1301" width="0.7" height="15.0" fill="rgb(235,54,54)" rx="2" ry="2" />
<text  x="264.00" y="1311.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (1 samples, 0.02%)</title><rect x="88.1" y="1637" width="0.2" height="15.0" fill="rgb(221,74,39)" rx="2" ry="2" />
<text  x="91.08" y="1647.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.02%)</title><rect x="17.1" y="1669" width="0.2" height="15.0" fill="rgb(238,2,25)" rx="2" ry="2" />
<text  x="20.06" y="1679.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node_base*&gt;::allocate (1 samples, 0.02%)</title><rect x="1147.9" y="1557" width="0.2" height="15.0" fill="rgb(250,84,54)" rx="2" ry="2" />
<text  x="1150.87" y="1567.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (2 samples, 0.04%)</title><rect x="603.7" y="1525" width="0.5" height="15.0" fill="rgb(234,79,17)" rx="2" ry="2" />
<text  x="606.75" y="1535.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.02%)</title><rect x="10.4" y="357" width="0.3" height="15.0" fill="rgb(205,25,46)" rx="2" ry="2" />
<text  x="13.44" y="367.5" ></text>
</g>
<g >
<title>partition_snapshot::~partition_snapshot (4 samples, 0.07%)</title><rect x="581.7" y="1413" width="0.9" height="15.0" fill="rgb(240,225,5)" rx="2" ry="2" />
<text  x="584.69" y="1423.5" ></text>
</g>
<g >
<title>seastar::reactor::add_timer (7 samples, 0.13%)</title><rect x="1007.4" y="1301" width="1.5" height="15.0" fill="rgb(236,9,20)" rx="2" ry="2" />
<text  x="1010.38" y="1311.5" ></text>
</g>
<g >
<title>operator new (6 samples, 0.11%)</title><rect x="554.3" y="1557" width="1.4" height="15.0" fill="rgb(240,88,29)" rx="2" ry="2" />
<text  x="557.34" y="1567.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (2 samples, 0.04%)</title><rect x="38.7" y="1461" width="0.4" height="15.0" fill="rgb(208,160,15)" rx="2" ry="2" />
<text  x="41.67" y="1471.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (5 samples, 0.09%)</title><rect x="387.8" y="1301" width="1.1" height="15.0" fill="rgb(251,180,15)" rx="2" ry="2" />
<text  x="390.82" y="1311.5" ></text>
</g>
<g >
<title>cql3::operation::set_value::prepare (10 samples, 0.19%)</title><rect x="66.7" y="1573" width="2.2" height="15.0" fill="rgb(240,225,30)" rx="2" ry="2" />
<text  x="69.68" y="1583.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::~guard (2 samples, 0.04%)</title><rect x="499.9" y="1477" width="0.4" height="15.0" fill="rgb(237,48,1)" rx="2" ry="2" />
<text  x="502.87" y="1487.5" ></text>
</g>
<g >
<title>std::__equal&lt;true&gt;::equal&lt;char&gt; (1 samples, 0.02%)</title><rect x="792.3" y="1285" width="0.2" height="15.0" fill="rgb(228,72,15)" rx="2" ry="2" />
<text  x="795.33" y="1295.5" ></text>
</g>
<g >
<title>managed_bytes::operator= (3 samples, 0.06%)</title><rect x="338.6" y="1413" width="0.7" height="15.0" fill="rgb(228,177,52)" rx="2" ry="2" />
<text  x="341.64" y="1423.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::signal (1 samples, 0.02%)</title><rect x="319.2" y="1445" width="0.2" height="15.0" fill="rgb(240,127,26)" rx="2" ry="2" />
<text  x="322.23" y="1455.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::operator= (1 samples, 0.02%)</title><rect x="846.6" y="1637" width="0.2" height="15.0" fill="rgb(251,101,27)" rx="2" ry="2" />
<text  x="849.59" y="1647.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;query::querier&lt; (20 samples, 0.37%)</title><rect x="623.4" y="1589" width="4.4" height="15.0" fill="rgb(212,200,16)" rx="2" ry="2" />
<text  x="626.38" y="1599.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_pausable&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (2 samples, 0.04%)</title><rect x="689.8" y="1509" width="0.4" height="15.0" fill="rgb(218,26,52)" rx="2" ry="2" />
<text  x="692.77" y="1519.5" ></text>
</g>
<g >
<title>sstables::sstable_directory::reshape (1 samples, 0.02%)</title><rect x="15.5" y="1685" width="0.2" height="15.0" fill="rgb(210,15,46)" rx="2" ry="2" />
<text  x="18.51" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="82.3" y="1749" width="0.3" height="15.0" fill="rgb(225,77,25)" rx="2" ry="2" />
<text  x="85.34" y="1759.5" ></text>
</g>
<g >
<title>std::queue&lt;reader_concurrency_semaphore::entry, seastar::circular_buffer&lt;reader_concurrency_semaphore::entry, std::allocator&lt;reader_concurrency_semaphore::entry&gt; &gt; &gt;::pop (2 samples, 0.04%)</title><rect x="637.9" y="1637" width="0.5" height="15.0" fill="rgb(240,9,0)" rx="2" ry="2" />
<text  x="640.94" y="1647.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::got_cl (1 samples, 0.02%)</title><rect x="698.1" y="1621" width="0.3" height="15.0" fill="rgb(254,66,53)" rx="2" ry="2" />
<text  x="701.15" y="1631.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value_view, std::allocator&lt;cql3::raw_value_view&gt; &gt;::_M_check_len (2 samples, 0.04%)</title><rect x="838.9" y="1509" width="0.4" height="15.0" fill="rgb(222,130,44)" rx="2" ry="2" />
<text  x="841.87" y="1519.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;std::unordered_map&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, std::optional&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;, std::hash&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, std::equal_to&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, std::optional&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt; &gt; &gt; &gt;::_M_reset (1 samples, 0.02%)</title><rect x="855.9" y="1557" width="0.2" height="15.0" fill="rgb(244,177,36)" rx="2" ry="2" />
<text  x="858.85" y="1567.5" ></text>
</g>
<g >
<title>do_parse_schema_tables (1 samples, 0.02%)</title><rect x="78.8" y="1397" width="0.2" height="15.0" fill="rgb(209,187,25)" rx="2" ry="2" />
<text  x="81.81" y="1407.5" ></text>
</g>
<g >
<title>__tls_init (1 samples, 0.02%)</title><rect x="1113.0" y="1397" width="0.2" height="15.0" fill="rgb(241,218,50)" rx="2" ry="2" />
<text  x="1116.02" y="1407.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (10 samples, 0.19%)</title><rect x="40.4" y="1477" width="2.2" height="15.0" fill="rgb(205,129,39)" rx="2" ry="2" />
<text  x="43.44" y="1487.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (2 samples, 0.04%)</title><rect x="38.7" y="1397" width="0.4" height="15.0" fill="rgb(221,75,23)" rx="2" ry="2" />
<text  x="41.67" y="1407.5" ></text>
</g>
<g >
<title>std::apply&lt;service::client_state::has_column_family_access (2 samples, 0.04%)</title><rect x="819.9" y="1557" width="0.4" height="15.0" fill="rgb(213,218,3)" rx="2" ry="2" />
<text  x="822.90" y="1567.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="645" width="0.3" height="15.0" fill="rgb(239,67,25)" rx="2" ry="2" />
<text  x="13.44" y="655.5" ></text>
</g>
<g >
<title>mutation::set_clustered_cell (1 samples, 0.02%)</title><rect x="101.8" y="1573" width="0.2" height="15.0" fill="rgb(248,217,18)" rx="2" ry="2" />
<text  x="104.75" y="1583.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (6 samples, 0.11%)</title><rect x="643.7" y="1637" width="1.3" height="15.0" fill="rgb(245,180,54)" rx="2" ry="2" />
<text  x="646.67" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;11ul, cql3::expr::untyped_constant&gt; (1 samples, 0.02%)</title><rect x="53.7" y="1301" width="0.2" height="15.0" fill="rgb(224,180,6)" rx="2" ry="2" />
<text  x="56.67" y="1311.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (1 samples, 0.02%)</title><rect x="23.9" y="1365" width="0.2" height="15.0" fill="rgb(222,192,41)" rx="2" ry="2" />
<text  x="26.90" y="1375.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIN7seastar10shared_ptrIN4cql34termEEEEER18overloaded_functorIJZNS6_4expr12prepare_termERKNSB_10expressionER8databaseRKNS4_13basic_sstringIcjLj15ELb1EEENS4_13lw_shared_ptrINS6_20column_specificationEEEE3$_0ZNSB_12prepare_termESE_SG_SK_SN_E3$_1ZNSB_12prepare_termESE_SG_SK_SN_E3$_2ZNSB_12prepare_termESE_SG_SK_SN_E3$_3ZNSB_12prepare_termESE_SG_SK_SN_E3$_4ZNSB_12prepare_termESE_SG_SK_SN_E3$_5ZNSB_12prepare_termESE_SG_SK_SN_E3$_6ZNSB_12prepare_termESE_SG_SK_SN_E3$_7ZNSB_12prepare_termESE_SG_SK_SN_E3$_8ZNSB_12prepare_termESE_SG_SK_SN_E3$_9ZNSB_12prepare_termESE_SG_SK_SN_E4$_10ZNSB_12prepare_termESE_SG_SK_SN_E4$_11ZNSB_12prepare_termESE_SG_SK_SN_E4$_12ZNSB_12prepare_termESE_SG_SK_SN_E4$_13ZNSB_12prepare_termESE_SG_SK_SN_E4$_14ZNSB_12prepare_termESE_SG_SK_SN_E4$_15EERSt7variantIJNSB_11conjunctionENSB_15binary_operatorENSB_12column_valueENSB_5tokenENSB_21unresolved_identifierENSB_25column_mutation_attributeENSB_13function_callENSB_4castENSB_15field_selectionENSB_4nullENSB_13bind_variableENSB_16untyped_constantENSB_8constantENSB_17tuple_constructorENSB_22collection_constructorENSB_20usertype_constructorEEEEJEEESt16integer_sequenceImJLm11EEEE14__visit_invokeES15_S1O_ (1 samples, 0.02%)</title><rect x="66.7" y="1557" width="0.2" height="15.0" fill="rgb(236,66,17)" rx="2" ry="2" />
<text  x="69.68" y="1567.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.04%)</title><rect x="807.8" y="1525" width="0.4" height="15.0" fill="rgb(224,13,18)" rx="2" ry="2" />
<text  x="810.77" y="1535.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::vector (1 samples, 0.02%)</title><rect x="59.6" y="1461" width="0.2" height="15.0" fill="rgb(239,184,5)" rx="2" ry="2" />
<text  x="62.63" y="1471.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_M_reset (1 samples, 0.02%)</title><rect x="1074.6" y="1525" width="0.3" height="15.0" fill="rgb(227,71,1)" rx="2" ry="2" />
<text  x="1077.65" y="1535.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="59.2" y="1349" width="0.2" height="15.0" fill="rgb(222,107,21)" rx="2" ry="2" />
<text  x="62.19" y="1359.5" ></text>
</g>
<g >
<title>service::storage_proxy::query (1 samples, 0.02%)</title><rect x="78.8" y="1365" width="0.2" height="15.0" fill="rgb(211,80,2)" rx="2" ry="2" />
<text  x="81.81" y="1375.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (1 samples, 0.02%)</title><rect x="330.0" y="1557" width="0.3" height="15.0" fill="rgb(250,149,51)" rx="2" ry="2" />
<text  x="333.03" y="1567.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::consume_with&lt;row::apply_monotonically (1 samples, 0.02%)</title><rect x="11.5" y="1541" width="0.3" height="15.0" fill="rgb(251,197,1)" rx="2" ry="2" />
<text  x="14.54" y="1551.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (1 samples, 0.02%)</title><rect x="601.3" y="1541" width="0.2" height="15.0" fill="rgb(232,58,8)" rx="2" ry="2" />
<text  x="604.32" y="1551.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="632.2" y="1541" width="0.2" height="15.0" fill="rgb(235,44,44)" rx="2" ry="2" />
<text  x="635.20" y="1551.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (1 samples, 0.02%)</title><rect x="1050.8" y="1477" width="0.2" height="15.0" fill="rgb(211,215,6)" rx="2" ry="2" />
<text  x="1053.83" y="1487.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::check_access (11 samples, 0.21%)</title><rect x="74.8" y="1637" width="2.5" height="15.0" fill="rgb(229,55,34)" rx="2" ry="2" />
<text  x="77.84" y="1647.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;cql3::restrictions::single_column_restriction, false&gt;::make&lt;column_definition const&amp;&gt; (1 samples, 0.02%)</title><rect x="10.4" y="85" width="0.3" height="15.0" fill="rgb(242,83,24)" rx="2" ry="2" />
<text  x="13.44" y="95.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="1029" width="0.3" height="15.0" fill="rgb(250,229,0)" rx="2" ry="2" />
<text  x="13.44" y="1039.5" ></text>
</g>
<g >
<title>CryptoPP::Weak1::MD5::Transform (1 samples, 0.02%)</title><rect x="10.0" y="1781" width="0.2" height="15.0" fill="rgb(223,195,50)" rx="2" ry="2" />
<text  x="13.00" y="1791.5" ></text>
</g>
<g >
<title>seastar::future&lt;utils::small_vector&lt;service::storage_proxy::unique_response_handler, 1ul&gt; &gt;::then_impl&lt;service::storage_proxy::mutate_internal&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt; &gt; (11 samples, 0.21%)</title><rect x="1119.0" y="1461" width="2.4" height="15.0" fill="rgb(212,77,49)" rx="2" ry="2" />
<text  x="1121.98" y="1471.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="1733" width="0.3" height="15.0" fill="rgb(218,199,36)" rx="2" ry="2" />
<text  x="13.44" y="1743.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEENK4$_43clERKNSF_15binary_operatorEEUlRKNSF_12column_valueEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_17tuple_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlNSF_5tokenEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlSS_E_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_11conjunctionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_8constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_21unresolved_identifierEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_25column_mutation_attributeEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13function_callEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4castEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_15field_selectionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4nullEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13bind_variableEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_16untyped_constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_22collection_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_20usertype_constructorEE_EERS4_IJS14_SQ_ST_S11_S1C_S1G_S1K_S1O_S1S_S1W_S20_S24_S18_SX_S28_S2C_EEEJEEESt16integer_sequenceImJLm2EEEE14__visit_invokeES2H_S2J_ (115 samples, 2.15%)</title><rect x="875.5" y="1525" width="25.3" height="15.0" fill="rgb(228,59,8)" rx="2" ry="2" />
<text  x="878.48" y="1535.5" >_..</text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::need_filtering (19 samples, 0.36%)</title><rect x="932.6" y="1573" width="4.2" height="15.0" fill="rgb(234,151,47)" rx="2" ry="2" />
<text  x="935.61" y="1583.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.02%)</title><rect x="58.5" y="1301" width="0.2" height="15.0" fill="rgb(206,120,52)" rx="2" ry="2" />
<text  x="61.52" y="1311.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::push_static_row (11 samples, 0.21%)</title><rect x="294.7" y="1413" width="2.5" height="15.0" fill="rgb(254,153,31)" rx="2" ry="2" />
<text  x="297.74" y="1423.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (3 samples, 0.06%)</title><rect x="250.9" y="1269" width="0.6" height="15.0" fill="rgb(218,45,38)" rx="2" ry="2" />
<text  x="253.85" y="1279.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (10 samples, 0.19%)</title><rect x="683.6" y="1605" width="2.2" height="15.0" fill="rgb(238,88,33)" rx="2" ry="2" />
<text  x="686.59" y="1615.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::do_wait_admission (58 samples, 1.08%)</title><rect x="1001.0" y="1381" width="12.8" height="15.0" fill="rgb(224,102,39)" rx="2" ry="2" />
<text  x="1003.98" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_allocate_node&lt;nonwrapping_interval&lt;dht::token&gt;, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; (4 samples, 0.07%)</title><rect x="1148.5" y="1605" width="0.9" height="15.0" fill="rgb(208,13,2)" rx="2" ry="2" />
<text  x="1151.53" y="1615.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::waiting_for (1 samples, 0.02%)</title><rect x="708.7" y="1573" width="0.3" height="15.0" fill="rgb(206,39,3)" rx="2" ry="2" />
<text  x="711.74" y="1583.5" ></text>
</g>
<g >
<title>ser::serializer&lt;partition_key&gt;::write&lt;bytes_ostream&gt; (2 samples, 0.04%)</title><rect x="1125.8" y="1317" width="0.5" height="15.0" fill="rgb(228,16,12)" rx="2" ry="2" />
<text  x="1128.82" y="1327.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (1 samples, 0.02%)</title><rect x="818.6" y="1445" width="0.2" height="15.0" fill="rgb(225,35,4)" rx="2" ry="2" />
<text  x="821.58" y="1455.5" ></text>
</g>
<g >
<title>absl::container_internal::operator== (2 samples, 0.04%)</title><rect x="816.8" y="1477" width="0.5" height="15.0" fill="rgb(235,47,0)" rx="2" ry="2" />
<text  x="819.81" y="1487.5" ></text>
</g>
<g >
<title>data_value::~data_value (1 samples, 0.02%)</title><rect x="69.8" y="1445" width="0.2" height="15.0" fill="rgb(226,114,30)" rx="2" ry="2" />
<text  x="72.77" y="1455.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_Optional_payload_base (2 samples, 0.04%)</title><rect x="1085.2" y="1509" width="0.5" height="15.0" fill="rgb(209,145,6)" rx="2" ry="2" />
<text  x="1088.23" y="1519.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, seastar::lw_shared_ptr&lt;cql3::column_condition::raw&gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, seastar::lw_shared_ptr&lt;cql3::column_condition::raw&gt; &gt; &gt; &gt;::_Vector_impl::_Vector_impl (1 samples, 0.02%)</title><rect x="61.2" y="1461" width="0.2" height="15.0" fill="rgb(224,9,18)" rx="2" ry="2" />
<text  x="64.17" y="1471.5" ></text>
</g>
<g >
<title>managed_bytes::operator= (2 samples, 0.04%)</title><rect x="1092.1" y="1573" width="0.4" height="15.0" fill="rgb(252,6,16)" rx="2" ry="2" />
<text  x="1095.07" y="1583.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="439.0" y="1445" width="0.2" height="15.0" fill="rgb(216,217,41)" rx="2" ry="2" />
<text  x="441.99" y="1455.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_M_reset (1 samples, 0.02%)</title><rect x="94.7" y="1589" width="0.2" height="15.0" fill="rgb(215,51,46)" rx="2" ry="2" />
<text  x="97.70" y="1599.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::_M_range_initialize&lt;nonwrapping_interval&lt;dht::ring_position&gt; const*&gt; (5 samples, 0.09%)</title><rect x="931.5" y="1541" width="1.1" height="15.0" fill="rgb(232,214,37)" rx="2" ry="2" />
<text  x="934.50" y="1551.5" ></text>
</g>
<g >
<title>seastar::future&lt;query::result_memory_accounter&gt;::get0 (4 samples, 0.07%)</title><rect x="613.9" y="1589" width="0.9" height="15.0" fill="rgb(211,9,34)" rx="2" ry="2" />
<text  x="616.90" y="1599.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (13 samples, 0.24%)</title><rect x="79.5" y="1733" width="2.8" height="15.0" fill="rgb(254,46,40)" rx="2" ry="2" />
<text  x="82.48" y="1743.5" ></text>
</g>
<g >
<title>seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;::swap (2 samples, 0.04%)</title><rect x="747.6" y="1557" width="0.4" height="15.0" fill="rgb(231,122,6)" rx="2" ry="2" />
<text  x="750.56" y="1567.5" ></text>
</g>
<g >
<title>managed_bytes::operator= (3 samples, 0.06%)</title><rect x="924.7" y="1557" width="0.6" height="15.0" fill="rgb(244,17,11)" rx="2" ry="2" />
<text  x="927.67" y="1567.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::emplace_back&lt;mutation_reader_merger::reader_and_fragment&gt; (1 samples, 0.02%)</title><rect x="303.6" y="1429" width="0.2" height="15.0" fill="rgb(235,35,22)" rx="2" ry="2" />
<text  x="306.57" y="1439.5" ></text>
</g>
<g >
<title>db::schema_tables::merge_tables_and_views (1 samples, 0.02%)</title><rect x="100.2" y="1637" width="0.2" height="15.0" fill="rgb(206,169,36)" rx="2" ry="2" />
<text  x="103.21" y="1647.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, unsigned int, std::_Identity&lt;unsigned int&gt;, std::less&lt;unsigned int&gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;unsigned int&gt; &gt;::find (1 samples, 0.02%)</title><rect x="36.0" y="1445" width="0.2" height="15.0" fill="rgb(214,201,47)" rx="2" ry="2" />
<text  x="39.03" y="1455.5" ></text>
</g>
<g >
<title>auth::resource::resource (13 samples, 0.24%)</title><rect x="765.6" y="1541" width="2.9" height="15.0" fill="rgb(227,124,18)" rx="2" ry="2" />
<text  x="768.64" y="1551.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::small_vector (3 samples, 0.06%)</title><rect x="469.4" y="1413" width="0.7" height="15.0" fill="rgb(231,145,28)" rx="2" ry="2" />
<text  x="472.43" y="1423.5" ></text>
</g>
<g >
<title>seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::expand (20 samples, 0.37%)</title><rect x="319.7" y="1461" width="4.4" height="15.0" fill="rgb(240,204,43)" rx="2" ry="2" />
<text  x="322.67" y="1471.5" ></text>
</g>
<g >
<title>list_reader_selector::~list_reader_selector (5 samples, 0.09%)</title><rect x="592.3" y="1509" width="1.1" height="15.0" fill="rgb(240,191,41)" rx="2" ry="2" />
<text  x="595.28" y="1519.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, database::query (1 samples, 0.02%)</title><rect x="690.4" y="1653" width="0.3" height="15.0" fill="rgb(251,220,51)" rx="2" ry="2" />
<text  x="693.43" y="1663.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::reserve (1 samples, 0.02%)</title><rect x="157.8" y="1557" width="0.2" height="15.0" fill="rgb(245,222,41)" rx="2" ry="2" />
<text  x="160.78" y="1567.5" ></text>
</g>
<g >
<title>to_hex (1 samples, 0.02%)</title><rect x="77.9" y="1669" width="0.3" height="15.0" fill="rgb(238,62,10)" rx="2" ry="2" />
<text  x="80.93" y="1679.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (1 samples, 0.02%)</title><rect x="223.5" y="1301" width="0.2" height="15.0" fill="rgb(233,105,48)" rx="2" ry="2" />
<text  x="226.50" y="1311.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::fetch (1 samples, 0.02%)</title><rect x="100.4" y="1285" width="0.3" height="15.0" fill="rgb(251,199,50)" rx="2" ry="2" />
<text  x="103.43" y="1295.5" ></text>
</g>
<g >
<title>sstables::file_writer::write (1 samples, 0.02%)</title><rect x="17.5" y="1509" width="0.2" height="15.0" fill="rgb(210,159,16)" rx="2" ry="2" />
<text  x="20.50" y="1519.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (1 samples, 0.02%)</title><rect x="331.1" y="1541" width="0.3" height="15.0" fill="rgb(240,76,12)" rx="2" ry="2" />
<text  x="334.14" y="1551.5" ></text>
</g>
<g >
<title>database::find_column_family (4 samples, 0.07%)</title><rect x="755.7" y="1525" width="0.9" height="15.0" fill="rgb(212,221,18)" rx="2" ry="2" />
<text  x="758.72" y="1535.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.02%)</title><rect x="808.2" y="1509" width="0.2" height="15.0" fill="rgb(247,173,26)" rx="2" ry="2" />
<text  x="811.21" y="1519.5" ></text>
</g>
<g >
<title>reader_permit::consume_resources (1 samples, 0.02%)</title><rect x="261.7" y="1301" width="0.2" height="15.0" fill="rgb(207,13,49)" rx="2" ry="2" />
<text  x="264.66" y="1311.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume_in_thread&lt;stable_flattened_mutations_consumer&lt;compact_for_compaction&lt;sstables::compacting_sstable_writer, noop_compacted_fragments_consumer&gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="1130.0" y="1333" width="0.2" height="15.0" fill="rgb(217,123,5)" rx="2" ry="2" />
<text  x="1133.01" y="1343.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_pausable&lt;scanning_reader::consumer&gt; (1 samples, 0.02%)</title><rect x="100.4" y="1109" width="0.3" height="15.0" fill="rgb(247,42,37)" rx="2" ry="2" />
<text  x="103.43" y="1119.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::CommonTokenStream (1 samples, 0.02%)</title><rect x="19.9" y="1573" width="0.2" height="15.0" fill="rgb(231,199,6)" rx="2" ry="2" />
<text  x="22.93" y="1583.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;interval_bound&lt;dht::ring_position&gt;, false, false&gt;::_Optional_base (1 samples, 0.02%)</title><rect x="1027.0" y="1445" width="0.2" height="15.0" fill="rgb(211,73,8)" rx="2" ry="2" />
<text  x="1030.01" y="1455.5" ></text>
</g>
<g >
<title>reader_permit::used_guard::~used_guard (56 samples, 1.05%)</title><rect x="117.2" y="1605" width="12.3" height="15.0" fill="rgb(223,223,54)" rx="2" ry="2" />
<text  x="120.19" y="1615.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.02%)</title><rect x="50.6" y="1285" width="0.2" height="15.0" fill="rgb(252,18,53)" rx="2" ry="2" />
<text  x="53.58" y="1295.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.02%)</title><rect x="813.9" y="1429" width="0.3" height="15.0" fill="rgb(223,208,51)" rx="2" ry="2" />
<text  x="816.94" y="1439.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="451.3" y="1541" width="0.3" height="15.0" fill="rgb(219,193,1)" rx="2" ry="2" />
<text  x="454.34" y="1551.5" ></text>
</g>
<g >
<title>partition_snapshot_row_cursor::prepare_heap (1 samples, 0.02%)</title><rect x="11.1" y="1653" width="0.2" height="15.0" fill="rgb(229,120,21)" rx="2" ry="2" />
<text  x="14.10" y="1663.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::push_back (1 samples, 0.02%)</title><rect x="46.8" y="1429" width="0.3" height="15.0" fill="rgb(235,118,1)" rx="2" ry="2" />
<text  x="49.83" y="1439.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (6 samples, 0.11%)</title><rect x="1014.4" y="1349" width="1.4" height="15.0" fill="rgb(208,189,24)" rx="2" ry="2" />
<text  x="1017.43" y="1359.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_live_endpoints (71 samples, 1.33%)</title><rect x="1052.4" y="1477" width="15.6" height="15.0" fill="rgb(217,76,43)" rx="2" ry="2" />
<text  x="1055.37" y="1487.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::leaf_node::free (1 samples, 0.02%)</title><rect x="853.4" y="1397" width="0.2" height="15.0" fill="rgb(254,158,33)" rx="2" ry="2" />
<text  x="856.42" y="1407.5" ></text>
</g>
<g >
<title>mutation_fragment::destroy_data (31 samples, 0.58%)</title><rect x="426.0" y="1413" width="6.8" height="15.0" fill="rgb(210,132,36)" rx="2" ry="2" />
<text  x="428.98" y="1423.5" ></text>
</g>
<g >
<title>bytes_view_hasher::update (3 samples, 0.06%)</title><rect x="729.2" y="1445" width="0.7" height="15.0" fill="rgb(241,99,16)" rx="2" ry="2" />
<text  x="732.25" y="1455.5" ></text>
</g>
<g >
<title>__strlen_avx2 (1 samples, 0.02%)</title><rect x="26.5" y="1413" width="0.3" height="15.0" fill="rgb(239,73,8)" rx="2" ry="2" />
<text  x="29.54" y="1423.5" ></text>
</g>
<g >
<title>mutation_querier::prepare_writers (2 samples, 0.04%)</title><rect x="365.1" y="1333" width="0.4" height="15.0" fill="rgb(206,197,26)" rx="2" ry="2" />
<text  x="368.10" y="1343.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (3 samples, 0.06%)</title><rect x="813.9" y="1445" width="0.7" height="15.0" fill="rgb(226,87,12)" rx="2" ry="2" />
<text  x="816.94" y="1455.5" ></text>
</g>
<g >
<title>seastar::futurize_invoke&lt;seastar::future&lt;void&gt;  (2 samples, 0.04%)</title><rect x="689.8" y="1573" width="0.4" height="15.0" fill="rgb(210,93,27)" rx="2" ry="2" />
<text  x="692.77" y="1583.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="1605" width="0.3" height="15.0" fill="rgb(221,167,10)" rx="2" ry="2" />
<text  x="13.44" y="1615.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;void&gt; &gt;::invoke&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::mutate_locally (1 samples, 0.02%)</title><rect x="1120.7" y="1333" width="0.3" height="15.0" fill="rgb(214,88,44)" rx="2" ry="2" />
<text  x="1123.74" y="1343.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_prepared (542 samples, 10.13%)</title><rect x="722.6" y="1621" width="119.6" height="15.0" fill="rgb(222,97,31)" rx="2" ry="2" />
<text  x="725.63" y="1631.5" >single_node_cq..</text>
</g>
<g >
<title>sstables::mx::mx_sstable_mutation_reader::initialize (1 samples, 0.02%)</title><rect x="1130.0" y="1061" width="0.2" height="15.0" fill="rgb(217,212,27)" rx="2" ry="2" />
<text  x="1133.01" y="1071.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;dht::token, std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt;, std::allocator&lt;std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;dht::token&gt;, std::hash&lt;dht::token&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (2 samples, 0.04%)</title><rect x="1067.1" y="1445" width="0.5" height="15.0" fill="rgb(209,143,0)" rx="2" ry="2" />
<text  x="1070.15" y="1455.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (2 samples, 0.04%)</title><rect x="1094.3" y="1557" width="0.4" height="15.0" fill="rgb(222,87,29)" rx="2" ry="2" />
<text  x="1097.28" y="1567.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;std::_List_iterator&lt;flat_mutation_reader&gt;, mutation_reader_merger::close (2 samples, 0.04%)</title><rect x="1165.5" y="1557" width="0.5" height="15.0" fill="rgb(249,203,29)" rx="2" ry="2" />
<text  x="1168.52" y="1567.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;std::vector&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::allocator&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, false, false&gt;::_Optional_base (1 samples, 0.02%)</title><rect x="839.3" y="1557" width="0.2" height="15.0" fill="rgb(213,19,46)" rx="2" ry="2" />
<text  x="842.31" y="1567.5" ></text>
</g>
<g >
<title>std::optional&lt;reader_concurrency_semaphore::entry&gt;::optional&lt;reader_concurrency_semaphore::entry, true&gt; (4 samples, 0.07%)</title><rect x="1009.6" y="1301" width="0.9" height="15.0" fill="rgb(254,202,17)" rx="2" ry="2" />
<text  x="1012.58" y="1311.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (2 samples, 0.04%)</title><rect x="44.4" y="1349" width="0.4" height="15.0" fill="rgb(216,132,54)" rx="2" ry="2" />
<text  x="47.41" y="1359.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_last_fragment_kind, 4ul&gt;::~small_vector (3 samples, 0.06%)</title><rect x="596.9" y="1525" width="0.7" height="15.0" fill="rgb(254,79,30)" rx="2" ry="2" />
<text  x="599.91" y="1535.5" ></text>
</g>
<g >
<title>cql3::restrictions::(anonymous namespace)::range_from_bytes (97 samples, 1.81%)</title><rect x="902.6" y="1557" width="21.4" height="15.0" fill="rgb(232,159,43)" rx="2" ry="2" />
<text  x="905.61" y="1567.5" >c..</text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.02%)</title><rect x="55.7" y="1205" width="0.2" height="15.0" fill="rgb(222,156,30)" rx="2" ry="2" />
<text  x="58.66" y="1215.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.06%)</title><rect x="102.9" y="1653" width="0.6" height="15.0" fill="rgb(251,175,20)" rx="2" ry="2" />
<text  x="105.86" y="1663.5" ></text>
</g>
<g >
<title>std::apply&lt;auth::get_permissions (1 samples, 0.02%)</title><rect x="802.5" y="1461" width="0.2" height="15.0" fill="rgb(210,72,21)" rx="2" ry="2" />
<text  x="805.47" y="1471.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::contains&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (12 samples, 0.22%)</title><rect x="827.4" y="1557" width="2.6" height="15.0" fill="rgb(250,204,0)" rx="2" ry="2" />
<text  x="830.40" y="1567.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reclaiming_disabled&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::get_static_row (4 samples, 0.07%)</title><rect x="296.3" y="1381" width="0.9" height="15.0" fill="rgb(225,154,18)" rx="2" ry="2" />
<text  x="299.29" y="1391.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_initialize_map (1 samples, 0.02%)</title><rect x="19.9" y="1557" width="0.2" height="15.0" fill="rgb(240,59,4)" rx="2" ry="2" />
<text  x="22.93" y="1567.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (1 samples, 0.02%)</title><rect x="17.3" y="1685" width="0.2" height="15.0" fill="rgb(236,161,2)" rx="2" ry="2" />
<text  x="20.28" y="1695.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::consume_with&lt;row::apply_monotonically (1 samples, 0.02%)</title><rect x="11.5" y="1557" width="0.3" height="15.0" fill="rgb(252,98,10)" rx="2" ry="2" />
<text  x="14.54" y="1567.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.02%)</title><rect x="546.8" y="1429" width="0.3" height="15.0" fill="rgb(210,94,23)" rx="2" ry="2" />
<text  x="549.84" y="1439.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;::operator (10 samples, 0.19%)</title><rect x="727.7" y="1477" width="2.2" height="15.0" fill="rgb(205,191,19)" rx="2" ry="2" />
<text  x="730.70" y="1487.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::push_back (1 samples, 0.02%)</title><rect x="37.6" y="1477" width="0.2" height="15.0" fill="rgb(236,99,17)" rx="2" ry="2" />
<text  x="40.57" y="1487.5" ></text>
</g>
<g >
<title>atomic_cell_or_collection::external_memory_usage (3 samples, 0.06%)</title><rect x="256.8" y="1269" width="0.7" height="15.0" fill="rgb(217,39,41)" rx="2" ry="2" />
<text  x="259.81" y="1279.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (3 samples, 0.06%)</title><rect x="815.3" y="1445" width="0.6" height="15.0" fill="rgb(229,175,14)" rx="2" ry="2" />
<text  x="818.27" y="1455.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::result_memory_accounter (1 samples, 0.02%)</title><rect x="609.9" y="1557" width="0.2" height="15.0" fill="rgb(254,25,31)" rx="2" ry="2" />
<text  x="612.93" y="1567.5" ></text>
</g>
<g >
<title>__strlen_avx2 (1 samples, 0.02%)</title><rect x="39.3" y="1477" width="0.3" height="15.0" fill="rgb(238,167,52)" rx="2" ry="2" />
<text  x="42.33" y="1487.5" ></text>
</g>
<g >
<title>__tls_init (1 samples, 0.02%)</title><rect x="199.5" y="1397" width="0.2" height="15.0" fill="rgb(239,118,52)" rx="2" ry="2" />
<text  x="202.46" y="1407.5" ></text>
</g>
<g >
<title>cql3::operation::fill_prepare_context (1 samples, 0.02%)</title><rect x="66.5" y="1589" width="0.2" height="15.0" fill="rgb(250,228,49)" rx="2" ry="2" />
<text  x="69.46" y="1599.5" ></text>
</g>
<g >
<title>operator new (9 samples, 0.17%)</title><rect x="947.6" y="1525" width="2.0" height="15.0" fill="rgb(211,105,52)" rx="2" ry="2" />
<text  x="950.60" y="1535.5" ></text>
</g>
<g >
<title>std::hash&lt;auth::resource&gt;::operator (16 samples, 0.30%)</title><rect x="793.2" y="1301" width="3.5" height="15.0" fill="rgb(223,52,6)" rx="2" ry="2" />
<text  x="796.21" y="1311.5" ></text>
</g>
<g >
<title>antlr3::DefaultAllocPolicy::StackType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::pop (1 samples, 0.02%)</title><rect x="43.7" y="1461" width="0.3" height="15.0" fill="rgb(219,37,36)" rx="2" ry="2" />
<text  x="46.75" y="1471.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.02%)</title><rect x="37.3" y="1365" width="0.3" height="15.0" fill="rgb(216,63,41)" rx="2" ry="2" />
<text  x="40.35" y="1375.5" ></text>
</g>
<g >
<title>memtable::memtable_encoding_stats_collector::update (1 samples, 0.02%)</title><rect x="1114.3" y="1397" width="0.3" height="15.0" fill="rgb(232,98,45)" rx="2" ry="2" />
<text  x="1117.35" y="1407.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (1 samples, 0.02%)</title><rect x="187.8" y="1397" width="0.2" height="15.0" fill="rgb(226,114,0)" rx="2" ry="2" />
<text  x="190.77" y="1407.5" ></text>
</g>
<g >
<title>query_mutations_on_all_shards (3 samples, 0.06%)</title><rect x="100.4" y="1509" width="0.7" height="15.0" fill="rgb(208,181,17)" rx="2" ry="2" />
<text  x="103.43" y="1519.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::~BaseRecognizer (2 samples, 0.04%)</title><rect x="21.7" y="1541" width="0.4" height="15.0" fill="rgb(210,12,17)" rx="2" ry="2" />
<text  x="24.69" y="1551.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="530.1" y="1461" width="0.2" height="15.0" fill="rgb(238,108,20)" rx="2" ry="2" />
<text  x="533.08" y="1471.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.02%)</title><rect x="59.4" y="1269" width="0.2" height="15.0" fill="rgb(249,65,39)" rx="2" ry="2" />
<text  x="62.41" y="1279.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="781.3" y="1381" width="0.2" height="15.0" fill="rgb(238,133,7)" rx="2" ry="2" />
<text  x="784.30" y="1391.5" ></text>
</g>
<g >
<title>list_reader_selector::list_reader_selector (1 samples, 0.02%)</title><rect x="455.8" y="1493" width="0.2" height="15.0" fill="rgb(213,136,35)" rx="2" ry="2" />
<text  x="458.75" y="1503.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;managed_bytes&gt;::dispose (2 samples, 0.04%)</title><rect x="898.4" y="1509" width="0.5" height="15.0" fill="rgb(244,10,46)" rx="2" ry="2" />
<text  x="901.42" y="1519.5" ></text>
</g>
<g >
<title>row_cache::do_update (1 samples, 0.02%)</title><rect x="690.9" y="1557" width="0.2" height="15.0" fill="rgb(212,141,30)" rx="2" ry="2" />
<text  x="693.87" y="1567.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (26 samples, 0.49%)</title><rect x="1112.4" y="1605" width="5.7" height="15.0" fill="rgb(252,223,51)" rx="2" ry="2" />
<text  x="1115.36" y="1615.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::read_next (1 samples, 0.02%)</title><rect x="100.4" y="1029" width="0.3" height="15.0" fill="rgb(224,82,19)" rx="2" ry="2" />
<text  x="103.43" y="1039.5" ></text>
</g>
<g >
<title>frozen_mutation::partition (1 samples, 0.02%)</title><rect x="1113.5" y="1397" width="0.2" height="15.0" fill="rgb(214,168,42)" rx="2" ry="2" />
<text  x="1116.47" y="1407.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (1 samples, 0.02%)</title><rect x="973.6" y="1413" width="0.3" height="15.0" fill="rgb(217,26,47)" rx="2" ry="2" />
<text  x="976.63" y="1423.5" ></text>
</g>
<g >
<title>deletable_row::apply_monotonically (1 samples, 0.02%)</title><rect x="11.5" y="1589" width="0.3" height="15.0" fill="rgb(248,68,43)" rx="2" ry="2" />
<text  x="14.54" y="1599.5" ></text>
</g>
<g >
<title>db::schema_tables::calculate_schema_digest (4 samples, 0.07%)</title><rect x="100.4" y="1589" width="0.9" height="15.0" fill="rgb(211,130,46)" rx="2" ry="2" />
<text  x="103.43" y="1599.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;::operator (11 samples, 0.21%)</title><rect x="744.7" y="1445" width="2.4" height="15.0" fill="rgb(251,30,48)" rx="2" ry="2" />
<text  x="747.69" y="1455.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.04%)</title><rect x="45.3" y="1381" width="0.4" height="15.0" fill="rgb(220,107,51)" rx="2" ry="2" />
<text  x="48.29" y="1391.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (1 samples, 0.02%)</title><rect x="915.8" y="1525" width="0.3" height="15.0" fill="rgb(245,98,24)" rx="2" ry="2" />
<text  x="918.84" y="1535.5" ></text>
</g>
<g >
<title>utils::basic_ihistogram&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt; &gt;::mark&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; (1 samples, 0.02%)</title><rect x="613.7" y="1557" width="0.2" height="15.0" fill="rgb(236,57,24)" rx="2" ry="2" />
<text  x="616.67" y="1567.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql3::restrictions::statement_restrictions&gt;::shared_ptr_count_for&lt;database&amp;, seastar::lw_shared_ptr&lt;schema const&gt;&amp;, cql3::statements::statement_type const&amp;, std::vector&lt;seastar::shared_ptr&lt;cql3::relation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::relation&gt; &gt; &gt;, cql3::prepare_context&amp;, bool, bool&amp;, bool&amp;&gt; (1 samples, 0.02%)</title><rect x="10.4" y="149" width="0.3" height="15.0" fill="rgb(234,5,5)" rx="2" ry="2" />
<text  x="13.44" y="159.5" ></text>
</g>
<g >
<title>db::filter_for_query (2 samples, 0.04%)</title><rect x="1041.6" y="1493" width="0.4" height="15.0" fill="rgb(252,153,47)" rx="2" ry="2" />
<text  x="1044.56" y="1503.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::move_it (2 samples, 0.04%)</title><rect x="648.3" y="1621" width="0.4" height="15.0" fill="rgb(215,45,47)" rx="2" ry="2" />
<text  x="651.30" y="1631.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="507.6" y="1461" width="0.2" height="15.0" fill="rgb(224,25,25)" rx="2" ry="2" />
<text  x="510.59" y="1471.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (15 samples, 0.28%)</title><rect x="245.1" y="1269" width="3.3" height="15.0" fill="rgb(218,187,26)" rx="2" ry="2" />
<text  x="248.12" y="1279.5" ></text>
</g>
<g >
<title>serialize (1 samples, 0.02%)</title><rect x="101.8" y="1541" width="0.2" height="15.0" fill="rgb(250,66,52)" rx="2" ry="2" />
<text  x="104.75" y="1551.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::execution_loop (2,425 samples, 45.33%)</title><rect x="103.5" y="1653" width="534.9" height="15.0" fill="rgb(253,229,36)" rx="2" ry="2" />
<text  x="106.52" y="1663.5" >reader_concurrency_semaphore::execution_loop</text>
</g>
<g >
<title>reader_permit::impl::signal (1 samples, 0.02%)</title><rect x="325.8" y="1477" width="0.3" height="15.0" fill="rgb(252,58,41)" rx="2" ry="2" />
<text  x="328.84" y="1487.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::clear (1 samples, 0.02%)</title><rect x="821.4" y="1573" width="0.3" height="15.0" fill="rgb(222,90,11)" rx="2" ry="2" />
<text  x="824.44" y="1583.5" ></text>
</g>
<g >
<title>std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt;::_M_realloc_insert&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; (1 samples, 0.02%)</title><rect x="290.6" y="1365" width="0.2" height="15.0" fill="rgb(206,91,9)" rx="2" ry="2" />
<text  x="293.55" y="1375.5" ></text>
</g>
<g >
<title>seastar::internal::when_all_state&lt;seastar::internal::extract_values_from_futures_tuple&lt;seastar::future&lt;void&gt;, seastar::future&lt;void&gt;, seastar::future&lt;void&gt; &gt;, seastar::future&lt;void&gt;, seastar::future&lt;void&gt;, seastar::future&lt;void&gt; &gt;::~when_all_state (1 samples, 0.02%)</title><rect x="79.0" y="1765" width="0.3" height="15.0" fill="rgb(230,195,43)" rx="2" ry="2" />
<text  x="82.04" y="1775.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::operator (1 samples, 0.02%)</title><rect x="750.4" y="1541" width="0.2" height="15.0" fill="rgb(214,81,11)" rx="2" ry="2" />
<text  x="753.42" y="1551.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (10 samples, 0.19%)</title><rect x="827.8" y="1541" width="2.2" height="15.0" fill="rgb(235,53,31)" rx="2" ry="2" />
<text  x="830.84" y="1551.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::_S_construct&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; const&amp;&gt; (1 samples, 0.02%)</title><rect x="52.1" y="1365" width="0.2" height="15.0" fill="rgb(238,30,37)" rx="2" ry="2" />
<text  x="55.13" y="1375.5" ></text>
</g>
<g >
<title>posix_memalign (22 samples, 0.41%)</title><rect x="240.0" y="1205" width="4.9" height="15.0" fill="rgb(223,146,26)" rx="2" ry="2" />
<text  x="243.04" y="1215.5" ></text>
</g>
<g >
<title>empty_flat_reader::close (1 samples, 0.02%)</title><rect x="568.2" y="1493" width="0.3" height="15.0" fill="rgb(208,100,40)" rx="2" ry="2" />
<text  x="571.24" y="1503.5" ></text>
</g>
<g >
<title>std::function&lt;seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (1 samples, 0.02%)</title><rect x="786.8" y="1365" width="0.2" height="15.0" fill="rgb(253,72,30)" rx="2" ry="2" />
<text  x="789.81" y="1375.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.06%)</title><rect x="445.6" y="1525" width="0.7" height="15.0" fill="rgb(254,29,45)" rx="2" ry="2" />
<text  x="448.61" y="1535.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (4 samples, 0.07%)</title><rect x="1073.5" y="1525" width="0.9" height="15.0" fill="rgb(216,88,50)" rx="2" ry="2" />
<text  x="1076.54" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::at (8 samples, 0.15%)</title><rect x="1034.1" y="1477" width="1.7" height="15.0" fill="rgb(230,148,11)" rx="2" ry="2" />
<text  x="1037.06" y="1487.5" ></text>
</g>
<g >
<title>sstables::sstable::component_basename (1 samples, 0.02%)</title><rect x="79.0" y="1685" width="0.3" height="15.0" fill="rgb(242,14,1)" rx="2" ry="2" />
<text  x="82.04" y="1695.5" ></text>
</g>
<g >
<title>query::result_set::result_set (2 samples, 0.04%)</title><rect x="102.0" y="1541" width="0.4" height="15.0" fill="rgb(246,35,24)" rx="2" ry="2" />
<text  x="104.97" y="1551.5" ></text>
</g>
<g >
<title>boost::intrusive::bstree_algorithms&lt;boost::intrusive::rbtree_node_traits&lt;void*, false&gt; &gt;::clear_and_dispose&lt;boost::intrusive::detail::node_disposer&lt;current_deleter&lt;range_tombstone_entry&gt; (1 samples, 0.02%)</title><rect x="1114.6" y="1349" width="0.2" height="15.0" fill="rgb(236,147,13)" rx="2" ry="2" />
<text  x="1117.57" y="1359.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::find (1 samples, 0.02%)</title><rect x="939.9" y="1541" width="0.2" height="15.0" fill="rgb(215,140,53)" rx="2" ry="2" />
<text  x="942.88" y="1551.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (1 samples, 0.02%)</title><rect x="259.9" y="1253" width="0.2" height="15.0" fill="rgb(227,27,7)" rx="2" ry="2" />
<text  x="262.90" y="1263.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (2 samples, 0.04%)</title><rect x="55.4" y="1285" width="0.5" height="15.0" fill="rgb(244,200,47)" rx="2" ry="2" />
<text  x="58.44" y="1295.5" ></text>
</g>
<g >
<title>seastar::future&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (6 samples, 0.11%)</title><rect x="784.8" y="1365" width="1.4" height="15.0" fill="rgb(230,52,22)" rx="2" ry="2" />
<text  x="787.83" y="1375.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (3 samples, 0.06%)</title><rect x="506.7" y="1461" width="0.7" height="15.0" fill="rgb(241,29,33)" rx="2" ry="2" />
<text  x="509.70" y="1471.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (4 samples, 0.07%)</title><rect x="40.7" y="1429" width="0.8" height="15.0" fill="rgb(234,82,7)" rx="2" ry="2" />
<text  x="43.66" y="1439.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (1 samples, 0.02%)</title><rect x="776.7" y="1461" width="0.2" height="15.0" fill="rgb(215,112,53)" rx="2" ry="2" />
<text  x="779.67" y="1471.5" ></text>
</g>
<g >
<title>seastar::posix_file_impl::list_directory (1 samples, 0.02%)</title><rect x="846.8" y="1637" width="0.2" height="15.0" fill="rgb(241,149,29)" rx="2" ry="2" />
<text  x="849.81" y="1647.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::remove_if&lt;row::compact_and_expire (1 samples, 0.02%)</title><rect x="690.0" y="1429" width="0.2" height="15.0" fill="rgb(220,35,39)" rx="2" ry="2" />
<text  x="692.99" y="1439.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (6 samples, 0.11%)</title><rect x="560.7" y="1477" width="1.4" height="15.0" fill="rgb(237,28,20)" rx="2" ry="2" />
<text  x="563.74" y="1487.5" ></text>
</g>
<g >
<title>database::find_schema (1 samples, 0.02%)</title><rect x="77.1" y="1589" width="0.2" height="15.0" fill="rgb(248,184,7)" rx="2" ry="2" />
<text  x="80.05" y="1599.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;mutation_fragment_merger&lt;mutation_reader_merger&gt;::operator (10 samples, 0.19%)</title><rect x="309.5" y="1493" width="2.2" height="15.0" fill="rgb(231,158,35)" rx="2" ry="2" />
<text  x="312.52" y="1503.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::operator= (2 samples, 0.04%)</title><rect x="860.9" y="1605" width="0.5" height="15.0" fill="rgb(246,111,23)" rx="2" ry="2" />
<text  x="863.92" y="1615.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getText[abi:cxx11] (1 samples, 0.02%)</title><rect x="54.8" y="1413" width="0.2" height="15.0" fill="rgb(250,12,33)" rx="2" ry="2" />
<text  x="57.77" y="1423.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::then_wrapped_nrvo&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (8 samples, 0.15%)</title><rect x="822.8" y="1557" width="1.7" height="15.0" fill="rgb(248,28,32)" rx="2" ry="2" />
<text  x="825.77" y="1567.5" ></text>
</g>
<g >
<title>data_value::data_value (1 samples, 0.02%)</title><rect x="69.8" y="1461" width="0.2" height="15.0" fill="rgb(205,98,26)" rx="2" ry="2" />
<text  x="72.77" y="1471.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (5 samples, 0.09%)</title><rect x="1003.8" y="1317" width="1.1" height="15.0" fill="rgb(251,36,10)" rx="2" ry="2" />
<text  x="1006.85" y="1327.5" ></text>
</g>
<g >
<title>cql3::constants::setter::execute (9 samples, 0.17%)</title><rect x="853.2" y="1477" width="2.0" height="15.0" fill="rgb(227,41,7)" rx="2" ry="2" />
<text  x="856.20" y="1487.5" ></text>
</g>
<g >
<title>table::stop (1 samples, 0.02%)</title><rect x="690.9" y="1605" width="0.2" height="15.0" fill="rgb(253,54,41)" rx="2" ry="2" />
<text  x="693.87" y="1615.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (2 samples, 0.04%)</title><rect x="561.6" y="1461" width="0.5" height="15.0" fill="rgb(238,85,12)" rx="2" ry="2" />
<text  x="564.62" y="1471.5" ></text>
</g>
<g >
<title>std::__relocate_a&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;*, std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;*, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt; (3 samples, 0.06%)</title><rect x="49.3" y="1381" width="0.6" height="15.0" fill="rgb(212,10,26)" rx="2" ry="2" />
<text  x="52.26" y="1391.5" ></text>
</g>
<g >
<title>seastar::repeat&lt;flat_mutation_reader::impl::consume_pausable&lt;scanning_reader::consumer&gt; (1 samples, 0.02%)</title><rect x="100.4" y="1125" width="0.3" height="15.0" fill="rgb(212,134,4)" rx="2" ry="2" />
<text  x="103.43" y="1135.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::impl (1 samples, 0.02%)</title><rect x="547.7" y="1397" width="0.2" height="15.0" fill="rgb(242,6,10)" rx="2" ry="2" />
<text  x="550.73" y="1407.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="675.0" y="1605" width="0.2" height="15.0" fill="rgb(251,168,51)" rx="2" ry="2" />
<text  x="677.99" y="1615.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (1 samples, 0.02%)</title><rect x="1163.8" y="1653" width="0.2" height="15.0" fill="rgb(215,161,49)" rx="2" ry="2" />
<text  x="1166.75" y="1663.5" ></text>
</g>
<g >
<title>free (1 samples, 0.02%)</title><rect x="1127.6" y="1317" width="0.2" height="15.0" fill="rgb(207,111,47)" rx="2" ry="2" />
<text  x="1130.58" y="1327.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (5 samples, 0.09%)</title><rect x="656.9" y="1621" width="1.1" height="15.0" fill="rgb(215,133,45)" rx="2" ry="2" />
<text  x="659.90" y="1631.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.02%)</title><rect x="44.8" y="1333" width="0.3" height="15.0" fill="rgb(211,128,9)" rx="2" ry="2" />
<text  x="47.85" y="1343.5" ></text>
</g>
<g >
<title>database::do_apply (24 samples, 0.45%)</title><rect x="1112.6" y="1493" width="5.3" height="15.0" fill="rgb(215,193,10)" rx="2" ry="2" />
<text  x="1115.58" y="1503.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="604.9" y="1541" width="0.2" height="15.0" fill="rgb(208,181,31)" rx="2" ry="2" />
<text  x="607.85" y="1551.5" ></text>
</g>
<g >
<title>std::__find_if&lt;gms::inet_address*, __gnu_cxx::__ops::_Iter_equals_val&lt;gms::inet_address const&gt; &gt; (1 samples, 0.02%)</title><rect x="1069.1" y="1461" width="0.3" height="15.0" fill="rgb(213,220,1)" rx="2" ry="2" />
<text  x="1072.13" y="1471.5" ></text>
</g>
<g >
<title>mutation_reader_merger::~mutation_reader_merger (14 samples, 0.26%)</title><rect x="464.8" y="1461" width="3.1" height="15.0" fill="rgb(224,154,52)" rx="2" ry="2" />
<text  x="467.80" y="1471.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::has_slice_or_needs_filtering (1 samples, 0.02%)</title><rect x="654.3" y="1573" width="0.2" height="15.0" fill="rgb(209,101,3)" rx="2" ry="2" />
<text  x="657.26" y="1583.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::set_value&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; (2 samples, 0.04%)</title><rect x="618.7" y="1589" width="0.5" height="15.0" fill="rgb(230,205,46)" rx="2" ry="2" />
<text  x="621.75" y="1599.5" ></text>
</g>
<g >
<title>antlr3::DefaultAllocPolicy::StackType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::push (1 samples, 0.02%)</title><rect x="37.6" y="1493" width="0.2" height="15.0" fill="rgb(235,166,16)" rx="2" ry="2" />
<text  x="40.57" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_List_node_base::_M_transfer (1 samples, 0.02%)</title><rect x="848.6" y="1525" width="0.2" height="15.0" fill="rgb(243,31,16)" rx="2" ry="2" />
<text  x="851.57" y="1535.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_4findERKNS5_10expressionENS5_6oper_tEEUlRS7_E_EES8_SE_T_EUlSG_E_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_8constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_11conjunctionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_12column_valueEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_5tokenEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13function_callEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4castEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_15field_selectionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4nullEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13bind_variableEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_16untyped_constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_17tuple_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_22collection_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSO_S6_SS_SW_S10_S14_S18_S1C_S1G_S1K_S1O_S1S_SK_S1W_S20_S24_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES29_S2C_ (2 samples, 0.04%)</title><rect x="655.4" y="1589" width="0.4" height="15.0" fill="rgb(233,82,24)" rx="2" ry="2" />
<text  x="658.36" y="1599.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.06%)</title><rect x="292.1" y="1317" width="0.7" height="15.0" fill="rgb(247,102,26)" rx="2" ry="2" />
<text  x="295.10" y="1327.5" ></text>
</g>
<g >
<title>abstract_type::decompose (1 samples, 0.02%)</title><rect x="101.8" y="1557" width="0.2" height="15.0" fill="rgb(247,225,52)" rx="2" ry="2" />
<text  x="104.75" y="1567.5" ></text>
</g>
<g >
<title>service::endpoints_to_replica_ids (16 samples, 0.30%)</title><rect x="1141.0" y="1621" width="3.6" height="15.0" fill="rgb(215,71,12)" rx="2" ry="2" />
<text  x="1144.04" y="1631.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;dht::ring_position&gt;::wrapping_interval (7 samples, 0.13%)</title><rect x="917.2" y="1509" width="1.5" height="15.0" fill="rgb(244,52,6)" rx="2" ry="2" />
<text  x="920.17" y="1519.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::do_fill_buffer (365 samples, 6.82%)</title><rect x="201.0" y="1413" width="80.5" height="15.0" fill="rgb(231,118,25)" rx="2" ry="2" />
<text  x="204.01" y="1423.5" >partition..</text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.02%)</title><rect x="50.8" y="1445" width="0.2" height="15.0" fill="rgb(226,92,32)" rx="2" ry="2" />
<text  x="53.80" y="1455.5" ></text>
</g>
<g >
<title>scanning_reader::fill_buffer (1 samples, 0.02%)</title><rect x="100.4" y="1189" width="0.3" height="15.0" fill="rgb(210,149,43)" rx="2" ry="2" />
<text  x="103.43" y="1199.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="751.7" y="1477" width="0.3" height="15.0" fill="rgb(223,78,3)" rx="2" ry="2" />
<text  x="754.75" y="1487.5" ></text>
</g>
<g >
<title>query::result::builder::builder (12 samples, 0.22%)</title><rect x="609.7" y="1573" width="2.7" height="15.0" fill="rgb(213,172,37)" rx="2" ry="2" />
<text  x="612.70" y="1583.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="1158.7" y="1621" width="0.2" height="15.0" fill="rgb(223,222,12)" rx="2" ry="2" />
<text  x="1161.68" y="1631.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.02%)</title><rect x="41.1" y="1333" width="0.2" height="15.0" fill="rgb(221,217,54)" rx="2" ry="2" />
<text  x="44.10" y="1343.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="43.5" y="1429" width="0.2" height="15.0" fill="rgb(235,74,10)" rx="2" ry="2" />
<text  x="46.53" y="1439.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.02%)</title><rect x="43.5" y="1461" width="0.2" height="15.0" fill="rgb(230,174,47)" rx="2" ry="2" />
<text  x="46.53" y="1471.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (3 samples, 0.06%)</title><rect x="295.2" y="1397" width="0.6" height="15.0" fill="rgb(230,141,14)" rx="2" ry="2" />
<text  x="298.19" y="1407.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation::data, std::default_delete&lt;mutation::data&gt; &gt;::~unique_ptr (2 samples, 0.04%)</title><rect x="1127.6" y="1477" width="0.4" height="15.0" fill="rgb(234,46,5)" rx="2" ry="2" />
<text  x="1130.58" y="1487.5" ></text>
</g>
<g >
<title>local_schema_registry (1 samples, 0.02%)</title><rect x="954.0" y="1509" width="0.2" height="15.0" fill="rgb(250,184,54)" rx="2" ry="2" />
<text  x="957.00" y="1519.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (2 samples, 0.04%)</title><rect x="51.5" y="1317" width="0.4" height="15.0" fill="rgb(253,104,45)" rx="2" ry="2" />
<text  x="54.47" y="1327.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (3 samples, 0.06%)</title><rect x="796.1" y="1221" width="0.6" height="15.0" fill="rgb(222,206,14)" rx="2" ry="2" />
<text  x="799.08" y="1231.5" ></text>
</g>
<g >
<title>locator::abstract_replication_strategy::get_natural_endpoints (56 samples, 1.05%)</title><rect x="1054.8" y="1445" width="12.3" height="15.0" fill="rgb(216,85,24)" rx="2" ry="2" />
<text  x="1057.80" y="1455.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.02%)</title><rect x="40.9" y="1285" width="0.2" height="15.0" fill="rgb(206,148,23)" rx="2" ry="2" />
<text  x="43.88" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (3 samples, 0.06%)</title><rect x="350.8" y="1317" width="0.6" height="15.0" fill="rgb(247,172,15)" rx="2" ry="2" />
<text  x="353.77" y="1327.5" ></text>
</g>
<g >
<title>seastar::internal::future_base::set_coroutine (1 samples, 0.02%)</title><rect x="1020.4" y="1413" width="0.2" height="15.0" fill="rgb(229,228,51)" rx="2" ry="2" />
<text  x="1023.39" y="1423.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::allocate_large_and_trim (1 samples, 0.02%)</title><rect x="79.3" y="1733" width="0.2" height="15.0" fill="rgb(216,114,50)" rx="2" ry="2" />
<text  x="82.26" y="1743.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (3 samples, 0.06%)</title><rect x="45.1" y="1445" width="0.6" height="15.0" fill="rgb(216,63,33)" rx="2" ry="2" />
<text  x="48.07" y="1455.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::~deque (7 samples, 0.13%)</title><rect x="626.0" y="1557" width="1.6" height="15.0" fill="rgb(231,111,4)" rx="2" ry="2" />
<text  x="629.03" y="1567.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="79.3" y="1525" width="0.2" height="15.0" fill="rgb(214,184,4)" rx="2" ry="2" />
<text  x="82.26" y="1535.5" ></text>
</g>
<g >
<title>memtable_entry::snapshot (12 samples, 0.22%)</title><rect x="530.7" y="1477" width="2.7" height="15.0" fill="rgb(227,17,9)" rx="2" ry="2" />
<text  x="533.74" y="1487.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_partition_key_range_concurrent (1 samples, 0.02%)</title><rect x="78.8" y="1317" width="0.2" height="15.0" fill="rgb(228,217,16)" rx="2" ry="2" />
<text  x="81.81" y="1327.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt; &gt;::invoke&lt;flat_mutation_reader::impl::consume_pausable&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (1 samples, 0.02%)</title><rect x="100.9" y="1413" width="0.2" height="15.0" fill="rgb(233,157,16)" rx="2" ry="2" />
<text  x="103.87" y="1423.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="821" width="0.3" height="15.0" fill="rgb(226,151,2)" rx="2" ry="2" />
<text  x="13.44" y="831.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (1 samples, 0.02%)</title><rect x="787.3" y="1333" width="0.2" height="15.0" fill="rgb(214,68,22)" rx="2" ry="2" />
<text  x="790.26" y="1343.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.02%)</title><rect x="45.7" y="1477" width="0.3" height="15.0" fill="rgb(220,173,4)" rx="2" ry="2" />
<text  x="48.73" y="1487.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;clustering_key_prefix&gt;::_M_move_assign (2 samples, 0.04%)</title><rect x="556.8" y="1557" width="0.4" height="15.0" fill="rgb(221,99,11)" rx="2" ry="2" />
<text  x="559.77" y="1567.5" ></text>
</g>
<g >
<title>cql3::authorized_prepared_statements_cache::insert (53 samples, 0.99%)</title><rect x="735.4" y="1557" width="11.7" height="15.0" fill="rgb(240,209,12)" rx="2" ry="2" />
<text  x="738.42" y="1567.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::vector (6 samples, 0.11%)</title><rect x="899.1" y="1509" width="1.3" height="15.0" fill="rgb(219,154,24)" rx="2" ry="2" />
<text  x="902.08" y="1519.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;service::storage_proxy::unique_response_handler, 1ul&gt;::~small_vector (1 samples, 0.02%)</title><rect x="1127.4" y="1397" width="0.2" height="15.0" fill="rgb(224,216,9)" rx="2" ry="2" />
<text  x="1130.36" y="1407.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (2 samples, 0.04%)</title><rect x="1127.6" y="1429" width="0.4" height="15.0" fill="rgb(244,134,17)" rx="2" ry="2" />
<text  x="1130.58" y="1439.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_Optional_payload_base (1 samples, 0.02%)</title><rect x="787.3" y="1349" width="0.2" height="15.0" fill="rgb(254,178,33)" rx="2" ry="2" />
<text  x="790.26" y="1359.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;std::tuple&lt;seastar::lw_shared_ptr&lt;query::result&gt;, cache_temperature&gt; &gt;::clear (1 samples, 0.02%)</title><rect x="646.1" y="1637" width="0.2" height="15.0" fill="rgb(253,151,53)" rx="2" ry="2" />
<text  x="649.10" y="1647.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.02%)</title><rect x="59.4" y="1301" width="0.2" height="15.0" fill="rgb(242,215,38)" rx="2" ry="2" />
<text  x="62.41" y="1311.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt; (1 samples, 0.02%)</title><rect x="896.9" y="1493" width="0.2" height="15.0" fill="rgb(247,142,23)" rx="2" ry="2" />
<text  x="899.87" y="1503.5" ></text>
</g>
<g >
<title>std::__make_heap&lt;__gnu_cxx::__normal_iterator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position*, std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::heap_compare&gt; &gt; (1 samples, 0.02%)</title><rect x="290.3" y="1365" width="0.3" height="15.0" fill="rgb(232,73,23)" rx="2" ry="2" />
<text  x="293.33" y="1375.5" ></text>
</g>
<g >
<title>sstables::compaction::run&lt;noop_compacted_fragments_consumer&gt; (1 samples, 0.02%)</title><rect x="1130.0" y="1589" width="0.2" height="15.0" fill="rgb(208,58,11)" rx="2" ry="2" />
<text  x="1133.01" y="1599.5" ></text>
</g>
<g >
<title>query_mutation (1 samples, 0.02%)</title><rect x="102.0" y="1525" width="0.2" height="15.0" fill="rgb(252,92,18)" rx="2" ry="2" />
<text  x="104.97" y="1535.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (2 samples, 0.04%)</title><rect x="901.3" y="1525" width="0.4" height="15.0" fill="rgb(236,176,6)" rx="2" ry="2" />
<text  x="904.29" y="1535.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::digest_read_result&gt;::clear (1 samples, 0.02%)</title><rect x="699.7" y="1621" width="0.2" height="15.0" fill="rgb(228,151,52)" rx="2" ry="2" />
<text  x="702.69" y="1631.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::clone (4 samples, 0.07%)</title><rect x="505.2" y="1461" width="0.8" height="15.0" fill="rgb(230,23,32)" rx="2" ry="2" />
<text  x="508.16" y="1471.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::iterator_at (1 samples, 0.02%)</title><rect x="759.2" y="1493" width="0.3" height="15.0" fill="rgb(208,56,32)" rx="2" ry="2" />
<text  x="762.24" y="1503.5" ></text>
</g>
<g >
<title>std::function&lt;flat_mutation_reader  (1 samples, 0.02%)</title><rect x="555.9" y="1557" width="0.2" height="15.0" fill="rgb(214,69,44)" rx="2" ry="2" />
<text  x="558.89" y="1567.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::~disable_abort_on_alloc_failure_temporarily (1 samples, 0.02%)</title><rect x="274.0" y="1349" width="0.2" height="15.0" fill="rgb(210,58,46)" rx="2" ry="2" />
<text  x="277.01" y="1359.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment&lt;schema const&amp;, rows_entry const&amp;&gt; (1 samples, 0.02%)</title><rect x="220.6" y="1349" width="0.3" height="15.0" fill="rgb(230,114,17)" rx="2" ry="2" />
<text  x="223.64" y="1359.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_Optional_payload_base (3 samples, 0.06%)</title><rect x="153.8" y="1557" width="0.7" height="15.0" fill="rgb(245,188,17)" rx="2" ry="2" />
<text  x="156.81" y="1567.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_next (1 samples, 0.02%)</title><rect x="1130.0" y="1189" width="0.2" height="15.0" fill="rgb(244,84,44)" rx="2" ry="2" />
<text  x="1133.01" y="1199.5" ></text>
</g>
<g >
<title>sstables::mx::data_consume_rows_context_m::data_consume_rows_context_m (1 samples, 0.02%)</title><rect x="1130.0" y="1029" width="0.2" height="15.0" fill="rgb(231,182,11)" rx="2" ry="2" />
<text  x="1133.01" y="1039.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.04%)</title><rect x="208.7" y="1317" width="0.5" height="15.0" fill="rgb(209,152,12)" rx="2" ry="2" />
<text  x="211.73" y="1327.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::~disable_abort_on_alloc_failure_temporarily (1 samples, 0.02%)</title><rect x="273.6" y="1333" width="0.2" height="15.0" fill="rgb(253,198,7)" rx="2" ry="2" />
<text  x="276.57" y="1343.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.02%)</title><rect x="1120.7" y="1269" width="0.3" height="15.0" fill="rgb(224,201,39)" rx="2" ry="2" />
<text  x="1123.74" y="1279.5" ></text>
</g>
<g >
<title>seastar::promise&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::promise (1 samples, 0.02%)</title><rect x="1111.9" y="1621" width="0.2" height="15.0" fill="rgb(245,164,4)" rx="2" ry="2" />
<text  x="1114.92" y="1631.5" ></text>
</g>
<g >
<title>ser::deletable_row_view::shadowable_deleted_at (1 samples, 0.02%)</title><rect x="1115.5" y="1365" width="0.2" height="15.0" fill="rgb(228,47,32)" rx="2" ry="2" />
<text  x="1118.45" y="1375.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (1 samples, 0.02%)</title><rect x="848.8" y="1589" width="0.2" height="15.0" fill="rgb(207,135,51)" rx="2" ry="2" />
<text  x="851.79" y="1599.5" ></text>
</g>
<g >
<title>multishard_combining_reader::fill_buffer (1 samples, 0.02%)</title><rect x="100.9" y="1381" width="0.2" height="15.0" fill="rgb(222,97,41)" rx="2" ry="2" />
<text  x="103.87" y="1391.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (1 samples, 0.02%)</title><rect x="645.7" y="1637" width="0.2" height="15.0" fill="rgb(237,185,10)" rx="2" ry="2" />
<text  x="648.66" y="1647.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_Optional_payload_base (2 samples, 0.04%)</title><rect x="1048.6" y="1445" width="0.5" height="15.0" fill="rgb(217,28,31)" rx="2" ry="2" />
<text  x="1051.62" y="1455.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value, std::allocator&lt;cql3::raw_value&gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="841.5" y="1589" width="0.2" height="15.0" fill="rgb(221,22,31)" rx="2" ry="2" />
<text  x="844.51" y="1599.5" ></text>
</g>
<g >
<title>compound_type&lt; (1 samples, 0.02%)</title><rect x="852.5" y="1477" width="0.3" height="15.0" fill="rgb(212,33,45)" rx="2" ry="2" />
<text  x="855.54" y="1487.5" ></text>
</g>
<g >
<title>std::__make_heap&lt;__gnu_cxx::__normal_iterator&lt;boost::iterator_range&lt;boost::intrusive::tree_iterator&lt;boost::intrusive::mhtraits&lt;range_tombstone_entry, boost::intrusive::set_member_hook&lt;boost::intrusive::link_mode&lt; (4 samples, 0.07%)</title><rect x="293.4" y="1381" width="0.9" height="15.0" fill="rgb(222,201,7)" rx="2" ry="2" />
<text  x="296.42" y="1391.5" ></text>
</g>
<g >
<title>__libc_siglongjmp (1 samples, 0.02%)</title><rect x="638.4" y="1637" width="0.2" height="15.0" fill="rgb(205,5,14)" rx="2" ry="2" />
<text  x="641.38" y="1647.5" ></text>
</g>
<g >
<title>reader_permit::impl::on_admission (4 samples, 0.07%)</title><rect x="119.4" y="1557" width="0.9" height="15.0" fill="rgb(226,169,5)" rx="2" ry="2" />
<text  x="122.40" y="1567.5" ></text>
</g>
<g >
<title>std::optional&lt;clustering_key_prefix&gt;::operator=&lt;clustering_key_prefix&amp;&gt; (3 samples, 0.06%)</title><rect x="419.6" y="1365" width="0.6" height="15.0" fill="rgb(215,20,8)" rx="2" ry="2" />
<text  x="422.58" y="1375.5" ></text>
</g>
<g >
<title>seastar::future&lt;boost::iterator_range&lt;mutation_fragment*&gt; &gt;::then_impl&lt;mutation_fragment_merger&lt;mutation_reader_merger&gt;::fetch (1 samples, 0.02%)</title><rect x="309.3" y="1493" width="0.2" height="15.0" fill="rgb(207,196,9)" rx="2" ry="2" />
<text  x="312.30" y="1503.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::~timer (3 samples, 0.06%)</title><rect x="126.5" y="1557" width="0.6" height="15.0" fill="rgb(208,73,28)" rx="2" ry="2" />
<text  x="129.46" y="1567.5" ></text>
</g>
<g >
<title>compound_wrapper&lt;clustering_key_prefix, clustering_key_prefix_view&gt;::from_single_value (1 samples, 0.02%)</title><rect x="101.5" y="1557" width="0.3" height="15.0" fill="rgb(226,181,18)" rx="2" ry="2" />
<text  x="104.53" y="1567.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment (24 samples, 0.45%)</title><rect x="210.5" y="1381" width="5.3" height="15.0" fill="rgb(245,45,45)" rx="2" ry="2" />
<text  x="213.49" y="1391.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::destroy&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; (2 samples, 0.04%)</title><rect x="49.5" y="1333" width="0.4" height="15.0" fill="rgb(205,91,45)" rx="2" ry="2" />
<text  x="52.48" y="1343.5" ></text>
</g>
<g >
<title>locator::effective_replication_map::get_natural_endpoints_without_node_being_replaced (60 samples, 1.12%)</title><rect x="1054.4" y="1461" width="13.2" height="15.0" fill="rgb(221,119,52)" rx="2" ry="2" />
<text  x="1057.36" y="1471.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::_S_construct&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; const&amp;&gt; (1 samples, 0.02%)</title><rect x="44.0" y="1413" width="0.2" height="15.0" fill="rgb(231,7,17)" rx="2" ry="2" />
<text  x="46.97" y="1423.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate_to_raw_view (2 samples, 0.04%)</title><rect x="900.8" y="1525" width="0.5" height="15.0" fill="rgb(247,222,35)" rx="2" ry="2" />
<text  x="903.84" y="1535.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;position_in_partition&gt;::_M_reset (1 samples, 0.02%)</title><rect x="293.2" y="1381" width="0.2" height="15.0" fill="rgb(253,105,45)" rx="2" ry="2" />
<text  x="296.20" y="1391.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (2 samples, 0.04%)</title><rect x="790.1" y="1301" width="0.5" height="15.0" fill="rgb(236,89,21)" rx="2" ry="2" />
<text  x="793.12" y="1311.5" ></text>
</g>
<g >
<title>operator delete (5 samples, 0.09%)</title><rect x="87.0" y="1637" width="1.1" height="15.0" fill="rgb(234,181,46)" rx="2" ry="2" />
<text  x="89.98" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_need_rehash (1 samples, 0.02%)</title><rect x="1149.4" y="1605" width="0.2" height="15.0" fill="rgb(205,157,28)" rx="2" ry="2" />
<text  x="1152.42" y="1615.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::take (3 samples, 0.06%)</title><rect x="327.6" y="1509" width="0.7" height="15.0" fill="rgb(209,54,28)" rx="2" ry="2" />
<text  x="330.61" y="1519.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::process_where_clause (14 samples, 0.26%)</title><rect x="69.1" y="1573" width="3.1" height="15.0" fill="rgb(254,110,17)" rx="2" ry="2" />
<text  x="72.11" y="1583.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (2 samples, 0.04%)</title><rect x="44.4" y="1285" width="0.4" height="15.0" fill="rgb(233,170,22)" rx="2" ry="2" />
<text  x="47.41" y="1295.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="690.2" y="1573" width="0.2" height="15.0" fill="rgb(241,201,28)" rx="2" ry="2" />
<text  x="693.21" y="1583.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::~merging_reader (43 samples, 0.80%)</title><rect x="588.1" y="1541" width="9.5" height="15.0" fill="rgb(231,56,30)" rx="2" ry="2" />
<text  x="591.09" y="1551.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::set_callback (1 samples, 0.02%)</title><rect x="846.4" y="1637" width="0.2" height="15.0" fill="rgb(242,48,20)" rx="2" ry="2" />
<text  x="849.37" y="1647.5" ></text>
</g>
<g >
<title>_ZSt5applyIZN7seastar8internal12do_with_implISt4pairIN4auth17role_or_anonymousENS4_8resourceEEZNS4_17permissions_cache3getERKS5_RKS6_E3$_0JEEEDaOT_OT0_DpOT1_EUlDpOT_E_St5tupleIJOS7_EEEDcSF_SH_ (9 samples, 0.17%)</title><rect x="781.1" y="1413" width="2.0" height="15.0" fill="rgb(215,136,8)" rx="2" ry="2" />
<text  x="784.08" y="1423.5" ></text>
</g>
<g >
<title>db::system_keyspace::all_tables (1 samples, 0.02%)</title><rect x="17.1" y="1445" width="0.2" height="15.0" fill="rgb(220,39,38)" rx="2" ry="2" />
<text  x="20.06" y="1455.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;, service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (28 samples, 0.52%)</title><rect x="1121.4" y="1445" width="6.2" height="15.0" fill="rgb(254,71,27)" rx="2" ry="2" />
<text  x="1124.41" y="1455.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="933" width="0.3" height="15.0" fill="rgb(244,129,19)" rx="2" ry="2" />
<text  x="13.44" y="943.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (3 samples, 0.06%)</title><rect x="46.2" y="1445" width="0.6" height="15.0" fill="rgb(211,147,30)" rx="2" ry="2" />
<text  x="49.17" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_List_node_base::_M_transfer (6 samples, 0.11%)</title><rect x="188.4" y="1397" width="1.4" height="15.0" fill="rgb(206,193,25)" rx="2" ry="2" />
<text  x="191.43" y="1407.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_Optional_payload_base (1 samples, 0.02%)</title><rect x="748.0" y="1557" width="0.2" height="15.0" fill="rgb(254,109,7)" rx="2" ry="2" />
<text  x="751.00" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (1 samples, 0.02%)</title><rect x="842.2" y="1621" width="0.2" height="15.0" fill="rgb(234,177,2)" rx="2" ry="2" />
<text  x="845.18" y="1631.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_token (2 samples, 0.04%)</title><rect x="654.5" y="1589" width="0.4" height="15.0" fill="rgb(223,186,33)" rx="2" ry="2" />
<text  x="657.48" y="1599.5" ></text>
</g>
<g >
<title>dht::murmur3_partitioner::get_token (50 samples, 0.93%)</title><rect x="904.2" y="1541" width="11.0" height="15.0" fill="rgb(254,114,3)" rx="2" ry="2" />
<text  x="907.15" y="1551.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::push_back (9 samples, 0.17%)</title><rect x="23.2" y="1429" width="2.0" height="15.0" fill="rgb(208,154,35)" rx="2" ry="2" />
<text  x="26.23" y="1439.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.02%)</title><rect x="1044.7" y="1445" width="0.2" height="15.0" fill="rgb(249,157,43)" rx="2" ry="2" />
<text  x="1047.65" y="1455.5" ></text>
</g>
<g >
<title>antlr3::IntStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::_LA (1 samples, 0.02%)</title><rect x="31.2" y="1397" width="0.2" height="15.0" fill="rgb(239,163,43)" rx="2" ry="2" />
<text  x="34.17" y="1407.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.02%)</title><rect x="10.4" y="421" width="0.3" height="15.0" fill="rgb(245,154,39)" rx="2" ry="2" />
<text  x="13.44" y="431.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (1 samples, 0.02%)</title><rect x="820.6" y="1573" width="0.2" height="15.0" fill="rgb(242,165,43)" rx="2" ry="2" />
<text  x="823.56" y="1583.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;cql3::metadata, false&gt;::make&lt;cql3::metadata&amp;&gt; (4 samples, 0.07%)</title><rect x="658.7" y="1621" width="0.9" height="15.0" fill="rgb(223,102,52)" rx="2" ry="2" />
<text  x="661.67" y="1631.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (9 samples, 0.17%)</title><rect x="1076.6" y="1557" width="2.0" height="15.0" fill="rgb(207,143,0)" rx="2" ry="2" />
<text  x="1079.63" y="1567.5" ></text>
</g>
<g >
<title>std::forward&lt;bool&gt; (1 samples, 0.02%)</title><rect x="43.1" y="1477" width="0.2" height="15.0" fill="rgb(222,47,38)" rx="2" ry="2" />
<text  x="46.08" y="1487.5" ></text>
</g>
<g >
<title>mutation_querier::consume_end_of_stream (3 samples, 0.06%)</title><rect x="344.8" y="1365" width="0.7" height="15.0" fill="rgb(254,157,12)" rx="2" ry="2" />
<text  x="347.81" y="1375.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;schema const&gt;::operator= (3 samples, 0.06%)</title><rect x="1021.5" y="1429" width="0.7" height="15.0" fill="rgb(215,127,52)" rx="2" ry="2" />
<text  x="1024.49" y="1439.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (5 samples, 0.09%)</title><rect x="825.9" y="1573" width="1.1" height="15.0" fill="rgb(245,152,20)" rx="2" ry="2" />
<text  x="828.85" y="1583.5" ></text>
</g>
<g >
<title>database::query (1 samples, 0.02%)</title><rect x="986.4" y="1429" width="0.2" height="15.0" fill="rgb(229,37,31)" rx="2" ry="2" />
<text  x="989.42" y="1439.5" ></text>
</g>
<g >
<title>logalloc::region_impl::alloc (1 samples, 0.02%)</title><rect x="11.5" y="1445" width="0.3" height="15.0" fill="rgb(246,72,16)" rx="2" ry="2" />
<text  x="14.54" y="1455.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;db::view::view_update_generator&gt;::sharded_parallel_for_each (1 samples, 0.02%)</title><rect x="692.2" y="1621" width="0.2" height="15.0" fill="rgb(223,56,7)" rx="2" ry="2" />
<text  x="695.19" y="1631.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (2 samples, 0.04%)</title><rect x="1146.3" y="1605" width="0.5" height="15.0" fill="rgb(236,141,39)" rx="2" ry="2" />
<text  x="1149.33" y="1615.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (14 samples, 0.26%)</title><rect x="485.3" y="1413" width="3.1" height="15.0" fill="rgb(244,139,1)" rx="2" ry="2" />
<text  x="488.31" y="1423.5" ></text>
</g>
<g >
<title>value_cast&lt;int&gt; (1 samples, 0.02%)</title><rect x="639.0" y="1573" width="0.3" height="15.0" fill="rgb(216,188,34)" rx="2" ry="2" />
<text  x="642.04" y="1583.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.04%)</title><rect x="44.4" y="1397" width="0.4" height="15.0" fill="rgb(210,154,22)" rx="2" ry="2" />
<text  x="47.41" y="1407.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::query_processor::process_authorized_statement (10 samples, 0.19%)</title><rect x="647.6" y="1653" width="2.2" height="15.0" fill="rgb(209,203,48)" rx="2" ry="2" />
<text  x="650.64" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.02%)</title><rect x="70.7" y="1445" width="0.2" height="15.0" fill="rgb(229,175,9)" rx="2" ry="2" />
<text  x="73.65" y="1455.5" ></text>
</g>
<g >
<title>service::storage_proxy::do_query (1 samples, 0.02%)</title><rect x="78.8" y="1349" width="0.2" height="15.0" fill="rgb(222,142,0)" rx="2" ry="2" />
<text  x="81.81" y="1359.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_impl&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (481 samples, 8.99%)</title><rect x="335.1" y="1477" width="106.1" height="15.0" fill="rgb(231,5,40)" rx="2" ry="2" />
<text  x="338.11" y="1487.5" >seastar::int..</text>
</g>
<g >
<title>seastar::repeat&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (1 samples, 0.02%)</title><rect x="100.4" y="1317" width="0.3" height="15.0" fill="rgb(219,12,51)" rx="2" ry="2" />
<text  x="103.43" y="1327.5" ></text>
</g>
<g >
<title>remove_or_mark_as_unique_owner (1 samples, 0.02%)</title><rect x="690.9" y="1381" width="0.2" height="15.0" fill="rgb(232,51,41)" rx="2" ry="2" />
<text  x="693.87" y="1391.5" ></text>
</g>
<g >
<title>schema::schema (1 samples, 0.02%)</title><rect x="17.1" y="1365" width="0.2" height="15.0" fill="rgb(249,97,13)" rx="2" ry="2" />
<text  x="20.06" y="1375.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::set_tokText (1 samples, 0.02%)</title><rect x="27.6" y="1397" width="0.3" height="15.0" fill="rgb(230,177,25)" rx="2" ry="2" />
<text  x="30.64" y="1407.5" ></text>
</g>
<g >
<title>database::query (95 samples, 1.78%)</title><rect x="995.9" y="1413" width="21.0" height="15.0" fill="rgb(206,72,29)" rx="2" ry="2" />
<text  x="998.91" y="1423.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (3 samples, 0.06%)</title><rect x="110.1" y="1621" width="0.7" height="15.0" fill="rgb(221,56,50)" rx="2" ry="2" />
<text  x="113.13" y="1631.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::clone&lt;row::row (129 samples, 2.41%)</title><rect x="224.6" y="1285" width="28.5" height="15.0" fill="rgb(225,107,2)" rx="2" ry="2" />
<text  x="227.61" y="1295.5" >co..</text>
</g>
<g >
<title>logalloc::region_impl::alloc_small (1 samples, 0.02%)</title><rect x="16.0" y="1637" width="0.2" height="15.0" fill="rgb(239,113,29)" rx="2" ry="2" />
<text  x="18.96" y="1647.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (4 samples, 0.07%)</title><rect x="493.7" y="1333" width="0.9" height="15.0" fill="rgb(215,100,5)" rx="2" ry="2" />
<text  x="496.69" y="1343.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (1 samples, 0.02%)</title><rect x="1115.2" y="1349" width="0.3" height="15.0" fill="rgb(226,59,53)" rx="2" ry="2" />
<text  x="1118.23" y="1359.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_restrictions::has_supporting_index (2 samples, 0.04%)</title><rect x="70.2" y="1541" width="0.5" height="15.0" fill="rgb(206,16,28)" rx="2" ry="2" />
<text  x="73.21" y="1551.5" ></text>
</g>
<g >
<title>locator::effective_replication_map::get_natural_endpoints_without_node_being_replaced (1 samples, 0.02%)</title><rect x="1126.9" y="1349" width="0.2" height="15.0" fill="rgb(213,104,27)" rx="2" ry="2" />
<text  x="1129.92" y="1359.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::get_promise (2 samples, 0.04%)</title><rect x="994.1" y="1429" width="0.5" height="15.0" fill="rgb(252,185,26)" rx="2" ry="2" />
<text  x="997.14" y="1439.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::emplace_back&lt;mutation_fragment&gt; (2 samples, 0.04%)</title><rect x="302.9" y="1429" width="0.4" height="15.0" fill="rgb(231,25,3)" rx="2" ry="2" />
<text  x="305.90" y="1439.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_next (84 samples, 1.57%)</title><rect x="178.1" y="1461" width="18.5" height="15.0" fill="rgb(238,69,8)" rx="2" ry="2" />
<text  x="181.07" y="1471.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::partition_tombstone (10 samples, 0.19%)</title><rect x="524.8" y="1397" width="2.2" height="15.0" fill="rgb(245,79,3)" rx="2" ry="2" />
<text  x="527.79" y="1407.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (4 samples, 0.07%)</title><rect x="269.2" y="1317" width="0.8" height="15.0" fill="rgb(251,73,7)" rx="2" ry="2" />
<text  x="272.16" y="1327.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::query_options, db::consistency_level&amp;, std::vector&lt;cql3::raw_value, std::allocator&lt;cql3::raw_value&gt; &gt;, cql3::query_options::specific_options&gt; (27 samples, 0.50%)</title><rect x="835.8" y="1605" width="5.9" height="15.0" fill="rgb(248,193,1)" rx="2" ry="2" />
<text  x="838.78" y="1615.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (1 samples, 0.02%)</title><rect x="1130.0" y="1461" width="0.2" height="15.0" fill="rgb(220,132,48)" rx="2" ry="2" />
<text  x="1133.01" y="1471.5" ></text>
</g>
<g >
<title>free (1 samples, 0.02%)</title><rect x="102.2" y="1509" width="0.2" height="15.0" fill="rgb(236,209,30)" rx="2" ry="2" />
<text  x="105.19" y="1519.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, cql3::statements::create_aggregate_statement*, std::default_delete&lt;cql3::statements::create_aggregate_statement&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="62.9" y="1477" width="0.3" height="15.0" fill="rgb(230,196,1)" rx="2" ry="2" />
<text  x="65.93" y="1487.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, seastar::future&lt;void&gt;::handle_exception&lt;service::storage_proxy::send_to_live_endpoints (5 samples, 0.09%)</title><rect x="691.1" y="1653" width="1.1" height="15.0" fill="rgb(221,54,48)" rx="2" ry="2" />
<text  x="694.09" y="1663.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (12 samples, 0.22%)</title><rect x="579.9" y="1445" width="2.7" height="15.0" fill="rgb(248,228,51)" rx="2" ry="2" />
<text  x="582.93" y="1455.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.02%)</title><rect x="59.4" y="1237" width="0.2" height="15.0" fill="rgb(248,121,2)" rx="2" ry="2" />
<text  x="62.41" y="1247.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_max_result_size (19 samples, 0.36%)</title><rect x="1102.7" y="1573" width="4.1" height="15.0" fill="rgb(246,126,20)" rx="2" ry="2" />
<text  x="1105.66" y="1583.5" ></text>
</g>
<g >
<title>auth::permissions_cache::get (91 samples, 1.70%)</title><rect x="780.4" y="1429" width="20.1" height="15.0" fill="rgb(246,19,34)" rx="2" ry="2" />
<text  x="783.42" y="1439.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.02%)</title><rect x="58.1" y="1317" width="0.2" height="15.0" fill="rgb(215,5,42)" rx="2" ry="2" />
<text  x="61.08" y="1327.5" ></text>
</g>
<g >
<title>antlr3::IntStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::rewind (3 samples, 0.06%)</title><rect x="33.8" y="1381" width="0.7" height="15.0" fill="rgb(206,35,38)" rx="2" ry="2" />
<text  x="36.82" y="1391.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector (1 samples, 0.02%)</title><rect x="1049.1" y="1445" width="0.2" height="15.0" fill="rgb(238,0,41)" rx="2" ry="2" />
<text  x="1052.06" y="1455.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.07%)</title><rect x="778.2" y="1413" width="0.9" height="15.0" fill="rgb(254,140,50)" rx="2" ry="2" />
<text  x="781.21" y="1423.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (284 samples, 5.31%)</title><rect x="15.5" y="1749" width="62.7" height="15.0" fill="rgb(230,62,9)" rx="2" ry="2" />
<text  x="18.51" y="1759.5" >seasta..</text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="551.9" y="1493" width="0.2" height="15.0" fill="rgb(223,159,45)" rx="2" ry="2" />
<text  x="554.92" y="1503.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (1 samples, 0.02%)</title><rect x="634.4" y="1573" width="0.2" height="15.0" fill="rgb(237,151,16)" rx="2" ry="2" />
<text  x="637.41" y="1583.5" ></text>
</g>
<g >
<title>bplus::tree&lt;long, intrusive_array&lt;cache_entry&gt;, dht::raw_token_less_comparator, 16ul,  (1 samples, 0.02%)</title><rect x="541.8" y="1429" width="0.2" height="15.0" fill="rgb(220,62,16)" rx="2" ry="2" />
<text  x="544.77" y="1439.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;query::read_command&gt;::make&lt;utils::UUID const&amp;, utils::UUID, query::partition_slice, query::max_result_size, query::row_limit, query::partition_limit, std::chrono::time_point&lt;gc_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt; &gt;&amp;, std::optional&lt;tracing::trace_info&gt;, utils::UUID, seastar::bool_class&lt;query::is_first_page_tag&gt; const&amp;, long&gt; (25 samples, 0.47%)</title><rect x="1096.9" y="1573" width="5.5" height="15.0" fill="rgb(220,144,50)" rx="2" ry="2" />
<text  x="1099.92" y="1583.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (21 samples, 0.39%)</title><rect x="742.5" y="1493" width="4.6" height="15.0" fill="rgb(234,28,19)" rx="2" ry="2" />
<text  x="745.48" y="1503.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;mutation_fragment_merger&lt;mutation_reader_merger&gt;::operator (2 samples, 0.04%)</title><rect x="327.2" y="1509" width="0.4" height="15.0" fill="rgb(253,15,34)" rx="2" ry="2" />
<text  x="330.17" y="1519.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (1 samples, 0.02%)</title><rect x="695.7" y="1589" width="0.2" height="15.0" fill="rgb(220,30,24)" rx="2" ry="2" />
<text  x="698.72" y="1599.5" ></text>
</g>
<g >
<title>auth::resource::resource (8 samples, 0.15%)</title><rect x="765.9" y="1525" width="1.7" height="15.0" fill="rgb(248,36,13)" rx="2" ry="2" />
<text  x="768.86" y="1535.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_in_thread&lt;stable_flattened_mutations_consumer&lt;compact_for_compaction&lt;sstables::compacting_sstable_writer, noop_compacted_fragments_consumer&gt; &gt;, flat_mutation_reader::no_filter&gt; (1 samples, 0.02%)</title><rect x="17.5" y="1669" width="0.2" height="15.0" fill="rgb(231,76,30)" rx="2" ry="2" />
<text  x="20.50" y="1679.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (2 samples, 0.04%)</title><rect x="38.2" y="1317" width="0.5" height="15.0" fill="rgb(241,175,32)" rx="2" ry="2" />
<text  x="41.23" y="1327.5" ></text>
</g>
<g >
<title>ser::safe_serialize_as_uint32&lt;bytes_ostream&gt; (2 samples, 0.04%)</title><rect x="385.8" y="1317" width="0.5" height="15.0" fill="rgb(229,193,8)" rx="2" ry="2" />
<text  x="388.84" y="1327.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::schedule&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::make_data_requests (11 samples, 0.21%)</title><rect x="977.8" y="1429" width="2.4" height="15.0" fill="rgb(245,76,27)" rx="2" ry="2" />
<text  x="980.82" y="1439.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (1 samples, 0.02%)</title><rect x="1117.9" y="1557" width="0.2" height="15.0" fill="rgb(210,10,46)" rx="2" ry="2" />
<text  x="1120.88" y="1567.5" ></text>
</g>
<g >
<title>allocation_strategy::get_standard_migrator&lt;blob_storage&gt; (4 samples, 0.07%)</title><rect x="239.2" y="1205" width="0.8" height="15.0" fill="rgb(243,24,11)" rx="2" ry="2" />
<text  x="242.16" y="1215.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (1 samples, 0.02%)</title><rect x="890.3" y="1429" width="0.2" height="15.0" fill="rgb(250,170,9)" rx="2" ry="2" />
<text  x="893.26" y="1439.5" ></text>
</g>
<g >
<title>bytes_view_hasher::update (1 samples, 0.02%)</title><rect x="746.9" y="1413" width="0.2" height="15.0" fill="rgb(205,157,2)" rx="2" ry="2" />
<text  x="749.89" y="1423.5" ></text>
</g>
<g >
<title>atomic_cell_or_collection::copy (67 samples, 1.25%)</title><rect x="230.3" y="1269" width="14.8" height="15.0" fill="rgb(225,186,49)" rx="2" ry="2" />
<text  x="233.34" y="1279.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;interval_bound&lt;dht::ring_position&gt;, false, false&gt;::_Optional_base (1 samples, 0.02%)</title><rect x="931.9" y="1509" width="0.3" height="15.0" fill="rgb(242,76,42)" rx="2" ry="2" />
<text  x="934.94" y="1519.5" ></text>
</g>
<g >
<title>antlr3::IntStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::mark (1 samples, 0.02%)</title><rect x="33.6" y="1381" width="0.2" height="15.0" fill="rgb(218,93,34)" rx="2" ry="2" />
<text  x="36.60" y="1391.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, cql3::operation::raw_update*, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="48.8" y="1301" width="0.2" height="15.0" fill="rgb(217,132,0)" rx="2" ry="2" />
<text  x="51.82" y="1311.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reclaiming_disabled&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_range_tombstone (11 samples, 0.21%)</title><rect x="271.4" y="1349" width="2.4" height="15.0" fill="rgb(252,58,7)" rx="2" ry="2" />
<text  x="274.36" y="1359.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (1 samples, 0.02%)</title><rect x="1139.9" y="1637" width="0.3" height="15.0" fill="rgb(248,104,46)" rx="2" ry="2" />
<text  x="1142.93" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="1493" width="0.3" height="15.0" fill="rgb(228,161,30)" rx="2" ry="2" />
<text  x="13.44" y="1503.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;std::optional&lt;auth::resource&gt; &gt;, seastar::future&lt;bool&gt; &gt;, std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;std::optional&lt;auth::resource&gt; &gt;, seastar::future&lt;bool&gt; &gt; &gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="76.6" y="1541" width="0.2" height="15.0" fill="rgb(252,118,42)" rx="2" ry="2" />
<text  x="79.61" y="1551.5" ></text>
</g>
<g >
<title>std::default_delete&lt;cql3::expr::expression::impl&gt;::operator (1 samples, 0.02%)</title><rect x="649.2" y="1493" width="0.2" height="15.0" fill="rgb(209,152,31)" rx="2" ry="2" />
<text  x="652.19" y="1503.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; const, column_definition const*&gt;, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; const, column_definition const*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;, std::hash&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (1 samples, 0.02%)</title><rect x="72.2" y="1557" width="0.2" height="15.0" fill="rgb(252,59,38)" rx="2" ry="2" />
<text  x="75.20" y="1567.5" ></text>
</g>
<g >
<title>seastar::repeat&lt;flat_mutation_reader::impl::consume_pausable&lt;flush_reader::fill_buffer (3 samples, 0.06%)</title><rect x="79.7" y="1605" width="0.7" height="15.0" fill="rgb(207,123,47)" rx="2" ry="2" />
<text  x="82.70" y="1615.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (10 samples, 0.19%)</title><rect x="774.5" y="1461" width="2.2" height="15.0" fill="rgb(227,130,11)" rx="2" ry="2" />
<text  x="777.46" y="1471.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="524.6" y="1365" width="0.2" height="15.0" fill="rgb(210,52,17)" rx="2" ry="2" />
<text  x="527.57" y="1375.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.07%)</title><rect x="579.9" y="1429" width="0.9" height="15.0" fill="rgb(243,49,28)" rx="2" ry="2" />
<text  x="582.93" y="1439.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (1 samples, 0.02%)</title><rect x="59.4" y="1381" width="0.2" height="15.0" fill="rgb(207,46,36)" rx="2" ry="2" />
<text  x="62.41" y="1391.5" ></text>
</g>
<g >
<title>schema::column_at (3 samples, 0.06%)</title><rect x="366.0" y="1333" width="0.6" height="15.0" fill="rgb(247,18,2)" rx="2" ry="2" />
<text  x="368.99" y="1343.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;clustering_key_prefix&gt;::_M_reset (2 samples, 0.04%)</title><rect x="622.3" y="1589" width="0.4" height="15.0" fill="rgb(221,193,9)" rx="2" ry="2" />
<text  x="625.28" y="1599.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (1 samples, 0.02%)</title><rect x="59.0" y="1413" width="0.2" height="15.0" fill="rgb(227,29,5)" rx="2" ry="2" />
<text  x="61.96" y="1423.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment (2 samples, 0.04%)</title><rect x="518.0" y="1381" width="0.4" height="15.0" fill="rgb(240,196,27)" rx="2" ry="2" />
<text  x="520.95" y="1391.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.02%)</title><rect x="78.8" y="1669" width="0.2" height="15.0" fill="rgb(210,0,9)" rx="2" ry="2" />
<text  x="81.81" y="1679.5" ></text>
</g>
<g >
<title>database::find_keyspace (1 samples, 0.02%)</title><rect x="1121.6" y="1365" width="0.2" height="15.0" fill="rgb(210,49,15)" rx="2" ry="2" />
<text  x="1124.63" y="1375.5" ></text>
</g>
<g >
<title>managed_bytes::free_chain (1 samples, 0.02%)</title><rect x="432.6" y="1365" width="0.2" height="15.0" fill="rgb(248,128,6)" rx="2" ry="2" />
<text  x="435.59" y="1375.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::impl&gt;::_S_destroy&lt;seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::impl, mutation_fragment&gt; (1 samples, 0.02%)</title><rect x="320.5" y="1445" width="0.3" height="15.0" fill="rgb(227,29,3)" rx="2" ry="2" />
<text  x="323.55" y="1455.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume_in_thread&lt;sstables::sstable_writer, flat_mutation_reader::no_filter&gt; (1 samples, 0.02%)</title><rect x="10.7" y="1653" width="0.2" height="15.0" fill="rgb(223,198,50)" rx="2" ry="2" />
<text  x="13.66" y="1663.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::clone&lt;row::row (1 samples, 0.02%)</title><rect x="100.4" y="917" width="0.3" height="15.0" fill="rgb(235,125,54)" rx="2" ry="2" />
<text  x="103.43" y="927.5" ></text>
</g>
<g >
<title>bound_view::tri_compare::operator (1 samples, 0.02%)</title><rect x="101.1" y="1477" width="0.2" height="15.0" fill="rgb(244,1,8)" rx="2" ry="2" />
<text  x="104.09" y="1487.5" ></text>
</g>
<g >
<title>intrusive_array&lt;cache_entry&gt;::~intrusive_array (1 samples, 0.02%)</title><rect x="79.0" y="1509" width="0.3" height="15.0" fill="rgb(209,137,12)" rx="2" ry="2" />
<text  x="82.04" y="1519.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::vector (1 samples, 0.02%)</title><rect x="61.8" y="1509" width="0.3" height="15.0" fill="rgb(239,199,7)" rx="2" ry="2" />
<text  x="64.83" y="1519.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (1 samples, 0.02%)</title><rect x="523.0" y="1349" width="0.2" height="15.0" fill="rgb(249,228,1)" rx="2" ry="2" />
<text  x="526.02" y="1359.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (2 samples, 0.04%)</title><rect x="727.0" y="1493" width="0.5" height="15.0" fill="rgb(251,145,9)" rx="2" ry="2" />
<text  x="730.04" y="1503.5" ></text>
</g>
<g >
<title>service::never_speculating_read_executor::~never_speculating_read_executor (10 samples, 0.19%)</title><rect x="1161.5" y="1605" width="2.3" height="15.0" fill="rgb(230,131,49)" rx="2" ry="2" />
<text  x="1164.55" y="1615.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement::execute (100 samples, 1.87%)</title><rect x="649.8" y="1653" width="22.1" height="15.0" fill="rgb(219,132,6)" rx="2" ry="2" />
<text  x="652.85" y="1663.5" >s..</text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql3::statements::update_statement&gt;::~shared_ptr_count_for (1 samples, 0.02%)</title><rect x="1132.9" y="1653" width="0.2" height="15.0" fill="rgb(222,54,13)" rx="2" ry="2" />
<text  x="1135.87" y="1663.5" ></text>
</g>
<g >
<title>absl::container_internal::probe_seq&lt;16ul&gt;::probe_seq (1 samples, 0.02%)</title><rect x="834.9" y="1509" width="0.2" height="15.0" fill="rgb(250,22,43)" rx="2" ry="2" />
<text  x="837.90" y="1519.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::~abstract_read_executor (2 samples, 0.04%)</title><rect x="1161.1" y="1605" width="0.4" height="15.0" fill="rgb(238,194,39)" rx="2" ry="2" />
<text  x="1164.11" y="1615.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (30 samples, 0.56%)</title><rect x="426.2" y="1397" width="6.6" height="15.0" fill="rgb(218,136,20)" rx="2" ry="2" />
<text  x="429.20" y="1407.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql_transport::messages::result_message::rows&gt;::shared_ptr_count_for&lt;cql3::result&gt; (6 samples, 0.11%)</title><rect x="660.2" y="1605" width="1.3" height="15.0" fill="rgb(218,148,1)" rx="2" ry="2" />
<text  x="663.21" y="1615.5" ></text>
</g>
<g >
<title>boost::optional&lt;service::abstract_write_response_handler::max_backlog (1 samples, 0.02%)</title><rect x="712.7" y="1557" width="0.2" height="15.0" fill="rgb(247,54,34)" rx="2" ry="2" />
<text  x="715.71" y="1567.5" ></text>
</g>
<g >
<title>seastar::future_state_base::any::operator= (1 samples, 0.02%)</title><rect x="846.6" y="1621" width="0.2" height="15.0" fill="rgb(253,89,10)" rx="2" ry="2" />
<text  x="849.59" y="1631.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::operator (3 samples, 0.06%)</title><rect x="1037.6" y="1429" width="0.7" height="15.0" fill="rgb(251,220,45)" rx="2" ry="2" />
<text  x="1040.59" y="1439.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (44 samples, 0.82%)</title><rect x="348.3" y="1365" width="9.7" height="15.0" fill="rgb(214,9,8)" rx="2" ry="2" />
<text  x="351.34" y="1375.5" ></text>
</g>
<g >
<title>mutation_source::make_reader (471 samples, 8.80%)</title><rect x="450.5" y="1557" width="103.8" height="15.0" fill="rgb(254,83,45)" rx="2" ry="2" />
<text  x="453.46" y="1567.5" >mutation_sou..</text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="677" width="0.3" height="15.0" fill="rgb(240,83,3)" rx="2" ry="2" />
<text  x="13.44" y="687.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::abstract_write_response_handler&gt;::operator=&lt;service::write_response_handler, void&gt; (1 samples, 0.02%)</title><rect x="1127.1" y="1349" width="0.3" height="15.0" fill="rgb(230,112,22)" rx="2" ry="2" />
<text  x="1130.14" y="1359.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.02%)</title><rect x="75.9" y="1333" width="0.3" height="15.0" fill="rgb(240,23,18)" rx="2" ry="2" />
<text  x="78.95" y="1343.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::storage_proxy&gt;::~shared_ptr (2 samples, 0.04%)</title><rect x="1140.6" y="1637" width="0.4" height="15.0" fill="rgb(224,94,35)" rx="2" ry="2" />
<text  x="1143.59" y="1647.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::find&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (15 samples, 0.28%)</title><rect x="757.7" y="1509" width="3.3" height="15.0" fill="rgb(231,3,30)" rx="2" ry="2" />
<text  x="760.70" y="1519.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (2 samples, 0.04%)</title><rect x="448.5" y="1573" width="0.4" height="15.0" fill="rgb(246,187,50)" rx="2" ry="2" />
<text  x="451.47" y="1583.5" ></text>
</g>
<g >
<title>bplus::data&lt;long, intrusive_array&lt;cache_entry&gt;, dht::raw_token_less_comparator, 16ul,  (1 samples, 0.02%)</title><rect x="79.0" y="1541" width="0.3" height="15.0" fill="rgb(230,99,12)" rx="2" ry="2" />
<text  x="82.04" y="1551.5" ></text>
</g>
<g >
<title>column_mapping::regular_column_at (1 samples, 0.02%)</title><rect x="1113.2" y="1397" width="0.3" height="15.0" fill="rgb(243,166,15)" rx="2" ry="2" />
<text  x="1116.24" y="1407.5" ></text>
</g>
<g >
<title>seastar::promise&lt;void&gt;::promise (1 samples, 0.02%)</title><rect x="1012.9" y="1349" width="0.2" height="15.0" fill="rgb(234,76,54)" rx="2" ry="2" />
<text  x="1015.89" y="1359.5" ></text>
</g>
<g >
<title>std::operator==&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; (1 samples, 0.02%)</title><rect x="744.0" y="1445" width="0.2" height="15.0" fill="rgb(245,189,42)" rx="2" ry="2" />
<text  x="747.03" y="1455.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::followPush (1 samples, 0.02%)</title><rect x="37.6" y="1509" width="0.2" height="15.0" fill="rgb(218,44,29)" rx="2" ry="2" />
<text  x="40.57" y="1519.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.02%)</title><rect x="36.2" y="1461" width="0.3" height="15.0" fill="rgb(233,189,20)" rx="2" ry="2" />
<text  x="39.25" y="1471.5" ></text>
</g>
<g >
<title>service::storage_service::mutate_token_metadata (1 samples, 0.02%)</title><rect x="17.3" y="1605" width="0.2" height="15.0" fill="rgb(227,165,16)" rx="2" ry="2" />
<text  x="20.28" y="1615.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::lw_shared_ptr&lt;schema const&gt;  (1 samples, 0.02%)</title><rect x="100.2" y="1589" width="0.2" height="15.0" fill="rgb(243,216,37)" rx="2" ry="2" />
<text  x="103.21" y="1599.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.02%)</title><rect x="58.1" y="1285" width="0.2" height="15.0" fill="rgb(251,83,4)" rx="2" ry="2" />
<text  x="61.08" y="1295.5" ></text>
</g>
<g >
<title>ser::qr_clustered_row__cells&lt;bytes_ostream&gt;::start_cells (2 samples, 0.04%)</title><rect x="367.1" y="1333" width="0.4" height="15.0" fill="rgb(234,153,0)" rx="2" ry="2" />
<text  x="370.09" y="1343.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::digest_read_result&gt;::schedule&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::execute (9 samples, 0.17%)</title><rect x="967.0" y="1461" width="2.0" height="15.0" fill="rgb(254,25,23)" rx="2" ry="2" />
<text  x="970.01" y="1471.5" ></text>
</g>
<g >
<title>validation::validate_column_family (1 samples, 0.02%)</title><rect x="77.1" y="1605" width="0.2" height="15.0" fill="rgb(253,151,34)" rx="2" ry="2" />
<text  x="80.05" y="1615.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (3 samples, 0.06%)</title><rect x="253.5" y="1301" width="0.7" height="15.0" fill="rgb(244,119,6)" rx="2" ry="2" />
<text  x="256.50" y="1311.5" ></text>
</g>
<g >
<title>query::querier&lt; (1 samples, 0.02%)</title><rect x="1165.3" y="1637" width="0.2" height="15.0" fill="rgb(231,49,34)" rx="2" ry="2" />
<text  x="1168.30" y="1647.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::deallocate (3 samples, 0.06%)</title><rect x="588.8" y="1509" width="0.6" height="15.0" fill="rgb(221,134,41)" rx="2" ry="2" />
<text  x="591.75" y="1519.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::execute (642 samples, 12.00%)</title><rect x="937.0" y="1573" width="141.6" height="15.0" fill="rgb(225,100,41)" rx="2" ry="2" />
<text  x="940.02" y="1583.5" >cql3::statements:..</text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (2 samples, 0.04%)</title><rect x="781.5" y="1381" width="0.5" height="15.0" fill="rgb(223,94,1)" rx="2" ry="2" />
<text  x="784.52" y="1391.5" ></text>
</g>
<g >
<title>range_tombstone_stream::get_next (1 samples, 0.02%)</title><rect x="273.1" y="1333" width="0.2" height="15.0" fill="rgb(221,217,14)" rx="2" ry="2" />
<text  x="276.13" y="1343.5" ></text>
</g>
<g >
<title>sched_setaffinity@@GLIBC_2.3.4 (44 samples, 0.82%)</title><rect x="1180.1" y="1781" width="9.7" height="15.0" fill="rgb(247,149,31)" rx="2" ry="2" />
<text  x="1183.07" y="1791.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.06%)</title><rect x="658.9" y="1589" width="0.7" height="15.0" fill="rgb(230,189,14)" rx="2" ry="2" />
<text  x="661.89" y="1599.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_Vector_base (1 samples, 0.02%)</title><rect x="59.6" y="1445" width="0.2" height="15.0" fill="rgb(230,29,15)" rx="2" ry="2" />
<text  x="62.63" y="1455.5" ></text>
</g>
<g >
<title>cql3::statements::raw::update_statement::~update_statement (1 samples, 0.02%)</title><rect x="74.4" y="1621" width="0.2" height="15.0" fill="rgb(220,105,19)" rx="2" ry="2" />
<text  x="77.40" y="1631.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::maybe_refresh_state (3 samples, 0.06%)</title><rect x="272.5" y="1317" width="0.6" height="15.0" fill="rgb(210,143,5)" rx="2" ry="2" />
<text  x="275.47" y="1327.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::handle_exception&lt;cql3::query_processor::execute_prepared (1 samples, 0.02%)</title><rect x="821.0" y="1573" width="0.2" height="15.0" fill="rgb(214,177,8)" rx="2" ry="2" />
<text  x="824.00" y="1583.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::digest_read_resolver&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="980.9" y="1461" width="0.2" height="15.0" fill="rgb(235,102,0)" rx="2" ry="2" />
<text  x="983.91" y="1471.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::followPop (2 samples, 0.04%)</title><rect x="39.6" y="1493" width="0.4" height="15.0" fill="rgb(233,196,13)" rx="2" ry="2" />
<text  x="42.56" y="1503.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::emplace&lt;atomic_cell_or_collection, seastar::optimized_optional&lt;cell_hash&gt; &gt; (1 samples, 0.02%)</title><rect x="11.5" y="1509" width="0.3" height="15.0" fill="rgb(250,73,6)" rx="2" ry="2" />
<text  x="14.54" y="1519.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.02%)</title><rect x="57.9" y="1269" width="0.2" height="15.0" fill="rgb(227,44,31)" rx="2" ry="2" />
<text  x="60.86" y="1279.5" ></text>
</g>
<g >
<title>std::__relocate_a_1&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;*, std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;*, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt; (3 samples, 0.06%)</title><rect x="49.3" y="1365" width="0.6" height="15.0" fill="rgb(251,74,32)" rx="2" ry="2" />
<text  x="52.26" y="1375.5" ></text>
</g>
<g >
<title>table::set_hit_rate (5 samples, 0.09%)</title><rect x="710.1" y="1605" width="1.1" height="15.0" fill="rgb(227,110,16)" rx="2" ry="2" />
<text  x="713.06" y="1615.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.02%)</title><rect x="59.2" y="1301" width="0.2" height="15.0" fill="rgb(230,160,51)" rx="2" ry="2" />
<text  x="62.19" y="1311.5" ></text>
</g>
<g >
<title>seastar::internal::uninitialized_wrapper_base&lt;service::storage_proxy_coordinator_query_result, false&gt;::uninitialized_set&lt;service::storage_proxy_coordinator_query_result&gt; (10 samples, 0.19%)</title><rect x="683.6" y="1621" width="2.2" height="15.0" fill="rgb(227,201,40)" rx="2" ry="2" />
<text  x="686.59" y="1631.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (2 samples, 0.04%)</title><rect x="381.4" y="1301" width="0.5" height="15.0" fill="rgb(214,96,8)" rx="2" ry="2" />
<text  x="384.42" y="1311.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::~small_vector (1 samples, 0.02%)</title><rect x="595.6" y="1509" width="0.2" height="15.0" fill="rgb(239,161,0)" rx="2" ry="2" />
<text  x="598.59" y="1519.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::set_urgent_state (2 samples, 0.04%)</title><rect x="646.3" y="1637" width="0.5" height="15.0" fill="rgb(207,128,33)" rx="2" ry="2" />
<text  x="649.32" y="1647.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::take (2 samples, 0.04%)</title><rect x="437.4" y="1413" width="0.5" height="15.0" fill="rgb(216,121,52)" rx="2" ry="2" />
<text  x="440.45" y="1423.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (1 samples, 0.02%)</title><rect x="560.1" y="1509" width="0.2" height="15.0" fill="rgb(240,21,37)" rx="2" ry="2" />
<text  x="563.08" y="1519.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::query_state&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="722.9" y="1605" width="0.2" height="15.0" fill="rgb(209,19,42)" rx="2" ry="2" />
<text  x="725.85" y="1615.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::~partition_snapshot_flat_reader (1 samples, 0.02%)</title><rect x="1165.5" y="1509" width="0.2" height="15.0" fill="rgb(215,71,41)" rx="2" ry="2" />
<text  x="1168.52" y="1519.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::digest_read_resolver (9 samples, 0.17%)</title><rect x="972.7" y="1461" width="2.0" height="15.0" fill="rgb(250,47,37)" rx="2" ry="2" />
<text  x="975.75" y="1471.5" ></text>
</g>
<g >
<title>downgrade_to_v1 (1 samples, 0.02%)</title><rect x="1130.0" y="1125" width="0.2" height="15.0" fill="rgb(229,110,45)" rx="2" ry="2" />
<text  x="1133.01" y="1135.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, cql3::operation::raw_update*, false&gt;::_Head_base&lt;cql3::operation::raw_update*&amp;&gt; (1 samples, 0.02%)</title><rect x="56.8" y="1397" width="0.2" height="15.0" fill="rgb(245,101,24)" rx="2" ry="2" />
<text  x="59.76" y="1407.5" ></text>
</g>
<g >
<title>row::row (1 samples, 0.02%)</title><rect x="848.8" y="1429" width="0.2" height="15.0" fill="rgb(235,228,21)" rx="2" ry="2" />
<text  x="851.79" y="1439.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment (13 samples, 0.24%)</title><rect x="520.4" y="1365" width="2.8" height="15.0" fill="rgb(220,200,13)" rx="2" ry="2" />
<text  x="523.38" y="1375.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::execute (37 samples, 0.69%)</title><rect x="692.4" y="1653" width="8.2" height="15.0" fill="rgb(242,202,26)" rx="2" ry="2" />
<text  x="695.41" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="565" width="0.3" height="15.0" fill="rgb(238,210,49)" rx="2" ry="2" />
<text  x="13.44" y="575.5" ></text>
</g>
<g >
<title>std::forward&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt; &gt; (1 samples, 0.02%)</title><rect x="49.0" y="1397" width="0.3" height="15.0" fill="rgb(246,170,10)" rx="2" ry="2" />
<text  x="52.04" y="1407.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="1093" width="0.3" height="15.0" fill="rgb(214,163,44)" rx="2" ry="2" />
<text  x="13.44" y="1103.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (1 samples, 0.02%)</title><rect x="10.4" y="373" width="0.3" height="15.0" fill="rgb(248,107,7)" rx="2" ry="2" />
<text  x="13.44" y="383.5" ></text>
</g>
<g >
<title>std::__copy_n_a&lt;legacy_compound_view&lt;compound_type&lt; (14 samples, 0.26%)</title><rect x="912.1" y="1509" width="3.1" height="15.0" fill="rgb(251,225,26)" rx="2" ry="2" />
<text  x="915.09" y="1519.5" ></text>
</g>
<g >
<title>basic_atomic_cell_view&lt; (1 samples, 0.02%)</title><rect x="81.5" y="1477" width="0.2" height="15.0" fill="rgb(213,144,7)" rx="2" ry="2" />
<text  x="84.46" y="1487.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (4 samples, 0.07%)</title><rect x="941.9" y="1525" width="0.9" height="15.0" fill="rgb(221,162,22)" rx="2" ry="2" />
<text  x="944.87" y="1535.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="968.8" y="1445" width="0.2" height="15.0" fill="rgb(220,44,46)" rx="2" ry="2" />
<text  x="971.78" y="1455.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_one (57 samples, 1.07%)</title><rect x="182.3" y="1429" width="12.5" height="15.0" fill="rgb(213,190,40)" rx="2" ry="2" />
<text  x="185.26" y="1439.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_state&lt;std::tuple&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (4 samples, 0.07%)</title><rect x="336.0" y="1445" width="0.9" height="15.0" fill="rgb(232,121,44)" rx="2" ry="2" />
<text  x="338.99" y="1455.5" ></text>
</g>
<g >
<title>compound_type&lt; (14 samples, 0.26%)</title><rect x="495.2" y="1365" width="3.1" height="15.0" fill="rgb(221,25,10)" rx="2" ry="2" />
<text  x="498.23" y="1375.5" ></text>
</g>
<g >
<title>std::hash&lt;auth::resource&gt;::hash_data (8 samples, 0.15%)</title><rect x="805.8" y="1477" width="1.7" height="15.0" fill="rgb(214,12,5)" rx="2" ry="2" />
<text  x="808.78" y="1487.5" ></text>
</g>
<g >
<title>partition_key::from_range&lt;std::vector&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, std::allocator&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt; &gt; (7 samples, 0.13%)</title><rect x="558.8" y="1525" width="1.5" height="15.0" fill="rgb(245,94,4)" rx="2" ry="2" />
<text  x="561.76" y="1535.5" ></text>
</g>
<g >
<title>ser::integral_serializer&lt;unsigned int&gt;::read&lt;seastar::simple_memory_input_stream&gt; (1 samples, 0.02%)</title><rect x="1115.5" y="1349" width="0.2" height="15.0" fill="rgb(207,27,51)" rx="2" ry="2" />
<text  x="1118.45" y="1359.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt; &gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="71.1" y="1525" width="0.2" height="15.0" fill="rgb(241,115,18)" rx="2" ry="2" />
<text  x="74.10" y="1535.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::find&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="77.1" y="1541" width="0.2" height="15.0" fill="rgb(235,98,45)" rx="2" ry="2" />
<text  x="80.05" y="1551.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.02%)</title><rect x="432.4" y="1365" width="0.2" height="15.0" fill="rgb(245,180,51)" rx="2" ry="2" />
<text  x="435.37" y="1375.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::get0 (3 samples, 0.06%)</title><rect x="437.2" y="1429" width="0.7" height="15.0" fill="rgb(235,225,37)" rx="2" ry="2" />
<text  x="440.23" y="1439.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (189 samples, 3.53%)</title><rect x="22.8" y="1541" width="41.7" height="15.0" fill="rgb(208,213,28)" rx="2" ry="2" />
<text  x="25.79" y="1551.5" >cql..</text>
</g>
<g >
<title>seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;::swap (3 samples, 0.06%)</title><rect x="724.8" y="1557" width="0.7" height="15.0" fill="rgb(225,86,37)" rx="2" ry="2" />
<text  x="727.84" y="1567.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.02%)</title><rect x="24.3" y="1381" width="0.3" height="15.0" fill="rgb(206,113,3)" rx="2" ry="2" />
<text  x="27.34" y="1391.5" ></text>
</g>
<g >
<title>__strlen_avx2 (6 samples, 0.11%)</title><rect x="998.1" y="1397" width="1.3" height="15.0" fill="rgb(247,33,36)" rx="2" ry="2" />
<text  x="1001.11" y="1407.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (1 samples, 0.02%)</title><rect x="898.6" y="1493" width="0.3" height="15.0" fill="rgb(225,116,11)" rx="2" ry="2" />
<text  x="901.64" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_node (1 samples, 0.02%)</title><rect x="669.7" y="1605" width="0.2" height="15.0" fill="rgb(230,179,30)" rx="2" ry="2" />
<text  x="672.70" y="1615.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.04%)</title><rect x="534.5" y="1461" width="0.4" height="15.0" fill="rgb(219,177,0)" rx="2" ry="2" />
<text  x="537.49" y="1471.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_M_reset (3 samples, 0.06%)</title><rect x="1086.1" y="1525" width="0.7" height="15.0" fill="rgb(230,26,19)" rx="2" ry="2" />
<text  x="1089.12" y="1535.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::_M_create_storage (2 samples, 0.04%)</title><rect x="927.1" y="1557" width="0.4" height="15.0" fill="rgb(237,18,19)" rx="2" ry="2" />
<text  x="930.09" y="1567.5" ></text>
</g>
<g >
<title>schema_registry_entry::get_schema (4 samples, 0.07%)</title><rect x="961.1" y="1493" width="0.8" height="15.0" fill="rgb(239,206,26)" rx="2" ry="2" />
<text  x="964.06" y="1503.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;db::view::view_update_generator&gt;::operator= (1 samples, 0.02%)</title><rect x="692.2" y="1525" width="0.2" height="15.0" fill="rgb(219,184,45)" rx="2" ry="2" />
<text  x="695.19" y="1535.5" ></text>
</g>
<g >
<title>service::shared_mutation::shared_mutation (18 samples, 0.34%)</title><rect x="1122.3" y="1365" width="4.0" height="15.0" fill="rgb(220,157,13)" rx="2" ry="2" />
<text  x="1125.29" y="1375.5" ></text>
</g>
<g >
<title>database::find_schema (31 samples, 0.58%)</title><rect x="809.1" y="1525" width="6.8" height="15.0" fill="rgb(209,38,47)" rx="2" ry="2" />
<text  x="812.09" y="1535.5" ></text>
</g>
<g >
<title>secondary_index::secondary_index_manager::list_indexes (1 samples, 0.02%)</title><rect x="70.2" y="1509" width="0.2" height="15.0" fill="rgb(221,162,19)" rx="2" ry="2" />
<text  x="73.21" y="1519.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;empty_flat_reader, std::default_delete&lt;empty_flat_reader&gt; &gt;::~unique_ptr (2 samples, 0.04%)</title><rect x="550.6" y="1445" width="0.4" height="15.0" fill="rgb(231,113,46)" rx="2" ry="2" />
<text  x="553.59" y="1455.5" ></text>
</g>
<g >
<title>cql3::selection::simple_selection::is_aggregate (8 samples, 0.15%)</title><rect x="865.8" y="1589" width="1.7" height="15.0" fill="rgb(208,38,28)" rx="2" ry="2" />
<text  x="868.78" y="1599.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.02%)</title><rect x="968.6" y="1429" width="0.2" height="15.0" fill="rgb(219,172,27)" rx="2" ry="2" />
<text  x="971.56" y="1439.5" ></text>
</g>
<g >
<title>boost::iterators::filter_iterator&lt;mutation_partition::non_dummy_rows (1 samples, 0.02%)</title><rect x="1122.9" y="1269" width="0.3" height="15.0" fill="rgb(223,116,21)" rx="2" ry="2" />
<text  x="1125.95" y="1279.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="37.3" y="1461" width="0.3" height="15.0" fill="rgb(220,107,17)" rx="2" ry="2" />
<text  x="40.35" y="1471.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::push_back (1 samples, 0.02%)</title><rect x="52.1" y="1397" width="0.2" height="15.0" fill="rgb(254,21,50)" rx="2" ry="2" />
<text  x="55.13" y="1407.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="1013.6" y="1365" width="0.2" height="15.0" fill="rgb(230,108,19)" rx="2" ry="2" />
<text  x="1016.55" y="1375.5" ></text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt;&amp;&gt; (8 samples, 0.15%)</title><rect x="1037.6" y="1445" width="1.8" height="15.0" fill="rgb(231,130,37)" rx="2" ry="2" />
<text  x="1040.59" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;11ul, cql3::expr::untyped_constant&gt; (2 samples, 0.04%)</title><rect x="53.7" y="1349" width="0.4" height="15.0" fill="rgb(229,94,29)" rx="2" ry="2" />
<text  x="56.67" y="1359.5" ></text>
</g>
<g >
<title>_setjmp (1 samples, 0.02%)</title><rect x="638.6" y="1637" width="0.2" height="15.0" fill="rgb(253,197,13)" rx="2" ry="2" />
<text  x="641.60" y="1647.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::get_value (1 samples, 0.02%)</title><rect x="714.7" y="1653" width="0.2" height="15.0" fill="rgb(215,163,29)" rx="2" ry="2" />
<text  x="717.69" y="1663.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (44 samples, 0.82%)</title><rect x="1118.3" y="1605" width="9.7" height="15.0" fill="rgb(214,96,2)" rx="2" ry="2" />
<text  x="1121.32" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="693" width="0.3" height="15.0" fill="rgb(233,19,48)" rx="2" ry="2" />
<text  x="13.44" y="703.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::hasException (1 samples, 0.02%)</title><rect x="40.2" y="1493" width="0.2" height="15.0" fill="rgb(218,183,3)" rx="2" ry="2" />
<text  x="43.22" y="1503.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::future (1 samples, 0.02%)</title><rect x="962.4" y="1509" width="0.2" height="15.0" fill="rgb(209,27,24)" rx="2" ry="2" />
<text  x="965.38" y="1519.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::raw::delete_statement, std::default_delete&lt;cql3::statements::raw::delete_statement&gt; &gt;::__uniq_ptr_impl (1 samples, 0.02%)</title><rect x="63.8" y="1493" width="0.2" height="15.0" fill="rgb(223,70,24)" rx="2" ry="2" />
<text  x="66.82" y="1503.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::check_queue_size (1 samples, 0.02%)</title><rect x="1001.9" y="1365" width="0.2" height="15.0" fill="rgb(218,112,3)" rx="2" ry="2" />
<text  x="1004.86" y="1375.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.09%)</title><rect x="894.9" y="1445" width="1.1" height="15.0" fill="rgb(216,120,46)" rx="2" ry="2" />
<text  x="897.89" y="1455.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (1 samples, 0.02%)</title><rect x="56.3" y="1461" width="0.2" height="15.0" fill="rgb(231,220,9)" rx="2" ry="2" />
<text  x="59.32" y="1471.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::cancel (1 samples, 0.02%)</title><rect x="708.3" y="1573" width="0.2" height="15.0" fill="rgb(240,106,41)" rx="2" ry="2" />
<text  x="711.30" y="1583.5" ></text>
</g>
<g >
<title>seastar::memory::stats (7 samples, 0.13%)</title><rect x="544.6" y="1445" width="1.6" height="15.0" fill="rgb(205,38,17)" rx="2" ry="2" />
<text  x="547.64" y="1455.5" ></text>
</g>
<g >
<title>seastar::memory::stats (2 samples, 0.04%)</title><rect x="515.5" y="1397" width="0.5" height="15.0" fill="rgb(233,203,14)" rx="2" ry="2" />
<text  x="518.53" y="1407.5" ></text>
</g>
<g >
<title>std::pair&lt;auth::role_or_anonymous, auth::resource&gt;::pair (1 samples, 0.02%)</title><rect x="782.0" y="1381" width="0.2" height="15.0" fill="rgb(223,66,34)" rx="2" ry="2" />
<text  x="784.96" y="1391.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="56.5" y="1445" width="0.3" height="15.0" fill="rgb(227,224,12)" rx="2" ry="2" />
<text  x="59.54" y="1455.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::BaseRecognizer (3 samples, 0.06%)</title><rect x="20.8" y="1525" width="0.7" height="15.0" fill="rgb(232,43,53)" rx="2" ry="2" />
<text  x="23.81" y="1535.5" ></text>
</g>
<g >
<title>bplus::tree&lt;long, intrusive_array&lt;cache_entry&gt;, dht::raw_token_less_comparator, 16ul,  (1 samples, 0.02%)</title><rect x="15.7" y="1701" width="0.3" height="15.0" fill="rgb(206,77,13)" rx="2" ry="2" />
<text  x="18.73" y="1711.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="1102.4" y="1573" width="0.3" height="15.0" fill="rgb(253,4,43)" rx="2" ry="2" />
<text  x="1105.44" y="1583.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (521 samples, 9.74%)</title><rect x="331.8" y="1541" width="114.9" height="15.0" fill="rgb(209,108,35)" rx="2" ry="2" />
<text  x="334.80" y="1551.5" >query::consume..</text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (1 samples, 0.02%)</title><rect x="813.5" y="1413" width="0.2" height="15.0" fill="rgb(229,146,35)" rx="2" ry="2" />
<text  x="816.50" y="1423.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (6 samples, 0.11%)</title><rect x="1167.9" y="1781" width="1.4" height="15.0" fill="rgb(224,178,27)" rx="2" ry="2" />
<text  x="1170.94" y="1791.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;cql3::expr::expression, false, false&gt;::_Optional_base (1 samples, 0.02%)</title><rect x="60.1" y="1461" width="0.2" height="15.0" fill="rgb(237,52,50)" rx="2" ry="2" />
<text  x="63.07" y="1471.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::drop_aggregate_statement, std::default_delete&lt;cql3::statements::drop_aggregate_statement&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="64.7" y="1541" width="0.2" height="15.0" fill="rgb(207,178,44)" rx="2" ry="2" />
<text  x="67.70" y="1551.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.07%)</title><rect x="763.4" y="1509" width="0.9" height="15.0" fill="rgb(219,99,25)" rx="2" ry="2" />
<text  x="766.44" y="1519.5" ></text>
</g>
<g >
<title>antlr3::IntStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::mark (1 samples, 0.02%)</title><rect x="34.7" y="1397" width="0.2" height="15.0" fill="rgb(226,7,23)" rx="2" ry="2" />
<text  x="37.70" y="1407.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_mutations_locally (3 samples, 0.06%)</title><rect x="100.4" y="1557" width="0.7" height="15.0" fill="rgb(233,194,9)" rx="2" ry="2" />
<text  x="103.43" y="1567.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.07%)</title><rect x="562.3" y="1541" width="0.9" height="15.0" fill="rgb(251,78,36)" rx="2" ry="2" />
<text  x="565.28" y="1551.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, cql3::operation::raw_update*, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="48.8" y="1285" width="0.2" height="15.0" fill="rgb(220,43,7)" rx="2" ry="2" />
<text  x="51.82" y="1295.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;position_in_partition&gt;::_M_reset (1 samples, 0.02%)</title><rect x="584.3" y="1445" width="0.3" height="15.0" fill="rgb(236,201,36)" rx="2" ry="2" />
<text  x="587.34" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base&lt;11ul, cql3::expr::untyped_constant&gt; (2 samples, 0.04%)</title><rect x="53.7" y="1365" width="0.4" height="15.0" fill="rgb(229,169,44)" rx="2" ry="2" />
<text  x="56.67" y="1375.5" ></text>
</g>
<g >
<title>seastar::repeat&lt;flat_mutation_reader::impl::consume_pausable&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (2 samples, 0.04%)</title><rect x="689.8" y="1525" width="0.4" height="15.0" fill="rgb(240,196,8)" rx="2" ry="2" />
<text  x="692.77" y="1535.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="107.5" y="1605" width="0.2" height="15.0" fill="rgb(230,223,19)" rx="2" ry="2" />
<text  x="110.49" y="1615.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (5 samples, 0.09%)</title><rect x="41.5" y="1445" width="1.1" height="15.0" fill="rgb(237,212,9)" rx="2" ry="2" />
<text  x="44.54" y="1455.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::initial_key_restrictions&lt;partition_key&gt;::merge_to (3 samples, 0.06%)</title><rect x="70.7" y="1541" width="0.6" height="15.0" fill="rgb(216,173,54)" rx="2" ry="2" />
<text  x="73.65" y="1551.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment&lt;schema const&amp;, rows_entry const&amp;&gt; (181 samples, 3.38%)</title><rect x="222.8" y="1333" width="40.0" height="15.0" fill="rgb(222,9,17)" rx="2" ry="2" />
<text  x="225.84" y="1343.5" >mut..</text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::digest_read_resolver&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="1132.4" y="1653" width="0.3" height="15.0" fill="rgb(210,188,34)" rx="2" ry="2" />
<text  x="1135.43" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="1477" width="0.3" height="15.0" fill="rgb(235,80,51)" rx="2" ry="2" />
<text  x="13.44" y="1487.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (30 samples, 0.56%)</title><rect x="849.5" y="1621" width="6.6" height="15.0" fill="rgb(252,17,31)" rx="2" ry="2" />
<text  x="852.45" y="1631.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::pop_back (1 samples, 0.02%)</title><rect x="303.8" y="1429" width="0.2" height="15.0" fill="rgb(248,181,37)" rx="2" ry="2" />
<text  x="306.79" y="1439.5" ></text>
</g>
<g >
<title>multishard_combining_reader::fill_buffer (2 samples, 0.04%)</title><rect x="100.4" y="1413" width="0.5" height="15.0" fill="rgb(219,38,52)" rx="2" ry="2" />
<text  x="103.43" y="1423.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.02%)</title><rect x="88.3" y="1637" width="0.2" height="15.0" fill="rgb(215,44,39)" rx="2" ry="2" />
<text  x="91.30" y="1647.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;boost::iterator_range&lt;mutation_fragment*&gt; &gt;::take_value (1 samples, 0.02%)</title><rect x="307.8" y="1461" width="0.2" height="15.0" fill="rgb(224,44,28)" rx="2" ry="2" />
<text  x="310.76" y="1471.5" ></text>
</g>
<g >
<title>cql3::statements::raw::select_statement::prepare_restrictions (1 samples, 0.02%)</title><rect x="10.4" y="181" width="0.3" height="15.0" fill="rgb(226,84,20)" rx="2" ry="2" />
<text  x="13.44" y="191.5" ></text>
</g>
<g >
<title>partition_snapshot::slide_to_oldest (1 samples, 0.02%)</title><rect x="1165.5" y="1477" width="0.2" height="15.0" fill="rgb(231,132,40)" rx="2" ry="2" />
<text  x="1168.52" y="1487.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::~vector (2 samples, 0.04%)</title><rect x="592.9" y="1493" width="0.5" height="15.0" fill="rgb(230,185,15)" rx="2" ry="2" />
<text  x="595.94" y="1503.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.04%)</title><rect x="967.9" y="1445" width="0.4" height="15.0" fill="rgb(219,110,32)" rx="2" ry="2" />
<text  x="970.90" y="1455.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt;::allocate (2 samples, 0.04%)</title><rect x="931.1" y="1541" width="0.4" height="15.0" fill="rgb(210,208,51)" rx="2" ry="2" />
<text  x="934.06" y="1551.5" ></text>
</g>
<g >
<title>seastar::reactor::del_timer (1 samples, 0.02%)</title><rect x="124.3" y="1541" width="0.2" height="15.0" fill="rgb(243,84,39)" rx="2" ry="2" />
<text  x="127.25" y="1551.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.02%)</title><rect x="44.8" y="1429" width="0.3" height="15.0" fill="rgb(253,38,38)" rx="2" ry="2" />
<text  x="47.85" y="1439.5" ></text>
</g>
<g >
<title>seastar::promise&lt;void&gt;::promise (3 samples, 0.06%)</title><rect x="1009.8" y="1285" width="0.7" height="15.0" fill="rgb(209,166,38)" rx="2" ry="2" />
<text  x="1012.80" y="1295.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::fetch (1 samples, 0.02%)</title><rect x="1130.0" y="1221" width="0.2" height="15.0" fill="rgb(215,189,24)" rx="2" ry="2" />
<text  x="1133.01" y="1231.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::cql_statement&gt;::~shared_ptr (4 samples, 0.07%)</title><rect x="824.8" y="1589" width="0.8" height="15.0" fill="rgb(225,125,36)" rx="2" ry="2" />
<text  x="827.75" y="1599.5" ></text>
</g>
<g >
<title>database::has_keyspace (2 samples, 0.04%)</title><rect x="74.0" y="1573" width="0.4" height="15.0" fill="rgb(245,66,37)" rx="2" ry="2" />
<text  x="76.96" y="1583.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, seastar::future&lt;void&gt;, seastar::future&lt;void&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="79.0" y="1701" width="0.3" height="15.0" fill="rgb(237,226,37)" rx="2" ry="2" />
<text  x="82.04" y="1711.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;bool&gt;::take_value (1 samples, 0.02%)</title><rect x="770.9" y="1493" width="0.3" height="15.0" fill="rgb(208,182,49)" rx="2" ry="2" />
<text  x="773.93" y="1503.5" ></text>
</g>
<g >
<title>mutation_partition::~mutation_partition (2 samples, 0.04%)</title><rect x="1127.6" y="1445" width="0.4" height="15.0" fill="rgb(226,0,43)" rx="2" ry="2" />
<text  x="1130.58" y="1455.5" ></text>
</g>
<g >
<title>database::find_schema (5 samples, 0.09%)</title><rect x="755.5" y="1541" width="1.1" height="15.0" fill="rgb(229,145,14)" rx="2" ry="2" />
<text  x="758.50" y="1551.5" ></text>
</g>
<g >
<title>compound_type&lt; (1 samples, 0.02%)</title><rect x="853.0" y="1477" width="0.2" height="15.0" fill="rgb(250,214,14)" rx="2" ry="2" />
<text  x="855.98" y="1487.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (2 samples, 0.04%)</title><rect x="94.5" y="1605" width="0.4" height="15.0" fill="rgb(236,221,12)" rx="2" ry="2" />
<text  x="97.47" y="1615.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.04%)</title><rect x="931.5" y="1509" width="0.4" height="15.0" fill="rgb(247,70,10)" rx="2" ry="2" />
<text  x="934.50" y="1519.5" ></text>
</g>
<g >
<title>validation::is_cql_key_invalid (1 samples, 0.02%)</title><rect x="852.5" y="1509" width="0.3" height="15.0" fill="rgb(250,177,15)" rx="2" ry="2" />
<text  x="855.54" y="1519.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (12 samples, 0.22%)</title><rect x="906.4" y="1525" width="2.6" height="15.0" fill="rgb(222,172,16)" rx="2" ry="2" />
<text  x="909.36" y="1535.5" ></text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (2 samples, 0.04%)</title><rect x="15.1" y="1765" width="0.4" height="15.0" fill="rgb(208,125,25)" rx="2" ry="2" />
<text  x="18.07" y="1775.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="1108.8" y="1573" width="0.3" height="15.0" fill="rgb(238,47,14)" rx="2" ry="2" />
<text  x="1111.83" y="1583.5" ></text>
</g>
<g >
<title>ser::after_qr_cell__timestamp&lt;bytes_ostream&gt;::skip_expiry (12 samples, 0.22%)</title><rect x="381.9" y="1317" width="2.6" height="15.0" fill="rgb(236,15,16)" rx="2" ry="2" />
<text  x="384.87" y="1327.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;void&gt;, database*, seastar::lw_shared_ptr&lt;schema const&gt;, frozen_mutation const&amp;, tracing::trace_state_ptr, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, seastar::bool_class&lt;db::force_sync_tag&gt; &gt;::do_flush (27 samples, 0.50%)</title><rect x="1112.1" y="1637" width="6.0" height="15.0" fill="rgb(207,63,10)" rx="2" ry="2" />
<text  x="1115.14" y="1647.5" ></text>
</g>
<g >
<title>seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;::swap (5 samples, 0.09%)</title><rect x="825.9" y="1589" width="1.1" height="15.0" fill="rgb(240,211,11)" rx="2" ry="2" />
<text  x="828.85" y="1599.5" ></text>
</g>
<g >
<title>absl::hash_internal::AbslHashValue&lt;absl::hash_internal::HashState&gt; (1 samples, 0.02%)</title><rect x="74.0" y="1525" width="0.2" height="15.0" fill="rgb(206,80,7)" rx="2" ry="2" />
<text  x="76.96" y="1535.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::binary_operator&gt; (2 samples, 0.04%)</title><rect x="71.5" y="1509" width="0.5" height="15.0" fill="rgb(221,20,23)" rx="2" ry="2" />
<text  x="74.54" y="1519.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (3 samples, 0.06%)</title><rect x="157.3" y="1573" width="0.7" height="15.0" fill="rgb(238,145,4)" rx="2" ry="2" />
<text  x="160.33" y="1583.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (5 samples, 0.09%)</title><rect x="38.2" y="1509" width="1.1" height="15.0" fill="rgb(209,227,25)" rx="2" ry="2" />
<text  x="41.23" y="1519.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::partition_snapshot_flat_reader&lt;memtable&amp;&gt; (1 samples, 0.02%)</title><rect x="506.5" y="1461" width="0.2" height="15.0" fill="rgb(239,47,23)" rx="2" ry="2" />
<text  x="509.48" y="1471.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.02%)</title><rect x="38.9" y="1349" width="0.2" height="15.0" fill="rgb(214,71,10)" rx="2" ry="2" />
<text  x="41.89" y="1359.5" ></text>
</g>
<g >
<title>auth::resource::parent (12 samples, 0.22%)</title><rect x="774.2" y="1477" width="2.7" height="15.0" fill="rgb(224,94,27)" rx="2" ry="2" />
<text  x="777.24" y="1487.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_one (1 samples, 0.02%)</title><rect x="848.6" y="1541" width="0.2" height="15.0" fill="rgb(253,141,5)" rx="2" ry="2" />
<text  x="851.57" y="1551.5" ></text>
</g>
<g >
<title>row_cache::do_make_reader (1 samples, 0.02%)</title><rect x="536.9" y="1493" width="0.2" height="15.0" fill="rgb(221,179,13)" rx="2" ry="2" />
<text  x="539.92" y="1503.5" ></text>
</g>
<g >
<title>mutation_reader_merger::close (2 samples, 0.04%)</title><rect x="1165.5" y="1573" width="0.5" height="15.0" fill="rgb(222,75,9)" rx="2" ry="2" />
<text  x="1168.52" y="1583.5" ></text>
</g>
<g >
<title>ser::qr_partition__static_row&lt;bytes_ostream&gt;::qr_partition__static_row (4 samples, 0.07%)</title><rect x="349.2" y="1317" width="0.9" height="15.0" fill="rgb(232,21,48)" rx="2" ry="2" />
<text  x="352.22" y="1327.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (5 samples, 0.09%)</title><rect x="473.8" y="1461" width="1.1" height="15.0" fill="rgb(211,2,37)" rx="2" ry="2" />
<text  x="476.84" y="1471.5" ></text>
</g>
<g >
<title>seastar::future&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry_ptr&gt;::then_impl&lt;utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (14 samples, 0.26%)</title><rect x="737.2" y="1525" width="3.1" height="15.0" fill="rgb(231,140,14)" rx="2" ry="2" />
<text  x="740.19" y="1535.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="1365" width="0.3" height="15.0" fill="rgb(252,32,22)" rx="2" ry="2" />
<text  x="13.44" y="1375.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (5 samples, 0.09%)</title><rect x="322.3" y="1413" width="1.1" height="15.0" fill="rgb(246,140,5)" rx="2" ry="2" />
<text  x="325.31" y="1423.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;mutation_reader_merger::operator (3 samples, 0.06%)</title><rect x="308.0" y="1477" width="0.6" height="15.0" fill="rgb(243,225,17)" rx="2" ry="2" />
<text  x="310.98" y="1487.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::set_errorRecovery (1 samples, 0.02%)</title><rect x="39.1" y="1493" width="0.2" height="15.0" fill="rgb(222,55,12)" rx="2" ry="2" />
<text  x="42.11" y="1503.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (1 samples, 0.02%)</title><rect x="1115.0" y="1333" width="0.2" height="15.0" fill="rgb(230,121,30)" rx="2" ry="2" />
<text  x="1118.01" y="1343.5" ></text>
</g>
<g >
<title>std::apply&lt;service::client_state::has_column_family_access (9 samples, 0.17%)</title><rect x="75.1" y="1605" width="2.0" height="15.0" fill="rgb(219,12,43)" rx="2" ry="2" />
<text  x="78.07" y="1615.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::~partition_snapshot_flat_reader (2 samples, 0.04%)</title><rect x="1165.5" y="1525" width="0.5" height="15.0" fill="rgb(223,142,9)" rx="2" ry="2" />
<text  x="1168.52" y="1535.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (6 samples, 0.11%)</title><rect x="44.4" y="1461" width="1.3" height="15.0" fill="rgb(242,202,13)" rx="2" ry="2" />
<text  x="47.41" y="1471.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (2 samples, 0.04%)</title><rect x="37.1" y="1477" width="0.5" height="15.0" fill="rgb(227,32,32)" rx="2" ry="2" />
<text  x="40.13" y="1487.5" ></text>
</g>
<g >
<title>mutation_fragment::operator= (2 samples, 0.04%)</title><rect x="218.7" y="1381" width="0.4" height="15.0" fill="rgb(221,91,49)" rx="2" ry="2" />
<text  x="221.65" y="1391.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_partition_key_range (1 samples, 0.02%)</title><rect x="78.8" y="1333" width="0.2" height="15.0" fill="rgb(208,20,25)" rx="2" ry="2" />
<text  x="81.81" y="1343.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.02%)</title><rect x="570.0" y="1461" width="0.2" height="15.0" fill="rgb(224,48,22)" rx="2" ry="2" />
<text  x="573.00" y="1471.5" ></text>
</g>
<g >
<title>std::hash&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::operator (1 samples, 0.02%)</title><rect x="760.8" y="1477" width="0.2" height="15.0" fill="rgb(212,189,39)" rx="2" ry="2" />
<text  x="763.79" y="1487.5" ></text>
</g>
<g >
<title>compound_type&lt; (6 samples, 0.11%)</title><rect x="920.3" y="1509" width="1.3" height="15.0" fill="rgb(240,148,51)" rx="2" ry="2" />
<text  x="923.25" y="1519.5" ></text>
</g>
<g >
<title>reader_permit::consume (5 samples, 0.09%)</title><rect x="423.3" y="1381" width="1.1" height="15.0" fill="rgb(226,196,16)" rx="2" ry="2" />
<text  x="426.33" y="1391.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::leaf_node::free (4 samples, 0.07%)</title><rect x="431.5" y="1365" width="0.9" height="15.0" fill="rgb(234,104,0)" rx="2" ry="2" />
<text  x="434.49" y="1375.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="1094.1" y="1557" width="0.2" height="15.0" fill="rgb(242,46,43)" rx="2" ry="2" />
<text  x="1097.06" y="1567.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::get0 (3 samples, 0.06%)</title><rect x="703.4" y="1605" width="0.7" height="15.0" fill="rgb(225,132,19)" rx="2" ry="2" />
<text  x="706.44" y="1615.5" ></text>
</g>
<g >
<title>validation::validate_cql_key (1 samples, 0.02%)</title><rect x="852.5" y="1525" width="0.3" height="15.0" fill="rgb(235,158,17)" rx="2" ry="2" />
<text  x="855.54" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::constant&gt;  (56 samples, 1.05%)</title><rect x="881.0" y="1461" width="12.3" height="15.0" fill="rgb(246,225,46)" rx="2" ry="2" />
<text  x="883.99" y="1471.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume_in_thread&lt;sstables::sstable_writer&gt; (1 samples, 0.02%)</title><rect x="79.3" y="1653" width="0.2" height="15.0" fill="rgb(252,64,52)" rx="2" ry="2" />
<text  x="82.26" y="1663.5" ></text>
</g>
<g >
<title>seastar::reactor::run (4,920 samples, 91.96%)</title><rect x="82.6" y="1701" width="1085.1" height="15.0" fill="rgb(229,29,2)" rx="2" ry="2" />
<text  x="85.56" y="1711.5" >seastar::reactor::run</text>
</g>
<g >
<title>tracing::add_table_name (7 samples, 0.13%)</title><rect x="1109.1" y="1573" width="1.5" height="15.0" fill="rgb(248,185,29)" rx="2" ry="2" />
<text  x="1112.05" y="1583.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.02%)</title><rect x="1114.3" y="1365" width="0.3" height="15.0" fill="rgb(252,116,34)" rx="2" ry="2" />
<text  x="1117.35" y="1375.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.29] (1 samples, 0.02%)</title><rect x="10.2" y="1781" width="0.2" height="15.0" fill="rgb(229,69,28)" rx="2" ry="2" />
<text  x="13.22" y="1791.5" ></text>
</g>
<g >
<title>sstables::data_consume_rows&lt;sstables::mx::data_consume_rows_context_m&gt; (1 samples, 0.02%)</title><rect x="1130.0" y="1045" width="0.2" height="15.0" fill="rgb(208,44,43)" rx="2" ry="2" />
<text  x="1133.01" y="1055.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::do_merge_with (1 samples, 0.02%)</title><rect x="70.7" y="1477" width="0.2" height="15.0" fill="rgb(239,184,44)" rx="2" ry="2" />
<text  x="73.65" y="1487.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::operator== (2 samples, 0.04%)</title><rect x="790.1" y="1285" width="0.5" height="15.0" fill="rgb(243,46,6)" rx="2" ry="2" />
<text  x="793.12" y="1295.5" ></text>
</g>
<g >
<title>logalloc::basic_region_impl::set_reclaiming_enabled (1 samples, 0.02%)</title><rect x="220.4" y="1349" width="0.2" height="15.0" fill="rgb(246,17,30)" rx="2" ry="2" />
<text  x="223.41" y="1359.5" ></text>
</g>
<g >
<title>cql3::statements::update_statement::update_statement (2 samples, 0.04%)</title><rect x="72.6" y="1541" width="0.5" height="15.0" fill="rgb(207,155,23)" rx="2" ry="2" />
<text  x="75.64" y="1551.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::partition_slice const, std::default_delete&lt;query::partition_slice const&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="1166.2" y="1621" width="0.2" height="15.0" fill="rgb(216,65,2)" rx="2" ry="2" />
<text  x="1169.18" y="1631.5" ></text>
</g>
<g >
<title>antlr3::IntStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::seek (2 samples, 0.04%)</title><rect x="34.0" y="1365" width="0.5" height="15.0" fill="rgb(230,43,22)" rx="2" ry="2" />
<text  x="37.04" y="1375.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (1 samples, 0.02%)</title><rect x="93.4" y="1589" width="0.2" height="15.0" fill="rgb(234,57,47)" rx="2" ry="2" />
<text  x="96.37" y="1599.5" ></text>
</g>
<g >
<title>compound_wrapper&lt;partition_key, partition_key_view&gt;::make_empty (8 samples, 0.15%)</title><rect x="558.8" y="1541" width="1.7" height="15.0" fill="rgb(240,11,30)" rx="2" ry="2" />
<text  x="561.76" y="1551.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.06%)</title><rect x="575.5" y="1429" width="0.7" height="15.0" fill="rgb(245,75,45)" rx="2" ry="2" />
<text  x="578.52" y="1439.5" ></text>
</g>
<g >
<title>mutation_partition::apply (1 samples, 0.02%)</title><rect x="102.4" y="1493" width="0.2" height="15.0" fill="rgb(211,120,32)" rx="2" ry="2" />
<text  x="105.41" y="1503.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (2 samples, 0.04%)</title><rect x="51.5" y="1365" width="0.4" height="15.0" fill="rgb(224,197,0)" rx="2" ry="2" />
<text  x="54.47" y="1375.5" ></text>
</g>
<g >
<title>seastar::futurize_invoke&lt;seastar::future&lt;void&gt;  (483 samples, 9.03%)</title><rect x="334.7" y="1493" width="106.5" height="15.0" fill="rgb(237,205,7)" rx="2" ry="2" />
<text  x="337.67" y="1503.5" >seastar::futu..</text>
</g>
<g >
<title>operator new (10 samples, 0.19%)</title><rect x="978.0" y="1413" width="2.2" height="15.0" fill="rgb(207,112,14)" rx="2" ry="2" />
<text  x="981.04" y="1423.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (1 samples, 0.02%)</title><rect x="1035.6" y="1445" width="0.2" height="15.0" fill="rgb(248,193,1)" rx="2" ry="2" />
<text  x="1038.61" y="1455.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::partition_snapshot_flat_reader&lt;memtable&amp;&gt; (1 samples, 0.02%)</title><rect x="527.9" y="1429" width="0.2" height="15.0" fill="rgb(234,129,42)" rx="2" ry="2" />
<text  x="530.88" y="1439.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE9then_implIZNS6_14discard_resultEvEUlDpOT_E_NS0_IvEEEET0_OT_ (14 samples, 0.26%)</title><rect x="718.7" y="1621" width="3.0" height="15.0" fill="rgb(244,136,0)" rx="2" ry="2" />
<text  x="721.66" y="1631.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_map&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::at&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt; &gt; (23 samples, 0.43%)</title><rect x="1035.8" y="1477" width="5.1" height="15.0" fill="rgb(208,105,24)" rx="2" ry="2" />
<text  x="1038.83" y="1487.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="445.4" y="1509" width="0.2" height="15.0" fill="rgb(247,191,41)" rx="2" ry="2" />
<text  x="448.39" y="1519.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.02%)</title><rect x="36.2" y="1381" width="0.3" height="15.0" fill="rgb(247,229,49)" rx="2" ry="2" />
<text  x="39.25" y="1391.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (14 samples, 0.26%)</title><rect x="1177.0" y="1765" width="3.1" height="15.0" fill="rgb(228,74,31)" rx="2" ry="2" />
<text  x="1179.99" y="1775.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_next (1 samples, 0.02%)</title><rect x="305.6" y="1477" width="0.2" height="15.0" fill="rgb(245,205,36)" rx="2" ry="2" />
<text  x="308.55" y="1487.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::fetch (1 samples, 0.02%)</title><rect x="100.9" y="1237" width="0.2" height="15.0" fill="rgb(254,62,52)" rx="2" ry="2" />
<text  x="103.87" y="1247.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.06%)</title><rect x="149.4" y="1589" width="0.7" height="15.0" fill="rgb(212,214,15)" rx="2" ry="2" />
<text  x="152.39" y="1599.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::fetch (2 samples, 0.04%)</title><rect x="848.6" y="1621" width="0.4" height="15.0" fill="rgb(229,36,36)" rx="2" ry="2" />
<text  x="851.57" y="1631.5" ></text>
</g>
<g >
<title>partition_builder::accept_row (1 samples, 0.02%)</title><rect x="1115.0" y="1381" width="0.2" height="15.0" fill="rgb(222,178,33)" rx="2" ry="2" />
<text  x="1118.01" y="1391.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.02%)</title><rect x="50.6" y="1349" width="0.2" height="15.0" fill="rgb(234,159,50)" rx="2" ry="2" />
<text  x="53.58" y="1359.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;db::view::view_update_generator&gt;::~shared_ptr_count_for (1 samples, 0.02%)</title><rect x="692.2" y="1493" width="0.2" height="15.0" fill="rgb(217,121,44)" rx="2" ry="2" />
<text  x="695.19" y="1503.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value_view, std::allocator&lt;cql3::raw_value_view&gt; &gt;::~vector (6 samples, 0.11%)</title><rect x="678.5" y="1605" width="1.3" height="15.0" fill="rgb(218,67,6)" rx="2" ry="2" />
<text  x="681.52" y="1615.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;(anonymous namespace)::remote_fill_buffer_result&gt; &gt;::invoke&lt;(anonymous namespace)::shard_reader::do_fill_buffer (1 samples, 0.02%)</title><rect x="100.9" y="1349" width="0.2" height="15.0" fill="rgb(224,47,25)" rx="2" ry="2" />
<text  x="103.87" y="1359.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="1253" width="0.3" height="15.0" fill="rgb(238,4,51)" rx="2" ry="2" />
<text  x="13.44" y="1263.5" ></text>
</g>
<g >
<title>table::query (2,258 samples, 42.21%)</title><rect x="136.8" y="1605" width="498.0" height="15.0" fill="rgb(237,77,28)" rx="2" ry="2" />
<text  x="139.82" y="1615.5" >table::query</text>
</g>
<g >
<title>double_decker&lt;long, cache_entry, dht::raw_token_less_comparator, dht::ring_position_comparator, 16,  (1 samples, 0.02%)</title><rect x="15.7" y="1717" width="0.3" height="15.0" fill="rgb(231,116,28)" rx="2" ry="2" />
<text  x="18.73" y="1727.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;clustering_key_prefix, false, false&gt;::_Optional_base (3 samples, 0.06%)</title><rect x="277.8" y="1365" width="0.6" height="15.0" fill="rgb(252,58,7)" rx="2" ry="2" />
<text  x="280.76" y="1375.5" ></text>
</g>
<g >
<title>bplus::searcher&lt;dht::ring_position, long, dht::raw_token_less_comparator, 16ul,  (3 samples, 0.06%)</title><rect x="541.1" y="1429" width="0.7" height="15.0" fill="rgb(238,1,22)" rx="2" ry="2" />
<text  x="544.11" y="1439.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;partition_key, false, false&gt;::_Optional_base (1 samples, 0.02%)</title><rect x="555.7" y="1557" width="0.2" height="15.0" fill="rgb(246,181,39)" rx="2" ry="2" />
<text  x="558.67" y="1567.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.04%)</title><rect x="164.6" y="1573" width="0.5" height="15.0" fill="rgb(230,182,7)" rx="2" ry="2" />
<text  x="167.61" y="1583.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::take (1 samples, 0.02%)</title><rect x="703.9" y="1589" width="0.2" height="15.0" fill="rgb(233,163,30)" rx="2" ry="2" />
<text  x="706.88" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;7ul, cql3::expr::untyped_constant&gt; (1 samples, 0.02%)</title><rect x="53.7" y="1205" width="0.2" height="15.0" fill="rgb(254,165,15)" rx="2" ry="2" />
<text  x="56.67" y="1215.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (1 samples, 0.02%)</title><rect x="1111.0" y="1573" width="0.3" height="15.0" fill="rgb(224,96,6)" rx="2" ry="2" />
<text  x="1114.04" y="1583.5" ></text>
</g>
<g >
<title>cql3::single_column_relation::new_EQ_restriction (1 samples, 0.02%)</title><rect x="10.4" y="101" width="0.3" height="15.0" fill="rgb(225,198,1)" rx="2" ry="2" />
<text  x="13.44" y="111.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;query::result&gt;::make&lt;query::result&gt; (1 samples, 0.02%)</title><rect x="133.7" y="1605" width="0.3" height="15.0" fill="rgb(219,77,5)" rx="2" ry="2" />
<text  x="136.73" y="1615.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::execute_without_condition (30 samples, 0.56%)</title><rect x="849.5" y="1573" width="6.6" height="15.0" fill="rgb(210,99,22)" rx="2" ry="2" />
<text  x="852.45" y="1583.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.04%)</title><rect x="534.5" y="1477" width="0.4" height="15.0" fill="rgb(205,14,40)" rx="2" ry="2" />
<text  x="537.49" y="1487.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (10 samples, 0.19%)</title><rect x="1156.5" y="1637" width="2.2" height="15.0" fill="rgb(248,33,5)" rx="2" ry="2" />
<text  x="1159.47" y="1647.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_slice_or_needs_filtering (4 samples, 0.07%)</title><rect x="653.6" y="1589" width="0.9" height="15.0" fill="rgb(224,161,3)" rx="2" ry="2" />
<text  x="656.60" y="1599.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;gms::inet_address, std::pair&lt;gms::inet_address const, utils::UUID&gt;, std::allocator&lt;std::pair&lt;gms::inet_address const, utils::UUID&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;gms::inet_address&gt;, std::hash&lt;gms::inet_address&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (1 samples, 0.02%)</title><rect x="1142.8" y="1573" width="0.2" height="15.0" fill="rgb(223,221,54)" rx="2" ry="2" />
<text  x="1145.80" y="1583.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (9 samples, 0.17%)</title><rect x="90.1" y="1621" width="1.9" height="15.0" fill="rgb(228,91,41)" rx="2" ry="2" />
<text  x="93.06" y="1631.5" ></text>
</g>
<g >
<title>seastar::do_until&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (454 samples, 8.49%)</title><rect x="197.3" y="1445" width="100.1" height="15.0" fill="rgb(209,101,51)" rx="2" ry="2" />
<text  x="200.26" y="1455.5" >seastar::do_..</text>
</g>
<g >
<title>db::system_keyspace::make (1 samples, 0.02%)</title><rect x="17.1" y="1477" width="0.2" height="15.0" fill="rgb(221,50,6)" rx="2" ry="2" />
<text  x="20.06" y="1487.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (3 samples, 0.06%)</title><rect x="55.2" y="1333" width="0.7" height="15.0" fill="rgb(214,225,53)" rx="2" ry="2" />
<text  x="58.21" y="1343.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;flat_mutation_reader  (465 samples, 8.69%)</title><rect x="451.8" y="1525" width="102.5" height="15.0" fill="rgb(239,173,39)" rx="2" ry="2" />
<text  x="454.78" y="1535.5" >std::_Functi..</text>
</g>
<g >
<title>reader_permit::consume (1 samples, 0.02%)</title><rect x="208.1" y="1349" width="0.2" height="15.0" fill="rgb(228,93,43)" rx="2" ry="2" />
<text  x="211.06" y="1359.5" ></text>
</g>
<g >
<title>mutation_partition::lower_bound (1 samples, 0.02%)</title><rect x="265.6" y="1301" width="0.3" height="15.0" fill="rgb(245,168,38)" rx="2" ry="2" />
<text  x="268.63" y="1311.5" ></text>
</g>
<g >
<title>allocation_strategy::alloc&lt;blob_storage&gt; (1 samples, 0.02%)</title><rect x="101.5" y="1509" width="0.3" height="15.0" fill="rgb(230,113,26)" rx="2" ry="2" />
<text  x="104.53" y="1519.5" ></text>
</g>
<g >
<title>absl::hash_internal::AbslHashValue&lt;absl::hash_internal::HashState&gt; (4 samples, 0.07%)</title><rect x="1039.6" y="1429" width="0.9" height="15.0" fill="rgb(244,166,19)" rx="2" ry="2" />
<text  x="1042.58" y="1439.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (1 samples, 0.02%)</title><rect x="1165.5" y="1493" width="0.2" height="15.0" fill="rgb(219,158,44)" rx="2" ry="2" />
<text  x="1168.52" y="1503.5" ></text>
</g>
<g >
<title>read_page&lt;(anonymous namespace)::mutation_query_result_builder&gt; (3 samples, 0.06%)</title><rect x="100.4" y="1461" width="0.7" height="15.0" fill="rgb(209,13,2)" rx="2" ry="2" />
<text  x="103.43" y="1471.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;dht::token, std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt;, std::allocator&lt;std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;dht::token&gt;, std::hash&lt;dht::token&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (22 samples, 0.41%)</title><rect x="1062.3" y="1413" width="4.8" height="15.0" fill="rgb(221,33,34)" rx="2" ry="2" />
<text  x="1065.30" y="1423.5" ></text>
</g>
<g >
<title>database::has_keyspace (13 samples, 0.24%)</title><rect x="827.2" y="1573" width="2.8" height="15.0" fill="rgb(216,92,7)" rx="2" ry="2" />
<text  x="830.18" y="1583.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::revoke_statement, std::default_delete&lt;cql3::statements::revoke_statement&gt; &gt;::__uniq_ptr_impl (1 samples, 0.02%)</title><rect x="64.0" y="1493" width="0.3" height="15.0" fill="rgb(247,117,38)" rx="2" ry="2" />
<text  x="67.04" y="1503.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (4 samples, 0.07%)</title><rect x="617.9" y="1589" width="0.8" height="15.0" fill="rgb(207,160,38)" rx="2" ry="2" />
<text  x="620.87" y="1599.5" ></text>
</g>
<g >
<title>logalloc::basic_region_impl::set_reclaiming_enabled (3 samples, 0.06%)</title><rect x="270.3" y="1365" width="0.6" height="15.0" fill="rgb(226,120,40)" rx="2" ry="2" />
<text  x="273.26" y="1375.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="906.1" y="1493" width="0.3" height="15.0" fill="rgb(231,84,48)" rx="2" ry="2" />
<text  x="909.14" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (1 samples, 0.02%)</title><rect x="854.5" y="1413" width="0.2" height="15.0" fill="rgb(225,53,17)" rx="2" ry="2" />
<text  x="857.53" y="1423.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_range_tombstone (1 samples, 0.02%)</title><rect x="219.1" y="1381" width="0.2" height="15.0" fill="rgb(236,127,10)" rx="2" ry="2" />
<text  x="222.09" y="1391.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (7 samples, 0.13%)</title><rect x="752.0" y="1541" width="1.5" height="15.0" fill="rgb(230,53,34)" rx="2" ry="2" />
<text  x="754.97" y="1551.5" ></text>
</g>
<g >
<title>service::never_speculating_read_executor::never_speculating_read_executor (25 samples, 0.47%)</title><rect x="1045.1" y="1477" width="5.5" height="15.0" fill="rgb(234,211,38)" rx="2" ry="2" />
<text  x="1048.09" y="1487.5" ></text>
</g>
<g >
<title>locator::calculate_effective_replication_map (1 samples, 0.02%)</title><rect x="102.6" y="1653" width="0.3" height="15.0" fill="rgb(210,74,30)" rx="2" ry="2" />
<text  x="105.64" y="1663.5" ></text>
</g>
<g >
<title>std::optional&lt;clustering_key_prefix&gt;::operator=&lt;clustering_key_prefix&amp;&gt; (1 samples, 0.02%)</title><rect x="421.3" y="1381" width="0.3" height="15.0" fill="rgb(242,61,12)" rx="2" ry="2" />
<text  x="424.35" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_nodes (1 samples, 0.02%)</title><rect x="1078.4" y="1541" width="0.2" height="15.0" fill="rgb(243,170,53)" rx="2" ry="2" />
<text  x="1081.40" y="1551.5" ></text>
</g>
<g >
<title>row::apply_monotonically (1 samples, 0.02%)</title><rect x="16.6" y="1637" width="0.2" height="15.0" fill="rgb(221,175,36)" rx="2" ry="2" />
<text  x="19.62" y="1647.5" ></text>
</g>
<g >
<title>dht::shard_of (8 samples, 0.15%)</title><rect x="986.6" y="1429" width="1.8" height="15.0" fill="rgb(205,143,27)" rx="2" ry="2" />
<text  x="989.64" y="1439.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (1 samples, 0.02%)</title><rect x="588.5" y="1493" width="0.3" height="15.0" fill="rgb(236,133,17)" rx="2" ry="2" />
<text  x="591.53" y="1503.5" ></text>
</g>
<g >
<title>seastar::async&lt;sstables::compaction::run&lt;noop_compacted_fragments_consumer&gt; (1 samples, 0.02%)</title><rect x="1130.0" y="1573" width="0.2" height="15.0" fill="rgb(243,221,14)" rx="2" ry="2" />
<text  x="1133.01" y="1583.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_restrictions::size (2 samples, 0.04%)</title><rect x="872.0" y="1573" width="0.4" height="15.0" fill="rgb(246,146,23)" rx="2" ry="2" />
<text  x="874.95" y="1583.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::visit&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (2 samples, 0.04%)</title><rect x="1127.6" y="1365" width="0.4" height="15.0" fill="rgb(228,159,54)" rx="2" ry="2" />
<text  x="1130.58" y="1375.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (1 samples, 0.02%)</title><rect x="1130.0" y="1269" width="0.2" height="15.0" fill="rgb(250,58,47)" rx="2" ry="2" />
<text  x="1133.01" y="1279.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_partition_key_ranges (273 samples, 5.10%)</title><rect x="872.4" y="1573" width="60.2" height="15.0" fill="rgb(229,207,38)" rx="2" ry="2" />
<text  x="875.39" y="1583.5" >cql3::..</text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="78.8" y="1749" width="0.2" height="15.0" fill="rgb(211,106,50)" rx="2" ry="2" />
<text  x="81.81" y="1759.5" ></text>
</g>
<g >
<title>database::query (20 samples, 0.37%)</title><rect x="95.8" y="1653" width="4.4" height="15.0" fill="rgb(230,160,27)" rx="2" ry="2" />
<text  x="98.80" y="1663.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_insert_unique_node (8 samples, 0.15%)</title><rect x="1146.8" y="1605" width="1.7" height="15.0" fill="rgb(214,228,19)" rx="2" ry="2" />
<text  x="1149.77" y="1615.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::clear (1 samples, 0.02%)</title><rect x="1129.3" y="1637" width="0.3" height="15.0" fill="rgb(215,32,46)" rx="2" ry="2" />
<text  x="1132.35" y="1647.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getText[abi:cxx11] (1 samples, 0.02%)</title><rect x="59.0" y="1429" width="0.2" height="15.0" fill="rgb(219,226,10)" rx="2" ry="2" />
<text  x="61.96" y="1439.5" ></text>
</g>
<g >
<title>seastar::memory::allocate_aligned (4 samples, 0.07%)</title><rect x="249.7" y="1221" width="0.9" height="15.0" fill="rgb(251,175,25)" rx="2" ry="2" />
<text  x="252.75" y="1231.5" ></text>
</g>
<g >
<title>clustering_row::clustering_row (1 samples, 0.02%)</title><rect x="100.4" y="949" width="0.3" height="15.0" fill="rgb(236,177,45)" rx="2" ry="2" />
<text  x="103.43" y="959.5" ></text>
</g>
<g >
<title>partition_snapshot::get_change_mark (1 samples, 0.02%)</title><rect x="263.2" y="1317" width="0.2" height="15.0" fill="rgb(236,39,20)" rx="2" ry="2" />
<text  x="266.20" y="1327.5" ></text>
</g>
<g >
<title>dht::tri_compare (1 samples, 0.02%)</title><rect x="1126.9" y="1269" width="0.2" height="15.0" fill="rgb(230,153,33)" rx="2" ry="2" />
<text  x="1129.92" y="1279.5" ></text>
</g>
<g >
<title>read_simple&lt;unsigned short, managed_bytes_basic_view&lt; (2 samples, 0.04%)</title><rect x="909.4" y="1525" width="0.5" height="15.0" fill="rgb(235,108,5)" rx="2" ry="2" />
<text  x="912.45" y="1535.5" ></text>
</g>
<g >
<title>lister::scan_dir (1 samples, 0.02%)</title><rect x="690.7" y="1637" width="0.2" height="15.0" fill="rgb(226,140,48)" rx="2" ry="2" />
<text  x="693.65" y="1647.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::set_urgent_state (2 samples, 0.04%)</title><rect x="665.7" y="1637" width="0.5" height="15.0" fill="rgb(227,2,14)" rx="2" ry="2" />
<text  x="668.73" y="1647.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.02%)</title><rect x="36.2" y="1349" width="0.3" height="15.0" fill="rgb(250,192,8)" rx="2" ry="2" />
<text  x="39.25" y="1359.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.02%)</title><rect x="79.3" y="1701" width="0.2" height="15.0" fill="rgb(224,127,49)" rx="2" ry="2" />
<text  x="82.26" y="1711.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;static_row&gt;::_M_reset (1 samples, 0.02%)</title><rect x="425.8" y="1397" width="0.2" height="15.0" fill="rgb(215,125,34)" rx="2" ry="2" />
<text  x="428.76" y="1407.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (1 samples, 0.02%)</title><rect x="1071.6" y="1509" width="0.2" height="15.0" fill="rgb(205,61,28)" rx="2" ry="2" />
<text  x="1074.56" y="1519.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::value (22 samples, 0.41%)</title><rect x="51.5" y="1445" width="4.8" height="15.0" fill="rgb(205,28,15)" rx="2" ry="2" />
<text  x="54.47" y="1455.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (5 samples, 0.09%)</title><rect x="1087.9" y="1493" width="1.1" height="15.0" fill="rgb(209,14,30)" rx="2" ry="2" />
<text  x="1090.88" y="1503.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.02%)</title><rect x="59.4" y="1349" width="0.2" height="15.0" fill="rgb(239,123,45)" rx="2" ry="2" />
<text  x="62.41" y="1359.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.02%)</title><rect x="78.8" y="1605" width="0.2" height="15.0" fill="rgb(246,32,39)" rx="2" ry="2" />
<text  x="81.81" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="1461" width="0.3" height="15.0" fill="rgb(228,64,26)" rx="2" ry="2" />
<text  x="13.44" y="1471.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.02%)</title><rect x="58.1" y="1301" width="0.2" height="15.0" fill="rgb(247,21,38)" rx="2" ry="2" />
<text  x="61.08" y="1311.5" ></text>
</g>
<g >
<title>db::schema_tables::calculate_schema_digest (4 samples, 0.07%)</title><rect x="100.4" y="1605" width="0.9" height="15.0" fill="rgb(211,11,47)" rx="2" ry="2" />
<text  x="103.43" y="1615.5" ></text>
</g>
<g >
<title>std::operator+ (2 samples, 0.04%)</title><rect x="46.4" y="1317" width="0.4" height="15.0" fill="rgb(208,216,51)" rx="2" ry="2" />
<text  x="49.39" y="1327.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (2 samples, 0.04%)</title><rect x="44.4" y="1445" width="0.4" height="15.0" fill="rgb(230,46,38)" rx="2" ry="2" />
<text  x="47.41" y="1455.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.04%)</title><rect x="38.2" y="1397" width="0.5" height="15.0" fill="rgb(232,43,53)" rx="2" ry="2" />
<text  x="41.23" y="1407.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_last_fragment_kind, 4ul&gt;::small_vector (1 samples, 0.02%)</title><rect x="471.0" y="1429" width="0.2" height="15.0" fill="rgb(238,126,44)" rx="2" ry="2" />
<text  x="473.97" y="1439.5" ></text>
</g>
<g >
<title>write_fragmented&lt;managed_bytes_basic_view&lt; (5 samples, 0.09%)</title><rect x="891.6" y="1429" width="1.1" height="15.0" fill="rgb(253,210,21)" rx="2" ry="2" />
<text  x="894.58" y="1439.5" ></text>
</g>
<g >
<title>mutation_reader_merger::maybe_add_readers_at_partition_boundary (4 samples, 0.07%)</title><rect x="179.4" y="1445" width="0.9" height="15.0" fill="rgb(217,150,42)" rx="2" ry="2" />
<text  x="182.39" y="1455.5" ></text>
</g>
<g >
<title>antlr3::Lexer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::Lexer (1 samples, 0.02%)</title><rect x="20.4" y="1573" width="0.2" height="15.0" fill="rgb(230,214,53)" rx="2" ry="2" />
<text  x="23.37" y="1583.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::get_at (1 samples, 0.02%)</title><rect x="363.8" y="1333" width="0.2" height="15.0" fill="rgb(207,2,49)" rx="2" ry="2" />
<text  x="366.78" y="1343.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;flat_mutation_reader::peek (1 samples, 0.02%)</title><rect x="447.2" y="1557" width="0.2" height="15.0" fill="rgb(226,165,42)" rx="2" ry="2" />
<text  x="450.15" y="1567.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::do_fill_buffer (1 samples, 0.02%)</title><rect x="848.8" y="1541" width="0.2" height="15.0" fill="rgb(249,99,4)" rx="2" ry="2" />
<text  x="851.79" y="1551.5" ></text>
</g>
<g >
<title>TLS init function for bound_view::_empty_prefix (1 samples, 0.02%)</title><rect x="267.6" y="1253" width="0.2" height="15.0" fill="rgb(233,88,33)" rx="2" ry="2" />
<text  x="270.61" y="1263.5" ></text>
</g>
<g >
<title>read_simple&lt;unsigned short, managed_bytes_basic_view&lt; (2 samples, 0.04%)</title><rect x="908.6" y="1493" width="0.4" height="15.0" fill="rgb(224,29,26)" rx="2" ry="2" />
<text  x="911.56" y="1503.5" ></text>
</g>
<g >
<title>std::__optional_hash_call_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, true&gt;::operator (3 samples, 0.06%)</title><rect x="792.5" y="1301" width="0.7" height="15.0" fill="rgb(220,63,0)" rx="2" ry="2" />
<text  x="795.55" y="1311.5" ></text>
</g>
<g >
<title>query::result::builder::add_partition (16 samples, 0.30%)</title><rect x="351.4" y="1333" width="3.6" height="15.0" fill="rgb(218,183,21)" rx="2" ry="2" />
<text  x="354.43" y="1343.5" ></text>
</g>
<g >
<title>write_fragmented&lt;managed_bytes_basic_view&lt; (2 samples, 0.04%)</title><rect x="921.1" y="1493" width="0.5" height="15.0" fill="rgb(243,27,11)" rx="2" ry="2" />
<text  x="924.14" y="1503.5" ></text>
</g>
<g >
<title>dht::ring_position::as_decorated_key (2 samples, 0.04%)</title><rect x="454.9" y="1493" width="0.4" height="15.0" fill="rgb(211,222,51)" rx="2" ry="2" />
<text  x="457.87" y="1503.5" ></text>
</g>
<g >
<title>_dl_lookup_symbol_x (1 samples, 0.02%)</title><rect x="11.3" y="1749" width="0.2" height="15.0" fill="rgb(226,223,25)" rx="2" ry="2" />
<text  x="14.32" y="1759.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (3 samples, 0.06%)</title><rect x="81.2" y="1525" width="0.7" height="15.0" fill="rgb(248,61,2)" rx="2" ry="2" />
<text  x="84.24" y="1535.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::~small_vector (7 samples, 0.13%)</title><rect x="466.3" y="1445" width="1.6" height="15.0" fill="rgb(208,219,41)" rx="2" ry="2" />
<text  x="469.34" y="1455.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;std::pair&lt;seastar::shared_ptr&lt;service::abstract_read_executor&gt;, nonwrapping_interval&lt;dht::token&gt; &gt;, 1ul&gt;::~small_vector (23 samples, 0.43%)</title><rect x="1158.7" y="1637" width="5.1" height="15.0" fill="rgb(210,217,22)" rx="2" ry="2" />
<text  x="1161.68" y="1647.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (10 samples, 0.19%)</title><rect x="954.2" y="1493" width="2.2" height="15.0" fill="rgb(251,48,8)" rx="2" ry="2" />
<text  x="957.22" y="1503.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::binary_operator&gt; (1 samples, 0.02%)</title><rect x="69.6" y="1509" width="0.2" height="15.0" fill="rgb(210,177,52)" rx="2" ry="2" />
<text  x="72.55" y="1519.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::create_service_level_statement, std::default_delete&lt;cql3::statements::create_service_level_statement&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="62.3" y="1525" width="0.2" height="15.0" fill="rgb(208,59,48)" rx="2" ry="2" />
<text  x="65.27" y="1535.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIN7seastar10shared_ptrIN4cql34termEEEEER18overloaded_functorIJZNS6_4expr12prepare_termERKNSB_10expressionER8databaseRKNS4_13basic_sstringIcjLj15ELb1EEENS4_13lw_shared_ptrINS6_20column_specificationEEEE3$_0ZNSB_12prepare_termESE_SG_SK_SN_E3$_1ZNSB_12prepare_termESE_SG_SK_SN_E3$_2ZNSB_12prepare_termESE_SG_SK_SN_E3$_3ZNSB_12prepare_termESE_SG_SK_SN_E3$_4ZNSB_12prepare_termESE_SG_SK_SN_E3$_5ZNSB_12prepare_termESE_SG_SK_SN_E3$_6ZNSB_12prepare_termESE_SG_SK_SN_E3$_7ZNSB_12prepare_termESE_SG_SK_SN_E3$_8ZNSB_12prepare_termESE_SG_SK_SN_E3$_9ZNSB_12prepare_termESE_SG_SK_SN_E4$_10ZNSB_12prepare_termESE_SG_SK_SN_E4$_11ZNSB_12prepare_termESE_SG_SK_SN_E4$_12ZNSB_12prepare_termESE_SG_SK_SN_E4$_13ZNSB_12prepare_termESE_SG_SK_SN_E4$_14ZNSB_12prepare_termESE_SG_SK_SN_E4$_15EERSt7variantIJNSB_11conjunctionENSB_15binary_operatorENSB_12column_valueENSB_5tokenENSB_21unresolved_identifierENSB_25column_mutation_attributeENSB_13function_callENSB_4castENSB_15field_selectionENSB_4nullENSB_13bind_variableENSB_16untyped_constantENSB_8constantENSB_17tuple_constructorENSB_22collection_constructorENSB_20usertype_constructorEEEEJEEESt16integer_sequenceImJLm11EEEE14__visit_invokeES15_S1O_ (8 samples, 0.15%)</title><rect x="67.1" y="1541" width="1.8" height="15.0" fill="rgb(214,45,43)" rx="2" ry="2" />
<text  x="70.13" y="1551.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="659.8" y="1589" width="0.2" height="15.0" fill="rgb(247,199,31)" rx="2" ry="2" />
<text  x="662.77" y="1599.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (35 samples, 0.65%)</title><rect x="237.2" y="1237" width="7.7" height="15.0" fill="rgb(221,127,17)" rx="2" ry="2" />
<text  x="240.18" y="1247.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.02%)</title><rect x="1130.0" y="1365" width="0.2" height="15.0" fill="rgb(248,68,1)" rx="2" ry="2" />
<text  x="1133.01" y="1375.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.02%)</title><rect x="10.4" y="325" width="0.3" height="15.0" fill="rgb(220,30,13)" rx="2" ry="2" />
<text  x="13.44" y="335.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::create_aggregate_statement, std::default_delete&lt;cql3::statements::create_aggregate_statement&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::statements::create_aggregate_statement&gt;, void&gt; (1 samples, 0.02%)</title><rect x="62.9" y="1525" width="0.3" height="15.0" fill="rgb(254,80,13)" rx="2" ry="2" />
<text  x="65.93" y="1535.5" ></text>
</g>
<g >
<title>utils::tuple_hash::hash_impl&lt;2ul, auth::resource_kind, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (6 samples, 0.11%)</title><rect x="806.2" y="1461" width="1.3" height="15.0" fill="rgb(240,89,31)" rx="2" ry="2" />
<text  x="809.22" y="1471.5" ></text>
</g>
<g >
<title>bound_view::from_range_start&lt;nonwrapping_interval&gt; (3 samples, 0.06%)</title><rect x="288.3" y="1333" width="0.7" height="15.0" fill="rgb(229,83,24)" rx="2" ry="2" />
<text  x="291.35" y="1343.5" ></text>
</g>
<g >
<title>cql3::raw_value::make_value (28 samples, 0.52%)</title><rect x="884.1" y="1429" width="6.2" height="15.0" fill="rgb(251,1,12)" rx="2" ry="2" />
<text  x="887.08" y="1439.5" ></text>
</g>
<g >
<title>std::push_heap&lt;mutation_reader_merger::reader_and_fragment*, mutation_reader_merger::reader_heap_compare&gt; (2 samples, 0.04%)</title><rect x="193.9" y="1413" width="0.5" height="15.0" fill="rgb(243,124,26)" rx="2" ry="2" />
<text  x="196.95" y="1423.5" ></text>
</g>
<g >
<title>cql3::statements::raw::modification_statement::prepare (40 samples, 0.75%)</title><rect x="65.6" y="1621" width="8.8" height="15.0" fill="rgb(243,193,23)" rx="2" ry="2" />
<text  x="68.58" y="1631.5" ></text>
</g>
<g >
<title>fmt::v7::detail::buffer&lt;char&gt;::push_back (1 samples, 0.02%)</title><rect x="18.8" y="1637" width="0.2" height="15.0" fill="rgb(222,7,22)" rx="2" ry="2" />
<text  x="21.82" y="1647.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="44.8" y="1413" width="0.3" height="15.0" fill="rgb(236,163,12)" rx="2" ry="2" />
<text  x="47.85" y="1423.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (4 samples, 0.07%)</title><rect x="41.8" y="1301" width="0.8" height="15.0" fill="rgb(242,81,18)" rx="2" ry="2" />
<text  x="44.76" y="1311.5" ></text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::EqualElement&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt;&amp;&gt; (1 samples, 0.02%)</title><rect x="77.1" y="1525" width="0.2" height="15.0" fill="rgb(216,129,1)" rx="2" ry="2" />
<text  x="80.05" y="1535.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="107.5" y="1621" width="0.2" height="15.0" fill="rgb(251,171,7)" rx="2" ry="2" />
<text  x="110.49" y="1631.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (9 samples, 0.17%)</title><rect x="40.7" y="1461" width="1.9" height="15.0" fill="rgb(211,175,8)" rx="2" ry="2" />
<text  x="43.66" y="1471.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="44.8" y="1381" width="0.3" height="15.0" fill="rgb(216,177,35)" rx="2" ry="2" />
<text  x="47.85" y="1391.5" ></text>
</g>
<g >
<title>db::commitlog::add_entry (1 samples, 0.02%)</title><rect x="1117.2" y="1413" width="0.2" height="15.0" fill="rgb(219,124,24)" rx="2" ry="2" />
<text  x="1120.21" y="1423.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.02%)</title><rect x="17.3" y="1653" width="0.2" height="15.0" fill="rgb(231,189,17)" rx="2" ry="2" />
<text  x="20.28" y="1663.5" ></text>
</g>
<g >
<title>seastar::get_units&lt;db::commitlog::segment_manager::request_controller_timeout_exception_factory, seastar::lowres_clock&gt; (1 samples, 0.02%)</title><rect x="1117.4" y="1429" width="0.3" height="15.0" fill="rgb(210,133,40)" rx="2" ry="2" />
<text  x="1120.44" y="1439.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (1 samples, 0.02%)</title><rect x="101.5" y="1525" width="0.3" height="15.0" fill="rgb(218,25,53)" rx="2" ry="2" />
<text  x="104.53" y="1535.5" ></text>
</g>
<g >
<title>row_cache::do_make_reader (58 samples, 1.08%)</title><rect x="538.2" y="1477" width="12.8" height="15.0" fill="rgb(211,173,43)" rx="2" ry="2" />
<text  x="541.24" y="1487.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (2 samples, 0.04%)</title><rect x="787.5" y="1317" width="0.4" height="15.0" fill="rgb(250,62,18)" rx="2" ry="2" />
<text  x="790.48" y="1327.5" ></text>
</g>
<g >
<title>seastar::reactor::add_timer (1 samples, 0.02%)</title><rect x="973.2" y="1445" width="0.2" height="15.0" fill="rgb(217,97,37)" rx="2" ry="2" />
<text  x="976.19" y="1455.5" ></text>
</g>
<g >
<title>utils::timed_rate_moving_average_and_histogram::mark&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; (7 samples, 0.13%)</title><rect x="682.0" y="1621" width="1.6" height="15.0" fill="rgb(220,110,22)" rx="2" ry="2" />
<text  x="685.05" y="1631.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.02%)</title><rect x="58.5" y="1461" width="0.2" height="15.0" fill="rgb(236,191,7)" rx="2" ry="2" />
<text  x="61.52" y="1471.5" ></text>
</g>
<g >
<title>query_result_builder::consume (172 samples, 3.21%)</title><rect x="358.7" y="1365" width="37.9" height="15.0" fill="rgb(236,164,43)" rx="2" ry="2" />
<text  x="361.71" y="1375.5" >que..</text>
</g>
<g >
<title>partition_key::from_range&lt;std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt; const&amp;&gt; (15 samples, 0.28%)</title><rect x="918.7" y="1541" width="3.3" height="15.0" fill="rgb(231,71,21)" rx="2" ry="2" />
<text  x="921.71" y="1551.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::~RecognizerSharedState (2 samples, 0.04%)</title><rect x="21.7" y="1525" width="0.4" height="15.0" fill="rgb(231,110,15)" rx="2" ry="2" />
<text  x="24.69" y="1535.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.02%)</title><rect x="57.9" y="1461" width="0.2" height="15.0" fill="rgb(209,125,31)" rx="2" ry="2" />
<text  x="60.86" y="1471.5" ></text>
</g>
<g >
<title>basic_atomic_cell_view&lt; (1 samples, 0.02%)</title><rect x="1124.3" y="1253" width="0.2" height="15.0" fill="rgb(252,153,51)" rx="2" ry="2" />
<text  x="1127.27" y="1263.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (2 samples, 0.04%)</title><rect x="194.4" y="1413" width="0.4" height="15.0" fill="rgb(226,96,47)" rx="2" ry="2" />
<text  x="197.39" y="1423.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.02%)</title><rect x="41.5" y="1349" width="0.3" height="15.0" fill="rgb(251,4,11)" rx="2" ry="2" />
<text  x="44.54" y="1359.5" ></text>
</g>
<g >
<title>std::hash&lt;wrapping_interval&lt;dht::token&gt; &gt;::operator (1 samples, 0.02%)</title><rect x="1151.2" y="1621" width="0.2" height="15.0" fill="rgb(251,48,14)" rx="2" ry="2" />
<text  x="1154.18" y="1631.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.02%)</title><rect x="10.4" y="453" width="0.3" height="15.0" fill="rgb(238,9,31)" rx="2" ry="2" />
<text  x="13.44" y="463.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned int, std::less&lt;unsigned int&gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;unsigned int&gt; &gt;::find (3 samples, 0.06%)</title><rect x="35.6" y="1461" width="0.6" height="15.0" fill="rgb(215,156,17)" rx="2" ry="2" />
<text  x="38.59" y="1471.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="463.7" y="1429" width="0.2" height="15.0" fill="rgb(210,32,35)" rx="2" ry="2" />
<text  x="466.69" y="1439.5" ></text>
</g>
<g >
<title>service::client_state::has_column_family_access (265 samples, 4.95%)</title><rect x="761.5" y="1557" width="58.4" height="15.0" fill="rgb(240,204,48)" rx="2" ry="2" />
<text  x="764.45" y="1567.5" >servic..</text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::EqualElement&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (1 samples, 0.02%)</title><rect x="77.1" y="1509" width="0.2" height="15.0" fill="rgb(216,137,17)" rx="2" ry="2" />
<text  x="80.05" y="1519.5" ></text>
</g>
<g >
<title>antlr3::RuleReturnValue&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::~RuleReturnValue (1 samples, 0.02%)</title><rect x="47.1" y="1461" width="0.2" height="15.0" fill="rgb(230,169,9)" rx="2" ry="2" />
<text  x="50.05" y="1471.5" ></text>
</g>
<g >
<title>sstables::write (1 samples, 0.02%)</title><rect x="17.5" y="1541" width="0.2" height="15.0" fill="rgb(247,99,51)" rx="2" ry="2" />
<text  x="20.50" y="1551.5" ></text>
</g>
<g >
<title>seastar::memory::configure (1 samples, 0.02%)</title><rect x="1167.7" y="1685" width="0.2" height="15.0" fill="rgb(225,164,44)" rx="2" ry="2" />
<text  x="1170.72" y="1695.5" ></text>
</g>
<g >
<title>cql3::raw_value_view::make_temporary (2 samples, 0.04%)</title><rect x="849.9" y="1445" width="0.4" height="15.0" fill="rgb(240,187,51)" rx="2" ry="2" />
<text  x="852.90" y="1455.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::assign (1 samples, 0.02%)</title><rect x="27.6" y="1365" width="0.3" height="15.0" fill="rgb(225,91,16)" rx="2" ry="2" />
<text  x="30.64" y="1375.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_singular (1 samples, 0.02%)</title><rect x="1075.1" y="1541" width="0.2" height="15.0" fill="rgb(254,40,49)" rx="2" ry="2" />
<text  x="1078.09" y="1551.5" ></text>
</g>
<g >
<title>utils::phased_barrier::start (3 samples, 0.06%)</title><rect x="1016.2" y="1397" width="0.7" height="15.0" fill="rgb(234,124,24)" rx="2" ry="2" />
<text  x="1019.20" y="1407.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql_transport::messages::result_message::rows&gt;::~shared_ptr_count_for (30 samples, 0.56%)</title><rect x="89.0" y="1637" width="6.6" height="15.0" fill="rgb(235,154,54)" rx="2" ry="2" />
<text  x="91.96" y="1647.5" ></text>
</g>
<g >
<title>reader_selector::has_new_readers (3 samples, 0.06%)</title><rect x="463.9" y="1429" width="0.7" height="15.0" fill="rgb(242,191,28)" rx="2" ry="2" />
<text  x="466.91" y="1439.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::statements::raw::delete_statement, std::default_delete&lt;cql3::statements::raw::delete_statement&gt;, true, true&gt;::__uniq_ptr_data (1 samples, 0.02%)</title><rect x="63.8" y="1509" width="0.2" height="15.0" fill="rgb(213,26,18)" rx="2" ry="2" />
<text  x="66.82" y="1519.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;gms::inet_address, std::pair&lt;gms::inet_address const, utils::UUID&gt;, std::allocator&lt;std::pair&lt;gms::inet_address const, utils::UUID&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;gms::inet_address&gt;, std::hash&lt;gms::inet_address&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (6 samples, 0.11%)</title><rect x="1141.9" y="1589" width="1.3" height="15.0" fill="rgb(234,4,54)" rx="2" ry="2" />
<text  x="1144.92" y="1599.5" ></text>
</g>
<g >
<title>std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;auth::role_or_anonymous&gt;, seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (3 samples, 0.06%)</title><rect x="801.8" y="1429" width="0.7" height="15.0" fill="rgb(207,199,32)" rx="2" ry="2" />
<text  x="804.81" y="1439.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::storage_proxy&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="689.5" y="1637" width="0.3" height="15.0" fill="rgb(241,221,16)" rx="2" ry="2" />
<text  x="692.55" y="1647.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.06%)</title><rect x="619.6" y="1573" width="0.7" height="15.0" fill="rgb(206,90,1)" rx="2" ry="2" />
<text  x="622.63" y="1583.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (1 samples, 0.02%)</title><rect x="1100.0" y="1557" width="0.2" height="15.0" fill="rgb(224,210,14)" rx="2" ry="2" />
<text  x="1103.01" y="1567.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="637.1" y="1637" width="0.2" height="15.0" fill="rgb(213,80,32)" rx="2" ry="2" />
<text  x="640.05" y="1647.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::digest_read_resolver&gt;::~shared_ptr (3 samples, 0.06%)</title><rect x="975.6" y="1477" width="0.7" height="15.0" fill="rgb(232,188,4)" rx="2" ry="2" />
<text  x="978.61" y="1487.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reclaiming_disabled&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (1 samples, 0.02%)</title><rect x="100.4" y="997" width="0.3" height="15.0" fill="rgb(243,216,35)" rx="2" ry="2" />
<text  x="103.43" y="1007.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, seastar::lw_shared_ptr&lt;cql3::column_condition::raw&gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, seastar::lw_shared_ptr&lt;cql3::column_condition::raw&gt; &gt; &gt; &gt;::vector (1 samples, 0.02%)</title><rect x="61.6" y="1509" width="0.2" height="15.0" fill="rgb(212,211,9)" rx="2" ry="2" />
<text  x="64.61" y="1519.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::_Vector_base (1 samples, 0.02%)</title><rect x="61.8" y="1493" width="0.3" height="15.0" fill="rgb(218,124,4)" rx="2" ry="2" />
<text  x="64.83" y="1503.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;::~basic_sstring (2 samples, 0.04%)</title><rect x="678.1" y="1573" width="0.4" height="15.0" fill="rgb(223,121,0)" rx="2" ry="2" />
<text  x="681.08" y="1583.5" ></text>
</g>
<g >
<title>query::querier_base::~querier_base (1 samples, 0.02%)</title><rect x="1166.2" y="1637" width="0.2" height="15.0" fill="rgb(239,187,52)" rx="2" ry="2" />
<text  x="1169.18" y="1647.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (2 samples, 0.04%)</title><rect x="44.4" y="1413" width="0.4" height="15.0" fill="rgb(208,129,37)" rx="2" ry="2" />
<text  x="47.41" y="1423.5" ></text>
</g>
<g >
<title>global_schema_ptr::get (1 samples, 0.02%)</title><rect x="1016.9" y="1413" width="0.2" height="15.0" fill="rgb(215,26,50)" rx="2" ry="2" />
<text  x="1019.86" y="1423.5" ></text>
</g>
<g >
<title>std::operator+ (2 samples, 0.04%)</title><rect x="44.4" y="1301" width="0.4" height="15.0" fill="rgb(239,160,49)" rx="2" ry="2" />
<text  x="47.41" y="1311.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="305.1" y="1461" width="0.2" height="15.0" fill="rgb(205,119,35)" rx="2" ry="2" />
<text  x="308.11" y="1471.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;service::digest_read_resolver, false&gt;::make&lt;seastar::lw_shared_ptr&lt;schema const&gt;&amp;, db::consistency_level&amp;, unsigned long&amp;, unsigned long, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;&amp;&gt; (22 samples, 0.41%)</title><rect x="969.9" y="1493" width="4.8" height="15.0" fill="rgb(206,15,53)" rx="2" ry="2" />
<text  x="972.88" y="1503.5" ></text>
</g>
<g >
<title>utils::estimated_histogram::add (5 samples, 0.09%)</title><rect x="1152.3" y="1621" width="1.1" height="15.0" fill="rgb(226,64,13)" rx="2" ry="2" />
<text  x="1155.28" y="1631.5" ></text>
</g>
<g >
<title>compound_type&lt; (1 samples, 0.02%)</title><rect x="101.1" y="1461" width="0.2" height="15.0" fill="rgb(226,23,1)" rx="2" ry="2" />
<text  x="104.09" y="1471.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::finally_body&lt;seastar::output_stream&lt;char&gt;::close (1 samples, 0.02%)</title><rect x="10.7" y="1525" width="0.2" height="15.0" fill="rgb(222,128,54)" rx="2" ry="2" />
<text  x="13.66" y="1535.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (2 samples, 0.04%)</title><rect x="697.7" y="1589" width="0.4" height="15.0" fill="rgb(222,149,51)" rx="2" ry="2" />
<text  x="700.71" y="1599.5" ></text>
</g>
<g >
<title>std::vector&lt;secondary_index::index, std::allocator&lt;secondary_index::index&gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="70.4" y="1509" width="0.3" height="15.0" fill="rgb(241,29,45)" rx="2" ry="2" />
<text  x="73.43" y="1519.5" ></text>
</g>
<g >
<title>antlr3::IntStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::_LA (2 samples, 0.04%)</title><rect x="33.2" y="1381" width="0.4" height="15.0" fill="rgb(226,208,40)" rx="2" ry="2" />
<text  x="36.16" y="1391.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (13 samples, 0.24%)</title><rect x="737.4" y="1493" width="2.9" height="15.0" fill="rgb(254,88,50)" rx="2" ry="2" />
<text  x="740.41" y="1503.5" ></text>
</g>
<g >
<title>seastar::async&lt;sstables::compaction::setup&lt;noop_compacted_fragments_consumer&gt; (1 samples, 0.02%)</title><rect x="1130.0" y="1429" width="0.2" height="15.0" fill="rgb(232,74,20)" rx="2" ry="2" />
<text  x="1133.01" y="1439.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (2 samples, 0.04%)</title><rect x="768.1" y="1509" width="0.4" height="15.0" fill="rgb(218,174,6)" rx="2" ry="2" />
<text  x="771.07" y="1519.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (2 samples, 0.04%)</title><rect x="329.4" y="1525" width="0.4" height="15.0" fill="rgb(252,224,35)" rx="2" ry="2" />
<text  x="332.37" y="1535.5" ></text>
</g>
<g >
<title>list_reader_selector::create_new_readers (1 samples, 0.02%)</title><rect x="461.9" y="1429" width="0.2" height="15.0" fill="rgb(230,70,0)" rx="2" ry="2" />
<text  x="464.93" y="1439.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::then_wrapped_common&lt;true, void, service::abstract_read_executor::make_data_requests (13 samples, 0.24%)</title><rect x="977.6" y="1461" width="2.9" height="15.0" fill="rgb(251,195,5)" rx="2" ry="2" />
<text  x="980.60" y="1471.5" ></text>
</g>
<g >
<title>bytes_ostream::linearize (1 samples, 0.02%)</title><rect x="607.3" y="1557" width="0.2" height="15.0" fill="rgb(239,187,13)" rx="2" ry="2" />
<text  x="610.28" y="1567.5" ></text>
</g>
<g >
<title>database::apply_in_memory (21 samples, 0.39%)</title><rect x="1112.6" y="1445" width="4.6" height="15.0" fill="rgb(228,138,52)" rx="2" ry="2" />
<text  x="1115.58" y="1455.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_Optional_payload_base (2 samples, 0.04%)</title><rect x="932.2" y="1493" width="0.4" height="15.0" fill="rgb(247,228,46)" rx="2" ry="2" />
<text  x="935.16" y="1503.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.07%)</title><rect x="593.4" y="1509" width="0.9" height="15.0" fill="rgb(226,157,33)" rx="2" ry="2" />
<text  x="596.38" y="1519.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (1 samples, 0.02%)</title><rect x="100.4" y="1333" width="0.3" height="15.0" fill="rgb(227,162,11)" rx="2" ry="2" />
<text  x="103.43" y="1343.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.02%)</title><rect x="42.4" y="1285" width="0.2" height="15.0" fill="rgb(206,60,3)" rx="2" ry="2" />
<text  x="45.42" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.02%)</title><rect x="879.9" y="1461" width="0.2" height="15.0" fill="rgb(233,155,9)" rx="2" ry="2" />
<text  x="882.89" y="1471.5" ></text>
</g>
<g >
<title>sstables::mc::writer::consume_end_of_stream (1 samples, 0.02%)</title><rect x="10.7" y="1621" width="0.2" height="15.0" fill="rgb(225,66,31)" rx="2" ry="2" />
<text  x="13.66" y="1631.5" ></text>
</g>
<g >
<title>[[vdso]] (28 samples, 0.52%)</title><rect x="1170.8" y="1765" width="6.2" height="15.0" fill="rgb(225,158,26)" rx="2" ry="2" />
<text  x="1173.81" y="1775.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::digest_read_result&gt;::take (1 samples, 0.02%)</title><rect x="695.3" y="1589" width="0.2" height="15.0" fill="rgb(216,40,3)" rx="2" ry="2" />
<text  x="698.28" y="1599.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.02%)</title><rect x="37.3" y="1445" width="0.3" height="15.0" fill="rgb(253,209,21)" rx="2" ry="2" />
<text  x="40.35" y="1455.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (2 samples, 0.04%)</title><rect x="40.9" y="1349" width="0.4" height="15.0" fill="rgb(218,79,18)" rx="2" ry="2" />
<text  x="43.88" y="1359.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;mutation_fragment&gt;::allocate (1 samples, 0.02%)</title><rect x="320.3" y="1445" width="0.2" height="15.0" fill="rgb(207,216,0)" rx="2" ry="2" />
<text  x="323.33" y="1455.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;void&gt;, service::storage_proxy*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt;, db::consistency_level, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, tracing::trace_state_ptr, service_permit, bool, seastar::lw_shared_ptr&lt;cdc::operation_result_tracker&gt; &gt;::do_flush (45 samples, 0.84%)</title><rect x="1118.1" y="1637" width="9.9" height="15.0" fill="rgb(251,189,29)" rx="2" ry="2" />
<text  x="1121.10" y="1647.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::check_local_limit (1 samples, 0.02%)</title><rect x="365.5" y="1333" width="0.3" height="15.0" fill="rgb(241,62,13)" rx="2" ry="2" />
<text  x="368.54" y="1343.5" ></text>
</g>
<g >
<title>cql3::single_column_relation::~single_column_relation (1 samples, 0.02%)</title><rect x="74.4" y="1589" width="0.2" height="15.0" fill="rgb(243,154,24)" rx="2" ry="2" />
<text  x="77.40" y="1599.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="1111.7" y="1589" width="0.2" height="15.0" fill="rgb(225,185,29)" rx="2" ry="2" />
<text  x="1114.70" y="1599.5" ></text>
</g>
<g >
<title>compare_unsigned&lt;managed_bytes_basic_view&lt; (10 samples, 0.19%)</title><rect x="493.0" y="1365" width="2.2" height="15.0" fill="rgb(223,71,22)" rx="2" ry="2" />
<text  x="496.03" y="1375.5" ></text>
</g>
<g >
<title>std::__lower_bound&lt;__gnu_cxx::__normal_iterator&lt;long*, std::vector&lt;long, std::allocator&lt;long&gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_less_val&gt; (4 samples, 0.07%)</title><rect x="1152.5" y="1605" width="0.9" height="15.0" fill="rgb(205,17,6)" rx="2" ry="2" />
<text  x="1155.50" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::~_Variant_storage (1 samples, 0.02%)</title><rect x="10.4" y="53" width="0.3" height="15.0" fill="rgb(239,61,9)" rx="2" ry="2" />
<text  x="13.44" y="63.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::create_aggregate_statement, std::default_delete&lt;cql3::statements::create_aggregate_statement&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="63.2" y="1525" width="0.2" height="15.0" fill="rgb(216,87,29)" rx="2" ry="2" />
<text  x="66.16" y="1535.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_state&lt;std::tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;, seastar::future&lt;void&gt; &gt;::do_with_state&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const&amp;, auth::resource&gt; (6 samples, 0.11%)</title><rect x="764.3" y="1525" width="1.3" height="15.0" fill="rgb(212,118,36)" rx="2" ry="2" />
<text  x="767.32" y="1535.5" ></text>
</g>
<g >
<title>std::default_delete&lt;query::partition_slice const&gt;::operator (15 samples, 0.28%)</title><rect x="602.9" y="1557" width="3.3" height="15.0" fill="rgb(225,166,35)" rx="2" ry="2" />
<text  x="605.87" y="1567.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_wrapped_common&lt;false, seastar::future&lt;void&gt;, seastar::future&lt;void&gt;::finally_body&lt;seastar::output_stream&lt;char&gt;::close (1 samples, 0.02%)</title><rect x="10.7" y="1541" width="0.2" height="15.0" fill="rgb(252,221,12)" rx="2" ry="2" />
<text  x="13.66" y="1551.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="661" width="0.3" height="15.0" fill="rgb(207,22,53)" rx="2" ry="2" />
<text  x="13.44" y="671.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (489 samples, 9.14%)</title><rect x="333.6" y="1525" width="107.8" height="15.0" fill="rgb(246,178,49)" rx="2" ry="2" />
<text  x="336.56" y="1535.5" >flat_mutation..</text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (1 samples, 0.02%)</title><rect x="747.8" y="1541" width="0.2" height="15.0" fill="rgb(225,4,25)" rx="2" ry="2" />
<text  x="750.78" y="1551.5" ></text>
</g>
<g >
<title>visit&lt;(anonymous namespace)::validate_visitor&lt;managed_bytes_basic_view&lt; (2 samples, 0.04%)</title><rect x="883.0" y="1413" width="0.4" height="15.0" fill="rgb(249,109,23)" rx="2" ry="2" />
<text  x="885.98" y="1423.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (1 samples, 0.02%)</title><rect x="1090.5" y="1541" width="0.2" height="15.0" fill="rgb(247,60,21)" rx="2" ry="2" />
<text  x="1093.53" y="1551.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::~vector (2 samples, 0.04%)</title><rect x="900.4" y="1509" width="0.4" height="15.0" fill="rgb(251,172,12)" rx="2" ry="2" />
<text  x="903.40" y="1519.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value_view, std::allocator&lt;cql3::raw_value_view&gt; &gt;::emplace_back&lt;cql3::raw_value_view&gt; (7 samples, 0.13%)</title><rect x="837.8" y="1541" width="1.5" height="15.0" fill="rgb(251,227,49)" rx="2" ry="2" />
<text  x="840.76" y="1551.5" ></text>
</g>
<g >
<title>utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (40 samples, 0.75%)</title><rect x="787.9" y="1365" width="8.8" height="15.0" fill="rgb(221,150,34)" rx="2" ry="2" />
<text  x="790.92" y="1375.5" ></text>
</g>
<g >
<title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::_M_range_check (1 samples, 0.02%)</title><rect x="1151.4" y="1621" width="0.2" height="15.0" fill="rgb(240,210,49)" rx="2" ry="2" />
<text  x="1154.40" y="1631.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::pop_front (24 samples, 0.45%)</title><rect x="121.2" y="1557" width="5.3" height="15.0" fill="rgb(206,129,14)" rx="2" ry="2" />
<text  x="124.16" y="1567.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (2 samples, 0.04%)</title><rect x="1129.6" y="1637" width="0.4" height="15.0" fill="rgb(247,199,28)" rx="2" ry="2" />
<text  x="1132.57" y="1647.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (2 samples, 0.04%)</title><rect x="647.2" y="1637" width="0.4" height="15.0" fill="rgb(252,53,35)" rx="2" ry="2" />
<text  x="650.20" y="1647.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.02%)</title><rect x="58.5" y="1333" width="0.2" height="15.0" fill="rgb(218,209,29)" rx="2" ry="2" />
<text  x="61.52" y="1343.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.02%)</title><rect x="57.9" y="1429" width="0.2" height="15.0" fill="rgb(210,163,8)" rx="2" ry="2" />
<text  x="60.86" y="1439.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (1 samples, 0.02%)</title><rect x="774.0" y="1429" width="0.2" height="15.0" fill="rgb(239,11,48)" rx="2" ry="2" />
<text  x="777.02" y="1439.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;void&gt;::set_urgent_state (3 samples, 0.06%)</title><rect x="847.7" y="1653" width="0.7" height="15.0" fill="rgb(241,42,25)" rx="2" ry="2" />
<text  x="850.69" y="1663.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;position_in_partition&gt;::_M_reset (2 samples, 0.04%)</title><rect x="585.4" y="1461" width="0.5" height="15.0" fill="rgb(212,175,29)" rx="2" ry="2" />
<text  x="588.44" y="1471.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.02%)</title><rect x="38.5" y="1285" width="0.2" height="15.0" fill="rgb(212,110,17)" rx="2" ry="2" />
<text  x="41.45" y="1295.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::handle_exception&lt;cql3::query_processor::execute_prepared (2 samples, 0.04%)</title><rect x="747.1" y="1557" width="0.5" height="15.0" fill="rgb(227,82,1)" rx="2" ry="2" />
<text  x="750.11" y="1567.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (2 samples, 0.04%)</title><rect x="123.8" y="1541" width="0.5" height="15.0" fill="rgb(212,58,1)" rx="2" ry="2" />
<text  x="126.81" y="1551.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.04%)</title><rect x="505.6" y="1429" width="0.4" height="15.0" fill="rgb(224,170,13)" rx="2" ry="2" />
<text  x="508.60" y="1439.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;query::result_digest, 3ul&gt;::emplace_back&lt;query::result_digest const&gt; (2 samples, 0.04%)</title><rect x="709.0" y="1589" width="0.4" height="15.0" fill="rgb(234,59,16)" rx="2" ry="2" />
<text  x="711.96" y="1599.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="846.8" y="1605" width="0.2" height="15.0" fill="rgb(224,147,12)" rx="2" ry="2" />
<text  x="849.81" y="1615.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_live_endpoints (2 samples, 0.04%)</title><rect x="1051.5" y="1493" width="0.4" height="15.0" fill="rgb(243,197,5)" rx="2" ry="2" />
<text  x="1054.49" y="1503.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.02%)</title><rect x="22.6" y="1413" width="0.2" height="15.0" fill="rgb(215,67,49)" rx="2" ry="2" />
<text  x="25.57" y="1423.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.02%)</title><rect x="43.5" y="1381" width="0.2" height="15.0" fill="rgb(214,150,36)" rx="2" ry="2" />
<text  x="46.53" y="1391.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.04%)</title><rect x="1158.9" y="1605" width="0.4" height="15.0" fill="rgb(253,98,48)" rx="2" ry="2" />
<text  x="1161.90" y="1615.5" ></text>
</g>
<g >
<title>row_marker::compact_and_expire (2 samples, 0.04%)</title><rect x="418.7" y="1365" width="0.4" height="15.0" fill="rgb(229,79,2)" rx="2" ry="2" />
<text  x="421.70" y="1375.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="335.8" y="1445" width="0.2" height="15.0" fill="rgb(211,101,54)" rx="2" ry="2" />
<text  x="338.77" y="1455.5" ></text>
</g>
<g >
<title>reader_permit::impl::mark_unused (54 samples, 1.01%)</title><rect x="117.6" y="1589" width="11.9" height="15.0" fill="rgb(210,173,12)" rx="2" ry="2" />
<text  x="120.63" y="1599.5" ></text>
</g>
<g >
<title>ser::serializer&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;::write_fragmented&lt;bytes_ostream, fragment_range&lt;managed_bytes_basic_view&lt; (16 samples, 0.30%)</title><rect x="386.3" y="1317" width="3.5" height="15.0" fill="rgb(221,205,24)" rx="2" ry="2" />
<text  x="389.28" y="1327.5" ></text>
</g>
<g >
<title>database::get_unlimited_query_max_result_size (14 samples, 0.26%)</title><rect x="1103.3" y="1557" width="3.1" height="15.0" fill="rgb(210,82,7)" rx="2" ry="2" />
<text  x="1106.32" y="1567.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::merge_with (1 samples, 0.02%)</title><rect x="70.7" y="1493" width="0.2" height="15.0" fill="rgb(254,60,33)" rx="2" ry="2" />
<text  x="73.65" y="1503.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (3 samples, 0.06%)</title><rect x="541.1" y="1413" width="0.7" height="15.0" fill="rgb(225,67,27)" rx="2" ry="2" />
<text  x="544.11" y="1423.5" ></text>
</g>
<g >
<title>antlr3::DefaultAllocPolicy::StackType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::push (1 samples, 0.02%)</title><rect x="46.8" y="1445" width="0.3" height="15.0" fill="rgb(248,209,53)" rx="2" ry="2" />
<text  x="49.83" y="1455.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_M_reset (2 samples, 0.04%)</title><rect x="1051.0" y="1477" width="0.5" height="15.0" fill="rgb(209,226,16)" rx="2" ry="2" />
<text  x="1054.05" y="1487.5" ></text>
</g>
<g >
<title>seastar::internal::try_reap_events (1 samples, 0.02%)</title><rect x="1167.5" y="1605" width="0.2" height="15.0" fill="rgb(253,69,29)" rx="2" ry="2" />
<text  x="1170.50" y="1615.5" ></text>
</g>
<g >
<title>free (6 samples, 0.11%)</title><rect x="429.5" y="1333" width="1.3" height="15.0" fill="rgb(229,53,43)" rx="2" ry="2" />
<text  x="432.51" y="1343.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="725" width="0.3" height="15.0" fill="rgb(207,160,1)" rx="2" ry="2" />
<text  x="13.44" y="735.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;11ul, cql3::expr::untyped_constant&gt; (2 samples, 0.04%)</title><rect x="53.7" y="1333" width="0.4" height="15.0" fill="rgb(228,203,29)" rx="2" ry="2" />
<text  x="56.67" y="1343.5" ></text>
</g>
<g >
<title>std::ios_base::ios_base (1 samples, 0.02%)</title><rect x="10.9" y="1733" width="0.2" height="15.0" fill="rgb(246,37,37)" rx="2" ry="2" />
<text  x="13.88" y="1743.5" ></text>
</g>
<g >
<title>tests::random::get_int&lt;unsigned long&gt; (8 samples, 0.15%)</title><rect x="844.6" y="1621" width="1.8" height="15.0" fill="rgb(240,60,49)" rx="2" ry="2" />
<text  x="847.60" y="1631.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (2 samples, 0.04%)</title><rect x="564.3" y="1573" width="0.4" height="15.0" fill="rgb(244,113,52)" rx="2" ry="2" />
<text  x="567.27" y="1583.5" ></text>
</g>
<g >
<title>reader_permit::used_guard::~used_guard (1 samples, 0.02%)</title><rect x="690.4" y="1637" width="0.3" height="15.0" fill="rgb(215,168,19)" rx="2" ry="2" />
<text  x="693.43" y="1647.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (3 samples, 0.06%)</title><rect x="688.7" y="1637" width="0.6" height="15.0" fill="rgb(224,3,30)" rx="2" ry="2" />
<text  x="691.67" y="1647.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_in_thread&lt;sstables::sstable_writer, flat_mutation_reader::no_filter&gt; (1 samples, 0.02%)</title><rect x="79.3" y="1621" width="0.2" height="15.0" fill="rgb(239,71,3)" rx="2" ry="2" />
<text  x="82.26" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;9ul, cql3::expr::untyped_constant&gt; (1 samples, 0.02%)</title><rect x="53.7" y="1237" width="0.2" height="15.0" fill="rgb(250,88,7)" rx="2" ry="2" />
<text  x="56.67" y="1247.5" ></text>
</g>
<g >
<title>make_combined_reader (64 samples, 1.20%)</title><rect x="458.8" y="1477" width="14.2" height="15.0" fill="rgb(253,206,8)" rx="2" ry="2" />
<text  x="461.84" y="1487.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (4 samples, 0.07%)</title><rect x="478.7" y="1461" width="0.9" height="15.0" fill="rgb(224,164,51)" rx="2" ry="2" />
<text  x="481.69" y="1471.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="832.9" y="1557" width="0.2" height="15.0" fill="rgb(219,154,9)" rx="2" ry="2" />
<text  x="835.91" y="1567.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (2 samples, 0.04%)</title><rect x="814.2" y="1429" width="0.4" height="15.0" fill="rgb(240,152,20)" rx="2" ry="2" />
<text  x="817.16" y="1439.5" ></text>
</g>
<g >
<title>logalloc::basic_region_impl::set_reclaiming_enabled (1 samples, 0.02%)</title><rect x="273.8" y="1349" width="0.2" height="15.0" fill="rgb(231,177,46)" rx="2" ry="2" />
<text  x="276.79" y="1359.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (2 samples, 0.04%)</title><rect x="847.0" y="1653" width="0.5" height="15.0" fill="rgb(247,42,9)" rx="2" ry="2" />
<text  x="850.03" y="1663.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_wrapped_common&lt;false, seastar::future&lt;void&gt;, seastar::future&lt;void&gt;::finally_body&lt;seastar::output_stream&lt;char&gt;::close (1 samples, 0.02%)</title><rect x="10.7" y="1461" width="0.2" height="15.0" fill="rgb(213,30,32)" rx="2" ry="2" />
<text  x="13.66" y="1471.5" ></text>
</g>
<g >
<title>service::storage_proxy::cannot_hint&lt;boost::range::joined_range&lt;utils::small_vector&lt;gms::inet_address, 3ul&gt;, utils::small_vector&lt;gms::inet_address, 1ul&gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="1126.3" y="1365" width="0.2" height="15.0" fill="rgb(244,109,6)" rx="2" ry="2" />
<text  x="1129.26" y="1375.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (1 samples, 0.02%)</title><rect x="116.1" y="1573" width="0.2" height="15.0" fill="rgb(245,146,35)" rx="2" ry="2" />
<text  x="119.09" y="1583.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::indirect_move (1 samples, 0.02%)</title><rect x="1012.0" y="1349" width="0.2" height="15.0" fill="rgb(212,107,49)" rx="2" ry="2" />
<text  x="1015.01" y="1359.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::digest_read_resolver&gt;::~shared_ptr (2 samples, 0.04%)</title><rect x="697.0" y="1605" width="0.5" height="15.0" fill="rgb(233,69,40)" rx="2" ry="2" />
<text  x="700.05" y="1615.5" ></text>
</g>
<g >
<title>_ZSt5visitIR18overloaded_functorIJZN4cql34expr9find_atomIZNS2_28has_slice_or_needs_filteringERKNS2_10expressionEEUlRKNS2_15binary_operatorEE_EEPS8_S6_T_EUlS9_E_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_8constantEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_11conjunctionEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_12column_valueEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_5tokenEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_21unresolved_identifierEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_25column_mutation_attributeEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_13function_callEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_4castEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_15field_selectionEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_4nullEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_13bind_variableEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_16untyped_constantEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_17tuple_constructorEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_22collection_constructorEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_20usertype_constructorEE_EEJRSt7variantIJSI_S7_SM_SQ_SU_SY_S12_S16_S1A_S1E_S1I_S1M_SE_S1Q_S1U_S1Y_EEEENSt13invoke_resultISC_JDpDTclsr3stdE3getILm0EEclsr3stdE7declvalIT0_EEEEEE4typeEOSC_DpOS28_ (1 samples, 0.02%)</title><rect x="934.4" y="1541" width="0.2" height="15.0" fill="rgb(212,61,28)" rx="2" ry="2" />
<text  x="937.37" y="1551.5" ></text>
</g>
<g >
<title>reader_permit::consume (1 samples, 0.02%)</title><rect x="209.2" y="1333" width="0.2" height="15.0" fill="rgb(246,83,24)" rx="2" ry="2" />
<text  x="212.17" y="1343.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::upper_bound&lt;mutation_partition, schema const&amp;, nonwrapping_interval&lt;clustering_key_prefix&gt; const&amp;&gt; (1 samples, 0.02%)</title><rect x="285.3" y="1365" width="0.2" height="15.0" fill="rgb(227,20,54)" rx="2" ry="2" />
<text  x="288.26" y="1375.5" ></text>
</g>
<g >
<title>sstables::mc::writer::close_writer (1 samples, 0.02%)</title><rect x="10.7" y="1589" width="0.2" height="15.0" fill="rgb(216,63,30)" rx="2" ry="2" />
<text  x="13.66" y="1599.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="837" width="0.3" height="15.0" fill="rgb(232,169,47)" rx="2" ry="2" />
<text  x="13.44" y="847.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::create_aggregate_statement, std::default_delete&lt;cql3::statements::create_aggregate_statement&gt; &gt;::__uniq_ptr_impl (1 samples, 0.02%)</title><rect x="62.9" y="1493" width="0.3" height="15.0" fill="rgb(212,136,46)" rx="2" ry="2" />
<text  x="65.93" y="1503.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::statements::raw::parsed_statement, std::default_delete&lt;cql3::statements::raw::parsed_statement&gt;, true, true&gt;::operator= (1 samples, 0.02%)</title><rect x="64.5" y="1541" width="0.2" height="15.0" fill="rgb(214,28,44)" rx="2" ry="2" />
<text  x="67.48" y="1551.5" ></text>
</g>
<g >
<title>utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::get_or_load&lt;utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (23 samples, 0.43%)</title><rect x="742.0" y="1525" width="5.1" height="15.0" fill="rgb(249,68,44)" rx="2" ry="2" />
<text  x="745.04" y="1535.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="485" width="0.3" height="15.0" fill="rgb(254,84,11)" rx="2" ry="2" />
<text  x="13.44" y="495.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.02%)</title><rect x="50.6" y="1317" width="0.2" height="15.0" fill="rgb(222,145,5)" rx="2" ry="2" />
<text  x="53.58" y="1327.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;flat_mutation_reader::impl::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (4 samples, 0.07%)</title><rect x="338.4" y="1445" width="0.9" height="15.0" fill="rgb(237,22,26)" rx="2" ry="2" />
<text  x="341.41" y="1455.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (4 samples, 0.07%)</title><rect x="605.1" y="1541" width="0.9" height="15.0" fill="rgb(218,29,0)" rx="2" ry="2" />
<text  x="608.07" y="1551.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.04%)</title><rect x="548.8" y="1413" width="0.5" height="15.0" fill="rgb(209,40,31)" rx="2" ry="2" />
<text  x="551.83" y="1423.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally&lt;single_node_cql_env::execute_prepared_with_qo (8 samples, 0.15%)</title><rect x="822.8" y="1589" width="1.7" height="15.0" fill="rgb(245,137,13)" rx="2" ry="2" />
<text  x="825.77" y="1599.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (3 samples, 0.06%)</title><rect x="549.3" y="1413" width="0.6" height="15.0" fill="rgb(248,45,40)" rx="2" ry="2" />
<text  x="552.27" y="1423.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (2 samples, 0.04%)</title><rect x="634.8" y="1621" width="0.5" height="15.0" fill="rgb(223,188,6)" rx="2" ry="2" />
<text  x="637.85" y="1631.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (1 samples, 0.02%)</title><rect x="803.8" y="1429" width="0.2" height="15.0" fill="rgb(219,125,1)" rx="2" ry="2" />
<text  x="806.80" y="1439.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.02%)</title><rect x="848.8" y="1397" width="0.2" height="15.0" fill="rgb(253,183,33)" rx="2" ry="2" />
<text  x="851.79" y="1407.5" ></text>
</g>
<g >
<title>antlr3::DefaultAllocPolicy::StackType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::pop (1 samples, 0.02%)</title><rect x="36.7" y="1509" width="0.2" height="15.0" fill="rgb(225,76,32)" rx="2" ry="2" />
<text  x="39.69" y="1519.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::inc_p (1 samples, 0.02%)</title><rect x="55.0" y="1365" width="0.2" height="15.0" fill="rgb(216,126,30)" rx="2" ry="2" />
<text  x="57.99" y="1375.5" ></text>
</g>
<g >
<title>mutation_fragment::consume&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (1 samples, 0.02%)</title><rect x="690.0" y="1493" width="0.2" height="15.0" fill="rgb(220,127,2)" rx="2" ry="2" />
<text  x="692.99" y="1503.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (1 samples, 0.02%)</title><rect x="701.9" y="1621" width="0.2" height="15.0" fill="rgb(211,73,38)" rx="2" ry="2" />
<text  x="704.90" y="1631.5" ></text>
</g>
<g >
<title>allocation_strategy::destroy&lt;rows_entry&gt; (2 samples, 0.04%)</title><rect x="1127.6" y="1397" width="0.4" height="15.0" fill="rgb(249,221,5)" rx="2" ry="2" />
<text  x="1130.58" y="1407.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.02%)</title><rect x="1130.0" y="1541" width="0.2" height="15.0" fill="rgb(221,100,41)" rx="2" ry="2" />
<text  x="1133.01" y="1551.5" ></text>
</g>
<g >
<title>boost::range_detail::filtered_range&lt;mutation_partition::non_dummy_rows (2 samples, 0.04%)</title><rect x="1122.7" y="1285" width="0.5" height="15.0" fill="rgb(233,15,21)" rx="2" ry="2" />
<text  x="1125.73" y="1295.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="57.9" y="1381" width="0.2" height="15.0" fill="rgb(210,164,52)" rx="2" ry="2" />
<text  x="60.86" y="1391.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.07%)</title><rect x="532.5" y="1429" width="0.9" height="15.0" fill="rgb(248,5,22)" rx="2" ry="2" />
<text  x="535.51" y="1439.5" ></text>
</g>
<g >
<title>mutation_reader_merger::maybe_add_readers_at_partition_boundary (1 samples, 0.02%)</title><rect x="177.4" y="1461" width="0.2" height="15.0" fill="rgb(212,226,42)" rx="2" ry="2" />
<text  x="180.41" y="1471.5" ></text>
</g>
<g >
<title>operator new (6 samples, 0.11%)</title><rect x="719.5" y="1573" width="1.4" height="15.0" fill="rgb(248,227,18)" rx="2" ry="2" />
<text  x="722.54" y="1583.5" ></text>
</g>
<g >
<title>service::storage_proxy::send_to_live_endpoints (6 samples, 0.11%)</title><rect x="1119.9" y="1413" width="1.3" height="15.0" fill="rgb(250,166,17)" rx="2" ry="2" />
<text  x="1122.86" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt;::_Move_ctor_base (2 samples, 0.04%)</title><rect x="892.9" y="1445" width="0.4" height="15.0" fill="rgb(247,110,50)" rx="2" ry="2" />
<text  x="895.90" y="1455.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;void&gt;  (1 samples, 0.02%)</title><rect x="690.9" y="1477" width="0.2" height="15.0" fill="rgb(235,54,49)" rx="2" ry="2" />
<text  x="693.87" y="1487.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::add_data (20 samples, 0.37%)</title><rect x="705.0" y="1605" width="4.4" height="15.0" fill="rgb(236,98,48)" rx="2" ry="2" />
<text  x="707.99" y="1615.5" ></text>
</g>
<g >
<title>seastar::repeat&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (716 samples, 13.38%)</title><rect x="170.8" y="1525" width="157.9" height="15.0" fill="rgb(249,114,7)" rx="2" ry="2" />
<text  x="173.79" y="1535.5" >seastar::repeat&lt;merg..</text>
</g>
<g >
<title>cql3_parser::CqlParser::relation (10 samples, 0.19%)</title><rect x="57.6" y="1493" width="2.2" height="15.0" fill="rgb(207,28,45)" rx="2" ry="2" />
<text  x="60.64" y="1503.5" ></text>
</g>
<g >
<title>service::shared_mutation::~shared_mutation (1 samples, 0.02%)</title><rect x="691.8" y="1621" width="0.2" height="15.0" fill="rgb(230,4,32)" rx="2" ry="2" />
<text  x="694.75" y="1631.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::set&lt;service::storage_proxy_coordinator_query_result&gt; (1 samples, 0.02%)</title><rect x="1138.8" y="1637" width="0.3" height="15.0" fill="rgb(216,92,32)" rx="2" ry="2" />
<text  x="1141.83" y="1647.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (1 samples, 0.02%)</title><rect x="669.5" y="1621" width="0.2" height="15.0" fill="rgb(234,50,47)" rx="2" ry="2" />
<text  x="672.48" y="1631.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.07%)</title><rect x="602.0" y="1557" width="0.9" height="15.0" fill="rgb(237,203,1)" rx="2" ry="2" />
<text  x="604.99" y="1567.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.06%)</title><rect x="843.5" y="1589" width="0.7" height="15.0" fill="rgb(254,80,14)" rx="2" ry="2" />
<text  x="846.50" y="1599.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_in_thread&lt;stable_flattened_mutations_consumer&lt;compact_for_compaction&lt;sstables::compacting_sstable_writer, noop_compacted_fragments_consumer&gt; &gt;, flat_mutation_reader::no_filter&gt; (1 samples, 0.02%)</title><rect x="1130.0" y="1301" width="0.2" height="15.0" fill="rgb(237,95,7)" rx="2" ry="2" />
<text  x="1133.01" y="1311.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::_M_create_storage (8 samples, 0.15%)</title><rect x="928.4" y="1541" width="1.8" height="15.0" fill="rgb(242,228,24)" rx="2" ry="2" />
<text  x="931.41" y="1551.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (2 samples, 0.04%)</title><rect x="1136.8" y="1637" width="0.5" height="15.0" fill="rgb(210,126,49)" rx="2" ry="2" />
<text  x="1139.84" y="1647.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="262.5" y="1317" width="0.3" height="15.0" fill="rgb(236,145,33)" rx="2" ry="2" />
<text  x="265.54" y="1327.5" ></text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt;&amp;&gt; (4 samples, 0.07%)</title><rect x="828.7" y="1525" width="0.9" height="15.0" fill="rgb(221,12,33)" rx="2" ry="2" />
<text  x="831.72" y="1535.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (1 samples, 0.02%)</title><rect x="100.4" y="1013" width="0.3" height="15.0" fill="rgb(250,72,36)" rx="2" ry="2" />
<text  x="103.43" y="1023.5" ></text>
</g>
<g >
<title>operator delete (5 samples, 0.09%)</title><rect x="533.4" y="1477" width="1.1" height="15.0" fill="rgb(237,192,38)" rx="2" ry="2" />
<text  x="536.39" y="1487.5" ></text>
</g>
<g >
<title>std::optional&lt;position_in_partition&gt;::operator=&lt;position_in_partition&gt; (4 samples, 0.07%)</title><rect x="277.5" y="1381" width="0.9" height="15.0" fill="rgb(233,75,20)" rx="2" ry="2" />
<text  x="280.54" y="1391.5" ></text>
</g>
<g >
<title>database::find_schema (9 samples, 0.17%)</title><rect x="809.3" y="1509" width="2.0" height="15.0" fill="rgb(212,70,15)" rx="2" ry="2" />
<text  x="812.31" y="1519.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (3 samples, 0.06%)</title><rect x="419.6" y="1349" width="0.6" height="15.0" fill="rgb(246,222,32)" rx="2" ry="2" />
<text  x="422.58" y="1359.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (1 samples, 0.02%)</title><rect x="674.3" y="1621" width="0.2" height="15.0" fill="rgb(237,85,14)" rx="2" ry="2" />
<text  x="677.33" y="1631.5" ></text>
</g>
<g >
<title>checked_file_impl::list_directory (1 samples, 0.02%)</title><rect x="690.7" y="1557" width="0.2" height="15.0" fill="rgb(219,167,21)" rx="2" ry="2" />
<text  x="693.65" y="1567.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.02%)</title><rect x="55.2" y="1285" width="0.2" height="15.0" fill="rgb(231,36,40)" rx="2" ry="2" />
<text  x="58.21" y="1295.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::truncate_statement, std::default_delete&lt;cql3::statements::truncate_statement&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="65.1" y="1541" width="0.3" height="15.0" fill="rgb(237,204,24)" rx="2" ry="2" />
<text  x="68.14" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt;::_Move_ctor_base (1 samples, 0.02%)</title><rect x="890.5" y="1429" width="0.2" height="15.0" fill="rgb(248,88,41)" rx="2" ry="2" />
<text  x="893.48" y="1439.5" ></text>
</g>
<g >
<title>antlr3::DefaultAllocPolicy::StackType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::pop (1 samples, 0.02%)</title><rect x="39.6" y="1477" width="0.2" height="15.0" fill="rgb(238,88,3)" rx="2" ry="2" />
<text  x="42.56" y="1487.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;cql3::restrictions::single_column_restriction, false&gt;::make&lt;column_definition const&amp;&gt; (2 samples, 0.04%)</title><rect x="69.8" y="1509" width="0.4" height="15.0" fill="rgb(253,8,46)" rx="2" ry="2" />
<text  x="72.77" y="1519.5" ></text>
</g>
<g >
<title>seastar::fair_queue::next_pending_aio (1 samples, 0.02%)</title><rect x="82.6" y="1669" width="0.2" height="15.0" fill="rgb(219,199,3)" rx="2" ry="2" />
<text  x="85.56" y="1679.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.02%)</title><rect x="22.6" y="1493" width="0.2" height="15.0" fill="rgb(215,39,2)" rx="2" ry="2" />
<text  x="25.57" y="1503.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (44 samples, 0.82%)</title><rect x="1118.3" y="1573" width="9.7" height="15.0" fill="rgb(253,127,24)" rx="2" ry="2" />
<text  x="1121.32" y="1583.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::construct&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; const&amp;&gt; (1 samples, 0.02%)</title><rect x="46.8" y="1413" width="0.3" height="15.0" fill="rgb(208,71,10)" rx="2" ry="2" />
<text  x="49.83" y="1423.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (2 samples, 0.04%)</title><rect x="1078.0" y="1541" width="0.4" height="15.0" fill="rgb(239,104,7)" rx="2" ry="2" />
<text  x="1080.96" y="1551.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::modification_statement (2 samples, 0.04%)</title><rect x="72.6" y="1525" width="0.5" height="15.0" fill="rgb(215,26,16)" rx="2" ry="2" />
<text  x="75.64" y="1535.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (266 samples, 4.97%)</title><rect x="19.0" y="1653" width="58.7" height="15.0" fill="rgb(243,199,37)" rx="2" ry="2" />
<text  x="22.04" y="1663.5" >cql3::..</text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.02%)</title><rect x="58.1" y="1333" width="0.2" height="15.0" fill="rgb(208,218,25)" rx="2" ry="2" />
<text  x="61.08" y="1343.5" ></text>
</g>
<g >
<title>std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="855.6" y="1541" width="0.3" height="15.0" fill="rgb(205,129,31)" rx="2" ry="2" />
<text  x="858.63" y="1551.5" ></text>
</g>
<g >
<title>db::schema_tables::create_table_from_mutations (1 samples, 0.02%)</title><rect x="100.2" y="1573" width="0.2" height="15.0" fill="rgb(208,137,54)" rx="2" ry="2" />
<text  x="103.21" y="1583.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.02%)</title><rect x="22.6" y="1509" width="0.2" height="15.0" fill="rgb(218,146,25)" rx="2" ry="2" />
<text  x="25.57" y="1519.5" ></text>
</g>
<g >
<title>std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt;::reserve (5 samples, 0.09%)</title><rect x="1143.5" y="1605" width="1.1" height="15.0" fill="rgb(246,171,7)" rx="2" ry="2" />
<text  x="1146.46" y="1615.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_805ba145d71de739aa5a49a7dfdfc7655f960912] (1 samples, 0.02%)</title><rect x="701.7" y="1621" width="0.2" height="15.0" fill="rgb(216,71,30)" rx="2" ry="2" />
<text  x="704.68" y="1631.5" ></text>
</g>
<g >
<title>schema_builder::build (1 samples, 0.02%)</title><rect x="17.1" y="1397" width="0.2" height="15.0" fill="rgb(211,170,23)" rx="2" ry="2" />
<text  x="20.06" y="1407.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (1 samples, 0.02%)</title><rect x="829.4" y="1493" width="0.2" height="15.0" fill="rgb(243,137,43)" rx="2" ry="2" />
<text  x="832.38" y="1503.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.02%)</title><rect x="261.4" y="1285" width="0.3" height="15.0" fill="rgb(237,95,32)" rx="2" ry="2" />
<text  x="264.44" y="1295.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="779.1" y="1445" width="0.2" height="15.0" fill="rgb(249,128,33)" rx="2" ry="2" />
<text  x="782.10" y="1455.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;nonwrapping_interval&lt;dht::ring_position&gt; const*, nonwrapping_interval&lt;dht::ring_position&gt;*&gt; (1 samples, 0.02%)</title><rect x="1023.9" y="1413" width="0.2" height="15.0" fill="rgb(242,216,19)" rx="2" ry="2" />
<text  x="1026.92" y="1423.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;seastar::get_units&lt;db::commitlog::segment_manager::request_controller_timeout_exception_factory, seastar::lowres_clock&gt; (1 samples, 0.02%)</title><rect x="1117.4" y="1413" width="0.3" height="15.0" fill="rgb(205,121,5)" rx="2" ry="2" />
<text  x="1120.44" y="1423.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::abstract_read_executor (14 samples, 0.26%)</title><rect x="1046.2" y="1461" width="3.1" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1049.19" y="1471.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.02%)</title><rect x="58.5" y="1365" width="0.2" height="15.0" fill="rgb(250,206,39)" rx="2" ry="2" />
<text  x="61.52" y="1375.5" ></text>
</g>
<g >
<title>seastar::internal::future_base::future_base (1 samples, 0.02%)</title><rect x="776.9" y="1477" width="0.2" height="15.0" fill="rgb(254,227,2)" rx="2" ry="2" />
<text  x="779.89" y="1487.5" ></text>
</g>
<g >
<title>db::system_keyspace::query_mutations (3 samples, 0.06%)</title><rect x="100.4" y="1573" width="0.7" height="15.0" fill="rgb(219,179,6)" rx="2" ry="2" />
<text  x="103.43" y="1583.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (25 samples, 0.47%)</title><rect x="1112.6" y="1573" width="5.5" height="15.0" fill="rgb(228,204,29)" rx="2" ry="2" />
<text  x="1115.58" y="1583.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;boost::range_detail::integer_iterator&lt;unsigned int&gt;, std::function&lt;seastar::future&lt;void&gt;  (1 samples, 0.02%)</title><rect x="692.2" y="1589" width="0.2" height="15.0" fill="rgb(239,171,43)" rx="2" ry="2" />
<text  x="695.19" y="1599.5" ></text>
</g>
<g >
<title>locator::token_metadata::get_host_id_if_known (8 samples, 0.15%)</title><rect x="1141.5" y="1605" width="1.7" height="15.0" fill="rgb(225,91,20)" rx="2" ry="2" />
<text  x="1144.48" y="1615.5" ></text>
</g>
<g >
<title>operator delete (5 samples, 0.09%)</title><rect x="578.8" y="1445" width="1.1" height="15.0" fill="rgb(245,111,22)" rx="2" ry="2" />
<text  x="581.83" y="1455.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::~impl (2 samples, 0.04%)</title><rect x="570.4" y="1477" width="0.5" height="15.0" fill="rgb(229,49,5)" rx="2" ry="2" />
<text  x="573.44" y="1487.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::maybe_refresh_state (1 samples, 0.02%)</title><rect x="100.9" y="981" width="0.2" height="15.0" fill="rgb(242,102,31)" rx="2" ry="2" />
<text  x="103.87" y="991.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_last_fragment_kind, 4ul&gt;::small_vector (2 samples, 0.04%)</title><rect x="470.3" y="1413" width="0.5" height="15.0" fill="rgb(253,138,52)" rx="2" ry="2" />
<text  x="473.31" y="1423.5" ></text>
</g>
<g >
<title>sstables::compact_sstables (1 samples, 0.02%)</title><rect x="1130.0" y="1605" width="0.2" height="15.0" fill="rgb(227,16,29)" rx="2" ry="2" />
<text  x="1133.01" y="1615.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.02%)</title><rect x="43.5" y="1477" width="0.2" height="15.0" fill="rgb(210,12,12)" rx="2" ry="2" />
<text  x="46.53" y="1487.5" ></text>
</g>
<g >
<title>memtable::find_or_create_partition_slow (3 samples, 0.06%)</title><rect x="1113.7" y="1397" width="0.6" height="15.0" fill="rgb(246,71,39)" rx="2" ry="2" />
<text  x="1116.69" y="1407.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="22.6" y="1445" width="0.2" height="15.0" fill="rgb(221,79,48)" rx="2" ry="2" />
<text  x="25.57" y="1455.5" ></text>
</g>
<g >
<title>seastar::gate::leave (1 samples, 0.02%)</title><rect x="100.0" y="1621" width="0.2" height="15.0" fill="rgb(212,80,32)" rx="2" ry="2" />
<text  x="102.99" y="1631.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (2 samples, 0.04%)</title><rect x="304.7" y="1461" width="0.4" height="15.0" fill="rgb(231,140,39)" rx="2" ry="2" />
<text  x="307.67" y="1471.5" ></text>
</g>
<g >
<title>locator::token_metadata::first_token (1 samples, 0.02%)</title><rect x="1126.9" y="1317" width="0.2" height="15.0" fill="rgb(211,109,6)" rx="2" ry="2" />
<text  x="1129.92" y="1327.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (4 samples, 0.07%)</title><rect x="55.0" y="1397" width="0.9" height="15.0" fill="rgb(210,28,13)" rx="2" ry="2" />
<text  x="57.99" y="1407.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::selection::selection const&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="658.4" y="1621" width="0.3" height="15.0" fill="rgb(211,50,16)" rx="2" ry="2" />
<text  x="661.45" y="1631.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;empty_flat_reader, std::default_delete&lt;empty_flat_reader&gt; &gt;::~unique_ptr (2 samples, 0.04%)</title><rect x="549.9" y="1429" width="0.5" height="15.0" fill="rgb(250,83,26)" rx="2" ry="2" />
<text  x="552.93" y="1439.5" ></text>
</g>
<g >
<title>read_simple&lt;long, managed_bytes_basic_view&lt; (14 samples, 0.26%)</title><rect x="413.0" y="1301" width="3.1" height="15.0" fill="rgb(248,229,4)" rx="2" ry="2" />
<text  x="415.96" y="1311.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_range_tombstone (15 samples, 0.28%)</title><rect x="270.9" y="1381" width="3.3" height="15.0" fill="rgb(223,170,44)" rx="2" ry="2" />
<text  x="273.92" y="1391.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="50.6" y="1365" width="0.2" height="15.0" fill="rgb(248,147,34)" rx="2" ry="2" />
<text  x="53.58" y="1375.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::get_bound_terms (1 samples, 0.02%)</title><rect x="722.6" y="1605" width="0.3" height="15.0" fill="rgb(207,86,50)" rx="2" ry="2" />
<text  x="725.63" y="1615.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cident (13 samples, 0.24%)</title><rect x="40.4" y="1493" width="2.9" height="15.0" fill="rgb(210,187,14)" rx="2" ry="2" />
<text  x="43.44" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt;::~_Variant_storage (2 samples, 0.04%)</title><rect x="678.1" y="1589" width="0.4" height="15.0" fill="rgb(249,3,50)" rx="2" ry="2" />
<text  x="681.08" y="1599.5" ></text>
</g>
<g >
<title>reader_permit::consume (1 samples, 0.02%)</title><rect x="522.4" y="1333" width="0.2" height="15.0" fill="rgb(247,70,17)" rx="2" ry="2" />
<text  x="525.36" y="1343.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (5 samples, 0.09%)</title><rect x="41.5" y="1397" width="1.1" height="15.0" fill="rgb(234,207,4)" rx="2" ry="2" />
<text  x="44.54" y="1407.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_locally (3 samples, 0.06%)</title><rect x="1120.3" y="1365" width="0.7" height="15.0" fill="rgb(206,150,41)" rx="2" ry="2" />
<text  x="1123.30" y="1375.5" ></text>
</g>
<g >
<title>seastar::future&lt;mutation_fragment*&gt;::then_impl&lt;query::consume_page&lt; (1 samples, 0.02%)</title><rect x="556.3" y="1573" width="0.2" height="15.0" fill="rgb(245,93,10)" rx="2" ry="2" />
<text  x="559.33" y="1583.5" ></text>
</g>
<g >
<title>single_node_cql_env::make_query_state (38 samples, 0.71%)</title><rect x="827.0" y="1589" width="8.3" height="15.0" fill="rgb(228,125,34)" rx="2" ry="2" />
<text  x="829.96" y="1599.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (1 samples, 0.02%)</title><rect x="596.5" y="1525" width="0.2" height="15.0" fill="rgb(218,39,54)" rx="2" ry="2" />
<text  x="599.47" y="1535.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::clear (3 samples, 0.06%)</title><rect x="664.6" y="1637" width="0.7" height="15.0" fill="rgb(220,94,10)" rx="2" ry="2" />
<text  x="667.62" y="1647.5" ></text>
</g>
<g >
<title>database::find_uuid (1 samples, 0.02%)</title><rect x="77.1" y="1573" width="0.2" height="15.0" fill="rgb(250,65,41)" rx="2" ry="2" />
<text  x="80.05" y="1583.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate_to_raw_view (5 samples, 0.09%)</title><rect x="854.1" y="1461" width="1.1" height="15.0" fill="rgb(249,218,30)" rx="2" ry="2" />
<text  x="857.09" y="1471.5" ></text>
</g>
<g >
<title>locator::calculate_effective_replication_map (1 samples, 0.02%)</title><rect x="17.3" y="1573" width="0.2" height="15.0" fill="rgb(206,122,48)" rx="2" ry="2" />
<text  x="20.28" y="1583.5" ></text>
</g>
<g >
<title>database::apply (1 samples, 0.02%)</title><rect x="1120.7" y="1317" width="0.3" height="15.0" fill="rgb(234,200,43)" rx="2" ry="2" />
<text  x="1123.74" y="1327.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (1 samples, 0.02%)</title><rect x="11.1" y="1621" width="0.2" height="15.0" fill="rgb(241,151,41)" rx="2" ry="2" />
<text  x="14.10" y="1631.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_result_local (197 samples, 3.68%)</title><rect x="983.6" y="1445" width="43.4" height="15.0" fill="rgb(234,221,41)" rx="2" ry="2" />
<text  x="986.56" y="1455.5" >serv..</text>
</g>
<g >
<title>compact_mutation&lt; (1 samples, 0.02%)</title><rect x="443.6" y="1493" width="0.2" height="15.0" fill="rgb(235,83,29)" rx="2" ry="2" />
<text  x="446.62" y="1503.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (1 samples, 0.02%)</title><rect x="82.1" y="1621" width="0.2" height="15.0" fill="rgb(233,103,34)" rx="2" ry="2" />
<text  x="85.12" y="1631.5" ></text>
</g>
<g >
<title>service::storage_proxy::query (606 samples, 11.33%)</title><rect x="942.8" y="1557" width="133.6" height="15.0" fill="rgb(233,187,22)" rx="2" ry="2" />
<text  x="945.75" y="1567.5" >service::storage..</text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::operator (6 samples, 0.11%)</title><rect x="750.6" y="1541" width="1.4" height="15.0" fill="rgb(206,78,17)" rx="2" ry="2" />
<text  x="753.64" y="1551.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider (1 samples, 0.02%)</title><rect x="20.8" y="1461" width="0.2" height="15.0" fill="rgb(208,74,40)" rx="2" ry="2" />
<text  x="23.81" y="1471.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment&lt;schema const&amp;, rows_entry const&amp;&gt; (1 samples, 0.02%)</title><rect x="848.8" y="1461" width="0.2" height="15.0" fill="rgb(213,80,14)" rx="2" ry="2" />
<text  x="851.79" y="1471.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.06%)</title><rect x="897.8" y="1509" width="0.6" height="15.0" fill="rgb(220,56,23)" rx="2" ry="2" />
<text  x="900.76" y="1519.5" ></text>
</g>
<g >
<title>cql3::restrictions::restriction::restriction (1 samples, 0.02%)</title><rect x="10.4" y="69" width="0.3" height="15.0" fill="rgb(222,49,50)" rx="2" ry="2" />
<text  x="13.44" y="79.5" ></text>
</g>
<g >
<title>std::visit&lt;overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::has_token (1 samples, 0.02%)</title><rect x="936.4" y="1493" width="0.2" height="15.0" fill="rgb(238,130,1)" rx="2" ry="2" />
<text  x="939.36" y="1503.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;, cql3::query_processor::for_each_cql_result (1 samples, 0.02%)</title><rect x="639.0" y="1653" width="0.3" height="15.0" fill="rgb(242,33,42)" rx="2" ry="2" />
<text  x="642.04" y="1663.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_with_triggers (2 samples, 0.04%)</title><rect x="849.5" y="1541" width="0.4" height="15.0" fill="rgb(211,10,26)" rx="2" ry="2" />
<text  x="852.45" y="1551.5" ></text>
</g>
<g >
<title>cql3::attributes::is_timeout_set (1 samples, 0.02%)</title><rect x="939.7" y="1541" width="0.2" height="15.0" fill="rgb(217,203,42)" rx="2" ry="2" />
<text  x="942.66" y="1551.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::alter_service_level_statement, std::default_delete&lt;cql3::statements::alter_service_level_statement&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="62.1" y="1525" width="0.2" height="15.0" fill="rgb(248,186,17)" rx="2" ry="2" />
<text  x="65.05" y="1535.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reserve&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::partition_snapshot_flat_reader&lt;memtable&amp;&gt; (2 samples, 0.04%)</title><rect x="509.8" y="1445" width="0.4" height="15.0" fill="rgb(210,171,15)" rx="2" ry="2" />
<text  x="512.79" y="1455.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;::_Tuple_impl&lt;std::default_delete&lt;cql3::operation::set_value&gt; &gt; (1 samples, 0.02%)</title><rect x="57.0" y="1381" width="0.2" height="15.0" fill="rgb(242,78,8)" rx="2" ry="2" />
<text  x="59.98" y="1391.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.04%)</title><rect x="611.5" y="1509" width="0.4" height="15.0" fill="rgb(223,0,49)" rx="2" ry="2" />
<text  x="614.47" y="1519.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;&amp;, antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*&gt;::_Deque_iterator (1 samples, 0.02%)</title><rect x="22.1" y="1525" width="0.3" height="15.0" fill="rgb(246,202,11)" rx="2" ry="2" />
<text  x="25.13" y="1535.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::vector (3 samples, 0.06%)</title><rect x="1091.0" y="1557" width="0.6" height="15.0" fill="rgb(212,5,23)" rx="2" ry="2" />
<text  x="1093.97" y="1567.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_map&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::at&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt; &gt; (21 samples, 0.39%)</title><rect x="811.3" y="1493" width="4.6" height="15.0" fill="rgb(217,137,20)" rx="2" ry="2" />
<text  x="814.30" y="1503.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.02%)</title><rect x="59.4" y="1285" width="0.2" height="15.0" fill="rgb(234,101,51)" rx="2" ry="2" />
<text  x="62.41" y="1295.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (1 samples, 0.02%)</title><rect x="309.1" y="1493" width="0.2" height="15.0" fill="rgb(249,12,10)" rx="2" ry="2" />
<text  x="312.08" y="1503.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (2 samples, 0.04%)</title><rect x="281.1" y="1397" width="0.4" height="15.0" fill="rgb(243,165,33)" rx="2" ry="2" />
<text  x="284.07" y="1407.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::get0 (2 samples, 0.04%)</title><rect x="169.9" y="1525" width="0.4" height="15.0" fill="rgb(231,160,47)" rx="2" ry="2" />
<text  x="172.91" y="1535.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::has_token (2 samples, 0.04%)</title><rect x="654.5" y="1573" width="0.4" height="15.0" fill="rgb(229,118,20)" rx="2" ry="2" />
<text  x="657.48" y="1583.5" ></text>
</g>
<g >
<title>seastar::internal::do_until_state&lt;executor&lt;test_read (592 samples, 11.07%)</title><rect x="716.2" y="1653" width="130.6" height="15.0" fill="rgb(251,116,38)" rx="2" ry="2" />
<text  x="719.24" y="1663.5" >seastar::interna..</text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (2 samples, 0.04%)</title><rect x="1101.8" y="1525" width="0.4" height="15.0" fill="rgb(238,111,32)" rx="2" ry="2" />
<text  x="1104.78" y="1535.5" ></text>
</g>
<g >
<title>std::default_delete&lt;compact_for_query&lt; (3 samples, 0.06%)</title><rect x="440.5" y="1413" width="0.7" height="15.0" fill="rgb(238,209,22)" rx="2" ry="2" />
<text  x="443.53" y="1423.5" ></text>
</g>
<g >
<title>schema_registry::learn (5 samples, 0.09%)</title><rect x="101.5" y="1621" width="1.1" height="15.0" fill="rgb(236,173,3)" rx="2" ry="2" />
<text  x="104.53" y="1631.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, cql3::statements::raw::delete_statement*, std::default_delete&lt;cql3::statements::raw::delete_statement&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="63.8" y="1461" width="0.2" height="15.0" fill="rgb(229,94,44)" rx="2" ry="2" />
<text  x="66.82" y="1471.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::deallocate (1 samples, 0.02%)</title><rect x="570.2" y="1461" width="0.2" height="15.0" fill="rgb(250,60,34)" rx="2" ry="2" />
<text  x="573.22" y="1471.5" ></text>
</g>
<g >
<title>cql3::raw_value_view::make_temporary (1 samples, 0.02%)</title><rect x="854.7" y="1445" width="0.3" height="15.0" fill="rgb(232,166,8)" rx="2" ry="2" />
<text  x="857.75" y="1455.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextToken (44 samples, 0.82%)</title><rect x="25.4" y="1445" width="9.7" height="15.0" fill="rgb(242,36,27)" rx="2" ry="2" />
<text  x="28.44" y="1455.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::~vector (3 samples, 0.06%)</title><rect x="644.3" y="1621" width="0.7" height="15.0" fill="rgb(228,3,32)" rx="2" ry="2" />
<text  x="647.33" y="1631.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (3 samples, 0.06%)</title><rect x="676.1" y="1621" width="0.7" height="15.0" fill="rgb(232,21,6)" rx="2" ry="2" />
<text  x="679.09" y="1631.5" ></text>
</g>
<g >
<title>service::abstract_write_response_handler::delay&lt;service::abstract_write_response_handler::signal (1 samples, 0.02%)</title><rect x="712.7" y="1589" width="0.2" height="15.0" fill="rgb(236,173,0)" rx="2" ry="2" />
<text  x="715.71" y="1599.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector (3 samples, 0.06%)</title><rect x="1049.9" y="1461" width="0.7" height="15.0" fill="rgb(235,127,9)" rx="2" ry="2" />
<text  x="1052.94" y="1471.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (2 samples, 0.04%)</title><rect x="646.8" y="1637" width="0.4" height="15.0" fill="rgb(208,213,33)" rx="2" ry="2" />
<text  x="649.76" y="1647.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="781.3" y="1397" width="0.2" height="15.0" fill="rgb(232,111,6)" rx="2" ry="2" />
<text  x="784.30" y="1407.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::get_type (1 samples, 0.02%)</title><rect x="28.1" y="1413" width="0.2" height="15.0" fill="rgb(254,167,48)" rx="2" ry="2" />
<text  x="31.09" y="1423.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_insert&lt;flat_mutation_reader&gt; (4 samples, 0.07%)</title><rect x="462.8" y="1413" width="0.9" height="15.0" fill="rgb(234,97,16)" rx="2" ry="2" />
<text  x="465.81" y="1423.5" ></text>
</g>
<g >
<title>cql3::expr::expression::~expression (1 samples, 0.02%)</title><rect x="58.7" y="1445" width="0.3" height="15.0" fill="rgb(210,171,47)" rx="2" ry="2" />
<text  x="61.74" y="1455.5" ></text>
</g>
<g >
<title>auth::resource::resource (1 samples, 0.02%)</title><rect x="74.8" y="1605" width="0.3" height="15.0" fill="rgb(217,57,10)" rx="2" ry="2" />
<text  x="77.84" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="853" width="0.3" height="15.0" fill="rgb(237,213,5)" rx="2" ry="2" />
<text  x="13.44" y="863.5" ></text>
</g>
<g >
<title>compound_wrapper&lt;partition_key, partition_key_view&gt;::explode (2 samples, 0.04%)</title><rect x="1125.8" y="1253" width="0.5" height="15.0" fill="rgb(239,36,23)" rx="2" ry="2" />
<text  x="1128.82" y="1263.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::_S_do_relocate (3 samples, 0.06%)</title><rect x="49.3" y="1397" width="0.6" height="15.0" fill="rgb(245,113,33)" rx="2" ry="2" />
<text  x="52.26" y="1407.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="78.8" y="1733" width="0.2" height="15.0" fill="rgb(238,144,52)" rx="2" ry="2" />
<text  x="81.81" y="1743.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.02%)</title><rect x="40.9" y="1301" width="0.2" height="15.0" fill="rgb(240,222,38)" rx="2" ry="2" />
<text  x="43.88" y="1311.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (4 samples, 0.07%)</title><rect x="1010.7" y="1301" width="0.9" height="15.0" fill="rgb(250,134,29)" rx="2" ry="2" />
<text  x="1013.68" y="1311.5" ></text>
</g>
<g >
<title>std::__equal&lt;true&gt;::equal&lt;char&gt; (5 samples, 0.09%)</title><rect x="791.2" y="1269" width="1.1" height="15.0" fill="rgb(251,187,40)" rx="2" ry="2" />
<text  x="794.23" y="1279.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_locally (3 samples, 0.06%)</title><rect x="1120.3" y="1349" width="0.7" height="15.0" fill="rgb(242,159,16)" rx="2" ry="2" />
<text  x="1123.30" y="1359.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::close (98 samples, 1.83%)</title><rect x="566.5" y="1541" width="21.6" height="15.0" fill="rgb(238,57,25)" rx="2" ry="2" />
<text  x="569.47" y="1551.5" >m..</text>
</g>
<g >
<title>std::deque&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*&gt; &gt;::_M_destroy_data&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*&gt; &gt; (1 samples, 0.02%)</title><rect x="21.9" y="1493" width="0.2" height="15.0" fill="rgb(218,198,6)" rx="2" ry="2" />
<text  x="24.91" y="1503.5" ></text>
</g>
<g >
<title>ser::writer_of_deletable_row&lt;bytes_ostream&gt;::write_key (3 samples, 0.06%)</title><rect x="1125.2" y="1285" width="0.6" height="15.0" fill="rgb(216,86,13)" rx="2" ry="2" />
<text  x="1128.16" y="1295.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (6 samples, 0.11%)</title><rect x="552.8" y="1461" width="1.3" height="15.0" fill="rgb(209,82,8)" rx="2" ry="2" />
<text  x="555.80" y="1471.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="430.6" y="1317" width="0.2" height="15.0" fill="rgb(252,153,4)" rx="2" ry="2" />
<text  x="433.61" y="1327.5" ></text>
</g>
<g >
<title>mutation_source::make_reader (1 samples, 0.02%)</title><rect x="1165.3" y="1605" width="0.2" height="15.0" fill="rgb(250,182,3)" rx="2" ry="2" />
<text  x="1168.30" y="1615.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="692.9" y="1621" width="0.2" height="15.0" fill="rgb(241,2,52)" rx="2" ry="2" />
<text  x="695.86" y="1631.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.02%)</title><rect x="57.9" y="1445" width="0.2" height="15.0" fill="rgb(238,160,22)" rx="2" ry="2" />
<text  x="60.86" y="1455.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="546.6" y="1429" width="0.2" height="15.0" fill="rgb(205,36,16)" rx="2" ry="2" />
<text  x="549.62" y="1439.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser&lt;std::_Mem_fn&lt;std::unique_ptr&lt;cql3::statements::raw::parsed_statement, std::default_delete&lt;cql3::statements::raw::parsed_statement&gt; &gt;  (209 samples, 3.91%)</title><rect x="19.5" y="1605" width="46.1" height="15.0" fill="rgb(215,129,33)" rx="2" ry="2" />
<text  x="22.48" y="1615.5" >cql3..</text>
</g>
<g >
<title>__start_context (13 samples, 0.24%)</title><rect x="79.5" y="1749" width="2.8" height="15.0" fill="rgb(205,125,49)" rx="2" ry="2" />
<text  x="82.48" y="1759.5" ></text>
</g>
<g >
<title>seastar::preempt_io_context::reset_preemption_monitor (1 samples, 0.02%)</title><rect x="1130.2" y="1653" width="0.2" height="15.0" fill="rgb(244,30,42)" rx="2" ry="2" />
<text  x="1133.23" y="1663.5" ></text>
</g>
<g >
<title>bplus::node&lt;long, intrusive_array&lt;cache_entry&gt;, dht::raw_token_less_comparator, 16ul,  (1 samples, 0.02%)</title><rect x="15.7" y="1669" width="0.3" height="15.0" fill="rgb(224,118,14)" rx="2" ry="2" />
<text  x="18.73" y="1679.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::operator= (1 samples, 0.02%)</title><rect x="705.4" y="1589" width="0.2" height="15.0" fill="rgb(217,206,7)" rx="2" ry="2" />
<text  x="708.43" y="1599.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt;::deallocate (1 samples, 0.02%)</title><rect x="48.4" y="1381" width="0.2" height="15.0" fill="rgb(208,15,41)" rx="2" ry="2" />
<text  x="51.38" y="1391.5" ></text>
</g>
<g >
<title>cql3::relation::to_restriction (1 samples, 0.02%)</title><rect x="10.4" y="117" width="0.3" height="15.0" fill="rgb(239,180,12)" rx="2" ry="2" />
<text  x="13.44" y="127.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_pausable&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (438 samples, 8.19%)</title><rect x="340.6" y="1429" width="96.6" height="15.0" fill="rgb(234,41,27)" rx="2" ry="2" />
<text  x="343.62" y="1439.5" >flat_mutati..</text>
</g>
<g >
<title>operator new (4 samples, 0.07%)</title><rect x="562.3" y="1557" width="0.9" height="15.0" fill="rgb(216,29,1)" rx="2" ry="2" />
<text  x="565.28" y="1567.5" ></text>
</g>
<g >
<title>_ZSt5visitIR18overloaded_functorIJZN4cql34expr9find_atomIZNS2_28has_slice_or_needs_filteringERKNS2_10expressionEEUlRKNS2_15binary_operatorEE_EEPS8_S6_T_EUlS9_E_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_8constantEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_11conjunctionEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_12column_valueEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_5tokenEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_21unresolved_identifierEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_25column_mutation_attributeEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_13function_callEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_4castEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_15field_selectionEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_4nullEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_13bind_variableEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_16untyped_constantEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_17tuple_constructorEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_22collection_constructorEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_20usertype_constructorEE_EEJRSt7variantIJSI_S7_SM_SQ_SU_SY_S12_S16_S1A_S1E_S1I_S1M_SE_S1Q_S1U_S1Y_EEEENSt13invoke_resultISC_JDpDTclsr3stdE3getILm0EEclsr3stdE7declvalIT0_EEEEEE4typeEOSC_DpOS28_ (1 samples, 0.02%)</title><rect x="654.3" y="1541" width="0.2" height="15.0" fill="rgb(247,205,23)" rx="2" ry="2" />
<text  x="657.26" y="1551.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::set_error (2 samples, 0.04%)</title><rect x="25.4" y="1429" width="0.5" height="15.0" fill="rgb(235,217,40)" rx="2" ry="2" />
<text  x="28.44" y="1439.5" ></text>
</g>
<g >
<title>std::vector&lt;seastar::shared_ptr&lt;cql3::operation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::operation&gt; &gt; &gt;::emplace_back&lt;seastar::shared_ptr&lt;cql3::operation&gt; &gt; (1 samples, 0.02%)</title><rect x="68.9" y="1557" width="0.2" height="15.0" fill="rgb(223,125,50)" rx="2" ry="2" />
<text  x="71.89" y="1567.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (348 samples, 6.50%)</title><rect x="345.7" y="1397" width="76.7" height="15.0" fill="rgb(205,192,6)" rx="2" ry="2" />
<text  x="348.69" y="1407.5" >flat_mut..</text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::mutation_fragment_merger (6 samples, 0.11%)</title><rect x="469.4" y="1429" width="1.4" height="15.0" fill="rgb(254,66,34)" rx="2" ry="2" />
<text  x="472.43" y="1439.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (30 samples, 0.56%)</title><rect x="849.5" y="1605" width="6.6" height="15.0" fill="rgb(226,94,19)" rx="2" ry="2" />
<text  x="852.45" y="1615.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;::operator== (1 samples, 0.02%)</title><rect x="727.3" y="1461" width="0.2" height="15.0" fill="rgb(210,129,26)" rx="2" ry="2" />
<text  x="730.26" y="1471.5" ></text>
</g>
<g >
<title>position_in_partition_view::for_range_end (2 samples, 0.04%)</title><rect x="275.3" y="1381" width="0.5" height="15.0" fill="rgb(218,212,51)" rx="2" ry="2" />
<text  x="278.33" y="1391.5" ></text>
</g>
<g >
<title>free (1 samples, 0.02%)</title><rect x="90.7" y="1573" width="0.2" height="15.0" fill="rgb(247,197,43)" rx="2" ry="2" />
<text  x="93.73" y="1583.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (4 samples, 0.07%)</title><rect x="344.8" y="1397" width="0.9" height="15.0" fill="rgb(237,146,15)" rx="2" ry="2" />
<text  x="347.81" y="1407.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;reader_concurrency_semaphore::entry&gt; &gt;::destroy&lt;reader_concurrency_semaphore::entry&gt; (1 samples, 0.02%)</title><rect x="638.2" y="1621" width="0.2" height="15.0" fill="rgb(205,141,3)" rx="2" ry="2" />
<text  x="641.16" y="1631.5" ></text>
</g>
<g >
<title>flush_reader::get_next_partition (1 samples, 0.02%)</title><rect x="79.5" y="1557" width="0.2" height="15.0" fill="rgb(214,14,4)" rx="2" ry="2" />
<text  x="82.48" y="1567.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::tombstone_for_row (1 samples, 0.02%)</title><rect x="420.7" y="1381" width="0.2" height="15.0" fill="rgb(227,216,6)" rx="2" ry="2" />
<text  x="423.68" y="1391.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="677.6" y="1589" width="0.3" height="15.0" fill="rgb(251,59,38)" rx="2" ry="2" />
<text  x="680.64" y="1599.5" ></text>
</g>
<g >
<title>bound_view::from_range_start&lt;nonwrapping_interval&gt; (3 samples, 0.06%)</title><rect x="289.5" y="1349" width="0.6" height="15.0" fill="rgb(225,49,49)" rx="2" ry="2" />
<text  x="292.45" y="1359.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.02%)</title><rect x="55.2" y="1253" width="0.2" height="15.0" fill="rgb(230,145,40)" rx="2" ry="2" />
<text  x="58.21" y="1263.5" ></text>
</g>
<g >
<title>std::apply&lt;service::client_state::check_has_permission (4 samples, 0.07%)</title><rect x="75.7" y="1541" width="0.9" height="15.0" fill="rgb(245,9,29)" rx="2" ry="2" />
<text  x="78.73" y="1551.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.02%)</title><rect x="58.5" y="1269" width="0.2" height="15.0" fill="rgb(205,171,41)" rx="2" ry="2" />
<text  x="61.52" y="1279.5" ></text>
</g>
<g >
<title>utils::tuple_hash::hash_impl&lt;1ul, auth::resource_kind, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (2 samples, 0.04%)</title><rect x="807.1" y="1445" width="0.4" height="15.0" fill="rgb(206,17,23)" rx="2" ry="2" />
<text  x="810.11" y="1455.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.02%)</title><rect x="57.9" y="1317" width="0.2" height="15.0" fill="rgb(213,119,0)" rx="2" ry="2" />
<text  x="60.86" y="1327.5" ></text>
</g>
<g >
<title>partition_snapshot::get_change_mark (3 samples, 0.06%)</title><rect x="272.5" y="1301" width="0.6" height="15.0" fill="rgb(227,195,10)" rx="2" ry="2" />
<text  x="275.47" y="1311.5" ></text>
</g>
<g >
<title>mutation_fragment::visit&lt;mutation_fragment::calculate_memory_usage (1 samples, 0.02%)</title><rect x="211.2" y="1365" width="0.2" height="15.0" fill="rgb(215,100,17)" rx="2" ry="2" />
<text  x="214.15" y="1375.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (6 samples, 0.11%)</title><rect x="414.7" y="1285" width="1.4" height="15.0" fill="rgb(209,39,16)" rx="2" ry="2" />
<text  x="417.73" y="1295.5" ></text>
</g>
<g >
<title>std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;, seastar::future&lt;void&gt; &gt; &gt;::operator (3 samples, 0.06%)</title><rect x="808.2" y="1525" width="0.7" height="15.0" fill="rgb(214,6,26)" rx="2" ry="2" />
<text  x="811.21" y="1535.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (4 samples, 0.07%)</title><rect x="441.4" y="1525" width="0.9" height="15.0" fill="rgb(237,49,19)" rx="2" ry="2" />
<text  x="444.42" y="1535.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::lower_bound&lt;mutation_partition, schema const&amp;, nonwrapping_interval&lt;clustering_key_prefix&gt; const&amp;&gt; (1 samples, 0.02%)</title><rect x="292.8" y="1381" width="0.2" height="15.0" fill="rgb(211,194,33)" rx="2" ry="2" />
<text  x="295.76" y="1391.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.06%)</title><rect x="999.9" y="1381" width="0.6" height="15.0" fill="rgb(217,99,18)" rx="2" ry="2" />
<text  x="1002.88" y="1391.5" ></text>
</g>
<g >
<title>mutation_reader_merger::mutation_reader_merger (4 samples, 0.07%)</title><rect x="473.0" y="1477" width="0.8" height="15.0" fill="rgb(234,229,32)" rx="2" ry="2" />
<text  x="475.96" y="1487.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.02%)</title><rect x="98.4" y="1637" width="0.3" height="15.0" fill="rgb(233,116,53)" rx="2" ry="2" />
<text  x="101.44" y="1647.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (1 samples, 0.02%)</title><rect x="1013.3" y="1365" width="0.3" height="15.0" fill="rgb(253,113,26)" rx="2" ry="2" />
<text  x="1016.33" y="1375.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="1349" width="0.3" height="15.0" fill="rgb(207,115,15)" rx="2" ry="2" />
<text  x="13.44" y="1359.5" ></text>
</g>
<g >
<title>mutation_partition_serializer::write_serialized&lt;ser::writer_of_mutation_partition&lt;bytes_ostream&gt; &gt; (14 samples, 0.26%)</title><rect x="1122.7" y="1317" width="3.1" height="15.0" fill="rgb(246,219,8)" rx="2" ry="2" />
<text  x="1125.73" y="1327.5" ></text>
</g>
<g >
<title>bplus::node&lt;long, intrusive_array&lt;memtable_entry&gt;, dht::raw_token_less_comparator, 16ul,  (2 samples, 0.04%)</title><rect x="1113.7" y="1317" width="0.4" height="15.0" fill="rgb(247,155,34)" rx="2" ry="2" />
<text  x="1116.69" y="1327.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_internal (1 samples, 0.02%)</title><rect x="10.4" y="261" width="0.3" height="15.0" fill="rgb(211,70,45)" rx="2" ry="2" />
<text  x="13.44" y="271.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (2 samples, 0.04%)</title><rect x="75.9" y="1365" width="0.5" height="15.0" fill="rgb(225,10,24)" rx="2" ry="2" />
<text  x="78.95" y="1375.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="921.8" y="1509" width="0.2" height="15.0" fill="rgb(253,132,52)" rx="2" ry="2" />
<text  x="924.80" y="1519.5" ></text>
</g>
<g >
<title>cql3::expr::reserialize_value&lt;managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="855.2" y="1381" width="0.2" height="15.0" fill="rgb(242,111,36)" rx="2" ry="2" />
<text  x="858.19" y="1391.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;flat_mutation_reader&gt;::allocate (2 samples, 0.04%)</title><rect x="552.4" y="1477" width="0.4" height="15.0" fill="rgb(242,184,0)" rx="2" ry="2" />
<text  x="555.36" y="1487.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::invoke&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (1 samples, 0.02%)</title><rect x="328.3" y="1509" width="0.2" height="15.0" fill="rgb(235,144,17)" rx="2" ry="2" />
<text  x="331.27" y="1519.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (3 samples, 0.06%)</title><rect x="713.6" y="1653" width="0.7" height="15.0" fill="rgb(235,175,53)" rx="2" ry="2" />
<text  x="716.59" y="1663.5" ></text>
</g>
<g >
<title>locator::token_metadata_impl::first_token_index (27 samples, 0.50%)</title><rect x="1055.0" y="1413" width="6.0" height="15.0" fill="rgb(253,34,18)" rx="2" ry="2" />
<text  x="1058.02" y="1423.5" ></text>
</g>
<g >
<title>sstables::mx::mx_sstable_mutation_reader::fill_buffer (1 samples, 0.02%)</title><rect x="1130.0" y="1077" width="0.2" height="15.0" fill="rgb(241,151,17)" rx="2" ry="2" />
<text  x="1133.01" y="1087.5" ></text>
</g>
<g >
<title>absl::hash_internal::AbslHashValue&lt;absl::hash_internal::HashState&gt; (2 samples, 0.04%)</title><rect x="819.5" y="1445" width="0.4" height="15.0" fill="rgb(244,52,29)" rx="2" ry="2" />
<text  x="822.46" y="1455.5" ></text>
</g>
<g >
<title>boost::range::count_if&lt;utils::small_vector&lt;gms::inet_address, 1ul&gt;, service::storage_proxy::hint_to_dead_endpoints&lt;utils::small_vector&lt;gms::inet_address, 1ul&gt; &gt; (1 samples, 0.02%)</title><rect x="1119.6" y="1381" width="0.3" height="15.0" fill="rgb(218,162,23)" rx="2" ry="2" />
<text  x="1122.64" y="1391.5" ></text>
</g>
<g >
<title>clustering_row::minimal_external_memory_usage (1 samples, 0.02%)</title><rect x="79.7" y="1477" width="0.2" height="15.0" fill="rgb(249,38,43)" rx="2" ry="2" />
<text  x="82.70" y="1487.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::on_new_range (52 samples, 0.97%)</title><rect x="205.0" y="1397" width="11.4" height="15.0" fill="rgb(234,162,15)" rx="2" ry="2" />
<text  x="207.98" y="1407.5" ></text>
</g>
<g >
<title>std::construct_at&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; (2 samples, 0.04%)</title><rect x="48.6" y="1397" width="0.4" height="15.0" fill="rgb(251,154,1)" rx="2" ry="2" />
<text  x="51.60" y="1407.5" ></text>
</g>
<g >
<title>utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::lru_entry::touch (7 samples, 0.13%)</title><rect x="738.3" y="1461" width="1.5" height="15.0" fill="rgb(217,202,6)" rx="2" ry="2" />
<text  x="741.29" y="1471.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_insert_unique_node (1 samples, 0.02%)</title><rect x="78.8" y="1253" width="0.2" height="15.0" fill="rgb(215,93,41)" rx="2" ry="2" />
<text  x="81.81" y="1263.5" ></text>
</g>
<g >
<title>cql3::attributes::raw::raw (1 samples, 0.02%)</title><rect x="60.1" y="1493" width="0.2" height="15.0" fill="rgb(233,187,17)" rx="2" ry="2" />
<text  x="63.07" y="1503.5" ></text>
</g>
<g >
<title>frozen_mutation::unfreeze (1 samples, 0.02%)</title><rect x="101.1" y="1573" width="0.2" height="15.0" fill="rgb(237,31,43)" rx="2" ry="2" />
<text  x="104.09" y="1583.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="671.9" y="1637" width="0.2" height="15.0" fill="rgb(227,17,12)" rx="2" ry="2" />
<text  x="674.90" y="1647.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::timer (2 samples, 0.04%)</title><rect x="1009.1" y="1301" width="0.5" height="15.0" fill="rgb(252,186,41)" rx="2" ry="2" />
<text  x="1012.14" y="1311.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (3 samples, 0.06%)</title><rect x="515.3" y="1413" width="0.7" height="15.0" fill="rgb(244,183,42)" rx="2" ry="2" />
<text  x="518.30" y="1423.5" ></text>
</g>
<g >
<title>bplus::node&lt;long, intrusive_array&lt;cache_entry&gt;, dht::raw_token_less_comparator, 16ul,  (1 samples, 0.02%)</title><rect x="15.7" y="1685" width="0.3" height="15.0" fill="rgb(240,93,31)" rx="2" ry="2" />
<text  x="18.73" y="1695.5" ></text>
</g>
<g >
<title>make_empty_flat_reader (1 samples, 0.02%)</title><rect x="538.0" y="1477" width="0.2" height="15.0" fill="rgb(220,193,21)" rx="2" ry="2" />
<text  x="541.02" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;2ul, cql3::expr::untyped_constant&gt; (1 samples, 0.02%)</title><rect x="53.7" y="1125" width="0.2" height="15.0" fill="rgb(207,103,17)" rx="2" ry="2" />
<text  x="56.67" y="1135.5" ></text>
</g>
<g >
<title>intrusive_b::node&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (2 samples, 0.04%)</title><rect x="1127.6" y="1413" width="0.4" height="15.0" fill="rgb(237,206,43)" rx="2" ry="2" />
<text  x="1130.58" y="1423.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::vector (7 samples, 0.13%)</title><rect x="931.1" y="1557" width="1.5" height="15.0" fill="rgb(213,34,23)" rx="2" ry="2" />
<text  x="934.06" y="1567.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.02%)</title><rect x="58.5" y="1397" width="0.2" height="15.0" fill="rgb(225,17,14)" rx="2" ry="2" />
<text  x="61.52" y="1407.5" ></text>
</g>
<g >
<title>dht::ring_position_tri_compare (41 samples, 0.77%)</title><rect x="489.9" y="1429" width="9.1" height="15.0" fill="rgb(232,137,22)" rx="2" ry="2" />
<text  x="492.94" y="1439.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.07%)</title><rect x="624.0" y="1573" width="0.9" height="15.0" fill="rgb(238,119,31)" rx="2" ry="2" />
<text  x="627.04" y="1583.5" ></text>
</g>
<g >
<title>ser::writer_of_std__optional__qr_cell&lt;bytes_ostream&gt;::write (10 samples, 0.19%)</title><rect x="393.3" y="1317" width="2.2" height="15.0" fill="rgb(225,217,35)" rx="2" ry="2" />
<text  x="396.33" y="1327.5" ></text>
</g>
<g >
<title>bound_view::from_range_end&lt;nonwrapping_interval&gt; (1 samples, 0.02%)</title><rect x="267.8" y="1285" width="0.3" height="15.0" fill="rgb(242,32,1)" rx="2" ry="2" />
<text  x="270.84" y="1295.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.02%)</title><rect x="51.7" y="1253" width="0.2" height="15.0" fill="rgb(234,133,14)" rx="2" ry="2" />
<text  x="54.69" y="1263.5" ></text>
</g>
<g >
<title>std::function&lt;seastar::future&lt;void&gt;  (1 samples, 0.02%)</title><rect x="690.9" y="1493" width="0.2" height="15.0" fill="rgb(209,152,15)" rx="2" ry="2" />
<text  x="693.87" y="1503.5" ></text>
</g>
<g >
<title>operator new (7 samples, 0.13%)</title><rect x="928.6" y="1525" width="1.6" height="15.0" fill="rgb(206,104,3)" rx="2" ry="2" />
<text  x="931.64" y="1535.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.07%)</title><rect x="1148.5" y="1573" width="0.9" height="15.0" fill="rgb(249,169,5)" rx="2" ry="2" />
<text  x="1151.53" y="1583.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (6 samples, 0.11%)</title><rect x="877.9" y="1445" width="1.3" height="15.0" fill="rgb(215,166,49)" rx="2" ry="2" />
<text  x="880.91" y="1455.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;mutation_reader_merger::reader_and_last_fragment_kind*, mutation_reader_merger::prepare_next (1 samples, 0.02%)</title><rect x="848.6" y="1573" width="0.2" height="15.0" fill="rgb(253,131,51)" rx="2" ry="2" />
<text  x="851.57" y="1583.5" ></text>
</g>
<g >
<title>bound_view::from_range&lt;nonwrapping_interval&gt; (3 samples, 0.06%)</title><rect x="267.2" y="1285" width="0.6" height="15.0" fill="rgb(231,77,30)" rx="2" ry="2" />
<text  x="270.17" y="1295.5" ></text>
</g>
<g >
<title>[unknown] (327 samples, 6.11%)</title><rect x="10.4" y="1781" width="72.2" height="15.0" fill="rgb(248,175,14)" rx="2" ry="2" />
<text  x="13.44" y="1791.5" >[unknown]</text>
</g>
<g >
<title>std::vector&lt;seastar::shared_ptr&lt;cql3::relation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::relation&gt; &gt; &gt;::operator= (1 samples, 0.02%)</title><rect x="61.4" y="1509" width="0.2" height="15.0" fill="rgb(239,163,10)" rx="2" ry="2" />
<text  x="64.39" y="1519.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (4 samples, 0.07%)</title><rect x="775.8" y="1429" width="0.9" height="15.0" fill="rgb(223,36,5)" rx="2" ry="2" />
<text  x="778.79" y="1439.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::_S_relocate (3 samples, 0.06%)</title><rect x="49.3" y="1413" width="0.6" height="15.0" fill="rgb(229,148,45)" rx="2" ry="2" />
<text  x="52.26" y="1423.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::operator (2 samples, 0.04%)</title><rect x="744.2" y="1445" width="0.5" height="15.0" fill="rgb(242,133,35)" rx="2" ry="2" />
<text  x="747.25" y="1455.5" ></text>
</g>
<g >
<title>to_hex (1 samples, 0.02%)</title><rect x="77.9" y="1653" width="0.3" height="15.0" fill="rgb(217,175,0)" rx="2" ry="2" />
<text  x="80.93" y="1663.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::operator (1 samples, 0.02%)</title><rect x="1130.0" y="1237" width="0.2" height="15.0" fill="rgb(210,132,53)" rx="2" ry="2" />
<text  x="1133.01" y="1247.5" ></text>
</g>
<g >
<title>database::find_keyspace (25 samples, 0.47%)</title><rect x="1035.8" y="1493" width="5.5" height="15.0" fill="rgb(242,122,53)" rx="2" ry="2" />
<text  x="1038.83" y="1503.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="574.4" y="1445" width="0.2" height="15.0" fill="rgb(214,188,39)" rx="2" ry="2" />
<text  x="577.41" y="1455.5" ></text>
</g>
<g >
<title>schema::partition_key_columns (1 samples, 0.02%)</title><rect x="73.7" y="1605" width="0.3" height="15.0" fill="rgb(215,47,2)" rx="2" ry="2" />
<text  x="76.74" y="1615.5" ></text>
</g>
<g >
<title>std::_Optional_base_impl&lt;query::querier&lt; (1 samples, 0.02%)</title><rect x="622.1" y="1589" width="0.2" height="15.0" fill="rgb(221,181,52)" rx="2" ry="2" />
<text  x="625.06" y="1599.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (1 samples, 0.02%)</title><rect x="1074.4" y="1525" width="0.2" height="15.0" fill="rgb(250,75,9)" rx="2" ry="2" />
<text  x="1077.43" y="1535.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEENK4$_43clERKNSF_15binary_operatorEEUlRKNSF_12column_valueEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_17tuple_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlNSF_5tokenEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlSS_E_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_11conjunctionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_8constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_21unresolved_identifierEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_25column_mutation_attributeEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13function_callEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4castEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_15field_selectionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4nullEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13bind_variableEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_16untyped_constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_22collection_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_20usertype_constructorEE_EERS4_IJS14_SQ_ST_S11_S1C_S1G_S1K_S1O_S1S_S1W_S20_S24_S18_SX_S28_S2C_EEEJEEESt16integer_sequenceImJLm2EEEE14__visit_invokeES2H_S2J_ (1 samples, 0.02%)</title><rect x="902.4" y="1541" width="0.2" height="15.0" fill="rgb(227,99,16)" rx="2" ry="2" />
<text  x="905.39" y="1551.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;auth::resource_kind, std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;auth::resource_kind&gt;, std::hash&lt;auth::resource_kind&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (1 samples, 0.02%)</title><rect x="74.8" y="1541" width="0.3" height="15.0" fill="rgb(235,51,10)" rx="2" ry="2" />
<text  x="77.84" y="1551.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::net::inet_address&gt;::operator (1 samples, 0.02%)</title><rect x="1143.0" y="1573" width="0.2" height="15.0" fill="rgb(250,219,27)" rx="2" ry="2" />
<text  x="1146.02" y="1583.5" ></text>
</g>
<g >
<title>row::external_memory_usage (1 samples, 0.02%)</title><rect x="79.7" y="1461" width="0.2" height="15.0" fill="rgb(218,64,2)" rx="2" ry="2" />
<text  x="82.70" y="1471.5" ></text>
</g>
<g >
<title>row_cache::do_update (1 samples, 0.02%)</title><rect x="11.5" y="1717" width="0.3" height="15.0" fill="rgb(231,224,41)" rx="2" ry="2" />
<text  x="14.54" y="1727.5" ></text>
</g>
<g >
<title>bplus::tree&lt;long, intrusive_array&lt;memtable_entry&gt;, dht::raw_token_less_comparator, 16ul,  (1 samples, 0.02%)</title><rect x="1114.1" y="1333" width="0.2" height="15.0" fill="rgb(206,19,3)" rx="2" ry="2" />
<text  x="1117.13" y="1343.5" ></text>
</g>
<g >
<title>std::__find_if&lt;gms::inet_address*, __gnu_cxx::__ops::_Iter_pred&lt;std::unary_negate&lt;std::binder1st&lt;std::_Mem_fn&lt;bool  (1 samples, 0.02%)</title><rect x="1067.8" y="1445" width="0.2" height="15.0" fill="rgb(237,151,47)" rx="2" ry="2" />
<text  x="1070.81" y="1455.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::impl&gt;::_S_destroy&lt;seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::impl, mutation_fragment&gt; (1 samples, 0.02%)</title><rect x="324.1" y="1461" width="0.2" height="15.0" fill="rgb(208,129,0)" rx="2" ry="2" />
<text  x="327.08" y="1471.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_Optional_payload_base (1 samples, 0.02%)</title><rect x="1022.8" y="1413" width="0.2" height="15.0" fill="rgb(217,122,20)" rx="2" ry="2" />
<text  x="1025.81" y="1423.5" ></text>
</g>
<g >
<title>seastar::reactor::del_timer (1 samples, 0.02%)</title><rect x="708.1" y="1573" width="0.2" height="15.0" fill="rgb(244,227,51)" rx="2" ry="2" />
<text  x="711.07" y="1583.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="58.1" y="1349" width="0.2" height="15.0" fill="rgb(249,18,4)" rx="2" ry="2" />
<text  x="61.08" y="1359.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (1 samples, 0.02%)</title><rect x="116.3" y="1573" width="0.2" height="15.0" fill="rgb(211,187,46)" rx="2" ry="2" />
<text  x="119.31" y="1583.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="325.6" y="1445" width="0.2" height="15.0" fill="rgb(224,141,42)" rx="2" ry="2" />
<text  x="328.62" y="1455.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.02%)</title><rect x="45.5" y="1269" width="0.2" height="15.0" fill="rgb(240,144,46)" rx="2" ry="2" />
<text  x="48.51" y="1279.5" ></text>
</g>
<g >
<title>cql3::statements::raw::select_statement::prepare (1 samples, 0.02%)</title><rect x="10.4" y="213" width="0.3" height="15.0" fill="rgb(238,198,24)" rx="2" ry="2" />
<text  x="13.44" y="223.5" ></text>
</g>
<g >
<title>sstables::sstable::write_simple&lt; (1 samples, 0.02%)</title><rect x="17.5" y="1573" width="0.2" height="15.0" fill="rgb(228,25,36)" rx="2" ry="2" />
<text  x="20.50" y="1583.5" ></text>
</g>
<g >
<title>schema::get_partitioner (1 samples, 0.02%)</title><rect x="926.4" y="1557" width="0.3" height="15.0" fill="rgb(205,145,20)" rx="2" ry="2" />
<text  x="929.43" y="1567.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;mutation_reader_merger::reader_and_last_fragment_kind*, mutation_reader_merger::prepare_next (74 samples, 1.38%)</title><rect x="180.3" y="1445" width="16.3" height="15.0" fill="rgb(215,67,51)" rx="2" ry="2" />
<text  x="183.27" y="1455.5" ></text>
</g>
<g >
<title>perf_simple_que (5,350 samples, 100.00%)</title><rect x="10.0" y="1797" width="1180.0" height="15.0" fill="rgb(231,127,33)" rx="2" ry="2" />
<text  x="13.00" y="1807.5" >perf_simple_que</text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="90.5" y="1589" width="0.2" height="15.0" fill="rgb(239,229,33)" rx="2" ry="2" />
<text  x="93.50" y="1599.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::push_mutation_fragment&lt;mutation_fragment&gt; (1 samples, 0.02%)</title><rect x="198.8" y="1413" width="0.2" height="15.0" fill="rgb(227,130,14)" rx="2" ry="2" />
<text  x="201.80" y="1423.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;void&gt;::set_urgent_state (1 samples, 0.02%)</title><rect x="105.9" y="1637" width="0.3" height="15.0" fill="rgb(225,143,12)" rx="2" ry="2" />
<text  x="108.94" y="1647.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_allocate_node (1 samples, 0.02%)</title><rect x="24.3" y="1397" width="0.3" height="15.0" fill="rgb(221,67,40)" rx="2" ry="2" />
<text  x="27.34" y="1407.5" ></text>
</g>
<g >
<title>partition_key_view::legacy_tri_compare (32 samples, 0.60%)</title><rect x="491.7" y="1397" width="7.1" height="15.0" fill="rgb(220,92,13)" rx="2" ry="2" />
<text  x="494.70" y="1407.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::fillBuffer (59 samples, 1.10%)</title><rect x="23.2" y="1477" width="13.0" height="15.0" fill="rgb(219,154,44)" rx="2" ry="2" />
<text  x="26.23" y="1487.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="97.3" y="1637" width="0.3" height="15.0" fill="rgb(240,66,7)" rx="2" ry="2" />
<text  x="100.34" y="1647.5" ></text>
</g>
<g >
<title>reader_permit::consume (2 samples, 0.04%)</title><rect x="323.4" y="1429" width="0.5" height="15.0" fill="rgb(217,131,42)" rx="2" ry="2" />
<text  x="326.42" y="1439.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_internal&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt; &gt; (39 samples, 0.73%)</title><rect x="1119.0" y="1477" width="8.6" height="15.0" fill="rgb(206,7,12)" rx="2" ry="2" />
<text  x="1121.98" y="1487.5" ></text>
</g>
<g >
<title>cql3::statements::raw::update_statement::prepare_internal (31 samples, 0.58%)</title><rect x="66.7" y="1589" width="6.8" height="15.0" fill="rgb(249,70,3)" rx="2" ry="2" />
<text  x="69.68" y="1599.5" ></text>
</g>
<g >
<title>ser::writer_of_column&lt;bytes_ostream&gt;::writer_of_column (2 samples, 0.04%)</title><rect x="1124.7" y="1253" width="0.5" height="15.0" fill="rgb(254,214,20)" rx="2" ry="2" />
<text  x="1127.71" y="1263.5" ></text>
</g>
<g >
<title>__memset_avx2_erms (1 samples, 0.02%)</title><rect x="690.7" y="1525" width="0.2" height="15.0" fill="rgb(231,119,30)" rx="2" ry="2" />
<text  x="693.65" y="1535.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.02%)</title><rect x="58.1" y="1269" width="0.2" height="15.0" fill="rgb(210,1,23)" rx="2" ry="2" />
<text  x="61.08" y="1279.5" ></text>
</g>
<g >
<title>std::optional&lt;query::querier&lt; (6 samples, 0.11%)</title><rect x="628.7" y="1589" width="1.3" height="15.0" fill="rgb(248,155,3)" rx="2" ry="2" />
<text  x="631.67" y="1599.5" ></text>
</g>
<g >
<title>ser::idl::serializers::internal::vector_serializer&lt;std::vector&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, std::allocator&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt; &gt;::read&lt;seastar::simple_memory_input_stream&gt; (1 samples, 0.02%)</title><rect x="102.4" y="1413" width="0.2" height="15.0" fill="rgb(208,115,8)" rx="2" ry="2" />
<text  x="105.41" y="1423.5" ></text>
</g>
<g >
<title>nonwrapping_interval&lt;dht::ring_position&gt;::make_singular (11 samples, 0.21%)</title><rect x="916.3" y="1541" width="2.4" height="15.0" fill="rgb(241,126,30)" rx="2" ry="2" />
<text  x="919.28" y="1551.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::find (2 samples, 0.04%)</title><rect x="940.3" y="1493" width="0.5" height="15.0" fill="rgb(251,133,44)" rx="2" ry="2" />
<text  x="943.33" y="1503.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (7 samples, 0.13%)</title><rect x="1089.2" y="1557" width="1.5" height="15.0" fill="rgb(218,211,12)" rx="2" ry="2" />
<text  x="1092.20" y="1567.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;void&gt;  (1 samples, 0.02%)</title><rect x="17.1" y="1557" width="0.2" height="15.0" fill="rgb(227,185,41)" rx="2" ry="2" />
<text  x="20.06" y="1567.5" ></text>
</g>
<g >
<title>__start_context (284 samples, 5.31%)</title><rect x="15.5" y="1765" width="62.7" height="15.0" fill="rgb(241,59,46)" rx="2" ry="2" />
<text  x="18.51" y="1775.5" >__star..</text>
</g>
<g >
<title>seastar::parallel_for_each&lt;service::storage_proxy::unique_response_handler*, service::storage_proxy::mutate_begin (10 samples, 0.19%)</title><rect x="1119.0" y="1429" width="2.2" height="15.0" fill="rgb(207,79,4)" rx="2" ry="2" />
<text  x="1121.98" y="1439.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_get_allocator (1 samples, 0.02%)</title><rect x="23.7" y="1349" width="0.2" height="15.0" fill="rgb(230,39,23)" rx="2" ry="2" />
<text  x="26.67" y="1359.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (10 samples, 0.19%)</title><rect x="376.4" y="1317" width="2.2" height="15.0" fill="rgb(235,76,41)" rx="2" ry="2" />
<text  x="379.35" y="1327.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::_M_deallocate (1 samples, 0.02%)</title><rect x="48.4" y="1413" width="0.2" height="15.0" fill="rgb(249,78,24)" rx="2" ry="2" />
<text  x="51.38" y="1423.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.02%)</title><rect x="24.6" y="1317" width="0.2" height="15.0" fill="rgb(215,81,41)" rx="2" ry="2" />
<text  x="27.56" y="1327.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;cql3::raw_value const*, cql3::raw_value*&gt; (2 samples, 0.04%)</title><rect x="844.2" y="1589" width="0.4" height="15.0" fill="rgb(211,15,18)" rx="2" ry="2" />
<text  x="847.16" y="1599.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (1 samples, 0.02%)</title><rect x="646.5" y="1621" width="0.3" height="15.0" fill="rgb(218,68,13)" rx="2" ry="2" />
<text  x="649.54" y="1631.5" ></text>
</g>
<g >
<title>ser::deletable_row_view::key (1 samples, 0.02%)</title><rect x="1115.2" y="1381" width="0.3" height="15.0" fill="rgb(248,74,52)" rx="2" ry="2" />
<text  x="1118.23" y="1391.5" ></text>
</g>
<g >
<title>ser::serializer&lt;schema_mutations&gt;::read&lt;seastar::simple_memory_input_stream&gt; (1 samples, 0.02%)</title><rect x="102.4" y="1541" width="0.2" height="15.0" fill="rgb(250,64,33)" rx="2" ry="2" />
<text  x="105.41" y="1551.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::~disable_abort_on_alloc_failure_temporarily (1 samples, 0.02%)</title><rect x="534.9" y="1477" width="0.3" height="15.0" fill="rgb(214,19,44)" rx="2" ry="2" />
<text  x="537.93" y="1487.5" ></text>
</g>
<g >
<title>mutation_fragment::destroy_data (1 samples, 0.02%)</title><rect x="100.7" y="1317" width="0.2" height="15.0" fill="rgb(222,121,17)" rx="2" ry="2" />
<text  x="103.65" y="1327.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.02%)</title><rect x="11.1" y="1749" width="0.2" height="15.0" fill="rgb(211,165,19)" rx="2" ry="2" />
<text  x="14.10" y="1759.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;mutation_reader_merger::operator (33 samples, 0.62%)</title><rect x="297.4" y="1461" width="7.3" height="15.0" fill="rgb(228,13,22)" rx="2" ry="2" />
<text  x="300.39" y="1471.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (2 samples, 0.04%)</title><rect x="38.2" y="1413" width="0.5" height="15.0" fill="rgb(251,36,13)" rx="2" ry="2" />
<text  x="41.23" y="1423.5" ></text>
</g>
<g >
<title>position_in_partition_view::for_range_end (1 samples, 0.02%)</title><rect x="280.0" y="1397" width="0.2" height="15.0" fill="rgb(241,27,39)" rx="2" ry="2" />
<text  x="282.97" y="1407.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate (77 samples, 1.44%)</title><rect x="877.5" y="1493" width="16.9" height="15.0" fill="rgb(209,224,14)" rx="2" ry="2" />
<text  x="880.47" y="1503.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_M_reset (2 samples, 0.04%)</title><rect x="1084.8" y="1509" width="0.4" height="15.0" fill="rgb(227,220,54)" rx="2" ry="2" />
<text  x="1087.79" y="1519.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (5 samples, 0.09%)</title><rect x="759.7" y="1477" width="1.1" height="15.0" fill="rgb(219,94,45)" rx="2" ry="2" />
<text  x="762.69" y="1487.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (4 samples, 0.07%)</title><rect x="40.7" y="1445" width="0.8" height="15.0" fill="rgb(208,180,4)" rx="2" ry="2" />
<text  x="43.66" y="1455.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::pop_mutation_fragment (5 samples, 0.09%)</title><rect x="184.5" y="1397" width="1.1" height="15.0" fill="rgb(221,72,41)" rx="2" ry="2" />
<text  x="187.46" y="1407.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (1 samples, 0.02%)</title><rect x="100.9" y="1221" width="0.2" height="15.0" fill="rgb(243,162,28)" rx="2" ry="2" />
<text  x="103.87" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::~_Variant_storage (2 samples, 0.04%)</title><rect x="355.8" y="1333" width="0.5" height="15.0" fill="rgb(213,124,8)" rx="2" ry="2" />
<text  x="358.84" y="1343.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="91.2" y="1573" width="0.2" height="15.0" fill="rgb(218,197,15)" rx="2" ry="2" />
<text  x="94.17" y="1583.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (2 samples, 0.04%)</title><rect x="46.4" y="1333" width="0.4" height="15.0" fill="rgb(219,29,52)" rx="2" ry="2" />
<text  x="49.39" y="1343.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::drop_unneeded_tombstones (1 samples, 0.02%)</title><rect x="400.2" y="1349" width="0.2" height="15.0" fill="rgb(210,57,18)" rx="2" ry="2" />
<text  x="403.17" y="1359.5" ></text>
</g>
<g >
<title>operator new (7 samples, 0.13%)</title><rect x="752.0" y="1557" width="1.5" height="15.0" fill="rgb(230,95,3)" rx="2" ry="2" />
<text  x="754.97" y="1567.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.02%)</title><rect x="41.1" y="1317" width="0.2" height="15.0" fill="rgb(253,184,43)" rx="2" ry="2" />
<text  x="44.10" y="1327.5" ></text>
</g>
<g >
<title>sstables::column_translation::state::state (1 samples, 0.02%)</title><rect x="1130.0" y="981" width="0.2" height="15.0" fill="rgb(245,138,7)" rx="2" ry="2" />
<text  x="1133.01" y="991.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;enum_set&lt;super_enum&lt;auth::permission,  (1 samples, 0.02%)</title><rect x="800.5" y="1429" width="0.2" height="15.0" fill="rgb(232,228,8)" rx="2" ry="2" />
<text  x="803.49" y="1439.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_range_tombstone (13 samples, 0.24%)</title><rect x="271.4" y="1365" width="2.8" height="15.0" fill="rgb(208,83,33)" rx="2" ry="2" />
<text  x="274.36" y="1375.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (3 samples, 0.06%)</title><rect x="1148.8" y="1557" width="0.6" height="15.0" fill="rgb(254,190,15)" rx="2" ry="2" />
<text  x="1151.76" y="1567.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.09%)</title><rect x="1087.9" y="1509" width="1.1" height="15.0" fill="rgb(212,41,8)" rx="2" ry="2" />
<text  x="1090.88" y="1519.5" ></text>
</g>
<g >
<title>std::__equal&lt;false&gt;::equal&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;*, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const*&gt; (9 samples, 0.17%)</title><rect x="790.6" y="1301" width="1.9" height="15.0" fill="rgb(210,164,52)" rx="2" ry="2" />
<text  x="793.56" y="1311.5" ></text>
</g>
<g >
<title>TLS init function for cql3::query_options::specific_options::DEFAULT (1 samples, 0.02%)</title><rect x="718.2" y="1621" width="0.2" height="15.0" fill="rgb(208,4,53)" rx="2" ry="2" />
<text  x="721.22" y="1631.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::CommonToken (3 samples, 0.06%)</title><rect x="20.8" y="1477" width="0.7" height="15.0" fill="rgb(239,209,49)" rx="2" ry="2" />
<text  x="23.81" y="1487.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="549" width="0.3" height="15.0" fill="rgb(244,62,41)" rx="2" ry="2" />
<text  x="13.44" y="559.5" ></text>
</g>
<g >
<title>sstables::file_writer::close (1 samples, 0.02%)</title><rect x="10.7" y="1573" width="0.2" height="15.0" fill="rgb(214,149,15)" rx="2" ry="2" />
<text  x="13.66" y="1583.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="59.4" y="1365" width="0.2" height="15.0" fill="rgb(228,175,11)" rx="2" ry="2" />
<text  x="62.41" y="1375.5" ></text>
</g>
<g >
<title>sstables::sstable::do_write_simple (1 samples, 0.02%)</title><rect x="79.3" y="1573" width="0.2" height="15.0" fill="rgb(240,169,5)" rx="2" ry="2" />
<text  x="82.26" y="1583.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="1125" width="0.3" height="15.0" fill="rgb(206,210,51)" rx="2" ry="2" />
<text  x="13.44" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::~_Variant_storage (1 samples, 0.02%)</title><rect x="649.2" y="1541" width="0.2" height="15.0" fill="rgb(229,220,4)" rx="2" ry="2" />
<text  x="652.19" y="1551.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::~abstract_read_executor (9 samples, 0.17%)</title><rect x="1161.8" y="1589" width="2.0" height="15.0" fill="rgb(235,56,37)" rx="2" ry="2" />
<text  x="1164.77" y="1599.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::drop_expired_front (4 samples, 0.07%)</title><rect x="120.3" y="1557" width="0.9" height="15.0" fill="rgb(228,199,14)" rx="2" ry="2" />
<text  x="123.28" y="1567.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (2 samples, 0.04%)</title><rect x="808.4" y="1509" width="0.5" height="15.0" fill="rgb(246,203,46)" rx="2" ry="2" />
<text  x="811.43" y="1519.5" ></text>
</g>
<g >
<title>std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt;::emplace_back&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; (2 samples, 0.04%)</title><rect x="268.1" y="1301" width="0.4" height="15.0" fill="rgb(224,26,43)" rx="2" ry="2" />
<text  x="271.06" y="1311.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.02%)</title><rect x="58.3" y="1317" width="0.2" height="15.0" fill="rgb(214,190,53)" rx="2" ry="2" />
<text  x="61.30" y="1327.5" ></text>
</g>
<g >
<title>distributed_loader::init_non_system_keyspaces (1 samples, 0.02%)</title><rect x="78.8" y="1637" width="0.2" height="15.0" fill="rgb(229,71,47)" rx="2" ry="2" />
<text  x="81.81" y="1647.5" ></text>
</g>
<g >
<title>seastar::smp::submit_to&lt;seastar::sharded&lt;database&gt;::invoke_on_all (1 samples, 0.02%)</title><rect x="78.8" y="1461" width="0.2" height="15.0" fill="rgb(235,85,28)" rx="2" ry="2" />
<text  x="81.81" y="1471.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (3 samples, 0.06%)</title><rect x="799.8" y="1381" width="0.7" height="15.0" fill="rgb(254,183,43)" rx="2" ry="2" />
<text  x="802.83" y="1391.5" ></text>
</g>
<g >
<title>std::__optional_hash_call_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, true&gt;::operator (2 samples, 0.04%)</title><rect x="744.2" y="1461" width="0.5" height="15.0" fill="rgb(209,26,12)" rx="2" ry="2" />
<text  x="747.25" y="1471.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_internal&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt; &gt; (11 samples, 0.21%)</title><rect x="1119.0" y="1445" width="2.4" height="15.0" fill="rgb(211,154,6)" rx="2" ry="2" />
<text  x="1121.98" y="1455.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::upper_bound&lt;mutation_partition, schema const&amp;, nonwrapping_interval&lt;clustering_key_prefix&gt; const&amp;&gt; (1 samples, 0.02%)</title><rect x="266.7" y="1301" width="0.3" height="15.0" fill="rgb(236,166,31)" rx="2" ry="2" />
<text  x="269.73" y="1311.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::BaseRecognizer (1 samples, 0.02%)</title><rect x="19.5" y="1573" width="0.2" height="15.0" fill="rgb(227,35,21)" rx="2" ry="2" />
<text  x="22.48" y="1583.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (2 samples, 0.04%)</title><rect x="696.6" y="1605" width="0.4" height="15.0" fill="rgb(212,81,14)" rx="2" ry="2" />
<text  x="699.61" y="1615.5" ></text>
</g>
<g >
<title>basic_atomic_cell_view&lt; (4 samples, 0.07%)</title><rect x="402.8" y="1333" width="0.9" height="15.0" fill="rgb(207,68,3)" rx="2" ry="2" />
<text  x="405.82" y="1343.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.02%)</title><rect x="58.3" y="1429" width="0.2" height="15.0" fill="rgb(247,110,53)" rx="2" ry="2" />
<text  x="61.30" y="1439.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value, std::allocator&lt;cql3::raw_value&gt; &gt;::vector (8 samples, 0.15%)</title><rect x="842.8" y="1621" width="1.8" height="15.0" fill="rgb(232,112,29)" rx="2" ry="2" />
<text  x="845.84" y="1631.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="604.2" y="1525" width="0.2" height="15.0" fill="rgb(219,91,1)" rx="2" ry="2" />
<text  x="607.19" y="1535.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::clear (1 samples, 0.02%)</title><rect x="1162.9" y="1573" width="0.2" height="15.0" fill="rgb(253,69,48)" rx="2" ry="2" />
<text  x="1165.87" y="1583.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::clear (1 samples, 0.02%)</title><rect x="861.4" y="1621" width="0.2" height="15.0" fill="rgb(214,86,50)" rx="2" ry="2" />
<text  x="864.36" y="1631.5" ></text>
</g>
<g >
<title>boost::intrusive::bstree_impl&lt;boost::intrusive::mhtraits&lt;range_tombstone_entry, boost::intrusive::set_member_hook&lt;boost::intrusive::link_mode&lt; (1 samples, 0.02%)</title><rect x="1114.6" y="1365" width="0.2" height="15.0" fill="rgb(247,100,35)" rx="2" ry="2" />
<text  x="1117.57" y="1375.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::schedule&lt;seastar::internal::promise_base_with_type&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;, merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (1 samples, 0.02%)</title><rect x="314.4" y="1493" width="0.2" height="15.0" fill="rgb(238,197,48)" rx="2" ry="2" />
<text  x="317.37" y="1503.5" ></text>
</g>
<g >
<title>seastar::internal::sharded_parallel_for_each (1 samples, 0.02%)</title><rect x="17.1" y="1589" width="0.2" height="15.0" fill="rgb(213,129,32)" rx="2" ry="2" />
<text  x="20.06" y="1599.5" ></text>
</g>
<g >
<title>sstables::compacting_sstable_writer::consume_end_of_stream (1 samples, 0.02%)</title><rect x="17.5" y="1653" width="0.2" height="15.0" fill="rgb(225,8,16)" rx="2" ry="2" />
<text  x="20.50" y="1663.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (5 samples, 0.09%)</title><rect x="41.5" y="1365" width="1.1" height="15.0" fill="rgb(221,173,15)" rx="2" ry="2" />
<text  x="44.54" y="1375.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (1 samples, 0.02%)</title><rect x="56.1" y="1413" width="0.2" height="15.0" fill="rgb(228,171,26)" rx="2" ry="2" />
<text  x="59.10" y="1423.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.04%)</title><rect x="443.8" y="1493" width="0.5" height="15.0" fill="rgb(221,164,46)" rx="2" ry="2" />
<text  x="446.84" y="1503.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (2 samples, 0.04%)</title><rect x="665.3" y="1637" width="0.4" height="15.0" fill="rgb(247,206,48)" rx="2" ry="2" />
<text  x="668.29" y="1647.5" ></text>
</g>
<g >
<title>write_cell&lt;ser::qr_clustered_row__cells__cells&lt;bytes_ostream&gt; &gt; (2 samples, 0.04%)</title><rect x="396.2" y="1349" width="0.4" height="15.0" fill="rgb(220,37,22)" rx="2" ry="2" />
<text  x="399.20" y="1359.5" ></text>
</g>
<g >
<title>bytes_view_hasher::update (1 samples, 0.02%)</title><rect x="72.2" y="1525" width="0.2" height="15.0" fill="rgb(235,149,49)" rx="2" ry="2" />
<text  x="75.20" y="1535.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="52.6" y="1381" width="0.2" height="15.0" fill="rgb(206,203,47)" rx="2" ry="2" />
<text  x="55.57" y="1391.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::get_value (1 samples, 0.02%)</title><rect x="647.9" y="1637" width="0.2" height="15.0" fill="rgb(242,86,54)" rx="2" ry="2" />
<text  x="650.86" y="1647.5" ></text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;void&gt;, service::storage_proxy*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt;, db::consistency_level, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, tracing::trace_state_ptr, service_permit, bool, seastar::lw_shared_ptr&lt;cdc::operation_result_tracker&gt; &gt;::operator (1 samples, 0.02%)</title><rect x="849.5" y="1525" width="0.2" height="15.0" fill="rgb(228,44,5)" rx="2" ry="2" />
<text  x="852.45" y="1535.5" ></text>
</g>
<g >
<title>sstables::compaction::run&lt;noop_compacted_fragments_consumer&gt; (1 samples, 0.02%)</title><rect x="1130.0" y="1493" width="0.2" height="15.0" fill="rgb(223,99,15)" rx="2" ry="2" />
<text  x="1133.01" y="1503.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.02%)</title><rect x="36.2" y="1397" width="0.3" height="15.0" fill="rgb(218,46,44)" rx="2" ry="2" />
<text  x="39.25" y="1407.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.02%)</title><rect x="58.3" y="1333" width="0.2" height="15.0" fill="rgb(228,37,3)" rx="2" ry="2" />
<text  x="61.30" y="1343.5" ></text>
</g>
<g >
<title>std::apply&lt;service::client_state::has_column_family_access (177 samples, 3.31%)</title><rect x="768.5" y="1541" width="39.0" height="15.0" fill="rgb(240,77,35)" rx="2" ry="2" />
<text  x="771.51" y="1551.5" >std..</text>
</g>
<g >
<title>reader_permit::consume (1 samples, 0.02%)</title><rect x="215.1" y="1349" width="0.2" height="15.0" fill="rgb(225,206,0)" rx="2" ry="2" />
<text  x="218.12" y="1359.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::push_mutation_fragment&lt;mutation_fragment&gt; (1 samples, 0.02%)</title><rect x="314.2" y="1493" width="0.2" height="15.0" fill="rgb(238,167,17)" rx="2" ry="2" />
<text  x="317.15" y="1503.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="335.8" y="1429" width="0.2" height="15.0" fill="rgb(248,75,34)" rx="2" ry="2" />
<text  x="338.77" y="1439.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (1 samples, 0.02%)</title><rect x="622.9" y="1557" width="0.3" height="15.0" fill="rgb(227,218,36)" rx="2" ry="2" />
<text  x="625.94" y="1567.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (3 samples, 0.06%)</title><rect x="45.1" y="1429" width="0.6" height="15.0" fill="rgb(223,191,41)" rx="2" ry="2" />
<text  x="48.07" y="1439.5" ></text>
</g>
<g >
<title>frozen_schema::unfreeze (3 samples, 0.06%)</title><rect x="102.0" y="1573" width="0.6" height="15.0" fill="rgb(239,212,39)" rx="2" ry="2" />
<text  x="104.97" y="1583.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (2 samples, 0.04%)</title><rect x="38.7" y="1429" width="0.4" height="15.0" fill="rgb(216,120,1)" rx="2" ry="2" />
<text  x="41.67" y="1439.5" ></text>
</g>
<g >
<title>std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt;::_M_realloc_insert&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; (8 samples, 0.15%)</title><rect x="291.0" y="1349" width="1.8" height="15.0" fill="rgb(236,37,50)" rx="2" ry="2" />
<text  x="293.99" y="1359.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="757" width="0.3" height="15.0" fill="rgb(241,128,4)" rx="2" ry="2" />
<text  x="13.44" y="767.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::alloc (1 samples, 0.02%)</title><rect x="244.9" y="1237" width="0.2" height="15.0" fill="rgb(213,108,22)" rx="2" ry="2" />
<text  x="247.90" y="1247.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (2 samples, 0.04%)</title><rect x="38.2" y="1445" width="0.5" height="15.0" fill="rgb(239,228,3)" rx="2" ry="2" />
<text  x="41.23" y="1455.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (2 samples, 0.04%)</title><rect x="40.9" y="1381" width="0.4" height="15.0" fill="rgb(217,96,49)" rx="2" ry="2" />
<text  x="43.88" y="1391.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::inet_address (1 samples, 0.02%)</title><rect x="963.7" y="1509" width="0.2" height="15.0" fill="rgb(233,224,53)" rx="2" ry="2" />
<text  x="966.70" y="1519.5" ></text>
</g>
<g >
<title>__dynamic_cast (3 samples, 0.06%)</title><rect x="12.9" y="1733" width="0.6" height="15.0" fill="rgb(243,133,27)" rx="2" ry="2" />
<text  x="15.87" y="1743.5" ></text>
</g>
<g >
<title>mutation_reader_merger::maybe_add_readers (1 samples, 0.02%)</title><rect x="179.2" y="1445" width="0.2" height="15.0" fill="rgb(220,185,16)" rx="2" ry="2" />
<text  x="182.17" y="1455.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (44 samples, 0.82%)</title><rect x="1118.3" y="1589" width="9.7" height="15.0" fill="rgb(221,118,44)" rx="2" ry="2" />
<text  x="1121.32" y="1599.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="440.3" y="1397" width="0.2" height="15.0" fill="rgb(224,220,40)" rx="2" ry="2" />
<text  x="443.31" y="1407.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;  (1 samples, 0.02%)</title><rect x="639.0" y="1605" width="0.3" height="15.0" fill="rgb(216,196,3)" rx="2" ry="2" />
<text  x="642.04" y="1615.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::node_size (1 samples, 0.02%)</title><rect x="254.2" y="1301" width="0.2" height="15.0" fill="rgb(215,14,5)" rx="2" ry="2" />
<text  x="257.16" y="1311.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::__uniq_ptr_impl (1 samples, 0.02%)</title><rect x="53.5" y="1381" width="0.2" height="15.0" fill="rgb(227,223,45)" rx="2" ry="2" />
<text  x="56.45" y="1391.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.02%)</title><rect x="37.3" y="1413" width="0.3" height="15.0" fill="rgb(247,68,30)" rx="2" ry="2" />
<text  x="40.35" y="1423.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::storage_proxy&gt;::~shared_ptr (2 samples, 0.04%)</title><rect x="964.6" y="1509" width="0.4" height="15.0" fill="rgb(228,124,46)" rx="2" ry="2" />
<text  x="967.59" y="1519.5" ></text>
</g>
<g >
<title>ser::writer_of_query_result&lt;bytes_ostream&gt;::writer_of_query_result (5 samples, 0.09%)</title><rect x="611.0" y="1557" width="1.1" height="15.0" fill="rgb(218,106,18)" rx="2" ry="2" />
<text  x="614.03" y="1567.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume_in_thread&lt;sstables::sstable_writer&gt; (13 samples, 0.24%)</title><rect x="79.5" y="1701" width="2.8" height="15.0" fill="rgb(217,69,5)" rx="2" ry="2" />
<text  x="82.48" y="1711.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::find (2 samples, 0.04%)</title><rect x="656.5" y="1557" width="0.4" height="15.0" fill="rgb(252,89,50)" rx="2" ry="2" />
<text  x="659.46" y="1567.5" ></text>
</g>
<g >
<title>std::function&lt;bool  (1 samples, 0.02%)</title><rect x="563.4" y="1557" width="0.2" height="15.0" fill="rgb(240,6,32)" rx="2" ry="2" />
<text  x="566.39" y="1567.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; const*, std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt; &gt;, nonwrapping_interval&lt;clustering_key_prefix&gt;*&gt; (4 samples, 0.07%)</title><rect x="156.5" y="1557" width="0.8" height="15.0" fill="rgb(250,191,11)" rx="2" ry="2" />
<text  x="159.45" y="1567.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="79.0" y="1653" width="0.3" height="15.0" fill="rgb(244,100,28)" rx="2" ry="2" />
<text  x="82.04" y="1663.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::deallocate (1 samples, 0.02%)</title><rect x="48.4" y="1397" width="0.2" height="15.0" fill="rgb(211,123,6)" rx="2" ry="2" />
<text  x="51.38" y="1407.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::emplace_back&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; (8 samples, 0.15%)</title><rect x="48.2" y="1445" width="1.7" height="15.0" fill="rgb(229,41,2)" rx="2" ry="2" />
<text  x="51.16" y="1455.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::attributes::raw&gt; (2 samples, 0.04%)</title><rect x="60.1" y="1509" width="0.4" height="15.0" fill="rgb(232,159,42)" rx="2" ry="2" />
<text  x="63.07" y="1519.5" ></text>
</g>
<g >
<title>utils::tuple_hash::hash_impl&lt;1ul, auth::resource_kind, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (4 samples, 0.07%)</title><rect x="795.9" y="1253" width="0.8" height="15.0" fill="rgb(232,204,25)" rx="2" ry="2" />
<text  x="798.86" y="1263.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::grant_role_statement, std::default_delete&lt;cql3::statements::grant_role_statement&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="62.5" y="1525" width="0.2" height="15.0" fill="rgb(234,152,11)" rx="2" ry="2" />
<text  x="65.49" y="1535.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (18 samples, 0.34%)</title><rect x="433.3" y="1413" width="3.9" height="15.0" fill="rgb(212,29,41)" rx="2" ry="2" />
<text  x="436.26" y="1423.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::~statement_restrictions (3 samples, 0.06%)</title><rect x="649.2" y="1605" width="0.6" height="15.0" fill="rgb(248,65,38)" rx="2" ry="2" />
<text  x="652.19" y="1615.5" ></text>
</g>
<g >
<title>mutation_fragment::destroy_data (1 samples, 0.02%)</title><rect x="82.1" y="1637" width="0.2" height="15.0" fill="rgb(205,85,12)" rx="2" ry="2" />
<text  x="85.12" y="1647.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reserve&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (1 samples, 0.02%)</title><rect x="100.4" y="1061" width="0.3" height="15.0" fill="rgb(247,19,12)" rx="2" ry="2" />
<text  x="103.43" y="1071.5" ></text>
</g>
<g >
<title>db::commitlog::add_entry (3 samples, 0.06%)</title><rect x="1117.2" y="1461" width="0.7" height="15.0" fill="rgb(221,215,43)" rx="2" ry="2" />
<text  x="1120.21" y="1471.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::get_promise (1 samples, 0.02%)</title><rect x="949.6" y="1525" width="0.2" height="15.0" fill="rgb(250,87,8)" rx="2" ry="2" />
<text  x="952.59" y="1535.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;bool&gt;::move_it (1 samples, 0.02%)</title><rect x="770.7" y="1493" width="0.2" height="15.0" fill="rgb(241,146,8)" rx="2" ry="2" />
<text  x="773.71" y="1503.5" ></text>
</g>
<g >
<title>utils::sequenced_set&lt;gms::inet_address&gt;::insert (1 samples, 0.02%)</title><rect x="102.6" y="1621" width="0.3" height="15.0" fill="rgb(239,219,17)" rx="2" ry="2" />
<text  x="105.64" y="1631.5" ></text>
</g>
<g >
<title>frozen_mutation::column_family_id (1 samples, 0.02%)</title><rect x="1120.5" y="1317" width="0.2" height="15.0" fill="rgb(222,135,22)" rx="2" ry="2" />
<text  x="1123.52" y="1327.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;void&gt;  (1 samples, 0.02%)</title><rect x="78.8" y="1429" width="0.2" height="15.0" fill="rgb(237,44,47)" rx="2" ry="2" />
<text  x="81.81" y="1439.5" ></text>
</g>
<g >
<title>seastar::timer_set&lt;seastar::timer&lt;std::chrono::_V2::steady_clock&gt;, &amp;seastar::timer&lt;std::chrono::_V2::steady_clock&gt;::_link&gt;::expire (1 samples, 0.02%)</title><rect x="1167.3" y="1589" width="0.2" height="15.0" fill="rgb(231,153,43)" rx="2" ry="2" />
<text  x="1170.28" y="1599.5" ></text>
</g>
<g >
<title>cql3::restrictions::restriction::restriction (2 samples, 0.04%)</title><rect x="69.8" y="1493" width="0.4" height="15.0" fill="rgb(233,181,13)" rx="2" ry="2" />
<text  x="72.77" y="1503.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.29] (1 samples, 0.02%)</title><rect x="1189.8" y="1749" width="0.2" height="15.0" fill="rgb(226,142,12)" rx="2" ry="2" />
<text  x="1192.78" y="1759.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::~holder (3 samples, 0.06%)</title><rect x="577.3" y="1445" width="0.6" height="15.0" fill="rgb(227,204,3)" rx="2" ry="2" />
<text  x="580.28" y="1455.5" ></text>
</g>
<g >
<title>schema::get_column_definition (1 samples, 0.02%)</title><rect x="72.2" y="1573" width="0.2" height="15.0" fill="rgb(221,172,43)" rx="2" ry="2" />
<text  x="75.20" y="1583.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.02%)</title><rect x="45.5" y="1285" width="0.2" height="15.0" fill="rgb(254,78,0)" rx="2" ry="2" />
<text  x="48.51" y="1295.5" ></text>
</g>
<g >
<title>seastar::weakly_referencable&lt;cql3::statements::prepared_statement&gt;::weak_from_this (1 samples, 0.02%)</title><rect x="725.9" y="1573" width="0.3" height="15.0" fill="rgb(224,67,23)" rx="2" ry="2" />
<text  x="728.94" y="1583.5" ></text>
</g>
<g >
<title>canonical_mutation::to_mutation (1 samples, 0.02%)</title><rect x="102.4" y="1509" width="0.2" height="15.0" fill="rgb(242,174,33)" rx="2" ry="2" />
<text  x="105.41" y="1519.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_9has_tokenERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES28_S2B_ (1 samples, 0.02%)</title><rect x="653.4" y="1589" width="0.2" height="15.0" fill="rgb(248,97,32)" rx="2" ry="2" />
<text  x="656.38" y="1599.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (4 samples, 0.07%)</title><rect x="585.9" y="1461" width="0.9" height="15.0" fill="rgb(254,42,6)" rx="2" ry="2" />
<text  x="588.88" y="1471.5" ></text>
</g>
<g >
<title>skip_empty_fragments&lt;managed_bytes_basic_view&lt; (3 samples, 0.06%)</title><rect x="494.6" y="1349" width="0.6" height="15.0" fill="rgb(251,129,29)" rx="2" ry="2" />
<text  x="497.57" y="1359.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::sharded_parallel_for_each (1 samples, 0.02%)</title><rect x="78.8" y="1541" width="0.2" height="15.0" fill="rgb(236,212,26)" rx="2" ry="2" />
<text  x="81.81" y="1551.5" ></text>
</g>
<g >
<title>cql3::expr::constant::constant (1 samples, 0.02%)</title><rect x="854.3" y="1413" width="0.2" height="15.0" fill="rgb(254,140,31)" rx="2" ry="2" />
<text  x="857.31" y="1423.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate (2 samples, 0.04%)</title><rect x="880.6" y="1461" width="0.4" height="15.0" fill="rgb(216,151,30)" rx="2" ry="2" />
<text  x="883.55" y="1471.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::get0 (1 samples, 0.02%)</title><rect x="1138.6" y="1637" width="0.2" height="15.0" fill="rgb(245,58,18)" rx="2" ry="2" />
<text  x="1141.61" y="1647.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::got_response (15 samples, 0.28%)</title><rect x="705.6" y="1589" width="3.4" height="15.0" fill="rgb(211,202,6)" rx="2" ry="2" />
<text  x="708.65" y="1599.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::invoke_on_all (1 samples, 0.02%)</title><rect x="17.1" y="1621" width="0.2" height="15.0" fill="rgb(206,95,44)" rx="2" ry="2" />
<text  x="20.06" y="1631.5" ></text>
</g>
<g >
<title>operator delete (5 samples, 0.09%)</title><rect x="89.0" y="1621" width="1.1" height="15.0" fill="rgb(233,102,53)" rx="2" ry="2" />
<text  x="91.96" y="1631.5" ></text>
</g>
<g >
<title>TLS init function for bound_view::_empty_prefix (6 samples, 0.11%)</title><rect x="286.1" y="1333" width="1.4" height="15.0" fill="rgb(217,179,1)" rx="2" ry="2" />
<text  x="289.14" y="1343.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.04%)</title><rect x="899.7" y="1461" width="0.5" height="15.0" fill="rgb(232,22,9)" rx="2" ry="2" />
<text  x="902.74" y="1471.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.02%)</title><rect x="10.7" y="1685" width="0.2" height="15.0" fill="rgb(249,186,29)" rx="2" ry="2" />
<text  x="13.66" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt;::_Move_ctor_base (1 samples, 0.02%)</title><rect x="70.0" y="1445" width="0.2" height="15.0" fill="rgb(244,10,7)" rx="2" ry="2" />
<text  x="72.99" y="1455.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (3 samples, 0.06%)</title><rect x="878.6" y="1429" width="0.6" height="15.0" fill="rgb(221,28,29)" rx="2" ry="2" />
<text  x="881.57" y="1439.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (1 samples, 0.02%)</title><rect x="1016.0" y="1397" width="0.2" height="15.0" fill="rgb(223,16,0)" rx="2" ry="2" />
<text  x="1018.98" y="1407.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::resize (1 samples, 0.02%)</title><rect x="1167.7" y="1669" width="0.2" height="15.0" fill="rgb(226,172,44)" rx="2" ry="2" />
<text  x="1170.72" y="1679.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::get0 (2 samples, 0.04%)</title><rect x="614.8" y="1589" width="0.4" height="15.0" fill="rgb(223,12,53)" rx="2" ry="2" />
<text  x="617.78" y="1599.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;, true&gt;::make&lt;seastar::lw_shared_ptr&lt;schema const&gt;&amp;, bool const&amp;&gt; (1 samples, 0.02%)</title><rect x="70.9" y="1509" width="0.2" height="15.0" fill="rgb(207,156,1)" rx="2" ry="2" />
<text  x="73.87" y="1519.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="1130.2" y="1621" width="0.2" height="15.0" fill="rgb(234,39,19)" rx="2" ry="2" />
<text  x="1133.23" y="1631.5" ></text>
</g>
<g >
<title>evictable_reader::do_fill_buffer (1 samples, 0.02%)</title><rect x="100.4" y="1349" width="0.3" height="15.0" fill="rgb(244,203,42)" rx="2" ry="2" />
<text  x="103.43" y="1359.5" ></text>
</g>
<g >
<title>cql3::restrictions::has_eq_null (3 samples, 0.06%)</title><rect x="849.9" y="1509" width="0.7" height="15.0" fill="rgb(205,88,35)" rx="2" ry="2" />
<text  x="852.90" y="1519.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_internal (1 samples, 0.02%)</title><rect x="10.4" y="245" width="0.3" height="15.0" fill="rgb(216,140,52)" rx="2" ry="2" />
<text  x="13.44" y="255.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (1 samples, 0.02%)</title><rect x="432.8" y="1413" width="0.2" height="15.0" fill="rgb(213,157,12)" rx="2" ry="2" />
<text  x="435.81" y="1423.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (1 samples, 0.02%)</title><rect x="689.3" y="1637" width="0.2" height="15.0" fill="rgb(240,165,29)" rx="2" ry="2" />
<text  x="692.33" y="1647.5" ></text>
</g>
<g >
<title>utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (2 samples, 0.04%)</title><rect x="75.9" y="1429" width="0.5" height="15.0" fill="rgb(215,68,20)" rx="2" ry="2" />
<text  x="78.95" y="1439.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.06%)</title><rect x="838.2" y="1493" width="0.7" height="15.0" fill="rgb(236,208,2)" rx="2" ry="2" />
<text  x="841.21" y="1503.5" ></text>
</g>
<g >
<title>service::client_state::set_keyspace (14 samples, 0.26%)</title><rect x="832.3" y="1573" width="3.0" height="15.0" fill="rgb(207,135,54)" rx="2" ry="2" />
<text  x="835.25" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;5ul, cql3::expr::untyped_constant&gt; (1 samples, 0.02%)</title><rect x="53.7" y="1173" width="0.2" height="15.0" fill="rgb(254,220,38)" rx="2" ry="2" />
<text  x="56.67" y="1183.5" ></text>
</g>
<g >
<title>std::type_info::operator== (1 samples, 0.02%)</title><rect x="1048.4" y="1429" width="0.2" height="15.0" fill="rgb(246,85,45)" rx="2" ry="2" />
<text  x="1051.40" y="1439.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_pausable_in_thread&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_compaction&lt;sstables::compacting_sstable_writer, noop_compacted_fragments_consumer&gt; &gt; &gt; &gt;, flat_mutation_reader::no_filter&gt; (1 samples, 0.02%)</title><rect x="1130.0" y="1285" width="0.2" height="15.0" fill="rgb(248,3,38)" rx="2" ry="2" />
<text  x="1133.01" y="1295.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::followPush (1 samples, 0.02%)</title><rect x="46.8" y="1461" width="0.3" height="15.0" fill="rgb(224,61,30)" rx="2" ry="2" />
<text  x="49.83" y="1471.5" ></text>
</g>
<g >
<title>reader_permit::consume (1 samples, 0.02%)</title><rect x="261.7" y="1285" width="0.2" height="15.0" fill="rgb(207,9,28)" rx="2" ry="2" />
<text  x="264.66" y="1295.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (7 samples, 0.13%)</title><rect x="590.7" y="1509" width="1.6" height="15.0" fill="rgb(230,204,9)" rx="2" ry="2" />
<text  x="593.74" y="1519.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::get_promise (2 samples, 0.04%)</title><rect x="969.0" y="1477" width="0.4" height="15.0" fill="rgb(226,203,14)" rx="2" ry="2" />
<text  x="972.00" y="1487.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::digest_read_resolver&gt;::~shared_ptr (2 samples, 0.04%)</title><rect x="969.4" y="1493" width="0.5" height="15.0" fill="rgb(238,77,25)" rx="2" ry="2" />
<text  x="972.44" y="1503.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (3 samples, 0.06%)</title><rect x="36.9" y="1493" width="0.7" height="15.0" fill="rgb(221,4,37)" rx="2" ry="2" />
<text  x="39.91" y="1503.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (2 samples, 0.04%)</title><rect x="51.5" y="1269" width="0.4" height="15.0" fill="rgb(234,84,9)" rx="2" ry="2" />
<text  x="54.47" y="1279.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt;::construct&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; (2 samples, 0.04%)</title><rect x="268.1" y="1285" width="0.4" height="15.0" fill="rgb(241,85,8)" rx="2" ry="2" />
<text  x="271.06" y="1295.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; (3 samples, 0.06%)</title><rect x="48.6" y="1413" width="0.7" height="15.0" fill="rgb(208,164,47)" rx="2" ry="2" />
<text  x="51.60" y="1423.5" ></text>
</g>
<g >
<title>seastar::repeat&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (1 samples, 0.02%)</title><rect x="1130.0" y="1253" width="0.2" height="15.0" fill="rgb(223,1,48)" rx="2" ry="2" />
<text  x="1133.01" y="1263.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;clustering_key_prefix&gt;::wrapping_interval (1 samples, 0.02%)</title><rect x="1086.8" y="1525" width="0.2" height="15.0" fill="rgb(250,226,5)" rx="2" ry="2" />
<text  x="1089.78" y="1535.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::statements::create_aggregate_statement, std::default_delete&lt;cql3::statements::create_aggregate_statement&gt;, true, true&gt;::__uniq_ptr_data (1 samples, 0.02%)</title><rect x="62.9" y="1509" width="0.3" height="15.0" fill="rgb(213,188,42)" rx="2" ry="2" />
<text  x="65.93" y="1519.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="965" width="0.3" height="15.0" fill="rgb(236,45,19)" rx="2" ry="2" />
<text  x="13.44" y="975.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (3 samples, 0.06%)</title><rect x="98.9" y="1637" width="0.6" height="15.0" fill="rgb(214,185,42)" rx="2" ry="2" />
<text  x="101.89" y="1647.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.04%)</title><rect x="894.0" y="1461" width="0.4" height="15.0" fill="rgb(248,108,35)" rx="2" ry="2" />
<text  x="897.01" y="1471.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (6 samples, 0.11%)</title><rect x="554.3" y="1541" width="1.4" height="15.0" fill="rgb(226,29,16)" rx="2" ry="2" />
<text  x="557.34" y="1551.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::query_state&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="1132.7" y="1653" width="0.2" height="15.0" fill="rgb(207,43,19)" rx="2" ry="2" />
<text  x="1135.65" y="1663.5" ></text>
</g>
<g >
<title>compound_type&lt; (2 samples, 0.04%)</title><rect x="851.9" y="1477" width="0.4" height="15.0" fill="rgb(235,43,17)" rx="2" ry="2" />
<text  x="854.88" y="1487.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (6 samples, 0.11%)</title><rect x="1159.3" y="1605" width="1.4" height="15.0" fill="rgb(219,152,33)" rx="2" ry="2" />
<text  x="1162.34" y="1615.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="751.7" y="1493" width="0.3" height="15.0" fill="rgb(231,125,29)" rx="2" ry="2" />
<text  x="754.75" y="1503.5" ></text>
</g>
<g >
<title>absl::container_internal::operator== (1 samples, 0.02%)</title><rect x="815.9" y="1493" width="0.2" height="15.0" fill="rgb(245,202,10)" rx="2" ry="2" />
<text  x="818.93" y="1503.5" ></text>
</g>
<g >
<title>mutation_partition_view::from_view (1 samples, 0.02%)</title><rect x="1116.6" y="1397" width="0.2" height="15.0" fill="rgb(235,168,18)" rx="2" ry="2" />
<text  x="1119.55" y="1407.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.06%)</title><rect x="594.9" y="1493" width="0.7" height="15.0" fill="rgb(210,95,1)" rx="2" ry="2" />
<text  x="597.93" y="1503.5" ></text>
</g>
<g >
<title>seastar::syscall_work_queue::complete (1 samples, 0.02%)</title><rect x="1166.8" y="1637" width="0.3" height="15.0" fill="rgb(246,36,30)" rx="2" ry="2" />
<text  x="1169.84" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt;::_Copy_ctor_base (2 samples, 0.04%)</title><rect x="844.2" y="1573" width="0.4" height="15.0" fill="rgb(212,195,20)" rx="2" ry="2" />
<text  x="847.16" y="1583.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="1701" width="0.3" height="15.0" fill="rgb(229,148,3)" rx="2" ry="2" />
<text  x="13.44" y="1711.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.02%)</title><rect x="59.2" y="1413" width="0.2" height="15.0" fill="rgb(244,128,43)" rx="2" ry="2" />
<text  x="62.19" y="1423.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;service::storage_proxy_coordinator_query_result&gt;::set_urgent_state (10 samples, 0.19%)</title><rect x="686.5" y="1637" width="2.2" height="15.0" fill="rgb(224,41,46)" rx="2" ry="2" />
<text  x="689.46" y="1647.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_Optional_payload_base (3 samples, 0.06%)</title><rect x="1049.3" y="1461" width="0.6" height="15.0" fill="rgb(221,173,45)" rx="2" ry="2" />
<text  x="1052.28" y="1471.5" ></text>
</g>
<g >
<title>compound_wrapper&lt;clustering_key_prefix, clustering_key_prefix_view&gt;::components (2 samples, 0.04%)</title><rect x="1125.2" y="1237" width="0.4" height="15.0" fill="rgb(223,89,50)" rx="2" ry="2" />
<text  x="1128.16" y="1247.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::set&lt;service::storage_proxy_coordinator_query_result&gt; (1 samples, 0.02%)</title><rect x="1139.1" y="1621" width="0.2" height="15.0" fill="rgb(224,153,33)" rx="2" ry="2" />
<text  x="1142.05" y="1631.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;utils::small_vector&lt;service::storage_proxy::unique_response_handler, 1ul&gt; &gt; &gt;::invoke&lt;service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;, service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (28 samples, 0.52%)</title><rect x="1121.4" y="1429" width="6.2" height="15.0" fill="rgb(220,147,36)" rx="2" ry="2" />
<text  x="1124.41" y="1439.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (3 samples, 0.06%)</title><rect x="116.5" y="1589" width="0.7" height="15.0" fill="rgb(232,210,26)" rx="2" ry="2" />
<text  x="119.53" y="1599.5" ></text>
</g>
<g >
<title>query_result_builder::consume_new_partition (44 samples, 0.82%)</title><rect x="348.3" y="1349" width="9.7" height="15.0" fill="rgb(227,130,36)" rx="2" ry="2" />
<text  x="351.34" y="1359.5" ></text>
</g>
<g >
<title>basic_atomic_cell_view&lt; (1 samples, 0.02%)</title><rect x="690.0" y="1413" width="0.2" height="15.0" fill="rgb(211,224,19)" rx="2" ry="2" />
<text  x="692.99" y="1423.5" ></text>
</g>
<g >
<title>antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;::RecognizerSharedStateType&lt;antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::RecognizerSharedStateType (3 samples, 0.06%)</title><rect x="20.8" y="1509" width="0.7" height="15.0" fill="rgb(248,138,31)" rx="2" ry="2" />
<text  x="23.81" y="1519.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::whereClause (10 samples, 0.19%)</title><rect x="57.6" y="1509" width="2.2" height="15.0" fill="rgb(246,149,34)" rx="2" ry="2" />
<text  x="60.64" y="1519.5" ></text>
</g>
<g >
<title>cql3::expr::prepare_term (9 samples, 0.17%)</title><rect x="66.9" y="1557" width="2.0" height="15.0" fill="rgb(226,155,29)" rx="2" ry="2" />
<text  x="69.90" y="1567.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="801.6" y="1429" width="0.2" height="15.0" fill="rgb(208,36,12)" rx="2" ry="2" />
<text  x="804.59" y="1439.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.02%)</title><rect x="690.9" y="1413" width="0.2" height="15.0" fill="rgb(221,167,52)" rx="2" ry="2" />
<text  x="693.87" y="1423.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;locator::snitch_ptr&gt;::local (2 samples, 0.04%)</title><rect x="1068.7" y="1461" width="0.4" height="15.0" fill="rgb(226,193,53)" rx="2" ry="2" />
<text  x="1071.69" y="1471.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (2 samples, 0.04%)</title><rect x="758.8" y="1461" width="0.4" height="15.0" fill="rgb(216,149,35)" rx="2" ry="2" />
<text  x="761.80" y="1471.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (3 samples, 0.06%)</title><rect x="55.2" y="1301" width="0.7" height="15.0" fill="rgb(217,215,29)" rx="2" ry="2" />
<text  x="58.21" y="1311.5" ></text>
</g>
<g >
<title>std::destroy_at&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; (2 samples, 0.04%)</title><rect x="49.5" y="1317" width="0.4" height="15.0" fill="rgb(227,180,41)" rx="2" ry="2" />
<text  x="52.48" y="1327.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_M_reset (1 samples, 0.02%)</title><rect x="1087.0" y="1541" width="0.2" height="15.0" fill="rgb(237,118,41)" rx="2" ry="2" />
<text  x="1090.00" y="1551.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="645.4" y="1621" width="0.3" height="15.0" fill="rgb(250,130,52)" rx="2" ry="2" />
<text  x="648.44" y="1631.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="587.0" y="1477" width="0.2" height="15.0" fill="rgb(254,112,18)" rx="2" ry="2" />
<text  x="589.99" y="1487.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.02%)</title><rect x="24.6" y="1285" width="0.2" height="15.0" fill="rgb(246,16,40)" rx="2" ry="2" />
<text  x="27.56" y="1295.5" ></text>
</g>
<g >
<title>seastar::memory::stats (9 samples, 0.17%)</title><rect x="501.2" y="1461" width="2.0" height="15.0" fill="rgb(227,2,5)" rx="2" ry="2" />
<text  x="504.19" y="1471.5" ></text>
</g>
<g >
<title>std::vector&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, std::allocator&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="560.3" y="1525" width="0.2" height="15.0" fill="rgb(249,67,50)" rx="2" ry="2" />
<text  x="563.30" y="1535.5" ></text>
</g>
<g >
<title>query::result_view::consume&lt;query::result_set_builder&amp;&gt; (1 samples, 0.02%)</title><rect x="101.3" y="1589" width="0.2" height="15.0" fill="rgb(209,8,21)" rx="2" ry="2" />
<text  x="104.31" y="1599.5" ></text>
</g>
<g >
<title>std::vector&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, std::allocator&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt;::reserve (1 samples, 0.02%)</title><rect x="102.4" y="1397" width="0.2" height="15.0" fill="rgb(226,106,32)" rx="2" ry="2" />
<text  x="105.41" y="1407.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (4 samples, 0.07%)</title><rect x="782.2" y="1381" width="0.9" height="15.0" fill="rgb(240,141,1)" rx="2" ry="2" />
<text  x="785.18" y="1391.5" ></text>
</g>
<g >
<title>validation::validate_column_family (49 samples, 0.92%)</title><rect x="809.1" y="1541" width="10.8" height="15.0" fill="rgb(240,220,49)" rx="2" ry="2" />
<text  x="812.09" y="1551.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_no_esft&lt;std::function&lt;flat_mutation_reader  (3 samples, 0.06%)</title><rect x="632.6" y="1541" width="0.7" height="15.0" fill="rgb(214,24,30)" rx="2" ry="2" />
<text  x="635.64" y="1551.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::truncate_statement, std::default_delete&lt;cql3::statements::truncate_statement&gt; &gt;::__uniq_ptr_impl (1 samples, 0.02%)</title><rect x="64.3" y="1509" width="0.2" height="15.0" fill="rgb(207,27,39)" rx="2" ry="2" />
<text  x="67.26" y="1519.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (1 samples, 0.02%)</title><rect x="126.2" y="1525" width="0.3" height="15.0" fill="rgb(216,209,18)" rx="2" ry="2" />
<text  x="129.24" y="1535.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::expr::expression::impl&gt;, void&gt; (1 samples, 0.02%)</title><rect x="53.5" y="1397" width="0.2" height="15.0" fill="rgb(238,14,35)" rx="2" ry="2" />
<text  x="56.45" y="1407.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;service::digest_read_result&gt;::set_value&lt;service::digest_read_result&gt; (4 samples, 0.07%)</title><rect x="706.3" y="1573" width="0.9" height="15.0" fill="rgb(215,184,15)" rx="2" ry="2" />
<text  x="709.31" y="1583.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.02%)</title><rect x="44.8" y="1365" width="0.3" height="15.0" fill="rgb(230,54,20)" rx="2" ry="2" />
<text  x="47.85" y="1375.5" ></text>
</g>
<g >
<title>bplus::node&lt;long, intrusive_array&lt;cache_entry&gt;, dht::raw_token_less_comparator, 16ul,  (1 samples, 0.02%)</title><rect x="15.7" y="1653" width="0.3" height="15.0" fill="rgb(208,122,15)" rx="2" ry="2" />
<text  x="18.73" y="1663.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::clear (1 samples, 0.02%)</title><rect x="640.6" y="1637" width="0.2" height="15.0" fill="rgb(215,7,1)" rx="2" ry="2" />
<text  x="643.58" y="1647.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;service::abstract_read_executor::execute (2 samples, 0.04%)</title><rect x="695.5" y="1605" width="0.4" height="15.0" fill="rgb(221,30,37)" rx="2" ry="2" />
<text  x="698.50" y="1615.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume_in_thread&lt;sstables::sstable_writer, flat_mutation_reader::no_filter&gt; (13 samples, 0.24%)</title><rect x="79.5" y="1685" width="2.8" height="15.0" fill="rgb(251,156,23)" rx="2" ry="2" />
<text  x="82.48" y="1695.5" ></text>
</g>
<g >
<title>std::vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, std::allocator&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; &gt;::vector (1 samples, 0.02%)</title><rect x="77.5" y="1637" width="0.2" height="15.0" fill="rgb(218,103,20)" rx="2" ry="2" />
<text  x="80.49" y="1647.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::get_promise (1 samples, 0.02%)</title><rect x="10.7" y="1429" width="0.2" height="15.0" fill="rgb(242,152,50)" rx="2" ry="2" />
<text  x="13.66" y="1439.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (2 samples, 0.04%)</title><rect x="455.3" y="1493" width="0.5" height="15.0" fill="rgb(243,79,0)" rx="2" ry="2" />
<text  x="458.31" y="1503.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, query::non_null_data_value&gt;, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, query::non_null_data_value&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, std::hash&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_move_assign (1 samples, 0.02%)</title><rect x="101.3" y="1541" width="0.2" height="15.0" fill="rgb(229,192,26)" rx="2" ry="2" />
<text  x="104.31" y="1551.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (2 samples, 0.04%)</title><rect x="479.1" y="1445" width="0.5" height="15.0" fill="rgb(209,77,28)" rx="2" ry="2" />
<text  x="482.13" y="1455.5" ></text>
</g>
<g >
<title>__strlen_avx2 (1 samples, 0.02%)</title><rect x="1119.9" y="1381" width="0.2" height="15.0" fill="rgb(209,200,14)" rx="2" ry="2" />
<text  x="1122.86" y="1391.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reserve&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (451 samples, 8.43%)</title><rect x="197.9" y="1429" width="99.5" height="15.0" fill="rgb(221,187,50)" rx="2" ry="2" />
<text  x="200.92" y="1439.5" >logalloc::al..</text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::operator= (2 samples, 0.04%)</title><rect x="1137.3" y="1637" width="0.4" height="15.0" fill="rgb(232,105,41)" rx="2" ry="2" />
<text  x="1140.29" y="1647.5" ></text>
</g>
<g >
<title>flat_mutation_reader::close (144 samples, 2.69%)</title><rect x="566.0" y="1557" width="31.8" height="15.0" fill="rgb(240,192,25)" rx="2" ry="2" />
<text  x="569.03" y="1567.5" >fl..</text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_Vector_impl_data::_Vector_impl_data (1 samples, 0.02%)</title><rect x="59.6" y="1429" width="0.2" height="15.0" fill="rgb(247,180,26)" rx="2" ry="2" />
<text  x="62.63" y="1439.5" ></text>
</g>
<g >
<title>memtable::upgrade_entry (1 samples, 0.02%)</title><rect x="536.0" y="1493" width="0.3" height="15.0" fill="rgb(206,127,26)" rx="2" ry="2" />
<text  x="539.04" y="1503.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (13 samples, 0.24%)</title><rect x="79.5" y="1717" width="2.8" height="15.0" fill="rgb(241,124,35)" rx="2" ry="2" />
<text  x="82.48" y="1727.5" ></text>
</g>
<g >
<title>service::storage_proxy::unthrottle (1 samples, 0.02%)</title><rect x="692.0" y="1621" width="0.2" height="15.0" fill="rgb(246,224,22)" rx="2" ry="2" />
<text  x="694.97" y="1631.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (1 samples, 0.02%)</title><rect x="158.9" y="1573" width="0.2" height="15.0" fill="rgb(230,221,33)" rx="2" ry="2" />
<text  x="161.88" y="1583.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (1 samples, 0.02%)</title><rect x="116.3" y="1557" width="0.2" height="15.0" fill="rgb(234,133,6)" rx="2" ry="2" />
<text  x="119.31" y="1567.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume_in_thread&lt;stable_flattened_mutations_consumer&lt;compact_for_compaction&lt;sstables::compacting_sstable_writer, noop_compacted_fragments_consumer&gt; &gt;, flat_mutation_reader::no_filter&gt; (1 samples, 0.02%)</title><rect x="17.5" y="1685" width="0.2" height="15.0" fill="rgb(209,98,10)" rx="2" ry="2" />
<text  x="20.50" y="1695.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="927.5" y="1541" width="0.3" height="15.0" fill="rgb(224,99,6)" rx="2" ry="2" />
<text  x="930.53" y="1551.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="834.7" y="1493" width="0.2" height="15.0" fill="rgb(252,33,14)" rx="2" ry="2" />
<text  x="837.68" y="1503.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;service::query_state&gt;::~shared_ptr_count_for (3 samples, 0.06%)</title><rect x="674.8" y="1637" width="0.6" height="15.0" fill="rgb(230,213,46)" rx="2" ry="2" />
<text  x="677.77" y="1647.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::attributes::raw, std::default_delete&lt;cql3::attributes::raw&gt;, true, true&gt;::__uniq_ptr_impl (1 samples, 0.02%)</title><rect x="60.3" y="1477" width="0.2" height="15.0" fill="rgb(206,175,44)" rx="2" ry="2" />
<text  x="63.29" y="1487.5" ></text>
</g>
<g >
<title>cql3::statements::raw::select_statement::prepare (1 samples, 0.02%)</title><rect x="10.4" y="197" width="0.3" height="15.0" fill="rgb(211,61,23)" rx="2" ry="2" />
<text  x="13.44" y="207.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (1 samples, 0.02%)</title><rect x="1130.0" y="1205" width="0.2" height="15.0" fill="rgb(235,128,4)" rx="2" ry="2" />
<text  x="1133.01" y="1215.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::storage_proxy&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="1044.9" y="1477" width="0.2" height="15.0" fill="rgb(223,85,27)" rx="2" ry="2" />
<text  x="1047.87" y="1487.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;cql3::expr::expression&gt;::_Optional_payload_base (1 samples, 0.02%)</title><rect x="60.1" y="1413" width="0.2" height="15.0" fill="rgb(227,99,19)" rx="2" ry="2" />
<text  x="63.07" y="1423.5" ></text>
</g>
<g >
<title>__tls_init (2 samples, 0.04%)</title><rect x="544.0" y="1445" width="0.4" height="15.0" fill="rgb(235,187,27)" rx="2" ry="2" />
<text  x="546.98" y="1455.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.02%)</title><rect x="59.2" y="1365" width="0.2" height="15.0" fill="rgb(230,208,37)" rx="2" ry="2" />
<text  x="62.19" y="1375.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_token (6 samples, 0.11%)</title><rect x="935.3" y="1541" width="1.3" height="15.0" fill="rgb(211,69,20)" rx="2" ry="2" />
<text  x="938.25" y="1551.5" ></text>
</g>
<g >
<title>_ZSt5applyIZN7seastar8internal12do_with_implISt4pairIN4auth17role_or_anonymousENS4_8resourceEEZNS4_17permissions_cache3getERKS5_RKS6_E3$_0JEEEDaOT_OT0_DpOT1_EUlDpOT_E_St5tupleIJOS7_EEEDcSF_SH_ (1 samples, 0.02%)</title><rect x="780.2" y="1429" width="0.2" height="15.0" fill="rgb(236,94,0)" rx="2" ry="2" />
<text  x="783.20" y="1439.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (9 samples, 0.17%)</title><rect x="978.0" y="1397" width="2.0" height="15.0" fill="rgb(228,183,18)" rx="2" ry="2" />
<text  x="981.04" y="1407.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;service::digest_read_resolver&gt;::~shared_ptr_count_for (7 samples, 0.13%)</title><rect x="698.8" y="1637" width="1.6" height="15.0" fill="rgb(209,150,45)" rx="2" ry="2" />
<text  x="701.81" y="1647.5" ></text>
</g>
<g >
<title>auth::permissions_cache::get (2 samples, 0.04%)</title><rect x="75.9" y="1493" width="0.5" height="15.0" fill="rgb(236,215,47)" rx="2" ry="2" />
<text  x="78.95" y="1503.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (5 samples, 0.09%)</title><rect x="41.5" y="1429" width="1.1" height="15.0" fill="rgb(212,9,22)" rx="2" ry="2" />
<text  x="44.54" y="1439.5" ></text>
</g>
<g >
<title>std::default_delete&lt;mutation_fragment::data&gt;::operator (1 samples, 0.02%)</title><rect x="433.0" y="1413" width="0.3" height="15.0" fill="rgb(236,109,6)" rx="2" ry="2" />
<text  x="436.04" y="1423.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (1 samples, 0.02%)</title><rect x="448.7" y="1557" width="0.2" height="15.0" fill="rgb(233,142,4)" rx="2" ry="2" />
<text  x="451.70" y="1567.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="632.4" y="1541" width="0.2" height="15.0" fill="rgb(211,34,17)" rx="2" ry="2" />
<text  x="635.42" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;gms::inet_address, std::pair&lt;gms::inet_address const, table::cache_hit_rate&gt;, std::allocator&lt;std::pair&lt;gms::inet_address const, table::cache_hit_rate&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;gms::inet_address&gt;, std::hash&lt;gms::inet_address&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::operator[] (5 samples, 0.09%)</title><rect x="710.1" y="1589" width="1.1" height="15.0" fill="rgb(209,58,54)" rx="2" ry="2" />
<text  x="713.06" y="1599.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (1 samples, 0.02%)</title><rect x="95.1" y="1621" width="0.3" height="15.0" fill="rgb(233,102,16)" rx="2" ry="2" />
<text  x="98.14" y="1631.5" ></text>
</g>
<g >
<title>abstract_type::from_string (5 samples, 0.09%)</title><rect x="67.1" y="1525" width="1.1" height="15.0" fill="rgb(205,124,3)" rx="2" ry="2" />
<text  x="70.13" y="1535.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const*, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;*&gt; (6 samples, 0.11%)</title><rect x="775.3" y="1445" width="1.4" height="15.0" fill="rgb(235,225,23)" rx="2" ry="2" />
<text  x="778.35" y="1455.5" ></text>
</g>
<g >
<title>free (1 samples, 0.02%)</title><rect x="855.0" y="1429" width="0.2" height="15.0" fill="rgb(223,154,45)" rx="2" ry="2" />
<text  x="857.97" y="1439.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::RecognizerSharedState (3 samples, 0.06%)</title><rect x="20.8" y="1493" width="0.7" height="15.0" fill="rgb(235,162,42)" rx="2" ry="2" />
<text  x="23.81" y="1503.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume_in_thread&lt;sstables::sstable_writer, flat_mutation_reader::no_filter&gt; (1 samples, 0.02%)</title><rect x="79.3" y="1637" width="0.2" height="15.0" fill="rgb(229,178,34)" rx="2" ry="2" />
<text  x="82.26" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;seastar::future&lt;void&gt; &gt;  (3 samples, 0.06%)</title><rect x="1165.5" y="1621" width="0.7" height="15.0" fill="rgb(210,28,37)" rx="2" ry="2" />
<text  x="1168.52" y="1631.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (1 samples, 0.02%)</title><rect x="786.2" y="1365" width="0.2" height="15.0" fill="rgb(205,93,28)" rx="2" ry="2" />
<text  x="789.15" y="1375.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::term (29 samples, 0.54%)</title><rect x="49.9" y="1461" width="6.4" height="15.0" fill="rgb(231,92,20)" rx="2" ry="2" />
<text  x="52.92" y="1471.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::digest_read_resolver&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="698.6" y="1637" width="0.2" height="15.0" fill="rgb(232,177,31)" rx="2" ry="2" />
<text  x="701.59" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="1381" width="0.3" height="15.0" fill="rgb(217,163,38)" rx="2" ry="2" />
<text  x="13.44" y="1391.5" ></text>
</g>
<g >
<title>seastar::internal::awaiter&lt;void&gt;::await_suspend&lt;seastar::internal::coroutine_traits_base&lt;std::tuple&lt;seastar::lw_shared_ptr&lt;query::result&gt;, cache_temperature&gt; &gt;::promise_type&gt; (1 samples, 0.02%)</title><rect x="1020.2" y="1413" width="0.2" height="15.0" fill="rgb(251,14,31)" rx="2" ry="2" />
<text  x="1023.17" y="1423.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::~vector (4 samples, 0.07%)</title><rect x="930.2" y="1557" width="0.9" height="15.0" fill="rgb(206,106,33)" rx="2" ry="2" />
<text  x="933.18" y="1567.5" ></text>
</g>
<g >
<title>managed_bytes::external_memory_usage (4 samples, 0.07%)</title><rect x="258.4" y="1253" width="0.8" height="15.0" fill="rgb(224,156,45)" rx="2" ry="2" />
<text  x="261.35" y="1263.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mQUOTED_NAME (1 samples, 0.02%)</title><rect x="31.6" y="1413" width="0.2" height="15.0" fill="rgb(240,116,10)" rx="2" ry="2" />
<text  x="34.61" y="1423.5" ></text>
</g>
<g >
<title>ser::serializer&lt;clustering_key_prefix&gt;::skip&lt;seastar::simple_memory_input_stream&gt; (1 samples, 0.02%)</title><rect x="1116.1" y="1381" width="0.2" height="15.0" fill="rgb(211,50,15)" rx="2" ry="2" />
<text  x="1119.11" y="1391.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (1 samples, 0.02%)</title><rect x="896.2" y="1493" width="0.2" height="15.0" fill="rgb(210,66,26)" rx="2" ry="2" />
<text  x="899.21" y="1503.5" ></text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt;&amp;&gt; (1 samples, 0.02%)</title><rect x="834.7" y="1509" width="0.2" height="15.0" fill="rgb(207,85,31)" rx="2" ry="2" />
<text  x="837.68" y="1519.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (3 samples, 0.06%)</title><rect x="664.6" y="1621" width="0.7" height="15.0" fill="rgb(211,102,52)" rx="2" ry="2" />
<text  x="667.62" y="1631.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="789" width="0.3" height="15.0" fill="rgb(213,123,5)" rx="2" ry="2" />
<text  x="13.44" y="799.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, seastar::lw_shared_ptr&lt;cql3::column_condition::raw&gt; &gt; &gt;::new_allocator (1 samples, 0.02%)</title><rect x="61.2" y="1445" width="0.2" height="15.0" fill="rgb(218,88,37)" rx="2" ry="2" />
<text  x="64.17" y="1455.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="690.2" y="1557" width="0.2" height="15.0" fill="rgb(233,94,45)" rx="2" ry="2" />
<text  x="693.21" y="1567.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::remove_if&lt;row::compact_and_expire (68 samples, 1.27%)</title><rect x="403.7" y="1333" width="15.0" height="15.0" fill="rgb(226,227,28)" rx="2" ry="2" />
<text  x="406.70" y="1343.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (1 samples, 0.02%)</title><rect x="338.4" y="1413" width="0.2" height="15.0" fill="rgb(252,29,47)" rx="2" ry="2" />
<text  x="341.41" y="1423.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="325.4" y="1429" width="0.2" height="15.0" fill="rgb(218,13,33)" rx="2" ry="2" />
<text  x="328.40" y="1439.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (1 samples, 0.02%)</title><rect x="1130.7" y="1653" width="0.2" height="15.0" fill="rgb(220,3,44)" rx="2" ry="2" />
<text  x="1133.67" y="1663.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;sstables::column_translation::state const&gt;::make&lt;schema const&amp;, sstables::serialization_header const&amp;, sstables::sstable_enabled_features const&amp;&gt; (1 samples, 0.02%)</title><rect x="1130.0" y="997" width="0.2" height="15.0" fill="rgb(229,6,35)" rx="2" ry="2" />
<text  x="1133.01" y="1007.5" ></text>
</g>
<g >
<title>std::construct_at&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::entry&gt; (7 samples, 0.13%)</title><rect x="127.6" y="1557" width="1.5" height="15.0" fill="rgb(251,16,26)" rx="2" ry="2" />
<text  x="130.56" y="1567.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;flat_mutation_reader&gt;::allocate (1 samples, 0.02%)</title><rect x="454.7" y="1493" width="0.2" height="15.0" fill="rgb(205,132,15)" rx="2" ry="2" />
<text  x="457.65" y="1503.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.04%)</title><rect x="46.4" y="1381" width="0.4" height="15.0" fill="rgb(235,61,40)" rx="2" ry="2" />
<text  x="49.39" y="1391.5" ></text>
</g>
<g >
<title>reader_permit::signal (1 samples, 0.02%)</title><rect x="319.4" y="1461" width="0.3" height="15.0" fill="rgb(254,199,36)" rx="2" ry="2" />
<text  x="322.45" y="1471.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::emplace_mutation_fragment (5 samples, 0.09%)</title><rect x="203.9" y="1397" width="1.1" height="15.0" fill="rgb(214,137,10)" rx="2" ry="2" />
<text  x="206.87" y="1407.5" ></text>
</g>
<g >
<title>service::storage_proxy::create_write_response_handler (26 samples, 0.49%)</title><rect x="1121.6" y="1381" width="5.8" height="15.0" fill="rgb(230,109,52)" rx="2" ry="2" />
<text  x="1124.63" y="1391.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt; const, std::default_delete&lt;seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt; const&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="100.7" y="1365" width="0.2" height="15.0" fill="rgb(243,193,16)" rx="2" ry="2" />
<text  x="103.65" y="1375.5" ></text>
</g>
<g >
<title>std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt; &gt;, seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (6 samples, 0.11%)</title><rect x="799.2" y="1397" width="1.3" height="15.0" fill="rgb(252,168,47)" rx="2" ry="2" />
<text  x="802.17" y="1407.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;cql3::query_options, false&gt;::make&lt;cql3::query_options&amp;&gt; (1 samples, 0.02%)</title><rect x="77.7" y="1653" width="0.2" height="15.0" fill="rgb(228,11,18)" rx="2" ry="2" />
<text  x="80.71" y="1663.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (1 samples, 0.02%)</title><rect x="756.4" y="1477" width="0.2" height="15.0" fill="rgb(218,63,40)" rx="2" ry="2" />
<text  x="759.38" y="1487.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.02%)</title><rect x="59.2" y="1317" width="0.2" height="15.0" fill="rgb(239,205,24)" rx="2" ry="2" />
<text  x="62.19" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.02%)</title><rect x="890.5" y="1413" width="0.2" height="15.0" fill="rgb(216,18,4)" rx="2" ry="2" />
<text  x="893.48" y="1423.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::query_options, std::default_delete&lt;cql3::query_options&gt; &gt;::~unique_ptr (3 samples, 0.06%)</title><rect x="1164.4" y="1653" width="0.7" height="15.0" fill="rgb(216,20,16)" rx="2" ry="2" />
<text  x="1167.41" y="1663.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.02%)</title><rect x="727.3" y="1445" width="0.2" height="15.0" fill="rgb(240,61,41)" rx="2" ry="2" />
<text  x="730.26" y="1455.5" ></text>
</g>
<g >
<title>query::result::builder::build (10 samples, 0.19%)</title><rect x="606.2" y="1589" width="2.2" height="15.0" fill="rgb(211,70,47)" rx="2" ry="2" />
<text  x="609.18" y="1599.5" ></text>
</g>
<g >
<title>std::__count_if&lt;gms::inet_address const*, __gnu_cxx::__ops::_Iter_pred&lt;service::storage_proxy::hint_to_dead_endpoints&lt;utils::small_vector&lt;gms::inet_address, 1ul&gt; &gt; (1 samples, 0.02%)</title><rect x="1119.6" y="1365" width="0.3" height="15.0" fill="rgb(244,28,16)" rx="2" ry="2" />
<text  x="1122.64" y="1375.5" ></text>
</g>
<g >
<title>service::abstract_read_resolver::abstract_read_resolver (6 samples, 0.11%)</title><rect x="973.4" y="1445" width="1.3" height="15.0" fill="rgb(243,79,53)" rx="2" ry="2" />
<text  x="976.41" y="1455.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (2 samples, 0.04%)</title><rect x="914.5" y="1477" width="0.5" height="15.0" fill="rgb(231,58,45)" rx="2" ry="2" />
<text  x="917.52" y="1487.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (28 samples, 0.52%)</title><rect x="254.8" y="1285" width="6.2" height="15.0" fill="rgb(213,216,33)" rx="2" ry="2" />
<text  x="257.82" y="1295.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (32 samples, 0.60%)</title><rect x="491.7" y="1381" width="7.1" height="15.0" fill="rgb(206,20,42)" rx="2" ry="2" />
<text  x="494.70" y="1391.5" ></text>
</g>
<g >
<title>posix_memalign (5 samples, 0.09%)</title><rect x="249.5" y="1237" width="1.1" height="15.0" fill="rgb(219,209,14)" rx="2" ry="2" />
<text  x="252.53" y="1247.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;dht::token, std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt;, std::allocator&lt;std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;dht::token&gt;, std::hash&lt;dht::token&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (28 samples, 0.52%)</title><rect x="1061.0" y="1429" width="6.1" height="15.0" fill="rgb(231,25,39)" rx="2" ry="2" />
<text  x="1063.97" y="1439.5" ></text>
</g>
<g >
<title>seastar::do_until&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (1 samples, 0.02%)</title><rect x="100.9" y="1093" width="0.2" height="15.0" fill="rgb(233,112,10)" rx="2" ry="2" />
<text  x="103.87" y="1103.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::take_value (1 samples, 0.02%)</title><rect x="193.7" y="1413" width="0.2" height="15.0" fill="rgb(226,219,34)" rx="2" ry="2" />
<text  x="196.73" y="1423.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (1 samples, 0.02%)</title><rect x="784.6" y="1381" width="0.2" height="15.0" fill="rgb(216,227,32)" rx="2" ry="2" />
<text  x="787.61" y="1391.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::take_value (2 samples, 0.04%)</title><rect x="195.5" y="1429" width="0.4" height="15.0" fill="rgb(239,81,5)" rx="2" ry="2" />
<text  x="198.49" y="1439.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (62 samples, 1.16%)</title><rect x="23.0" y="1525" width="13.7" height="15.0" fill="rgb(217,215,53)" rx="2" ry="2" />
<text  x="26.01" y="1535.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::operator= (1 samples, 0.02%)</title><rect x="47.3" y="1429" width="0.2" height="15.0" fill="rgb(248,98,7)" rx="2" ry="2" />
<text  x="50.27" y="1439.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::~guard (1 samples, 0.02%)</title><rect x="537.4" y="1477" width="0.2" height="15.0" fill="rgb(231,16,45)" rx="2" ry="2" />
<text  x="540.36" y="1487.5" ></text>
</g>
<g >
<title>ser::qr_clustered_row__cells&lt;bytes_ostream&gt;::qr_clustered_row__cells (2 samples, 0.04%)</title><rect x="395.8" y="1349" width="0.4" height="15.0" fill="rgb(252,89,1)" rx="2" ry="2" />
<text  x="398.76" y="1359.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_partition_key_range_concurrent (1 samples, 0.02%)</title><rect x="78.8" y="1285" width="0.2" height="15.0" fill="rgb(245,192,46)" rx="2" ry="2" />
<text  x="81.81" y="1295.5" ></text>
</g>
<g >
<title>scanning_reader::fill_buffer (1 samples, 0.02%)</title><rect x="100.9" y="1173" width="0.2" height="15.0" fill="rgb(217,123,13)" rx="2" ry="2" />
<text  x="103.87" y="1183.5" ></text>
</g>
<g >
<title>partition_entry::read (9 samples, 0.17%)</title><rect x="531.4" y="1461" width="2.0" height="15.0" fill="rgb(230,152,32)" rx="2" ry="2" />
<text  x="534.41" y="1471.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (1 samples, 0.02%)</title><rect x="81.9" y="1621" width="0.2" height="15.0" fill="rgb(221,144,45)" rx="2" ry="2" />
<text  x="84.90" y="1631.5" ></text>
</g>
<g >
<title>std::optional&lt;clustering_key_prefix&gt;::operator=&lt;clustering_key_prefix const&amp;&gt; (5 samples, 0.09%)</title><rect x="274.2" y="1365" width="1.1" height="15.0" fill="rgb(216,112,15)" rx="2" ry="2" />
<text  x="277.23" y="1375.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (2 samples, 0.04%)</title><rect x="46.4" y="1365" width="0.4" height="15.0" fill="rgb(237,7,13)" rx="2" ry="2" />
<text  x="49.39" y="1375.5" ></text>
</g>
<g >
<title>abstract_type::compare (1 samples, 0.02%)</title><rect x="17.1" y="1253" width="0.2" height="15.0" fill="rgb(227,153,44)" rx="2" ry="2" />
<text  x="20.06" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt;::~_Variant_storage (1 samples, 0.02%)</title><rect x="896.4" y="1493" width="0.3" height="15.0" fill="rgb(248,162,45)" rx="2" ry="2" />
<text  x="899.43" y="1503.5" ></text>
</g>
<g >
<title>std::__push_heap&lt;mutation_reader_merger::reader_and_fragment*, long, mutation_reader_merger::reader_and_fragment, __gnu_cxx::__ops::_Iter_comp_val&lt;mutation_reader_merger::reader_heap_compare&gt; &gt; (1 samples, 0.02%)</title><rect x="189.8" y="1397" width="0.2" height="15.0" fill="rgb(245,75,50)" rx="2" ry="2" />
<text  x="192.76" y="1407.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (1 samples, 0.02%)</title><rect x="711.8" y="1621" width="0.2" height="15.0" fill="rgb(237,114,50)" rx="2" ry="2" />
<text  x="714.82" y="1631.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="659.8" y="1605" width="0.2" height="15.0" fill="rgb(207,83,42)" rx="2" ry="2" />
<text  x="662.77" y="1615.5" ></text>
</g>
<g >
<title>std::__equal&lt;true&gt;::equal&lt;char&gt; (1 samples, 0.02%)</title><rect x="76.2" y="1349" width="0.2" height="15.0" fill="rgb(209,39,24)" rx="2" ry="2" />
<text  x="79.17" y="1359.5" ></text>
</g>
<g >
<title>evictable_reader::fill_buffer (1 samples, 0.02%)</title><rect x="100.9" y="1317" width="0.2" height="15.0" fill="rgb(251,180,24)" rx="2" ry="2" />
<text  x="103.87" y="1327.5" ></text>
</g>
<g >
<title>sstables::compaction::setup&lt;noop_compacted_fragments_consumer&gt; (1 samples, 0.02%)</title><rect x="1130.0" y="1349" width="0.2" height="15.0" fill="rgb(208,28,18)" rx="2" ry="2" />
<text  x="1133.01" y="1359.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (1 samples, 0.02%)</title><rect x="848.8" y="1509" width="0.2" height="15.0" fill="rgb(207,223,34)" rx="2" ry="2" />
<text  x="851.79" y="1519.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.02%)</title><rect x="1038.7" y="1413" width="0.2" height="15.0" fill="rgb(234,34,52)" rx="2" ry="2" />
<text  x="1041.70" y="1423.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.02%)</title><rect x="51.7" y="1237" width="0.2" height="15.0" fill="rgb(227,126,21)" rx="2" ry="2" />
<text  x="54.69" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::at (1 samples, 0.02%)</title><rect x="1070.0" y="1493" width="0.2" height="15.0" fill="rgb(228,186,1)" rx="2" ry="2" />
<text  x="1073.01" y="1503.5" ></text>
</g>
<g >
<title>reader_selector::has_new_readers (1 samples, 0.02%)</title><rect x="180.1" y="1429" width="0.2" height="15.0" fill="rgb(234,20,36)" rx="2" ry="2" />
<text  x="183.05" y="1439.5" ></text>
</g>
<g >
<title>commitlog_entry_writer::serialize&lt;seastar::memory_output_stream&lt;__gnu_cxx::__normal_iterator&lt;seastar::temporary_buffer&lt;char&gt;*, std::vector&lt;seastar::temporary_buffer&lt;char&gt;, std::allocator&lt;seastar::temporary_buffer&lt;char&gt; &gt; &gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="1117.2" y="1397" width="0.2" height="15.0" fill="rgb(218,16,31)" rx="2" ry="2" />
<text  x="1120.21" y="1407.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::read_next (281 samples, 5.25%)</title><rect x="216.4" y="1397" width="62.0" height="15.0" fill="rgb(221,174,49)" rx="2" ry="2" />
<text  x="219.44" y="1407.5" >partit..</text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="1143.2" y="1605" width="0.3" height="15.0" fill="rgb(248,61,18)" rx="2" ry="2" />
<text  x="1146.24" y="1615.5" ></text>
</g>
<g >
<title>db::commitlog::segment::allocate (1 samples, 0.02%)</title><rect x="1117.2" y="1429" width="0.2" height="15.0" fill="rgb(214,59,36)" rx="2" ry="2" />
<text  x="1120.21" y="1439.5" ></text>
</g>
<g >
<title>linearized&lt;managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="1125.8" y="1237" width="0.2" height="15.0" fill="rgb(219,154,4)" rx="2" ry="2" />
<text  x="1128.82" y="1247.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="210.0" y="1333" width="0.3" height="15.0" fill="rgb(250,12,4)" rx="2" ry="2" />
<text  x="213.05" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (1 samples, 0.02%)</title><rect x="893.3" y="1477" width="0.3" height="15.0" fill="rgb(211,13,18)" rx="2" ry="2" />
<text  x="896.35" y="1487.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;column_definition const*, std::pair&lt;column_definition const* const, cql3::expr::expression&gt;, std::allocator&lt;std::pair&lt;column_definition const* const, cql3::expr::expression&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;column_definition const*&gt;, std::hash&lt;column_definition const*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::clear (1 samples, 0.02%)</title><rect x="71.3" y="1525" width="0.2" height="15.0" fill="rgb(240,179,27)" rx="2" ry="2" />
<text  x="74.32" y="1535.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;boost::range_detail::integer_iterator&lt;unsigned int&gt;, std::function&lt;seastar::future&lt;void&gt;  (1 samples, 0.02%)</title><rect x="17.1" y="1573" width="0.2" height="15.0" fill="rgb(206,153,47)" rx="2" ry="2" />
<text  x="20.06" y="1583.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::emplace&lt;atomic_cell_or_collection, seastar::optimized_optional&lt;cell_hash&gt; &gt; (3 samples, 0.06%)</title><rect x="853.4" y="1429" width="0.7" height="15.0" fill="rgb(239,0,30)" rx="2" ry="2" />
<text  x="856.42" y="1439.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql3::statements::update_statement&gt;::~shared_ptr_count_for (3 samples, 0.06%)</title><rect x="649.2" y="1637" width="0.6" height="15.0" fill="rgb(252,112,18)" rx="2" ry="2" />
<text  x="652.19" y="1647.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (2 samples, 0.04%)</title><rect x="45.3" y="1333" width="0.4" height="15.0" fill="rgb(227,115,44)" rx="2" ry="2" />
<text  x="48.29" y="1343.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (5 samples, 0.09%)</title><rect x="41.5" y="1381" width="1.1" height="15.0" fill="rgb(209,200,26)" rx="2" ry="2" />
<text  x="44.54" y="1391.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (1 samples, 0.02%)</title><rect x="81.9" y="1605" width="0.2" height="15.0" fill="rgb(210,214,19)" rx="2" ry="2" />
<text  x="84.90" y="1615.5" ></text>
</g>
<g >
<title>std::vector&lt;seastar::shared_ptr&lt;cql3::operation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::operation&gt; &gt; &gt;::_M_realloc_insert&lt;seastar::shared_ptr&lt;cql3::operation&gt; &gt; (1 samples, 0.02%)</title><rect x="68.9" y="1541" width="0.2" height="15.0" fill="rgb(252,164,19)" rx="2" ry="2" />
<text  x="71.89" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::~_Variant_storage (1 samples, 0.02%)</title><rect x="628.0" y="1589" width="0.2" height="15.0" fill="rgb(250,199,20)" rx="2" ry="2" />
<text  x="631.01" y="1599.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (1 samples, 0.02%)</title><rect x="799.6" y="1381" width="0.2" height="15.0" fill="rgb(252,185,7)" rx="2" ry="2" />
<text  x="802.61" y="1391.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.02%)</title><rect x="507.4" y="1461" width="0.2" height="15.0" fill="rgb(225,203,42)" rx="2" ry="2" />
<text  x="510.36" y="1471.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt; &gt;, seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (1 samples, 0.02%)</title><rect x="800.9" y="1429" width="0.3" height="15.0" fill="rgb(233,32,46)" rx="2" ry="2" />
<text  x="803.93" y="1439.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::contains&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (2 samples, 0.04%)</title><rect x="74.0" y="1557" width="0.4" height="15.0" fill="rgb(239,77,11)" rx="2" ry="2" />
<text  x="76.96" y="1567.5" ></text>
</g>
<g >
<title>utils::tuple_hash::operator (6 samples, 0.11%)</title><rect x="759.7" y="1493" width="1.3" height="15.0" fill="rgb(222,74,46)" rx="2" ry="2" />
<text  x="762.69" y="1503.5" ></text>
</g>
<g >
<title>seastar::schedule (1 samples, 0.02%)</title><rect x="1130.9" y="1653" width="0.2" height="15.0" fill="rgb(216,44,54)" rx="2" ry="2" />
<text  x="1133.89" y="1663.5" ></text>
</g>
<g >
<title>dht::maximum_token (1 samples, 0.02%)</title><rect x="461.7" y="1429" width="0.2" height="15.0" fill="rgb(252,194,49)" rx="2" ry="2" />
<text  x="464.71" y="1439.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (234 samples, 4.37%)</title><rect x="219.3" y="1381" width="51.6" height="15.0" fill="rgb(226,104,47)" rx="2" ry="2" />
<text  x="222.31" y="1391.5" >parti..</text>
</g>
<g >
<title>operator delete (2 samples, 0.04%)</title><rect x="51.0" y="1381" width="0.5" height="15.0" fill="rgb(223,196,14)" rx="2" ry="2" />
<text  x="54.02" y="1391.5" ></text>
</g>
<g >
<title>utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;::lru_entry::touch (4 samples, 0.07%)</title><rect x="729.9" y="1557" width="0.9" height="15.0" fill="rgb(235,226,22)" rx="2" ry="2" />
<text  x="732.91" y="1567.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;std::optional&lt;auth::resource&gt; &gt;, seastar::future&lt;bool&gt; &gt;, std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;std::optional&lt;auth::resource&gt; &gt;, seastar::future&lt;bool&gt; &gt; &gt; &gt;::~unique_ptr (8 samples, 0.15%)</title><rect x="802.7" y="1477" width="1.8" height="15.0" fill="rgb(220,210,32)" rx="2" ry="2" />
<text  x="805.70" y="1487.5" ></text>
</g>
<g >
<title>service::storage_proxy::remove_response_handler_entry (1 samples, 0.02%)</title><rect x="713.1" y="1621" width="0.3" height="15.0" fill="rgb(217,64,53)" rx="2" ry="2" />
<text  x="716.15" y="1631.5" ></text>
</g>
<g >
<title>service::storage_proxy::hint_to_dead_endpoints&lt;utils::small_vector&lt;gms::inet_address, 1ul&gt; &gt; (1 samples, 0.02%)</title><rect x="1119.6" y="1397" width="0.3" height="15.0" fill="rgb(249,121,35)" rx="2" ry="2" />
<text  x="1122.64" y="1407.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::make_ready&lt; (4 samples, 0.07%)</title><rect x="132.9" y="1605" width="0.8" height="15.0" fill="rgb(241,41,3)" rx="2" ry="2" />
<text  x="135.85" y="1615.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (2,397 samples, 44.80%)</title><rect x="106.2" y="1637" width="528.6" height="15.0" fill="rgb(224,53,40)" rx="2" ry="2" />
<text  x="109.16" y="1647.5" >seastar::noncopyable_function&lt;seastar::future&lt;void&gt; </text>
</g>
<g >
<title>reader_concurrency_semaphore::signal (1 samples, 0.02%)</title><rect x="588.3" y="1509" width="0.2" height="15.0" fill="rgb(207,180,44)" rx="2" ry="2" />
<text  x="591.31" y="1519.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::emplace_back&lt;gms::inet_address const&amp;&gt; (3 samples, 0.06%)</title><rect x="711.2" y="1605" width="0.6" height="15.0" fill="rgb(240,164,36)" rx="2" ry="2" />
<text  x="714.16" y="1615.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_destroy_data (4 samples, 0.07%)</title><rect x="398.8" y="1317" width="0.9" height="15.0" fill="rgb(248,66,31)" rx="2" ry="2" />
<text  x="401.85" y="1327.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::then_wrapped_common&lt;true, void, service::abstract_read_executor::make_data_requests (1 samples, 0.02%)</title><rect x="975.4" y="1477" width="0.2" height="15.0" fill="rgb(205,213,29)" rx="2" ry="2" />
<text  x="978.39" y="1487.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_Optional_payload_base (3 samples, 0.06%)</title><rect x="796.7" y="1397" width="0.7" height="15.0" fill="rgb(228,190,9)" rx="2" ry="2" />
<text  x="799.74" y="1407.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="22.6" y="1477" width="0.2" height="15.0" fill="rgb(226,137,22)" rx="2" ry="2" />
<text  x="25.57" y="1487.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (15 samples, 0.28%)</title><rect x="422.4" y="1397" width="3.4" height="15.0" fill="rgb(241,193,44)" rx="2" ry="2" />
<text  x="425.45" y="1407.5" ></text>
</g>
<g >
<title>boost::dynamic_bitset&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::init_from_unsigned_long (2 samples, 0.04%)</title><rect x="72.6" y="1493" width="0.5" height="15.0" fill="rgb(213,53,34)" rx="2" ry="2" />
<text  x="75.64" y="1503.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="58.3" y="1397" width="0.2" height="15.0" fill="rgb(235,189,39)" rx="2" ry="2" />
<text  x="61.30" y="1407.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="331.4" y="1541" width="0.2" height="15.0" fill="rgb(249,140,24)" rx="2" ry="2" />
<text  x="334.36" y="1551.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (22 samples, 0.41%)</title><rect x="557.4" y="1557" width="4.9" height="15.0" fill="rgb(223,26,51)" rx="2" ry="2" />
<text  x="560.43" y="1567.5" ></text>
</g>
<g >
<title>std::apply&lt;flat_mutation_reader::impl::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (1 samples, 0.02%)</title><rect x="100.9" y="1429" width="0.2" height="15.0" fill="rgb(244,86,42)" rx="2" ry="2" />
<text  x="103.87" y="1439.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;query::result&gt;::operator= (1 samples, 0.02%)</title><rect x="705.4" y="1573" width="0.2" height="15.0" fill="rgb(215,29,54)" rx="2" ry="2" />
<text  x="708.43" y="1583.5" ></text>
</g>
<g >
<title>managed_bytes::external_memory_usage (2 samples, 0.04%)</title><rect x="519.9" y="1365" width="0.5" height="15.0" fill="rgb(254,5,49)" rx="2" ry="2" />
<text  x="522.94" y="1375.5" ></text>
</g>
<g >
<title>service::get_local_priority_manager (1 samples, 0.02%)</title><rect x="621.4" y="1589" width="0.2" height="15.0" fill="rgb(220,15,28)" rx="2" ry="2" />
<text  x="624.39" y="1599.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (1 samples, 0.02%)</title><rect x="22.6" y="1525" width="0.2" height="15.0" fill="rgb(208,191,42)" rx="2" ry="2" />
<text  x="25.57" y="1535.5" ></text>
</g>
<g >
<title>std::make_unique&lt;empty_flat_reader, seastar::lw_shared_ptr&lt;schema const&gt;, reader_permit&gt; (11 samples, 0.21%)</title><rect x="547.5" y="1429" width="2.4" height="15.0" fill="rgb(248,145,20)" rx="2" ry="2" />
<text  x="550.51" y="1439.5" ></text>
</g>
<g >
<title>basic_atomic_cell_view&lt; (15 samples, 0.28%)</title><rect x="378.6" y="1317" width="3.3" height="15.0" fill="rgb(229,181,48)" rx="2" ry="2" />
<text  x="381.56" y="1327.5" ></text>
</g>
<g >
<title>range_tombstone_list::~range_tombstone_list (1 samples, 0.02%)</title><rect x="584.8" y="1461" width="0.2" height="15.0" fill="rgb(215,23,54)" rx="2" ry="2" />
<text  x="587.78" y="1471.5" ></text>
</g>
<g >
<title>single_node_cql_env::do_with (1 samples, 0.02%)</title><rect x="78.8" y="1653" width="0.2" height="15.0" fill="rgb(251,47,43)" rx="2" ry="2" />
<text  x="81.81" y="1663.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::operator (6 samples, 0.11%)</title><rect x="184.5" y="1413" width="1.3" height="15.0" fill="rgb(230,3,49)" rx="2" ry="2" />
<text  x="187.46" y="1423.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::finally_body&lt;seastar::smp::submit_to&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (1 samples, 0.02%)</title><rect x="640.4" y="1637" width="0.2" height="15.0" fill="rgb(212,229,8)" rx="2" ry="2" />
<text  x="643.36" y="1647.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (1 samples, 0.02%)</title><rect x="1166.2" y="1589" width="0.2" height="15.0" fill="rgb(224,21,26)" rx="2" ry="2" />
<text  x="1169.18" y="1599.5" ></text>
</g>
<g >
<title>service::storage_proxy::sort_endpoints_by_proximity (8 samples, 0.15%)</title><rect x="1068.0" y="1477" width="1.8" height="15.0" fill="rgb(210,135,41)" rx="2" ry="2" />
<text  x="1071.03" y="1487.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.02%)</title><rect x="44.8" y="1445" width="0.3" height="15.0" fill="rgb(240,20,23)" rx="2" ry="2" />
<text  x="47.85" y="1455.5" ></text>
</g>
<g >
<title>ser::after_qr_cell__value&lt;bytes_ostream&gt;::skip_ttl (6 samples, 0.11%)</title><rect x="384.5" y="1317" width="1.3" height="15.0" fill="rgb(239,48,37)" rx="2" ry="2" />
<text  x="387.51" y="1327.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::key_is_in_relation (7 samples, 0.13%)</title><rect x="655.4" y="1605" width="1.5" height="15.0" fill="rgb(223,217,10)" rx="2" ry="2" />
<text  x="658.36" y="1615.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.02%)</title><rect x="819.0" y="1429" width="0.2" height="15.0" fill="rgb(245,171,8)" rx="2" ry="2" />
<text  x="822.02" y="1439.5" ></text>
</g>
<g >
<title>database::has_keyspace (18 samples, 0.34%)</title><rect x="815.9" y="1509" width="4.0" height="15.0" fill="rgb(214,140,15)" rx="2" ry="2" />
<text  x="818.93" y="1519.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_token (2 samples, 0.04%)</title><rect x="936.1" y="1509" width="0.5" height="15.0" fill="rgb(216,53,42)" rx="2" ry="2" />
<text  x="939.13" y="1519.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="153.6" y="1557" width="0.2" height="15.0" fill="rgb(216,31,26)" rx="2" ry="2" />
<text  x="156.59" y="1567.5" ></text>
</g>
<g >
<title>bplus::searcher&lt;dht::ring_position, long, dht::raw_token_less_comparator, 16ul,  (15 samples, 0.28%)</title><rect x="485.1" y="1429" width="3.3" height="15.0" fill="rgb(243,179,25)" rx="2" ry="2" />
<text  x="488.09" y="1439.5" ></text>
</g>
<g >
<title>bplus::tree&lt;long, intrusive_array&lt;cache_entry&gt;, dht::raw_token_less_comparator, 16ul,  (1 samples, 0.02%)</title><rect x="79.0" y="1557" width="0.3" height="15.0" fill="rgb(251,147,29)" rx="2" ry="2" />
<text  x="82.04" y="1567.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperation (82 samples, 1.53%)</title><rect x="39.6" y="1509" width="18.0" height="15.0" fill="rgb(248,200,5)" rx="2" ry="2" />
<text  x="42.56" y="1519.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::set&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt; (2 samples, 0.04%)</title><rect x="696.2" y="1589" width="0.4" height="15.0" fill="rgb(248,223,17)" rx="2" ry="2" />
<text  x="699.16" y="1599.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::clear (3 samples, 0.06%)</title><rect x="302.2" y="1429" width="0.7" height="15.0" fill="rgb(212,168,0)" rx="2" ry="2" />
<text  x="305.24" y="1439.5" ></text>
</g>
<g >
<title>double_decker&lt;long, memtable_entry, dht::raw_token_less_comparator, dht::ring_position_comparator, 16,  (3 samples, 0.06%)</title><rect x="1113.7" y="1365" width="0.6" height="15.0" fill="rgb(231,85,16)" rx="2" ry="2" />
<text  x="1116.69" y="1375.5" ></text>
</g>
<g >
<title>seastar::internal::future_base::set_coroutine (1 samples, 0.02%)</title><rect x="963.5" y="1509" width="0.2" height="15.0" fill="rgb(252,112,2)" rx="2" ry="2" />
<text  x="966.48" y="1519.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;, nonwrapping_interval&lt;managed_bytes&gt; &gt; (1 samples, 0.02%)</title><rect x="928.2" y="1557" width="0.2" height="15.0" fill="rgb(223,44,23)" rx="2" ry="2" />
<text  x="931.19" y="1567.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="581" width="0.3" height="15.0" fill="rgb(253,22,51)" rx="2" ry="2" />
<text  x="13.44" y="591.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (1 samples, 0.02%)</title><rect x="588.5" y="1509" width="0.3" height="15.0" fill="rgb(225,19,6)" rx="2" ry="2" />
<text  x="591.53" y="1519.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::operator (1 samples, 0.02%)</title><rect x="829.8" y="1525" width="0.2" height="15.0" fill="rgb(219,62,38)" rx="2" ry="2" />
<text  x="832.82" y="1535.5" ></text>
</g>
<g >
<title>locator::simple_snitch::get_datacenter (1 samples, 0.02%)</title><rect x="1119.9" y="1397" width="0.2" height="15.0" fill="rgb(211,200,52)" rx="2" ry="2" />
<text  x="1122.86" y="1407.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (1 samples, 0.02%)</title><rect x="296.5" y="1349" width="0.2" height="15.0" fill="rgb(233,91,0)" rx="2" ry="2" />
<text  x="299.51" y="1359.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="58.5" y="1413" width="0.2" height="15.0" fill="rgb(220,36,12)" rx="2" ry="2" />
<text  x="61.52" y="1423.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (2 samples, 0.04%)</title><rect x="787.5" y="1349" width="0.4" height="15.0" fill="rgb(220,168,14)" rx="2" ry="2" />
<text  x="790.48" y="1359.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::hasException (1 samples, 0.02%)</title><rect x="38.0" y="1509" width="0.2" height="15.0" fill="rgb(247,6,7)" rx="2" ry="2" />
<text  x="41.01" y="1519.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="1573" width="0.3" height="15.0" fill="rgb(248,121,34)" rx="2" ry="2" />
<text  x="13.44" y="1583.5" ></text>
</g>
<g >
<title>auth::get_permissions (112 samples, 2.09%)</title><rect x="777.8" y="1461" width="24.7" height="15.0" fill="rgb(229,3,17)" rx="2" ry="2" />
<text  x="780.77" y="1471.5" >a..</text>
</g>
<g >
<title>seastar::future&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::future (1 samples, 0.02%)</title><rect x="966.4" y="1493" width="0.2" height="15.0" fill="rgb(233,144,17)" rx="2" ry="2" />
<text  x="969.35" y="1503.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::get0 (1 samples, 0.02%)</title><rect x="338.2" y="1445" width="0.2" height="15.0" fill="rgb(230,66,16)" rx="2" ry="2" />
<text  x="341.19" y="1455.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::operator (631 samples, 11.79%)</title><rect x="173.0" y="1509" width="139.2" height="15.0" fill="rgb(220,106,12)" rx="2" ry="2" />
<text  x="175.99" y="1519.5" >mutation_fragment..</text>
</g>
<g >
<title>std::__detail::__variant::_Uninitialized&lt;cql3::expr::untyped_constant, false&gt;::_Uninitialized&lt;cql3::expr::untyped_constant&gt; (1 samples, 0.02%)</title><rect x="53.7" y="1077" width="0.2" height="15.0" fill="rgb(216,26,27)" rx="2" ry="2" />
<text  x="56.67" y="1087.5" ></text>
</g>
<g >
<title>seastar::future&lt;std::tuple&lt;std::optional&lt;clustering_key_prefix&gt; &gt; &gt;::then_impl&lt;query::querier&lt; (3 samples, 0.06%)</title><rect x="556.5" y="1573" width="0.7" height="15.0" fill="rgb(205,66,29)" rx="2" ry="2" />
<text  x="559.55" y="1583.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (2,376 samples, 44.41%)</title><rect x="110.8" y="1621" width="524.0" height="15.0" fill="rgb(226,16,7)" rx="2" ry="2" />
<text  x="113.80" y="1631.5" >seastar::noncopyable_function&lt;seastar::future&lt;void&gt; </text>
</g>
<g >
<title>database::find_keyspace (1 samples, 0.02%)</title><rect x="1126.5" y="1349" width="0.2" height="15.0" fill="rgb(233,173,28)" rx="2" ry="2" />
<text  x="1129.48" y="1359.5" ></text>
</g>
<g >
<title>schema::column_at (1 samples, 0.02%)</title><rect x="395.5" y="1349" width="0.3" height="15.0" fill="rgb(223,66,31)" rx="2" ry="2" />
<text  x="398.54" y="1359.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (2 samples, 0.04%)</title><rect x="261.9" y="1317" width="0.4" height="15.0" fill="rgb(254,60,16)" rx="2" ry="2" />
<text  x="264.88" y="1327.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_M_reset (1 samples, 0.02%)</title><rect x="783.3" y="1413" width="0.2" height="15.0" fill="rgb(226,17,28)" rx="2" ry="2" />
<text  x="786.29" y="1423.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (3 samples, 0.06%)</title><rect x="1009.8" y="1269" width="0.7" height="15.0" fill="rgb(229,185,26)" rx="2" ry="2" />
<text  x="1012.80" y="1279.5" ></text>
</g>
<g >
<title>ser::deletable_row_view::marker (1 samples, 0.02%)</title><rect x="1117.0" y="1397" width="0.2" height="15.0" fill="rgb(207,71,38)" rx="2" ry="2" />
<text  x="1119.99" y="1407.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="921.4" y="1477" width="0.2" height="15.0" fill="rgb(225,54,23)" rx="2" ry="2" />
<text  x="924.36" y="1487.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::free (1 samples, 0.02%)</title><rect x="1127.8" y="1333" width="0.2" height="15.0" fill="rgb(242,14,12)" rx="2" ry="2" />
<text  x="1130.80" y="1343.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.02%)</title><rect x="22.6" y="1397" width="0.2" height="15.0" fill="rgb(244,94,8)" rx="2" ry="2" />
<text  x="25.57" y="1407.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (3 samples, 0.06%)</title><rect x="447.8" y="1573" width="0.7" height="15.0" fill="rgb(206,209,37)" rx="2" ry="2" />
<text  x="450.81" y="1583.5" ></text>
</g>
<g >
<title>utils::config_file::named_value&lt;bool&gt;::the_value (2 samples, 0.04%)</title><rect x="1070.2" y="1493" width="0.5" height="15.0" fill="rgb(218,207,17)" rx="2" ry="2" />
<text  x="1073.24" y="1503.5" ></text>
</g>
<g >
<title>flat_mutation_reader::peek (2 samples, 0.04%)</title><rect x="100.4" y="1445" width="0.5" height="15.0" fill="rgb(237,86,25)" rx="2" ry="2" />
<text  x="103.43" y="1455.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::execute (1 samples, 0.02%)</title><rect x="820.3" y="1573" width="0.3" height="15.0" fill="rgb(247,102,45)" rx="2" ry="2" />
<text  x="823.34" y="1583.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.02%)</title><rect x="58.1" y="1365" width="0.2" height="15.0" fill="rgb(205,136,48)" rx="2" ry="2" />
<text  x="61.08" y="1375.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (208 samples, 3.89%)</title><rect x="19.5" y="1589" width="45.9" height="15.0" fill="rgb(225,196,48)" rx="2" ry="2" />
<text  x="22.48" y="1599.5" >cql3..</text>
</g>
<g >
<title>service::shared_mutation::apply_locally (3 samples, 0.06%)</title><rect x="1120.3" y="1381" width="0.7" height="15.0" fill="rgb(243,182,16)" rx="2" ry="2" />
<text  x="1123.30" y="1391.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_next (1 samples, 0.02%)</title><rect x="848.6" y="1589" width="0.2" height="15.0" fill="rgb(234,204,4)" rx="2" ry="2" />
<text  x="851.57" y="1599.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.02%)</title><rect x="215.8" y="1381" width="0.2" height="15.0" fill="rgb(217,215,35)" rx="2" ry="2" />
<text  x="218.78" y="1391.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;bytes_ostream::chunk, std::default_delete&lt;bytes_ostream::chunk&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="102.2" y="1525" width="0.2" height="15.0" fill="rgb(226,185,44)" rx="2" ry="2" />
<text  x="105.19" y="1535.5" ></text>
</g>
<g >
<title>[unknown] (6 samples, 0.11%)</title><rect x="10.4" y="1765" width="1.4" height="15.0" fill="rgb(251,187,23)" rx="2" ry="2" />
<text  x="13.44" y="1775.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::build_partition_keys (6 samples, 0.11%)</title><rect x="851.4" y="1541" width="1.4" height="15.0" fill="rgb(238,10,52)" rx="2" ry="2" />
<text  x="854.44" y="1551.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::get_static_row (5 samples, 0.09%)</title><rect x="296.1" y="1397" width="1.1" height="15.0" fill="rgb(249,206,31)" rx="2" ry="2" />
<text  x="299.07" y="1407.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (3 samples, 0.06%)</title><rect x="192.0" y="1381" width="0.6" height="15.0" fill="rgb(206,47,54)" rx="2" ry="2" />
<text  x="194.96" y="1391.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::find (3 samples, 0.06%)</title><rect x="940.1" y="1509" width="0.7" height="15.0" fill="rgb(233,87,26)" rx="2" ry="2" />
<text  x="943.10" y="1519.5" ></text>
</g>
<g >
<title>abstract_type::without_reversed (1 samples, 0.02%)</title><rect x="873.7" y="1557" width="0.2" height="15.0" fill="rgb(247,36,32)" rx="2" ry="2" />
<text  x="876.72" y="1567.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (2 samples, 0.04%)</title><rect x="50.4" y="1445" width="0.4" height="15.0" fill="rgb(224,114,43)" rx="2" ry="2" />
<text  x="53.36" y="1455.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.02%)</title><rect x="36.2" y="1365" width="0.3" height="15.0" fill="rgb(221,196,25)" rx="2" ry="2" />
<text  x="39.25" y="1375.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::push_back (1 samples, 0.02%)</title><rect x="40.0" y="1461" width="0.2" height="15.0" fill="rgb(226,43,38)" rx="2" ry="2" />
<text  x="43.00" y="1471.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="1148.3" y="1541" width="0.2" height="15.0" fill="rgb(229,174,25)" rx="2" ry="2" />
<text  x="1151.31" y="1551.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;std::function&lt;std::function&lt;partition_presence_checker_result  (3 samples, 0.06%)</title><rect x="633.3" y="1557" width="0.7" height="15.0" fill="rgb(232,5,7)" rx="2" ry="2" />
<text  x="636.30" y="1567.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::~unique_ptr (2 samples, 0.04%)</title><rect x="894.0" y="1477" width="0.4" height="15.0" fill="rgb(209,105,7)" rx="2" ry="2" />
<text  x="897.01" y="1487.5" ></text>
</g>
<g >
<title>cql3::restrictions::(anonymous namespace)::range_from_bytes (1 samples, 0.02%)</title><rect x="871.3" y="1573" width="0.2" height="15.0" fill="rgb(240,9,38)" rx="2" ry="2" />
<text  x="874.29" y="1583.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.02%)</title><rect x="79.7" y="1445" width="0.2" height="15.0" fill="rgb(227,207,26)" rx="2" ry="2" />
<text  x="82.70" y="1455.5" ></text>
</g>
<g >
<title>std::_Bvector_base&lt;std::allocator&lt;bool&gt; &gt;::~_Bvector_base (1 samples, 0.02%)</title><rect x="65.8" y="1589" width="0.2" height="15.0" fill="rgb(243,122,42)" rx="2" ry="2" />
<text  x="68.80" y="1599.5" ></text>
</g>
<g >
<title>utils::basic_ihistogram&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt; &gt;::mark&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; (7 samples, 0.13%)</title><rect x="682.0" y="1605" width="1.6" height="15.0" fill="rgb(213,81,30)" rx="2" ry="2" />
<text  x="685.05" y="1615.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (13 samples, 0.24%)</title><rect x="1097.1" y="1541" width="2.9" height="15.0" fill="rgb(241,65,31)" rx="2" ry="2" />
<text  x="1100.14" y="1551.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (2 samples, 0.04%)</title><rect x="92.7" y="1589" width="0.5" height="15.0" fill="rgb(221,105,2)" rx="2" ry="2" />
<text  x="95.71" y="1599.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (1 samples, 0.02%)</title><rect x="741.8" y="1493" width="0.2" height="15.0" fill="rgb(209,51,54)" rx="2" ry="2" />
<text  x="744.82" y="1503.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::~__si_class_type_info (15 samples, 0.28%)</title><rect x="11.8" y="1765" width="3.3" height="15.0" fill="rgb(226,30,41)" rx="2" ry="2" />
<text  x="14.76" y="1775.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="1040.9" y="1477" width="0.2" height="15.0" fill="rgb(253,60,45)" rx="2" ry="2" />
<text  x="1043.90" y="1487.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::result_set, std::default_delete&lt;cql3::result_set&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="661.3" y="1589" width="0.2" height="15.0" fill="rgb(210,9,18)" rx="2" ry="2" />
<text  x="664.32" y="1599.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;::basic_sstring (2 samples, 0.04%)</title><rect x="844.2" y="1557" width="0.4" height="15.0" fill="rgb(216,3,48)" rx="2" ry="2" />
<text  x="847.16" y="1567.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="529.9" y="1445" width="0.2" height="15.0" fill="rgb(241,137,6)" rx="2" ry="2" />
<text  x="532.86" y="1455.5" ></text>
</g>
<g >
<title>compound_type&lt; (1 samples, 0.02%)</title><rect x="101.5" y="1541" width="0.3" height="15.0" fill="rgb(217,102,38)" rx="2" ry="2" />
<text  x="104.53" y="1551.5" ></text>
</g>
<g >
<title>cql3::raw_value_view::with_value&lt;cql3::update_parameters::make_cell (1 samples, 0.02%)</title><rect x="853.2" y="1429" width="0.2" height="15.0" fill="rgb(240,167,28)" rx="2" ry="2" />
<text  x="856.20" y="1439.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.02%)</title><rect x="22.6" y="1365" width="0.2" height="15.0" fill="rgb(211,40,30)" rx="2" ry="2" />
<text  x="25.57" y="1375.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::on_new_range (60 samples, 1.12%)</title><rect x="281.5" y="1413" width="13.2" height="15.0" fill="rgb(224,38,35)" rx="2" ry="2" />
<text  x="284.51" y="1423.5" ></text>
</g>
<g >
<title>antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;::get_currentLine (1 samples, 0.02%)</title><rect x="27.4" y="1413" width="0.2" height="15.0" fill="rgb(225,172,15)" rx="2" ry="2" />
<text  x="30.42" y="1423.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (1 samples, 0.02%)</title><rect x="193.1" y="1413" width="0.2" height="15.0" fill="rgb(216,2,10)" rx="2" ry="2" />
<text  x="196.07" y="1423.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::restrictions::has_eq_null (3 samples, 0.06%)</title><rect x="849.9" y="1493" width="0.7" height="15.0" fill="rgb(253,37,46)" rx="2" ry="2" />
<text  x="852.90" y="1503.5" ></text>
</g>
<g >
<title>antlr3::IntStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::_LA (1 samples, 0.02%)</title><rect x="31.6" y="1397" width="0.2" height="15.0" fill="rgb(237,1,36)" rx="2" ry="2" />
<text  x="34.61" y="1407.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="1397" width="0.3" height="15.0" fill="rgb(250,134,3)" rx="2" ry="2" />
<text  x="13.44" y="1407.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, enum_set&lt;super_enum&lt;auth::permission,  (59 samples, 1.10%)</title><rect x="783.7" y="1397" width="13.0" height="15.0" fill="rgb(230,195,51)" rx="2" ry="2" />
<text  x="786.73" y="1407.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.02%)</title><rect x="1130.0" y="1381" width="0.2" height="15.0" fill="rgb(232,120,44)" rx="2" ry="2" />
<text  x="1133.01" y="1391.5" ></text>
</g>
<g >
<title>boost::algorithm::any_of&lt;std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;, std::_Bind_front&lt;bool  (4 samples, 0.07%)</title><rect x="849.9" y="1525" width="0.9" height="15.0" fill="rgb(223,95,18)" rx="2" ry="2" />
<text  x="852.90" y="1535.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_default_append (2 samples, 0.04%)</title><rect x="72.6" y="1477" width="0.5" height="15.0" fill="rgb(224,105,42)" rx="2" ry="2" />
<text  x="75.64" y="1487.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (6 samples, 0.11%)</title><rect x="493.2" y="1349" width="1.4" height="15.0" fill="rgb(248,135,34)" rx="2" ry="2" />
<text  x="496.25" y="1359.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::splice (2 samples, 0.04%)</title><rect x="188.0" y="1397" width="0.4" height="15.0" fill="rgb(225,190,5)" rx="2" ry="2" />
<text  x="190.99" y="1407.5" ></text>
</g>
<g >
<title>absl::hash_internal::HashState::combine_contiguous (4 samples, 0.07%)</title><rect x="1039.6" y="1413" width="0.9" height="15.0" fill="rgb(240,51,27)" rx="2" ry="2" />
<text  x="1042.58" y="1423.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (1 samples, 0.02%)</title><rect x="100.4" y="1093" width="0.3" height="15.0" fill="rgb(249,93,39)" rx="2" ry="2" />
<text  x="103.43" y="1103.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::_S_construct&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; const&amp;&gt; (1 samples, 0.02%)</title><rect x="46.8" y="1397" width="0.3" height="15.0" fill="rgb(213,18,35)" rx="2" ry="2" />
<text  x="49.83" y="1407.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (1 samples, 0.02%)</title><rect x="925.3" y="1557" width="0.2" height="15.0" fill="rgb(238,7,24)" rx="2" ry="2" />
<text  x="928.33" y="1567.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE8scheduleINS_8internal22promise_base_with_typeIvEEZNS6_14discard_resultEvEUlDpOT_E_ZNS6_14then_impl_nrvoISE_NS0_IvEEEET0_OT_EUlOSA_RSE_ONS_12future_stateIS5_EEE_EEvSJ_OSH_OT1_ (1 samples, 0.02%)</title><rect x="721.5" y="1605" width="0.2" height="15.0" fill="rgb(254,33,46)" rx="2" ry="2" />
<text  x="724.53" y="1615.5" ></text>
</g>
<g >
<title>mutation_reader_merger::close (96 samples, 1.79%)</title><rect x="566.5" y="1525" width="21.1" height="15.0" fill="rgb(252,86,8)" rx="2" ry="2" />
<text  x="569.47" y="1535.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.07%)</title><rect x="1148.5" y="1589" width="0.9" height="15.0" fill="rgb(217,64,47)" rx="2" ry="2" />
<text  x="1151.53" y="1599.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*&gt; &gt;::~deque (2 samples, 0.04%)</title><rect x="21.7" y="1509" width="0.4" height="15.0" fill="rgb(241,103,29)" rx="2" ry="2" />
<text  x="24.69" y="1519.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::insertToken (9 samples, 0.17%)</title><rect x="23.2" y="1445" width="2.0" height="15.0" fill="rgb(251,114,46)" rx="2" ry="2" />
<text  x="26.23" y="1455.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (1 samples, 0.02%)</title><rect x="1013.8" y="1381" width="0.2" height="15.0" fill="rgb(248,137,32)" rx="2" ry="2" />
<text  x="1016.77" y="1391.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;enum_set&lt;super_enum&lt;auth::permission,  (1 samples, 0.02%)</title><rect x="783.1" y="1413" width="0.2" height="15.0" fill="rgb(216,7,21)" rx="2" ry="2" />
<text  x="786.07" y="1423.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (1 samples, 0.02%)</title><rect x="100.9" y="1029" width="0.2" height="15.0" fill="rgb(241,74,51)" rx="2" ry="2" />
<text  x="103.87" y="1039.5" ></text>
</g>
<g >
<title>multishard_combining_reader::handle_empty_reader_buffer (1 samples, 0.02%)</title><rect x="100.9" y="1365" width="0.2" height="15.0" fill="rgb(235,211,30)" rx="2" ry="2" />
<text  x="103.87" y="1375.5" ></text>
</g>
<g >
<title>schema::get_partitioner (1 samples, 0.02%)</title><rect x="922.9" y="1541" width="0.2" height="15.0" fill="rgb(229,136,53)" rx="2" ry="2" />
<text  x="925.90" y="1551.5" ></text>
</g>
<g >
<title>std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;std::optional&lt;auth::resource&gt; &gt;, seastar::future&lt;bool&gt; &gt; &gt;::operator (5 samples, 0.09%)</title><rect x="803.4" y="1461" width="1.1" height="15.0" fill="rgb(248,41,45)" rx="2" ry="2" />
<text  x="806.36" y="1471.5" ></text>
</g>
<g >
<title>std::hash&lt;auth::resource&gt;::operator (9 samples, 0.17%)</title><rect x="805.6" y="1493" width="1.9" height="15.0" fill="rgb(207,1,30)" rx="2" ry="2" />
<text  x="808.56" y="1503.5" ></text>
</g>
<g >
<title>managed_bytes::external_memory_usage (1 samples, 0.02%)</title><rect x="260.1" y="1269" width="0.2" height="15.0" fill="rgb(225,80,30)" rx="2" ry="2" />
<text  x="263.12" y="1279.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_read_executor (192 samples, 3.59%)</title><rect x="1029.0" y="1509" width="42.3" height="15.0" fill="rgb(253,140,24)" rx="2" ry="2" />
<text  x="1031.99" y="1519.5" >ser..</text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::move_it (1 samples, 0.02%)</title><rect x="664.4" y="1637" width="0.2" height="15.0" fill="rgb(253,182,18)" rx="2" ry="2" />
<text  x="667.40" y="1647.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::bool_class&lt;mutation_reader_merger::needs_merge_tag&gt; &gt;::take_value (2 samples, 0.04%)</title><rect x="181.4" y="1413" width="0.4" height="15.0" fill="rgb(238,117,39)" rx="2" ry="2" />
<text  x="184.38" y="1423.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.04%)</title><rect x="46.4" y="1413" width="0.4" height="15.0" fill="rgb(236,124,24)" rx="2" ry="2" />
<text  x="49.39" y="1423.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.02%)</title><rect x="1020.6" y="1413" width="0.2" height="15.0" fill="rgb(227,125,17)" rx="2" ry="2" />
<text  x="1023.61" y="1423.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;position_in_partition&gt;::_M_reset (1 samples, 0.02%)</title><rect x="280.4" y="1397" width="0.2" height="15.0" fill="rgb(219,38,0)" rx="2" ry="2" />
<text  x="283.41" y="1407.5" ></text>
</g>
<g >
<title>mutation_partition::upper_bound (1 samples, 0.02%)</title><rect x="285.3" y="1349" width="0.2" height="15.0" fill="rgb(240,28,45)" rx="2" ry="2" />
<text  x="288.26" y="1359.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (4 samples, 0.07%)</title><rect x="1157.6" y="1621" width="0.9" height="15.0" fill="rgb(213,165,21)" rx="2" ry="2" />
<text  x="1160.58" y="1631.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.02%)</title><rect x="59.2" y="1397" width="0.2" height="15.0" fill="rgb(217,182,14)" rx="2" ry="2" />
<text  x="62.19" y="1407.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, seastar::future&lt;void&gt;, seastar::future&lt;void&gt;, seastar::future&lt;void&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="79.0" y="1717" width="0.3" height="15.0" fill="rgb(210,118,45)" rx="2" ry="2" />
<text  x="82.04" y="1727.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, cql3::statements::revoke_statement*, std::default_delete&lt;cql3::statements::revoke_statement&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="64.0" y="1461" width="0.3" height="15.0" fill="rgb(225,97,8)" rx="2" ry="2" />
<text  x="67.04" y="1471.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.04%)</title><rect x="830.0" y="1557" width="0.5" height="15.0" fill="rgb(209,127,7)" rx="2" ry="2" />
<text  x="833.04" y="1567.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::maybe_drop_from (1 samples, 0.02%)</title><rect x="358.0" y="1365" width="0.3" height="15.0" fill="rgb(228,9,36)" rx="2" ry="2" />
<text  x="361.04" y="1375.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="54.1" y="1413" width="0.2" height="15.0" fill="rgb(221,1,42)" rx="2" ry="2" />
<text  x="57.11" y="1423.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::lw_shared_ptr&lt;schema const&gt;  (1 samples, 0.02%)</title><rect x="100.2" y="1605" width="0.2" height="15.0" fill="rgb(253,212,31)" rx="2" ry="2" />
<text  x="103.21" y="1615.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;cql3::restrictions::statement_restrictions, false&gt;::make&lt;database&amp;, seastar::lw_shared_ptr&lt;schema const&gt;&amp;, cql3::statements::statement_type const&amp;, std::vector&lt;seastar::shared_ptr&lt;cql3::relation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::relation&gt; &gt; &gt;, cql3::prepare_context&amp;, bool, bool&amp;, bool&amp;&gt; (1 samples, 0.02%)</title><rect x="10.4" y="165" width="0.3" height="15.0" fill="rgb(246,161,8)" rx="2" ry="2" />
<text  x="13.44" y="175.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (6 samples, 0.11%)</title><rect x="424.4" y="1381" width="1.4" height="15.0" fill="rgb(242,67,25)" rx="2" ry="2" />
<text  x="427.43" y="1391.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;gms::inet_address, gms::inet_address, std::allocator&lt;gms::inet_address&gt;, std::__detail::_Identity, std::equal_to&lt;gms::inet_address&gt;, std::hash&lt;gms::inet_address&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert&lt;gms::inet_address const&amp;, std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;gms::inet_address, false&gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="102.6" y="1605" width="0.3" height="15.0" fill="rgb(254,173,26)" rx="2" ry="2" />
<text  x="105.64" y="1615.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.02%)</title><rect x="127.8" y="1541" width="0.2" height="15.0" fill="rgb(245,178,45)" rx="2" ry="2" />
<text  x="130.78" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.02%)</title><rect x="854.3" y="1397" width="0.2" height="15.0" fill="rgb(242,99,14)" rx="2" ry="2" />
<text  x="857.31" y="1407.5" ></text>
</g>
<g >
<title>partition_key_view::legacy_form (2 samples, 0.04%)</title><rect x="909.0" y="1525" width="0.4" height="15.0" fill="rgb(229,8,18)" rx="2" ry="2" />
<text  x="912.01" y="1535.5" ></text>
</g>
<g >
<title>std::pair&lt;auth::role_or_anonymous, auth::resource&gt;::pair&lt;auth::role_or_anonymous, auth::resource, true&gt; (1 samples, 0.02%)</title><rect x="76.4" y="1493" width="0.2" height="15.0" fill="rgb(253,79,28)" rx="2" ry="2" />
<text  x="79.39" y="1503.5" ></text>
</g>
<g >
<title>utils::array_search_gt (1 samples, 0.02%)</title><rect x="542.0" y="1429" width="0.2" height="15.0" fill="rgb(251,87,38)" rx="2" ry="2" />
<text  x="544.99" y="1439.5" ></text>
</g>
<g >
<title>reader_permit::consume_memory (1 samples, 0.02%)</title><rect x="523.2" y="1365" width="0.3" height="15.0" fill="rgb(237,51,8)" rx="2" ry="2" />
<text  x="526.24" y="1375.5" ></text>
</g>
<g >
<title>sstables::column_translation::state::build (1 samples, 0.02%)</title><rect x="1130.0" y="965" width="0.2" height="15.0" fill="rgb(237,52,8)" rx="2" ry="2" />
<text  x="1133.01" y="975.5" ></text>
</g>
<g >
<title>boost::iterators::filter_iterator&lt;mutation_partition::non_dummy_rows (1 samples, 0.02%)</title><rect x="1122.5" y="1317" width="0.2" height="15.0" fill="rgb(246,158,11)" rx="2" ry="2" />
<text  x="1125.51" y="1327.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnFamilyName (1 samples, 0.02%)</title><rect x="39.3" y="1509" width="0.3" height="15.0" fill="rgb(229,152,20)" rx="2" ry="2" />
<text  x="42.33" y="1519.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (1 samples, 0.02%)</title><rect x="1073.3" y="1525" width="0.2" height="15.0" fill="rgb(233,117,5)" rx="2" ry="2" />
<text  x="1076.32" y="1535.5" ></text>
</g>
<g >
<title>seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::expand (1 samples, 0.02%)</title><rect x="527.0" y="1397" width="0.2" height="15.0" fill="rgb(241,183,37)" rx="2" ry="2" />
<text  x="529.99" y="1407.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;schema const&gt;::operator= (1 samples, 0.02%)</title><rect x="990.4" y="1413" width="0.2" height="15.0" fill="rgb(229,49,19)" rx="2" ry="2" />
<text  x="993.39" y="1423.5" ></text>
</g>
<g >
<title>seastar::promise&lt;void&gt;::promise (5 samples, 0.09%)</title><rect x="1003.8" y="1333" width="1.1" height="15.0" fill="rgb(224,183,50)" rx="2" ry="2" />
<text  x="1006.85" y="1343.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::local (1 samples, 0.02%)</title><rect x="1106.4" y="1557" width="0.2" height="15.0" fill="rgb(246,62,33)" rx="2" ry="2" />
<text  x="1109.41" y="1567.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="649.2" y="1573" width="0.2" height="15.0" fill="rgb(215,78,2)" rx="2" ry="2" />
<text  x="652.19" y="1583.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::pop_back (1 samples, 0.02%)</title><rect x="39.8" y="1477" width="0.2" height="15.0" fill="rgb(215,119,17)" rx="2" ry="2" />
<text  x="42.78" y="1487.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (24 samples, 0.45%)</title><rect x="1112.6" y="1541" width="5.3" height="15.0" fill="rgb(244,164,28)" rx="2" ry="2" />
<text  x="1115.58" y="1551.5" ></text>
</g>
<g >
<title>cql3::constants::marker::to_expression (6 samples, 0.11%)</title><rect x="876.1" y="1493" width="1.4" height="15.0" fill="rgb(209,126,38)" rx="2" ry="2" />
<text  x="879.14" y="1503.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::untyped_constant&gt; (4 samples, 0.07%)</title><rect x="53.2" y="1413" width="0.9" height="15.0" fill="rgb(249,63,22)" rx="2" ry="2" />
<text  x="56.23" y="1423.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (4 samples, 0.07%)</title><rect x="687.8" y="1589" width="0.9" height="15.0" fill="rgb(249,143,30)" rx="2" ry="2" />
<text  x="690.78" y="1599.5" ></text>
</g>
<g >
<title>nonwrapping_interval&lt;dht::ring_position&gt;::nonwrapping_interval (11 samples, 0.21%)</title><rect x="916.3" y="1525" width="2.4" height="15.0" fill="rgb(227,147,32)" rx="2" ry="2" />
<text  x="919.28" y="1535.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;boost::range_detail::integer_iterator&lt;unsigned int&gt;, std::function&lt;seastar::future&lt;void&gt;  (1 samples, 0.02%)</title><rect x="78.8" y="1509" width="0.2" height="15.0" fill="rgb(246,129,14)" rx="2" ry="2" />
<text  x="81.81" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (2 samples, 0.04%)</title><rect x="927.8" y="1557" width="0.4" height="15.0" fill="rgb(222,55,9)" rx="2" ry="2" />
<text  x="930.75" y="1567.5" ></text>
</g>
<g >
<title>seastar::promise&lt;void&gt;::promise (4 samples, 0.07%)</title><rect x="1010.7" y="1317" width="0.9" height="15.0" fill="rgb(218,194,42)" rx="2" ry="2" />
<text  x="1013.68" y="1327.5" ></text>
</g>
<g >
<title>database::update_write_metrics&lt;seastar::future&lt;void&gt; &gt; (1 samples, 0.02%)</title><rect x="1120.7" y="1301" width="0.3" height="15.0" fill="rgb(210,153,6)" rx="2" ry="2" />
<text  x="1123.74" y="1311.5" ></text>
</g>
<g >
<title>ser::serializer&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;::write_fragmented&lt;bytes_ostream, fragment_range&lt;managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="367.7" y="1333" width="0.3" height="15.0" fill="rgb(239,224,27)" rx="2" ry="2" />
<text  x="370.75" y="1343.5" ></text>
</g>
<g >
<title>seastar::promise&lt;void&gt;::promise (5 samples, 0.09%)</title><rect x="128.0" y="1541" width="1.1" height="15.0" fill="rgb(241,56,17)" rx="2" ry="2" />
<text  x="131.00" y="1551.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::deallocate (4 samples, 0.07%)</title><rect x="575.3" y="1445" width="0.9" height="15.0" fill="rgb(208,32,20)" rx="2" ry="2" />
<text  x="578.30" y="1455.5" ></text>
</g>
<g >
<title>evictable_reader::fill_buffer (1 samples, 0.02%)</title><rect x="100.4" y="1365" width="0.3" height="15.0" fill="rgb(208,72,54)" rx="2" ry="2" />
<text  x="103.43" y="1375.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (1 samples, 0.02%)</title><rect x="1027.2" y="1445" width="0.2" height="15.0" fill="rgb(250,23,25)" rx="2" ry="2" />
<text  x="1030.23" y="1455.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::~partition_snapshot_flat_reader (39 samples, 0.73%)</title><rect x="576.2" y="1461" width="8.6" height="15.0" fill="rgb(225,226,28)" rx="2" ry="2" />
<text  x="579.18" y="1471.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::clear (1 samples, 0.02%)</title><rect x="647.6" y="1637" width="0.3" height="15.0" fill="rgb(218,183,22)" rx="2" ry="2" />
<text  x="650.64" y="1647.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume_in_thread&lt;stable_flattened_mutations_consumer&lt;compact_for_compaction&lt;sstables::compacting_sstable_writer, noop_compacted_fragments_consumer&gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="17.5" y="1701" width="0.2" height="15.0" fill="rgb(228,149,23)" rx="2" ry="2" />
<text  x="20.50" y="1711.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (4 samples, 0.07%)</title><rect x="338.4" y="1429" width="0.9" height="15.0" fill="rgb(253,179,10)" rx="2" ry="2" />
<text  x="341.41" y="1439.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (2 samples, 0.04%)</title><rect x="38.2" y="1381" width="0.5" height="15.0" fill="rgb(206,195,26)" rx="2" ry="2" />
<text  x="41.23" y="1391.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (1,134 samples, 21.20%)</title><rect x="861.8" y="1621" width="250.1" height="15.0" fill="rgb(214,24,37)" rx="2" ry="2" />
<text  x="864.81" y="1631.5" >seastar::noncopyable_function&lt;sea..</text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (3 samples, 0.06%)</title><rect x="620.7" y="1589" width="0.7" height="15.0" fill="rgb(222,87,24)" rx="2" ry="2" />
<text  x="623.73" y="1599.5" ></text>
</g>
<g >
<title>cql3::restrictions::partition_key_restrictions::needs_filtering (16 samples, 0.30%)</title><rect x="933.3" y="1557" width="3.5" height="15.0" fill="rgb(236,118,4)" rx="2" ry="2" />
<text  x="936.27" y="1567.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_M_reset (2 samples, 0.04%)</title><rect x="93.8" y="1605" width="0.5" height="15.0" fill="rgb(246,164,32)" rx="2" ry="2" />
<text  x="96.81" y="1615.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (2 samples, 0.04%)</title><rect x="45.3" y="1365" width="0.4" height="15.0" fill="rgb(217,181,33)" rx="2" ry="2" />
<text  x="48.29" y="1375.5" ></text>
</g>
<g >
<title>service::abstract_write_response_handler::~abstract_write_response_handler (2 samples, 0.04%)</title><rect x="691.3" y="1621" width="0.5" height="15.0" fill="rgb(248,54,19)" rx="2" ry="2" />
<text  x="694.31" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.02%)</title><rect x="357.8" y="1301" width="0.2" height="15.0" fill="rgb(206,111,35)" rx="2" ry="2" />
<text  x="360.82" y="1311.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::value_ptr&gt;::future_state&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry_ptr&gt; (10 samples, 0.19%)</title><rect x="738.1" y="1477" width="2.2" height="15.0" fill="rgb(223,192,42)" rx="2" ry="2" />
<text  x="741.07" y="1487.5" ></text>
</g>
<g >
<title>row_cache::do_update (1 samples, 0.02%)</title><rect x="690.9" y="1525" width="0.2" height="15.0" fill="rgb(254,0,23)" rx="2" ry="2" />
<text  x="693.87" y="1535.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="1669" width="0.3" height="15.0" fill="rgb(239,154,3)" rx="2" ry="2" />
<text  x="13.44" y="1679.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::then_wrapped_nrvo&lt;void, service::abstract_read_executor::make_data_requests (13 samples, 0.24%)</title><rect x="977.6" y="1445" width="2.9" height="15.0" fill="rgb(211,173,49)" rx="2" ry="2" />
<text  x="980.60" y="1455.5" ></text>
</g>
<g >
<title>std::apply&lt;auth::get_permissions (4 samples, 0.07%)</title><rect x="75.7" y="1509" width="0.9" height="15.0" fill="rgb(220,128,31)" rx="2" ry="2" />
<text  x="78.73" y="1519.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="564.0" y="1573" width="0.3" height="15.0" fill="rgb(243,98,22)" rx="2" ry="2" />
<text  x="567.05" y="1583.5" ></text>
</g>
<g >
<title>utils::config_file::named_value&lt;unsigned long&gt;::the_value (1 samples, 0.02%)</title><rect x="1106.6" y="1557" width="0.2" height="15.0" fill="rgb(237,75,7)" rx="2" ry="2" />
<text  x="1109.63" y="1567.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::tombstone_for_row (3 samples, 0.06%)</title><rect x="399.7" y="1365" width="0.7" height="15.0" fill="rgb(236,153,18)" rx="2" ry="2" />
<text  x="402.73" y="1375.5" ></text>
</g>
<g >
<title>service::storage_proxy::sort_endpoints_by_proximity (1 samples, 0.02%)</title><rect x="1069.8" y="1493" width="0.2" height="15.0" fill="rgb(209,174,12)" rx="2" ry="2" />
<text  x="1072.79" y="1503.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value_view, std::allocator&lt;cql3::raw_value_view&gt; &gt;::_M_realloc_insert&lt;cql3::raw_value_view&gt; (7 samples, 0.13%)</title><rect x="837.8" y="1525" width="1.5" height="15.0" fill="rgb(205,7,15)" rx="2" ry="2" />
<text  x="840.76" y="1535.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;mutation_querier, false, false&gt;::_Optional_base (1 samples, 0.02%)</title><rect x="447.6" y="1557" width="0.2" height="15.0" fill="rgb(244,4,38)" rx="2" ry="2" />
<text  x="450.59" y="1567.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (1 samples, 0.02%)</title><rect x="78.8" y="1621" width="0.2" height="15.0" fill="rgb(252,99,28)" rx="2" ry="2" />
<text  x="81.81" y="1631.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; const, column_definition const*&gt;, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; const, column_definition const*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;, std::hash&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (2 samples, 0.04%)</title><rect x="73.1" y="1573" width="0.4" height="15.0" fill="rgb(247,187,44)" rx="2" ry="2" />
<text  x="76.08" y="1583.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::with_ready_permit (1 samples, 0.02%)</title><rect x="1013.1" y="1365" width="0.2" height="15.0" fill="rgb(235,222,52)" rx="2" ry="2" />
<text  x="1016.11" y="1375.5" ></text>
</g>
<g >
<title>std::_Optional_base_impl&lt;query::querier&lt; (4 samples, 0.07%)</title><rect x="629.1" y="1573" width="0.9" height="15.0" fill="rgb(212,23,13)" rx="2" ry="2" />
<text  x="632.11" y="1583.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (6 samples, 0.11%)</title><rect x="1071.8" y="1509" width="1.3" height="15.0" fill="rgb(212,39,52)" rx="2" ry="2" />
<text  x="1074.78" y="1519.5" ></text>
</g>
<g >
<title>memtable::apply (19 samples, 0.36%)</title><rect x="1113.0" y="1413" width="4.2" height="15.0" fill="rgb(205,28,33)" rx="2" ry="2" />
<text  x="1116.02" y="1423.5" ></text>
</g>
<g >
<title>db::marshal::type_parser::read_next_identifier (1 samples, 0.02%)</title><rect x="1130.0" y="917" width="0.2" height="15.0" fill="rgb(221,117,23)" rx="2" ry="2" />
<text  x="1133.01" y="927.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::move_it (5 samples, 0.09%)</title><rect x="687.6" y="1621" width="1.1" height="15.0" fill="rgb(233,150,22)" rx="2" ry="2" />
<text  x="690.56" y="1631.5" ></text>
</g>
<g >
<title>operator new (6 samples, 0.11%)</title><rect x="560.7" y="1493" width="1.4" height="15.0" fill="rgb(220,216,18)" rx="2" ry="2" />
<text  x="563.74" y="1503.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;bytes_ostream::chunk, std::default_delete&lt;bytes_ostream::chunk&gt; &gt;::~unique_ptr (2 samples, 0.04%)</title><rect x="630.0" y="1589" width="0.4" height="15.0" fill="rgb(241,18,54)" rx="2" ry="2" />
<text  x="633.00" y="1599.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="897.1" y="1493" width="0.2" height="15.0" fill="rgb(218,218,38)" rx="2" ry="2" />
<text  x="900.10" y="1503.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::query_options, std::default_delete&lt;cql3::query_options&gt; &gt;::~unique_ptr (2 samples, 0.04%)</title><rect x="842.4" y="1621" width="0.4" height="15.0" fill="rgb(253,167,17)" rx="2" ry="2" />
<text  x="845.40" y="1631.5" ></text>
</g>
<g >
<title>mutation_querier::query_static_row (1 samples, 0.02%)</title><rect x="365.3" y="1317" width="0.2" height="15.0" fill="rgb(245,83,30)" rx="2" ry="2" />
<text  x="368.32" y="1327.5" ></text>
</g>
<g >
<title>TLS init function for bound_view::_empty_prefix (2 samples, 0.04%)</title><rect x="288.6" y="1317" width="0.4" height="15.0" fill="rgb(238,70,17)" rx="2" ry="2" />
<text  x="291.57" y="1327.5" ></text>
</g>
<g >
<title>sstables::compaction_descriptor::compaction_descriptor (1 samples, 0.02%)</title><rect x="15.5" y="1605" width="0.2" height="15.0" fill="rgb(241,192,54)" rx="2" ry="2" />
<text  x="18.51" y="1615.5" ></text>
</g>
<g >
<title>bytes_ostream::alloc_new (5 samples, 0.09%)</title><rect x="611.0" y="1541" width="1.1" height="15.0" fill="rgb(237,41,53)" rx="2" ry="2" />
<text  x="614.03" y="1551.5" ></text>
</g>
<g >
<title>bound_view::tri_compare::operator (1 samples, 0.02%)</title><rect x="11.1" y="1589" width="0.2" height="15.0" fill="rgb(231,73,31)" rx="2" ry="2" />
<text  x="14.10" y="1599.5" ></text>
</g>
<g >
<title>write_cell&lt;ser::qr_clustered_row__cells__cells&lt;bytes_ostream&gt; &gt; (121 samples, 2.26%)</title><rect x="368.9" y="1333" width="26.6" height="15.0" fill="rgb(216,128,53)" rx="2" ry="2" />
<text  x="371.85" y="1343.5" >w..</text>
</g>
<g >
<title>std::_Hashtable&lt;gms::inet_address, std::pair&lt;gms::inet_address const, table::cache_hit_rate&gt;, std::allocator&lt;std::pair&lt;gms::inet_address const, table::cache_hit_rate&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;gms::inet_address&gt;, std::hash&lt;gms::inet_address&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (2 samples, 0.04%)</title><rect x="710.7" y="1573" width="0.5" height="15.0" fill="rgb(245,73,15)" rx="2" ry="2" />
<text  x="713.72" y="1583.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.04%)</title><rect x="675.4" y="1621" width="0.5" height="15.0" fill="rgb(216,39,50)" rx="2" ry="2" />
<text  x="678.43" y="1631.5" ></text>
</g>
<g >
<title>seastar::memory::stats (2 samples, 0.04%)</title><rect x="535.2" y="1477" width="0.4" height="15.0" fill="rgb(237,146,0)" rx="2" ry="2" />
<text  x="538.16" y="1487.5" ></text>
</g>
<g >
<title>_ZN7seastar12continuationINS_8internal22promise_base_with_typeIvEEZNS_6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE14discard_resultEvEUlDpOT_E_ZNSA_14then_impl_nrvoISE_NS4_IvEEEET0_OT_EUlOS3_RSE_ONS_12future_stateIS9_EEE_S9_E15run_and_disposeEv (40 samples, 0.75%)</title><rect x="86.8" y="1653" width="8.8" height="15.0" fill="rgb(237,145,0)" rx="2" ry="2" />
<text  x="89.76" y="1663.5" ></text>
</g>
<g >
<title>read_simple&lt;unsigned short, managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="906.1" y="1509" width="0.3" height="15.0" fill="rgb(208,31,50)" rx="2" ry="2" />
<text  x="909.14" y="1519.5" ></text>
</g>
<g >
<title>mutation_partition::~mutation_partition (1 samples, 0.02%)</title><rect x="1114.6" y="1397" width="0.2" height="15.0" fill="rgb(225,153,6)" rx="2" ry="2" />
<text  x="1117.57" y="1407.5" ></text>
</g>
<g >
<title>operator new (14 samples, 0.26%)</title><rect x="211.4" y="1365" width="3.1" height="15.0" fill="rgb(219,226,53)" rx="2" ry="2" />
<text  x="214.37" y="1375.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (1 samples, 0.02%)</title><rect x="58.1" y="1429" width="0.2" height="15.0" fill="rgb(244,102,39)" rx="2" ry="2" />
<text  x="61.08" y="1439.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, unsigned int, std::_Identity&lt;unsigned int&gt;, std::less&lt;unsigned int&gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;unsigned int&gt; &gt;::end (1 samples, 0.02%)</title><rect x="35.1" y="1461" width="0.3" height="15.0" fill="rgb(251,25,21)" rx="2" ry="2" />
<text  x="38.14" y="1471.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="597" width="0.3" height="15.0" fill="rgb(242,70,14)" rx="2" ry="2" />
<text  x="13.44" y="607.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_last_fragment_kind, 4ul&gt;::~small_vector (2 samples, 0.04%)</title><rect x="472.5" y="1461" width="0.5" height="15.0" fill="rgb(236,192,13)" rx="2" ry="2" />
<text  x="475.52" y="1471.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::~holder (1 samples, 0.02%)</title><rect x="477.8" y="1477" width="0.2" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="480.81" y="1487.5" ></text>
</g>
<g >
<title>make_stable_flattened_mutations_consumer&lt;compact_for_query&lt; (1 samples, 0.02%)</title><rect x="690.2" y="1605" width="0.2" height="15.0" fill="rgb(205,93,27)" rx="2" ry="2" />
<text  x="693.21" y="1615.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (2 samples, 0.04%)</title><rect x="46.4" y="1301" width="0.4" height="15.0" fill="rgb(211,173,35)" rx="2" ry="2" />
<text  x="49.39" y="1311.5" ></text>
</g>
<g >
<title>partition_key_view::legacy_form (4 samples, 0.07%)</title><rect x="922.0" y="1541" width="0.9" height="15.0" fill="rgb(253,87,50)" rx="2" ry="2" />
<text  x="925.02" y="1551.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_construct&lt;interval_bound&lt;dht::ring_position&gt; const&amp;&gt; (2 samples, 0.04%)</title><rect x="622.7" y="1589" width="0.5" height="15.0" fill="rgb(243,168,23)" rx="2" ry="2" />
<text  x="625.72" y="1599.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (4 samples, 0.07%)</title><rect x="707.2" y="1573" width="0.9" height="15.0" fill="rgb(252,71,53)" rx="2" ry="2" />
<text  x="710.19" y="1583.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::do_fill_buffer (2 samples, 0.04%)</title><rect x="79.7" y="1525" width="0.4" height="15.0" fill="rgb(218,124,12)" rx="2" ry="2" />
<text  x="82.70" y="1535.5" ></text>
</g>
<g >
<title>seastar::reactor::add_timer (3 samples, 0.06%)</title><rect x="974.1" y="1429" width="0.6" height="15.0" fill="rgb(223,48,27)" rx="2" ry="2" />
<text  x="977.07" y="1439.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mTokens (13 samples, 0.24%)</title><rect x="32.1" y="1413" width="2.8" height="15.0" fill="rgb(238,109,43)" rx="2" ry="2" />
<text  x="35.06" y="1423.5" ></text>
</g>
<g >
<title>reader_permit::consume_memory (2 samples, 0.04%)</title><rect x="214.5" y="1365" width="0.4" height="15.0" fill="rgb(223,28,20)" rx="2" ry="2" />
<text  x="217.46" y="1375.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::push_mutation_fragment&lt;mutation_fragment&gt; (40 samples, 0.75%)</title><rect x="317.0" y="1477" width="8.8" height="15.0" fill="rgb(232,176,6)" rx="2" ry="2" />
<text  x="320.02" y="1487.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.04%)</title><rect x="536.5" y="1493" width="0.4" height="15.0" fill="rgb(213,224,24)" rx="2" ry="2" />
<text  x="539.48" y="1503.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (4 samples, 0.07%)</title><rect x="41.8" y="1333" width="0.8" height="15.0" fill="rgb(225,109,23)" rx="2" ry="2" />
<text  x="44.76" y="1343.5" ></text>
</g>
<g >
<title>db::system_keyspace::local (1 samples, 0.02%)</title><rect x="17.1" y="1429" width="0.2" height="15.0" fill="rgb(206,192,1)" rx="2" ry="2" />
<text  x="20.06" y="1439.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.02%)</title><rect x="439.7" y="1429" width="0.2" height="15.0" fill="rgb(242,149,28)" rx="2" ry="2" />
<text  x="442.65" y="1439.5" ></text>
</g>
<g >
<title>operator new (7 samples, 0.13%)</title><rect x="1043.3" y="1477" width="1.6" height="15.0" fill="rgb(219,54,9)" rx="2" ry="2" />
<text  x="1046.33" y="1487.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.02%)</title><rect x="1010.5" y="1317" width="0.2" height="15.0" fill="rgb(230,107,54)" rx="2" ry="2" />
<text  x="1013.46" y="1327.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (2 samples, 0.04%)</title><rect x="886.9" y="1413" width="0.5" height="15.0" fill="rgb(216,144,36)" rx="2" ry="2" />
<text  x="889.95" y="1423.5" ></text>
</g>
<g >
<title>operator delete (8 samples, 0.15%)</title><rect x="570.9" y="1477" width="1.8" height="15.0" fill="rgb(229,121,38)" rx="2" ry="2" />
<text  x="573.89" y="1487.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::set_urgent_state (8 samples, 0.15%)</title><rect x="641.5" y="1637" width="1.7" height="15.0" fill="rgb(253,27,48)" rx="2" ry="2" />
<text  x="644.47" y="1647.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::take (2 samples, 0.04%)</title><rect x="312.6" y="1493" width="0.5" height="15.0" fill="rgb(250,203,17)" rx="2" ry="2" />
<text  x="315.61" y="1503.5" ></text>
</g>
<g >
<title>operator new (16 samples, 0.30%)</title><rect x="990.6" y="1429" width="3.5" height="15.0" fill="rgb(240,190,52)" rx="2" ry="2" />
<text  x="993.61" y="1439.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="192.6" y="1397" width="0.2" height="15.0" fill="rgb(218,185,49)" rx="2" ry="2" />
<text  x="195.62" y="1407.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;cql3::statements::update_statement, false&gt;::make&lt;cql3::statements::statement_type const&amp;, unsigned long, seastar::lw_shared_ptr&lt;schema const&gt;&amp;, std::unique_ptr&lt;cql3::attributes, std::default_delete&lt;cql3::attributes&gt; &gt;, cql3::cql_stats&amp;&gt; (3 samples, 0.06%)</title><rect x="72.4" y="1573" width="0.7" height="15.0" fill="rgb(237,169,54)" rx="2" ry="2" />
<text  x="75.42" y="1583.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (1 samples, 0.02%)</title><rect x="1075.5" y="1525" width="0.2" height="15.0" fill="rgb(227,183,38)" rx="2" ry="2" />
<text  x="1078.53" y="1535.5" ></text>
</g>
<g >
<title>operator delete (5 samples, 0.09%)</title><rect x="434.4" y="1397" width="1.1" height="15.0" fill="rgb(231,98,54)" rx="2" ry="2" />
<text  x="437.36" y="1407.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::leaf_node::allocate (11 samples, 0.21%)</title><rect x="248.4" y="1269" width="2.5" height="15.0" fill="rgb(250,40,16)" rx="2" ry="2" />
<text  x="251.43" y="1279.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="675.9" y="1621" width="0.2" height="15.0" fill="rgb(233,202,41)" rx="2" ry="2" />
<text  x="678.87" y="1631.5" ></text>
</g>
<g >
<title>position_in_partition_view::position_in_partition_view (4 samples, 0.07%)</title><rect x="275.8" y="1381" width="0.9" height="15.0" fill="rgb(231,39,51)" rx="2" ry="2" />
<text  x="278.78" y="1391.5" ></text>
</g>
<g >
<title>__tls_init (1 samples, 0.02%)</title><rect x="515.3" y="1397" width="0.2" height="15.0" fill="rgb(254,124,1)" rx="2" ry="2" />
<text  x="518.30" y="1407.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (4 samples, 0.07%)</title><rect x="310.8" y="1477" width="0.9" height="15.0" fill="rgb(207,162,50)" rx="2" ry="2" />
<text  x="313.84" y="1487.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (5 samples, 0.09%)</title><rect x="1093.6" y="1573" width="1.1" height="15.0" fill="rgb(219,155,8)" rx="2" ry="2" />
<text  x="1096.61" y="1583.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (2 samples, 0.04%)</title><rect x="745.6" y="1413" width="0.4" height="15.0" fill="rgb(241,48,40)" rx="2" ry="2" />
<text  x="748.57" y="1423.5" ></text>
</g>
<g >
<title>cql3::query_options::query_options (16 samples, 0.30%)</title><rect x="836.0" y="1589" width="3.5" height="15.0" fill="rgb(239,143,15)" rx="2" ry="2" />
<text  x="839.00" y="1599.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (1 samples, 0.02%)</title><rect x="21.0" y="1461" width="0.2" height="15.0" fill="rgb(243,97,9)" rx="2" ry="2" />
<text  x="24.03" y="1471.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consumer_adapter&lt;sstables::sstable_writer&gt;::consume (5 samples, 0.09%)</title><rect x="80.8" y="1621" width="1.1" height="15.0" fill="rgb(211,61,54)" rx="2" ry="2" />
<text  x="83.80" y="1631.5" ></text>
</g>
<g >
<title>utils::fb_utilities::get_broadcast_address (2 samples, 0.04%)</title><rect x="1069.4" y="1461" width="0.4" height="15.0" fill="rgb(243,117,42)" rx="2" ry="2" />
<text  x="1072.35" y="1471.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="56.5" y="1429" width="0.3" height="15.0" fill="rgb(249,207,20)" rx="2" ry="2" />
<text  x="59.54" y="1439.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_clear (3 samples, 0.06%)</title><rect x="465.2" y="1445" width="0.7" height="15.0" fill="rgb(208,132,46)" rx="2" ry="2" />
<text  x="468.24" y="1455.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.02%)</title><rect x="813.3" y="1413" width="0.2" height="15.0" fill="rgb(211,54,3)" rx="2" ry="2" />
<text  x="816.28" y="1423.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reserve&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::partition_snapshot_flat_reader&lt;memtable&amp;&gt; (61 samples, 1.14%)</title><rect x="513.8" y="1429" width="13.4" height="15.0" fill="rgb(236,79,14)" rx="2" ry="2" />
<text  x="516.76" y="1439.5" ></text>
</g>
<g >
<title>mutation_partition::apply_weak (1 samples, 0.02%)</title><rect x="102.4" y="1477" width="0.2" height="15.0" fill="rgb(218,32,51)" rx="2" ry="2" />
<text  x="105.41" y="1487.5" ></text>
</g>
<g >
<title>std::function&lt;flat_mutation_reader  (1 samples, 0.02%)</title><rect x="1165.3" y="1589" width="0.2" height="15.0" fill="rgb(240,171,9)" rx="2" ry="2" />
<text  x="1168.30" y="1599.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (3 samples, 0.06%)</title><rect x="704.3" y="1605" width="0.7" height="15.0" fill="rgb(214,213,6)" rx="2" ry="2" />
<text  x="707.33" y="1615.5" ></text>
</g>
<g >
<title>logalloc::segment_pool::refill_emergency_reserve (2 samples, 0.04%)</title><rect x="200.6" y="1413" width="0.4" height="15.0" fill="rgb(250,192,48)" rx="2" ry="2" />
<text  x="203.56" y="1423.5" ></text>
</g>
<g >
<title>mutation_source::operator= (1 samples, 0.02%)</title><rect x="11.5" y="1685" width="0.3" height="15.0" fill="rgb(240,185,53)" rx="2" ry="2" />
<text  x="14.54" y="1695.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="68.4" y="1509" width="0.3" height="15.0" fill="rgb(250,4,53)" rx="2" ry="2" />
<text  x="71.45" y="1519.5" ></text>
</g>
<g >
<title>mutation_partition::non_dummy_rows (2 samples, 0.04%)</title><rect x="1122.7" y="1301" width="0.5" height="15.0" fill="rgb(215,216,35)" rx="2" ry="2" />
<text  x="1125.73" y="1311.5" ></text>
</g>
<g >
<title>schema::column_at (1 samples, 0.02%)</title><rect x="79.7" y="1413" width="0.2" height="15.0" fill="rgb(214,102,26)" rx="2" ry="2" />
<text  x="82.70" y="1423.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;::__uniq_ptr_impl (1 samples, 0.02%)</title><rect x="48.8" y="1333" width="0.2" height="15.0" fill="rgb(224,66,36)" rx="2" ry="2" />
<text  x="51.82" y="1343.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (2 samples, 0.04%)</title><rect x="1101.8" y="1541" width="0.4" height="15.0" fill="rgb(247,110,20)" rx="2" ry="2" />
<text  x="1104.78" y="1551.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (1 samples, 0.02%)</title><rect x="736.3" y="1525" width="0.2" height="15.0" fill="rgb(231,14,10)" rx="2" ry="2" />
<text  x="739.31" y="1535.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;partition_key, false, false&gt;::_Optional_base (2 samples, 0.04%)</title><rect x="1049.5" y="1445" width="0.4" height="15.0" fill="rgb(211,140,19)" rx="2" ry="2" />
<text  x="1052.50" y="1455.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::clear (3 samples, 0.06%)</title><rect x="467.2" y="1429" width="0.7" height="15.0" fill="rgb(230,101,40)" rx="2" ry="2" />
<text  x="470.22" y="1439.5" ></text>
</g>
<g >
<title>boost::intrusive::bstree_impl&lt;boost::intrusive::mhtraits&lt;range_tombstone_entry, boost::intrusive::set_member_hook&lt;boost::intrusive::link_mode&lt; (4 samples, 0.07%)</title><rect x="582.8" y="1429" width="0.9" height="15.0" fill="rgb(242,24,18)" rx="2" ry="2" />
<text  x="585.80" y="1439.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::~partition_snapshot_flat_reader (64 samples, 1.20%)</title><rect x="572.7" y="1477" width="14.1" height="15.0" fill="rgb(230,15,43)" rx="2" ry="2" />
<text  x="575.65" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;11ul, cql3::expr::untyped_constant&gt; (1 samples, 0.02%)</title><rect x="53.9" y="1301" width="0.2" height="15.0" fill="rgb(253,188,7)" rx="2" ry="2" />
<text  x="56.89" y="1311.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="563.2" y="1557" width="0.2" height="15.0" fill="rgb(242,35,41)" rx="2" ry="2" />
<text  x="566.17" y="1567.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (1 samples, 0.02%)</title><rect x="724.6" y="1589" width="0.2" height="15.0" fill="rgb(225,93,11)" rx="2" ry="2" />
<text  x="727.62" y="1599.5" ></text>
</g>
<g >
<title>service::storage_proxy_stats::split_stats::get_ep_stat (3 samples, 0.06%)</title><rect x="709.4" y="1605" width="0.7" height="15.0" fill="rgb(246,227,33)" rx="2" ry="2" />
<text  x="712.40" y="1615.5" ></text>
</g>
<g >
<title>std::function&lt;seastar::future&lt;void&gt;  (1 samples, 0.02%)</title><rect x="78.8" y="1445" width="0.2" height="15.0" fill="rgb(220,229,49)" rx="2" ry="2" />
<text  x="81.81" y="1455.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="709" width="0.3" height="15.0" fill="rgb(214,183,44)" rx="2" ry="2" />
<text  x="13.44" y="719.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.02%)</title><rect x="57.9" y="1397" width="0.2" height="15.0" fill="rgb(249,148,13)" rx="2" ry="2" />
<text  x="60.86" y="1407.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (2 samples, 0.04%)</title><rect x="419.8" y="1333" width="0.4" height="15.0" fill="rgb(245,184,30)" rx="2" ry="2" />
<text  x="422.80" y="1343.5" ></text>
</g>
<g >
<title>seastar::file::list_directory (1 samples, 0.02%)</title><rect x="690.7" y="1573" width="0.2" height="15.0" fill="rgb(229,203,21)" rx="2" ry="2" />
<text  x="693.65" y="1583.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::push_back (32 samples, 0.60%)</title><rect x="1004.9" y="1349" width="7.1" height="15.0" fill="rgb(248,18,44)" rx="2" ry="2" />
<text  x="1007.95" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (1 samples, 0.02%)</title><rect x="70.0" y="1477" width="0.2" height="15.0" fill="rgb(228,56,29)" rx="2" ry="2" />
<text  x="72.99" y="1487.5" ></text>
</g>
<g >
<title>abstract_type::validate&lt;managed_bytes_basic_view&lt; (2 samples, 0.04%)</title><rect x="883.0" y="1429" width="0.4" height="15.0" fill="rgb(219,168,0)" rx="2" ry="2" />
<text  x="885.98" y="1439.5" ></text>
</g>
<g >
<title>validation::validate_keyspace (18 samples, 0.34%)</title><rect x="815.9" y="1525" width="4.0" height="15.0" fill="rgb(222,51,44)" rx="2" ry="2" />
<text  x="818.93" y="1535.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (2 samples, 0.04%)</title><rect x="44.4" y="1317" width="0.4" height="15.0" fill="rgb(232,99,31)" rx="2" ry="2" />
<text  x="47.41" y="1327.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_data_requests (238 samples, 4.45%)</title><rect x="976.3" y="1477" width="52.5" height="15.0" fill="rgb(231,115,16)" rx="2" ry="2" />
<text  x="979.28" y="1487.5" >servi..</text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_push_back_aux&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (4 samples, 0.07%)</title><rect x="24.3" y="1413" width="0.9" height="15.0" fill="rgb(208,94,51)" rx="2" ry="2" />
<text  x="27.34" y="1423.5" ></text>
</g>
<g >
<title>mutation_partition::lower_bound (2 samples, 0.04%)</title><rect x="266.3" y="1285" width="0.4" height="15.0" fill="rgb(250,175,53)" rx="2" ry="2" />
<text  x="269.29" y="1295.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (1 samples, 0.02%)</title><rect x="19.0" y="1557" width="0.3" height="15.0" fill="rgb(212,8,29)" rx="2" ry="2" />
<text  x="22.04" y="1567.5" ></text>
</g>
<g >
<title>service::storage_proxy::got_response (5 samples, 0.09%)</title><rect x="712.5" y="1637" width="1.1" height="15.0" fill="rgb(244,137,46)" rx="2" ry="2" />
<text  x="715.49" y="1647.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;managed_bytes&gt;::_M_reset (1 samples, 0.02%)</title><rect x="901.7" y="1525" width="0.2" height="15.0" fill="rgb(249,206,25)" rx="2" ry="2" />
<text  x="904.73" y="1535.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::sharded&lt;database&gt;::invoke_on_all (1 samples, 0.02%)</title><rect x="17.1" y="1541" width="0.2" height="15.0" fill="rgb(232,48,46)" rx="2" ry="2" />
<text  x="20.06" y="1551.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (2 samples, 0.04%)</title><rect x="699.3" y="1605" width="0.4" height="15.0" fill="rgb(239,215,0)" rx="2" ry="2" />
<text  x="702.25" y="1615.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.07%)</title><rect x="778.2" y="1429" width="0.9" height="15.0" fill="rgb(236,174,31)" rx="2" ry="2" />
<text  x="781.21" y="1439.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="185.6" y="1397" width="0.2" height="15.0" fill="rgb(237,219,16)" rx="2" ry="2" />
<text  x="188.57" y="1407.5" ></text>
</g>
<g >
<title>std::vector&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, std::allocator&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt;::_M_check_len (1 samples, 0.02%)</title><rect x="1126.0" y="1221" width="0.3" height="15.0" fill="rgb(222,229,52)" rx="2" ry="2" />
<text  x="1129.04" y="1231.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="216.2" y="1381" width="0.2" height="15.0" fill="rgb(253,20,8)" rx="2" ry="2" />
<text  x="219.22" y="1391.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (10 samples, 0.19%)</title><rect x="669.7" y="1621" width="2.2" height="15.0" fill="rgb(215,26,33)" rx="2" ry="2" />
<text  x="672.70" y="1631.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="852.5" y="1461" width="0.3" height="15.0" fill="rgb(237,36,37)" rx="2" ry="2" />
<text  x="855.54" y="1471.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::clear (1 samples, 0.02%)</title><rect x="596.3" y="1493" width="0.2" height="15.0" fill="rgb(205,153,23)" rx="2" ry="2" />
<text  x="599.25" y="1503.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::constant (7 samples, 0.13%)</title><rect x="54.8" y="1429" width="1.5" height="15.0" fill="rgb(245,78,40)" rx="2" ry="2" />
<text  x="57.77" y="1439.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_805ba145d71de739aa5a49a7dfdfc7655f960912] (1 samples, 0.02%)</title><rect x="492.6" y="1365" width="0.2" height="15.0" fill="rgb(249,219,4)" rx="2" ry="2" />
<text  x="495.59" y="1375.5" ></text>
</g>
<g >
<title>position_in_partition::position_in_partition (5 samples, 0.09%)</title><rect x="274.2" y="1381" width="1.1" height="15.0" fill="rgb(222,47,13)" rx="2" ry="2" />
<text  x="277.23" y="1391.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::set&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; (1 samples, 0.02%)</title><rect x="619.0" y="1573" width="0.2" height="15.0" fill="rgb(217,41,8)" rx="2" ry="2" />
<text  x="621.97" y="1583.5" ></text>
</g>
<g >
<title>cql3::query_processor::prepare_internal (1 samples, 0.02%)</title><rect x="10.4" y="229" width="0.3" height="15.0" fill="rgb(224,109,9)" rx="2" ry="2" />
<text  x="13.44" y="239.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;mutation_querier, false, false&gt;::_Optional_base (1 samples, 0.02%)</title><rect x="444.3" y="1493" width="0.2" height="15.0" fill="rgb(238,27,49)" rx="2" ry="2" />
<text  x="447.28" y="1503.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="629" width="0.3" height="15.0" fill="rgb(223,183,28)" rx="2" ry="2" />
<text  x="13.44" y="639.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (8 samples, 0.15%)</title><rect x="809.5" y="1461" width="1.8" height="15.0" fill="rgb(225,60,10)" rx="2" ry="2" />
<text  x="812.53" y="1471.5" ></text>
</g>
<g >
<title>absl::container_internal::operator== (1 samples, 0.02%)</title><rect x="1035.8" y="1461" width="0.2" height="15.0" fill="rgb(217,164,1)" rx="2" ry="2" />
<text  x="1038.83" y="1471.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::clear (1 samples, 0.02%)</title><rect x="22.1" y="1541" width="0.3" height="15.0" fill="rgb(232,222,47)" rx="2" ry="2" />
<text  x="25.13" y="1551.5" ></text>
</g>
<g >
<title>managed_bytes::free_chain (1 samples, 0.02%)</title><rect x="1127.6" y="1333" width="0.2" height="15.0" fill="rgb(214,181,18)" rx="2" ry="2" />
<text  x="1130.58" y="1343.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.02%)</title><rect x="791.0" y="1269" width="0.2" height="15.0" fill="rgb(210,167,41)" rx="2" ry="2" />
<text  x="794.01" y="1279.5" ></text>
</g>
<g >
<title>std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;::vector (1 samples, 0.02%)</title><rect x="66.0" y="1589" width="0.2" height="15.0" fill="rgb(230,211,47)" rx="2" ry="2" />
<text  x="69.02" y="1599.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reserve&lt;logalloc::allocating_section::operator (1 samples, 0.02%)</title><rect x="79.5" y="1589" width="0.2" height="15.0" fill="rgb(210,190,32)" rx="2" ry="2" />
<text  x="82.48" y="1599.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (62 samples, 1.16%)</title><rect x="23.0" y="1509" width="13.7" height="15.0" fill="rgb(221,5,44)" rx="2" ry="2" />
<text  x="26.01" y="1519.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.02%)</title><rect x="38.2" y="1285" width="0.3" height="15.0" fill="rgb(210,120,11)" rx="2" ry="2" />
<text  x="41.23" y="1295.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::default_delete&lt;cql3::statements::raw::delete_statement&gt;, true&gt;::_Head_base (1 samples, 0.02%)</title><rect x="63.8" y="1445" width="0.2" height="15.0" fill="rgb(228,135,1)" rx="2" ry="2" />
<text  x="66.82" y="1455.5" ></text>
</g>
<g >
<title>dht::ring_position_comparator::operator (43 samples, 0.80%)</title><rect x="489.5" y="1445" width="9.5" height="15.0" fill="rgb(209,196,18)" rx="2" ry="2" />
<text  x="492.50" y="1455.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::do_fill_buffer (1 samples, 0.02%)</title><rect x="100.9" y="1061" width="0.2" height="15.0" fill="rgb(245,206,33)" rx="2" ry="2" />
<text  x="103.87" y="1071.5" ></text>
</g>
<g >
<title>bytes_ostream::chunk::~chunk (1 samples, 0.02%)</title><rect x="91.8" y="1557" width="0.2" height="15.0" fill="rgb(242,31,42)" rx="2" ry="2" />
<text  x="94.83" y="1567.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (9 samples, 0.17%)</title><rect x="205.9" y="1349" width="1.9" height="15.0" fill="rgb(248,159,32)" rx="2" ry="2" />
<text  x="208.86" y="1359.5" ></text>
</g>
<g >
<title>std::vector&lt;seastar::shared_ptr&lt;cql3::relation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::relation&gt; &gt; &gt;::vector (1 samples, 0.02%)</title><rect x="60.9" y="1493" width="0.3" height="15.0" fill="rgb(217,226,38)" rx="2" ry="2" />
<text  x="63.95" y="1503.5" ></text>
</g>
<g >
<title>std::construct_at&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (1 samples, 0.02%)</title><rect x="24.6" y="1365" width="0.2" height="15.0" fill="rgb(210,229,21)" rx="2" ry="2" />
<text  x="27.56" y="1375.5" ></text>
</g>
<g >
<title>utils::loading_shared_values&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater, 256ul&gt;::find&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt; &gt; (17 samples, 0.32%)</title><rect x="726.2" y="1541" width="3.7" height="15.0" fill="rgb(218,65,15)" rx="2" ry="2" />
<text  x="729.16" y="1551.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (1 samples, 0.02%)</title><rect x="797.4" y="1397" width="0.2" height="15.0" fill="rgb(249,156,29)" rx="2" ry="2" />
<text  x="800.40" y="1407.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (1 samples, 0.02%)</title><rect x="100.4" y="981" width="0.3" height="15.0" fill="rgb(240,227,10)" rx="2" ry="2" />
<text  x="103.43" y="991.5" ></text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.04%)</title><rect x="870.8" y="1573" width="0.5" height="15.0" fill="rgb(250,117,12)" rx="2" ry="2" />
<text  x="873.85" y="1583.5" ></text>
</g>
<g >
<title>absl::hash_internal::AbslHashValue&lt;absl::hash_internal::HashState&gt; (1 samples, 0.02%)</title><rect x="1039.4" y="1445" width="0.2" height="15.0" fill="rgb(250,146,30)" rx="2" ry="2" />
<text  x="1042.36" y="1455.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (4 samples, 0.07%)</title><rect x="1137.7" y="1637" width="0.9" height="15.0" fill="rgb(232,198,5)" rx="2" ry="2" />
<text  x="1140.73" y="1647.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;auth::resource&gt;::_Optional_payload_base (2 samples, 0.04%)</title><rect x="773.8" y="1445" width="0.4" height="15.0" fill="rgb(247,39,10)" rx="2" ry="2" />
<text  x="776.80" y="1455.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;reader_concurrency_semaphore::entry&gt;::_M_reset (2 samples, 0.04%)</title><rect x="126.0" y="1541" width="0.5" height="15.0" fill="rgb(210,13,4)" rx="2" ry="2" />
<text  x="129.01" y="1551.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (2 samples, 0.04%)</title><rect x="45.3" y="1349" width="0.4" height="15.0" fill="rgb(254,158,1)" rx="2" ry="2" />
<text  x="48.29" y="1359.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="908.8" y="1477" width="0.2" height="15.0" fill="rgb(230,85,30)" rx="2" ry="2" />
<text  x="911.79" y="1487.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (22 samples, 0.41%)</title><rect x="1036.0" y="1461" width="4.9" height="15.0" fill="rgb(241,192,47)" rx="2" ry="2" />
<text  x="1039.05" y="1471.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::operator (1 samples, 0.02%)</title><rect x="100.4" y="1301" width="0.3" height="15.0" fill="rgb(229,129,7)" rx="2" ry="2" />
<text  x="103.43" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_nodes (1 samples, 0.02%)</title><rect x="1158.5" y="1621" width="0.2" height="15.0" fill="rgb(228,222,43)" rx="2" ry="2" />
<text  x="1161.46" y="1631.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const*, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;*&gt; (2 samples, 0.04%)</title><rect x="787.5" y="1333" width="0.4" height="15.0" fill="rgb(205,146,44)" rx="2" ry="2" />
<text  x="790.48" y="1343.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::term (6 samples, 0.11%)</title><rect x="58.5" y="1477" width="1.3" height="15.0" fill="rgb(235,39,16)" rx="2" ry="2" />
<text  x="61.52" y="1487.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="601.1" y="1541" width="0.2" height="15.0" fill="rgb(220,2,47)" rx="2" ry="2" />
<text  x="604.10" y="1551.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.02%)</title><rect x="758.6" y="1461" width="0.2" height="15.0" fill="rgb(231,184,10)" rx="2" ry="2" />
<text  x="761.58" y="1471.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (2 samples, 0.04%)</title><rect x="1127.6" y="1349" width="0.4" height="15.0" fill="rgb(207,214,28)" rx="2" ry="2" />
<text  x="1130.58" y="1359.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::execute (1 samples, 0.02%)</title><rect x="1111.3" y="1589" width="0.2" height="15.0" fill="rgb(250,38,4)" rx="2" ry="2" />
<text  x="1114.26" y="1599.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::take (2 samples, 0.04%)</title><rect x="437.9" y="1429" width="0.4" height="15.0" fill="rgb(207,58,13)" rx="2" ry="2" />
<text  x="440.89" y="1439.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;unsigned long&gt; &gt;::invoke&lt;seastar::sharded&lt;sstables::sstable_directory&gt;::map_reduce0&lt;distributed_loader::reshape (1 samples, 0.02%)</title><rect x="15.5" y="1701" width="0.2" height="15.0" fill="rgb(206,151,19)" rx="2" ry="2" />
<text  x="18.51" y="1711.5" ></text>
</g>
<g >
<title>atomic_cell::make_live (1 samples, 0.02%)</title><rect x="853.2" y="1413" width="0.2" height="15.0" fill="rgb(217,86,6)" rx="2" ry="2" />
<text  x="856.20" y="1423.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::set_charPositionInLine (1 samples, 0.02%)</title><rect x="26.8" y="1413" width="0.2" height="15.0" fill="rgb(226,130,50)" rx="2" ry="2" />
<text  x="29.76" y="1423.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (6 samples, 0.11%)</title><rect x="742.9" y="1461" width="1.3" height="15.0" fill="rgb(206,16,7)" rx="2" ry="2" />
<text  x="745.92" y="1471.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (7 samples, 0.13%)</title><rect x="1154.9" y="1637" width="1.6" height="15.0" fill="rgb(217,212,14)" rx="2" ry="2" />
<text  x="1157.93" y="1647.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::response_count (1 samples, 0.02%)</title><rect x="708.5" y="1573" width="0.2" height="15.0" fill="rgb(243,52,0)" rx="2" ry="2" />
<text  x="711.52" y="1583.5" ></text>
</g>
<g >
<title>nonwrapping_interval&lt;dht::ring_position&gt;::make_singular (1 samples, 0.02%)</title><rect x="925.5" y="1557" width="0.3" height="15.0" fill="rgb(224,15,38)" rx="2" ry="2" />
<text  x="928.55" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::_Copy_ctor_base (3 samples, 0.06%)</title><rect x="355.2" y="1333" width="0.6" height="15.0" fill="rgb(217,78,23)" rx="2" ry="2" />
<text  x="358.18" y="1343.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="1113.7" y="1285" width="0.2" height="15.0" fill="rgb(211,214,23)" rx="2" ry="2" />
<text  x="1116.69" y="1295.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="58.5" y="1381" width="0.2" height="15.0" fill="rgb(253,2,24)" rx="2" ry="2" />
<text  x="61.52" y="1391.5" ></text>
</g>
<g >
<title>flush_reader::get_next_partition (1 samples, 0.02%)</title><rect x="79.5" y="1605" width="0.2" height="15.0" fill="rgb(248,97,35)" rx="2" ry="2" />
<text  x="82.48" y="1615.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_slice_or_needs_filtering (2 samples, 0.04%)</title><rect x="934.8" y="1509" width="0.5" height="15.0" fill="rgb(254,144,3)" rx="2" ry="2" />
<text  x="937.81" y="1519.5" ></text>
</g>
<g >
<title>std::vector&lt;seastar::shared_ptr&lt;cql3::relation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::relation&gt; &gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="74.4" y="1605" width="0.2" height="15.0" fill="rgb(241,182,31)" rx="2" ry="2" />
<text  x="77.40" y="1615.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;std::function&lt;flat_mutation_reader  (5 samples, 0.09%)</title><rect x="632.2" y="1557" width="1.1" height="15.0" fill="rgb(208,161,5)" rx="2" ry="2" />
<text  x="635.20" y="1567.5" ></text>
</g>
<g >
<title>fmt::v7::basic_printf_context&lt;fmt::v7::detail::buffer_appender&lt;char&gt;, char&gt;::parse_flags (1 samples, 0.02%)</title><rect x="18.6" y="1637" width="0.2" height="15.0" fill="rgb(253,203,26)" rx="2" ry="2" />
<text  x="21.60" y="1647.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::close (2 samples, 0.04%)</title><rect x="587.2" y="1493" width="0.4" height="15.0" fill="rgb(208,73,7)" rx="2" ry="2" />
<text  x="590.21" y="1503.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (1 samples, 0.02%)</title><rect x="698.4" y="1637" width="0.2" height="15.0" fill="rgb(215,208,3)" rx="2" ry="2" />
<text  x="701.37" y="1647.5" ></text>
</g>
<g >
<title>operator new (13 samples, 0.24%)</title><rect x="1097.1" y="1557" width="2.9" height="15.0" fill="rgb(209,215,48)" rx="2" ry="2" />
<text  x="1100.14" y="1567.5" ></text>
</g>
<g >
<title>partition_snapshot_row_cursor::maybe_advance_to (1 samples, 0.02%)</title><rect x="11.1" y="1669" width="0.2" height="15.0" fill="rgb(249,26,1)" rx="2" ry="2" />
<text  x="14.10" y="1679.5" ></text>
</g>
<g >
<title>seastar::internal::execution_stage_manager::flush (1 samples, 0.02%)</title><rect x="1166.6" y="1653" width="0.2" height="15.0" fill="rgb(230,204,34)" rx="2" ry="2" />
<text  x="1169.62" y="1663.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::make_partition_slice (61 samples, 1.14%)</title><rect x="1078.6" y="1573" width="13.5" height="15.0" fill="rgb(221,179,29)" rx="2" ry="2" />
<text  x="1081.62" y="1583.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (2 samples, 0.04%)</title><rect x="973.6" y="1429" width="0.5" height="15.0" fill="rgb(227,20,4)" rx="2" ry="2" />
<text  x="976.63" y="1439.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::~impl (5 samples, 0.09%)</title><rect x="588.3" y="1525" width="1.1" height="15.0" fill="rgb(220,74,30)" rx="2" ry="2" />
<text  x="591.31" y="1535.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.09%)</title><rect x="510.5" y="1445" width="1.1" height="15.0" fill="rgb(238,41,15)" rx="2" ry="2" />
<text  x="513.45" y="1455.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::move_it (3 samples, 0.06%)</title><rect x="640.8" y="1637" width="0.7" height="15.0" fill="rgb(245,94,54)" rx="2" ry="2" />
<text  x="643.80" y="1647.5" ></text>
</g>
<g >
<title>seastar::output_stream&lt;char&gt;::close (1 samples, 0.02%)</title><rect x="10.7" y="1477" width="0.2" height="15.0" fill="rgb(206,72,41)" rx="2" ry="2" />
<text  x="13.66" y="1487.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::get_promise (1 samples, 0.02%)</title><rect x="945.2" y="1541" width="0.2" height="15.0" fill="rgb(233,81,17)" rx="2" ry="2" />
<text  x="948.18" y="1551.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::revoke_statement, std::default_delete&lt;cql3::statements::revoke_statement&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::statements::revoke_statement&gt;, void&gt; (1 samples, 0.02%)</title><rect x="64.0" y="1525" width="0.3" height="15.0" fill="rgb(234,62,13)" rx="2" ry="2" />
<text  x="67.04" y="1535.5" ></text>
</g>
<g >
<title>service::storage_proxy::hint_to_dead_endpoints (1 samples, 0.02%)</title><rect x="1119.6" y="1413" width="0.3" height="15.0" fill="rgb(237,49,18)" rx="2" ry="2" />
<text  x="1122.64" y="1423.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::lsa_partition_reader (3 samples, 0.06%)</title><rect x="527.2" y="1429" width="0.7" height="15.0" fill="rgb(243,195,29)" rx="2" ry="2" />
<text  x="530.21" y="1439.5" ></text>
</g>
<g >
<title>single_node_cql_env::do_with (1 samples, 0.02%)</title><rect x="10.4" y="405" width="0.3" height="15.0" fill="rgb(223,10,35)" rx="2" ry="2" />
<text  x="13.44" y="415.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt;, true, true&gt;::__uniq_ptr_data (1 samples, 0.02%)</title><rect x="48.8" y="1349" width="0.2" height="15.0" fill="rgb(206,132,5)" rx="2" ry="2" />
<text  x="51.82" y="1359.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::vector (1 samples, 0.02%)</title><rect x="630.9" y="1589" width="0.2" height="15.0" fill="rgb(220,78,29)" rx="2" ry="2" />
<text  x="633.88" y="1599.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.04%)</title><rect x="633.5" y="1525" width="0.5" height="15.0" fill="rgb(229,157,22)" rx="2" ry="2" />
<text  x="636.53" y="1535.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::vector (2 samples, 0.04%)</title><rect x="1108.4" y="1573" width="0.4" height="15.0" fill="rgb(221,56,41)" rx="2" ry="2" />
<text  x="1111.39" y="1583.5" ></text>
</g>
<g >
<title>cql_transport::messages::result_message::rows::rows (2 samples, 0.04%)</title><rect x="660.7" y="1589" width="0.4" height="15.0" fill="rgb(226,104,2)" rx="2" ry="2" />
<text  x="663.65" y="1599.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;clustering_key_prefix&gt;::wrapping_interval (2 samples, 0.04%)</title><rect x="1085.7" y="1509" width="0.4" height="15.0" fill="rgb(243,200,40)" rx="2" ry="2" />
<text  x="1088.67" y="1519.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::find&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (19 samples, 0.36%)</title><rect x="811.7" y="1477" width="4.2" height="15.0" fill="rgb(226,173,15)" rx="2" ry="2" />
<text  x="814.74" y="1487.5" ></text>
</g>
<g >
<title>std::make_unique&lt;compact_for_query&lt; (8 samples, 0.15%)</title><rect x="442.7" y="1509" width="1.8" height="15.0" fill="rgb(237,163,31)" rx="2" ry="2" />
<text  x="445.74" y="1519.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (3 samples, 0.06%)</title><rect x="150.9" y="1573" width="0.7" height="15.0" fill="rgb(211,80,52)" rx="2" ry="2" />
<text  x="153.94" y="1583.5" ></text>
</g>
<g >
<title>scanning_reader::fill_buffer_from_delegate (1 samples, 0.02%)</title><rect x="100.9" y="1157" width="0.2" height="15.0" fill="rgb(241,223,37)" rx="2" ry="2" />
<text  x="103.87" y="1167.5" ></text>
</g>
<g >
<title>boost::iterator_range_detail::iterator_range_base&lt;boost::iterators::filter_iterator&lt;mutation_partition::non_dummy_rows (1 samples, 0.02%)</title><rect x="1122.7" y="1253" width="0.2" height="15.0" fill="rgb(209,107,18)" rx="2" ry="2" />
<text  x="1125.73" y="1263.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.02%)</title><rect x="38.9" y="1365" width="0.2" height="15.0" fill="rgb(231,146,31)" rx="2" ry="2" />
<text  x="41.89" y="1375.5" ></text>
</g>
<g >
<title>dht::sharder::shard_of (1 samples, 0.02%)</title><rect x="982.9" y="1445" width="0.2" height="15.0" fill="rgb(211,228,5)" rx="2" ry="2" />
<text  x="985.89" y="1455.5" ></text>
</g>
<g >
<title>abstract_type::native_typeid (1 samples, 0.02%)</title><rect x="639.0" y="1557" width="0.3" height="15.0" fill="rgb(245,132,31)" rx="2" ry="2" />
<text  x="642.04" y="1567.5" ></text>
</g>
<g >
<title>std::apply&lt;row_cache::do_update (1 samples, 0.02%)</title><rect x="690.9" y="1541" width="0.2" height="15.0" fill="rgb(222,77,49)" rx="2" ry="2" />
<text  x="693.87" y="1551.5" ></text>
</g>
<g >
<title>sstables::compaction_strategy::get_reshaping_job (1 samples, 0.02%)</title><rect x="15.5" y="1637" width="0.2" height="15.0" fill="rgb(249,228,51)" rx="2" ry="2" />
<text  x="18.51" y="1647.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.04%)</title><rect x="899.7" y="1477" width="0.5" height="15.0" fill="rgb(207,155,37)" rx="2" ry="2" />
<text  x="902.74" y="1487.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (4 samples, 0.07%)</title><rect x="840.6" y="1557" width="0.9" height="15.0" fill="rgb(206,34,12)" rx="2" ry="2" />
<text  x="843.63" y="1567.5" ></text>
</g>
<g >
<title>service::storage_proxy::new_read_repair_decision (1 samples, 0.02%)</title><rect x="1071.3" y="1509" width="0.3" height="15.0" fill="rgb(212,103,11)" rx="2" ry="2" />
<text  x="1074.34" y="1519.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::set_tokenStartCharPositionInLine (1 samples, 0.02%)</title><rect x="25.9" y="1429" width="0.2" height="15.0" fill="rgb(232,27,43)" rx="2" ry="2" />
<text  x="28.88" y="1439.5" ></text>
</g>
<g >
<title>row_cache::do_update (1 samples, 0.02%)</title><rect x="690.9" y="1509" width="0.2" height="15.0" fill="rgb(254,149,41)" rx="2" ry="2" />
<text  x="693.87" y="1519.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt; &gt;, seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (13 samples, 0.24%)</title><rect x="797.6" y="1413" width="2.9" height="15.0" fill="rgb(253,174,22)" rx="2" ry="2" />
<text  x="800.62" y="1423.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_Optional_payload_base (1 samples, 0.02%)</title><rect x="786.6" y="1365" width="0.2" height="15.0" fill="rgb(232,211,7)" rx="2" ry="2" />
<text  x="789.59" y="1375.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::restrictions::multi_column_restriction&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="72.0" y="1557" width="0.2" height="15.0" fill="rgb(252,226,54)" rx="2" ry="2" />
<text  x="74.98" y="1567.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;nonwrapping_interval&lt;dht::ring_position&gt; const*, nonwrapping_interval&lt;dht::ring_position&gt;*&gt; (3 samples, 0.06%)</title><rect x="931.9" y="1525" width="0.7" height="15.0" fill="rgb(222,61,37)" rx="2" ry="2" />
<text  x="934.94" y="1535.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::modification_statement (1 samples, 0.02%)</title><rect x="72.4" y="1541" width="0.2" height="15.0" fill="rgb(215,204,17)" rx="2" ry="2" />
<text  x="75.42" y="1551.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;std::tuple&lt;seastar::lw_shared_ptr&lt;query::result&gt;, cache_temperature&gt; &gt;::set&lt;std::tuple&lt;seastar::lw_shared_ptr&lt;query::result&gt;, cache_temperature&gt; &gt; (1 samples, 0.02%)</title><rect x="97.8" y="1637" width="0.2" height="15.0" fill="rgb(242,175,20)" rx="2" ry="2" />
<text  x="100.78" y="1647.5" ></text>
</g>
<g >
<title>seastar::gate::leave (2 samples, 0.04%)</title><rect x="98.0" y="1637" width="0.4" height="15.0" fill="rgb(240,6,20)" rx="2" ry="2" />
<text  x="101.00" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::~_Variant_storage (2 samples, 0.04%)</title><rect x="879.5" y="1461" width="0.4" height="15.0" fill="rgb(236,184,5)" rx="2" ry="2" />
<text  x="882.45" y="1471.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="59.2" y="1381" width="0.2" height="15.0" fill="rgb(219,129,25)" rx="2" ry="2" />
<text  x="62.19" y="1391.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;void&gt;::satisfy_with_result_of&lt;seastar::future&lt;service::digest_read_result&gt;::then_wrapped_nrvo&lt;void, service::abstract_read_executor::execute (22 samples, 0.41%)</title><rect x="693.5" y="1637" width="4.9" height="15.0" fill="rgb(214,229,25)" rx="2" ry="2" />
<text  x="696.52" y="1647.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.04%)</title><rect x="831.6" y="1541" width="0.4" height="15.0" fill="rgb(207,141,25)" rx="2" ry="2" />
<text  x="834.59" y="1551.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.02%)</title><rect x="17.1" y="1637" width="0.2" height="15.0" fill="rgb(206,167,47)" rx="2" ry="2" />
<text  x="20.06" y="1647.5" ></text>
</g>
<g >
<title>ser::writer_of_qr_clustered_row&lt;bytes_ostream&gt;::skip_key (3 samples, 0.06%)</title><rect x="368.0" y="1333" width="0.6" height="15.0" fill="rgb(244,26,1)" rx="2" ry="2" />
<text  x="370.97" y="1343.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (4 samples, 0.07%)</title><rect x="1156.7" y="1621" width="0.9" height="15.0" fill="rgb(254,29,38)" rx="2" ry="2" />
<text  x="1159.70" y="1631.5" ></text>
</g>
<g >
<title>free (1 samples, 0.02%)</title><rect x="68.2" y="1525" width="0.2" height="15.0" fill="rgb(250,68,47)" rx="2" ry="2" />
<text  x="71.23" y="1535.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (2 samples, 0.04%)</title><rect x="38.7" y="1477" width="0.4" height="15.0" fill="rgb(234,144,35)" rx="2" ry="2" />
<text  x="41.67" y="1487.5" ></text>
</g>
<g >
<title>cql3::update_parameters::make_cell (1 samples, 0.02%)</title><rect x="853.2" y="1445" width="0.2" height="15.0" fill="rgb(209,14,0)" rx="2" ry="2" />
<text  x="856.20" y="1455.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::get_local_service (1 samples, 0.02%)</title><rect x="1022.4" y="1429" width="0.2" height="15.0" fill="rgb(248,83,29)" rx="2" ry="2" />
<text  x="1025.37" y="1439.5" ></text>
</g>
<g >
<title>std::operator+ (4 samples, 0.07%)</title><rect x="41.8" y="1317" width="0.8" height="15.0" fill="rgb(239,209,9)" rx="2" ry="2" />
<text  x="44.76" y="1327.5" ></text>
</g>
<g >
<title>cql3::restrictions::partition_key_restrictions::needs_filtering (7 samples, 0.13%)</title><rect x="653.4" y="1605" width="1.5" height="15.0" fill="rgb(231,111,49)" rx="2" ry="2" />
<text  x="656.38" y="1615.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.02%)</title><rect x="38.7" y="1381" width="0.2" height="15.0" fill="rgb(233,229,45)" rx="2" ry="2" />
<text  x="41.67" y="1391.5" ></text>
</g>
<g >
<title>table::make_reader (461 samples, 8.62%)</title><rect x="452.7" y="1509" width="101.6" height="15.0" fill="rgb(242,35,39)" rx="2" ry="2" />
<text  x="455.67" y="1519.5" >table::make_..</text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="1717" width="0.3" height="15.0" fill="rgb(250,89,0)" rx="2" ry="2" />
<text  x="13.44" y="1727.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="100.2" y="1525" width="0.2" height="15.0" fill="rgb(222,61,13)" rx="2" ry="2" />
<text  x="103.21" y="1535.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.06%)</title><rect x="438.3" y="1445" width="0.7" height="15.0" fill="rgb(232,175,32)" rx="2" ry="2" />
<text  x="441.33" y="1455.5" ></text>
</g>
<g >
<title>position_in_partition_view::position_in_partition_view (1 samples, 0.02%)</title><rect x="275.6" y="1365" width="0.2" height="15.0" fill="rgb(229,52,30)" rx="2" ry="2" />
<text  x="278.56" y="1375.5" ></text>
</g>
<g >
<title>operator new (6 samples, 0.11%)</title><rect x="1014.4" y="1365" width="1.4" height="15.0" fill="rgb(210,130,37)" rx="2" ry="2" />
<text  x="1017.43" y="1375.5" ></text>
</g>
<g >
<title>__strcmp_avx2 (7 samples, 0.13%)</title><rect x="13.5" y="1733" width="1.6" height="15.0" fill="rgb(210,94,21)" rx="2" ry="2" />
<text  x="16.53" y="1743.5" ></text>
</g>
<g >
<title>utils::tuple_hash::hash_impl&lt;2ul, auth::resource_kind, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (8 samples, 0.15%)</title><rect x="795.0" y="1269" width="1.7" height="15.0" fill="rgb(223,101,38)" rx="2" ry="2" />
<text  x="797.98" y="1279.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::modification_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::do_flush (30 samples, 0.56%)</title><rect x="849.5" y="1637" width="6.6" height="15.0" fill="rgb(205,105,5)" rx="2" ry="2" />
<text  x="852.45" y="1647.5" ></text>
</g>
<g >
<title>std::__lower_bound&lt;__gnu_cxx::__normal_iterator&lt;long*, std::vector&lt;long, std::allocator&lt;long&gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_less_val&gt; (2 samples, 0.04%)</title><rect x="1150.7" y="1621" width="0.5" height="15.0" fill="rgb(209,112,5)" rx="2" ry="2" />
<text  x="1153.74" y="1631.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take (1 samples, 0.02%)</title><rect x="747.3" y="1541" width="0.3" height="15.0" fill="rgb(220,156,49)" rx="2" ry="2" />
<text  x="750.33" y="1551.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (2 samples, 0.04%)</title><rect x="224.2" y="1285" width="0.4" height="15.0" fill="rgb(237,99,40)" rx="2" ry="2" />
<text  x="227.16" y="1295.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (1 samples, 0.02%)</title><rect x="661.1" y="1589" width="0.2" height="15.0" fill="rgb(220,184,26)" rx="2" ry="2" />
<text  x="664.10" y="1599.5" ></text>
</g>
<g >
<title>std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (8 samples, 0.15%)</title><rect x="439.4" y="1445" width="1.8" height="15.0" fill="rgb(210,25,50)" rx="2" ry="2" />
<text  x="442.43" y="1455.5" ></text>
</g>
<g >
<title>boost::iterator_range_detail::iterator_range_base&lt;boost::iterators::filter_iterator&lt;mutation_partition::non_dummy_rows (1 samples, 0.02%)</title><rect x="1122.7" y="1237" width="0.2" height="15.0" fill="rgb(245,1,24)" rx="2" ry="2" />
<text  x="1125.73" y="1247.5" ></text>
</g>
<g >
<title>sstables::mc::writer::consume_end_of_stream (1 samples, 0.02%)</title><rect x="79.3" y="1605" width="0.2" height="15.0" fill="rgb(248,206,49)" rx="2" ry="2" />
<text  x="82.26" y="1615.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned char, std::pair&lt;unsigned char const, std::optional&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned char const, std::optional&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned char&gt;, std::hash&lt;unsigned char&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::~_Hashtable (1 samples, 0.02%)</title><rect x="677.9" y="1605" width="0.2" height="15.0" fill="rgb(229,31,18)" rx="2" ry="2" />
<text  x="680.86" y="1615.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (2 samples, 0.04%)</title><rect x="58.1" y="1445" width="0.4" height="15.0" fill="rgb(248,20,26)" rx="2" ry="2" />
<text  x="61.08" y="1455.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_slice_or_needs_filtering (3 samples, 0.06%)</title><rect x="934.6" y="1541" width="0.7" height="15.0" fill="rgb(231,114,13)" rx="2" ry="2" />
<text  x="937.59" y="1551.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (1 samples, 0.02%)</title><rect x="100.9" y="1445" width="0.2" height="15.0" fill="rgb(247,218,35)" rx="2" ry="2" />
<text  x="103.87" y="1455.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (1 samples, 0.02%)</title><rect x="58.1" y="1413" width="0.2" height="15.0" fill="rgb(227,74,35)" rx="2" ry="2" />
<text  x="61.08" y="1423.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (3 samples, 0.06%)</title><rect x="680.5" y="1637" width="0.7" height="15.0" fill="rgb(224,167,44)" rx="2" ry="2" />
<text  x="683.50" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="741" width="0.3" height="15.0" fill="rgb(224,178,25)" rx="2" ry="2" />
<text  x="13.44" y="751.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="218.9" y="1365" width="0.2" height="15.0" fill="rgb(220,167,1)" rx="2" ry="2" />
<text  x="221.87" y="1375.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;, seastar::future&lt;void&gt; &gt;, std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;, seastar::future&lt;void&gt; &gt; &gt; &gt;::~unique_ptr (5 samples, 0.09%)</title><rect x="807.8" y="1541" width="1.1" height="15.0" fill="rgb(254,149,15)" rx="2" ry="2" />
<text  x="810.77" y="1551.5" ></text>
</g>
<g >
<title>seastar::internal::uninitialized_wrapper_base&lt;service::storage_proxy_coordinator_query_result, false&gt;::uninitialized_set&lt;service::storage_proxy_coordinator_query_result&gt; (3 samples, 0.06%)</title><rect x="1139.3" y="1621" width="0.6" height="15.0" fill="rgb(214,57,18)" rx="2" ry="2" />
<text  x="1142.27" y="1631.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::move_it (4 samples, 0.07%)</title><rect x="715.1" y="1653" width="0.9" height="15.0" fill="rgb(251,226,0)" rx="2" ry="2" />
<text  x="718.13" y="1663.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::operation&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="73.5" y="1589" width="0.2" height="15.0" fill="rgb(227,129,6)" rx="2" ry="2" />
<text  x="76.52" y="1599.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::get0 (4 samples, 0.07%)</title><rect x="312.2" y="1509" width="0.9" height="15.0" fill="rgb(231,120,46)" rx="2" ry="2" />
<text  x="315.17" y="1519.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.02%)</title><rect x="40.9" y="1317" width="0.2" height="15.0" fill="rgb(233,67,18)" rx="2" ry="2" />
<text  x="43.88" y="1327.5" ></text>
</g>
<g >
<title>query::querier_base::close (3 samples, 0.06%)</title><rect x="1165.5" y="1637" width="0.7" height="15.0" fill="rgb(244,53,41)" rx="2" ry="2" />
<text  x="1168.52" y="1647.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;compact_mutation_state&lt; (29 samples, 0.54%)</title><rect x="557.2" y="1573" width="6.4" height="15.0" fill="rgb(248,214,21)" rx="2" ry="2" />
<text  x="560.21" y="1583.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::free_span (1 samples, 0.02%)</title><rect x="90.9" y="1573" width="0.3" height="15.0" fill="rgb(223,177,47)" rx="2" ry="2" />
<text  x="93.95" y="1583.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="54.6" y="1381" width="0.2" height="15.0" fill="rgb(232,89,17)" rx="2" ry="2" />
<text  x="57.55" y="1391.5" ></text>
</g>
<g >
<title>mutation_fragment::visit&lt;partition_snapshot_read_accounter&amp;&gt; (1 samples, 0.02%)</title><rect x="203.7" y="1397" width="0.2" height="15.0" fill="rgb(227,228,47)" rx="2" ry="2" />
<text  x="206.65" y="1407.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::set_line (1 samples, 0.02%)</title><rect x="27.0" y="1413" width="0.2" height="15.0" fill="rgb(232,139,24)" rx="2" ry="2" />
<text  x="29.98" y="1423.5" ></text>
</g>
<g >
<title>std::_Optional_payload&lt;cql3::expr::expression, true, false, false&gt;::_Optional_payload (1 samples, 0.02%)</title><rect x="60.1" y="1429" width="0.2" height="15.0" fill="rgb(239,149,45)" rx="2" ry="2" />
<text  x="63.07" y="1439.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.02%)</title><rect x="58.5" y="1317" width="0.2" height="15.0" fill="rgb(252,92,20)" rx="2" ry="2" />
<text  x="61.52" y="1327.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.02%)</title><rect x="38.5" y="1301" width="0.2" height="15.0" fill="rgb(212,55,1)" rx="2" ry="2" />
<text  x="41.45" y="1311.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::needs_post_query_ordering (4 samples, 0.07%)</title><rect x="939.9" y="1557" width="0.9" height="15.0" fill="rgb(225,11,39)" rx="2" ry="2" />
<text  x="942.88" y="1567.5" ></text>
</g>
<g >
<title>reader_selector::~reader_selector (2 samples, 0.04%)</title><rect x="592.5" y="1493" width="0.4" height="15.0" fill="rgb(220,102,51)" rx="2" ry="2" />
<text  x="595.50" y="1503.5" ></text>
</g>
<g >
<title>locator::simple_snitch::sort_by_proximity (2 samples, 0.04%)</title><rect x="1051.9" y="1477" width="0.5" height="15.0" fill="rgb(253,2,30)" rx="2" ry="2" />
<text  x="1054.93" y="1487.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.02%)</title><rect x="50.6" y="1301" width="0.2" height="15.0" fill="rgb(205,160,10)" rx="2" ry="2" />
<text  x="53.58" y="1311.5" ></text>
</g>
<g >
<title>main (4,921 samples, 91.98%)</title><rect x="82.6" y="1765" width="1085.3" height="15.0" fill="rgb(229,91,11)" rx="2" ry="2" />
<text  x="85.56" y="1775.5" >main</text>
</g>
<g >
<title>operator delete (4 samples, 0.07%)</title><rect x="603.3" y="1541" width="0.9" height="15.0" fill="rgb(244,205,30)" rx="2" ry="2" />
<text  x="606.31" y="1551.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_M_reset (1 samples, 0.02%)</title><rect x="779.8" y="1445" width="0.2" height="15.0" fill="rgb(229,193,25)" rx="2" ry="2" />
<text  x="782.76" y="1455.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="522.8" y="1317" width="0.2" height="15.0" fill="rgb(218,28,44)" rx="2" ry="2" />
<text  x="525.80" y="1327.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (2 samples, 0.04%)</title><rect x="1158.9" y="1589" width="0.4" height="15.0" fill="rgb(222,107,8)" rx="2" ry="2" />
<text  x="1161.90" y="1599.5" ></text>
</g>
<g >
<title>boost::intrusive::bstree_algorithms&lt;boost::intrusive::rbtree_node_traits&lt;void*, false&gt; &gt;::clear_and_dispose&lt;boost::intrusive::detail::node_disposer&lt;current_deleter&lt;range_tombstone_entry&gt; (3 samples, 0.06%)</title><rect x="583.0" y="1413" width="0.7" height="15.0" fill="rgb(242,125,22)" rx="2" ry="2" />
<text  x="586.02" y="1423.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="1015.8" y="1397" width="0.2" height="15.0" fill="rgb(233,159,52)" rx="2" ry="2" />
<text  x="1018.76" y="1407.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql_transport::messages::result_message::rows&gt;::~shared_ptr_count_for (1 samples, 0.02%)</title><rect x="1133.1" y="1653" width="0.2" height="15.0" fill="rgb(249,222,8)" rx="2" ry="2" />
<text  x="1136.10" y="1663.5" ></text>
</g>
<g >
<title>scanning_reader::fill_buffer (1 samples, 0.02%)</title><rect x="100.4" y="1157" width="0.3" height="15.0" fill="rgb(211,111,53)" rx="2" ry="2" />
<text  x="103.43" y="1167.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (6 samples, 0.11%)</title><rect x="904.8" y="1509" width="1.3" height="15.0" fill="rgb(207,201,50)" rx="2" ry="2" />
<text  x="907.81" y="1519.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="149.2" y="1573" width="0.2" height="15.0" fill="rgb(242,214,22)" rx="2" ry="2" />
<text  x="152.17" y="1583.5" ></text>
</g>
<g >
<title>seastar::future&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry_ptr&gt;::then_impl&lt;utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (1 samples, 0.02%)</title><rect x="736.1" y="1541" width="0.2" height="15.0" fill="rgb(231,103,27)" rx="2" ry="2" />
<text  x="739.09" y="1551.5" ></text>
</g>
<g >
<title>auth::get_permissions (4 samples, 0.07%)</title><rect x="75.7" y="1525" width="0.9" height="15.0" fill="rgb(206,97,31)" rx="2" ry="2" />
<text  x="78.73" y="1535.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::__do_dyncast (5 samples, 0.09%)</title><rect x="11.8" y="1733" width="1.1" height="15.0" fill="rgb(241,131,25)" rx="2" ry="2" />
<text  x="14.76" y="1743.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;query::result_memory_accounter&gt;::move_it (1 samples, 0.02%)</title><rect x="616.3" y="1589" width="0.2" height="15.0" fill="rgb(233,192,14)" rx="2" ry="2" />
<text  x="619.32" y="1599.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;compact_for_query&lt; (2 samples, 0.04%)</title><rect x="446.7" y="1541" width="0.5" height="15.0" fill="rgb(250,58,23)" rx="2" ry="2" />
<text  x="449.71" y="1551.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;void&gt;::set_value&lt;&gt; (1 samples, 0.02%)</title><rect x="693.5" y="1621" width="0.2" height="15.0" fill="rgb(232,35,13)" rx="2" ry="2" />
<text  x="696.52" y="1631.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="1429" width="0.3" height="15.0" fill="rgb(251,55,33)" rx="2" ry="2" />
<text  x="13.44" y="1439.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (3 samples, 0.06%)</title><rect x="1089.9" y="1525" width="0.6" height="15.0" fill="rgb(206,30,21)" rx="2" ry="2" />
<text  x="1092.87" y="1535.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (1 samples, 0.02%)</title><rect x="304.0" y="1445" width="0.2" height="15.0" fill="rgb(222,120,12)" rx="2" ry="2" />
<text  x="307.01" y="1455.5" ></text>
</g>
<g >
<title>atomic_cell::atomic_cell (1 samples, 0.02%)</title><rect x="1114.8" y="1381" width="0.2" height="15.0" fill="rgb(239,77,22)" rx="2" ry="2" />
<text  x="1117.79" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;seastar::future&lt;void&gt; &gt;  (2 samples, 0.04%)</title><rect x="628.2" y="1589" width="0.5" height="15.0" fill="rgb(254,30,40)" rx="2" ry="2" />
<text  x="631.23" y="1599.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::consume_with&lt;row::apply_monotonically (2 samples, 0.04%)</title><rect x="16.4" y="1653" width="0.4" height="15.0" fill="rgb(241,176,46)" rx="2" ry="2" />
<text  x="19.40" y="1663.5" ></text>
</g>
<g >
<title>std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;::pair (1 samples, 0.02%)</title><rect x="49.3" y="1317" width="0.2" height="15.0" fill="rgb(235,29,39)" rx="2" ry="2" />
<text  x="52.26" y="1327.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (13 samples, 0.24%)</title><rect x="912.1" y="1493" width="2.9" height="15.0" fill="rgb(242,111,21)" rx="2" ry="2" />
<text  x="915.09" y="1503.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::move_it (1 samples, 0.02%)</title><rect x="761.2" y="1557" width="0.3" height="15.0" fill="rgb(254,214,49)" rx="2" ry="2" />
<text  x="764.23" y="1567.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::free (1 samples, 0.02%)</title><rect x="431.3" y="1349" width="0.2" height="15.0" fill="rgb(208,140,54)" rx="2" ry="2" />
<text  x="434.27" y="1359.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (1 samples, 0.02%)</title><rect x="88.5" y="1637" width="0.2" height="15.0" fill="rgb(216,4,33)" rx="2" ry="2" />
<text  x="91.52" y="1647.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (1 samples, 0.02%)</title><rect x="642.8" y="1621" width="0.2" height="15.0" fill="rgb(245,0,29)" rx="2" ry="2" />
<text  x="645.79" y="1631.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::move_it (1 samples, 0.02%)</title><rect x="665.9" y="1621" width="0.3" height="15.0" fill="rgb(242,147,48)" rx="2" ry="2" />
<text  x="668.95" y="1631.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="620.5" y="1589" width="0.2" height="15.0" fill="rgb(238,160,14)" rx="2" ry="2" />
<text  x="623.51" y="1599.5" ></text>
</g>
<g >
<title>std::tuple&lt;cql3::operation::raw_update*, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;::tuple (1 samples, 0.02%)</title><rect x="48.8" y="1317" width="0.2" height="15.0" fill="rgb(242,205,14)" rx="2" ry="2" />
<text  x="51.82" y="1327.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;auth::resource_kind, std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;auth::resource_kind&gt;, std::hash&lt;auth::resource_kind&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (5 samples, 0.09%)</title><rect x="766.1" y="1477" width="1.1" height="15.0" fill="rgb(237,197,18)" rx="2" ry="2" />
<text  x="769.08" y="1487.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, seastar::lw_shared_ptr&lt;cql3::column_condition::raw&gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, seastar::lw_shared_ptr&lt;cql3::column_condition::raw&gt; &gt; &gt; &gt;::_Vector_base (1 samples, 0.02%)</title><rect x="61.2" y="1477" width="0.2" height="15.0" fill="rgb(207,183,35)" rx="2" ry="2" />
<text  x="64.17" y="1487.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;partition_key, false, false&gt;::_Optional_base (1 samples, 0.02%)</title><rect x="1050.6" y="1477" width="0.2" height="15.0" fill="rgb(239,28,42)" rx="2" ry="2" />
<text  x="1053.61" y="1487.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.02%)</title><rect x="50.6" y="1253" width="0.2" height="15.0" fill="rgb(244,151,50)" rx="2" ry="2" />
<text  x="53.58" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.02%)</title><rect x="15.5" y="1573" width="0.2" height="15.0" fill="rgb(231,125,52)" rx="2" ry="2" />
<text  x="18.51" y="1583.5" ></text>
</g>
<g >
<title>bound_view::from_range_start&lt;nonwrapping_interval&gt; (2 samples, 0.04%)</title><rect x="267.4" y="1269" width="0.4" height="15.0" fill="rgb(246,76,24)" rx="2" ry="2" />
<text  x="270.39" y="1279.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::pop_back (1 samples, 0.02%)</title><rect x="39.6" y="1461" width="0.2" height="15.0" fill="rgb(238,74,29)" rx="2" ry="2" />
<text  x="42.56" y="1471.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="887.4" y="1413" width="0.2" height="15.0" fill="rgb(211,2,12)" rx="2" ry="2" />
<text  x="890.39" y="1423.5" ></text>
</g>
<g >
<title>schema::schema (1 samples, 0.02%)</title><rect x="17.1" y="1349" width="0.2" height="15.0" fill="rgb(254,35,49)" rx="2" ry="2" />
<text  x="20.06" y="1359.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.02%)</title><rect x="59.4" y="1317" width="0.2" height="15.0" fill="rgb(213,94,22)" rx="2" ry="2" />
<text  x="62.41" y="1327.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::execute (1 samples, 0.02%)</title><rect x="19.0" y="1605" width="0.3" height="15.0" fill="rgb(237,26,9)" rx="2" ry="2" />
<text  x="22.04" y="1615.5" ></text>
</g>
<g >
<title>seastar::internal::io_pgetevents (1 samples, 0.02%)</title><rect x="1167.5" y="1621" width="0.2" height="15.0" fill="rgb(245,92,32)" rx="2" ry="2" />
<text  x="1170.50" y="1631.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (1 samples, 0.02%)</title><rect x="849.7" y="1477" width="0.2" height="15.0" fill="rgb(254,197,30)" rx="2" ry="2" />
<text  x="852.67" y="1487.5" ></text>
</g>
<g >
<title>std::variant&lt;fragmented_temporary_buffer::view, managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="850.1" y="1429" width="0.2" height="15.0" fill="rgb(240,215,29)" rx="2" ry="2" />
<text  x="853.12" y="1439.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (3 samples, 0.06%)</title><rect x="796.7" y="1381" width="0.7" height="15.0" fill="rgb(254,65,23)" rx="2" ry="2" />
<text  x="799.74" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;8ul, cql3::expr::untyped_constant&gt; (1 samples, 0.02%)</title><rect x="53.7" y="1221" width="0.2" height="15.0" fill="rgb(223,156,39)" rx="2" ry="2" />
<text  x="56.67" y="1231.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (16 samples, 0.30%)</title><rect x="726.4" y="1525" width="3.5" height="15.0" fill="rgb(205,112,0)" rx="2" ry="2" />
<text  x="729.38" y="1535.5" ></text>
</g>
<g >
<title>cql3::raw_value::make_value (1 samples, 0.02%)</title><rect x="892.7" y="1445" width="0.2" height="15.0" fill="rgb(231,147,45)" rx="2" ry="2" />
<text  x="895.68" y="1455.5" ></text>
</g>
<g >
<title>service::storage_service::prepare_to_join (1 samples, 0.02%)</title><rect x="10.4" y="309" width="0.3" height="15.0" fill="rgb(214,5,47)" rx="2" ry="2" />
<text  x="13.44" y="319.5" ></text>
</g>
<g >
<title>partition_snapshot::slide_to_oldest (3 samples, 0.06%)</title><rect x="580.8" y="1429" width="0.7" height="15.0" fill="rgb(254,48,6)" rx="2" ry="2" />
<text  x="583.81" y="1439.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::get (3 samples, 0.06%)</title><rect x="359.6" y="1349" width="0.7" height="15.0" fill="rgb(244,129,39)" rx="2" ry="2" />
<text  x="362.59" y="1359.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.02%)</title><rect x="973.9" y="1413" width="0.2" height="15.0" fill="rgb(205,138,54)" rx="2" ry="2" />
<text  x="976.85" y="1423.5" ></text>
</g>
<g >
<title>seastar::uninitialized_string&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; (1 samples, 0.02%)</title><rect x="77.9" y="1637" width="0.3" height="15.0" fill="rgb(235,129,41)" rx="2" ry="2" />
<text  x="80.93" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt;::~_Variant_storage (1 samples, 0.02%)</title><rect x="649.2" y="1445" width="0.2" height="15.0" fill="rgb(205,75,42)" rx="2" ry="2" />
<text  x="652.19" y="1455.5" ></text>
</g>
<g >
<title>service::storage_service::join_cluster (1 samples, 0.02%)</title><rect x="17.3" y="1701" width="0.2" height="15.0" fill="rgb(239,118,14)" rx="2" ry="2" />
<text  x="20.28" y="1711.5" ></text>
</g>
<g >
<title>operator new (9 samples, 0.17%)</title><rect x="940.8" y="1557" width="2.0" height="15.0" fill="rgb(206,139,29)" rx="2" ry="2" />
<text  x="943.77" y="1567.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::find (5 samples, 0.09%)</title><rect x="655.8" y="1589" width="1.1" height="15.0" fill="rgb(207,213,37)" rx="2" ry="2" />
<text  x="658.80" y="1599.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.07%)</title><rect x="532.5" y="1413" width="0.9" height="15.0" fill="rgb(247,73,52)" rx="2" ry="2" />
<text  x="535.51" y="1423.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="1285" width="0.3" height="15.0" fill="rgb(228,49,21)" rx="2" ry="2" />
<text  x="13.44" y="1295.5" ></text>
</g>
<g >
<title>partition_key::legacy_tri_compare (34 samples, 0.64%)</title><rect x="491.3" y="1413" width="7.5" height="15.0" fill="rgb(216,163,10)" rx="2" ry="2" />
<text  x="494.26" y="1423.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::do_refresh_state (49 samples, 0.92%)</title><rect x="282.0" y="1381" width="10.8" height="15.0" fill="rgb(246,116,7)" rx="2" ry="2" />
<text  x="284.95" y="1391.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::forward_to (1 samples, 0.02%)</title><rect x="714.5" y="1653" width="0.2" height="15.0" fill="rgb(213,138,52)" rx="2" ry="2" />
<text  x="717.47" y="1663.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (3 samples, 0.06%)</title><rect x="320.8" y="1445" width="0.6" height="15.0" fill="rgb(229,220,14)" rx="2" ry="2" />
<text  x="323.77" y="1455.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::clear (1 samples, 0.02%)</title><rect x="305.3" y="1461" width="0.3" height="15.0" fill="rgb(207,195,46)" rx="2" ry="2" />
<text  x="308.33" y="1471.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::contains&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (17 samples, 0.32%)</title><rect x="816.1" y="1493" width="3.8" height="15.0" fill="rgb(209,15,17)" rx="2" ry="2" />
<text  x="819.15" y="1503.5" ></text>
</g>
<g >
<title>cql3::expr::has_supporting_index (2 samples, 0.04%)</title><rect x="70.2" y="1525" width="0.5" height="15.0" fill="rgb(217,129,38)" rx="2" ry="2" />
<text  x="73.21" y="1535.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.02%)</title><rect x="79.3" y="1685" width="0.2" height="15.0" fill="rgb(222,187,27)" rx="2" ry="2" />
<text  x="82.26" y="1695.5" ></text>
</g>
<g >
<title>nonwrapping_interval&lt;clustering_key_prefix&gt;::make_open_ended_both_sides (20 samples, 0.37%)</title><rect x="1082.6" y="1541" width="4.4" height="15.0" fill="rgb(208,20,14)" rx="2" ry="2" />
<text  x="1085.59" y="1551.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::~vector (3 samples, 0.06%)</title><rect x="1025.9" y="1429" width="0.7" height="15.0" fill="rgb(253,138,5)" rx="2" ry="2" />
<text  x="1028.90" y="1439.5" ></text>
</g>
<g >
<title>ser::safe_serialize_as_uint32&lt;bytes_ostream&gt; (1 samples, 0.02%)</title><rect x="1124.5" y="1237" width="0.2" height="15.0" fill="rgb(237,6,47)" rx="2" ry="2" />
<text  x="1127.49" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt;::~_Variant_storage (2 samples, 0.04%)</title><rect x="890.7" y="1429" width="0.4" height="15.0" fill="rgb(220,21,36)" rx="2" ry="2" />
<text  x="893.70" y="1439.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (8 samples, 0.15%)</title><rect x="1017.1" y="1397" width="1.7" height="15.0" fill="rgb(219,92,0)" rx="2" ry="2" />
<text  x="1020.08" y="1407.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.02%)</title><rect x="11.5" y="1653" width="0.3" height="15.0" fill="rgb(246,75,38)" rx="2" ry="2" />
<text  x="14.54" y="1663.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.02%)</title><rect x="41.5" y="1333" width="0.3" height="15.0" fill="rgb(238,124,41)" rx="2" ry="2" />
<text  x="44.54" y="1343.5" ></text>
</g>
<g >
<title>database::find_column_family (2 samples, 0.04%)</title><rect x="999.4" y="1397" width="0.5" height="15.0" fill="rgb(232,80,50)" rx="2" ry="2" />
<text  x="1002.44" y="1407.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, enum_set&lt;super_enum&lt;auth::permission,  (2 samples, 0.04%)</title><rect x="75.9" y="1461" width="0.5" height="15.0" fill="rgb(208,205,14)" rx="2" ry="2" />
<text  x="78.95" y="1471.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (2 samples, 0.04%)</title><rect x="319.0" y="1461" width="0.4" height="15.0" fill="rgb(245,69,36)" rx="2" ry="2" />
<text  x="322.01" y="1471.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::allocate_on (1 samples, 0.02%)</title><rect x="853.4" y="1413" width="0.2" height="15.0" fill="rgb(211,122,54)" rx="2" ry="2" />
<text  x="856.42" y="1423.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::then_wrapped_common&lt;false, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (8 samples, 0.15%)</title><rect x="822.8" y="1573" width="1.7" height="15.0" fill="rgb(216,112,5)" rx="2" ry="2" />
<text  x="825.77" y="1583.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="74.4" y="1573" width="0.2" height="15.0" fill="rgb(216,70,34)" rx="2" ry="2" />
<text  x="77.40" y="1583.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (4 samples, 0.07%)</title><rect x="332.7" y="1525" width="0.9" height="15.0" fill="rgb(228,173,34)" rx="2" ry="2" />
<text  x="335.68" y="1535.5" ></text>
</g>
<g >
<title>std::apply&lt;sstables::sstable_directory::reshape (1 samples, 0.02%)</title><rect x="15.5" y="1669" width="0.2" height="15.0" fill="rgb(252,18,7)" rx="2" ry="2" />
<text  x="18.51" y="1679.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.06%)</title><rect x="925.8" y="1557" width="0.6" height="15.0" fill="rgb(215,36,45)" rx="2" ry="2" />
<text  x="928.77" y="1567.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::operator (1 samples, 0.02%)</title><rect x="100.4" y="1205" width="0.3" height="15.0" fill="rgb(231,5,29)" rx="2" ry="2" />
<text  x="103.43" y="1215.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::raw::parsed_statement, std::default_delete&lt;cql3::statements::raw::parsed_statement&gt; &gt;::operator= (1 samples, 0.02%)</title><rect x="64.9" y="1541" width="0.2" height="15.0" fill="rgb(218,183,44)" rx="2" ry="2" />
<text  x="67.92" y="1551.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="832.0" y="1557" width="0.3" height="15.0" fill="rgb(250,202,12)" rx="2" ry="2" />
<text  x="835.03" y="1567.5" ></text>
</g>
<g >
<title>mutation_fragment::consume&lt;flat_mutation_reader::impl::consumer_adapter&lt;sstables::sstable_writer&gt; &gt; (8 samples, 0.15%)</title><rect x="80.4" y="1637" width="1.7" height="15.0" fill="rgb(209,75,19)" rx="2" ry="2" />
<text  x="83.36" y="1647.5" ></text>
</g>
<g >
<title>service::client_state::has_access (174 samples, 3.25%)</title><rect x="769.2" y="1525" width="38.3" height="15.0" fill="rgb(245,153,39)" rx="2" ry="2" />
<text  x="772.17" y="1535.5" >ser..</text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (2 samples, 0.04%)</title><rect x="685.8" y="1621" width="0.4" height="15.0" fill="rgb(251,0,29)" rx="2" ry="2" />
<text  x="688.80" y="1631.5" ></text>
</g>
<g >
<title>mutation_reader_merger::mutation_reader_merger (25 samples, 0.47%)</title><rect x="459.3" y="1461" width="5.5" height="15.0" fill="rgb(234,214,44)" rx="2" ry="2" />
<text  x="462.28" y="1471.5" ></text>
</g>
<g >
<title>partition_snapshot::get_change_mark (2 samples, 0.04%)</title><rect x="262.8" y="1333" width="0.4" height="15.0" fill="rgb(236,168,20)" rx="2" ry="2" />
<text  x="265.76" y="1343.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (2 samples, 0.04%)</title><rect x="744.2" y="1429" width="0.5" height="15.0" fill="rgb(205,66,45)" rx="2" ry="2" />
<text  x="747.25" y="1439.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.02%)</title><rect x="17.1" y="1237" width="0.2" height="15.0" fill="rgb(254,97,36)" rx="2" ry="2" />
<text  x="20.06" y="1247.5" ></text>
</g>
<g >
<title>ser::qr_partition__rows&lt;bytes_ostream&gt;::add (1 samples, 0.02%)</title><rect x="367.5" y="1333" width="0.2" height="15.0" fill="rgb(233,10,1)" rx="2" ry="2" />
<text  x="370.53" y="1343.5" ></text>
</g>
<g >
<title>compound_wrapper&lt;clustering_key_prefix, clustering_key_prefix_view&gt;::explode (2 samples, 0.04%)</title><rect x="1125.2" y="1253" width="0.4" height="15.0" fill="rgb(244,32,39)" rx="2" ry="2" />
<text  x="1128.16" y="1263.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::add_operation (1 samples, 0.02%)</title><rect x="68.9" y="1573" width="0.2" height="15.0" fill="rgb(247,203,21)" rx="2" ry="2" />
<text  x="71.89" y="1583.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_in_thread&lt;sstables::sstable_writer, flat_mutation_reader::no_filter&gt; (1 samples, 0.02%)</title><rect x="10.7" y="1637" width="0.2" height="15.0" fill="rgb(221,26,2)" rx="2" ry="2" />
<text  x="13.66" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::~_Variant_storage (1 samples, 0.02%)</title><rect x="69.6" y="1493" width="0.2" height="15.0" fill="rgb(254,116,25)" rx="2" ry="2" />
<text  x="72.55" y="1503.5" ></text>
</g>
<g >
<title>std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;::~pair (1 samples, 0.02%)</title><rect x="49.7" y="1301" width="0.2" height="15.0" fill="rgb(205,118,27)" rx="2" ry="2" />
<text  x="52.70" y="1311.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="331.6" y="1541" width="0.2" height="15.0" fill="rgb(245,199,37)" rx="2" ry="2" />
<text  x="334.58" y="1551.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_state&lt;std::tuple&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt; &gt;, seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (7 samples, 0.13%)</title><rect x="781.5" y="1397" width="1.6" height="15.0" fill="rgb(229,109,52)" rx="2" ry="2" />
<text  x="784.52" y="1407.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.02%)</title><rect x="1015.5" y="1333" width="0.3" height="15.0" fill="rgb(220,203,25)" rx="2" ry="2" />
<text  x="1018.54" y="1343.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector (3 samples, 0.06%)</title><rect x="1070.7" y="1493" width="0.6" height="15.0" fill="rgb(252,169,52)" rx="2" ry="2" />
<text  x="1073.68" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;3ul, cql3::expr::untyped_constant&gt; (1 samples, 0.02%)</title><rect x="53.7" y="1141" width="0.2" height="15.0" fill="rgb(217,218,1)" rx="2" ry="2" />
<text  x="56.67" y="1151.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.02%)</title><rect x="10.7" y="1717" width="0.2" height="15.0" fill="rgb(207,86,22)" rx="2" ry="2" />
<text  x="13.66" y="1727.5" ></text>
</g>
<g >
<title>non-virtual thunk to sstables::mx::mx_sstable_mutation_reader::fill_buffer (1 samples, 0.02%)</title><rect x="1130.0" y="1093" width="0.2" height="15.0" fill="rgb(205,11,20)" rx="2" ry="2" />
<text  x="1133.01" y="1103.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.02%)</title><rect x="37.3" y="1381" width="0.3" height="15.0" fill="rgb(219,217,34)" rx="2" ry="2" />
<text  x="40.35" y="1391.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_stringbuf (1 samples, 0.02%)</title><rect x="1189.8" y="1781" width="0.2" height="15.0" fill="rgb(251,171,38)" rx="2" ry="2" />
<text  x="1192.78" y="1791.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;enum_set&lt;super_enum&lt;auth::permission,  (2 samples, 0.04%)</title><rect x="779.3" y="1445" width="0.5" height="15.0" fill="rgb(220,47,24)" rx="2" ry="2" />
<text  x="782.32" y="1455.5" ></text>
</g>
<g >
<title>query::partition_slice::row_ranges (2 samples, 0.04%)</title><rect x="358.3" y="1365" width="0.4" height="15.0" fill="rgb(217,105,25)" rx="2" ry="2" />
<text  x="361.27" y="1375.5" ></text>
</g>
<g >
<title>std::__is_sorted_until&lt;__gnu_cxx::__normal_iterator&lt;column_definition const*, std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;column_definition::name_comparator&gt; &gt; (1 samples, 0.02%)</title><rect x="17.1" y="1301" width="0.2" height="15.0" fill="rgb(249,122,53)" rx="2" ry="2" />
<text  x="20.06" y="1311.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::~vector (4 samples, 0.07%)</title><rect x="1027.7" y="1445" width="0.8" height="15.0" fill="rgb(238,208,9)" rx="2" ry="2" />
<text  x="1030.67" y="1455.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.06%)</title><rect x="463.0" y="1381" width="0.7" height="15.0" fill="rgb(234,166,42)" rx="2" ry="2" />
<text  x="466.03" y="1391.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::alloc (1 samples, 0.02%)</title><rect x="853.9" y="1381" width="0.2" height="15.0" fill="rgb(230,197,7)" rx="2" ry="2" />
<text  x="856.87" y="1391.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_construct&lt;interval_bound&lt;dht::ring_position&gt; const&amp;&gt; (1 samples, 0.02%)</title><rect x="855.4" y="1509" width="0.2" height="15.0" fill="rgb(209,212,48)" rx="2" ry="2" />
<text  x="858.41" y="1519.5" ></text>
</g>
<g >
<title>schema_mutations::schema_mutations (1 samples, 0.02%)</title><rect x="102.4" y="1525" width="0.2" height="15.0" fill="rgb(253,144,2)" rx="2" ry="2" />
<text  x="105.41" y="1535.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="328.5" y="1509" width="0.2" height="15.0" fill="rgb(207,131,36)" rx="2" ry="2" />
<text  x="331.49" y="1519.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::_M_range_initialize&lt;managed_bytes const*&gt; (5 samples, 0.09%)</title><rect x="899.3" y="1493" width="1.1" height="15.0" fill="rgb(244,193,25)" rx="2" ry="2" />
<text  x="902.30" y="1503.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_requests (1 samples, 0.02%)</title><rect x="1028.8" y="1509" width="0.2" height="15.0" fill="rgb(206,113,30)" rx="2" ry="2" />
<text  x="1031.77" y="1519.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (1 samples, 0.02%)</title><rect x="804.5" y="1477" width="0.2" height="15.0" fill="rgb(228,119,15)" rx="2" ry="2" />
<text  x="807.46" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (1 samples, 0.02%)</title><rect x="45.7" y="1461" width="0.3" height="15.0" fill="rgb(206,32,17)" rx="2" ry="2" />
<text  x="48.73" y="1471.5" ></text>
</g>
<g >
<title>absl::hash_internal::HashState::combine_contiguous (2 samples, 0.04%)</title><rect x="1040.5" y="1429" width="0.4" height="15.0" fill="rgb(232,169,20)" rx="2" ry="2" />
<text  x="1043.46" y="1439.5" ></text>
</g>
<g >
<title>frozen_schema::frozen_schema (2 samples, 0.04%)</title><rect x="101.5" y="1605" width="0.5" height="15.0" fill="rgb(213,121,39)" rx="2" ry="2" />
<text  x="104.53" y="1615.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_istream (1 samples, 0.02%)</title><rect x="51.9" y="1381" width="0.2" height="15.0" fill="rgb(226,193,6)" rx="2" ry="2" />
<text  x="54.91" y="1391.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;compact_for_query&lt; (1 samples, 0.02%)</title><rect x="441.2" y="1509" width="0.2" height="15.0" fill="rgb(235,128,39)" rx="2" ry="2" />
<text  x="444.20" y="1519.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reclaiming_disabled&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (230 samples, 4.30%)</title><rect x="219.5" y="1365" width="50.8" height="15.0" fill="rgb(209,139,44)" rx="2" ry="2" />
<text  x="222.53" y="1375.5" >logal..</text>
</g>
<g >
<title>seastar::gate::enter (3 samples, 0.06%)</title><rect x="132.2" y="1605" width="0.7" height="15.0" fill="rgb(235,5,33)" rx="2" ry="2" />
<text  x="135.19" y="1615.5" ></text>
</g>
<g >
<title>db::schema_tables::update_schema_version_and_announce (4 samples, 0.07%)</title><rect x="100.4" y="1637" width="0.9" height="15.0" fill="rgb(230,27,42)" rx="2" ry="2" />
<text  x="103.43" y="1647.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (2 samples, 0.04%)</title><rect x="1012.4" y="1349" width="0.5" height="15.0" fill="rgb(250,146,23)" rx="2" ry="2" />
<text  x="1015.45" y="1359.5" ></text>
</g>
<g >
<title>basic_atomic_cell_view&lt; (35 samples, 0.65%)</title><rect x="408.3" y="1317" width="7.8" height="15.0" fill="rgb(239,98,36)" rx="2" ry="2" />
<text  x="411.33" y="1327.5" ></text>
</g>
<g >
<title>std::tuple&lt;cql3::operation::raw_update*, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;::tuple&lt;cql3::operation::raw_update*&amp;, std::default_delete&lt;cql3::operation::set_value&gt;, true&gt; (2 samples, 0.04%)</title><rect x="56.8" y="1413" width="0.4" height="15.0" fill="rgb(224,151,17)" rx="2" ry="2" />
<text  x="59.76" y="1423.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.04%)</title><rect x="802.9" y="1461" width="0.5" height="15.0" fill="rgb(248,33,24)" rx="2" ry="2" />
<text  x="805.92" y="1471.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take (1 samples, 0.02%)</title><rect x="1166.4" y="1637" width="0.2" height="15.0" fill="rgb(244,31,30)" rx="2" ry="2" />
<text  x="1169.40" y="1647.5" ></text>
</g>
<g >
<title>do_io_check&lt;checked_file_impl::list_directory (1 samples, 0.02%)</title><rect x="690.7" y="1541" width="0.2" height="15.0" fill="rgb(240,166,4)" rx="2" ry="2" />
<text  x="693.65" y="1551.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (4 samples, 0.07%)</title><rect x="740.3" y="1509" width="0.9" height="15.0" fill="rgb(209,82,49)" rx="2" ry="2" />
<text  x="743.28" y="1519.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (2 samples, 0.04%)</title><rect x="135.5" y="1605" width="0.4" height="15.0" fill="rgb(225,32,33)" rx="2" ry="2" />
<text  x="138.50" y="1615.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::statements::raw::parsed_statement, std::default_delete&lt;cql3::statements::raw::parsed_statement&gt;, true, true&gt;::operator= (1 samples, 0.02%)</title><rect x="64.9" y="1525" width="0.2" height="15.0" fill="rgb(241,149,32)" rx="2" ry="2" />
<text  x="67.92" y="1535.5" ></text>
</g>
<g >
<title>cql3::terminal::to_expression (2 samples, 0.04%)</title><rect x="854.3" y="1429" width="0.4" height="15.0" fill="rgb(210,109,3)" rx="2" ry="2" />
<text  x="857.31" y="1439.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;void&gt;::satisfy_with_result_of&lt;seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::then_wrapped_nrvo&lt;void, service::abstract_read_executor::make_data_requests (49 samples, 0.92%)</title><rect x="701.5" y="1637" width="10.8" height="15.0" fill="rgb(234,190,39)" rx="2" ry="2" />
<text  x="704.46" y="1647.5" ></text>
</g>
<g >
<title>__tls_init (1 samples, 0.02%)</title><rect x="514.4" y="1413" width="0.2" height="15.0" fill="rgb(243,8,22)" rx="2" ry="2" />
<text  x="517.42" y="1423.5" ></text>
</g>
<g >
<title>utils::timed_rate_moving_average_and_histogram::mark (1 samples, 0.02%)</title><rect x="634.6" y="1589" width="0.2" height="15.0" fill="rgb(207,171,6)" rx="2" ry="2" />
<text  x="637.63" y="1599.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_M_reset (1 samples, 0.02%)</title><rect x="918.5" y="1493" width="0.2" height="15.0" fill="rgb(231,25,38)" rx="2" ry="2" />
<text  x="921.49" y="1503.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::move_it (1 samples, 0.02%)</title><rect x="643.0" y="1621" width="0.2" height="15.0" fill="rgb(248,205,36)" rx="2" ry="2" />
<text  x="646.01" y="1631.5" ></text>
</g>
<g >
<title>std::apply&lt;auth::permissions_cache::get (2 samples, 0.04%)</title><rect x="75.9" y="1477" width="0.5" height="15.0" fill="rgb(254,144,52)" rx="2" ry="2" />
<text  x="78.95" y="1487.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (2 samples, 0.04%)</title><rect x="51.0" y="1429" width="0.5" height="15.0" fill="rgb(235,113,47)" rx="2" ry="2" />
<text  x="54.02" y="1439.5" ></text>
</g>
<g >
<title>query::digester::digester (1 samples, 0.02%)</title><rect x="609.7" y="1557" width="0.2" height="15.0" fill="rgb(227,162,15)" rx="2" ry="2" />
<text  x="612.70" y="1567.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::semaphore_units&lt;db::commitlog::segment_manager::request_controller_timeout_exception_factory, seastar::lowres_clock&gt; &gt;::move_it (1 samples, 0.02%)</title><rect x="1117.7" y="1445" width="0.2" height="15.0" fill="rgb(218,48,9)" rx="2" ry="2" />
<text  x="1120.66" y="1455.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_pausable&lt;scanning_reader::consumer&gt; (1 samples, 0.02%)</title><rect x="100.9" y="1125" width="0.2" height="15.0" fill="rgb(213,89,1)" rx="2" ry="2" />
<text  x="103.87" y="1135.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_Optional_payload_base (1 samples, 0.02%)</title><rect x="1073.1" y="1509" width="0.2" height="15.0" fill="rgb(245,172,13)" rx="2" ry="2" />
<text  x="1076.10" y="1519.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (3 samples, 0.06%)</title><rect x="803.8" y="1445" width="0.7" height="15.0" fill="rgb(216,206,19)" rx="2" ry="2" />
<text  x="806.80" y="1455.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::then_impl&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (2 samples, 0.04%)</title><rect x="170.3" y="1525" width="0.5" height="15.0" fill="rgb(222,13,18)" rx="2" ry="2" />
<text  x="173.35" y="1535.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_live_sorted_endpoints (81 samples, 1.51%)</title><rect x="1051.9" y="1493" width="17.9" height="15.0" fill="rgb(212,18,48)" rx="2" ry="2" />
<text  x="1054.93" y="1503.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.04%)</title><rect x="521.7" y="1349" width="0.4" height="15.0" fill="rgb(226,21,7)" rx="2" ry="2" />
<text  x="524.70" y="1359.5" ></text>
</g>
<g >
<title>mutation_partition_view::do_accept&lt;partition_builder&gt; (8 samples, 0.15%)</title><rect x="1114.8" y="1397" width="1.8" height="15.0" fill="rgb(251,100,34)" rx="2" ry="2" />
<text  x="1117.79" y="1407.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="554.1" y="1493" width="0.2" height="15.0" fill="rgb(235,90,7)" rx="2" ry="2" />
<text  x="557.12" y="1503.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::finally_body&lt;seastar::smp::submit_to&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (1 samples, 0.02%)</title><rect x="714.3" y="1653" width="0.2" height="15.0" fill="rgb(232,92,41)" rx="2" ry="2" />
<text  x="717.25" y="1663.5" ></text>
</g>
<g >
<title>cql3::raw_value_view::raw_value_view (1 samples, 0.02%)</title><rect x="849.9" y="1429" width="0.2" height="15.0" fill="rgb(237,131,30)" rx="2" ry="2" />
<text  x="852.90" y="1439.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;,  (21 samples, 0.39%)</title><rect x="726.2" y="1573" width="4.6" height="15.0" fill="rgb(208,52,1)" rx="2" ry="2" />
<text  x="729.16" y="1583.5" ></text>
</g>
<g >
<title>partition_entry::make_evictable (1 samples, 0.02%)</title><rect x="16.0" y="1717" width="0.2" height="15.0" fill="rgb(210,65,36)" rx="2" ry="2" />
<text  x="18.96" y="1727.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.02%)</title><rect x="22.6" y="1333" width="0.2" height="15.0" fill="rgb(211,111,8)" rx="2" ry="2" />
<text  x="25.57" y="1343.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (26 samples, 0.49%)</title><rect x="1112.4" y="1589" width="5.7" height="15.0" fill="rgb(228,77,25)" rx="2" ry="2" />
<text  x="1115.36" y="1599.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (5 samples, 0.09%)</title><rect x="1024.6" y="1381" width="1.1" height="15.0" fill="rgb(247,89,16)" rx="2" ry="2" />
<text  x="1027.58" y="1391.5" ></text>
</g>
<g >
<title>std::__find_if&lt;gms::inet_address*, __gnu_cxx::__ops::_Iter_equals_val&lt;gms::inet_address const&gt; &gt; (1 samples, 0.02%)</title><rect x="713.4" y="1621" width="0.2" height="15.0" fill="rgb(236,58,13)" rx="2" ry="2" />
<text  x="716.37" y="1631.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::guard (1 samples, 0.02%)</title><rect x="542.2" y="1461" width="0.2" height="15.0" fill="rgb(240,222,14)" rx="2" ry="2" />
<text  x="545.21" y="1471.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="773" width="0.3" height="15.0" fill="rgb(251,66,47)" rx="2" ry="2" />
<text  x="13.44" y="783.5" ></text>
</g>
<g >
<title>cql3::raw_value_view::make_temporary (8 samples, 0.15%)</title><rect x="894.4" y="1493" width="1.8" height="15.0" fill="rgb(248,43,18)" rx="2" ry="2" />
<text  x="897.45" y="1503.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (8 samples, 0.15%)</title><rect x="1034.1" y="1461" width="1.7" height="15.0" fill="rgb(228,125,19)" rx="2" ry="2" />
<text  x="1037.06" y="1471.5" ></text>
</g>
<g >
<title>std::operator+ (2 samples, 0.04%)</title><rect x="55.4" y="1253" width="0.5" height="15.0" fill="rgb(221,59,17)" rx="2" ry="2" />
<text  x="58.44" y="1263.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (1 samples, 0.02%)</title><rect x="649.2" y="1461" width="0.2" height="15.0" fill="rgb(216,157,48)" rx="2" ry="2" />
<text  x="652.19" y="1471.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (6 samples, 0.11%)</title><rect x="496.6" y="1349" width="1.3" height="15.0" fill="rgb(225,114,16)" rx="2" ry="2" />
<text  x="499.56" y="1359.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (2 samples, 0.04%)</title><rect x="923.6" y="1525" width="0.4" height="15.0" fill="rgb(241,133,7)" rx="2" ry="2" />
<text  x="926.56" y="1535.5" ></text>
</g>
<g >
<title>query::querier_base::querier_base (1 samples, 0.02%)</title><rect x="628.9" y="1573" width="0.2" height="15.0" fill="rgb(244,66,3)" rx="2" ry="2" />
<text  x="631.89" y="1583.5" ></text>
</g>
<g >
<title>std::is_sorted&lt;__gnu_cxx::__normal_iterator&lt;column_definition const*, std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt; &gt;, column_definition::name_comparator&gt; (1 samples, 0.02%)</title><rect x="17.1" y="1317" width="0.2" height="15.0" fill="rgb(245,23,11)" rx="2" ry="2" />
<text  x="20.06" y="1327.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.02%)</title><rect x="58.5" y="1285" width="0.2" height="15.0" fill="rgb(248,137,45)" rx="2" ry="2" />
<text  x="61.52" y="1295.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.04%)</title><rect x="40.9" y="1397" width="0.4" height="15.0" fill="rgb(251,219,40)" rx="2" ry="2" />
<text  x="43.88" y="1407.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="49.5" y="1301" width="0.2" height="15.0" fill="rgb(234,199,11)" rx="2" ry="2" />
<text  x="52.48" y="1311.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, unsigned int, std::_Identity&lt;unsigned int&gt;, std::less&lt;unsigned int&gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;unsigned int&gt; &gt;::end (2 samples, 0.04%)</title><rect x="35.6" y="1445" width="0.4" height="15.0" fill="rgb(220,227,7)" rx="2" ry="2" />
<text  x="38.59" y="1455.5" ></text>
</g>
<g >
<title>utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (4 samples, 0.07%)</title><rect x="785.3" y="1301" width="0.9" height="15.0" fill="rgb(252,174,34)" rx="2" ry="2" />
<text  x="788.27" y="1311.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::future&lt;void&gt;  (43 samples, 0.80%)</title><rect x="1118.5" y="1509" width="9.5" height="15.0" fill="rgb(209,211,37)" rx="2" ry="2" />
<text  x="1121.54" y="1519.5" ></text>
</g>
<g >
<title>__strcmp_avx2 (1 samples, 0.02%)</title><rect x="78.2" y="1765" width="0.2" height="15.0" fill="rgb(242,90,47)" rx="2" ry="2" />
<text  x="81.15" y="1775.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;managed_bytes&gt;::allocate (1 samples, 0.02%)</title><rect x="928.4" y="1525" width="0.2" height="15.0" fill="rgb(221,145,36)" rx="2" ry="2" />
<text  x="931.41" y="1535.5" ></text>
</g>
<g >
<title>mutation_reader_merger::maybe_add_readers (3 samples, 0.06%)</title><rect x="179.4" y="1429" width="0.7" height="15.0" fill="rgb(247,84,23)" rx="2" ry="2" />
<text  x="182.39" y="1439.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="920.7" y="1493" width="0.2" height="15.0" fill="rgb(238,181,45)" rx="2" ry="2" />
<text  x="923.70" y="1503.5" ></text>
</g>
<g >
<title>range_tombstone_list::slice (20 samples, 0.37%)</title><rect x="285.7" y="1365" width="4.4" height="15.0" fill="rgb(254,120,6)" rx="2" ry="2" />
<text  x="288.70" y="1375.5" ></text>
</g>
<g >
<title>make_flat_mutation_reader&lt;empty_flat_reader, seastar::lw_shared_ptr&lt;schema const&gt;, reader_permit&gt; (18 samples, 0.34%)</title><rect x="546.4" y="1445" width="4.0" height="15.0" fill="rgb(242,61,15)" rx="2" ry="2" />
<text  x="549.40" y="1455.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_Optional_payload_base (1 samples, 0.02%)</title><rect x="855.4" y="1493" width="0.2" height="15.0" fill="rgb(235,157,51)" rx="2" ry="2" />
<text  x="858.41" y="1503.5" ></text>
</g>
<g >
<title>ser::qr_partition__static_row&lt;bytes_ostream&gt;::start_cells (2 samples, 0.04%)</title><rect x="350.1" y="1317" width="0.4" height="15.0" fill="rgb(212,92,24)" rx="2" ry="2" />
<text  x="353.10" y="1327.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (8 samples, 0.15%)</title><rect x="742.5" y="1477" width="1.7" height="15.0" fill="rgb(220,148,30)" rx="2" ry="2" />
<text  x="745.48" y="1487.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_rehash_aux (3 samples, 0.06%)</title><rect x="1147.9" y="1573" width="0.6" height="15.0" fill="rgb(237,18,46)" rx="2" ry="2" />
<text  x="1150.87" y="1583.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;compact_mutation_state&lt; (12 samples, 0.22%)</title><rect x="624.9" y="1573" width="2.7" height="15.0" fill="rgb(229,73,16)" rx="2" ry="2" />
<text  x="627.92" y="1583.5" ></text>
</g>
<g >
<title>tracing::global_trace_state_ptr::global_trace_state_ptr (2 samples, 0.04%)</title><rect x="1026.6" y="1429" width="0.4" height="15.0" fill="rgb(250,20,44)" rx="2" ry="2" />
<text  x="1029.56" y="1439.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;managed_bytes const*, managed_bytes*&gt; (1 samples, 0.02%)</title><rect x="900.2" y="1477" width="0.2" height="15.0" fill="rgb(234,15,39)" rx="2" ry="2" />
<text  x="903.18" y="1487.5" ></text>
</g>
<g >
<title>frozen_mutation::mutation_view (1 samples, 0.02%)</title><rect x="1120.5" y="1301" width="0.2" height="15.0" fill="rgb(219,10,11)" rx="2" ry="2" />
<text  x="1123.52" y="1311.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, std::optional&lt;auth::resource&gt;&amp;&amp;, service::client_state::check_has_permission (1 samples, 0.02%)</title><rect x="76.8" y="1557" width="0.3" height="15.0" fill="rgb(221,29,34)" rx="2" ry="2" />
<text  x="79.83" y="1567.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.02%)</title><rect x="38.2" y="1269" width="0.3" height="15.0" fill="rgb(206,223,35)" rx="2" ry="2" />
<text  x="41.23" y="1279.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="981" width="0.3" height="15.0" fill="rgb(222,200,44)" rx="2" ry="2" />
<text  x="13.44" y="991.5" ></text>
</g>
<g >
<title>db::validate_for_read (1 samples, 0.02%)</title><rect x="1111.5" y="1589" width="0.2" height="15.0" fill="rgb(223,41,11)" rx="2" ry="2" />
<text  x="1114.48" y="1599.5" ></text>
</g>
<g >
<title>mutation_reader_merger::~mutation_reader_merger (1 samples, 0.02%)</title><rect x="1166.0" y="1573" width="0.2" height="15.0" fill="rgb(246,140,37)" rx="2" ry="2" />
<text  x="1168.96" y="1583.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (1 samples, 0.02%)</title><rect x="916.1" y="1541" width="0.2" height="15.0" fill="rgb(212,2,13)" rx="2" ry="2" />
<text  x="919.06" y="1551.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;query::result_memory_accounter&gt;::take (2 samples, 0.04%)</title><rect x="614.3" y="1573" width="0.5" height="15.0" fill="rgb(237,104,21)" rx="2" ry="2" />
<text  x="617.34" y="1583.5" ></text>
</g>
<g >
<title>schema_registry::get_entry (20 samples, 0.37%)</title><rect x="956.6" y="1493" width="4.5" height="15.0" fill="rgb(208,223,45)" rx="2" ry="2" />
<text  x="959.65" y="1503.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;query::result_memory_limiter::new_data_read (5 samples, 0.09%)</title><rect x="615.2" y="1589" width="1.1" height="15.0" fill="rgb(251,181,53)" rx="2" ry="2" />
<text  x="618.22" y="1599.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::~unique_ptr (2 samples, 0.04%)</title><rect x="54.3" y="1413" width="0.5" height="15.0" fill="rgb(246,169,36)" rx="2" ry="2" />
<text  x="57.33" y="1423.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;bool  (5 samples, 0.09%)</title><rect x="1166.6" y="1669" width="1.1" height="15.0" fill="rgb(220,179,25)" rx="2" ry="2" />
<text  x="1169.62" y="1679.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.02%)</title><rect x="720.6" y="1541" width="0.3" height="15.0" fill="rgb(219,127,29)" rx="2" ry="2" />
<text  x="723.65" y="1551.5" ></text>
</g>
<g >
<title>cql3::expr::expression::operator= (2 samples, 0.04%)</title><rect x="51.0" y="1445" width="0.5" height="15.0" fill="rgb(235,67,17)" rx="2" ry="2" />
<text  x="54.02" y="1455.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (1 samples, 0.02%)</title><rect x="368.6" y="1333" width="0.3" height="15.0" fill="rgb(239,163,22)" rx="2" ry="2" />
<text  x="371.63" y="1343.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (1,123 samples, 20.99%)</title><rect x="864.2" y="1605" width="247.7" height="15.0" fill="rgb(219,166,3)" rx="2" ry="2" />
<text  x="867.23" y="1615.5" >seastar::noncopyable_function&lt;se..</text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="626.7" y="1525" width="0.2" height="15.0" fill="rgb(235,172,50)" rx="2" ry="2" />
<text  x="629.69" y="1535.5" ></text>
</g>
<g >
<title>ser::integral_serializer&lt;long&gt;::read&lt;seastar::simple_memory_input_stream&gt; (1 samples, 0.02%)</title><rect x="1115.7" y="1381" width="0.2" height="15.0" fill="rgb(221,26,33)" rx="2" ry="2" />
<text  x="1118.67" y="1391.5" ></text>
</g>
<g >
<title>absl::container_internal::operator== (2 samples, 0.04%)</title><rect x="757.3" y="1509" width="0.4" height="15.0" fill="rgb(251,163,12)" rx="2" ry="2" />
<text  x="760.26" y="1519.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::reset_state (57 samples, 1.07%)</title><rect x="281.7" y="1397" width="12.6" height="15.0" fill="rgb(252,143,25)" rx="2" ry="2" />
<text  x="284.73" y="1407.5" ></text>
</g>
<g >
<title>fmt::v7::basic_printf_context&lt;fmt::v7::detail::buffer_appender&lt;char&gt;, char&gt;::format&lt;fmt::v7::printf_arg_formatter&lt;fmt::v7::detail::buffer_appender&lt;char&gt;, char&gt; &gt; (2 samples, 0.04%)</title><rect x="18.6" y="1653" width="0.4" height="15.0" fill="rgb(242,62,4)" rx="2" ry="2" />
<text  x="21.60" y="1663.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.04%)</title><rect x="588.8" y="1493" width="0.4" height="15.0" fill="rgb(242,212,21)" rx="2" ry="2" />
<text  x="591.75" y="1503.5" ></text>
</g>
<g >
<title>cql3::raw_value_view::raw_value_view (1 samples, 0.02%)</title><rect x="854.7" y="1429" width="0.3" height="15.0" fill="rgb(237,111,40)" rx="2" ry="2" />
<text  x="857.75" y="1439.5" ></text>
</g>
<g >
<title>antlr3::DefaultAllocPolicy::StackType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::push (1 samples, 0.02%)</title><rect x="52.1" y="1413" width="0.2" height="15.0" fill="rgb(208,49,47)" rx="2" ry="2" />
<text  x="55.13" y="1423.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;abstract_type const&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="10.4" y="37" width="0.3" height="15.0" fill="rgb(245,226,40)" rx="2" ry="2" />
<text  x="13.44" y="47.5" ></text>
</g>
<g >
<title>schema::column_at (3 samples, 0.06%)</title><rect x="260.3" y="1269" width="0.7" height="15.0" fill="rgb(245,21,26)" rx="2" ry="2" />
<text  x="263.34" y="1279.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (1 samples, 0.02%)</title><rect x="1076.4" y="1557" width="0.2" height="15.0" fill="rgb(217,107,14)" rx="2" ry="2" />
<text  x="1079.41" y="1567.5" ></text>
</g>
<g >
<title>antlr3::IntStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::consume (1 samples, 0.02%)</title><rect x="31.0" y="1397" width="0.2" height="15.0" fill="rgb(244,182,49)" rx="2" ry="2" />
<text  x="33.95" y="1407.5" ></text>
</g>
<g >
<title>std::pair&lt;auth::authenticated_user, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;::pair (4 samples, 0.07%)</title><rect x="741.2" y="1525" width="0.8" height="15.0" fill="rgb(214,114,9)" rx="2" ry="2" />
<text  x="744.16" y="1535.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="318.8" y="1461" width="0.2" height="15.0" fill="rgb(246,175,2)" rx="2" ry="2" />
<text  x="321.79" y="1471.5" ></text>
</g>
<g >
<title>db::commitlog::segment_manager::allocate_when_possible&lt;db::commitlog::add_entry (2 samples, 0.04%)</title><rect x="1117.2" y="1445" width="0.5" height="15.0" fill="rgb(232,117,37)" rx="2" ry="2" />
<text  x="1120.21" y="1455.5" ></text>
</g>
<g >
<title>get_common_indices.constprop.0 (1 samples, 0.02%)</title><rect x="78.6" y="1765" width="0.2" height="15.0" fill="rgb(232,6,17)" rx="2" ry="2" />
<text  x="81.59" y="1775.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::partition_snapshot_flat_reader&lt;memtable&amp;&gt; (77 samples, 1.44%)</title><rect x="511.6" y="1445" width="16.9" height="15.0" fill="rgb(215,85,28)" rx="2" ry="2" />
<text  x="514.56" y="1455.5" ></text>
</g>
<g >
<title>non-virtual thunk to cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::~single_column_primary_key_restrictions (1 samples, 0.02%)</title><rect x="649.2" y="1589" width="0.2" height="15.0" fill="rgb(247,209,17)" rx="2" ry="2" />
<text  x="652.19" y="1599.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (267 samples, 4.99%)</title><rect x="19.0" y="1669" width="58.9" height="15.0" fill="rgb(212,171,29)" rx="2" ry="2" />
<text  x="22.04" y="1679.5" >single..</text>
</g>
<g >
<title>utils::loading_cache&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, enum_set&lt;super_enum&lt;auth::permission,  (6 samples, 0.11%)</title><rect x="784.8" y="1333" width="1.4" height="15.0" fill="rgb(233,225,42)" rx="2" ry="2" />
<text  x="787.83" y="1343.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="36.2" y="1477" width="0.3" height="15.0" fill="rgb(238,223,34)" rx="2" ry="2" />
<text  x="39.25" y="1487.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.07%)</title><rect x="823.6" y="1509" width="0.9" height="15.0" fill="rgb(223,148,4)" rx="2" ry="2" />
<text  x="826.65" y="1519.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (2 samples, 0.04%)</title><rect x="915.6" y="1541" width="0.5" height="15.0" fill="rgb(213,79,24)" rx="2" ry="2" />
<text  x="918.62" y="1551.5" ></text>
</g>
<g >
<title>seastar::syscall_work_queue::submit&lt;seastar::syscall_result&lt;long&gt; &gt; (1 samples, 0.02%)</title><rect x="846.8" y="1621" width="0.2" height="15.0" fill="rgb(221,70,18)" rx="2" ry="2" />
<text  x="849.81" y="1631.5" ></text>
</g>
<g >
<title>operator delete (6 samples, 0.11%)</title><rect x="661.5" y="1637" width="1.4" height="15.0" fill="rgb(242,110,40)" rx="2" ry="2" />
<text  x="664.54" y="1647.5" ></text>
</g>
<g >
<title>std::default_delete&lt;cql3::expr::expression::impl&gt;::operator (1 samples, 0.02%)</title><rect x="649.2" y="1557" width="0.2" height="15.0" fill="rgb(247,120,27)" rx="2" ry="2" />
<text  x="652.19" y="1567.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::digest_read_result&gt;::then_wrapped_common&lt;true, void, service::abstract_read_executor::execute (13 samples, 0.24%)</title><rect x="966.6" y="1493" width="2.8" height="15.0" fill="rgb(205,44,37)" rx="2" ry="2" />
<text  x="969.57" y="1503.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="37.3" y="1429" width="0.3" height="15.0" fill="rgb(209,225,53)" rx="2" ry="2" />
<text  x="40.35" y="1439.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value, std::allocator&lt;cql3::raw_value&gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="850.6" y="1493" width="0.2" height="15.0" fill="rgb(228,77,17)" rx="2" ry="2" />
<text  x="853.56" y="1503.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::pop_mutation_fragment (1 samples, 0.02%)</title><rect x="689.8" y="1493" width="0.2" height="15.0" fill="rgb(245,93,40)" rx="2" ry="2" />
<text  x="692.77" y="1503.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::followPop (1 samples, 0.02%)</title><rect x="43.7" y="1477" width="0.3" height="15.0" fill="rgb(225,2,40)" rx="2" ry="2" />
<text  x="46.75" y="1487.5" ></text>
</g>
<g >
<title>auth::resource::resource (1 samples, 0.02%)</title><rect x="74.8" y="1589" width="0.3" height="15.0" fill="rgb(223,178,28)" rx="2" ry="2" />
<text  x="77.84" y="1599.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="214.7" y="1333" width="0.2" height="15.0" fill="rgb(210,193,50)" rx="2" ry="2" />
<text  x="217.68" y="1343.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="1117.2" y="1365" width="0.2" height="15.0" fill="rgb(221,201,4)" rx="2" ry="2" />
<text  x="1120.21" y="1375.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::maybe_decay_reserve (1 samples, 0.02%)</title><rect x="543.1" y="1461" width="0.2" height="15.0" fill="rgb(205,206,42)" rx="2" ry="2" />
<text  x="546.10" y="1471.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (3 samples, 0.06%)</title><rect x="284.6" y="1317" width="0.7" height="15.0" fill="rgb(238,180,42)" rx="2" ry="2" />
<text  x="287.60" y="1327.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (2 samples, 0.04%)</title><rect x="51.5" y="1333" width="0.4" height="15.0" fill="rgb(218,167,16)" rx="2" ry="2" />
<text  x="54.47" y="1343.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (4 samples, 0.07%)</title><rect x="755.7" y="1493" width="0.9" height="15.0" fill="rgb(212,116,31)" rx="2" ry="2" />
<text  x="758.72" y="1503.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.02%)</title><rect x="10.4" y="437" width="0.3" height="15.0" fill="rgb(249,1,32)" rx="2" ry="2" />
<text  x="13.44" y="447.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::hasException (1 samples, 0.02%)</title><rect x="44.2" y="1477" width="0.2" height="15.0" fill="rgb(234,64,47)" rx="2" ry="2" />
<text  x="47.19" y="1487.5" ></text>
</g>
<g >
<title>db::schema_tables::read_tables_for_keyspaces (1 samples, 0.02%)</title><rect x="101.3" y="1653" width="0.2" height="15.0" fill="rgb(226,47,51)" rx="2" ry="2" />
<text  x="104.31" y="1663.5" ></text>
</g>
<g >
<title>managed_bytes::free_chain (1 samples, 0.02%)</title><rect x="82.1" y="1573" width="0.2" height="15.0" fill="rgb(238,138,53)" rx="2" ry="2" />
<text  x="85.12" y="1583.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (2 samples, 0.04%)</title><rect x="251.5" y="1269" width="0.5" height="15.0" fill="rgb(226,111,4)" rx="2" ry="2" />
<text  x="254.51" y="1279.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;seastar::shared_ptr&lt;cql3::relation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::relation&gt; &gt; &gt;::_Vector_impl::_Vector_impl (1 samples, 0.02%)</title><rect x="60.9" y="1461" width="0.3" height="15.0" fill="rgb(246,207,40)" rx="2" ry="2" />
<text  x="63.95" y="1471.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;schema_registry_entry&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;schema_registry_entry&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (8 samples, 0.15%)</title><rect x="959.3" y="1461" width="1.8" height="15.0" fill="rgb(241,174,13)" rx="2" ry="2" />
<text  x="962.29" y="1471.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, std::optional&lt;auth::resource&gt;&amp;&amp;, service::client_state::check_has_permission (1 samples, 0.02%)</title><rect x="804.7" y="1493" width="0.2" height="15.0" fill="rgb(207,112,46)" rx="2" ry="2" />
<text  x="807.68" y="1503.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;service::query_state&gt;::~shared_ptr_count_for (1 samples, 0.02%)</title><rect x="1133.3" y="1653" width="0.2" height="15.0" fill="rgb(231,112,31)" rx="2" ry="2" />
<text  x="1136.32" y="1663.5" ></text>
</g>
<g >
<title>partition_snapshot::version_count (2 samples, 0.04%)</title><rect x="272.7" y="1285" width="0.4" height="15.0" fill="rgb(207,136,47)" rx="2" ry="2" />
<text  x="275.69" y="1295.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;::__uniq_ptr_impl&lt;std::default_delete&lt;cql3::operation::set_value&gt; &gt; (2 samples, 0.04%)</title><rect x="56.8" y="1429" width="0.4" height="15.0" fill="rgb(254,166,21)" rx="2" ry="2" />
<text  x="59.76" y="1439.5" ></text>
</g>
<g >
<title>allocation_strategy::construct&lt;rows_entry, schema const&amp;, rows_entry::last_dummy_tag, seastar::bool_class&lt;continuous_tag&gt; const&amp;&gt; (1 samples, 0.02%)</title><rect x="16.0" y="1669" width="0.2" height="15.0" fill="rgb(217,20,0)" rx="2" ry="2" />
<text  x="18.96" y="1679.5" ></text>
</g>
<g >
<title>query::result::result (4 samples, 0.07%)</title><rect x="606.6" y="1573" width="0.9" height="15.0" fill="rgb(210,201,47)" rx="2" ry="2" />
<text  x="609.62" y="1583.5" ></text>
</g>
<g >
<title>db::schema_tables::merge_schema (4 samples, 0.07%)</title><rect x="100.4" y="1653" width="0.9" height="15.0" fill="rgb(213,198,49)" rx="2" ry="2" />
<text  x="103.43" y="1663.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (3 samples, 0.06%)</title><rect x="1139.3" y="1605" width="0.6" height="15.0" fill="rgb(206,200,45)" rx="2" ry="2" />
<text  x="1142.27" y="1615.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::column_identifier&gt;::shared_ptr (1 samples, 0.02%)</title><rect x="57.2" y="1493" width="0.2" height="15.0" fill="rgb(250,192,0)" rx="2" ry="2" />
<text  x="60.20" y="1503.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;void&gt;::set_value&lt;&gt; (1 samples, 0.02%)</title><rect x="848.4" y="1653" width="0.2" height="15.0" fill="rgb(227,34,32)" rx="2" ry="2" />
<text  x="851.35" y="1663.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::needs_post_query_ordering (8 samples, 0.15%)</title><rect x="655.1" y="1621" width="1.8" height="15.0" fill="rgb(213,178,5)" rx="2" ry="2" />
<text  x="658.14" y="1631.5" ></text>
</g>
<g >
<title>global_schema_ptr::global_schema_ptr (10 samples, 0.19%)</title><rect x="988.4" y="1429" width="2.2" height="15.0" fill="rgb(230,103,41)" rx="2" ry="2" />
<text  x="991.41" y="1439.5" ></text>
</g>
<g >
<title>service::storage_proxy::do_mutate (41 samples, 0.77%)</title><rect x="1118.5" y="1493" width="9.1" height="15.0" fill="rgb(220,4,0)" rx="2" ry="2" />
<text  x="1121.54" y="1503.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="1165.7" y="1509" width="0.3" height="15.0" fill="rgb(240,218,51)" rx="2" ry="2" />
<text  x="1168.74" y="1519.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="513.3" y="1413" width="0.2" height="15.0" fill="rgb(244,5,15)" rx="2" ry="2" />
<text  x="516.32" y="1423.5" ></text>
</g>
<g >
<title>cql3::single_column_relation::new_EQ_restriction (3 samples, 0.06%)</title><rect x="69.6" y="1525" width="0.6" height="15.0" fill="rgb(243,34,5)" rx="2" ry="2" />
<text  x="72.55" y="1535.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.02%)</title><rect x="38.7" y="1365" width="0.2" height="15.0" fill="rgb(232,208,46)" rx="2" ry="2" />
<text  x="41.67" y="1375.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="576.0" y="1413" width="0.2" height="15.0" fill="rgb(209,17,51)" rx="2" ry="2" />
<text  x="578.96" y="1423.5" ></text>
</g>
<g >
<title>database::find_keyspace (4 samples, 0.07%)</title><rect x="952.7" y="1509" width="0.9" height="15.0" fill="rgb(216,145,9)" rx="2" ry="2" />
<text  x="955.68" y="1519.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_range_tombstone (4 samples, 0.07%)</title><rect x="272.2" y="1333" width="0.9" height="15.0" fill="rgb(247,198,53)" rx="2" ry="2" />
<text  x="275.25" y="1343.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::do_fill_buffer (1 samples, 0.02%)</title><rect x="100.4" y="1045" width="0.3" height="15.0" fill="rgb(209,153,1)" rx="2" ry="2" />
<text  x="103.43" y="1055.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;partition_snapshot&gt;::make&lt;seastar::lw_shared_ptr&lt;schema const&gt;&amp;, logalloc::region&amp;, mutation_cleaner&amp;, partition_entry*, cache_tracker*&amp;, unsigned long&amp;&gt; (7 samples, 0.13%)</title><rect x="531.8" y="1445" width="1.6" height="15.0" fill="rgb(251,132,2)" rx="2" ry="2" />
<text  x="534.85" y="1455.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::read_next (1 samples, 0.02%)</title><rect x="79.9" y="1509" width="0.2" height="15.0" fill="rgb(219,124,2)" rx="2" ry="2" />
<text  x="82.92" y="1519.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (3 samples, 0.06%)</title><rect x="758.6" y="1477" width="0.6" height="15.0" fill="rgb(232,225,6)" rx="2" ry="2" />
<text  x="761.58" y="1487.5" ></text>
</g>
<g >
<title>absl::container_internal::operator== (1 samples, 0.02%)</title><rect x="833.1" y="1525" width="0.3" height="15.0" fill="rgb(233,211,33)" rx="2" ry="2" />
<text  x="836.13" y="1535.5" ></text>
</g>
<g >
<title>schema_registry_entry::get_schema (2 samples, 0.04%)</title><rect x="961.9" y="1509" width="0.5" height="15.0" fill="rgb(205,88,31)" rx="2" ry="2" />
<text  x="964.94" y="1519.5" ></text>
</g>
<g >
<title>service::abstract_write_response_handler::max_backlog (1 samples, 0.02%)</title><rect x="712.7" y="1573" width="0.2" height="15.0" fill="rgb(245,82,23)" rx="2" ry="2" />
<text  x="715.71" y="1583.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (592 samples, 11.07%)</title><rect x="175.0" y="1477" width="130.6" height="15.0" fill="rgb(206,50,15)" rx="2" ry="2" />
<text  x="177.98" y="1487.5" >mutation_reader_..</text>
</g>
<g >
<title>seastar::reactor_backend_aio::await_events (3 samples, 0.06%)</title><rect x="1167.1" y="1637" width="0.6" height="15.0" fill="rgb(206,173,8)" rx="2" ry="2" />
<text  x="1170.06" y="1647.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::statement_restrictions (1 samples, 0.02%)</title><rect x="10.4" y="133" width="0.3" height="15.0" fill="rgb(240,119,14)" rx="2" ry="2" />
<text  x="13.44" y="143.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.04%)</title><rect x="674.8" y="1621" width="0.4" height="15.0" fill="rgb(241,221,12)" rx="2" ry="2" />
<text  x="677.77" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;4ul, cql3::expr::untyped_constant&gt; (1 samples, 0.02%)</title><rect x="53.7" y="1157" width="0.2" height="15.0" fill="rgb(215,119,41)" rx="2" ry="2" />
<text  x="56.67" y="1167.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;tracking_allocator&lt;mutation_fragment&gt; &gt;::_S_destroy&lt;tracking_allocator&lt;mutation_fragment&gt;, mutation_fragment&gt; (1 samples, 0.02%)</title><rect x="184.9" y="1381" width="0.2" height="15.0" fill="rgb(240,23,21)" rx="2" ry="2" />
<text  x="187.90" y="1391.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.02%)</title><rect x="10.4" y="341" width="0.3" height="15.0" fill="rgb(221,187,45)" rx="2" ry="2" />
<text  x="13.44" y="351.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mU (1 samples, 0.02%)</title><rect x="31.4" y="1397" width="0.2" height="15.0" fill="rgb(220,131,10)" rx="2" ry="2" />
<text  x="34.39" y="1407.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_nonsingular_mutations_locally (3 samples, 0.06%)</title><rect x="100.4" y="1541" width="0.7" height="15.0" fill="rgb(208,44,19)" rx="2" ry="2" />
<text  x="103.43" y="1551.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (2 samples, 0.04%)</title><rect x="926.7" y="1557" width="0.4" height="15.0" fill="rgb(243,225,24)" rx="2" ry="2" />
<text  x="929.65" y="1567.5" ></text>
</g>
<g >
<title>antlr3::CyclicDFA&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, cql3_parser::CqlLexer&gt;::predict&lt;cql3_parser::CqlLexerCyclicDFA44&gt; (11 samples, 0.21%)</title><rect x="32.3" y="1397" width="2.4" height="15.0" fill="rgb(219,7,5)" rx="2" ry="2" />
<text  x="35.28" y="1407.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (1 samples, 0.02%)</title><rect x="79.3" y="1717" width="0.2" height="15.0" fill="rgb(229,129,7)" rx="2" ry="2" />
<text  x="82.26" y="1727.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reserve&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (1 samples, 0.02%)</title><rect x="100.9" y="1077" width="0.2" height="15.0" fill="rgb(239,137,34)" rx="2" ry="2" />
<text  x="103.87" y="1087.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="1589" width="0.3" height="15.0" fill="rgb(226,139,44)" rx="2" ry="2" />
<text  x="13.44" y="1599.5" ></text>
</g>
<g >
<title>seastar::memory::allocate_aligned (1 samples, 0.02%)</title><rect x="79.3" y="1765" width="0.2" height="15.0" fill="rgb(254,8,27)" rx="2" ry="2" />
<text  x="82.26" y="1775.5" ></text>
</g>
<g >
<title>database::apply_with_commitlog (24 samples, 0.45%)</title><rect x="1112.6" y="1477" width="5.3" height="15.0" fill="rgb(242,27,26)" rx="2" ry="2" />
<text  x="1115.58" y="1487.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::partition_snapshot_flat_reader&lt;memtable&amp;&gt; (51 samples, 0.95%)</title><rect x="516.0" y="1413" width="11.2" height="15.0" fill="rgb(236,210,11)" rx="2" ry="2" />
<text  x="518.97" y="1423.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::CqlParser (3 samples, 0.06%)</title><rect x="20.8" y="1573" width="0.7" height="15.0" fill="rgb(237,228,4)" rx="2" ry="2" />
<text  x="23.81" y="1583.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (1 samples, 0.02%)</title><rect x="11.1" y="1637" width="0.2" height="15.0" fill="rgb(205,157,11)" rx="2" ry="2" />
<text  x="14.10" y="1647.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.02%)</title><rect x="58.1" y="1397" width="0.2" height="15.0" fill="rgb(214,194,31)" rx="2" ry="2" />
<text  x="61.08" y="1407.5" ></text>
</g>
<g >
<title>seastar::schedule_urgent (3 samples, 0.06%)</title><rect x="1131.1" y="1653" width="0.7" height="15.0" fill="rgb(247,198,39)" rx="2" ry="2" />
<text  x="1134.11" y="1663.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (1 samples, 0.02%)</title><rect x="59.4" y="1413" width="0.2" height="15.0" fill="rgb(217,54,52)" rx="2" ry="2" />
<text  x="62.41" y="1423.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (1 samples, 0.02%)</title><rect x="712.3" y="1637" width="0.2" height="15.0" fill="rgb(220,187,48)" rx="2" ry="2" />
<text  x="715.27" y="1647.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="54.8" y="1397" width="0.2" height="15.0" fill="rgb(244,180,1)" rx="2" ry="2" />
<text  x="57.77" y="1407.5" ></text>
</g>
<g >
<title>utils::tuple_hash::operator (19 samples, 0.36%)</title><rect x="792.5" y="1317" width="4.2" height="15.0" fill="rgb(211,134,28)" rx="2" ry="2" />
<text  x="795.55" y="1327.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (1 samples, 0.02%)</title><rect x="202.8" y="1397" width="0.2" height="15.0" fill="rgb(247,36,53)" rx="2" ry="2" />
<text  x="205.77" y="1407.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="1091.6" y="1557" width="0.3" height="15.0" fill="rgb(222,102,27)" rx="2" ry="2" />
<text  x="1094.63" y="1567.5" ></text>
</g>
<g >
<title>std::make_unique&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;, seastar::lw_shared_ptr&lt;schema const&gt;, reader_permit, dht::decorated_key, partition_snapshot_ptr&amp;, query::clustering_key_filter_ranges, bool&amp;, logalloc::region&amp;, logalloc::allocating_section&amp;, boost::any, memtable&amp;&gt; (101 samples, 1.89%)</title><rect x="507.8" y="1461" width="22.3" height="15.0" fill="rgb(218,175,47)" rx="2" ry="2" />
<text  x="510.81" y="1471.5" >s..</text>
</g>
<g >
<title>seastar::memory::allocate (5 samples, 0.09%)</title><rect x="155.3" y="1525" width="1.2" height="15.0" fill="rgb(238,186,27)" rx="2" ry="2" />
<text  x="158.35" y="1535.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::read_next (1 samples, 0.02%)</title><rect x="848.8" y="1525" width="0.2" height="15.0" fill="rgb(212,142,5)" rx="2" ry="2" />
<text  x="851.79" y="1535.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (4 samples, 0.07%)</title><rect x="40.7" y="1413" width="0.8" height="15.0" fill="rgb(224,144,40)" rx="2" ry="2" />
<text  x="43.66" y="1423.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.02%)</title><rect x="43.5" y="1445" width="0.2" height="15.0" fill="rgb(231,226,23)" rx="2" ry="2" />
<text  x="46.53" y="1455.5" ></text>
</g>
<g >
<title>sstables::mc::writer::close_data_writer (1 samples, 0.02%)</title><rect x="10.7" y="1605" width="0.2" height="15.0" fill="rgb(231,197,43)" rx="2" ry="2" />
<text  x="13.66" y="1615.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (1 samples, 0.02%)</title><rect x="1023.5" y="1429" width="0.2" height="15.0" fill="rgb(210,74,36)" rx="2" ry="2" />
<text  x="1026.48" y="1439.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (1 samples, 0.02%)</title><rect x="1075.7" y="1525" width="0.3" height="15.0" fill="rgb(205,149,29)" rx="2" ry="2" />
<text  x="1078.75" y="1535.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.02%)</title><rect x="25.0" y="1381" width="0.2" height="15.0" fill="rgb(228,82,12)" rx="2" ry="2" />
<text  x="28.00" y="1391.5" ></text>
</g>
<g >
<title>service::storage_proxy::do_query (587 samples, 10.97%)</title><rect x="945.6" y="1541" width="129.5" height="15.0" fill="rgb(237,50,54)" rx="2" ry="2" />
<text  x="948.62" y="1551.5" >service::storage..</text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt;::allocate (1 samples, 0.02%)</title><rect x="1023.7" y="1413" width="0.2" height="15.0" fill="rgb(231,16,48)" rx="2" ry="2" />
<text  x="1026.70" y="1423.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (195 samples, 3.64%)</title><rect x="22.4" y="1557" width="43.0" height="15.0" fill="rgb(254,138,29)" rx="2" ry="2" />
<text  x="25.35" y="1567.5" >cql3..</text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_Optional_payload_base (2 samples, 0.04%)</title><rect x="741.6" y="1509" width="0.4" height="15.0" fill="rgb(223,206,33)" rx="2" ry="2" />
<text  x="744.60" y="1519.5" ></text>
</g>
<g >
<title>partition_snapshot::static_row (3 samples, 0.06%)</title><rect x="296.5" y="1365" width="0.7" height="15.0" fill="rgb(234,177,23)" rx="2" ry="2" />
<text  x="299.51" y="1375.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;::operator (1 samples, 0.02%)</title><rect x="72.2" y="1541" width="0.2" height="15.0" fill="rgb(217,96,41)" rx="2" ry="2" />
<text  x="75.20" y="1551.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (2 samples, 0.04%)</title><rect x="214.9" y="1365" width="0.4" height="15.0" fill="rgb(252,177,36)" rx="2" ry="2" />
<text  x="217.90" y="1375.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::push_mutation_fragment&lt;schema const&amp;, reader_permit&amp;, partition_start&gt; (34 samples, 0.64%)</title><rect x="517.3" y="1397" width="7.5" height="15.0" fill="rgb(245,96,33)" rx="2" ry="2" />
<text  x="520.29" y="1407.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="74.2" y="1525" width="0.2" height="15.0" fill="rgb(208,145,52)" rx="2" ry="2" />
<text  x="77.18" y="1535.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (3 samples, 0.06%)</title><rect x="51.5" y="1413" width="0.6" height="15.0" fill="rgb(225,53,27)" rx="2" ry="2" />
<text  x="54.47" y="1423.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;compact_for_query&lt; (6 samples, 0.11%)</title><rect x="439.9" y="1429" width="1.3" height="15.0" fill="rgb(209,18,27)" rx="2" ry="2" />
<text  x="442.87" y="1439.5" ></text>
</g>
<g >
<title>std::vector&lt;antlr3::LexState&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::LexState&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.02%)</title><rect x="34.5" y="1381" width="0.2" height="15.0" fill="rgb(229,34,13)" rx="2" ry="2" />
<text  x="37.48" y="1391.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (2 samples, 0.04%)</title><rect x="75.9" y="1413" width="0.5" height="15.0" fill="rgb(244,99,51)" rx="2" ry="2" />
<text  x="78.95" y="1423.5" ></text>
</g>
<g >
<title>cql3::cf_name::cf_name (1 samples, 0.02%)</title><rect x="39.3" y="1493" width="0.3" height="15.0" fill="rgb(243,216,29)" rx="2" ry="2" />
<text  x="42.33" y="1503.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_one (1 samples, 0.02%)</title><rect x="100.4" y="1221" width="0.3" height="15.0" fill="rgb(210,147,54)" rx="2" ry="2" />
<text  x="103.43" y="1231.5" ></text>
</g>
<g >
<title>std::vector&lt;bplus::node&lt;long, intrusive_array&lt;memtable_entry&gt;, dht::raw_token_less_comparator, 16ul,  (1 samples, 0.02%)</title><rect x="1113.9" y="1285" width="0.2" height="15.0" fill="rgb(245,81,11)" rx="2" ry="2" />
<text  x="1116.91" y="1295.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;::operator= (1 samples, 0.02%)</title><rect x="42.6" y="1477" width="0.3" height="15.0" fill="rgb(210,205,54)" rx="2" ry="2" />
<text  x="45.64" y="1487.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (1 samples, 0.02%)</title><rect x="513.5" y="1429" width="0.3" height="15.0" fill="rgb(247,87,27)" rx="2" ry="2" />
<text  x="516.54" y="1439.5" ></text>
</g>
<g >
<title>scanning_reader::fill_buffer (1 samples, 0.02%)</title><rect x="100.9" y="1205" width="0.2" height="15.0" fill="rgb(229,87,39)" rx="2" ry="2" />
<text  x="103.87" y="1215.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::local (3 samples, 0.06%)</title><rect x="830.7" y="1573" width="0.7" height="15.0" fill="rgb(226,52,44)" rx="2" ry="2" />
<text  x="833.71" y="1583.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="52.6" y="1397" width="0.2" height="15.0" fill="rgb(231,148,22)" rx="2" ry="2" />
<text  x="55.57" y="1407.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (2 samples, 0.04%)</title><rect x="44.4" y="1381" width="0.4" height="15.0" fill="rgb(213,26,9)" rx="2" ry="2" />
<text  x="47.41" y="1391.5" ></text>
</g>
<g >
<title>ser::serializer&lt;partition_key&gt;::write&lt;seastar::measuring_output_stream&gt; (2 samples, 0.04%)</title><rect x="1125.8" y="1269" width="0.5" height="15.0" fill="rgb(235,194,37)" rx="2" ry="2" />
<text  x="1128.82" y="1279.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value, std::allocator&lt;cql3::raw_value&gt; &gt;::~vector (2 samples, 0.04%)</title><rect x="678.1" y="1605" width="0.4" height="15.0" fill="rgb(241,50,50)" rx="2" ry="2" />
<text  x="681.08" y="1615.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (12 samples, 0.22%)</title><rect x="970.1" y="1461" width="2.6" height="15.0" fill="rgb(243,66,30)" rx="2" ry="2" />
<text  x="973.10" y="1471.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (1 samples, 0.02%)</title><rect x="79.0" y="1621" width="0.3" height="15.0" fill="rgb(233,47,34)" rx="2" ry="2" />
<text  x="82.04" y="1631.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::vector (8 samples, 0.15%)</title><rect x="1087.4" y="1541" width="1.8" height="15.0" fill="rgb(213,147,50)" rx="2" ry="2" />
<text  x="1090.44" y="1551.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.02%)</title><rect x="17.3" y="1669" width="0.2" height="15.0" fill="rgb(212,36,26)" rx="2" ry="2" />
<text  x="20.28" y="1679.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (1 samples, 0.02%)</title><rect x="623.2" y="1589" width="0.2" height="15.0" fill="rgb(206,154,33)" rx="2" ry="2" />
<text  x="626.16" y="1599.5" ></text>
</g>
<g >
<title>ser::deletable_row_view::key (1 samples, 0.02%)</title><rect x="102.4" y="1445" width="0.2" height="15.0" fill="rgb(221,192,32)" rx="2" ry="2" />
<text  x="105.41" y="1455.5" ></text>
</g>
<g >
<title>std::construct_at&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; const&amp;&gt; (1 samples, 0.02%)</title><rect x="37.6" y="1445" width="0.2" height="15.0" fill="rgb(221,184,24)" rx="2" ry="2" />
<text  x="40.57" y="1455.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;void&gt;  (1 samples, 0.02%)</title><rect x="79.0" y="1637" width="0.3" height="15.0" fill="rgb(252,45,2)" rx="2" ry="2" />
<text  x="82.04" y="1647.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, lister::scan_dir (1 samples, 0.02%)</title><rect x="690.7" y="1653" width="0.2" height="15.0" fill="rgb(240,147,47)" rx="2" ry="2" />
<text  x="693.65" y="1663.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::~guard (3 samples, 0.06%)</title><rect x="514.6" y="1413" width="0.7" height="15.0" fill="rgb(251,0,44)" rx="2" ry="2" />
<text  x="517.64" y="1423.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (1 samples, 0.02%)</title><rect x="664.2" y="1621" width="0.2" height="15.0" fill="rgb(242,186,33)" rx="2" ry="2" />
<text  x="667.18" y="1631.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (12 samples, 0.22%)</title><rect x="817.3" y="1477" width="2.6" height="15.0" fill="rgb(236,164,50)" rx="2" ry="2" />
<text  x="820.25" y="1487.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::maybe_decay_reserve (1 samples, 0.02%)</title><rect x="219.3" y="1365" width="0.2" height="15.0" fill="rgb(209,112,12)" rx="2" ry="2" />
<text  x="222.31" y="1375.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (1 samples, 0.02%)</title><rect x="695.1" y="1589" width="0.2" height="15.0" fill="rgb(211,144,24)" rx="2" ry="2" />
<text  x="698.06" y="1599.5" ></text>
</g>
<g >
<title>utils::tuple_hash::operator (6 samples, 0.11%)</title><rect x="814.6" y="1461" width="1.3" height="15.0" fill="rgb(231,223,39)" rx="2" ry="2" />
<text  x="817.61" y="1471.5" ></text>
</g>
<g >
<title>seastar::syscall_work_queue::work_item_returning&lt;seastar::syscall_result_extra&lt;stat&gt; &gt;::~work_item_returning (1 samples, 0.02%)</title><rect x="1166.8" y="1621" width="0.3" height="15.0" fill="rgb(218,12,50)" rx="2" ry="2" />
<text  x="1169.84" y="1631.5" ></text>
</g>
<g >
<title>std::__push_heap&lt;mutation_reader_merger::reader_and_fragment*, long, mutation_reader_merger::reader_and_fragment, __gnu_cxx::__ops::_Iter_comp_val&lt;mutation_reader_merger::reader_heap_compare&gt; &gt; (3 samples, 0.06%)</title><rect x="191.3" y="1381" width="0.7" height="15.0" fill="rgb(245,175,20)" rx="2" ry="2" />
<text  x="194.30" y="1391.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::vector (25 samples, 0.47%)</title><rect x="151.8" y="1573" width="5.5" height="15.0" fill="rgb(214,49,42)" rx="2" ry="2" />
<text  x="154.82" y="1583.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;managed_bytes&gt;::_M_reset (1 samples, 0.02%)</title><rect x="898.9" y="1509" width="0.2" height="15.0" fill="rgb(243,24,17)" rx="2" ry="2" />
<text  x="901.86" y="1519.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="662.6" y="1621" width="0.3" height="15.0" fill="rgb(217,106,28)" rx="2" ry="2" />
<text  x="665.64" y="1631.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (2 samples, 0.04%)</title><rect x="55.4" y="1237" width="0.5" height="15.0" fill="rgb(250,137,13)" rx="2" ry="2" />
<text  x="58.44" y="1247.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::operator (3 samples, 0.06%)</title><rect x="792.5" y="1285" width="0.7" height="15.0" fill="rgb(248,42,41)" rx="2" ry="2" />
<text  x="795.55" y="1295.5" ></text>
</g>
<g >
<title>dht::tri_compare (3 samples, 0.06%)</title><rect x="1066.5" y="1397" width="0.6" height="15.0" fill="rgb(254,87,50)" rx="2" ry="2" />
<text  x="1069.49" y="1407.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.04%)</title><rect x="831.6" y="1557" width="0.4" height="15.0" fill="rgb(209,53,34)" rx="2" ry="2" />
<text  x="834.59" y="1567.5" ></text>
</g>
<g >
<title>utils::murmur_hash::hash3_x64_128&lt;legacy_compound_view&lt;compound_type&lt; (24 samples, 0.45%)</title><rect x="909.9" y="1525" width="5.3" height="15.0" fill="rgb(248,173,31)" rx="2" ry="2" />
<text  x="912.89" y="1535.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="1557" width="0.3" height="15.0" fill="rgb(252,159,42)" rx="2" ry="2" />
<text  x="13.44" y="1567.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::~guard (1 samples, 0.02%)</title><rect x="456.0" y="1493" width="0.2" height="15.0" fill="rgb(244,112,29)" rx="2" ry="2" />
<text  x="458.97" y="1503.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::merging_reader (11 samples, 0.21%)</title><rect x="468.8" y="1445" width="2.4" height="15.0" fill="rgb(251,89,22)" rx="2" ry="2" />
<text  x="471.77" y="1455.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.02%)</title><rect x="57.9" y="1333" width="0.2" height="15.0" fill="rgb(211,219,38)" rx="2" ry="2" />
<text  x="60.86" y="1343.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate (1 samples, 0.02%)</title><rect x="855.2" y="1397" width="0.2" height="15.0" fill="rgb(251,94,11)" rx="2" ry="2" />
<text  x="858.19" y="1407.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql3::column_identifier&gt;::~shared_ptr_count_for (1 samples, 0.02%)</title><rect x="100.2" y="1509" width="0.2" height="15.0" fill="rgb(224,112,38)" rx="2" ry="2" />
<text  x="103.21" y="1519.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_wrapped_common&lt;false, seastar::future&lt;void&gt;, database::update_write_metrics&lt;seastar::future&lt;void&gt; &gt; (1 samples, 0.02%)</title><rect x="1120.7" y="1285" width="0.3" height="15.0" fill="rgb(253,65,34)" rx="2" ry="2" />
<text  x="1123.74" y="1295.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, cql3::attributes::raw*, std::default_delete&lt;cql3::attributes::raw&gt; &gt; (1 samples, 0.02%)</title><rect x="60.3" y="1445" width="0.2" height="15.0" fill="rgb(208,62,10)" rx="2" ry="2" />
<text  x="63.29" y="1455.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.02%)</title><rect x="41.5" y="1301" width="0.3" height="15.0" fill="rgb(205,20,28)" rx="2" ry="2" />
<text  x="44.54" y="1311.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;column_definition const*, std::pair&lt;column_definition const* const, cql3::expr::expression&gt;, std::allocator&lt;std::pair&lt;column_definition const* const, cql3::expr::expression&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;column_definition const*&gt;, std::hash&lt;column_definition const*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::~_Hashtable (1 samples, 0.02%)</title><rect x="71.3" y="1541" width="0.2" height="15.0" fill="rgb(240,183,53)" rx="2" ry="2" />
<text  x="74.32" y="1551.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::emplace_back&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; const&amp;&gt; (2 samples, 0.04%)</title><rect x="767.2" y="1509" width="0.4" height="15.0" fill="rgb(209,131,14)" rx="2" ry="2" />
<text  x="770.19" y="1519.5" ></text>
</g>
<g >
<title>schema_registry_entry::load (3 samples, 0.06%)</title><rect x="102.0" y="1605" width="0.6" height="15.0" fill="rgb(239,143,35)" rx="2" ry="2" />
<text  x="104.97" y="1615.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (2 samples, 0.04%)</title><rect x="547.9" y="1397" width="0.5" height="15.0" fill="rgb(206,108,23)" rx="2" ry="2" />
<text  x="550.95" y="1407.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_data_requests (44 samples, 0.82%)</title><rect x="702.1" y="1621" width="9.7" height="15.0" fill="rgb(251,54,7)" rx="2" ry="2" />
<text  x="705.12" y="1631.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="1205" width="0.3" height="15.0" fill="rgb(234,219,13)" rx="2" ry="2" />
<text  x="13.44" y="1215.5" ></text>
</g>
<g >
<title>TLS init function for cql3::query_options::specific_options::DEFAULT (1 samples, 0.02%)</title><rect x="17.7" y="1669" width="0.2" height="15.0" fill="rgb(216,80,52)" rx="2" ry="2" />
<text  x="20.72" y="1679.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::clear (1 samples, 0.02%)</title><rect x="617.4" y="1589" width="0.2" height="15.0" fill="rgb(208,107,22)" rx="2" ry="2" />
<text  x="620.42" y="1599.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="134.0" y="1605" width="0.2" height="15.0" fill="rgb(221,62,18)" rx="2" ry="2" />
<text  x="136.96" y="1615.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (3 samples, 0.06%)</title><rect x="55.2" y="1365" width="0.7" height="15.0" fill="rgb(226,115,10)" rx="2" ry="2" />
<text  x="58.21" y="1375.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::size (1 samples, 0.02%)</title><rect x="936.6" y="1541" width="0.2" height="15.0" fill="rgb(213,199,38)" rx="2" ry="2" />
<text  x="939.58" y="1551.5" ></text>
</g>
<g >
<title>ser::integral_serializer&lt;unsigned int&gt;::read&lt;seastar::simple_memory_input_stream&gt; (1 samples, 0.02%)</title><rect x="1115.9" y="1381" width="0.2" height="15.0" fill="rgb(230,188,33)" rx="2" ry="2" />
<text  x="1118.89" y="1391.5" ></text>
</g>
<g >
<title>seastar::output_stream&lt;char&gt;::close (1 samples, 0.02%)</title><rect x="10.7" y="1557" width="0.2" height="15.0" fill="rgb(240,169,42)" rx="2" ry="2" />
<text  x="13.66" y="1567.5" ></text>
</g>
<g >
<title>_start (4 samples, 0.07%)</title><rect x="1169.3" y="1781" width="0.8" height="15.0" fill="rgb(227,21,2)" rx="2" ry="2" />
<text  x="1172.27" y="1791.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (13 samples, 0.24%)</title><rect x="79.5" y="1765" width="2.8" height="15.0" fill="rgb(240,103,7)" rx="2" ry="2" />
<text  x="82.48" y="1775.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (4 samples, 0.07%)</title><rect x="1099.1" y="1525" width="0.9" height="15.0" fill="rgb(249,143,31)" rx="2" ry="2" />
<text  x="1102.13" y="1535.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (1 samples, 0.02%)</title><rect x="42.9" y="1477" width="0.2" height="15.0" fill="rgb(234,94,48)" rx="2" ry="2" />
<text  x="45.86" y="1487.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (1 samples, 0.02%)</title><rect x="811.1" y="1445" width="0.2" height="15.0" fill="rgb(208,8,43)" rx="2" ry="2" />
<text  x="814.08" y="1455.5" ></text>
</g>
<g >
<title>bplus::tree&lt;long, intrusive_array&lt;memtable_entry&gt;, dht::raw_token_less_comparator, 16ul,  (3 samples, 0.06%)</title><rect x="1113.7" y="1349" width="0.6" height="15.0" fill="rgb(205,179,38)" rx="2" ry="2" />
<text  x="1116.69" y="1359.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::~guard (3 samples, 0.06%)</title><rect x="542.4" y="1461" width="0.7" height="15.0" fill="rgb(230,229,2)" rx="2" ry="2" />
<text  x="545.43" y="1471.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (22 samples, 0.41%)</title><rect x="742.3" y="1509" width="4.8" height="15.0" fill="rgb(205,189,28)" rx="2" ry="2" />
<text  x="745.26" y="1519.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::execute (289 samples, 5.40%)</title><rect x="965.0" y="1509" width="63.8" height="15.0" fill="rgb(251,195,42)" rx="2" ry="2" />
<text  x="968.03" y="1519.5" >service..</text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.02%)</title><rect x="43.5" y="1413" width="0.2" height="15.0" fill="rgb(226,65,22)" rx="2" ry="2" />
<text  x="46.53" y="1423.5" ></text>
</g>
<g >
<title>ser::serializer&lt;clustering_key_prefix&gt;::write&lt;seastar::measuring_output_stream&gt; (1 samples, 0.02%)</title><rect x="1125.6" y="1221" width="0.2" height="15.0" fill="rgb(213,23,1)" rx="2" ry="2" />
<text  x="1128.60" y="1231.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (486 samples, 9.08%)</title><rect x="334.0" y="1509" width="107.2" height="15.0" fill="rgb(230,11,18)" rx="2" ry="2" />
<text  x="337.00" y="1519.5" >flat_mutation..</text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::iterator::operator* (1 samples, 0.02%)</title><rect x="761.0" y="1525" width="0.2" height="15.0" fill="rgb(238,186,50)" rx="2" ry="2" />
<text  x="764.01" y="1535.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit_slot&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::walking_visitor&lt;row::for_each_cell&lt;memtable::memtable_encoding_stats_collector::update (1 samples, 0.02%)</title><rect x="1114.3" y="1349" width="0.3" height="15.0" fill="rgb(240,25,36)" rx="2" ry="2" />
<text  x="1117.35" y="1359.5" ></text>
</g>
<g >
<title>write_cell&lt;ser::qr_clustered_row__cells__cells&lt;bytes_ostream&gt; &gt; (1 samples, 0.02%)</title><rect x="102.0" y="1461" width="0.2" height="15.0" fill="rgb(206,135,34)" rx="2" ry="2" />
<text  x="104.97" y="1471.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="1317" width="0.3" height="15.0" fill="rgb(214,94,14)" rx="2" ry="2" />
<text  x="13.44" y="1327.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;reader_permit::impl, true&gt;::make&lt;reader_concurrency_semaphore&amp;, schema const* const&amp;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;&amp;, reader_resources&amp;, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;&amp;&gt; (8 samples, 0.15%)</title><rect x="1014.0" y="1381" width="1.8" height="15.0" fill="rgb(239,15,19)" rx="2" ry="2" />
<text  x="1016.99" y="1391.5" ></text>
</g>
<g >
<title>std::optional&lt;dht::decorated_key&gt;::emplace&lt;dht::decorated_key&gt; (4 samples, 0.07%)</title><rect x="421.6" y="1381" width="0.8" height="15.0" fill="rgb(238,112,40)" rx="2" ry="2" />
<text  x="424.57" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::_Copy_ctor_base (1 samples, 0.02%)</title><rect x="354.5" y="1317" width="0.2" height="15.0" fill="rgb(240,194,7)" rx="2" ry="2" />
<text  x="357.52" y="1327.5" ></text>
</g>
<g >
<title>seastar::reactor::del_timer (1 samples, 0.02%)</title><rect x="708.3" y="1557" width="0.2" height="15.0" fill="rgb(234,152,35)" rx="2" ry="2" />
<text  x="711.30" y="1567.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::move_it (1 samples, 0.02%)</title><rect x="672.8" y="1621" width="0.2" height="15.0" fill="rgb(214,222,12)" rx="2" ry="2" />
<text  x="675.79" y="1631.5" ></text>
</g>
<g >
<title>single_node_cql_env::do_with (2 samples, 0.04%)</title><rect x="17.1" y="1717" width="0.4" height="15.0" fill="rgb(227,166,49)" rx="2" ry="2" />
<text  x="20.06" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.06%)</title><rect x="10.4" y="1749" width="0.7" height="15.0" fill="rgb(223,190,44)" rx="2" ry="2" />
<text  x="13.44" y="1759.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (45 samples, 0.84%)</title><rect x="1170.1" y="1781" width="10.0" height="15.0" fill="rgb(215,23,7)" rx="2" ry="2" />
<text  x="1173.15" y="1791.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (1 samples, 0.02%)</title><rect x="606.0" y="1541" width="0.2" height="15.0" fill="rgb(210,224,42)" rx="2" ry="2" />
<text  x="608.96" y="1551.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (1 samples, 0.02%)</title><rect x="665.1" y="1605" width="0.2" height="15.0" fill="rgb(238,128,47)" rx="2" ry="2" />
<text  x="668.07" y="1615.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (1 samples, 0.02%)</title><rect x="339.1" y="1381" width="0.2" height="15.0" fill="rgb(241,210,23)" rx="2" ry="2" />
<text  x="342.08" y="1391.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.02%)</title><rect x="43.5" y="1317" width="0.2" height="15.0" fill="rgb(209,171,8)" rx="2" ry="2" />
<text  x="46.53" y="1327.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_token (1 samples, 0.02%)</title><rect x="654.7" y="1557" width="0.2" height="15.0" fill="rgb(228,163,48)" rx="2" ry="2" />
<text  x="657.70" y="1567.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (1 samples, 0.02%)</title><rect x="690.0" y="1477" width="0.2" height="15.0" fill="rgb(207,55,50)" rx="2" ry="2" />
<text  x="692.99" y="1487.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::drop_expired_front (2 samples, 0.04%)</title><rect x="129.1" y="1573" width="0.4" height="15.0" fill="rgb(252,8,39)" rx="2" ry="2" />
<text  x="132.10" y="1583.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (4 samples, 0.07%)</title><rect x="1077.1" y="1541" width="0.9" height="15.0" fill="rgb(212,60,26)" rx="2" ry="2" />
<text  x="1080.07" y="1551.5" ></text>
</g>
<g >
<title>cql3::statements::prepared_statement::checked_weak_from_this (5 samples, 0.09%)</title><rect x="724.8" y="1573" width="1.1" height="15.0" fill="rgb(226,33,41)" rx="2" ry="2" />
<text  x="727.84" y="1583.5" ></text>
</g>
<g >
<title>row::apply_monotonically (1 samples, 0.02%)</title><rect x="11.5" y="1573" width="0.3" height="15.0" fill="rgb(221,108,44)" rx="2" ry="2" />
<text  x="14.54" y="1583.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.04%)</title><rect x="471.6" y="1429" width="0.5" height="15.0" fill="rgb(209,198,45)" rx="2" ry="2" />
<text  x="474.63" y="1439.5" ></text>
</g>
<g >
<title>std::__relocate_object_a&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt; (3 samples, 0.06%)</title><rect x="49.3" y="1349" width="0.6" height="15.0" fill="rgb(213,82,46)" rx="2" ry="2" />
<text  x="52.26" y="1359.5" ></text>
</g>
<g >
<title>mutation_partition::ensure_last_dummy (1 samples, 0.02%)</title><rect x="16.0" y="1685" width="0.2" height="15.0" fill="rgb(224,173,9)" rx="2" ry="2" />
<text  x="18.96" y="1695.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_esft&lt;partition_snapshot&gt;::dispose (1 samples, 0.02%)</title><rect x="583.7" y="1445" width="0.2" height="15.0" fill="rgb(237,131,20)" rx="2" ry="2" />
<text  x="586.68" y="1455.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (2 samples, 0.04%)</title><rect x="75.9" y="1381" width="0.5" height="15.0" fill="rgb(244,88,33)" rx="2" ry="2" />
<text  x="78.95" y="1391.5" ></text>
</g>
<g >
<title>seastar::do_until&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (1 samples, 0.02%)</title><rect x="100.4" y="1077" width="0.3" height="15.0" fill="rgb(252,40,20)" rx="2" ry="2" />
<text  x="103.43" y="1087.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_4findERKNS5_10expressionENS5_6oper_tEEUlRS7_E_EES8_SE_T_EUlSG_E_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_8constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_11conjunctionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_12column_valueEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_5tokenEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13function_callEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4castEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_15field_selectionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4nullEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13bind_variableEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_16untyped_constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_17tuple_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_22collection_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSO_S6_SS_SW_S10_S14_S18_S1C_S1G_S1K_S1O_S1S_SK_S1W_S20_S24_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES29_S2C_ (1 samples, 0.02%)</title><rect x="656.7" y="1541" width="0.2" height="15.0" fill="rgb(254,166,43)" rx="2" ry="2" />
<text  x="659.68" y="1551.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::operator+ (1 samples, 0.02%)</title><rect x="77.9" y="1589" width="0.3" height="15.0" fill="rgb(234,9,22)" rx="2" ry="2" />
<text  x="80.93" y="1599.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_clear (6 samples, 0.11%)</title><rect x="594.3" y="1509" width="1.3" height="15.0" fill="rgb(209,21,42)" rx="2" ry="2" />
<text  x="597.27" y="1519.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::construct&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; const&amp;&gt; (1 samples, 0.02%)</title><rect x="52.1" y="1381" width="0.2" height="15.0" fill="rgb(207,119,47)" rx="2" ry="2" />
<text  x="55.13" y="1391.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="535.8" y="1477" width="0.2" height="15.0" fill="rgb(205,32,37)" rx="2" ry="2" />
<text  x="538.82" y="1487.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (28 samples, 0.52%)</title><rect x="1121.4" y="1461" width="6.2" height="15.0" fill="rgb(216,115,37)" rx="2" ry="2" />
<text  x="1124.41" y="1471.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each_state::parallel_for_each_state (1 samples, 0.02%)</title><rect x="1121.2" y="1429" width="0.2" height="15.0" fill="rgb(231,90,47)" rx="2" ry="2" />
<text  x="1124.19" y="1439.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (1 samples, 0.02%)</title><rect x="830.5" y="1573" width="0.2" height="15.0" fill="rgb(210,141,46)" rx="2" ry="2" />
<text  x="833.49" y="1583.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (1 samples, 0.02%)</title><rect x="319.0" y="1445" width="0.2" height="15.0" fill="rgb(214,128,38)" rx="2" ry="2" />
<text  x="322.01" y="1455.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt;::allocate (1 samples, 0.02%)</title><rect x="155.1" y="1541" width="0.2" height="15.0" fill="rgb(243,147,6)" rx="2" ry="2" />
<text  x="158.13" y="1551.5" ></text>
</g>
<g >
<title>seastar::internal::do_until_state&lt;executor&lt;test_read (1 samples, 0.02%)</title><rect x="83.0" y="1669" width="0.2" height="15.0" fill="rgb(244,183,51)" rx="2" ry="2" />
<text  x="86.01" y="1679.5" ></text>
</g>
<g >
<title>row::external_memory_usage (30 samples, 0.56%)</title><rect x="254.4" y="1301" width="6.6" height="15.0" fill="rgb(248,79,41)" rx="2" ry="2" />
<text  x="257.38" y="1311.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.02%)</title><rect x="22.4" y="1525" width="0.2" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="25.35" y="1535.5" ></text>
</g>
<g >
<title>table::compact_sstables (1 samples, 0.02%)</title><rect x="1130.0" y="1621" width="0.2" height="15.0" fill="rgb(205,47,4)" rx="2" ry="2" />
<text  x="1133.01" y="1631.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::digest_read_result&gt;::future (1 samples, 0.02%)</title><rect x="962.6" y="1509" width="0.2" height="15.0" fill="rgb(214,22,28)" rx="2" ry="2" />
<text  x="965.60" y="1519.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::get_mutations (27 samples, 0.50%)</title><rect x="849.9" y="1557" width="6.0" height="15.0" fill="rgb(233,121,37)" rx="2" ry="2" />
<text  x="852.90" y="1567.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (2 samples, 0.04%)</title><rect x="1163.1" y="1573" width="0.4" height="15.0" fill="rgb(242,78,54)" rx="2" ry="2" />
<text  x="1166.09" y="1583.5" ></text>
</g>
<g >
<title>database::find_schema (28 samples, 0.52%)</title><rect x="755.1" y="1557" width="6.1" height="15.0" fill="rgb(232,217,26)" rx="2" ry="2" />
<text  x="758.05" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;auth::resource_kind, std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;auth::resource_kind&gt;, std::hash&lt;auth::resource_kind&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::at (1 samples, 0.02%)</title><rect x="74.8" y="1573" width="0.3" height="15.0" fill="rgb(246,24,33)" rx="2" ry="2" />
<text  x="77.84" y="1583.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (2 samples, 0.04%)</title><rect x="1140.2" y="1637" width="0.4" height="15.0" fill="rgb(247,113,54)" rx="2" ry="2" />
<text  x="1143.15" y="1647.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::consume_with&lt;row::apply_monotonically (2 samples, 0.04%)</title><rect x="16.4" y="1669" width="0.4" height="15.0" fill="rgb(219,111,39)" rx="2" ry="2" />
<text  x="19.40" y="1679.5" ></text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;void&gt;, database*, seastar::lw_shared_ptr&lt;schema const&gt;, frozen_mutation const&amp;, tracing::trace_state_ptr, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, seastar::bool_class&lt;db::force_sync_tag&gt; &gt;::make_stage_for_group (24 samples, 0.45%)</title><rect x="1112.6" y="1557" width="5.3" height="15.0" fill="rgb(210,109,21)" rx="2" ry="2" />
<text  x="1115.58" y="1567.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, flat_mutation_reader::impl::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (460 samples, 8.60%)</title><rect x="336.9" y="1461" width="101.4" height="15.0" fill="rgb(223,180,38)" rx="2" ry="2" />
<text  x="339.87" y="1471.5" >std::__invok..</text>
</g>
<g >
<title>std::forward&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; const&amp;&gt; (1 samples, 0.02%)</title><rect x="46.8" y="1381" width="0.3" height="15.0" fill="rgb(209,35,22)" rx="2" ry="2" />
<text  x="49.83" y="1391.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;std::_List_iterator&lt;flat_mutation_reader&gt;, mutation_reader_merger::close (1 samples, 0.02%)</title><rect x="587.9" y="1525" width="0.2" height="15.0" fill="rgb(249,102,32)" rx="2" ry="2" />
<text  x="590.87" y="1535.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::normalColumnOperation (50 samples, 0.93%)</title><rect x="46.2" y="1477" width="11.0" height="15.0" fill="rgb(235,87,20)" rx="2" ry="2" />
<text  x="49.17" y="1487.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (1 samples, 0.02%)</title><rect x="100.4" y="1269" width="0.3" height="15.0" fill="rgb(251,90,40)" rx="2" ry="2" />
<text  x="103.43" y="1279.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (1 samples, 0.02%)</title><rect x="93.6" y="1605" width="0.2" height="15.0" fill="rgb(226,88,43)" rx="2" ry="2" />
<text  x="96.59" y="1615.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::partition_slice, std::default_delete&lt;query::partition_slice&gt; &gt;::~unique_ptr (2 samples, 0.04%)</title><rect x="551.5" y="1477" width="0.4" height="15.0" fill="rgb(221,79,18)" rx="2" ry="2" />
<text  x="554.48" y="1487.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::needs_filtering (1 samples, 0.02%)</title><rect x="652.7" y="1621" width="0.2" height="15.0" fill="rgb(217,117,11)" rx="2" ry="2" />
<text  x="655.71" y="1631.5" ></text>
</g>
<g >
<title>reader_permit::impl::~impl (4 samples, 0.07%)</title><rect x="115.6" y="1589" width="0.9" height="15.0" fill="rgb(208,0,28)" rx="2" ry="2" />
<text  x="118.65" y="1599.5" ></text>
</g>
<g >
<title>cql3::expr::expression::~expression (1 samples, 0.02%)</title><rect x="46.0" y="1477" width="0.2" height="15.0" fill="rgb(239,31,42)" rx="2" ry="2" />
<text  x="48.95" y="1487.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (19 samples, 0.36%)</title><rect x="427.3" y="1365" width="4.2" height="15.0" fill="rgb(212,33,16)" rx="2" ry="2" />
<text  x="430.30" y="1375.5" ></text>
</g>
<g >
<title>sstables::sstable::write_compression (1 samples, 0.02%)</title><rect x="17.5" y="1589" width="0.2" height="15.0" fill="rgb(206,89,41)" rx="2" ry="2" />
<text  x="20.50" y="1599.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="56.1" y="1381" width="0.2" height="15.0" fill="rgb(233,2,14)" rx="2" ry="2" />
<text  x="59.10" y="1391.5" ></text>
</g>
<g >
<title>operator new (6 samples, 0.11%)</title><rect x="877.9" y="1461" width="1.3" height="15.0" fill="rgb(224,124,47)" rx="2" ry="2" />
<text  x="880.91" y="1471.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::EqualElement&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (5 samples, 0.09%)</title><rect x="812.6" y="1445" width="1.1" height="15.0" fill="rgb(248,209,1)" rx="2" ry="2" />
<text  x="815.62" y="1455.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::take_value (8 samples, 0.15%)</title><rect x="108.4" y="1621" width="1.7" height="15.0" fill="rgb(226,113,30)" rx="2" ry="2" />
<text  x="111.37" y="1631.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.09%)</title><rect x="473.8" y="1477" width="1.1" height="15.0" fill="rgb(241,189,12)" rx="2" ry="2" />
<text  x="476.84" y="1487.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;boost::iterator_range&lt;mutation_fragment*&gt; &gt;::take_value (2 samples, 0.04%)</title><rect x="308.6" y="1477" width="0.5" height="15.0" fill="rgb(214,217,16)" rx="2" ry="2" />
<text  x="311.64" y="1487.5" ></text>
</g>
<g >
<title>query::querier&lt; (1,839 samples, 34.37%)</title><rect x="159.1" y="1589" width="405.6" height="15.0" fill="rgb(231,45,9)" rx="2" ry="2" />
<text  x="162.10" y="1599.5" >query::querier&lt;</text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (2 samples, 0.04%)</title><rect x="283.3" y="1349" width="0.4" height="15.0" fill="rgb(240,20,7)" rx="2" ry="2" />
<text  x="286.27" y="1359.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.02%)</title><rect x="10.7" y="1701" width="0.2" height="15.0" fill="rgb(222,57,47)" rx="2" ry="2" />
<text  x="13.66" y="1711.5" ></text>
</g>
<g >
<title>mutation_source::mutation_source (10 samples, 0.19%)</title><rect x="631.8" y="1573" width="2.2" height="15.0" fill="rgb(246,5,12)" rx="2" ry="2" />
<text  x="634.76" y="1583.5" ></text>
</g>
<g >
<title>std::__optional_hash_call_base&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, true&gt;::operator (3 samples, 0.06%)</title><rect x="796.1" y="1237" width="0.6" height="15.0" fill="rgb(221,104,32)" rx="2" ry="2" />
<text  x="799.08" y="1247.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (2 samples, 0.04%)</title><rect x="75.9" y="1397" width="0.5" height="15.0" fill="rgb(228,152,0)" rx="2" ry="2" />
<text  x="78.95" y="1407.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (2 samples, 0.04%)</title><rect x="46.4" y="1397" width="0.4" height="15.0" fill="rgb(249,17,17)" rx="2" ry="2" />
<text  x="49.39" y="1407.5" ></text>
</g>
<g >
<title>seastar::do_until&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (1 samples, 0.02%)</title><rect x="848.8" y="1573" width="0.2" height="15.0" fill="rgb(209,201,45)" rx="2" ry="2" />
<text  x="851.79" y="1583.5" ></text>
</g>
<g >
<title>sstables::compaction_type_options::make_regular (1 samples, 0.02%)</title><rect x="15.5" y="1589" width="0.2" height="15.0" fill="rgb(226,128,6)" rx="2" ry="2" />
<text  x="18.51" y="1599.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::schedule&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (7 samples, 0.13%)</title><rect x="823.0" y="1541" width="1.5" height="15.0" fill="rgb(246,203,42)" rx="2" ry="2" />
<text  x="825.99" y="1551.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::invoke_on_all (1 samples, 0.02%)</title><rect x="78.8" y="1557" width="0.2" height="15.0" fill="rgb(248,154,17)" rx="2" ry="2" />
<text  x="81.81" y="1567.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::Parser (3 samples, 0.06%)</title><rect x="20.8" y="1557" width="0.7" height="15.0" fill="rgb(243,196,42)" rx="2" ry="2" />
<text  x="23.81" y="1567.5" ></text>
</g>
<g >
<title>seastar::(anonymous namespace)::thread_wake_task::run_and_dispose (2 samples, 0.04%)</title><rect x="638.4" y="1653" width="0.4" height="15.0" fill="rgb(233,196,7)" rx="2" ry="2" />
<text  x="641.38" y="1663.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.02%)</title><rect x="82.1" y="1589" width="0.2" height="15.0" fill="rgb(208,118,35)" rx="2" ry="2" />
<text  x="85.12" y="1599.5" ></text>
</g>
<g >
<title>query::querier_base::querier_base (1 samples, 0.02%)</title><rect x="1165.3" y="1621" width="0.2" height="15.0" fill="rgb(239,197,30)" rx="2" ry="2" />
<text  x="1168.30" y="1631.5" ></text>
</g>
<g >
<title>row_marker::compact_and_expire (2 samples, 0.04%)</title><rect x="420.9" y="1381" width="0.4" height="15.0" fill="rgb(229,160,1)" rx="2" ry="2" />
<text  x="423.90" y="1391.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;auth::role_or_anonymous&gt;, seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (5 samples, 0.09%)</title><rect x="801.4" y="1445" width="1.1" height="15.0" fill="rgb(216,178,10)" rx="2" ry="2" />
<text  x="804.37" y="1455.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (2 samples, 0.04%)</title><rect x="551.0" y="1477" width="0.5" height="15.0" fill="rgb(211,63,50)" rx="2" ry="2" />
<text  x="554.04" y="1487.5" ></text>
</g>
<g >
<title>cql3::keyspace_element_name::to_internal_name (1 samples, 0.02%)</title><rect x="19.3" y="1621" width="0.2" height="15.0" fill="rgb(248,201,11)" rx="2" ry="2" />
<text  x="22.26" y="1631.5" ></text>
</g>
<g >
<title>row::apply_monotonically (1 samples, 0.02%)</title><rect x="11.5" y="1525" width="0.3" height="15.0" fill="rgb(237,204,13)" rx="2" ry="2" />
<text  x="14.54" y="1535.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (3 samples, 0.06%)</title><rect x="55.2" y="1349" width="0.7" height="15.0" fill="rgb(236,50,41)" rx="2" ry="2" />
<text  x="58.21" y="1359.5" ></text>
</g>
<g >
<title>cql3::raw_value::to_view (1 samples, 0.02%)</title><rect x="837.5" y="1541" width="0.3" height="15.0" fill="rgb(210,120,39)" rx="2" ry="2" />
<text  x="840.54" y="1551.5" ></text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::EqualElement&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt;&amp;&gt; (1 samples, 0.02%)</title><rect x="756.8" y="1509" width="0.2" height="15.0" fill="rgb(239,158,14)" rx="2" ry="2" />
<text  x="759.82" y="1519.5" ></text>
</g>
<g >
<title>partition_snapshot::versions (2 samples, 0.04%)</title><rect x="272.7" y="1269" width="0.4" height="15.0" fill="rgb(228,224,46)" rx="2" ry="2" />
<text  x="275.69" y="1279.5" ></text>
</g>
<g >
<title>std::_Optional_payload&lt;cql3::expr::expression, false, false, false&gt;::_Optional_payload (1 samples, 0.02%)</title><rect x="60.1" y="1445" width="0.2" height="15.0" fill="rgb(249,76,47)" rx="2" ry="2" />
<text  x="63.07" y="1455.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.02%)</title><rect x="803.6" y="1445" width="0.2" height="15.0" fill="rgb(224,169,20)" rx="2" ry="2" />
<text  x="806.58" y="1455.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (3 samples, 0.06%)</title><rect x="799.8" y="1365" width="0.7" height="15.0" fill="rgb(239,46,11)" rx="2" ry="2" />
<text  x="802.83" y="1375.5" ></text>
</g>
<g >
<title>logalloc::segment_pool::refill_emergency_reserve (1 samples, 0.02%)</title><rect x="544.4" y="1445" width="0.2" height="15.0" fill="rgb(217,86,13)" rx="2" ry="2" />
<text  x="547.42" y="1455.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_9has_tokenERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES28_S2B_ (1 samples, 0.02%)</title><rect x="936.1" y="1493" width="0.3" height="15.0" fill="rgb(227,133,0)" rx="2" ry="2" />
<text  x="939.13" y="1503.5" ></text>
</g>
<g >
<title>seastar::internal::repeater&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (2 samples, 0.04%)</title><rect x="848.6" y="1653" width="0.4" height="15.0" fill="rgb(235,48,29)" rx="2" ry="2" />
<text  x="851.57" y="1663.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.02%)</title><rect x="720.9" y="1573" width="0.2" height="15.0" fill="rgb(237,44,11)" rx="2" ry="2" />
<text  x="723.87" y="1583.5" ></text>
</g>
<g >
<title>double_decker&lt;long, cache_entry, dht::raw_token_less_comparator, dht::ring_position_comparator, 16,  (9 samples, 0.17%)</title><rect x="540.2" y="1461" width="2.0" height="15.0" fill="rgb(217,147,31)" rx="2" ry="2" />
<text  x="543.23" y="1471.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (4 samples, 0.07%)</title><rect x="1047.7" y="1445" width="0.9" height="15.0" fill="rgb(224,111,0)" rx="2" ry="2" />
<text  x="1050.74" y="1455.5" ></text>
</g>
<g >
<title>ser::serializer&lt;clustering_key_prefix&gt;::write&lt;bytes_ostream&gt; (3 samples, 0.06%)</title><rect x="1125.2" y="1269" width="0.6" height="15.0" fill="rgb(214,127,6)" rx="2" ry="2" />
<text  x="1128.16" y="1279.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (2 samples, 0.04%)</title><rect x="51.5" y="1301" width="0.4" height="15.0" fill="rgb(208,211,39)" rx="2" ry="2" />
<text  x="54.47" y="1311.5" ></text>
</g>
<g >
<title>flat_mutation_reader::close (3 samples, 0.06%)</title><rect x="1165.5" y="1605" width="0.7" height="15.0" fill="rgb(219,16,11)" rx="2" ry="2" />
<text  x="1168.52" y="1615.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (4 samples, 0.07%)</title><rect x="666.2" y="1637" width="0.9" height="15.0" fill="rgb(244,6,22)" rx="2" ry="2" />
<text  x="669.17" y="1647.5" ></text>
</g>
<g >
<title>std::__apply_impl&lt;seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (27 samples, 0.50%)</title><rect x="1112.1" y="1621" width="6.0" height="15.0" fill="rgb(228,152,2)" rx="2" ry="2" />
<text  x="1115.14" y="1631.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="1685" width="0.3" height="15.0" fill="rgb(225,135,1)" rx="2" ry="2" />
<text  x="13.44" y="1695.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;query::result_memory_accounter&gt;::clear (2 samples, 0.04%)</title><rect x="130.4" y="1605" width="0.5" height="15.0" fill="rgb(209,111,3)" rx="2" ry="2" />
<text  x="133.43" y="1615.5" ></text>
</g>
<g >
<title>sstables::mc::writer::write_cell (3 samples, 0.06%)</title><rect x="81.2" y="1493" width="0.7" height="15.0" fill="rgb(232,140,28)" rx="2" ry="2" />
<text  x="84.24" y="1503.5" ></text>
</g>
<g >
<title>dht::tri_compare (3 samples, 0.06%)</title><rect x="1055.5" y="1397" width="0.6" height="15.0" fill="rgb(221,132,15)" rx="2" ry="2" />
<text  x="1058.46" y="1407.5" ></text>
</g>
<g >
<title>read_simple&lt;unsigned short, managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="498.5" y="1365" width="0.3" height="15.0" fill="rgb(244,43,54)" rx="2" ry="2" />
<text  x="501.54" y="1375.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::pop_back (1 samples, 0.02%)</title><rect x="43.7" y="1445" width="0.3" height="15.0" fill="rgb(244,83,26)" rx="2" ry="2" />
<text  x="46.75" y="1455.5" ></text>
</g>
<g >
<title>mutation_fragment::operator= (2 samples, 0.04%)</title><rect x="190.9" y="1381" width="0.4" height="15.0" fill="rgb(226,4,13)" rx="2" ry="2" />
<text  x="193.86" y="1391.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;query::querier&lt; (1 samples, 0.02%)</title><rect x="135.9" y="1605" width="0.3" height="15.0" fill="rgb(224,69,15)" rx="2" ry="2" />
<text  x="138.94" y="1615.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (1 samples, 0.02%)</title><rect x="786.4" y="1365" width="0.2" height="15.0" fill="rgb(230,0,17)" rx="2" ry="2" />
<text  x="789.37" y="1375.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (4 samples, 0.07%)</title><rect x="55.0" y="1381" width="0.9" height="15.0" fill="rgb(215,139,30)" rx="2" ry="2" />
<text  x="57.99" y="1391.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_erase_at_end (7 samples, 0.13%)</title><rect x="398.2" y="1333" width="1.5" height="15.0" fill="rgb(251,16,20)" rx="2" ry="2" />
<text  x="401.19" y="1343.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="57.9" y="1413" width="0.2" height="15.0" fill="rgb(225,78,44)" rx="2" ry="2" />
<text  x="60.86" y="1423.5" ></text>
</g>
<g >
<title>std::vector&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, std::allocator&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt;::emplace_back&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; (1 samples, 0.02%)</title><rect x="1126.0" y="1237" width="0.3" height="15.0" fill="rgb(214,66,53)" rx="2" ry="2" />
<text  x="1129.04" y="1247.5" ></text>
</g>
<g >
<title>table::set_hit_rate (1 samples, 0.02%)</title><rect x="712.0" y="1621" width="0.3" height="15.0" fill="rgb(244,114,29)" rx="2" ry="2" />
<text  x="715.04" y="1631.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (2 samples, 0.04%)</title><rect x="177.6" y="1461" width="0.5" height="15.0" fill="rgb(237,166,24)" rx="2" ry="2" />
<text  x="180.63" y="1471.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="519.7" y="1349" width="0.2" height="15.0" fill="rgb(220,140,36)" rx="2" ry="2" />
<text  x="522.72" y="1359.5" ></text>
</g>
<g >
<title>query::querier&lt; (1 samples, 0.02%)</title><rect x="115.2" y="1605" width="0.2" height="15.0" fill="rgb(216,29,14)" rx="2" ry="2" />
<text  x="118.21" y="1615.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::indirect_move (1 samples, 0.02%)</title><rect x="127.6" y="1541" width="0.2" height="15.0" fill="rgb(252,210,0)" rx="2" ry="2" />
<text  x="130.56" y="1551.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.02%)</title><rect x="78.8" y="1685" width="0.2" height="15.0" fill="rgb(240,168,1)" rx="2" ry="2" />
<text  x="81.81" y="1695.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.04%)</title><rect x="443.8" y="1477" width="0.5" height="15.0" fill="rgb(206,114,6)" rx="2" ry="2" />
<text  x="446.84" y="1487.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::check_queue_size (2 samples, 0.04%)</title><rect x="1003.4" y="1349" width="0.4" height="15.0" fill="rgb(251,101,47)" rx="2" ry="2" />
<text  x="1006.41" y="1359.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;lister&gt;::make&lt;seastar::file, std::unordered_set&lt;seastar::directory_entry_type, seastar::enum_hash&lt;seastar::directory_entry_type&gt;, std::equal_to&lt;seastar::directory_entry_type&gt;, std::allocator&lt;seastar::directory_entry_type&gt; &gt; const, std::function&lt;seastar::future&lt;void&gt;  (1 samples, 0.02%)</title><rect x="690.7" y="1621" width="0.2" height="15.0" fill="rgb(233,130,26)" rx="2" ry="2" />
<text  x="693.65" y="1631.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::allocate_on (1 samples, 0.02%)</title><rect x="11.5" y="1493" width="0.3" height="15.0" fill="rgb(217,87,42)" rx="2" ry="2" />
<text  x="14.54" y="1503.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (2 samples, 0.04%)</title><rect x="488.4" y="1429" width="0.4" height="15.0" fill="rgb(221,113,43)" rx="2" ry="2" />
<text  x="491.40" y="1439.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (7 samples, 0.13%)</title><rect x="1123.6" y="1285" width="1.6" height="15.0" fill="rgb(227,154,39)" rx="2" ry="2" />
<text  x="1126.61" y="1295.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (6 samples, 0.11%)</title><rect x="784.8" y="1349" width="1.4" height="15.0" fill="rgb(214,28,6)" rx="2" ry="2" />
<text  x="787.83" y="1359.5" ></text>
</g>
<g >
<title>operator new (7 samples, 0.13%)</title><rect x="321.9" y="1429" width="1.5" height="15.0" fill="rgb(251,228,23)" rx="2" ry="2" />
<text  x="324.87" y="1439.5" ></text>
</g>
<g >
<title>sstables::mc::writer::consume (5 samples, 0.09%)</title><rect x="80.8" y="1605" width="1.1" height="15.0" fill="rgb(234,93,39)" rx="2" ry="2" />
<text  x="83.80" y="1615.5" ></text>
</g>
<g >
<title>cql3::statements::raw::modification_statement::prepare (34 samples, 0.64%)</title><rect x="66.2" y="1605" width="7.5" height="15.0" fill="rgb(205,18,41)" rx="2" ry="2" />
<text  x="69.24" y="1615.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (1 samples, 0.02%)</title><rect x="598.0" y="1573" width="0.2" height="15.0" fill="rgb(207,87,2)" rx="2" ry="2" />
<text  x="601.01" y="1583.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="323.9" y="1429" width="0.2" height="15.0" fill="rgb(229,102,44)" rx="2" ry="2" />
<text  x="326.86" y="1439.5" ></text>
</g>
<g >
<title>make_partition_snapshot_flat_reader_from_snp_schema (123 samples, 2.30%)</title><rect x="503.2" y="1477" width="27.1" height="15.0" fill="rgb(248,85,23)" rx="2" ry="2" />
<text  x="506.17" y="1487.5" >m..</text>
</g>
<g >
<title>compact_mutation_state&lt; (335 samples, 6.26%)</title><rect x="346.4" y="1381" width="73.8" height="15.0" fill="rgb(214,179,28)" rx="2" ry="2" />
<text  x="349.36" y="1391.5" >compact_..</text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_move_assign (1 samples, 0.02%)</title><rect x="461.9" y="1413" width="0.2" height="15.0" fill="rgb(229,134,48)" rx="2" ry="2" />
<text  x="464.93" y="1423.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mHEXNUMBER (12 samples, 0.22%)</title><rect x="28.5" y="1413" width="2.7" height="15.0" fill="rgb(237,199,22)" rx="2" ry="2" />
<text  x="31.53" y="1423.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::deallocate (7 samples, 0.13%)</title><rect x="324.3" y="1461" width="1.5" height="15.0" fill="rgb(247,149,14)" rx="2" ry="2" />
<text  x="327.30" y="1471.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (2 samples, 0.04%)</title><rect x="417.6" y="1301" width="0.4" height="15.0" fill="rgb(244,83,48)" rx="2" ry="2" />
<text  x="420.60" y="1311.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;void&gt;, service::storage_proxy*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt;, db::consistency_level, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, tracing::trace_state_ptr, service_permit, bool, seastar::lw_shared_ptr&lt;cdc::operation_result_tracker&gt; &gt;::do_flush (1 samples, 0.02%)</title><rect x="638.8" y="1653" width="0.2" height="15.0" fill="rgb(253,203,29)" rx="2" ry="2" />
<text  x="641.82" y="1663.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reserve&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (1 samples, 0.02%)</title><rect x="848.8" y="1557" width="0.2" height="15.0" fill="rgb(239,30,18)" rx="2" ry="2" />
<text  x="851.79" y="1567.5" ></text>
</g>
<g >
<title>service::write_response_handler::~write_response_handler (5 samples, 0.09%)</title><rect x="691.1" y="1637" width="1.1" height="15.0" fill="rgb(219,130,6)" rx="2" ry="2" />
<text  x="694.09" y="1647.5" ></text>
</g>
<g >
<title>bytes_view_hasher::update (1 samples, 0.02%)</title><rect x="744.9" y="1429" width="0.2" height="15.0" fill="rgb(232,172,29)" rx="2" ry="2" />
<text  x="747.91" y="1439.5" ></text>
</g>
<g >
<title>service::storage_service::replicate_to_all_cores (1 samples, 0.02%)</title><rect x="17.3" y="1589" width="0.2" height="15.0" fill="rgb(231,158,8)" rx="2" ry="2" />
<text  x="20.28" y="1599.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (1 samples, 0.02%)</title><rect x="91.4" y="1573" width="0.2" height="15.0" fill="rgb(208,63,30)" rx="2" ry="2" />
<text  x="94.39" y="1583.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.06%)</title><rect x="1136.2" y="1637" width="0.6" height="15.0" fill="rgb(244,161,27)" rx="2" ry="2" />
<text  x="1139.18" y="1647.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (1 samples, 0.02%)</title><rect x="916.9" y="1509" width="0.3" height="15.0" fill="rgb(243,103,33)" rx="2" ry="2" />
<text  x="919.95" y="1519.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (1 samples, 0.02%)</title><rect x="671.0" y="1589" width="0.2" height="15.0" fill="rgb(205,64,7)" rx="2" ry="2" />
<text  x="674.02" y="1599.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (1 samples, 0.02%)</title><rect x="56.1" y="1397" width="0.2" height="15.0" fill="rgb(241,72,8)" rx="2" ry="2" />
<text  x="59.10" y="1407.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::insertToken (9 samples, 0.17%)</title><rect x="23.2" y="1461" width="2.0" height="15.0" fill="rgb(214,62,19)" rx="2" ry="2" />
<text  x="26.23" y="1471.5" ></text>
</g>
<g >
<title>database::shard_of (1 samples, 0.02%)</title><rect x="1120.5" y="1333" width="0.2" height="15.0" fill="rgb(247,29,7)" rx="2" ry="2" />
<text  x="1123.52" y="1343.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (4 samples, 0.07%)</title><rect x="52.3" y="1429" width="0.9" height="15.0" fill="rgb(231,82,0)" rx="2" ry="2" />
<text  x="55.35" y="1439.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::push_mutation_fragment&lt;mutation_fragment&gt; (2 samples, 0.04%)</title><rect x="202.3" y="1397" width="0.5" height="15.0" fill="rgb(230,210,32)" rx="2" ry="2" />
<text  x="205.33" y="1407.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.02%)</title><rect x="22.6" y="1429" width="0.2" height="15.0" fill="rgb(225,36,53)" rx="2" ry="2" />
<text  x="25.57" y="1439.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.02%)</title><rect x="11.5" y="1621" width="0.3" height="15.0" fill="rgb(208,47,10)" rx="2" ry="2" />
<text  x="14.54" y="1631.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::attributes::raw, std::default_delete&lt;cql3::attributes::raw&gt; &gt;::__uniq_ptr_impl (1 samples, 0.02%)</title><rect x="60.3" y="1461" width="0.2" height="15.0" fill="rgb(247,93,6)" rx="2" ry="2" />
<text  x="63.29" y="1471.5" ></text>
</g>
<g >
<title>seastar::memory::stats (4 samples, 0.07%)</title><rect x="199.7" y="1397" width="0.9" height="15.0" fill="rgb(212,101,50)" rx="2" ry="2" />
<text  x="202.68" y="1407.5" ></text>
</g>
<g >
<title>antlr3::Lexer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::~Lexer (1 samples, 0.02%)</title><rect x="20.6" y="1573" width="0.2" height="15.0" fill="rgb(239,89,40)" rx="2" ry="2" />
<text  x="23.59" y="1583.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="1132.2" y="1653" width="0.2" height="15.0" fill="rgb(213,194,49)" rx="2" ry="2" />
<text  x="1135.21" y="1663.5" ></text>
</g>
<g >
<title>create_partitions (274 samples, 5.12%)</title><rect x="17.7" y="1685" width="60.5" height="15.0" fill="rgb(242,105,10)" rx="2" ry="2" />
<text  x="20.72" y="1695.5" >create..</text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (3 samples, 0.06%)</title><rect x="889.4" y="1381" width="0.6" height="15.0" fill="rgb(233,89,53)" rx="2" ry="2" />
<text  x="892.38" y="1391.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (5 samples, 0.09%)</title><rect x="158.0" y="1589" width="1.1" height="15.0" fill="rgb(222,222,17)" rx="2" ry="2" />
<text  x="161.00" y="1599.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::reserve (1 samples, 0.02%)</title><rect x="1154.7" y="1605" width="0.2" height="15.0" fill="rgb(244,202,13)" rx="2" ry="2" />
<text  x="1157.71" y="1615.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (6 samples, 0.11%)</title><rect x="411.6" y="1301" width="1.4" height="15.0" fill="rgb(208,64,27)" rx="2" ry="2" />
<text  x="414.64" y="1311.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::visit&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (1 samples, 0.02%)</title><rect x="82.1" y="1605" width="0.2" height="15.0" fill="rgb(248,21,35)" rx="2" ry="2" />
<text  x="85.12" y="1615.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (12 samples, 0.22%)</title><rect x="669.3" y="1637" width="2.6" height="15.0" fill="rgb(244,153,41)" rx="2" ry="2" />
<text  x="672.26" y="1647.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureIvE9then_implIZZN5query12consume_pageIL19emit_only_live_rows1E20query_result_builderEEDaR20flat_mutation_readerNS_13lw_shared_ptrI22compact_mutation_stateIXT_EL20compact_for_sstables0EEEERKNS3_15partition_sliceEOT0_mjNSt6chrono10time_pointI8gc_clockNSJ_8durationIlSt5ratioILl1ELl1EEEEEEENUlP17mutation_fragmentE_clESS_EUlDpOT_E_NS0_ISt5tupleIJSt8optionalI21clustering_key_prefixEEEEEEESH_OT_ (1 samples, 0.02%)</title><rect x="332.5" y="1525" width="0.2" height="15.0" fill="rgb(211,181,50)" rx="2" ry="2" />
<text  x="335.46" y="1535.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_M_move_assign (2 samples, 0.04%)</title><rect x="1084.4" y="1509" width="0.4" height="15.0" fill="rgb(214,166,42)" rx="2" ry="2" />
<text  x="1087.35" y="1519.5" ></text>
</g>
<g >
<title>_ZSt5visitIR18overloaded_functorIJZN4cql34expr9find_atomIZNS2_4findERKNS2_10expressionENS2_6oper_tEEUlRKNS2_15binary_operatorEE_EEPS9_S6_T_EUlSA_E_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_8constantEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_11conjunctionEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_12column_valueEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_5tokenEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_21unresolved_identifierEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_25column_mutation_attributeEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_13function_callEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_4castEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_15field_selectionEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_4nullEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_13bind_variableEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_16untyped_constantEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_17tuple_constructorEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_22collection_constructorEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_20usertype_constructorEE_EEJRSt7variantIJSJ_S8_SN_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_SF_S1R_S1V_S1Z_EEEENSt13invoke_resultISD_JDpDTclsr3stdE3getILm0EEclsr3stdE7declvalIT0_EEEEEE4typeEOSD_DpOS29_ (1 samples, 0.02%)</title><rect x="851.4" y="1509" width="0.3" height="15.0" fill="rgb(237,69,30)" rx="2" ry="2" />
<text  x="854.44" y="1519.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.02%)</title><rect x="40.9" y="1333" width="0.2" height="15.0" fill="rgb(238,154,32)" rx="2" ry="2" />
<text  x="43.88" y="1343.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (8 samples, 0.15%)</title><rect x="833.4" y="1525" width="1.7" height="15.0" fill="rgb(245,171,24)" rx="2" ry="2" />
<text  x="836.35" y="1535.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (1 samples, 0.02%)</title><rect x="19.0" y="1637" width="0.3" height="15.0" fill="rgb(233,57,28)" rx="2" ry="2" />
<text  x="22.04" y="1647.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector (7 samples, 0.13%)</title><rect x="1153.4" y="1621" width="1.5" height="15.0" fill="rgb(206,29,10)" rx="2" ry="2" />
<text  x="1156.39" y="1631.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_28has_slice_or_needs_filteringERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES28_S2B_ (1 samples, 0.02%)</title><rect x="935.0" y="1493" width="0.3" height="15.0" fill="rgb(248,223,0)" rx="2" ry="2" />
<text  x="938.03" y="1503.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;void&gt;  (1 samples, 0.02%)</title><rect x="11.5" y="1749" width="0.3" height="15.0" fill="rgb(215,12,0)" rx="2" ry="2" />
<text  x="14.54" y="1759.5" ></text>
</g>
<g >
<title>mutation_fragment::consume&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (376 samples, 7.03%)</title><rect x="343.0" y="1413" width="83.0" height="15.0" fill="rgb(245,4,45)" rx="2" ry="2" />
<text  x="346.05" y="1423.5" >mutation_..</text>
</g>
<g >
<title>seastar::future_state&lt;service::digest_read_result&gt;::clear (1 samples, 0.02%)</title><rect x="963.3" y="1509" width="0.2" height="15.0" fill="rgb(245,205,45)" rx="2" ry="2" />
<text  x="966.26" y="1519.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (1 samples, 0.02%)</title><rect x="1074.2" y="1509" width="0.2" height="15.0" fill="rgb(230,24,37)" rx="2" ry="2" />
<text  x="1077.21" y="1519.5" ></text>
</g>
<g >
<title>db::is_datacenter_local (2 samples, 0.04%)</title><rect x="953.6" y="1509" width="0.4" height="15.0" fill="rgb(248,116,22)" rx="2" ry="2" />
<text  x="956.56" y="1519.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::lower_bound&lt;mutation_partition, schema const&amp;, nonwrapping_interval&lt;clustering_key_prefix&gt; const&amp;&gt; (3 samples, 0.06%)</title><rect x="266.1" y="1301" width="0.6" height="15.0" fill="rgb(227,69,6)" rx="2" ry="2" />
<text  x="269.07" y="1311.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::constant (3 samples, 0.06%)</title><rect x="59.0" y="1445" width="0.6" height="15.0" fill="rgb(252,25,6)" rx="2" ry="2" />
<text  x="61.96" y="1455.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.06%)</title><rect x="772.7" y="1461" width="0.7" height="15.0" fill="rgb(247,36,39)" rx="2" ry="2" />
<text  x="775.70" y="1471.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::metadata const&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="660.0" y="1605" width="0.2" height="15.0" fill="rgb(210,17,42)" rx="2" ry="2" />
<text  x="662.99" y="1615.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="879.2" y="1461" width="0.3" height="15.0" fill="rgb(242,105,13)" rx="2" ry="2" />
<text  x="882.23" y="1471.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="1141" width="0.3" height="15.0" fill="rgb(210,120,21)" rx="2" ry="2" />
<text  x="13.44" y="1151.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="1333" width="0.3" height="15.0" fill="rgb(224,18,3)" rx="2" ry="2" />
<text  x="13.44" y="1343.5" ></text>
</g>
<g >
<title>db::marshal::type_parser::parse (1 samples, 0.02%)</title><rect x="1130.0" y="949" width="0.2" height="15.0" fill="rgb(226,52,21)" rx="2" ry="2" />
<text  x="1133.01" y="959.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.02%)</title><rect x="40.9" y="1269" width="0.2" height="15.0" fill="rgb(238,144,22)" rx="2" ry="2" />
<text  x="43.88" y="1279.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::create_clustering_ranges (1 samples, 0.02%)</title><rect x="852.8" y="1541" width="0.2" height="15.0" fill="rgb(243,160,33)" rx="2" ry="2" />
<text  x="855.76" y="1551.5" ></text>
</g>
<g >
<title>database::has_keyspace (10 samples, 0.19%)</title><rect x="833.1" y="1557" width="2.2" height="15.0" fill="rgb(216,187,35)" rx="2" ry="2" />
<text  x="836.13" y="1567.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_pausable&lt;flush_reader::fill_buffer (2 samples, 0.04%)</title><rect x="79.7" y="1589" width="0.4" height="15.0" fill="rgb(230,183,32)" rx="2" ry="2" />
<text  x="82.70" y="1599.5" ></text>
</g>
<g >
<title>cql3::expr::expression::~expression (3 samples, 0.06%)</title><rect x="54.1" y="1429" width="0.7" height="15.0" fill="rgb(245,14,43)" rx="2" ry="2" />
<text  x="57.11" y="1439.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::relationType (3 samples, 0.06%)</title><rect x="57.9" y="1477" width="0.6" height="15.0" fill="rgb(228,215,18)" rx="2" ry="2" />
<text  x="60.86" y="1487.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.06%)</title><rect x="658.9" y="1605" width="0.7" height="15.0" fill="rgb(224,90,17)" rx="2" ry="2" />
<text  x="661.89" y="1615.5" ></text>
</g>
<g >
<title>mutation_reader_merger::close (1 samples, 0.02%)</title><rect x="597.6" y="1541" width="0.2" height="15.0" fill="rgb(216,83,20)" rx="2" ry="2" />
<text  x="600.57" y="1551.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (1 samples, 0.02%)</title><rect x="269.8" y="1301" width="0.2" height="15.0" fill="rgb(244,145,38)" rx="2" ry="2" />
<text  x="272.82" y="1311.5" ></text>
</g>
<g >
<title>iterator_reader::fetch_entry (1 samples, 0.02%)</title><rect x="79.5" y="1541" width="0.2" height="15.0" fill="rgb(233,12,19)" rx="2" ry="2" />
<text  x="82.48" y="1551.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.06%)</title><rect x="439.9" y="1413" width="0.6" height="15.0" fill="rgb(230,50,9)" rx="2" ry="2" />
<text  x="442.87" y="1423.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.04%)</title><rect x="44.4" y="1365" width="0.4" height="15.0" fill="rgb(243,66,31)" rx="2" ry="2" />
<text  x="47.41" y="1375.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;schema&gt;::make&lt;schema&gt; (1 samples, 0.02%)</title><rect x="17.1" y="1381" width="0.2" height="15.0" fill="rgb(208,73,12)" rx="2" ry="2" />
<text  x="20.06" y="1391.5" ></text>
</g>
<g >
<title>seastar::future&lt;utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (3 samples, 0.06%)</title><rect x="783.9" y="1381" width="0.7" height="15.0" fill="rgb(210,140,7)" rx="2" ry="2" />
<text  x="786.95" y="1391.5" ></text>
</g>
<g >
<title>std::default_delete&lt;query::partition_slice const&gt;::operator (1 samples, 0.02%)</title><rect x="1166.2" y="1605" width="0.2" height="15.0" fill="rgb(232,12,1)" rx="2" ry="2" />
<text  x="1169.18" y="1615.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;position_in_partition&gt;::_M_reset (2 samples, 0.04%)</title><rect x="294.3" y="1397" width="0.4" height="15.0" fill="rgb(239,121,49)" rx="2" ry="2" />
<text  x="297.30" y="1407.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::arm (1 samples, 0.02%)</title><rect x="1008.9" y="1301" width="0.2" height="15.0" fill="rgb(212,215,18)" rx="2" ry="2" />
<text  x="1011.92" y="1311.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (2 samples, 0.04%)</title><rect x="1127.6" y="1381" width="0.4" height="15.0" fill="rgb(210,21,36)" rx="2" ry="2" />
<text  x="1130.58" y="1391.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::guard (3 samples, 0.06%)</title><rect x="499.2" y="1477" width="0.7" height="15.0" fill="rgb(253,30,41)" rx="2" ry="2" />
<text  x="502.20" y="1487.5" ></text>
</g>
<g >
<title>auth::data_resource_view::table (1 samples, 0.02%)</title><rect x="769.8" y="1509" width="0.3" height="15.0" fill="rgb(247,40,11)" rx="2" ry="2" />
<text  x="772.83" y="1519.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::clear (1 samples, 0.02%)</title><rect x="303.3" y="1429" width="0.3" height="15.0" fill="rgb(235,6,41)" rx="2" ry="2" />
<text  x="306.35" y="1439.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::followPush (1 samples, 0.02%)</title><rect x="52.1" y="1429" width="0.2" height="15.0" fill="rgb(215,180,19)" rx="2" ry="2" />
<text  x="55.13" y="1439.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (1 samples, 0.02%)</title><rect x="645.9" y="1637" width="0.2" height="15.0" fill="rgb(212,199,13)" rx="2" ry="2" />
<text  x="648.88" y="1647.5" ></text>
</g>
<g >
<title>seastar::do_until&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::fill_buffer (2 samples, 0.04%)</title><rect x="79.7" y="1557" width="0.4" height="15.0" fill="rgb(208,195,14)" rx="2" ry="2" />
<text  x="82.70" y="1567.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (2 samples, 0.04%)</title><rect x="150.1" y="1589" width="0.4" height="15.0" fill="rgb(250,22,0)" rx="2" ry="2" />
<text  x="153.06" y="1599.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::iterator::operator* (1 samples, 0.02%)</title><rect x="1041.1" y="1477" width="0.2" height="15.0" fill="rgb(213,92,1)" rx="2" ry="2" />
<text  x="1044.12" y="1487.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.04%)</title><rect x="38.7" y="1413" width="0.4" height="15.0" fill="rgb(211,111,53)" rx="2" ry="2" />
<text  x="41.67" y="1423.5" ></text>
</g>
<g >
<title>mutation::consume&lt;compact_for_query&lt; (1 samples, 0.02%)</title><rect x="102.0" y="1509" width="0.2" height="15.0" fill="rgb(246,219,5)" rx="2" ry="2" />
<text  x="104.97" y="1519.5" ></text>
</g>
<g >
<title>utils::config_file::named_value&lt;unsigned long&gt;::the_value (10 samples, 0.19%)</title><rect x="1104.2" y="1541" width="2.2" height="15.0" fill="rgb(244,113,41)" rx="2" ry="2" />
<text  x="1107.20" y="1551.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::construct&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; const&amp;&gt; (1 samples, 0.02%)</title><rect x="37.6" y="1461" width="0.2" height="15.0" fill="rgb(230,202,24)" rx="2" ry="2" />
<text  x="40.57" y="1471.5" ></text>
</g>
<g >
<title>_ZSt5applyIZN7seastar8internal12do_with_implIRKNS0_13basic_sstringIcjLj15ELb1EEEN4auth8resourceEJZNK7service12client_state24has_column_family_accessERK8databaseS6_S6_NS7_10permissionENS7_12command_desc4typeEE3$_4EEEDaOT_OT0_DpOT1_EUlDpOT_E_St5tupleIJS6_OS8_EEEDcSJ_SL_ (10 samples, 0.19%)</title><rect x="763.4" y="1541" width="2.2" height="15.0" fill="rgb(207,106,43)" rx="2" ry="2" />
<text  x="766.44" y="1551.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::set&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="695.9" y="1605" width="0.3" height="15.0" fill="rgb(235,210,29)" rx="2" ry="2" />
<text  x="698.94" y="1615.5" ></text>
</g>
<g >
<title>std::tuple&lt;cql3::statements::raw::delete_statement*, std::default_delete&lt;cql3::statements::raw::delete_statement&gt; &gt;::tuple&lt;true, true&gt; (1 samples, 0.02%)</title><rect x="63.8" y="1477" width="0.2" height="15.0" fill="rgb(211,214,0)" rx="2" ry="2" />
<text  x="66.82" y="1487.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::operator+= (1 samples, 0.02%)</title><rect x="77.9" y="1605" width="0.3" height="15.0" fill="rgb(206,22,30)" rx="2" ry="2" />
<text  x="80.93" y="1615.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (2 samples, 0.04%)</title><rect x="710.7" y="1557" width="0.5" height="15.0" fill="rgb(226,183,7)" rx="2" ry="2" />
<text  x="713.72" y="1567.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::do_refresh_state (23 samples, 0.43%)</title><rect x="263.4" y="1317" width="5.1" height="15.0" fill="rgb(247,38,27)" rx="2" ry="2" />
<text  x="266.42" y="1327.5" ></text>
</g>
<g >
<title>mutation_partition::upper_bound (1 samples, 0.02%)</title><rect x="266.7" y="1285" width="0.3" height="15.0" fill="rgb(215,20,37)" rx="2" ry="2" />
<text  x="269.73" y="1295.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;::unique_ptr (1 samples, 0.02%)</title><rect x="48.8" y="1365" width="0.2" height="15.0" fill="rgb(208,219,9)" rx="2" ry="2" />
<text  x="51.82" y="1375.5" ></text>
</g>
<g >
<title>query::result_set_builder::accept_new_partition (1 samples, 0.02%)</title><rect x="101.3" y="1573" width="0.2" height="15.0" fill="rgb(240,137,54)" rx="2" ry="2" />
<text  x="104.31" y="1583.5" ></text>
</g>
<g >
<title>list_reader_selector::create_new_readers (2 samples, 0.04%)</title><rect x="461.3" y="1445" width="0.4" height="15.0" fill="rgb(214,150,53)" rx="2" ry="2" />
<text  x="464.27" y="1455.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::get_mutations (12 samples, 0.22%)</title><rect x="853.0" y="1541" width="2.6" height="15.0" fill="rgb(217,127,21)" rx="2" ry="2" />
<text  x="855.98" y="1551.5" ></text>
</g>
<g >
<title>compound_type&lt; (9 samples, 0.17%)</title><rect x="907.0" y="1509" width="2.0" height="15.0" fill="rgb(223,146,47)" rx="2" ry="2" />
<text  x="910.02" y="1519.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::pop_back (1 samples, 0.02%)</title><rect x="304.4" y="1445" width="0.3" height="15.0" fill="rgb(224,16,47)" rx="2" ry="2" />
<text  x="307.45" y="1455.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (1 samples, 0.02%)</title><rect x="687.3" y="1621" width="0.3" height="15.0" fill="rgb(215,95,26)" rx="2" ry="2" />
<text  x="690.34" y="1631.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (1 samples, 0.02%)</title><rect x="925.1" y="1541" width="0.2" height="15.0" fill="rgb(213,175,0)" rx="2" ry="2" />
<text  x="928.11" y="1551.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;flat_mutation_reader::impl::consume_pausable&lt;flush_reader::fill_buffer (1 samples, 0.02%)</title><rect x="80.1" y="1589" width="0.3" height="15.0" fill="rgb(250,146,43)" rx="2" ry="2" />
<text  x="83.14" y="1599.5" ></text>
</g>
<g >
<title>antlr3::DefaultAllocPolicy::StackType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::push (1 samples, 0.02%)</title><rect x="40.0" y="1477" width="0.2" height="15.0" fill="rgb(207,213,32)" rx="2" ry="2" />
<text  x="43.00" y="1487.5" ></text>
</g>
<g >
<title>row_cache::do_update (1 samples, 0.02%)</title><rect x="11.5" y="1733" width="0.3" height="15.0" fill="rgb(208,209,43)" rx="2" ry="2" />
<text  x="14.54" y="1743.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::query_state&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="674.5" y="1637" width="0.3" height="15.0" fill="rgb(207,56,38)" rx="2" ry="2" />
<text  x="677.55" y="1647.5" ></text>
</g>
<g >
<title>locator::abstract_replication_strategy::get_natural_endpoints (1 samples, 0.02%)</title><rect x="1126.9" y="1333" width="0.2" height="15.0" fill="rgb(237,154,5)" rx="2" ry="2" />
<text  x="1129.92" y="1343.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="469.2" y="1413" width="0.2" height="15.0" fill="rgb(206,226,27)" rx="2" ry="2" />
<text  x="472.21" y="1423.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="210.3" y="1349" width="0.2" height="15.0" fill="rgb(208,71,46)" rx="2" ry="2" />
<text  x="213.27" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;, nonwrapping_interval&lt;managed_bytes&gt; &gt;::~_Variant_storage (1 samples, 0.02%)</title><rect x="927.5" y="1557" width="0.3" height="15.0" fill="rgb(238,12,19)" rx="2" ry="2" />
<text  x="930.53" y="1567.5" ></text>
</g>
<g >
<title>compound_wrapper&lt;clustering_key_prefix, clustering_key_prefix_view&gt;::from_singular&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; (1 samples, 0.02%)</title><rect x="101.5" y="1573" width="0.3" height="15.0" fill="rgb(254,155,31)" rx="2" ry="2" />
<text  x="104.53" y="1583.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="51.2" y="1365" width="0.3" height="15.0" fill="rgb(222,142,26)" rx="2" ry="2" />
<text  x="54.24" y="1375.5" ></text>
</g>
<g >
<title>validation::validate_column_family (2 samples, 0.04%)</title><rect x="74.0" y="1605" width="0.4" height="15.0" fill="rgb(218,226,7)" rx="2" ry="2" />
<text  x="76.96" y="1615.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_insert_bucket_begin (1 samples, 0.02%)</title><rect x="1147.4" y="1589" width="0.3" height="15.0" fill="rgb(210,123,41)" rx="2" ry="2" />
<text  x="1150.43" y="1599.5" ></text>
</g>
<g >
<title>_ZSt13__invoke_implISt10unique_ptrIN7seastar8internal13do_with_stateISt5tupleIJN20flat_mutation_reader4impl16consumer_adapterI35stable_flattened_mutations_consumerI17compact_for_queryIL19emit_only_live_rows1EN5query27clustering_position_trackerI20query_result_builderEEEEEEEENS1_6futureIvEEEESt14default_deleteISL_EEZNS2_12do_with_implISH_ZNS6_7consumeISG_EEDaT_EUlRSH_E_JEEEDaOSR_OT0_DpOT1_EUlDpOT_E_JSH_EESR_St14__invoke_otherSW_SZ_ (2 samples, 0.04%)</title><rect x="334.7" y="1477" width="0.4" height="15.0" fill="rgb(218,119,40)" rx="2" ry="2" />
<text  x="337.67" y="1487.5" ></text>
</g>
<g >
<title>schema::rebuild (1 samples, 0.02%)</title><rect x="17.1" y="1333" width="0.2" height="15.0" fill="rgb(237,152,13)" rx="2" ry="2" />
<text  x="20.06" y="1343.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;cql_transport::messages::result_message::rows, false&gt;::make&lt;cql3::result&gt; (9 samples, 0.17%)</title><rect x="659.6" y="1621" width="1.9" height="15.0" fill="rgb(233,126,50)" rx="2" ry="2" />
<text  x="662.55" y="1631.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::operator== (1 samples, 0.02%)</title><rect x="75.9" y="1349" width="0.3" height="15.0" fill="rgb(205,137,16)" rx="2" ry="2" />
<text  x="78.95" y="1359.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (1 samples, 0.02%)</title><rect x="855.4" y="1477" width="0.2" height="15.0" fill="rgb(229,149,28)" rx="2" ry="2" />
<text  x="858.41" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.02%)</title><rect x="354.7" y="1317" width="0.3" height="15.0" fill="rgb(218,218,29)" rx="2" ry="2" />
<text  x="357.74" y="1327.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.06%)</title><rect x="114.5" y="1605" width="0.7" height="15.0" fill="rgb(237,8,32)" rx="2" ry="2" />
<text  x="117.55" y="1615.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;compact_for_query&lt; (1 samples, 0.02%)</title><rect x="446.5" y="1525" width="0.2" height="15.0" fill="rgb(232,168,0)" rx="2" ry="2" />
<text  x="449.49" y="1535.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::vector (8 samples, 0.15%)</title><rect x="928.4" y="1557" width="1.8" height="15.0" fill="rgb(247,129,42)" rx="2" ry="2" />
<text  x="931.41" y="1567.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value, std::allocator&lt;cql3::raw_value&gt; &gt;::_M_range_initialize&lt;cql3::raw_value const*&gt; (6 samples, 0.11%)</title><rect x="843.3" y="1605" width="1.3" height="15.0" fill="rgb(210,201,0)" rx="2" ry="2" />
<text  x="846.28" y="1615.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.02%)</title><rect x="11.1" y="1717" width="0.2" height="15.0" fill="rgb(225,164,8)" rx="2" ry="2" />
<text  x="14.10" y="1727.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (1 samples, 0.02%)</title><rect x="1148.1" y="1557" width="0.2" height="15.0" fill="rgb(250,6,0)" rx="2" ry="2" />
<text  x="1151.09" y="1567.5" ></text>
</g>
<g >
<title>evictable_reader::do_fill_buffer (1 samples, 0.02%)</title><rect x="100.9" y="1301" width="0.2" height="15.0" fill="rgb(224,169,27)" rx="2" ry="2" />
<text  x="103.87" y="1311.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, seastar::lw_shared_ptr&lt;cql3::column_condition::raw&gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, seastar::lw_shared_ptr&lt;cql3::column_condition::raw&gt; &gt; &gt; &gt;::_Vector_base (1 samples, 0.02%)</title><rect x="59.8" y="1509" width="0.3" height="15.0" fill="rgb(252,165,26)" rx="2" ry="2" />
<text  x="62.85" y="1519.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_prepared (417 samples, 7.79%)</title><rect x="730.8" y="1589" width="92.0" height="15.0" fill="rgb(246,201,36)" rx="2" ry="2" />
<text  x="733.79" y="1599.5" >cql3::quer..</text>
</g>
<g >
<title>sstables::sstable::do_write_simple (1 samples, 0.02%)</title><rect x="17.5" y="1557" width="0.2" height="15.0" fill="rgb(211,69,44)" rx="2" ry="2" />
<text  x="20.50" y="1567.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (2 samples, 0.04%)</title><rect x="689.8" y="1589" width="0.4" height="15.0" fill="rgb(210,2,0)" rx="2" ry="2" />
<text  x="692.77" y="1599.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (2 samples, 0.04%)</title><rect x="630.4" y="1589" width="0.5" height="15.0" fill="rgb(249,52,7)" rx="2" ry="2" />
<text  x="633.44" y="1599.5" ></text>
</g>
<g >
<title>service::client_state::check_has_permission (152 samples, 2.84%)</title><rect x="771.2" y="1493" width="33.5" height="15.0" fill="rgb(223,135,18)" rx="2" ry="2" />
<text  x="774.16" y="1503.5" >se..</text>
</g>
<g >
<title>seastar::reactor::run_some_tasks (4,912 samples, 91.81%)</title><rect x="83.2" y="1669" width="1083.4" height="15.0" fill="rgb(221,146,30)" rx="2" ry="2" />
<text  x="86.23" y="1679.5" >seastar::reactor::run_some_tasks</text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (2 samples, 0.04%)</title><rect x="648.7" y="1637" width="0.5" height="15.0" fill="rgb(208,150,45)" rx="2" ry="2" />
<text  x="651.74" y="1647.5" ></text>
</g>
<g >
<title>free (4 samples, 0.07%)</title><rect x="431.5" y="1349" width="0.9" height="15.0" fill="rgb(231,98,9)" rx="2" ry="2" />
<text  x="434.49" y="1359.5" ></text>
</g>
<g >
<title>cql3::relation::to_restriction (3 samples, 0.06%)</title><rect x="69.6" y="1541" width="0.6" height="15.0" fill="rgb(208,122,26)" rx="2" ry="2" />
<text  x="72.55" y="1551.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_next (1 samples, 0.02%)</title><rect x="100.4" y="1253" width="0.3" height="15.0" fill="rgb(212,117,1)" rx="2" ry="2" />
<text  x="103.43" y="1263.5" ></text>
</g>
<g >
<title>mutation_partition::append_clustered_row (1 samples, 0.02%)</title><rect x="101.1" y="1525" width="0.2" height="15.0" fill="rgb(225,227,9)" rx="2" ry="2" />
<text  x="104.09" y="1535.5" ></text>
</g>
<g >
<title>std::_Bvector_base&lt;std::allocator&lt;bool&gt; &gt;::_M_deallocate (1 samples, 0.02%)</title><rect x="65.8" y="1573" width="0.2" height="15.0" fill="rgb(242,3,19)" rx="2" ry="2" />
<text  x="68.80" y="1583.5" ></text>
</g>
<g >
<title>db::block_for (1 samples, 0.02%)</title><rect x="1041.3" y="1493" width="0.3" height="15.0" fill="rgb(247,109,4)" rx="2" ry="2" />
<text  x="1044.34" y="1503.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit_slot&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::walking_visitor&lt;row::for_each_cell&lt;(anonymous namespace)::write_row_cells&lt;ser::deletable_row__cells&lt;bytes_ostream&gt; &gt; (6 samples, 0.11%)</title><rect x="1123.8" y="1269" width="1.4" height="15.0" fill="rgb(233,205,42)" rx="2" ry="2" />
<text  x="1126.83" y="1279.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::maybe_decay_reserve (1 samples, 0.02%)</title><rect x="500.3" y="1477" width="0.2" height="15.0" fill="rgb(234,205,35)" rx="2" ry="2" />
<text  x="503.31" y="1487.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mT__206 (1 samples, 0.02%)</title><rect x="31.8" y="1413" width="0.3" height="15.0" fill="rgb(254,90,5)" rx="2" ry="2" />
<text  x="34.84" y="1423.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="843.1" y="1605" width="0.2" height="15.0" fill="rgb(245,193,37)" rx="2" ry="2" />
<text  x="846.06" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt;::~_Variant_storage (1 samples, 0.02%)</title><rect x="855.0" y="1445" width="0.2" height="15.0" fill="rgb(240,134,2)" rx="2" ry="2" />
<text  x="857.97" y="1455.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_psrstate (1 samples, 0.02%)</title><rect x="40.2" y="1477" width="0.2" height="15.0" fill="rgb(252,151,11)" rx="2" ry="2" />
<text  x="43.22" y="1487.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="1102.2" y="1541" width="0.2" height="15.0" fill="rgb(223,153,34)" rx="2" ry="2" />
<text  x="1105.22" y="1551.5" ></text>
</g>
<g >
<title>service::storage_service::init_server (1 samples, 0.02%)</title><rect x="10.4" y="389" width="0.3" height="15.0" fill="rgb(254,57,12)" rx="2" ry="2" />
<text  x="13.44" y="399.5" ></text>
</g>
<g >
<title>query::querier_base::querier_base (486 samples, 9.08%)</title><rect x="448.9" y="1573" width="107.2" height="15.0" fill="rgb(250,71,18)" rx="2" ry="2" />
<text  x="451.92" y="1583.5" >query::querie..</text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (1 samples, 0.02%)</title><rect x="52.6" y="1413" width="0.2" height="15.0" fill="rgb(248,25,50)" rx="2" ry="2" />
<text  x="55.57" y="1423.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::construct&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (4 samples, 0.07%)</title><rect x="23.5" y="1413" width="0.8" height="15.0" fill="rgb(207,108,37)" rx="2" ry="2" />
<text  x="26.45" y="1423.5" ></text>
</g>
<g >
<title>write_fragmented&lt;managed_bytes_basic_view&lt; (10 samples, 0.19%)</title><rect x="888.1" y="1413" width="2.2" height="15.0" fill="rgb(246,60,31)" rx="2" ry="2" />
<text  x="891.05" y="1423.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::value (4 samples, 0.07%)</title><rect x="58.7" y="1461" width="0.9" height="15.0" fill="rgb(252,152,40)" rx="2" ry="2" />
<text  x="61.74" y="1471.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.02%)</title><rect x="11.5" y="1477" width="0.3" height="15.0" fill="rgb(254,62,16)" rx="2" ry="2" />
<text  x="14.54" y="1487.5" ></text>
</g>
<g >
<title>operator new (6 samples, 0.11%)</title><rect x="552.8" y="1477" width="1.3" height="15.0" fill="rgb(254,9,54)" rx="2" ry="2" />
<text  x="555.80" y="1487.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="589.2" y="1493" width="0.2" height="15.0" fill="rgb(235,208,14)" rx="2" ry="2" />
<text  x="592.19" y="1503.5" ></text>
</g>
<g >
<title>clustering_row::external_memory_usage (34 samples, 0.64%)</title><rect x="253.5" y="1317" width="7.5" height="15.0" fill="rgb(247,4,47)" rx="2" ry="2" />
<text  x="256.50" y="1327.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt;::_M_reset (1 samples, 0.02%)</title><rect x="584.1" y="1445" width="0.2" height="15.0" fill="rgb(223,108,3)" rx="2" ry="2" />
<text  x="587.12" y="1455.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (13 samples, 0.24%)</title><rect x="438.3" y="1461" width="2.9" height="15.0" fill="rgb(214,149,12)" rx="2" ry="2" />
<text  x="441.33" y="1471.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (2 samples, 0.04%)</title><rect x="274.9" y="1333" width="0.4" height="15.0" fill="rgb(216,52,44)" rx="2" ry="2" />
<text  x="277.89" y="1343.5" ></text>
</g>
<g >
<title>schema::column_at (3 samples, 0.06%)</title><rect x="252.0" y="1269" width="0.6" height="15.0" fill="rgb(239,180,0)" rx="2" ry="2" />
<text  x="254.96" y="1279.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.02%)</title><rect x="1025.5" y="1365" width="0.2" height="15.0" fill="rgb(244,125,46)" rx="2" ry="2" />
<text  x="1028.46" y="1375.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_map&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::at&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt; &gt; (20 samples, 0.37%)</title><rect x="756.6" y="1525" width="4.4" height="15.0" fill="rgb(233,156,47)" rx="2" ry="2" />
<text  x="759.60" y="1535.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_rehash (4 samples, 0.07%)</title><rect x="1147.7" y="1589" width="0.8" height="15.0" fill="rgb(205,158,0)" rx="2" ry="2" />
<text  x="1150.65" y="1599.5" ></text>
</g>
<g >
<title>managed_bytes::free_chain (16 samples, 0.30%)</title><rect x="427.7" y="1349" width="3.6" height="15.0" fill="rgb(212,112,39)" rx="2" ry="2" />
<text  x="430.74" y="1359.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="852.3" y="1509" width="0.2" height="15.0" fill="rgb(251,4,21)" rx="2" ry="2" />
<text  x="855.32" y="1519.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::followPush (1 samples, 0.02%)</title><rect x="40.0" y="1493" width="0.2" height="15.0" fill="rgb(225,204,6)" rx="2" ry="2" />
<text  x="43.00" y="1503.5" ></text>
</g>
<g >
<title>tracing::global_trace_state_ptr::get (1 samples, 0.02%)</title><rect x="1026.8" y="1413" width="0.2" height="15.0" fill="rgb(232,105,30)" rx="2" ry="2" />
<text  x="1029.79" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (1 samples, 0.02%)</title><rect x="880.1" y="1461" width="0.2" height="15.0" fill="rgb(207,192,42)" rx="2" ry="2" />
<text  x="883.11" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::~_Variant_storage (1 samples, 0.02%)</title><rect x="649.2" y="1477" width="0.2" height="15.0" fill="rgb(211,147,25)" rx="2" ry="2" />
<text  x="652.19" y="1487.5" ></text>
</g>
<g >
<title>std::operator+ (2 samples, 0.04%)</title><rect x="38.2" y="1333" width="0.5" height="15.0" fill="rgb(245,205,32)" rx="2" ry="2" />
<text  x="41.23" y="1343.5" ></text>
</g>
<g >
<title>mutation_reader_merger::~mutation_reader_merger (28 samples, 0.52%)</title><rect x="590.3" y="1525" width="6.2" height="15.0" fill="rgb(241,32,54)" rx="2" ry="2" />
<text  x="593.30" y="1535.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mE (1 samples, 0.02%)</title><rect x="28.3" y="1413" width="0.2" height="15.0" fill="rgb(215,168,1)" rx="2" ry="2" />
<text  x="31.31" y="1423.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (1 samples, 0.02%)</title><rect x="23.5" y="1349" width="0.2" height="15.0" fill="rgb(214,185,32)" rx="2" ry="2" />
<text  x="26.45" y="1359.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::list_service_level_statement, std::default_delete&lt;cql3::statements::list_service_level_statement&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::statements::list_service_level_statement&gt;, void&gt; (1 samples, 0.02%)</title><rect x="63.4" y="1525" width="0.2" height="15.0" fill="rgb(234,108,27)" rx="2" ry="2" />
<text  x="66.38" y="1535.5" ></text>
</g>
<g >
<title>seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;::swap (5 samples, 0.09%)</title><rect x="821.7" y="1573" width="1.1" height="15.0" fill="rgb(238,229,23)" rx="2" ry="2" />
<text  x="824.66" y="1583.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;::operator== (3 samples, 0.06%)</title><rect x="743.4" y="1445" width="0.6" height="15.0" fill="rgb(249,102,43)" rx="2" ry="2" />
<text  x="746.36" y="1455.5" ></text>
</g>
<g >
<title>partition_snapshot_flush_accounter::operator (1 samples, 0.02%)</title><rect x="79.7" y="1493" width="0.2" height="15.0" fill="rgb(235,19,4)" rx="2" ry="2" />
<text  x="82.70" y="1503.5" ></text>
</g>
<g >
<title>std::variant&lt;query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::operator=&lt;query::noop_hasher&gt; (1 samples, 0.02%)</title><rect x="612.1" y="1557" width="0.3" height="15.0" fill="rgb(213,153,15)" rx="2" ry="2" />
<text  x="615.13" y="1567.5" ></text>
</g>
<g >
<title>query::querier_base::~querier_base (38 samples, 0.71%)</title><rect x="597.8" y="1589" width="8.4" height="15.0" fill="rgb(248,223,30)" rx="2" ry="2" />
<text  x="600.79" y="1599.5" ></text>
</g>
<g >
<title>seastar::deferred_action&lt;table::query (4 samples, 0.07%)</title><rect x="613.0" y="1589" width="0.9" height="15.0" fill="rgb(238,108,54)" rx="2" ry="2" />
<text  x="616.01" y="1599.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_singular (137 samples, 2.56%)</title><rect x="1133.5" y="1653" width="30.3" height="15.0" fill="rgb(210,122,54)" rx="2" ry="2" />
<text  x="1136.54" y="1663.5" >se..</text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="1541" width="0.3" height="15.0" fill="rgb(228,160,7)" rx="2" ry="2" />
<text  x="13.44" y="1551.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="472.1" y="1445" width="0.2" height="15.0" fill="rgb(236,227,52)" rx="2" ry="2" />
<text  x="475.07" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (2 samples, 0.04%)</title><rect x="891.1" y="1429" width="0.5" height="15.0" fill="rgb(244,94,9)" rx="2" ry="2" />
<text  x="894.14" y="1439.5" ></text>
</g>
<g >
<title>[libpthread-2.33.so] (1 samples, 0.02%)</title><rect x="18.2" y="1653" width="0.2" height="15.0" fill="rgb(219,160,31)" rx="2" ry="2" />
<text  x="21.16" y="1663.5" ></text>
</g>
<g >
<title>seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::expand (1 samples, 0.02%)</title><rect x="216.0" y="1381" width="0.2" height="15.0" fill="rgb(226,197,35)" rx="2" ry="2" />
<text  x="219.00" y="1391.5" ></text>
</g>
<g >
<title>operator delete (5 samples, 0.09%)</title><rect x="797.8" y="1397" width="1.1" height="15.0" fill="rgb(226,226,2)" rx="2" ry="2" />
<text  x="800.84" y="1407.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.02%)</title><rect x="38.9" y="1381" width="0.2" height="15.0" fill="rgb(209,87,29)" rx="2" ry="2" />
<text  x="41.89" y="1391.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="613" width="0.3" height="15.0" fill="rgb(244,142,16)" rx="2" ry="2" />
<text  x="13.44" y="623.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="1045" width="0.3" height="15.0" fill="rgb(235,26,24)" rx="2" ry="2" />
<text  x="13.44" y="1055.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::abstract_read_executor&gt;::~shared_ptr (2 samples, 0.04%)</title><rect x="963.9" y="1509" width="0.5" height="15.0" fill="rgb(220,176,48)" rx="2" ry="2" />
<text  x="966.93" y="1519.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate_to_raw_view (97 samples, 1.81%)</title><rect x="875.9" y="1509" width="21.4" height="15.0" fill="rgb(246,50,42)" rx="2" ry="2" />
<text  x="878.92" y="1519.5" >c..</text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.02%)</title><rect x="426.4" y="1381" width="0.2" height="15.0" fill="rgb(226,64,20)" rx="2" ry="2" />
<text  x="429.42" y="1391.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::invoke&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (53 samples, 0.99%)</title><rect x="315.3" y="1493" width="11.6" height="15.0" fill="rgb(207,112,30)" rx="2" ry="2" />
<text  x="318.26" y="1503.5" ></text>
</g>
<g >
<title>std::make_unique&lt;merging_reader&lt;mutation_reader_merger&gt;, seastar::lw_shared_ptr&lt;schema const&gt;&amp;, reader_permit, seastar::bool_class&lt;streamed_mutation::forwarding_tag&gt;&amp;, mutation_reader_merger&gt; (17 samples, 0.32%)</title><rect x="468.5" y="1461" width="3.8" height="15.0" fill="rgb(209,24,38)" rx="2" ry="2" />
<text  x="471.55" y="1471.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (2 samples, 0.04%)</title><rect x="311.7" y="1493" width="0.5" height="15.0" fill="rgb(225,160,27)" rx="2" ry="2" />
<text  x="314.73" y="1503.5" ></text>
</g>
<g >
<title>std::hash&lt;std::basic_string_view&lt;signed char, std::char_traits&lt;signed char&gt; &gt; &gt;::operator (9 samples, 0.17%)</title><rect x="745.1" y="1429" width="2.0" height="15.0" fill="rgb(224,144,7)" rx="2" ry="2" />
<text  x="748.13" y="1439.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_rehash_aux (1 samples, 0.02%)</title><rect x="78.8" y="1237" width="0.2" height="15.0" fill="rgb(205,115,10)" rx="2" ry="2" />
<text  x="81.81" y="1247.5" ></text>
</g>
<g >
<title>std::hash&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::operator (1 samples, 0.02%)</title><rect x="759.5" y="1493" width="0.2" height="15.0" fill="rgb(222,58,25)" rx="2" ry="2" />
<text  x="762.47" y="1503.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.02%)</title><rect x="980.2" y="1429" width="0.3" height="15.0" fill="rgb(221,190,51)" rx="2" ry="2" />
<text  x="983.25" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, flat_mutation_reader, reader_concurrency_semaphore::inactive_read_handle&gt;::~_Variant_storage (1 samples, 0.02%)</title><rect x="598.5" y="1573" width="0.2" height="15.0" fill="rgb(226,39,20)" rx="2" ry="2" />
<text  x="601.46" y="1583.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;seastar::shared_ptr&lt;cql3::relation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::relation&gt; &gt; &gt;::_Vector_impl_data::_M_swap_data (1 samples, 0.02%)</title><rect x="61.4" y="1477" width="0.2" height="15.0" fill="rgb(215,206,45)" rx="2" ry="2" />
<text  x="64.39" y="1487.5" ></text>
</g>
<g >
<title>logalloc::basic_region_impl::set_reclaiming_enabled (2 samples, 0.04%)</title><rect x="537.6" y="1477" width="0.4" height="15.0" fill="rgb(239,31,36)" rx="2" ry="2" />
<text  x="540.58" y="1487.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (13 samples, 0.24%)</title><rect x="543.3" y="1461" width="2.9" height="15.0" fill="rgb(252,29,36)" rx="2" ry="2" />
<text  x="546.32" y="1471.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.02%)</title><rect x="586.8" y="1477" width="0.2" height="15.0" fill="rgb(206,122,46)" rx="2" ry="2" />
<text  x="589.77" y="1487.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;bool&gt;::move_it (1 samples, 0.02%)</title><rect x="75.1" y="1557" width="0.2" height="15.0" fill="rgb(208,127,46)" rx="2" ry="2" />
<text  x="78.07" y="1567.5" ></text>
</g>
<g >
<title>cql3::statements::update_statement::execute_operations_for_key (10 samples, 0.19%)</title><rect x="853.2" y="1493" width="2.2" height="15.0" fill="rgb(244,89,10)" rx="2" ry="2" />
<text  x="856.20" y="1503.5" ></text>
</g>
<g >
<title>schema_registry::get (25 samples, 0.47%)</title><rect x="956.4" y="1509" width="5.5" height="15.0" fill="rgb(239,146,1)" rx="2" ry="2" />
<text  x="959.43" y="1519.5" ></text>
</g>
<g >
<title>ser::set_size&lt;bytes_ostream, clustering_key_prefix&gt; (1 samples, 0.02%)</title><rect x="1125.6" y="1253" width="0.2" height="15.0" fill="rgb(240,57,27)" rx="2" ry="2" />
<text  x="1128.60" y="1263.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="894.2" y="1445" width="0.2" height="15.0" fill="rgb(247,85,47)" rx="2" ry="2" />
<text  x="897.23" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_next_bkt (5 samples, 0.09%)</title><rect x="1149.6" y="1605" width="1.1" height="15.0" fill="rgb(213,172,52)" rx="2" ry="2" />
<text  x="1152.64" y="1615.5" ></text>
</g>
<g >
<title>std::__lower_bound&lt;__gnu_cxx::__normal_iterator&lt;dht::token const*, std::vector&lt;dht::token, std::allocator&lt;dht::token&gt; &gt; &gt;, dht::token, __gnu_cxx::__ops::_Iter_less_val&gt; (1 samples, 0.02%)</title><rect x="1126.9" y="1285" width="0.2" height="15.0" fill="rgb(225,214,45)" rx="2" ry="2" />
<text  x="1129.92" y="1295.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt;::allocate (2 samples, 0.04%)</title><rect x="153.1" y="1557" width="0.5" height="15.0" fill="rgb(234,31,41)" rx="2" ry="2" />
<text  x="156.14" y="1567.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_one (33 samples, 0.62%)</title><rect x="185.8" y="1413" width="7.3" height="15.0" fill="rgb(227,164,6)" rx="2" ry="2" />
<text  x="188.79" y="1423.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (4 samples, 0.07%)</title><rect x="764.8" y="1493" width="0.8" height="15.0" fill="rgb(235,1,18)" rx="2" ry="2" />
<text  x="767.76" y="1503.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;signed char, std::char_traits&lt;signed char&gt; &gt;::substr (2 samples, 0.04%)</title><rect x="908.1" y="1477" width="0.5" height="15.0" fill="rgb(240,61,53)" rx="2" ry="2" />
<text  x="911.12" y="1487.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="528.3" y="1429" width="0.2" height="15.0" fill="rgb(244,220,40)" rx="2" ry="2" />
<text  x="531.32" y="1439.5" ></text>
</g>
<g >
<title>flat_mutation_reader::peek (736 samples, 13.76%)</title><rect x="167.5" y="1557" width="162.3" height="15.0" fill="rgb(226,40,21)" rx="2" ry="2" />
<text  x="170.48" y="1567.5" >flat_mutation_reader..</text>
</g>
<g >
<title>nonwrapping_interval&lt;clustering_key_prefix&gt;::nonwrapping_interval (16 samples, 0.30%)</title><rect x="1082.6" y="1525" width="3.5" height="15.0" fill="rgb(213,16,1)" rx="2" ry="2" />
<text  x="1085.59" y="1535.5" ></text>
</g>
<g >
<title>service::client_state::ensure_has_permission (156 samples, 2.92%)</title><rect x="770.5" y="1509" width="34.4" height="15.0" fill="rgb(234,183,41)" rx="2" ry="2" />
<text  x="773.49" y="1519.5" >se..</text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_pausable_in_thread&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;sstables::sstable_writer&gt; &gt;, flat_mutation_reader::no_filter&gt; (13 samples, 0.24%)</title><rect x="79.5" y="1653" width="2.8" height="15.0" fill="rgb(226,62,7)" rx="2" ry="2" />
<text  x="82.48" y="1663.5" ></text>
</g>
<g >
<title>std::optional&lt;query::querier&lt; (3 samples, 0.06%)</title><rect x="136.2" y="1605" width="0.6" height="15.0" fill="rgb(229,179,11)" rx="2" ry="2" />
<text  x="139.16" y="1615.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (1 samples, 0.02%)</title><rect x="733.9" y="1573" width="0.2" height="15.0" fill="rgb(210,86,35)" rx="2" ry="2" />
<text  x="736.88" y="1583.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.09%)</title><rect x="1024.6" y="1397" width="1.1" height="15.0" fill="rgb(245,104,49)" rx="2" ry="2" />
<text  x="1027.58" y="1407.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.02%)</title><rect x="58.3" y="1349" width="0.2" height="15.0" fill="rgb(226,17,18)" rx="2" ry="2" />
<text  x="61.30" y="1359.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (1 samples, 0.02%)</title><rect x="797.4" y="1365" width="0.2" height="15.0" fill="rgb(211,66,40)" rx="2" ry="2" />
<text  x="800.40" y="1375.5" ></text>
</g>
<g >
<title>partition_snapshot_row_cursor::ensure_entry_if_complete (1 samples, 0.02%)</title><rect x="11.1" y="1685" width="0.2" height="15.0" fill="rgb(243,50,33)" rx="2" ry="2" />
<text  x="14.10" y="1695.5" ></text>
</g>
<g >
<title>database::find_uuid (21 samples, 0.39%)</title><rect x="811.3" y="1509" width="4.6" height="15.0" fill="rgb(235,209,8)" rx="2" ry="2" />
<text  x="814.30" y="1519.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_construct&lt;interval_bound&lt;dht::ring_position&gt; const&amp;&gt; (2 samples, 0.04%)</title><rect x="1022.6" y="1429" width="0.4" height="15.0" fill="rgb(242,179,34)" rx="2" ry="2" />
<text  x="1025.59" y="1439.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::entry::entry (15 samples, 0.28%)</title><rect x="1007.2" y="1317" width="3.3" height="15.0" fill="rgb(241,193,28)" rx="2" ry="2" />
<text  x="1010.16" y="1327.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;dht::decorated_key&gt;::_Optional_payload_base (1 samples, 0.02%)</title><rect x="336.7" y="1429" width="0.2" height="15.0" fill="rgb(250,136,46)" rx="2" ry="2" />
<text  x="339.65" y="1439.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.02%)</title><rect x="43.5" y="1333" width="0.2" height="15.0" fill="rgb(222,197,14)" rx="2" ry="2" />
<text  x="46.53" y="1343.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (2 samples, 0.04%)</title><rect x="45.3" y="1397" width="0.4" height="15.0" fill="rgb(236,148,51)" rx="2" ry="2" />
<text  x="48.29" y="1407.5" ></text>
</g>
<g >
<title>dht::shard_of (3 samples, 0.06%)</title><rect x="982.2" y="1445" width="0.7" height="15.0" fill="rgb(247,177,0)" rx="2" ry="2" />
<text  x="985.23" y="1455.5" ></text>
</g>
<g >
<title>std::make_unique&lt;empty_flat_reader, seastar::lw_shared_ptr&lt;schema const&gt;, reader_permit&gt; (1 samples, 0.02%)</title><rect x="550.4" y="1445" width="0.2" height="15.0" fill="rgb(211,67,26)" rx="2" ry="2" />
<text  x="553.37" y="1455.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_Optional_payload_base (1 samples, 0.02%)</title><rect x="622.9" y="1573" width="0.3" height="15.0" fill="rgb(229,79,0)" rx="2" ry="2" />
<text  x="625.94" y="1583.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="1157" width="0.3" height="15.0" fill="rgb(237,72,27)" rx="2" ry="2" />
<text  x="13.44" y="1167.5" ></text>
</g>
<g >
<title>query::querier_base::querier_base (2 samples, 0.04%)</title><rect x="629.6" y="1557" width="0.4" height="15.0" fill="rgb(247,163,23)" rx="2" ry="2" />
<text  x="632.56" y="1567.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate (58 samples, 1.08%)</title><rect x="880.6" y="1477" width="12.7" height="15.0" fill="rgb(227,214,0)" rx="2" ry="2" />
<text  x="883.55" y="1487.5" ></text>
</g>
<g >
<title>seastar::do_until&lt;scanning_reader::fill_buffer (1 samples, 0.02%)</title><rect x="100.4" y="1173" width="0.3" height="15.0" fill="rgb(254,89,45)" rx="2" ry="2" />
<text  x="103.43" y="1183.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;column_definition const*, std::pair&lt;column_definition const* const, seastar::shared_ptr&lt;cql3::restrictions::single_column_restriction&gt; &gt;, std::_Select1st&lt;std::pair&lt;column_definition const* const, seastar::shared_ptr&lt;cql3::restrictions::single_column_restriction&gt; &gt; &gt;, cql3::restrictions::single_column_restrictions::column_definition_comparator, std::allocator&lt;std::pair&lt;column_definition const* const, seastar::shared_ptr&lt;cql3::restrictions::single_column_restriction&gt; &gt; &gt; &gt;::_M_erase (2 samples, 0.04%)</title><rect x="649.4" y="1573" width="0.4" height="15.0" fill="rgb(218,79,36)" rx="2" ry="2" />
<text  x="652.41" y="1583.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt;  (1 samples, 0.02%)</title><rect x="11.1" y="1701" width="0.2" height="15.0" fill="rgb(223,140,11)" rx="2" ry="2" />
<text  x="14.10" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;11ul, cql3::expr::untyped_constant&gt; (2 samples, 0.04%)</title><rect x="53.7" y="1317" width="0.4" height="15.0" fill="rgb(230,95,2)" rx="2" ry="2" />
<text  x="56.67" y="1327.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::remove_if&lt;row::compact_and_expire (80 samples, 1.50%)</title><rect x="401.1" y="1349" width="17.6" height="15.0" fill="rgb(205,138,39)" rx="2" ry="2" />
<text  x="404.05" y="1359.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (3 samples, 0.06%)</title><rect x="364.0" y="1333" width="0.7" height="15.0" fill="rgb(214,39,54)" rx="2" ry="2" />
<text  x="367.00" y="1343.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_create_nodes (6 samples, 0.11%)</title><rect x="560.7" y="1509" width="1.4" height="15.0" fill="rgb(213,82,31)" rx="2" ry="2" />
<text  x="563.74" y="1519.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.02%)</title><rect x="22.4" y="1509" width="0.2" height="15.0" fill="rgb(218,108,22)" rx="2" ry="2" />
<text  x="25.35" y="1519.5" ></text>
</g>
<g >
<title>std::operator+ (2 samples, 0.04%)</title><rect x="51.5" y="1285" width="0.4" height="15.0" fill="rgb(219,223,3)" rx="2" ry="2" />
<text  x="54.47" y="1295.5" ></text>
</g>
<g >
<title>make_stable_flattened_mutations_consumer&lt;compact_for_query&lt; (10 samples, 0.19%)</title><rect x="442.3" y="1525" width="2.2" height="15.0" fill="rgb(226,213,44)" rx="2" ry="2" />
<text  x="445.30" y="1535.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (3 samples, 0.06%)</title><rect x="806.4" y="1429" width="0.7" height="15.0" fill="rgb(230,215,34)" rx="2" ry="2" />
<text  x="809.44" y="1439.5" ></text>
</g>
<g >
<title>seastar::semaphore_units&lt;seastar::semaphore_default_exception_factory, std::chrono::_V2::steady_clock&gt;::return_all (1 samples, 0.02%)</title><rect x="675.2" y="1605" width="0.2" height="15.0" fill="rgb(211,166,36)" rx="2" ry="2" />
<text  x="678.21" y="1615.5" ></text>
</g>
<g >
<title>std::__apply_impl&lt;seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (44 samples, 0.82%)</title><rect x="1118.3" y="1621" width="9.7" height="15.0" fill="rgb(224,181,32)" rx="2" ry="2" />
<text  x="1121.32" y="1631.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::impl (1 samples, 0.02%)</title><rect x="469.2" y="1429" width="0.2" height="15.0" fill="rgb(246,221,33)" rx="2" ry="2" />
<text  x="472.21" y="1439.5" ></text>
</g>
<g >
<title>partition_snapshot::partition_tombstone (5 samples, 0.09%)</title><rect x="525.0" y="1381" width="1.1" height="15.0" fill="rgb(206,218,24)" rx="2" ry="2" />
<text  x="528.01" y="1391.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (4 samples, 0.07%)</title><rect x="213.6" y="1333" width="0.9" height="15.0" fill="rgb(230,99,40)" rx="2" ry="2" />
<text  x="216.58" y="1343.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::query_state&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="825.6" y="1589" width="0.3" height="15.0" fill="rgb(208,94,6)" rx="2" ry="2" />
<text  x="828.63" y="1599.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::signal (1 samples, 0.02%)</title><rect x="423.1" y="1381" width="0.2" height="15.0" fill="rgb(237,209,22)" rx="2" ry="2" />
<text  x="426.11" y="1391.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="1173" width="0.3" height="15.0" fill="rgb(239,191,49)" rx="2" ry="2" />
<text  x="13.44" y="1183.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="1301" width="0.3" height="15.0" fill="rgb(248,159,5)" rx="2" ry="2" />
<text  x="13.44" y="1311.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate_to_raw_view (3 samples, 0.06%)</title><rect x="849.9" y="1461" width="0.7" height="15.0" fill="rgb(217,137,16)" rx="2" ry="2" />
<text  x="852.90" y="1471.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_type (1 samples, 0.02%)</title><rect x="50.4" y="1429" width="0.2" height="15.0" fill="rgb(223,187,11)" rx="2" ry="2" />
<text  x="53.36" y="1439.5" ></text>
</g>
<g >
<title>cql3::restrictions::clustering_key_restrictions::needs_filtering (2 samples, 0.04%)</title><rect x="871.5" y="1573" width="0.5" height="15.0" fill="rgb(248,204,47)" rx="2" ry="2" />
<text  x="874.51" y="1583.5" ></text>
</g>
<g >
<title>distributed_loader::init_system_keyspace (1 samples, 0.02%)</title><rect x="17.1" y="1701" width="0.2" height="15.0" fill="rgb(253,224,3)" rx="2" ry="2" />
<text  x="20.06" y="1711.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (284 samples, 5.31%)</title><rect x="15.5" y="1733" width="62.7" height="15.0" fill="rgb(209,85,26)" rx="2" ry="2" />
<text  x="18.51" y="1743.5" >seasta..</text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (1 samples, 0.02%)</title><rect x="1161.5" y="1589" width="0.3" height="15.0" fill="rgb(232,161,51)" rx="2" ry="2" />
<text  x="1164.55" y="1599.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::execute (9 samples, 0.17%)</title><rect x="750.0" y="1557" width="2.0" height="15.0" fill="rgb(235,93,15)" rx="2" ry="2" />
<text  x="752.98" y="1567.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::query_options, std::default_delete&lt;cql3::query_options&gt; &gt;::~unique_ptr (21 samples, 0.39%)</title><rect x="675.4" y="1637" width="4.7" height="15.0" fill="rgb(235,82,2)" rx="2" ry="2" />
<text  x="678.43" y="1647.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="416.1" y="1317" width="0.2" height="15.0" fill="rgb(232,171,51)" rx="2" ry="2" />
<text  x="419.05" y="1327.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (223 samples, 4.17%)</title><rect x="220.9" y="1349" width="49.1" height="15.0" fill="rgb(232,35,41)" rx="2" ry="2" />
<text  x="223.86" y="1359.5" >part..</text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (2 samples, 0.04%)</title><rect x="604.4" y="1525" width="0.5" height="15.0" fill="rgb(220,153,46)" rx="2" ry="2" />
<text  x="607.41" y="1535.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_28has_slice_or_needs_filteringERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES28_S2B_ (3 samples, 0.06%)</title><rect x="933.5" y="1541" width="0.6" height="15.0" fill="rgb(245,136,6)" rx="2" ry="2" />
<text  x="936.49" y="1551.5" ></text>
</g>
<g >
<title>boost::intrusive::bstbase&lt;boost::intrusive::mhtraits&lt;range_tombstone_entry, boost::intrusive::set_member_hook&lt;boost::intrusive::link_mode&lt; (6 samples, 0.11%)</title><rect x="572.7" y="1461" width="1.3" height="15.0" fill="rgb(219,5,36)" rx="2" ry="2" />
<text  x="575.65" y="1471.5" ></text>
</g>
<g >
<title>mutation_partition_view::do_accept&lt;partition_builder&gt; (1 samples, 0.02%)</title><rect x="102.4" y="1461" width="0.2" height="15.0" fill="rgb(251,168,29)" rx="2" ry="2" />
<text  x="105.41" y="1471.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;signed char, std::char_traits&lt;signed char&gt; &gt;::substr (2 samples, 0.04%)</title><rect x="905.7" y="1493" width="0.4" height="15.0" fill="rgb(223,157,3)" rx="2" ry="2" />
<text  x="908.70" y="1503.5" ></text>
</g>
<g >
<title>utils::fb_utilities::get_broadcast_address (3 samples, 0.06%)</title><rect x="709.4" y="1589" width="0.7" height="15.0" fill="rgb(245,212,22)" rx="2" ry="2" />
<text  x="712.40" y="1599.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (4 samples, 0.07%)</title><rect x="274.5" y="1349" width="0.8" height="15.0" fill="rgb(229,77,31)" rx="2" ry="2" />
<text  x="277.45" y="1359.5" ></text>
</g>
<g >
<title>std::__optional_hash_call_base&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, true&gt;::operator (3 samples, 0.06%)</title><rect x="806.4" y="1445" width="0.7" height="15.0" fill="rgb(234,131,42)" rx="2" ry="2" />
<text  x="809.44" y="1455.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::get_local_service (3 samples, 0.06%)</title><rect x="1020.8" y="1413" width="0.7" height="15.0" fill="rgb(210,166,40)" rx="2" ry="2" />
<text  x="1023.83" y="1423.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.02%)</title><rect x="79.0" y="1573" width="0.3" height="15.0" fill="rgb(244,161,54)" rx="2" ry="2" />
<text  x="82.04" y="1583.5" ></text>
</g>
<g >
<title>dht::tri_compare (6 samples, 0.11%)</title><rect x="489.9" y="1413" width="1.4" height="15.0" fill="rgb(244,69,0)" rx="2" ry="2" />
<text  x="492.94" y="1423.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (1 samples, 0.02%)</title><rect x="100.9" y="997" width="0.2" height="15.0" fill="rgb(229,149,33)" rx="2" ry="2" />
<text  x="103.87" y="1007.5" ></text>
</g>
<g >
<title>service::abstract_write_response_handler::signal (1 samples, 0.02%)</title><rect x="712.7" y="1605" width="0.2" height="15.0" fill="rgb(254,143,48)" rx="2" ry="2" />
<text  x="715.71" y="1615.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;::_Tuple_impl&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const&amp;, auth::resource, void&gt; (6 samples, 0.11%)</title><rect x="764.3" y="1509" width="1.3" height="15.0" fill="rgb(239,129,28)" rx="2" ry="2" />
<text  x="767.32" y="1519.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::digest_read_result&gt;::clear (1 samples, 0.02%)</title><rect x="693.3" y="1637" width="0.2" height="15.0" fill="rgb(222,190,14)" rx="2" ry="2" />
<text  x="696.30" y="1647.5" ></text>
</g>
<g >
<title>sstables::mc::writer::write_row_body (3 samples, 0.06%)</title><rect x="81.2" y="1557" width="0.7" height="15.0" fill="rgb(208,108,8)" rx="2" ry="2" />
<text  x="84.24" y="1567.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_M_reset (2 samples, 0.04%)</title><rect x="605.5" y="1525" width="0.5" height="15.0" fill="rgb(233,65,32)" rx="2" ry="2" />
<text  x="608.51" y="1535.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (2 samples, 0.04%)</title><rect x="529.2" y="1445" width="0.4" height="15.0" fill="rgb(208,151,7)" rx="2" ry="2" />
<text  x="532.20" y="1455.5" ></text>
</g>
<g >
<title>std::optional&lt;position_in_partition&gt;::operator=&lt;position_in_partition&gt; (2 samples, 0.04%)</title><rect x="280.6" y="1397" width="0.5" height="15.0" fill="rgb(250,40,20)" rx="2" ry="2" />
<text  x="283.63" y="1407.5" ></text>
</g>
<g >
<title>compaction_manager::submit (1 samples, 0.02%)</title><rect x="1130.0" y="1637" width="0.2" height="15.0" fill="rgb(239,193,14)" rx="2" ry="2" />
<text  x="1133.01" y="1647.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (2 samples, 0.04%)</title><rect x="44.4" y="1269" width="0.4" height="15.0" fill="rgb(254,225,47)" rx="2" ry="2" />
<text  x="47.41" y="1279.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;db::view::view_update_generator&gt;::operator= (1 samples, 0.02%)</title><rect x="692.2" y="1509" width="0.2" height="15.0" fill="rgb(207,41,23)" rx="2" ry="2" />
<text  x="695.19" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_nodes (9 samples, 0.17%)</title><rect x="669.9" y="1605" width="2.0" height="15.0" fill="rgb(208,29,26)" rx="2" ry="2" />
<text  x="672.92" y="1615.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (2 samples, 0.04%)</title><rect x="44.4" y="1333" width="0.4" height="15.0" fill="rgb(252,40,47)" rx="2" ry="2" />
<text  x="47.41" y="1343.5" ></text>
</g>
<g >
<title>sstables::compaction::setup&lt;noop_compacted_fragments_consumer&gt; (1 samples, 0.02%)</title><rect x="17.5" y="1717" width="0.2" height="15.0" fill="rgb(238,209,48)" rx="2" ry="2" />
<text  x="20.50" y="1727.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_M_set_node (1 samples, 0.02%)</title><rect x="44.8" y="1285" width="0.3" height="15.0" fill="rgb(236,224,35)" rx="2" ry="2" />
<text  x="47.85" y="1295.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (1 samples, 0.02%)</title><rect x="848.8" y="1477" width="0.2" height="15.0" fill="rgb(234,153,15)" rx="2" ry="2" />
<text  x="851.79" y="1487.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;flat_mutation_reader  (1 samples, 0.02%)</title><rect x="1165.3" y="1573" width="0.2" height="15.0" fill="rgb(211,156,43)" rx="2" ry="2" />
<text  x="1168.30" y="1583.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (3 samples, 0.06%)</title><rect x="924.0" y="1557" width="0.7" height="15.0" fill="rgb(243,205,31)" rx="2" ry="2" />
<text  x="927.00" y="1567.5" ></text>
</g>
<g >
<title>service::client_state::ensure_has_permission (9 samples, 0.17%)</title><rect x="75.1" y="1573" width="2.0" height="15.0" fill="rgb(240,142,17)" rx="2" ry="2" />
<text  x="78.07" y="1583.5" ></text>
</g>
<g >
<title>row::row (1 samples, 0.02%)</title><rect x="100.4" y="933" width="0.3" height="15.0" fill="rgb(219,131,20)" rx="2" ry="2" />
<text  x="103.43" y="943.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::execute_without_condition (2 samples, 0.04%)</title><rect x="849.5" y="1557" width="0.4" height="15.0" fill="rgb(237,35,16)" rx="2" ry="2" />
<text  x="852.45" y="1567.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;, seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::finally_body&lt;seastar::smp::submit_to&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (26 samples, 0.49%)</title><rect x="639.3" y="1653" width="5.7" height="15.0" fill="rgb(230,193,19)" rx="2" ry="2" />
<text  x="642.26" y="1663.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (1 samples, 0.02%)</title><rect x="850.3" y="1445" width="0.3" height="15.0" fill="rgb(228,90,42)" rx="2" ry="2" />
<text  x="853.34" y="1455.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="461.9" y="1397" width="0.2" height="15.0" fill="rgb(245,153,54)" rx="2" ry="2" />
<text  x="464.93" y="1407.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="58.3" y="1365" width="0.2" height="15.0" fill="rgb(207,183,16)" rx="2" ry="2" />
<text  x="61.30" y="1375.5" ></text>
</g>
<g >
<title>std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;auth::role_or_anonymous&gt;, seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (1 samples, 0.02%)</title><rect x="801.2" y="1445" width="0.2" height="15.0" fill="rgb(246,209,15)" rx="2" ry="2" />
<text  x="804.15" y="1455.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::_S_destroy&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;, antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="43.7" y="1429" width="0.3" height="15.0" fill="rgb(224,188,19)" rx="2" ry="2" />
<text  x="46.75" y="1439.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (4 samples, 0.07%)</title><rect x="907.7" y="1493" width="0.9" height="15.0" fill="rgb(215,35,5)" rx="2" ry="2" />
<text  x="910.68" y="1503.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::with_permit (5 samples, 0.09%)</title><rect x="1018.8" y="1413" width="1.1" height="15.0" fill="rgb(250,166,22)" rx="2" ry="2" />
<text  x="1021.84" y="1423.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::__uniq_ptr_impl (1 samples, 0.02%)</title><rect x="53.5" y="1365" width="0.2" height="15.0" fill="rgb(205,82,22)" rx="2" ry="2" />
<text  x="56.45" y="1375.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::allocate (5 samples, 0.09%)</title><rect x="208.3" y="1349" width="1.1" height="15.0" fill="rgb(253,62,28)" rx="2" ry="2" />
<text  x="211.28" y="1359.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::forward_to (6 samples, 0.11%)</title><rect x="1128.0" y="1637" width="1.3" height="15.0" fill="rgb(213,224,46)" rx="2" ry="2" />
<text  x="1131.02" y="1647.5" ></text>
</g>
<g >
<title>schema::column_at (3 samples, 0.06%)</title><rect x="259.2" y="1253" width="0.7" height="15.0" fill="rgb(238,120,30)" rx="2" ry="2" />
<text  x="262.23" y="1263.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::value_ptr&gt; &gt;::invoke&lt;utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (14 samples, 0.26%)</title><rect x="737.2" y="1509" width="3.1" height="15.0" fill="rgb(217,184,7)" rx="2" ry="2" />
<text  x="740.19" y="1519.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.04%)</title><rect x="90.3" y="1605" width="0.4" height="15.0" fill="rgb(221,76,10)" rx="2" ry="2" />
<text  x="93.28" y="1615.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (62 samples, 1.16%)</title><rect x="23.0" y="1493" width="13.7" height="15.0" fill="rgb(220,156,38)" rx="2" ry="2" />
<text  x="26.01" y="1503.5" ></text>
</g>
<g >
<title>seastar::app_template::run (4,921 samples, 91.98%)</title><rect x="82.6" y="1733" width="1085.3" height="15.0" fill="rgb(224,22,40)" rx="2" ry="2" />
<text  x="85.56" y="1743.5" >seastar::app_template::run</text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;void&gt;, service::storage_proxy*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt;, db::consistency_level, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, tracing::trace_state_ptr, service_permit, bool, seastar::lw_shared_ptr&lt;cdc::operation_result_tracker&gt; &gt;::make_stage_for_group (44 samples, 0.82%)</title><rect x="1118.3" y="1557" width="9.7" height="15.0" fill="rgb(230,18,9)" rx="2" ry="2" />
<text  x="1121.32" y="1567.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.02%)</title><rect x="55.7" y="1221" width="0.2" height="15.0" fill="rgb(233,152,49)" rx="2" ry="2" />
<text  x="58.66" y="1231.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::digest_read_result&gt;::get0 (1 samples, 0.02%)</title><rect x="695.3" y="1605" width="0.2" height="15.0" fill="rgb(210,59,43)" rx="2" ry="2" />
<text  x="698.28" y="1615.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::_M_range_initialize&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; const*&gt; (7 samples, 0.13%)</title><rect x="1087.7" y="1525" width="1.5" height="15.0" fill="rgb(219,32,18)" rx="2" ry="2" />
<text  x="1090.66" y="1535.5" ></text>
</g>
<g >
<title>ser::serializer&lt;clustering_key_prefix&gt;::read&lt;seastar::simple_memory_input_stream&gt; (1 samples, 0.02%)</title><rect x="1115.2" y="1365" width="0.3" height="15.0" fill="rgb(231,166,40)" rx="2" ry="2" />
<text  x="1118.23" y="1375.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.02%)</title><rect x="38.7" y="1317" width="0.2" height="15.0" fill="rgb(215,210,11)" rx="2" ry="2" />
<text  x="41.67" y="1327.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (2 samples, 0.04%)</title><rect x="530.3" y="1477" width="0.4" height="15.0" fill="rgb(254,228,32)" rx="2" ry="2" />
<text  x="533.30" y="1487.5" ></text>
</g>
<g >
<title>posix_memalign (1 samples, 0.02%)</title><rect x="853.9" y="1365" width="0.2" height="15.0" fill="rgb(246,58,13)" rx="2" ry="2" />
<text  x="856.87" y="1375.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.02%)</title><rect x="244.7" y="1173" width="0.2" height="15.0" fill="rgb(205,188,35)" rx="2" ry="2" />
<text  x="247.68" y="1183.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_S_construct&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (1 samples, 0.02%)</title><rect x="23.2" y="1413" width="0.3" height="15.0" fill="rgb(229,129,36)" rx="2" ry="2" />
<text  x="26.23" y="1423.5" ></text>
</g>
<g >
<title>std::__optional_hash_call_base&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, true&gt;::operator (4 samples, 0.07%)</title><rect x="795.0" y="1253" width="0.9" height="15.0" fill="rgb(228,167,14)" rx="2" ry="2" />
<text  x="797.98" y="1263.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="1413" width="0.3" height="15.0" fill="rgb(214,61,47)" rx="2" ry="2" />
<text  x="13.44" y="1423.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (1 samples, 0.02%)</title><rect x="853.2" y="1381" width="0.2" height="15.0" fill="rgb(250,102,16)" rx="2" ry="2" />
<text  x="856.20" y="1391.5" ></text>
</g>
<g >
<title>seastar::logger::log&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; const&amp;&gt; (1 samples, 0.02%)</title><rect x="77.3" y="1637" width="0.2" height="15.0" fill="rgb(228,196,25)" rx="2" ry="2" />
<text  x="80.27" y="1647.5" ></text>
</g>
<g >
<title>utils::tuple_hash::operator (11 samples, 0.21%)</title><rect x="727.5" y="1493" width="2.4" height="15.0" fill="rgb(218,161,1)" rx="2" ry="2" />
<text  x="730.48" y="1503.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_map&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::at&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt; &gt; (1 samples, 0.02%)</title><rect x="77.1" y="1557" width="0.2" height="15.0" fill="rgb(211,23,41)" rx="2" ry="2" />
<text  x="80.05" y="1567.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, seastar::future&lt;void&gt;::finally_body&lt;table::stop (1 samples, 0.02%)</title><rect x="690.9" y="1653" width="0.2" height="15.0" fill="rgb(220,170,9)" rx="2" ry="2" />
<text  x="693.87" y="1663.5" ></text>
</g>
<g >
<title>list_reader_selector::~list_reader_selector (4 samples, 0.07%)</title><rect x="589.4" y="1525" width="0.9" height="15.0" fill="rgb(214,201,50)" rx="2" ry="2" />
<text  x="592.41" y="1535.5" ></text>
</g>
<g >
<title>memtable::find_or_create_partition (3 samples, 0.06%)</title><rect x="1113.7" y="1381" width="0.6" height="15.0" fill="rgb(246,198,54)" rx="2" ry="2" />
<text  x="1116.69" y="1391.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="432.2" y="1333" width="0.2" height="15.0" fill="rgb(227,168,0)" rx="2" ry="2" />
<text  x="435.15" y="1343.5" ></text>
</g>
<g >
<title>cql3::query_processor::process_authorized_statement (1 samples, 0.02%)</title><rect x="19.0" y="1621" width="0.3" height="15.0" fill="rgb(219,218,1)" rx="2" ry="2" />
<text  x="22.04" y="1631.5" ></text>
</g>
<g >
<title>column_definition::name_comparator::operator (1 samples, 0.02%)</title><rect x="17.1" y="1285" width="0.2" height="15.0" fill="rgb(212,69,51)" rx="2" ry="2" />
<text  x="20.06" y="1295.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;::unique_ptr&lt;cql3::operation::set_value, std::default_delete&lt;cql3::operation::set_value&gt;, void&gt; (2 samples, 0.04%)</title><rect x="56.8" y="1461" width="0.4" height="15.0" fill="rgb(219,63,15)" rx="2" ry="2" />
<text  x="59.76" y="1471.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (2 samples, 0.04%)</title><rect x="792.8" y="1269" width="0.4" height="15.0" fill="rgb(251,186,36)" rx="2" ry="2" />
<text  x="795.77" y="1279.5" ></text>
</g>
<g >
<title>std::__make_heap&lt;__gnu_cxx::__normal_iterator&lt;boost::iterator_range&lt;boost::intrusive::tree_iterator&lt;boost::intrusive::mhtraits&lt;range_tombstone_entry, boost::intrusive::set_member_hook&lt;boost::intrusive::link_mode&lt; (1 samples, 0.02%)</title><rect x="290.1" y="1365" width="0.2" height="15.0" fill="rgb(218,140,14)" rx="2" ry="2" />
<text  x="293.11" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;seastar::future&lt;void&gt; &gt;  (146 samples, 2.73%)</title><rect x="565.6" y="1573" width="32.2" height="15.0" fill="rgb(247,215,27)" rx="2" ry="2" />
<text  x="568.59" y="1583.5" >st..</text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::clear (2 samples, 0.04%)</title><rect x="672.3" y="1621" width="0.5" height="15.0" fill="rgb(248,66,41)" rx="2" ry="2" />
<text  x="675.34" y="1631.5" ></text>
</g>
<g >
<title>operator delete (5 samples, 0.09%)</title><rect x="444.5" y="1525" width="1.1" height="15.0" fill="rgb(253,178,16)" rx="2" ry="2" />
<text  x="447.50" y="1535.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (4 samples, 0.07%)</title><rect x="1089.6" y="1541" width="0.9" height="15.0" fill="rgb(219,65,13)" rx="2" ry="2" />
<text  x="1092.64" y="1551.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::followPop (1 samples, 0.02%)</title><rect x="36.7" y="1525" width="0.2" height="15.0" fill="rgb(253,7,47)" rx="2" ry="2" />
<text  x="39.69" y="1535.5" ></text>
</g>
<g >
<title>operator new (12 samples, 0.22%)</title><rect x="970.1" y="1477" width="2.6" height="15.0" fill="rgb(241,107,3)" rx="2" ry="2" />
<text  x="973.10" y="1487.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (1 samples, 0.02%)</title><rect x="644.1" y="1621" width="0.2" height="15.0" fill="rgb(240,207,40)" rx="2" ry="2" />
<text  x="647.11" y="1631.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;dht::decorated_key&gt;::_M_reset (1 samples, 0.02%)</title><rect x="439.2" y="1445" width="0.2" height="15.0" fill="rgb(234,135,1)" rx="2" ry="2" />
<text  x="442.21" y="1455.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="72.9" y="1461" width="0.2" height="15.0" fill="rgb(227,155,47)" rx="2" ry="2" />
<text  x="75.86" y="1471.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (2 samples, 0.04%)</title><rect x="1076.0" y="1541" width="0.4" height="15.0" fill="rgb(229,104,52)" rx="2" ry="2" />
<text  x="1078.97" y="1551.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (1 samples, 0.02%)</title><rect x="690.4" y="1605" width="0.3" height="15.0" fill="rgb(238,11,11)" rx="2" ry="2" />
<text  x="693.43" y="1615.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (3 samples, 0.06%)</title><rect x="1073.5" y="1509" width="0.7" height="15.0" fill="rgb(220,149,7)" rx="2" ry="2" />
<text  x="1076.54" y="1519.5" ></text>
</g>
<g >
<title>partition_version_ref::operator (1 samples, 0.02%)</title><rect x="525.9" y="1365" width="0.2" height="15.0" fill="rgb(241,153,2)" rx="2" ry="2" />
<text  x="528.89" y="1375.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (7 samples, 0.13%)</title><rect x="283.7" y="1333" width="1.6" height="15.0" fill="rgb(213,129,44)" rx="2" ry="2" />
<text  x="286.72" y="1343.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (1,282 samples, 23.96%)</title><rect x="165.1" y="1573" width="282.7" height="15.0" fill="rgb(241,143,45)" rx="2" ry="2" />
<text  x="168.05" y="1583.5" >query::consume_page&lt;</text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt;  (4 samples, 0.07%)</title><rect x="16.2" y="1717" width="0.9" height="15.0" fill="rgb(228,98,20)" rx="2" ry="2" />
<text  x="19.18" y="1727.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.04%)</title><rect x="38.2" y="1429" width="0.5" height="15.0" fill="rgb(217,1,13)" rx="2" ry="2" />
<text  x="41.23" y="1439.5" ></text>
</g>
<g >
<title>std::pair&lt;auth::role_or_anonymous, auth::resource&gt;::pair&lt;auth::role_or_anonymous, auth::resource, true&gt; (4 samples, 0.07%)</title><rect x="796.7" y="1413" width="0.9" height="15.0" fill="rgb(243,132,35)" rx="2" ry="2" />
<text  x="799.74" y="1423.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (1 samples, 0.02%)</title><rect x="690.0" y="1461" width="0.2" height="15.0" fill="rgb(251,35,28)" rx="2" ry="2" />
<text  x="692.99" y="1471.5" ></text>
</g>
<g >
<title>memtable::upgrade_entry (1 samples, 0.02%)</title><rect x="79.5" y="1525" width="0.2" height="15.0" fill="rgb(254,155,31)" rx="2" ry="2" />
<text  x="82.48" y="1535.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;auth::resource_kind, std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;auth::resource_kind&gt;, std::hash&lt;auth::resource_kind&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (1 samples, 0.02%)</title><rect x="74.8" y="1557" width="0.3" height="15.0" fill="rgb(211,220,42)" rx="2" ry="2" />
<text  x="77.84" y="1567.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_partition_key_ranges (1 samples, 0.02%)</title><rect x="865.6" y="1589" width="0.2" height="15.0" fill="rgb(232,203,8)" rx="2" ry="2" />
<text  x="868.56" y="1599.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="1126.5" y="1333" width="0.2" height="15.0" fill="rgb(217,169,7)" rx="2" ry="2" />
<text  x="1129.48" y="1343.5" ></text>
</g>
<g >
<title>cql3::maps::setter::execute (1 samples, 0.02%)</title><rect x="855.2" y="1477" width="0.2" height="15.0" fill="rgb(245,23,51)" rx="2" ry="2" />
<text  x="858.19" y="1487.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::do_execute (5 samples, 0.09%)</title><rect x="863.1" y="1605" width="1.1" height="15.0" fill="rgb(238,113,35)" rx="2" ry="2" />
<text  x="866.13" y="1615.5" ></text>
</g>
<g >
<title>managed_bytes::external_memory_usage (1 samples, 0.02%)</title><rect x="521.5" y="1349" width="0.2" height="15.0" fill="rgb(208,142,36)" rx="2" ry="2" />
<text  x="524.48" y="1359.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.02%)</title><rect x="79.0" y="1589" width="0.3" height="15.0" fill="rgb(209,158,53)" rx="2" ry="2" />
<text  x="82.04" y="1599.5" ></text>
</g>
<g >
<title>schema::partition_key_size (1 samples, 0.02%)</title><rect x="1094.7" y="1573" width="0.2" height="15.0" fill="rgb(252,75,16)" rx="2" ry="2" />
<text  x="1097.72" y="1583.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (7 samples, 0.13%)</title><rect x="199.0" y="1413" width="1.6" height="15.0" fill="rgb(215,104,12)" rx="2" ry="2" />
<text  x="202.02" y="1423.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const*, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;*&gt; (1 samples, 0.02%)</title><rect x="797.4" y="1381" width="0.2" height="15.0" fill="rgb(214,117,5)" rx="2" ry="2" />
<text  x="800.40" y="1391.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (1 samples, 0.02%)</title><rect x="1130.0" y="1445" width="0.2" height="15.0" fill="rgb(244,67,29)" rx="2" ry="2" />
<text  x="1133.01" y="1455.5" ></text>
</g>
<g >
<title>db::assure_sufficient_live_nodes&lt;utils::small_vector&lt;gms::inet_address, 3ul&gt;, utils::small_vector&lt;gms::inet_address, 1ul&gt; &gt; (1 samples, 0.02%)</title><rect x="1121.8" y="1365" width="0.3" height="15.0" fill="rgb(221,157,1)" rx="2" ry="2" />
<text  x="1124.85" y="1375.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_M_reset (2 samples, 0.04%)</title><rect x="923.1" y="1541" width="0.5" height="15.0" fill="rgb(233,204,32)" rx="2" ry="2" />
<text  x="926.12" y="1551.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;tracking_allocator&lt;mutation_fragment&gt; &gt;::_S_destroy&lt;tracking_allocator&lt;mutation_fragment&gt;, mutation_fragment&gt; (1 samples, 0.02%)</title><rect x="342.8" y="1397" width="0.2" height="15.0" fill="rgb(251,4,0)" rx="2" ry="2" />
<text  x="345.83" y="1407.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.06%)</title><rect x="261.0" y="1317" width="0.7" height="15.0" fill="rgb(208,169,7)" rx="2" ry="2" />
<text  x="264.00" y="1327.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (4 samples, 0.07%)</title><rect x="55.0" y="1413" width="0.9" height="15.0" fill="rgb(213,93,22)" rx="2" ry="2" />
<text  x="57.99" y="1423.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;service::query_state, false&gt;::make&lt;service::client_state&amp;, service_permit&gt; (4 samples, 0.07%)</title><rect x="831.4" y="1573" width="0.9" height="15.0" fill="rgb(221,112,33)" rx="2" ry="2" />
<text  x="834.37" y="1583.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reclaiming_disabled&lt;flush_reader::get_next_partition (1 samples, 0.02%)</title><rect x="79.5" y="1573" width="0.2" height="15.0" fill="rgb(253,213,42)" rx="2" ry="2" />
<text  x="82.48" y="1583.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="632.0" y="1557" width="0.2" height="15.0" fill="rgb(251,97,30)" rx="2" ry="2" />
<text  x="634.98" y="1567.5" ></text>
</g>
<g >
<title>seastar::reactor_backend_aio::reap_kernel_completions (3 samples, 0.06%)</title><rect x="1167.1" y="1653" width="0.6" height="15.0" fill="rgb(216,210,28)" rx="2" ry="2" />
<text  x="1170.06" y="1663.5" ></text>
</g>
<g >
<title>std::apply&lt;service::storage_proxy::query_nonsingular_mutations_locally (3 samples, 0.06%)</title><rect x="100.4" y="1525" width="0.7" height="15.0" fill="rgb(209,226,35)" rx="2" ry="2" />
<text  x="103.43" y="1535.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;unsigned long&gt;::allocate (1 samples, 0.02%)</title><rect x="66.0" y="1573" width="0.2" height="15.0" fill="rgb(225,207,49)" rx="2" ry="2" />
<text  x="69.02" y="1583.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::followPush (1 samples, 0.02%)</title><rect x="44.0" y="1477" width="0.2" height="15.0" fill="rgb(254,172,44)" rx="2" ry="2" />
<text  x="46.97" y="1487.5" ></text>
</g>
<g >
<title>query_result_builder::consume_new_partition (1 samples, 0.02%)</title><rect x="396.6" y="1365" width="0.3" height="15.0" fill="rgb(250,101,6)" rx="2" ry="2" />
<text  x="399.64" y="1375.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="945.0" y="1541" width="0.2" height="15.0" fill="rgb(207,131,6)" rx="2" ry="2" />
<text  x="947.96" y="1551.5" ></text>
</g>
<g >
<title>locator::simple_strategy::calculate_natural_endpoints (1 samples, 0.02%)</title><rect x="17.3" y="1557" width="0.2" height="15.0" fill="rgb(234,218,25)" rx="2" ry="2" />
<text  x="20.28" y="1567.5" ></text>
</g>
<g >
<title>seastar::do_until&lt;scanning_reader::fill_buffer (1 samples, 0.02%)</title><rect x="100.9" y="1189" width="0.2" height="15.0" fill="rgb(230,26,18)" rx="2" ry="2" />
<text  x="103.87" y="1199.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="1090.7" y="1557" width="0.3" height="15.0" fill="rgb(250,32,8)" rx="2" ry="2" />
<text  x="1093.75" y="1567.5" ></text>
</g>
<g >
<title>read_simple&lt;long, managed_bytes_basic_view&lt; (2 samples, 0.04%)</title><rect x="416.3" y="1317" width="0.4" height="15.0" fill="rgb(211,192,51)" rx="2" ry="2" />
<text  x="419.27" y="1327.5" ></text>
</g>
<g >
<title>seastar::app_template::run (4,921 samples, 91.98%)</title><rect x="82.6" y="1749" width="1085.3" height="15.0" fill="rgb(216,143,5)" rx="2" ry="2" />
<text  x="85.56" y="1759.5" >seastar::app_template::run</text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="72.9" y="1445" width="0.2" height="15.0" fill="rgb(233,66,33)" rx="2" ry="2" />
<text  x="75.86" y="1455.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (2 samples, 0.04%)</title><rect x="1023.0" y="1429" width="0.5" height="15.0" fill="rgb(210,172,30)" rx="2" ry="2" />
<text  x="1026.04" y="1439.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate (1 samples, 0.02%)</title><rect x="849.7" y="1525" width="0.2" height="15.0" fill="rgb(225,205,18)" rx="2" ry="2" />
<text  x="852.67" y="1535.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.06%)</title><rect x="1143.9" y="1573" width="0.7" height="15.0" fill="rgb(208,207,20)" rx="2" ry="2" />
<text  x="1146.90" y="1583.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (1 samples, 0.02%)</title><rect x="637.9" y="1621" width="0.3" height="15.0" fill="rgb(227,65,17)" rx="2" ry="2" />
<text  x="640.94" y="1631.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::maybe_decay_reserve (1 samples, 0.02%)</title><rect x="272.0" y="1333" width="0.2" height="15.0" fill="rgb(208,87,53)" rx="2" ry="2" />
<text  x="275.03" y="1343.5" ></text>
</g>
<g >
<title>seastar::internal::extract_values_from_futures_tuple&lt;seastar::future&lt;void&gt;, seastar::future&lt;void&gt;, seastar::future&lt;void&gt; &gt;::transform (1 samples, 0.02%)</title><rect x="79.0" y="1733" width="0.3" height="15.0" fill="rgb(229,99,40)" rx="2" ry="2" />
<text  x="82.04" y="1743.5" ></text>
</g>
<g >
<title>sstring_hash::operator (1 samples, 0.02%)</title><rect x="835.1" y="1525" width="0.2" height="15.0" fill="rgb(221,72,8)" rx="2" ry="2" />
<text  x="838.12" y="1535.5" ></text>
</g>
<g >
<title>memtable::memtable_encoding_stats_collector::update (1 samples, 0.02%)</title><rect x="1114.3" y="1381" width="0.3" height="15.0" fill="rgb(223,200,11)" rx="2" ry="2" />
<text  x="1117.35" y="1391.5" ></text>
</g>
<g >
<title>seastar::do_until&lt;flush_reader::fill_buffer (4 samples, 0.07%)</title><rect x="79.5" y="1621" width="0.9" height="15.0" fill="rgb(228,170,42)" rx="2" ry="2" />
<text  x="82.48" y="1631.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.02%)</title><rect x="44.8" y="1317" width="0.3" height="15.0" fill="rgb(241,15,0)" rx="2" ry="2" />
<text  x="47.85" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::_Move_ctor_base (1 samples, 0.02%)</title><rect x="350.5" y="1317" width="0.3" height="15.0" fill="rgb(219,104,52)" rx="2" ry="2" />
<text  x="353.55" y="1327.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::maybe_decay_reserve (1 samples, 0.02%)</title><rect x="296.1" y="1381" width="0.2" height="15.0" fill="rgb(214,217,11)" rx="2" ry="2" />
<text  x="299.07" y="1391.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="78.8" y="1717" width="0.2" height="15.0" fill="rgb(229,194,31)" rx="2" ry="2" />
<text  x="81.81" y="1727.5" ></text>
</g>
<g >
<title>reader_permit::impl::mark_unused (1 samples, 0.02%)</title><rect x="690.4" y="1621" width="0.3" height="15.0" fill="rgb(205,181,26)" rx="2" ry="2" />
<text  x="693.43" y="1631.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="1013" width="0.3" height="15.0" fill="rgb(246,28,0)" rx="2" ry="2" />
<text  x="13.44" y="1023.5" ></text>
</g>
<g >
<title>utils::tuple_hash::operator (11 samples, 0.21%)</title><rect x="744.7" y="1461" width="2.4" height="15.0" fill="rgb(241,87,19)" rx="2" ry="2" />
<text  x="747.69" y="1471.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (1 samples, 0.02%)</title><rect x="98.7" y="1637" width="0.2" height="15.0" fill="rgb(252,210,41)" rx="2" ry="2" />
<text  x="101.67" y="1647.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.02%)</title><rect x="58.5" y="1429" width="0.2" height="15.0" fill="rgb(236,227,14)" rx="2" ry="2" />
<text  x="61.52" y="1439.5" ></text>
</g>
<g >
<title>seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::expand (7 samples, 0.13%)</title><rect x="207.8" y="1365" width="1.6" height="15.0" fill="rgb(245,82,43)" rx="2" ry="2" />
<text  x="210.84" y="1375.5" ></text>
</g>
<g >
<title>service::client_state::has_column_family_access (11 samples, 0.21%)</title><rect x="74.8" y="1621" width="2.5" height="15.0" fill="rgb(220,81,8)" rx="2" ry="2" />
<text  x="77.84" y="1631.5" ></text>
</g>
<g >
<title>cql3::untyped_result_set_row::get_as&lt;int&gt; (1 samples, 0.02%)</title><rect x="639.0" y="1589" width="0.3" height="15.0" fill="rgb(245,213,10)" rx="2" ry="2" />
<text  x="642.04" y="1599.5" ></text>
</g>
<g >
<title>std::default_delete&lt;nonwrapping_interval&lt;dht::ring_position&gt; const&gt;::operator (1 samples, 0.02%)</title><rect x="601.3" y="1557" width="0.2" height="15.0" fill="rgb(254,128,31)" rx="2" ry="2" />
<text  x="604.32" y="1567.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (13 samples, 0.24%)</title><rect x="230.8" y="1253" width="2.8" height="15.0" fill="rgb(207,168,16)" rx="2" ry="2" />
<text  x="233.78" y="1263.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::do_execute (30 samples, 0.56%)</title><rect x="849.5" y="1589" width="6.6" height="15.0" fill="rgb(253,220,13)" rx="2" ry="2" />
<text  x="852.45" y="1599.5" ></text>
</g>
<g >
<title>std::push_heap&lt;mutation_reader_merger::reader_and_fragment*, mutation_reader_merger::reader_heap_compare&gt; (12 samples, 0.22%)</title><rect x="190.0" y="1397" width="2.6" height="15.0" fill="rgb(237,186,21)" rx="2" ry="2" />
<text  x="192.98" y="1407.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::clear (6 samples, 0.11%)</title><rect x="130.9" y="1605" width="1.3" height="15.0" fill="rgb(250,82,2)" rx="2" ry="2" />
<text  x="133.87" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::constant&gt;  (1 samples, 0.02%)</title><rect x="893.8" y="1477" width="0.2" height="15.0" fill="rgb(250,103,15)" rx="2" ry="2" />
<text  x="896.79" y="1487.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (1 samples, 0.02%)</title><rect x="329.8" y="1557" width="0.2" height="15.0" fill="rgb(229,49,2)" rx="2" ry="2" />
<text  x="332.81" y="1567.5" ></text>
</g>
<g >
<title>mutation_querier::mutation_querier (13 samples, 0.24%)</title><rect x="348.6" y="1333" width="2.8" height="15.0" fill="rgb(220,130,53)" rx="2" ry="2" />
<text  x="351.56" y="1343.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.02%)</title><rect x="78.8" y="1573" width="0.2" height="15.0" fill="rgb(206,84,2)" rx="2" ry="2" />
<text  x="81.81" y="1583.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (457 samples, 8.54%)</title><rect x="196.6" y="1461" width="100.8" height="15.0" fill="rgb(240,127,8)" rx="2" ry="2" />
<text  x="199.59" y="1471.5" >partition_sn..</text>
</g>
<g >
<title>seastar::repeat&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (1 samples, 0.02%)</title><rect x="100.9" y="1269" width="0.2" height="15.0" fill="rgb(237,25,41)" rx="2" ry="2" />
<text  x="103.87" y="1279.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (5 samples, 0.09%)</title><rect x="1038.3" y="1429" width="1.1" height="15.0" fill="rgb(227,203,26)" rx="2" ry="2" />
<text  x="1041.25" y="1439.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (2 samples, 0.04%)</title><rect x="45.3" y="1301" width="0.4" height="15.0" fill="rgb(207,77,48)" rx="2" ry="2" />
<text  x="48.29" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_node (3 samples, 0.06%)</title><rect x="671.2" y="1589" width="0.7" height="15.0" fill="rgb(210,44,29)" rx="2" ry="2" />
<text  x="674.24" y="1599.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::has_available_units (1 samples, 0.02%)</title><rect x="425.5" y="1349" width="0.3" height="15.0" fill="rgb(222,157,27)" rx="2" ry="2" />
<text  x="428.54" y="1359.5" ></text>
</g>
<g >
<title>query_state::query_state (18 samples, 0.34%)</title><rect x="608.4" y="1589" width="4.0" height="15.0" fill="rgb(217,229,48)" rx="2" ry="2" />
<text  x="611.38" y="1599.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;seastar::shared_ptr&lt;cql3::relation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::relation&gt; &gt; &gt;::_Vector_base (1 samples, 0.02%)</title><rect x="60.9" y="1477" width="0.3" height="15.0" fill="rgb(254,97,39)" rx="2" ry="2" />
<text  x="63.95" y="1487.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::local (1 samples, 0.02%)</title><rect x="1042.2" y="1493" width="0.2" height="15.0" fill="rgb(222,227,15)" rx="2" ry="2" />
<text  x="1045.22" y="1503.5" ></text>
</g>
<g >
<title>unsigned_vint::serialize (1 samples, 0.02%)</title><rect x="81.7" y="1477" width="0.2" height="15.0" fill="rgb(235,9,47)" rx="2" ry="2" />
<text  x="84.68" y="1487.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="1509" width="0.3" height="15.0" fill="rgb(235,127,31)" rx="2" ry="2" />
<text  x="13.44" y="1519.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::execute (2 samples, 0.04%)</title><rect x="968.3" y="1445" width="0.5" height="15.0" fill="rgb(209,143,32)" rx="2" ry="2" />
<text  x="971.34" y="1455.5" ></text>
</g>
<g >
<title>db::system_keyspace::query (1 samples, 0.02%)</title><rect x="78.8" y="1381" width="0.2" height="15.0" fill="rgb(238,11,11)" rx="2" ry="2" />
<text  x="81.81" y="1391.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::clear (2 samples, 0.04%)</title><rect x="420.2" y="1381" width="0.5" height="15.0" fill="rgb(212,2,39)" rx="2" ry="2" />
<text  x="423.24" y="1391.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.04%)</title><rect x="149.6" y="1573" width="0.5" height="15.0" fill="rgb(238,71,48)" rx="2" ry="2" />
<text  x="152.61" y="1583.5" ></text>
</g>
<g >
<title>std::default_delete&lt;mutation_fragment::data&gt;::operator (7 samples, 0.13%)</title><rect x="435.7" y="1397" width="1.5" height="15.0" fill="rgb(230,36,20)" rx="2" ry="2" />
<text  x="438.68" y="1407.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (1 samples, 0.02%)</title><rect x="17.1" y="1685" width="0.2" height="15.0" fill="rgb(246,160,31)" rx="2" ry="2" />
<text  x="20.06" y="1695.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;::shared_ptr (1 samples, 0.02%)</title><rect x="57.4" y="1493" width="0.2" height="15.0" fill="rgb(224,151,16)" rx="2" ry="2" />
<text  x="60.42" y="1503.5" ></text>
</g>
<g >
<title>boost::iterator_range&lt;boost::iterators::filter_iterator&lt;mutation_partition::non_dummy_rows (1 samples, 0.02%)</title><rect x="1122.7" y="1269" width="0.2" height="15.0" fill="rgb(229,224,2)" rx="2" ry="2" />
<text  x="1125.73" y="1279.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned char, std::pair&lt;unsigned char const, std::optional&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned char const, std::optional&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned char&gt;, std::hash&lt;unsigned char&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_Hashtable (1 samples, 0.02%)</title><rect x="851.0" y="1509" width="0.2" height="15.0" fill="rgb(216,87,5)" rx="2" ry="2" />
<text  x="854.00" y="1519.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::raw::delete_statement, std::default_delete&lt;cql3::statements::raw::delete_statement&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::statements::raw::delete_statement&gt;, void&gt; (1 samples, 0.02%)</title><rect x="63.8" y="1525" width="0.2" height="15.0" fill="rgb(238,187,16)" rx="2" ry="2" />
<text  x="66.82" y="1535.5" ></text>
</g>
<g >
<title>std::hash&lt;wrapping_interval&lt;dht::token&gt; &gt;::operator (1 samples, 0.02%)</title><rect x="1072.9" y="1493" width="0.2" height="15.0" fill="rgb(229,166,2)" rx="2" ry="2" />
<text  x="1075.88" y="1503.5" ></text>
</g>
<g >
<title>locator::simple_strategy::calculate_natural_endpoints (1 samples, 0.02%)</title><rect x="102.6" y="1637" width="0.3" height="15.0" fill="rgb(210,174,36)" rx="2" ry="2" />
<text  x="105.64" y="1647.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::restrictions::multi_column_restriction&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="654.9" y="1605" width="0.2" height="15.0" fill="rgb(236,76,47)" rx="2" ry="2" />
<text  x="657.92" y="1615.5" ></text>
</g>
<g >
<title>seastar::memory::allocate_aligned (1 samples, 0.02%)</title><rect x="853.9" y="1349" width="0.2" height="15.0" fill="rgb(249,207,33)" rx="2" ry="2" />
<text  x="856.87" y="1359.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (1 samples, 0.02%)</title><rect x="1121.0" y="1381" width="0.2" height="15.0" fill="rgb(224,156,16)" rx="2" ry="2" />
<text  x="1123.96" y="1391.5" ></text>
</g>
<g >
<title>table::stop (1 samples, 0.02%)</title><rect x="690.9" y="1621" width="0.2" height="15.0" fill="rgb(241,111,7)" rx="2" ry="2" />
<text  x="693.87" y="1631.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (2 samples, 0.04%)</title><rect x="721.1" y="1589" width="0.4" height="15.0" fill="rgb(206,102,25)" rx="2" ry="2" />
<text  x="724.09" y="1599.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::timer (1 samples, 0.02%)</title><rect x="1011.8" y="1317" width="0.2" height="15.0" fill="rgb(241,14,39)" rx="2" ry="2" />
<text  x="1014.79" y="1327.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.02%)</title><rect x="50.6" y="1429" width="0.2" height="15.0" fill="rgb(238,77,31)" rx="2" ry="2" />
<text  x="53.58" y="1439.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.04%)</title><rect x="967.9" y="1429" width="0.4" height="15.0" fill="rgb(227,129,50)" rx="2" ry="2" />
<text  x="970.90" y="1439.5" ></text>
</g>
<g >
<title>operator new (9 samples, 0.17%)</title><rect x="839.5" y="1589" width="2.0" height="15.0" fill="rgb(224,65,10)" rx="2" ry="2" />
<text  x="842.53" y="1599.5" ></text>
</g>
<g >
<title>std::apply&lt;service::client_state::check_has_permission (116 samples, 2.17%)</title><rect x="777.1" y="1477" width="25.6" height="15.0" fill="rgb(254,56,37)" rx="2" ry="2" />
<text  x="780.11" y="1487.5" >s..</text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.06%)</title><rect x="445.6" y="1509" width="0.7" height="15.0" fill="rgb(237,77,46)" rx="2" ry="2" />
<text  x="448.61" y="1519.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (1 samples, 0.02%)</title><rect x="1022.2" y="1429" width="0.2" height="15.0" fill="rgb(242,165,32)" rx="2" ry="2" />
<text  x="1025.15" y="1439.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.02%)</title><rect x="59.2" y="1429" width="0.2" height="15.0" fill="rgb(250,141,16)" rx="2" ry="2" />
<text  x="62.19" y="1439.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.06%)</title><rect x="838.2" y="1509" width="0.7" height="15.0" fill="rgb(219,106,41)" rx="2" ry="2" />
<text  x="841.21" y="1519.5" ></text>
</g>
<g >
<title>ser::qr_clustered_row__cells&lt;bytes_ostream&gt;::qr_clustered_row__cells (1 samples, 0.02%)</title><rect x="366.9" y="1333" width="0.2" height="15.0" fill="rgb(213,14,42)" rx="2" ry="2" />
<text  x="369.87" y="1343.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (6 samples, 0.11%)</title><rect x="424.4" y="1365" width="1.4" height="15.0" fill="rgb(253,213,50)" rx="2" ry="2" />
<text  x="427.43" y="1375.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.02%)</title><rect x="973.0" y="1445" width="0.2" height="15.0" fill="rgb(230,210,10)" rx="2" ry="2" />
<text  x="975.97" y="1455.5" ></text>
</g>
<g >
<title>seastar::execution_stage::flush (1 samples, 0.02%)</title><rect x="751.7" y="1509" width="0.3" height="15.0" fill="rgb(236,131,22)" rx="2" ry="2" />
<text  x="754.75" y="1519.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (6 samples, 0.11%)</title><rect x="44.4" y="1477" width="1.3" height="15.0" fill="rgb(251,208,31)" rx="2" ry="2" />
<text  x="47.41" y="1487.5" ></text>
</g>
<g >
<title>freeze (18 samples, 0.34%)</title><rect x="1122.3" y="1349" width="4.0" height="15.0" fill="rgb(229,20,38)" rx="2" ry="2" />
<text  x="1125.29" y="1359.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (1 samples, 0.02%)</title><rect x="47.3" y="1445" width="0.2" height="15.0" fill="rgb(215,201,11)" rx="2" ry="2" />
<text  x="50.27" y="1455.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="1122.3" y="1317" width="0.2" height="15.0" fill="rgb(206,216,23)" rx="2" ry="2" />
<text  x="1125.29" y="1327.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;void&gt; &gt;::satisfy_with_result_of&lt;seastar::future&lt;void&gt;::then_wrapped_nrvo&lt;seastar::future&lt;void&gt;, seastar::sharded&lt;db::view::view_update_generator&gt;::stop (1 samples, 0.02%)</title><rect x="692.2" y="1637" width="0.2" height="15.0" fill="rgb(213,219,34)" rx="2" ry="2" />
<text  x="695.19" y="1647.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.02%)</title><rect x="57.9" y="1285" width="0.2" height="15.0" fill="rgb(241,74,2)" rx="2" ry="2" />
<text  x="60.86" y="1295.5" ></text>
</g>
<g >
<title>ser::query_result__partitions&lt;bytes_ostream&gt;::add (2 samples, 0.04%)</title><rect x="353.6" y="1317" width="0.5" height="15.0" fill="rgb(229,128,23)" rx="2" ry="2" />
<text  x="356.63" y="1327.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (1 samples, 0.02%)</title><rect x="1115.0" y="1349" width="0.2" height="15.0" fill="rgb(243,156,2)" rx="2" ry="2" />
<text  x="1118.01" y="1359.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="598.2" y="1573" width="0.3" height="15.0" fill="rgb(206,25,22)" rx="2" ry="2" />
<text  x="601.24" y="1583.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (52 samples, 0.97%)</title><rect x="233.6" y="1253" width="11.5" height="15.0" fill="rgb(231,178,23)" rx="2" ry="2" />
<text  x="236.65" y="1263.5" ></text>
</g>
<g >
<title>rows_entry::tri_compare::operator (1 samples, 0.02%)</title><rect x="11.1" y="1605" width="0.2" height="15.0" fill="rgb(238,39,1)" rx="2" ry="2" />
<text  x="14.10" y="1615.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;compact_mutation_state&lt; (1 samples, 0.02%)</title><rect x="619.2" y="1589" width="0.2" height="15.0" fill="rgb(215,226,26)" rx="2" ry="2" />
<text  x="622.19" y="1599.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_in_thread&lt;sstables::sstable_writer, flat_mutation_reader::no_filter&gt; (13 samples, 0.24%)</title><rect x="79.5" y="1669" width="2.8" height="15.0" fill="rgb(234,4,25)" rx="2" ry="2" />
<text  x="82.48" y="1679.5" ></text>
</g>
<g >
<title>lister::lister (1 samples, 0.02%)</title><rect x="690.7" y="1589" width="0.2" height="15.0" fill="rgb(250,74,45)" rx="2" ry="2" />
<text  x="693.65" y="1599.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit_slot&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::walking_visitor&lt;row::for_each_cell_until&lt;sstables::mc::row_has_complex_deletion (2 samples, 0.04%)</title><rect x="80.8" y="1525" width="0.4" height="15.0" fill="rgb(225,171,43)" rx="2" ry="2" />
<text  x="83.80" y="1535.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (1 samples, 0.02%)</title><rect x="574.6" y="1445" width="0.3" height="15.0" fill="rgb(248,151,9)" rx="2" ry="2" />
<text  x="577.64" y="1455.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (2 samples, 0.04%)</title><rect x="725.1" y="1541" width="0.4" height="15.0" fill="rgb(248,146,48)" rx="2" ry="2" />
<text  x="728.06" y="1551.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_one (1 samples, 0.02%)</title><rect x="848.6" y="1557" width="0.2" height="15.0" fill="rgb(230,142,5)" rx="2" ry="2" />
<text  x="851.57" y="1567.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume_in_thread&lt;sstables::sstable_writer&gt; (1 samples, 0.02%)</title><rect x="10.7" y="1669" width="0.2" height="15.0" fill="rgb(224,94,54)" rx="2" ry="2" />
<text  x="13.66" y="1679.5" ></text>
</g>
<g >
<title>operator delete (11 samples, 0.21%)</title><rect x="147.0" y="1589" width="2.4" height="15.0" fill="rgb(212,133,31)" rx="2" ry="2" />
<text  x="149.97" y="1599.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql_transport::messages::result_message&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="1132.0" y="1653" width="0.2" height="15.0" fill="rgb(232,99,28)" rx="2" ry="2" />
<text  x="1134.99" y="1663.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit_slot&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::memory_usage&lt;row::external_memory_usage (12 samples, 0.22%)</title><rect x="257.5" y="1269" width="2.6" height="15.0" fill="rgb(234,43,20)" rx="2" ry="2" />
<text  x="260.47" y="1279.5" ></text>
</g>
<g >
<title>reader_permit::impl::~impl (8 samples, 0.15%)</title><rect x="115.4" y="1605" width="1.8" height="15.0" fill="rgb(243,185,24)" rx="2" ry="2" />
<text  x="118.43" y="1615.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.06%)</title><rect x="700.8" y="1637" width="0.7" height="15.0" fill="rgb(251,36,9)" rx="2" ry="2" />
<text  x="703.80" y="1647.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="19.9" y="1525" width="0.2" height="15.0" fill="rgb(216,180,29)" rx="2" ry="2" />
<text  x="22.93" y="1535.5" ></text>
</g>
<g >
<title>bplus::searcher&lt;dht::ring_position, long, dht::raw_token_less_comparator, 16ul,  (3 samples, 0.06%)</title><rect x="481.6" y="1445" width="0.6" height="15.0" fill="rgb(252,13,48)" rx="2" ry="2" />
<text  x="484.56" y="1455.5" ></text>
</g>
<g >
<title>std::construct_at&lt;mutation_fragment, schema const&amp;, reader_permit&amp;, partition_start&gt; (22 samples, 0.41%)</title><rect x="519.9" y="1381" width="4.9" height="15.0" fill="rgb(220,87,16)" rx="2" ry="2" />
<text  x="522.94" y="1391.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_construct&lt;interval_bound&lt;dht::ring_position&gt; const&amp;&gt; (2 samples, 0.04%)</title><rect x="932.2" y="1509" width="0.4" height="15.0" fill="rgb(228,163,18)" rx="2" ry="2" />
<text  x="935.16" y="1519.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.02%)</title><rect x="22.6" y="1461" width="0.2" height="15.0" fill="rgb(253,204,30)" rx="2" ry="2" />
<text  x="25.57" y="1471.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::find (3 samples, 0.06%)</title><rect x="940.1" y="1525" width="0.7" height="15.0" fill="rgb(211,12,33)" rx="2" ry="2" />
<text  x="943.10" y="1535.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;service::never_speculating_read_executor, true&gt;::make&lt;seastar::lw_shared_ptr&lt;schema const&gt;&amp;, seastar::lw_shared_ptr&lt;table&gt;&amp;, seastar::shared_ptr&lt;service::storage_proxy&gt;&amp;, seastar::lw_shared_ptr&lt;query::read_command&gt;&amp;, nonwrapping_interval&lt;dht::ring_position&gt;, db::consistency_level&amp;, utils::small_vector&lt;gms::inet_address, 3ul&gt;, tracing::trace_state_ptr, service_permit&gt; (41 samples, 0.77%)</title><rect x="1042.4" y="1493" width="9.1" height="15.0" fill="rgb(224,62,33)" rx="2" ry="2" />
<text  x="1045.44" y="1503.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.07%)</title><rect x="505.2" y="1445" width="0.8" height="15.0" fill="rgb(245,109,25)" rx="2" ry="2" />
<text  x="508.16" y="1455.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (1 samples, 0.02%)</title><rect x="1042.0" y="1493" width="0.2" height="15.0" fill="rgb(218,221,38)" rx="2" ry="2" />
<text  x="1045.00" y="1503.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::on_read_resolved (3 samples, 0.06%)</title><rect x="697.5" y="1605" width="0.6" height="15.0" fill="rgb(249,18,9)" rx="2" ry="2" />
<text  x="700.49" y="1615.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, unsigned int, std::_Identity&lt;unsigned int&gt;, std::less&lt;unsigned int&gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;unsigned int&gt; &gt;::find (1 samples, 0.02%)</title><rect x="35.4" y="1461" width="0.2" height="15.0" fill="rgb(225,139,18)" rx="2" ry="2" />
<text  x="38.36" y="1471.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (1 samples, 0.02%)</title><rect x="101.1" y="1509" width="0.2" height="15.0" fill="rgb(231,46,51)" rx="2" ry="2" />
<text  x="104.09" y="1519.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::allocate_large_aligned (1 samples, 0.02%)</title><rect x="79.3" y="1749" width="0.2" height="15.0" fill="rgb(253,71,25)" rx="2" ry="2" />
<text  x="82.26" y="1759.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::then_wrapped_nrvo&lt;void, service::abstract_read_executor::make_data_requests (2 samples, 0.04%)</title><rect x="980.5" y="1461" width="0.4" height="15.0" fill="rgb(234,203,53)" rx="2" ry="2" />
<text  x="983.47" y="1471.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (1 samples, 0.02%)</title><rect x="775.1" y="1445" width="0.2" height="15.0" fill="rgb(212,20,39)" rx="2" ry="2" />
<text  x="778.13" y="1455.5" ></text>
</g>
<g >
<title>table::as_mutation_source (14 samples, 0.26%)</title><rect x="631.5" y="1589" width="3.1" height="15.0" fill="rgb(233,201,51)" rx="2" ry="2" />
<text  x="634.54" y="1599.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (9 samples, 0.17%)</title><rect x="839.5" y="1573" width="2.0" height="15.0" fill="rgb(213,63,45)" rx="2" ry="2" />
<text  x="842.53" y="1583.5" ></text>
</g>
<g >
<title>service::storage_proxy::create_write_response_handler (1 samples, 0.02%)</title><rect x="1121.4" y="1397" width="0.2" height="15.0" fill="rgb(243,61,23)" rx="2" ry="2" />
<text  x="1124.41" y="1407.5" ></text>
</g>
<g >
<title>std::default_delete&lt;cql3::operation::raw_update&gt;::default_delete&lt;cql3::operation::set_value, void&gt; (1 samples, 0.02%)</title><rect x="57.0" y="1365" width="0.2" height="15.0" fill="rgb(236,43,37)" rx="2" ry="2" />
<text  x="59.98" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;cql3::expr::untyped_constant&gt; (1 samples, 0.02%)</title><rect x="53.7" y="1093" width="0.2" height="15.0" fill="rgb(229,57,51)" rx="2" ry="2" />
<text  x="56.67" y="1103.5" ></text>
</g>
<g >
<title>ser::writer_of_query_result&lt;bytes_ostream&gt;::start_partitions (4 samples, 0.07%)</title><rect x="610.1" y="1557" width="0.9" height="15.0" fill="rgb(206,181,48)" rx="2" ry="2" />
<text  x="613.15" y="1567.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="584.6" y="1445" width="0.2" height="15.0" fill="rgb(232,93,15)" rx="2" ry="2" />
<text  x="587.56" y="1455.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_data_request (215 samples, 4.02%)</title><rect x="981.1" y="1461" width="47.4" height="15.0" fill="rgb(218,205,8)" rx="2" ry="2" />
<text  x="984.13" y="1471.5" >serv..</text>
</g>
<g >
<title>antlr3::DefaultAllocPolicy::StackType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::push (1 samples, 0.02%)</title><rect x="44.0" y="1461" width="0.2" height="15.0" fill="rgb(233,31,19)" rx="2" ry="2" />
<text  x="46.97" y="1471.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.06%)</title><rect x="292.1" y="1333" width="0.7" height="15.0" fill="rgb(228,198,40)" rx="2" ry="2" />
<text  x="295.10" y="1343.5" ></text>
</g>
<g >
<title>cql3::prepare_context::get_partition_key_bind_indexes (3 samples, 0.06%)</title><rect x="65.6" y="1605" width="0.6" height="15.0" fill="rgb(232,55,30)" rx="2" ry="2" />
<text  x="68.58" y="1615.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;gms::inet_address*, __gnu_cxx::__ops::_Iter_pred&lt;std::unary_negate&lt;std::binder1st&lt;std::_Mem_fn&lt;bool  (2 samples, 0.04%)</title><rect x="1067.6" y="1461" width="0.4" height="15.0" fill="rgb(252,79,54)" rx="2" ry="2" />
<text  x="1070.59" y="1471.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (195 samples, 3.64%)</title><rect x="22.4" y="1573" width="43.0" height="15.0" fill="rgb(249,183,32)" rx="2" ry="2" />
<text  x="25.35" y="1583.5" >seas..</text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (4 samples, 0.07%)</title><rect x="41.8" y="1349" width="0.8" height="15.0" fill="rgb(252,106,23)" rx="2" ry="2" />
<text  x="44.76" y="1359.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt;::allocate (1 samples, 0.02%)</title><rect x="290.8" y="1349" width="0.2" height="15.0" fill="rgb(205,27,31)" rx="2" ry="2" />
<text  x="293.77" y="1359.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_clustering_bounds (33 samples, 0.62%)</title><rect x="1081.9" y="1557" width="7.3" height="15.0" fill="rgb(211,211,52)" rx="2" ry="2" />
<text  x="1084.93" y="1567.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::partition_slice const, std::default_delete&lt;query::partition_slice const&gt; &gt;::~unique_ptr (21 samples, 0.39%)</title><rect x="601.5" y="1573" width="4.7" height="15.0" fill="rgb(241,185,3)" rx="2" ry="2" />
<text  x="604.54" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (1 samples, 0.02%)</title><rect x="356.3" y="1333" width="0.2" height="15.0" fill="rgb(231,168,2)" rx="2" ry="2" />
<text  x="359.28" y="1343.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.04%)</title><rect x="51.5" y="1381" width="0.4" height="15.0" fill="rgb(236,108,45)" rx="2" ry="2" />
<text  x="54.47" y="1391.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (1 samples, 0.02%)</title><rect x="1013.1" y="1349" width="0.2" height="15.0" fill="rgb(253,127,42)" rx="2" ry="2" />
<text  x="1016.11" y="1359.5" ></text>
</g>
<g >
<title>__strlen_avx2 (1 samples, 0.02%)</title><rect x="20.1" y="1557" width="0.3" height="15.0" fill="rgb(215,55,52)" rx="2" ry="2" />
<text  x="23.15" y="1567.5" ></text>
</g>
<g >
<title>std::hash&lt;auth::resource&gt;::hash_data (13 samples, 0.24%)</title><rect x="793.9" y="1285" width="2.8" height="15.0" fill="rgb(219,94,15)" rx="2" ry="2" />
<text  x="796.87" y="1295.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (5 samples, 0.09%)</title><rect x="894.9" y="1429" width="1.1" height="15.0" fill="rgb(205,196,9)" rx="2" ry="2" />
<text  x="897.89" y="1439.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::contains&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (10 samples, 0.19%)</title><rect x="833.1" y="1541" width="2.2" height="15.0" fill="rgb(230,83,16)" rx="2" ry="2" />
<text  x="836.13" y="1551.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (2 samples, 0.04%)</title><rect x="80.8" y="1541" width="0.4" height="15.0" fill="rgb(242,17,18)" rx="2" ry="2" />
<text  x="83.80" y="1551.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.02%)</title><rect x="22.4" y="1541" width="0.2" height="15.0" fill="rgb(251,41,41)" rx="2" ry="2" />
<text  x="25.35" y="1551.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (37 samples, 0.69%)</title><rect x="671.9" y="1653" width="8.2" height="15.0" fill="rgb(205,220,48)" rx="2" ry="2" />
<text  x="674.90" y="1663.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.04%)</title><rect x="38.7" y="1445" width="0.4" height="15.0" fill="rgb(220,217,38)" rx="2" ry="2" />
<text  x="41.67" y="1455.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (6 samples, 0.11%)</title><rect x="719.5" y="1557" width="1.4" height="15.0" fill="rgb(207,195,49)" rx="2" ry="2" />
<text  x="722.54" y="1567.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (1 samples, 0.02%)</title><rect x="695.1" y="1605" width="0.2" height="15.0" fill="rgb(244,29,14)" rx="2" ry="2" />
<text  x="698.06" y="1615.5" ></text>
</g>
<g >
<title>seastar::lambda_task&lt;seastar::with_scheduling_group&lt;compaction_manager::submit (1 samples, 0.02%)</title><rect x="1130.0" y="1653" width="0.2" height="15.0" fill="rgb(247,154,11)" rx="2" ry="2" />
<text  x="1133.01" y="1663.5" ></text>
</g>
<g >
<title>bytes_view_hasher::finalize (4 samples, 0.07%)</title><rect x="746.0" y="1413" width="0.9" height="15.0" fill="rgb(205,166,7)" rx="2" ry="2" />
<text  x="749.01" y="1423.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="469" width="0.3" height="15.0" fill="rgb(215,159,15)" rx="2" ry="2" />
<text  x="13.44" y="479.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;11ul, cql3::expr::untyped_constant&gt; (1 samples, 0.02%)</title><rect x="53.7" y="1285" width="0.2" height="15.0" fill="rgb(209,86,13)" rx="2" ry="2" />
<text  x="56.67" y="1295.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.02%)</title><rect x="44.8" y="1349" width="0.3" height="15.0" fill="rgb(227,114,40)" rx="2" ry="2" />
<text  x="47.85" y="1359.5" ></text>
</g>
<g >
<title>schema_registry_entry::get_schema (3 samples, 0.06%)</title><rect x="102.0" y="1589" width="0.6" height="15.0" fill="rgb(220,34,46)" rx="2" ry="2" />
<text  x="104.97" y="1599.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql_transport::messages::result_message::void_message&gt;::~shared_ptr_count_for (1 samples, 0.02%)</title><rect x="18.4" y="1669" width="0.2" height="15.0" fill="rgb(231,118,6)" rx="2" ry="2" />
<text  x="21.38" y="1679.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="56.1" y="1365" width="0.2" height="15.0" fill="rgb(226,50,38)" rx="2" ry="2" />
<text  x="59.10" y="1375.5" ></text>
</g>
<g >
<title>sstables::write&lt;unsigned short&gt; (1 samples, 0.02%)</title><rect x="17.5" y="1525" width="0.2" height="15.0" fill="rgb(236,183,8)" rx="2" ry="2" />
<text  x="20.50" y="1535.5" ></text>
</g>
<g >
<title>std::type_info::operator== (1 samples, 0.02%)</title><rect x="983.3" y="1429" width="0.3" height="15.0" fill="rgb(215,220,33)" rx="2" ry="2" />
<text  x="986.33" y="1439.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::emplace_back&lt;unsigned int const&amp;&gt; (2 samples, 0.04%)</title><rect x="1110.6" y="1573" width="0.4" height="15.0" fill="rgb(220,144,41)" rx="2" ry="2" />
<text  x="1113.60" y="1583.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, seastar::lw_shared_ptr&lt;cql3::column_condition::raw&gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, seastar::lw_shared_ptr&lt;cql3::column_condition::raw&gt; &gt; &gt; &gt;::_Vector_impl_data::_Vector_impl_data (1 samples, 0.02%)</title><rect x="61.6" y="1477" width="0.2" height="15.0" fill="rgb(236,211,21)" rx="2" ry="2" />
<text  x="64.61" y="1487.5" ></text>
</g>
<g >
<title>seastar::reactor::syscall_pollfn::poll (1 samples, 0.02%)</title><rect x="1166.8" y="1653" width="0.3" height="15.0" fill="rgb(208,38,9)" rx="2" ry="2" />
<text  x="1169.84" y="1663.5" ></text>
</g>
<g >
<title>db::schema_tables::make_schema_mutations (2 samples, 0.04%)</title><rect x="101.5" y="1589" width="0.5" height="15.0" fill="rgb(209,137,30)" rx="2" ry="2" />
<text  x="104.53" y="1599.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (1 samples, 0.02%)</title><rect x="693.1" y="1637" width="0.2" height="15.0" fill="rgb(224,59,31)" rx="2" ry="2" />
<text  x="696.08" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::~_Variant_storage (1 samples, 0.02%)</title><rect x="893.6" y="1477" width="0.2" height="15.0" fill="rgb(214,40,42)" rx="2" ry="2" />
<text  x="896.57" y="1487.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::metadata&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="658.2" y="1621" width="0.2" height="15.0" fill="rgb(240,220,8)" rx="2" ry="2" />
<text  x="661.23" y="1631.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, seastar::sharded&lt;db::view::view_update_generator&gt;::stop (1 samples, 0.02%)</title><rect x="692.2" y="1653" width="0.2" height="15.0" fill="rgb(249,35,4)" rx="2" ry="2" />
<text  x="695.19" y="1663.5" ></text>
</g>
<g >
<title>database::parse_system_tables (1 samples, 0.02%)</title><rect x="78.8" y="1413" width="0.2" height="15.0" fill="rgb(244,161,29)" rx="2" ry="2" />
<text  x="81.81" y="1423.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.02%)</title><rect x="79.0" y="1605" width="0.3" height="15.0" fill="rgb(225,74,35)" rx="2" ry="2" />
<text  x="82.04" y="1615.5" ></text>
</g>
<g >
<title>cql3::expr::expression::operator= (1 samples, 0.02%)</title><rect x="47.3" y="1461" width="0.2" height="15.0" fill="rgb(224,53,37)" rx="2" ry="2" />
<text  x="50.27" y="1471.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;void&gt;, service::storage_proxy*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt;, db::consistency_level, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, tracing::trace_state_ptr, service_permit, bool, seastar::lw_shared_ptr&lt;cdc::operation_result_tracker&gt; &gt;::operator (1 samples, 0.02%)</title><rect x="849.7" y="1493" width="0.2" height="15.0" fill="rgb(214,228,19)" rx="2" ry="2" />
<text  x="852.67" y="1503.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::construct&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (1 samples, 0.02%)</title><rect x="24.6" y="1397" width="0.2" height="15.0" fill="rgb(210,27,38)" rx="2" ry="2" />
<text  x="27.56" y="1407.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (3 samples, 0.06%)</title><rect x="51.5" y="1397" width="0.6" height="15.0" fill="rgb(239,175,44)" rx="2" ry="2" />
<text  x="54.47" y="1407.5" ></text>
</g>
<g >
<title>seastar::internal::io_getevents (1 samples, 0.02%)</title><rect x="1130.2" y="1637" width="0.2" height="15.0" fill="rgb(231,197,13)" rx="2" ry="2" />
<text  x="1133.23" y="1647.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::then_impl&lt;service::storage_proxy::query_partition_key_range_concurrent (1 samples, 0.02%)</title><rect x="78.8" y="1301" width="0.2" height="15.0" fill="rgb(223,22,4)" rx="2" ry="2" />
<text  x="81.81" y="1311.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::~small_vector (3 samples, 0.06%)</title><rect x="595.8" y="1509" width="0.7" height="15.0" fill="rgb(217,140,19)" rx="2" ry="2" />
<text  x="598.81" y="1519.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (1 samples, 0.02%)</title><rect x="59.4" y="1397" width="0.2" height="15.0" fill="rgb(222,41,20)" rx="2" ry="2" />
<text  x="62.41" y="1407.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::operator== (1 samples, 0.02%)</title><rect x="1119.4" y="1413" width="0.2" height="15.0" fill="rgb(217,64,16)" rx="2" ry="2" />
<text  x="1122.42" y="1423.5" ></text>
</g>
<g >
<title>row_cache::invalidate (1 samples, 0.02%)</title><rect x="690.9" y="1573" width="0.2" height="15.0" fill="rgb(209,203,14)" rx="2" ry="2" />
<text  x="693.87" y="1583.5" ></text>
</g>
<g >
<title>database::find_column_family (1 samples, 0.02%)</title><rect x="995.5" y="1413" width="0.2" height="15.0" fill="rgb(218,170,35)" rx="2" ry="2" />
<text  x="998.47" y="1423.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.02%)</title><rect x="17.3" y="1637" width="0.2" height="15.0" fill="rgb(252,117,39)" rx="2" ry="2" />
<text  x="20.28" y="1647.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_M_reset (1 samples, 0.02%)</title><rect x="736.5" y="1541" width="0.2" height="15.0" fill="rgb(232,147,29)" rx="2" ry="2" />
<text  x="739.53" y="1551.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (4 samples, 0.07%)</title><rect x="812.8" y="1429" width="0.9" height="15.0" fill="rgb(232,217,40)" rx="2" ry="2" />
<text  x="815.84" y="1439.5" ></text>
</g>
<g >
<title>partition_builder::accept_row (1 samples, 0.02%)</title><rect x="101.1" y="1541" width="0.2" height="15.0" fill="rgb(214,43,31)" rx="2" ry="2" />
<text  x="104.09" y="1551.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, enum_set&lt;super_enum&lt;auth::permission,  (54 samples, 1.01%)</title><rect x="784.8" y="1381" width="11.9" height="15.0" fill="rgb(217,182,6)" rx="2" ry="2" />
<text  x="787.83" y="1391.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::set_urgent_state (6 samples, 0.11%)</title><rect x="673.0" y="1621" width="1.3" height="15.0" fill="rgb(230,17,29)" rx="2" ry="2" />
<text  x="676.01" y="1631.5" ></text>
</g>
<g >
<title>table::query (7 samples, 0.13%)</title><rect x="1165.1" y="1653" width="1.5" height="15.0" fill="rgb(236,192,1)" rx="2" ry="2" />
<text  x="1168.08" y="1663.5" ></text>
</g>
<g >
<title>tombstone::operator&lt;=&gt; (1 samples, 0.02%)</title><rect x="1116.3" y="1381" width="0.3" height="15.0" fill="rgb(226,42,16)" rx="2" ry="2" />
<text  x="1119.33" y="1391.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.02%)</title><rect x="1012.2" y="1349" width="0.2" height="15.0" fill="rgb(210,48,21)" rx="2" ry="2" />
<text  x="1015.23" y="1359.5" ></text>
</g>
<g >
<title>ser::serializer&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;::write&lt;seastar::memory_output_stream&lt;__gnu_cxx::__normal_iterator&lt;seastar::temporary_buffer&lt;char&gt;*, std::vector&lt;seastar::temporary_buffer&lt;char&gt;, std::allocator&lt;seastar::temporary_buffer&lt;char&gt; &gt; &gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="1117.2" y="1381" width="0.2" height="15.0" fill="rgb(242,222,3)" rx="2" ry="2" />
<text  x="1120.21" y="1391.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;schema_registry_entry&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;schema_registry_entry&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (14 samples, 0.26%)</title><rect x="958.0" y="1477" width="3.1" height="15.0" fill="rgb(238,57,20)" rx="2" ry="2" />
<text  x="960.97" y="1487.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::alloc (6 samples, 0.11%)</title><rect x="249.5" y="1253" width="1.4" height="15.0" fill="rgb(217,221,13)" rx="2" ry="2" />
<text  x="252.53" y="1263.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::close (2 samples, 0.04%)</title><rect x="1165.5" y="1589" width="0.5" height="15.0" fill="rgb(251,77,19)" rx="2" ry="2" />
<text  x="1168.52" y="1599.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::push_mutation_fragment&lt;mutation_fragment&gt; (23 samples, 0.43%)</title><rect x="205.4" y="1381" width="5.1" height="15.0" fill="rgb(252,205,53)" rx="2" ry="2" />
<text  x="208.42" y="1391.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (3 samples, 0.06%)</title><rect x="418.0" y="1317" width="0.7" height="15.0" fill="rgb(224,83,21)" rx="2" ry="2" />
<text  x="421.04" y="1327.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.02%)</title><rect x="38.7" y="1349" width="0.2" height="15.0" fill="rgb(242,27,19)" rx="2" ry="2" />
<text  x="41.67" y="1359.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (2 samples, 0.04%)</title><rect x="430.8" y="1333" width="0.5" height="15.0" fill="rgb(229,181,14)" rx="2" ry="2" />
<text  x="433.83" y="1343.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::~modification_statement (3 samples, 0.06%)</title><rect x="649.2" y="1621" width="0.6" height="15.0" fill="rgb(244,220,54)" rx="2" ry="2" />
<text  x="652.19" y="1631.5" ></text>
</g>
<g >
<title>std::pair&lt;auth::role_or_anonymous, auth::resource&gt;::pair (4 samples, 0.07%)</title><rect x="787.0" y="1365" width="0.9" height="15.0" fill="rgb(240,107,48)" rx="2" ry="2" />
<text  x="790.04" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;10ul, cql3::expr::untyped_constant&gt; (1 samples, 0.02%)</title><rect x="53.7" y="1253" width="0.2" height="15.0" fill="rgb(229,80,43)" rx="2" ry="2" />
<text  x="56.67" y="1263.5" ></text>
</g>
<g >
<title>row_cache::invalidate (1 samples, 0.02%)</title><rect x="690.9" y="1589" width="0.2" height="15.0" fill="rgb(242,107,36)" rx="2" ry="2" />
<text  x="693.87" y="1599.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (26 samples, 0.49%)</title><rect x="1121.6" y="1397" width="5.8" height="15.0" fill="rgb(253,40,53)" rx="2" ry="2" />
<text  x="1124.63" y="1407.5" ></text>
</g>
<g >
<title>seastar::data_sink::close (1 samples, 0.02%)</title><rect x="10.7" y="1509" width="0.2" height="15.0" fill="rgb(234,105,32)" rx="2" ry="2" />
<text  x="13.66" y="1519.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_805ba145d71de739aa5a49a7dfdfc7655f960912] (1 samples, 0.02%)</title><rect x="813.1" y="1413" width="0.2" height="15.0" fill="rgb(245,135,26)" rx="2" ry="2" />
<text  x="816.06" y="1423.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.02%)</title><rect x="38.9" y="1333" width="0.2" height="15.0" fill="rgb(239,73,7)" rx="2" ry="2" />
<text  x="41.89" y="1343.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (2 samples, 0.04%)</title><rect x="932.2" y="1477" width="0.4" height="15.0" fill="rgb(218,98,19)" rx="2" ry="2" />
<text  x="935.16" y="1487.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.02%)</title><rect x="426.2" y="1381" width="0.2" height="15.0" fill="rgb(244,95,46)" rx="2" ry="2" />
<text  x="429.20" y="1391.5" ></text>
</g>
<g >
<title>std::default_delete&lt;mutation::data&gt;::operator (2 samples, 0.04%)</title><rect x="1127.6" y="1461" width="0.4" height="15.0" fill="rgb(231,221,16)" rx="2" ry="2" />
<text  x="1130.58" y="1471.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (1 samples, 0.02%)</title><rect x="1072.7" y="1493" width="0.2" height="15.0" fill="rgb(213,59,42)" rx="2" ry="2" />
<text  x="1075.66" y="1503.5" ></text>
</g>
<g >
<title>service::storage_service::join_token_ring (1 samples, 0.02%)</title><rect x="17.3" y="1621" width="0.2" height="15.0" fill="rgb(232,223,36)" rx="2" ry="2" />
<text  x="20.28" y="1631.5" ></text>
</g>
<g >
<title>executor&lt;test_read (583 samples, 10.90%)</title><rect x="717.8" y="1637" width="128.6" height="15.0" fill="rgb(210,86,40)" rx="2" ry="2" />
<text  x="720.78" y="1647.5" >executor&lt;test_read</text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::untyped_constant&gt; (4 samples, 0.07%)</title><rect x="53.2" y="1429" width="0.9" height="15.0" fill="rgb(209,58,43)" rx="2" ry="2" />
<text  x="56.23" y="1439.5" ></text>
</g>
<g >
<title>cql3::query_processor::process_authorized_statement (24 samples, 0.45%)</title><rect x="748.2" y="1573" width="5.3" height="15.0" fill="rgb(220,176,28)" rx="2" ry="2" />
<text  x="751.22" y="1583.5" ></text>
</g>
<g >
<title>ser::writer_of_qr_cell&lt;bytes_ostream&gt;::skip_timestamp (16 samples, 0.30%)</title><rect x="389.8" y="1317" width="3.5" height="15.0" fill="rgb(210,181,31)" rx="2" ry="2" />
<text  x="392.81" y="1327.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.06%)</title><rect x="772.7" y="1445" width="0.7" height="15.0" fill="rgb(236,43,15)" rx="2" ry="2" />
<text  x="775.70" y="1455.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_singular (560 samples, 10.47%)</title><rect x="949.8" y="1525" width="123.5" height="15.0" fill="rgb(239,200,18)" rx="2" ry="2" />
<text  x="952.81" y="1535.5" >service::storag..</text>
</g>
<g >
<title>flat_mutation_reader::impl::~impl (5 samples, 0.09%)</title><rect x="568.9" y="1461" width="1.1" height="15.0" fill="rgb(244,189,9)" rx="2" ry="2" />
<text  x="571.90" y="1471.5" ></text>
</g>
<g >
<title>from_hex (5 samples, 0.09%)</title><rect x="67.1" y="1493" width="1.1" height="15.0" fill="rgb(229,51,23)" rx="2" ry="2" />
<text  x="70.13" y="1503.5" ></text>
</g>
<g >
<title>query::querier_base::close (150 samples, 2.80%)</title><rect x="564.7" y="1589" width="33.1" height="15.0" fill="rgb(254,44,10)" rx="2" ry="2" />
<text  x="567.71" y="1599.5" >qu..</text>
</g>
<g >
<title>std::locale::_S_initialize (1 samples, 0.02%)</title><rect x="82.3" y="1733" width="0.3" height="15.0" fill="rgb(251,202,37)" rx="2" ry="2" />
<text  x="85.34" y="1743.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_allocate_buckets (1 samples, 0.02%)</title><rect x="1148.3" y="1557" width="0.2" height="15.0" fill="rgb(240,83,31)" rx="2" ry="2" />
<text  x="1151.31" y="1567.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::emplace_mutation_fragment (1 samples, 0.02%)</title><rect x="79.7" y="1509" width="0.2" height="15.0" fill="rgb(227,186,28)" rx="2" ry="2" />
<text  x="82.70" y="1519.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value, std::allocator&lt;cql3::raw_value&gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="679.8" y="1621" width="0.3" height="15.0" fill="rgb(240,111,43)" rx="2" ry="2" />
<text  x="682.84" y="1631.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="885" width="0.3" height="15.0" fill="rgb(215,129,11)" rx="2" ry="2" />
<text  x="13.44" y="895.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (2 samples, 0.04%)</title><rect x="51.0" y="1397" width="0.5" height="15.0" fill="rgb(209,148,17)" rx="2" ry="2" />
<text  x="54.02" y="1407.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (1 samples, 0.02%)</title><rect x="27.6" y="1381" width="0.3" height="15.0" fill="rgb(214,2,10)" rx="2" ry="2" />
<text  x="30.64" y="1391.5" ></text>
</g>
<g >
<title>cql3::constants::setter::execute (4 samples, 0.07%)</title><rect x="853.2" y="1461" width="0.9" height="15.0" fill="rgb(206,160,50)" rx="2" ry="2" />
<text  x="856.20" y="1471.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::clear (1 samples, 0.02%)</title><rect x="466.1" y="1445" width="0.2" height="15.0" fill="rgb(238,129,16)" rx="2" ry="2" />
<text  x="469.12" y="1455.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::need_filtering (10 samples, 0.19%)</title><rect x="652.9" y="1621" width="2.2" height="15.0" fill="rgb(241,225,1)" rx="2" ry="2" />
<text  x="655.93" y="1631.5" ></text>
</g>
<g >
<title>std::forward&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (1 samples, 0.02%)</title><rect x="24.1" y="1381" width="0.2" height="15.0" fill="rgb(208,166,7)" rx="2" ry="2" />
<text  x="27.12" y="1391.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::clear (13 samples, 0.24%)</title><rect x="396.9" y="1365" width="2.8" height="15.0" fill="rgb(246,146,19)" rx="2" ry="2" />
<text  x="399.86" y="1375.5" ></text>
</g>
<g >
<title>database::apply_with_commitlog (21 samples, 0.39%)</title><rect x="1112.6" y="1461" width="4.6" height="15.0" fill="rgb(240,167,30)" rx="2" ry="2" />
<text  x="1115.58" y="1471.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;query::result&gt;::dispose (6 samples, 0.11%)</title><rect x="90.7" y="1605" width="1.3" height="15.0" fill="rgb(223,189,14)" rx="2" ry="2" />
<text  x="93.73" y="1615.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt; &gt;::invoke&lt;sstables::sstable_directory::reshape (1 samples, 0.02%)</title><rect x="15.5" y="1653" width="0.2" height="15.0" fill="rgb(231,197,27)" rx="2" ry="2" />
<text  x="18.51" y="1663.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::emplace_back&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;&amp;&gt; (4 samples, 0.07%)</title><rect x="767.6" y="1525" width="0.9" height="15.0" fill="rgb(210,66,19)" rx="2" ry="2" />
<text  x="770.63" y="1535.5" ></text>
</g>
<g >
<title>do_query_on_all_shards&lt;(anonymous namespace)::mutation_query_result_builder&gt; (3 samples, 0.06%)</title><rect x="100.4" y="1493" width="0.7" height="15.0" fill="rgb(245,217,5)" rx="2" ry="2" />
<text  x="103.43" y="1503.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (2 samples, 0.04%)</title><rect x="497.9" y="1333" width="0.4" height="15.0" fill="rgb(229,177,51)" rx="2" ry="2" />
<text  x="500.88" y="1343.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="997" width="0.3" height="15.0" fill="rgb(218,74,41)" rx="2" ry="2" />
<text  x="13.44" y="1007.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (1 samples, 0.02%)</title><rect x="587.6" y="1525" width="0.3" height="15.0" fill="rgb(224,50,54)" rx="2" ry="2" />
<text  x="590.65" y="1535.5" ></text>
</g>
<g >
<title>partition_version_ref::operator (2 samples, 0.04%)</title><rect x="526.1" y="1381" width="0.5" height="15.0" fill="rgb(218,192,15)" rx="2" ry="2" />
<text  x="529.11" y="1391.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::has_slice_or_needs_filtering (3 samples, 0.06%)</title><rect x="934.6" y="1525" width="0.7" height="15.0" fill="rgb(235,193,36)" rx="2" ry="2" />
<text  x="937.59" y="1535.5" ></text>
</g>
<g >
<title>allocation_strategy::destroy&lt;bplus::data&lt;long, intrusive_array&lt;cache_entry&gt;, dht::raw_token_less_comparator, 16ul,  (1 samples, 0.02%)</title><rect x="79.0" y="1525" width="0.3" height="15.0" fill="rgb(241,175,7)" rx="2" ry="2" />
<text  x="82.04" y="1535.5" ></text>
</g>
<g >
<title>row::~row (1 samples, 0.02%)</title><rect x="296.9" y="1349" width="0.3" height="15.0" fill="rgb(243,134,12)" rx="2" ry="2" />
<text  x="299.95" y="1359.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (1 samples, 0.02%)</title><rect x="625.8" y="1557" width="0.2" height="15.0" fill="rgb(252,76,23)" rx="2" ry="2" />
<text  x="628.81" y="1567.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_map&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::at&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt; &gt; (3 samples, 0.06%)</title><rect x="1033.2" y="1493" width="0.6" height="15.0" fill="rgb(242,143,18)" rx="2" ry="2" />
<text  x="1036.18" y="1503.5" ></text>
</g>
<g >
<title>seastar::internal::sharded_parallel_for_each (1 samples, 0.02%)</title><rect x="78.8" y="1525" width="0.2" height="15.0" fill="rgb(223,138,5)" rx="2" ry="2" />
<text  x="81.81" y="1535.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::vector (10 samples, 0.19%)</title><rect x="1023.7" y="1429" width="2.2" height="15.0" fill="rgb(216,143,53)" rx="2" ry="2" />
<text  x="1026.70" y="1439.5" ></text>
</g>
<g >
<title>make_shared_schema (1 samples, 0.02%)</title><rect x="17.1" y="1413" width="0.2" height="15.0" fill="rgb(211,177,16)" rx="2" ry="2" />
<text  x="20.06" y="1423.5" ></text>
</g>
<g >
<title>db::schema_tables::do_merge_schema (1 samples, 0.02%)</title><rect x="100.2" y="1653" width="0.2" height="15.0" fill="rgb(226,50,15)" rx="2" ry="2" />
<text  x="103.21" y="1663.5" ></text>
</g>
<g >
<title>make_combined_reader (85 samples, 1.59%)</title><rect x="456.2" y="1493" width="18.7" height="15.0" fill="rgb(211,226,49)" rx="2" ry="2" />
<text  x="459.19" y="1503.5" ></text>
</g>
<g >
<title>service::storage_proxy::create_write_response_handler_helper (4 samples, 0.07%)</title><rect x="1126.5" y="1365" width="0.9" height="15.0" fill="rgb(247,224,35)" rx="2" ry="2" />
<text  x="1129.48" y="1375.5" ></text>
</g>
<g >
<title>frozen_mutation::frozen_mutation (18 samples, 0.34%)</title><rect x="1122.3" y="1333" width="4.0" height="15.0" fill="rgb(230,80,52)" rx="2" ry="2" />
<text  x="1125.29" y="1343.5" ></text>
</g>
<g >
<title>row_tombstone::apply (2 samples, 0.04%)</title><rect x="419.1" y="1365" width="0.5" height="15.0" fill="rgb(234,116,42)" rx="2" ry="2" />
<text  x="422.14" y="1375.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (4 samples, 0.07%)</title><rect x="639.5" y="1637" width="0.9" height="15.0" fill="rgb(207,217,25)" rx="2" ry="2" />
<text  x="642.48" y="1647.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="58.7" y="1429" width="0.3" height="15.0" fill="rgb(212,172,15)" rx="2" ry="2" />
<text  x="61.74" y="1439.5" ></text>
</g>
<g >
<title>service::client_state::has_access (9 samples, 0.17%)</title><rect x="75.1" y="1589" width="2.0" height="15.0" fill="rgb(239,142,37)" rx="2" ry="2" />
<text  x="78.07" y="1599.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.07%)</title><rect x="823.6" y="1525" width="0.9" height="15.0" fill="rgb(252,142,48)" rx="2" ry="2" />
<text  x="826.65" y="1535.5" ></text>
</g>
<g >
<title>std::__optional_hash_call_base&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, true&gt;::operator (1 samples, 0.02%)</title><rect x="807.3" y="1429" width="0.2" height="15.0" fill="rgb(210,132,4)" rx="2" ry="2" />
<text  x="810.33" y="1439.5" ></text>
</g>
<g >
<title>rows_entry::tri_compare::operator (1 samples, 0.02%)</title><rect x="101.1" y="1493" width="0.2" height="15.0" fill="rgb(240,87,12)" rx="2" ry="2" />
<text  x="104.09" y="1503.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::do_get_limit (1 samples, 0.02%)</title><rect x="936.8" y="1573" width="0.2" height="15.0" fill="rgb(250,75,33)" rx="2" ry="2" />
<text  x="939.80" y="1583.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::get0 (1 samples, 0.02%)</title><rect x="97.6" y="1637" width="0.2" height="15.0" fill="rgb(218,168,13)" rx="2" ry="2" />
<text  x="100.56" y="1647.5" ></text>
</g>
<g >
<title>double_decker&lt;long, memtable_entry, dht::raw_token_less_comparator, dht::ring_position_comparator, 16,  (88 samples, 1.64%)</title><rect x="479.6" y="1477" width="19.4" height="15.0" fill="rgb(224,66,49)" rx="2" ry="2" />
<text  x="482.57" y="1487.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_erase_at_end (1 samples, 0.02%)</title><rect x="397.3" y="1349" width="0.2" height="15.0" fill="rgb(226,179,44)" rx="2" ry="2" />
<text  x="400.30" y="1359.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_p (1 samples, 0.02%)</title><rect x="36.9" y="1477" width="0.2" height="15.0" fill="rgb(217,188,2)" rx="2" ry="2" />
<text  x="39.91" y="1487.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::statement_restrictions (13 samples, 0.24%)</title><rect x="69.1" y="1557" width="2.9" height="15.0" fill="rgb(217,70,23)" rx="2" ry="2" />
<text  x="72.11" y="1567.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (4 samples, 0.07%)</title><rect x="979.1" y="1381" width="0.9" height="15.0" fill="rgb(232,142,26)" rx="2" ry="2" />
<text  x="982.14" y="1391.5" ></text>
</g>
</g>
</svg>
