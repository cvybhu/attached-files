<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="2134" onload="init(evt)" viewBox="0 0 1200 2134" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="2134.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="2117" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="2117" > </text>
<g id="frames">
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="654.8" y="1861" width="0.2" height="15.0" fill="rgb(235,59,48)" rx="2" ry="2" />
<text  x="657.79" y="1871.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (4 samples, 0.08%)</title><rect x="1085.6" y="1781" width="0.9" height="15.0" fill="rgb(247,188,14)" rx="2" ry="2" />
<text  x="1088.64" y="1791.5" ></text>
</g>
<g >
<title>basic_atomic_cell_view&lt; (15 samples, 0.29%)</title><rect x="377.5" y="1589" width="3.4" height="15.0" fill="rgb(205,40,18)" rx="2" ry="2" />
<text  x="380.54" y="1599.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.02%)</title><rect x="11.8" y="1925" width="0.2" height="15.0" fill="rgb(234,163,3)" rx="2" ry="2" />
<text  x="14.82" y="1935.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;tracking_allocator&lt;mutation_fragment&gt; &gt;::_S_destroy&lt;tracking_allocator&lt;mutation_fragment&gt;, mutation_fragment&gt; (2 samples, 0.04%)</title><rect x="298.4" y="1685" width="0.4" height="15.0" fill="rgb(239,112,6)" rx="2" ry="2" />
<text  x="301.36" y="1695.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="1104.0" y="1829" width="0.2" height="15.0" fill="rgb(235,223,10)" rx="2" ry="2" />
<text  x="1107.01" y="1839.5" ></text>
</g>
<g >
<title>rows_entry::rows_entry (1 samples, 0.02%)</title><rect x="106.9" y="1653" width="0.2" height="15.0" fill="rgb(215,228,5)" rx="2" ry="2" />
<text  x="109.88" y="1663.5" ></text>
</g>
<g >
<title>atomic_cell_type::make_live&lt;ser::buffer_view&lt;bytes_ostream::fragment_iterator&gt; &gt; (4 samples, 0.08%)</title><rect x="1121.0" y="1637" width="0.9" height="15.0" fill="rgb(220,126,13)" rx="2" ry="2" />
<text  x="1124.03" y="1647.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::lsa_partition_reader::next_row (3 samples, 0.06%)</title><rect x="82.6" y="1685" width="0.7" height="15.0" fill="rgb(246,193,43)" rx="2" ry="2" />
<text  x="85.60" y="1695.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.10%)</title><rect x="854.4" y="1845" width="1.2" height="15.0" fill="rgb(241,209,28)" rx="2" ry="2" />
<text  x="857.45" y="1855.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;enum_set&lt;super_enum&lt;auth::permission,  (2 samples, 0.04%)</title><rect x="824.3" y="1733" width="0.4" height="15.0" fill="rgb(239,116,0)" rx="2" ry="2" />
<text  x="827.27" y="1743.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value, std::allocator&lt;cql3::raw_value&gt; &gt;::~vector (3 samples, 0.06%)</title><rect x="687.7" y="1877" width="0.7" height="15.0" fill="rgb(205,5,8)" rx="2" ry="2" />
<text  x="690.69" y="1887.5" ></text>
</g>
<g >
<title>allocation_strategy::get_standard_migrator&lt;blob_storage&gt; (1 samples, 0.02%)</title><rect x="231.0" y="1477" width="0.2" height="15.0" fill="rgb(224,140,31)" rx="2" ry="2" />
<text  x="233.98" y="1487.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (11 samples, 0.21%)</title><rect x="1050.5" y="1733" width="2.5" height="15.0" fill="rgb(247,37,1)" rx="2" ry="2" />
<text  x="1053.47" y="1743.5" ></text>
</g>
<g >
<title>bytes_view_hasher::update (3 samples, 0.06%)</title><rect x="766.6" y="1685" width="0.7" height="15.0" fill="rgb(224,209,8)" rx="2" ry="2" />
<text  x="769.64" y="1695.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (2 samples, 0.04%)</title><rect x="39.7" y="1685" width="0.5" height="15.0" fill="rgb(239,156,2)" rx="2" ry="2" />
<text  x="42.72" y="1695.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.08%)</title><rect x="1058.6" y="1733" width="0.9" height="15.0" fill="rgb(222,172,39)" rx="2" ry="2" />
<text  x="1061.64" y="1743.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;dht::ring_position&gt;::wrapping_interval (4 samples, 0.08%)</title><rect x="924.6" y="1781" width="0.9" height="15.0" fill="rgb(227,143,11)" rx="2" ry="2" />
<text  x="927.55" y="1791.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (1 samples, 0.02%)</title><rect x="1022.6" y="1573" width="0.2" height="15.0" fill="rgb(230,7,28)" rx="2" ry="2" />
<text  x="1025.56" y="1583.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::do_get_limit (2 samples, 0.04%)</title><rect x="947.9" y="1845" width="0.5" height="15.0" fill="rgb(246,93,17)" rx="2" ry="2" />
<text  x="950.92" y="1855.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (14 samples, 0.27%)</title><rect x="675.4" y="1909" width="3.2" height="15.0" fill="rgb(206,18,42)" rx="2" ry="2" />
<text  x="678.44" y="1919.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::set&lt;service::storage_proxy_coordinator_query_result&gt; (2 samples, 0.04%)</title><rect x="1140.1" y="1893" width="0.4" height="15.0" fill="rgb(253,115,13)" rx="2" ry="2" />
<text  x="1143.09" y="1903.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::~partition_snapshot_flat_reader (1 samples, 0.02%)</title><rect x="1165.3" y="1781" width="0.2" height="15.0" fill="rgb(231,156,52)" rx="2" ry="2" />
<text  x="1168.27" y="1791.5" ></text>
</g>
<g >
<title>boost::circular_buffer&lt;long, std::allocator&lt;long&gt; &gt;::push_back_impl&lt;long const&amp;&gt; (1 samples, 0.02%)</title><rect x="693.8" y="1861" width="0.2" height="15.0" fill="rgb(205,39,24)" rx="2" ry="2" />
<text  x="696.81" y="1871.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (4 samples, 0.08%)</title><rect x="806.6" y="1557" width="0.9" height="15.0" fill="rgb(216,111,22)" rx="2" ry="2" />
<text  x="809.57" y="1567.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::operator= (1 samples, 0.02%)</title><rect x="883.7" y="1893" width="0.2" height="15.0" fill="rgb(230,0,31)" rx="2" ry="2" />
<text  x="886.71" y="1903.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (1 samples, 0.02%)</title><rect x="127.5" y="1861" width="0.3" height="15.0" fill="rgb(247,54,0)" rx="2" ry="2" />
<text  x="130.52" y="1871.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_restrictions::size (1 samples, 0.02%)</title><rect x="657.7" y="1893" width="0.3" height="15.0" fill="rgb(226,170,2)" rx="2" ry="2" />
<text  x="660.74" y="1903.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::move_it (1 samples, 0.02%)</title><rect x="681.6" y="1893" width="0.2" height="15.0" fill="rgb(231,205,6)" rx="2" ry="2" />
<text  x="684.56" y="1903.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::got_cl (3 samples, 0.06%)</title><rect x="710.8" y="1893" width="0.7" height="15.0" fill="rgb(211,67,22)" rx="2" ry="2" />
<text  x="713.83" y="1903.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (1 samples, 0.02%)</title><rect x="933.2" y="1797" width="0.2" height="15.0" fill="rgb(233,134,52)" rx="2" ry="2" />
<text  x="936.17" y="1807.5" ></text>
</g>
<g >
<title>service::client_state::has_column_family_access (263 samples, 5.06%)</title><rect x="782.8" y="1829" width="59.6" height="15.0" fill="rgb(229,129,35)" rx="2" ry="2" />
<text  x="785.75" y="1839.5" >servic..</text>
</g>
<g >
<title>malloc (3 samples, 0.06%)</title><rect x="615.5" y="1797" width="0.7" height="15.0" fill="rgb(254,223,40)" rx="2" ry="2" />
<text  x="618.54" y="1807.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::disable_abort_on_alloc_failure_temporarily (1 samples, 0.02%)</title><rect x="551.6" y="1749" width="0.2" height="15.0" fill="rgb(216,104,45)" rx="2" ry="2" />
<text  x="554.56" y="1759.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_Optional_payload_base (1 samples, 0.02%)</title><rect x="941.3" y="1781" width="0.3" height="15.0" fill="rgb(248,26,30)" rx="2" ry="2" />
<text  x="944.34" y="1791.5" ></text>
</g>
<g >
<title>partition_key::from_range&lt;std::vector&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, std::allocator&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt; &gt; (12 samples, 0.23%)</title><rect x="560.6" y="1797" width="2.8" height="15.0" fill="rgb(224,118,17)" rx="2" ry="2" />
<text  x="563.64" y="1807.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (5 samples, 0.10%)</title><rect x="42.9" y="1717" width="1.1" height="15.0" fill="rgb(227,87,15)" rx="2" ry="2" />
<text  x="45.90" y="1727.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, seastar::shared_ptr&lt;service::abstract_write_response_handler&gt; &gt;, std::allocator&lt;std::pair&lt;unsigned long const, seastar::shared_ptr&lt;service::abstract_write_response_handler&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (1 samples, 0.02%)</title><rect x="1127.4" y="1669" width="0.2" height="15.0" fill="rgb(224,40,42)" rx="2" ry="2" />
<text  x="1130.38" y="1679.5" ></text>
</g>
<g >
<title>row_cache::do_update (1 samples, 0.02%)</title><rect x="11.8" y="1989" width="0.2" height="15.0" fill="rgb(223,191,23)" rx="2" ry="2" />
<text  x="14.82" y="1999.5" ></text>
</g>
<g >
<title>empty_flat_reader::empty_flat_reader (7 samples, 0.13%)</title><rect x="548.8" y="1685" width="1.6" height="15.0" fill="rgb(212,25,23)" rx="2" ry="2" />
<text  x="551.84" y="1695.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*&gt; &gt;::deque (1 samples, 0.02%)</title><rect x="20.4" y="1733" width="0.3" height="15.0" fill="rgb(227,45,12)" rx="2" ry="2" />
<text  x="23.44" y="1743.5" ></text>
</g>
<g >
<title>seastar::reactor::add_timer (1 samples, 0.02%)</title><rect x="1023.0" y="1573" width="0.2" height="15.0" fill="rgb(254,17,11)" rx="2" ry="2" />
<text  x="1026.02" y="1583.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::operator== (1 samples, 0.02%)</title><rect x="78.7" y="1653" width="0.3" height="15.0" fill="rgb(243,131,51)" rx="2" ry="2" />
<text  x="81.74" y="1663.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (5 samples, 0.10%)</title><rect x="214.2" y="1573" width="1.1" height="15.0" fill="rgb(242,94,3)" rx="2" ry="2" />
<text  x="217.19" y="1583.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (2 samples, 0.04%)</title><rect x="796.8" y="1733" width="0.5" height="15.0" fill="rgb(244,10,43)" rx="2" ry="2" />
<text  x="799.82" y="1743.5" ></text>
</g>
<g >
<title>make_combined_reader (114 samples, 2.19%)</title><rect x="449.2" y="1765" width="25.9" height="15.0" fill="rgb(207,176,35)" rx="2" ry="2" />
<text  x="452.24" y="1775.5" >m..</text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.02%)</title><rect x="59.5" y="1621" width="0.2" height="15.0" fill="rgb(205,49,4)" rx="2" ry="2" />
<text  x="62.46" y="1631.5" ></text>
</g>
<g >
<title>database::find_column_family (2 samples, 0.04%)</title><rect x="1011.2" y="1669" width="0.5" height="15.0" fill="rgb(248,75,49)" rx="2" ry="2" />
<text  x="1014.22" y="1679.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::visit&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (1 samples, 0.02%)</title><rect x="701.3" y="1557" width="0.2" height="15.0" fill="rgb(227,158,18)" rx="2" ry="2" />
<text  x="704.30" y="1567.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.06%)</title><rect x="550.4" y="1685" width="0.7" height="15.0" fill="rgb(245,181,12)" rx="2" ry="2" />
<text  x="553.43" y="1695.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.02%)</title><rect x="1139.9" y="1909" width="0.2" height="15.0" fill="rgb(246,200,12)" rx="2" ry="2" />
<text  x="1142.86" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_nodes (1 samples, 0.02%)</title><rect x="695.2" y="1861" width="0.2" height="15.0" fill="rgb(214,55,1)" rx="2" ry="2" />
<text  x="698.18" y="1871.5" ></text>
</g>
<g >
<title>query::result::builder::build (7 samples, 0.13%)</title><rect x="608.1" y="1861" width="1.5" height="15.0" fill="rgb(233,200,37)" rx="2" ry="2" />
<text  x="611.05" y="1871.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::small_vector (1 samples, 0.02%)</title><rect x="470.6" y="1701" width="0.2" height="15.0" fill="rgb(218,21,20)" rx="2" ry="2" />
<text  x="473.57" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.5" y="1477" width="0.2" height="15.0" fill="rgb(235,157,29)" rx="2" ry="2" />
<text  x="13.45" y="1487.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::digest_read_resolver&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="704.7" y="1893" width="0.2" height="15.0" fill="rgb(243,153,52)" rx="2" ry="2" />
<text  x="707.70" y="1903.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.02%)</title><rect x="730.3" y="1765" width="0.3" height="15.0" fill="rgb(250,147,53)" rx="2" ry="2" />
<text  x="733.34" y="1775.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.02%)</title><rect x="40.9" y="1717" width="0.2" height="15.0" fill="rgb(237,217,15)" rx="2" ry="2" />
<text  x="43.86" y="1727.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="685.0" y="1877" width="0.2" height="15.0" fill="rgb(214,57,35)" rx="2" ry="2" />
<text  x="687.97" y="1887.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::partition_snapshot_flat_reader&lt;schema const&amp;, flush_memory_accounter&amp;&gt; (1 samples, 0.02%)</title><rect x="81.7" y="1765" width="0.2" height="15.0" fill="rgb(238,155,21)" rx="2" ry="2" />
<text  x="84.69" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.5" y="1333" width="0.2" height="15.0" fill="rgb(254,182,33)" rx="2" ry="2" />
<text  x="13.45" y="1343.5" ></text>
</g>
<g >
<title>cql_transport::messages::result_message::rows::rows (2 samples, 0.04%)</title><rect x="668.6" y="1861" width="0.5" height="15.0" fill="rgb(214,111,26)" rx="2" ry="2" />
<text  x="671.63" y="1871.5" ></text>
</g>
<g >
<title>seastar::metrics::metric_groups::add_group (1 samples, 0.02%)</title><rect x="17.5" y="1781" width="0.2" height="15.0" fill="rgb(252,111,32)" rx="2" ry="2" />
<text  x="20.49" y="1791.5" ></text>
</g>
<g >
<title>make_empty_flat_reader (18 samples, 0.35%)</title><rect x="547.5" y="1733" width="4.1" height="15.0" fill="rgb(224,56,36)" rx="2" ry="2" />
<text  x="550.48" y="1743.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (2 samples, 0.04%)</title><rect x="1087.5" y="1797" width="0.4" height="15.0" fill="rgb(245,228,46)" rx="2" ry="2" />
<text  x="1090.45" y="1807.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (1 samples, 0.02%)</title><rect x="756.0" y="1797" width="0.2" height="15.0" fill="rgb(239,66,1)" rx="2" ry="2" />
<text  x="758.98" y="1807.5" ></text>
</g>
<g >
<title>sstables::mc::writer::write_cells (1 samples, 0.02%)</title><rect x="83.5" y="1765" width="0.2" height="15.0" fill="rgb(209,98,19)" rx="2" ry="2" />
<text  x="86.51" y="1775.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (2 samples, 0.04%)</title><rect x="45.6" y="1589" width="0.5" height="15.0" fill="rgb(244,89,5)" rx="2" ry="2" />
<text  x="48.62" y="1599.5" ></text>
</g>
<g >
<title>operator new (18 samples, 0.35%)</title><rect x="1011.9" y="1669" width="4.1" height="15.0" fill="rgb(224,21,42)" rx="2" ry="2" />
<text  x="1014.90" y="1679.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::check_access (308 samples, 5.92%)</title><rect x="772.8" y="1845" width="69.8" height="15.0" fill="rgb(236,75,41)" rx="2" ry="2" />
<text  x="775.77" y="1855.5" >cql3::s..</text>
</g>
<g >
<title>seastar::memory::cpu_pages::allocate_large_and_trim (2 samples, 0.04%)</title><rect x="566.8" y="1701" width="0.4" height="15.0" fill="rgb(251,132,15)" rx="2" ry="2" />
<text  x="569.76" y="1711.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (2 samples, 0.04%)</title><rect x="1011.2" y="1637" width="0.5" height="15.0" fill="rgb(246,62,14)" rx="2" ry="2" />
<text  x="1014.22" y="1647.5" ></text>
</g>
<g >
<title>row::row (154 samples, 2.96%)</title><rect x="215.3" y="1573" width="35.0" height="15.0" fill="rgb(221,227,52)" rx="2" ry="2" />
<text  x="218.33" y="1583.5" >ro..</text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (4 samples, 0.08%)</title><rect x="43.1" y="1701" width="0.9" height="15.0" fill="rgb(207,174,5)" rx="2" ry="2" />
<text  x="46.12" y="1711.5" ></text>
</g>
<g >
<title>boost::dynamic_bitset&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::init_from_unsigned_long (1 samples, 0.02%)</title><rect x="75.1" y="1765" width="0.2" height="15.0" fill="rgb(221,90,30)" rx="2" ry="2" />
<text  x="78.11" y="1775.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_M_reset (2 samples, 0.04%)</title><rect x="606.9" y="1813" width="0.5" height="15.0" fill="rgb(222,65,12)" rx="2" ry="2" />
<text  x="609.92" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.5" y="2005" width="0.2" height="15.0" fill="rgb(232,143,24)" rx="2" ry="2" />
<text  x="13.45" y="2015.5" ></text>
</g>
<g >
<title>abstract_type::is_collection (1 samples, 0.02%)</title><rect x="69.4" y="1781" width="0.3" height="15.0" fill="rgb(224,2,17)" rx="2" ry="2" />
<text  x="72.44" y="1791.5" ></text>
</g>
<g >
<title>service::client_state::validate_login (1 samples, 0.02%)</title><rect x="826.5" y="1781" width="0.3" height="15.0" fill="rgb(214,200,20)" rx="2" ry="2" />
<text  x="829.54" y="1791.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::~CqlParser (1 samples, 0.02%)</title><rect x="20.9" y="1845" width="0.2" height="15.0" fill="rgb(251,70,44)" rx="2" ry="2" />
<text  x="23.89" y="1855.5" ></text>
</g>
<g >
<title>cql3::query_options::get_value_at (2 samples, 0.04%)</title><rect x="905.7" y="1749" width="0.5" height="15.0" fill="rgb(235,207,42)" rx="2" ry="2" />
<text  x="908.72" y="1759.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (1 samples, 0.02%)</title><rect x="138.2" y="1781" width="0.2" height="15.0" fill="rgb(212,7,24)" rx="2" ry="2" />
<text  x="141.19" y="1791.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.02%)</title><rect x="24.5" y="1653" width="0.2" height="15.0" fill="rgb(238,77,0)" rx="2" ry="2" />
<text  x="27.52" y="1663.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_Optional_payload_base (1 samples, 0.02%)</title><rect x="555.9" y="1829" width="0.2" height="15.0" fill="rgb(221,91,0)" rx="2" ry="2" />
<text  x="558.87" y="1839.5" ></text>
</g>
<g >
<title>seastar::execution_stage::flush (2 samples, 0.04%)</title><rect x="769.8" y="1781" width="0.5" height="15.0" fill="rgb(208,106,37)" rx="2" ry="2" />
<text  x="772.82" y="1791.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::whereClause (18 samples, 0.35%)</title><rect x="57.2" y="1781" width="4.1" height="15.0" fill="rgb(238,68,17)" rx="2" ry="2" />
<text  x="60.19" y="1791.5" ></text>
</g>
<g >
<title>bytes_ostream::alloc_new (1 samples, 0.02%)</title><rect x="1130.8" y="1509" width="0.2" height="15.0" fill="rgb(226,7,14)" rx="2" ry="2" />
<text  x="1133.78" y="1519.5" ></text>
</g>
<g >
<title>ser::after_qr_cell__value&lt;bytes_ostream&gt;::skip_ttl (1 samples, 0.02%)</title><rect x="699.7" y="1669" width="0.2" height="15.0" fill="rgb(242,212,4)" rx="2" ry="2" />
<text  x="702.71" y="1679.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::move_it (1 samples, 0.02%)</title><rect x="715.8" y="1893" width="0.2" height="15.0" fill="rgb(239,16,35)" rx="2" ry="2" />
<text  x="718.82" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, query::non_null_data_value&gt;, true&gt; &gt; &gt;::_M_allocate_node&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, query::non_null_data_value&gt; const&amp;&gt; (1 samples, 0.02%)</title><rect x="107.1" y="1717" width="0.2" height="15.0" fill="rgb(230,116,23)" rx="2" ry="2" />
<text  x="110.10" y="1727.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.02%)</title><rect x="47.2" y="1605" width="0.2" height="15.0" fill="rgb(211,65,25)" rx="2" ry="2" />
<text  x="50.21" y="1615.5" ></text>
</g>
<g >
<title>db::system_keyspace::make (1 samples, 0.02%)</title><rect x="17.3" y="1749" width="0.2" height="15.0" fill="rgb(218,126,6)" rx="2" ry="2" />
<text  x="20.26" y="1759.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;std::function&lt;std::function&lt;partition_presence_checker_result  (1 samples, 0.02%)</title><rect x="11.8" y="1941" width="0.2" height="15.0" fill="rgb(235,224,25)" rx="2" ry="2" />
<text  x="14.82" y="1951.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;11ul, cql3::expr::untyped_constant, cql3::expr::untyped_constant, void&gt; (2 samples, 0.04%)</title><rect x="52.7" y="1653" width="0.4" height="15.0" fill="rgb(243,129,29)" rx="2" ry="2" />
<text  x="55.65" y="1663.5" ></text>
</g>
<g >
<title>global_schema_ptr::global_schema_ptr (1 samples, 0.02%)</title><rect x="994.0" y="1717" width="0.2" height="15.0" fill="rgb(248,30,43)" rx="2" ry="2" />
<text  x="996.98" y="1727.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_clustering_bounds (29 samples, 0.56%)</title><rect x="1093.3" y="1829" width="6.6" height="15.0" fill="rgb(230,157,28)" rx="2" ry="2" />
<text  x="1096.35" y="1839.5" ></text>
</g>
<g >
<title>cql_duration::cql_duration (1 samples, 0.02%)</title><rect x="11.4" y="1589" width="0.2" height="15.0" fill="rgb(227,22,37)" rx="2" ry="2" />
<text  x="14.36" y="1599.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.5" y="981" width="0.2" height="15.0" fill="rgb(234,222,33)" rx="2" ry="2" />
<text  x="13.45" y="991.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="877.4" y="1701" width="0.2" height="15.0" fill="rgb(228,65,13)" rx="2" ry="2" />
<text  x="880.36" y="1711.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (2 samples, 0.04%)</title><rect x="579.2" y="1717" width="0.5" height="15.0" fill="rgb(225,165,26)" rx="2" ry="2" />
<text  x="582.24" y="1727.5" ></text>
</g>
<g >
<title>std::vector&lt;seastar::future&lt;void&gt;, std::allocator&lt;seastar::future&lt;void&gt; &gt; &gt;::reserve (1 samples, 0.02%)</title><rect x="1126.9" y="1669" width="0.3" height="15.0" fill="rgb(221,123,28)" rx="2" ry="2" />
<text  x="1129.93" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.5" y="1605" width="0.2" height="15.0" fill="rgb(214,72,30)" rx="2" ry="2" />
<text  x="13.45" y="1615.5" ></text>
</g>
<g >
<title>posix_memalign (1 samples, 0.02%)</title><rect x="242.6" y="1525" width="0.2" height="15.0" fill="rgb(235,149,1)" rx="2" ry="2" />
<text  x="245.55" y="1535.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;gms::inet_address*, __gnu_cxx::__ops::_Iter_pred&lt;std::unary_negate&lt;std::binder1st&lt;std::_Mem_fn&lt;bool  (2 samples, 0.04%)</title><rect x="1079.1" y="1733" width="0.4" height="15.0" fill="rgb(220,48,12)" rx="2" ry="2" />
<text  x="1082.06" y="1743.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_state&lt;std::tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;, seastar::future&lt;void&gt; &gt;::do_with_state&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const&amp;, auth::resource&gt; (12 samples, 0.23%)</title><rect x="784.1" y="1797" width="2.7" height="15.0" fill="rgb(247,207,47)" rx="2" ry="2" />
<text  x="787.11" y="1807.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.02%)</title><rect x="962.0" y="1797" width="0.2" height="15.0" fill="rgb(219,70,24)" rx="2" ry="2" />
<text  x="964.99" y="1807.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;clustering_key_prefix&gt;::wrapping_interval (1 samples, 0.02%)</title><rect x="1094.9" y="1781" width="0.3" height="15.0" fill="rgb(246,182,50)" rx="2" ry="2" />
<text  x="1097.94" y="1791.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_M_reset (1 samples, 0.02%)</title><rect x="1103.1" y="1829" width="0.2" height="15.0" fill="rgb(217,23,21)" rx="2" ry="2" />
<text  x="1106.11" y="1839.5" ></text>
</g>
<g >
<title>mutation_source::operator= (1 samples, 0.02%)</title><rect x="11.8" y="1957" width="0.2" height="15.0" fill="rgb(224,219,21)" rx="2" ry="2" />
<text  x="14.82" y="1967.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (1 samples, 0.02%)</title><rect x="16.4" y="1925" width="0.2" height="15.0" fill="rgb(213,190,33)" rx="2" ry="2" />
<text  x="19.35" y="1935.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (11 samples, 0.21%)</title><rect x="915.7" y="1797" width="2.5" height="15.0" fill="rgb(217,222,9)" rx="2" ry="2" />
<text  x="918.70" y="1807.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="1131.2" y="1509" width="0.3" height="15.0" fill="rgb(231,94,43)" rx="2" ry="2" />
<text  x="1134.24" y="1519.5" ></text>
</g>
<g >
<title>std::vector&lt;seastar::shared_ptr&lt;cql3::operation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::operation&gt; &gt; &gt;::_M_realloc_insert&lt;seastar::shared_ptr&lt;cql3::operation&gt; &gt; (1 samples, 0.02%)</title><rect x="70.3" y="1813" width="0.3" height="15.0" fill="rgb(231,122,52)" rx="2" ry="2" />
<text  x="73.35" y="1823.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::operator (1 samples, 0.02%)</title><rect x="76.7" y="1797" width="0.2" height="15.0" fill="rgb(229,53,50)" rx="2" ry="2" />
<text  x="79.70" y="1807.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (1 samples, 0.02%)</title><rect x="643.7" y="1893" width="0.2" height="15.0" fill="rgb(222,218,52)" rx="2" ry="2" />
<text  x="646.67" y="1903.5" ></text>
</g>
<g >
<title>auth::resource::resource (5 samples, 0.10%)</title><rect x="786.8" y="1813" width="1.2" height="15.0" fill="rgb(212,98,51)" rx="2" ry="2" />
<text  x="789.84" y="1823.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="464.2" y="1733" width="0.2" height="15.0" fill="rgb(223,55,17)" rx="2" ry="2" />
<text  x="467.21" y="1743.5" ></text>
</g>
<g >
<title>antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;::RecognizerSharedStateType&lt;antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::RecognizerSharedStateType (2 samples, 0.04%)</title><rect x="20.2" y="1781" width="0.5" height="15.0" fill="rgb(244,16,38)" rx="2" ry="2" />
<text  x="23.21" y="1791.5" ></text>
</g>
<g >
<title>service::storage_proxy_stats::split_stats::get_ep_stat (3 samples, 0.06%)</title><rect x="1043.7" y="1717" width="0.6" height="15.0" fill="rgb(207,72,51)" rx="2" ry="2" />
<text  x="1046.66" y="1727.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;std::tuple&lt;seastar::lw_shared_ptr&lt;query::result&gt;, cache_temperature&gt; &gt;::set_value&lt;std::tuple&lt;seastar::lw_shared_ptr&lt;query::result&gt;, cache_temperature&gt; &gt; (1 samples, 0.02%)</title><rect x="104.6" y="1909" width="0.2" height="15.0" fill="rgb(251,69,23)" rx="2" ry="2" />
<text  x="107.61" y="1919.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::set_urgent_state (1 samples, 0.02%)</title><rect x="681.8" y="1893" width="0.2" height="15.0" fill="rgb(210,195,21)" rx="2" ry="2" />
<text  x="684.79" y="1903.5" ></text>
</g>
<g >
<title>seastar::promise&lt;void&gt;::promise (4 samples, 0.08%)</title><rect x="132.3" y="1829" width="0.9" height="15.0" fill="rgb(214,70,52)" rx="2" ry="2" />
<text  x="135.29" y="1839.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::operator== (2 samples, 0.04%)</title><rect x="1127.6" y="1669" width="0.5" height="15.0" fill="rgb(242,68,31)" rx="2" ry="2" />
<text  x="1130.61" y="1679.5" ></text>
</g>
<g >
<title>operator delete (5 samples, 0.10%)</title><rect x="648.9" y="1909" width="1.1" height="15.0" fill="rgb(209,207,20)" rx="2" ry="2" />
<text  x="651.89" y="1919.5" ></text>
</g>
<g >
<title>std::hash&lt;std::basic_string_view&lt;signed char, std::char_traits&lt;signed char&gt; &gt; &gt;::operator (1 samples, 0.02%)</title><rect x="74.9" y="1797" width="0.2" height="15.0" fill="rgb(222,178,17)" rx="2" ry="2" />
<text  x="77.89" y="1807.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::set_urgent_state (1 samples, 0.02%)</title><rect x="672.0" y="1909" width="0.3" height="15.0" fill="rgb(220,88,8)" rx="2" ry="2" />
<text  x="675.03" y="1919.5" ></text>
</g>
<g >
<title>utils::estimated_histogram::add (6 samples, 0.12%)</title><rect x="1153.5" y="1893" width="1.3" height="15.0" fill="rgb(219,7,23)" rx="2" ry="2" />
<text  x="1156.47" y="1903.5" ></text>
</g>
<g >
<title>seastar::reactor::add_timer (1 samples, 0.02%)</title><rect x="1025.1" y="1589" width="0.2" height="15.0" fill="rgb(206,203,19)" rx="2" ry="2" />
<text  x="1028.06" y="1599.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::clone (2 samples, 0.04%)</title><rect x="480.3" y="1749" width="0.5" height="15.0" fill="rgb(252,193,24)" rx="2" ry="2" />
<text  x="483.32" y="1759.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reclaiming_disabled&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::lsa_partition_reader::next_row (4 samples, 0.08%)</title><rect x="82.4" y="1701" width="0.9" height="15.0" fill="rgb(239,94,22)" rx="2" ry="2" />
<text  x="85.37" y="1711.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.02%)</title><rect x="40.9" y="1621" width="0.2" height="15.0" fill="rgb(239,114,9)" rx="2" ry="2" />
<text  x="43.86" y="1631.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (3 samples, 0.06%)</title><rect x="95.1" y="1909" width="0.7" height="15.0" fill="rgb(238,50,45)" rx="2" ry="2" />
<text  x="98.08" y="1919.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume_in_thread&lt;sstables::sstable_writer&gt; (1 samples, 0.02%)</title><rect x="698.8" y="1733" width="0.2" height="15.0" fill="rgb(246,189,25)" rx="2" ry="2" />
<text  x="701.81" y="1743.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.02%)</title><rect x="1054.8" y="1685" width="0.2" height="15.0" fill="rgb(248,30,19)" rx="2" ry="2" />
<text  x="1057.78" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (1 samples, 0.02%)</title><rect x="11.4" y="1477" width="0.2" height="15.0" fill="rgb(232,135,49)" rx="2" ry="2" />
<text  x="14.36" y="1487.5" ></text>
</g>
<g >
<title>reader_permit::mark_unused (1 samples, 0.02%)</title><rect x="127.8" y="1877" width="0.2" height="15.0" fill="rgb(250,152,49)" rx="2" ry="2" />
<text  x="130.75" y="1887.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::allocate (14 samples, 0.27%)</title><rect x="315.6" y="1717" width="3.2" height="15.0" fill="rgb(233,12,47)" rx="2" ry="2" />
<text  x="318.61" y="1727.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (2 samples, 0.04%)</title><rect x="242.1" y="1525" width="0.5" height="15.0" fill="rgb(232,70,30)" rx="2" ry="2" />
<text  x="245.10" y="1535.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::digest_read_result&gt;::then_wrapped_nrvo&lt;void, service::abstract_read_executor::execute (12 samples, 0.23%)</title><rect x="975.8" y="1749" width="2.7" height="15.0" fill="rgb(218,45,19)" rx="2" ry="2" />
<text  x="978.83" y="1759.5" ></text>
</g>
<g >
<title>logalloc::segment::record_alloc (1 samples, 0.02%)</title><rect x="1121.3" y="1573" width="0.2" height="15.0" fill="rgb(251,187,14)" rx="2" ry="2" />
<text  x="1124.26" y="1583.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;position_in_partition&gt;::_M_reset (3 samples, 0.06%)</title><rect x="587.2" y="1733" width="0.7" height="15.0" fill="rgb(218,51,9)" rx="2" ry="2" />
<text  x="590.18" y="1743.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;std::tuple&lt;seastar::lw_shared_ptr&lt;query::result&gt;, cache_temperature&gt; &gt;::clear (1 samples, 0.02%)</title><rect x="104.4" y="1909" width="0.2" height="15.0" fill="rgb(217,9,17)" rx="2" ry="2" />
<text  x="107.38" y="1919.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (3 samples, 0.06%)</title><rect x="526.6" y="1637" width="0.7" height="15.0" fill="rgb(220,154,14)" rx="2" ry="2" />
<text  x="529.60" y="1647.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;void&gt;::set_value&lt;&gt; (1 samples, 0.02%)</title><rect x="94.6" y="1909" width="0.3" height="15.0" fill="rgb(217,0,7)" rx="2" ry="2" />
<text  x="97.63" y="1919.5" ></text>
</g>
<g >
<title>operator new (10 samples, 0.19%)</title><rect x="1040.0" y="1669" width="2.3" height="15.0" fill="rgb(229,152,51)" rx="2" ry="2" />
<text  x="1043.03" y="1679.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="879.4" y="1717" width="0.2" height="15.0" fill="rgb(218,204,1)" rx="2" ry="2" />
<text  x="882.40" y="1727.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::forward_to (2 samples, 0.04%)</title><rect x="883.0" y="1893" width="0.5" height="15.0" fill="rgb(225,101,12)" rx="2" ry="2" />
<text  x="886.03" y="1903.5" ></text>
</g>
<g >
<title>do_cql_test (275 samples, 5.29%)</title><rect x="18.2" y="1973" width="62.4" height="15.0" fill="rgb(232,35,50)" rx="2" ry="2" />
<text  x="21.17" y="1983.5" >do_cql..</text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperation (70 samples, 1.35%)</title><rect x="41.3" y="1781" width="15.9" height="15.0" fill="rgb(219,116,7)" rx="2" ry="2" />
<text  x="44.31" y="1791.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_live_sorted_endpoints (66 samples, 1.27%)</title><rect x="1065.9" y="1765" width="15.0" height="15.0" fill="rgb(240,156,47)" rx="2" ry="2" />
<text  x="1068.90" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;8ul, cql3::expr::untyped_constant&gt; (1 samples, 0.02%)</title><rect x="52.7" y="1493" width="0.2" height="15.0" fill="rgb(218,51,12)" rx="2" ry="2" />
<text  x="55.65" y="1503.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;seastar::shared_ptr&lt;cql3::relation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::relation&gt; &gt; &gt;::_M_create_storage (1 samples, 0.02%)</title><rect x="75.3" y="1845" width="0.3" height="15.0" fill="rgb(215,92,0)" rx="2" ry="2" />
<text  x="78.34" y="1855.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="54.2" y="1589" width="0.3" height="15.0" fill="rgb(206,188,2)" rx="2" ry="2" />
<text  x="57.24" y="1599.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::push_back (1 samples, 0.02%)</title><rect x="51.1" y="1669" width="0.2" height="15.0" fill="rgb(209,112,11)" rx="2" ry="2" />
<text  x="54.07" y="1679.5" ></text>
</g>
<g >
<title>db::schema_tables::add_column_to_schema_mutation (1 samples, 0.02%)</title><rect x="108.5" y="1845" width="0.2" height="15.0" fill="rgb(243,72,32)" rx="2" ry="2" />
<text  x="111.47" y="1855.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_M_set_node (1 samples, 0.02%)</title><rect x="37.2" y="1621" width="0.3" height="15.0" fill="rgb(239,48,18)" rx="2" ry="2" />
<text  x="40.23" y="1631.5" ></text>
</g>
<g >
<title>db::get_cdc_generation_mutations (1 samples, 0.02%)</title><rect x="106.2" y="1925" width="0.2" height="15.0" fill="rgb(225,187,33)" rx="2" ry="2" />
<text  x="109.20" y="1935.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;::_Tuple_impl&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const&amp;, auth::resource, void&gt; (9 samples, 0.17%)</title><rect x="784.8" y="1781" width="2.0" height="15.0" fill="rgb(221,98,47)" rx="2" ry="2" />
<text  x="787.79" y="1791.5" ></text>
</g>
<g >
<title>[[vdso]] (32 samples, 0.62%)</title><rect x="1168.4" y="2037" width="7.3" height="15.0" fill="rgb(226,8,31)" rx="2" ry="2" />
<text  x="1171.45" y="2047.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="552.0" y="1765" width="0.2" height="15.0" fill="rgb(234,9,12)" rx="2" ry="2" />
<text  x="555.01" y="1775.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (21 samples, 0.40%)</title><rect x="1129.2" y="1669" width="4.8" height="15.0" fill="rgb(252,99,27)" rx="2" ry="2" />
<text  x="1132.20" y="1679.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (33 samples, 0.63%)</title><rect x="1119.0" y="1877" width="7.5" height="15.0" fill="rgb(223,186,15)" rx="2" ry="2" />
<text  x="1121.99" y="1887.5" ></text>
</g>
<g >
<title>cql3::query_options::query_options (20 samples, 0.38%)</title><rect x="860.1" y="1845" width="4.6" height="15.0" fill="rgb(205,177,16)" rx="2" ry="2" />
<text  x="863.12" y="1855.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::emplace_back&lt;mutation_reader_merger::reader_and_fragment&gt; (2 samples, 0.04%)</title><rect x="300.9" y="1701" width="0.4" height="15.0" fill="rgb(217,187,7)" rx="2" ry="2" />
<text  x="303.86" y="1711.5" ></text>
</g>
<g >
<title>std::__equal&lt;true&gt;::equal&lt;signed char&gt; (2 samples, 0.04%)</title><rect x="745.8" y="1717" width="0.4" height="15.0" fill="rgb(212,25,39)" rx="2" ry="2" />
<text  x="748.77" y="1727.5" ></text>
</g>
<g >
<title>seastar::gate::enter (1 samples, 0.02%)</title><rect x="1031.4" y="1653" width="0.2" height="15.0" fill="rgb(208,25,45)" rx="2" ry="2" />
<text  x="1034.41" y="1663.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.04%)</title><rect x="589.7" y="1765" width="0.4" height="15.0" fill="rgb(227,24,42)" rx="2" ry="2" />
<text  x="592.68" y="1775.5" ></text>
</g>
<g >
<title>std::__apply_impl&lt;seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (33 samples, 0.63%)</title><rect x="1119.0" y="1893" width="7.5" height="15.0" fill="rgb(234,114,33)" rx="2" ry="2" />
<text  x="1121.99" y="1903.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.02%)</title><rect x="205.1" y="1637" width="0.2" height="15.0" fill="rgb(234,36,44)" rx="2" ry="2" />
<text  x="208.12" y="1647.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.02%)</title><rect x="57.2" y="1637" width="0.2" height="15.0" fill="rgb(211,184,23)" rx="2" ry="2" />
<text  x="60.19" y="1647.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.04%)</title><rect x="567.7" y="1829" width="0.4" height="15.0" fill="rgb(236,195,14)" rx="2" ry="2" />
<text  x="570.67" y="1839.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.08%)</title><rect x="434.3" y="1765" width="0.9" height="15.0" fill="rgb(238,87,28)" rx="2" ry="2" />
<text  x="437.26" y="1775.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::do_fill_buffer (355 samples, 6.83%)</title><rect x="195.1" y="1685" width="80.6" height="15.0" fill="rgb(212,112,26)" rx="2" ry="2" />
<text  x="198.13" y="1695.5" >partition..</text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (1 samples, 0.02%)</title><rect x="70.8" y="1733" width="0.2" height="15.0" fill="rgb(217,120,46)" rx="2" ry="2" />
<text  x="73.80" y="1743.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, seastar::future&lt;void&gt;::handle_exception&lt;do_io_check&lt;checked_file_impl::flush (1 samples, 0.02%)</title><rect x="86.7" y="1941" width="0.2" height="15.0" fill="rgb(219,118,29)" rx="2" ry="2" />
<text  x="89.69" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.5" y="325" width="0.2" height="15.0" fill="rgb(235,130,38)" rx="2" ry="2" />
<text  x="13.45" y="335.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.02%)</title><rect x="39.9" y="1621" width="0.3" height="15.0" fill="rgb(212,47,33)" rx="2" ry="2" />
<text  x="42.95" y="1631.5" ></text>
</g>
<g >
<title>bplus::node&lt;long, intrusive_array&lt;memtable_entry&gt;, dht::raw_token_less_comparator, 16ul,  (1 samples, 0.02%)</title><rect x="1120.6" y="1589" width="0.2" height="15.0" fill="rgb(252,91,51)" rx="2" ry="2" />
<text  x="1123.57" y="1599.5" ></text>
</g>
<g >
<title>std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;std::optional&lt;auth::resource&gt; &gt;, seastar::future&lt;bool&gt; &gt; &gt;::operator (5 samples, 0.10%)</title><rect x="825.2" y="1733" width="1.1" height="15.0" fill="rgb(239,148,28)" rx="2" ry="2" />
<text  x="828.18" y="1743.5" ></text>
</g>
<g >
<title>seastar::internal::extract_values_from_futures_tuple&lt;seastar::future&lt;void&gt;, seastar::future&lt;void&gt; &gt;::transform (1 samples, 0.02%)</title><rect x="874.2" y="1861" width="0.2" height="15.0" fill="rgb(232,176,25)" rx="2" ry="2" />
<text  x="877.18" y="1871.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::schedule&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::make_data_requests (11 samples, 0.21%)</title><rect x="989.4" y="1701" width="2.5" height="15.0" fill="rgb(254,25,9)" rx="2" ry="2" />
<text  x="992.44" y="1711.5" ></text>
</g>
<g >
<title>cql3::statements::raw::select_statement::prepare (1 samples, 0.02%)</title><rect x="11.4" y="1685" width="0.2" height="15.0" fill="rgb(208,52,7)" rx="2" ry="2" />
<text  x="14.36" y="1695.5" ></text>
</g>
<g >
<title>seastar::app_template::run (4,769 samples, 91.69%)</title><rect x="84.9" y="2021" width="1082.0" height="15.0" fill="rgb(242,48,40)" rx="2" ry="2" />
<text  x="87.87" y="2031.5" >seastar::app_template::run</text>
</g>
<g >
<title>flat_mutation_reader::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (1 samples, 0.02%)</title><rect x="138.2" y="1797" width="0.2" height="15.0" fill="rgb(235,63,11)" rx="2" ry="2" />
<text  x="141.19" y="1807.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (7 samples, 0.13%)</title><rect x="833.8" y="1733" width="1.6" height="15.0" fill="rgb(226,159,37)" rx="2" ry="2" />
<text  x="836.80" y="1743.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (2 samples, 0.04%)</title><rect x="650.0" y="1909" width="0.5" height="15.0" fill="rgb(244,207,6)" rx="2" ry="2" />
<text  x="653.03" y="1919.5" ></text>
</g>
<g >
<title>make_stable_flattened_mutations_consumer&lt;compact_for_query&lt; (7 samples, 0.13%)</title><rect x="434.3" y="1797" width="1.6" height="15.0" fill="rgb(216,148,53)" rx="2" ry="2" />
<text  x="437.26" y="1807.5" ></text>
</g>
<g >
<title>allocation_strategy::get_standard_migrator&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::leaf_node&gt; (1 samples, 0.02%)</title><rect x="241.9" y="1525" width="0.2" height="15.0" fill="rgb(237,180,28)" rx="2" ry="2" />
<text  x="244.87" y="1535.5" ></text>
</g>
<g >
<title>seastar::fair_queue::notify_requests_finished (1 samples, 0.02%)</title><rect x="1166.4" y="1877" width="0.2" height="15.0" fill="rgb(250,226,37)" rx="2" ry="2" />
<text  x="1169.40" y="1887.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (1 samples, 0.02%)</title><rect x="630.5" y="1829" width="0.2" height="15.0" fill="rgb(215,8,5)" rx="2" ry="2" />
<text  x="633.52" y="1839.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (6 samples, 0.12%)</title><rect x="862.8" y="1765" width="1.4" height="15.0" fill="rgb(207,134,8)" rx="2" ry="2" />
<text  x="865.84" y="1775.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::operator= (1 samples, 0.02%)</title><rect x="883.3" y="1877" width="0.2" height="15.0" fill="rgb(250,214,54)" rx="2" ry="2" />
<text  x="886.26" y="1887.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (1 samples, 0.02%)</title><rect x="530.2" y="1701" width="0.3" height="15.0" fill="rgb(228,126,24)" rx="2" ry="2" />
<text  x="533.23" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.5" y="1285" width="0.2" height="15.0" fill="rgb(252,122,34)" rx="2" ry="2" />
<text  x="13.45" y="1295.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.02%)</title><rect x="701.3" y="1541" width="0.2" height="15.0" fill="rgb(251,11,30)" rx="2" ry="2" />
<text  x="704.30" y="1551.5" ></text>
</g>
<g >
<title>antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;::RecognizerType&lt;antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::RecognizerType (2 samples, 0.04%)</title><rect x="20.2" y="1813" width="0.5" height="15.0" fill="rgb(220,89,39)" rx="2" ry="2" />
<text  x="23.21" y="1823.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.06%)</title><rect x="771.0" y="1829" width="0.6" height="15.0" fill="rgb(245,210,40)" rx="2" ry="2" />
<text  x="773.95" y="1839.5" ></text>
</g>
<g >
<title>cql3::authorized_prepared_statements_cache::insert (61 samples, 1.17%)</title><rect x="753.5" y="1829" width="13.8" height="15.0" fill="rgb(231,29,54)" rx="2" ry="2" />
<text  x="756.48" y="1839.5" ></text>
</g>
<g >
<title>frozen_schema::unfreeze (1 samples, 0.02%)</title><rect x="109.1" y="1845" width="0.3" height="15.0" fill="rgb(243,46,0)" rx="2" ry="2" />
<text  x="112.15" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.5" y="1781" width="0.2" height="15.0" fill="rgb(224,208,13)" rx="2" ry="2" />
<text  x="13.45" y="1791.5" ></text>
</g>
<g >
<title>cql3::restrictions::(anonymous namespace)::range_from_bytes (86 samples, 1.65%)</title><rect x="913.0" y="1829" width="19.5" height="15.0" fill="rgb(227,120,29)" rx="2" ry="2" />
<text  x="915.98" y="1839.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.02%)</title><rect x="45.4" y="1573" width="0.2" height="15.0" fill="rgb(240,173,51)" rx="2" ry="2" />
<text  x="48.39" y="1583.5" ></text>
</g>
<g >
<title>db::system_keyspace::load_peer_features (1 samples, 0.02%)</title><rect x="11.6" y="1861" width="0.2" height="15.0" fill="rgb(236,217,23)" rx="2" ry="2" />
<text  x="14.59" y="1871.5" ></text>
</g>
<g >
<title>ser::deserialize_array_helper&lt;false, ser::deletable_row_view&gt;::doit&lt;seastar::simple_memory_input_stream, utils::chunked_vector&lt;ser::deletable_row_view, 131072ul&gt; &gt; (1 samples, 0.02%)</title><rect x="1123.8" y="1621" width="0.2" height="15.0" fill="rgb(241,90,12)" rx="2" ry="2" />
<text  x="1126.75" y="1631.5" ></text>
</g>
<g >
<title>bplus::data&lt;long, intrusive_array&lt;memtable_entry&gt;, dht::raw_token_less_comparator, 16ul,  (1 samples, 0.02%)</title><rect x="1120.6" y="1557" width="0.2" height="15.0" fill="rgb(220,56,17)" rx="2" ry="2" />
<text  x="1123.57" y="1567.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;std::function&lt;std::function&lt;partition_presence_checker_result  (1 samples, 0.02%)</title><rect x="135.5" y="1877" width="0.2" height="15.0" fill="rgb(219,194,27)" rx="2" ry="2" />
<text  x="138.46" y="1887.5" ></text>
</g>
<g >
<title>cql3::prepare_context::get_partition_key_bind_indexes (1 samples, 0.02%)</title><rect x="66.9" y="1877" width="0.3" height="15.0" fill="rgb(214,120,48)" rx="2" ry="2" />
<text  x="69.95" y="1887.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (1 samples, 0.02%)</title><rect x="878.9" y="1685" width="0.3" height="15.0" fill="rgb(239,59,25)" rx="2" ry="2" />
<text  x="881.95" y="1695.5" ></text>
</g>
<g >
<title>std::tuple&lt;cql3::statements::create_type_statement*, std::default_delete&lt;cql3::statements::create_type_statement&gt; &gt;::tuple&lt;true, true&gt; (1 samples, 0.02%)</title><rect x="64.2" y="1765" width="0.3" height="15.0" fill="rgb(211,132,33)" rx="2" ry="2" />
<text  x="67.22" y="1775.5" ></text>
</g>
<g >
<title>std::_Optional_base_impl&lt;query::querier&lt; (4 samples, 0.08%)</title><rect x="636.6" y="1845" width="0.9" height="15.0" fill="rgb(237,216,18)" rx="2" ry="2" />
<text  x="639.64" y="1855.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_token (7 samples, 0.13%)</title><rect x="660.7" y="1845" width="1.6" height="15.0" fill="rgb(209,39,13)" rx="2" ry="2" />
<text  x="663.69" y="1855.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry_ptr&gt;::take_value (1 samples, 0.02%)</title><rect x="756.2" y="1781" width="0.2" height="15.0" fill="rgb(214,133,40)" rx="2" ry="2" />
<text  x="759.21" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.5" y="533" width="0.2" height="15.0" fill="rgb(238,70,29)" rx="2" ry="2" />
<text  x="13.45" y="543.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="84.2" y="1861" width="0.2" height="15.0" fill="rgb(242,0,13)" rx="2" ry="2" />
<text  x="87.19" y="1871.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;bytes_ostream::chunk, std::default_delete&lt;bytes_ostream::chunk&gt; &gt;::reset (2 samples, 0.04%)</title><rect x="616.7" y="1813" width="0.4" height="15.0" fill="rgb(209,209,53)" rx="2" ry="2" />
<text  x="619.68" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;11ul, cql3::expr::untyped_constant&gt; (2 samples, 0.04%)</title><rect x="52.7" y="1605" width="0.4" height="15.0" fill="rgb(223,200,29)" rx="2" ry="2" />
<text  x="55.65" y="1615.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_reserve_map_at_back (1 samples, 0.02%)</title><rect x="23.8" y="1669" width="0.3" height="15.0" fill="rgb(227,194,42)" rx="2" ry="2" />
<text  x="26.84" y="1679.5" ></text>
</g>
<g >
<title>sstables::mc::writer::write_clustered&lt;clustering_row&gt; (2 samples, 0.04%)</title><rect x="83.3" y="1813" width="0.4" height="15.0" fill="rgb(208,50,24)" rx="2" ry="2" />
<text  x="86.28" y="1823.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::size (1 samples, 0.02%)</title><rect x="891.9" y="1845" width="0.2" height="15.0" fill="rgb(222,197,26)" rx="2" ry="2" />
<text  x="894.88" y="1855.5" ></text>
</g>
<g >
<title>abstract_type::is_collection (1 samples, 0.02%)</title><rect x="69.2" y="1797" width="0.2" height="15.0" fill="rgb(253,139,53)" rx="2" ry="2" />
<text  x="72.22" y="1807.5" ></text>
</g>
<g >
<title>row_cache::do_make_reader (2 samples, 0.04%)</title><rect x="537.9" y="1765" width="0.5" height="15.0" fill="rgb(244,111,24)" rx="2" ry="2" />
<text  x="540.95" y="1775.5" ></text>
</g>
<g >
<title>std::optional&lt;query::querier&lt; (1 samples, 0.02%)</title><rect x="138.0" y="1877" width="0.2" height="15.0" fill="rgb(215,189,51)" rx="2" ry="2" />
<text  x="140.96" y="1887.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::trivial_direct_move&lt;16ul&gt; (1 samples, 0.02%)</title><rect x="1022.8" y="1573" width="0.2" height="15.0" fill="rgb(215,141,34)" rx="2" ry="2" />
<text  x="1025.79" y="1583.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::~disable_abort_on_alloc_failure_temporarily (1 samples, 0.02%)</title><rect x="551.8" y="1749" width="0.2" height="15.0" fill="rgb(242,208,21)" rx="2" ry="2" />
<text  x="554.79" y="1759.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (1 samples, 0.02%)</title><rect x="697.0" y="1861" width="0.2" height="15.0" fill="rgb(252,154,23)" rx="2" ry="2" />
<text  x="699.99" y="1871.5" ></text>
</g>
<g >
<title>seastar::internal::sharded_parallel_for_each (1 samples, 0.02%)</title><rect x="17.5" y="1941" width="0.2" height="15.0" fill="rgb(206,83,23)" rx="2" ry="2" />
<text  x="20.49" y="1951.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::lw_shared_ptr&lt;schema const&gt;  (1 samples, 0.02%)</title><rect x="106.4" y="1877" width="0.3" height="15.0" fill="rgb(242,101,45)" rx="2" ry="2" />
<text  x="109.42" y="1887.5" ></text>
</g>
<g >
<title>utils::array_search_gt (1 samples, 0.02%)</title><rect x="545.0" y="1701" width="0.2" height="15.0" fill="rgb(221,198,41)" rx="2" ry="2" />
<text  x="547.98" y="1711.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;gms::inet_address, std::pair&lt;gms::inet_address const, service::view_update_backlog_timestamped&gt;, std::allocator&lt;std::pair&lt;gms::inet_address const, service::view_update_backlog_timestamped&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;gms::inet_address&gt;, std::hash&lt;gms::inet_address&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (1 samples, 0.02%)</title><rect x="730.1" y="1797" width="0.2" height="15.0" fill="rgb(231,79,42)" rx="2" ry="2" />
<text  x="733.12" y="1807.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (2,314 samples, 44.49%)</title><rect x="113.9" y="1909" width="525.0" height="15.0" fill="rgb(230,108,46)" rx="2" ry="2" />
<text  x="116.91" y="1919.5" >seastar::noncopyable_function&lt;seastar::future&lt;void&gt; </text>
</g>
<g >
<title>seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::expand (6 samples, 0.12%)</title><rect x="199.2" y="1637" width="1.4" height="15.0" fill="rgb(222,175,49)" rx="2" ry="2" />
<text  x="202.22" y="1647.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (3 samples, 0.06%)</title><rect x="203.5" y="1605" width="0.7" height="15.0" fill="rgb(232,122,7)" rx="2" ry="2" />
<text  x="206.53" y="1615.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, unsigned int, std::_Identity&lt;unsigned int&gt;, std::less&lt;unsigned int&gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;unsigned int&gt; &gt;::find (1 samples, 0.02%)</title><rect x="35.6" y="1717" width="0.3" height="15.0" fill="rgb(222,95,23)" rx="2" ry="2" />
<text  x="38.64" y="1727.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::execute (55 samples, 1.06%)</title><rect x="701.8" y="1925" width="12.4" height="15.0" fill="rgb(208,59,20)" rx="2" ry="2" />
<text  x="704.76" y="1935.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::pop_mutation_fragment (10 samples, 0.19%)</title><rect x="336.3" y="1685" width="2.2" height="15.0" fill="rgb(231,62,2)" rx="2" ry="2" />
<text  x="339.25" y="1695.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="532.0" y="1733" width="0.3" height="15.0" fill="rgb(226,124,47)" rx="2" ry="2" />
<text  x="535.05" y="1743.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::set&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; (1 samples, 0.02%)</title><rect x="623.7" y="1845" width="0.2" height="15.0" fill="rgb(251,183,30)" rx="2" ry="2" />
<text  x="626.71" y="1855.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.08%)</title><rect x="686.3" y="1877" width="0.9" height="15.0" fill="rgb(233,195,27)" rx="2" ry="2" />
<text  x="689.33" y="1887.5" ></text>
</g>
<g >
<title>seastar::weakly_referencable&lt;cql3::statements::prepared_statement&gt;::weak_from_this (2 samples, 0.04%)</title><rect x="742.1" y="1829" width="0.5" height="15.0" fill="rgb(227,175,16)" rx="2" ry="2" />
<text  x="745.14" y="1839.5" ></text>
</g>
<g >
<title>bytes_view_hasher::finalize (6 samples, 0.12%)</title><rect x="765.3" y="1685" width="1.3" height="15.0" fill="rgb(245,182,43)" rx="2" ry="2" />
<text  x="768.28" y="1695.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="69.7" y="1765" width="0.2" height="15.0" fill="rgb(218,120,19)" rx="2" ry="2" />
<text  x="72.67" y="1775.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (2 samples, 0.04%)</title><rect x="848.1" y="1797" width="0.4" height="15.0" fill="rgb(226,114,23)" rx="2" ry="2" />
<text  x="851.09" y="1807.5" ></text>
</g>
<g >
<title>ser::serializer&lt;schema_mutations&gt;::write&lt;seastar::measuring_output_stream&gt; (2 samples, 0.04%)</title><rect x="108.7" y="1813" width="0.4" height="15.0" fill="rgb(254,103,50)" rx="2" ry="2" />
<text  x="111.69" y="1823.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit_slot&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::walking_visitor&lt;row::for_each_cell&lt;sstables::mc::writer::write_cells (1 samples, 0.02%)</title><rect x="83.5" y="1733" width="0.2" height="15.0" fill="rgb(240,192,18)" rx="2" ry="2" />
<text  x="86.51" y="1743.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::metadata&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="667.3" y="1893" width="0.2" height="15.0" fill="rgb(230,49,45)" rx="2" ry="2" />
<text  x="670.27" y="1903.5" ></text>
</g>
<g >
<title>cql3::constants::setter::execute (4 samples, 0.08%)</title><rect x="878.0" y="1749" width="0.9" height="15.0" fill="rgb(249,39,4)" rx="2" ry="2" />
<text  x="881.04" y="1759.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_last_fragment_kind, 4ul&gt;::small_vector (3 samples, 0.06%)</title><rect x="468.3" y="1685" width="0.7" height="15.0" fill="rgb(212,191,38)" rx="2" ry="2" />
<text  x="471.30" y="1695.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_internal (1 samples, 0.02%)</title><rect x="700.8" y="1893" width="0.3" height="15.0" fill="rgb(232,73,8)" rx="2" ry="2" />
<text  x="703.85" y="1903.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit_slot&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::memory_usage&lt;row::external_memory_usage (10 samples, 0.19%)</title><rect x="253.2" y="1541" width="2.3" height="15.0" fill="rgb(227,29,32)" rx="2" ry="2" />
<text  x="256.21" y="1551.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt;  (1 samples, 0.02%)</title><rect x="17.0" y="1957" width="0.3" height="15.0" fill="rgb(205,140,12)" rx="2" ry="2" />
<text  x="20.03" y="1967.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;signed char, std::char_traits&lt;signed char&gt; &gt;::substr (1 samples, 0.02%)</title><rect x="503.0" y="1605" width="0.2" height="15.0" fill="rgb(213,211,16)" rx="2" ry="2" />
<text  x="506.01" y="1615.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::take (1 samples, 0.02%)</title><rect x="431.3" y="1685" width="0.2" height="15.0" fill="rgb(213,159,9)" rx="2" ry="2" />
<text  x="434.32" y="1695.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::clear (1 samples, 0.02%)</title><rect x="955.6" y="1829" width="0.3" height="15.0" fill="rgb(240,94,4)" rx="2" ry="2" />
<text  x="958.63" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::binary_operator const*&gt;  (1 samples, 0.02%)</title><rect x="659.8" y="1797" width="0.2" height="15.0" fill="rgb(248,178,10)" rx="2" ry="2" />
<text  x="662.78" y="1807.5" ></text>
</g>
<g >
<title>dht::tri_compare (7 samples, 0.13%)</title><rect x="1070.0" y="1653" width="1.6" height="15.0" fill="rgb(226,145,36)" rx="2" ry="2" />
<text  x="1072.98" y="1663.5" ></text>
</g>
<g >
<title>seastar::api_v3::and_newer::make_file_data_sink (1 samples, 0.02%)</title><rect x="698.8" y="1877" width="0.2" height="15.0" fill="rgb(240,24,20)" rx="2" ry="2" />
<text  x="701.81" y="1887.5" ></text>
</g>
<g >
<title>row::row (1 samples, 0.02%)</title><rect x="106.9" y="1637" width="0.2" height="15.0" fill="rgb(251,89,14)" rx="2" ry="2" />
<text  x="109.88" y="1647.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::operator (621 samples, 11.94%)</title><rect x="169.0" y="1781" width="140.9" height="15.0" fill="rgb(253,153,51)" rx="2" ry="2" />
<text  x="172.04" y="1791.5" >mutation_fragment..</text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="698.8" y="1829" width="0.2" height="15.0" fill="rgb(242,52,52)" rx="2" ry="2" />
<text  x="701.81" y="1839.5" ></text>
</g>
<g >
<title>partition_key_view::legacy_form (4 samples, 0.08%)</title><rect x="930.4" y="1813" width="1.0" height="15.0" fill="rgb(205,28,11)" rx="2" ry="2" />
<text  x="933.45" y="1823.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperationDifferentiator (50 samples, 0.96%)</title><rect x="45.4" y="1765" width="11.3" height="15.0" fill="rgb(243,167,23)" rx="2" ry="2" />
<text  x="48.39" y="1775.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="59.5" y="1637" width="0.2" height="15.0" fill="rgb(252,162,13)" rx="2" ry="2" />
<text  x="62.46" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.5" y="277" width="0.2" height="15.0" fill="rgb(218,50,15)" rx="2" ry="2" />
<text  x="13.45" y="287.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (2 samples, 0.04%)</title><rect x="1106.3" y="1845" width="0.4" height="15.0" fill="rgb(252,47,1)" rx="2" ry="2" />
<text  x="1109.28" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.5" y="1157" width="0.2" height="15.0" fill="rgb(246,66,13)" rx="2" ry="2" />
<text  x="13.45" y="1167.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="15.9" y="2021" width="0.2" height="15.0" fill="rgb(245,4,26)" rx="2" ry="2" />
<text  x="18.90" y="2031.5" ></text>
</g>
<g >
<title>row::apply_monotonically (1 samples, 0.02%)</title><rect x="16.6" y="1909" width="0.2" height="15.0" fill="rgb(228,176,9)" rx="2" ry="2" />
<text  x="19.58" y="1919.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (1 samples, 0.02%)</title><rect x="262.3" y="1525" width="0.2" height="15.0" fill="rgb(231,50,41)" rx="2" ry="2" />
<text  x="265.29" y="1535.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::digest_read_result&gt;::future (1 samples, 0.02%)</title><rect x="973.3" y="1781" width="0.3" height="15.0" fill="rgb(254,219,6)" rx="2" ry="2" />
<text  x="976.33" y="1791.5" ></text>
</g>
<g >
<title>bplus::tree&lt;long, intrusive_array&lt;memtable_entry&gt;, dht::raw_token_less_comparator, 16ul,  (2 samples, 0.04%)</title><rect x="480.8" y="1749" width="0.4" height="15.0" fill="rgb(211,152,7)" rx="2" ry="2" />
<text  x="483.77" y="1759.5" ></text>
</g>
<g >
<title>seastar::memory::allocate_aligned (1 samples, 0.02%)</title><rect x="878.3" y="1605" width="0.2" height="15.0" fill="rgb(233,180,16)" rx="2" ry="2" />
<text  x="881.27" y="1615.5" ></text>
</g>
<g >
<title>_ZSt13__invoke_implISt10unique_ptrIN7seastar8internal13do_with_stateISt5tupleIJN20flat_mutation_reader4impl16consumer_adapterI35stable_flattened_mutations_consumerI17compact_for_queryIL19emit_only_live_rows1EN5query27clustering_position_trackerI20query_result_builderEEEEEEEENS1_6futureIvEEEESt14default_deleteISL_EEZNS2_12do_with_implISH_ZNS6_7consumeISG_EEDaT_EUlRSH_E_JEEEDaOSR_OT0_DpOT1_EUlDpOT_E_JSH_EESR_St14__invoke_otherSW_SZ_ (2 samples, 0.04%)</title><rect x="330.6" y="1749" width="0.4" height="15.0" fill="rgb(244,65,49)" rx="2" ry="2" />
<text  x="333.58" y="1759.5" ></text>
</g>
<g >
<title>seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::expand (21 samples, 0.40%)</title><rect x="314.0" y="1733" width="4.8" height="15.0" fill="rgb(244,185,33)" rx="2" ry="2" />
<text  x="317.02" y="1743.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::emplace_back&lt;gms::inet_address const&amp;&gt; (3 samples, 0.06%)</title><rect x="727.4" y="1877" width="0.7" height="15.0" fill="rgb(224,110,16)" rx="2" ry="2" />
<text  x="730.39" y="1887.5" ></text>
</g>
<g >
<title>table::set_hit_rate (8 samples, 0.15%)</title><rect x="725.6" y="1877" width="1.8" height="15.0" fill="rgb(209,132,11)" rx="2" ry="2" />
<text  x="728.58" y="1887.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (1 samples, 0.02%)</title><rect x="19.3" y="1909" width="0.2" height="15.0" fill="rgb(221,31,20)" rx="2" ry="2" />
<text  x="22.30" y="1919.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (1 samples, 0.02%)</title><rect x="1146.9" y="1877" width="0.2" height="15.0" fill="rgb(242,121,25)" rx="2" ry="2" />
<text  x="1149.89" y="1887.5" ></text>
</g>
<g >
<title>service::abstract_write_response_handler::signal (1 samples, 0.02%)</title><rect x="730.1" y="1877" width="0.2" height="15.0" fill="rgb(236,52,28)" rx="2" ry="2" />
<text  x="733.12" y="1887.5" ></text>
</g>
<g >
<title>antlr3::IntStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::seek (1 samples, 0.02%)</title><rect x="35.0" y="1653" width="0.2" height="15.0" fill="rgb(209,185,8)" rx="2" ry="2" />
<text  x="37.96" y="1663.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="700.6" y="1733" width="0.2" height="15.0" fill="rgb(227,100,26)" rx="2" ry="2" />
<text  x="703.62" y="1743.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (1 samples, 0.02%)</title><rect x="796.6" y="1733" width="0.2" height="15.0" fill="rgb(223,86,33)" rx="2" ry="2" />
<text  x="799.59" y="1743.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (1 samples, 0.02%)</title><rect x="24.5" y="1733" width="0.2" height="15.0" fill="rgb(229,94,27)" rx="2" ry="2" />
<text  x="27.52" y="1743.5" ></text>
</g>
<g >
<title>std::has_facet&lt;std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="12.0" y="2021" width="0.3" height="15.0" fill="rgb(225,14,2)" rx="2" ry="2" />
<text  x="15.04" y="2031.5" ></text>
</g>
<g >
<title>ser::mutation_partition_view::rows (2 samples, 0.04%)</title><rect x="1123.8" y="1653" width="0.4" height="15.0" fill="rgb(226,86,41)" rx="2" ry="2" />
<text  x="1126.75" y="1663.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, std::allocator&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt;::_M_create_storage (1 samples, 0.02%)</title><rect x="700.6" y="1765" width="0.2" height="15.0" fill="rgb(210,92,16)" rx="2" ry="2" />
<text  x="703.62" y="1775.5" ></text>
</g>
<g >
<title>row::~row (1 samples, 0.02%)</title><rect x="291.8" y="1637" width="0.2" height="15.0" fill="rgb(240,129,19)" rx="2" ry="2" />
<text  x="294.78" y="1647.5" ></text>
</g>
<g >
<title>antlr3::DefaultAllocPolicy::StackType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::pop (1 samples, 0.02%)</title><rect x="50.8" y="1685" width="0.3" height="15.0" fill="rgb(223,89,44)" rx="2" ry="2" />
<text  x="53.84" y="1695.5" ></text>
</g>
<g >
<title>fmt::v7::basic_printf_context&lt;fmt::v7::detail::buffer_appender&lt;char&gt;, char&gt;::format&lt;fmt::v7::printf_arg_formatter&lt;fmt::v7::detail::buffer_appender&lt;char&gt;, char&gt; &gt; (2 samples, 0.04%)</title><rect x="18.4" y="1925" width="0.4" height="15.0" fill="rgb(220,65,29)" rx="2" ry="2" />
<text  x="21.39" y="1935.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::find&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="79.2" y="1813" width="0.2" height="15.0" fill="rgb(215,45,38)" rx="2" ry="2" />
<text  x="82.20" y="1823.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reclaiming_disabled&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_range_tombstone (19 samples, 0.37%)</title><rect x="267.1" y="1621" width="4.3" height="15.0" fill="rgb(213,207,42)" rx="2" ry="2" />
<text  x="270.05" y="1631.5" ></text>
</g>
<g >
<title>std::optional&lt;clustering_key_prefix&gt;::operator=&lt;clustering_key_prefix const&amp;&gt; (4 samples, 0.08%)</title><rect x="271.8" y="1637" width="0.9" height="15.0" fill="rgb(238,100,10)" rx="2" ry="2" />
<text  x="274.82" y="1647.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (1 samples, 0.02%)</title><rect x="562.9" y="1765" width="0.2" height="15.0" fill="rgb(230,78,47)" rx="2" ry="2" />
<text  x="565.91" y="1775.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (5 samples, 0.10%)</title><rect x="333.8" y="1701" width="1.1" height="15.0" fill="rgb(226,46,18)" rx="2" ry="2" />
<text  x="336.76" y="1711.5" ></text>
</g>
<g >
<title>write_fragmented&lt;managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="877.4" y="1717" width="0.2" height="15.0" fill="rgb(211,32,28)" rx="2" ry="2" />
<text  x="880.36" y="1727.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt;, db::consistency_level, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, tracing::trace_state_ptr, service_permit, bool, seastar::lw_shared_ptr&lt;cdc::operation_result_tracker&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="1136.0" y="1909" width="0.2" height="15.0" fill="rgb(214,157,42)" rx="2" ry="2" />
<text  x="1139.00" y="1919.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;query::result_memory_accounter&gt;::clear (1 samples, 0.02%)</title><rect x="135.2" y="1877" width="0.3" height="15.0" fill="rgb(253,155,4)" rx="2" ry="2" />
<text  x="138.24" y="1887.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (1 samples, 0.02%)</title><rect x="47.7" y="1717" width="0.2" height="15.0" fill="rgb(244,87,17)" rx="2" ry="2" />
<text  x="50.66" y="1727.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;clustering_key_prefix, false, false&gt;::_Optional_base (1 samples, 0.02%)</title><rect x="273.4" y="1653" width="0.2" height="15.0" fill="rgb(254,133,42)" rx="2" ry="2" />
<text  x="276.41" y="1663.5" ></text>
</g>
<g >
<title>TLS wrapper function for unimplemented::_warnings (1 samples, 0.02%)</title><rect x="19.1" y="1909" width="0.2" height="15.0" fill="rgb(245,129,47)" rx="2" ry="2" />
<text  x="22.08" y="1919.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::storage_proxy&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="1141.9" y="1909" width="0.2" height="15.0" fill="rgb(237,199,7)" rx="2" ry="2" />
<text  x="1144.90" y="1919.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (1 samples, 0.02%)</title><rect x="67.6" y="1781" width="0.3" height="15.0" fill="rgb(227,114,33)" rx="2" ry="2" />
<text  x="70.63" y="1791.5" ></text>
</g>
<g >
<title>mutation_partition::append_clustered_row (1 samples, 0.02%)</title><rect x="1122.2" y="1653" width="0.2" height="15.0" fill="rgb(242,150,20)" rx="2" ry="2" />
<text  x="1125.16" y="1663.5" ></text>
</g>
<g >
<title>ser::safe_serialize_as_uint32&lt;bytes_ostream&gt; (1 samples, 0.02%)</title><rect x="138.2" y="1573" width="0.2" height="15.0" fill="rgb(249,104,25)" rx="2" ry="2" />
<text  x="141.19" y="1583.5" ></text>
</g>
<g >
<title>schema::schema (1 samples, 0.02%)</title><rect x="17.3" y="1621" width="0.2" height="15.0" fill="rgb(213,112,1)" rx="2" ry="2" />
<text  x="20.26" y="1631.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::get0 (1 samples, 0.02%)</title><rect x="620.3" y="1861" width="0.2" height="15.0" fill="rgb(215,0,43)" rx="2" ry="2" />
<text  x="623.31" y="1871.5" ></text>
</g>
<g >
<title>partition_snapshot::get_change_mark (5 samples, 0.10%)</title><rect x="269.8" y="1573" width="1.1" height="15.0" fill="rgb(227,121,29)" rx="2" ry="2" />
<text  x="272.78" y="1583.5" ></text>
</g>
<g >
<title>std::__unguarded_linear_insert&lt;unsigned int*, __gnu_cxx::__ops::_Val_comp_iter&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.02%)</title><rect x="108.9" y="1733" width="0.2" height="15.0" fill="rgb(215,115,12)" rx="2" ry="2" />
<text  x="111.92" y="1743.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::arm (2 samples, 0.04%)</title><rect x="1023.2" y="1573" width="0.5" height="15.0" fill="rgb(229,217,52)" rx="2" ry="2" />
<text  x="1026.24" y="1583.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::free_span (1 samples, 0.02%)</title><rect x="685.4" y="1877" width="0.2" height="15.0" fill="rgb(251,192,47)" rx="2" ry="2" />
<text  x="688.42" y="1887.5" ></text>
</g>
<g >
<title>locator::token_metadata_impl::pending_endpoints_for (1 samples, 0.02%)</title><rect x="1132.6" y="1605" width="0.2" height="15.0" fill="rgb(252,190,37)" rx="2" ry="2" />
<text  x="1135.60" y="1615.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (1 samples, 0.02%)</title><rect x="28.8" y="1669" width="0.3" height="15.0" fill="rgb(247,167,40)" rx="2" ry="2" />
<text  x="31.83" y="1679.5" ></text>
</g>
<g >
<title>sstables::compaction::setup&lt;noop_compacted_fragments_consumer&gt; (1 samples, 0.02%)</title><rect x="17.9" y="1989" width="0.3" height="15.0" fill="rgb(233,16,13)" rx="2" ry="2" />
<text  x="20.94" y="1999.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (2 samples, 0.04%)</title><rect x="718.3" y="1877" width="0.5" height="15.0" fill="rgb(208,226,9)" rx="2" ry="2" />
<text  x="721.32" y="1887.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.02%)</title><rect x="47.2" y="1637" width="0.2" height="15.0" fill="rgb(228,64,1)" rx="2" ry="2" />
<text  x="50.21" y="1647.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="153.2" y="1845" width="0.2" height="15.0" fill="rgb(209,200,26)" rx="2" ry="2" />
<text  x="156.16" y="1855.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="81.5" y="1797" width="0.2" height="15.0" fill="rgb(227,21,48)" rx="2" ry="2" />
<text  x="84.47" y="1807.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::revoke_statement, std::default_delete&lt;cql3::statements::revoke_statement&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="66.5" y="1813" width="0.2" height="15.0" fill="rgb(216,192,29)" rx="2" ry="2" />
<text  x="69.49" y="1823.5" ></text>
</g>
<g >
<title>service::client_state::get_timestamp (2 samples, 0.04%)</title><rect x="1114.0" y="1845" width="0.4" height="15.0" fill="rgb(228,119,1)" rx="2" ry="2" />
<text  x="1117.00" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.5" y="1573" width="0.2" height="15.0" fill="rgb(242,168,10)" rx="2" ry="2" />
<text  x="13.45" y="1583.5" ></text>
</g>
<g >
<title>_ZN8sstables14stats_metadata13describe_typeIZNS_5writeIS0_NS_11file_writerEEEvNS_21sstable_version_typesERT0_RKT_EUlDpOT_E_EEDaS4_S7_ (1 samples, 0.02%)</title><rect x="698.8" y="1621" width="0.2" height="15.0" fill="rgb(247,189,50)" rx="2" ry="2" />
<text  x="701.81" y="1631.5" ></text>
</g>
<g >
<title>query::querier_base::close (130 samples, 2.50%)</title><rect x="569.5" y="1861" width="29.5" height="15.0" fill="rgb(233,69,20)" rx="2" ry="2" />
<text  x="572.48" y="1871.5" >qu..</text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.02%)</title><rect x="353.5" y="1621" width="0.2" height="15.0" fill="rgb(238,3,38)" rx="2" ry="2" />
<text  x="356.50" y="1631.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::operator= (3 samples, 0.06%)</title><rect x="1138.3" y="1909" width="0.7" height="15.0" fill="rgb(231,120,35)" rx="2" ry="2" />
<text  x="1141.27" y="1919.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;enum_set&lt;super_enum&lt;auth::permission,  (1 samples, 0.02%)</title><rect x="800.0" y="1717" width="0.2" height="15.0" fill="rgb(244,12,22)" rx="2" ry="2" />
<text  x="802.99" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.5" y="661" width="0.2" height="15.0" fill="rgb(227,164,8)" rx="2" ry="2" />
<text  x="13.45" y="671.5" ></text>
</g>
<g >
<title>std::tuple&lt;cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::tuple (1 samples, 0.02%)</title><rect x="55.6" y="1637" width="0.2" height="15.0" fill="rgb(213,77,17)" rx="2" ry="2" />
<text  x="58.60" y="1647.5" ></text>
</g>
<g >
<title>seastar::metrics::impl::metric_groups_impl::~metric_groups_impl (1 samples, 0.02%)</title><rect x="12.3" y="1957" width="0.2" height="15.0" fill="rgb(237,33,7)" rx="2" ry="2" />
<text  x="15.27" y="1967.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::~vector (4 samples, 0.08%)</title><rect x="459.7" y="1701" width="0.9" height="15.0" fill="rgb(249,206,0)" rx="2" ry="2" />
<text  x="462.68" y="1711.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (3 samples, 0.06%)</title><rect x="1052.3" y="1717" width="0.7" height="15.0" fill="rgb(251,41,5)" rx="2" ry="2" />
<text  x="1055.28" y="1727.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::get_token_present (1 samples, 0.02%)</title><rect x="25.9" y="1701" width="0.2" height="15.0" fill="rgb(233,182,28)" rx="2" ry="2" />
<text  x="28.88" y="1711.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_pausable&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (1 samples, 0.02%)</title><rect x="333.1" y="1717" width="0.2" height="15.0" fill="rgb(246,217,37)" rx="2" ry="2" />
<text  x="336.08" y="1727.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::value (1 samples, 0.02%)</title><rect x="55.1" y="1733" width="0.3" height="15.0" fill="rgb(248,133,35)" rx="2" ry="2" />
<text  x="58.15" y="1743.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (1 samples, 0.02%)</title><rect x="10.5" y="133" width="0.2" height="15.0" fill="rgb(252,220,36)" rx="2" ry="2" />
<text  x="13.45" y="143.5" ></text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::find (2 samples, 0.04%)</title><rect x="664.8" y="1797" width="0.4" height="15.0" fill="rgb(250,192,44)" rx="2" ry="2" />
<text  x="667.77" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::_Move_ctor_base (1 samples, 0.02%)</title><rect x="346.9" y="1589" width="0.2" height="15.0" fill="rgb(227,155,23)" rx="2" ry="2" />
<text  x="349.92" y="1599.5" ></text>
</g>
<g >
<title>cql3::update_parameters::make_cell (2 samples, 0.04%)</title><rect x="878.0" y="1717" width="0.5" height="15.0" fill="rgb(219,213,44)" rx="2" ry="2" />
<text  x="881.04" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.5" y="309" width="0.2" height="15.0" fill="rgb(245,29,3)" rx="2" ry="2" />
<text  x="13.45" y="319.5" ></text>
</g>
<g >
<title>seastar::do_until&lt;sstables::mx::mx_sstable_mutation_reader::fill_buffer (1 samples, 0.02%)</title><rect x="17.9" y="1669" width="0.3" height="15.0" fill="rgb(216,205,9)" rx="2" ry="2" />
<text  x="20.94" y="1679.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (1 samples, 0.02%)</title><rect x="131.4" y="1813" width="0.2" height="15.0" fill="rgb(218,15,26)" rx="2" ry="2" />
<text  x="134.38" y="1823.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.06%)</title><rect x="909.8" y="1749" width="0.7" height="15.0" fill="rgb(241,170,6)" rx="2" ry="2" />
<text  x="912.80" y="1759.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.02%)</title><rect x="54.2" y="1509" width="0.3" height="15.0" fill="rgb(232,43,42)" rx="2" ry="2" />
<text  x="57.24" y="1519.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="51.3" y="1669" width="0.2" height="15.0" fill="rgb(227,90,13)" rx="2" ry="2" />
<text  x="54.29" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::~_Variant_storage (1 samples, 0.02%)</title><rect x="73.3" y="1685" width="0.2" height="15.0" fill="rgb(222,7,19)" rx="2" ry="2" />
<text  x="76.30" y="1695.5" ></text>
</g>
<g >
<title>absl::hash_internal::AbslHashValue&lt;absl::hash_internal::HashState&gt; (4 samples, 0.08%)</title><rect x="1055.2" y="1701" width="0.9" height="15.0" fill="rgb(232,165,44)" rx="2" ry="2" />
<text  x="1058.23" y="1711.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;void&gt;::satisfy_with_result_of&lt;seastar::future&lt;service::digest_read_result&gt;::then_wrapped_nrvo&lt;void, service::abstract_read_executor::execute (33 samples, 0.63%)</title><rect x="704.0" y="1909" width="7.5" height="15.0" fill="rgb(206,25,54)" rx="2" ry="2" />
<text  x="707.02" y="1919.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;partition_key, false, false&gt;::_Optional_base (1 samples, 0.02%)</title><rect x="569.0" y="1829" width="0.3" height="15.0" fill="rgb(248,83,20)" rx="2" ry="2" />
<text  x="572.03" y="1839.5" ></text>
</g>
<g >
<title>dht::ring_position_comparator::operator (55 samples, 1.06%)</title><rect x="493.5" y="1717" width="12.5" height="15.0" fill="rgb(221,9,13)" rx="2" ry="2" />
<text  x="496.48" y="1727.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="577.7" y="1733" width="0.2" height="15.0" fill="rgb(225,29,32)" rx="2" ry="2" />
<text  x="580.65" y="1743.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::clear (3 samples, 0.06%)</title><rect x="821.3" y="1637" width="0.7" height="15.0" fill="rgb(222,13,47)" rx="2" ry="2" />
<text  x="824.32" y="1647.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (5 samples, 0.10%)</title><rect x="599.7" y="1829" width="1.1" height="15.0" fill="rgb(220,192,1)" rx="2" ry="2" />
<text  x="602.66" y="1839.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser&lt;std::_Mem_fn&lt;std::unique_ptr&lt;cql3::statements::raw::parsed_statement, std::default_delete&lt;cql3::statements::raw::parsed_statement&gt; &gt;  (208 samples, 4.00%)</title><rect x="19.8" y="1877" width="47.1" height="15.0" fill="rgb(253,24,12)" rx="2" ry="2" />
<text  x="22.76" y="1887.5" >cql3..</text>
</g>
<g >
<title>[unknown] (14 samples, 0.27%)</title><rect x="81.2" y="2005" width="3.2" height="15.0" fill="rgb(239,91,44)" rx="2" ry="2" />
<text  x="84.24" y="2015.5" ></text>
</g>
<g >
<title>basic_atomic_cell_view&lt; (1 samples, 0.02%)</title><rect x="359.4" y="1605" width="0.2" height="15.0" fill="rgb(251,199,4)" rx="2" ry="2" />
<text  x="362.39" y="1615.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.02%)</title><rect x="45.4" y="1637" width="0.2" height="15.0" fill="rgb(232,55,46)" rx="2" ry="2" />
<text  x="48.39" y="1647.5" ></text>
</g>
<g >
<title>std::__apply_impl&lt;seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (35 samples, 0.67%)</title><rect x="1126.5" y="1893" width="7.9" height="15.0" fill="rgb(242,144,7)" rx="2" ry="2" />
<text  x="1129.47" y="1903.5" ></text>
</g>
<g >
<title>sstables::mc::writer::consume_end_of_stream (1 samples, 0.02%)</title><rect x="698.8" y="1685" width="0.2" height="15.0" fill="rgb(229,156,36)" rx="2" ry="2" />
<text  x="701.81" y="1695.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;gms::inet_address, std::pair&lt;gms::inet_address const, table::cache_hit_rate&gt;, std::allocator&lt;std::pair&lt;gms::inet_address const, table::cache_hit_rate&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;gms::inet_address&gt;, std::hash&lt;gms::inet_address&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (2 samples, 0.04%)</title><rect x="726.9" y="1845" width="0.5" height="15.0" fill="rgb(221,219,26)" rx="2" ry="2" />
<text  x="729.94" y="1855.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.02%)</title><rect x="698.8" y="1765" width="0.2" height="15.0" fill="rgb(217,50,10)" rx="2" ry="2" />
<text  x="701.81" y="1775.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;managed_bytes const*, managed_bytes*&gt; (1 samples, 0.02%)</title><rect x="909.6" y="1765" width="0.2" height="15.0" fill="rgb(206,34,12)" rx="2" ry="2" />
<text  x="912.58" y="1775.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (1 samples, 0.02%)</title><rect x="514.8" y="1717" width="0.2" height="15.0" fill="rgb(239,79,15)" rx="2" ry="2" />
<text  x="517.81" y="1727.5" ></text>
</g>
<g >
<title>query::querier&lt; (2 samples, 0.04%)</title><rect x="123.9" y="1877" width="0.4" height="15.0" fill="rgb(231,52,4)" rx="2" ry="2" />
<text  x="126.89" y="1887.5" ></text>
</g>
<g >
<title>auth::data_resource_view::keyspace (1 samples, 0.02%)</title><rect x="827.7" y="1733" width="0.2" height="15.0" fill="rgb(253,15,48)" rx="2" ry="2" />
<text  x="830.67" y="1743.5" ></text>
</g>
<g >
<title>antlr3::DefaultAllocPolicy::StackType&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*&gt;::StackType (1 samples, 0.02%)</title><rect x="20.4" y="1749" width="0.3" height="15.0" fill="rgb(232,190,3)" rx="2" ry="2" />
<text  x="23.44" y="1759.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (201 samples, 3.86%)</title><rect x="21.1" y="1829" width="45.6" height="15.0" fill="rgb(220,86,21)" rx="2" ry="2" />
<text  x="24.12" y="1839.5" >cql3..</text>
</g>
<g >
<title>ser::qr_clustered_row__cells&lt;bytes_ostream&gt;::start_cells (2 samples, 0.04%)</title><rect x="364.8" y="1605" width="0.5" height="15.0" fill="rgb(233,48,30)" rx="2" ry="2" />
<text  x="367.84" y="1615.5" ></text>
</g>
<g >
<title>query::querier_base::querier_base (512 samples, 9.84%)</title><rect x="439.9" y="1845" width="116.2" height="15.0" fill="rgb(241,47,0)" rx="2" ry="2" />
<text  x="442.94" y="1855.5" >query::querier..</text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::~_Variant_storage (1 samples, 0.02%)</title><rect x="47.9" y="1685" width="0.2" height="15.0" fill="rgb(212,120,46)" rx="2" ry="2" />
<text  x="50.89" y="1695.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.02%)</title><rect x="45.4" y="1589" width="0.2" height="15.0" fill="rgb(254,111,18)" rx="2" ry="2" />
<text  x="48.39" y="1599.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="101.2" y="1877" width="0.2" height="15.0" fill="rgb(220,106,3)" rx="2" ry="2" />
<text  x="104.21" y="1887.5" ></text>
</g>
<g >
<title>seastar::posix_file_impl::do_dma_read_bulk (1 samples, 0.02%)</title><rect x="17.9" y="1349" width="0.3" height="15.0" fill="rgb(218,225,48)" rx="2" ry="2" />
<text  x="20.94" y="1359.5" ></text>
</g>
<g >
<title>reader_selector::~reader_selector (1 samples, 0.02%)</title><rect x="591.5" y="1765" width="0.2" height="15.0" fill="rgb(218,81,53)" rx="2" ry="2" />
<text  x="594.49" y="1775.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::reserve (1 samples, 0.02%)</title><rect x="1133.7" y="1621" width="0.3" height="15.0" fill="rgb(244,43,5)" rx="2" ry="2" />
<text  x="1136.73" y="1631.5" ></text>
</g>
<g >
<title>database::add_column_family (5 samples, 0.10%)</title><rect x="108.2" y="1909" width="1.2" height="15.0" fill="rgb(235,57,4)" rx="2" ry="2" />
<text  x="111.24" y="1919.5" ></text>
</g>
<g >
<title>__vfprintf_internal (1 samples, 0.02%)</title><rect x="698.8" y="1797" width="0.2" height="15.0" fill="rgb(209,9,14)" rx="2" ry="2" />
<text  x="701.81" y="1807.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::leaf_node::free (2 samples, 0.04%)</title><rect x="424.5" y="1637" width="0.5" height="15.0" fill="rgb(252,115,21)" rx="2" ry="2" />
<text  x="427.51" y="1647.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::statements::drop_type_statement, std::default_delete&lt;cql3::statements::drop_type_statement&gt;, true, true&gt;::__uniq_ptr_data (1 samples, 0.02%)</title><rect x="62.9" y="1797" width="0.2" height="15.0" fill="rgb(226,207,48)" rx="2" ry="2" />
<text  x="65.86" y="1807.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (1 samples, 0.02%)</title><rect x="17.7" y="1733" width="0.2" height="15.0" fill="rgb(247,228,5)" rx="2" ry="2" />
<text  x="20.71" y="1743.5" ></text>
</g>
<g >
<title>write_fragmented&lt;managed_bytes_basic_view&lt; (12 samples, 0.23%)</title><rect x="902.3" y="1717" width="2.7" height="15.0" fill="rgb(217,227,54)" rx="2" ry="2" />
<text  x="905.32" y="1727.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reclaiming_disabled&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::get_static_row (13 samples, 0.25%)</title><rect x="289.1" y="1653" width="2.9" height="15.0" fill="rgb(205,83,6)" rx="2" ry="2" />
<text  x="292.06" y="1663.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (42 samples, 0.81%)</title><rect x="679.1" y="1925" width="9.5" height="15.0" fill="rgb(226,196,38)" rx="2" ry="2" />
<text  x="682.07" y="1935.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::move_it (1 samples, 0.02%)</title><rect x="681.1" y="1877" width="0.2" height="15.0" fill="rgb(205,44,38)" rx="2" ry="2" />
<text  x="684.11" y="1887.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::lower_bound&lt;mutation_partition, schema const&amp;, nonwrapping_interval&lt;clustering_key_prefix&gt; const&amp;&gt; (5 samples, 0.10%)</title><rect x="261.4" y="1573" width="1.1" height="15.0" fill="rgb(247,95,52)" rx="2" ry="2" />
<text  x="264.38" y="1583.5" ></text>
</g>
<g >
<title>tracing::global_trace_state_ptr::global_trace_state_ptr (2 samples, 0.04%)</title><rect x="1043.2" y="1701" width="0.5" height="15.0" fill="rgb(246,38,14)" rx="2" ry="2" />
<text  x="1046.21" y="1711.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;clustering_key_prefix, false, false&gt;::_Optional_base (1 samples, 0.02%)</title><rect x="274.1" y="1637" width="0.2" height="15.0" fill="rgb(220,182,0)" rx="2" ry="2" />
<text  x="277.09" y="1647.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::merging_reader (1 samples, 0.02%)</title><rect x="450.6" y="1733" width="0.2" height="15.0" fill="rgb(215,72,39)" rx="2" ry="2" />
<text  x="453.60" y="1743.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::operator= (2 samples, 0.04%)</title><rect x="49.9" y="1685" width="0.5" height="15.0" fill="rgb(231,169,33)" rx="2" ry="2" />
<text  x="52.93" y="1695.5" ></text>
</g>
<g >
<title>bplus::searcher&lt;dht::ring_position, long, dht::raw_token_less_comparator, 16ul,  (22 samples, 0.42%)</title><rect x="488.0" y="1701" width="5.0" height="15.0" fill="rgb(250,202,53)" rx="2" ry="2" />
<text  x="491.03" y="1711.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::process_where_clause (18 samples, 0.35%)</title><rect x="70.6" y="1845" width="4.1" height="15.0" fill="rgb(243,191,10)" rx="2" ry="2" />
<text  x="73.58" y="1855.5" ></text>
</g>
<g >
<title>ser::get_sizeof&lt;partition_key&gt; (1 samples, 0.02%)</title><rect x="1131.5" y="1557" width="0.2" height="15.0" fill="rgb(237,157,10)" rx="2" ry="2" />
<text  x="1134.47" y="1567.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;schema const&gt;::operator= (4 samples, 0.08%)</title><rect x="1035.7" y="1701" width="0.9" height="15.0" fill="rgb(232,47,23)" rx="2" ry="2" />
<text  x="1038.72" y="1711.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::populate_slot (1 samples, 0.02%)</title><rect x="108.0" y="1829" width="0.2" height="15.0" fill="rgb(234,117,10)" rx="2" ry="2" />
<text  x="111.01" y="1839.5" ></text>
</g>
<g >
<title>absl::hash_internal::HashState::combine_contiguous (1 samples, 0.02%)</title><rect x="858.1" y="1749" width="0.2" height="15.0" fill="rgb(213,196,25)" rx="2" ry="2" />
<text  x="861.08" y="1759.5" ></text>
</g>
<g >
<title>partition_version_ref::operator (1 samples, 0.02%)</title><rect x="262.5" y="1573" width="0.2" height="15.0" fill="rgb(243,187,49)" rx="2" ry="2" />
<text  x="265.52" y="1583.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (1 samples, 0.02%)</title><rect x="1157.6" y="1909" width="0.2" height="15.0" fill="rgb(215,192,38)" rx="2" ry="2" />
<text  x="1160.56" y="1919.5" ></text>
</g>
<g >
<title>logalloc::basic_region_impl::set_reclaiming_enabled (1 samples, 0.02%)</title><rect x="527.7" y="1653" width="0.3" height="15.0" fill="rgb(254,31,51)" rx="2" ry="2" />
<text  x="530.74" y="1663.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.02%)</title><rect x="236.4" y="1445" width="0.3" height="15.0" fill="rgb(212,171,30)" rx="2" ry="2" />
<text  x="239.43" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;11ul, cql3::expr::untyped_constant&gt; (2 samples, 0.04%)</title><rect x="52.7" y="1541" width="0.4" height="15.0" fill="rgb(214,78,32)" rx="2" ry="2" />
<text  x="55.65" y="1551.5" ></text>
</g>
<g >
<title>locator::token_metadata::first_token (21 samples, 0.40%)</title><rect x="1067.0" y="1701" width="4.8" height="15.0" fill="rgb(218,118,7)" rx="2" ry="2" />
<text  x="1070.03" y="1711.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_live_endpoints (59 samples, 1.13%)</title><rect x="1066.1" y="1749" width="13.4" height="15.0" fill="rgb(208,57,52)" rx="2" ry="2" />
<text  x="1069.12" y="1759.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_M_reset (2 samples, 0.04%)</title><rect x="1095.2" y="1797" width="0.4" height="15.0" fill="rgb(219,190,25)" rx="2" ry="2" />
<text  x="1098.16" y="1807.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::schedule&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (6 samples, 0.12%)</title><rect x="847.2" y="1813" width="1.3" height="15.0" fill="rgb(243,28,24)" rx="2" ry="2" />
<text  x="850.19" y="1823.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (1 samples, 0.02%)</title><rect x="59.7" y="1717" width="0.2" height="15.0" fill="rgb(228,117,32)" rx="2" ry="2" />
<text  x="62.69" y="1727.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (11 samples, 0.21%)</title><rect x="1157.8" y="1909" width="2.5" height="15.0" fill="rgb(237,199,2)" rx="2" ry="2" />
<text  x="1160.78" y="1919.5" ></text>
</g>
<g >
<title>dht::i_partitioner::decorate_key (2 samples, 0.04%)</title><rect x="878.9" y="1717" width="0.5" height="15.0" fill="rgb(234,227,0)" rx="2" ry="2" />
<text  x="881.95" y="1727.5" ></text>
</g>
<g >
<title>memtable::apply (25 samples, 0.48%)</title><rect x="1119.2" y="1685" width="5.7" height="15.0" fill="rgb(240,166,2)" rx="2" ry="2" />
<text  x="1122.21" y="1695.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector (1 samples, 0.02%)</title><rect x="1064.5" y="1733" width="0.3" height="15.0" fill="rgb(247,79,42)" rx="2" ry="2" />
<text  x="1067.54" y="1743.5" ></text>
</g>
<g >
<title>intrusive_b::node&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (1 samples, 0.02%)</title><rect x="701.3" y="1605" width="0.2" height="15.0" fill="rgb(249,173,25)" rx="2" ry="2" />
<text  x="704.30" y="1615.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (5 samples, 0.10%)</title><rect x="471.5" y="1701" width="1.1" height="15.0" fill="rgb(249,193,25)" rx="2" ry="2" />
<text  x="474.47" y="1711.5" ></text>
</g>
<g >
<title>cql3::raw_value::to_view (2 samples, 0.04%)</title><rect x="864.2" y="1829" width="0.5" height="15.0" fill="rgb(222,200,26)" rx="2" ry="2" />
<text  x="867.20" y="1839.5" ></text>
</g>
<g >
<title>std::default_delete&lt;compact_for_query&lt; (2 samples, 0.04%)</title><rect x="433.1" y="1685" width="0.5" height="15.0" fill="rgb(246,71,36)" rx="2" ry="2" />
<text  x="436.13" y="1695.5" ></text>
</g>
<g >
<title>reconcilable_result_builder::consume_end_of_partition (1 samples, 0.02%)</title><rect x="138.2" y="1653" width="0.2" height="15.0" fill="rgb(230,99,26)" rx="2" ry="2" />
<text  x="141.19" y="1663.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (12 samples, 0.23%)</title><rect x="583.1" y="1717" width="2.7" height="15.0" fill="rgb(226,208,37)" rx="2" ry="2" />
<text  x="586.10" y="1727.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::set_tokText (3 samples, 0.06%)</title><rect x="27.7" y="1669" width="0.7" height="15.0" fill="rgb(223,223,17)" rx="2" ry="2" />
<text  x="30.70" y="1679.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (2 samples, 0.04%)</title><rect x="42.4" y="1749" width="0.5" height="15.0" fill="rgb(213,220,38)" rx="2" ry="2" />
<text  x="45.44" y="1759.5" ></text>
</g>
<g >
<title>managed_bytes::operator= (4 samples, 0.08%)</title><rect x="932.5" y="1829" width="0.9" height="15.0" fill="rgb(253,12,19)" rx="2" ry="2" />
<text  x="935.49" y="1839.5" ></text>
</g>
<g >
<title>std::optional&lt;query::querier&lt; (7 samples, 0.13%)</title><rect x="636.0" y="1861" width="1.5" height="15.0" fill="rgb(233,93,0)" rx="2" ry="2" />
<text  x="638.96" y="1871.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_requests (261 samples, 5.02%)</title><rect x="987.2" y="1765" width="59.2" height="15.0" fill="rgb(222,11,22)" rx="2" ry="2" />
<text  x="990.17" y="1775.5" >servic..</text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getText[abi:cxx11] (1 samples, 0.02%)</title><rect x="53.3" y="1685" width="0.3" height="15.0" fill="rgb(228,147,48)" rx="2" ry="2" />
<text  x="56.33" y="1695.5" ></text>
</g>
<g >
<title>cql3::expr::expression::~expression (1 samples, 0.02%)</title><rect x="47.9" y="1733" width="0.2" height="15.0" fill="rgb(225,82,14)" rx="2" ry="2" />
<text  x="50.89" y="1743.5" ></text>
</g>
<g >
<title>std::forward_as_tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const&amp;, auth::resource&gt; (2 samples, 0.04%)</title><rect x="829.7" y="1813" width="0.5" height="15.0" fill="rgb(236,227,34)" rx="2" ry="2" />
<text  x="832.72" y="1823.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_restrictions::size (1 samples, 0.02%)</title><rect x="947.7" y="1829" width="0.2" height="15.0" fill="rgb(236,12,36)" rx="2" ry="2" />
<text  x="950.69" y="1839.5" ></text>
</g>
<g >
<title>empty_flat_reader::empty_flat_reader (1 samples, 0.02%)</title><rect x="548.4" y="1701" width="0.2" height="15.0" fill="rgb(245,220,34)" rx="2" ry="2" />
<text  x="551.38" y="1711.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::~modification_statement (5 samples, 0.10%)</title><rect x="654.1" y="1893" width="1.1" height="15.0" fill="rgb(248,130,7)" rx="2" ry="2" />
<text  x="657.11" y="1903.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (12 samples, 0.23%)</title><rect x="416.3" y="1669" width="2.8" height="15.0" fill="rgb(244,121,22)" rx="2" ry="2" />
<text  x="419.34" y="1679.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.02%)</title><rect x="812.5" y="1541" width="0.2" height="15.0" fill="rgb(216,5,7)" rx="2" ry="2" />
<text  x="815.47" y="1551.5" ></text>
</g>
<g >
<title>keyspace::column_family_directory (1 samples, 0.02%)</title><rect x="109.4" y="1893" width="0.2" height="15.0" fill="rgb(223,190,30)" rx="2" ry="2" />
<text  x="112.37" y="1903.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (2 samples, 0.04%)</title><rect x="302.9" y="1717" width="0.5" height="15.0" fill="rgb(224,154,10)" rx="2" ry="2" />
<text  x="305.90" y="1727.5" ></text>
</g>
<g >
<title>query_result_builder::consume (172 samples, 3.31%)</title><rect x="353.3" y="1637" width="39.0" height="15.0" fill="rgb(225,199,25)" rx="2" ry="2" />
<text  x="356.27" y="1647.5" >que..</text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (3 samples, 0.06%)</title><rect x="694.7" y="1877" width="0.7" height="15.0" fill="rgb(251,76,49)" rx="2" ry="2" />
<text  x="697.72" y="1887.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (1 samples, 0.02%)</title><rect x="334.7" y="1653" width="0.2" height="15.0" fill="rgb(239,1,6)" rx="2" ry="2" />
<text  x="337.66" y="1663.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.06%)</title><rect x="801.1" y="1669" width="0.7" height="15.0" fill="rgb(247,160,4)" rx="2" ry="2" />
<text  x="804.13" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::binary_operator const*&gt;  (1 samples, 0.02%)</title><rect x="662.3" y="1861" width="0.2" height="15.0" fill="rgb(251,77,44)" rx="2" ry="2" />
<text  x="665.28" y="1871.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.08%)</title><rect x="865.1" y="1845" width="0.9" height="15.0" fill="rgb(242,202,4)" rx="2" ry="2" />
<text  x="868.11" y="1855.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (1 samples, 0.02%)</title><rect x="305.6" y="1765" width="0.3" height="15.0" fill="rgb(250,183,12)" rx="2" ry="2" />
<text  x="308.62" y="1775.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.02%)</title><rect x="49.5" y="1573" width="0.2" height="15.0" fill="rgb(221,12,26)" rx="2" ry="2" />
<text  x="52.48" y="1583.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.02%)</title><rect x="47.2" y="1589" width="0.2" height="15.0" fill="rgb(222,173,54)" rx="2" ry="2" />
<text  x="50.21" y="1599.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_initialize_map (2 samples, 0.04%)</title><rect x="567.2" y="1813" width="0.5" height="15.0" fill="rgb(208,86,52)" rx="2" ry="2" />
<text  x="570.22" y="1823.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="83.7" y="1749" width="0.3" height="15.0" fill="rgb(234,91,11)" rx="2" ry="2" />
<text  x="86.74" y="1759.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::on_permit_destroyed (4 samples, 0.08%)</title><rect x="126.6" y="1845" width="0.9" height="15.0" fill="rgb(241,19,24)" rx="2" ry="2" />
<text  x="129.62" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_ctor_base (1 samples, 0.02%)</title><rect x="73.1" y="1621" width="0.2" height="15.0" fill="rgb(207,220,18)" rx="2" ry="2" />
<text  x="76.07" y="1631.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.02%)</title><rect x="40.9" y="1653" width="0.2" height="15.0" fill="rgb(223,6,9)" rx="2" ry="2" />
<text  x="43.86" y="1663.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::free (1 samples, 0.02%)</title><rect x="423.8" y="1605" width="0.3" height="15.0" fill="rgb(236,120,49)" rx="2" ry="2" />
<text  x="426.83" y="1615.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;auth::resource, auth::resource, std::allocator&lt;auth::resource&gt;, std::__detail::_Identity, std::equal_to&lt;auth::resource&gt;, std::hash&lt;auth::resource&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;::_M_find_before_node (1 samples, 0.02%)</title><rect x="827.2" y="1765" width="0.2" height="15.0" fill="rgb(217,121,6)" rx="2" ry="2" />
<text  x="830.22" y="1775.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::operator (1 samples, 0.02%)</title><rect x="17.9" y="1877" width="0.3" height="15.0" fill="rgb(223,198,3)" rx="2" ry="2" />
<text  x="20.94" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; const, column_definition const*&gt;, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; const, column_definition const*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;, std::hash&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::operator[] (1 samples, 0.02%)</title><rect x="17.3" y="1557" width="0.2" height="15.0" fill="rgb(234,31,8)" rx="2" ry="2" />
<text  x="20.26" y="1567.5" ></text>
</g>
<g >
<title>std::forward&lt;cql3::cf_name&gt; (1 samples, 0.02%)</title><rect x="61.5" y="1765" width="0.2" height="15.0" fill="rgb(220,162,8)" rx="2" ry="2" />
<text  x="64.50" y="1775.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (1 samples, 0.02%)</title><rect x="272.5" y="1621" width="0.2" height="15.0" fill="rgb(231,191,47)" rx="2" ry="2" />
<text  x="275.50" y="1631.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume_in_thread&lt;sstables::sstable_writer, flat_mutation_reader::no_filter&gt; (14 samples, 0.27%)</title><rect x="81.2" y="1909" width="3.2" height="15.0" fill="rgb(205,202,37)" rx="2" ry="2" />
<text  x="84.24" y="1919.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (284 samples, 5.46%)</title><rect x="16.1" y="2005" width="64.5" height="15.0" fill="rgb(223,48,27)" rx="2" ry="2" />
<text  x="19.13" y="2015.5" >seastar..</text>
</g>
<g >
<title>mutation_reader_merger::maybe_add_readers (32 samples, 0.62%)</title><rect x="453.3" y="1717" width="7.3" height="15.0" fill="rgb(208,223,9)" rx="2" ry="2" />
<text  x="456.32" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt;::_Copy_ctor_base (1 samples, 0.02%)</title><rect x="869.2" y="1845" width="0.2" height="15.0" fill="rgb(206,11,54)" rx="2" ry="2" />
<text  x="872.19" y="1855.5" ></text>
</g>
<g >
<title>utils::tuple_hash::operator (1 samples, 0.02%)</title><rect x="816.6" y="1605" width="0.2" height="15.0" fill="rgb(218,3,34)" rx="2" ry="2" />
<text  x="819.56" y="1615.5" ></text>
</g>
<g >
<title>bound_view::tri_compare::operator (1 samples, 0.02%)</title><rect x="106.2" y="1781" width="0.2" height="15.0" fill="rgb(223,64,25)" rx="2" ry="2" />
<text  x="109.20" y="1791.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="24.5" y="1685" width="0.2" height="15.0" fill="rgb(244,31,23)" rx="2" ry="2" />
<text  x="27.52" y="1695.5" ></text>
</g>
<g >
<title>std::_Bind_front&lt;bool  (1 samples, 0.02%)</title><rect x="876.5" y="1797" width="0.2" height="15.0" fill="rgb(224,95,2)" rx="2" ry="2" />
<text  x="879.45" y="1807.5" ></text>
</g>
<g >
<title>mutation_reader_merger::maybe_add_readers (1 samples, 0.02%)</title><rect x="450.8" y="1733" width="0.3" height="15.0" fill="rgb(234,27,52)" rx="2" ry="2" />
<text  x="453.83" y="1743.5" ></text>
</g>
<g >
<title>std::__optional_hash_call_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, true&gt;::operator (3 samples, 0.06%)</title><rect x="763.2" y="1733" width="0.7" height="15.0" fill="rgb(206,148,3)" rx="2" ry="2" />
<text  x="766.24" y="1743.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::result_memory_accounter (1 samples, 0.02%)</title><rect x="617.8" y="1845" width="0.2" height="15.0" fill="rgb(233,122,19)" rx="2" ry="2" />
<text  x="620.81" y="1855.5" ></text>
</g>
<g >
<title>ser::serializer&lt;schema_mutations&gt;::write&lt;bytes_ostream&gt; (2 samples, 0.04%)</title><rect x="108.7" y="1861" width="0.4" height="15.0" fill="rgb(254,212,25)" rx="2" ry="2" />
<text  x="111.69" y="1871.5" ></text>
</g>
<g >
<title>_ZSt5applyIZN7seastar8internal12do_with_implIN4auth17role_or_anonymousEZNS3_15get_permissionsERKNS3_7serviceERKNS3_18authenticated_userERKNS3_8resourceEE3$_9JEEEDaOT_OT0_DpOT1_EUlDpOT_E_St5tupleIJOS4_EEEDcSG_SI_ (5 samples, 0.10%)</title><rect x="798.6" y="1717" width="1.2" height="15.0" fill="rgb(211,25,6)" rx="2" ry="2" />
<text  x="801.63" y="1727.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.02%)</title><rect x="53.6" y="1669" width="0.2" height="15.0" fill="rgb(214,14,45)" rx="2" ry="2" />
<text  x="56.56" y="1679.5" ></text>
</g>
<g >
<title>seastar::metrics::impl::metric_id::full_name (1 samples, 0.02%)</title><rect x="12.3" y="1909" width="0.2" height="15.0" fill="rgb(237,131,47)" rx="2" ry="2" />
<text  x="15.27" y="1919.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, cql3::statements::revoke_statement*, std::default_delete&lt;cql3::statements::revoke_statement&gt; &gt; (1 samples, 0.02%)</title><rect x="65.1" y="1781" width="0.3" height="15.0" fill="rgb(224,138,34)" rx="2" ry="2" />
<text  x="68.13" y="1791.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (7 samples, 0.13%)</title><rect x="193.5" y="1685" width="1.6" height="15.0" fill="rgb(228,194,52)" rx="2" ry="2" />
<text  x="196.55" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::binary_operator const*&gt;  (1 samples, 0.02%)</title><rect x="952.5" y="1733" width="0.2" height="15.0" fill="rgb(249,158,52)" rx="2" ry="2" />
<text  x="955.46" y="1743.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_rec (1 samples, 0.02%)</title><rect x="40.2" y="1765" width="0.2" height="15.0" fill="rgb(247,157,53)" rx="2" ry="2" />
<text  x="43.17" y="1775.5" ></text>
</g>
<g >
<title>seastar::internal::awaiter&lt;query::result_memory_accounter&gt;::awaiter (1 samples, 0.02%)</title><rect x="622.6" y="1861" width="0.2" height="15.0" fill="rgb(223,152,5)" rx="2" ry="2" />
<text  x="625.57" y="1871.5" ></text>
</g>
<g >
<title>sstables::mx::mx_sstable_mutation_reader::read_from_datafile (1 samples, 0.02%)</title><rect x="17.9" y="1637" width="0.3" height="15.0" fill="rgb(229,126,30)" rx="2" ry="2" />
<text  x="20.94" y="1647.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::digest_read_result&gt;::then_wrapped_common&lt;true, void, service::abstract_read_executor::execute (12 samples, 0.23%)</title><rect x="975.8" y="1765" width="2.7" height="15.0" fill="rgb(250,66,6)" rx="2" ry="2" />
<text  x="978.83" y="1775.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (2 samples, 0.04%)</title><rect x="50.4" y="1685" width="0.4" height="15.0" fill="rgb(229,161,29)" rx="2" ry="2" />
<text  x="53.38" y="1695.5" ></text>
</g>
<g >
<title>validation::validate_column_family (41 samples, 0.79%)</title><rect x="833.1" y="1813" width="9.3" height="15.0" fill="rgb(252,8,31)" rx="2" ry="2" />
<text  x="836.12" y="1823.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::clear (2 samples, 0.04%)</title><rect x="1163.0" y="1845" width="0.5" height="15.0" fill="rgb(205,135,28)" rx="2" ry="2" />
<text  x="1166.00" y="1855.5" ></text>
</g>
<g >
<title>service::abstract_write_response_handler::response (2 samples, 0.04%)</title><rect x="729.9" y="1893" width="0.4" height="15.0" fill="rgb(206,105,14)" rx="2" ry="2" />
<text  x="732.89" y="1903.5" ></text>
</g>
<g >
<title>seastar::make_shared&lt;cql3::column_identifier_raw, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, bool&gt; (4 samples, 0.08%)</title><rect x="44.5" y="1749" width="0.9" height="15.0" fill="rgb(244,5,42)" rx="2" ry="2" />
<text  x="47.49" y="1759.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (6 samples, 0.12%)</title><rect x="699.3" y="1861" width="1.3" height="15.0" fill="rgb(233,54,15)" rx="2" ry="2" />
<text  x="702.26" y="1871.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;std::function&lt;std::function&lt;partition_presence_checker_result  (1 samples, 0.02%)</title><rect x="638.7" y="1829" width="0.2" height="15.0" fill="rgb(241,205,46)" rx="2" ry="2" />
<text  x="641.68" y="1839.5" ></text>
</g>
<g >
<title>dht::murmur3_partitioner::get_token (1 samples, 0.02%)</title><rect x="877.1" y="1765" width="0.3" height="15.0" fill="rgb(226,204,42)" rx="2" ry="2" />
<text  x="880.13" y="1775.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (1 samples, 0.02%)</title><rect x="712.6" y="1893" width="0.3" height="15.0" fill="rgb(208,89,48)" rx="2" ry="2" />
<text  x="715.65" y="1903.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::enqueue_waiter (2 samples, 0.04%)</title><rect x="1027.3" y="1653" width="0.5" height="15.0" fill="rgb(222,124,15)" rx="2" ry="2" />
<text  x="1030.33" y="1663.5" ></text>
</g>
<g >
<title>utils::sequenced_set&lt;gms::inet_address&gt;::insert (1 samples, 0.02%)</title><rect x="109.6" y="1893" width="0.2" height="15.0" fill="rgb(214,92,48)" rx="2" ry="2" />
<text  x="112.60" y="1903.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (2 samples, 0.04%)</title><rect x="715.4" y="1893" width="0.4" height="15.0" fill="rgb(225,209,30)" rx="2" ry="2" />
<text  x="718.37" y="1903.5" ></text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;void&gt;, service::storage_proxy*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt;, db::consistency_level, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, tracing::trace_state_ptr, service_permit, bool, seastar::lw_shared_ptr&lt;cdc::operation_result_tracker&gt; &gt;::make_stage_for_group (35 samples, 0.67%)</title><rect x="1126.5" y="1829" width="7.9" height="15.0" fill="rgb(222,214,50)" rx="2" ry="2" />
<text  x="1129.47" y="1839.5" ></text>
</g>
<g >
<title>__GI___tunables_init (1 samples, 0.02%)</title><rect x="84.6" y="2053" width="0.3" height="15.0" fill="rgb(221,101,40)" rx="2" ry="2" />
<text  x="87.64" y="2063.5" ></text>
</g>
<g >
<title>compound_type&lt; (1 samples, 0.02%)</title><rect x="1119.2" y="1605" width="0.2" height="15.0" fill="rgb(250,9,28)" rx="2" ry="2" />
<text  x="1122.21" y="1615.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (2 samples, 0.04%)</title><rect x="607.6" y="1813" width="0.5" height="15.0" fill="rgb(227,63,47)" rx="2" ry="2" />
<text  x="610.60" y="1823.5" ></text>
</g>
<g >
<title>schema_registry::get_or_load (3 samples, 0.06%)</title><rect x="106.7" y="1829" width="0.6" height="15.0" fill="rgb(221,181,9)" rx="2" ry="2" />
<text  x="109.65" y="1839.5" ></text>
</g>
<g >
<title>std::construct_at&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::entry&gt; (5 samples, 0.10%)</title><rect x="133.2" y="1829" width="1.1" height="15.0" fill="rgb(240,157,15)" rx="2" ry="2" />
<text  x="136.20" y="1839.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.06%)</title><rect x="564.3" y="1781" width="0.6" height="15.0" fill="rgb(253,123,14)" rx="2" ry="2" />
<text  x="567.27" y="1791.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::get0 (1 samples, 0.02%)</title><rect x="309.9" y="1781" width="0.3" height="15.0" fill="rgb(209,101,2)" rx="2" ry="2" />
<text  x="312.93" y="1791.5" ></text>
</g>
<g >
<title>nonwrapping_interval&lt;clustering_key_prefix&gt;::nonwrapping_interval (4 samples, 0.08%)</title><rect x="1094.3" y="1797" width="0.9" height="15.0" fill="rgb(214,108,16)" rx="2" ry="2" />
<text  x="1097.26" y="1807.5" ></text>
</g>
<g >
<title>antlr3::DefaultAllocPolicy::StackType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::pop (1 samples, 0.02%)</title><rect x="46.1" y="1733" width="0.2" height="15.0" fill="rgb(242,78,40)" rx="2" ry="2" />
<text  x="49.07" y="1743.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.04%)</title><rect x="474.6" y="1749" width="0.5" height="15.0" fill="rgb(230,44,27)" rx="2" ry="2" />
<text  x="477.65" y="1759.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume_in_thread&lt;sstables::sstable_writer, flat_mutation_reader::no_filter&gt; (1 samples, 0.02%)</title><rect x="698.8" y="1717" width="0.2" height="15.0" fill="rgb(243,14,43)" rx="2" ry="2" />
<text  x="701.81" y="1727.5" ></text>
</g>
<g >
<title>seastar::internal::sharded_parallel_for_each (1 samples, 0.02%)</title><rect x="17.3" y="1861" width="0.2" height="15.0" fill="rgb(237,195,11)" rx="2" ry="2" />
<text  x="20.26" y="1871.5" ></text>
</g>
<g >
<title>partition_snapshot_row_cursor::memory_usage (1 samples, 0.02%)</title><rect x="16.8" y="1973" width="0.2" height="15.0" fill="rgb(238,71,6)" rx="2" ry="2" />
<text  x="19.81" y="1983.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, cql3::statements::raw::select_statement*, std::default_delete&lt;cql3::statements::raw::select_statement&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="64.9" y="1733" width="0.2" height="15.0" fill="rgb(232,201,20)" rx="2" ry="2" />
<text  x="67.90" y="1743.5" ></text>
</g>
<g >
<title>cql3::restrictions::restriction::restriction (4 samples, 0.08%)</title><rect x="71.3" y="1765" width="0.9" height="15.0" fill="rgb(231,114,52)" rx="2" ry="2" />
<text  x="74.26" y="1775.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="109.8" y="1925" width="0.3" height="15.0" fill="rgb(214,130,29)" rx="2" ry="2" />
<text  x="112.83" y="1935.5" ></text>
</g>
<g >
<title>partition_key::from_range&lt;std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt; const&amp;&gt; (19 samples, 0.37%)</title><rect x="926.1" y="1813" width="4.3" height="15.0" fill="rgb(219,95,41)" rx="2" ry="2" />
<text  x="929.14" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, std::hash&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::operator[] (1 samples, 0.02%)</title><rect x="11.6" y="1781" width="0.2" height="15.0" fill="rgb(246,109,32)" rx="2" ry="2" />
<text  x="14.59" y="1791.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;auth::resource_kind, std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;auth::resource_kind&gt;, std::hash&lt;auth::resource_kind&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (2 samples, 0.04%)</title><rect x="787.1" y="1765" width="0.4" height="15.0" fill="rgb(205,171,20)" rx="2" ry="2" />
<text  x="790.06" y="1775.5" ></text>
</g>
<g >
<title>std::push_heap&lt;mutation_reader_merger::reader_and_fragment*, mutation_reader_merger::reader_heap_compare&gt; (9 samples, 0.17%)</title><rect x="185.4" y="1669" width="2.0" height="15.0" fill="rgb(251,82,54)" rx="2" ry="2" />
<text  x="188.38" y="1679.5" ></text>
</g>
<g >
<title>skip_empty_fragments&lt;managed_bytes_basic_view&lt; (2 samples, 0.04%)</title><rect x="505.5" y="1637" width="0.5" height="15.0" fill="rgb(230,52,42)" rx="2" ry="2" />
<text  x="508.50" y="1647.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (2 samples, 0.04%)</title><rect x="409.5" y="1589" width="0.5" height="15.0" fill="rgb(205,121,27)" rx="2" ry="2" />
<text  x="412.53" y="1599.5" ></text>
</g>
<g >
<title>memtable::find_or_create_partition (6 samples, 0.12%)</title><rect x="1119.4" y="1653" width="1.4" height="15.0" fill="rgb(253,141,0)" rx="2" ry="2" />
<text  x="1122.44" y="1663.5" ></text>
</g>
<g >
<title>non-virtual thunk to cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::~single_column_primary_key_restrictions (2 samples, 0.04%)</title><rect x="654.1" y="1861" width="0.5" height="15.0" fill="rgb(252,27,37)" rx="2" ry="2" />
<text  x="657.11" y="1871.5" ></text>
</g>
<g >
<title>seastar::internal::do_until_state&lt;executor&lt;test_read (613 samples, 11.79%)</title><rect x="733.5" y="1925" width="139.1" height="15.0" fill="rgb(216,58,17)" rx="2" ry="2" />
<text  x="736.52" y="1935.5" >seastar::internal..</text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.02%)</title><rect x="977.9" y="1701" width="0.2" height="15.0" fill="rgb(234,197,30)" rx="2" ry="2" />
<text  x="980.87" y="1711.5" ></text>
</g>
<g >
<title>seastar::repeat&lt;seastar::input_stream&lt;char&gt;::consume&lt;std::reference_wrapper&lt;sstables::mx::data_consume_rows_context_m&gt; &gt; (1 samples, 0.02%)</title><rect x="17.9" y="1605" width="0.3" height="15.0" fill="rgb(238,202,47)" rx="2" ry="2" />
<text  x="20.94" y="1615.5" ></text>
</g>
<g >
<title>row_cache::invalidate (1 samples, 0.02%)</title><rect x="701.3" y="1845" width="0.2" height="15.0" fill="rgb(221,198,7)" rx="2" ry="2" />
<text  x="704.30" y="1855.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_impl&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (6 samples, 0.12%)</title><rect x="699.3" y="1829" width="1.3" height="15.0" fill="rgb(231,95,46)" rx="2" ry="2" />
<text  x="702.26" y="1839.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.02%)</title><rect x="49.5" y="1621" width="0.2" height="15.0" fill="rgb(213,44,26)" rx="2" ry="2" />
<text  x="52.48" y="1631.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.5" y="1253" width="0.2" height="15.0" fill="rgb(240,99,15)" rx="2" ry="2" />
<text  x="13.45" y="1263.5" ></text>
</g>
<g >
<title>operator new (7 samples, 0.13%)</title><rect x="959.5" y="1797" width="1.6" height="15.0" fill="rgb(230,20,33)" rx="2" ry="2" />
<text  x="962.49" y="1807.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::result_set, std::default_delete&lt;cql3::result_set&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="669.3" y="1877" width="0.2" height="15.0" fill="rgb(248,44,11)" rx="2" ry="2" />
<text  x="672.31" y="1887.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (5 samples, 0.10%)</title><rect x="518.4" y="1685" width="1.2" height="15.0" fill="rgb(241,39,27)" rx="2" ry="2" />
<text  x="521.44" y="1695.5" ></text>
</g>
<g >
<title>reader_permit::impl::on_admission (2 samples, 0.04%)</title><rect x="129.1" y="1829" width="0.5" height="15.0" fill="rgb(209,166,46)" rx="2" ry="2" />
<text  x="132.11" y="1839.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="53.6" y="1637" width="0.2" height="15.0" fill="rgb(212,170,32)" rx="2" ry="2" />
<text  x="56.56" y="1647.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;flat_mutation_reader::impl::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (7 samples, 0.13%)</title><rect x="333.3" y="1717" width="1.6" height="15.0" fill="rgb(236,79,9)" rx="2" ry="2" />
<text  x="336.30" y="1727.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (489 samples, 9.40%)</title><rect x="326.7" y="1813" width="111.0" height="15.0" fill="rgb(225,180,27)" rx="2" ry="2" />
<text  x="329.72" y="1823.5" >query::consum..</text>
</g>
<g >
<title>seastar::parallel_for_each&lt;service::storage_proxy::unique_response_handler*, service::storage_proxy::mutate_begin (11 samples, 0.21%)</title><rect x="1126.7" y="1701" width="2.5" height="15.0" fill="rgb(206,67,3)" rx="2" ry="2" />
<text  x="1129.70" y="1711.5" ></text>
</g>
<g >
<title>std::_Optional_base_impl&lt;mutation_querier, std::_Optional_base&lt;mutation_querier, false, false&gt; &gt;::_M_construct&lt;mutation_querier&gt; (2 samples, 0.04%)</title><rect x="351.7" y="1589" width="0.4" height="15.0" fill="rgb(238,157,15)" rx="2" ry="2" />
<text  x="354.68" y="1599.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="256.2" y="1573" width="0.2" height="15.0" fill="rgb(230,129,10)" rx="2" ry="2" />
<text  x="259.16" y="1583.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, enum_set&lt;super_enum&lt;auth::permission,  (1 samples, 0.02%)</title><rect x="77.8" y="1669" width="0.3" height="15.0" fill="rgb(224,141,2)" rx="2" ry="2" />
<text  x="80.84" y="1679.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_internal&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt; &gt; (32 samples, 0.62%)</title><rect x="1126.7" y="1749" width="7.3" height="15.0" fill="rgb(231,142,40)" rx="2" ry="2" />
<text  x="1129.70" y="1759.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.02%)</title><rect x="49.5" y="1589" width="0.2" height="15.0" fill="rgb(241,182,53)" rx="2" ry="2" />
<text  x="52.48" y="1599.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (2 samples, 0.04%)</title><rect x="246.4" y="1541" width="0.5" height="15.0" fill="rgb(238,79,39)" rx="2" ry="2" />
<text  x="249.41" y="1551.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::range_or_slice_eq_null (2 samples, 0.04%)</title><rect x="876.2" y="1813" width="0.5" height="15.0" fill="rgb(236,166,26)" rx="2" ry="2" />
<text  x="879.23" y="1823.5" ></text>
</g>
<g >
<title>std::hash&lt;wrapping_interval&lt;dht::token&gt; &gt;::operator (1 samples, 0.02%)</title><rect x="1084.0" y="1765" width="0.3" height="15.0" fill="rgb(245,170,3)" rx="2" ry="2" />
<text  x="1087.05" y="1775.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (2 samples, 0.04%)</title><rect x="1098.8" y="1749" width="0.4" height="15.0" fill="rgb(250,24,4)" rx="2" ry="2" />
<text  x="1101.79" y="1759.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (3 samples, 0.06%)</title><rect x="842.6" y="1845" width="0.7" height="15.0" fill="rgb(249,122,50)" rx="2" ry="2" />
<text  x="845.65" y="1855.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_type (1 samples, 0.02%)</title><rect x="25.0" y="1717" width="0.2" height="15.0" fill="rgb(230,202,29)" rx="2" ry="2" />
<text  x="27.97" y="1727.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (30 samples, 0.58%)</title><rect x="419.5" y="1669" width="6.8" height="15.0" fill="rgb(227,72,49)" rx="2" ry="2" />
<text  x="422.52" y="1679.5" ></text>
</g>
<g >
<title>cql3::keyspace_element_name::has_keyspace (1 samples, 0.02%)</title><rect x="19.5" y="1893" width="0.3" height="15.0" fill="rgb(247,19,43)" rx="2" ry="2" />
<text  x="22.53" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::binary_operator const*&gt;  (1 samples, 0.02%)</title><rect x="945.9" y="1765" width="0.2" height="15.0" fill="rgb(229,228,50)" rx="2" ry="2" />
<text  x="948.88" y="1775.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.02%)</title><rect x="55.4" y="1717" width="0.2" height="15.0" fill="rgb(224,199,24)" rx="2" ry="2" />
<text  x="58.38" y="1727.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reclaiming_disabled&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (248 samples, 4.77%)</title><rect x="209.9" y="1637" width="56.2" height="15.0" fill="rgb(247,186,5)" rx="2" ry="2" />
<text  x="212.88" y="1647.5" >logal..</text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.02%)</title><rect x="47.2" y="1701" width="0.2" height="15.0" fill="rgb(206,159,26)" rx="2" ry="2" />
<text  x="50.21" y="1711.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_range_tombstone (12 samples, 0.23%)</title><rect x="268.4" y="1605" width="2.7" height="15.0" fill="rgb(210,206,9)" rx="2" ry="2" />
<text  x="271.42" y="1615.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const*, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;*&gt; (4 samples, 0.08%)</title><rect x="808.6" y="1605" width="0.9" height="15.0" fill="rgb(249,91,3)" rx="2" ry="2" />
<text  x="811.62" y="1615.5" ></text>
</g>
<g >
<title>auth::create_metadata_table_if_missing (1 samples, 0.02%)</title><rect x="700.6" y="1861" width="0.2" height="15.0" fill="rgb(205,59,42)" rx="2" ry="2" />
<text  x="703.62" y="1871.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::maybe_refresh_state (30 samples, 0.58%)</title><rect x="258.0" y="1605" width="6.8" height="15.0" fill="rgb(224,220,43)" rx="2" ry="2" />
<text  x="260.98" y="1615.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (2 samples, 0.04%)</title><rect x="453.3" y="1701" width="0.5" height="15.0" fill="rgb(230,166,17)" rx="2" ry="2" />
<text  x="456.32" y="1711.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (3 samples, 0.06%)</title><rect x="940.7" y="1749" width="0.6" height="15.0" fill="rgb(253,142,29)" rx="2" ry="2" />
<text  x="943.66" y="1759.5" ></text>
</g>
<g >
<title>query_state::query_state (36 samples, 0.69%)</title><rect x="609.9" y="1861" width="8.1" height="15.0" fill="rgb(244,221,29)" rx="2" ry="2" />
<text  x="612.87" y="1871.5" ></text>
</g>
<g >
<title>std::hash&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::operator (1 samples, 0.02%)</title><rect x="838.8" y="1717" width="0.2" height="15.0" fill="rgb(229,211,15)" rx="2" ry="2" />
<text  x="841.79" y="1727.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (2 samples, 0.04%)</title><rect x="868.5" y="1829" width="0.5" height="15.0" fill="rgb(226,85,12)" rx="2" ry="2" />
<text  x="871.51" y="1839.5" ></text>
</g>
<g >
<title>compound_type&lt; (1 samples, 0.02%)</title><rect x="83.7" y="1765" width="0.3" height="15.0" fill="rgb(213,126,34)" rx="2" ry="2" />
<text  x="86.74" y="1775.5" ></text>
</g>
<g >
<title>query::partition_slice::row_ranges (1 samples, 0.02%)</title><rect x="353.0" y="1637" width="0.3" height="15.0" fill="rgb(232,10,53)" rx="2" ry="2" />
<text  x="356.04" y="1647.5" ></text>
</g>
<g >
<title>partition_snapshot::versions (1 samples, 0.02%)</title><rect x="278.2" y="1637" width="0.2" height="15.0" fill="rgb(222,140,18)" rx="2" ry="2" />
<text  x="281.17" y="1647.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.02%)</title><rect x="46.8" y="1589" width="0.2" height="15.0" fill="rgb(251,0,19)" rx="2" ry="2" />
<text  x="49.75" y="1599.5" ></text>
</g>
<g >
<title>schema::column_at (7 samples, 0.13%)</title><rect x="411.1" y="1589" width="1.6" height="15.0" fill="rgb(212,6,28)" rx="2" ry="2" />
<text  x="414.12" y="1599.5" ></text>
</g>
<g >
<title>__start_context (284 samples, 5.46%)</title><rect x="16.1" y="2037" width="64.5" height="15.0" fill="rgb(222,160,44)" rx="2" ry="2" />
<text  x="19.13" y="2047.5" >__start..</text>
</g>
<g >
<title>nonwrapping_interval&lt;dht::ring_position&gt;::nonwrapping_interval (1 samples, 0.02%)</title><rect x="925.9" y="1813" width="0.2" height="15.0" fill="rgb(237,1,34)" rx="2" ry="2" />
<text  x="928.91" y="1823.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::execute (4 samples, 0.08%)</title><rect x="977.2" y="1717" width="0.9" height="15.0" fill="rgb(217,23,3)" rx="2" ry="2" />
<text  x="980.19" y="1727.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.02%)</title><rect x="10.7" y="1957" width="0.2" height="15.0" fill="rgb(231,179,52)" rx="2" ry="2" />
<text  x="13.68" y="1967.5" ></text>
</g>
<g >
<title>std::construct_at&lt;mutation, seastar::lw_shared_ptr&lt;schema const&gt; const&amp;, partition_key const&gt; (3 samples, 0.06%)</title><rect x="878.9" y="1765" width="0.7" height="15.0" fill="rgb(211,150,4)" rx="2" ry="2" />
<text  x="881.95" y="1775.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (3 samples, 0.06%)</title><rect x="155.7" y="1845" width="0.6" height="15.0" fill="rgb(250,32,25)" rx="2" ry="2" />
<text  x="158.66" y="1855.5" ></text>
</g>
<g >
<title>cql3::query_processor::query_internal (1 samples, 0.02%)</title><rect x="11.4" y="1749" width="0.2" height="15.0" fill="rgb(236,98,41)" rx="2" ry="2" />
<text  x="14.36" y="1759.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (3 samples, 0.06%)</title><rect x="37.2" y="1669" width="0.7" height="15.0" fill="rgb(248,228,30)" rx="2" ry="2" />
<text  x="40.23" y="1679.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="551.1" y="1685" width="0.2" height="15.0" fill="rgb(247,33,39)" rx="2" ry="2" />
<text  x="554.11" y="1695.5" ></text>
</g>
<g >
<title>cql3::expr::possible_lhs_values (2 samples, 0.04%)</title><rect x="876.7" y="1781" width="0.4" height="15.0" fill="rgb(213,228,4)" rx="2" ry="2" />
<text  x="879.68" y="1791.5" ></text>
</g>
<g >
<title>seastar::memory::allocate_aligned (16 samples, 0.31%)</title><rect x="233.0" y="1461" width="3.7" height="15.0" fill="rgb(243,131,24)" rx="2" ry="2" />
<text  x="236.02" y="1471.5" ></text>
</g>
<g >
<title>std::default_delete&lt;bytes_ostream::chunk&gt;::operator (4 samples, 0.08%)</title><rect x="98.9" y="1845" width="0.9" height="15.0" fill="rgb(210,151,6)" rx="2" ry="2" />
<text  x="101.94" y="1855.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_pbump (1 samples, 0.02%)</title><rect x="1188.6" y="2053" width="0.3" height="15.0" fill="rgb(232,145,33)" rx="2" ry="2" />
<text  x="1191.64" y="2063.5" ></text>
</g>
<g >
<title>std::apply&lt;auth::permissions_cache::get (67 samples, 1.29%)</title><rect x="802.7" y="1685" width="15.2" height="15.0" fill="rgb(235,129,21)" rx="2" ry="2" />
<text  x="805.72" y="1695.5" ></text>
</g>
<g >
<title>service::storage_service::join_cluster (1 samples, 0.02%)</title><rect x="17.7" y="1973" width="0.2" height="15.0" fill="rgb(245,56,28)" rx="2" ry="2" />
<text  x="20.71" y="1983.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::query_state&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="683.4" y="1909" width="0.2" height="15.0" fill="rgb(212,133,49)" rx="2" ry="2" />
<text  x="686.38" y="1919.5" ></text>
</g>
<g >
<title>seastar::gate::leave (2 samples, 0.04%)</title><rect x="105.7" y="1893" width="0.5" height="15.0" fill="rgb(244,159,2)" rx="2" ry="2" />
<text  x="108.74" y="1903.5" ></text>
</g>
<g >
<title>seastar::file::dma_read_bulk&lt;char&gt; (1 samples, 0.02%)</title><rect x="17.9" y="1477" width="0.3" height="15.0" fill="rgb(246,101,32)" rx="2" ry="2" />
<text  x="20.94" y="1487.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="1113.3" y="1813" width="0.2" height="15.0" fill="rgb(247,198,38)" rx="2" ry="2" />
<text  x="1116.31" y="1823.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="654.1" y="1781" width="0.2" height="15.0" fill="rgb(215,115,10)" rx="2" ry="2" />
<text  x="657.11" y="1791.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (2 samples, 0.04%)</title><rect x="104.8" y="1909" width="0.5" height="15.0" fill="rgb(233,63,54)" rx="2" ry="2" />
<text  x="107.84" y="1919.5" ></text>
</g>
<g >
<title>db::block_for (1 samples, 0.02%)</title><rect x="1132.1" y="1605" width="0.3" height="15.0" fill="rgb(253,222,25)" rx="2" ry="2" />
<text  x="1135.15" y="1615.5" ></text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_slice_or_needs_filtering (3 samples, 0.06%)</title><rect x="659.6" y="1829" width="0.6" height="15.0" fill="rgb(225,181,34)" rx="2" ry="2" />
<text  x="662.56" y="1839.5" ></text>
</g>
<g >
<title>mutation_reader_merger::mutation_reader_merger (7 samples, 0.13%)</title><rect x="473.1" y="1749" width="1.5" height="15.0" fill="rgb(209,109,33)" rx="2" ry="2" />
<text  x="476.06" y="1759.5" ></text>
</g>
<g >
<title>database::find_schema (1 samples, 0.02%)</title><rect x="76.2" y="1861" width="0.3" height="15.0" fill="rgb(230,59,9)" rx="2" ry="2" />
<text  x="79.25" y="1871.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::inet_address (2 samples, 0.04%)</title><rect x="974.0" y="1781" width="0.5" height="15.0" fill="rgb(244,55,41)" rx="2" ry="2" />
<text  x="977.01" y="1791.5" ></text>
</g>
<g >
<title>std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;auth::role_or_anonymous&gt;, seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (1 samples, 0.02%)</title><rect x="823.1" y="1717" width="0.3" height="15.0" fill="rgb(247,176,38)" rx="2" ry="2" />
<text  x="826.14" y="1727.5" ></text>
</g>
<g >
<title>std::__relocate_a&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;*, std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;*, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt; (2 samples, 0.04%)</title><rect x="49.0" y="1653" width="0.5" height="15.0" fill="rgb(217,61,12)" rx="2" ry="2" />
<text  x="52.02" y="1663.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::operator= (1 samples, 0.02%)</title><rect x="848.8" y="1861" width="0.2" height="15.0" fill="rgb(222,187,38)" rx="2" ry="2" />
<text  x="851.77" y="1871.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::pop_mutation_fragment (1 samples, 0.02%)</title><rect x="293.8" y="1717" width="0.3" height="15.0" fill="rgb(246,192,41)" rx="2" ry="2" />
<text  x="296.83" y="1727.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (13 samples, 0.25%)</title><rect x="804.8" y="1621" width="2.9" height="15.0" fill="rgb(211,55,5)" rx="2" ry="2" />
<text  x="807.76" y="1631.5" ></text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt;&amp;&gt; (3 samples, 0.06%)</title><rect x="1054.3" y="1717" width="0.7" height="15.0" fill="rgb(250,29,39)" rx="2" ry="2" />
<text  x="1057.33" y="1727.5" ></text>
</g>
<g >
<title>ser::integral_serializer&lt;unsigned int&gt;::read&lt;seastar::simple_memory_input_stream&gt; (1 samples, 0.02%)</title><rect x="1123.8" y="1557" width="0.2" height="15.0" fill="rgb(205,26,49)" rx="2" ry="2" />
<text  x="1126.75" y="1567.5" ></text>
</g>
<g >
<title>distributed_loader::init_system_keyspace (1 samples, 0.02%)</title><rect x="17.3" y="1973" width="0.2" height="15.0" fill="rgb(227,129,28)" rx="2" ry="2" />
<text  x="20.26" y="1983.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, seastar::do_recursive_touch_directory (1 samples, 0.02%)</title><rect x="701.1" y="1925" width="0.2" height="15.0" fill="rgb(243,228,30)" rx="2" ry="2" />
<text  x="704.07" y="1935.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (1 samples, 0.02%)</title><rect x="724.9" y="1861" width="0.2" height="15.0" fill="rgb(225,85,41)" rx="2" ry="2" />
<text  x="727.90" y="1871.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.02%)</title><rect x="700.8" y="1685" width="0.3" height="15.0" fill="rgb(229,210,18)" rx="2" ry="2" />
<text  x="703.85" y="1695.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::partition_slice const, std::default_delete&lt;query::partition_slice const&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="1165.5" y="1893" width="0.2" height="15.0" fill="rgb(212,80,17)" rx="2" ry="2" />
<text  x="1168.50" y="1903.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (4 samples, 0.08%)</title><rect x="730.8" y="1925" width="0.9" height="15.0" fill="rgb(220,75,41)" rx="2" ry="2" />
<text  x="733.80" y="1935.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (1 samples, 0.02%)</title><rect x="49.9" y="1669" width="0.3" height="15.0" fill="rgb(228,2,39)" rx="2" ry="2" />
<text  x="52.93" y="1679.5" ></text>
</g>
<g >
<title>std::construct_at&lt;mutation_fragment, schema const&amp;, reader_permit&amp;, partition_start&gt; (22 samples, 0.42%)</title><rect x="522.3" y="1653" width="5.0" height="15.0" fill="rgb(226,45,21)" rx="2" ry="2" />
<text  x="525.29" y="1663.5" ></text>
</g>
<g >
<title>sstables::mx::mx_sstable_mutation_reader::read_partition (1 samples, 0.02%)</title><rect x="17.9" y="1653" width="0.3" height="15.0" fill="rgb(224,94,46)" rx="2" ry="2" />
<text  x="20.94" y="1663.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;void&gt;  (1 samples, 0.02%)</title><rect x="10.5" y="53" width="0.2" height="15.0" fill="rgb(225,26,3)" rx="2" ry="2" />
<text  x="13.45" y="63.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.02%)</title><rect x="700.8" y="1557" width="0.3" height="15.0" fill="rgb(238,32,15)" rx="2" ry="2" />
<text  x="703.85" y="1567.5" ></text>
</g>
<g >
<title>ser::get_sizeof&lt;schema_mutations&gt; (2 samples, 0.04%)</title><rect x="108.7" y="1829" width="0.4" height="15.0" fill="rgb(212,69,33)" rx="2" ry="2" />
<text  x="111.69" y="1839.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::finally_body&lt;table::stop (1 samples, 0.02%)</title><rect x="701.3" y="1909" width="0.2" height="15.0" fill="rgb(218,132,29)" rx="2" ry="2" />
<text  x="704.30" y="1919.5" ></text>
</g>
<g >
<title>single_node_cql_env::do_with (1 samples, 0.02%)</title><rect x="730.3" y="1829" width="0.3" height="15.0" fill="rgb(252,34,10)" rx="2" ry="2" />
<text  x="733.34" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::constant&gt;  (47 samples, 0.90%)</title><rect x="896.2" y="1765" width="10.7" height="15.0" fill="rgb(217,97,44)" rx="2" ry="2" />
<text  x="899.19" y="1775.5" ></text>
</g>
<g >
<title>cql3::query_processor::compute_id (1 samples, 0.02%)</title><rect x="10.5" y="213" width="0.2" height="15.0" fill="rgb(218,85,26)" rx="2" ry="2" />
<text  x="13.45" y="223.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.08%)</title><rect x="934.1" y="1829" width="0.9" height="15.0" fill="rgb(208,6,31)" rx="2" ry="2" />
<text  x="937.08" y="1839.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="916.8" y="1749" width="0.3" height="15.0" fill="rgb(228,142,46)" rx="2" ry="2" />
<text  x="919.84" y="1759.5" ></text>
</g>
<g >
<title>__start_context (14 samples, 0.27%)</title><rect x="81.2" y="1973" width="3.2" height="15.0" fill="rgb(245,9,12)" rx="2" ry="2" />
<text  x="84.24" y="1983.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (1 samples, 0.02%)</title><rect x="138.2" y="1669" width="0.2" height="15.0" fill="rgb(250,213,17)" rx="2" ry="2" />
<text  x="141.19" y="1679.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="81.5" y="1781" width="0.2" height="15.0" fill="rgb(223,91,42)" rx="2" ry="2" />
<text  x="84.47" y="1791.5" ></text>
</g>
<g >
<title>std::make_unique&lt;seastar::priority_class_data, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;&amp;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::lw_shared_ptr&lt;seastar::priority_class&gt;&amp;&gt; (1 samples, 0.02%)</title><rect x="17.9" y="1269" width="0.3" height="15.0" fill="rgb(206,139,38)" rx="2" ry="2" />
<text  x="20.94" y="1279.5" ></text>
</g>
<g >
<title>ser::qr_clustered_row__cells&lt;bytes_ostream&gt;::qr_clustered_row__cells (1 samples, 0.02%)</title><rect x="392.1" y="1621" width="0.2" height="15.0" fill="rgb(219,214,18)" rx="2" ry="2" />
<text  x="395.06" y="1631.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::value (3 samples, 0.06%)</title><rect x="59.9" y="1733" width="0.7" height="15.0" fill="rgb(213,195,54)" rx="2" ry="2" />
<text  x="62.91" y="1743.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.02%)</title><rect x="42.4" y="1637" width="0.3" height="15.0" fill="rgb(215,5,9)" rx="2" ry="2" />
<text  x="45.44" y="1647.5" ></text>
</g>
<g >
<title>memtable::find_or_create_partition_slow (8 samples, 0.15%)</title><rect x="1119.2" y="1669" width="1.8" height="15.0" fill="rgb(209,189,1)" rx="2" ry="2" />
<text  x="1122.21" y="1679.5" ></text>
</g>
<g >
<title>locator::token_metadata_impl::get_all_endpoints (1 samples, 0.02%)</title><rect x="17.7" y="1797" width="0.2" height="15.0" fill="rgb(233,144,11)" rx="2" ry="2" />
<text  x="20.71" y="1807.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (9 samples, 0.17%)</title><rect x="805.4" y="1589" width="2.1" height="15.0" fill="rgb(229,19,29)" rx="2" ry="2" />
<text  x="808.44" y="1599.5" ></text>
</g>
<g >
<title>utils::tuple_hash::hash_impl&lt;1ul, auth::resource_kind, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (2 samples, 0.04%)</title><rect x="828.6" y="1717" width="0.4" height="15.0" fill="rgb(206,73,22)" rx="2" ry="2" />
<text  x="831.58" y="1727.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (2 samples, 0.04%)</title><rect x="44.0" y="1573" width="0.5" height="15.0" fill="rgb(247,109,21)" rx="2" ry="2" />
<text  x="47.03" y="1583.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.02%)</title><rect x="60.4" y="1669" width="0.2" height="15.0" fill="rgb(222,57,38)" rx="2" ry="2" />
<text  x="63.37" y="1679.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.04%)</title><rect x="42.4" y="1669" width="0.5" height="15.0" fill="rgb(223,168,36)" rx="2" ry="2" />
<text  x="45.44" y="1679.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (1 samples, 0.02%)</title><rect x="288.6" y="1669" width="0.2" height="15.0" fill="rgb(209,9,27)" rx="2" ry="2" />
<text  x="291.61" y="1679.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.06%)</title><rect x="909.8" y="1733" width="0.7" height="15.0" fill="rgb(223,205,39)" rx="2" ry="2" />
<text  x="912.80" y="1743.5" ></text>
</g>
<g >
<title>abstract_type::from_string (4 samples, 0.08%)</title><rect x="68.3" y="1797" width="0.9" height="15.0" fill="rgb(242,96,34)" rx="2" ry="2" />
<text  x="71.31" y="1807.5" ></text>
</g>
<g >
<title>seastar::basic_semaphore&lt;seastar::semaphore_default_exception_factory, std::chrono::_V2::steady_clock&gt;::wait (2 samples, 0.04%)</title><rect x="618.3" y="1861" width="0.4" height="15.0" fill="rgb(210,219,50)" rx="2" ry="2" />
<text  x="621.26" y="1871.5" ></text>
</g>
<g >
<title>utils::chunked_vector&lt;ser::deletable_row_view, 131072ul&gt;::make_room (1 samples, 0.02%)</title><rect x="1124.0" y="1621" width="0.2" height="15.0" fill="rgb(254,108,46)" rx="2" ry="2" />
<text  x="1126.98" y="1631.5" ></text>
</g>
<g >
<title>flat_mutation_reader::close (3 samples, 0.06%)</title><rect x="569.5" y="1845" width="0.7" height="15.0" fill="rgb(234,38,27)" rx="2" ry="2" />
<text  x="572.48" y="1855.5" ></text>
</g>
<g >
<title>std::apply&lt;row_cache::do_update (1 samples, 0.02%)</title><rect x="701.3" y="1813" width="0.2" height="15.0" fill="rgb(217,155,35)" rx="2" ry="2" />
<text  x="704.30" y="1823.5" ></text>
</g>
<g >
<title>partition_entry::evict (1 samples, 0.02%)</title><rect x="701.3" y="1669" width="0.2" height="15.0" fill="rgb(237,203,19)" rx="2" ry="2" />
<text  x="704.30" y="1679.5" ></text>
</g>
<g >
<title>std::tuple&lt;cql3::statements::drop_function_statement*, std::default_delete&lt;cql3::statements::drop_function_statement&gt; &gt;::tuple&lt;true, true&gt; (1 samples, 0.02%)</title><rect x="64.5" y="1749" width="0.2" height="15.0" fill="rgb(245,135,52)" rx="2" ry="2" />
<text  x="67.45" y="1759.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;auth::resource, auth::resource, std::allocator&lt;auth::resource&gt;, std::__detail::_Identity, std::equal_to&lt;auth::resource&gt;, std::hash&lt;auth::resource&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;::find (10 samples, 0.19%)</title><rect x="826.8" y="1781" width="2.2" height="15.0" fill="rgb(254,177,3)" rx="2" ry="2" />
<text  x="829.77" y="1791.5" ></text>
</g>
<g >
<title>cql3::query_processor::process_authorized_statement (1 samples, 0.02%)</title><rect x="19.3" y="1893" width="0.2" height="15.0" fill="rgb(244,25,43)" rx="2" ry="2" />
<text  x="22.30" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.5" y="1029" width="0.2" height="15.0" fill="rgb(244,122,31)" rx="2" ry="2" />
<text  x="13.45" y="1039.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.02%)</title><rect x="700.8" y="1621" width="0.3" height="15.0" fill="rgb(222,107,5)" rx="2" ry="2" />
<text  x="703.85" y="1631.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::fetch (1 samples, 0.02%)</title><rect x="17.9" y="1861" width="0.3" height="15.0" fill="rgb(244,5,30)" rx="2" ry="2" />
<text  x="20.94" y="1871.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.02%)</title><rect x="38.4" y="1653" width="0.2" height="15.0" fill="rgb(233,139,47)" rx="2" ry="2" />
<text  x="41.36" y="1663.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (1 samples, 0.02%)</title><rect x="84.4" y="1909" width="0.2" height="15.0" fill="rgb(247,142,45)" rx="2" ry="2" />
<text  x="87.42" y="1919.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_in_thread&lt;stable_flattened_mutations_consumer&lt;compact_for_compaction&lt;sstables::compacting_sstable_writer, noop_compacted_fragments_consumer&gt; &gt;, flat_mutation_reader::no_filter&gt; (1 samples, 0.02%)</title><rect x="17.9" y="1941" width="0.3" height="15.0" fill="rgb(229,191,28)" rx="2" ry="2" />
<text  x="20.94" y="1951.5" ></text>
</g>
<g >
<title>cql3::expr::make_conjunction (4 samples, 0.08%)</title><rect x="72.6" y="1733" width="0.9" height="15.0" fill="rgb(251,19,30)" rx="2" ry="2" />
<text  x="75.62" y="1743.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::modification_statement (1 samples, 0.02%)</title><rect x="75.1" y="1797" width="0.2" height="15.0" fill="rgb(216,172,48)" rx="2" ry="2" />
<text  x="78.11" y="1807.5" ></text>
</g>
<g >
<title>seastar::reactor::lowres_timer_pollfn::poll (1 samples, 0.02%)</title><rect x="88.7" y="1941" width="0.3" height="15.0" fill="rgb(246,37,49)" rx="2" ry="2" />
<text  x="91.73" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;10ul, cql3::expr::untyped_constant&gt; (1 samples, 0.02%)</title><rect x="52.7" y="1525" width="0.2" height="15.0" fill="rgb(210,76,36)" rx="2" ry="2" />
<text  x="55.65" y="1535.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt;, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt; &gt; &gt;::reserve (1 samples, 0.02%)</title><rect x="1128.7" y="1669" width="0.3" height="15.0" fill="rgb(254,152,4)" rx="2" ry="2" />
<text  x="1131.74" y="1679.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider (1 samples, 0.02%)</title><rect x="20.2" y="1717" width="0.2" height="15.0" fill="rgb(209,151,16)" rx="2" ry="2" />
<text  x="23.21" y="1727.5" ></text>
</g>
<g >
<title>ser::set_size&lt;bytes_ostream, partition_key&gt; (1 samples, 0.02%)</title><rect x="1131.5" y="1573" width="0.2" height="15.0" fill="rgb(237,45,24)" rx="2" ry="2" />
<text  x="1134.47" y="1583.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (3 samples, 0.06%)</title><rect x="45.4" y="1701" width="0.7" height="15.0" fill="rgb(239,21,21)" rx="2" ry="2" />
<text  x="48.39" y="1711.5" ></text>
</g>
<g >
<title>seastar::future&lt;utils::small_vector&lt;service::storage_proxy::unique_response_handler, 1ul&gt; &gt;::then_impl&lt;service::storage_proxy::mutate_internal&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt; &gt; (11 samples, 0.21%)</title><rect x="1126.7" y="1733" width="2.5" height="15.0" fill="rgb(241,138,22)" rx="2" ry="2" />
<text  x="1129.70" y="1743.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (1 samples, 0.02%)</title><rect x="23.4" y="1605" width="0.2" height="15.0" fill="rgb(206,59,44)" rx="2" ry="2" />
<text  x="26.39" y="1615.5" ></text>
</g>
<g >
<title>logalloc::basic_region_impl::set_reclaiming_enabled (1 samples, 0.02%)</title><rect x="210.3" y="1621" width="0.3" height="15.0" fill="rgb(235,35,37)" rx="2" ry="2" />
<text  x="213.33" y="1631.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEENK4$_43clERKNSF_15binary_operatorEEUlRKNSF_12column_valueEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_17tuple_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlNSF_5tokenEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlSS_E_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_11conjunctionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_8constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_21unresolved_identifierEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_25column_mutation_attributeEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13function_callEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4castEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_15field_selectionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4nullEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13bind_variableEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_16untyped_constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_22collection_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_20usertype_constructorEE_EERS4_IJS14_SQ_ST_S11_S1C_S1G_S1K_S1O_S1S_S1W_S20_S24_S18_SX_S28_S2C_EEEJEEESt16integer_sequenceImJLm2EEEE14__visit_invokeES2H_S2J_ (2 samples, 0.04%)</title><rect x="912.5" y="1813" width="0.5" height="15.0" fill="rgb(246,22,38)" rx="2" ry="2" />
<text  x="915.53" y="1823.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_219f1a43593042f0924f8fe16cb9c27482170876] (1 samples, 0.02%)</title><rect x="778.4" y="1733" width="0.3" height="15.0" fill="rgb(214,186,53)" rx="2" ry="2" />
<text  x="781.44" y="1743.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (2 samples, 0.04%)</title><rect x="256.6" y="1589" width="0.5" height="15.0" fill="rgb(236,0,25)" rx="2" ry="2" />
<text  x="259.62" y="1599.5" ></text>
</g>
<g >
<title>std::function&lt;seastar::future&lt;void&gt;  (1 samples, 0.02%)</title><rect x="17.3" y="1781" width="0.2" height="15.0" fill="rgb(238,3,54)" rx="2" ry="2" />
<text  x="20.26" y="1791.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (1 samples, 0.02%)</title><rect x="730.3" y="1797" width="0.3" height="15.0" fill="rgb(238,48,38)" rx="2" ry="2" />
<text  x="733.34" y="1807.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::Parser (2 samples, 0.04%)</title><rect x="20.2" y="1829" width="0.5" height="15.0" fill="rgb(253,29,40)" rx="2" ry="2" />
<text  x="23.21" y="1839.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::operator= (2 samples, 0.04%)</title><rect x="845.1" y="1829" width="0.5" height="15.0" fill="rgb(234,137,0)" rx="2" ry="2" />
<text  x="848.14" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.5" y="373" width="0.2" height="15.0" fill="rgb(212,99,54)" rx="2" ry="2" />
<text  x="13.45" y="383.5" ></text>
</g>
<g >
<title>cql3::statements::create_table_statement::apply_properties_to (1 samples, 0.02%)</title><rect x="700.6" y="1797" width="0.2" height="15.0" fill="rgb(235,105,20)" rx="2" ry="2" />
<text  x="703.62" y="1807.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.02%)</title><rect x="53.6" y="1621" width="0.2" height="15.0" fill="rgb(206,135,28)" rx="2" ry="2" />
<text  x="56.56" y="1631.5" ></text>
</g>
<g >
<title>db::commitlog::segment::is_still_allocating (1 samples, 0.02%)</title><rect x="1125.8" y="1701" width="0.2" height="15.0" fill="rgb(235,48,31)" rx="2" ry="2" />
<text  x="1128.79" y="1711.5" ></text>
</g>
<g >
<title>make_empty_flat_reader (3 samples, 0.06%)</title><rect x="538.9" y="1749" width="0.6" height="15.0" fill="rgb(214,45,42)" rx="2" ry="2" />
<text  x="541.86" y="1759.5" ></text>
</g>
<g >
<title>mutation_fragment::visit&lt;mutation_fragment::calculate_memory_usage (1 samples, 0.02%)</title><rect x="255.9" y="1589" width="0.3" height="15.0" fill="rgb(211,228,22)" rx="2" ry="2" />
<text  x="258.94" y="1599.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::get (2 samples, 0.04%)</title><rect x="353.7" y="1621" width="0.5" height="15.0" fill="rgb(235,7,35)" rx="2" ry="2" />
<text  x="356.72" y="1631.5" ></text>
</g>
<g >
<title>logalloc::region_impl::alloc_small (1 samples, 0.02%)</title><rect x="1121.3" y="1589" width="0.2" height="15.0" fill="rgb(235,86,52)" rx="2" ry="2" />
<text  x="1124.26" y="1599.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIN4cql34expr10expressionEEER18overloaded_functorIJZNS5_12prepare_termERKS6_R8databaseRKN7seastar13basic_sstringIcjLj15ELb1EEENSD_13lw_shared_ptrINS4_20column_specificationEEEE3$_0ZNS5_12prepare_termESA_SC_SH_SK_E3$_1ZNS5_12prepare_termESA_SC_SH_SK_E3$_2ZNS5_12prepare_termESA_SC_SH_SK_E3$_3ZNS5_12prepare_termESA_SC_SH_SK_E3$_4ZNS5_12prepare_termESA_SC_SH_SK_E3$_5ZNS5_12prepare_termESA_SC_SH_SK_E3$_6ZNS5_12prepare_termESA_SC_SH_SK_E3$_7ZNS5_12prepare_termESA_SC_SH_SK_E3$_8ZNS5_12prepare_termESA_SC_SH_SK_E3$_9ZNS5_12prepare_termESA_SC_SH_SK_E4$_10ZNS5_12prepare_termESA_SC_SH_SK_E4$_11ZNS5_12prepare_termESA_SC_SH_SK_E4$_12ZNS5_12prepare_termESA_SC_SH_SK_E4$_13ZNS5_12prepare_termESA_SC_SH_SK_E4$_14ZNS5_12prepare_termESA_SC_SH_SK_E4$_15EERSt7variantIJNS5_11conjunctionENS5_15binary_operatorENS5_12column_valueENS5_5tokenENS5_21unresolved_identifierENS5_25column_mutation_attributeENS5_13function_callENS5_4castENS5_15field_selectionENS5_4nullENS5_13bind_variableENS5_16untyped_constantENS5_8constantENS5_17tuple_constructorENS5_22collection_constructorENS5_20usertype_constructorEEEEJEEESt16integer_sequenceImJLm11EEEE14__visit_invokeES12_S1L_ (7 samples, 0.13%)</title><rect x="68.3" y="1813" width="1.6" height="15.0" fill="rgb(230,204,54)" rx="2" ry="2" />
<text  x="71.31" y="1823.5" ></text>
</g>
<g >
<title>seastar::internal::future_base::set_coroutine (1 samples, 0.02%)</title><rect x="973.8" y="1781" width="0.2" height="15.0" fill="rgb(214,103,33)" rx="2" ry="2" />
<text  x="976.78" y="1791.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (5 samples, 0.10%)</title><rect x="1088.8" y="1829" width="1.1" height="15.0" fill="rgb(221,12,0)" rx="2" ry="2" />
<text  x="1091.81" y="1839.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.08%)</title><rect x="1105.4" y="1845" width="0.9" height="15.0" fill="rgb(235,175,5)" rx="2" ry="2" />
<text  x="1108.37" y="1855.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (1 samples, 0.02%)</title><rect x="57.9" y="1733" width="0.2" height="15.0" fill="rgb(221,166,47)" rx="2" ry="2" />
<text  x="60.87" y="1743.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (1 samples, 0.02%)</title><rect x="796.4" y="1733" width="0.2" height="15.0" fill="rgb(210,142,51)" rx="2" ry="2" />
<text  x="799.36" y="1743.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (1 samples, 0.02%)</title><rect x="703.6" y="1909" width="0.2" height="15.0" fill="rgb(245,218,32)" rx="2" ry="2" />
<text  x="706.57" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::binary_operator const*&gt;  (1 samples, 0.02%)</title><rect x="936.6" y="1829" width="0.2" height="15.0" fill="rgb(253,54,19)" rx="2" ry="2" />
<text  x="939.58" y="1839.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="587.9" y="1749" width="0.2" height="15.0" fill="rgb(226,27,51)" rx="2" ry="2" />
<text  x="590.86" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.5" y="1829" width="0.2" height="15.0" fill="rgb(243,15,44)" rx="2" ry="2" />
<text  x="13.45" y="1839.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="511.4" y="1733" width="0.2" height="15.0" fill="rgb(232,76,42)" rx="2" ry="2" />
<text  x="514.40" y="1743.5" ></text>
</g>
<g >
<title>sstring_hash::operator (1 samples, 0.02%)</title><rect x="858.3" y="1797" width="0.2" height="15.0" fill="rgb(240,131,46)" rx="2" ry="2" />
<text  x="861.30" y="1807.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="429.7" y="1653" width="0.3" height="15.0" fill="rgb(238,85,38)" rx="2" ry="2" />
<text  x="432.73" y="1663.5" ></text>
</g>
<g >
<title>ser::qr_cell_view::value (1 samples, 0.02%)</title><rect x="109.1" y="1701" width="0.3" height="15.0" fill="rgb(210,40,31)" rx="2" ry="2" />
<text  x="112.15" y="1711.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;compact_for_query&lt; (3 samples, 0.06%)</title><rect x="437.0" y="1797" width="0.7" height="15.0" fill="rgb(241,85,33)" rx="2" ry="2" />
<text  x="439.99" y="1807.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (2 samples, 0.04%)</title><rect x="98.5" y="1845" width="0.4" height="15.0" fill="rgb(222,128,9)" rx="2" ry="2" />
<text  x="101.48" y="1855.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (19 samples, 0.37%)</title><rect x="251.4" y="1557" width="4.3" height="15.0" fill="rgb(211,58,30)" rx="2" ry="2" />
<text  x="254.40" y="1567.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (1 samples, 0.02%)</title><rect x="100.8" y="1861" width="0.2" height="15.0" fill="rgb(248,138,26)" rx="2" ry="2" />
<text  x="103.75" y="1871.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="40.9" y="1669" width="0.2" height="15.0" fill="rgb(236,101,14)" rx="2" ry="2" />
<text  x="43.86" y="1679.5" ></text>
</g>
<g >
<title>seastar::input_stream&lt;char&gt;::read_exactly (1 samples, 0.02%)</title><rect x="17.9" y="1541" width="0.3" height="15.0" fill="rgb(246,132,10)" rx="2" ry="2" />
<text  x="20.94" y="1551.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (1 samples, 0.02%)</title><rect x="52.4" y="1669" width="0.3" height="15.0" fill="rgb(238,156,50)" rx="2" ry="2" />
<text  x="55.43" y="1679.5" ></text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::find (10 samples, 0.19%)</title><rect x="663.4" y="1861" width="2.3" height="15.0" fill="rgb(207,44,12)" rx="2" ry="2" />
<text  x="666.41" y="1871.5" ></text>
</g>
<g >
<title>std::__find_if&lt;gms::inet_address*, __gnu_cxx::__ops::_Iter_pred&lt;std::unary_negate&lt;std::binder1st&lt;std::_Mem_fn&lt;bool  (1 samples, 0.02%)</title><rect x="1079.3" y="1717" width="0.2" height="15.0" fill="rgb(221,48,43)" rx="2" ry="2" />
<text  x="1082.28" y="1727.5" ></text>
</g>
<g >
<title>service::storage_proxy_stats::split_stats::get_ep_stat (1 samples, 0.02%)</title><rect x="724.9" y="1877" width="0.2" height="15.0" fill="rgb(208,62,1)" rx="2" ry="2" />
<text  x="727.90" y="1887.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (1 samples, 0.02%)</title><rect x="985.6" y="1685" width="0.2" height="15.0" fill="rgb(231,42,17)" rx="2" ry="2" />
<text  x="988.58" y="1695.5" ></text>
</g>
<g >
<title>cql3::statements::raw::modification_statement::prepare (44 samples, 0.85%)</title><rect x="66.9" y="1893" width="10.0" height="15.0" fill="rgb(243,97,27)" rx="2" ry="2" />
<text  x="69.95" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_node (1 samples, 0.02%)</title><rect x="675.9" y="1877" width="0.2" height="15.0" fill="rgb(250,72,39)" rx="2" ry="2" />
<text  x="678.89" y="1887.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (1 samples, 0.02%)</title><rect x="671.6" y="1877" width="0.2" height="15.0" fill="rgb(238,72,49)" rx="2" ry="2" />
<text  x="674.58" y="1887.5" ></text>
</g>
<g >
<title>mutation_source::mutation_source (1 samples, 0.02%)</title><rect x="149.1" y="1861" width="0.2" height="15.0" fill="rgb(227,188,48)" rx="2" ry="2" />
<text  x="152.08" y="1871.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (3 samples, 0.06%)</title><rect x="363.7" y="1589" width="0.7" height="15.0" fill="rgb(242,148,40)" rx="2" ry="2" />
<text  x="366.71" y="1599.5" ></text>
</g>
<g >
<title>service::never_speculating_read_executor::never_speculating_read_executor (22 samples, 0.42%)</title><rect x="1059.8" y="1749" width="5.0" height="15.0" fill="rgb(219,98,28)" rx="2" ry="2" />
<text  x="1062.77" y="1759.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (4 samples, 0.08%)</title><rect x="625.1" y="1861" width="0.9" height="15.0" fill="rgb(205,109,51)" rx="2" ry="2" />
<text  x="628.07" y="1871.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (1 samples, 0.02%)</title><rect x="53.8" y="1653" width="0.2" height="15.0" fill="rgb(230,183,15)" rx="2" ry="2" />
<text  x="56.79" y="1663.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.02%)</title><rect x="46.3" y="1605" width="0.2" height="15.0" fill="rgb(229,38,26)" rx="2" ry="2" />
<text  x="49.30" y="1615.5" ></text>
</g>
<g >
<title>syscall-0 (2 samples, 0.04%)</title><rect x="1189.5" y="2069" width="0.5" height="15.0" fill="rgb(245,57,52)" rx="2" ry="2" />
<text  x="1192.55" y="2079.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (6 samples, 0.12%)</title><rect x="699.3" y="1893" width="1.3" height="15.0" fill="rgb(243,158,1)" rx="2" ry="2" />
<text  x="702.26" y="1903.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="700.6" y="1749" width="0.2" height="15.0" fill="rgb(239,97,25)" rx="2" ry="2" />
<text  x="703.62" y="1759.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (1 samples, 0.02%)</title><rect x="709.7" y="1877" width="0.2" height="15.0" fill="rgb(232,180,33)" rx="2" ry="2" />
<text  x="712.70" y="1887.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::lsa_partition_reader (4 samples, 0.08%)</title><rect x="529.3" y="1701" width="0.9" height="15.0" fill="rgb(247,56,2)" rx="2" ry="2" />
<text  x="532.33" y="1711.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::clear (1 samples, 0.02%)</title><rect x="733.1" y="1925" width="0.2" height="15.0" fill="rgb(250,94,54)" rx="2" ry="2" />
<text  x="736.06" y="1935.5" ></text>
</g>
<g >
<title>mutation::set_clustered_cell (1 samples, 0.02%)</title><rect x="878.5" y="1717" width="0.2" height="15.0" fill="rgb(213,215,19)" rx="2" ry="2" />
<text  x="881.49" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::~_Variant_storage (1 samples, 0.02%)</title><rect x="351.2" y="1605" width="0.3" height="15.0" fill="rgb(220,86,20)" rx="2" ry="2" />
<text  x="354.23" y="1615.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (3 samples, 0.06%)</title><rect x="1159.1" y="1893" width="0.7" height="15.0" fill="rgb(242,113,43)" rx="2" ry="2" />
<text  x="1162.14" y="1903.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;gms::inet_address, gms::inet_address, std::allocator&lt;gms::inet_address&gt;, std::__detail::_Identity, std::equal_to&lt;gms::inet_address&gt;, std::hash&lt;gms::inet_address&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_Hashtable&lt;boost::iterators::transform_iterator&lt;boost::range_detail::select_second_const&lt;std::unordered_map&lt;dht::token, gms::inet_address, std::hash&lt;dht::token&gt;, std::equal_to&lt;dht::token&gt;, std::allocator&lt;std::pair&lt;dht::token const, gms::inet_address&gt; &gt; &gt; &gt;, std::__detail::_Node_const_iterator&lt;std::pair&lt;dht::token const, gms::inet_address&gt;, false, true&gt;, boost::use_default, boost::use_default&gt; &gt; (1 samples, 0.02%)</title><rect x="17.7" y="1781" width="0.2" height="15.0" fill="rgb(243,176,26)" rx="2" ry="2" />
<text  x="20.71" y="1791.5" ></text>
</g>
<g >
<title>cql3::restrictions::(anonymous namespace)::range_from_bytes (3 samples, 0.06%)</title><rect x="877.1" y="1781" width="0.7" height="15.0" fill="rgb(242,154,11)" rx="2" ry="2" />
<text  x="880.13" y="1791.5" ></text>
</g>
<g >
<title>std::optional&lt;dht::decorated_key&gt;::emplace&lt;dht::decorated_key&gt; (1 samples, 0.02%)</title><rect x="416.1" y="1653" width="0.2" height="15.0" fill="rgb(219,200,39)" rx="2" ry="2" />
<text  x="419.11" y="1663.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::key_is_in_relation (10 samples, 0.19%)</title><rect x="951.1" y="1813" width="2.3" height="15.0" fill="rgb(243,60,38)" rx="2" ry="2" />
<text  x="954.10" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;auth::resource_kind, std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;auth::resource_kind&gt;, std::hash&lt;auth::resource_kind&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::at (2 samples, 0.04%)</title><rect x="787.1" y="1781" width="0.4" height="15.0" fill="rgb(222,229,19)" rx="2" ry="2" />
<text  x="790.06" y="1791.5" ></text>
</g>
<g >
<title>seastar::(anonymous namespace)::thread_wake_task::run_and_dispose (3 samples, 0.06%)</title><rect x="642.3" y="1925" width="0.7" height="15.0" fill="rgb(219,149,40)" rx="2" ry="2" />
<text  x="645.31" y="1935.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;single_node_cql_env::core_local_state&gt;::local (1 samples, 0.02%)</title><rect x="849.9" y="1861" width="0.2" height="15.0" fill="rgb(243,224,36)" rx="2" ry="2" />
<text  x="852.91" y="1871.5" ></text>
</g>
<g >
<title>read_simple&lt;unsigned short, managed_bytes_basic_view&lt; (2 samples, 0.04%)</title><rect x="505.1" y="1637" width="0.4" height="15.0" fill="rgb(207,16,8)" rx="2" ry="2" />
<text  x="508.05" y="1647.5" ></text>
</g>
<g >
<title>seastar::execution_stage::flush (3 samples, 0.06%)</title><rect x="770.3" y="1797" width="0.7" height="15.0" fill="rgb(225,109,32)" rx="2" ry="2" />
<text  x="773.27" y="1807.5" ></text>
</g>
<g >
<title>operator new (6 samples, 0.12%)</title><rect x="456.3" y="1669" width="1.3" height="15.0" fill="rgb(252,117,7)" rx="2" ry="2" />
<text  x="459.27" y="1679.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::followPop (1 samples, 0.02%)</title><rect x="21.3" y="1813" width="0.3" height="15.0" fill="rgb(214,227,16)" rx="2" ry="2" />
<text  x="24.34" y="1823.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::~guard (1 samples, 0.02%)</title><rect x="518.2" y="1685" width="0.2" height="15.0" fill="rgb(238,74,24)" rx="2" ry="2" />
<text  x="521.21" y="1695.5" ></text>
</g>
<g >
<title>cql3::single_column_relation::single_column_relation (1 samples, 0.02%)</title><rect x="60.6" y="1717" width="0.2" height="15.0" fill="rgb(239,167,1)" rx="2" ry="2" />
<text  x="63.59" y="1727.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (1 samples, 0.02%)</title><rect x="336.0" y="1685" width="0.3" height="15.0" fill="rgb(232,144,8)" rx="2" ry="2" />
<text  x="339.03" y="1695.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (3 samples, 0.06%)</title><rect x="439.0" y="1829" width="0.7" height="15.0" fill="rgb(205,75,8)" rx="2" ry="2" />
<text  x="442.03" y="1839.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;gms::inet_address, gms::inet_address, std::allocator&lt;gms::inet_address&gt;, std::__detail::_Identity, std::equal_to&lt;gms::inet_address&gt;, std::hash&lt;gms::inet_address&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert&lt;gms::inet_address const&amp;, std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;gms::inet_address, false&gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="109.6" y="1877" width="0.2" height="15.0" fill="rgb(212,138,16)" rx="2" ry="2" />
<text  x="112.60" y="1887.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.02%)</title><rect x="353.3" y="1621" width="0.2" height="15.0" fill="rgb(251,53,5)" rx="2" ry="2" />
<text  x="356.27" y="1631.5" ></text>
</g>
<g >
<title>query::querier&lt; (1,816 samples, 34.92%)</title><rect x="157.5" y="1861" width="412.0" height="15.0" fill="rgb(225,136,32)" rx="2" ry="2" />
<text  x="160.47" y="1871.5" >query::querier&lt;</text>
</g>
<g >
<title>service::storage_service::join_token_ring (1 samples, 0.02%)</title><rect x="11.4" y="1877" width="0.2" height="15.0" fill="rgb(251,19,32)" rx="2" ry="2" />
<text  x="14.36" y="1887.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.02%)</title><rect x="39.9" y="1605" width="0.3" height="15.0" fill="rgb(230,128,3)" rx="2" ry="2" />
<text  x="42.95" y="1615.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (1 samples, 0.02%)</title><rect x="69.7" y="1797" width="0.2" height="15.0" fill="rgb(231,220,17)" rx="2" ry="2" />
<text  x="72.67" y="1807.5" ></text>
</g>
<g >
<title>logalloc::region_impl::alloc_small (1 samples, 0.02%)</title><rect x="1119.9" y="1589" width="0.2" height="15.0" fill="rgb(212,32,54)" rx="2" ry="2" />
<text  x="1122.89" y="1599.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="787.5" y="1765" width="0.2" height="15.0" fill="rgb(240,32,8)" rx="2" ry="2" />
<text  x="790.52" y="1775.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureIN5utils15timestamped_valINS_11checked_ptrINS_8weak_ptrIN4cql310statements18prepared_statementEEENS_25default_null_deref_actionEEENS5_40authorized_prepared_statements_cache_keyENS5_41authorized_prepared_statements_cache_sizeESt4hashISB_ESt8equal_toISB_ENS5_36authorized_prepared_statements_cache50authorized_prepared_statements_cache_stats_updaterEE9value_ptrEE9then_implIZNSL_14discard_resultEvEUlDpOT_E_NS0_IvEEEET0_OT_ (1 samples, 0.02%)</title><rect x="754.2" y="1813" width="0.2" height="15.0" fill="rgb(224,40,40)" rx="2" ry="2" />
<text  x="757.16" y="1823.5" ></text>
</g>
<g >
<title>cql3::cf_name::operator= (2 samples, 0.04%)</title><rect x="40.4" y="1765" width="0.5" height="15.0" fill="rgb(234,84,45)" rx="2" ry="2" />
<text  x="43.40" y="1775.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="794.3" y="1733" width="0.2" height="15.0" fill="rgb(238,109,22)" rx="2" ry="2" />
<text  x="797.32" y="1743.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_M_reset (1 samples, 0.02%)</title><rect x="1065.4" y="1749" width="0.3" height="15.0" fill="rgb(245,127,40)" rx="2" ry="2" />
<text  x="1068.44" y="1759.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (2 samples, 0.04%)</title><rect x="93.7" y="1893" width="0.5" height="15.0" fill="rgb(232,137,49)" rx="2" ry="2" />
<text  x="96.72" y="1903.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (10 samples, 0.19%)</title><rect x="1082.0" y="1781" width="2.3" height="15.0" fill="rgb(244,208,40)" rx="2" ry="2" />
<text  x="1085.01" y="1791.5" ></text>
</g>
<g >
<title>ser::deserialize&lt;seastar::simple_memory_input_stream&gt; (2 samples, 0.04%)</title><rect x="1122.4" y="1637" width="0.4" height="15.0" fill="rgb(206,141,2)" rx="2" ry="2" />
<text  x="1125.39" y="1647.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.02%)</title><rect x="811.8" y="1541" width="0.2" height="15.0" fill="rgb(235,227,21)" rx="2" ry="2" />
<text  x="814.79" y="1551.5" ></text>
</g>
<g >
<title>logalloc::basic_region_impl::set_reclaiming_enabled (1 samples, 0.02%)</title><rect x="271.4" y="1621" width="0.2" height="15.0" fill="rgb(251,165,8)" rx="2" ry="2" />
<text  x="274.37" y="1631.5" ></text>
</g>
<g >
<title>cql3::query_options::fill_value_views (1 samples, 0.02%)</title><rect x="859.9" y="1845" width="0.2" height="15.0" fill="rgb(217,25,4)" rx="2" ry="2" />
<text  x="862.89" y="1855.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="54.7" y="1637" width="0.2" height="15.0" fill="rgb(238,181,36)" rx="2" ry="2" />
<text  x="57.70" y="1647.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::_M_range_initialize&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; const*&gt; (18 samples, 0.35%)</title><rect x="1095.8" y="1797" width="4.1" height="15.0" fill="rgb(241,220,20)" rx="2" ry="2" />
<text  x="1098.85" y="1807.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (254 samples, 4.88%)</title><rect x="19.5" y="1909" width="57.7" height="15.0" fill="rgb(233,113,11)" rx="2" ry="2" />
<text  x="22.53" y="1919.5" >cql3::..</text>
</g>
<g >
<title>std::function&lt;flat_mutation_reader  (494 samples, 9.50%)</title><rect x="441.5" y="1813" width="112.1" height="15.0" fill="rgb(247,178,8)" rx="2" ry="2" />
<text  x="444.52" y="1823.5" >std::function..</text>
</g>
<g >
<title>seastar::future_state&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::clear (2 samples, 0.04%)</title><rect x="732.6" y="1925" width="0.5" height="15.0" fill="rgb(219,159,42)" rx="2" ry="2" />
<text  x="735.61" y="1935.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::check_local_limit (1 samples, 0.02%)</title><rect x="361.7" y="1605" width="0.2" height="15.0" fill="rgb(251,220,38)" rx="2" ry="2" />
<text  x="364.66" y="1615.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate (47 samples, 0.90%)</title><rect x="896.2" y="1781" width="10.7" height="15.0" fill="rgb(216,187,32)" rx="2" ry="2" />
<text  x="899.19" y="1791.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::fetch (590 samples, 11.34%)</title><rect x="171.3" y="1765" width="133.9" height="15.0" fill="rgb(228,55,46)" rx="2" ry="2" />
<text  x="174.31" y="1775.5" >mutation_fragmen..</text>
</g>
<g >
<title>partition_snapshot::versions (1 samples, 0.02%)</title><rect x="260.0" y="1573" width="0.2" height="15.0" fill="rgb(223,124,11)" rx="2" ry="2" />
<text  x="263.02" y="1583.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.04%)</title><rect x="58.6" y="1637" width="0.4" height="15.0" fill="rgb(235,176,25)" rx="2" ry="2" />
<text  x="61.55" y="1647.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextToken (48 samples, 0.92%)</title><rect x="24.7" y="1733" width="10.9" height="15.0" fill="rgb(220,55,39)" rx="2" ry="2" />
<text  x="27.75" y="1743.5" ></text>
</g>
<g >
<title>compound_type&lt; (1 samples, 0.02%)</title><rect x="877.4" y="1733" width="0.2" height="15.0" fill="rgb(230,37,5)" rx="2" ry="2" />
<text  x="880.36" y="1743.5" ></text>
</g>
<g >
<title>sstables::write&lt;db::replay_position, sstables::file_writer&gt; (1 samples, 0.02%)</title><rect x="698.8" y="1605" width="0.2" height="15.0" fill="rgb(242,216,10)" rx="2" ry="2" />
<text  x="701.81" y="1615.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="338.3" y="1669" width="0.2" height="15.0" fill="rgb(246,145,24)" rx="2" ry="2" />
<text  x="341.29" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (10 samples, 0.19%)</title><rect x="10.0" y="2037" width="2.3" height="15.0" fill="rgb(233,30,52)" rx="2" ry="2" />
<text  x="13.00" y="2047.5" ></text>
</g>
<g >
<title>seastar::make_shared&lt;cql3::single_column_relation, seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, cql3::expr::oper_t&amp;, cql3::expr::expression&gt; (1 samples, 0.02%)</title><rect x="60.6" y="1749" width="0.2" height="15.0" fill="rgb(207,54,13)" rx="2" ry="2" />
<text  x="63.59" y="1759.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;service::storage_proxy&gt;::create_local_service&lt;seastar::internal::either_sharded_or_local&lt;database&gt;, seastar::internal::either_sharded_or_local&lt;gms::gossiper&gt;, service::storage_proxy::config&amp;, std::reference_wrapper&lt;db::view::node_update_backlog&gt;, seastar::scheduling_group_key, seastar::internal::either_sharded_or_local&lt;gms::feature_service&gt;, seastar::internal::either_sharded_or_local&lt;locator::shared_token_metadata&gt;, seastar::internal::either_sharded_or_local&lt;netw::messaging_service&gt; &gt; (1 samples, 0.02%)</title><rect x="17.5" y="1829" width="0.2" height="15.0" fill="rgb(220,50,53)" rx="2" ry="2" />
<text  x="20.49" y="1839.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.02%)</title><rect x="45.8" y="1573" width="0.3" height="15.0" fill="rgb(232,98,29)" rx="2" ry="2" />
<text  x="48.85" y="1583.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::clear (2 samples, 0.04%)</title><rect x="817.5" y="1621" width="0.4" height="15.0" fill="rgb(229,95,47)" rx="2" ry="2" />
<text  x="820.46" y="1631.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (3 samples, 0.06%)</title><rect x="37.2" y="1733" width="0.7" height="15.0" fill="rgb(234,177,11)" rx="2" ry="2" />
<text  x="40.23" y="1743.5" ></text>
</g>
<g >
<title>db::schema_tables::create_table_from_mutations (3 samples, 0.06%)</title><rect x="106.7" y="1765" width="0.6" height="15.0" fill="rgb(216,136,33)" rx="2" ry="2" />
<text  x="109.65" y="1775.5" ></text>
</g>
<g >
<title>utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (33 samples, 0.63%)</title><rect x="809.5" y="1637" width="7.5" height="15.0" fill="rgb(234,112,35)" rx="2" ry="2" />
<text  x="812.52" y="1647.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.02%)</title><rect x="59.0" y="1669" width="0.2" height="15.0" fill="rgb(225,217,5)" rx="2" ry="2" />
<text  x="62.01" y="1679.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.02%)</title><rect x="40.9" y="1589" width="0.2" height="15.0" fill="rgb(214,186,7)" rx="2" ry="2" />
<text  x="43.86" y="1599.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (2 samples, 0.04%)</title><rect x="1102.7" y="1813" width="0.4" height="15.0" fill="rgb(251,73,21)" rx="2" ry="2" />
<text  x="1105.65" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (1 samples, 0.02%)</title><rect x="74.2" y="1717" width="0.2" height="15.0" fill="rgb(245,161,10)" rx="2" ry="2" />
<text  x="77.21" y="1727.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::net::inet_address&gt;::operator (1 samples, 0.02%)</title><rect x="1143.5" y="1829" width="0.2" height="15.0" fill="rgb(238,163,1)" rx="2" ry="2" />
<text  x="1146.49" y="1839.5" ></text>
</g>
<g >
<title>std::get&lt;2ul, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const&amp;, auth::resource&amp;&amp;, service::client_state::has_column_family_access (1 samples, 0.02%)</title><rect x="842.4" y="1829" width="0.2" height="15.0" fill="rgb(220,228,21)" rx="2" ry="2" />
<text  x="845.42" y="1839.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.06%)</title><rect x="564.3" y="1765" width="0.6" height="15.0" fill="rgb(239,92,6)" rx="2" ry="2" />
<text  x="567.27" y="1775.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.04%)</title><rect x="46.3" y="1669" width="0.5" height="15.0" fill="rgb(234,175,49)" rx="2" ry="2" />
<text  x="49.30" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;gms::inet_address, std::pair&lt;gms::inet_address const, table::cache_hit_rate&gt;, std::allocator&lt;std::pair&lt;gms::inet_address const, table::cache_hit_rate&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;gms::inet_address&gt;, std::hash&lt;gms::inet_address&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::operator[] (1 samples, 0.02%)</title><rect x="725.1" y="1877" width="0.3" height="15.0" fill="rgb(244,149,20)" rx="2" ry="2" />
<text  x="728.12" y="1887.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_Optional_payload_base (1 samples, 0.02%)</title><rect x="1094.7" y="1781" width="0.2" height="15.0" fill="rgb(225,226,37)" rx="2" ry="2" />
<text  x="1097.71" y="1791.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;column_definition const*, std::pair&lt;column_definition const* const, seastar::shared_ptr&lt;cql3::restrictions::single_column_restriction&gt; &gt;, std::_Select1st&lt;std::pair&lt;column_definition const* const, seastar::shared_ptr&lt;cql3::restrictions::single_column_restriction&gt; &gt; &gt;, cql3::restrictions::single_column_restrictions::column_definition_comparator, std::allocator&lt;std::pair&lt;column_definition const* const, seastar::shared_ptr&lt;cql3::restrictions::single_column_restriction&gt; &gt; &gt; &gt;::_M_drop_node (1 samples, 0.02%)</title><rect x="654.3" y="1797" width="0.3" height="15.0" fill="rgb(228,210,29)" rx="2" ry="2" />
<text  x="657.34" y="1807.5" ></text>
</g>
<g >
<title>__errno_location (1 samples, 0.02%)</title><rect x="1189.8" y="1973" width="0.2" height="15.0" fill="rgb(242,141,11)" rx="2" ry="2" />
<text  x="1192.77" y="1983.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::sharded_parallel_for_each (1 samples, 0.02%)</title><rect x="17.3" y="1877" width="0.2" height="15.0" fill="rgb(208,158,10)" rx="2" ry="2" />
<text  x="20.26" y="1887.5" ></text>
</g>
<g >
<title>operator new (12 samples, 0.23%)</title><rect x="1096.5" y="1781" width="2.7" height="15.0" fill="rgb(236,73,28)" rx="2" ry="2" />
<text  x="1099.53" y="1791.5" ></text>
</g>
<g >
<title>flat_mutation_reader::close (62 samples, 1.19%)</title><rect x="574.0" y="1765" width="14.1" height="15.0" fill="rgb(212,60,26)" rx="2" ry="2" />
<text  x="577.02" y="1775.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (21 samples, 0.40%)</title><rect x="1129.2" y="1733" width="4.8" height="15.0" fill="rgb(215,193,14)" rx="2" ry="2" />
<text  x="1132.20" y="1743.5" ></text>
</g>
<g >
<title>fmt::v7::detail::buffer&lt;char&gt;::push_back (1 samples, 0.02%)</title><rect x="18.6" y="1893" width="0.2" height="15.0" fill="rgb(230,42,11)" rx="2" ry="2" />
<text  x="21.62" y="1903.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::CommonToken (4 samples, 0.08%)</title><rect x="22.7" y="1637" width="0.9" height="15.0" fill="rgb(207,163,2)" rx="2" ry="2" />
<text  x="25.71" y="1647.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::assign (3 samples, 0.06%)</title><rect x="27.7" y="1637" width="0.7" height="15.0" fill="rgb(209,18,48)" rx="2" ry="2" />
<text  x="30.70" y="1647.5" ></text>
</g>
<g >
<title>auth::create_metadata_table_if_missing_impl (1 samples, 0.02%)</title><rect x="700.6" y="1829" width="0.2" height="15.0" fill="rgb(230,88,27)" rx="2" ry="2" />
<text  x="703.62" y="1839.5" ></text>
</g>
<g >
<title>ser::qr_partition__static_row&lt;bytes_ostream&gt;::qr_partition__static_row (2 samples, 0.04%)</title><rect x="350.3" y="1605" width="0.5" height="15.0" fill="rgb(242,45,32)" rx="2" ry="2" />
<text  x="353.32" y="1615.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.08%)</title><rect x="1032.1" y="1669" width="0.9" height="15.0" fill="rgb(230,197,35)" rx="2" ry="2" />
<text  x="1035.09" y="1679.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (2 samples, 0.04%)</title><rect x="39.0" y="1749" width="0.5" height="15.0" fill="rgb(213,129,25)" rx="2" ry="2" />
<text  x="42.04" y="1759.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::with_ready_permit (2 samples, 0.04%)</title><rect x="1026.9" y="1637" width="0.4" height="15.0" fill="rgb(206,82,30)" rx="2" ry="2" />
<text  x="1029.87" y="1647.5" ></text>
</g>
<g >
<title>flat_mutation_reader::peek (704 samples, 13.54%)</title><rect x="165.2" y="1829" width="159.7" height="15.0" fill="rgb(218,165,17)" rx="2" ry="2" />
<text  x="168.19" y="1839.5" >flat_mutation_reader..</text>
</g>
<g >
<title>std::_Optional_payload_base&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt;::_M_reset (1 samples, 0.02%)</title><rect x="292.2" y="1685" width="0.3" height="15.0" fill="rgb(208,4,41)" rx="2" ry="2" />
<text  x="295.24" y="1695.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_Optional_payload_base (4 samples, 0.08%)</title><rect x="931.6" y="1813" width="0.9" height="15.0" fill="rgb(207,152,22)" rx="2" ry="2" />
<text  x="934.58" y="1823.5" ></text>
</g>
<g >
<title>service::client_state::check_has_permission (150 samples, 2.88%)</title><rect x="792.3" y="1765" width="34.0" height="15.0" fill="rgb(251,22,17)" rx="2" ry="2" />
<text  x="795.28" y="1775.5" >se..</text>
</g>
<g >
<title>operator delete (2 samples, 0.04%)</title><rect x="583.1" y="1701" width="0.5" height="15.0" fill="rgb(244,126,44)" rx="2" ry="2" />
<text  x="586.10" y="1711.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.02%)</title><rect x="59.2" y="1605" width="0.3" height="15.0" fill="rgb(223,58,31)" rx="2" ry="2" />
<text  x="62.23" y="1615.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (1 samples, 0.02%)</title><rect x="77.8" y="1653" width="0.3" height="15.0" fill="rgb(222,25,33)" rx="2" ry="2" />
<text  x="80.84" y="1663.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="1126.9" y="1653" width="0.3" height="15.0" fill="rgb(223,108,14)" rx="2" ry="2" />
<text  x="1129.93" y="1663.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;tracking_allocator&lt;mutation_fragment&gt; &gt;::_S_destroy&lt;tracking_allocator&lt;mutation_fragment&gt;, mutation_fragment&gt; (1 samples, 0.02%)</title><rect x="302.4" y="1733" width="0.3" height="15.0" fill="rgb(216,2,26)" rx="2" ry="2" />
<text  x="305.45" y="1743.5" ></text>
</g>
<g >
<title>std::default_delete&lt;query::partition_slice const&gt;::operator (1 samples, 0.02%)</title><rect x="1165.5" y="1877" width="0.2" height="15.0" fill="rgb(206,31,49)" rx="2" ry="2" />
<text  x="1168.50" y="1887.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.04%)</title><rect x="39.7" y="1669" width="0.5" height="15.0" fill="rgb(250,87,46)" rx="2" ry="2" />
<text  x="42.72" y="1679.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::followPop (1 samples, 0.02%)</title><rect x="50.8" y="1701" width="0.3" height="15.0" fill="rgb(227,64,53)" rx="2" ry="2" />
<text  x="53.84" y="1711.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_M_reset (2 samples, 0.04%)</title><rect x="804.1" y="1653" width="0.4" height="15.0" fill="rgb(249,121,24)" rx="2" ry="2" />
<text  x="807.08" y="1663.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (1 samples, 0.02%)</title><rect x="17.9" y="1909" width="0.3" height="15.0" fill="rgb(226,98,32)" rx="2" ry="2" />
<text  x="20.94" y="1919.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (3 samples, 0.06%)</title><rect x="1086.5" y="1813" width="0.7" height="15.0" fill="rgb(205,58,37)" rx="2" ry="2" />
<text  x="1089.54" y="1823.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (2 samples, 0.04%)</title><rect x="448.8" y="1765" width="0.4" height="15.0" fill="rgb(218,14,29)" rx="2" ry="2" />
<text  x="451.78" y="1775.5" ></text>
</g>
<g >
<title>std::optional&lt;position_in_partition&gt;::operator=&lt;position_in_partition&gt; (3 samples, 0.06%)</title><rect x="273.6" y="1653" width="0.7" height="15.0" fill="rgb(242,5,22)" rx="2" ry="2" />
<text  x="276.63" y="1663.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (3 samples, 0.06%)</title><rect x="43.4" y="1653" width="0.6" height="15.0" fill="rgb(250,159,4)" rx="2" ry="2" />
<text  x="46.35" y="1663.5" ></text>
</g>
<g >
<title>memtable::upgrade_entry (2 samples, 0.04%)</title><rect x="537.3" y="1765" width="0.4" height="15.0" fill="rgb(245,82,2)" rx="2" ry="2" />
<text  x="540.27" y="1775.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_clear (7 samples, 0.13%)</title><rect x="593.1" y="1781" width="1.6" height="15.0" fill="rgb(219,229,47)" rx="2" ry="2" />
<text  x="596.08" y="1791.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::find (3 samples, 0.06%)</title><rect x="952.0" y="1749" width="0.7" height="15.0" fill="rgb(230,181,45)" rx="2" ry="2" />
<text  x="955.00" y="1759.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (35 samples, 0.67%)</title><rect x="1126.5" y="1813" width="7.9" height="15.0" fill="rgb(239,28,33)" rx="2" ry="2" />
<text  x="1129.47" y="1823.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::~small_vector (1 samples, 0.02%)</title><rect x="594.9" y="1781" width="0.2" height="15.0" fill="rgb(242,40,2)" rx="2" ry="2" />
<text  x="597.90" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.5" y="853" width="0.2" height="15.0" fill="rgb(210,227,37)" rx="2" ry="2" />
<text  x="13.45" y="863.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_allocate_buckets (7 samples, 0.13%)</title><rect x="1148.3" y="1829" width="1.5" height="15.0" fill="rgb(247,119,39)" rx="2" ry="2" />
<text  x="1151.25" y="1839.5" ></text>
</g>
<g >
<title>position_in_partition_view::for_range_end (3 samples, 0.06%)</title><rect x="274.8" y="1669" width="0.6" height="15.0" fill="rgb(223,81,26)" rx="2" ry="2" />
<text  x="277.77" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.5" y="709" width="0.2" height="15.0" fill="rgb(248,32,49)" rx="2" ry="2" />
<text  x="13.45" y="719.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::entry::entry (2 samples, 0.04%)</title><rect x="1020.3" y="1621" width="0.4" height="15.0" fill="rgb(207,157,31)" rx="2" ry="2" />
<text  x="1023.29" y="1631.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (6 samples, 0.12%)</title><rect x="1028.9" y="1621" width="1.4" height="15.0" fill="rgb(246,59,12)" rx="2" ry="2" />
<text  x="1031.92" y="1631.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::contains&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (8 samples, 0.15%)</title><rect x="856.7" y="1813" width="1.8" height="15.0" fill="rgb(207,24,52)" rx="2" ry="2" />
<text  x="859.71" y="1823.5" ></text>
</g>
<g >
<title>seastar::posix_file_impl::dma_read_bulk (1 samples, 0.02%)</title><rect x="17.9" y="1381" width="0.3" height="15.0" fill="rgb(246,110,26)" rx="2" ry="2" />
<text  x="20.94" y="1391.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql3::statements::update_statement&gt;::~shared_ptr_count_for (7 samples, 0.13%)</title><rect x="653.9" y="1909" width="1.6" height="15.0" fill="rgb(208,26,17)" rx="2" ry="2" />
<text  x="656.88" y="1919.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.02%)</title><rect x="24.3" y="1669" width="0.2" height="15.0" fill="rgb(218,111,32)" rx="2" ry="2" />
<text  x="27.29" y="1679.5" ></text>
</g>
<g >
<title>seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;::swap (5 samples, 0.10%)</title><rect x="741.0" y="1829" width="1.1" height="15.0" fill="rgb(249,113,54)" rx="2" ry="2" />
<text  x="744.01" y="1839.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (2 samples, 0.04%)</title><rect x="58.6" y="1733" width="0.4" height="15.0" fill="rgb(220,196,29)" rx="2" ry="2" />
<text  x="61.55" y="1743.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (7 samples, 0.13%)</title><rect x="42.9" y="1749" width="1.6" height="15.0" fill="rgb(207,147,7)" rx="2" ry="2" />
<text  x="45.90" y="1759.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (1 samples, 0.02%)</title><rect x="754.4" y="1813" width="0.2" height="15.0" fill="rgb(249,137,18)" rx="2" ry="2" />
<text  x="757.39" y="1823.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (10 samples, 0.19%)</title><rect x="953.4" y="1813" width="2.2" height="15.0" fill="rgb(212,48,7)" rx="2" ry="2" />
<text  x="956.36" y="1823.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (10 samples, 0.19%)</title><rect x="1040.0" y="1653" width="2.3" height="15.0" fill="rgb(229,17,9)" rx="2" ry="2" />
<text  x="1043.03" y="1663.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (1 samples, 0.02%)</title><rect x="108.5" y="1749" width="0.2" height="15.0" fill="rgb(223,82,35)" rx="2" ry="2" />
<text  x="111.47" y="1759.5" ></text>
</g>
<g >
<title>bytes_ostream::linearize (1 samples, 0.02%)</title><rect x="608.5" y="1845" width="0.2" height="15.0" fill="rgb(227,42,35)" rx="2" ry="2" />
<text  x="611.51" y="1855.5" ></text>
</g>
<g >
<title>ser::after_qr_cell__value&lt;bytes_ostream&gt;::skip_ttl (4 samples, 0.08%)</title><rect x="383.4" y="1589" width="1.0" height="15.0" fill="rgb(243,106,49)" rx="2" ry="2" />
<text  x="386.44" y="1599.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::get_promise (1 samples, 0.02%)</title><rect x="771.6" y="1829" width="0.3" height="15.0" fill="rgb(221,105,18)" rx="2" ry="2" />
<text  x="774.63" y="1839.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (7 samples, 0.13%)</title><rect x="979.5" y="1733" width="1.5" height="15.0" fill="rgb(231,196,44)" rx="2" ry="2" />
<text  x="982.46" y="1743.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (4 samples, 0.08%)</title><rect x="674.5" y="1909" width="0.9" height="15.0" fill="rgb(216,143,1)" rx="2" ry="2" />
<text  x="677.53" y="1919.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (3 samples, 0.06%)</title><rect x="45.4" y="1749" width="0.7" height="15.0" fill="rgb(212,186,32)" rx="2" ry="2" />
<text  x="48.39" y="1759.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.02%)</title><rect x="39.9" y="1589" width="0.3" height="15.0" fill="rgb(216,193,37)" rx="2" ry="2" />
<text  x="42.95" y="1599.5" ></text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::find (1 samples, 0.02%)</title><rect x="70.6" y="1813" width="0.2" height="15.0" fill="rgb(240,179,45)" rx="2" ry="2" />
<text  x="73.58" y="1823.5" ></text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_token (8 samples, 0.15%)</title><rect x="660.5" y="1861" width="1.8" height="15.0" fill="rgb(244,183,11)" rx="2" ry="2" />
<text  x="663.46" y="1871.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;cql3::single_column_relation, true&gt;::make&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, cql3::expr::oper_t&amp;, cql3::expr::expression&gt; (1 samples, 0.02%)</title><rect x="60.6" y="1733" width="0.2" height="15.0" fill="rgb(243,7,5)" rx="2" ry="2" />
<text  x="63.59" y="1743.5" ></text>
</g>
<g >
<title>std::visit&lt;overloaded_functor&lt;cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_token (1 samples, 0.02%)</title><rect x="946.6" y="1749" width="0.2" height="15.0" fill="rgb(213,32,35)" rx="2" ry="2" />
<text  x="949.56" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_character_class_matcher&lt;false, false&gt; (1 samples, 0.02%)</title><rect x="11.4" y="1397" width="0.2" height="15.0" fill="rgb(211,162,31)" rx="2" ry="2" />
<text  x="14.36" y="1407.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (1 samples, 0.02%)</title><rect x="1036.6" y="1701" width="0.3" height="15.0" fill="rgb(217,3,45)" rx="2" ry="2" />
<text  x="1039.63" y="1711.5" ></text>
</g>
<g >
<title>service::storage_proxy::send_to_live_endpoints (6 samples, 0.12%)</title><rect x="1127.6" y="1685" width="1.4" height="15.0" fill="rgb(245,101,24)" rx="2" ry="2" />
<text  x="1130.61" y="1695.5" ></text>
</g>
<g >
<title>std::forward&lt;cql3::expr::untyped_constant&gt; (1 samples, 0.02%)</title><rect x="52.9" y="1525" width="0.2" height="15.0" fill="rgb(242,225,36)" rx="2" ry="2" />
<text  x="55.88" y="1535.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;compact_for_query&lt; (1 samples, 0.02%)</title><rect x="433.6" y="1765" width="0.2" height="15.0" fill="rgb(205,95,32)" rx="2" ry="2" />
<text  x="436.58" y="1775.5" ></text>
</g>
<g >
<title>sstring_hash::operator (4 samples, 0.08%)</title><rect x="1055.2" y="1717" width="0.9" height="15.0" fill="rgb(207,115,9)" rx="2" ry="2" />
<text  x="1058.23" y="1727.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="643.0" y="1909" width="0.2" height="15.0" fill="rgb(254,21,5)" rx="2" ry="2" />
<text  x="645.99" y="1919.5" ></text>
</g>
<g >
<title>single_node_cql_env::make_query_state (31 samples, 0.60%)</title><rect x="851.7" y="1861" width="7.1" height="15.0" fill="rgb(248,160,4)" rx="2" ry="2" />
<text  x="854.72" y="1871.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (1 samples, 0.02%)</title><rect x="17.5" y="1685" width="0.2" height="15.0" fill="rgb(222,8,52)" rx="2" ry="2" />
<text  x="20.49" y="1695.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (2 samples, 0.04%)</title><rect x="313.6" y="1733" width="0.4" height="15.0" fill="rgb(219,137,27)" rx="2" ry="2" />
<text  x="316.56" y="1743.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;query::querier&lt; (1 samples, 0.02%)</title><rect x="105.3" y="1909" width="0.2" height="15.0" fill="rgb(237,81,45)" rx="2" ry="2" />
<text  x="108.29" y="1919.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_slice_or_needs_filtering (7 samples, 0.13%)</title><rect x="942.9" y="1797" width="1.6" height="15.0" fill="rgb(241,188,5)" rx="2" ry="2" />
<text  x="945.93" y="1807.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (2 samples, 0.04%)</title><rect x="1061.4" y="1717" width="0.4" height="15.0" fill="rgb(242,130,44)" rx="2" ry="2" />
<text  x="1064.36" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_nodes (2 samples, 0.04%)</title><rect x="1159.8" y="1893" width="0.5" height="15.0" fill="rgb(211,204,29)" rx="2" ry="2" />
<text  x="1162.83" y="1903.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::~deque (10 samples, 0.19%)</title><rect x="630.7" y="1829" width="2.3" height="15.0" fill="rgb(212,113,43)" rx="2" ry="2" />
<text  x="633.74" y="1839.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::clear (3 samples, 0.06%)</title><rect x="671.1" y="1909" width="0.7" height="15.0" fill="rgb(235,17,41)" rx="2" ry="2" />
<text  x="674.13" y="1919.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;query::result&gt;::dispose (9 samples, 0.17%)</title><rect x="97.8" y="1877" width="2.0" height="15.0" fill="rgb(207,46,30)" rx="2" ry="2" />
<text  x="100.80" y="1887.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.04%)</title><rect x="435.9" y="1797" width="0.4" height="15.0" fill="rgb(209,137,33)" rx="2" ry="2" />
<text  x="438.85" y="1807.5" ></text>
</g>
<g >
<title>sstables::mc::writer::write_cell (1 samples, 0.02%)</title><rect x="83.5" y="1717" width="0.2" height="15.0" fill="rgb(213,134,27)" rx="2" ry="2" />
<text  x="86.51" y="1727.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="1161.2" y="1861" width="0.2" height="15.0" fill="rgb(252,149,54)" rx="2" ry="2" />
<text  x="1164.19" y="1871.5" ></text>
</g>
<g >
<title>ser::serializer&lt;partition_key&gt;::write&lt;seastar::measuring_output_stream&gt; (1 samples, 0.02%)</title><rect x="1131.5" y="1541" width="0.2" height="15.0" fill="rgb(212,26,50)" rx="2" ry="2" />
<text  x="1134.47" y="1551.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.06%)</title><rect x="669.5" y="1909" width="0.7" height="15.0" fill="rgb(205,106,17)" rx="2" ry="2" />
<text  x="672.54" y="1919.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (1 samples, 0.02%)</title><rect x="1117.4" y="1845" width="0.2" height="15.0" fill="rgb(217,19,12)" rx="2" ry="2" />
<text  x="1120.40" y="1855.5" ></text>
</g>
<g >
<title>seastar::thread_context::setup (1 samples, 0.02%)</title><rect x="1165.7" y="1861" width="0.3" height="15.0" fill="rgb(218,169,28)" rx="2" ry="2" />
<text  x="1168.72" y="1871.5" ></text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::EqualElement&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt;&amp;&gt; (3 samples, 0.06%)</title><rect x="836.7" y="1733" width="0.7" height="15.0" fill="rgb(210,164,5)" rx="2" ry="2" />
<text  x="839.75" y="1743.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (1 samples, 0.02%)</title><rect x="288.6" y="1653" width="0.2" height="15.0" fill="rgb(240,63,12)" rx="2" ry="2" />
<text  x="291.61" y="1663.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (3 samples, 0.06%)</title><rect x="43.4" y="1637" width="0.6" height="15.0" fill="rgb(238,200,46)" rx="2" ry="2" />
<text  x="46.35" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt;::~_Variant_storage (1 samples, 0.02%)</title><rect x="872.4" y="1909" width="0.2" height="15.0" fill="rgb(239,138,14)" rx="2" ry="2" />
<text  x="875.37" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, flat_mutation_reader, reader_concurrency_semaphore::inactive_read_handle&gt;::~_Variant_storage (5 samples, 0.10%)</title><rect x="599.7" y="1845" width="1.1" height="15.0" fill="rgb(242,138,6)" rx="2" ry="2" />
<text  x="602.66" y="1855.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_token (3 samples, 0.06%)</title><rect x="946.1" y="1765" width="0.7" height="15.0" fill="rgb(248,226,39)" rx="2" ry="2" />
<text  x="949.10" y="1775.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (17 samples, 0.33%)</title><rect x="810.2" y="1589" width="3.9" height="15.0" fill="rgb(237,118,33)" rx="2" ry="2" />
<text  x="813.20" y="1599.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;interval_bound&lt;dht::ring_position&gt;, false, false&gt;::_Optional_base (1 samples, 0.02%)</title><rect x="1044.3" y="1717" width="0.3" height="15.0" fill="rgb(213,23,43)" rx="2" ry="2" />
<text  x="1047.34" y="1727.5" ></text>
</g>
<g >
<title>__tls_init (1 samples, 0.02%)</title><rect x="194.0" y="1669" width="0.2" height="15.0" fill="rgb(244,142,12)" rx="2" ry="2" />
<text  x="197.00" y="1679.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_partition_key_ranges (6 samples, 0.12%)</title><rect x="876.7" y="1797" width="1.3" height="15.0" fill="rgb(232,104,22)" rx="2" ry="2" />
<text  x="879.68" y="1807.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::query_options, std::default_delete&lt;cql3::query_options&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="858.8" y="1861" width="0.2" height="15.0" fill="rgb(219,77,19)" rx="2" ry="2" />
<text  x="861.76" y="1871.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value_view, std::allocator&lt;cql3::raw_value_view&gt; &gt;::_M_realloc_insert&lt;cql3::raw_value_view&gt; (1 samples, 0.02%)</title><rect x="861.5" y="1813" width="0.2" height="15.0" fill="rgb(226,164,52)" rx="2" ry="2" />
<text  x="864.48" y="1823.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (2 samples, 0.04%)</title><rect x="763.5" y="1701" width="0.4" height="15.0" fill="rgb(241,216,17)" rx="2" ry="2" />
<text  x="766.47" y="1711.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;boost::range_detail::integer_iterator&lt;unsigned int&gt;, std::function&lt;seastar::future&lt;void&gt;  (1 samples, 0.02%)</title><rect x="10.5" y="69" width="0.2" height="15.0" fill="rgb(229,37,8)" rx="2" ry="2" />
<text  x="13.45" y="79.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="823.6" y="1701" width="0.2" height="15.0" fill="rgb(244,43,52)" rx="2" ry="2" />
<text  x="826.59" y="1711.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;,  (29 samples, 0.56%)</title><rect x="742.6" y="1845" width="6.6" height="15.0" fill="rgb(239,73,42)" rx="2" ry="2" />
<text  x="745.59" y="1855.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (2 samples, 0.04%)</title><rect x="42.4" y="1733" width="0.5" height="15.0" fill="rgb(234,148,5)" rx="2" ry="2" />
<text  x="45.44" y="1743.5" ></text>
</g>
<g >
<title>managed_bytes::free_chain (2 samples, 0.04%)</title><rect x="425.0" y="1637" width="0.4" height="15.0" fill="rgb(223,60,28)" rx="2" ry="2" />
<text  x="427.96" y="1647.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_M_copy_assign (1 samples, 0.02%)</title><rect x="822.7" y="1701" width="0.2" height="15.0" fill="rgb(233,14,7)" rx="2" ry="2" />
<text  x="825.68" y="1711.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, seastar::future&lt;void&gt;, false&gt;::_Head_base&lt;seastar::future&lt;void&gt; &gt; (1 samples, 0.02%)</title><rect x="874.2" y="1829" width="0.2" height="15.0" fill="rgb(249,55,39)" rx="2" ry="2" />
<text  x="877.18" y="1839.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (3 samples, 0.06%)</title><rect x="301.8" y="1733" width="0.6" height="15.0" fill="rgb(235,190,34)" rx="2" ry="2" />
<text  x="304.77" y="1743.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value, std::allocator&lt;cql3::raw_value&gt; &gt;::~vector (2 samples, 0.04%)</title><rect x="864.7" y="1845" width="0.4" height="15.0" fill="rgb(206,38,36)" rx="2" ry="2" />
<text  x="867.65" y="1855.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;query::result&gt;::operator= (1 samples, 0.02%)</title><rect x="1138.7" y="1893" width="0.3" height="15.0" fill="rgb(217,209,0)" rx="2" ry="2" />
<text  x="1141.73" y="1903.5" ></text>
</g>
<g >
<title>std::__lower_bound&lt;__gnu_cxx::__normal_iterator&lt;dht::token const*, std::vector&lt;dht::token, std::allocator&lt;dht::token&gt; &gt; &gt;, dht::token, __gnu_cxx::__ops::_Iter_less_val&gt; (1 samples, 0.02%)</title><rect x="1071.6" y="1685" width="0.2" height="15.0" fill="rgb(252,141,40)" rx="2" ry="2" />
<text  x="1074.57" y="1695.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt; (1 samples, 0.02%)</title><rect x="612.8" y="1813" width="0.2" height="15.0" fill="rgb(254,27,23)" rx="2" ry="2" />
<text  x="615.82" y="1823.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (1 samples, 0.02%)</title><rect x="995.3" y="1717" width="0.3" height="15.0" fill="rgb(216,151,29)" rx="2" ry="2" />
<text  x="998.34" y="1727.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.02%)</title><rect x="47.2" y="1573" width="0.2" height="15.0" fill="rgb(248,56,48)" rx="2" ry="2" />
<text  x="50.21" y="1583.5" ></text>
</g>
<g >
<title>query::result::builder::add_partition (14 samples, 0.27%)</title><rect x="347.1" y="1605" width="3.2" height="15.0" fill="rgb(219,182,39)" rx="2" ry="2" />
<text  x="350.14" y="1615.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;empty_flat_reader, std::default_delete&lt;empty_flat_reader&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="551.3" y="1717" width="0.3" height="15.0" fill="rgb(250,88,8)" rx="2" ry="2" />
<text  x="554.33" y="1727.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt; (1 samples, 0.02%)</title><rect x="861.3" y="1797" width="0.2" height="15.0" fill="rgb(227,23,0)" rx="2" ry="2" />
<text  x="864.25" y="1807.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::clone&lt;row::row (142 samples, 2.73%)</title><rect x="217.1" y="1557" width="32.3" height="15.0" fill="rgb(252,98,20)" rx="2" ry="2" />
<text  x="220.14" y="1567.5" >co..</text>
</g>
<g >
<title>range_tombstone_accumulator::drop_unneeded_tombstones (1 samples, 0.02%)</title><rect x="394.8" y="1637" width="0.2" height="15.0" fill="rgb(254,213,35)" rx="2" ry="2" />
<text  x="397.79" y="1647.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::get_local_service (1 samples, 0.02%)</title><rect x="1033.9" y="1685" width="0.2" height="15.0" fill="rgb(243,147,36)" rx="2" ry="2" />
<text  x="1036.91" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.5" y="1557" width="0.2" height="15.0" fill="rgb(239,185,29)" rx="2" ry="2" />
<text  x="13.45" y="1567.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (1 samples, 0.02%)</title><rect x="41.1" y="1749" width="0.2" height="15.0" fill="rgb(249,68,12)" rx="2" ry="2" />
<text  x="44.08" y="1759.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (2 samples, 0.04%)</title><rect x="1161.9" y="1861" width="0.4" height="15.0" fill="rgb(210,80,11)" rx="2" ry="2" />
<text  x="1164.87" y="1871.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureIvE9then_implIZZN5query12consume_pageIL19emit_only_live_rows1E20query_result_builderEEDaR20flat_mutation_readerNS_13lw_shared_ptrI22compact_mutation_stateIXT_EL20compact_for_sstables0EEEERKNS3_15partition_sliceEOT0_mjNSt6chrono10time_pointI8gc_clockNSJ_8durationIlSt5ratioILl1ELl1EEEEEEENUlP17mutation_fragmentE_clESS_EUlDpOT_E_NS0_ISt5tupleIJSt8optionalI21clustering_key_prefixEEEEEEESH_OT_ (6 samples, 0.12%)</title><rect x="327.2" y="1797" width="1.3" height="15.0" fill="rgb(233,217,53)" rx="2" ry="2" />
<text  x="330.18" y="1807.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.04%)</title><rect x="676.8" y="1861" width="0.5" height="15.0" fill="rgb(223,130,20)" rx="2" ry="2" />
<text  x="679.80" y="1871.5" ></text>
</g>
<g >
<title>std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (6 samples, 0.12%)</title><rect x="432.2" y="1717" width="1.4" height="15.0" fill="rgb(206,175,4)" rx="2" ry="2" />
<text  x="435.22" y="1727.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (1 samples, 0.02%)</title><rect x="786.6" y="1749" width="0.2" height="15.0" fill="rgb(244,220,27)" rx="2" ry="2" />
<text  x="789.61" y="1759.5" ></text>
</g>
<g >
<title>seastar::repeat&lt;flat_mutation_reader::impl::consume_pausable&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (427 samples, 8.21%)</title><rect x="334.9" y="1717" width="96.9" height="15.0" fill="rgb(241,143,2)" rx="2" ry="2" />
<text  x="337.89" y="1727.5" >seastar::re..</text>
</g>
<g >
<title>do_with_cql_env_thread (1 samples, 0.02%)</title><rect x="730.3" y="1845" width="0.3" height="15.0" fill="rgb(217,158,8)" rx="2" ry="2" />
<text  x="733.34" y="1855.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (1 samples, 0.02%)</title><rect x="991.9" y="1733" width="0.3" height="15.0" fill="rgb(253,128,44)" rx="2" ry="2" />
<text  x="994.93" y="1743.5" ></text>
</g>
<g >
<title>bound_view::from_range_end&lt;nonwrapping_interval&gt; (1 samples, 0.02%)</title><rect x="281.6" y="1605" width="0.2" height="15.0" fill="rgb(228,15,53)" rx="2" ry="2" />
<text  x="284.57" y="1615.5" ></text>
</g>
<g >
<title>std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt;::reserve (7 samples, 0.13%)</title><rect x="1143.9" y="1877" width="1.6" height="15.0" fill="rgb(214,94,29)" rx="2" ry="2" />
<text  x="1146.94" y="1887.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_partition_key_ranges (216 samples, 4.15%)</title><rect x="892.6" y="1845" width="49.0" height="15.0" fill="rgb(249,205,48)" rx="2" ry="2" />
<text  x="895.56" y="1855.5" >cql3..</text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (1 samples, 0.02%)</title><rect x="832.0" y="1781" width="0.2" height="15.0" fill="rgb(218,147,49)" rx="2" ry="2" />
<text  x="834.98" y="1791.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_M_reset (2 samples, 0.04%)</title><rect x="925.0" y="1765" width="0.5" height="15.0" fill="rgb(210,153,36)" rx="2" ry="2" />
<text  x="928.00" y="1775.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (7 samples, 0.13%)</title><rect x="856.7" y="1797" width="1.6" height="15.0" fill="rgb(244,18,5)" rx="2" ry="2" />
<text  x="859.71" y="1807.5" ></text>
</g>
<g >
<title>std::make_unique&lt;seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::entry, reader_concurrency_semaphore::entry, seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;&amp;, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;&amp;&gt; (2 samples, 0.04%)</title><rect x="1025.7" y="1605" width="0.5" height="15.0" fill="rgb(251,204,10)" rx="2" ry="2" />
<text  x="1028.74" y="1615.5" ></text>
</g>
<g >
<title>cql3::single_column_relation::to_expression (1 samples, 0.02%)</title><rect x="70.8" y="1781" width="0.2" height="15.0" fill="rgb(247,182,26)" rx="2" ry="2" />
<text  x="73.80" y="1791.5" ></text>
</g>
<g >
<title>sstables::mc::writer::maybe_record_large_rows (1 samples, 0.02%)</title><rect x="83.3" y="1781" width="0.2" height="15.0" fill="rgb(209,146,15)" rx="2" ry="2" />
<text  x="86.28" y="1791.5" ></text>
</g>
<g >
<title>sstables::mc::writer::consume_new_partition (1 samples, 0.02%)</title><rect x="83.7" y="1829" width="0.3" height="15.0" fill="rgb(246,69,14)" rx="2" ry="2" />
<text  x="86.74" y="1839.5" ></text>
</g>
<g >
<title>sstring_hash::operator (3 samples, 0.06%)</title><rect x="857.6" y="1781" width="0.7" height="15.0" fill="rgb(239,148,34)" rx="2" ry="2" />
<text  x="860.62" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.5" y="1653" width="0.2" height="15.0" fill="rgb(251,163,54)" rx="2" ry="2" />
<text  x="13.45" y="1663.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (2 samples, 0.04%)</title><rect x="709.2" y="1877" width="0.5" height="15.0" fill="rgb(221,34,13)" rx="2" ry="2" />
<text  x="712.24" y="1887.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;flat_mutation_reader  (492 samples, 9.46%)</title><rect x="442.0" y="1797" width="111.6" height="15.0" fill="rgb(246,33,19)" rx="2" ry="2" />
<text  x="444.98" y="1807.5" >std::_Functio..</text>
</g>
<g >
<title>basic_atomic_cell_view&lt; (5 samples, 0.10%)</title><rect x="398.4" y="1605" width="1.2" height="15.0" fill="rgb(245,107,45)" rx="2" ry="2" />
<text  x="401.42" y="1615.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (2 samples, 0.04%)</title><rect x="991.5" y="1669" width="0.4" height="15.0" fill="rgb(246,85,52)" rx="2" ry="2" />
<text  x="994.48" y="1679.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="40.9" y="1701" width="0.2" height="15.0" fill="rgb(235,102,41)" rx="2" ry="2" />
<text  x="43.86" y="1711.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::allocate_large (2 samples, 0.04%)</title><rect x="566.8" y="1717" width="0.4" height="15.0" fill="rgb(241,73,5)" rx="2" ry="2" />
<text  x="569.76" y="1727.5" ></text>
</g>
<g >
<title>bound_view::tri_compare::operator (1 samples, 0.02%)</title><rect x="108.5" y="1685" width="0.2" height="15.0" fill="rgb(207,107,49)" rx="2" ry="2" />
<text  x="111.47" y="1695.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.02%)</title><rect x="38.4" y="1621" width="0.2" height="15.0" fill="rgb(213,66,29)" rx="2" ry="2" />
<text  x="41.36" y="1631.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::operator= (1 samples, 0.02%)</title><rect x="720.8" y="1861" width="0.2" height="15.0" fill="rgb(221,0,45)" rx="2" ry="2" />
<text  x="723.81" y="1871.5" ></text>
</g>
<g >
<title>cql3::restrictions::clustering_key_restrictions::needs_filtering (1 samples, 0.02%)</title><rect x="891.7" y="1845" width="0.2" height="15.0" fill="rgb(218,140,9)" rx="2" ry="2" />
<text  x="894.65" y="1855.5" ></text>
</g>
<g >
<title>nonwrapping_interval&lt;clustering_key_prefix&gt;::make_open_ended_both_sides (1 samples, 0.02%)</title><rect x="1100.4" y="1829" width="0.2" height="15.0" fill="rgb(235,121,49)" rx="2" ry="2" />
<text  x="1103.38" y="1839.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (1 samples, 0.02%)</title><rect x="249.1" y="1541" width="0.3" height="15.0" fill="rgb(215,102,12)" rx="2" ry="2" />
<text  x="252.13" y="1551.5" ></text>
</g>
<g >
<title>mutation::mutation (3 samples, 0.06%)</title><rect x="878.9" y="1749" width="0.7" height="15.0" fill="rgb(234,214,45)" rx="2" ry="2" />
<text  x="881.95" y="1759.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::push_static_row (2 samples, 0.04%)</title><rect x="292.7" y="1701" width="0.4" height="15.0" fill="rgb(217,16,24)" rx="2" ry="2" />
<text  x="295.69" y="1711.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.02%)</title><rect x="700.8" y="1589" width="0.3" height="15.0" fill="rgb(229,24,3)" rx="2" ry="2" />
<text  x="703.85" y="1599.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (28 samples, 0.54%)</title><rect x="810.2" y="1605" width="6.4" height="15.0" fill="rgb(227,125,11)" rx="2" ry="2" />
<text  x="813.20" y="1615.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (35 samples, 0.67%)</title><rect x="1126.5" y="1845" width="7.9" height="15.0" fill="rgb(245,201,5)" rx="2" ry="2" />
<text  x="1129.47" y="1855.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_M_reset (1 samples, 0.02%)</title><rect x="768.2" y="1829" width="0.3" height="15.0" fill="rgb(222,165,33)" rx="2" ry="2" />
<text  x="771.23" y="1839.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::cql_statement&gt;::~shared_ptr (2 samples, 0.04%)</title><rect x="845.6" y="1845" width="0.5" height="15.0" fill="rgb(214,9,15)" rx="2" ry="2" />
<text  x="848.60" y="1855.5" ></text>
</g>
<g >
<title>utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;::touch (1 samples, 0.02%)</title><rect x="749.6" y="1845" width="0.3" height="15.0" fill="rgb(234,181,14)" rx="2" ry="2" />
<text  x="752.63" y="1855.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;mutation_querier&gt;::_M_reset (1 samples, 0.02%)</title><rect x="438.8" y="1829" width="0.2" height="15.0" fill="rgb(246,104,46)" rx="2" ry="2" />
<text  x="441.80" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.5" y="1237" width="0.2" height="15.0" fill="rgb(225,109,35)" rx="2" ry="2" />
<text  x="13.45" y="1247.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (1 samples, 0.02%)</title><rect x="271.6" y="1637" width="0.2" height="15.0" fill="rgb(241,1,4)" rx="2" ry="2" />
<text  x="274.59" y="1647.5" ></text>
</g>
<g >
<title>nonwrapping_interval&lt;clustering_key_prefix&gt;::make_open_ended_both_sides (8 samples, 0.15%)</title><rect x="1093.8" y="1813" width="1.8" height="15.0" fill="rgb(215,150,11)" rx="2" ry="2" />
<text  x="1096.80" y="1823.5" ></text>
</g>
<g >
<title>db::system_keyspace::all_tables (1 samples, 0.02%)</title><rect x="17.3" y="1717" width="0.2" height="15.0" fill="rgb(240,83,51)" rx="2" ry="2" />
<text  x="20.26" y="1727.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (1 samples, 0.02%)</title><rect x="701.1" y="1877" width="0.2" height="15.0" fill="rgb(238,133,35)" rx="2" ry="2" />
<text  x="704.07" y="1887.5" ></text>
</g>
<g >
<title>sstring_hash::operator (1 samples, 0.02%)</title><rect x="854.0" y="1813" width="0.2" height="15.0" fill="rgb(225,200,45)" rx="2" ry="2" />
<text  x="856.99" y="1823.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (39 samples, 0.75%)</title><rect x="497.1" y="1653" width="8.9" height="15.0" fill="rgb(213,229,47)" rx="2" ry="2" />
<text  x="500.11" y="1663.5" ></text>
</g>
<g >
<title>managed_bytes::external_memory_usage (3 samples, 0.06%)</title><rect x="253.7" y="1525" width="0.6" height="15.0" fill="rgb(235,141,31)" rx="2" ry="2" />
<text  x="256.67" y="1535.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (1 samples, 0.02%)</title><rect x="82.6" y="1573" width="0.2" height="15.0" fill="rgb(248,110,4)" rx="2" ry="2" />
<text  x="85.60" y="1583.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="46.8" y="1653" width="0.2" height="15.0" fill="rgb(248,112,54)" rx="2" ry="2" />
<text  x="49.75" y="1663.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::sharded&lt;database&gt;::invoke_on_all (1 samples, 0.02%)</title><rect x="17.3" y="1813" width="0.2" height="15.0" fill="rgb(250,87,54)" rx="2" ry="2" />
<text  x="20.26" y="1823.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (1 samples, 0.02%)</title><rect x="821.8" y="1621" width="0.2" height="15.0" fill="rgb(206,81,10)" rx="2" ry="2" />
<text  x="824.77" y="1631.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="73.1" y="1573" width="0.2" height="15.0" fill="rgb(248,184,12)" rx="2" ry="2" />
<text  x="76.07" y="1583.5" ></text>
</g>
<g >
<title>std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="1134.0" y="1781" width="0.2" height="15.0" fill="rgb(206,25,53)" rx="2" ry="2" />
<text  x="1136.96" y="1791.5" ></text>
</g>
<g >
<title>tracing::global_trace_state_ptr::get (2 samples, 0.04%)</title><rect x="1034.8" y="1685" width="0.5" height="15.0" fill="rgb(209,205,19)" rx="2" ry="2" />
<text  x="1037.81" y="1695.5" ></text>
</g>
<g >
<title>seastar::smp::submit_to&lt;seastar::sharded&lt;service::storage_proxy&gt;::start&lt;std::reference_wrapper&lt;seastar::sharded&lt;database&gt; &gt;, std::reference_wrapper&lt;seastar::sharded&lt;gms::gossiper&gt; &gt;, service::storage_proxy::config&amp;, std::reference_wrapper&lt;db::view::node_update_backlog&gt;, seastar::scheduling_group_key, std::reference_wrapper&lt;seastar::sharded&lt;gms::feature_service&gt; &gt;, std::reference_wrapper&lt;seastar::sharded&lt;locator::shared_token_metadata&gt; &gt;, std::reference_wrapper&lt;seastar::sharded&lt;netw::messaging_service&gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="17.5" y="1877" width="0.2" height="15.0" fill="rgb(253,92,25)" rx="2" ry="2" />
<text  x="20.49" y="1887.5" ></text>
</g>
<g >
<title>mutation_reader_merger::~mutation_reader_merger (16 samples, 0.31%)</title><rect x="460.6" y="1733" width="3.6" height="15.0" fill="rgb(251,162,5)" rx="2" ry="2" />
<text  x="463.58" y="1743.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="847.9" y="1781" width="0.2" height="15.0" fill="rgb(218,34,53)" rx="2" ry="2" />
<text  x="850.87" y="1791.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="300.4" y="1685" width="0.2" height="15.0" fill="rgb(251,201,16)" rx="2" ry="2" />
<text  x="303.41" y="1695.5" ></text>
</g>
<g >
<title>__tls_init (1 samples, 0.02%)</title><rect x="506.6" y="1733" width="0.3" height="15.0" fill="rgb(245,7,36)" rx="2" ry="2" />
<text  x="509.64" y="1743.5" ></text>
</g>
<g >
<title>reader_permit::consume_memory (1 samples, 0.02%)</title><rect x="524.6" y="1621" width="0.2" height="15.0" fill="rgb(211,15,10)" rx="2" ry="2" />
<text  x="527.56" y="1631.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_Vector_impl::_Vector_impl (1 samples, 0.02%)</title><rect x="52.0" y="1653" width="0.2" height="15.0" fill="rgb(216,1,34)" rx="2" ry="2" />
<text  x="54.97" y="1663.5" ></text>
</g>
<g >
<title>db::assure_sufficient_live_nodes&lt;utils::small_vector&lt;gms::inet_address, 3ul&gt;, std::array&lt;gms::inet_address, 0ul&gt; &gt; (1 samples, 0.02%)</title><rect x="967.0" y="1781" width="0.2" height="15.0" fill="rgb(253,140,38)" rx="2" ry="2" />
<text  x="969.98" y="1791.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (2 samples, 0.04%)</title><rect x="46.3" y="1717" width="0.5" height="15.0" fill="rgb(254,101,50)" rx="2" ry="2" />
<text  x="49.30" y="1727.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="1025.3" y="1589" width="0.2" height="15.0" fill="rgb(250,210,34)" rx="2" ry="2" />
<text  x="1028.29" y="1599.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (5 samples, 0.10%)</title><rect x="147.9" y="1861" width="1.2" height="15.0" fill="rgb(233,106,42)" rx="2" ry="2" />
<text  x="150.94" y="1871.5" ></text>
</g>
<g >
<title>schema::get_sharder (1 samples, 0.02%)</title><rect x="1004.4" y="1701" width="0.2" height="15.0" fill="rgb(254,2,39)" rx="2" ry="2" />
<text  x="1007.41" y="1711.5" ></text>
</g>
<g >
<title>logalloc::segment_pool::refill_emergency_reserve (1 samples, 0.02%)</title><rect x="545.4" y="1717" width="0.3" height="15.0" fill="rgb(253,6,32)" rx="2" ry="2" />
<text  x="548.44" y="1727.5" ></text>
</g>
<g >
<title>cql3::statements::update_statement::update_statement (1 samples, 0.02%)</title><rect x="75.1" y="1813" width="0.2" height="15.0" fill="rgb(224,225,47)" rx="2" ry="2" />
<text  x="78.11" y="1823.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.02%)</title><rect x="24.5" y="1669" width="0.2" height="15.0" fill="rgb(234,196,51)" rx="2" ry="2" />
<text  x="27.52" y="1679.5" ></text>
</g>
<g >
<title>seastar::memory::stats (6 samples, 0.12%)</title><rect x="545.7" y="1717" width="1.3" height="15.0" fill="rgb(213,166,10)" rx="2" ry="2" />
<text  x="548.66" y="1727.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql3::constants::setter&gt;::~shared_ptr_count_for (1 samples, 0.02%)</title><rect x="655.0" y="1861" width="0.2" height="15.0" fill="rgb(223,128,6)" rx="2" ry="2" />
<text  x="658.02" y="1871.5" ></text>
</g>
<g >
<title>locator::token_metadata::get_all_endpoints (1 samples, 0.02%)</title><rect x="17.7" y="1813" width="0.2" height="15.0" fill="rgb(240,102,21)" rx="2" ry="2" />
<text  x="20.71" y="1823.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (2 samples, 0.04%)</title><rect x="777.8" y="1733" width="0.4" height="15.0" fill="rgb(232,66,45)" rx="2" ry="2" />
<text  x="780.76" y="1743.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::clear (1 samples, 0.02%)</title><rect x="681.3" y="1893" width="0.3" height="15.0" fill="rgb(249,139,18)" rx="2" ry="2" />
<text  x="684.34" y="1903.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.02%)</title><rect x="49.5" y="1605" width="0.2" height="15.0" fill="rgb(231,160,39)" rx="2" ry="2" />
<text  x="52.48" y="1615.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (1 samples, 0.02%)</title><rect x="17.3" y="1957" width="0.2" height="15.0" fill="rgb(223,147,24)" rx="2" ry="2" />
<text  x="20.26" y="1967.5" ></text>
</g>
<g >
<title>seastar::do_recursive_touch_directory (1 samples, 0.02%)</title><rect x="701.1" y="1909" width="0.2" height="15.0" fill="rgb(227,110,53)" rx="2" ry="2" />
<text  x="704.07" y="1919.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (5 samples, 0.10%)</title><rect x="820.9" y="1653" width="1.1" height="15.0" fill="rgb(215,18,20)" rx="2" ry="2" />
<text  x="823.87" y="1663.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (14 samples, 0.27%)</title><rect x="81.2" y="1941" width="3.2" height="15.0" fill="rgb(232,70,10)" rx="2" ry="2" />
<text  x="84.24" y="1951.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_pausable_in_thread&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;sstables::sstable_writer&gt; &gt;, flat_mutation_reader::no_filter&gt; (14 samples, 0.27%)</title><rect x="81.2" y="1877" width="3.2" height="15.0" fill="rgb(233,35,22)" rx="2" ry="2" />
<text  x="84.24" y="1887.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;void&gt;, service::storage_proxy*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt;, db::consistency_level, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, tracing::trace_state_ptr, service_permit, bool, seastar::lw_shared_ptr&lt;cdc::operation_result_tracker&gt; &gt;::do_flush (35 samples, 0.67%)</title><rect x="1126.5" y="1909" width="7.9" height="15.0" fill="rgb(232,69,10)" rx="2" ry="2" />
<text  x="1129.47" y="1919.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (5 samples, 0.10%)</title><rect x="761.4" y="1733" width="1.2" height="15.0" fill="rgb(206,63,33)" rx="2" ry="2" />
<text  x="764.42" y="1743.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (3 samples, 0.06%)</title><rect x="775.5" y="1749" width="0.7" height="15.0" fill="rgb(235,66,50)" rx="2" ry="2" />
<text  x="778.49" y="1759.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.02%)</title><rect x="17.7" y="1909" width="0.2" height="15.0" fill="rgb(220,81,13)" rx="2" ry="2" />
<text  x="20.71" y="1919.5" ></text>
</g>
<g >
<title>mutation_fragment::visit&lt;mutation_fragment::calculate_memory_usage (1 samples, 0.02%)</title><rect x="257.5" y="1605" width="0.3" height="15.0" fill="rgb(207,172,4)" rx="2" ry="2" />
<text  x="260.53" y="1615.5" ></text>
</g>
<g >
<title>empty_flat_reader::~empty_flat_reader (8 samples, 0.15%)</title><rect x="574.7" y="1749" width="1.8" height="15.0" fill="rgb(253,137,21)" rx="2" ry="2" />
<text  x="577.70" y="1759.5" ></text>
</g>
<g >
<title>db::filter_for_query (1 samples, 0.02%)</title><rect x="1056.8" y="1765" width="0.2" height="15.0" fill="rgb(208,78,37)" rx="2" ry="2" />
<text  x="1059.82" y="1775.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.02%)</title><rect x="46.3" y="1573" width="0.2" height="15.0" fill="rgb(210,205,14)" rx="2" ry="2" />
<text  x="49.30" y="1583.5" ></text>
</g>
<g >
<title>std::hash&lt;auth::resource&gt;::hash_data (7 samples, 0.13%)</title><rect x="827.4" y="1749" width="1.6" height="15.0" fill="rgb(205,198,8)" rx="2" ry="2" />
<text  x="830.45" y="1759.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::guard (1 samples, 0.02%)</title><rect x="545.2" y="1733" width="0.2" height="15.0" fill="rgb(232,23,30)" rx="2" ry="2" />
<text  x="548.21" y="1743.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (4 samples, 0.08%)</title><rect x="931.6" y="1797" width="0.9" height="15.0" fill="rgb(215,156,43)" rx="2" ry="2" />
<text  x="934.58" y="1807.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::storage_proxy::send_to_live_endpoints (3 samples, 0.06%)</title><rect x="729.7" y="1925" width="0.6" height="15.0" fill="rgb(234,37,52)" rx="2" ry="2" />
<text  x="732.66" y="1935.5" ></text>
</g>
<g >
<title>clustering_row::external_memory_usage (25 samples, 0.48%)</title><rect x="250.3" y="1589" width="5.6" height="15.0" fill="rgb(221,216,30)" rx="2" ry="2" />
<text  x="253.27" y="1599.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_M_range_initialize&lt;cql3::expr::expression const*&gt; (1 samples, 0.02%)</title><rect x="73.1" y="1669" width="0.2" height="15.0" fill="rgb(253,49,29)" rx="2" ry="2" />
<text  x="76.07" y="1679.5" ></text>
</g>
<g >
<title>cql3::expr::(anonymous namespace)::explode_conjunction (3 samples, 0.06%)</title><rect x="72.6" y="1717" width="0.7" height="15.0" fill="rgb(207,102,18)" rx="2" ry="2" />
<text  x="75.62" y="1727.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEENK4$_43clERKNSF_15binary_operatorEEUlRKNSF_12column_valueEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_17tuple_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlNSF_5tokenEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlSS_E_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_11conjunctionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_8constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_21unresolved_identifierEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_25column_mutation_attributeEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13function_callEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4castEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_15field_selectionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4nullEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13bind_variableEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_16untyped_constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_22collection_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_20usertype_constructorEE_EERS4_IJS14_SQ_ST_S11_S1C_S1G_S1K_S1O_S1S_S1W_S20_S24_S18_SX_S28_S2C_EEEJEEESt16integer_sequenceImJLm2EEEE14__visit_invokeES2H_S2J_ (1 samples, 0.02%)</title><rect x="876.9" y="1765" width="0.2" height="15.0" fill="rgb(254,20,6)" rx="2" ry="2" />
<text  x="879.91" y="1775.5" ></text>
</g>
<g >
<title>sstables::key::make_key&lt;partition_key_view&amp;&gt; (1 samples, 0.02%)</title><rect x="83.7" y="1813" width="0.3" height="15.0" fill="rgb(218,41,23)" rx="2" ry="2" />
<text  x="86.74" y="1823.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql_transport::messages::result_message::rows&gt;::~shared_ptr_count_for (25 samples, 0.48%)</title><rect x="96.0" y="1909" width="5.7" height="15.0" fill="rgb(234,119,24)" rx="2" ry="2" />
<text  x="98.99" y="1919.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;::operator (1 samples, 0.02%)</title><rect x="746.2" y="1765" width="0.3" height="15.0" fill="rgb(231,145,22)" rx="2" ry="2" />
<text  x="749.22" y="1775.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (1 samples, 0.02%)</title><rect x="54.5" y="1637" width="0.2" height="15.0" fill="rgb(244,214,6)" rx="2" ry="2" />
<text  x="57.47" y="1647.5" ></text>
</g>
<g >
<title>allocation_strategy::get_standard_migrator&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::leaf_node&gt; (1 samples, 0.02%)</title><rect x="108.0" y="1781" width="0.2" height="15.0" fill="rgb(216,96,45)" rx="2" ry="2" />
<text  x="111.01" y="1791.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::destroy&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="49.3" y="1621" width="0.2" height="15.0" fill="rgb(206,114,13)" rx="2" ry="2" />
<text  x="52.25" y="1631.5" ></text>
</g>
<g >
<title>sstables::noop_write_monitor::~noop_write_monitor (14 samples, 0.27%)</title><rect x="81.2" y="2037" width="3.2" height="15.0" fill="rgb(240,173,46)" rx="2" ry="2" />
<text  x="84.24" y="2047.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::set&lt;&gt; (1 samples, 0.02%)</title><rect x="94.6" y="1893" width="0.3" height="15.0" fill="rgb(210,162,10)" rx="2" ry="2" />
<text  x="97.63" y="1903.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::operator= (1 samples, 0.02%)</title><rect x="871.5" y="1909" width="0.2" height="15.0" fill="rgb(251,24,11)" rx="2" ry="2" />
<text  x="874.46" y="1919.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::CommonToken (1 samples, 0.02%)</title><rect x="20.2" y="1749" width="0.2" height="15.0" fill="rgb(241,17,42)" rx="2" ry="2" />
<text  x="23.21" y="1759.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;::basic_sstring (2 samples, 0.04%)</title><rect x="759.2" y="1781" width="0.4" height="15.0" fill="rgb(230,167,1)" rx="2" ry="2" />
<text  x="762.16" y="1791.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.08%)</title><rect x="937.9" y="1797" width="0.9" height="15.0" fill="rgb(210,67,49)" rx="2" ry="2" />
<text  x="940.94" y="1807.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;schema const&gt;::operator= (1 samples, 0.02%)</title><rect x="1129.4" y="1637" width="0.3" height="15.0" fill="rgb(226,104,3)" rx="2" ry="2" />
<text  x="1132.42" y="1647.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="70.3" y="1797" width="0.3" height="15.0" fill="rgb(238,29,42)" rx="2" ry="2" />
<text  x="73.35" y="1807.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.02%)</title><rect x="39.3" y="1653" width="0.2" height="15.0" fill="rgb(217,221,51)" rx="2" ry="2" />
<text  x="42.27" y="1663.5" ></text>
</g>
<g >
<title>mutation_fragment_stream_validator::operator (1 samples, 0.02%)</title><rect x="84.0" y="1797" width="0.2" height="15.0" fill="rgb(252,138,13)" rx="2" ry="2" />
<text  x="86.96" y="1807.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="73.3" y="1717" width="0.2" height="15.0" fill="rgb(246,33,32)" rx="2" ry="2" />
<text  x="76.30" y="1727.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;void&gt;::set_value&lt;&gt; (1 samples, 0.02%)</title><rect x="1027.1" y="1621" width="0.2" height="15.0" fill="rgb(238,90,3)" rx="2" ry="2" />
<text  x="1030.10" y="1631.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value, std::allocator&lt;cql3::raw_value&gt; &gt;::vector (9 samples, 0.17%)</title><rect x="867.6" y="1893" width="2.0" height="15.0" fill="rgb(243,224,28)" rx="2" ry="2" />
<text  x="870.60" y="1903.5" ></text>
</g>
<g >
<title>utils::phased_barrier::start (1 samples, 0.02%)</title><rect x="1031.4" y="1669" width="0.2" height="15.0" fill="rgb(212,213,5)" rx="2" ry="2" />
<text  x="1034.41" y="1679.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.02%)</title><rect x="39.9" y="1573" width="0.3" height="15.0" fill="rgb(215,140,44)" rx="2" ry="2" />
<text  x="42.95" y="1583.5" ></text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::find (1 samples, 0.02%)</title><rect x="663.2" y="1877" width="0.2" height="15.0" fill="rgb(229,63,19)" rx="2" ry="2" />
<text  x="666.19" y="1887.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::~_Deque_base (6 samples, 0.12%)</title><rect x="631.6" y="1813" width="1.4" height="15.0" fill="rgb(209,130,48)" rx="2" ry="2" />
<text  x="634.65" y="1823.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (5 samples, 0.10%)</title><rect x="711.5" y="1909" width="1.1" height="15.0" fill="rgb(233,19,46)" rx="2" ry="2" />
<text  x="714.51" y="1919.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::pop_back (1 samples, 0.02%)</title><rect x="21.3" y="1797" width="0.3" height="15.0" fill="rgb(207,135,34)" rx="2" ry="2" />
<text  x="24.34" y="1807.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (1 samples, 0.02%)</title><rect x="568.4" y="1845" width="0.2" height="15.0" fill="rgb(253,159,50)" rx="2" ry="2" />
<text  x="571.35" y="1855.5" ></text>
</g>
<g >
<title>ser::writer_of_std__optional__qr_cell&lt;bytes_ostream&gt;::write (3 samples, 0.06%)</title><rect x="367.1" y="1605" width="0.7" height="15.0" fill="rgb(213,177,31)" rx="2" ry="2" />
<text  x="370.11" y="1615.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::hasReachedFillbufferTarget (1 samples, 0.02%)</title><rect x="22.3" y="1733" width="0.2" height="15.0" fill="rgb(233,113,48)" rx="2" ry="2" />
<text  x="25.25" y="1743.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (3 samples, 0.06%)</title><rect x="37.2" y="1685" width="0.7" height="15.0" fill="rgb(206,74,34)" rx="2" ry="2" />
<text  x="40.23" y="1695.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;void&gt;, database*, seastar::lw_shared_ptr&lt;schema const&gt;, frozen_mutation const&amp;, tracing::trace_state_ptr, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, seastar::bool_class&lt;db::force_sync_tag&gt; &gt;::do_flush (34 samples, 0.65%)</title><rect x="1118.8" y="1909" width="7.7" height="15.0" fill="rgb(233,109,3)" rx="2" ry="2" />
<text  x="1121.76" y="1919.5" ></text>
</g>
<g >
<title>ser::deserialize_array_helper&lt;false, ser::column_view&gt;::doit&lt;seastar::simple_memory_input_stream, std::vector&lt;ser::column_view, std::allocator&lt;ser::column_view&gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="1124.2" y="1621" width="0.2" height="15.0" fill="rgb(207,195,27)" rx="2" ry="2" />
<text  x="1127.20" y="1631.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_M_reset (1 samples, 0.02%)</title><rect x="40.6" y="1685" width="0.3" height="15.0" fill="rgb(213,134,50)" rx="2" ry="2" />
<text  x="43.63" y="1695.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (21 samples, 0.40%)</title><rect x="744.0" y="1797" width="4.7" height="15.0" fill="rgb(242,1,32)" rx="2" ry="2" />
<text  x="746.96" y="1807.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (1 samples, 0.02%)</title><rect x="11.8" y="1877" width="0.2" height="15.0" fill="rgb(234,162,36)" rx="2" ry="2" />
<text  x="14.82" y="1887.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::needs_post_query_ordering (11 samples, 0.21%)</title><rect x="950.9" y="1829" width="2.5" height="15.0" fill="rgb(225,227,46)" rx="2" ry="2" />
<text  x="953.87" y="1839.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;seastar::shared_ptr&lt;cql3::column_identifier&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::column_identifier&gt; &gt; &gt;::_Vector_base (1 samples, 0.02%)</title><rect x="20.7" y="1829" width="0.2" height="15.0" fill="rgb(219,178,7)" rx="2" ry="2" />
<text  x="23.66" y="1839.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.02%)</title><rect x="512.3" y="1733" width="0.2" height="15.0" fill="rgb(234,212,51)" rx="2" ry="2" />
<text  x="515.31" y="1743.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="604.7" y="1813" width="0.2" height="15.0" fill="rgb(234,223,35)" rx="2" ry="2" />
<text  x="607.65" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.5" y="885" width="0.2" height="15.0" fill="rgb(239,228,4)" rx="2" ry="2" />
<text  x="13.45" y="895.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::untyped_constant&gt; (4 samples, 0.08%)</title><rect x="52.2" y="1701" width="0.9" height="15.0" fill="rgb(248,47,40)" rx="2" ry="2" />
<text  x="55.20" y="1711.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.02%)</title><rect x="46.8" y="1605" width="0.2" height="15.0" fill="rgb(229,113,54)" rx="2" ry="2" />
<text  x="49.75" y="1615.5" ></text>
</g>
<g >
<title>cql3::prepared_statements_cache::find (40 samples, 0.77%)</title><rect x="740.8" y="1861" width="9.1" height="15.0" fill="rgb(217,90,0)" rx="2" ry="2" />
<text  x="743.78" y="1871.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::execution_loop (1 samples, 0.02%)</title><rect x="85.3" y="1941" width="0.3" height="15.0" fill="rgb(244,49,45)" rx="2" ry="2" />
<text  x="88.32" y="1951.5" ></text>
</g>
<g >
<title>std::pair&lt;auth::role_or_anonymous, auth::resource&gt;::pair (6 samples, 0.12%)</title><rect x="808.2" y="1637" width="1.3" height="15.0" fill="rgb(238,157,22)" rx="2" ry="2" />
<text  x="811.16" y="1647.5" ></text>
</g>
<g >
<title>reader_permit::consume (2 samples, 0.04%)</title><rect x="256.6" y="1573" width="0.5" height="15.0" fill="rgb(227,126,21)" rx="2" ry="2" />
<text  x="259.62" y="1583.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::operation::set_value, std::default_delete&lt;cql3::operation::set_value&gt;, true, true&gt;::__uniq_ptr_impl (1 samples, 0.02%)</title><rect x="56.5" y="1701" width="0.2" height="15.0" fill="rgb(250,202,22)" rx="2" ry="2" />
<text  x="59.51" y="1711.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (2 samples, 0.04%)</title><rect x="44.0" y="1701" width="0.5" height="15.0" fill="rgb(220,193,50)" rx="2" ry="2" />
<text  x="47.03" y="1711.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (4 samples, 0.08%)</title><rect x="37.0" y="1781" width="0.9" height="15.0" fill="rgb(231,39,5)" rx="2" ry="2" />
<text  x="40.00" y="1791.5" ></text>
</g>
<g >
<title>dirty_memory_manager::account_potentially_cleaned_up_memory (1 samples, 0.02%)</title><rect x="81.2" y="1813" width="0.3" height="15.0" fill="rgb(230,101,11)" rx="2" ry="2" />
<text  x="84.24" y="1823.5" ></text>
</g>
<g >
<title>std::apply&lt;service::client_state::has_column_family_access (8 samples, 0.15%)</title><rect x="77.2" y="1877" width="1.8" height="15.0" fill="rgb(226,5,31)" rx="2" ry="2" />
<text  x="80.16" y="1887.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="315.2" y="1717" width="0.2" height="15.0" fill="rgb(243,170,42)" rx="2" ry="2" />
<text  x="318.15" y="1727.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::maybe_refresh_state (5 samples, 0.10%)</title><rect x="269.8" y="1589" width="1.1" height="15.0" fill="rgb(225,56,37)" rx="2" ry="2" />
<text  x="272.78" y="1599.5" ></text>
</g>
<g >
<title>antlr3::Lexer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_rec (1 samples, 0.02%)</title><rect x="28.4" y="1685" width="0.2" height="15.0" fill="rgb(239,186,4)" rx="2" ry="2" />
<text  x="31.38" y="1695.5" ></text>
</g>
<g >
<title>free (1 samples, 0.02%)</title><rect x="98.3" y="1845" width="0.2" height="15.0" fill="rgb(212,112,50)" rx="2" ry="2" />
<text  x="101.26" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base&lt;11ul, cql3::expr::untyped_constant&gt; (2 samples, 0.04%)</title><rect x="52.7" y="1637" width="0.4" height="15.0" fill="rgb(245,202,24)" rx="2" ry="2" />
<text  x="55.65" y="1647.5" ></text>
</g>
<g >
<title>query::digester::digester (1 samples, 0.02%)</title><rect x="611.9" y="1845" width="0.2" height="15.0" fill="rgb(218,91,52)" rx="2" ry="2" />
<text  x="614.91" y="1855.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::process_partition_key_restrictions (1 samples, 0.02%)</title><rect x="73.5" y="1813" width="0.3" height="15.0" fill="rgb(229,119,17)" rx="2" ry="2" />
<text  x="76.53" y="1823.5" ></text>
</g>
<g >
<title>logalloc::region_group::update (1 samples, 0.02%)</title><rect x="81.2" y="1797" width="0.3" height="15.0" fill="rgb(236,131,17)" rx="2" ry="2" />
<text  x="84.24" y="1807.5" ></text>
</g>
<g >
<title>bytes_ostream::view (1 samples, 0.02%)</title><rect x="609.2" y="1829" width="0.2" height="15.0" fill="rgb(248,109,52)" rx="2" ry="2" />
<text  x="612.19" y="1839.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::deallocate (1 samples, 0.02%)</title><rect x="579.7" y="1717" width="0.2" height="15.0" fill="rgb(251,201,28)" rx="2" ry="2" />
<text  x="582.69" y="1727.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::finally_body&lt;service::storage_proxy::do_query (14 samples, 0.27%)</title><rect x="690.9" y="1909" width="3.1" height="15.0" fill="rgb(222,54,30)" rx="2" ry="2" />
<text  x="693.87" y="1919.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.02%)</title><rect x="84.4" y="2005" width="0.2" height="15.0" fill="rgb(254,15,11)" rx="2" ry="2" />
<text  x="87.42" y="2015.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.02%)</title><rect x="54.2" y="1557" width="0.3" height="15.0" fill="rgb(253,162,22)" rx="2" ry="2" />
<text  x="57.24" y="1567.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (3 samples, 0.06%)</title><rect x="932.7" y="1813" width="0.7" height="15.0" fill="rgb(218,155,1)" rx="2" ry="2" />
<text  x="935.72" y="1823.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;gms::inet_address, gms::inet_address, std::allocator&lt;gms::inet_address&gt;, std::__detail::_Identity, std::equal_to&lt;gms::inet_address&gt;, std::hash&lt;gms::inet_address&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_find_before_node (1 samples, 0.02%)</title><rect x="17.7" y="1749" width="0.2" height="15.0" fill="rgb(240,13,20)" rx="2" ry="2" />
<text  x="20.71" y="1759.5" ></text>
</g>
<g >
<title>composite::serialize_value&lt;partition_key_view&amp;&gt; (1 samples, 0.02%)</title><rect x="83.7" y="1797" width="0.3" height="15.0" fill="rgb(220,35,24)" rx="2" ry="2" />
<text  x="86.74" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_next_bkt (3 samples, 0.06%)</title><rect x="1152.3" y="1877" width="0.7" height="15.0" fill="rgb(246,225,31)" rx="2" ry="2" />
<text  x="1155.34" y="1887.5" ></text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_token (1 samples, 0.02%)</title><rect x="661.6" y="1797" width="0.2" height="15.0" fill="rgb(225,1,16)" rx="2" ry="2" />
<text  x="664.60" y="1807.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::get_static_row (14 samples, 0.27%)</title><rect x="288.8" y="1669" width="3.2" height="15.0" fill="rgb(243,4,25)" rx="2" ry="2" />
<text  x="291.83" y="1679.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.02%)</title><rect x="59.0" y="1733" width="0.2" height="15.0" fill="rgb(247,82,25)" rx="2" ry="2" />
<text  x="62.01" y="1743.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_M_reset (1 samples, 0.02%)</title><rect x="931.4" y="1813" width="0.2" height="15.0" fill="rgb(212,135,22)" rx="2" ry="2" />
<text  x="934.36" y="1823.5" ></text>
</g>
<g >
<title>schema_registry_entry::get_schema (3 samples, 0.06%)</title><rect x="106.7" y="1797" width="0.6" height="15.0" fill="rgb(228,113,18)" rx="2" ry="2" />
<text  x="109.65" y="1807.5" ></text>
</g>
<g >
<title>locator::token_metadata_impl::first_token_index (20 samples, 0.38%)</title><rect x="1067.0" y="1685" width="4.6" height="15.0" fill="rgb(226,181,48)" rx="2" ry="2" />
<text  x="1070.03" y="1695.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, cql3::operation::raw_update*, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="49.0" y="1509" width="0.3" height="15.0" fill="rgb(240,50,23)" rx="2" ry="2" />
<text  x="52.02" y="1519.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.5" y="261" width="0.2" height="15.0" fill="rgb(207,218,38)" rx="2" ry="2" />
<text  x="13.45" y="271.5" ></text>
</g>
<g >
<title>seastar::aio_storage_context::reap_completions (2 samples, 0.04%)</title><rect x="1166.2" y="1909" width="0.4" height="15.0" fill="rgb(249,92,50)" rx="2" ry="2" />
<text  x="1169.18" y="1919.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="19.8" y="1797" width="0.2" height="15.0" fill="rgb(226,120,46)" rx="2" ry="2" />
<text  x="22.76" y="1807.5" ></text>
</g>
<g >
<title>std::vector&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, std::allocator&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="1123.3" y="1637" width="0.2" height="15.0" fill="rgb(222,105,39)" rx="2" ry="2" />
<text  x="1126.30" y="1647.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::~deque (1 samples, 0.02%)</title><rect x="20.0" y="1829" width="0.2" height="15.0" fill="rgb(237,208,0)" rx="2" ry="2" />
<text  x="22.98" y="1839.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_M_range_initialize&lt;cql3::expr::expression const*&gt; (1 samples, 0.02%)</title><rect x="72.8" y="1685" width="0.3" height="15.0" fill="rgb(219,198,22)" rx="2" ry="2" />
<text  x="75.85" y="1695.5" ></text>
</g>
<g >
<title>database::query (112 samples, 2.15%)</title><rect x="1006.2" y="1685" width="25.4" height="15.0" fill="rgb(216,63,9)" rx="2" ry="2" />
<text  x="1009.23" y="1695.5" >d..</text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (6 samples, 0.12%)</title><rect x="1087.2" y="1813" width="1.4" height="15.0" fill="rgb(212,194,31)" rx="2" ry="2" />
<text  x="1090.22" y="1823.5" ></text>
</g>
<g >
<title>std::__make_heap&lt;__gnu_cxx::__normal_iterator&lt;boost::iterator_range&lt;boost::intrusive::tree_iterator&lt;boost::intrusive::mhtraits&lt;range_tombstone_entry, boost::intrusive::set_member_hook&lt;boost::intrusive::link_mode&lt; (2 samples, 0.04%)</title><rect x="282.7" y="1637" width="0.5" height="15.0" fill="rgb(253,183,48)" rx="2" ry="2" />
<text  x="285.71" y="1647.5" ></text>
</g>
<g >
<title>seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;::swap (2 samples, 0.04%)</title><rect x="754.6" y="1813" width="0.5" height="15.0" fill="rgb(235,113,38)" rx="2" ry="2" />
<text  x="757.62" y="1823.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="265.9" y="1621" width="0.2" height="15.0" fill="rgb(247,118,49)" rx="2" ry="2" />
<text  x="268.92" y="1631.5" ></text>
</g>
<g >
<title>seastar::priority_class_data::register_stats (1 samples, 0.02%)</title><rect x="17.9" y="1237" width="0.3" height="15.0" fill="rgb(222,100,13)" rx="2" ry="2" />
<text  x="20.94" y="1247.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::_S_do_relocate (3 samples, 0.06%)</title><rect x="48.8" y="1669" width="0.7" height="15.0" fill="rgb(245,36,37)" rx="2" ry="2" />
<text  x="51.80" y="1679.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::digest_read_result&gt;::clear (1 samples, 0.02%)</title><rect x="703.8" y="1909" width="0.2" height="15.0" fill="rgb(214,60,20)" rx="2" ry="2" />
<text  x="706.80" y="1919.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.02%)</title><rect x="728.3" y="1909" width="0.2" height="15.0" fill="rgb(218,55,25)" rx="2" ry="2" />
<text  x="731.30" y="1919.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::consume_with&lt;row::apply_monotonically (1 samples, 0.02%)</title><rect x="16.6" y="1941" width="0.2" height="15.0" fill="rgb(214,7,54)" rx="2" ry="2" />
<text  x="19.58" y="1951.5" ></text>
</g>
<g >
<title>row_marker::compact_and_expire (2 samples, 0.04%)</title><rect x="415.2" y="1653" width="0.5" height="15.0" fill="rgb(253,143,18)" rx="2" ry="2" />
<text  x="418.21" y="1663.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;cql3::expr::expression const*, cql3::expr::expression*&gt; (1 samples, 0.02%)</title><rect x="73.1" y="1653" width="0.2" height="15.0" fill="rgb(238,137,27)" rx="2" ry="2" />
<text  x="76.07" y="1663.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;nonwrapping_interval&lt;dht::ring_position&gt; const, std::default_delete&lt;nonwrapping_interval&lt;dht::ring_position&gt; const&gt; &gt;::~unique_ptr (5 samples, 0.10%)</title><rect x="602.2" y="1845" width="1.1" height="15.0" fill="rgb(232,212,9)" rx="2" ry="2" />
<text  x="605.16" y="1855.5" ></text>
</g>
<g >
<title>std::construct_at&lt;mutation_fragment, schema const&amp;, reader_permit&amp;, partition_start&gt; (1 samples, 0.02%)</title><rect x="529.1" y="1669" width="0.2" height="15.0" fill="rgb(218,57,20)" rx="2" ry="2" />
<text  x="532.10" y="1679.5" ></text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::find (8 samples, 0.15%)</title><rect x="951.1" y="1797" width="1.8" height="15.0" fill="rgb(227,150,48)" rx="2" ry="2" />
<text  x="954.10" y="1807.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="321.1" y="1749" width="0.2" height="15.0" fill="rgb(245,112,32)" rx="2" ry="2" />
<text  x="324.05" y="1759.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="550.2" y="1669" width="0.2" height="15.0" fill="rgb(231,33,1)" rx="2" ry="2" />
<text  x="553.20" y="1679.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="595.3" y="1797" width="0.3" height="15.0" fill="rgb(235,54,24)" rx="2" ry="2" />
<text  x="598.35" y="1807.5" ></text>
</g>
<g >
<title>utils::timed_rate_moving_average_and_histogram::mark (1 samples, 0.02%)</title><rect x="1124.9" y="1685" width="0.2" height="15.0" fill="rgb(230,138,4)" rx="2" ry="2" />
<text  x="1127.89" y="1695.5" ></text>
</g>
<g >
<title>seastar::metrics::impl::impl::add_registration (1 samples, 0.02%)</title><rect x="17.5" y="1733" width="0.2" height="15.0" fill="rgb(250,211,42)" rx="2" ry="2" />
<text  x="20.49" y="1743.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="1118.1" y="1861" width="0.2" height="15.0" fill="rgb(213,105,53)" rx="2" ry="2" />
<text  x="1121.08" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.5" y="1957" width="0.2" height="15.0" fill="rgb(246,158,28)" rx="2" ry="2" />
<text  x="13.45" y="1967.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::get_timeout (2 samples, 0.04%)</title><rect x="879.6" y="1829" width="0.5" height="15.0" fill="rgb(221,97,37)" rx="2" ry="2" />
<text  x="882.63" y="1839.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::need_filtering (22 samples, 0.42%)</title><rect x="658.0" y="1893" width="5.0" height="15.0" fill="rgb(235,196,26)" rx="2" ry="2" />
<text  x="660.97" y="1903.5" ></text>
</g>
<g >
<title>locator::effective_replication_map::get_natural_endpoints_without_node_being_replaced (54 samples, 1.04%)</title><rect x="1066.8" y="1733" width="12.3" height="15.0" fill="rgb(210,62,5)" rx="2" ry="2" />
<text  x="1069.80" y="1743.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::operator (11 samples, 0.21%)</title><rect x="179.9" y="1685" width="2.5" height="15.0" fill="rgb(249,156,30)" rx="2" ry="2" />
<text  x="182.93" y="1695.5" ></text>
</g>
<g >
<title>utils::tuple_hash::hash_impl&lt;2ul, auth::resource_kind, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (4 samples, 0.08%)</title><rect x="828.1" y="1733" width="0.9" height="15.0" fill="rgb(235,212,32)" rx="2" ry="2" />
<text  x="831.13" y="1743.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="586.0" y="1717" width="0.3" height="15.0" fill="rgb(253,7,5)" rx="2" ry="2" />
<text  x="589.05" y="1727.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (2 samples, 0.04%)</title><rect x="39.0" y="1733" width="0.5" height="15.0" fill="rgb(230,23,8)" rx="2" ry="2" />
<text  x="42.04" y="1743.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (2 samples, 0.04%)</title><rect x="58.6" y="1557" width="0.4" height="15.0" fill="rgb(212,56,8)" rx="2" ry="2" />
<text  x="61.55" y="1567.5" ></text>
</g>
<g >
<title>cdc::generation_service::handle_cdc_generation (1 samples, 0.02%)</title><rect x="11.4" y="1829" width="0.2" height="15.0" fill="rgb(214,192,51)" rx="2" ry="2" />
<text  x="14.36" y="1839.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (3 samples, 0.06%)</title><rect x="694.7" y="1893" width="0.7" height="15.0" fill="rgb(215,65,4)" rx="2" ry="2" />
<text  x="697.72" y="1903.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_locally (2 samples, 0.04%)</title><rect x="1128.1" y="1621" width="0.4" height="15.0" fill="rgb(228,138,49)" rx="2" ry="2" />
<text  x="1131.06" y="1631.5" ></text>
</g>
<g >
<title>cql3::expr::expression::operator= (1 samples, 0.02%)</title><rect x="47.7" y="1733" width="0.2" height="15.0" fill="rgb(219,209,52)" rx="2" ry="2" />
<text  x="50.66" y="1743.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::set&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt; (5 samples, 0.10%)</title><rect x="708.1" y="1861" width="1.1" height="15.0" fill="rgb(245,127,39)" rx="2" ry="2" />
<text  x="711.11" y="1871.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.02%)</title><rect x="53.6" y="1525" width="0.2" height="15.0" fill="rgb(226,188,3)" rx="2" ry="2" />
<text  x="56.56" y="1535.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::result_memory_accounter (2 samples, 0.04%)</title><rect x="619.6" y="1845" width="0.5" height="15.0" fill="rgb(206,213,46)" rx="2" ry="2" />
<text  x="622.63" y="1855.5" ></text>
</g>
<g >
<title>seastar::promise&lt;void&gt;::promise (4 samples, 0.08%)</title><rect x="638.9" y="1909" width="0.9" height="15.0" fill="rgb(218,97,15)" rx="2" ry="2" />
<text  x="641.91" y="1919.5" ></text>
</g>
<g >
<title>cql3::attributes::raw::prepare (1 samples, 0.02%)</title><rect x="11.4" y="1669" width="0.2" height="15.0" fill="rgb(205,24,46)" rx="2" ry="2" />
<text  x="14.36" y="1679.5" ></text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;void&gt;, database*, seastar::lw_shared_ptr&lt;schema const&gt;, frozen_mutation const&amp;, tracing::trace_state_ptr, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, seastar::bool_class&lt;db::force_sync_tag&gt; &gt;::operator (1 samples, 0.02%)</title><rect x="1128.3" y="1573" width="0.2" height="15.0" fill="rgb(217,148,40)" rx="2" ry="2" />
<text  x="1131.29" y="1583.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.02%)</title><rect x="618.0" y="1861" width="0.3" height="15.0" fill="rgb(241,162,13)" rx="2" ry="2" />
<text  x="621.04" y="1871.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::take (4 samples, 0.08%)</title><rect x="321.3" y="1781" width="0.9" height="15.0" fill="rgb(248,39,43)" rx="2" ry="2" />
<text  x="324.28" y="1791.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="431.5" y="1701" width="0.3" height="15.0" fill="rgb(239,144,29)" rx="2" ry="2" />
<text  x="434.54" y="1711.5" ></text>
</g>
<g >
<title>cql3::operation::set_value::set_value (1 samples, 0.02%)</title><rect x="55.6" y="1717" width="0.2" height="15.0" fill="rgb(237,155,48)" rx="2" ry="2" />
<text  x="58.60" y="1727.5" ></text>
</g>
<g >
<title>seastar::future_state_base::any::operator= (1 samples, 0.02%)</title><rect x="845.4" y="1813" width="0.2" height="15.0" fill="rgb(238,117,37)" rx="2" ry="2" />
<text  x="848.37" y="1823.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_data_requests (1 samples, 0.02%)</title><rect x="986.9" y="1765" width="0.3" height="15.0" fill="rgb(217,214,10)" rx="2" ry="2" />
<text  x="989.94" y="1775.5" ></text>
</g>
<g >
<title>operator new (6 samples, 0.12%)</title><rect x="1028.9" y="1637" width="1.4" height="15.0" fill="rgb(251,84,5)" rx="2" ry="2" />
<text  x="1031.92" y="1647.5" ></text>
</g>
<g >
<title>_ZN7seastar12continuationINS_8internal22promise_base_with_typeIvEEZNS_6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE14discard_resultEvEUlDpOT_E_ZNSA_14then_impl_nrvoISE_NS4_IvEEEET0_OT_EUlOS3_RSE_ONS_12future_stateIS9_EEE_S9_E15run_and_disposeEv (40 samples, 0.77%)</title><rect x="92.6" y="1925" width="9.1" height="15.0" fill="rgb(242,179,40)" rx="2" ry="2" />
<text  x="95.58" y="1935.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_rehash (1 samples, 0.02%)</title><rect x="1149.8" y="1877" width="0.3" height="15.0" fill="rgb(252,162,48)" rx="2" ry="2" />
<text  x="1152.84" y="1887.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="1103.3" y="1829" width="0.3" height="15.0" fill="rgb(236,146,37)" rx="2" ry="2" />
<text  x="1106.33" y="1839.5" ></text>
</g>
<g >
<title>database::find_schema (9 samples, 0.17%)</title><rect x="833.6" y="1781" width="2.0" height="15.0" fill="rgb(217,217,10)" rx="2" ry="2" />
<text  x="836.57" y="1791.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;bytes_ostream::chunk, std::default_delete&lt;bytes_ostream::chunk&gt; &gt;::~unique_ptr (3 samples, 0.06%)</title><rect x="637.5" y="1861" width="0.7" height="15.0" fill="rgb(209,105,42)" rx="2" ry="2" />
<text  x="640.55" y="1871.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::local (1 samples, 0.02%)</title><rect x="1116.7" y="1829" width="0.2" height="15.0" fill="rgb(226,72,42)" rx="2" ry="2" />
<text  x="1119.72" y="1839.5" ></text>
</g>
<g >
<title>tracing::add_table_name (1 samples, 0.02%)</title><rect x="880.3" y="1861" width="0.2" height="15.0" fill="rgb(229,148,43)" rx="2" ry="2" />
<text  x="883.31" y="1871.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="525.5" y="1637" width="0.2" height="15.0" fill="rgb(235,30,49)" rx="2" ry="2" />
<text  x="528.47" y="1647.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (2 samples, 0.04%)</title><rect x="424.1" y="1621" width="0.4" height="15.0" fill="rgb(229,222,6)" rx="2" ry="2" />
<text  x="427.05" y="1631.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::process_results (60 samples, 1.15%)</title><rect x="655.9" y="1909" width="13.6" height="15.0" fill="rgb(216,74,20)" rx="2" ry="2" />
<text  x="658.93" y="1919.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.02%)</title><rect x="11.6" y="1973" width="0.2" height="15.0" fill="rgb(236,119,3)" rx="2" ry="2" />
<text  x="14.59" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.5" y="1893" width="0.2" height="15.0" fill="rgb(232,198,9)" rx="2" ry="2" />
<text  x="13.45" y="1903.5" ></text>
</g>
<g >
<title>mutation::data::data (1 samples, 0.02%)</title><rect x="106.9" y="1701" width="0.2" height="15.0" fill="rgb(246,118,39)" rx="2" ry="2" />
<text  x="109.88" y="1711.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::find (1 samples, 0.02%)</title><rect x="953.1" y="1797" width="0.3" height="15.0" fill="rgb(235,87,36)" rx="2" ry="2" />
<text  x="956.14" y="1807.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.04%)</title><rect x="521.6" y="1605" width="0.5" height="15.0" fill="rgb(206,130,48)" rx="2" ry="2" />
<text  x="524.61" y="1615.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (1 samples, 0.02%)</title><rect x="675.4" y="1893" width="0.3" height="15.0" fill="rgb(234,189,45)" rx="2" ry="2" />
<text  x="678.44" y="1903.5" ></text>
</g>
<g >
<title>deletable_row::apply_monotonically (1 samples, 0.02%)</title><rect x="16.6" y="1973" width="0.2" height="15.0" fill="rgb(228,144,37)" rx="2" ry="2" />
<text  x="19.58" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::~_Variant_storage (1 samples, 0.02%)</title><rect x="74.0" y="1765" width="0.2" height="15.0" fill="rgb(208,190,7)" rx="2" ry="2" />
<text  x="76.98" y="1775.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (1 samples, 0.02%)</title><rect x="821.1" y="1637" width="0.2" height="15.0" fill="rgb(234,14,11)" rx="2" ry="2" />
<text  x="824.09" y="1647.5" ></text>
</g>
<g >
<title>ser::idl::serializers::internal::vector_serializer&lt;std::vector&lt;ser::column_view, std::allocator&lt;ser::column_view&gt; &gt; &gt;::read&lt;seastar::simple_memory_input_stream&gt; (1 samples, 0.02%)</title><rect x="1124.2" y="1637" width="0.2" height="15.0" fill="rgb(242,36,7)" rx="2" ry="2" />
<text  x="1127.20" y="1647.5" ></text>
</g>
<g >
<title>data_consumer::continuous_data_consumer&lt;sstables::mx::data_consume_rows_context_m&gt;::consume_input (1 samples, 0.02%)</title><rect x="17.9" y="1621" width="0.3" height="15.0" fill="rgb(251,219,8)" rx="2" ry="2" />
<text  x="20.94" y="1631.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="616.4" y="1813" width="0.3" height="15.0" fill="rgb(218,147,52)" rx="2" ry="2" />
<text  x="619.45" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::~_Variant_storage (1 samples, 0.02%)</title><rect x="655.0" y="1813" width="0.2" height="15.0" fill="rgb(211,92,33)" rx="2" ry="2" />
<text  x="658.02" y="1823.5" ></text>
</g>
<g >
<title>service::client_state::has_access (8 samples, 0.15%)</title><rect x="77.2" y="1861" width="1.8" height="15.0" fill="rgb(221,154,2)" rx="2" ry="2" />
<text  x="80.16" y="1871.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (1 samples, 0.02%)</title><rect x="1188.9" y="2053" width="0.2" height="15.0" fill="rgb(234,127,47)" rx="2" ry="2" />
<text  x="1191.87" y="2063.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_Optional_payload_base (3 samples, 0.06%)</title><rect x="940.7" y="1765" width="0.6" height="15.0" fill="rgb(215,110,42)" rx="2" ry="2" />
<text  x="943.66" y="1775.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_S_max_size (1 samples, 0.02%)</title><rect x="24.1" y="1653" width="0.2" height="15.0" fill="rgb(228,35,50)" rx="2" ry="2" />
<text  x="27.07" y="1663.5" ></text>
</g>
<g >
<title>query::result_set_builder::deserialize (1 samples, 0.02%)</title><rect x="109.1" y="1733" width="0.3" height="15.0" fill="rgb(246,120,52)" rx="2" ry="2" />
<text  x="112.15" y="1743.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;service::storage_proxy&gt;::sharded_parallel_for_each (1 samples, 0.02%)</title><rect x="17.5" y="1957" width="0.2" height="15.0" fill="rgb(254,145,21)" rx="2" ry="2" />
<text  x="20.49" y="1967.5" ></text>
</g>
<g >
<title>std::__optional_hash_call_base&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, true&gt;::operator (2 samples, 0.04%)</title><rect x="815.6" y="1525" width="0.5" height="15.0" fill="rgb(248,225,31)" rx="2" ry="2" />
<text  x="818.65" y="1535.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (9 samples, 0.17%)</title><rect x="1002.4" y="1669" width="2.0" height="15.0" fill="rgb(216,65,51)" rx="2" ry="2" />
<text  x="1005.37" y="1679.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="825.0" y="1733" width="0.2" height="15.0" fill="rgb(252,132,18)" rx="2" ry="2" />
<text  x="827.95" y="1743.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::statements::create_type_statement, std::default_delete&lt;cql3::statements::create_type_statement&gt;, true, true&gt;::__uniq_ptr_data (2 samples, 0.04%)</title><rect x="64.0" y="1781" width="0.5" height="15.0" fill="rgb(235,94,49)" rx="2" ry="2" />
<text  x="67.00" y="1791.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, auth::role_or_anonymous&amp;&amp;, auth::get_permissions (1 samples, 0.02%)</title><rect x="823.4" y="1717" width="0.2" height="15.0" fill="rgb(214,211,3)" rx="2" ry="2" />
<text  x="826.36" y="1727.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;auth::role_or_anonymous&gt;, seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (3 samples, 0.06%)</title><rect x="823.6" y="1717" width="0.7" height="15.0" fill="rgb(233,5,38)" rx="2" ry="2" />
<text  x="826.59" y="1727.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.04%)</title><rect x="533.9" y="1701" width="0.4" height="15.0" fill="rgb(217,41,21)" rx="2" ry="2" />
<text  x="536.86" y="1711.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.02%)</title><rect x="42.7" y="1621" width="0.2" height="15.0" fill="rgb(212,0,44)" rx="2" ry="2" />
<text  x="45.67" y="1631.5" ></text>
</g>
<g >
<title>seastar::deferred_action&lt;table::query (2 samples, 0.04%)</title><rect x="618.7" y="1861" width="0.5" height="15.0" fill="rgb(235,64,16)" rx="2" ry="2" />
<text  x="621.72" y="1871.5" ></text>
</g>
<g >
<title>flat_mutation_reader::close (126 samples, 2.42%)</title><rect x="570.2" y="1829" width="28.6" height="15.0" fill="rgb(237,51,33)" rx="2" ry="2" />
<text  x="573.17" y="1839.5" >fl..</text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.02%)</title><rect x="42.4" y="1589" width="0.3" height="15.0" fill="rgb(241,145,18)" rx="2" ry="2" />
<text  x="45.44" y="1599.5" ></text>
</g>
<g >
<title>operator delete (6 samples, 0.12%)</title><rect x="427.0" y="1669" width="1.4" height="15.0" fill="rgb(221,157,14)" rx="2" ry="2" />
<text  x="430.00" y="1679.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="24.5" y="1717" width="0.2" height="15.0" fill="rgb(253,143,7)" rx="2" ry="2" />
<text  x="27.52" y="1727.5" ></text>
</g>
<g >
<title>std::hash&lt;auth::resource&gt;::hash_data (5 samples, 0.10%)</title><rect x="815.4" y="1557" width="1.2" height="15.0" fill="rgb(231,183,10)" rx="2" ry="2" />
<text  x="818.42" y="1567.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.5" y="1685" width="0.2" height="15.0" fill="rgb(230,148,20)" rx="2" ry="2" />
<text  x="13.45" y="1695.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (2 samples, 0.04%)</title><rect x="38.4" y="1733" width="0.4" height="15.0" fill="rgb(217,157,34)" rx="2" ry="2" />
<text  x="41.36" y="1743.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="1131.7" y="1541" width="0.2" height="15.0" fill="rgb(224,47,35)" rx="2" ry="2" />
<text  x="1134.69" y="1551.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (1 samples, 0.02%)</title><rect x="667.0" y="1877" width="0.3" height="15.0" fill="rgb(213,121,31)" rx="2" ry="2" />
<text  x="670.04" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.5" y="805" width="0.2" height="15.0" fill="rgb(235,151,28)" rx="2" ry="2" />
<text  x="13.45" y="815.5" ></text>
</g>
<g >
<title>std::ios_base::_M_init (2 samples, 0.04%)</title><rect x="1189.1" y="2053" width="0.4" height="15.0" fill="rgb(209,1,38)" rx="2" ry="2" />
<text  x="1192.09" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::binary_operator const*&gt;  (1 samples, 0.02%)</title><rect x="946.3" y="1749" width="0.3" height="15.0" fill="rgb(232,66,32)" rx="2" ry="2" />
<text  x="949.33" y="1759.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_S_construct&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (5 samples, 0.10%)</title><rect x="22.5" y="1669" width="1.1" height="15.0" fill="rgb(206,49,35)" rx="2" ry="2" />
<text  x="25.48" y="1679.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.02%)</title><rect x="623.3" y="1861" width="0.2" height="15.0" fill="rgb(247,185,31)" rx="2" ry="2" />
<text  x="626.26" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct_single&lt;std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, cql3::expr::binary_operator const&amp;&gt; (1 samples, 0.02%)</title><rect x="73.1" y="1605" width="0.2" height="15.0" fill="rgb(241,111,37)" rx="2" ry="2" />
<text  x="76.07" y="1615.5" ></text>
</g>
<g >
<title>seastar::metrics::impl::unregister_metric (1 samples, 0.02%)</title><rect x="12.3" y="1941" width="0.2" height="15.0" fill="rgb(218,171,54)" rx="2" ry="2" />
<text  x="15.27" y="1951.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (1 samples, 0.02%)</title><rect x="108.5" y="1733" width="0.2" height="15.0" fill="rgb(216,31,25)" rx="2" ry="2" />
<text  x="111.47" y="1743.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (1 samples, 0.02%)</title><rect x="60.4" y="1685" width="0.2" height="15.0" fill="rgb(236,145,3)" rx="2" ry="2" />
<text  x="63.37" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.5" y="1093" width="0.2" height="15.0" fill="rgb(227,94,19)" rx="2" ry="2" />
<text  x="13.45" y="1103.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (2 samples, 0.04%)</title><rect x="641.2" y="1909" width="0.4" height="15.0" fill="rgb(240,166,47)" rx="2" ry="2" />
<text  x="644.18" y="1919.5" ></text>
</g>
<g >
<title>cdc::generation_service::scan_cdc_generations (1 samples, 0.02%)</title><rect x="11.4" y="1845" width="0.2" height="15.0" fill="rgb(211,165,41)" rx="2" ry="2" />
<text  x="14.36" y="1855.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;service::digest_read_resolver&gt;::~shared_ptr_count_for (7 samples, 0.13%)</title><rect x="712.6" y="1909" width="1.6" height="15.0" fill="rgb(221,136,39)" rx="2" ry="2" />
<text  x="715.65" y="1919.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::operation::set_value, cql3::expr::expression&amp;&gt; (6 samples, 0.12%)</title><rect x="55.4" y="1733" width="1.3" height="15.0" fill="rgb(214,60,5)" rx="2" ry="2" />
<text  x="58.38" y="1743.5" ></text>
</g>
<g >
<title>rows_entry::tri_compare::operator (1 samples, 0.02%)</title><rect x="108.5" y="1701" width="0.2" height="15.0" fill="rgb(252,189,32)" rx="2" ry="2" />
<text  x="111.47" y="1711.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::done (1 samples, 0.02%)</title><rect x="609.4" y="1845" width="0.2" height="15.0" fill="rgb(248,54,48)" rx="2" ry="2" />
<text  x="612.42" y="1855.5" ></text>
</g>
<g >
<title>ser::safe_serialize_as_uint32&lt;bytes_ostream&gt; (5 samples, 0.10%)</title><rect x="387.5" y="1573" width="1.2" height="15.0" fill="rgb(225,28,6)" rx="2" ry="2" />
<text  x="390.53" y="1583.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::get_timeout (1 samples, 0.02%)</title><rect x="1090.4" y="1845" width="0.2" height="15.0" fill="rgb(205,0,53)" rx="2" ry="2" />
<text  x="1093.40" y="1855.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (13 samples, 0.25%)</title><rect x="675.7" y="1893" width="2.9" height="15.0" fill="rgb(232,105,18)" rx="2" ry="2" />
<text  x="678.66" y="1903.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_Optional_payload_base (1 samples, 0.02%)</title><rect x="1064.3" y="1733" width="0.2" height="15.0" fill="rgb(228,81,47)" rx="2" ry="2" />
<text  x="1067.31" y="1743.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::drop_keyspace_statement, std::default_delete&lt;cql3::statements::drop_keyspace_statement&gt; &gt;::__uniq_ptr_impl (1 samples, 0.02%)</title><rect x="64.7" y="1765" width="0.2" height="15.0" fill="rgb(241,7,16)" rx="2" ry="2" />
<text  x="67.68" y="1775.5" ></text>
</g>
<g >
<title>seastar::reactor::add_timer (5 samples, 0.10%)</title><rect x="985.8" y="1701" width="1.1" height="15.0" fill="rgb(235,105,6)" rx="2" ry="2" />
<text  x="988.81" y="1711.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (2 samples, 0.04%)</title><rect x="837.0" y="1717" width="0.4" height="15.0" fill="rgb(251,127,0)" rx="2" ry="2" />
<text  x="839.98" y="1727.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.02%)</title><rect x="57.2" y="1669" width="0.2" height="15.0" fill="rgb(225,173,27)" rx="2" ry="2" />
<text  x="60.19" y="1679.5" ></text>
</g>
<g >
<title>rows_entry::memory_usage (1 samples, 0.02%)</title><rect x="16.8" y="1957" width="0.2" height="15.0" fill="rgb(228,150,32)" rx="2" ry="2" />
<text  x="19.81" y="1967.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="428.6" y="1669" width="0.2" height="15.0" fill="rgb(215,73,10)" rx="2" ry="2" />
<text  x="431.59" y="1679.5" ></text>
</g>
<g >
<title>auth::permissions_cache::get (5 samples, 0.10%)</title><rect x="77.8" y="1765" width="1.2" height="15.0" fill="rgb(245,195,24)" rx="2" ry="2" />
<text  x="80.84" y="1775.5" ></text>
</g>
<g >
<title>mutation_fragment::destroy_data (1 samples, 0.02%)</title><rect x="430.6" y="1701" width="0.3" height="15.0" fill="rgb(219,140,50)" rx="2" ry="2" />
<text  x="433.63" y="1711.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="994.7" y="1717" width="0.2" height="15.0" fill="rgb(240,10,17)" rx="2" ry="2" />
<text  x="997.66" y="1727.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, std::hash&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (1 samples, 0.02%)</title><rect x="11.6" y="1765" width="0.2" height="15.0" fill="rgb(249,150,1)" rx="2" ry="2" />
<text  x="14.59" y="1775.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (1 samples, 0.02%)</title><rect x="106.2" y="1845" width="0.2" height="15.0" fill="rgb(214,228,19)" rx="2" ry="2" />
<text  x="109.20" y="1855.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;position_in_partition&gt;::_M_reset (1 samples, 0.02%)</title><rect x="275.4" y="1669" width="0.3" height="15.0" fill="rgb(219,142,12)" rx="2" ry="2" />
<text  x="278.45" y="1679.5" ></text>
</g>
<g >
<title>sched_setaffinity@@GLIBC_2.3.4 (44 samples, 0.85%)</title><rect x="1178.7" y="2053" width="9.9" height="15.0" fill="rgb(227,148,52)" rx="2" ry="2" />
<text  x="1181.66" y="2063.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.02%)</title><rect x="57.2" y="1605" width="0.2" height="15.0" fill="rgb(224,181,24)" rx="2" ry="2" />
<text  x="60.19" y="1615.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, cql3::statements::drop_keyspace_statement*, std::default_delete&lt;cql3::statements::drop_keyspace_statement&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="64.7" y="1733" width="0.2" height="15.0" fill="rgb(250,33,29)" rx="2" ry="2" />
<text  x="67.68" y="1743.5" ></text>
</g>
<g >
<title>std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;, seastar::future&lt;void&gt; &gt; &gt;::operator (8 samples, 0.15%)</title><rect x="831.3" y="1797" width="1.8" height="15.0" fill="rgb(209,25,17)" rx="2" ry="2" />
<text  x="834.30" y="1807.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (2 samples, 0.04%)</title><rect x="535.7" y="1749" width="0.4" height="15.0" fill="rgb(217,58,48)" rx="2" ry="2" />
<text  x="538.68" y="1759.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;dht::token, std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt;, std::allocator&lt;std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;dht::token&gt;, std::hash&lt;dht::token&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (29 samples, 0.56%)</title><rect x="1071.8" y="1701" width="6.6" height="15.0" fill="rgb(239,46,40)" rx="2" ry="2" />
<text  x="1074.80" y="1711.5" ></text>
</g>
<g >
<title>make_partition_snapshot_flat_reader_from_snp_schema (106 samples, 2.04%)</title><rect x="508.2" y="1749" width="24.1" height="15.0" fill="rgb(223,81,9)" rx="2" ry="2" />
<text  x="511.23" y="1759.5" >m..</text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::move_it (5 samples, 0.10%)</title><rect x="694.3" y="1909" width="1.1" height="15.0" fill="rgb(214,108,21)" rx="2" ry="2" />
<text  x="697.27" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (1 samples, 0.02%)</title><rect x="11.4" y="1509" width="0.2" height="15.0" fill="rgb(240,207,3)" rx="2" ry="2" />
<text  x="14.36" y="1519.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (3 samples, 0.06%)</title><rect x="37.2" y="1749" width="0.7" height="15.0" fill="rgb(224,158,26)" rx="2" ry="2" />
<text  x="40.23" y="1759.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::~partition_snapshot_flat_reader (28 samples, 0.54%)</title><rect x="579.9" y="1733" width="6.4" height="15.0" fill="rgb(235,113,16)" rx="2" ry="2" />
<text  x="582.92" y="1743.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (2 samples, 0.04%)</title><rect x="994.2" y="1717" width="0.5" height="15.0" fill="rgb(238,113,17)" rx="2" ry="2" />
<text  x="997.20" y="1727.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;std::_List_iterator&lt;flat_mutation_reader&gt;, mutation_reader_merger::close (2 samples, 0.04%)</title><rect x="588.3" y="1797" width="0.5" height="15.0" fill="rgb(230,34,54)" rx="2" ry="2" />
<text  x="591.32" y="1807.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::~statement_restrictions (4 samples, 0.08%)</title><rect x="654.1" y="1877" width="0.9" height="15.0" fill="rgb(244,210,4)" rx="2" ry="2" />
<text  x="657.11" y="1887.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.04%)</title><rect x="819.1" y="1669" width="0.4" height="15.0" fill="rgb(233,206,14)" rx="2" ry="2" />
<text  x="822.05" y="1679.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="701.1" y="1845" width="0.2" height="15.0" fill="rgb(229,117,7)" rx="2" ry="2" />
<text  x="704.07" y="1855.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (2 samples, 0.04%)</title><rect x="525.0" y="1621" width="0.5" height="15.0" fill="rgb(250,134,31)" rx="2" ry="2" />
<text  x="528.02" y="1631.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::unique_ptr&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, std::default_delete&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;, std::allocator&lt;std::unique_ptr&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, std::default_delete&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt; &gt; &gt;::_M_get_Tp_allocator (1 samples, 0.02%)</title><rect x="20.9" y="1829" width="0.2" height="15.0" fill="rgb(225,63,43)" rx="2" ry="2" />
<text  x="23.89" y="1839.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (1 samples, 0.02%)</title><rect x="822.0" y="1685" width="0.2" height="15.0" fill="rgb(215,82,44)" rx="2" ry="2" />
<text  x="825.00" y="1695.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_map&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::at&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt; &gt; (1 samples, 0.02%)</title><rect x="1050.0" y="1765" width="0.2" height="15.0" fill="rgb(210,92,48)" rx="2" ry="2" />
<text  x="1053.02" y="1775.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_istream (1 samples, 0.02%)</title><rect x="38.8" y="1733" width="0.2" height="15.0" fill="rgb(218,55,53)" rx="2" ry="2" />
<text  x="41.81" y="1743.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (4 samples, 0.08%)</title><rect x="1139.0" y="1909" width="0.9" height="15.0" fill="rgb(244,72,51)" rx="2" ry="2" />
<text  x="1141.95" y="1919.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;flat_mutation_reader::peek (9 samples, 0.17%)</title><rect x="322.9" y="1813" width="2.0" height="15.0" fill="rgb(240,185,5)" rx="2" ry="2" />
<text  x="325.87" y="1823.5" ></text>
</g>
<g >
<title>__tls_init (2 samples, 0.04%)</title><rect x="479.9" y="1749" width="0.4" height="15.0" fill="rgb(237,176,26)" rx="2" ry="2" />
<text  x="482.87" y="1759.5" ></text>
</g>
<g >
<title>table::as_mutation_source (2 samples, 0.04%)</title><rect x="638.5" y="1861" width="0.4" height="15.0" fill="rgb(248,146,7)" rx="2" ry="2" />
<text  x="641.46" y="1871.5" ></text>
</g>
<g >
<title>__tls_init (1 samples, 0.02%)</title><rect x="518.7" y="1669" width="0.2" height="15.0" fill="rgb(248,9,2)" rx="2" ry="2" />
<text  x="521.66" y="1679.5" ></text>
</g>
<g >
<title>compound_type&lt; (10 samples, 0.19%)</title><rect x="560.9" y="1781" width="2.2" height="15.0" fill="rgb(216,87,49)" rx="2" ry="2" />
<text  x="563.86" y="1791.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_rehash_aux (7 samples, 0.13%)</title><rect x="1148.3" y="1845" width="1.5" height="15.0" fill="rgb(220,86,29)" rx="2" ry="2" />
<text  x="1151.25" y="1855.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::vector (1 samples, 0.02%)</title><rect x="47.4" y="1717" width="0.3" height="15.0" fill="rgb(228,86,29)" rx="2" ry="2" />
<text  x="50.44" y="1727.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (1 samples, 0.02%)</title><rect x="817.7" y="1605" width="0.2" height="15.0" fill="rgb(226,81,21)" rx="2" ry="2" />
<text  x="820.69" y="1615.5" ></text>
</g>
<g >
<title>auth::resource::parent (6 samples, 0.12%)</title><rect x="795.9" y="1749" width="1.4" height="15.0" fill="rgb(233,119,22)" rx="2" ry="2" />
<text  x="798.91" y="1759.5" ></text>
</g>
<g >
<title>seastar::memory::allocate_aligned (2 samples, 0.04%)</title><rect x="245.5" y="1509" width="0.5" height="15.0" fill="rgb(243,121,1)" rx="2" ry="2" />
<text  x="248.50" y="1519.5" ></text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_token (2 samples, 0.04%)</title><rect x="893.7" y="1829" width="0.4" height="15.0" fill="rgb(247,185,38)" rx="2" ry="2" />
<text  x="896.70" y="1839.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::get_promise (1 samples, 0.02%)</title><rect x="847.0" y="1813" width="0.2" height="15.0" fill="rgb(246,83,1)" rx="2" ry="2" />
<text  x="849.96" y="1823.5" ></text>
</g>
<g >
<title>std::default_delete&lt;cql3::expr::expression::impl&gt;::operator (1 samples, 0.02%)</title><rect x="49.9" y="1653" width="0.3" height="15.0" fill="rgb(226,34,53)" rx="2" ry="2" />
<text  x="52.93" y="1663.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="123.2" y="1877" width="0.2" height="15.0" fill="rgb(230,212,17)" rx="2" ry="2" />
<text  x="126.21" y="1887.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (207 samples, 3.98%)</title><rect x="19.8" y="1861" width="46.9" height="15.0" fill="rgb(220,20,21)" rx="2" ry="2" />
<text  x="22.76" y="1871.5" >cql3..</text>
</g>
<g >
<title>intrusive_b::node&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (1 samples, 0.02%)</title><rect x="10.7" y="1861" width="0.2" height="15.0" fill="rgb(244,33,6)" rx="2" ry="2" />
<text  x="13.68" y="1871.5" ></text>
</g>
<g >
<title>visit&lt;(anonymous namespace)::native_value_clone_visitor&gt; (1 samples, 0.02%)</title><rect x="107.1" y="1669" width="0.2" height="15.0" fill="rgb(237,209,21)" rx="2" ry="2" />
<text  x="110.10" y="1679.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (2 samples, 0.04%)</title><rect x="39.7" y="1733" width="0.5" height="15.0" fill="rgb(251,34,8)" rx="2" ry="2" />
<text  x="42.72" y="1743.5" ></text>
</g>
<g >
<title>seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::expand (2 samples, 0.04%)</title><rect x="528.6" y="1669" width="0.5" height="15.0" fill="rgb(244,214,17)" rx="2" ry="2" />
<text  x="531.65" y="1679.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::operator= (6 samples, 0.12%)</title><rect x="844.2" y="1845" width="1.4" height="15.0" fill="rgb(210,93,9)" rx="2" ry="2" />
<text  x="847.24" y="1855.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (6 samples, 0.12%)</title><rect x="405.0" y="1573" width="1.4" height="15.0" fill="rgb(223,176,52)" rx="2" ry="2" />
<text  x="408.00" y="1583.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::do_execute (1,022 samples, 19.65%)</title><rect x="886.0" y="1861" width="231.9" height="15.0" fill="rgb(246,137,45)" rx="2" ry="2" />
<text  x="888.98" y="1871.5" >cql3::statements::select_state..</text>
</g>
<g >
<title>std::_Optional_base&lt;mutation_querier, false, false&gt;::_Optional_base (1 samples, 0.02%)</title><rect x="435.4" y="1765" width="0.2" height="15.0" fill="rgb(248,205,18)" rx="2" ry="2" />
<text  x="438.40" y="1775.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit_slot&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::memory_usage&lt;row::external_memory_usage (1 samples, 0.02%)</title><rect x="255.7" y="1557" width="0.2" height="15.0" fill="rgb(245,172,22)" rx="2" ry="2" />
<text  x="258.71" y="1567.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, enum_set&lt;super_enum&lt;auth::permission,  (10 samples, 0.19%)</title><rect x="805.4" y="1605" width="2.3" height="15.0" fill="rgb(249,3,25)" rx="2" ry="2" />
<text  x="808.44" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.5" y="677" width="0.2" height="15.0" fill="rgb(240,140,32)" rx="2" ry="2" />
<text  x="13.45" y="687.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::storage_proxy&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="1127.2" y="1685" width="0.2" height="15.0" fill="rgb(222,213,8)" rx="2" ry="2" />
<text  x="1130.15" y="1695.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (3 samples, 0.06%)</title><rect x="671.1" y="1893" width="0.7" height="15.0" fill="rgb(224,141,29)" rx="2" ry="2" />
<text  x="674.13" y="1903.5" ></text>
</g>
<g >
<title>std::uniform_int_distribution&lt;unsigned long&gt;::operator (1 samples, 0.02%)</title><rect x="867.4" y="1893" width="0.2" height="15.0" fill="rgb(243,130,47)" rx="2" ry="2" />
<text  x="870.38" y="1903.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::term (25 samples, 0.48%)</title><rect x="49.5" y="1733" width="5.6" height="15.0" fill="rgb(254,200,21)" rx="2" ry="2" />
<text  x="52.48" y="1743.5" ></text>
</g>
<g >
<title>std::make_unique&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;, seastar::lw_shared_ptr&lt;schema const&gt;, reader_permit, dht::decorated_key, partition_snapshot_ptr&amp;, query::clustering_key_filter_ranges, bool&amp;, logalloc::region&amp;, logalloc::allocating_section&amp;, boost::any, memtable&amp;&gt; (3 samples, 0.06%)</title><rect x="536.4" y="1749" width="0.6" height="15.0" fill="rgb(229,116,15)" rx="2" ry="2" />
<text  x="539.36" y="1759.5" ></text>
</g>
<g >
<title>mutation_querier::consume_end_of_stream (3 samples, 0.06%)</title><rect x="341.9" y="1637" width="0.7" height="15.0" fill="rgb(216,226,2)" rx="2" ry="2" />
<text  x="344.92" y="1647.5" ></text>
</g>
<g >
<title>frozen_mutation::frozen_mutation (10 samples, 0.19%)</title><rect x="1129.7" y="1605" width="2.2" height="15.0" fill="rgb(244,169,41)" rx="2" ry="2" />
<text  x="1132.65" y="1615.5" ></text>
</g>
<g >
<title>cql3::restrictions::(anonymous namespace)::range_from_bytes (1 samples, 0.02%)</title><rect x="891.4" y="1845" width="0.3" height="15.0" fill="rgb(253,46,17)" rx="2" ry="2" />
<text  x="894.43" y="1855.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (4 samples, 0.08%)</title><rect x="954.7" y="1797" width="0.9" height="15.0" fill="rgb(241,139,39)" rx="2" ry="2" />
<text  x="957.73" y="1807.5" ></text>
</g>
<g >
<title>mutation_fragment::consume&lt;flat_mutation_reader::impl::consumer_adapter&lt;sstables::sstable_writer&gt; &gt; (4 samples, 0.08%)</title><rect x="83.3" y="1861" width="0.9" height="15.0" fill="rgb(254,189,1)" rx="2" ry="2" />
<text  x="86.28" y="1871.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (5 samples, 0.10%)</title><rect x="666.1" y="1893" width="1.2" height="15.0" fill="rgb(213,131,13)" rx="2" ry="2" />
<text  x="669.14" y="1903.5" ></text>
</g>
<g >
<title>tests::random::get_int&lt;unsigned long&gt; (5 samples, 0.10%)</title><rect x="869.9" y="1893" width="1.1" height="15.0" fill="rgb(205,22,53)" rx="2" ry="2" />
<text  x="872.87" y="1903.5" ></text>
</g>
<g >
<title>intrusive_array&lt;memtable_entry&gt;::intrusive_array&lt;seastar::lw_shared_ptr&lt;schema const&gt;&amp;, dht::decorated_key, mutation_partition&gt; (1 samples, 0.02%)</title><rect x="1119.7" y="1589" width="0.2" height="15.0" fill="rgb(207,111,39)" rx="2" ry="2" />
<text  x="1122.67" y="1599.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::do_refresh_state (1 samples, 0.02%)</title><rect x="275.9" y="1669" width="0.2" height="15.0" fill="rgb(222,211,23)" rx="2" ry="2" />
<text  x="278.90" y="1679.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::value_ptr&gt; &gt;::invoke&lt;utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (10 samples, 0.19%)</title><rect x="756.4" y="1781" width="2.3" height="15.0" fill="rgb(237,34,50)" rx="2" ry="2" />
<text  x="759.43" y="1791.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="1113.5" y="1845" width="0.3" height="15.0" fill="rgb(254,151,3)" rx="2" ry="2" />
<text  x="1116.54" y="1855.5" ></text>
</g>
<g >
<title>seastar::thread_pool::work (2 samples, 0.04%)</title><rect x="1189.5" y="2005" width="0.5" height="15.0" fill="rgb(208,199,21)" rx="2" ry="2" />
<text  x="1192.55" y="2015.5" ></text>
</g>
<g >
<title>std::make_unique&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;, seastar::lw_shared_ptr&lt;schema const&gt;, reader_permit, dht::decorated_key, partition_snapshot_ptr&amp;, query::clustering_key_filter_ranges, bool&amp;, logalloc::region&amp;, logalloc::allocating_section&amp;, boost::any, schema const&amp;, flush_memory_accounter&amp;&gt; (2 samples, 0.04%)</title><rect x="81.5" y="1813" width="0.4" height="15.0" fill="rgb(235,186,53)" rx="2" ry="2" />
<text  x="84.47" y="1823.5" ></text>
</g>
<g >
<title>row_cache::do_make_reader (53 samples, 1.02%)</title><rect x="539.5" y="1749" width="12.1" height="15.0" fill="rgb(242,186,34)" rx="2" ry="2" />
<text  x="542.54" y="1759.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::future (2 samples, 0.04%)</title><rect x="972.9" y="1781" width="0.4" height="15.0" fill="rgb(254,74,26)" rx="2" ry="2" />
<text  x="975.88" y="1791.5" ></text>
</g>
<g >
<title>std::vector&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, std::allocator&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt;::_M_realloc_insert&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; (1 samples, 0.02%)</title><rect x="1131.5" y="1493" width="0.2" height="15.0" fill="rgb(237,55,4)" rx="2" ry="2" />
<text  x="1134.47" y="1503.5" ></text>
</g>
<g >
<title>mutation_partition::clustered_row (1 samples, 0.02%)</title><rect x="108.5" y="1781" width="0.2" height="15.0" fill="rgb(223,169,52)" rx="2" ry="2" />
<text  x="111.47" y="1791.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="72.2" y="1749" width="0.2" height="15.0" fill="rgb(214,192,46)" rx="2" ry="2" />
<text  x="75.16" y="1759.5" ></text>
</g>
<g >
<title>tracking_file_impl::dma_read_bulk (1 samples, 0.02%)</title><rect x="17.9" y="1429" width="0.3" height="15.0" fill="rgb(251,183,4)" rx="2" ry="2" />
<text  x="20.94" y="1439.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.06%)</title><rect x="103.7" y="1909" width="0.7" height="15.0" fill="rgb(246,202,30)" rx="2" ry="2" />
<text  x="106.70" y="1919.5" ></text>
</g>
<g >
<title>ser::serializer&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;::write_fragmented&lt;bytes_ostream, fragment_range&lt;managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="1130.8" y="1525" width="0.2" height="15.0" fill="rgb(236,208,23)" rx="2" ry="2" />
<text  x="1133.78" y="1535.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::_M_create_storage (1 samples, 0.02%)</title><rect x="935.7" y="1829" width="0.2" height="15.0" fill="rgb(229,178,9)" rx="2" ry="2" />
<text  x="938.67" y="1839.5" ></text>
</g>
<g >
<title>operator new (10 samples, 0.19%)</title><rect x="564.9" y="1765" width="2.3" height="15.0" fill="rgb(253,228,40)" rx="2" ry="2" />
<text  x="567.95" y="1775.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::move_it (1 samples, 0.02%)</title><rect x="680.2" y="1909" width="0.2" height="15.0" fill="rgb(239,93,14)" rx="2" ry="2" />
<text  x="683.20" y="1919.5" ></text>
</g>
<g >
<title>seastar::reactor::do_expire_lowres_timers (1 samples, 0.02%)</title><rect x="88.5" y="1941" width="0.2" height="15.0" fill="rgb(246,125,9)" rx="2" ry="2" />
<text  x="91.50" y="1951.5" ></text>
</g>
<g >
<title>database::apply_in_memory (26 samples, 0.50%)</title><rect x="1119.2" y="1717" width="5.9" height="15.0" fill="rgb(236,167,33)" rx="2" ry="2" />
<text  x="1122.21" y="1727.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const*, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;*&gt; (1 samples, 0.02%)</title><rect x="808.2" y="1621" width="0.2" height="15.0" fill="rgb(232,62,16)" rx="2" ry="2" />
<text  x="811.16" y="1631.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.02%)</title><rect x="45.8" y="1557" width="0.3" height="15.0" fill="rgb(222,168,24)" rx="2" ry="2" />
<text  x="48.85" y="1567.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::lower_bound&lt;mutation_partition, schema const&amp;, nonwrapping_interval&lt;clustering_key_prefix&gt; const&amp;&gt; (3 samples, 0.06%)</title><rect x="285.2" y="1653" width="0.7" height="15.0" fill="rgb(208,61,22)" rx="2" ry="2" />
<text  x="288.20" y="1663.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (3 samples, 0.06%)</title><rect x="326.0" y="1813" width="0.7" height="15.0" fill="rgb(254,143,45)" rx="2" ry="2" />
<text  x="329.04" y="1823.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::list_permissions_statement, std::default_delete&lt;cql3::statements::list_permissions_statement&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="65.8" y="1813" width="0.2" height="15.0" fill="rgb(219,167,6)" rx="2" ry="2" />
<text  x="68.81" y="1823.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::allocate (4 samples, 0.08%)</title><rect x="521.4" y="1637" width="0.9" height="15.0" fill="rgb(221,99,9)" rx="2" ry="2" />
<text  x="524.39" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.5" y="1989" width="0.2" height="15.0" fill="rgb(218,25,11)" rx="2" ry="2" />
<text  x="13.45" y="1999.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (3 samples, 0.06%)</title><rect x="741.5" y="1813" width="0.6" height="15.0" fill="rgb(216,158,17)" rx="2" ry="2" />
<text  x="744.46" y="1823.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (2 samples, 0.04%)</title><rect x="758.7" y="1781" width="0.5" height="15.0" fill="rgb(233,108,2)" rx="2" ry="2" />
<text  x="761.70" y="1791.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::untyped_constant&gt; (1 samples, 0.02%)</title><rect x="60.1" y="1717" width="0.3" height="15.0" fill="rgb(241,99,8)" rx="2" ry="2" />
<text  x="63.14" y="1727.5" ></text>
</g>
<g >
<title>partition_entry::evict (1 samples, 0.02%)</title><rect x="10.7" y="1941" width="0.2" height="15.0" fill="rgb(233,106,51)" rx="2" ry="2" />
<text  x="13.68" y="1951.5" ></text>
</g>
<g >
<title>std::visit&lt;overloaded_functor&lt;cql3::raw_value::to_managed_bytes_opt (1 samples, 0.02%)</title><rect x="911.6" y="1781" width="0.2" height="15.0" fill="rgb(221,227,6)" rx="2" ry="2" />
<text  x="914.62" y="1791.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (8 samples, 0.15%)</title><rect x="431.8" y="1733" width="1.8" height="15.0" fill="rgb(218,52,32)" rx="2" ry="2" />
<text  x="434.77" y="1743.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (1 samples, 0.02%)</title><rect x="11.4" y="1941" width="0.2" height="15.0" fill="rgb(252,139,29)" rx="2" ry="2" />
<text  x="14.36" y="1951.5" ></text>
</g>
<g >
<title>partition_snapshot::~partition_snapshot (1 samples, 0.02%)</title><rect x="584.7" y="1701" width="0.2" height="15.0" fill="rgb(247,61,50)" rx="2" ry="2" />
<text  x="587.69" y="1711.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (3 samples, 0.06%)</title><rect x="46.3" y="1733" width="0.7" height="15.0" fill="rgb(210,12,3)" rx="2" ry="2" />
<text  x="49.30" y="1743.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::query_options, db::consistency_level&amp;, std::vector&lt;cql3::raw_value, std::allocator&lt;cql3::raw_value&gt; &gt;, cql3::query_options::specific_options&gt; (1 samples, 0.02%)</title><rect x="867.2" y="1893" width="0.2" height="15.0" fill="rgb(246,207,24)" rx="2" ry="2" />
<text  x="870.15" y="1903.5" ></text>
</g>
<g >
<title>database::find_schema (28 samples, 0.54%)</title><rect x="833.3" y="1797" width="6.4" height="15.0" fill="rgb(232,132,13)" rx="2" ry="2" />
<text  x="836.35" y="1807.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (1 samples, 0.02%)</title><rect x="1161.4" y="1877" width="0.2" height="15.0" fill="rgb(244,20,53)" rx="2" ry="2" />
<text  x="1164.41" y="1887.5" ></text>
</g>
<g >
<title>cdc::generation_service::do_handle_cdc_generation_intercept_nonfatal_errors (1 samples, 0.02%)</title><rect x="11.4" y="1813" width="0.2" height="15.0" fill="rgb(254,107,36)" rx="2" ry="2" />
<text  x="14.36" y="1823.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (2 samples, 0.04%)</title><rect x="11.1" y="1989" width="0.5" height="15.0" fill="rgb(237,95,34)" rx="2" ry="2" />
<text  x="14.13" y="1999.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_M_move_assign (2 samples, 0.04%)</title><rect x="1094.3" y="1781" width="0.4" height="15.0" fill="rgb(244,50,8)" rx="2" ry="2" />
<text  x="1097.26" y="1791.5" ></text>
</g>
<g >
<title>locator::effective_replication_map::get_natural_endpoints_without_node_being_replaced (1 samples, 0.02%)</title><rect x="1132.4" y="1621" width="0.2" height="15.0" fill="rgb(230,122,42)" rx="2" ry="2" />
<text  x="1135.37" y="1631.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.5" y="1925" width="0.2" height="15.0" fill="rgb(228,5,4)" rx="2" ry="2" />
<text  x="13.45" y="1935.5" ></text>
</g>
<g >
<title>std::default_delete&lt;cql3::expr::expression::impl&gt;::operator (1 samples, 0.02%)</title><rect x="655.0" y="1829" width="0.2" height="15.0" fill="rgb(220,101,42)" rx="2" ry="2" />
<text  x="658.02" y="1839.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::drop_function_statement, std::default_delete&lt;cql3::statements::drop_function_statement&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::statements::drop_function_statement&gt;, void&gt; (1 samples, 0.02%)</title><rect x="64.5" y="1797" width="0.2" height="15.0" fill="rgb(227,204,37)" rx="2" ry="2" />
<text  x="67.45" y="1807.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (3 samples, 0.06%)</title><rect x="841.1" y="1701" width="0.6" height="15.0" fill="rgb(209,113,43)" rx="2" ry="2" />
<text  x="844.06" y="1711.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.08%)</title><rect x="1058.6" y="1749" width="0.9" height="15.0" fill="rgb(212,15,12)" rx="2" ry="2" />
<text  x="1061.64" y="1759.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (1 samples, 0.02%)</title><rect x="1046.2" y="1749" width="0.2" height="15.0" fill="rgb(238,43,51)" rx="2" ry="2" />
<text  x="1049.16" y="1759.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="423.6" y="1605" width="0.2" height="15.0" fill="rgb(207,58,40)" rx="2" ry="2" />
<text  x="426.60" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt; &gt;  (3 samples, 0.06%)</title><rect x="72.6" y="1701" width="0.7" height="15.0" fill="rgb(237,111,44)" rx="2" ry="2" />
<text  x="75.62" y="1711.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (4 samples, 0.08%)</title><rect x="43.1" y="1685" width="0.9" height="15.0" fill="rgb(244,183,48)" rx="2" ry="2" />
<text  x="46.12" y="1695.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::operator= (1 samples, 0.02%)</title><rect x="1126.7" y="1685" width="0.2" height="15.0" fill="rgb(248,202,53)" rx="2" ry="2" />
<text  x="1129.70" y="1695.5" ></text>
</g>
<g >
<title>row_tombstone::apply (2 samples, 0.04%)</title><rect x="413.4" y="1637" width="0.4" height="15.0" fill="rgb(254,104,31)" rx="2" ry="2" />
<text  x="416.39" y="1647.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (2 samples, 0.04%)</title><rect x="262.1" y="1541" width="0.4" height="15.0" fill="rgb(205,186,17)" rx="2" ry="2" />
<text  x="265.06" y="1551.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::push_back (9 samples, 0.17%)</title><rect x="22.5" y="1701" width="2.0" height="15.0" fill="rgb(206,224,49)" rx="2" ry="2" />
<text  x="25.48" y="1711.5" ></text>
</g>
<g >
<title>canonical_mutation::canonical_mutation (2 samples, 0.04%)</title><rect x="108.7" y="1797" width="0.4" height="15.0" fill="rgb(211,35,39)" rx="2" ry="2" />
<text  x="111.69" y="1807.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (1 samples, 0.02%)</title><rect x="1083.8" y="1765" width="0.2" height="15.0" fill="rgb(251,214,54)" rx="2" ry="2" />
<text  x="1086.82" y="1775.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_clear (4 samples, 0.08%)</title><rect x="461.5" y="1717" width="0.9" height="15.0" fill="rgb(231,46,41)" rx="2" ry="2" />
<text  x="464.49" y="1727.5" ></text>
</g>
<g >
<title>memtable_entry::memtable_entry (1 samples, 0.02%)</title><rect x="1119.7" y="1573" width="0.2" height="15.0" fill="rgb(223,199,47)" rx="2" ry="2" />
<text  x="1122.67" y="1583.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.5" y="1701" width="0.2" height="15.0" fill="rgb(244,198,30)" rx="2" ry="2" />
<text  x="13.45" y="1711.5" ></text>
</g>
<g >
<title>mutation_fragment::operator= (4 samples, 0.08%)</title><rect x="209.0" y="1653" width="0.9" height="15.0" fill="rgb(250,4,1)" rx="2" ry="2" />
<text  x="211.97" y="1663.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;compact_mutation_state&lt; (43 samples, 0.83%)</title><rect x="558.4" y="1845" width="9.7" height="15.0" fill="rgb(237,32,21)" rx="2" ry="2" />
<text  x="561.37" y="1855.5" ></text>
</g>
<g >
<title>seastar::syscall_work_queue::work_item_returning&lt;seastar::syscall_result&lt;long&gt; &gt;::process (1 samples, 0.02%)</title><rect x="1189.8" y="1989" width="0.2" height="15.0" fill="rgb(215,46,19)" rx="2" ry="2" />
<text  x="1192.77" y="1999.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;void&gt;::satisfy_with_result_of&lt;seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::then_wrapped_nrvo&lt;void, service::abstract_read_executor::make_data_requests (59 samples, 1.13%)</title><rect x="714.9" y="1909" width="13.4" height="15.0" fill="rgb(230,122,34)" rx="2" ry="2" />
<text  x="717.91" y="1919.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;*&gt; (1 samples, 0.02%)</title><rect x="48.8" y="1653" width="0.2" height="15.0" fill="rgb(233,129,8)" rx="2" ry="2" />
<text  x="51.80" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::at (1 samples, 0.02%)</title><rect x="1080.9" y="1765" width="0.2" height="15.0" fill="rgb(231,100,31)" rx="2" ry="2" />
<text  x="1083.87" y="1775.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (3 samples, 0.06%)</title><rect x="1087.9" y="1797" width="0.7" height="15.0" fill="rgb(209,192,19)" rx="2" ry="2" />
<text  x="1090.90" y="1807.5" ></text>
</g>
<g >
<title>std::forward&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; (1 samples, 0.02%)</title><rect x="45.2" y="1717" width="0.2" height="15.0" fill="rgb(209,25,51)" rx="2" ry="2" />
<text  x="48.17" y="1727.5" ></text>
</g>
<g >
<title>utils::tuple_hash::hash_impl&lt;2ul, auth::resource_kind, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (4 samples, 0.08%)</title><rect x="815.6" y="1541" width="1.0" height="15.0" fill="rgb(242,186,41)" rx="2" ry="2" />
<text  x="818.65" y="1551.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::partition_snapshot_flat_reader&lt;memtable&amp;&gt; (71 samples, 1.37%)</title><rect x="515.5" y="1717" width="16.1" height="15.0" fill="rgb(205,15,12)" rx="2" ry="2" />
<text  x="518.49" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.5" y="1141" width="0.2" height="15.0" fill="rgb(219,169,15)" rx="2" ry="2" />
<text  x="13.45" y="1151.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, false, false&gt;::operator= (1 samples, 0.02%)</title><rect x="40.6" y="1717" width="0.3" height="15.0" fill="rgb(227,23,16)" rx="2" ry="2" />
<text  x="43.63" y="1727.5" ></text>
</g>
<g >
<title>seastar::fragmented_memory_input_stream&lt;bytes_ostream::fragment_iterator&gt;::read_substream (1 samples, 0.02%)</title><rect x="109.1" y="1669" width="0.3" height="15.0" fill="rgb(238,136,35)" rx="2" ry="2" />
<text  x="112.15" y="1679.5" ></text>
</g>
<g >
<title>single_node_cql_env::do_with (1 samples, 0.02%)</title><rect x="11.4" y="1973" width="0.2" height="15.0" fill="rgb(248,33,34)" rx="2" ry="2" />
<text  x="14.36" y="1983.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.02%)</title><rect x="83.5" y="1749" width="0.2" height="15.0" fill="rgb(241,147,27)" rx="2" ry="2" />
<text  x="86.51" y="1759.5" ></text>
</g>
<g >
<title>mutation_partition_view::do_accept&lt;partition_builder&gt; (2 samples, 0.04%)</title><rect x="107.8" y="1893" width="0.4" height="15.0" fill="rgb(206,41,16)" rx="2" ry="2" />
<text  x="110.79" y="1903.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;, seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::finally_body&lt;seastar::smp::submit_to&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (24 samples, 0.46%)</title><rect x="643.0" y="1925" width="5.4" height="15.0" fill="rgb(239,13,51)" rx="2" ry="2" />
<text  x="645.99" y="1935.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (2 samples, 0.04%)</title><rect x="44.0" y="1637" width="0.5" height="15.0" fill="rgb(244,73,11)" rx="2" ry="2" />
<text  x="47.03" y="1647.5" ></text>
</g>
<g >
<title>rows_entry::tri_compare::operator (1 samples, 0.02%)</title><rect x="106.2" y="1797" width="0.2" height="15.0" fill="rgb(223,201,54)" rx="2" ry="2" />
<text  x="109.20" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_nodes (1 samples, 0.02%)</title><rect x="1159.6" y="1877" width="0.2" height="15.0" fill="rgb(241,150,32)" rx="2" ry="2" />
<text  x="1162.60" y="1887.5" ></text>
</g>
<g >
<title>make_flat_mutation_reader&lt;empty_flat_reader, seastar::lw_shared_ptr&lt;schema const&gt;, reader_permit&gt; (15 samples, 0.29%)</title><rect x="547.9" y="1717" width="3.4" height="15.0" fill="rgb(247,45,48)" rx="2" ry="2" />
<text  x="550.93" y="1727.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned char, std::pair&lt;unsigned char const, std::optional&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned char const, std::optional&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned char&gt;, std::hash&lt;unsigned char&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::~_Hashtable (1 samples, 0.02%)</title><rect x="876.5" y="1781" width="0.2" height="15.0" fill="rgb(240,96,26)" rx="2" ry="2" />
<text  x="879.45" y="1791.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (112 samples, 2.15%)</title><rect x="37.0" y="1797" width="25.4" height="15.0" fill="rgb(237,209,53)" rx="2" ry="2" />
<text  x="40.00" y="1807.5" >c..</text>
</g>
<g >
<title>operator new (5 samples, 0.10%)</title><rect x="798.6" y="1701" width="1.2" height="15.0" fill="rgb(214,93,49)" rx="2" ry="2" />
<text  x="801.63" y="1711.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit_slot&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::walking_visitor&lt;row::for_each_cell&lt;(anonymous namespace)::write_row_cells&lt;ser::deletable_row__cells&lt;bytes_ostream&gt; &gt; (1 samples, 0.02%)</title><rect x="108.7" y="1733" width="0.2" height="15.0" fill="rgb(227,53,29)" rx="2" ry="2" />
<text  x="111.69" y="1743.5" ></text>
</g>
<g >
<title>std::operator+ (3 samples, 0.06%)</title><rect x="37.2" y="1637" width="0.7" height="15.0" fill="rgb(232,49,41)" rx="2" ry="2" />
<text  x="40.23" y="1647.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::find (6 samples, 0.12%)</title><rect x="951.5" y="1781" width="1.4" height="15.0" fill="rgb(207,101,45)" rx="2" ry="2" />
<text  x="954.55" y="1791.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_prepared (72 samples, 1.38%)</title><rect x="752.3" y="1845" width="16.4" height="15.0" fill="rgb(227,161,20)" rx="2" ry="2" />
<text  x="755.35" y="1855.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.04%)</title><rect x="524.1" y="1621" width="0.5" height="15.0" fill="rgb(247,154,38)" rx="2" ry="2" />
<text  x="527.11" y="1631.5" ></text>
</g>
<g >
<title>seastar::async&lt;single_node_cql_env::do_with (1 samples, 0.02%)</title><rect x="730.3" y="1813" width="0.3" height="15.0" fill="rgb(233,32,6)" rx="2" ry="2" />
<text  x="733.34" y="1823.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (2 samples, 0.04%)</title><rect x="837.0" y="1701" width="0.4" height="15.0" fill="rgb(225,148,41)" rx="2" ry="2" />
<text  x="839.98" y="1711.5" ></text>
</g>
<g >
<title>seastar::reactor::run_some_tasks (4,745 samples, 91.23%)</title><rect x="89.2" y="1941" width="1076.5" height="15.0" fill="rgb(230,185,21)" rx="2" ry="2" />
<text  x="92.18" y="1951.5" >seastar::reactor::run_some_tasks</text>
</g>
<g >
<title>std::visit&lt;overloaded_functor&lt;cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::find (1 samples, 0.02%)</title><rect x="665.0" y="1781" width="0.2" height="15.0" fill="rgb(241,223,49)" rx="2" ry="2" />
<text  x="668.00" y="1791.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (1 samples, 0.02%)</title><rect x="77.8" y="1685" width="0.3" height="15.0" fill="rgb(252,23,16)" rx="2" ry="2" />
<text  x="80.84" y="1695.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (1 samples, 0.02%)</title><rect x="803.9" y="1653" width="0.2" height="15.0" fill="rgb(206,134,30)" rx="2" ry="2" />
<text  x="806.85" y="1663.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::on_permit_created (3 samples, 0.06%)</title><rect x="1030.3" y="1621" width="0.7" height="15.0" fill="rgb(211,111,6)" rx="2" ry="2" />
<text  x="1033.28" y="1631.5" ></text>
</g>
<g >
<title>std::vector&lt;antlr3::LexState&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::LexState&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::emplace_back&lt;antlr3::LexState&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="34.5" y="1637" width="0.2" height="15.0" fill="rgb(217,203,35)" rx="2" ry="2" />
<text  x="37.50" y="1647.5" ></text>
</g>
<g >
<title>utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;::lru_entry::touch (2 samples, 0.04%)</title><rect x="749.2" y="1845" width="0.4" height="15.0" fill="rgb(254,51,35)" rx="2" ry="2" />
<text  x="752.17" y="1855.5" ></text>
</g>
<g >
<title>managed_bytes::free_chain (14 samples, 0.27%)</title><rect x="420.9" y="1621" width="3.2" height="15.0" fill="rgb(235,41,18)" rx="2" ry="2" />
<text  x="423.88" y="1631.5" ></text>
</g>
<g >
<title>cql3::query_processor::parse_statement (208 samples, 4.00%)</title><rect x="19.8" y="1893" width="47.1" height="15.0" fill="rgb(222,183,0)" rx="2" ry="2" />
<text  x="22.76" y="1903.5" >cql3..</text>
</g>
<g >
<title>do_io_check&lt;checked_file_impl::dma_read_bulk (1 samples, 0.02%)</title><rect x="17.9" y="1397" width="0.3" height="15.0" fill="rgb(223,221,3)" rx="2" ry="2" />
<text  x="20.94" y="1407.5" ></text>
</g>
<g >
<title>std::visit&lt;overloaded_functor&lt;cql3::raw_value::to_managed_bytes_opt (1 samples, 0.02%)</title><rect x="912.3" y="1797" width="0.2" height="15.0" fill="rgb(244,17,48)" rx="2" ry="2" />
<text  x="915.30" y="1807.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (1 samples, 0.02%)</title><rect x="604.9" y="1829" width="0.2" height="15.0" fill="rgb(213,200,46)" rx="2" ry="2" />
<text  x="607.88" y="1839.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.02%)</title><rect x="53.6" y="1493" width="0.2" height="15.0" fill="rgb(214,84,38)" rx="2" ry="2" />
<text  x="56.56" y="1503.5" ></text>
</g>
<g >
<title>database::has_keyspace (12 samples, 0.23%)</title><rect x="839.7" y="1781" width="2.7" height="15.0" fill="rgb(249,51,25)" rx="2" ry="2" />
<text  x="842.70" y="1791.5" ></text>
</g>
<g >
<title>posix_memalign (20 samples, 0.38%)</title><rect x="232.1" y="1477" width="4.6" height="15.0" fill="rgb(237,176,42)" rx="2" ry="2" />
<text  x="235.11" y="1487.5" ></text>
</g>
<g >
<title>seastar::metrics::impl::metric_groups_impl::add_metric (1 samples, 0.02%)</title><rect x="17.5" y="1749" width="0.2" height="15.0" fill="rgb(238,182,19)" rx="2" ry="2" />
<text  x="20.49" y="1759.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (1 samples, 0.02%)</title><rect x="818.1" y="1653" width="0.3" height="15.0" fill="rgb(250,91,33)" rx="2" ry="2" />
<text  x="821.14" y="1663.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (460 samples, 8.84%)</title><rect x="329.9" y="1797" width="104.4" height="15.0" fill="rgb(219,141,14)" rx="2" ry="2" />
<text  x="332.90" y="1807.5" >flat_mutatio..</text>
</g>
<g >
<title>flat_mutation_reader::impl::push_mutation_fragment&lt;schema const&amp;, reader_permit&amp;, partition_start&gt; (33 samples, 0.63%)</title><rect x="520.0" y="1669" width="7.5" height="15.0" fill="rgb(252,38,54)" rx="2" ry="2" />
<text  x="523.02" y="1679.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt; &gt;::deallocate (1 samples, 0.02%)</title><rect x="23.8" y="1621" width="0.3" height="15.0" fill="rgb(243,55,29)" rx="2" ry="2" />
<text  x="26.84" y="1631.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (1 samples, 0.02%)</title><rect x="55.4" y="1685" width="0.2" height="15.0" fill="rgb(221,134,47)" rx="2" ry="2" />
<text  x="58.38" y="1695.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (2 samples, 0.04%)</title><rect x="54.0" y="1653" width="0.5" height="15.0" fill="rgb(253,1,45)" rx="2" ry="2" />
<text  x="57.01" y="1663.5" ></text>
</g>
<g >
<title>std::variant&lt;query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::operator=&lt;query::noop_hasher&gt; (3 samples, 0.06%)</title><rect x="617.1" y="1829" width="0.7" height="15.0" fill="rgb(208,45,41)" rx="2" ry="2" />
<text  x="620.13" y="1839.5" ></text>
</g>
<g >
<title>std::operator+ (2 samples, 0.04%)</title><rect x="58.6" y="1573" width="0.4" height="15.0" fill="rgb(225,15,0)" rx="2" ry="2" />
<text  x="61.55" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_List_node_header::_List_node_header (2 samples, 0.04%)</title><rect x="467.6" y="1685" width="0.5" height="15.0" fill="rgb(246,57,50)" rx="2" ry="2" />
<text  x="470.62" y="1695.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (2 samples, 0.04%)</title><rect x="37.5" y="1621" width="0.4" height="15.0" fill="rgb(248,180,12)" rx="2" ry="2" />
<text  x="40.45" y="1631.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::raw::select_statement, std::default_delete&lt;cql3::statements::raw::select_statement&gt; &gt;::__uniq_ptr_impl (1 samples, 0.02%)</title><rect x="64.9" y="1765" width="0.2" height="15.0" fill="rgb(212,47,36)" rx="2" ry="2" />
<text  x="67.90" y="1775.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (28 samples, 0.54%)</title><rect x="761.0" y="1781" width="6.3" height="15.0" fill="rgb(226,78,50)" rx="2" ry="2" />
<text  x="763.97" y="1791.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_channel (1 samples, 0.02%)</title><rect x="39.0" y="1717" width="0.3" height="15.0" fill="rgb(232,12,8)" rx="2" ry="2" />
<text  x="42.04" y="1727.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::add_operation (1 samples, 0.02%)</title><rect x="70.3" y="1845" width="0.3" height="15.0" fill="rgb(251,217,9)" rx="2" ry="2" />
<text  x="73.35" y="1855.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.02%)</title><rect x="42.4" y="1573" width="0.3" height="15.0" fill="rgb(226,26,33)" rx="2" ry="2" />
<text  x="45.44" y="1583.5" ></text>
</g>
<g >
<title>absl::container_internal::operator== (3 samples, 0.06%)</title><rect x="776.2" y="1781" width="0.7" height="15.0" fill="rgb(209,96,34)" rx="2" ry="2" />
<text  x="779.17" y="1791.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::_M_range_initialize&lt;nonwrapping_interval&lt;dht::ring_position&gt; const*&gt; (1 samples, 0.02%)</title><rect x="1038.4" y="1701" width="0.3" height="15.0" fill="rgb(212,107,33)" rx="2" ry="2" />
<text  x="1041.44" y="1711.5" ></text>
</g>
<g >
<title>global_schema_ptr::get (1 samples, 0.02%)</title><rect x="999.6" y="1701" width="0.3" height="15.0" fill="rgb(221,22,17)" rx="2" ry="2" />
<text  x="1002.65" y="1711.5" ></text>
</g>
<g >
<title>mutation::set_clustered_cell (1 samples, 0.02%)</title><rect x="101.7" y="1861" width="0.2" height="15.0" fill="rgb(214,193,5)" rx="2" ry="2" />
<text  x="104.66" y="1871.5" ></text>
</g>
<g >
<title>std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;auth::role_or_anonymous&gt;, seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (2 samples, 0.04%)</title><rect x="823.8" y="1701" width="0.5" height="15.0" fill="rgb(220,146,5)" rx="2" ry="2" />
<text  x="826.82" y="1711.5" ></text>
</g>
<g >
<title>seastar::internal::uninitialized_wrapper_base&lt;service::storage_proxy_coordinator_query_result, false&gt;::uninitialized_set&lt;service::storage_proxy_coordinator_query_result&gt; (2 samples, 0.04%)</title><rect x="694.3" y="1893" width="0.4" height="15.0" fill="rgb(232,164,32)" rx="2" ry="2" />
<text  x="697.27" y="1903.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (1 samples, 0.02%)</title><rect x="785.0" y="1765" width="0.2" height="15.0" fill="rgb(240,50,16)" rx="2" ry="2" />
<text  x="788.02" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.5" y="1797" width="0.2" height="15.0" fill="rgb(232,116,40)" rx="2" ry="2" />
<text  x="13.45" y="1807.5" ></text>
</g>
<g >
<title>ser::idl::serializers::internal::vector_serializer&lt;utils::chunked_vector&lt;ser::deletable_row_view, 131072ul&gt; &gt;::read&lt;seastar::simple_memory_input_stream&gt; (2 samples, 0.04%)</title><rect x="1123.8" y="1637" width="0.4" height="15.0" fill="rgb(252,203,54)" rx="2" ry="2" />
<text  x="1126.75" y="1647.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.02%)</title><rect x="17.3" y="1909" width="0.2" height="15.0" fill="rgb(236,132,39)" rx="2" ry="2" />
<text  x="20.26" y="1919.5" ></text>
</g>
<g >
<title>operator new (8 samples, 0.15%)</title><rect x="967.4" y="1781" width="1.8" height="15.0" fill="rgb(244,39,45)" rx="2" ry="2" />
<text  x="970.43" y="1791.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (2 samples, 0.04%)</title><rect x="653.4" y="1909" width="0.5" height="15.0" fill="rgb(233,87,5)" rx="2" ry="2" />
<text  x="656.43" y="1919.5" ></text>
</g>
<g >
<title>reader_permit::consume (2 samples, 0.04%)</title><rect x="318.3" y="1701" width="0.5" height="15.0" fill="rgb(228,117,0)" rx="2" ry="2" />
<text  x="321.33" y="1711.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reserve&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::partition_snapshot_flat_reader&lt;memtable&amp;&gt; (56 samples, 1.08%)</title><rect x="516.6" y="1701" width="12.7" height="15.0" fill="rgb(231,219,28)" rx="2" ry="2" />
<text  x="519.62" y="1711.5" ></text>
</g>
<g >
<title>std::queue&lt;reader_concurrency_semaphore::entry, seastar::circular_buffer&lt;reader_concurrency_semaphore::entry, std::allocator&lt;reader_concurrency_semaphore::entry&gt; &gt; &gt;::pop (3 samples, 0.06%)</title><rect x="641.6" y="1909" width="0.7" height="15.0" fill="rgb(249,162,24)" rx="2" ry="2" />
<text  x="644.63" y="1919.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;bytes_ostream::chunk, std::default_delete&lt;bytes_ostream::chunk&gt; &gt;::~unique_ptr (7 samples, 0.13%)</title><rect x="98.3" y="1861" width="1.5" height="15.0" fill="rgb(205,186,24)" rx="2" ry="2" />
<text  x="101.26" y="1871.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;utils::small_vector&lt;service::storage_proxy::unique_response_handler, 1ul&gt; &gt; &gt;::invoke&lt;service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;, service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (21 samples, 0.40%)</title><rect x="1129.2" y="1701" width="4.8" height="15.0" fill="rgb(205,112,3)" rx="2" ry="2" />
<text  x="1132.20" y="1711.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.02%)</title><rect x="24.5" y="1701" width="0.2" height="15.0" fill="rgb(205,29,31)" rx="2" ry="2" />
<text  x="27.52" y="1711.5" ></text>
</g>
<g >
<title>range_tombstone_list::~range_tombstone_list (1 samples, 0.02%)</title><rect x="585.8" y="1717" width="0.2" height="15.0" fill="rgb(250,166,27)" rx="2" ry="2" />
<text  x="588.82" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.5" y="629" width="0.2" height="15.0" fill="rgb(244,112,8)" rx="2" ry="2" />
<text  x="13.45" y="639.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="380.7" y="1573" width="0.2" height="15.0" fill="rgb(238,91,12)" rx="2" ry="2" />
<text  x="383.72" y="1583.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.04%)</title><rect x="736.5" y="1829" width="0.4" height="15.0" fill="rgb(219,88,25)" rx="2" ry="2" />
<text  x="739.47" y="1839.5" ></text>
</g>
<g >
<title>query::result_view::consume&lt;query::result_set_builder&amp;&gt; (1 samples, 0.02%)</title><rect x="109.1" y="1765" width="0.3" height="15.0" fill="rgb(235,97,26)" rx="2" ry="2" />
<text  x="112.15" y="1775.5" ></text>
</g>
<g >
<title>service::storage_proxy::new_read_repair_decision (2 samples, 0.04%)</title><rect x="1081.6" y="1781" width="0.4" height="15.0" fill="rgb(213,101,17)" rx="2" ry="2" />
<text  x="1084.55" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term (1 samples, 0.02%)</title><rect x="11.4" y="1429" width="0.2" height="15.0" fill="rgb(220,45,51)" rx="2" ry="2" />
<text  x="14.36" y="1439.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::clear (2 samples, 0.04%)</title><rect x="302.9" y="1733" width="0.5" height="15.0" fill="rgb(234,139,54)" rx="2" ry="2" />
<text  x="305.90" y="1743.5" ></text>
</g>
<g >
<title>seastar::syscall_work_queue::submit_item (1 samples, 0.02%)</title><rect x="730.6" y="1845" width="0.2" height="15.0" fill="rgb(214,183,15)" rx="2" ry="2" />
<text  x="733.57" y="1855.5" ></text>
</g>
<g >
<title>db::schema_tables::diff_table_or_view (4 samples, 0.08%)</title><rect x="106.4" y="1893" width="0.9" height="15.0" fill="rgb(230,49,32)" rx="2" ry="2" />
<text  x="109.42" y="1903.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_token (10 samples, 0.19%)</title><rect x="944.7" y="1797" width="2.3" height="15.0" fill="rgb(213,168,33)" rx="2" ry="2" />
<text  x="947.74" y="1807.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::reset (1 samples, 0.02%)</title><rect x="59.7" y="1685" width="0.2" height="15.0" fill="rgb(210,1,48)" rx="2" ry="2" />
<text  x="62.69" y="1695.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (1 samples, 0.02%)</title><rect x="858.5" y="1829" width="0.3" height="15.0" fill="rgb(243,135,13)" rx="2" ry="2" />
<text  x="861.53" y="1839.5" ></text>
</g>
<g >
<title>std::type_info::operator== (1 samples, 0.02%)</title><rect x="691.5" y="1893" width="0.3" height="15.0" fill="rgb(224,89,49)" rx="2" ry="2" />
<text  x="694.55" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.5" y="405" width="0.2" height="15.0" fill="rgb(254,134,18)" rx="2" ry="2" />
<text  x="13.45" y="415.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.02%)</title><rect x="57.2" y="1749" width="0.2" height="15.0" fill="rgb(236,46,49)" rx="2" ry="2" />
<text  x="60.19" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.5" y="1429" width="0.2" height="15.0" fill="rgb(236,97,12)" rx="2" ry="2" />
<text  x="13.45" y="1439.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (1 samples, 0.02%)</title><rect x="272.5" y="1605" width="0.2" height="15.0" fill="rgb(216,89,8)" rx="2" ry="2" />
<text  x="275.50" y="1615.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql3::column_identifier&gt;::shared_ptr_count_for&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const&amp;, bool&gt; (2 samples, 0.04%)</title><rect x="67.6" y="1813" width="0.5" height="15.0" fill="rgb(230,71,27)" rx="2" ry="2" />
<text  x="70.63" y="1823.5" ></text>
</g>
<g >
<title>std::vector&lt;seastar::shared_ptr&lt;cql3::restrictions::restrictions&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::restrictions::restrictions&gt; &gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="74.4" y="1829" width="0.3" height="15.0" fill="rgb(220,225,6)" rx="2" ry="2" />
<text  x="77.43" y="1839.5" ></text>
</g>
<g >
<title>operator new (7 samples, 0.13%)</title><rect x="979.5" y="1749" width="1.5" height="15.0" fill="rgb(252,151,37)" rx="2" ry="2" />
<text  x="982.46" y="1759.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::basic_unreserved_keyword (1 samples, 0.02%)</title><rect x="700.8" y="1701" width="0.3" height="15.0" fill="rgb(227,204,9)" rx="2" ry="2" />
<text  x="703.85" y="1711.5" ></text>
</g>
<g >
<title>seastar::lambda_task&lt;seastar::execution_stage::flush (1,154 samples, 22.19%)</title><rect x="874.4" y="1925" width="261.8" height="15.0" fill="rgb(232,209,26)" rx="2" ry="2" />
<text  x="877.41" y="1935.5" >seastar::lambda_task&lt;seastar::exec..</text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;11ul, cql3::expr::untyped_constant&gt; (2 samples, 0.04%)</title><rect x="52.7" y="1589" width="0.4" height="15.0" fill="rgb(228,179,38)" rx="2" ry="2" />
<text  x="55.65" y="1599.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::emplace_back&lt;unsigned int const&amp;&gt; (2 samples, 0.04%)</title><rect x="1104.2" y="1829" width="0.5" height="15.0" fill="rgb(207,184,38)" rx="2" ry="2" />
<text  x="1107.24" y="1839.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::default_delete&lt;cql3::statements::drop_keyspace_statement&gt;, true&gt;::_Head_base (1 samples, 0.02%)</title><rect x="64.7" y="1717" width="0.2" height="15.0" fill="rgb(209,12,14)" rx="2" ry="2" />
<text  x="67.68" y="1727.5" ></text>
</g>
<g >
<title>partition_snapshot::get_change_mark (7 samples, 0.13%)</title><rect x="258.7" y="1589" width="1.5" height="15.0" fill="rgb(208,71,18)" rx="2" ry="2" />
<text  x="261.66" y="1599.5" ></text>
</g>
<g >
<title>memtable::make_flat_reader (271 samples, 5.21%)</title><rect x="475.8" y="1765" width="61.5" height="15.0" fill="rgb(240,217,42)" rx="2" ry="2" />
<text  x="478.78" y="1775.5" >memtab..</text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (2 samples, 0.04%)</title><rect x="639.4" y="1893" width="0.4" height="15.0" fill="rgb(229,131,42)" rx="2" ry="2" />
<text  x="642.36" y="1903.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::clear (1 samples, 0.02%)</title><rect x="94.2" y="1909" width="0.2" height="15.0" fill="rgb(236,50,2)" rx="2" ry="2" />
<text  x="97.17" y="1919.5" ></text>
</g>
<g >
<title>query::result_set::result_set (1 samples, 0.02%)</title><rect x="109.1" y="1813" width="0.3" height="15.0" fill="rgb(227,106,7)" rx="2" ry="2" />
<text  x="112.15" y="1823.5" ></text>
</g>
<g >
<title>ser::writer_of_deletable_row&lt;bytes_ostream&gt;::write_key (1 samples, 0.02%)</title><rect x="1131.0" y="1557" width="0.2" height="15.0" fill="rgb(230,224,9)" rx="2" ry="2" />
<text  x="1134.01" y="1567.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (1 samples, 0.02%)</title><rect x="106.2" y="1861" width="0.2" height="15.0" fill="rgb(246,114,26)" rx="2" ry="2" />
<text  x="109.20" y="1871.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.08%)</title><rect x="976.3" y="1717" width="0.9" height="15.0" fill="rgb(213,64,48)" rx="2" ry="2" />
<text  x="979.28" y="1727.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::partition_slice, std::default_delete&lt;query::partition_slice&gt; &gt;::~unique_ptr (2 samples, 0.04%)</title><rect x="552.2" y="1765" width="0.5" height="15.0" fill="rgb(214,215,23)" rx="2" ry="2" />
<text  x="555.24" y="1775.5" ></text>
</g>
<g >
<title>read_simple&lt;unsigned short, managed_bytes_basic_view&lt; (2 samples, 0.04%)</title><rect x="917.7" y="1765" width="0.5" height="15.0" fill="rgb(235,119,4)" rx="2" ry="2" />
<text  x="920.74" y="1775.5" ></text>
</g>
<g >
<title>ser::writer_of_mutation&lt;bytes_ostream&gt;::writer_of_mutation (1 samples, 0.02%)</title><rect x="1131.7" y="1589" width="0.2" height="15.0" fill="rgb(246,159,31)" rx="2" ry="2" />
<text  x="1134.69" y="1599.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::EqualElement&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (2 samples, 0.04%)</title><rect x="777.8" y="1749" width="0.4" height="15.0" fill="rgb(209,81,5)" rx="2" ry="2" />
<text  x="780.76" y="1759.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::query_processor::process_authorized_statement (15 samples, 0.29%)</title><rect x="652.1" y="1925" width="3.4" height="15.0" fill="rgb(210,111,0)" rx="2" ry="2" />
<text  x="655.07" y="1935.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (1 samples, 0.02%)</title><rect x="511.2" y="1733" width="0.2" height="15.0" fill="rgb(232,179,32)" rx="2" ry="2" />
<text  x="514.18" y="1743.5" ></text>
</g>
<g >
<title>partition_version_ref::operator (1 samples, 0.02%)</title><rect x="259.8" y="1557" width="0.2" height="15.0" fill="rgb(213,93,36)" rx="2" ry="2" />
<text  x="262.79" y="1567.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (321 samples, 6.17%)</title><rect x="343.5" y="1669" width="72.8" height="15.0" fill="rgb(238,137,45)" rx="2" ry="2" />
<text  x="346.51" y="1679.5" >flat_mut..</text>
</g>
<g >
<title>streamed_mutation_freezer::consume_end_of_stream (1 samples, 0.02%)</title><rect x="138.2" y="1637" width="0.2" height="15.0" fill="rgb(248,75,30)" rx="2" ry="2" />
<text  x="141.19" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt;::~_Variant_storage (1 samples, 0.02%)</title><rect x="906.6" y="1749" width="0.3" height="15.0" fill="rgb(240,10,52)" rx="2" ry="2" />
<text  x="909.63" y="1759.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (2 samples, 0.04%)</title><rect x="58.6" y="1717" width="0.4" height="15.0" fill="rgb(224,74,5)" rx="2" ry="2" />
<text  x="61.55" y="1727.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.02%)</title><rect x="54.2" y="1541" width="0.3" height="15.0" fill="rgb(232,107,1)" rx="2" ry="2" />
<text  x="57.24" y="1551.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_S_do_relocate (1 samples, 0.02%)</title><rect x="553.4" y="1749" width="0.2" height="15.0" fill="rgb(253,16,15)" rx="2" ry="2" />
<text  x="556.38" y="1759.5" ></text>
</g>
<g >
<title>cql3::expr::possible_lhs_values (83 samples, 1.60%)</title><rect x="894.1" y="1829" width="18.9" height="15.0" fill="rgb(245,81,38)" rx="2" ry="2" />
<text  x="897.15" y="1839.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (1 samples, 0.02%)</title><rect x="412.7" y="1589" width="0.2" height="15.0" fill="rgb(228,18,23)" rx="2" ry="2" />
<text  x="415.71" y="1599.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_cql (1 samples, 0.02%)</title><rect x="678.8" y="1925" width="0.3" height="15.0" fill="rgb(237,41,54)" rx="2" ry="2" />
<text  x="681.84" y="1935.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::partition_slice const, std::default_delete&lt;query::partition_slice const&gt; &gt;::~unique_ptr (21 samples, 0.40%)</title><rect x="603.3" y="1845" width="4.8" height="15.0" fill="rgb(211,205,10)" rx="2" ry="2" />
<text  x="606.29" y="1855.5" ></text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_slice_or_needs_filtering (6 samples, 0.12%)</title><rect x="943.2" y="1781" width="1.3" height="15.0" fill="rgb(214,40,6)" rx="2" ry="2" />
<text  x="946.16" y="1791.5" ></text>
</g>
<g >
<title>atomic_cell_or_collection::copy (1 samples, 0.02%)</title><rect x="216.2" y="1557" width="0.3" height="15.0" fill="rgb(227,93,33)" rx="2" ry="2" />
<text  x="219.23" y="1567.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.5" y="997" width="0.2" height="15.0" fill="rgb(231,10,38)" rx="2" ry="2" />
<text  x="13.45" y="1007.5" ></text>
</g>
<g >
<title>std::default_delete&lt;cql3::expr::expression::impl&gt;::operator (1 samples, 0.02%)</title><rect x="47.9" y="1701" width="0.2" height="15.0" fill="rgb(249,196,47)" rx="2" ry="2" />
<text  x="50.89" y="1711.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (3 samples, 0.06%)</title><rect x="901.6" y="1717" width="0.7" height="15.0" fill="rgb(251,198,2)" rx="2" ry="2" />
<text  x="904.64" y="1727.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.02%)</title><rect x="586.3" y="1733" width="0.2" height="15.0" fill="rgb(250,177,9)" rx="2" ry="2" />
<text  x="589.27" y="1743.5" ></text>
</g>
<g >
<title>__errno_location (1 samples, 0.02%)</title><rect x="1189.5" y="1973" width="0.3" height="15.0" fill="rgb(235,198,40)" rx="2" ry="2" />
<text  x="1192.55" y="1983.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::destroy&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="46.1" y="1701" width="0.2" height="15.0" fill="rgb(213,227,54)" rx="2" ry="2" />
<text  x="49.07" y="1711.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value_view, std::allocator&lt;cql3::raw_value_view&gt; &gt;::emplace_back&lt;cql3::raw_value_view&gt; (11 samples, 0.21%)</title><rect x="861.7" y="1813" width="2.5" height="15.0" fill="rgb(213,181,21)" rx="2" ry="2" />
<text  x="864.71" y="1823.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (7 samples, 0.13%)</title><rect x="779.1" y="1749" width="1.6" height="15.0" fill="rgb(242,167,30)" rx="2" ry="2" />
<text  x="782.12" y="1759.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (3 samples, 0.06%)</title><rect x="914.3" y="1781" width="0.7" height="15.0" fill="rgb(233,196,32)" rx="2" ry="2" />
<text  x="917.34" y="1791.5" ></text>
</g>
<g >
<title>cql3::statements::raw::select_statement::prepare (1 samples, 0.02%)</title><rect x="11.4" y="1701" width="0.2" height="15.0" fill="rgb(226,72,19)" rx="2" ry="2" />
<text  x="14.36" y="1711.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::get_error (1 samples, 0.02%)</title><rect x="41.8" y="1765" width="0.2" height="15.0" fill="rgb(209,38,18)" rx="2" ry="2" />
<text  x="44.76" y="1775.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;query::result_memory_limiter::new_data_read (1 samples, 0.02%)</title><rect x="135.0" y="1877" width="0.2" height="15.0" fill="rgb(231,156,52)" rx="2" ry="2" />
<text  x="138.01" y="1887.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::resize (2 samples, 0.04%)</title><rect x="79.9" y="1893" width="0.4" height="15.0" fill="rgb(233,64,14)" rx="2" ry="2" />
<text  x="82.88" y="1903.5" ></text>
</g>
<g >
<title>cql3::raw_value::make_value (22 samples, 0.42%)</title><rect x="900.0" y="1733" width="5.0" height="15.0" fill="rgb(220,56,48)" rx="2" ry="2" />
<text  x="903.05" y="1743.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="187.9" y="1653" width="0.2" height="15.0" fill="rgb(214,13,29)" rx="2" ry="2" />
<text  x="190.87" y="1663.5" ></text>
</g>
<g >
<title>ser::mutation_partition_view::range_tombstones (1 samples, 0.02%)</title><rect x="1123.5" y="1653" width="0.3" height="15.0" fill="rgb(209,55,38)" rx="2" ry="2" />
<text  x="1126.52" y="1663.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;query::result_digest, 3ul&gt;::emplace_back&lt;query::result_digest const&gt; (1 samples, 0.02%)</title><rect x="724.7" y="1861" width="0.2" height="15.0" fill="rgb(241,5,12)" rx="2" ry="2" />
<text  x="727.67" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.5" y="901" width="0.2" height="15.0" fill="rgb(214,201,48)" rx="2" ry="2" />
<text  x="13.45" y="911.5" ></text>
</g>
<g >
<title>cql3::query_options::query_options (1 samples, 0.02%)</title><rect x="739.4" y="1877" width="0.2" height="15.0" fill="rgb(234,227,48)" rx="2" ry="2" />
<text  x="742.42" y="1887.5" ></text>
</g>
<g >
<title>std::make_unique&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;, seastar::lw_shared_ptr&lt;schema const&gt;, reader_permit, dht::decorated_key, partition_snapshot_ptr&amp;, query::clustering_key_filter_ranges, bool&amp;, logalloc::region&amp;, logalloc::allocating_section&amp;, boost::any, memtable&amp;&gt; (86 samples, 1.65%)</title><rect x="512.5" y="1733" width="19.5" height="15.0" fill="rgb(221,50,9)" rx="2" ry="2" />
<text  x="515.54" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_List_node_base::_M_transfer (4 samples, 0.08%)</title><rect x="184.5" y="1669" width="0.9" height="15.0" fill="rgb(245,115,39)" rx="2" ry="2" />
<text  x="187.47" y="1679.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::alloc (1 samples, 0.02%)</title><rect x="878.3" y="1637" width="0.2" height="15.0" fill="rgb(208,122,12)" rx="2" ry="2" />
<text  x="881.27" y="1647.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::guard (1 samples, 0.02%)</title><rect x="506.0" y="1749" width="0.2" height="15.0" fill="rgb(212,33,37)" rx="2" ry="2" />
<text  x="508.96" y="1759.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::RecognizerSharedState (2 samples, 0.04%)</title><rect x="20.2" y="1765" width="0.5" height="15.0" fill="rgb(245,37,10)" rx="2" ry="2" />
<text  x="23.21" y="1775.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::get_promise (3 samples, 0.06%)</title><rect x="843.6" y="1845" width="0.6" height="15.0" fill="rgb(237,30,53)" rx="2" ry="2" />
<text  x="846.56" y="1855.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;partition_key, false, false&gt;::_Optional_base (1 samples, 0.02%)</title><rect x="1063.4" y="1701" width="0.2" height="15.0" fill="rgb(215,221,41)" rx="2" ry="2" />
<text  x="1066.40" y="1711.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_Vector_impl::_Vector_impl (1 samples, 0.02%)</title><rect x="58.1" y="1717" width="0.2" height="15.0" fill="rgb(253,207,33)" rx="2" ry="2" />
<text  x="61.10" y="1727.5" ></text>
</g>
<g >
<title>allocation_strategy::construct&lt;partition_version, mutation_partition&gt; (1 samples, 0.02%)</title><rect x="11.1" y="1925" width="0.3" height="15.0" fill="rgb(234,149,15)" rx="2" ry="2" />
<text  x="14.13" y="1935.5" ></text>
</g>
<g >
<title>std::operator+ (2 samples, 0.04%)</title><rect x="45.6" y="1605" width="0.5" height="15.0" fill="rgb(226,213,38)" rx="2" ry="2" />
<text  x="48.62" y="1615.5" ></text>
</g>
<g >
<title>mutation_partition::clear_gently (1 samples, 0.02%)</title><rect x="84.4" y="1925" width="0.2" height="15.0" fill="rgb(252,199,28)" rx="2" ry="2" />
<text  x="87.42" y="1935.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.02%)</title><rect x="10.5" y="181" width="0.2" height="15.0" fill="rgb(212,203,36)" rx="2" ry="2" />
<text  x="13.45" y="191.5" ></text>
</g>
<g >
<title>seastar::syscall_work_queue::work_item_returning&lt;seastar::syscall_result&lt;int&gt; &gt;::process (1 samples, 0.02%)</title><rect x="1189.5" y="1989" width="0.3" height="15.0" fill="rgb(244,72,2)" rx="2" ry="2" />
<text  x="1192.55" y="1999.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;service::never_speculating_read_executor, true&gt;::make&lt;seastar::lw_shared_ptr&lt;schema const&gt;&amp;, seastar::lw_shared_ptr&lt;table&gt;&amp;, seastar::shared_ptr&lt;service::storage_proxy&gt;&amp;, seastar::lw_shared_ptr&lt;query::read_command&gt;&amp;, nonwrapping_interval&lt;dht::ring_position&gt;, db::consistency_level&amp;, utils::small_vector&lt;gms::inet_address, 3ul&gt;, tracing::trace_state_ptr, service_permit&gt; (36 samples, 0.69%)</title><rect x="1057.5" y="1765" width="8.2" height="15.0" fill="rgb(214,81,38)" rx="2" ry="2" />
<text  x="1060.50" y="1775.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.04%)</title><rect x="44.0" y="1685" width="0.5" height="15.0" fill="rgb(245,91,45)" rx="2" ry="2" />
<text  x="47.03" y="1695.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="54.2" y="1621" width="0.3" height="15.0" fill="rgb(249,221,22)" rx="2" ry="2" />
<text  x="57.24" y="1631.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::execute (26 samples, 0.50%)</title><rect x="704.9" y="1893" width="5.9" height="15.0" fill="rgb(233,35,10)" rx="2" ry="2" />
<text  x="707.93" y="1903.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.02%)</title><rect x="700.8" y="1829" width="0.3" height="15.0" fill="rgb(234,121,45)" rx="2" ry="2" />
<text  x="703.85" y="1839.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.02%)</title><rect x="47.4" y="1733" width="0.3" height="15.0" fill="rgb(222,58,42)" rx="2" ry="2" />
<text  x="50.44" y="1743.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="38.4" y="1685" width="0.2" height="15.0" fill="rgb(250,43,8)" rx="2" ry="2" />
<text  x="41.36" y="1695.5" ></text>
</g>
<g >
<title>sstables::mc::writer::consume (2 samples, 0.04%)</title><rect x="83.3" y="1829" width="0.4" height="15.0" fill="rgb(208,144,35)" rx="2" ry="2" />
<text  x="86.28" y="1839.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_allocate_buckets (1 samples, 0.02%)</title><rect x="1148.0" y="1845" width="0.3" height="15.0" fill="rgb(231,130,30)" rx="2" ry="2" />
<text  x="1151.03" y="1855.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (32 samples, 0.62%)</title><rect x="1119.2" y="1797" width="7.3" height="15.0" fill="rgb(217,110,34)" rx="2" ry="2" />
<text  x="1122.21" y="1807.5" ></text>
</g>
<g >
<title>query::clustering_position_tracker&lt;query_result_builder&gt;::consume_new_partition (1 samples, 0.02%)</title><rect x="352.8" y="1637" width="0.2" height="15.0" fill="rgb(253,35,50)" rx="2" ry="2" />
<text  x="355.81" y="1647.5" ></text>
</g>
<g >
<title>validation::validate_column_family (1 samples, 0.02%)</title><rect x="76.9" y="1893" width="0.3" height="15.0" fill="rgb(247,114,36)" rx="2" ry="2" />
<text  x="79.93" y="1903.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (1 samples, 0.02%)</title><rect x="623.0" y="1845" width="0.3" height="15.0" fill="rgb(240,227,17)" rx="2" ry="2" />
<text  x="626.03" y="1855.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.04%)</title><rect x="736.5" y="1845" width="0.4" height="15.0" fill="rgb(205,160,45)" rx="2" ry="2" />
<text  x="739.47" y="1855.5" ></text>
</g>
<g >
<title>schema_mutations::partitioner (1 samples, 0.02%)</title><rect x="106.9" y="1749" width="0.2" height="15.0" fill="rgb(239,134,50)" rx="2" ry="2" />
<text  x="109.88" y="1759.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;gms::inet_address, std::pair&lt;gms::inet_address const, utils::UUID&gt;, std::allocator&lt;std::pair&lt;gms::inet_address const, utils::UUID&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;gms::inet_address&gt;, std::hash&lt;gms::inet_address&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (5 samples, 0.10%)</title><rect x="1142.6" y="1861" width="1.1" height="15.0" fill="rgb(210,219,27)" rx="2" ry="2" />
<text  x="1145.58" y="1871.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_map&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::at&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt; &gt; (17 samples, 0.33%)</title><rect x="835.6" y="1765" width="3.9" height="15.0" fill="rgb(219,172,26)" rx="2" ry="2" />
<text  x="838.61" y="1775.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cfName (1 samples, 0.02%)</title><rect x="700.8" y="1749" width="0.3" height="15.0" fill="rgb(210,72,39)" rx="2" ry="2" />
<text  x="703.85" y="1759.5" ></text>
</g>
<g >
<title>cql3::query_processor::prepare_internal (1 samples, 0.02%)</title><rect x="11.4" y="1717" width="0.2" height="15.0" fill="rgb(252,25,38)" rx="2" ry="2" />
<text  x="14.36" y="1727.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt;::basic_regex&lt;char const*&gt; (1 samples, 0.02%)</title><rect x="11.4" y="1573" width="0.2" height="15.0" fill="rgb(214,88,27)" rx="2" ry="2" />
<text  x="14.36" y="1583.5" ></text>
</g>
<g >
<title>mutation_querier::query_static_row (2 samples, 0.04%)</title><rect x="361.2" y="1589" width="0.5" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="364.21" y="1599.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::push_back (1 samples, 0.02%)</title><rect x="36.5" y="1765" width="0.3" height="15.0" fill="rgb(210,30,48)" rx="2" ry="2" />
<text  x="39.54" y="1775.5" ></text>
</g>
<g >
<title>allocation_strategy::alloc&lt;blob_storage&gt; (2 samples, 0.04%)</title><rect x="229.8" y="1509" width="0.5" height="15.0" fill="rgb(209,43,26)" rx="2" ry="2" />
<text  x="232.85" y="1519.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;clustering_key_prefix&gt;::_M_move_assign (5 samples, 0.10%)</title><rect x="557.2" y="1829" width="1.2" height="15.0" fill="rgb(248,55,28)" rx="2" ry="2" />
<text  x="560.23" y="1839.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (2 samples, 0.04%)</title><rect x="872.6" y="1925" width="0.4" height="15.0" fill="rgb(243,200,35)" rx="2" ry="2" />
<text  x="875.60" y="1935.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_read_executor (152 samples, 2.92%)</title><rect x="1047.1" y="1781" width="34.5" height="15.0" fill="rgb(222,161,35)" rx="2" ry="2" />
<text  x="1050.07" y="1791.5" >se..</text>
</g>
<g >
<title>seastar::shared_ptr_no_esft&lt;query::read_command&gt;::shared_ptr_no_esft&lt;utils::UUID const&amp;, utils::UUID, query::partition_slice, query::max_result_size, query::row_limit, query::partition_limit, std::chrono::time_point&lt;gc_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt; &gt;&amp;, std::optional&lt;tracing::trace_info&gt;, utils::UUID, seastar::bool_class&lt;query::is_first_page_tag&gt; const&amp;, long&gt; (16 samples, 0.31%)</title><rect x="1109.9" y="1829" width="3.6" height="15.0" fill="rgb(247,105,43)" rx="2" ry="2" />
<text  x="1112.91" y="1839.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (2 samples, 0.04%)</title><rect x="754.6" y="1797" width="0.5" height="15.0" fill="rgb(241,89,23)" rx="2" ry="2" />
<text  x="757.62" y="1807.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::insertStatement (1 samples, 0.02%)</title><rect x="700.8" y="1781" width="0.3" height="15.0" fill="rgb(207,34,6)" rx="2" ry="2" />
<text  x="703.85" y="1791.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.04%)</title><rect x="44.5" y="1701" width="0.4" height="15.0" fill="rgb(242,70,24)" rx="2" ry="2" />
<text  x="47.49" y="1711.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::abstract_read_executor&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="962.2" y="1797" width="0.2" height="15.0" fill="rgb(214,218,20)" rx="2" ry="2" />
<text  x="965.21" y="1807.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.02%)</title><rect x="11.6" y="1893" width="0.2" height="15.0" fill="rgb(241,179,32)" rx="2" ry="2" />
<text  x="14.59" y="1903.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (3 samples, 0.06%)</title><rect x="78.3" y="1669" width="0.7" height="15.0" fill="rgb(249,58,40)" rx="2" ry="2" />
<text  x="81.29" y="1679.5" ></text>
</g>
<g >
<title>seastar::future&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry_ptr&gt;::then_impl&lt;utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (11 samples, 0.21%)</title><rect x="756.2" y="1797" width="2.5" height="15.0" fill="rgb(251,42,29)" rx="2" ry="2" />
<text  x="759.21" y="1807.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::~holder (1 samples, 0.02%)</title><rect x="580.6" y="1717" width="0.2" height="15.0" fill="rgb(217,55,49)" rx="2" ry="2" />
<text  x="583.60" y="1727.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::add_data (20 samples, 0.38%)</title><rect x="720.4" y="1877" width="4.5" height="15.0" fill="rgb(218,135,4)" rx="2" ry="2" />
<text  x="723.36" y="1887.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_range_tombstone (24 samples, 0.46%)</title><rect x="266.1" y="1653" width="5.5" height="15.0" fill="rgb(207,223,11)" rx="2" ry="2" />
<text  x="269.15" y="1663.5" ></text>
</g>
<g >
<title>mutation_reader_merger::~mutation_reader_merger (21 samples, 0.40%)</title><rect x="590.4" y="1797" width="4.7" height="15.0" fill="rgb(215,29,22)" rx="2" ry="2" />
<text  x="593.36" y="1807.5" ></text>
</g>
<g >
<title>query_result_builder::consume_new_partition (26 samples, 0.50%)</title><rect x="346.2" y="1621" width="5.9" height="15.0" fill="rgb(241,104,8)" rx="2" ry="2" />
<text  x="349.24" y="1631.5" ></text>
</g>
<g >
<title>posix_memalign (1 samples, 0.02%)</title><rect x="231.4" y="1493" width="0.3" height="15.0" fill="rgb(231,157,37)" rx="2" ry="2" />
<text  x="234.43" y="1503.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::has_available_units (1 samples, 0.02%)</title><rect x="418.8" y="1621" width="0.3" height="15.0" fill="rgb(219,80,43)" rx="2" ry="2" />
<text  x="421.84" y="1631.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.02%)</title><rect x="47.2" y="1621" width="0.2" height="15.0" fill="rgb(216,128,52)" rx="2" ry="2" />
<text  x="50.21" y="1631.5" ></text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::EqualElement&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt;&amp;&gt; (5 samples, 0.10%)</title><rect x="777.8" y="1765" width="1.1" height="15.0" fill="rgb(212,89,14)" rx="2" ry="2" />
<text  x="780.76" y="1775.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::attributes::raw, std::default_delete&lt;cql3::attributes::raw&gt; &gt;::unique_ptr (1 samples, 0.02%)</title><rect x="61.7" y="1781" width="0.3" height="15.0" fill="rgb(253,43,1)" rx="2" ry="2" />
<text  x="64.73" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.5" y="773" width="0.2" height="15.0" fill="rgb(231,222,10)" rx="2" ry="2" />
<text  x="13.45" y="783.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;reader_permit::impl, true&gt;::make&lt;reader_concurrency_semaphore&amp;, schema const* const&amp;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;&amp;, reader_resources&amp;, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;&amp;&gt; (12 samples, 0.23%)</title><rect x="1028.2" y="1653" width="2.8" height="15.0" fill="rgb(234,30,23)" rx="2" ry="2" />
<text  x="1031.23" y="1663.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::operator== (1 samples, 0.02%)</title><rect x="761.9" y="1717" width="0.2" height="15.0" fill="rgb(237,192,20)" rx="2" ry="2" />
<text  x="764.88" y="1727.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::contains&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (9 samples, 0.17%)</title><rect x="852.2" y="1829" width="2.0" height="15.0" fill="rgb(239,131,52)" rx="2" ry="2" />
<text  x="855.18" y="1839.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.02%)</title><rect x="59.2" y="1621" width="0.3" height="15.0" fill="rgb(242,190,40)" rx="2" ry="2" />
<text  x="62.23" y="1631.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;bool  (1 samples, 0.02%)</title><rect x="630.5" y="1813" width="0.2" height="15.0" fill="rgb(236,45,44)" rx="2" ry="2" />
<text  x="633.52" y="1823.5" ></text>
</g>
<g >
<title>reader_permit::consume_memory (4 samples, 0.08%)</title><rect x="525.7" y="1637" width="0.9" height="15.0" fill="rgb(224,216,6)" rx="2" ry="2" />
<text  x="528.70" y="1647.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::abstract_read_executor&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="1161.6" y="1877" width="0.3" height="15.0" fill="rgb(227,48,17)" rx="2" ry="2" />
<text  x="1164.64" y="1887.5" ></text>
</g>
<g >
<title>seastar::schedule_urgent (1 samples, 0.02%)</title><rect x="682.2" y="1893" width="0.3" height="15.0" fill="rgb(233,138,17)" rx="2" ry="2" />
<text  x="685.24" y="1903.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;schema_registry_entry&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;schema_registry_entry&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (9 samples, 0.17%)</title><rect x="970.6" y="1749" width="2.0" height="15.0" fill="rgb(213,32,20)" rx="2" ry="2" />
<text  x="973.61" y="1759.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::get_mutations (7 samples, 0.13%)</title><rect x="878.0" y="1813" width="1.6" height="15.0" fill="rgb(226,127,32)" rx="2" ry="2" />
<text  x="881.04" y="1823.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.08%)</title><rect x="534.8" y="1749" width="0.9" height="15.0" fill="rgb(240,151,33)" rx="2" ry="2" />
<text  x="537.77" y="1759.5" ></text>
</g>
<g >
<title>posix_memalign (12 samples, 0.23%)</title><rect x="242.8" y="1509" width="2.7" height="15.0" fill="rgb(214,40,40)" rx="2" ry="2" />
<text  x="245.78" y="1519.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reserve&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::partition_snapshot_flat_reader&lt;schema const&amp;, flush_memory_accounter&amp;&gt; (1 samples, 0.02%)</title><rect x="81.7" y="1781" width="0.2" height="15.0" fill="rgb(219,87,9)" rx="2" ry="2" />
<text  x="84.69" y="1791.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_pausable&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (1 samples, 0.02%)</title><rect x="138.2" y="1701" width="0.2" height="15.0" fill="rgb(232,22,40)" rx="2" ry="2" />
<text  x="141.19" y="1711.5" ></text>
</g>
<g >
<title>antlr3::IntStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::_LA (2 samples, 0.04%)</title><rect x="27.2" y="1685" width="0.5" height="15.0" fill="rgb(230,218,47)" rx="2" ry="2" />
<text  x="30.24" y="1695.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (2 samples, 0.04%)</title><rect x="960.6" y="1765" width="0.5" height="15.0" fill="rgb(230,153,11)" rx="2" ry="2" />
<text  x="963.62" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.5" y="1125" width="0.2" height="15.0" fill="rgb(211,73,15)" rx="2" ry="2" />
<text  x="13.45" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;seastar::future&lt;void&gt; &gt;  (1 samples, 0.02%)</title><rect x="1165.3" y="1893" width="0.2" height="15.0" fill="rgb(223,136,50)" rx="2" ry="2" />
<text  x="1168.27" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.5" y="1461" width="0.2" height="15.0" fill="rgb(234,119,7)" rx="2" ry="2" />
<text  x="13.45" y="1471.5" ></text>
</g>
<g >
<title>dht::i_partitioner::decorate_key (1 samples, 0.02%)</title><rect x="1119.2" y="1653" width="0.2" height="15.0" fill="rgb(254,209,36)" rx="2" ry="2" />
<text  x="1122.21" y="1663.5" ></text>
</g>
<g >
<title>cql3::raw_value::to_view (4 samples, 0.08%)</title><rect x="860.6" y="1813" width="0.9" height="15.0" fill="rgb(226,160,34)" rx="2" ry="2" />
<text  x="863.57" y="1823.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::take_value (2 samples, 0.04%)</title><rect x="322.2" y="1781" width="0.4" height="15.0" fill="rgb(233,94,10)" rx="2" ry="2" />
<text  x="325.19" y="1791.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.02%)</title><rect x="73.1" y="1589" width="0.2" height="15.0" fill="rgb(241,226,8)" rx="2" ry="2" />
<text  x="76.07" y="1599.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::handle_exception&lt;cql3::query_processor::execute_prepared (2 samples, 0.04%)</title><rect x="767.3" y="1829" width="0.5" height="15.0" fill="rgb(226,224,36)" rx="2" ry="2" />
<text  x="770.32" y="1839.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (2 samples, 0.04%)</title><rect x="332.6" y="1717" width="0.5" height="15.0" fill="rgb(245,40,5)" rx="2" ry="2" />
<text  x="335.62" y="1727.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.08%)</title><rect x="457.6" y="1701" width="0.9" height="15.0" fill="rgb(215,161,27)" rx="2" ry="2" />
<text  x="460.63" y="1711.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;::operator== (2 samples, 0.04%)</title><rect x="762.1" y="1717" width="0.5" height="15.0" fill="rgb(230,93,19)" rx="2" ry="2" />
<text  x="765.11" y="1727.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::guard (1 samples, 0.02%)</title><rect x="192.2" y="1701" width="0.2" height="15.0" fill="rgb(224,32,2)" rx="2" ry="2" />
<text  x="195.18" y="1711.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment (21 samples, 0.40%)</title><rect x="201.0" y="1653" width="4.8" height="15.0" fill="rgb(251,96,11)" rx="2" ry="2" />
<text  x="204.03" y="1663.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.02%)</title><rect x="11.6" y="2005" width="0.2" height="15.0" fill="rgb(230,138,4)" rx="2" ry="2" />
<text  x="14.59" y="2015.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::find&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (14 samples, 0.27%)</title><rect x="835.8" y="1749" width="3.2" height="15.0" fill="rgb(254,163,53)" rx="2" ry="2" />
<text  x="838.84" y="1759.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (1 samples, 0.02%)</title><rect x="1164.1" y="1845" width="0.3" height="15.0" fill="rgb(242,1,32)" rx="2" ry="2" />
<text  x="1167.14" y="1855.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt;::_M_reset (3 samples, 0.06%)</title><rect x="586.5" y="1733" width="0.7" height="15.0" fill="rgb(247,20,12)" rx="2" ry="2" />
<text  x="589.50" y="1743.5" ></text>
</g>
<g >
<title>partition_entry::evict (1 samples, 0.02%)</title><rect x="84.4" y="1957" width="0.2" height="15.0" fill="rgb(241,152,49)" rx="2" ry="2" />
<text  x="87.42" y="1967.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, enum_set&lt;super_enum&lt;auth::permission,  (59 samples, 1.13%)</title><rect x="804.5" y="1653" width="13.4" height="15.0" fill="rgb(248,156,36)" rx="2" ry="2" />
<text  x="807.53" y="1663.5" ></text>
</g>
<g >
<title>single_node_cql_env::do_with (1 samples, 0.02%)</title><rect x="11.6" y="1957" width="0.2" height="15.0" fill="rgb(243,90,36)" rx="2" ry="2" />
<text  x="14.59" y="1967.5" ></text>
</g>
<g >
<title>utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (4 samples, 0.08%)</title><rect x="78.1" y="1701" width="0.9" height="15.0" fill="rgb(214,112,26)" rx="2" ry="2" />
<text  x="81.06" y="1711.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.02%)</title><rect x="698.8" y="1749" width="0.2" height="15.0" fill="rgb(236,91,6)" rx="2" ry="2" />
<text  x="701.81" y="1759.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (3 samples, 0.06%)</title><rect x="764.6" y="1685" width="0.7" height="15.0" fill="rgb(216,194,54)" rx="2" ry="2" />
<text  x="767.60" y="1695.5" ></text>
</g>
<g >
<title>global_schema_ptr::global_schema_ptr (3 samples, 0.06%)</title><rect x="106.7" y="1845" width="0.6" height="15.0" fill="rgb(250,157,2)" rx="2" ry="2" />
<text  x="109.65" y="1855.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;void&gt;::satisfy_with_result_of&lt;seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::then_wrapped_nrvo&lt;void, service::abstract_read_executor::make_data_requests (1 samples, 0.02%)</title><rect x="733.3" y="1925" width="0.2" height="15.0" fill="rgb(213,60,53)" rx="2" ry="2" />
<text  x="736.29" y="1935.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="72.2" y="1765" width="0.2" height="15.0" fill="rgb(205,86,41)" rx="2" ry="2" />
<text  x="75.16" y="1775.5" ></text>
</g>
<g >
<title>std::__optional_hash_call_base&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, true&gt;::operator (1 samples, 0.02%)</title><rect x="827.9" y="1733" width="0.2" height="15.0" fill="rgb(238,189,38)" rx="2" ry="2" />
<text  x="830.90" y="1743.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::create_keyspace_statement, std::default_delete&lt;cql3::statements::create_keyspace_statement&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="63.3" y="1797" width="0.2" height="15.0" fill="rgb(210,49,38)" rx="2" ry="2" />
<text  x="66.32" y="1807.5" ></text>
</g>
<g >
<title>single_node_cql_env::do_with (1 samples, 0.02%)</title><rect x="730.3" y="1733" width="0.3" height="15.0" fill="rgb(253,139,1)" rx="2" ry="2" />
<text  x="733.34" y="1743.5" ></text>
</g>
<g >
<title>seastar::internal::future_base::do_wait (1 samples, 0.02%)</title><rect x="80.3" y="1957" width="0.3" height="15.0" fill="rgb(208,127,47)" rx="2" ry="2" />
<text  x="83.33" y="1967.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="847.9" y="1797" width="0.2" height="15.0" fill="rgb(225,219,53)" rx="2" ry="2" />
<text  x="850.87" y="1807.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.02%)</title><rect x="40.9" y="1749" width="0.2" height="15.0" fill="rgb(249,173,12)" rx="2" ry="2" />
<text  x="43.86" y="1759.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="59.0" y="1685" width="0.2" height="15.0" fill="rgb(251,220,1)" rx="2" ry="2" />
<text  x="62.01" y="1695.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;std::unordered_map&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, std::optional&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;, std::hash&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, std::equal_to&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, std::optional&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt; &gt; &gt; &gt;::_M_reset (1 samples, 0.02%)</title><rect x="880.1" y="1829" width="0.2" height="15.0" fill="rgb(229,131,6)" rx="2" ry="2" />
<text  x="883.08" y="1839.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.08%)</title><rect x="868.1" y="1861" width="0.9" height="15.0" fill="rgb(210,152,5)" rx="2" ry="2" />
<text  x="871.06" y="1871.5" ></text>
</g>
<g >
<title>seastar::file_impl::dma_read_bulk (1 samples, 0.02%)</title><rect x="17.9" y="1445" width="0.3" height="15.0" fill="rgb(252,125,52)" rx="2" ry="2" />
<text  x="20.94" y="1455.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt;::construct&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; (1 samples, 0.02%)</title><rect x="264.1" y="1557" width="0.2" height="15.0" fill="rgb(251,129,0)" rx="2" ry="2" />
<text  x="267.10" y="1567.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (1 samples, 0.02%)</title><rect x="753.3" y="1829" width="0.2" height="15.0" fill="rgb(229,227,26)" rx="2" ry="2" />
<text  x="756.26" y="1839.5" ></text>
</g>
<g >
<title>std::default_delete&lt;cql3::expr::expression::impl&gt;::operator (1 samples, 0.02%)</title><rect x="73.3" y="1701" width="0.2" height="15.0" fill="rgb(227,7,43)" rx="2" ry="2" />
<text  x="76.30" y="1711.5" ></text>
</g>
<g >
<title>std::type_info::operator== (1 samples, 0.02%)</title><rect x="1163.9" y="1829" width="0.2" height="15.0" fill="rgb(211,187,16)" rx="2" ry="2" />
<text  x="1166.91" y="1839.5" ></text>
</g>
<g >
<title>std::construct_at&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (4 samples, 0.08%)</title><rect x="22.7" y="1653" width="0.9" height="15.0" fill="rgb(234,23,10)" rx="2" ry="2" />
<text  x="25.71" y="1663.5" ></text>
</g>
<g >
<title>ser::serializer&lt;ser::deletable_row_view&gt;::skip&lt;seastar::simple_memory_input_stream&gt; (1 samples, 0.02%)</title><rect x="1123.8" y="1589" width="0.2" height="15.0" fill="rgb(234,121,49)" rx="2" ry="2" />
<text  x="1126.75" y="1599.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (1 samples, 0.02%)</title><rect x="599.4" y="1845" width="0.3" height="15.0" fill="rgb(237,185,48)" rx="2" ry="2" />
<text  x="602.43" y="1855.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (1 samples, 0.02%)</title><rect x="1106.5" y="1829" width="0.2" height="15.0" fill="rgb(220,177,25)" rx="2" ry="2" />
<text  x="1109.51" y="1839.5" ></text>
</g>
<g >
<title>double_decker&lt;long, memtable_entry, dht::raw_token_less_comparator, dht::ring_position_comparator, 16,  (6 samples, 0.12%)</title><rect x="1119.4" y="1637" width="1.4" height="15.0" fill="rgb(228,164,2)" rx="2" ry="2" />
<text  x="1122.44" y="1647.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (1 samples, 0.02%)</title><rect x="876.5" y="1765" width="0.2" height="15.0" fill="rgb(208,63,41)" rx="2" ry="2" />
<text  x="879.45" y="1775.5" ></text>
</g>
<g >
<title>service::client_state::ensure_has_permission (156 samples, 3.00%)</title><rect x="791.1" y="1781" width="35.4" height="15.0" fill="rgb(220,29,29)" rx="2" ry="2" />
<text  x="794.15" y="1791.5" >se..</text>
</g>
<g >
<title>seastar::future_state&lt;service::digest_read_result&gt;::set&lt;service::digest_read_result&gt; (3 samples, 0.06%)</title><rect x="722.9" y="1829" width="0.6" height="15.0" fill="rgb(237,130,30)" rx="2" ry="2" />
<text  x="725.86" y="1839.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::free_span (1 samples, 0.02%)</title><rect x="101.0" y="1877" width="0.2" height="15.0" fill="rgb(227,73,46)" rx="2" ry="2" />
<text  x="103.98" y="1887.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::construct&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; const&amp;&gt; (1 samples, 0.02%)</title><rect x="57.4" y="1701" width="0.2" height="15.0" fill="rgb(217,172,46)" rx="2" ry="2" />
<text  x="60.42" y="1711.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="151.3" y="1845" width="0.3" height="15.0" fill="rgb(206,196,22)" rx="2" ry="2" />
<text  x="154.35" y="1855.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="602.8" y="1813" width="0.3" height="15.0" fill="rgb(226,169,29)" rx="2" ry="2" />
<text  x="605.84" y="1823.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.02%)</title><rect x="57.2" y="1621" width="0.2" height="15.0" fill="rgb(205,23,14)" rx="2" ry="2" />
<text  x="60.19" y="1631.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (1 samples, 0.02%)</title><rect x="768.0" y="1813" width="0.2" height="15.0" fill="rgb(217,48,35)" rx="2" ry="2" />
<text  x="771.00" y="1823.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (1 samples, 0.02%)</title><rect x="701.3" y="1573" width="0.2" height="15.0" fill="rgb(230,113,8)" rx="2" ry="2" />
<text  x="704.30" y="1583.5" ></text>
</g>
<g >
<title>reader_permit::consume (1 samples, 0.02%)</title><rect x="256.4" y="1557" width="0.2" height="15.0" fill="rgb(220,155,42)" rx="2" ry="2" />
<text  x="259.39" y="1567.5" ></text>
</g>
<g >
<title>non-virtual thunk to sstables::mx::mx_sstable_mutation_reader::fill_buffer (1 samples, 0.02%)</title><rect x="17.9" y="1733" width="0.3" height="15.0" fill="rgb(235,122,8)" rx="2" ry="2" />
<text  x="20.94" y="1743.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::operator (2 samples, 0.04%)</title><rect x="305.2" y="1765" width="0.4" height="15.0" fill="rgb(220,217,16)" rx="2" ry="2" />
<text  x="308.17" y="1775.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::operator== (1 samples, 0.02%)</title><rect x="813.8" y="1573" width="0.3" height="15.0" fill="rgb(248,176,34)" rx="2" ry="2" />
<text  x="816.83" y="1583.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (21 samples, 0.40%)</title><rect x="488.3" y="1685" width="4.7" height="15.0" fill="rgb(238,89,36)" rx="2" ry="2" />
<text  x="491.26" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.5" y="1877" width="0.2" height="15.0" fill="rgb(254,104,22)" rx="2" ry="2" />
<text  x="13.45" y="1887.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (1 samples, 0.02%)</title><rect x="204.9" y="1637" width="0.2" height="15.0" fill="rgb(244,62,33)" rx="2" ry="2" />
<text  x="207.89" y="1647.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (2 samples, 0.04%)</title><rect x="1037.1" y="1669" width="0.4" height="15.0" fill="rgb(234,12,49)" rx="2" ry="2" />
<text  x="1040.08" y="1679.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::take_value (1 samples, 0.02%)</title><rect x="190.8" y="1701" width="0.2" height="15.0" fill="rgb(248,68,6)" rx="2" ry="2" />
<text  x="193.82" y="1711.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="842.2" y="1765" width="0.2" height="15.0" fill="rgb(230,42,50)" rx="2" ry="2" />
<text  x="845.19" y="1775.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::_M_create_storage (4 samples, 0.08%)</title><rect x="937.9" y="1813" width="0.9" height="15.0" fill="rgb(252,198,26)" rx="2" ry="2" />
<text  x="940.94" y="1823.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (4 samples, 0.08%)</title><rect x="575.2" y="1733" width="0.9" height="15.0" fill="rgb(236,179,41)" rx="2" ry="2" />
<text  x="578.16" y="1743.5" ></text>
</g>
<g >
<title>seastar::do_until&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::fill_buffer (4 samples, 0.08%)</title><rect x="82.4" y="1781" width="0.9" height="15.0" fill="rgb(213,29,38)" rx="2" ry="2" />
<text  x="85.37" y="1791.5" ></text>
</g>
<g >
<title>basic_atomic_cell_view&lt; (1 samples, 0.02%)</title><rect x="1130.6" y="1525" width="0.2" height="15.0" fill="rgb(240,186,8)" rx="2" ry="2" />
<text  x="1133.56" y="1535.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (1 samples, 0.02%)</title><rect x="334.7" y="1669" width="0.2" height="15.0" fill="rgb(234,183,37)" rx="2" ry="2" />
<text  x="337.66" y="1679.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::close (1 samples, 0.02%)</title><rect x="598.8" y="1829" width="0.2" height="15.0" fill="rgb(243,5,4)" rx="2" ry="2" />
<text  x="601.75" y="1839.5" ></text>
</g>
<g >
<title>frozen_mutation::unfreeze (2 samples, 0.04%)</title><rect x="107.8" y="1909" width="0.4" height="15.0" fill="rgb(235,66,47)" rx="2" ry="2" />
<text  x="110.79" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_nodes (11 samples, 0.21%)</title><rect x="676.1" y="1877" width="2.5" height="15.0" fill="rgb(218,62,18)" rx="2" ry="2" />
<text  x="679.12" y="1887.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (2 samples, 0.04%)</title><rect x="78.3" y="1653" width="0.4" height="15.0" fill="rgb(225,126,10)" rx="2" ry="2" />
<text  x="81.29" y="1663.5" ></text>
</g>
<g >
<title>managed_bytes::operator= (3 samples, 0.06%)</title><rect x="1104.7" y="1845" width="0.7" height="15.0" fill="rgb(253,118,39)" rx="2" ry="2" />
<text  x="1107.69" y="1855.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="794.3" y="1717" width="0.2" height="15.0" fill="rgb(236,114,39)" rx="2" ry="2" />
<text  x="797.32" y="1727.5" ></text>
</g>
<g >
<title>database::find_uuid (18 samples, 0.35%)</title><rect x="835.6" y="1781" width="4.1" height="15.0" fill="rgb(214,33,27)" rx="2" ry="2" />
<text  x="838.61" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.5" y="1749" width="0.2" height="15.0" fill="rgb(209,142,50)" rx="2" ry="2" />
<text  x="13.45" y="1759.5" ></text>
</g>
<g >
<title>mutation_querier::consume (1 samples, 0.02%)</title><rect x="699.7" y="1701" width="0.2" height="15.0" fill="rgb(237,38,26)" rx="2" ry="2" />
<text  x="702.71" y="1711.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="633.0" y="1845" width="0.2" height="15.0" fill="rgb(241,13,16)" rx="2" ry="2" />
<text  x="636.01" y="1855.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::small_vector (1 samples, 0.02%)</title><rect x="468.1" y="1685" width="0.2" height="15.0" fill="rgb(217,16,41)" rx="2" ry="2" />
<text  x="471.07" y="1695.5" ></text>
</g>
<g >
<title>cql3::constants::setter::execute (4 samples, 0.08%)</title><rect x="878.0" y="1733" width="0.9" height="15.0" fill="rgb(240,146,18)" rx="2" ry="2" />
<text  x="881.04" y="1743.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (1,216 samples, 23.38%)</title><rect x="163.1" y="1845" width="275.9" height="15.0" fill="rgb(222,84,36)" rx="2" ry="2" />
<text  x="166.14" y="1855.5" >query::consume_page&lt;</text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::remove_if&lt;row::compact_and_expire (2 samples, 0.04%)</title><rect x="352.4" y="1637" width="0.4" height="15.0" fill="rgb(228,142,18)" rx="2" ry="2" />
<text  x="355.36" y="1647.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::alloc (22 samples, 0.42%)</title><rect x="231.7" y="1493" width="5.0" height="15.0" fill="rgb(228,215,21)" rx="2" ry="2" />
<text  x="234.66" y="1503.5" ></text>
</g>
<g >
<title>bplus::tree&lt;long, intrusive_array&lt;memtable_entry&gt;, dht::raw_token_less_comparator, 16ul,  (49 samples, 0.94%)</title><rect x="482.1" y="1733" width="11.2" height="15.0" fill="rgb(246,129,39)" rx="2" ry="2" />
<text  x="485.14" y="1743.5" ></text>
</g>
<g >
<title>allocation_strategy::alloc&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::leaf_node&gt; (1 samples, 0.02%)</title><rect x="108.0" y="1797" width="0.2" height="15.0" fill="rgb(233,158,54)" rx="2" ry="2" />
<text  x="111.01" y="1807.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="1131.5" y="1461" width="0.2" height="15.0" fill="rgb(218,29,14)" rx="2" ry="2" />
<text  x="1134.47" y="1471.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_initialize_map (15 samples, 0.29%)</title><rect x="563.8" y="1797" width="3.4" height="15.0" fill="rgb(213,130,34)" rx="2" ry="2" />
<text  x="566.81" y="1807.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (2 samples, 0.04%)</title><rect x="205.8" y="1653" width="0.5" height="15.0" fill="rgb(217,182,13)" rx="2" ry="2" />
<text  x="208.80" y="1663.5" ></text>
</g>
<g >
<title>std::tuple&lt;cql3::statements::raw::select_statement*, std::default_delete&lt;cql3::statements::raw::select_statement&gt; &gt;::tuple&lt;true, true&gt; (1 samples, 0.02%)</title><rect x="64.9" y="1749" width="0.2" height="15.0" fill="rgb(207,216,53)" rx="2" ry="2" />
<text  x="67.90" y="1759.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.08%)</title><rect x="434.3" y="1749" width="0.9" height="15.0" fill="rgb(239,66,35)" rx="2" ry="2" />
<text  x="437.26" y="1759.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.02%)</title><rect x="1035.5" y="1701" width="0.2" height="15.0" fill="rgb(211,228,29)" rx="2" ry="2" />
<text  x="1038.50" y="1711.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;gms::inet_address, std::pair&lt;gms::inet_address const, utils::UUID&gt;, std::allocator&lt;std::pair&lt;gms::inet_address const, utils::UUID&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;gms::inet_address&gt;, std::hash&lt;gms::inet_address&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (1 samples, 0.02%)</title><rect x="1143.7" y="1877" width="0.2" height="15.0" fill="rgb(226,175,18)" rx="2" ry="2" />
<text  x="1146.72" y="1887.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, cql3::operation::set_value*, std::default_delete&lt;cql3::operation::set_value&gt; &gt; (1 samples, 0.02%)</title><rect x="56.5" y="1653" width="0.2" height="15.0" fill="rgb(246,199,53)" rx="2" ry="2" />
<text  x="59.51" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::~_Variant_storage (1 samples, 0.02%)</title><rect x="72.4" y="1765" width="0.2" height="15.0" fill="rgb(237,125,31)" rx="2" ry="2" />
<text  x="75.39" y="1775.5" ></text>
</g>
<g >
<title>utils::basic_ihistogram&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt; &gt;::mark&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; (10 samples, 0.19%)</title><rect x="691.8" y="1877" width="2.2" height="15.0" fill="rgb(245,82,32)" rx="2" ry="2" />
<text  x="694.77" y="1887.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::get_local_service (1 samples, 0.02%)</title><rect x="1036.9" y="1701" width="0.2" height="15.0" fill="rgb(218,84,33)" rx="2" ry="2" />
<text  x="1039.86" y="1711.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (2 samples, 0.04%)</title><rect x="50.4" y="1605" width="0.4" height="15.0" fill="rgb(238,47,7)" rx="2" ry="2" />
<text  x="53.38" y="1615.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (2 samples, 0.04%)</title><rect x="265.0" y="1589" width="0.5" height="15.0" fill="rgb(246,165,44)" rx="2" ry="2" />
<text  x="268.01" y="1599.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (2 samples, 0.04%)</title><rect x="44.0" y="1621" width="0.5" height="15.0" fill="rgb(213,137,52)" rx="2" ry="2" />
<text  x="47.03" y="1631.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_slice_or_needs_filtering (4 samples, 0.08%)</title><rect x="659.6" y="1845" width="0.9" height="15.0" fill="rgb(212,36,20)" rx="2" ry="2" />
<text  x="662.56" y="1855.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (3 samples, 0.06%)</title><rect x="78.3" y="1685" width="0.7" height="15.0" fill="rgb(249,104,52)" rx="2" ry="2" />
<text  x="81.29" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;column_definition const*, std::pair&lt;column_definition const* const, cql3::expr::expression&gt;, std::allocator&lt;std::pair&lt;column_definition const* const, cql3::expr::expression&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;column_definition const*&gt;, std::hash&lt;column_definition const*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::operator[] (1 samples, 0.02%)</title><rect x="74.2" y="1781" width="0.2" height="15.0" fill="rgb(213,169,42)" rx="2" ry="2" />
<text  x="77.21" y="1791.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (2 samples, 0.04%)</title><rect x="1102.0" y="1797" width="0.4" height="15.0" fill="rgb(205,141,38)" rx="2" ry="2" />
<text  x="1104.97" y="1807.5" ></text>
</g>
<g >
<title>seastar::internal::coroutine_traits_base&lt;service::storage_proxy_coordinator_query_result&gt;::promise_type::run_and_dispose (2 samples, 0.04%)</title><rect x="86.9" y="1941" width="0.5" height="15.0" fill="rgb(206,85,40)" rx="2" ry="2" />
<text  x="89.91" y="1951.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (1 samples, 0.02%)</title><rect x="876.7" y="1749" width="0.2" height="15.0" fill="rgb(219,34,28)" rx="2" ry="2" />
<text  x="879.68" y="1759.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (1 samples, 0.02%)</title><rect x="11.4" y="1333" width="0.2" height="15.0" fill="rgb(245,164,9)" rx="2" ry="2" />
<text  x="14.36" y="1343.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::~merging_reader (35 samples, 0.67%)</title><rect x="588.8" y="1813" width="7.9" height="15.0" fill="rgb(254,29,43)" rx="2" ry="2" />
<text  x="591.77" y="1823.5" ></text>
</g>
<g >
<title>std::apply&lt;service::client_state::check_has_permission (121 samples, 2.33%)</title><rect x="797.3" y="1749" width="27.4" height="15.0" fill="rgb(220,170,38)" rx="2" ry="2" />
<text  x="800.27" y="1759.5" >s..</text>
</g>
<g >
<title>database::apply (2 samples, 0.04%)</title><rect x="1128.1" y="1589" width="0.4" height="15.0" fill="rgb(247,102,35)" rx="2" ry="2" />
<text  x="1131.06" y="1599.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (1 samples, 0.02%)</title><rect x="1037.5" y="1701" width="0.3" height="15.0" fill="rgb(227,101,26)" rx="2" ry="2" />
<text  x="1040.54" y="1711.5" ></text>
</g>
<g >
<title>database::apply_with_commitlog (32 samples, 0.62%)</title><rect x="1119.2" y="1749" width="7.3" height="15.0" fill="rgb(242,142,6)" rx="2" ry="2" />
<text  x="1122.21" y="1759.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (1 samples, 0.02%)</title><rect x="16.1" y="1909" width="0.3" height="15.0" fill="rgb(246,119,22)" rx="2" ry="2" />
<text  x="19.13" y="1919.5" ></text>
</g>
<g >
<title>_ZN7seastar8futurizeIvE22satisfy_with_result_ofIZZNS_6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE14then_impl_nrvoIZNS9_14discard_resultEvEUlDpOT_E_NS3_IvEEEET0_OT_ENKUlONS_8internal22promise_base_with_typeIvEERSE_ONS_12future_stateIS8_EEE_clESM_SN_SQ_EUlvE_EEvSM_SI_ (2 samples, 0.04%)</title><rect x="92.6" y="1909" width="0.4" height="15.0" fill="rgb(214,13,13)" rx="2" ry="2" />
<text  x="95.58" y="1919.5" ></text>
</g>
<g >
<title>std::forward_as_tuple&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt; &gt; (1 samples, 0.02%)</title><rect x="822.9" y="1701" width="0.2" height="15.0" fill="rgb(222,26,47)" rx="2" ry="2" />
<text  x="825.91" y="1711.5" ></text>
</g>
<g >
<title>absl::container_internal::operator== (1 samples, 0.02%)</title><rect x="852.2" y="1813" width="0.2" height="15.0" fill="rgb(216,36,38)" rx="2" ry="2" />
<text  x="855.18" y="1823.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (2 samples, 0.04%)</title><rect x="994.9" y="1717" width="0.4" height="15.0" fill="rgb(237,55,9)" rx="2" ry="2" />
<text  x="997.88" y="1727.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (1 samples, 0.02%)</title><rect x="1088.6" y="1813" width="0.2" height="15.0" fill="rgb(228,28,25)" rx="2" ry="2" />
<text  x="1091.58" y="1823.5" ></text>
</g>
<g >
<title>std::hash&lt;auth::resource&gt;::operator (2 samples, 0.04%)</title><rect x="829.0" y="1781" width="0.5" height="15.0" fill="rgb(223,41,27)" rx="2" ry="2" />
<text  x="832.03" y="1791.5" ></text>
</g>
<g >
<title>service::storage_proxy::create_write_response_handler (2 samples, 0.04%)</title><rect x="1133.1" y="1621" width="0.4" height="15.0" fill="rgb(235,229,50)" rx="2" ry="2" />
<text  x="1136.05" y="1631.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::statement_restrictions (17 samples, 0.33%)</title><rect x="70.6" y="1829" width="3.8" height="15.0" fill="rgb(247,211,44)" rx="2" ry="2" />
<text  x="73.58" y="1839.5" ></text>
</g>
<g >
<title>seastar::semaphore_units&lt;seastar::semaphore_default_exception_factory, std::chrono::_V2::steady_clock&gt;::return_all (1 samples, 0.02%)</title><rect x="98.0" y="1861" width="0.3" height="15.0" fill="rgb(218,7,50)" rx="2" ry="2" />
<text  x="101.03" y="1871.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::future&lt;void&gt;  (32 samples, 0.62%)</title><rect x="1119.2" y="1781" width="7.3" height="15.0" fill="rgb(244,108,26)" rx="2" ry="2" />
<text  x="1122.21" y="1791.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (2 samples, 0.04%)</title><rect x="54.0" y="1637" width="0.5" height="15.0" fill="rgb(234,211,8)" rx="2" ry="2" />
<text  x="57.01" y="1647.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (1 samples, 0.02%)</title><rect x="697.0" y="1877" width="0.2" height="15.0" fill="rgb(208,197,37)" rx="2" ry="2" />
<text  x="699.99" y="1887.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="607.4" y="1813" width="0.2" height="15.0" fill="rgb(213,84,16)" rx="2" ry="2" />
<text  x="610.37" y="1823.5" ></text>
</g>
<g >
<title>schema::partition_key_columns (1 samples, 0.02%)</title><rect x="76.0" y="1877" width="0.2" height="15.0" fill="rgb(206,212,22)" rx="2" ry="2" />
<text  x="79.02" y="1887.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.02%)</title><rect x="42.7" y="1637" width="0.2" height="15.0" fill="rgb(220,163,20)" rx="2" ry="2" />
<text  x="45.67" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.5" y="581" width="0.2" height="15.0" fill="rgb(254,44,47)" rx="2" ry="2" />
<text  x="13.45" y="591.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (1 samples, 0.02%)</title><rect x="11.6" y="1925" width="0.2" height="15.0" fill="rgb(209,61,2)" rx="2" ry="2" />
<text  x="14.59" y="1935.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="84.2" y="1845" width="0.2" height="15.0" fill="rgb(236,33,45)" rx="2" ry="2" />
<text  x="87.19" y="1855.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;unsigned long&gt;::allocate (1 samples, 0.02%)</title><rect x="66.9" y="1845" width="0.3" height="15.0" fill="rgb(227,207,4)" rx="2" ry="2" />
<text  x="69.95" y="1855.5" ></text>
</g>
<g >
<title>service::storage_proxy::storage_proxy (1 samples, 0.02%)</title><rect x="17.5" y="1797" width="0.2" height="15.0" fill="rgb(216,73,53)" rx="2" ry="2" />
<text  x="20.49" y="1807.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::signal (1 samples, 0.02%)</title><rect x="579.5" y="1701" width="0.2" height="15.0" fill="rgb(228,216,52)" rx="2" ry="2" />
<text  x="582.47" y="1711.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (27 samples, 0.52%)</title><rect x="346.2" y="1637" width="6.2" height="15.0" fill="rgb(209,105,8)" rx="2" ry="2" />
<text  x="349.24" y="1647.5" ></text>
</g>
<g >
<title>__tls_init (4 samples, 0.08%)</title><rect x="546.1" y="1701" width="0.9" height="15.0" fill="rgb(240,96,30)" rx="2" ry="2" />
<text  x="549.12" y="1711.5" ></text>
</g>
<g >
<title>ser::read_frame_size&lt;seastar::simple_memory_input_stream&gt; (1 samples, 0.02%)</title><rect x="1123.8" y="1573" width="0.2" height="15.0" fill="rgb(247,104,1)" rx="2" ry="2" />
<text  x="1126.75" y="1583.5" ></text>
</g>
<g >
<title>std::apply&lt;auth::get_permissions (5 samples, 0.10%)</title><rect x="77.8" y="1781" width="1.2" height="15.0" fill="rgb(208,95,13)" rx="2" ry="2" />
<text  x="80.84" y="1791.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.04%)</title><rect x="50.4" y="1653" width="0.4" height="15.0" fill="rgb(250,58,25)" rx="2" ry="2" />
<text  x="53.38" y="1663.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (33 samples, 0.63%)</title><rect x="294.1" y="1717" width="7.4" height="15.0" fill="rgb(219,56,44)" rx="2" ry="2" />
<text  x="297.05" y="1727.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::release (1 samples, 0.02%)</title><rect x="47.7" y="1669" width="0.2" height="15.0" fill="rgb(208,72,0)" rx="2" ry="2" />
<text  x="50.66" y="1679.5" ></text>
</g>
<g >
<title>std::optional&lt;reader_concurrency_semaphore::entry&gt;::optional&lt;reader_concurrency_semaphore::entry, true&gt; (3 samples, 0.06%)</title><rect x="1024.2" y="1573" width="0.6" height="15.0" fill="rgb(215,203,26)" rx="2" ry="2" />
<text  x="1027.15" y="1583.5" ></text>
</g>
<g >
<title>TLS init function for bound_view::_empty_prefix (5 samples, 0.10%)</title><rect x="280.4" y="1605" width="1.2" height="15.0" fill="rgb(238,140,29)" rx="2" ry="2" />
<text  x="283.44" y="1615.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (2 samples, 0.04%)</title><rect x="123.4" y="1877" width="0.5" height="15.0" fill="rgb(233,141,46)" rx="2" ry="2" />
<text  x="126.44" y="1887.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="320.8" y="1701" width="0.3" height="15.0" fill="rgb(225,76,9)" rx="2" ry="2" />
<text  x="323.82" y="1711.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_M_set_node (1 samples, 0.02%)</title><rect x="23.6" y="1669" width="0.2" height="15.0" fill="rgb(246,176,4)" rx="2" ry="2" />
<text  x="26.61" y="1679.5" ></text>
</g>
<g >
<title>seastar::internal::repeater&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (1 samples, 0.02%)</title><rect x="874.0" y="1925" width="0.2" height="15.0" fill="rgb(242,100,8)" rx="2" ry="2" />
<text  x="876.96" y="1935.5" ></text>
</g>
<g >
<title>database::find_schema (39 samples, 0.75%)</title><rect x="773.2" y="1829" width="8.9" height="15.0" fill="rgb(232,38,37)" rx="2" ry="2" />
<text  x="776.22" y="1839.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;signed char, std::char_traits&lt;signed char&gt; &gt;::substr (1 samples, 0.02%)</title><rect x="504.1" y="1621" width="0.3" height="15.0" fill="rgb(234,167,16)" rx="2" ry="2" />
<text  x="507.14" y="1631.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (2 samples, 0.04%)</title><rect x="771.2" y="1797" width="0.4" height="15.0" fill="rgb(243,120,3)" rx="2" ry="2" />
<text  x="774.18" y="1807.5" ></text>
</g>
<g >
<title>std::make_unique&lt;compact_for_query&lt; (6 samples, 0.12%)</title><rect x="434.3" y="1781" width="1.3" height="15.0" fill="rgb(212,71,32)" rx="2" ry="2" />
<text  x="437.26" y="1791.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_destroy_data_aux (2 samples, 0.04%)</title><rect x="393.9" y="1573" width="0.4" height="15.0" fill="rgb(209,118,28)" rx="2" ry="2" />
<text  x="396.88" y="1583.5" ></text>
</g>
<g >
<title>mutation_partition::lower_bound (3 samples, 0.06%)</title><rect x="261.8" y="1557" width="0.7" height="15.0" fill="rgb(220,154,48)" rx="2" ry="2" />
<text  x="264.84" y="1567.5" ></text>
</g>
<g >
<title>checked_file_impl::dma_read_bulk (1 samples, 0.02%)</title><rect x="17.9" y="1413" width="0.3" height="15.0" fill="rgb(243,53,15)" rx="2" ry="2" />
<text  x="20.94" y="1423.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::indirect_move (1 samples, 0.02%)</title><rect x="1026.2" y="1621" width="0.2" height="15.0" fill="rgb(212,160,6)" rx="2" ry="2" />
<text  x="1029.19" y="1631.5" ></text>
</g>
<g >
<title>intrusive_b::searcher&lt;clustering_key_prefix, rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare,  (1 samples, 0.02%)</title><rect x="101.7" y="1781" width="0.2" height="15.0" fill="rgb(218,166,20)" rx="2" ry="2" />
<text  x="104.66" y="1791.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (3 samples, 0.06%)</title><rect x="43.4" y="1621" width="0.6" height="15.0" fill="rgb(239,65,44)" rx="2" ry="2" />
<text  x="46.35" y="1631.5" ></text>
</g>
<g >
<title>db::system_keyspace_make (1 samples, 0.02%)</title><rect x="17.3" y="1733" width="0.2" height="15.0" fill="rgb(246,49,31)" rx="2" ry="2" />
<text  x="20.26" y="1743.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (5 samples, 0.10%)</title><rect x="117.3" y="1893" width="1.1" height="15.0" fill="rgb(237,93,39)" rx="2" ry="2" />
<text  x="120.31" y="1903.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="655.0" y="1845" width="0.2" height="15.0" fill="rgb(235,89,3)" rx="2" ry="2" />
<text  x="658.02" y="1855.5" ></text>
</g>
<g >
<title>read_simple&lt;long, managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="83.5" y="1701" width="0.2" height="15.0" fill="rgb(253,213,47)" rx="2" ry="2" />
<text  x="86.51" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;column_definition const* const, cql3::expr::expression&gt;, false&gt; &gt; &gt;::_M_allocate_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;column_definition const* const&amp;&gt;, std::tuple&lt;&gt; &gt; (1 samples, 0.02%)</title><rect x="74.2" y="1765" width="0.2" height="15.0" fill="rgb(215,196,40)" rx="2" ry="2" />
<text  x="77.21" y="1775.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::set_urgent_state (7 samples, 0.13%)</title><rect x="644.4" y="1909" width="1.5" height="15.0" fill="rgb(229,87,52)" rx="2" ry="2" />
<text  x="647.35" y="1919.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;seastar::semaphore_units&lt;seastar::semaphore_default_exception_factory, std::chrono::_V2::steady_clock&gt; &gt;::dispose (1 samples, 0.02%)</title><rect x="684.5" y="1893" width="0.2" height="15.0" fill="rgb(221,152,8)" rx="2" ry="2" />
<text  x="687.51" y="1903.5" ></text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_slice_or_needs_filtering (1 samples, 0.02%)</title><rect x="658.4" y="1877" width="0.2" height="15.0" fill="rgb(238,139,46)" rx="2" ry="2" />
<text  x="661.42" y="1887.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;cql3::raw_value const*, cql3::raw_value*&gt; (3 samples, 0.06%)</title><rect x="869.0" y="1861" width="0.6" height="15.0" fill="rgb(227,214,18)" rx="2" ry="2" />
<text  x="871.97" y="1871.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (8 samples, 0.15%)</title><rect x="756.9" y="1765" width="1.8" height="15.0" fill="rgb(244,25,34)" rx="2" ry="2" />
<text  x="759.89" y="1775.5" ></text>
</g>
<g >
<title>seastar::future&lt;mutation_fragment*&gt;::then_impl&lt;query::consume_page&lt; (499 samples, 9.59%)</title><rect x="325.1" y="1829" width="113.2" height="15.0" fill="rgb(232,120,54)" rx="2" ry="2" />
<text  x="328.14" y="1839.5" >seastar::futu..</text>
</g>
<g >
<title>mutation_reader_merger::prepare_next (1 samples, 0.02%)</title><rect x="17.9" y="1829" width="0.3" height="15.0" fill="rgb(229,93,51)" rx="2" ry="2" />
<text  x="20.94" y="1839.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;std::tuple&lt;seastar::lw_shared_ptr&lt;query::result&gt;, cache_temperature&gt; &gt;::get_value (1 samples, 0.02%)</title><rect x="650.5" y="1909" width="0.2" height="15.0" fill="rgb(213,101,28)" rx="2" ry="2" />
<text  x="653.48" y="1919.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;query::result_memory_accounter&gt;::take (1 samples, 0.02%)</title><rect x="620.1" y="1845" width="0.2" height="15.0" fill="rgb(250,192,21)" rx="2" ry="2" />
<text  x="623.08" y="1855.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="1160.5" y="1893" width="0.2" height="15.0" fill="rgb(240,11,43)" rx="2" ry="2" />
<text  x="1163.51" y="1903.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIN4cql34expr10expressionEEER18overloaded_functorIJZNS5_12prepare_termERKS6_R8databaseRKN7seastar13basic_sstringIcjLj15ELb1EEENSD_13lw_shared_ptrINS4_20column_specificationEEEE3$_0ZNS5_12prepare_termESA_SC_SH_SK_E3$_1ZNS5_12prepare_termESA_SC_SH_SK_E3$_2ZNS5_12prepare_termESA_SC_SH_SK_E3$_3ZNS5_12prepare_termESA_SC_SH_SK_E3$_4ZNS5_12prepare_termESA_SC_SH_SK_E3$_5ZNS5_12prepare_termESA_SC_SH_SK_E3$_6ZNS5_12prepare_termESA_SC_SH_SK_E3$_7ZNS5_12prepare_termESA_SC_SH_SK_E3$_8ZNS5_12prepare_termESA_SC_SH_SK_E3$_9ZNS5_12prepare_termESA_SC_SH_SK_E4$_10ZNS5_12prepare_termESA_SC_SH_SK_E4$_11ZNS5_12prepare_termESA_SC_SH_SK_E4$_12ZNS5_12prepare_termESA_SC_SH_SK_E4$_13ZNS5_12prepare_termESA_SC_SH_SK_E4$_14ZNS5_12prepare_termESA_SC_SH_SK_E4$_15EERSt7variantIJNS5_11conjunctionENS5_15binary_operatorENS5_12column_valueENS5_5tokenENS5_21unresolved_identifierENS5_25column_mutation_attributeENS5_13function_callENS5_4castENS5_15field_selectionENS5_4nullENS5_13bind_variableENS5_16untyped_constantENS5_8constantENS5_17tuple_constructorENS5_22collection_constructorENS5_20usertype_constructorEEEEJEEESt16integer_sequenceImJLm11EEEE14__visit_invokeES12_S1L_ (1 samples, 0.02%)</title><rect x="70.8" y="1749" width="0.2" height="15.0" fill="rgb(236,102,31)" rx="2" ry="2" />
<text  x="73.80" y="1759.5" ></text>
</g>
<g >
<title>std::__equal&lt;true&gt;::equal&lt;char&gt; (1 samples, 0.02%)</title><rect x="78.5" y="1605" width="0.2" height="15.0" fill="rgb(245,186,11)" rx="2" ry="2" />
<text  x="81.52" y="1615.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;mutation_reader_merger::reader_and_last_fragment_kind*, mutation_reader_merger::prepare_next (1 samples, 0.02%)</title><rect x="17.9" y="1813" width="0.3" height="15.0" fill="rgb(230,32,20)" rx="2" ry="2" />
<text  x="20.94" y="1823.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt; &gt;, seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (14 samples, 0.27%)</title><rect x="818.8" y="1685" width="3.2" height="15.0" fill="rgb(253,148,44)" rx="2" ry="2" />
<text  x="821.83" y="1695.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="98.3" y="1829" width="0.2" height="15.0" fill="rgb(241,144,31)" rx="2" ry="2" />
<text  x="101.26" y="1839.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_pausable&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (6 samples, 0.12%)</title><rect x="699.3" y="1781" width="1.3" height="15.0" fill="rgb(212,214,6)" rx="2" ry="2" />
<text  x="702.26" y="1791.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (1 samples, 0.02%)</title><rect x="563.1" y="1781" width="0.3" height="15.0" fill="rgb(207,62,1)" rx="2" ry="2" />
<text  x="566.13" y="1791.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;dht::token, std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt;, std::allocator&lt;std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;dht::token&gt;, std::hash&lt;dht::token&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (1 samples, 0.02%)</title><rect x="1132.4" y="1589" width="0.2" height="15.0" fill="rgb(226,177,1)" rx="2" ry="2" />
<text  x="1135.37" y="1599.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::merge_with (4 samples, 0.08%)</title><rect x="72.6" y="1765" width="0.9" height="15.0" fill="rgb(234,176,0)" rx="2" ry="2" />
<text  x="75.62" y="1775.5" ></text>
</g>
<g >
<title>row_cache::do_update (1 samples, 0.02%)</title><rect x="11.8" y="2005" width="0.2" height="15.0" fill="rgb(212,17,37)" rx="2" ry="2" />
<text  x="14.82" y="2015.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::pop_back (1 samples, 0.02%)</title><rect x="36.3" y="1765" width="0.2" height="15.0" fill="rgb(235,166,10)" rx="2" ry="2" />
<text  x="39.32" y="1775.5" ></text>
</g>
<g >
<title>cql3::query_options::fill_value_views (17 samples, 0.33%)</title><rect x="860.3" y="1829" width="3.9" height="15.0" fill="rgb(254,16,26)" rx="2" ry="2" />
<text  x="863.34" y="1839.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;void&gt;  (1 samples, 0.02%)</title><rect x="17.3" y="1765" width="0.2" height="15.0" fill="rgb(245,188,0)" rx="2" ry="2" />
<text  x="20.26" y="1775.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::abstract_write_response_handler&gt;::operator=&lt;service::write_response_handler, void&gt; (1 samples, 0.02%)</title><rect x="1133.1" y="1605" width="0.2" height="15.0" fill="rgb(235,119,22)" rx="2" ry="2" />
<text  x="1136.05" y="1615.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally&lt;single_node_cql_env::execute_prepared_with_qo (12 samples, 0.23%)</title><rect x="846.1" y="1861" width="2.7" height="15.0" fill="rgb(243,222,39)" rx="2" ry="2" />
<text  x="849.05" y="1871.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (26 samples, 0.50%)</title><rect x="128.4" y="1845" width="5.9" height="15.0" fill="rgb(247,228,32)" rx="2" ry="2" />
<text  x="131.43" y="1855.5" ></text>
</g>
<g >
<title>std::vector&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, std::allocator&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt;::vector (1 samples, 0.02%)</title><rect x="700.6" y="1781" width="0.2" height="15.0" fill="rgb(235,17,52)" rx="2" ry="2" />
<text  x="703.62" y="1791.5" ></text>
</g>
<g >
<title>cql3::statements::prepared_statement::checked_weak_from_this (7 samples, 0.13%)</title><rect x="741.0" y="1845" width="1.6" height="15.0" fill="rgb(243,105,53)" rx="2" ry="2" />
<text  x="744.01" y="1855.5" ></text>
</g>
<g >
<title>allocation_strategy::get_standard_migrator&lt;blob_storage&gt; (1 samples, 0.02%)</title><rect x="231.2" y="1493" width="0.2" height="15.0" fill="rgb(235,221,7)" rx="2" ry="2" />
<text  x="234.21" y="1503.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (1 samples, 0.02%)</title><rect x="700.8" y="1797" width="0.3" height="15.0" fill="rgb(207,105,8)" rx="2" ry="2" />
<text  x="703.85" y="1807.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (241 samples, 4.63%)</title><rect x="210.8" y="1621" width="54.7" height="15.0" fill="rgb(209,108,19)" rx="2" ry="2" />
<text  x="213.79" y="1631.5" >parti..</text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="652.5" y="1909" width="0.2" height="15.0" fill="rgb(250,201,27)" rx="2" ry="2" />
<text  x="655.52" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.5" y="1381" width="0.2" height="15.0" fill="rgb(206,48,44)" rx="2" ry="2" />
<text  x="13.45" y="1391.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.02%)</title><rect x="40.9" y="1733" width="0.2" height="15.0" fill="rgb(227,198,3)" rx="2" ry="2" />
<text  x="43.86" y="1743.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::construct&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; const&amp;&gt; (1 samples, 0.02%)</title><rect x="51.1" y="1653" width="0.2" height="15.0" fill="rgb(228,186,26)" rx="2" ry="2" />
<text  x="54.07" y="1663.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (2 samples, 0.04%)</title><rect x="44.0" y="1605" width="0.5" height="15.0" fill="rgb(218,167,0)" rx="2" ry="2" />
<text  x="47.03" y="1615.5" ></text>
</g>
<g >
<title>__dynamic_cast (1 samples, 0.02%)</title><rect x="13.2" y="2005" width="0.2" height="15.0" fill="rgb(205,118,1)" rx="2" ry="2" />
<text  x="16.18" y="2015.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.02%)</title><rect x="58.8" y="1541" width="0.2" height="15.0" fill="rgb(235,92,5)" rx="2" ry="2" />
<text  x="61.78" y="1551.5" ></text>
</g>
<g >
<title>schema_registry_entry::load (1 samples, 0.02%)</title><rect x="109.1" y="1877" width="0.3" height="15.0" fill="rgb(236,41,13)" rx="2" ry="2" />
<text  x="112.15" y="1887.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::pop_back (1 samples, 0.02%)</title><rect x="50.8" y="1669" width="0.3" height="15.0" fill="rgb(221,199,18)" rx="2" ry="2" />
<text  x="53.84" y="1679.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_Optional_payload_base (1 samples, 0.02%)</title><rect x="768.5" y="1829" width="0.2" height="15.0" fill="rgb(207,37,3)" rx="2" ry="2" />
<text  x="771.46" y="1839.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (1 samples, 0.02%)</title><rect x="1024.6" y="1557" width="0.2" height="15.0" fill="rgb(206,159,38)" rx="2" ry="2" />
<text  x="1027.60" y="1567.5" ></text>
</g>
<g >
<title>std::apply&lt;auth::permissions_cache::get (5 samples, 0.10%)</title><rect x="77.8" y="1749" width="1.2" height="15.0" fill="rgb(214,10,1)" rx="2" ry="2" />
<text  x="80.84" y="1759.5" ></text>
</g>
<g >
<title>seastar::file::dma_read_bulk_impl (1 samples, 0.02%)</title><rect x="17.9" y="1461" width="0.3" height="15.0" fill="rgb(217,42,8)" rx="2" ry="2" />
<text  x="20.94" y="1471.5" ></text>
</g>
<g >
<title>start_thread (2 samples, 0.04%)</title><rect x="1189.5" y="2053" width="0.5" height="15.0" fill="rgb(237,189,14)" rx="2" ry="2" />
<text  x="1192.55" y="2063.5" ></text>
</g>
<g >
<title>service::storage_proxy::create_write_response_handler (21 samples, 0.40%)</title><rect x="1129.2" y="1653" width="4.8" height="15.0" fill="rgb(224,138,53)" rx="2" ry="2" />
<text  x="1132.20" y="1663.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::max_size (1 samples, 0.02%)</title><rect x="24.1" y="1669" width="0.2" height="15.0" fill="rgb(245,165,9)" rx="2" ry="2" />
<text  x="27.07" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.5" y="949" width="0.2" height="15.0" fill="rgb(238,175,7)" rx="2" ry="2" />
<text  x="13.45" y="959.5" ></text>
</g>
<g >
<title>std::remove_if&lt;char*, boost::algorithm::detail::is_any_ofF&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="12.3" y="1877" width="0.2" height="15.0" fill="rgb(211,32,48)" rx="2" ry="2" />
<text  x="15.27" y="1887.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="1119.2" y="1573" width="0.2" height="15.0" fill="rgb(248,19,19)" rx="2" ry="2" />
<text  x="1122.21" y="1583.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (1 samples, 0.02%)</title><rect x="60.4" y="1701" width="0.2" height="15.0" fill="rgb(218,215,4)" rx="2" ry="2" />
<text  x="63.37" y="1711.5" ></text>
</g>
<g >
<title>utils::basic_ihistogram&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt; &gt;::mark&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; (1 samples, 0.02%)</title><rect x="1124.9" y="1669" width="0.2" height="15.0" fill="rgb(217,207,47)" rx="2" ry="2" />
<text  x="1127.89" y="1679.5" ></text>
</g>
<g >
<title>intrusive_b::node&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (1 samples, 0.02%)</title><rect x="10.7" y="1877" width="0.2" height="15.0" fill="rgb(249,220,32)" rx="2" ry="2" />
<text  x="13.68" y="1887.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (1 samples, 0.02%)</title><rect x="97.6" y="1877" width="0.2" height="15.0" fill="rgb(206,168,25)" rx="2" ry="2" />
<text  x="100.58" y="1887.5" ></text>
</g>
<g >
<title>mutation_partition::non_dummy_rows (1 samples, 0.02%)</title><rect x="1130.1" y="1573" width="0.2" height="15.0" fill="rgb(237,57,14)" rx="2" ry="2" />
<text  x="1133.10" y="1583.5" ></text>
</g>
<g >
<title>bound_view::from_range_start&lt;nonwrapping_interval&gt; (1 samples, 0.02%)</title><rect x="263.4" y="1541" width="0.3" height="15.0" fill="rgb(242,93,6)" rx="2" ry="2" />
<text  x="266.42" y="1551.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.02%)</title><rect x="54.2" y="1605" width="0.3" height="15.0" fill="rgb(215,228,0)" rx="2" ry="2" />
<text  x="57.24" y="1615.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (7 samples, 0.13%)</title><rect x="417.5" y="1653" width="1.6" height="15.0" fill="rgb(240,61,36)" rx="2" ry="2" />
<text  x="420.48" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (2 samples, 0.04%)</title><rect x="635.5" y="1861" width="0.5" height="15.0" fill="rgb(231,88,0)" rx="2" ry="2" />
<text  x="638.51" y="1871.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.02%)</title><rect x="24.5" y="1637" width="0.2" height="15.0" fill="rgb(229,51,15)" rx="2" ry="2" />
<text  x="27.52" y="1647.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;void&gt;  (1 samples, 0.02%)</title><rect x="701.3" y="1749" width="0.2" height="15.0" fill="rgb(211,133,51)" rx="2" ry="2" />
<text  x="704.30" y="1759.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::move_it (2 samples, 0.04%)</title><rect x="643.9" y="1909" width="0.5" height="15.0" fill="rgb(246,112,16)" rx="2" ry="2" />
<text  x="646.90" y="1919.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.02%)</title><rect x="59.0" y="1701" width="0.2" height="15.0" fill="rgb(237,207,51)" rx="2" ry="2" />
<text  x="62.01" y="1711.5" ></text>
</g>
<g >
<title>db::schema_tables::feed_hash_for_schema_digest (1 samples, 0.02%)</title><rect x="107.6" y="1861" width="0.2" height="15.0" fill="rgb(232,11,7)" rx="2" ry="2" />
<text  x="110.56" y="1871.5" ></text>
</g>
<g >
<title>reader_permit::consume (2 samples, 0.04%)</title><rect x="525.0" y="1605" width="0.5" height="15.0" fill="rgb(211,144,13)" rx="2" ry="2" />
<text  x="528.02" y="1615.5" ></text>
</g>
<g >
<title>utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::get_or_load&lt;utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (34 samples, 0.65%)</title><rect x="759.6" y="1797" width="7.7" height="15.0" fill="rgb(236,20,17)" rx="2" ry="2" />
<text  x="762.61" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::binary_operator const*&gt;  (2 samples, 0.04%)</title><rect x="661.8" y="1797" width="0.5" height="15.0" fill="rgb(254,61,30)" rx="2" ry="2" />
<text  x="664.82" y="1807.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (1 samples, 0.02%)</title><rect x="670.7" y="1893" width="0.2" height="15.0" fill="rgb(221,67,38)" rx="2" ry="2" />
<text  x="673.67" y="1903.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::emplace_back&lt;std::_List_iterator&lt;flat_mutation_reader&gt; const&amp;, mutation_fragment&gt; (3 samples, 0.06%)</title><rect x="187.4" y="1669" width="0.7" height="15.0" fill="rgb(216,98,47)" rx="2" ry="2" />
<text  x="190.42" y="1679.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;interval_bound&lt;dht::ring_position&gt;, false, false&gt;::_Optional_base (2 samples, 0.04%)</title><rect x="626.0" y="1861" width="0.4" height="15.0" fill="rgb(241,149,6)" rx="2" ry="2" />
<text  x="628.98" y="1871.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::push_mutation_fragment&lt;mutation_fragment&gt; (15 samples, 0.29%)</title><rect x="197.6" y="1653" width="3.4" height="15.0" fill="rgb(247,153,39)" rx="2" ry="2" />
<text  x="200.63" y="1663.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.08%)</title><rect x="284.3" y="1605" width="0.9" height="15.0" fill="rgb(232,37,42)" rx="2" ry="2" />
<text  x="287.30" y="1615.5" ></text>
</g>
<g >
<title>bytes_view_hasher::finalize (1 samples, 0.02%)</title><rect x="74.9" y="1781" width="0.2" height="15.0" fill="rgb(242,18,21)" rx="2" ry="2" />
<text  x="77.89" y="1791.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (7 samples, 0.13%)</title><rect x="42.9" y="1733" width="1.6" height="15.0" fill="rgb(219,207,45)" rx="2" ry="2" />
<text  x="45.90" y="1743.5" ></text>
</g>
<g >
<title>seastar::future&lt;query::result_memory_accounter&gt;::get0 (5 samples, 0.10%)</title><rect x="619.2" y="1861" width="1.1" height="15.0" fill="rgb(217,82,37)" rx="2" ry="2" />
<text  x="622.17" y="1871.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment&lt;schema const&amp;, rows_entry const&amp;&gt; (2 samples, 0.04%)</title><rect x="82.6" y="1669" width="0.5" height="15.0" fill="rgb(223,130,36)" rx="2" ry="2" />
<text  x="85.60" y="1679.5" ></text>
</g>
<g >
<title>utils::crc32::process (1 samples, 0.02%)</title><rect x="1125.6" y="1685" width="0.2" height="15.0" fill="rgb(210,118,53)" rx="2" ry="2" />
<text  x="1128.57" y="1695.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.04%)</title><rect x="38.4" y="1717" width="0.4" height="15.0" fill="rgb(210,70,53)" rx="2" ry="2" />
<text  x="41.36" y="1727.5" ></text>
</g>
<g >
<title>antlr3::DefaultAllocPolicy::StackType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::pop (1 samples, 0.02%)</title><rect x="36.3" y="1781" width="0.2" height="15.0" fill="rgb(214,146,34)" rx="2" ry="2" />
<text  x="39.32" y="1791.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (2 samples, 0.04%)</title><rect x="47.0" y="1733" width="0.4" height="15.0" fill="rgb(230,121,52)" rx="2" ry="2" />
<text  x="49.98" y="1743.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.02%)</title><rect x="21.1" y="1797" width="0.2" height="15.0" fill="rgb(207,49,22)" rx="2" ry="2" />
<text  x="24.12" y="1807.5" ></text>
</g>
<g >
<title>ser::set_size&lt;bytes_ostream, schema_mutations&gt; (2 samples, 0.04%)</title><rect x="108.7" y="1845" width="0.4" height="15.0" fill="rgb(253,143,18)" rx="2" ry="2" />
<text  x="111.69" y="1855.5" ></text>
</g>
<g >
<title>validation::validate_keyspace (12 samples, 0.23%)</title><rect x="839.7" y="1797" width="2.7" height="15.0" fill="rgb(214,148,48)" rx="2" ry="2" />
<text  x="842.70" y="1807.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment&lt;schema const&amp;, rows_entry const&amp;&gt; (194 samples, 3.73%)</title><rect x="213.5" y="1605" width="44.0" height="15.0" fill="rgb(230,20,18)" rx="2" ry="2" />
<text  x="216.51" y="1615.5" >muta..</text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::metadata&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="655.2" y="1893" width="0.3" height="15.0" fill="rgb(223,45,15)" rx="2" ry="2" />
<text  x="658.25" y="1903.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (1 samples, 0.02%)</title><rect x="44.9" y="1701" width="0.3" height="15.0" fill="rgb(253,153,27)" rx="2" ry="2" />
<text  x="47.94" y="1711.5" ></text>
</g>
<g >
<title>table::estimate_read_memory_cost (2 samples, 0.04%)</title><rect x="1034.4" y="1685" width="0.4" height="15.0" fill="rgb(217,193,34)" rx="2" ry="2" />
<text  x="1037.36" y="1695.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;service::storage_proxy_coordinator_query_result&gt;::set_value&lt;service::storage_proxy_coordinator_query_result&gt; (3 samples, 0.06%)</title><rect x="1140.1" y="1909" width="0.7" height="15.0" fill="rgb(235,163,23)" rx="2" ry="2" />
<text  x="1143.09" y="1919.5" ></text>
</g>
<g >
<title>operator== (1 samples, 0.02%)</title><rect x="106.4" y="1829" width="0.3" height="15.0" fill="rgb(253,121,28)" rx="2" ry="2" />
<text  x="109.42" y="1839.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consumer_adapter&lt;sstables::sstable_writer&gt;::consume (4 samples, 0.08%)</title><rect x="83.3" y="1845" width="0.9" height="15.0" fill="rgb(235,223,11)" rx="2" ry="2" />
<text  x="86.28" y="1855.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_check_len (1 samples, 0.02%)</title><rect x="75.1" y="1749" width="0.2" height="15.0" fill="rgb(233,16,24)" rx="2" ry="2" />
<text  x="78.11" y="1759.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_destroy_data_aux (2 samples, 0.04%)</title><rect x="394.3" y="1589" width="0.5" height="15.0" fill="rgb(230,181,6)" rx="2" ry="2" />
<text  x="397.33" y="1599.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::_S_construct&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; const&amp;&gt; (1 samples, 0.02%)</title><rect x="51.1" y="1637" width="0.2" height="15.0" fill="rgb(233,72,19)" rx="2" ry="2" />
<text  x="54.07" y="1647.5" ></text>
</g>
<g >
<title>atomic_cell::atomic_cell (1 samples, 0.02%)</title><rect x="878.0" y="1669" width="0.3" height="15.0" fill="rgb(217,24,14)" rx="2" ry="2" />
<text  x="881.04" y="1679.5" ></text>
</g>
<g >
<title>std::push_heap&lt;mutation_reader_merger::reader_and_fragment*, mutation_reader_merger::reader_heap_compare&gt; (1 samples, 0.02%)</title><rect x="189.2" y="1685" width="0.3" height="15.0" fill="rgb(243,196,1)" rx="2" ry="2" />
<text  x="192.23" y="1695.5" ></text>
</g>
<g >
<title>ser::serializer&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;::write_fragmented&lt;bytes_ostream, fragment_range&lt;managed_bytes_basic_view&lt; (19 samples, 0.37%)</title><rect x="384.4" y="1589" width="4.3" height="15.0" fill="rgb(243,129,13)" rx="2" ry="2" />
<text  x="387.35" y="1599.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (5 samples, 0.10%)</title><rect x="900.5" y="1717" width="1.1" height="15.0" fill="rgb(218,113,50)" rx="2" ry="2" />
<text  x="903.50" y="1727.5" ></text>
</g>
<g >
<title>compound_type&lt; (7 samples, 0.13%)</title><rect x="914.1" y="1797" width="1.6" height="15.0" fill="rgb(227,9,30)" rx="2" ry="2" />
<text  x="917.11" y="1807.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="17.5" y="1669" width="0.2" height="15.0" fill="rgb(235,42,14)" rx="2" ry="2" />
<text  x="20.49" y="1679.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="940.4" y="1781" width="0.3" height="15.0" fill="rgb(247,83,47)" rx="2" ry="2" />
<text  x="943.43" y="1791.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="700.8" y="1605" width="0.3" height="15.0" fill="rgb(210,168,48)" rx="2" ry="2" />
<text  x="703.85" y="1615.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::set_callback (1 samples, 0.02%)</title><rect x="732.4" y="1925" width="0.2" height="15.0" fill="rgb(231,83,5)" rx="2" ry="2" />
<text  x="735.38" y="1935.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector (2 samples, 0.04%)</title><rect x="1063.9" y="1717" width="0.4" height="15.0" fill="rgb(211,51,36)" rx="2" ry="2" />
<text  x="1066.86" y="1727.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::digest_read_result&gt;::clear (1 samples, 0.02%)</title><rect x="712.9" y="1893" width="0.2" height="15.0" fill="rgb(251,155,4)" rx="2" ry="2" />
<text  x="715.87" y="1903.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.02%)</title><rect x="10.7" y="1989" width="0.2" height="15.0" fill="rgb(225,104,47)" rx="2" ry="2" />
<text  x="13.68" y="1999.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.02%)</title><rect x="59.5" y="1589" width="0.2" height="15.0" fill="rgb(249,176,51)" rx="2" ry="2" />
<text  x="62.46" y="1599.5" ></text>
</g>
<g >
<title>service::storage_proxy_stats::split_stats::get_ep_stat (1 samples, 0.02%)</title><rect x="728.1" y="1893" width="0.2" height="15.0" fill="rgb(238,19,28)" rx="2" ry="2" />
<text  x="731.07" y="1903.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (3 samples, 0.06%)</title><rect x="43.4" y="1669" width="0.6" height="15.0" fill="rgb(223,50,20)" rx="2" ry="2" />
<text  x="46.35" y="1679.5" ></text>
</g>
<g >
<title>read_simple&lt;unsigned short, managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="108.5" y="1653" width="0.2" height="15.0" fill="rgb(233,185,2)" rx="2" ry="2" />
<text  x="111.47" y="1663.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, cql3::statements::create_table_statement::raw_statement*, std::default_delete&lt;cql3::statements::create_table_statement::raw_statement&gt; &gt; (1 samples, 0.02%)</title><rect x="63.8" y="1781" width="0.2" height="15.0" fill="rgb(249,209,31)" rx="2" ry="2" />
<text  x="66.77" y="1791.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_restrictions::size (2 samples, 0.04%)</title><rect x="892.1" y="1845" width="0.5" height="15.0" fill="rgb(234,80,8)" rx="2" ry="2" />
<text  x="895.11" y="1855.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (9 samples, 0.17%)</title><rect x="506.2" y="1749" width="2.0" height="15.0" fill="rgb(241,112,24)" rx="2" ry="2" />
<text  x="509.19" y="1759.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::BaseRecognizer (2 samples, 0.04%)</title><rect x="20.2" y="1797" width="0.5" height="15.0" fill="rgb(221,44,52)" rx="2" ry="2" />
<text  x="23.21" y="1807.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::close (1 samples, 0.02%)</title><rect x="577.9" y="1749" width="0.2" height="15.0" fill="rgb(216,19,5)" rx="2" ry="2" />
<text  x="580.88" y="1759.5" ></text>
</g>
<g >
<title>database::find_column_family (8 samples, 0.15%)</title><rect x="774.4" y="1797" width="1.8" height="15.0" fill="rgb(215,29,5)" rx="2" ry="2" />
<text  x="777.36" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.5" y="1077" width="0.2" height="15.0" fill="rgb(209,176,42)" rx="2" ry="2" />
<text  x="13.45" y="1087.5" ></text>
</g>
<g >
<title>remove_or_mark_as_unique_owner (1 samples, 0.02%)</title><rect x="10.7" y="1925" width="0.2" height="15.0" fill="rgb(209,168,23)" rx="2" ry="2" />
<text  x="13.68" y="1935.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.02%)</title><rect x="84.4" y="1973" width="0.2" height="15.0" fill="rgb(235,178,51)" rx="2" ry="2" />
<text  x="87.42" y="1983.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cident (14 samples, 0.27%)</title><rect x="42.2" y="1765" width="3.2" height="15.0" fill="rgb(224,1,13)" rx="2" ry="2" />
<text  x="45.22" y="1775.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_move_assign (1 samples, 0.02%)</title><rect x="459.4" y="1701" width="0.3" height="15.0" fill="rgb(213,176,35)" rx="2" ry="2" />
<text  x="462.45" y="1711.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::entry::entry (11 samples, 0.21%)</title><rect x="1022.3" y="1589" width="2.5" height="15.0" fill="rgb(225,16,52)" rx="2" ry="2" />
<text  x="1025.34" y="1599.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;query::result&gt;::make&lt;query::result&gt; (5 samples, 0.10%)</title><rect x="623.9" y="1861" width="1.2" height="15.0" fill="rgb(235,220,14)" rx="2" ry="2" />
<text  x="626.94" y="1871.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::create_type_statement, std::default_delete&lt;cql3::statements::create_type_statement&gt; &gt;::__uniq_ptr_impl (1 samples, 0.02%)</title><rect x="64.0" y="1765" width="0.2" height="15.0" fill="rgb(241,155,3)" rx="2" ry="2" />
<text  x="67.00" y="1775.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="736.9" y="1845" width="0.2" height="15.0" fill="rgb(208,139,18)" rx="2" ry="2" />
<text  x="739.92" y="1855.5" ></text>
</g>
<g >
<title>cql3::restrictions::partition_key_restrictions::merge_to (4 samples, 0.08%)</title><rect x="72.6" y="1781" width="0.9" height="15.0" fill="rgb(236,221,33)" rx="2" ry="2" />
<text  x="75.62" y="1791.5" ></text>
</g>
<g >
<title>intrusive_array&lt;memtable_entry&gt;::lower_bound&lt;dht::ring_position, dht::ring_position_comparator&gt; (56 samples, 1.08%)</title><rect x="493.3" y="1733" width="12.7" height="15.0" fill="rgb(228,22,13)" rx="2" ry="2" />
<text  x="496.25" y="1743.5" ></text>
</g>
<g >
<title>seastar::future&lt;boost::iterator_range&lt;mutation_fragment*&gt; &gt;::then_impl&lt;mutation_fragment_merger&lt;mutation_reader_merger&gt;::fetch (4 samples, 0.08%)</title><rect x="303.6" y="1749" width="0.9" height="15.0" fill="rgb(240,224,38)" rx="2" ry="2" />
<text  x="306.58" y="1759.5" ></text>
</g>
<g >
<title>seastar::io_queue::find_or_create_class (1 samples, 0.02%)</title><rect x="17.9" y="1285" width="0.3" height="15.0" fill="rgb(220,32,14)" rx="2" ry="2" />
<text  x="20.94" y="1295.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (5 samples, 0.10%)</title><rect x="808.4" y="1621" width="1.1" height="15.0" fill="rgb(245,220,4)" rx="2" ry="2" />
<text  x="811.39" y="1631.5" ></text>
</g>
<g >
<title>locator::calculate_effective_replication_map (1 samples, 0.02%)</title><rect x="109.6" y="1925" width="0.2" height="15.0" fill="rgb(215,116,52)" rx="2" ry="2" />
<text  x="112.60" y="1935.5" ></text>
</g>
<g >
<title>dht::ring_position_tri_compare (52 samples, 1.00%)</title><rect x="494.2" y="1701" width="11.8" height="15.0" fill="rgb(214,157,19)" rx="2" ry="2" />
<text  x="497.16" y="1711.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (1 samples, 0.02%)</title><rect x="436.5" y="1797" width="0.3" height="15.0" fill="rgb(209,85,3)" rx="2" ry="2" />
<text  x="439.53" y="1807.5" ></text>
</g>
<g >
<title>antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;::get_charPositionInLine (2 samples, 0.04%)</title><rect x="25.2" y="1701" width="0.5" height="15.0" fill="rgb(253,136,10)" rx="2" ry="2" />
<text  x="28.20" y="1711.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="436.3" y="1781" width="0.2" height="15.0" fill="rgb(238,206,38)" rx="2" ry="2" />
<text  x="439.31" y="1791.5" ></text>
</g>
<g >
<title>mutation_source::make_reader (500 samples, 9.61%)</title><rect x="440.2" y="1829" width="113.4" height="15.0" fill="rgb(216,135,49)" rx="2" ry="2" />
<text  x="443.16" y="1839.5" >mutation_sourc..</text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (6 samples, 0.12%)</title><rect x="785.5" y="1765" width="1.3" height="15.0" fill="rgb(238,214,49)" rx="2" ry="2" />
<text  x="788.47" y="1775.5" ></text>
</g>
<g >
<title>seastar::file_accessible (1 samples, 0.02%)</title><rect x="730.6" y="1893" width="0.2" height="15.0" fill="rgb(251,23,30)" rx="2" ry="2" />
<text  x="733.57" y="1903.5" ></text>
</g>
<g >
<title>database::has_keyspace (2 samples, 0.04%)</title><rect x="76.5" y="1845" width="0.4" height="15.0" fill="rgb(249,199,47)" rx="2" ry="2" />
<text  x="79.48" y="1855.5" ></text>
</g>
<g >
<title>reader_permit::consume (1 samples, 0.02%)</title><rect x="200.4" y="1605" width="0.2" height="15.0" fill="rgb(206,128,36)" rx="2" ry="2" />
<text  x="203.35" y="1615.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="703.3" y="1893" width="0.3" height="15.0" fill="rgb(253,205,48)" rx="2" ry="2" />
<text  x="706.34" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::_Copy_ctor_base (2 samples, 0.04%)</title><rect x="349.6" y="1589" width="0.5" height="15.0" fill="rgb(208,7,33)" rx="2" ry="2" />
<text  x="352.64" y="1599.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.02%)</title><rect x="46.8" y="1669" width="0.2" height="15.0" fill="rgb(243,129,18)" rx="2" ry="2" />
<text  x="49.75" y="1679.5" ></text>
</g>
<g >
<title>utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (8 samples, 0.15%)</title><rect x="805.7" y="1573" width="1.8" height="15.0" fill="rgb(208,178,34)" rx="2" ry="2" />
<text  x="808.67" y="1583.5" ></text>
</g>
<g >
<title>std::visit&lt;overloaded_functor&lt;cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_token (1 samples, 0.02%)</title><rect x="662.5" y="1861" width="0.2" height="15.0" fill="rgb(230,212,49)" rx="2" ry="2" />
<text  x="665.51" y="1871.5" ></text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt;&amp;&gt; (2 samples, 0.04%)</title><rect x="857.2" y="1781" width="0.4" height="15.0" fill="rgb(250,145,25)" rx="2" ry="2" />
<text  x="860.17" y="1791.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_Optional_payload_base (2 samples, 0.04%)</title><rect x="1042.8" y="1637" width="0.4" height="15.0" fill="rgb(235,89,53)" rx="2" ry="2" />
<text  x="1045.76" y="1647.5" ></text>
</g>
<g >
<title>std::apply&lt;service::client_state::check_has_permission (7 samples, 0.13%)</title><rect x="77.4" y="1813" width="1.6" height="15.0" fill="rgb(229,215,6)" rx="2" ry="2" />
<text  x="80.38" y="1823.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, auth::service::start (1 samples, 0.02%)</title><rect x="700.6" y="1925" width="0.2" height="15.0" fill="rgb(253,171,47)" rx="2" ry="2" />
<text  x="703.62" y="1935.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::then_impl&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (49 samples, 0.94%)</title><rect x="310.2" y="1781" width="11.1" height="15.0" fill="rgb(233,37,31)" rx="2" ry="2" />
<text  x="313.16" y="1791.5" ></text>
</g>
<g >
<title>abstract_type::bound_value_needs_to_be_reserialized (1 samples, 0.02%)</title><rect x="896.2" y="1749" width="0.2" height="15.0" fill="rgb(218,112,12)" rx="2" ry="2" />
<text  x="899.19" y="1759.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (3 samples, 0.06%)</title><rect x="670.2" y="1909" width="0.7" height="15.0" fill="rgb(218,85,17)" rx="2" ry="2" />
<text  x="673.22" y="1919.5" ></text>
</g>
<g >
<title>utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::lru_entry::touch (7 samples, 0.13%)</title><rect x="756.9" y="1733" width="1.6" height="15.0" fill="rgb(239,155,48)" rx="2" ry="2" />
<text  x="759.89" y="1743.5" ></text>
</g>
<g >
<title>read_simple&lt;long, managed_bytes_basic_view&lt; (5 samples, 0.10%)</title><rect x="410.0" y="1589" width="1.1" height="15.0" fill="rgb(253,104,33)" rx="2" ry="2" />
<text  x="412.99" y="1599.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::_M_range_initialize&lt;nonwrapping_interval&lt;dht::ring_position&gt; const*&gt; (6 samples, 0.12%)</title><rect x="940.2" y="1813" width="1.4" height="15.0" fill="rgb(217,23,46)" rx="2" ry="2" />
<text  x="943.21" y="1823.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_M_reset (1 samples, 0.02%)</title><rect x="925.5" y="1797" width="0.2" height="15.0" fill="rgb(227,61,11)" rx="2" ry="2" />
<text  x="928.46" y="1807.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::do_wait_admission (44 samples, 0.85%)</title><rect x="1017.3" y="1653" width="10.0" height="15.0" fill="rgb(233,167,39)" rx="2" ry="2" />
<text  x="1020.34" y="1663.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::push_static_row (19 samples, 0.37%)</title><rect x="287.7" y="1685" width="4.3" height="15.0" fill="rgb(237,174,10)" rx="2" ry="2" />
<text  x="290.70" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.5" y="453" width="0.2" height="15.0" fill="rgb(222,118,25)" rx="2" ry="2" />
<text  x="13.45" y="463.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="59.2" y="1637" width="0.3" height="15.0" fill="rgb(216,203,54)" rx="2" ry="2" />
<text  x="62.23" y="1647.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;std::_List_iterator&lt;flat_mutation_reader&gt;, mutation_reader_merger::close (70 samples, 1.35%)</title><rect x="572.4" y="1781" width="15.9" height="15.0" fill="rgb(226,206,34)" rx="2" ry="2" />
<text  x="575.43" y="1791.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.08%)</title><rect x="331.3" y="1701" width="0.9" height="15.0" fill="rgb(215,28,46)" rx="2" ry="2" />
<text  x="334.26" y="1711.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (2 samples, 0.04%)</title><rect x="651.6" y="1909" width="0.5" height="15.0" fill="rgb(254,62,50)" rx="2" ry="2" />
<text  x="654.62" y="1919.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::operation::set_value, std::default_delete&lt;cql3::operation::set_value&gt;, true, true&gt;::__uniq_ptr_impl (1 samples, 0.02%)</title><rect x="56.3" y="1717" width="0.2" height="15.0" fill="rgb(207,14,28)" rx="2" ry="2" />
<text  x="59.28" y="1727.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="59.2" y="1669" width="0.3" height="15.0" fill="rgb(245,155,45)" rx="2" ry="2" />
<text  x="62.23" y="1679.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (4 samples, 0.08%)</title><rect x="910.7" y="1733" width="0.9" height="15.0" fill="rgb(233,9,32)" rx="2" ry="2" />
<text  x="913.71" y="1743.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (3 samples, 0.06%)</title><rect x="43.4" y="1589" width="0.6" height="15.0" fill="rgb(209,126,11)" rx="2" ry="2" />
<text  x="46.35" y="1599.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.5" y="1365" width="0.2" height="15.0" fill="rgb(247,165,9)" rx="2" ry="2" />
<text  x="13.45" y="1375.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (6 samples, 0.12%)</title><rect x="456.3" y="1653" width="1.3" height="15.0" fill="rgb(230,151,48)" rx="2" ry="2" />
<text  x="459.27" y="1663.5" ></text>
</g>
<g >
<title>freeze (10 samples, 0.19%)</title><rect x="1129.7" y="1621" width="2.2" height="15.0" fill="rgb(216,93,32)" rx="2" ry="2" />
<text  x="1132.65" y="1631.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_impl&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (1 samples, 0.02%)</title><rect x="138.2" y="1749" width="0.2" height="15.0" fill="rgb(228,53,29)" rx="2" ry="2" />
<text  x="141.19" y="1759.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (1 samples, 0.02%)</title><rect x="28.8" y="1637" width="0.3" height="15.0" fill="rgb(239,132,8)" rx="2" ry="2" />
<text  x="31.83" y="1647.5" ></text>
</g>
<g >
<title>do_cql_test (1 samples, 0.02%)</title><rect x="10.5" y="117" width="0.2" height="15.0" fill="rgb(253,183,46)" rx="2" ry="2" />
<text  x="13.45" y="127.5" ></text>
</g>
<g >
<title>_start (4 samples, 0.08%)</title><rect x="1167.1" y="2053" width="0.9" height="15.0" fill="rgb(217,13,51)" rx="2" ry="2" />
<text  x="1170.09" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_nodes (1 samples, 0.02%)</title><rect x="1088.4" y="1781" width="0.2" height="15.0" fill="rgb(243,191,24)" rx="2" ry="2" />
<text  x="1091.36" y="1791.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_with_triggers (2 samples, 0.04%)</title><rect x="875.1" y="1813" width="0.4" height="15.0" fill="rgb(207,17,39)" rx="2" ry="2" />
<text  x="878.09" y="1823.5" ></text>
</g>
<g >
<title>__tls_init (3 samples, 0.06%)</title><rect x="541.1" y="1733" width="0.7" height="15.0" fill="rgb(248,170,12)" rx="2" ry="2" />
<text  x="544.12" y="1743.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (3 samples, 0.06%)</title><rect x="43.4" y="1605" width="0.6" height="15.0" fill="rgb(236,72,10)" rx="2" ry="2" />
<text  x="46.35" y="1615.5" ></text>
</g>
<g >
<title>visit&lt;(anonymous namespace)::from_string_visitor&gt; (1 samples, 0.02%)</title><rect x="11.4" y="1605" width="0.2" height="15.0" fill="rgb(243,84,26)" rx="2" ry="2" />
<text  x="14.36" y="1615.5" ></text>
</g>
<g >
<title>allocation_strategy::construct&lt;partition_version, mutation_partition&gt; (1 samples, 0.02%)</title><rect x="1119.7" y="1541" width="0.2" height="15.0" fill="rgb(239,79,8)" rx="2" ry="2" />
<text  x="1122.67" y="1551.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.5" y="1189" width="0.2" height="15.0" fill="rgb(206,40,42)" rx="2" ry="2" />
<text  x="13.45" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_allocate_node&lt;nonwrapping_interval&lt;dht::token&gt;, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; (6 samples, 0.12%)</title><rect x="1150.1" y="1877" width="1.3" height="15.0" fill="rgb(249,171,16)" rx="2" ry="2" />
<text  x="1153.07" y="1887.5" ></text>
</g>
<g >
<title>std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, query::non_null_data_value&gt;::pair (1 samples, 0.02%)</title><rect x="107.1" y="1701" width="0.2" height="15.0" fill="rgb(239,38,50)" rx="2" ry="2" />
<text  x="110.10" y="1711.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.02%)</title><rect x="1151.0" y="1829" width="0.2" height="15.0" fill="rgb(206,33,36)" rx="2" ry="2" />
<text  x="1153.98" y="1839.5" ></text>
</g>
<g >
<title>cql3::restrictions::partition_key_restrictions::needs_filtering (1 samples, 0.02%)</title><rect x="73.5" y="1797" width="0.3" height="15.0" fill="rgb(238,1,8)" rx="2" ry="2" />
<text  x="76.53" y="1807.5" ></text>
</g>
<g >
<title>std::__equal&lt;false&gt;::equal&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;*, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const*&gt; (8 samples, 0.15%)</title><rect x="812.0" y="1573" width="1.8" height="15.0" fill="rgb(220,187,48)" rx="2" ry="2" />
<text  x="815.02" y="1583.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.06%)</title><rect x="615.5" y="1781" width="0.7" height="15.0" fill="rgb(219,111,2)" rx="2" ry="2" />
<text  x="618.54" y="1791.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.02%)</title><rect x="57.2" y="1589" width="0.2" height="15.0" fill="rgb(235,132,48)" rx="2" ry="2" />
<text  x="60.19" y="1599.5" ></text>
</g>
<g >
<title>std::vector&lt;global_schema_ptr, std::allocator&lt;global_schema_ptr&gt; &gt;::emplace_back&lt;seastar::lw_shared_ptr&lt;schema const&gt;&amp;&gt; (3 samples, 0.06%)</title><rect x="106.7" y="1877" width="0.6" height="15.0" fill="rgb(212,42,27)" rx="2" ry="2" />
<text  x="109.65" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;void&gt;  (2 samples, 0.04%)</title><rect x="74.0" y="1813" width="0.4" height="15.0" fill="rgb(229,147,50)" rx="2" ry="2" />
<text  x="76.98" y="1823.5" ></text>
</g>
<g >
<title>__strlen_avx2 (15 samples, 0.29%)</title><rect x="1007.8" y="1669" width="3.4" height="15.0" fill="rgb(242,74,16)" rx="2" ry="2" />
<text  x="1010.82" y="1679.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;compact_for_query&lt; (1 samples, 0.02%)</title><rect x="435.6" y="1781" width="0.3" height="15.0" fill="rgb(239,38,40)" rx="2" ry="2" />
<text  x="438.63" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.5" y="341" width="0.2" height="15.0" fill="rgb(239,142,19)" rx="2" ry="2" />
<text  x="13.45" y="351.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::binary_operator const*&gt;  (1 samples, 0.02%)</title><rect x="661.1" y="1813" width="0.3" height="15.0" fill="rgb(215,107,51)" rx="2" ry="2" />
<text  x="664.14" y="1823.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_state&lt;std::tuple&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt; &gt;, seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (2 samples, 0.04%)</title><rect x="801.8" y="1669" width="0.5" height="15.0" fill="rgb(249,118,34)" rx="2" ry="2" />
<text  x="804.81" y="1679.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.02%)</title><rect x="46.3" y="1557" width="0.2" height="15.0" fill="rgb(235,180,25)" rx="2" ry="2" />
<text  x="49.30" y="1567.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (7 samples, 0.13%)</title><rect x="542.7" y="1685" width="1.6" height="15.0" fill="rgb(210,127,6)" rx="2" ry="2" />
<text  x="545.71" y="1695.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.29] (1 samples, 0.02%)</title><rect x="715.1" y="1893" width="0.3" height="15.0" fill="rgb(237,114,19)" rx="2" ry="2" />
<text  x="718.14" y="1903.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="879.4" y="1733" width="0.2" height="15.0" fill="rgb(238,136,47)" rx="2" ry="2" />
<text  x="882.40" y="1743.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (1 samples, 0.02%)</title><rect x="138.2" y="1845" width="0.2" height="15.0" fill="rgb(241,10,5)" rx="2" ry="2" />
<text  x="141.19" y="1855.5" ></text>
</g>
<g >
<title>operator new (8 samples, 0.15%)</title><rect x="316.5" y="1701" width="1.8" height="15.0" fill="rgb(214,16,10)" rx="2" ry="2" />
<text  x="319.51" y="1711.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;locator::snitch_ptr&gt;::local (2 samples, 0.04%)</title><rect x="1079.7" y="1733" width="0.5" height="15.0" fill="rgb(212,3,39)" rx="2" ry="2" />
<text  x="1082.74" y="1743.5" ></text>
</g>
<g >
<title>db::schema_tables::make_schema_mutations (1 samples, 0.02%)</title><rect x="108.5" y="1861" width="0.2" height="15.0" fill="rgb(218,148,18)" rx="2" ry="2" />
<text  x="111.47" y="1871.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::on_permit_destroyed (1 samples, 0.02%)</title><rect x="126.2" y="1861" width="0.2" height="15.0" fill="rgb(212,66,16)" rx="2" ry="2" />
<text  x="129.16" y="1871.5" ></text>
</g>
<g >
<title>seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;::swap (2 samples, 0.04%)</title><rect x="767.8" y="1829" width="0.4" height="15.0" fill="rgb(243,56,26)" rx="2" ry="2" />
<text  x="770.78" y="1839.5" ></text>
</g>
<g >
<title>auth::data_resource_view::table (1 samples, 0.02%)</title><rect x="815.4" y="1541" width="0.2" height="15.0" fill="rgb(253,93,43)" rx="2" ry="2" />
<text  x="818.42" y="1551.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (2 samples, 0.04%)</title><rect x="59.2" y="1717" width="0.5" height="15.0" fill="rgb(240,96,34)" rx="2" ry="2" />
<text  x="62.23" y="1727.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::reactor, seastar::reactor_deleter&gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="12.3" y="2021" width="0.2" height="15.0" fill="rgb(245,171,36)" rx="2" ry="2" />
<text  x="15.27" y="2031.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reserve&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::partition_snapshot_flat_reader&lt;memtable&amp;&gt; (1 samples, 0.02%)</title><rect x="514.6" y="1717" width="0.2" height="15.0" fill="rgb(212,61,31)" rx="2" ry="2" />
<text  x="517.58" y="1727.5" ></text>
</g>
<g >
<title>cql3::expr::prepare_term (8 samples, 0.15%)</title><rect x="68.3" y="1829" width="1.8" height="15.0" fill="rgb(239,27,6)" rx="2" ry="2" />
<text  x="71.31" y="1839.5" ></text>
</g>
<g >
<title>antlr3::IntStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::rewind (1 samples, 0.02%)</title><rect x="34.7" y="1653" width="0.3" height="15.0" fill="rgb(208,158,43)" rx="2" ry="2" />
<text  x="37.73" y="1663.5" ></text>
</g>
<g >
<title>bplus::tree&lt;long, intrusive_array&lt;cache_entry&gt;, dht::raw_token_less_comparator, 16ul,  (2 samples, 0.04%)</title><rect x="16.1" y="1973" width="0.5" height="15.0" fill="rgb(235,63,9)" rx="2" ry="2" />
<text  x="19.13" y="1983.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::storage_proxy&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="957.0" y="1813" width="0.2" height="15.0" fill="rgb(214,184,34)" rx="2" ry="2" />
<text  x="959.99" y="1823.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::execution_loop (2,346 samples, 45.11%)</title><rect x="110.1" y="1925" width="532.2" height="15.0" fill="rgb(215,108,13)" rx="2" ry="2" />
<text  x="113.05" y="1935.5" >reader_concurrency_semaphore::execution_loop</text>
</g>
<g >
<title>reader_permit::consume_memory (3 samples, 0.06%)</title><rect x="204.2" y="1637" width="0.7" height="15.0" fill="rgb(221,159,21)" rx="2" ry="2" />
<text  x="207.21" y="1647.5" ></text>
</g>
<g >
<title>db::commitlog::segment::allocate (2 samples, 0.04%)</title><rect x="1125.3" y="1701" width="0.5" height="15.0" fill="rgb(249,139,4)" rx="2" ry="2" />
<text  x="1128.34" y="1711.5" ></text>
</g>
<g >
<title>ser::qr_clustered_row__cells&lt;bytes_ostream&gt;::qr_clustered_row__cells (1 samples, 0.02%)</title><rect x="364.6" y="1605" width="0.2" height="15.0" fill="rgb(244,114,46)" rx="2" ry="2" />
<text  x="367.61" y="1615.5" ></text>
</g>
<g >
<title>seastar::future&lt;utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (1 samples, 0.02%)</title><rect x="803.6" y="1653" width="0.3" height="15.0" fill="rgb(235,101,35)" rx="2" ry="2" />
<text  x="806.62" y="1663.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::term (4 samples, 0.08%)</title><rect x="59.7" y="1749" width="0.9" height="15.0" fill="rgb(236,156,0)" rx="2" ry="2" />
<text  x="62.69" y="1759.5" ></text>
</g>
<g >
<title>table::do_apply&lt;frozen_mutation const&amp;, seastar::lw_shared_ptr&lt;schema const&gt; const&amp;&gt; (26 samples, 0.50%)</title><rect x="1119.2" y="1701" width="5.9" height="15.0" fill="rgb(236,3,13)" rx="2" ry="2" />
<text  x="1122.21" y="1711.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (1 samples, 0.02%)</title><rect x="109.6" y="1861" width="0.2" height="15.0" fill="rgb(209,177,24)" rx="2" ry="2" />
<text  x="112.60" y="1871.5" ></text>
</g>
<g >
<title>seastar::internal::coroutine_traits_base&lt;std::tuple&lt;seastar::lw_shared_ptr&lt;query::result&gt;, cache_temperature&gt; &gt;::promise_type::run_and_dispose (2 samples, 0.04%)</title><rect x="87.4" y="1941" width="0.4" height="15.0" fill="rgb(209,142,9)" rx="2" ry="2" />
<text  x="90.37" y="1951.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_internal (1 samples, 0.02%)</title><rect x="11.6" y="1829" width="0.2" height="15.0" fill="rgb(205,8,35)" rx="2" ry="2" />
<text  x="14.59" y="1839.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_emplace&lt;nonwrapping_interval&lt;dht::token&gt;, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; (34 samples, 0.65%)</title><rect x="1145.5" y="1893" width="7.7" height="15.0" fill="rgb(223,210,3)" rx="2" ry="2" />
<text  x="1148.53" y="1903.5" ></text>
</g>
<g >
<title>std::variant&lt;query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::operator=&lt;query::noop_hasher&gt; (1 samples, 0.02%)</title><rect x="613.0" y="1813" width="0.3" height="15.0" fill="rgb(212,202,0)" rx="2" ry="2" />
<text  x="616.05" y="1823.5" ></text>
</g>
<g >
<title>sstables::sstable::write_simple&lt; (1 samples, 0.02%)</title><rect x="698.8" y="1669" width="0.2" height="15.0" fill="rgb(240,117,45)" rx="2" ry="2" />
<text  x="701.81" y="1679.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::vector (1 samples, 0.02%)</title><rect x="58.1" y="1733" width="0.2" height="15.0" fill="rgb(244,32,44)" rx="2" ry="2" />
<text  x="61.10" y="1743.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::with_permit (64 samples, 1.23%)</title><rect x="1016.4" y="1669" width="14.6" height="15.0" fill="rgb(235,156,18)" rx="2" ry="2" />
<text  x="1019.44" y="1679.5" ></text>
</g>
<g >
<title>seastar::posix_file_real_impl::dma_read_bulk (1 samples, 0.02%)</title><rect x="17.9" y="1365" width="0.3" height="15.0" fill="rgb(237,124,22)" rx="2" ry="2" />
<text  x="20.94" y="1375.5" ></text>
</g>
<g >
<title>utils::timed_rate_moving_average_and_histogram::mark&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; (10 samples, 0.19%)</title><rect x="691.8" y="1893" width="2.2" height="15.0" fill="rgb(253,171,15)" rx="2" ry="2" />
<text  x="694.77" y="1903.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (2 samples, 0.04%)</title><rect x="589.0" y="1765" width="0.5" height="15.0" fill="rgb(251,58,28)" rx="2" ry="2" />
<text  x="592.00" y="1775.5" ></text>
</g>
<g >
<title>sstring_hash::operator (4 samples, 0.08%)</title><rect x="853.1" y="1797" width="0.9" height="15.0" fill="rgb(224,141,23)" rx="2" ry="2" />
<text  x="856.08" y="1807.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="520.3" y="1653" width="0.2" height="15.0" fill="rgb(228,199,37)" rx="2" ry="2" />
<text  x="523.25" y="1663.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_219f1a43593042f0924f8fe16cb9c27482170876] (1 samples, 0.02%)</title><rect x="222.8" y="1525" width="0.2" height="15.0" fill="rgb(234,43,22)" rx="2" ry="2" />
<text  x="225.81" y="1535.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::raw::batch_statement, std::default_delete&lt;cql3::statements::raw::batch_statement&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="66.0" y="1813" width="0.3" height="15.0" fill="rgb(215,172,10)" rx="2" ry="2" />
<text  x="69.04" y="1823.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (2 samples, 0.04%)</title><rect x="705.8" y="1877" width="0.5" height="15.0" fill="rgb(208,161,7)" rx="2" ry="2" />
<text  x="708.84" y="1887.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (5 samples, 0.10%)</title><rect x="502.1" y="1621" width="1.1" height="15.0" fill="rgb(225,102,24)" rx="2" ry="2" />
<text  x="505.10" y="1631.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_construct&lt;interval_bound&lt;dht::ring_position&gt; const&amp;&gt; (1 samples, 0.02%)</title><rect x="626.7" y="1861" width="0.2" height="15.0" fill="rgb(235,46,31)" rx="2" ry="2" />
<text  x="629.66" y="1871.5" ></text>
</g>
<g >
<title>reader_permit::impl::on_admission (2 samples, 0.04%)</title><rect x="1027.8" y="1653" width="0.4" height="15.0" fill="rgb(212,149,10)" rx="2" ry="2" />
<text  x="1030.78" y="1663.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::update_and_check (1 samples, 0.02%)</title><rect x="361.9" y="1605" width="0.2" height="15.0" fill="rgb(205,225,2)" rx="2" ry="2" />
<text  x="364.89" y="1615.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::~holder (1 samples, 0.02%)</title><rect x="578.1" y="1733" width="0.2" height="15.0" fill="rgb(250,134,37)" rx="2" ry="2" />
<text  x="581.11" y="1743.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_Optional_payload_base (2 samples, 0.04%)</title><rect x="817.9" y="1669" width="0.5" height="15.0" fill="rgb(221,199,45)" rx="2" ry="2" />
<text  x="820.92" y="1679.5" ></text>
</g>
<g >
<title>operator new (7 samples, 0.13%)</title><rect x="553.6" y="1829" width="1.6" height="15.0" fill="rgb(251,117,17)" rx="2" ry="2" />
<text  x="556.60" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (2 samples, 0.04%)</title><rect x="936.8" y="1829" width="0.5" height="15.0" fill="rgb(214,43,40)" rx="2" ry="2" />
<text  x="939.80" y="1839.5" ></text>
</g>
<g >
<title>bound_view::from_range_end&lt;nonwrapping_interval&gt; (1 samples, 0.02%)</title><rect x="282.3" y="1621" width="0.2" height="15.0" fill="rgb(244,54,35)" rx="2" ry="2" />
<text  x="285.26" y="1631.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cfName (2 samples, 0.04%)</title><rect x="40.9" y="1765" width="0.4" height="15.0" fill="rgb(233,71,51)" rx="2" ry="2" />
<text  x="43.86" y="1775.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (1 samples, 0.02%)</title><rect x="493.0" y="1701" width="0.3" height="15.0" fill="rgb(216,154,48)" rx="2" ry="2" />
<text  x="496.03" y="1711.5" ></text>
</g>
<g >
<title>ser::serializer&lt;partition_key&gt;::write&lt;bytes_ostream&gt; (1 samples, 0.02%)</title><rect x="138.2" y="1621" width="0.2" height="15.0" fill="rgb(239,72,19)" rx="2" ry="2" />
<text  x="141.19" y="1631.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (1 samples, 0.02%)</title><rect x="82.6" y="1589" width="0.2" height="15.0" fill="rgb(246,58,37)" rx="2" ry="2" />
<text  x="85.60" y="1599.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::future&lt;void&gt;  (33 samples, 0.63%)</title><rect x="1126.5" y="1781" width="7.5" height="15.0" fill="rgb(241,227,53)" rx="2" ry="2" />
<text  x="1129.47" y="1791.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::set_text (1 samples, 0.02%)</title><rect x="28.8" y="1685" width="0.3" height="15.0" fill="rgb(241,137,18)" rx="2" ry="2" />
<text  x="31.83" y="1695.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="454.9" y="1685" width="0.2" height="15.0" fill="rgb(249,14,52)" rx="2" ry="2" />
<text  x="457.91" y="1695.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.06%)</title><rect x="1144.9" y="1861" width="0.6" height="15.0" fill="rgb(214,175,44)" rx="2" ry="2" />
<text  x="1147.85" y="1871.5" ></text>
</g>
<g >
<title>ser::qr_partition__static_row&lt;bytes_ostream&gt;::start_cells (1 samples, 0.02%)</title><rect x="346.7" y="1589" width="0.2" height="15.0" fill="rgb(244,151,49)" rx="2" ry="2" />
<text  x="349.69" y="1599.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (2 samples, 0.04%)</title><rect x="923.2" y="1749" width="0.4" height="15.0" fill="rgb(247,206,44)" rx="2" ry="2" />
<text  x="926.19" y="1759.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (3 samples, 0.06%)</title><rect x="51.3" y="1685" width="0.7" height="15.0" fill="rgb(226,71,26)" rx="2" ry="2" />
<text  x="54.29" y="1695.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (1 samples, 0.02%)</title><rect x="74.2" y="1733" width="0.2" height="15.0" fill="rgb(243,122,51)" rx="2" ry="2" />
<text  x="77.21" y="1743.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value_view, std::allocator&lt;cql3::raw_value_view&gt; &gt;::_M_check_len (1 samples, 0.02%)</title><rect x="862.2" y="1797" width="0.2" height="15.0" fill="rgb(248,57,11)" rx="2" ry="2" />
<text  x="865.16" y="1807.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;compact_mutation_state&lt; (11 samples, 0.21%)</title><rect x="630.5" y="1845" width="2.5" height="15.0" fill="rgb(253,129,24)" rx="2" ry="2" />
<text  x="633.52" y="1855.5" ></text>
</g>
<g >
<title>std::hash&lt;auth::resource&gt;::operator (6 samples, 0.12%)</title><rect x="815.2" y="1573" width="1.4" height="15.0" fill="rgb(209,205,45)" rx="2" ry="2" />
<text  x="818.20" y="1583.5" ></text>
</g>
<g >
<title>compound_wrapper&lt;partition_key, partition_key_view&gt;::make_empty (14 samples, 0.27%)</title><rect x="560.2" y="1813" width="3.2" height="15.0" fill="rgb(209,122,0)" rx="2" ry="2" />
<text  x="563.18" y="1823.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (2 samples, 0.04%)</title><rect x="742.1" y="1813" width="0.5" height="15.0" fill="rgb(208,193,18)" rx="2" ry="2" />
<text  x="745.14" y="1823.5" ></text>
</g>
<g >
<title>std::__copy_n_a&lt;legacy_compound_view&lt;compound_type&lt; (12 samples, 0.23%)</title><rect x="921.1" y="1781" width="2.8" height="15.0" fill="rgb(250,12,16)" rx="2" ry="2" />
<text  x="924.15" y="1791.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::pop_mutation_fragment (1 samples, 0.02%)</title><rect x="174.0" y="1733" width="0.3" height="15.0" fill="rgb(245,150,52)" rx="2" ry="2" />
<text  x="177.03" y="1743.5" ></text>
</g>
<g >
<title>compound_type&lt; (1 samples, 0.02%)</title><rect x="877.1" y="1749" width="0.3" height="15.0" fill="rgb(209,110,44)" rx="2" ry="2" />
<text  x="880.13" y="1759.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;mutation_reader_merger::operator (38 samples, 0.73%)</title><rect x="293.1" y="1733" width="8.7" height="15.0" fill="rgb(206,69,52)" rx="2" ry="2" />
<text  x="296.15" y="1743.5" ></text>
</g>
<g >
<title>memtable_entry::snapshot (8 samples, 0.15%)</title><rect x="532.5" y="1749" width="1.8" height="15.0" fill="rgb(207,120,35)" rx="2" ry="2" />
<text  x="535.50" y="1759.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, cql3::statements::create_type_statement*, std::default_delete&lt;cql3::statements::create_type_statement&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="64.0" y="1749" width="0.2" height="15.0" fill="rgb(242,63,32)" rx="2" ry="2" />
<text  x="67.00" y="1759.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (2 samples, 0.04%)</title><rect x="39.7" y="1765" width="0.5" height="15.0" fill="rgb(227,5,13)" rx="2" ry="2" />
<text  x="42.72" y="1775.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.04%)</title><rect x="96.4" y="1893" width="0.5" height="15.0" fill="rgb(230,97,53)" rx="2" ry="2" />
<text  x="99.44" y="1903.5" ></text>
</g>
<g >
<title>dht::shard_of (1 samples, 0.02%)</title><rect x="999.4" y="1701" width="0.2" height="15.0" fill="rgb(220,42,15)" rx="2" ry="2" />
<text  x="1002.42" y="1711.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (4 samples, 0.08%)</title><rect x="198.3" y="1621" width="0.9" height="15.0" fill="rgb(230,187,14)" rx="2" ry="2" />
<text  x="201.31" y="1631.5" ></text>
</g>
<g >
<title>seastar::future&lt;std::tuple&lt;std::optional&lt;clustering_key_prefix&gt; &gt; &gt;::then_impl&lt;query::querier&lt; (6 samples, 0.12%)</title><rect x="557.0" y="1845" width="1.4" height="15.0" fill="rgb(244,3,34)" rx="2" ry="2" />
<text  x="560.01" y="1855.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::check (4 samples, 0.08%)</title><rect x="342.6" y="1637" width="0.9" height="15.0" fill="rgb(236,160,22)" rx="2" ry="2" />
<text  x="345.61" y="1647.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.02%)</title><rect x="11.6" y="1909" width="0.2" height="15.0" fill="rgb(240,64,41)" rx="2" ry="2" />
<text  x="14.59" y="1919.5" ></text>
</g>
<g >
<title>write_cell&lt;ser::qr_clustered_row__cells__cells&lt;bytes_ostream&gt; &gt; (1 samples, 0.02%)</title><rect x="699.7" y="1685" width="0.2" height="15.0" fill="rgb(253,97,13)" rx="2" ry="2" />
<text  x="702.71" y="1695.5" ></text>
</g>
<g >
<title>composite::serialize_value&lt;partition_key_view&amp;, signed char*&gt; (1 samples, 0.02%)</title><rect x="83.7" y="1781" width="0.3" height="15.0" fill="rgb(247,180,7)" rx="2" ry="2" />
<text  x="86.74" y="1791.5" ></text>
</g>
<g >
<title>std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt;::emplace_back&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; (8 samples, 0.15%)</title><rect x="283.4" y="1637" width="1.8" height="15.0" fill="rgb(208,34,1)" rx="2" ry="2" />
<text  x="286.39" y="1647.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::deallocate (2 samples, 0.04%)</title><rect x="589.7" y="1781" width="0.4" height="15.0" fill="rgb(254,181,17)" rx="2" ry="2" />
<text  x="592.68" y="1791.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (3 samples, 0.06%)</title><rect x="113.2" y="1909" width="0.7" height="15.0" fill="rgb(220,93,50)" rx="2" ry="2" />
<text  x="116.23" y="1919.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::execute (7 samples, 0.13%)</title><rect x="769.4" y="1829" width="1.6" height="15.0" fill="rgb(234,211,14)" rx="2" ry="2" />
<text  x="772.37" y="1839.5" ></text>
</g>
<g >
<title>mutation_source::mutation_source (2 samples, 0.04%)</title><rect x="638.5" y="1845" width="0.4" height="15.0" fill="rgb(233,137,33)" rx="2" ry="2" />
<text  x="641.46" y="1855.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="49.9" y="1637" width="0.3" height="15.0" fill="rgb(218,95,25)" rx="2" ry="2" />
<text  x="52.93" y="1647.5" ></text>
</g>
<g >
<title>row::apply_monotonically (1 samples, 0.02%)</title><rect x="878.7" y="1717" width="0.2" height="15.0" fill="rgb(222,100,54)" rx="2" ry="2" />
<text  x="881.72" y="1727.5" ></text>
</g>
<g >
<title>operator new (6 samples, 0.12%)</title><rect x="509.6" y="1717" width="1.3" height="15.0" fill="rgb(215,12,33)" rx="2" ry="2" />
<text  x="512.59" y="1727.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::insertToken (9 samples, 0.17%)</title><rect x="22.5" y="1717" width="2.0" height="15.0" fill="rgb(231,155,46)" rx="2" ry="2" />
<text  x="25.48" y="1727.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.04%)</title><rect x="515.0" y="1717" width="0.5" height="15.0" fill="rgb(227,17,32)" rx="2" ry="2" />
<text  x="518.03" y="1727.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.06%)</title><rect x="855.8" y="1829" width="0.7" height="15.0" fill="rgb(208,164,24)" rx="2" ry="2" />
<text  x="858.81" y="1839.5" ></text>
</g>
<g >
<title>siglongjmp@GLIBC_2.2.5 (1 samples, 0.02%)</title><rect x="642.8" y="1909" width="0.2" height="15.0" fill="rgb(233,8,47)" rx="2" ry="2" />
<text  x="645.77" y="1919.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="57.2" y="1717" width="0.2" height="15.0" fill="rgb(245,197,6)" rx="2" ry="2" />
<text  x="60.19" y="1727.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::operation::set_value, std::default_delete&lt;cql3::operation::set_value&gt; &gt;::__uniq_ptr_impl (1 samples, 0.02%)</title><rect x="56.5" y="1685" width="0.2" height="15.0" fill="rgb(219,112,39)" rx="2" ry="2" />
<text  x="59.51" y="1695.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="206.5" y="1653" width="0.2" height="15.0" fill="rgb(245,7,35)" rx="2" ry="2" />
<text  x="209.48" y="1663.5" ></text>
</g>
<g >
<title>utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (1 samples, 0.02%)</title><rect x="77.8" y="1637" width="0.3" height="15.0" fill="rgb(205,52,15)" rx="2" ry="2" />
<text  x="80.84" y="1647.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;query::result_memory_limiter::new_data_read (3 samples, 0.06%)</title><rect x="620.5" y="1861" width="0.7" height="15.0" fill="rgb(230,105,16)" rx="2" ry="2" />
<text  x="623.53" y="1871.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::find&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="839.5" y="1765" width="0.2" height="15.0" fill="rgb(217,10,49)" rx="2" ry="2" />
<text  x="842.47" y="1775.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.02%)</title><rect x="11.6" y="1877" width="0.2" height="15.0" fill="rgb(244,16,40)" rx="2" ry="2" />
<text  x="14.59" y="1887.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="100.1" y="1877" width="0.2" height="15.0" fill="rgb(222,16,14)" rx="2" ry="2" />
<text  x="103.07" y="1887.5" ></text>
</g>
<g >
<title>seastar::reactor::del_timer (1 samples, 0.02%)</title><rect x="724.2" y="1829" width="0.2" height="15.0" fill="rgb(216,212,14)" rx="2" ry="2" />
<text  x="727.22" y="1839.5" ></text>
</g>
<g >
<title>dht::ring_position::as_decorated_key (1 samples, 0.02%)</title><rect x="448.1" y="1765" width="0.2" height="15.0" fill="rgb(223,126,49)" rx="2" ry="2" />
<text  x="451.10" y="1775.5" ></text>
</g>
<g >
<title>bplus::tree&lt;long, intrusive_array&lt;memtable_entry&gt;, dht::raw_token_less_comparator, 16ul,  (41 samples, 0.79%)</title><rect x="484.0" y="1717" width="9.3" height="15.0" fill="rgb(211,26,42)" rx="2" ry="2" />
<text  x="486.95" y="1727.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;cql3::expr::expression&gt;::new_allocator (1 samples, 0.02%)</title><rect x="52.0" y="1637" width="0.2" height="15.0" fill="rgb(226,155,46)" rx="2" ry="2" />
<text  x="54.97" y="1647.5" ></text>
</g>
<g >
<title>seastar::app_template::run (4,769 samples, 91.69%)</title><rect x="84.9" y="2005" width="1082.0" height="15.0" fill="rgb(218,221,37)" rx="2" ry="2" />
<text  x="87.87" y="2015.5" >seastar::app_template::run</text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.02%)</title><rect x="54.2" y="1493" width="0.3" height="15.0" fill="rgb(251,127,2)" rx="2" ry="2" />
<text  x="57.24" y="1503.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.5" y="757" width="0.2" height="15.0" fill="rgb(218,133,54)" rx="2" ry="2" />
<text  x="13.45" y="767.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_erase_at_end (7 samples, 0.13%)</title><rect x="393.2" y="1605" width="1.6" height="15.0" fill="rgb(236,54,28)" rx="2" ry="2" />
<text  x="396.20" y="1615.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::check_access (10 samples, 0.19%)</title><rect x="77.2" y="1909" width="2.2" height="15.0" fill="rgb(233,102,37)" rx="2" ry="2" />
<text  x="80.16" y="1919.5" ></text>
</g>
<g >
<title>service::storage_proxy::sort_endpoints_by_proximity (6 samples, 0.12%)</title><rect x="1079.5" y="1749" width="1.4" height="15.0" fill="rgb(252,71,19)" rx="2" ry="2" />
<text  x="1082.51" y="1759.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value_view, std::allocator&lt;cql3::raw_value_view&gt; &gt;::_M_realloc_insert&lt;cql3::raw_value_view&gt; (8 samples, 0.15%)</title><rect x="862.4" y="1797" width="1.8" height="15.0" fill="rgb(243,125,25)" rx="2" ry="2" />
<text  x="865.39" y="1807.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;void&gt;::set_value&lt;&gt; (1 samples, 0.02%)</title><rect x="723.5" y="1845" width="0.3" height="15.0" fill="rgb(235,78,12)" rx="2" ry="2" />
<text  x="726.54" y="1855.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::allocate (1 samples, 0.02%)</title><rect x="527.3" y="1653" width="0.2" height="15.0" fill="rgb(222,216,23)" rx="2" ry="2" />
<text  x="530.29" y="1663.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (1 samples, 0.02%)</title><rect x="20.2" y="1733" width="0.2" height="15.0" fill="rgb(232,189,10)" rx="2" ry="2" />
<text  x="23.21" y="1743.5" ></text>
</g>
<g >
<title>__dynamic_cast (9 samples, 0.17%)</title><rect x="889.4" y="1845" width="2.0" height="15.0" fill="rgb(221,139,22)" rx="2" ry="2" />
<text  x="892.38" y="1855.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;flat_mutation_reader::peek (1 samples, 0.02%)</title><rect x="438.3" y="1829" width="0.3" height="15.0" fill="rgb(252,79,49)" rx="2" ry="2" />
<text  x="441.35" y="1839.5" ></text>
</g>
<g >
<title>seastar::reactor::file_accessible (1 samples, 0.02%)</title><rect x="730.6" y="1877" width="0.2" height="15.0" fill="rgb(222,85,43)" rx="2" ry="2" />
<text  x="733.57" y="1887.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::storage_proxy&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="1060.5" y="1733" width="0.2" height="15.0" fill="rgb(218,25,29)" rx="2" ry="2" />
<text  x="1063.45" y="1743.5" ></text>
</g>
<g >
<title>seastar::repeat&lt;flat_mutation_reader::impl::consume_pausable&lt;flush_reader::fill_buffer (6 samples, 0.12%)</title><rect x="81.9" y="1829" width="1.4" height="15.0" fill="rgb(232,156,14)" rx="2" ry="2" />
<text  x="84.92" y="1839.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="62.2" y="1781" width="0.2" height="15.0" fill="rgb(212,52,50)" rx="2" ry="2" />
<text  x="65.18" y="1791.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (1 samples, 0.02%)</title><rect x="642.1" y="1877" width="0.2" height="15.0" fill="rgb(225,15,32)" rx="2" ry="2" />
<text  x="645.09" y="1887.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="638.7" y="1797" width="0.2" height="15.0" fill="rgb(254,82,53)" rx="2" ry="2" />
<text  x="641.68" y="1807.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="332.4" y="1733" width="0.2" height="15.0" fill="rgb(227,190,36)" rx="2" ry="2" />
<text  x="335.40" y="1743.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (26 samples, 0.50%)</title><rect x="874.6" y="1877" width="5.9" height="15.0" fill="rgb(243,44,51)" rx="2" ry="2" />
<text  x="877.64" y="1887.5" ></text>
</g>
<g >
<title>std::apply&lt;service::client_state::has_column_family_access (182 samples, 3.50%)</title><rect x="788.2" y="1813" width="41.3" height="15.0" fill="rgb(227,21,11)" rx="2" ry="2" />
<text  x="791.20" y="1823.5" >std..</text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (2 samples, 0.04%)</title><rect x="44.0" y="1717" width="0.5" height="15.0" fill="rgb(226,20,42)" rx="2" ry="2" />
<text  x="47.03" y="1727.5" ></text>
</g>
<g >
<title>std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt;::emplace_back&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; (1 samples, 0.02%)</title><rect x="264.6" y="1589" width="0.2" height="15.0" fill="rgb(228,8,39)" rx="2" ry="2" />
<text  x="267.56" y="1599.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (4 samples, 0.08%)</title><rect x="248.2" y="1525" width="0.9" height="15.0" fill="rgb(254,76,6)" rx="2" ry="2" />
<text  x="251.22" y="1535.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::build_partition_keys (6 samples, 0.12%)</title><rect x="876.7" y="1813" width="1.3" height="15.0" fill="rgb(242,43,6)" rx="2" ry="2" />
<text  x="879.68" y="1823.5" ></text>
</g>
<g >
<title>seastar::metrics::impl::metric_id::full_name (1 samples, 0.02%)</title><rect x="17.5" y="1717" width="0.2" height="15.0" fill="rgb(226,106,37)" rx="2" ry="2" />
<text  x="20.49" y="1727.5" ></text>
</g>
<g >
<title>logalloc::basic_region_impl::set_reclaiming_enabled (1 samples, 0.02%)</title><rect x="289.7" y="1637" width="0.3" height="15.0" fill="rgb(226,69,45)" rx="2" ry="2" />
<text  x="292.74" y="1647.5" ></text>
</g>
<g >
<title>cql3::raw_value_view::with_value&lt;cql3::update_parameters::make_cell (2 samples, 0.04%)</title><rect x="878.0" y="1701" width="0.5" height="15.0" fill="rgb(238,168,16)" rx="2" ry="2" />
<text  x="881.04" y="1711.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::sharded&lt;service::storage_proxy&gt;::start&lt;std::reference_wrapper&lt;seastar::sharded&lt;database&gt; &gt;, std::reference_wrapper&lt;seastar::sharded&lt;gms::gossiper&gt; &gt;, service::storage_proxy::config&amp;, std::reference_wrapper&lt;db::view::node_update_backlog&gt;, seastar::scheduling_group_key, std::reference_wrapper&lt;seastar::sharded&lt;gms::feature_service&gt; &gt;, std::reference_wrapper&lt;seastar::sharded&lt;locator::shared_token_metadata&gt; &gt;, std::reference_wrapper&lt;seastar::sharded&lt;netw::messaging_service&gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="17.5" y="1893" width="0.2" height="15.0" fill="rgb(220,15,28)" rx="2" ry="2" />
<text  x="20.49" y="1903.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.04%)</title><rect x="940.2" y="1797" width="0.5" height="15.0" fill="rgb(223,151,46)" rx="2" ry="2" />
<text  x="943.21" y="1807.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::local (1 samples, 0.02%)</title><rect x="1113.8" y="1845" width="0.2" height="15.0" fill="rgb(212,62,49)" rx="2" ry="2" />
<text  x="1116.77" y="1855.5" ></text>
</g>
<g >
<title>seastar::aio_storage_context::submit_work (1 samples, 0.02%)</title><rect x="1166.0" y="1909" width="0.2" height="15.0" fill="rgb(214,118,50)" rx="2" ry="2" />
<text  x="1168.95" y="1919.5" ></text>
</g>
<g >
<title>partition_version_ref::operator (1 samples, 0.02%)</title><rect x="259.6" y="1541" width="0.2" height="15.0" fill="rgb(213,8,31)" rx="2" ry="2" />
<text  x="262.57" y="1551.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="918.0" y="1749" width="0.2" height="15.0" fill="rgb(232,217,15)" rx="2" ry="2" />
<text  x="920.97" y="1759.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (2 samples, 0.04%)</title><rect x="205.3" y="1637" width="0.5" height="15.0" fill="rgb(232,26,12)" rx="2" ry="2" />
<text  x="208.34" y="1647.5" ></text>
</g>
<g >
<title>ser::integral_serializer&lt;unsigned int&gt;::read&lt;seastar::simple_memory_input_stream&gt; (1 samples, 0.02%)</title><rect x="1123.1" y="1621" width="0.2" height="15.0" fill="rgb(239,102,20)" rx="2" ry="2" />
<text  x="1126.07" y="1631.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_data_requests (255 samples, 4.90%)</title><rect x="987.9" y="1749" width="57.8" height="15.0" fill="rgb(208,117,20)" rx="2" ry="2" />
<text  x="990.85" y="1759.5" >servic..</text>
</g>
<g >
<title>boost::iterators::filter_iterator&lt;mutation_partition::non_dummy_rows (1 samples, 0.02%)</title><rect x="1129.9" y="1573" width="0.2" height="15.0" fill="rgb(226,118,34)" rx="2" ry="2" />
<text  x="1132.88" y="1583.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.02%)</title><rect x="46.8" y="1701" width="0.2" height="15.0" fill="rgb(251,29,13)" rx="2" ry="2" />
<text  x="49.75" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.02%)</title><rect x="57.9" y="1701" width="0.2" height="15.0" fill="rgb(252,186,28)" rx="2" ry="2" />
<text  x="60.87" y="1711.5" ></text>
</g>
<g >
<title>operator new (10 samples, 0.19%)</title><rect x="953.4" y="1829" width="2.2" height="15.0" fill="rgb(232,118,36)" rx="2" ry="2" />
<text  x="956.36" y="1839.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;auth::resource&gt;::_Optional_payload_base (1 samples, 0.02%)</title><rect x="795.7" y="1733" width="0.2" height="15.0" fill="rgb(211,181,25)" rx="2" ry="2" />
<text  x="798.68" y="1743.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;signed char, std::char_traits&lt;signed char&gt; &gt;::substr (3 samples, 0.06%)</title><rect x="917.1" y="1749" width="0.6" height="15.0" fill="rgb(227,88,37)" rx="2" ry="2" />
<text  x="920.06" y="1759.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="537.0" y="1749" width="0.3" height="15.0" fill="rgb(244,59,4)" rx="2" ry="2" />
<text  x="540.04" y="1759.5" ></text>
</g>
<g >
<title>utils::config_file::named_value&lt;unsigned long&gt;::the_value (1 samples, 0.02%)</title><rect x="1116.9" y="1829" width="0.3" height="15.0" fill="rgb(254,169,40)" rx="2" ry="2" />
<text  x="1119.94" y="1839.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::deallocate (1 samples, 0.02%)</title><rect x="81.7" y="1749" width="0.2" height="15.0" fill="rgb(235,8,1)" rx="2" ry="2" />
<text  x="84.69" y="1759.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;void&gt; &gt;::invoke&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::mutate_locally (2 samples, 0.04%)</title><rect x="1128.1" y="1605" width="0.4" height="15.0" fill="rgb(239,126,42)" rx="2" ry="2" />
<text  x="1131.06" y="1615.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::clone&lt;row::row (1 samples, 0.02%)</title><rect x="106.9" y="1621" width="0.2" height="15.0" fill="rgb(229,14,26)" rx="2" ry="2" />
<text  x="109.88" y="1631.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (3 samples, 0.06%)</title><rect x="22.9" y="1621" width="0.7" height="15.0" fill="rgb(223,74,35)" rx="2" ry="2" />
<text  x="25.93" y="1631.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::query_options, std::default_delete&lt;cql3::query_options&gt; &gt;::~unique_ptr (17 samples, 0.33%)</title><rect x="684.7" y="1909" width="3.9" height="15.0" fill="rgb(217,207,50)" rx="2" ry="2" />
<text  x="687.74" y="1919.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (1 samples, 0.02%)</title><rect x="701.3" y="1621" width="0.2" height="15.0" fill="rgb(237,82,45)" rx="2" ry="2" />
<text  x="704.30" y="1631.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (1 samples, 0.02%)</title><rect x="101.4" y="1893" width="0.3" height="15.0" fill="rgb(239,162,54)" rx="2" ry="2" />
<text  x="104.43" y="1903.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="1095.6" y="1797" width="0.2" height="15.0" fill="rgb(213,1,37)" rx="2" ry="2" />
<text  x="1098.62" y="1807.5" ></text>
</g>
<g >
<title>sstables::mc::writer::write_clustered (2 samples, 0.04%)</title><rect x="83.3" y="1797" width="0.4" height="15.0" fill="rgb(225,44,46)" rx="2" ry="2" />
<text  x="86.28" y="1807.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;executor&lt;test_read (1 samples, 0.02%)</title><rect x="10.5" y="101" width="0.2" height="15.0" fill="rgb(230,66,31)" rx="2" ry="2" />
<text  x="13.45" y="111.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (456 samples, 8.77%)</title><rect x="330.4" y="1781" width="103.4" height="15.0" fill="rgb(215,19,10)" rx="2" ry="2" />
<text  x="333.35" y="1791.5" >flat_mutatio..</text>
</g>
<g >
<title>service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;, service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (21 samples, 0.40%)</title><rect x="1129.2" y="1685" width="4.8" height="15.0" fill="rgb(233,62,24)" rx="2" ry="2" />
<text  x="1132.20" y="1695.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::~small_vector (2 samples, 0.04%)</title><rect x="462.4" y="1717" width="0.5" height="15.0" fill="rgb(217,55,25)" rx="2" ry="2" />
<text  x="465.40" y="1727.5" ></text>
</g>
<g >
<title>basic_atomic_cell_view&lt; (30 samples, 0.58%)</title><rect x="402.7" y="1589" width="6.8" height="15.0" fill="rgb(254,34,22)" rx="2" ry="2" />
<text  x="405.73" y="1599.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.02%)</title><rect x="40.9" y="1573" width="0.2" height="15.0" fill="rgb(233,109,45)" rx="2" ry="2" />
<text  x="43.86" y="1583.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::initial_key_restrictions&lt;partition_key&gt;::merge_to (4 samples, 0.08%)</title><rect x="72.6" y="1813" width="0.9" height="15.0" fill="rgb(253,9,28)" rx="2" ry="2" />
<text  x="75.62" y="1823.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="1126.9" y="1637" width="0.3" height="15.0" fill="rgb(211,83,46)" rx="2" ry="2" />
<text  x="1129.93" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.5" y="565" width="0.2" height="15.0" fill="rgb(251,143,23)" rx="2" ry="2" />
<text  x="13.45" y="575.5" ></text>
</g>
<g >
<title>bytes_view_hasher::finalize (5 samples, 0.10%)</title><rect x="747.6" y="1717" width="1.1" height="15.0" fill="rgb(242,133,16)" rx="2" ry="2" />
<text  x="750.59" y="1727.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (17 samples, 0.33%)</title><rect x="1000.6" y="1685" width="3.8" height="15.0" fill="rgb(220,86,40)" rx="2" ry="2" />
<text  x="1003.56" y="1695.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (9 samples, 0.17%)</title><rect x="921.6" y="1765" width="2.0" height="15.0" fill="rgb(218,171,44)" rx="2" ry="2" />
<text  x="924.60" y="1775.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="60.4" y="1653" width="0.2" height="15.0" fill="rgb(212,64,26)" rx="2" ry="2" />
<text  x="63.37" y="1663.5" ></text>
</g>
<g >
<title>schema_builder::build (1 samples, 0.02%)</title><rect x="17.3" y="1669" width="0.2" height="15.0" fill="rgb(209,48,51)" rx="2" ry="2" />
<text  x="20.26" y="1679.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;std::tuple&lt;std::optional&lt;clustering_key_prefix&gt; &gt; &gt;, query::consume_page&lt; (7 samples, 0.13%)</title><rect x="699.0" y="1925" width="1.6" height="15.0" fill="rgb(225,171,39)" rx="2" ry="2" />
<text  x="702.03" y="1935.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate (41 samples, 0.79%)</title><rect x="896.4" y="1749" width="9.3" height="15.0" fill="rgb(220,196,9)" rx="2" ry="2" />
<text  x="899.42" y="1759.5" ></text>
</g>
<g >
<title>utils::loading_shared_values&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater, 256ul&gt;::find&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt; &gt; (24 samples, 0.46%)</title><rect x="743.3" y="1813" width="5.4" height="15.0" fill="rgb(244,125,31)" rx="2" ry="2" />
<text  x="746.27" y="1823.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::clear (3 samples, 0.06%)</title><rect x="413.8" y="1637" width="0.7" height="15.0" fill="rgb(209,140,12)" rx="2" ry="2" />
<text  x="416.85" y="1647.5" ></text>
</g>
<g >
<title>ser::writer_of_query_result&lt;bytes_ostream&gt;::writer_of_query_result (14 samples, 0.27%)</title><rect x="614.0" y="1829" width="3.1" height="15.0" fill="rgb(226,139,16)" rx="2" ry="2" />
<text  x="616.95" y="1839.5" ></text>
</g>
<g >
<title>absl::hash_internal::AbslHashValue&lt;absl::hash_internal::HashState&gt; (3 samples, 0.06%)</title><rect x="857.6" y="1765" width="0.7" height="15.0" fill="rgb(239,165,29)" rx="2" ry="2" />
<text  x="860.62" y="1775.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.04%)</title><rect x="55.8" y="1717" width="0.5" height="15.0" fill="rgb(225,174,39)" rx="2" ry="2" />
<text  x="58.83" y="1727.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;void&gt;  (1 samples, 0.02%)</title><rect x="84.4" y="2037" width="0.2" height="15.0" fill="rgb(208,86,15)" rx="2" ry="2" />
<text  x="87.42" y="2047.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_wrapped_common&lt;false, seastar::future&lt;void&gt;, seastar::future&lt;void&gt;::handle_exception&lt;service::abstract_read_executor::execute (3 samples, 0.06%)</title><rect x="707.0" y="1877" width="0.7" height="15.0" fill="rgb(229,41,36)" rx="2" ry="2" />
<text  x="709.97" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.5" y="1509" width="0.2" height="15.0" fill="rgb(240,30,5)" rx="2" ry="2" />
<text  x="13.45" y="1519.5" ></text>
</g>
<g >
<title>empty_flat_reader::close (2 samples, 0.04%)</title><rect x="573.3" y="1765" width="0.5" height="15.0" fill="rgb(211,178,28)" rx="2" ry="2" />
<text  x="576.34" y="1775.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::cancel (1 samples, 0.02%)</title><rect x="724.2" y="1845" width="0.2" height="15.0" fill="rgb(228,213,19)" rx="2" ry="2" />
<text  x="727.22" y="1855.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reserve&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (1 samples, 0.02%)</title><rect x="874.0" y="1829" width="0.2" height="15.0" fill="rgb(219,47,30)" rx="2" ry="2" />
<text  x="876.96" y="1839.5" ></text>
</g>
<g >
<title>bplus::searcher&lt;dht::ring_position, long, dht::raw_token_less_comparator, 16ul,  (2 samples, 0.04%)</title><rect x="483.5" y="1717" width="0.5" height="15.0" fill="rgb(246,108,47)" rx="2" ry="2" />
<text  x="486.50" y="1727.5" ></text>
</g>
<g >
<title>compound_wrapper&lt;partition_key, partition_key_view&gt;::explode (1 samples, 0.02%)</title><rect x="1131.5" y="1525" width="0.2" height="15.0" fill="rgb(232,169,0)" rx="2" ry="2" />
<text  x="1134.47" y="1535.5" ></text>
</g>
<g >
<title>std::make_unique&lt;merging_reader&lt;mutation_reader_merger&gt;, seastar::lw_shared_ptr&lt;schema const&gt;&amp;, reader_permit, seastar::bool_class&lt;streamed_mutation::forwarding_tag&gt;&amp;, mutation_reader_merger&gt; (36 samples, 0.69%)</title><rect x="464.4" y="1733" width="8.2" height="15.0" fill="rgb(244,27,13)" rx="2" ry="2" />
<text  x="467.44" y="1743.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.02%)</title><rect x="49.5" y="1653" width="0.2" height="15.0" fill="rgb(222,87,25)" rx="2" ry="2" />
<text  x="52.48" y="1663.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.04%)</title><rect x="58.6" y="1669" width="0.4" height="15.0" fill="rgb(223,207,9)" rx="2" ry="2" />
<text  x="61.55" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_List_node_header::_List_node_header (4 samples, 0.08%)</title><rect x="469.7" y="1701" width="0.9" height="15.0" fill="rgb(225,101,36)" rx="2" ry="2" />
<text  x="472.66" y="1711.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.02%)</title><rect x="11.8" y="1893" width="0.2" height="15.0" fill="rgb(212,134,24)" rx="2" ry="2" />
<text  x="14.82" y="1903.5" ></text>
</g>
<g >
<title>ser::after_column__id&lt;bytes_ostream&gt;::after_column__id (1 samples, 0.02%)</title><rect x="108.7" y="1701" width="0.2" height="15.0" fill="rgb(221,64,28)" rx="2" ry="2" />
<text  x="111.69" y="1711.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_clear (2 samples, 0.04%)</title><rect x="595.6" y="1797" width="0.4" height="15.0" fill="rgb(223,218,10)" rx="2" ry="2" />
<text  x="598.58" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::binary_operator const*&gt;  (1 samples, 0.02%)</title><rect x="665.7" y="1861" width="0.2" height="15.0" fill="rgb(253,219,28)" rx="2" ry="2" />
<text  x="668.68" y="1871.5" ></text>
</g>
<g >
<title>db::schema_tables::calculate_schema_digest (1 samples, 0.02%)</title><rect x="107.6" y="1893" width="0.2" height="15.0" fill="rgb(249,95,13)" rx="2" ry="2" />
<text  x="110.56" y="1903.5" ></text>
</g>
<g >
<title>ser::serializer&lt;ser::column_view&gt;::skip&lt;seastar::simple_memory_input_stream&gt; (1 samples, 0.02%)</title><rect x="1124.2" y="1605" width="0.2" height="15.0" fill="rgb(216,105,2)" rx="2" ry="2" />
<text  x="1127.20" y="1615.5" ></text>
</g>
<g >
<title>free (9 samples, 0.17%)</title><rect x="421.6" y="1605" width="2.0" height="15.0" fill="rgb(236,147,41)" rx="2" ry="2" />
<text  x="424.56" y="1615.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.02%)</title><rect x="46.8" y="1621" width="0.2" height="15.0" fill="rgb(206,201,37)" rx="2" ry="2" />
<text  x="49.75" y="1631.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (7 samples, 0.13%)</title><rect x="278.6" y="1605" width="1.6" height="15.0" fill="rgb(254,12,5)" rx="2" ry="2" />
<text  x="281.63" y="1615.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::do_refresh_state (40 samples, 0.77%)</title><rect x="276.1" y="1653" width="9.1" height="15.0" fill="rgb(210,170,13)" rx="2" ry="2" />
<text  x="279.13" y="1663.5" ></text>
</g>
<g >
<title>schema::column_at (2 samples, 0.04%)</title><rect x="412.9" y="1605" width="0.5" height="15.0" fill="rgb(214,81,18)" rx="2" ry="2" />
<text  x="415.94" y="1615.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="54.5" y="1621" width="0.2" height="15.0" fill="rgb(210,55,28)" rx="2" ry="2" />
<text  x="57.47" y="1631.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*&gt; &gt;::_Deque_base (1 samples, 0.02%)</title><rect x="20.4" y="1717" width="0.3" height="15.0" fill="rgb(214,91,47)" rx="2" ry="2" />
<text  x="23.44" y="1727.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (3 samples, 0.06%)</title><rect x="37.2" y="1717" width="0.7" height="15.0" fill="rgb(234,193,2)" rx="2" ry="2" />
<text  x="40.23" y="1727.5" ></text>
</g>
<g >
<title>clustering_row::clustering_row (161 samples, 3.10%)</title><rect x="213.7" y="1589" width="36.6" height="15.0" fill="rgb(208,7,3)" rx="2" ry="2" />
<text  x="216.74" y="1599.5" >clu..</text>
</g>
<g >
<title>std::pair&lt;auth::role_or_anonymous, auth::resource&gt;::pair&lt;auth::role_or_anonymous, auth::resource, true&gt; (4 samples, 0.08%)</title><rect x="817.9" y="1685" width="0.9" height="15.0" fill="rgb(237,47,51)" rx="2" ry="2" />
<text  x="820.92" y="1695.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (11 samples, 0.21%)</title><rect x="201.7" y="1621" width="2.5" height="15.0" fill="rgb(213,158,23)" rx="2" ry="2" />
<text  x="204.71" y="1631.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::merging_reader (24 samples, 0.46%)</title><rect x="465.3" y="1717" width="5.5" height="15.0" fill="rgb(254,128,29)" rx="2" ry="2" />
<text  x="468.35" y="1727.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;sstables::file_writer&gt;, sstables::sstable::make_component_file_writer (1 samples, 0.02%)</title><rect x="698.8" y="1925" width="0.2" height="15.0" fill="rgb(247,142,1)" rx="2" ry="2" />
<text  x="701.81" y="1935.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (2 samples, 0.04%)</title><rect x="777.8" y="1717" width="0.4" height="15.0" fill="rgb(231,65,11)" rx="2" ry="2" />
<text  x="780.76" y="1727.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_live_sorted_endpoints (3 samples, 0.06%)</title><rect x="1046.4" y="1781" width="0.7" height="15.0" fill="rgb(243,132,22)" rx="2" ry="2" />
<text  x="1049.39" y="1791.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (2 samples, 0.04%)</title><rect x="1054.6" y="1701" width="0.4" height="15.0" fill="rgb(225,200,21)" rx="2" ry="2" />
<text  x="1057.55" y="1711.5" ></text>
</g>
<g >
<title>seastar::file_data_sink_impl::file_data_sink_impl (1 samples, 0.02%)</title><rect x="698.8" y="1861" width="0.2" height="15.0" fill="rgb(245,35,34)" rx="2" ry="2" />
<text  x="701.81" y="1871.5" ></text>
</g>
<g >
<title>schema::column_at (1 samples, 0.02%)</title><rect x="82.8" y="1605" width="0.3" height="15.0" fill="rgb(254,149,44)" rx="2" ry="2" />
<text  x="85.83" y="1615.5" ></text>
</g>
<g >
<title>operator delete (5 samples, 0.10%)</title><rect x="93.0" y="1909" width="1.2" height="15.0" fill="rgb(220,151,45)" rx="2" ry="2" />
<text  x="96.04" y="1919.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_erase_at_end (1 samples, 0.02%)</title><rect x="19.8" y="1813" width="0.2" height="15.0" fill="rgb(209,225,53)" rx="2" ry="2" />
<text  x="22.76" y="1823.5" ></text>
</g>
<g >
<title>to_hex (3 samples, 0.06%)</title><rect x="79.7" y="1925" width="0.6" height="15.0" fill="rgb(220,164,15)" rx="2" ry="2" />
<text  x="82.65" y="1935.5" ></text>
</g>
<g >
<title>bound_view::from_range_end&lt;nonwrapping_interval&gt; (1 samples, 0.02%)</title><rect x="263.2" y="1541" width="0.2" height="15.0" fill="rgb(236,85,35)" rx="2" ry="2" />
<text  x="266.20" y="1551.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="54.5" y="1589" width="0.2" height="15.0" fill="rgb(216,145,12)" rx="2" ry="2" />
<text  x="57.47" y="1599.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (7 samples, 0.13%)</title><rect x="774.6" y="1765" width="1.6" height="15.0" fill="rgb(249,102,2)" rx="2" ry="2" />
<text  x="777.58" y="1775.5" ></text>
</g>
<g >
<title>mutation_partition_serializer::write_serialized&lt;ser::writer_of_mutation_partition&lt;bytes_ostream&gt; &gt; (7 samples, 0.13%)</title><rect x="1129.7" y="1589" width="1.5" height="15.0" fill="rgb(234,38,12)" rx="2" ry="2" />
<text  x="1132.65" y="1599.5" ></text>
</g>
<g >
<title>reader_permit::consume (1 samples, 0.02%)</title><rect x="522.1" y="1621" width="0.2" height="15.0" fill="rgb(247,101,44)" rx="2" ry="2" />
<text  x="525.07" y="1631.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.02%)</title><rect x="45.4" y="1605" width="0.2" height="15.0" fill="rgb(249,96,23)" rx="2" ry="2" />
<text  x="48.39" y="1615.5" ></text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;void&gt;, database*, seastar::lw_shared_ptr&lt;schema const&gt;, frozen_mutation const&amp;, tracing::trace_state_ptr, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, seastar::bool_class&lt;db::force_sync_tag&gt; &gt;::make_stage_for_group (33 samples, 0.63%)</title><rect x="1119.0" y="1829" width="7.5" height="15.0" fill="rgb(224,51,29)" rx="2" ry="2" />
<text  x="1121.99" y="1839.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (3 samples, 0.06%)</title><rect x="37.2" y="1653" width="0.7" height="15.0" fill="rgb(211,140,12)" rx="2" ry="2" />
<text  x="40.23" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.5" y="1221" width="0.2" height="15.0" fill="rgb(239,166,2)" rx="2" ry="2" />
<text  x="13.45" y="1231.5" ></text>
</g>
<g >
<title>absl::hash_internal::HashState::combine_contiguous (2 samples, 0.04%)</title><rect x="1055.7" y="1685" width="0.4" height="15.0" fill="rgb(219,162,47)" rx="2" ry="2" />
<text  x="1058.69" y="1695.5" ></text>
</g>
<g >
<title>reader_permit::consume_resources (1 samples, 0.02%)</title><rect x="256.4" y="1573" width="0.2" height="15.0" fill="rgb(211,193,39)" rx="2" ry="2" />
<text  x="259.39" y="1583.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.02%)</title><rect x="49.5" y="1717" width="0.2" height="15.0" fill="rgb(211,131,27)" rx="2" ry="2" />
<text  x="52.48" y="1727.5" ></text>
</g>
<g >
<title>seastar::reactor::del_timer (1 samples, 0.02%)</title><rect x="131.8" y="1797" width="0.3" height="15.0" fill="rgb(238,30,40)" rx="2" ry="2" />
<text  x="134.83" y="1807.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_result_local (1 samples, 0.02%)</title><rect x="1045.5" y="1733" width="0.2" height="15.0" fill="rgb(254,139,47)" rx="2" ry="2" />
<text  x="1048.48" y="1743.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (3 samples, 0.06%)</title><rect x="309.0" y="1749" width="0.7" height="15.0" fill="rgb(220,61,41)" rx="2" ry="2" />
<text  x="312.03" y="1759.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::set_urgent_state (2 samples, 0.04%)</title><rect x="653.0" y="1909" width="0.4" height="15.0" fill="rgb(222,184,9)" rx="2" ry="2" />
<text  x="655.98" y="1919.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::future (2 samples, 0.04%)</title><rect x="961.1" y="1797" width="0.4" height="15.0" fill="rgb(216,14,6)" rx="2" ry="2" />
<text  x="964.08" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.5" y="1621" width="0.2" height="15.0" fill="rgb(223,160,37)" rx="2" ry="2" />
<text  x="13.45" y="1631.5" ></text>
</g>
<g >
<title>managed_bytes::external_memory_usage (1 samples, 0.02%)</title><rect x="522.3" y="1637" width="0.2" height="15.0" fill="rgb(207,160,39)" rx="2" ry="2" />
<text  x="525.29" y="1647.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (2 samples, 0.04%)</title><rect x="46.3" y="1701" width="0.5" height="15.0" fill="rgb(240,193,18)" rx="2" ry="2" />
<text  x="49.30" y="1711.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::impl (1 samples, 0.02%)</title><rect x="465.1" y="1717" width="0.2" height="15.0" fill="rgb(252,179,42)" rx="2" ry="2" />
<text  x="468.12" y="1727.5" ></text>
</g>
<g >
<title>reader_selector::~reader_selector (2 samples, 0.04%)</title><rect x="592.6" y="1781" width="0.5" height="15.0" fill="rgb(212,142,50)" rx="2" ry="2" />
<text  x="595.63" y="1791.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;bool  (4 samples, 0.08%)</title><rect x="1165.7" y="1941" width="0.9" height="15.0" fill="rgb(220,54,44)" rx="2" ry="2" />
<text  x="1168.72" y="1951.5" ></text>
</g>
<g >
<title>write_row&lt;ser::writer_of_deletable_row&lt;bytes_ostream&gt; &gt; (2 samples, 0.04%)</title><rect x="108.7" y="1765" width="0.4" height="15.0" fill="rgb(212,7,45)" rx="2" ry="2" />
<text  x="111.69" y="1775.5" ></text>
</g>
<g >
<title>std::hash&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::operator (2 samples, 0.04%)</title><rect x="780.7" y="1749" width="0.5" height="15.0" fill="rgb(241,152,40)" rx="2" ry="2" />
<text  x="783.71" y="1759.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.08%)</title><rect x="976.3" y="1701" width="0.9" height="15.0" fill="rgb(211,111,28)" rx="2" ry="2" />
<text  x="979.28" y="1711.5" ></text>
</g>
<g >
<title>std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;::pair (1 samples, 0.02%)</title><rect x="49.0" y="1573" width="0.3" height="15.0" fill="rgb(218,153,21)" rx="2" ry="2" />
<text  x="52.02" y="1583.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::create_index_statement, std::default_delete&lt;cql3::statements::create_index_statement&gt; &gt;::__uniq_ptr_impl (1 samples, 0.02%)</title><rect x="63.1" y="1765" width="0.2" height="15.0" fill="rgb(227,125,42)" rx="2" ry="2" />
<text  x="66.09" y="1775.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="595.1" y="1797" width="0.2" height="15.0" fill="rgb(215,228,35)" rx="2" ry="2" />
<text  x="598.12" y="1807.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::leaf_node::allocate (3 samples, 0.06%)</title><rect x="216.5" y="1557" width="0.6" height="15.0" fill="rgb(219,67,17)" rx="2" ry="2" />
<text  x="219.46" y="1567.5" ></text>
</g>
<g >
<title>query::querier_base::querier_base (4 samples, 0.08%)</title><rect x="636.6" y="1829" width="0.9" height="15.0" fill="rgb(212,52,35)" rx="2" ry="2" />
<text  x="639.64" y="1839.5" ></text>
</g>
<g >
<title>absl::container_internal::probe_seq&lt;16ul&gt;::probe_seq (1 samples, 0.02%)</title><rect x="76.5" y="1813" width="0.2" height="15.0" fill="rgb(206,216,46)" rx="2" ry="2" />
<text  x="79.48" y="1823.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="46.3" y="1637" width="0.2" height="15.0" fill="rgb(241,211,5)" rx="2" ry="2" />
<text  x="49.30" y="1647.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;std::pair&lt;seastar::shared_ptr&lt;service::abstract_read_executor&gt;, nonwrapping_interval&lt;dht::token&gt; &gt;, 1ul&gt;::~small_vector (21 samples, 0.40%)</title><rect x="1160.3" y="1909" width="4.7" height="15.0" fill="rgb(241,53,13)" rx="2" ry="2" />
<text  x="1163.28" y="1919.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (1 samples, 0.02%)</title><rect x="874.9" y="1829" width="0.2" height="15.0" fill="rgb(234,68,21)" rx="2" ry="2" />
<text  x="877.86" y="1839.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::create_index_statement, std::default_delete&lt;cql3::statements::create_index_statement&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::statements::create_index_statement&gt;, void&gt; (1 samples, 0.02%)</title><rect x="63.1" y="1797" width="0.2" height="15.0" fill="rgb(238,192,38)" rx="2" ry="2" />
<text  x="66.09" y="1807.5" ></text>
</g>
<g >
<title>service::storage_proxy::response_wait (1 samples, 0.02%)</title><rect x="1127.4" y="1685" width="0.2" height="15.0" fill="rgb(221,74,27)" rx="2" ry="2" />
<text  x="1130.38" y="1695.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (2 samples, 0.04%)</title><rect x="671.1" y="1877" width="0.5" height="15.0" fill="rgb(231,14,50)" rx="2" ry="2" />
<text  x="674.13" y="1887.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (2 samples, 0.04%)</title><rect x="929.8" y="1781" width="0.4" height="15.0" fill="rgb(235,142,16)" rx="2" ry="2" />
<text  x="932.77" y="1791.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="700.8" y="1637" width="0.3" height="15.0" fill="rgb(230,212,25)" rx="2" ry="2" />
<text  x="703.85" y="1647.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::push_mutation_fragment&lt;mutation_fragment&gt; (37 samples, 0.71%)</title><rect x="312.7" y="1749" width="8.4" height="15.0" fill="rgb(253,154,21)" rx="2" ry="2" />
<text  x="315.66" y="1759.5" ></text>
</g>
<g >
<title>db::schema_tables::query_partition_mutation (2 samples, 0.04%)</title><rect x="107.8" y="1925" width="0.4" height="15.0" fill="rgb(251,170,14)" rx="2" ry="2" />
<text  x="110.79" y="1935.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::then_impl&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (1 samples, 0.02%)</title><rect x="167.0" y="1797" width="0.2" height="15.0" fill="rgb(209,87,0)" rx="2" ry="2" />
<text  x="170.00" y="1807.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::digest_read_resolver&gt;::~shared_ptr (2 samples, 0.04%)</title><rect x="978.8" y="1765" width="0.4" height="15.0" fill="rgb(233,61,4)" rx="2" ry="2" />
<text  x="981.78" y="1775.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, enum_set&lt;super_enum&lt;auth::permission,  (5 samples, 0.10%)</title><rect x="77.8" y="1733" width="1.2" height="15.0" fill="rgb(206,135,2)" rx="2" ry="2" />
<text  x="80.84" y="1743.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.02%)</title><rect x="46.8" y="1573" width="0.2" height="15.0" fill="rgb(211,107,31)" rx="2" ry="2" />
<text  x="49.75" y="1583.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.02%)</title><rect x="53.6" y="1573" width="0.2" height="15.0" fill="rgb(222,29,29)" rx="2" ry="2" />
<text  x="56.56" y="1583.5" ></text>
</g>
<g >
<title>free (1 samples, 0.02%)</title><rect x="424.7" y="1621" width="0.3" height="15.0" fill="rgb(211,134,14)" rx="2" ry="2" />
<text  x="427.74" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_make_cache (1 samples, 0.02%)</title><rect x="11.4" y="1381" width="0.2" height="15.0" fill="rgb(214,13,30)" rx="2" ry="2" />
<text  x="14.36" y="1391.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="1130.8" y="1493" width="0.2" height="15.0" fill="rgb(242,69,7)" rx="2" ry="2" />
<text  x="1133.78" y="1503.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.02%)</title><rect x="10.7" y="1973" width="0.2" height="15.0" fill="rgb(226,77,54)" rx="2" ry="2" />
<text  x="13.68" y="1983.5" ></text>
</g>
<g >
<title>compound_wrapper&lt;partition_key, partition_key_view&gt;::explode (1 samples, 0.02%)</title><rect x="1131.2" y="1573" width="0.3" height="15.0" fill="rgb(240,170,50)" rx="2" ry="2" />
<text  x="1134.24" y="1583.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::drop_function_statement, std::default_delete&lt;cql3::statements::drop_function_statement&gt; &gt;::__uniq_ptr_impl (1 samples, 0.02%)</title><rect x="64.5" y="1765" width="0.2" height="15.0" fill="rgb(210,202,23)" rx="2" ry="2" />
<text  x="67.45" y="1775.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (1 samples, 0.02%)</title><rect x="17.0" y="1941" width="0.3" height="15.0" fill="rgb(231,54,50)" rx="2" ry="2" />
<text  x="20.03" y="1951.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (13 samples, 0.25%)</title><rect x="223.0" y="1525" width="3.0" height="15.0" fill="rgb(251,135,38)" rx="2" ry="2" />
<text  x="226.04" y="1535.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (2 samples, 0.04%)</title><rect x="1158.7" y="1893" width="0.4" height="15.0" fill="rgb(242,179,47)" rx="2" ry="2" />
<text  x="1161.69" y="1903.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::lsa_partition_reader::do_refresh_state (1 samples, 0.02%)</title><rect x="83.1" y="1653" width="0.2" height="15.0" fill="rgb(214,129,42)" rx="2" ry="2" />
<text  x="86.06" y="1663.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="930.2" y="1781" width="0.2" height="15.0" fill="rgb(229,22,9)" rx="2" ry="2" />
<text  x="933.22" y="1791.5" ></text>
</g>
<g >
<title>seastar::schedule (1 samples, 0.02%)</title><rect x="1141.7" y="1909" width="0.2" height="15.0" fill="rgb(208,227,26)" rx="2" ry="2" />
<text  x="1144.67" y="1919.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (3 samples, 0.06%)</title><rect x="650.9" y="1909" width="0.7" height="15.0" fill="rgb(227,82,34)" rx="2" ry="2" />
<text  x="653.93" y="1919.5" ></text>
</g>
<g >
<title>visit&lt;(anonymous namespace)::from_string_visitor&gt; (4 samples, 0.08%)</title><rect x="68.3" y="1781" width="0.9" height="15.0" fill="rgb(231,212,10)" rx="2" ry="2" />
<text  x="71.31" y="1791.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;flat_mutation_reader&gt;::allocate (1 samples, 0.02%)</title><rect x="447.9" y="1765" width="0.2" height="15.0" fill="rgb(248,68,39)" rx="2" ry="2" />
<text  x="450.88" y="1775.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (3 samples, 0.06%)</title><rect x="841.1" y="1717" width="0.6" height="15.0" fill="rgb(205,169,29)" rx="2" ry="2" />
<text  x="844.06" y="1727.5" ></text>
</g>
<g >
<title>database::query (3 samples, 0.06%)</title><rect x="998.7" y="1701" width="0.7" height="15.0" fill="rgb(252,217,46)" rx="2" ry="2" />
<text  x="1001.74" y="1711.5" ></text>
</g>
<g >
<title>bound_view::tri_compare::operator (1 samples, 0.02%)</title><rect x="101.7" y="1749" width="0.2" height="15.0" fill="rgb(242,26,38)" rx="2" ry="2" />
<text  x="104.66" y="1759.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::~small_vector (1 samples, 0.02%)</title><rect x="472.6" y="1733" width="0.2" height="15.0" fill="rgb(205,176,2)" rx="2" ry="2" />
<text  x="475.61" y="1743.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.02%)</title><rect x="17.3" y="1925" width="0.2" height="15.0" fill="rgb(227,147,33)" rx="2" ry="2" />
<text  x="20.26" y="1935.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.02%)</title><rect x="11.4" y="1893" width="0.2" height="15.0" fill="rgb(210,146,54)" rx="2" ry="2" />
<text  x="14.36" y="1903.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (1 samples, 0.02%)</title><rect x="727.2" y="1829" width="0.2" height="15.0" fill="rgb(225,44,23)" rx="2" ry="2" />
<text  x="730.17" y="1839.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (62 samples, 1.19%)</title><rect x="22.0" y="1797" width="14.1" height="15.0" fill="rgb(207,147,14)" rx="2" ry="2" />
<text  x="25.02" y="1807.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.04%)</title><rect x="55.8" y="1701" width="0.5" height="15.0" fill="rgb(208,225,9)" rx="2" ry="2" />
<text  x="58.83" y="1711.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;, service::storage_proxy::query_result_local (16 samples, 0.31%)</title><rect x="648.4" y="1925" width="3.7" height="15.0" fill="rgb(213,81,9)" rx="2" ry="2" />
<text  x="651.44" y="1935.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (2 samples, 0.04%)</title><rect x="1189.5" y="2021" width="0.5" height="15.0" fill="rgb(221,145,18)" rx="2" ry="2" />
<text  x="1192.55" y="2031.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (1 samples, 0.02%)</title><rect x="255.3" y="1509" width="0.2" height="15.0" fill="rgb(237,7,8)" rx="2" ry="2" />
<text  x="258.26" y="1519.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_219f1a43593042f0924f8fe16cb9c27482170876] (1 samples, 0.02%)</title><rect x="687.5" y="1861" width="0.2" height="15.0" fill="rgb(218,75,38)" rx="2" ry="2" />
<text  x="690.46" y="1871.5" ></text>
</g>
<g >
<title>list_reader_selector::~list_reader_selector (1 samples, 0.02%)</title><rect x="590.1" y="1797" width="0.3" height="15.0" fill="rgb(210,150,0)" rx="2" ry="2" />
<text  x="593.13" y="1807.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_internal (1 samples, 0.02%)</title><rect x="11.6" y="1813" width="0.2" height="15.0" fill="rgb(224,187,50)" rx="2" ry="2" />
<text  x="14.59" y="1823.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (2 samples, 0.04%)</title><rect x="59.2" y="1733" width="0.5" height="15.0" fill="rgb(245,143,35)" rx="2" ry="2" />
<text  x="62.23" y="1743.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (1 samples, 0.02%)</title><rect x="905.0" y="1717" width="0.3" height="15.0" fill="rgb(231,224,34)" rx="2" ry="2" />
<text  x="908.04" y="1727.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="1130.8" y="1477" width="0.2" height="15.0" fill="rgb(226,73,13)" rx="2" ry="2" />
<text  x="1133.78" y="1487.5" ></text>
</g>
<g >
<title>mutation_fragment::operator= (1 samples, 0.02%)</title><rect x="196.7" y="1669" width="0.2" height="15.0" fill="rgb(229,101,0)" rx="2" ry="2" />
<text  x="199.72" y="1679.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value_view, std::allocator&lt;cql3::raw_value_view&gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="876.2" y="1781" width="0.3" height="15.0" fill="rgb(216,41,23)" rx="2" ry="2" />
<text  x="879.23" y="1791.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::get_error (1 samples, 0.02%)</title><rect x="21.6" y="1813" width="0.2" height="15.0" fill="rgb(228,181,19)" rx="2" ry="2" />
<text  x="24.57" y="1823.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.10%)</title><rect x="471.5" y="1717" width="1.1" height="15.0" fill="rgb(210,37,44)" rx="2" ry="2" />
<text  x="474.47" y="1727.5" ></text>
</g>
<g >
<title>row_cache::do_update (1 samples, 0.02%)</title><rect x="701.3" y="1829" width="0.2" height="15.0" fill="rgb(223,172,12)" rx="2" ry="2" />
<text  x="704.30" y="1839.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (10 samples, 0.19%)</title><rect x="839.9" y="1749" width="2.3" height="15.0" fill="rgb(225,75,24)" rx="2" ry="2" />
<text  x="842.93" y="1759.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::set_channel (1 samples, 0.02%)</title><rect x="26.8" y="1685" width="0.2" height="15.0" fill="rgb(221,108,32)" rx="2" ry="2" />
<text  x="29.79" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.5" y="389" width="0.2" height="15.0" fill="rgb(241,71,9)" rx="2" ry="2" />
<text  x="13.45" y="399.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (1 samples, 0.02%)</title><rect x="555.6" y="1813" width="0.3" height="15.0" fill="rgb(231,15,23)" rx="2" ry="2" />
<text  x="558.65" y="1823.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (35 samples, 0.67%)</title><rect x="1126.5" y="1861" width="7.9" height="15.0" fill="rgb(234,202,7)" rx="2" ry="2" />
<text  x="1129.47" y="1871.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.02%)</title><rect x="17.3" y="1941" width="0.2" height="15.0" fill="rgb(247,14,2)" rx="2" ry="2" />
<text  x="20.26" y="1951.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::set_value&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; (1 samples, 0.02%)</title><rect x="623.7" y="1861" width="0.2" height="15.0" fill="rgb(209,172,53)" rx="2" ry="2" />
<text  x="626.71" y="1871.5" ></text>
</g>
<g >
<title>std::type_info::operator== (1 samples, 0.02%)</title><rect x="1063.6" y="1717" width="0.3" height="15.0" fill="rgb(212,4,25)" rx="2" ry="2" />
<text  x="1066.63" y="1727.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (2 samples, 0.04%)</title><rect x="58.6" y="1605" width="0.4" height="15.0" fill="rgb(246,155,28)" rx="2" ry="2" />
<text  x="61.55" y="1615.5" ></text>
</g>
<g >
<title>seastar::repeat&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (1 samples, 0.02%)</title><rect x="17.9" y="1893" width="0.3" height="15.0" fill="rgb(216,207,46)" rx="2" ry="2" />
<text  x="20.94" y="1903.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (1 samples, 0.02%)</title><rect x="836.7" y="1685" width="0.3" height="15.0" fill="rgb(206,75,3)" rx="2" ry="2" />
<text  x="839.75" y="1695.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="536.1" y="1749" width="0.3" height="15.0" fill="rgb(218,142,32)" rx="2" ry="2" />
<text  x="539.13" y="1759.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;service::storage_proxy_coordinator_query_result&gt;, seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::finally_body&lt;service::storage_proxy::do_query (2 samples, 0.04%)</title><rect x="86.2" y="1941" width="0.5" height="15.0" fill="rgb(223,67,48)" rx="2" ry="2" />
<text  x="89.23" y="1951.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.02%)</title><rect x="46.8" y="1717" width="0.2" height="15.0" fill="rgb(250,52,50)" rx="2" ry="2" />
<text  x="49.75" y="1727.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (3 samples, 0.06%)</title><rect x="46.3" y="1749" width="0.7" height="15.0" fill="rgb(249,145,15)" rx="2" ry="2" />
<text  x="49.30" y="1759.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="678.4" y="1845" width="0.2" height="15.0" fill="rgb(242,212,43)" rx="2" ry="2" />
<text  x="681.39" y="1855.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="47.7" y="1653" width="0.2" height="15.0" fill="rgb(227,98,8)" rx="2" ry="2" />
<text  x="50.66" y="1663.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (4 samples, 0.08%)</title><rect x="817.0" y="1637" width="0.9" height="15.0" fill="rgb(236,60,32)" rx="2" ry="2" />
<text  x="820.01" y="1647.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::enqueue_waiter (37 samples, 0.71%)</title><rect x="1018.3" y="1637" width="8.3" height="15.0" fill="rgb(251,154,36)" rx="2" ry="2" />
<text  x="1021.25" y="1647.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="41.1" y="1733" width="0.2" height="15.0" fill="rgb(221,214,37)" rx="2" ry="2" />
<text  x="44.08" y="1743.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.02%)</title><rect x="59.2" y="1653" width="0.3" height="15.0" fill="rgb(206,90,11)" rx="2" ry="2" />
<text  x="62.23" y="1663.5" ></text>
</g>
<g >
<title>schema_registry::get (15 samples, 0.29%)</title><rect x="969.2" y="1781" width="3.4" height="15.0" fill="rgb(219,108,25)" rx="2" ry="2" />
<text  x="972.25" y="1791.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (3 samples, 0.06%)</title><rect x="851.0" y="1845" width="0.7" height="15.0" fill="rgb(238,137,4)" rx="2" ry="2" />
<text  x="854.04" y="1855.5" ></text>
</g>
<g >
<title>reader_permit::signal (1 samples, 0.02%)</title><rect x="589.5" y="1781" width="0.2" height="15.0" fill="rgb(230,27,52)" rx="2" ry="2" />
<text  x="592.45" y="1791.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.02%)</title><rect x="54.2" y="1525" width="0.3" height="15.0" fill="rgb(253,170,38)" rx="2" ry="2" />
<text  x="57.24" y="1535.5" ></text>
</g>
<g >
<title>main::$_3::operator (1 samples, 0.02%)</title><rect x="730.3" y="1861" width="0.3" height="15.0" fill="rgb(211,175,26)" rx="2" ry="2" />
<text  x="733.34" y="1871.5" ></text>
</g>
<g >
<title>mutation_reader_merger::maybe_add_readers (1 samples, 0.02%)</title><rect x="176.3" y="1701" width="0.2" height="15.0" fill="rgb(207,142,35)" rx="2" ry="2" />
<text  x="179.30" y="1711.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.04%)</title><rect x="42.4" y="1701" width="0.5" height="15.0" fill="rgb(246,178,37)" rx="2" ry="2" />
<text  x="45.44" y="1711.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_M_reset (1 samples, 0.02%)</title><rect x="1165.5" y="1861" width="0.2" height="15.0" fill="rgb(229,100,36)" rx="2" ry="2" />
<text  x="1168.50" y="1871.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::move_it (2 samples, 0.04%)</title><rect x="782.1" y="1829" width="0.4" height="15.0" fill="rgb(213,114,42)" rx="2" ry="2" />
<text  x="785.07" y="1839.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (4 samples, 0.08%)</title><rect x="51.3" y="1701" width="0.9" height="15.0" fill="rgb(230,225,38)" rx="2" ry="2" />
<text  x="54.29" y="1711.5" ></text>
</g>
<g >
<title>ser::serialize_array_helper&lt;false, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;::doit&lt;std::vector&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, std::allocator&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt;, bytes_ostream&gt; (1 samples, 0.02%)</title><rect x="138.2" y="1605" width="0.2" height="15.0" fill="rgb(227,86,46)" rx="2" ry="2" />
<text  x="141.19" y="1615.5" ></text>
</g>
<g >
<title>seastar::metrics::metric_groups::~metric_groups (1 samples, 0.02%)</title><rect x="12.3" y="1989" width="0.2" height="15.0" fill="rgb(223,202,39)" rx="2" ry="2" />
<text  x="15.27" y="1999.5" ></text>
</g>
<g >
<title>global_schema_ptr::global_schema_ptr (2 samples, 0.04%)</title><rect x="999.9" y="1701" width="0.4" height="15.0" fill="rgb(253,20,54)" rx="2" ry="2" />
<text  x="1002.88" y="1711.5" ></text>
</g>
<g >
<title>auth::data_resource_view::data_resource_view (1 samples, 0.02%)</title><rect x="815.2" y="1557" width="0.2" height="15.0" fill="rgb(228,53,38)" rx="2" ry="2" />
<text  x="818.20" y="1567.5" ></text>
</g>
<g >
<title>ser::column_view::c (2 samples, 0.04%)</title><rect x="1122.4" y="1653" width="0.4" height="15.0" fill="rgb(235,61,36)" rx="2" ry="2" />
<text  x="1125.39" y="1663.5" ></text>
</g>
<g >
<title>database::query (19 samples, 0.37%)</title><rect x="101.9" y="1925" width="4.3" height="15.0" fill="rgb(231,195,41)" rx="2" ry="2" />
<text  x="104.89" y="1935.5" ></text>
</g>
<g >
<title>schema::get_partitioner (1 samples, 0.02%)</title><rect x="877.6" y="1765" width="0.2" height="15.0" fill="rgb(217,16,45)" rx="2" ry="2" />
<text  x="880.59" y="1775.5" ></text>
</g>
<g >
<title>bound_view::from_range_start&lt;nonwrapping_interval&gt; (1 samples, 0.02%)</title><rect x="282.5" y="1621" width="0.2" height="15.0" fill="rgb(245,135,21)" rx="2" ry="2" />
<text  x="285.48" y="1631.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.5" y="821" width="0.2" height="15.0" fill="rgb(217,71,11)" rx="2" ry="2" />
<text  x="13.45" y="831.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (248 samples, 4.77%)</title><rect x="209.9" y="1653" width="56.2" height="15.0" fill="rgb(213,121,28)" rx="2" ry="2" />
<text  x="212.88" y="1663.5" >parti..</text>
</g>
<g >
<title>seastar::internal::uninitialized_wrapper_base&lt;service::storage_proxy_coordinator_query_result, false&gt;::uninitialized_set&lt;service::storage_proxy_coordinator_query_result&gt; (1 samples, 0.02%)</title><rect x="1140.5" y="1893" width="0.3" height="15.0" fill="rgb(221,64,54)" rx="2" ry="2" />
<text  x="1143.54" y="1903.5" ></text>
</g>
<g >
<title>bound_view::from_range&lt;nonwrapping_interval&gt; (3 samples, 0.06%)</title><rect x="263.0" y="1557" width="0.7" height="15.0" fill="rgb(232,191,52)" rx="2" ry="2" />
<text  x="265.97" y="1567.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (3 samples, 0.06%)</title><rect x="935.0" y="1829" width="0.7" height="15.0" fill="rgb(215,94,47)" rx="2" ry="2" />
<text  x="937.99" y="1839.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (1 samples, 0.02%)</title><rect x="593.5" y="1765" width="0.3" height="15.0" fill="rgb(248,82,46)" rx="2" ry="2" />
<text  x="596.53" y="1775.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_last_fragment_kind, 4ul&gt;::~small_vector (3 samples, 0.06%)</title><rect x="596.0" y="1797" width="0.7" height="15.0" fill="rgb(250,131,52)" rx="2" ry="2" />
<text  x="599.03" y="1807.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::then_wrapped_nrvo&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (8 samples, 0.15%)</title><rect x="846.7" y="1829" width="1.8" height="15.0" fill="rgb(234,148,4)" rx="2" ry="2" />
<text  x="849.73" y="1839.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (1 samples, 0.02%)</title><rect x="483.7" y="1701" width="0.3" height="15.0" fill="rgb(231,26,49)" rx="2" ry="2" />
<text  x="486.72" y="1711.5" ></text>
</g>
<g >
<title>partition_key::partition_key (1 samples, 0.02%)</title><rect x="1120.8" y="1653" width="0.2" height="15.0" fill="rgb(219,157,50)" rx="2" ry="2" />
<text  x="1123.80" y="1663.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::clear (2 samples, 0.04%)</title><rect x="825.9" y="1701" width="0.4" height="15.0" fill="rgb(248,174,36)" rx="2" ry="2" />
<text  x="828.86" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;seastar::future&lt;void&gt; &gt;  (127 samples, 2.44%)</title><rect x="570.2" y="1845" width="28.8" height="15.0" fill="rgb(207,72,28)" rx="2" ry="2" />
<text  x="573.17" y="1855.5" >st..</text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.02%)</title><rect x="701.3" y="1685" width="0.2" height="15.0" fill="rgb(224,27,0)" rx="2" ry="2" />
<text  x="704.30" y="1695.5" ></text>
</g>
<g >
<title>seastar::reactor::do_run (4,769 samples, 91.69%)</title><rect x="84.9" y="1957" width="1082.0" height="15.0" fill="rgb(214,189,14)" rx="2" ry="2" />
<text  x="87.87" y="1967.5" >seastar::reactor::do_run</text>
</g>
<g >
<title>std::__relocate_a_1&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;*, std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;*, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt; (2 samples, 0.04%)</title><rect x="49.0" y="1637" width="0.5" height="15.0" fill="rgb(219,69,51)" rx="2" ry="2" />
<text  x="52.02" y="1647.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.02%)</title><rect x="59.5" y="1557" width="0.2" height="15.0" fill="rgb(247,192,45)" rx="2" ry="2" />
<text  x="62.46" y="1567.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (2 samples, 0.04%)</title><rect x="45.6" y="1621" width="0.5" height="15.0" fill="rgb(245,125,23)" rx="2" ry="2" />
<text  x="48.62" y="1631.5" ></text>
</g>
<g >
<title>mutation_partition_serializer::write_serialized&lt;ser::writer_of_mutation_partition&lt;bytes_ostream&gt; &gt; (2 samples, 0.04%)</title><rect x="108.7" y="1781" width="0.4" height="15.0" fill="rgb(216,51,24)" rx="2" ry="2" />
<text  x="111.69" y="1791.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::emplace_back&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; (6 samples, 0.12%)</title><rect x="48.1" y="1717" width="1.4" height="15.0" fill="rgb(234,73,23)" rx="2" ry="2" />
<text  x="51.12" y="1727.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (4 samples, 0.08%)</title><rect x="53.8" y="1685" width="0.9" height="15.0" fill="rgb(208,180,15)" rx="2" ry="2" />
<text  x="56.79" y="1695.5" ></text>
</g>
<g >
<title>operator new (6 samples, 0.12%)</title><rect x="1148.5" y="1813" width="1.3" height="15.0" fill="rgb(234,153,50)" rx="2" ry="2" />
<text  x="1151.48" y="1823.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.29] (1 samples, 0.02%)</title><rect x="10.2" y="2005" width="0.3" height="15.0" fill="rgb(221,77,21)" rx="2" ry="2" />
<text  x="13.23" y="2015.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;boost::range_detail::integer_iterator&lt;unsigned int&gt;, std::function&lt;seastar::future&lt;void&gt;  (1 samples, 0.02%)</title><rect x="17.3" y="1845" width="0.2" height="15.0" fill="rgb(210,164,19)" rx="2" ry="2" />
<text  x="20.26" y="1855.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="1119.2" y="1589" width="0.2" height="15.0" fill="rgb(209,168,34)" rx="2" ry="2" />
<text  x="1122.21" y="1599.5" ></text>
</g>
<g >
<title>seastar::internal::when_all_state_component&lt;seastar::future&lt;void&gt; &gt;::run_and_dispose (1 samples, 0.02%)</title><rect x="874.2" y="1925" width="0.2" height="15.0" fill="rgb(212,139,52)" rx="2" ry="2" />
<text  x="877.18" y="1935.5" ></text>
</g>
<g >
<title>seastar::basic_semaphore&lt;seastar::semaphore_default_exception_factory, std::chrono::_V2::steady_clock&gt;::signal (1 samples, 0.02%)</title><rect x="98.0" y="1845" width="0.3" height="15.0" fill="rgb(240,77,3)" rx="2" ry="2" />
<text  x="101.03" y="1855.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;static_row&gt;::_M_reset (1 samples, 0.02%)</title><rect x="415.9" y="1653" width="0.2" height="15.0" fill="rgb(230,154,20)" rx="2" ry="2" />
<text  x="418.89" y="1663.5" ></text>
</g>
<g >
<title>_ZSt13__invoke_implISt10unique_ptrIN7seastar8internal13do_with_stateISt5tupleIJN20flat_mutation_reader4impl16consumer_adapterI35stable_flattened_mutations_consumerI17compact_for_queryIL19emit_only_live_rows1EN5query27clustering_position_trackerI20query_result_builderEEEEEEEENS1_6futureIvEEEESt14default_deleteISL_EEZNS2_12do_with_implISH_ZNS6_7consumeISG_EEDaT_EUlRSH_E_JEEEDaOSR_OT0_DpOT1_EUlDpOT_E_JSH_EESR_St14__invoke_otherSW_SZ_ (6 samples, 0.12%)</title><rect x="331.0" y="1733" width="1.4" height="15.0" fill="rgb(245,110,14)" rx="2" ry="2" />
<text  x="334.03" y="1743.5" ></text>
</g>
<g >
<title>antlr3::DefaultAllocPolicy::StackType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::push (1 samples, 0.02%)</title><rect x="51.1" y="1685" width="0.2" height="15.0" fill="rgb(245,131,33)" rx="2" ry="2" />
<text  x="54.07" y="1695.5" ></text>
</g>
<g >
<title>query::querier_base::close (4 samples, 0.08%)</title><rect x="124.3" y="1877" width="1.0" height="15.0" fill="rgb(208,34,24)" rx="2" ry="2" />
<text  x="127.35" y="1887.5" ></text>
</g>
<g >
<title>database::find_column_family (12 samples, 0.23%)</title><rect x="1050.2" y="1765" width="2.8" height="15.0" fill="rgb(208,155,11)" rx="2" ry="2" />
<text  x="1053.24" y="1775.5" ></text>
</g>
<g >
<title>cql3::statements::create_table_statement::get_cf_meta_data (1 samples, 0.02%)</title><rect x="700.6" y="1813" width="0.2" height="15.0" fill="rgb(213,143,26)" rx="2" ry="2" />
<text  x="703.62" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::binary_operator const*&gt;  (1 samples, 0.02%)</title><rect x="952.9" y="1797" width="0.2" height="15.0" fill="rgb(209,135,39)" rx="2" ry="2" />
<text  x="955.91" y="1807.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql3::statements::update_statement&gt;::shared_ptr_count_for&lt;cql3::statements::statement_type const&amp;, unsigned long, seastar::lw_shared_ptr&lt;schema const&gt;&amp;, std::unique_ptr&lt;cql3::attributes, std::default_delete&lt;cql3::attributes&gt; &gt;, cql3::cql_stats&amp;&gt; (1 samples, 0.02%)</title><rect x="75.1" y="1829" width="0.2" height="15.0" fill="rgb(215,116,18)" rx="2" ry="2" />
<text  x="78.11" y="1839.5" ></text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::find (1 samples, 0.02%)</title><rect x="664.1" y="1845" width="0.2" height="15.0" fill="rgb(223,143,35)" rx="2" ry="2" />
<text  x="667.09" y="1855.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.04%)</title><rect x="783.7" y="1781" width="0.4" height="15.0" fill="rgb(215,54,16)" rx="2" ry="2" />
<text  x="786.66" y="1791.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (3 samples, 0.06%)</title><rect x="672.5" y="1909" width="0.7" height="15.0" fill="rgb(214,49,32)" rx="2" ry="2" />
<text  x="675.49" y="1919.5" ></text>
</g>
<g >
<title>read_simple&lt;long, managed_bytes_basic_view&lt; (14 samples, 0.27%)</title><rect x="406.4" y="1573" width="3.1" height="15.0" fill="rgb(245,138,40)" rx="2" ry="2" />
<text  x="409.36" y="1583.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (2 samples, 0.04%)</title><rect x="108.7" y="1749" width="0.4" height="15.0" fill="rgb(207,100,36)" rx="2" ry="2" />
<text  x="111.69" y="1759.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (3 samples, 0.06%)</title><rect x="45.4" y="1653" width="0.7" height="15.0" fill="rgb(226,19,27)" rx="2" ry="2" />
<text  x="48.39" y="1663.5" ></text>
</g>
<g >
<title>std::uniform_int_distribution&lt;unsigned long&gt;::operator (4 samples, 0.08%)</title><rect x="870.1" y="1877" width="0.9" height="15.0" fill="rgb(243,173,26)" rx="2" ry="2" />
<text  x="873.10" y="1887.5" ></text>
</g>
<g >
<title>antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;::get_line (1 samples, 0.02%)</title><rect x="25.7" y="1701" width="0.2" height="15.0" fill="rgb(225,63,22)" rx="2" ry="2" />
<text  x="28.65" y="1711.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_range_tombstone (1 samples, 0.02%)</title><rect x="874.0" y="1781" width="0.2" height="15.0" fill="rgb(252,207,26)" rx="2" ry="2" />
<text  x="876.96" y="1791.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (1 samples, 0.02%)</title><rect x="701.3" y="1733" width="0.2" height="15.0" fill="rgb(208,48,46)" rx="2" ry="2" />
<text  x="704.30" y="1743.5" ></text>
</g>
<g >
<title>query::querier_base::~querier_base (40 samples, 0.77%)</title><rect x="599.0" y="1861" width="9.1" height="15.0" fill="rgb(243,35,7)" rx="2" ry="2" />
<text  x="601.98" y="1871.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::pop_front (2 samples, 0.04%)</title><rect x="134.3" y="1845" width="0.5" height="15.0" fill="rgb(227,146,37)" rx="2" ry="2" />
<text  x="137.33" y="1855.5" ></text>
</g>
<g >
<title>cql3::relation::to_restriction (8 samples, 0.15%)</title><rect x="70.8" y="1813" width="1.8" height="15.0" fill="rgb(219,62,52)" rx="2" ry="2" />
<text  x="73.80" y="1823.5" ></text>
</g>
<g >
<title>partition_snapshot::version_count (4 samples, 0.08%)</title><rect x="259.1" y="1573" width="0.9" height="15.0" fill="rgb(235,59,8)" rx="2" ry="2" />
<text  x="262.11" y="1583.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::~impl (7 samples, 0.13%)</title><rect x="578.3" y="1733" width="1.6" height="15.0" fill="rgb(239,213,23)" rx="2" ry="2" />
<text  x="581.33" y="1743.5" ></text>
</g>
<g >
<title>seastar::futurize_invoke&lt;seastar::future&lt;void&gt;  (1 samples, 0.02%)</title><rect x="433.8" y="1781" width="0.2" height="15.0" fill="rgb(250,222,10)" rx="2" ry="2" />
<text  x="436.81" y="1791.5" ></text>
</g>
<g >
<title>mutation_querier::mutation_querier (2 samples, 0.04%)</title><rect x="346.7" y="1605" width="0.4" height="15.0" fill="rgb(234,64,45)" rx="2" ry="2" />
<text  x="349.69" y="1615.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (2 samples, 0.04%)</title><rect x="188.1" y="1685" width="0.5" height="15.0" fill="rgb(220,166,38)" rx="2" ry="2" />
<text  x="191.10" y="1695.5" ></text>
</g>
<g >
<title>row_cache::do_update (1 samples, 0.02%)</title><rect x="701.3" y="1781" width="0.2" height="15.0" fill="rgb(229,64,49)" rx="2" ry="2" />
<text  x="704.30" y="1791.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (2 samples, 0.04%)</title><rect x="58.6" y="1685" width="0.4" height="15.0" fill="rgb(251,93,7)" rx="2" ry="2" />
<text  x="61.55" y="1695.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (4 samples, 0.08%)</title><rect x="677.3" y="1861" width="0.9" height="15.0" fill="rgb(239,96,51)" rx="2" ry="2" />
<text  x="680.25" y="1871.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::partition_snapshot_flat_reader&lt;schema const&amp;, flush_memory_accounter&amp;&gt; (1 samples, 0.02%)</title><rect x="81.7" y="1797" width="0.2" height="15.0" fill="rgb(236,1,22)" rx="2" ry="2" />
<text  x="84.69" y="1807.5" ></text>
</g>
<g >
<title>seastar::internal::sharded_parallel_for_each (1 samples, 0.02%)</title><rect x="10.5" y="85" width="0.2" height="15.0" fill="rgb(236,171,12)" rx="2" ry="2" />
<text  x="13.45" y="95.5" ></text>
</g>
<g >
<title>std::default_delete&lt;query::partition_slice const&gt;::operator (13 samples, 0.25%)</title><rect x="605.1" y="1829" width="3.0" height="15.0" fill="rgb(228,110,45)" rx="2" ry="2" />
<text  x="608.10" y="1839.5" ></text>
</g>
<g >
<title>query::querier&lt; (1 samples, 0.02%)</title><rect x="138.2" y="1861" width="0.2" height="15.0" fill="rgb(233,193,32)" rx="2" ry="2" />
<text  x="141.19" y="1871.5" ></text>
</g>
<g >
<title>cql3::expr::prepare_term (1 samples, 0.02%)</title><rect x="70.8" y="1765" width="0.2" height="15.0" fill="rgb(226,134,27)" rx="2" ry="2" />
<text  x="73.80" y="1775.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::_S_relocate (3 samples, 0.06%)</title><rect x="48.8" y="1685" width="0.7" height="15.0" fill="rgb(205,26,7)" rx="2" ry="2" />
<text  x="51.80" y="1695.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, utils::directories::verify_owner_and_mode (1 samples, 0.02%)</title><rect x="730.6" y="1925" width="0.2" height="15.0" fill="rgb(235,138,6)" rx="2" ry="2" />
<text  x="733.57" y="1935.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="436.8" y="1797" width="0.2" height="15.0" fill="rgb(254,87,4)" rx="2" ry="2" />
<text  x="439.76" y="1807.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::contains&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (11 samples, 0.21%)</title><rect x="839.7" y="1765" width="2.5" height="15.0" fill="rgb(215,170,7)" rx="2" ry="2" />
<text  x="842.70" y="1775.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.02%)</title><rect x="106.9" y="1605" width="0.2" height="15.0" fill="rgb(205,145,3)" rx="2" ry="2" />
<text  x="109.88" y="1615.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::lsa_partition_reader::next_row (4 samples, 0.08%)</title><rect x="82.4" y="1717" width="0.9" height="15.0" fill="rgb(225,168,15)" rx="2" ry="2" />
<text  x="85.37" y="1727.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (1 samples, 0.02%)</title><rect x="196.5" y="1669" width="0.2" height="15.0" fill="rgb(216,11,41)" rx="2" ry="2" />
<text  x="199.49" y="1679.5" ></text>
</g>
<g >
<title>query::result_atomic_cell_view::value (1 samples, 0.02%)</title><rect x="109.1" y="1717" width="0.3" height="15.0" fill="rgb(208,50,7)" rx="2" ry="2" />
<text  x="112.15" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.5" y="1541" width="0.2" height="15.0" fill="rgb(213,101,9)" rx="2" ry="2" />
<text  x="13.45" y="1551.5" ></text>
</g>
<g >
<title>db::schema_tables::update_schema_version_and_announce (1 samples, 0.02%)</title><rect x="107.6" y="1909" width="0.2" height="15.0" fill="rgb(237,57,2)" rx="2" ry="2" />
<text  x="110.56" y="1919.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (2 samples, 0.04%)</title><rect x="762.1" y="1701" width="0.5" height="15.0" fill="rgb(226,121,30)" rx="2" ry="2" />
<text  x="765.11" y="1711.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::take_value (2 samples, 0.04%)</title><rect x="116.9" y="1893" width="0.4" height="15.0" fill="rgb(245,188,53)" rx="2" ry="2" />
<text  x="119.86" y="1903.5" ></text>
</g>
<g >
<title>compound_type&lt; (1 samples, 0.02%)</title><rect x="108.5" y="1669" width="0.2" height="15.0" fill="rgb(205,15,18)" rx="2" ry="2" />
<text  x="111.47" y="1679.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt; (1 samples, 0.02%)</title><rect x="613.0" y="1797" width="0.3" height="15.0" fill="rgb(217,141,26)" rx="2" ry="2" />
<text  x="616.05" y="1807.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::do_wait_admission (2 samples, 0.04%)</title><rect x="1016.0" y="1669" width="0.4" height="15.0" fill="rgb(237,125,19)" rx="2" ry="2" />
<text  x="1018.98" y="1679.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.02%)</title><rect x="59.5" y="1653" width="0.2" height="15.0" fill="rgb(230,103,3)" rx="2" ry="2" />
<text  x="62.46" y="1663.5" ></text>
</g>
<g >
<title>visit&lt;(anonymous namespace)::validate_visitor&lt;managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="898.0" y="1717" width="0.2" height="15.0" fill="rgb(253,109,52)" rx="2" ry="2" />
<text  x="901.01" y="1727.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::emplace&lt;atomic_cell_or_collection, seastar::optimized_optional&lt;cell_hash&gt; &gt; (2 samples, 0.04%)</title><rect x="107.8" y="1845" width="0.4" height="15.0" fill="rgb(233,72,53)" rx="2" ry="2" />
<text  x="110.79" y="1855.5" ></text>
</g>
<g >
<title>partition_entry::partition_entry (1 samples, 0.02%)</title><rect x="1119.7" y="1557" width="0.2" height="15.0" fill="rgb(237,156,8)" rx="2" ry="2" />
<text  x="1122.67" y="1567.5" ></text>
</g>
<g >
<title>reader_permit::consume (1 samples, 0.02%)</title><rect x="204.9" y="1621" width="0.2" height="15.0" fill="rgb(225,4,34)" rx="2" ry="2" />
<text  x="207.89" y="1631.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (2 samples, 0.04%)</title><rect x="820.0" y="1669" width="0.4" height="15.0" fill="rgb(237,135,54)" rx="2" ry="2" />
<text  x="822.96" y="1679.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt;::allocate (1 samples, 0.02%)</title><rect x="155.0" y="1829" width="0.2" height="15.0" fill="rgb(226,64,34)" rx="2" ry="2" />
<text  x="157.98" y="1839.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::timer (1 samples, 0.02%)</title><rect x="1025.5" y="1589" width="0.2" height="15.0" fill="rgb(211,188,4)" rx="2" ry="2" />
<text  x="1028.51" y="1599.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (6 samples, 0.12%)</title><rect x="989.7" y="1653" width="1.3" height="15.0" fill="rgb(242,157,40)" rx="2" ry="2" />
<text  x="992.67" y="1663.5" ></text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (1 samples, 0.02%)</title><rect x="12.9" y="2005" width="0.3" height="15.0" fill="rgb(227,33,29)" rx="2" ry="2" />
<text  x="15.95" y="2015.5" ></text>
</g>
<g >
<title>reader_permit::consume_memory (1 samples, 0.02%)</title><rect x="256.4" y="1589" width="0.2" height="15.0" fill="rgb(230,36,11)" rx="2" ry="2" />
<text  x="259.39" y="1599.5" ></text>
</g>
<g >
<title>locator::token_metadata::get_host_id_if_known (5 samples, 0.10%)</title><rect x="1142.6" y="1877" width="1.1" height="15.0" fill="rgb(253,50,4)" rx="2" ry="2" />
<text  x="1145.58" y="1887.5" ></text>
</g>
<g >
<title>mutation_fragment::consume&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (356 samples, 6.84%)</title><rect x="338.5" y="1685" width="80.8" height="15.0" fill="rgb(228,130,44)" rx="2" ry="2" />
<text  x="341.52" y="1695.5" >mutation_..</text>
</g>
<g >
<title>operator delete (5 samples, 0.10%)</title><rect x="576.7" y="1749" width="1.2" height="15.0" fill="rgb(253,21,20)" rx="2" ry="2" />
<text  x="579.74" y="1759.5" ></text>
</g>
<g >
<title>data_value::serialize (1 samples, 0.02%)</title><rect x="106.4" y="1813" width="0.3" height="15.0" fill="rgb(247,68,49)" rx="2" ry="2" />
<text  x="109.42" y="1823.5" ></text>
</g>
<g >
<title>bytes_ostream::alloc_new (10 samples, 0.19%)</title><rect x="614.2" y="1813" width="2.2" height="15.0" fill="rgb(234,35,5)" rx="2" ry="2" />
<text  x="617.18" y="1823.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;service::storage_proxy_coordinator_query_result&gt;, seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::finally_body&lt;service::storage_proxy::do_query (45 samples, 0.87%)</title><rect x="688.6" y="1925" width="10.2" height="15.0" fill="rgb(241,151,45)" rx="2" ry="2" />
<text  x="691.60" y="1935.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (6 samples, 0.12%)</title><rect x="317.0" y="1685" width="1.3" height="15.0" fill="rgb(253,198,26)" rx="2" ry="2" />
<text  x="319.97" y="1695.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned int, std::less&lt;unsigned int&gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;unsigned int&gt; &gt;::find (1 samples, 0.02%)</title><rect x="35.6" y="1733" width="0.3" height="15.0" fill="rgb(227,179,33)" rx="2" ry="2" />
<text  x="38.64" y="1743.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::check (1 samples, 0.02%)</title><rect x="341.2" y="1653" width="0.3" height="15.0" fill="rgb(214,74,16)" rx="2" ry="2" />
<text  x="344.24" y="1663.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.02%)</title><rect x="982.4" y="1717" width="0.2" height="15.0" fill="rgb(211,181,21)" rx="2" ry="2" />
<text  x="985.41" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.02%)</title><rect x="49.7" y="1685" width="0.2" height="15.0" fill="rgb(210,163,11)" rx="2" ry="2" />
<text  x="52.70" y="1695.5" ></text>
</g>
<g >
<title>operator delete (5 samples, 0.10%)</title><rect x="605.3" y="1813" width="1.2" height="15.0" fill="rgb(221,143,17)" rx="2" ry="2" />
<text  x="608.33" y="1823.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (2 samples, 0.04%)</title><rect x="1127.6" y="1653" width="0.5" height="15.0" fill="rgb(229,165,24)" rx="2" ry="2" />
<text  x="1130.61" y="1663.5" ></text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info (1 samples, 0.02%)</title><rect x="15.9" y="2037" width="0.2" height="15.0" fill="rgb(214,177,6)" rx="2" ry="2" />
<text  x="18.90" y="2047.5" ></text>
</g>
<g >
<title>service::shared_mutation::apply_locally (3 samples, 0.06%)</title><rect x="1128.1" y="1653" width="0.6" height="15.0" fill="rgb(241,49,22)" rx="2" ry="2" />
<text  x="1131.06" y="1663.5" ></text>
</g>
<g >
<title>position_in_partition::position_in_partition (5 samples, 0.10%)</title><rect x="271.6" y="1653" width="1.1" height="15.0" fill="rgb(214,218,27)" rx="2" ry="2" />
<text  x="274.59" y="1663.5" ></text>
</g>
<g >
<title>boost::range::remove_erase_if&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, boost::algorithm::detail::is_any_ofF&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="12.3" y="1893" width="0.2" height="15.0" fill="rgb(231,0,12)" rx="2" ry="2" />
<text  x="15.27" y="1903.5" ></text>
</g>
<g >
<title>std::_Optional_base_impl&lt;query::querier&lt; (1 samples, 0.02%)</title><rect x="626.4" y="1861" width="0.3" height="15.0" fill="rgb(250,95,31)" rx="2" ry="2" />
<text  x="629.43" y="1871.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;tracking_allocator&lt;mutation_fragment&gt; &gt;::_S_destroy&lt;tracking_allocator&lt;mutation_fragment&gt;, mutation_fragment&gt; (4 samples, 0.08%)</title><rect x="337.4" y="1669" width="0.9" height="15.0" fill="rgb(247,36,37)" rx="2" ry="2" />
<text  x="340.39" y="1679.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::has_available_units (2 samples, 0.04%)</title><rect x="417.5" y="1637" width="0.4" height="15.0" fill="rgb(212,89,42)" rx="2" ry="2" />
<text  x="420.48" y="1647.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_Optional_payload_base (1 samples, 0.02%)</title><rect x="1065.2" y="1749" width="0.2" height="15.0" fill="rgb(224,38,50)" rx="2" ry="2" />
<text  x="1068.22" y="1759.5" ></text>
</g>
<g >
<title>operator new (6 samples, 0.12%)</title><rect x="862.8" y="1781" width="1.4" height="15.0" fill="rgb(253,85,31)" rx="2" ry="2" />
<text  x="865.84" y="1791.5" ></text>
</g>
<g >
<title>ser::qr_partition__rows&lt;bytes_ostream&gt;::add (3 samples, 0.06%)</title><rect x="365.3" y="1605" width="0.7" height="15.0" fill="rgb(224,113,40)" rx="2" ry="2" />
<text  x="368.29" y="1615.5" ></text>
</g>
<g >
<title>seastar::internal::future_base::future_base (1 samples, 0.02%)</title><rect x="822.5" y="1701" width="0.2" height="15.0" fill="rgb(251,147,35)" rx="2" ry="2" />
<text  x="825.46" y="1711.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_map&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::at&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt; &gt; (1 samples, 0.02%)</title><rect x="79.2" y="1829" width="0.2" height="15.0" fill="rgb(211,164,43)" rx="2" ry="2" />
<text  x="82.20" y="1839.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (1 samples, 0.02%)</title><rect x="828.4" y="1701" width="0.2" height="15.0" fill="rgb(212,224,53)" rx="2" ry="2" />
<text  x="831.35" y="1711.5" ></text>
</g>
<g >
<title>cql3::expr::untyped_constant_test_assignment (1 samples, 0.02%)</title><rect x="69.4" y="1797" width="0.3" height="15.0" fill="rgb(245,15,4)" rx="2" ry="2" />
<text  x="72.44" y="1807.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value_view, std::allocator&lt;cql3::raw_value_view&gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="688.4" y="1877" width="0.2" height="15.0" fill="rgb(243,113,5)" rx="2" ry="2" />
<text  x="691.37" y="1887.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::execute (1 samples, 0.02%)</title><rect x="976.1" y="1733" width="0.2" height="15.0" fill="rgb(236,162,10)" rx="2" ry="2" />
<text  x="979.05" y="1743.5" ></text>
</g>
<g >
<title>db::system_distributed_keyspace::read_cdc_generation (1 samples, 0.02%)</title><rect x="11.4" y="1765" width="0.2" height="15.0" fill="rgb(211,47,22)" rx="2" ry="2" />
<text  x="14.36" y="1775.5" ></text>
</g>
<g >
<title>auth::standard_role_manager::start (1 samples, 0.02%)</title><rect x="700.6" y="1893" width="0.2" height="15.0" fill="rgb(241,161,44)" rx="2" ry="2" />
<text  x="703.62" y="1903.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.02%)</title><rect x="59.2" y="1685" width="0.3" height="15.0" fill="rgb(250,213,24)" rx="2" ry="2" />
<text  x="62.23" y="1695.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="1033.7" y="1685" width="0.2" height="15.0" fill="rgb(215,178,2)" rx="2" ry="2" />
<text  x="1036.68" y="1695.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (10 samples, 0.19%)</title><rect x="564.9" y="1749" width="2.3" height="15.0" fill="rgb(229,153,32)" rx="2" ry="2" />
<text  x="567.95" y="1759.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::~impl (2 samples, 0.04%)</title><rect x="574.7" y="1733" width="0.5" height="15.0" fill="rgb(212,225,42)" rx="2" ry="2" />
<text  x="577.70" y="1743.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (4 samples, 0.08%)</title><rect x="808.6" y="1589" width="0.9" height="15.0" fill="rgb(227,98,11)" rx="2" ry="2" />
<text  x="811.62" y="1599.5" ></text>
</g>
<g >
<title>service::storage_proxy::cannot_hint&lt;boost::range::joined_range&lt;utils::small_vector&lt;gms::inet_address, 3ul&gt;, utils::small_vector&lt;gms::inet_address, 1ul&gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="1132.8" y="1621" width="0.3" height="15.0" fill="rgb(220,77,30)" rx="2" ry="2" />
<text  x="1135.83" y="1631.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::push_back (24 samples, 0.46%)</title><rect x="1020.7" y="1621" width="5.5" height="15.0" fill="rgb(206,106,13)" rx="2" ry="2" />
<text  x="1023.75" y="1631.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::trivial_direct_destroy (1 samples, 0.02%)</title><rect x="130.9" y="1813" width="0.3" height="15.0" fill="rgb(226,199,23)" rx="2" ry="2" />
<text  x="133.93" y="1823.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;char*, __gnu_cxx::__ops::_Iter_pred&lt;boost::algorithm::detail::is_any_ofF&lt;char&gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="12.3" y="1861" width="0.2" height="15.0" fill="rgb(205,4,2)" rx="2" ry="2" />
<text  x="15.27" y="1871.5" ></text>
</g>
<g >
<title>logalloc::prime_segment_pool (1 samples, 0.02%)</title><rect x="730.3" y="1717" width="0.3" height="15.0" fill="rgb(209,215,36)" rx="2" ry="2" />
<text  x="733.34" y="1727.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (3 samples, 0.06%)</title><rect x="626.9" y="1861" width="0.7" height="15.0" fill="rgb(232,118,51)" rx="2" ry="2" />
<text  x="629.89" y="1871.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.02%)</title><rect x="11.4" y="1925" width="0.2" height="15.0" fill="rgb(245,223,31)" rx="2" ry="2" />
<text  x="14.36" y="1935.5" ></text>
</g>
<g >
<title>std::__find_if&lt;gms::inet_address*, __gnu_cxx::__ops::_Iter_equals_val&lt;gms::inet_address const&gt; &gt; (3 samples, 0.06%)</title><rect x="1080.2" y="1733" width="0.7" height="15.0" fill="rgb(227,28,10)" rx="2" ry="2" />
<text  x="1083.19" y="1743.5" ></text>
</g>
<g >
<title>list_reader_selector::list_reader_selector (1 samples, 0.02%)</title><rect x="450.1" y="1749" width="0.3" height="15.0" fill="rgb(223,147,5)" rx="2" ry="2" />
<text  x="453.15" y="1759.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::statements::raw::update_statement, cql3::cf_name, std::unique_ptr&lt;cql3::attributes::raw, std::default_delete&lt;cql3::attributes::raw&gt; &gt;, std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;, std::vector&lt;seastar::shared_ptr&lt;cql3::relation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::relation&gt; &gt; &gt;, std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, seastar::lw_shared_ptr&lt;cql3::column_condition::raw&gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, seastar::lw_shared_ptr&lt;cql3::column_condition::raw&gt; &gt; &gt; &gt;, bool&amp;&gt; (2 samples, 0.04%)</title><rect x="61.3" y="1781" width="0.4" height="15.0" fill="rgb(213,143,13)" rx="2" ry="2" />
<text  x="64.27" y="1791.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (1 samples, 0.02%)</title><rect x="682.0" y="1893" width="0.2" height="15.0" fill="rgb(231,200,6)" rx="2" ry="2" />
<text  x="685.02" y="1903.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::_S_construct&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; const&amp;&gt; (1 samples, 0.02%)</title><rect x="57.4" y="1685" width="0.2" height="15.0" fill="rgb(226,107,43)" rx="2" ry="2" />
<text  x="60.42" y="1695.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (3 samples, 0.06%)</title><rect x="45.4" y="1733" width="0.7" height="15.0" fill="rgb(253,38,39)" rx="2" ry="2" />
<text  x="48.39" y="1743.5" ></text>
</g>
<g >
<title>std::__equal&lt;true&gt;::equal&lt;char&gt; (5 samples, 0.10%)</title><rect x="812.7" y="1541" width="1.1" height="15.0" fill="rgb(239,91,47)" rx="2" ry="2" />
<text  x="815.70" y="1551.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, query::non_null_data_value&gt;, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, query::non_null_data_value&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, std::hash&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (1 samples, 0.02%)</title><rect x="107.1" y="1749" width="0.2" height="15.0" fill="rgb(253,187,49)" rx="2" ry="2" />
<text  x="110.10" y="1759.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::indirect_move (1 samples, 0.02%)</title><rect x="1024.4" y="1557" width="0.2" height="15.0" fill="rgb(224,131,19)" rx="2" ry="2" />
<text  x="1027.38" y="1567.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="1117.9" y="1861" width="0.2" height="15.0" fill="rgb(236,118,5)" rx="2" ry="2" />
<text  x="1120.85" y="1871.5" ></text>
</g>
<g >
<title>query::result::builder::builder (25 samples, 0.48%)</title><rect x="612.1" y="1845" width="5.7" height="15.0" fill="rgb(215,125,3)" rx="2" ry="2" />
<text  x="615.14" y="1855.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::constant (9 samples, 0.17%)</title><rect x="53.1" y="1701" width="2.0" height="15.0" fill="rgb(227,225,44)" rx="2" ry="2" />
<text  x="56.11" y="1711.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (1 samples, 0.02%)</title><rect x="107.6" y="1813" width="0.2" height="15.0" fill="rgb(226,123,11)" rx="2" ry="2" />
<text  x="110.56" y="1823.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_pausable&lt;flush_reader::fill_buffer (6 samples, 0.12%)</title><rect x="81.9" y="1813" width="1.4" height="15.0" fill="rgb(247,19,3)" rx="2" ry="2" />
<text  x="84.92" y="1823.5" ></text>
</g>
<g >
<title>range_tombstone_stream::get_next (1 samples, 0.02%)</title><rect x="270.9" y="1589" width="0.2" height="15.0" fill="rgb(231,220,18)" rx="2" ry="2" />
<text  x="273.91" y="1599.5" ></text>
</g>
<g >
<title>seastar::internal::awaiter&lt;void&gt;::await_suspend&lt;seastar::internal::coroutine_traits_base&lt;std::tuple&lt;seastar::lw_shared_ptr&lt;query::result&gt;, cache_temperature&gt; &gt;::promise_type&gt; (1 samples, 0.02%)</title><rect x="1033.0" y="1685" width="0.2" height="15.0" fill="rgb(250,121,31)" rx="2" ry="2" />
<text  x="1036.00" y="1695.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.04%)</title><rect x="474.6" y="1733" width="0.5" height="15.0" fill="rgb(226,168,11)" rx="2" ry="2" />
<text  x="477.65" y="1743.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (14 samples, 0.27%)</title><rect x="153.2" y="1861" width="3.1" height="15.0" fill="rgb(248,39,15)" rx="2" ry="2" />
<text  x="156.16" y="1871.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::disable_abort_on_alloc_failure_temporarily (1 samples, 0.02%)</title><rect x="271.1" y="1605" width="0.3" height="15.0" fill="rgb(230,205,29)" rx="2" ry="2" />
<text  x="274.14" y="1615.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::storage_proxy&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="1136.5" y="1925" width="0.2" height="15.0" fill="rgb(209,41,12)" rx="2" ry="2" />
<text  x="1139.46" y="1935.5" ></text>
</g>
<g >
<title>seastar::future&lt;boost::iterator_range&lt;mutation_fragment*&gt; &gt;::then_impl&lt;mutation_fragment_merger&lt;mutation_reader_merger&gt;::fetch (2 samples, 0.04%)</title><rect x="305.9" y="1765" width="0.4" height="15.0" fill="rgb(227,76,4)" rx="2" ry="2" />
<text  x="308.85" y="1775.5" ></text>
</g>
<g >
<title>read_simple&lt;unsigned short, managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="918.7" y="1797" width="0.2" height="15.0" fill="rgb(252,48,7)" rx="2" ry="2" />
<text  x="921.65" y="1807.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (6 samples, 0.12%)</title><rect x="38.1" y="1781" width="1.4" height="15.0" fill="rgb(211,22,24)" rx="2" ry="2" />
<text  x="41.13" y="1791.5" ></text>
</g>
<g >
<title>seastar::internal::uninitialized_wrapper_base&lt;service::storage_proxy_coordinator_query_result, false&gt;::uninitialized_set&lt;service::storage_proxy_coordinator_query_result&gt; (1 samples, 0.02%)</title><rect x="697.2" y="1893" width="0.2" height="15.0" fill="rgb(215,176,3)" rx="2" ry="2" />
<text  x="700.22" y="1903.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (1 samples, 0.02%)</title><rect x="785.2" y="1765" width="0.3" height="15.0" fill="rgb(241,151,41)" rx="2" ry="2" />
<text  x="788.25" y="1775.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::empty (1 samples, 0.02%)</title><rect x="947.0" y="1813" width="0.2" height="15.0" fill="rgb(221,165,14)" rx="2" ry="2" />
<text  x="950.01" y="1823.5" ></text>
</g>
<g >
<title>std::__push_heap&lt;mutation_reader_merger::reader_and_fragment*, long, mutation_reader_merger::reader_and_fragment, __gnu_cxx::__ops::_Iter_comp_val&lt;mutation_reader_merger::reader_heap_compare&gt; &gt; (1 samples, 0.02%)</title><rect x="187.0" y="1653" width="0.2" height="15.0" fill="rgb(226,37,25)" rx="2" ry="2" />
<text  x="189.97" y="1663.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::invoke_on_all (1 samples, 0.02%)</title><rect x="17.3" y="1893" width="0.2" height="15.0" fill="rgb(236,40,15)" rx="2" ry="2" />
<text  x="20.26" y="1903.5" ></text>
</g>
<g >
<title>table::mutation_query (1 samples, 0.02%)</title><rect x="138.2" y="1877" width="0.2" height="15.0" fill="rgb(206,221,9)" rx="2" ry="2" />
<text  x="141.19" y="1887.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.02%)</title><rect x="47.2" y="1557" width="0.2" height="15.0" fill="rgb(208,218,17)" rx="2" ry="2" />
<text  x="50.21" y="1567.5" ></text>
</g>
<g >
<title>seastar::posix_file_real_impl::read_dma (1 samples, 0.02%)</title><rect x="17.9" y="1333" width="0.3" height="15.0" fill="rgb(237,13,18)" rx="2" ry="2" />
<text  x="20.94" y="1343.5" ></text>
</g>
<g >
<title>ser::writer_of_qr_cell&lt;bytes_ostream&gt;::skip_timestamp (6 samples, 0.12%)</title><rect x="388.7" y="1589" width="1.3" height="15.0" fill="rgb(247,40,19)" rx="2" ry="2" />
<text  x="391.66" y="1599.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::statements::drop_function_statement, std::default_delete&lt;cql3::statements::drop_function_statement&gt;, true, true&gt;::__uniq_ptr_data (1 samples, 0.02%)</title><rect x="64.5" y="1781" width="0.2" height="15.0" fill="rgb(205,208,40)" rx="2" ry="2" />
<text  x="67.45" y="1791.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;single_node_cql_env::core_local_state&gt;::local (1 samples, 0.02%)</title><rect x="855.6" y="1845" width="0.2" height="15.0" fill="rgb(253,223,13)" rx="2" ry="2" />
<text  x="858.58" y="1855.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (2 samples, 0.04%)</title><rect x="698.1" y="1909" width="0.5" height="15.0" fill="rgb(226,45,4)" rx="2" ry="2" />
<text  x="701.13" y="1919.5" ></text>
</g>
<g >
<title>logalloc::basic_region_impl::set_reclaiming_enabled (2 samples, 0.04%)</title><rect x="547.0" y="1733" width="0.5" height="15.0" fill="rgb(225,124,20)" rx="2" ry="2" />
<text  x="550.02" y="1743.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_internal&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt; &gt; (11 samples, 0.21%)</title><rect x="1126.7" y="1717" width="2.5" height="15.0" fill="rgb(229,182,39)" rx="2" ry="2" />
<text  x="1129.70" y="1727.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="701.5" y="1909" width="0.3" height="15.0" fill="rgb(218,226,39)" rx="2" ry="2" />
<text  x="704.53" y="1919.5" ></text>
</g>
<g >
<title>ser::serializer&lt;clustering_key_prefix&gt;::read&lt;seastar::simple_memory_input_stream&gt; (1 samples, 0.02%)</title><rect x="1124.4" y="1653" width="0.3" height="15.0" fill="rgb(250,213,26)" rx="2" ry="2" />
<text  x="1127.43" y="1663.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (1 samples, 0.02%)</title><rect x="96.9" y="1893" width="0.2" height="15.0" fill="rgb(247,16,47)" rx="2" ry="2" />
<text  x="99.89" y="1903.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (13 samples, 0.25%)</title><rect x="427.0" y="1685" width="3.0" height="15.0" fill="rgb(208,63,31)" rx="2" ry="2" />
<text  x="430.00" y="1695.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (5 samples, 0.10%)</title><rect x="1148.7" y="1781" width="1.1" height="15.0" fill="rgb(248,46,48)" rx="2" ry="2" />
<text  x="1151.71" y="1791.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;std::pair&lt;seastar::shared_ptr&lt;service::abstract_read_executor&gt;, nonwrapping_interval&lt;dht::token&gt; &gt;, 1ul&gt;::clear (18 samples, 0.35%)</title><rect x="1161.0" y="1893" width="4.0" height="15.0" fill="rgb(239,32,42)" rx="2" ry="2" />
<text  x="1163.96" y="1903.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit_slot&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::walking_visitor&lt;row::for_each_cell&lt;(anonymous namespace)::write_row_cells&lt;ser::deletable_row__cells&lt;bytes_ostream&gt; &gt; (3 samples, 0.06%)</title><rect x="1130.3" y="1541" width="0.7" height="15.0" fill="rgb(240,203,48)" rx="2" ry="2" />
<text  x="1133.33" y="1551.5" ></text>
</g>
<g >
<title>auth::service::start (1 samples, 0.02%)</title><rect x="700.6" y="1909" width="0.2" height="15.0" fill="rgb(211,28,26)" rx="2" ry="2" />
<text  x="703.62" y="1919.5" ></text>
</g>
<g >
<title>flush_reader::fill_buffer (9 samples, 0.17%)</title><rect x="81.2" y="1861" width="2.1" height="15.0" fill="rgb(252,187,24)" rx="2" ry="2" />
<text  x="84.24" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::~_Variant_storage (1 samples, 0.02%)</title><rect x="137.7" y="1877" width="0.3" height="15.0" fill="rgb(214,87,34)" rx="2" ry="2" />
<text  x="140.73" y="1887.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="598.5" y="1813" width="0.3" height="15.0" fill="rgb(245,46,51)" rx="2" ry="2" />
<text  x="601.53" y="1823.5" ></text>
</g>
<g >
<title>sstables::mx::mx_sstable_mutation_reader::fill_buffer (1 samples, 0.02%)</title><rect x="17.9" y="1685" width="0.3" height="15.0" fill="rgb(213,86,53)" rx="2" ry="2" />
<text  x="20.94" y="1695.5" ></text>
</g>
<g >
<title>service::never_speculating_read_executor::~never_speculating_read_executor (1 samples, 0.02%)</title><rect x="1160.7" y="1893" width="0.3" height="15.0" fill="rgb(210,19,36)" rx="2" ry="2" />
<text  x="1163.73" y="1903.5" ></text>
</g>
<g >
<title>seastar::syscall_work_queue::submit&lt;seastar::syscall_result&lt;int&gt; &gt; (1 samples, 0.02%)</title><rect x="730.6" y="1861" width="0.2" height="15.0" fill="rgb(252,95,53)" rx="2" ry="2" />
<text  x="733.57" y="1871.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;cql3::prepared_cache_key_type&gt;::satisfy_with_result_of&lt;seastar::future&lt;void&gt;::then_impl_nrvo&lt;single_node_cql_env::prepare (1 samples, 0.02%)</title><rect x="10.5" y="229" width="0.2" height="15.0" fill="rgb(217,54,51)" rx="2" ry="2" />
<text  x="13.45" y="239.5" ></text>
</g>
<g >
<title>absl::hash_internal::HashState::combine_contiguous (2 samples, 0.04%)</title><rect x="853.5" y="1765" width="0.5" height="15.0" fill="rgb(247,190,49)" rx="2" ry="2" />
<text  x="856.54" y="1775.5" ></text>
</g>
<g >
<title>compressed_file_data_source_impl&lt;crc32_utils&gt;::get (1 samples, 0.02%)</title><rect x="17.9" y="1557" width="0.3" height="15.0" fill="rgb(248,11,3)" rx="2" ry="2" />
<text  x="20.94" y="1567.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (1 samples, 0.02%)</title><rect x="54.7" y="1669" width="0.2" height="15.0" fill="rgb(216,87,31)" rx="2" ry="2" />
<text  x="57.70" y="1679.5" ></text>
</g>
<g >
<title>service::abstract_read_resolver::done (2 samples, 0.04%)</title><rect x="710.4" y="1877" width="0.4" height="15.0" fill="rgb(214,74,13)" rx="2" ry="2" />
<text  x="713.38" y="1887.5" ></text>
</g>
<g >
<title>bytes_ostream::alloc_new (1 samples, 0.02%)</title><rect x="1131.7" y="1573" width="0.2" height="15.0" fill="rgb(229,221,42)" rx="2" ry="2" />
<text  x="1134.69" y="1583.5" ></text>
</g>
<g >
<title>write_row&lt;ser::writer_of_deletable_row&lt;bytes_ostream&gt; &gt; (4 samples, 0.08%)</title><rect x="1130.3" y="1573" width="0.9" height="15.0" fill="rgb(218,84,50)" rx="2" ry="2" />
<text  x="1133.33" y="1583.5" ></text>
</g>
<g >
<title>db::query_context::execute_cql&lt;&gt; (1 samples, 0.02%)</title><rect x="11.6" y="1845" width="0.2" height="15.0" fill="rgb(245,44,39)" rx="2" ry="2" />
<text  x="14.59" y="1855.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_219f1a43593042f0924f8fe16cb9c27482170876] (1 samples, 0.02%)</title><rect x="1158.5" y="1893" width="0.2" height="15.0" fill="rgb(233,211,18)" rx="2" ry="2" />
<text  x="1161.46" y="1903.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_prepared_with_qo (526 samples, 10.11%)</title><rect x="739.6" y="1877" width="119.4" height="15.0" fill="rgb(239,15,37)" rx="2" ry="2" />
<text  x="742.64" y="1887.5" >single_node_cq..</text>
</g>
<g >
<title>std::vector&lt;seastar::shared_ptr&lt;cql3::operation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::operation&gt; &gt; &gt;::emplace_back&lt;seastar::shared_ptr&lt;cql3::operation&gt; &gt; (1 samples, 0.02%)</title><rect x="70.3" y="1829" width="0.3" height="15.0" fill="rgb(218,74,1)" rx="2" ry="2" />
<text  x="73.35" y="1839.5" ></text>
</g>
<g >
<title>service::client_state::set_keyspace (10 samples, 0.19%)</title><rect x="856.5" y="1845" width="2.3" height="15.0" fill="rgb(221,123,2)" rx="2" ry="2" />
<text  x="859.49" y="1855.5" ></text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_slice_or_needs_filtering (1 samples, 0.02%)</title><rect x="943.4" y="1765" width="0.2" height="15.0" fill="rgb(230,62,20)" rx="2" ry="2" />
<text  x="946.38" y="1775.5" ></text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::find (4 samples, 0.08%)</title><rect x="664.3" y="1829" width="0.9" height="15.0" fill="rgb(242,222,21)" rx="2" ry="2" />
<text  x="667.32" y="1839.5" ></text>
</g>
<g >
<title>std::__find_if&lt;char*, __gnu_cxx::__ops::_Iter_pred&lt;boost::algorithm::detail::is_any_ofF&lt;char&gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="12.3" y="1845" width="0.2" height="15.0" fill="rgb(236,106,30)" rx="2" ry="2" />
<text  x="15.27" y="1855.5" ></text>
</g>
<g >
<title>cql3::query_options::prepare (1 samples, 0.02%)</title><rect x="739.2" y="1877" width="0.2" height="15.0" fill="rgb(220,127,1)" rx="2" ry="2" />
<text  x="742.19" y="1887.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextTokenStr (41 samples, 0.79%)</title><rect x="26.1" y="1701" width="9.3" height="15.0" fill="rgb(248,56,10)" rx="2" ry="2" />
<text  x="29.11" y="1711.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE14then_impl_nrvoIZNS6_14discard_resultEvEUlDpOT_E_NS0_IvEEEET0_OT_ (7 samples, 0.13%)</title><rect x="735.8" y="1877" width="1.6" height="15.0" fill="rgb(212,6,38)" rx="2" ry="2" />
<text  x="738.79" y="1887.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::pop_front (7 samples, 0.13%)</title><rect x="130.5" y="1829" width="1.6" height="15.0" fill="rgb(220,186,43)" rx="2" ry="2" />
<text  x="133.47" y="1839.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (1 samples, 0.02%)</title><rect x="1113.1" y="1797" width="0.2" height="15.0" fill="rgb(238,108,54)" rx="2" ry="2" />
<text  x="1116.09" y="1807.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (5 samples, 0.10%)</title><rect x="151.8" y="1845" width="1.1" height="15.0" fill="rgb(206,221,39)" rx="2" ry="2" />
<text  x="154.80" y="1855.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.02%)</title><rect x="17.7" y="1941" width="0.2" height="15.0" fill="rgb(250,202,42)" rx="2" ry="2" />
<text  x="20.71" y="1951.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (1 samples, 0.02%)</title><rect x="510.9" y="1733" width="0.3" height="15.0" fill="rgb(224,169,2)" rx="2" ry="2" />
<text  x="513.95" y="1743.5" ></text>
</g>
<g >
<title>std::__copy_n_a&lt;legacy_compound_view&lt;compound_type&lt; (1 samples, 0.02%)</title><rect x="918.9" y="1797" width="0.2" height="15.0" fill="rgb(247,44,10)" rx="2" ry="2" />
<text  x="921.88" y="1807.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (6 samples, 0.12%)</title><rect x="639.8" y="1909" width="1.4" height="15.0" fill="rgb(240,11,30)" rx="2" ry="2" />
<text  x="642.82" y="1919.5" ></text>
</g>
<g >
<title>cql3::expr::expression::operator= (2 samples, 0.04%)</title><rect x="49.9" y="1717" width="0.5" height="15.0" fill="rgb(237,132,5)" rx="2" ry="2" />
<text  x="52.93" y="1727.5" ></text>
</g>
<g >
<title>database::find_keyspace (14 samples, 0.27%)</title><rect x="1053.0" y="1765" width="3.1" height="15.0" fill="rgb(214,151,31)" rx="2" ry="2" />
<text  x="1055.96" y="1775.5" ></text>
</g>
<g >
<title>mutation::set_clustered_cell (1 samples, 0.02%)</title><rect x="108.5" y="1797" width="0.2" height="15.0" fill="rgb(221,154,33)" rx="2" ry="2" />
<text  x="111.47" y="1807.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (2 samples, 0.04%)</title><rect x="39.7" y="1717" width="0.5" height="15.0" fill="rgb(235,104,53)" rx="2" ry="2" />
<text  x="42.72" y="1727.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_pausable&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (416 samples, 8.00%)</title><rect x="335.6" y="1701" width="94.4" height="15.0" fill="rgb(224,155,11)" rx="2" ry="2" />
<text  x="338.57" y="1711.5" >flat_mutati..</text>
</g>
<g >
<title>seastar::internal::do_until_state&lt;executor&lt;test_read (2 samples, 0.04%)</title><rect x="88.0" y="1941" width="0.5" height="15.0" fill="rgb(251,223,40)" rx="2" ry="2" />
<text  x="91.05" y="1951.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.02%)</title><rect x="45.4" y="1621" width="0.2" height="15.0" fill="rgb(209,67,29)" rx="2" ry="2" />
<text  x="48.39" y="1631.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="701.1" y="1861" width="0.2" height="15.0" fill="rgb(235,204,43)" rx="2" ry="2" />
<text  x="704.07" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.5" y="549" width="0.2" height="15.0" fill="rgb(225,204,6)" rx="2" ry="2" />
<text  x="13.45" y="559.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="46.8" y="1685" width="0.2" height="15.0" fill="rgb(218,30,28)" rx="2" ry="2" />
<text  x="49.75" y="1695.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;std::function&lt;flat_mutation_reader  (2 samples, 0.04%)</title><rect x="622.8" y="1861" width="0.5" height="15.0" fill="rgb(210,175,12)" rx="2" ry="2" />
<text  x="625.80" y="1871.5" ></text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_token (7 samples, 0.13%)</title><rect x="660.7" y="1829" width="1.6" height="15.0" fill="rgb(253,107,47)" rx="2" ry="2" />
<text  x="663.69" y="1839.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_istream (1 samples, 0.02%)</title><rect x="36.8" y="1797" width="0.2" height="15.0" fill="rgb(232,139,14)" rx="2" ry="2" />
<text  x="39.77" y="1807.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (6 samples, 0.12%)</title><rect x="328.5" y="1797" width="1.4" height="15.0" fill="rgb(208,88,23)" rx="2" ry="2" />
<text  x="331.54" y="1807.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::~timer (2 samples, 0.04%)</title><rect x="131.6" y="1813" width="0.5" height="15.0" fill="rgb(228,182,41)" rx="2" ry="2" />
<text  x="134.61" y="1823.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::partition_tombstone (5 samples, 0.10%)</title><rect x="527.5" y="1669" width="1.1" height="15.0" fill="rgb(239,7,22)" rx="2" ry="2" />
<text  x="530.51" y="1679.5" ></text>
</g>
<g >
<title>allocation_strategy::alloc&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::leaf_node&gt; (6 samples, 0.12%)</title><rect x="240.5" y="1525" width="1.4" height="15.0" fill="rgb(207,139,31)" rx="2" ry="2" />
<text  x="243.51" y="1535.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.06%)</title><rect x="714.2" y="1909" width="0.7" height="15.0" fill="rgb(224,120,32)" rx="2" ry="2" />
<text  x="717.23" y="1919.5" ></text>
</g>
<g >
<title>row_cache::make_reader (1 samples, 0.02%)</title><rect x="444.0" y="1781" width="0.2" height="15.0" fill="rgb(207,47,49)" rx="2" ry="2" />
<text  x="447.02" y="1791.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.02%)</title><rect x="40.9" y="1605" width="0.2" height="15.0" fill="rgb(211,70,43)" rx="2" ry="2" />
<text  x="43.86" y="1615.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.02%)</title><rect x="54.5" y="1605" width="0.2" height="15.0" fill="rgb(235,34,34)" rx="2" ry="2" />
<text  x="57.47" y="1615.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::remove_if&lt;row::compact_and_expire (74 samples, 1.42%)</title><rect x="396.6" y="1621" width="16.8" height="15.0" fill="rgb(238,92,39)" rx="2" ry="2" />
<text  x="399.60" y="1631.5" ></text>
</g>
<g >
<title>std::vector&lt;global_schema_ptr, std::allocator&lt;global_schema_ptr&gt; &gt;::_M_realloc_insert&lt;seastar::lw_shared_ptr&lt;schema const&gt;&amp;&gt; (3 samples, 0.06%)</title><rect x="106.7" y="1861" width="0.6" height="15.0" fill="rgb(205,204,23)" rx="2" ry="2" />
<text  x="109.65" y="1871.5" ></text>
</g>
<g >
<title>cdc::do_update_streams_description (1 samples, 0.02%)</title><rect x="101.7" y="1925" width="0.2" height="15.0" fill="rgb(206,5,3)" rx="2" ry="2" />
<text  x="104.66" y="1935.5" ></text>
</g>
<g >
<title>ser::row_view::columns (1 samples, 0.02%)</title><rect x="1124.2" y="1653" width="0.2" height="15.0" fill="rgb(241,165,33)" rx="2" ry="2" />
<text  x="1127.20" y="1663.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;std::function&lt;flat_mutation_reader  (1 samples, 0.02%)</title><rect x="638.5" y="1829" width="0.2" height="15.0" fill="rgb(251,197,29)" rx="2" ry="2" />
<text  x="641.46" y="1839.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (2 samples, 0.04%)</title><rect x="44.0" y="1669" width="0.5" height="15.0" fill="rgb(247,204,33)" rx="2" ry="2" />
<text  x="47.03" y="1679.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (1 samples, 0.02%)</title><rect x="59.5" y="1685" width="0.2" height="15.0" fill="rgb(216,10,12)" rx="2" ry="2" />
<text  x="62.46" y="1695.5" ></text>
</g>
<g >
<title>validation::validate_keyspace (2 samples, 0.04%)</title><rect x="76.5" y="1861" width="0.4" height="15.0" fill="rgb(244,217,8)" rx="2" ry="2" />
<text  x="79.48" y="1871.5" ></text>
</g>
<g >
<title>[libpthread-2.33.so] (1 samples, 0.02%)</title><rect x="10.5" y="245" width="0.2" height="15.0" fill="rgb(228,111,37)" rx="2" ry="2" />
<text  x="13.45" y="255.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (1 samples, 0.02%)</title><rect x="618.9" y="1829" width="0.3" height="15.0" fill="rgb(211,59,48)" rx="2" ry="2" />
<text  x="621.94" y="1839.5" ></text>
</g>
<g >
<title>cdc::generation_service::do_handle_cdc_generation (1 samples, 0.02%)</title><rect x="11.4" y="1797" width="0.2" height="15.0" fill="rgb(240,77,33)" rx="2" ry="2" />
<text  x="14.36" y="1807.5" ></text>
</g>
<g >
<title>utils::timed_rate_moving_average_and_histogram::mark (1 samples, 0.02%)</title><rect x="618.9" y="1845" width="0.3" height="15.0" fill="rgb(228,37,10)" rx="2" ry="2" />
<text  x="621.94" y="1855.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_in_thread&lt;sstables::sstable_writer, flat_mutation_reader::no_filter&gt; (14 samples, 0.27%)</title><rect x="81.2" y="1893" width="3.2" height="15.0" fill="rgb(205,144,14)" rx="2" ry="2" />
<text  x="84.24" y="1903.5" ></text>
</g>
<g >
<title>cql3::restrictions::partition_key_restrictions::needs_filtering (1 samples, 0.02%)</title><rect x="657.5" y="1893" width="0.2" height="15.0" fill="rgb(209,10,12)" rx="2" ry="2" />
<text  x="660.51" y="1903.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_Optional_payload_base (1 samples, 0.02%)</title><rect x="802.5" y="1685" width="0.2" height="15.0" fill="rgb(208,217,20)" rx="2" ry="2" />
<text  x="805.49" y="1695.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="1131.7" y="1557" width="0.2" height="15.0" fill="rgb(223,13,26)" rx="2" ry="2" />
<text  x="1134.69" y="1567.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mQUOTED_NAME (2 samples, 0.04%)</title><rect x="32.5" y="1685" width="0.4" height="15.0" fill="rgb(218,71,32)" rx="2" ry="2" />
<text  x="35.46" y="1695.5" ></text>
</g>
<g >
<title>database::find_column_family (7 samples, 0.13%)</title><rect x="833.8" y="1765" width="1.6" height="15.0" fill="rgb(208,224,22)" rx="2" ry="2" />
<text  x="836.80" y="1775.5" ></text>
</g>
<g >
<title>__dynamic_cast (1 samples, 0.02%)</title><rect x="657.3" y="1893" width="0.2" height="15.0" fill="rgb(253,50,6)" rx="2" ry="2" />
<text  x="660.29" y="1903.5" ></text>
</g>
<g >
<title>antlr3::IntStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::mark (2 samples, 0.04%)</title><rect x="34.3" y="1653" width="0.4" height="15.0" fill="rgb(213,69,42)" rx="2" ry="2" />
<text  x="37.28" y="1663.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::make_data_requests (68 samples, 1.31%)</title><rect x="714.2" y="1925" width="15.5" height="15.0" fill="rgb(217,9,54)" rx="2" ry="2" />
<text  x="717.23" y="1935.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.02%)</title><rect x="43.8" y="1525" width="0.2" height="15.0" fill="rgb(224,73,0)" rx="2" ry="2" />
<text  x="46.81" y="1535.5" ></text>
</g>
<g >
<title>allocation_strategy::alloc&lt;blob_storage&gt; (1 samples, 0.02%)</title><rect x="1121.0" y="1605" width="0.3" height="15.0" fill="rgb(252,202,35)" rx="2" ry="2" />
<text  x="1124.03" y="1615.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (2 samples, 0.04%)</title><rect x="386.8" y="1573" width="0.5" height="15.0" fill="rgb(218,178,40)" rx="2" ry="2" />
<text  x="389.85" y="1583.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.02%)</title><rect x="360.8" y="1605" width="0.2" height="15.0" fill="rgb(243,212,44)" rx="2" ry="2" />
<text  x="363.76" y="1615.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (7 samples, 0.13%)</title><rect x="553.6" y="1813" width="1.6" height="15.0" fill="rgb(209,157,43)" rx="2" ry="2" />
<text  x="556.60" y="1823.5" ></text>
</g>
<g >
<title>locator::token_metadata::pending_endpoints_for (1 samples, 0.02%)</title><rect x="1132.6" y="1621" width="0.2" height="15.0" fill="rgb(213,38,37)" rx="2" ry="2" />
<text  x="1135.60" y="1631.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::followPush (1 samples, 0.02%)</title><rect x="57.4" y="1749" width="0.2" height="15.0" fill="rgb(212,155,15)" rx="2" ry="2" />
<text  x="60.42" y="1759.5" ></text>
</g>
<g >
<title>operator delete (9 samples, 0.17%)</title><rect x="581.1" y="1717" width="2.0" height="15.0" fill="rgb(234,159,12)" rx="2" ry="2" />
<text  x="584.06" y="1727.5" ></text>
</g>
<g >
<title>row_cache::make_reader (60 samples, 1.15%)</title><rect x="538.4" y="1765" width="13.6" height="15.0" fill="rgb(239,163,28)" rx="2" ry="2" />
<text  x="541.40" y="1775.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="73.8" y="1813" width="0.2" height="15.0" fill="rgb(239,49,10)" rx="2" ry="2" />
<text  x="76.75" y="1823.5" ></text>
</g>
<g >
<title>seastar::future&lt;mutation_fragment*&gt;::then_impl&lt;query::consume_page&lt; (1 samples, 0.02%)</title><rect x="138.2" y="1829" width="0.2" height="15.0" fill="rgb(226,22,0)" rx="2" ry="2" />
<text  x="141.19" y="1839.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;std::tuple&lt;std::optional&lt;clustering_key_prefix&gt; &gt; &gt;::clear (2 samples, 0.04%)</title><rect x="622.1" y="1861" width="0.5" height="15.0" fill="rgb(210,152,24)" rx="2" ry="2" />
<text  x="625.12" y="1871.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (1 samples, 0.02%)</title><rect x="265.2" y="1573" width="0.3" height="15.0" fill="rgb(218,11,36)" rx="2" ry="2" />
<text  x="268.24" y="1583.5" ></text>
</g>
<g >
<title>boost::range_detail::default_constructible_unary_fn_wrapper&lt;service::abstract_write_response_handler::max_backlog (1 samples, 0.02%)</title><rect x="730.1" y="1829" width="0.2" height="15.0" fill="rgb(246,141,38)" rx="2" ry="2" />
<text  x="733.12" y="1839.5" ></text>
</g>
<g >
<title>seastar::posix_thread::start_routine (2 samples, 0.04%)</title><rect x="1189.5" y="2037" width="0.5" height="15.0" fill="rgb(220,0,51)" rx="2" ry="2" />
<text  x="1192.55" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.5" y="1525" width="0.2" height="15.0" fill="rgb(217,227,30)" rx="2" ry="2" />
<text  x="13.45" y="1535.5" ></text>
</g>
<g >
<title>reader_selector::has_new_readers (1 samples, 0.02%)</title><rect x="176.5" y="1701" width="0.3" height="15.0" fill="rgb(213,118,12)" rx="2" ry="2" />
<text  x="179.53" y="1711.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextToken (45 samples, 0.87%)</title><rect x="25.2" y="1717" width="10.2" height="15.0" fill="rgb(239,20,38)" rx="2" ry="2" />
<text  x="28.20" y="1727.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (21 samples, 0.40%)</title><rect x="744.0" y="1781" width="4.7" height="15.0" fill="rgb(209,107,34)" rx="2" ry="2" />
<text  x="746.96" y="1791.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="591.7" y="1765" width="0.2" height="15.0" fill="rgb(212,23,34)" rx="2" ry="2" />
<text  x="594.72" y="1775.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::set&lt;&gt; (1 samples, 0.02%)</title><rect x="723.5" y="1829" width="0.3" height="15.0" fill="rgb(231,228,38)" rx="2" ry="2" />
<text  x="726.54" y="1839.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (2 samples, 0.04%)</title><rect x="1064.8" y="1749" width="0.4" height="15.0" fill="rgb(215,152,25)" rx="2" ry="2" />
<text  x="1067.76" y="1759.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::lru_entry, boost::intrusive::list_node_traits&lt;void*&gt;,  (5 samples, 0.10%)</title><rect x="757.3" y="1717" width="1.2" height="15.0" fill="rgb(242,9,18)" rx="2" ry="2" />
<text  x="760.34" y="1727.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.02%)</title><rect x="848.5" y="1829" width="0.3" height="15.0" fill="rgb(247,39,0)" rx="2" ry="2" />
<text  x="851.55" y="1839.5" ></text>
</g>
<g >
<title>mutation_reader_merger::add_readers (11 samples, 0.21%)</title><rect x="455.1" y="1701" width="2.5" height="15.0" fill="rgb(220,25,24)" rx="2" ry="2" />
<text  x="458.14" y="1711.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;abstract_type const&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="69.9" y="1813" width="0.2" height="15.0" fill="rgb(242,88,16)" rx="2" ry="2" />
<text  x="72.90" y="1823.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::take_value (1 samples, 0.02%)</title><rect x="311.3" y="1765" width="0.2" height="15.0" fill="rgb(253,142,15)" rx="2" ry="2" />
<text  x="314.30" y="1775.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (2 samples, 0.04%)</title><rect x="647.3" y="1893" width="0.5" height="15.0" fill="rgb(218,156,23)" rx="2" ry="2" />
<text  x="650.30" y="1903.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (9 samples, 0.17%)</title><rect x="744.2" y="1765" width="2.0" height="15.0" fill="rgb(211,148,20)" rx="2" ry="2" />
<text  x="747.18" y="1775.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::~partition_snapshot_flat_reader (1 samples, 0.02%)</title><rect x="1165.3" y="1797" width="0.2" height="15.0" fill="rgb(235,92,30)" rx="2" ry="2" />
<text  x="1168.27" y="1807.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="737.1" y="1861" width="0.3" height="15.0" fill="rgb(225,13,50)" rx="2" ry="2" />
<text  x="740.15" y="1871.5" ></text>
</g>
<g >
<title>sstables::file_writer::make (1 samples, 0.02%)</title><rect x="698.8" y="1909" width="0.2" height="15.0" fill="rgb(224,127,39)" rx="2" ry="2" />
<text  x="701.81" y="1919.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::_S_destroy&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;, antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="36.3" y="1749" width="0.2" height="15.0" fill="rgb(254,191,1)" rx="2" ry="2" />
<text  x="39.32" y="1759.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::clear (2 samples, 0.04%)</title><rect x="832.7" y="1765" width="0.4" height="15.0" fill="rgb(237,2,10)" rx="2" ry="2" />
<text  x="835.66" y="1775.5" ></text>
</g>
<g >
<title>abstract_type::decompose (1 samples, 0.02%)</title><rect x="71.3" y="1733" width="0.2" height="15.0" fill="rgb(227,66,16)" rx="2" ry="2" />
<text  x="74.26" y="1743.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::operator= (1 samples, 0.02%)</title><rect x="67.9" y="1797" width="0.2" height="15.0" fill="rgb(232,89,7)" rx="2" ry="2" />
<text  x="70.85" y="1807.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (6 samples, 0.12%)</title><rect x="509.6" y="1701" width="1.3" height="15.0" fill="rgb(212,85,26)" rx="2" ry="2" />
<text  x="512.59" y="1711.5" ></text>
</g>
<g >
<title>seastar::gate::enter (2 samples, 0.04%)</title><rect x="1030.5" y="1605" width="0.5" height="15.0" fill="rgb(243,53,35)" rx="2" ry="2" />
<text  x="1033.50" y="1615.5" ></text>
</g>
<g >
<title>auth::get_permissions (6 samples, 0.12%)</title><rect x="77.6" y="1797" width="1.4" height="15.0" fill="rgb(228,150,7)" rx="2" ry="2" />
<text  x="80.61" y="1807.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (2 samples, 0.04%)</title><rect x="690.4" y="1909" width="0.5" height="15.0" fill="rgb(219,45,5)" rx="2" ry="2" />
<text  x="693.41" y="1919.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_locally (3 samples, 0.06%)</title><rect x="1128.1" y="1637" width="0.6" height="15.0" fill="rgb(212,211,14)" rx="2" ry="2" />
<text  x="1131.06" y="1647.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::~impl (6 samples, 0.12%)</title><rect x="588.8" y="1797" width="1.3" height="15.0" fill="rgb(254,214,27)" rx="2" ry="2" />
<text  x="591.77" y="1807.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::finally_body&lt;seastar::internal::invoke_func_with_gate&lt;database::apply_in_memory (1 samples, 0.02%)</title><rect x="1125.1" y="1717" width="0.2" height="15.0" fill="rgb(233,35,46)" rx="2" ry="2" />
<text  x="1128.11" y="1727.5" ></text>
</g>
<g >
<title>antlr3::Lexer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::emit (3 samples, 0.06%)</title><rect x="27.7" y="1685" width="0.7" height="15.0" fill="rgb(250,71,18)" rx="2" ry="2" />
<text  x="30.70" y="1695.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (2 samples, 0.04%)</title><rect x="1121.0" y="1621" width="0.5" height="15.0" fill="rgb(246,120,48)" rx="2" ry="2" />
<text  x="1124.03" y="1631.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="47.9" y="1717" width="0.2" height="15.0" fill="rgb(207,36,41)" rx="2" ry="2" />
<text  x="50.89" y="1727.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnFamilyName (7 samples, 0.13%)</title><rect x="39.7" y="1781" width="1.6" height="15.0" fill="rgb(224,29,18)" rx="2" ry="2" />
<text  x="42.72" y="1791.5" ></text>
</g>
<g >
<title>partition_version_ref::operator (2 samples, 0.04%)</title><rect x="528.0" y="1653" width="0.4" height="15.0" fill="rgb(208,39,26)" rx="2" ry="2" />
<text  x="530.97" y="1663.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (30 samples, 0.58%)</title><rect x="810.0" y="1621" width="6.8" height="15.0" fill="rgb(210,155,15)" rx="2" ry="2" />
<text  x="812.98" y="1631.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::untyped_constant&gt; (4 samples, 0.08%)</title><rect x="52.2" y="1685" width="0.9" height="15.0" fill="rgb(237,121,16)" rx="2" ry="2" />
<text  x="55.20" y="1695.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (2 samples, 0.04%)</title><rect x="606.5" y="1813" width="0.4" height="15.0" fill="rgb(207,207,41)" rx="2" ry="2" />
<text  x="609.47" y="1823.5" ></text>
</g>
<g >
<title>flush_reader::get_next_partition (3 samples, 0.06%)</title><rect x="81.2" y="1829" width="0.7" height="15.0" fill="rgb(246,200,36)" rx="2" ry="2" />
<text  x="84.24" y="1839.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::unique_ptr (1 samples, 0.02%)</title><rect x="55.6" y="1685" width="0.2" height="15.0" fill="rgb(254,14,7)" rx="2" ry="2" />
<text  x="58.60" y="1695.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;query::result_digest, 3ul&gt;::~small_vector (2 samples, 0.04%)</title><rect x="713.8" y="1893" width="0.4" height="15.0" fill="rgb(220,106,14)" rx="2" ry="2" />
<text  x="716.78" y="1903.5" ></text>
</g>
<g >
<title>double_decker&lt;long, memtable_entry, dht::raw_token_less_comparator, dht::ring_position_comparator, 16,  (106 samples, 2.04%)</title><rect x="481.9" y="1749" width="24.1" height="15.0" fill="rgb(217,70,42)" rx="2" ry="2" />
<text  x="484.91" y="1759.5" >d..</text>
</g>
<g >
<title>flat_mutation_reader::impl::push_mutation_fragment&lt;mutation_fragment&gt; (1 samples, 0.02%)</title><rect x="192.9" y="1685" width="0.2" height="15.0" fill="rgb(241,106,28)" rx="2" ry="2" />
<text  x="195.86" y="1695.5" ></text>
</g>
<g >
<title>skip_empty_fragments&lt;managed_bytes_basic_view&lt; (4 samples, 0.08%)</title><rect x="499.8" y="1621" width="0.9" height="15.0" fill="rgb(216,181,31)" rx="2" ry="2" />
<text  x="502.83" y="1631.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::~CommonTokenStream (2 samples, 0.04%)</title><rect x="19.8" y="1845" width="0.4" height="15.0" fill="rgb(228,91,29)" rx="2" ry="2" />
<text  x="22.76" y="1855.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="309.7" y="1765" width="0.2" height="15.0" fill="rgb(219,63,52)" rx="2" ry="2" />
<text  x="312.71" y="1775.5" ></text>
</g>
<g >
<title>locator::abstract_replication_strategy::get_natural_endpoints (50 samples, 0.96%)</title><rect x="1067.0" y="1717" width="11.4" height="15.0" fill="rgb(218,49,31)" rx="2" ry="2" />
<text  x="1070.03" y="1727.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (2 samples, 0.04%)</title><rect x="694.3" y="1877" width="0.4" height="15.0" fill="rgb(235,73,24)" rx="2" ry="2" />
<text  x="697.27" y="1887.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;::operator== (3 samples, 0.06%)</title><rect x="745.5" y="1733" width="0.7" height="15.0" fill="rgb(230,103,17)" rx="2" ry="2" />
<text  x="748.54" y="1743.5" ></text>
</g>
<g >
<title>std::vector&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, std::allocator&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt;::emplace_back&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; (1 samples, 0.02%)</title><rect x="1131.5" y="1509" width="0.2" height="15.0" fill="rgb(207,92,1)" rx="2" ry="2" />
<text  x="1134.47" y="1519.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (1 samples, 0.02%)</title><rect x="106.2" y="1829" width="0.2" height="15.0" fill="rgb(224,131,40)" rx="2" ry="2" />
<text  x="109.20" y="1839.5" ></text>
</g>
<g >
<title>mutation::set_clustered_cell (1 samples, 0.02%)</title><rect x="108.5" y="1813" width="0.2" height="15.0" fill="rgb(253,197,39)" rx="2" ry="2" />
<text  x="111.47" y="1823.5" ></text>
</g>
<g >
<title>reader_permit::consume_resources (1 samples, 0.02%)</title><rect x="524.8" y="1621" width="0.2" height="15.0" fill="rgb(214,100,9)" rx="2" ry="2" />
<text  x="527.79" y="1631.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::then_wrapped_nrvo&lt;void, service::abstract_read_executor::make_data_requests (12 samples, 0.23%)</title><rect x="989.2" y="1717" width="2.7" height="15.0" fill="rgb(208,191,1)" rx="2" ry="2" />
<text  x="992.21" y="1727.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (1 samples, 0.02%)</title><rect x="911.4" y="1717" width="0.2" height="15.0" fill="rgb(217,72,47)" rx="2" ry="2" />
<text  x="914.39" y="1727.5" ></text>
</g>
<g >
<title>bplus::tree&lt;long, intrusive_array&lt;cache_entry&gt;, dht::raw_token_less_comparator, 16ul,  (3 samples, 0.06%)</title><rect x="544.3" y="1701" width="0.7" height="15.0" fill="rgb(242,140,44)" rx="2" ry="2" />
<text  x="547.30" y="1711.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::push_mutation_fragment&lt;mutation_fragment&gt; (4 samples, 0.08%)</title><rect x="195.6" y="1669" width="0.9" height="15.0" fill="rgb(222,26,17)" rx="2" ry="2" />
<text  x="198.59" y="1679.5" ></text>
</g>
<g >
<title>seastar::memory::allocate_aligned (1 samples, 0.02%)</title><rect x="730.3" y="1621" width="0.3" height="15.0" fill="rgb(207,156,15)" rx="2" ry="2" />
<text  x="733.34" y="1631.5" ></text>
</g>
<g >
<title>ser::serializer&lt;partition_key&gt;::write&lt;bytes_ostream&gt; (2 samples, 0.04%)</title><rect x="1131.2" y="1589" width="0.5" height="15.0" fill="rgb(215,9,39)" rx="2" ry="2" />
<text  x="1134.24" y="1599.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (5 samples, 0.10%)</title><rect x="794.5" y="1701" width="1.2" height="15.0" fill="rgb(246,190,52)" rx="2" ry="2" />
<text  x="797.55" y="1711.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.04%)</title><rect x="431.8" y="1717" width="0.4" height="15.0" fill="rgb(238,81,25)" rx="2" ry="2" />
<text  x="434.77" y="1727.5" ></text>
</g>
<g >
<title>reader_permit::used_guard::~used_guard (30 samples, 0.58%)</title><rect x="128.0" y="1877" width="6.8" height="15.0" fill="rgb(230,147,28)" rx="2" ry="2" />
<text  x="130.98" y="1887.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.02%)</title><rect x="131.2" y="1813" width="0.2" height="15.0" fill="rgb(214,61,44)" rx="2" ry="2" />
<text  x="134.15" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt;::~_Variant_storage (1 samples, 0.02%)</title><rect x="905.0" y="1733" width="0.3" height="15.0" fill="rgb(247,119,49)" rx="2" ry="2" />
<text  x="908.04" y="1743.5" ></text>
</g>
<g >
<title>tracing::global_trace_state_ptr::global_trace_state_ptr (1 samples, 0.02%)</title><rect x="1045.3" y="1717" width="0.2" height="15.0" fill="rgb(225,98,42)" rx="2" ry="2" />
<text  x="1048.25" y="1727.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.02%)</title><rect x="59.5" y="1573" width="0.2" height="15.0" fill="rgb(206,197,27)" rx="2" ry="2" />
<text  x="62.46" y="1583.5" ></text>
</g>
<g >
<title>absl::hash_internal::AbslHashValue&lt;absl::hash_internal::HashState&gt; (1 samples, 0.02%)</title><rect x="1055.0" y="1717" width="0.2" height="15.0" fill="rgb(207,59,47)" rx="2" ry="2" />
<text  x="1058.01" y="1727.5" ></text>
</g>
<g >
<title>dht::murmur3_partitioner::get_token (2 samples, 0.04%)</title><rect x="878.9" y="1701" width="0.5" height="15.0" fill="rgb(225,36,49)" rx="2" ry="2" />
<text  x="881.95" y="1711.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;::operator (10 samples, 0.19%)</title><rect x="746.5" y="1749" width="2.2" height="15.0" fill="rgb(253,31,52)" rx="2" ry="2" />
<text  x="749.45" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.5" y="1349" width="0.2" height="15.0" fill="rgb(238,115,32)" rx="2" ry="2" />
<text  x="13.45" y="1359.5" ></text>
</g>
<g >
<title>__strcmp_avx2 (2 samples, 0.04%)</title><rect x="80.6" y="2037" width="0.4" height="15.0" fill="rgb(213,118,43)" rx="2" ry="2" />
<text  x="83.56" y="2047.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;false, false, std::random_access_iterator_tag&gt;::__copy_m&lt;char const*, fmt::v7::detail::buffer_appender&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="18.6" y="1909" width="0.2" height="15.0" fill="rgb(223,7,0)" rx="2" ry="2" />
<text  x="21.62" y="1919.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;auth::resource&gt;::_M_reset (2 samples, 0.04%)</title><rect x="825.4" y="1717" width="0.5" height="15.0" fill="rgb(241,6,20)" rx="2" ry="2" />
<text  x="828.40" y="1727.5" ></text>
</g>
<g >
<title>seastar::file_data_source_impl::get (1 samples, 0.02%)</title><rect x="17.9" y="1509" width="0.3" height="15.0" fill="rgb(235,176,40)" rx="2" ry="2" />
<text  x="20.94" y="1519.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="929.5" y="1749" width="0.3" height="15.0" fill="rgb(209,76,44)" rx="2" ry="2" />
<text  x="932.54" y="1759.5" ></text>
</g>
<g >
<title>utils::phased_barrier::operation::~operation (3 samples, 0.06%)</title><rect x="105.5" y="1909" width="0.7" height="15.0" fill="rgb(226,21,54)" rx="2" ry="2" />
<text  x="108.52" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.5" y="1205" width="0.2" height="15.0" fill="rgb(226,221,1)" rx="2" ry="2" />
<text  x="13.45" y="1215.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::entry::entry (1 samples, 0.02%)</title><rect x="1026.6" y="1637" width="0.3" height="15.0" fill="rgb(249,19,29)" rx="2" ry="2" />
<text  x="1029.65" y="1647.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (2 samples, 0.04%)</title><rect x="1118.3" y="1877" width="0.5" height="15.0" fill="rgb(232,196,22)" rx="2" ry="2" />
<text  x="1121.31" y="1887.5" ></text>
</g>
<g >
<title>dht::murmur3_partitioner::get_token (1 samples, 0.02%)</title><rect x="1119.2" y="1637" width="0.2" height="15.0" fill="rgb(241,165,23)" rx="2" ry="2" />
<text  x="1122.21" y="1647.5" ></text>
</g>
<g >
<title>schema::column_at (3 samples, 0.06%)</title><rect x="249.6" y="1557" width="0.7" height="15.0" fill="rgb(239,75,43)" rx="2" ry="2" />
<text  x="252.58" y="1567.5" ></text>
</g>
<g >
<title>list_reader_selector::~list_reader_selector (2 samples, 0.04%)</title><rect x="591.5" y="1781" width="0.4" height="15.0" fill="rgb(231,98,28)" rx="2" ry="2" />
<text  x="594.49" y="1791.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::need_filtering (28 samples, 0.54%)</title><rect x="941.6" y="1845" width="6.3" height="15.0" fill="rgb(254,14,16)" rx="2" ry="2" />
<text  x="944.57" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::binary_operator const*&gt;  (2 samples, 0.04%)</title><rect x="943.6" y="1765" width="0.5" height="15.0" fill="rgb(229,110,42)" rx="2" ry="2" />
<text  x="946.61" y="1775.5" ></text>
</g>
<g >
<title>std::forward&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; const&amp;&gt; (1 samples, 0.02%)</title><rect x="51.1" y="1621" width="0.2" height="15.0" fill="rgb(236,42,31)" rx="2" ry="2" />
<text  x="54.07" y="1631.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, query::non_null_data_value&gt;, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, query::non_null_data_value&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, std::hash&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_assign&lt;std::_Hashtable&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, query::non_null_data_value&gt;, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, query::non_null_data_value&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, std::hash&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt; const&amp;, std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, query::non_null_data_value&gt;, true&gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="107.1" y="1733" width="0.2" height="15.0" fill="rgb(217,60,32)" rx="2" ry="2" />
<text  x="110.10" y="1743.5" ></text>
</g>
<g >
<title>locator::abstract_replication_strategy::get_natural_endpoints (1 samples, 0.02%)</title><rect x="1132.4" y="1605" width="0.2" height="15.0" fill="rgb(253,105,46)" rx="2" ry="2" />
<text  x="1135.37" y="1615.5" ></text>
</g>
<g >
<title>from_hex (4 samples, 0.08%)</title><rect x="68.3" y="1765" width="0.9" height="15.0" fill="rgb(250,117,11)" rx="2" ry="2" />
<text  x="71.31" y="1775.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::close (80 samples, 1.54%)</title><rect x="570.6" y="1813" width="18.2" height="15.0" fill="rgb(241,13,35)" rx="2" ry="2" />
<text  x="573.62" y="1823.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (12 samples, 0.23%)</title><rect x="1096.5" y="1765" width="2.7" height="15.0" fill="rgb(254,138,10)" rx="2" ry="2" />
<text  x="1099.53" y="1775.5" ></text>
</g>
<g >
<title>mutation_partition::accept (1 samples, 0.02%)</title><rect x="107.6" y="1829" width="0.2" height="15.0" fill="rgb(213,156,38)" rx="2" ry="2" />
<text  x="110.56" y="1839.5" ></text>
</g>
<g >
<title>seastar::future_state_base::future_state_base (1 samples, 0.02%)</title><rect x="822.2" y="1701" width="0.3" height="15.0" fill="rgb(213,12,12)" rx="2" ry="2" />
<text  x="825.23" y="1711.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (2 samples, 0.04%)</title><rect x="213.1" y="1605" width="0.4" height="15.0" fill="rgb(250,152,47)" rx="2" ry="2" />
<text  x="216.06" y="1615.5" ></text>
</g>
<g >
<title>partition_snapshot::~partition_snapshot (4 samples, 0.08%)</title><rect x="584.9" y="1685" width="0.9" height="15.0" fill="rgb(226,27,30)" rx="2" ry="2" />
<text  x="587.91" y="1695.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="654.1" y="1797" width="0.2" height="15.0" fill="rgb(247,127,50)" rx="2" ry="2" />
<text  x="657.11" y="1807.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.06%)</title><rect x="552.7" y="1733" width="0.7" height="15.0" fill="rgb(246,115,38)" rx="2" ry="2" />
<text  x="555.70" y="1743.5" ></text>
</g>
<g >
<title>query::querier_base::close (1 samples, 0.02%)</title><rect x="1165.3" y="1909" width="0.2" height="15.0" fill="rgb(221,29,1)" rx="2" ry="2" />
<text  x="1168.27" y="1919.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mT__199 (1 samples, 0.02%)</title><rect x="32.9" y="1685" width="0.2" height="15.0" fill="rgb(209,43,21)" rx="2" ry="2" />
<text  x="35.91" y="1695.5" ></text>
</g>
<g >
<title>db::system_keyspace_make (6 samples, 0.12%)</title><rect x="108.2" y="1925" width="1.4" height="15.0" fill="rgb(248,110,0)" rx="2" ry="2" />
<text  x="111.24" y="1935.5" ></text>
</g>
<g >
<title>seastar::logger::log&lt;dht::token const&amp;, utils::small_vector&lt;gms::inet_address, 3ul&gt;&amp;, utils::small_vector&lt;gms::inet_address, 3ul&gt;&amp;, db::read_repair_decision&amp;&gt; (1 samples, 0.02%)</title><rect x="1057.0" y="1765" width="0.3" height="15.0" fill="rgb(229,36,47)" rx="2" ry="2" />
<text  x="1060.05" y="1775.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::lsa_partition_reader::maybe_refresh_state (1 samples, 0.02%)</title><rect x="83.1" y="1669" width="0.2" height="15.0" fill="rgb(241,90,45)" rx="2" ry="2" />
<text  x="86.06" y="1679.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (2 samples, 0.04%)</title><rect x="42.4" y="1653" width="0.5" height="15.0" fill="rgb(243,103,41)" rx="2" ry="2" />
<text  x="45.44" y="1663.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (691 samples, 13.29%)</title><rect x="166.1" y="1813" width="156.8" height="15.0" fill="rgb(246,213,3)" rx="2" ry="2" />
<text  x="169.09" y="1823.5" >merging_reader&lt;mutat..</text>
</g>
<g >
<title>remove_or_mark_as_unique_owner (1 samples, 0.02%)</title><rect x="701.3" y="1653" width="0.2" height="15.0" fill="rgb(206,130,15)" rx="2" ry="2" />
<text  x="704.30" y="1663.5" ></text>
</g>
<g >
<title>seastar::api_v3::and_newer::make_file_output_stream (1 samples, 0.02%)</title><rect x="698.8" y="1893" width="0.2" height="15.0" fill="rgb(253,66,16)" rx="2" ry="2" />
<text  x="701.81" y="1903.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.04%)</title><rect x="44.5" y="1717" width="0.4" height="15.0" fill="rgb(249,217,3)" rx="2" ry="2" />
<text  x="47.49" y="1727.5" ></text>
</g>
<g >
<title>schema_registry_entry::get_schema (1 samples, 0.02%)</title><rect x="109.1" y="1861" width="0.3" height="15.0" fill="rgb(208,74,25)" rx="2" ry="2" />
<text  x="112.15" y="1871.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (1 samples, 0.02%)</title><rect x="710.1" y="1861" width="0.3" height="15.0" fill="rgb(245,50,13)" rx="2" ry="2" />
<text  x="713.15" y="1871.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_last_fragment_kind, 4ul&gt;::~small_vector (1 samples, 0.02%)</title><rect x="472.8" y="1733" width="0.3" height="15.0" fill="rgb(238,223,41)" rx="2" ry="2" />
<text  x="475.83" y="1743.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;range_tombstone*&gt;::allocate (1 samples, 0.02%)</title><rect x="563.6" y="1797" width="0.2" height="15.0" fill="rgb(241,61,29)" rx="2" ry="2" />
<text  x="566.59" y="1807.5" ></text>
</g>
<g >
<title>seastar::deferred_action&lt;table::query (1 samples, 0.02%)</title><rect x="134.8" y="1877" width="0.2" height="15.0" fill="rgb(217,216,45)" rx="2" ry="2" />
<text  x="137.78" y="1887.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="18.2" y="1941" width="0.2" height="15.0" fill="rgb(235,92,38)" rx="2" ry="2" />
<text  x="21.17" y="1951.5" ></text>
</g>
<g >
<title>operator delete (10 samples, 0.19%)</title><rect x="149.3" y="1861" width="2.3" height="15.0" fill="rgb(250,177,28)" rx="2" ry="2" />
<text  x="152.30" y="1871.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;service::digest_read_result&gt;::set_value&lt;service::digest_read_result&gt; (3 samples, 0.06%)</title><rect x="722.9" y="1845" width="0.6" height="15.0" fill="rgb(225,191,16)" rx="2" ry="2" />
<text  x="725.86" y="1855.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (2 samples, 0.04%)</title><rect x="497.8" y="1637" width="0.4" height="15.0" fill="rgb(250,117,11)" rx="2" ry="2" />
<text  x="500.79" y="1647.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (1 samples, 0.02%)</title><rect x="439.9" y="1829" width="0.3" height="15.0" fill="rgb(236,68,33)" rx="2" ry="2" />
<text  x="442.94" y="1839.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="49.5" y="1669" width="0.2" height="15.0" fill="rgb(210,130,22)" rx="2" ry="2" />
<text  x="52.48" y="1679.5" ></text>
</g>
<g >
<title>reader_permit::impl::~impl (7 samples, 0.13%)</title><rect x="126.2" y="1877" width="1.6" height="15.0" fill="rgb(215,105,7)" rx="2" ry="2" />
<text  x="129.16" y="1887.5" ></text>
</g>
<g >
<title>std::__optional_hash_call_base&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, true&gt;::operator (2 samples, 0.04%)</title><rect x="828.1" y="1717" width="0.5" height="15.0" fill="rgb(227,127,53)" rx="2" ry="2" />
<text  x="831.13" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::at (7 samples, 0.13%)</title><rect x="774.6" y="1781" width="1.6" height="15.0" fill="rgb(217,181,15)" rx="2" ry="2" />
<text  x="777.58" y="1791.5" ></text>
</g>
<g >
<title>mutation_fragment::destroy_data (31 samples, 0.60%)</title><rect x="419.3" y="1685" width="7.0" height="15.0" fill="rgb(225,46,9)" rx="2" ry="2" />
<text  x="422.29" y="1695.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt; (1 samples, 0.02%)</title><rect x="47.7" y="1637" width="0.2" height="15.0" fill="rgb(238,215,29)" rx="2" ry="2" />
<text  x="50.66" y="1647.5" ></text>
</g>
<g >
<title>service::abstract_write_response_handler::delay&lt;service::abstract_write_response_handler::signal (1 samples, 0.02%)</title><rect x="729.9" y="1877" width="0.2" height="15.0" fill="rgb(219,162,13)" rx="2" ry="2" />
<text  x="732.89" y="1887.5" ></text>
</g>
<g >
<title>cql3::statements::raw::modification_statement::modification_statement (1 samples, 0.02%)</title><rect x="61.3" y="1749" width="0.2" height="15.0" fill="rgb(238,97,35)" rx="2" ry="2" />
<text  x="64.27" y="1759.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_M_reset (1 samples, 0.02%)</title><rect x="1164.8" y="1861" width="0.2" height="15.0" fill="rgb(253,108,9)" rx="2" ry="2" />
<text  x="1167.82" y="1871.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::set_callback (1 samples, 0.02%)</title><rect x="871.2" y="1909" width="0.3" height="15.0" fill="rgb(236,4,10)" rx="2" ry="2" />
<text  x="874.23" y="1919.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::result_memory_accounter (3 samples, 0.06%)</title><rect x="621.2" y="1845" width="0.7" height="15.0" fill="rgb(215,137,22)" rx="2" ry="2" />
<text  x="624.21" y="1855.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.04%)</title><rect x="44.0" y="1653" width="0.5" height="15.0" fill="rgb(243,181,5)" rx="2" ry="2" />
<text  x="47.03" y="1663.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;sstables::mx::mx_sstable_mutation_reader::fill_buffer (1 samples, 0.02%)</title><rect x="17.9" y="1701" width="0.3" height="15.0" fill="rgb(252,154,37)" rx="2" ry="2" />
<text  x="20.94" y="1711.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::clone&lt;row::row (2 samples, 0.04%)</title><rect x="82.6" y="1621" width="0.5" height="15.0" fill="rgb(221,0,43)" rx="2" ry="2" />
<text  x="85.60" y="1631.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;boost::range_detail::integer_iterator&lt;unsigned int&gt;, std::function&lt;seastar::future&lt;void&gt;  (1 samples, 0.02%)</title><rect x="17.5" y="1925" width="0.2" height="15.0" fill="rgb(217,52,37)" rx="2" ry="2" />
<text  x="20.49" y="1935.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (5 samples, 0.10%)</title><rect x="279.1" y="1589" width="1.1" height="15.0" fill="rgb(227,40,50)" rx="2" ry="2" />
<text  x="282.08" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (1 samples, 0.02%)</title><rect x="11.4" y="1525" width="0.2" height="15.0" fill="rgb(217,23,8)" rx="2" ry="2" />
<text  x="14.36" y="1535.5" ></text>
</g>
<g >
<title>seastar::io_queue::queue_request (1 samples, 0.02%)</title><rect x="17.9" y="1301" width="0.3" height="15.0" fill="rgb(235,68,18)" rx="2" ry="2" />
<text  x="20.94" y="1311.5" ></text>
</g>
<g >
<title>visit&lt;(anonymous namespace)::serialized_size_visitor&gt; (1 samples, 0.02%)</title><rect x="71.9" y="1733" width="0.3" height="15.0" fill="rgb(235,81,31)" rx="2" ry="2" />
<text  x="74.94" y="1743.5" ></text>
</g>
<g >
<title>schema::rebuild (1 samples, 0.02%)</title><rect x="17.3" y="1605" width="0.2" height="15.0" fill="rgb(221,137,19)" rx="2" ry="2" />
<text  x="20.26" y="1615.5" ></text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_slice_or_needs_filtering (6 samples, 0.12%)</title><rect x="659.1" y="1861" width="1.4" height="15.0" fill="rgb(251,113,6)" rx="2" ry="2" />
<text  x="662.10" y="1871.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (1 samples, 0.02%)</title><rect x="805.2" y="1605" width="0.2" height="15.0" fill="rgb(223,191,4)" rx="2" ry="2" />
<text  x="808.21" y="1615.5" ></text>
</g>
<g >
<title>double_decker&lt;long, cache_entry, dht::raw_token_less_comparator, dht::ring_position_comparator, 16,  (2 samples, 0.04%)</title><rect x="16.1" y="1989" width="0.5" height="15.0" fill="rgb(244,85,14)" rx="2" ry="2" />
<text  x="19.13" y="1999.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (1 samples, 0.02%)</title><rect x="1165.3" y="1765" width="0.2" height="15.0" fill="rgb(240,108,41)" rx="2" ry="2" />
<text  x="1168.27" y="1775.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::make_ready&lt; (1 samples, 0.02%)</title><rect x="873.0" y="1925" width="0.3" height="15.0" fill="rgb(217,86,2)" rx="2" ry="2" />
<text  x="876.05" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (7 samples, 0.13%)</title><rect x="744.6" y="1749" width="1.6" height="15.0" fill="rgb(249,86,35)" rx="2" ry="2" />
<text  x="747.64" y="1759.5" ></text>
</g>
<g >
<title>cql3::restrictions::partition_key_restrictions::needs_filtering (18 samples, 0.35%)</title><rect x="658.6" y="1877" width="4.1" height="15.0" fill="rgb(209,139,36)" rx="2" ry="2" />
<text  x="661.65" y="1887.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::get_value (1 samples, 0.02%)</title><rect x="652.7" y="1909" width="0.3" height="15.0" fill="rgb(214,152,6)" rx="2" ry="2" />
<text  x="655.75" y="1919.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;,  (25 samples, 0.48%)</title><rect x="743.0" y="1829" width="5.7" height="15.0" fill="rgb(220,102,18)" rx="2" ry="2" />
<text  x="746.05" y="1839.5" ></text>
</g>
<g >
<title>locator::simple_strategy::calculate_natural_endpoints (1 samples, 0.02%)</title><rect x="109.6" y="1909" width="0.2" height="15.0" fill="rgb(231,67,25)" rx="2" ry="2" />
<text  x="112.60" y="1919.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (3 samples, 0.06%)</title><rect x="1037.8" y="1701" width="0.6" height="15.0" fill="rgb(214,82,33)" rx="2" ry="2" />
<text  x="1040.76" y="1711.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="531.4" y="1701" width="0.2" height="15.0" fill="rgb(220,25,41)" rx="2" ry="2" />
<text  x="534.37" y="1711.5" ></text>
</g>
<g >
<title>bplus::node&lt;long, intrusive_array&lt;cache_entry&gt;, dht::raw_token_less_comparator, 16ul,  (1 samples, 0.02%)</title><rect x="16.1" y="1941" width="0.3" height="15.0" fill="rgb(212,216,27)" rx="2" ry="2" />
<text  x="19.13" y="1951.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; const, column_definition const*&gt;, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; const, column_definition const*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;, std::hash&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (2 samples, 0.04%)</title><rect x="74.7" y="1829" width="0.4" height="15.0" fill="rgb(228,47,32)" rx="2" ry="2" />
<text  x="77.66" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.06%)</title><rect x="10.2" y="2021" width="0.7" height="15.0" fill="rgb(218,68,21)" rx="2" ry="2" />
<text  x="13.23" y="2031.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::read_next (300 samples, 5.77%)</title><rect x="206.7" y="1669" width="68.1" height="15.0" fill="rgb(209,150,3)" rx="2" ry="2" />
<text  x="209.70" y="1679.5" >partiti..</text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.5" y="1669" width="0.2" height="15.0" fill="rgb(231,177,41)" rx="2" ry="2" />
<text  x="13.45" y="1679.5" ></text>
</g>
<g >
<title>visit&lt;(anonymous namespace)::native_value_clone_visitor&gt; (1 samples, 0.02%)</title><rect x="71.7" y="1717" width="0.2" height="15.0" fill="rgb(216,66,27)" rx="2" ry="2" />
<text  x="74.71" y="1727.5" ></text>
</g>
<g >
<title>make_random_seq (1 samples, 0.02%)</title><rect x="737.4" y="1893" width="0.2" height="15.0" fill="rgb(244,206,50)" rx="2" ry="2" />
<text  x="740.38" y="1903.5" ></text>
</g>
<g >
<title>visit&lt;(anonymous namespace)::validate_visitor&lt;managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="905.5" y="1733" width="0.2" height="15.0" fill="rgb(211,24,20)" rx="2" ry="2" />
<text  x="908.49" y="1743.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;column_definition const*, std::pair&lt;column_definition const* const, seastar::shared_ptr&lt;cql3::restrictions::single_column_restriction&gt; &gt;, std::_Select1st&lt;std::pair&lt;column_definition const* const, seastar::shared_ptr&lt;cql3::restrictions::single_column_restriction&gt; &gt; &gt;, cql3::restrictions::single_column_restrictions::column_definition_comparator, std::allocator&lt;std::pair&lt;column_definition const* const, seastar::shared_ptr&lt;cql3::restrictions::single_column_restriction&gt; &gt; &gt; &gt;::~_Rb_tree (2 samples, 0.04%)</title><rect x="654.1" y="1829" width="0.5" height="15.0" fill="rgb(222,81,11)" rx="2" ry="2" />
<text  x="657.11" y="1839.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (18 samples, 0.35%)</title><rect x="1011.9" y="1653" width="4.1" height="15.0" fill="rgb(207,56,46)" rx="2" ry="2" />
<text  x="1014.90" y="1663.5" ></text>
</g>
<g >
<title>cryptopp_hasher&lt;md5_hasher, 16ul&gt;::calculate (1 samples, 0.02%)</title><rect x="10.5" y="197" width="0.2" height="15.0" fill="rgb(209,19,18)" rx="2" ry="2" />
<text  x="13.45" y="207.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::EqualElement&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (1 samples, 0.02%)</title><rect x="836.7" y="1717" width="0.3" height="15.0" fill="rgb(236,149,1)" rx="2" ry="2" />
<text  x="839.75" y="1727.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (2 samples, 0.04%)</title><rect x="818.4" y="1669" width="0.4" height="15.0" fill="rgb(248,14,39)" rx="2" ry="2" />
<text  x="821.37" y="1679.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="1151.2" y="1861" width="0.2" height="15.0" fill="rgb(224,2,15)" rx="2" ry="2" />
<text  x="1154.20" y="1871.5" ></text>
</g>
<g >
<title>service::abstract_read_resolver::abstract_read_resolver (15 samples, 0.29%)</title><rect x="983.5" y="1717" width="3.4" height="15.0" fill="rgb(252,122,45)" rx="2" ry="2" />
<text  x="986.54" y="1727.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (5 samples, 0.10%)</title><rect x="417.9" y="1637" width="1.2" height="15.0" fill="rgb(249,80,50)" rx="2" ry="2" />
<text  x="420.93" y="1647.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.02%)</title><rect x="360.5" y="1605" width="0.3" height="15.0" fill="rgb(252,163,47)" rx="2" ry="2" />
<text  x="363.53" y="1615.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::key_is_in_relation (11 samples, 0.21%)</title><rect x="663.4" y="1877" width="2.5" height="15.0" fill="rgb(230,46,2)" rx="2" ry="2" />
<text  x="666.41" y="1887.5" ></text>
</g>
<g >
<title>to_hex (4 samples, 0.08%)</title><rect x="79.4" y="1941" width="0.9" height="15.0" fill="rgb(224,115,5)" rx="2" ry="2" />
<text  x="82.43" y="1951.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::response_count (1 samples, 0.02%)</title><rect x="724.4" y="1845" width="0.3" height="15.0" fill="rgb(229,189,18)" rx="2" ry="2" />
<text  x="727.44" y="1855.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::~vector (2 samples, 0.04%)</title><rect x="1044.8" y="1717" width="0.5" height="15.0" fill="rgb(238,66,17)" rx="2" ry="2" />
<text  x="1047.80" y="1727.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="579.7" y="1701" width="0.2" height="15.0" fill="rgb(231,203,33)" rx="2" ry="2" />
<text  x="582.69" y="1711.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (8 samples, 0.15%)</title><rect x="1084.7" y="1797" width="1.8" height="15.0" fill="rgb(217,143,53)" rx="2" ry="2" />
<text  x="1087.73" y="1807.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="206.3" y="1653" width="0.2" height="15.0" fill="rgb(205,121,41)" rx="2" ry="2" />
<text  x="209.25" y="1663.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::~abstract_read_executor (10 samples, 0.19%)</title><rect x="1162.3" y="1861" width="2.3" height="15.0" fill="rgb(239,99,18)" rx="2" ry="2" />
<text  x="1165.32" y="1871.5" ></text>
</g>
<g >
<title>std::default_delete&lt;cql3::query_options&gt;::operator (12 samples, 0.23%)</title><rect x="685.9" y="1893" width="2.7" height="15.0" fill="rgb(251,40,15)" rx="2" ry="2" />
<text  x="688.87" y="1903.5" ></text>
</g>
<g >
<title>mutation_partition_view::do_accept&lt;partition_builder&gt; (16 samples, 0.31%)</title><rect x="1121.0" y="1669" width="3.7" height="15.0" fill="rgb(220,117,34)" rx="2" ry="2" />
<text  x="1124.03" y="1679.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_live_endpoints (1 samples, 0.02%)</title><rect x="1065.7" y="1765" width="0.2" height="15.0" fill="rgb(224,164,1)" rx="2" ry="2" />
<text  x="1068.67" y="1775.5" ></text>
</g>
<g >
<title>db::schema_tables::create_table_from_mutations (1 samples, 0.02%)</title><rect x="106.4" y="1845" width="0.3" height="15.0" fill="rgb(231,201,4)" rx="2" ry="2" />
<text  x="109.42" y="1855.5" ></text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::operator (6 samples, 0.12%)</title><rect x="769.6" y="1813" width="1.4" height="15.0" fill="rgb(206,211,7)" rx="2" ry="2" />
<text  x="772.59" y="1823.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::remove_if&lt;row::compact_and_expire (59 samples, 1.13%)</title><rect x="399.6" y="1605" width="13.3" height="15.0" fill="rgb(225,225,37)" rx="2" ry="2" />
<text  x="402.55" y="1615.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::do_transform (1 samples, 0.02%)</title><rect x="11.4" y="1317" width="0.2" height="15.0" fill="rgb(209,185,3)" rx="2" ry="2" />
<text  x="14.36" y="1327.5" ></text>
</g>
<g >
<title>write_cell&lt;ser::qr_clustered_row__cells__cells&lt;bytes_ostream&gt; &gt; (107 samples, 2.06%)</title><rect x="367.8" y="1605" width="24.3" height="15.0" fill="rgb(224,223,40)" rx="2" ry="2" />
<text  x="370.79" y="1615.5" >w..</text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::vector (10 samples, 0.19%)</title><rect x="153.4" y="1845" width="2.3" height="15.0" fill="rgb(245,155,2)" rx="2" ry="2" />
<text  x="156.39" y="1855.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (3 samples, 0.06%)</title><rect x="645.3" y="1893" width="0.6" height="15.0" fill="rgb(249,225,14)" rx="2" ry="2" />
<text  x="648.26" y="1903.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="589.9" y="1749" width="0.2" height="15.0" fill="rgb(254,196,40)" rx="2" ry="2" />
<text  x="592.90" y="1759.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_M_reset (2 samples, 0.04%)</title><rect x="823.8" y="1685" width="0.5" height="15.0" fill="rgb(242,101,39)" rx="2" ry="2" />
<text  x="826.82" y="1695.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (1 samples, 0.02%)</title><rect x="415.0" y="1605" width="0.2" height="15.0" fill="rgb(246,179,45)" rx="2" ry="2" />
<text  x="417.98" y="1615.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (47 samples, 0.90%)</title><rect x="226.0" y="1525" width="10.7" height="15.0" fill="rgb(216,37,14)" rx="2" ry="2" />
<text  x="228.99" y="1535.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::clear (2 samples, 0.04%)</title><rect x="188.6" y="1685" width="0.4" height="15.0" fill="rgb(235,203,42)" rx="2" ry="2" />
<text  x="191.55" y="1695.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::clear (3 samples, 0.06%)</title><rect x="462.9" y="1717" width="0.6" height="15.0" fill="rgb(248,43,54)" rx="2" ry="2" />
<text  x="465.85" y="1727.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::statements::attach_service_level_statement, std::default_delete&lt;cql3::statements::attach_service_level_statement&gt;, true, true&gt;::__uniq_ptr_data (1 samples, 0.02%)</title><rect x="62.4" y="1797" width="0.2" height="15.0" fill="rgb(240,40,51)" rx="2" ry="2" />
<text  x="65.41" y="1807.5" ></text>
</g>
<g >
<title>absl::hash_internal::HashState::combine_contiguous (1 samples, 0.02%)</title><rect x="842.0" y="1701" width="0.2" height="15.0" fill="rgb(254,213,9)" rx="2" ry="2" />
<text  x="844.97" y="1711.5" ></text>
</g>
<g >
<title>query_result_builder::consume (2 samples, 0.04%)</title><rect x="699.5" y="1717" width="0.4" height="15.0" fill="rgb(254,95,46)" rx="2" ry="2" />
<text  x="702.49" y="1727.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.06%)</title><rect x="550.4" y="1669" width="0.7" height="15.0" fill="rgb(252,56,19)" rx="2" ry="2" />
<text  x="553.43" y="1679.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::do_refresh_state (18 samples, 0.35%)</title><rect x="260.2" y="1589" width="4.1" height="15.0" fill="rgb(237,142,24)" rx="2" ry="2" />
<text  x="263.25" y="1599.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (1 samples, 0.02%)</title><rect x="706.5" y="1861" width="0.2" height="15.0" fill="rgb(233,201,7)" rx="2" ry="2" />
<text  x="709.52" y="1871.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (11 samples, 0.21%)</title><rect x="1175.7" y="2037" width="2.5" height="15.0" fill="rgb(228,178,8)" rx="2" ry="2" />
<text  x="1178.71" y="2047.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="677.0" y="1845" width="0.3" height="15.0" fill="rgb(231,204,20)" rx="2" ry="2" />
<text  x="680.03" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;7ul, cql3::expr::untyped_constant&gt; (1 samples, 0.02%)</title><rect x="52.7" y="1477" width="0.2" height="15.0" fill="rgb(211,105,10)" rx="2" ry="2" />
<text  x="55.65" y="1487.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;bool, bool  (1 samples, 0.02%)</title><rect x="1133.5" y="1621" width="0.2" height="15.0" fill="rgb(227,28,42)" rx="2" ry="2" />
<text  x="1136.51" y="1631.5" ></text>
</g>
<g >
<title>abstract_type::compare (1 samples, 0.02%)</title><rect x="106.2" y="1765" width="0.2" height="15.0" fill="rgb(225,35,46)" rx="2" ry="2" />
<text  x="109.20" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;9ul, cql3::expr::untyped_constant&gt; (1 samples, 0.02%)</title><rect x="52.7" y="1509" width="0.2" height="15.0" fill="rgb(235,167,9)" rx="2" ry="2" />
<text  x="55.65" y="1519.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;::unique_ptr (1 samples, 0.02%)</title><rect x="49.0" y="1557" width="0.3" height="15.0" fill="rgb(234,170,14)" rx="2" ry="2" />
<text  x="52.02" y="1567.5" ></text>
</g>
<g >
<title>seastar::gate::leave (3 samples, 0.06%)</title><rect x="126.8" y="1829" width="0.7" height="15.0" fill="rgb(213,201,35)" rx="2" ry="2" />
<text  x="129.84" y="1839.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.08%)</title><rect x="593.8" y="1765" width="0.9" height="15.0" fill="rgb(241,123,50)" rx="2" ry="2" />
<text  x="596.76" y="1775.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (1 samples, 0.02%)</title><rect x="79.9" y="1877" width="0.2" height="15.0" fill="rgb(209,126,8)" rx="2" ry="2" />
<text  x="82.88" y="1887.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::revoke_statement, std::default_delete&lt;cql3::statements::revoke_statement&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="65.1" y="1797" width="0.3" height="15.0" fill="rgb(250,149,11)" rx="2" ry="2" />
<text  x="68.13" y="1807.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.06%)</title><rect x="602.4" y="1829" width="0.7" height="15.0" fill="rgb(214,77,13)" rx="2" ry="2" />
<text  x="605.38" y="1839.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;bytes_ostream::chunk, std::default_delete&lt;bytes_ostream::chunk&gt; &gt;::reset (1 samples, 0.02%)</title><rect x="616.2" y="1797" width="0.2" height="15.0" fill="rgb(208,144,21)" rx="2" ry="2" />
<text  x="619.22" y="1807.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (4 samples, 0.08%)</title><rect x="746.7" y="1717" width="0.9" height="15.0" fill="rgb(243,148,20)" rx="2" ry="2" />
<text  x="749.68" y="1727.5" ></text>
</g>
<g >
<title>service::storage_proxy::do_query (570 samples, 10.96%)</title><rect x="957.2" y="1813" width="129.3" height="15.0" fill="rgb(238,76,11)" rx="2" ry="2" />
<text  x="960.22" y="1823.5" >service::storage..</text>
</g>
<g >
<title>operator new (2 samples, 0.04%)</title><rect x="783.7" y="1797" width="0.4" height="15.0" fill="rgb(219,141,42)" rx="2" ry="2" />
<text  x="786.66" y="1807.5" ></text>
</g>
<g >
<title>compound_wrapper&lt;clustering_key_prefix, clustering_key_prefix_view&gt;::explode (1 samples, 0.02%)</title><rect x="1131.0" y="1541" width="0.2" height="15.0" fill="rgb(213,217,45)" rx="2" ry="2" />
<text  x="1134.01" y="1551.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;mutation_fragment_merger&lt;mutation_reader_merger&gt;::operator (15 samples, 0.29%)</title><rect x="306.3" y="1765" width="3.4" height="15.0" fill="rgb(237,197,23)" rx="2" ry="2" />
<text  x="309.30" y="1775.5" ></text>
</g>
<g >
<title>seastar::repeat&lt;flat_mutation_reader::impl::consume_pausable&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (6 samples, 0.12%)</title><rect x="699.3" y="1797" width="1.3" height="15.0" fill="rgb(240,205,36)" rx="2" ry="2" />
<text  x="702.26" y="1807.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::clear (1 samples, 0.02%)</title><rect x="694.0" y="1909" width="0.3" height="15.0" fill="rgb(239,79,22)" rx="2" ry="2" />
<text  x="697.04" y="1919.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (1 samples, 0.02%)</title><rect x="152.9" y="1861" width="0.3" height="15.0" fill="rgb(244,80,46)" rx="2" ry="2" />
<text  x="155.93" y="1871.5" ></text>
</g>
<g >
<title>__call_tls_dtors (1 samples, 0.02%)</title><rect x="12.3" y="2037" width="0.2" height="15.0" fill="rgb(222,79,54)" rx="2" ry="2" />
<text  x="15.27" y="2047.5" ></text>
</g>
<g >
<title>__dynamic_cast (1 samples, 0.02%)</title><rect x="15.9" y="2005" width="0.2" height="15.0" fill="rgb(216,217,48)" rx="2" ry="2" />
<text  x="18.90" y="2015.5" ></text>
</g>
<g >
<title>seastar::future_state_base::any::operator= (1 samples, 0.02%)</title><rect x="871.9" y="1909" width="0.2" height="15.0" fill="rgb(230,199,40)" rx="2" ry="2" />
<text  x="874.92" y="1919.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (1 samples, 0.02%)</title><rect x="361.0" y="1589" width="0.2" height="15.0" fill="rgb(216,218,24)" rx="2" ry="2" />
<text  x="363.98" y="1599.5" ></text>
</g>
<g >
<title>reader_permit::impl::impl (3 samples, 0.06%)</title><rect x="1030.3" y="1637" width="0.7" height="15.0" fill="rgb(223,200,32)" rx="2" ry="2" />
<text  x="1033.28" y="1647.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.02%)</title><rect x="11.8" y="1909" width="0.2" height="15.0" fill="rgb(207,138,38)" rx="2" ry="2" />
<text  x="14.82" y="1919.5" ></text>
</g>
<g >
<title>mutation::data::data (2 samples, 0.04%)</title><rect x="878.9" y="1733" width="0.5" height="15.0" fill="rgb(229,169,25)" rx="2" ry="2" />
<text  x="881.95" y="1743.5" ></text>
</g>
<g >
<title>dht::ring_position::as_decorated_key (3 samples, 0.06%)</title><rect x="481.2" y="1749" width="0.7" height="15.0" fill="rgb(220,31,25)" rx="2" ry="2" />
<text  x="484.23" y="1759.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::take_value (1 samples, 0.02%)</title><rect x="189.0" y="1685" width="0.2" height="15.0" fill="rgb(205,124,5)" rx="2" ry="2" />
<text  x="192.01" y="1695.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::fetch (1 samples, 0.02%)</title><rect x="874.0" y="1893" width="0.2" height="15.0" fill="rgb(208,26,29)" rx="2" ry="2" />
<text  x="876.96" y="1903.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="530.0" y="1685" width="0.2" height="15.0" fill="rgb(228,155,36)" rx="2" ry="2" />
<text  x="533.01" y="1695.5" ></text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::find (1 samples, 0.02%)</title><rect x="952.2" y="1733" width="0.3" height="15.0" fill="rgb(213,63,39)" rx="2" ry="2" />
<text  x="955.23" y="1743.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="116.2" y="1893" width="0.2" height="15.0" fill="rgb(211,178,12)" rx="2" ry="2" />
<text  x="119.18" y="1903.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::construct&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (5 samples, 0.10%)</title><rect x="22.5" y="1685" width="1.1" height="15.0" fill="rgb(249,195,47)" rx="2" ry="2" />
<text  x="25.48" y="1695.5" ></text>
</g>
<g >
<title>sstring_hash::operator (1 samples, 0.02%)</title><rect x="842.0" y="1733" width="0.2" height="15.0" fill="rgb(235,118,23)" rx="2" ry="2" />
<text  x="844.97" y="1743.5" ></text>
</g>
<g >
<title>std::default_delete&lt;mutation_fragment::data&gt;::operator (3 samples, 0.06%)</title><rect x="426.3" y="1685" width="0.7" height="15.0" fill="rgb(251,116,43)" rx="2" ry="2" />
<text  x="429.32" y="1695.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="878.9" y="1669" width="0.3" height="15.0" fill="rgb(206,154,24)" rx="2" ry="2" />
<text  x="881.95" y="1679.5" ></text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_slice_or_needs_filtering (2 samples, 0.04%)</title><rect x="944.1" y="1749" width="0.4" height="15.0" fill="rgb(247,47,50)" rx="2" ry="2" />
<text  x="947.06" y="1759.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::inet_address (1 samples, 0.02%)</title><rect x="1057.3" y="1765" width="0.2" height="15.0" fill="rgb(230,34,3)" rx="2" ry="2" />
<text  x="1060.28" y="1775.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::mutation_fragment_merger (3 samples, 0.06%)</title><rect x="470.8" y="1717" width="0.7" height="15.0" fill="rgb(214,123,7)" rx="2" ry="2" />
<text  x="473.79" y="1727.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (34 samples, 0.65%)</title><rect x="1126.5" y="1797" width="7.7" height="15.0" fill="rgb(239,50,37)" rx="2" ry="2" />
<text  x="1129.47" y="1807.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::~small_vector (1 samples, 0.02%)</title><rect x="594.7" y="1781" width="0.2" height="15.0" fill="rgb(219,170,41)" rx="2" ry="2" />
<text  x="597.67" y="1791.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getText[abi:cxx11] (1 samples, 0.02%)</title><rect x="58.3" y="1733" width="0.3" height="15.0" fill="rgb(207,157,11)" rx="2" ry="2" />
<text  x="61.33" y="1743.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;nonwrapping_interval&lt;dht::ring_position&gt; const*, nonwrapping_interval&lt;dht::ring_position&gt;*&gt; (3 samples, 0.06%)</title><rect x="1042.5" y="1669" width="0.7" height="15.0" fill="rgb(220,123,8)" rx="2" ry="2" />
<text  x="1045.53" y="1679.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (1 samples, 0.02%)</title><rect x="1112.4" y="1797" width="0.2" height="15.0" fill="rgb(217,92,3)" rx="2" ry="2" />
<text  x="1115.41" y="1807.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reserve&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::fill_buffer (4 samples, 0.08%)</title><rect x="82.4" y="1765" width="0.9" height="15.0" fill="rgb(213,202,28)" rx="2" ry="2" />
<text  x="85.37" y="1775.5" ></text>
</g>
<g >
<title>cql3::expr::constant::make_bool (4 samples, 0.08%)</title><rect x="71.3" y="1749" width="0.9" height="15.0" fill="rgb(216,196,24)" rx="2" ry="2" />
<text  x="74.26" y="1759.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.08%)</title><rect x="865.1" y="1861" width="0.9" height="15.0" fill="rgb(253,138,25)" rx="2" ry="2" />
<text  x="868.11" y="1871.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (1 samples, 0.02%)</title><rect x="54.9" y="1653" width="0.2" height="15.0" fill="rgb(232,9,3)" rx="2" ry="2" />
<text  x="57.92" y="1663.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (267 samples, 5.13%)</title><rect x="18.8" y="1941" width="60.6" height="15.0" fill="rgb(232,184,30)" rx="2" ry="2" />
<text  x="21.85" y="1951.5" >single..</text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_esft&lt;partition_snapshot&gt;::dispose (4 samples, 0.08%)</title><rect x="584.9" y="1701" width="0.9" height="15.0" fill="rgb(232,30,9)" rx="2" ry="2" />
<text  x="587.91" y="1711.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::vector (19 samples, 0.37%)</title><rect x="1095.6" y="1813" width="4.3" height="15.0" fill="rgb(247,34,1)" rx="2" ry="2" />
<text  x="1098.62" y="1823.5" ></text>
</g>
<g >
<title>auth::get_permissions (117 samples, 2.25%)</title><rect x="797.7" y="1733" width="26.6" height="15.0" fill="rgb(213,59,33)" rx="2" ry="2" />
<text  x="800.73" y="1743.5" >a..</text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::iterator::operator* (4 samples, 0.08%)</title><rect x="781.2" y="1797" width="0.9" height="15.0" fill="rgb(206,150,39)" rx="2" ry="2" />
<text  x="784.16" y="1807.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::emplace_back&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; const&amp;&gt; (2 samples, 0.04%)</title><rect x="787.5" y="1781" width="0.5" height="15.0" fill="rgb(209,5,21)" rx="2" ry="2" />
<text  x="790.52" y="1791.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (62 samples, 1.19%)</title><rect x="22.0" y="1765" width="14.1" height="15.0" fill="rgb(246,188,7)" rx="2" ry="2" />
<text  x="25.02" y="1775.5" ></text>
</g>
<g >
<title>seastar::future&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (1 samples, 0.02%)</title><rect x="77.8" y="1701" width="0.3" height="15.0" fill="rgb(219,199,27)" rx="2" ry="2" />
<text  x="80.84" y="1711.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_insert_unique_node (12 samples, 0.23%)</title><rect x="1147.1" y="1877" width="2.7" height="15.0" fill="rgb(215,20,17)" rx="2" ry="2" />
<text  x="1150.12" y="1887.5" ></text>
</g>
<g >
<title>frozen_schema::unfreeze (3 samples, 0.06%)</title><rect x="106.7" y="1781" width="0.6" height="15.0" fill="rgb(249,93,41)" rx="2" ry="2" />
<text  x="109.65" y="1791.5" ></text>
</g>
<g >
<title>database::get_unlimited_query_max_result_size (10 samples, 0.19%)</title><rect x="1114.4" y="1829" width="2.3" height="15.0" fill="rgb(209,54,27)" rx="2" ry="2" />
<text  x="1117.45" y="1839.5" ></text>
</g>
<g >
<title>abstract_type::is_collection (1 samples, 0.02%)</title><rect x="67.4" y="1845" width="0.2" height="15.0" fill="rgb(227,137,13)" rx="2" ry="2" />
<text  x="70.40" y="1855.5" ></text>
</g>
<g >
<title>mutation_querier::prepare_writers (3 samples, 0.06%)</title><rect x="361.0" y="1605" width="0.7" height="15.0" fill="rgb(239,168,19)" rx="2" ry="2" />
<text  x="363.98" y="1615.5" ></text>
</g>
<g >
<title>cql3::expr::expression::operator= (1 samples, 0.02%)</title><rect x="59.7" y="1733" width="0.2" height="15.0" fill="rgb(216,20,4)" rx="2" ry="2" />
<text  x="62.69" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::at (11 samples, 0.21%)</title><rect x="1050.5" y="1749" width="2.5" height="15.0" fill="rgb(219,23,53)" rx="2" ry="2" />
<text  x="1053.47" y="1759.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="830.8" y="1781" width="0.3" height="15.0" fill="rgb(242,114,1)" rx="2" ry="2" />
<text  x="833.85" y="1791.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (3 samples, 0.06%)</title><rect x="100.3" y="1877" width="0.7" height="15.0" fill="rgb(247,63,53)" rx="2" ry="2" />
<text  x="103.30" y="1887.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::~CqlParser (1 samples, 0.02%)</title><rect x="66.7" y="1861" width="0.2" height="15.0" fill="rgb(241,101,2)" rx="2" ry="2" />
<text  x="69.72" y="1871.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;*, std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt; &gt;::base (1 samples, 0.02%)</title><rect x="48.3" y="1685" width="0.3" height="15.0" fill="rgb(254,124,36)" rx="2" ry="2" />
<text  x="51.34" y="1695.5" ></text>
</g>
<g >
<title>sstables::mc::writer::write_row_body (1 samples, 0.02%)</title><rect x="83.5" y="1781" width="0.2" height="15.0" fill="rgb(246,27,36)" rx="2" ry="2" />
<text  x="86.51" y="1791.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (2 samples, 0.04%)</title><rect x="499.4" y="1621" width="0.4" height="15.0" fill="rgb(243,214,29)" rx="2" ry="2" />
<text  x="502.38" y="1631.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (1 samples, 0.02%)</title><rect x="1136.2" y="1925" width="0.3" height="15.0" fill="rgb(247,201,30)" rx="2" ry="2" />
<text  x="1139.23" y="1935.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;clustering_key_prefix, false, false&gt;::_Optional_base (1 samples, 0.02%)</title><rect x="636.4" y="1845" width="0.2" height="15.0" fill="rgb(244,164,1)" rx="2" ry="2" />
<text  x="639.41" y="1855.5" ></text>
</g>
<g >
<title>mutation_reader_merger::maybe_add_readers_at_partition_boundary (1 samples, 0.02%)</title><rect x="174.3" y="1733" width="0.2" height="15.0" fill="rgb(251,130,33)" rx="2" ry="2" />
<text  x="177.26" y="1743.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.02%)</title><rect x="53.6" y="1541" width="0.2" height="15.0" fill="rgb(222,49,20)" rx="2" ry="2" />
<text  x="56.56" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;11ul, cql3::expr::untyped_constant&gt; (2 samples, 0.04%)</title><rect x="52.7" y="1573" width="0.4" height="15.0" fill="rgb(238,161,41)" rx="2" ry="2" />
<text  x="55.65" y="1583.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.02%)</title><rect x="53.6" y="1653" width="0.2" height="15.0" fill="rgb(226,146,29)" rx="2" ry="2" />
<text  x="56.56" y="1663.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::drop_unneeded_tombstones (1 samples, 0.02%)</title><rect x="395.2" y="1621" width="0.3" height="15.0" fill="rgb(236,29,33)" rx="2" ry="2" />
<text  x="398.24" y="1631.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.02%)</title><rect x="59.9" y="1685" width="0.2" height="15.0" fill="rgb(245,101,38)" rx="2" ry="2" />
<text  x="62.91" y="1695.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (6 samples, 0.12%)</title><rect x="38.1" y="1765" width="1.4" height="15.0" fill="rgb(221,22,51)" rx="2" ry="2" />
<text  x="41.13" y="1775.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (1 samples, 0.02%)</title><rect x="629.2" y="1845" width="0.2" height="15.0" fill="rgb(218,193,15)" rx="2" ry="2" />
<text  x="632.15" y="1855.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*&gt; &gt;::size (1 samples, 0.02%)</title><rect x="35.4" y="1717" width="0.2" height="15.0" fill="rgb(212,199,9)" rx="2" ry="2" />
<text  x="38.41" y="1727.5" ></text>
</g>
<g >
<title>cql3::single_column_relation::new_EQ_restriction (8 samples, 0.15%)</title><rect x="70.8" y="1797" width="1.8" height="15.0" fill="rgb(210,86,21)" rx="2" ry="2" />
<text  x="73.80" y="1807.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; const, column_definition const*&gt;, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; const, column_definition const*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;, std::hash&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (1 samples, 0.02%)</title><rect x="74.7" y="1813" width="0.2" height="15.0" fill="rgb(237,181,16)" rx="2" ry="2" />
<text  x="77.66" y="1823.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="76.7" y="1813" width="0.2" height="15.0" fill="rgb(208,180,13)" rx="2" ry="2" />
<text  x="79.70" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (2 samples, 0.04%)</title><rect x="51.5" y="1669" width="0.5" height="15.0" fill="rgb(250,99,16)" rx="2" ry="2" />
<text  x="54.52" y="1679.5" ></text>
</g>
<g >
<title>std::forward&lt;cql3::expr::untyped_constant&gt; (1 samples, 0.02%)</title><rect x="52.7" y="1461" width="0.2" height="15.0" fill="rgb(218,108,5)" rx="2" ry="2" />
<text  x="55.65" y="1471.5" ></text>
</g>
<g >
<title>std::__make_heap&lt;__gnu_cxx::__normal_iterator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position*, std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::heap_compare&gt; &gt; (1 samples, 0.02%)</title><rect x="264.3" y="1589" width="0.3" height="15.0" fill="rgb(254,199,47)" rx="2" ry="2" />
<text  x="267.33" y="1599.5" ></text>
</g>
<g >
<title>db::schema_tables::read_table_names_of_keyspace (1 samples, 0.02%)</title><rect x="107.3" y="1893" width="0.3" height="15.0" fill="rgb(236,188,8)" rx="2" ry="2" />
<text  x="110.33" y="1903.5" ></text>
</g>
<g >
<title>database::do_apply (32 samples, 0.62%)</title><rect x="1119.2" y="1765" width="7.3" height="15.0" fill="rgb(243,20,34)" rx="2" ry="2" />
<text  x="1122.21" y="1775.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::execute (1 samples, 0.02%)</title><rect x="709.9" y="1877" width="0.2" height="15.0" fill="rgb(227,57,5)" rx="2" ry="2" />
<text  x="712.92" y="1887.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (3 samples, 0.06%)</title><rect x="135.7" y="1877" width="0.7" height="15.0" fill="rgb(215,57,21)" rx="2" ry="2" />
<text  x="138.69" y="1887.5" ></text>
</g>
<g >
<title>row::append_cell (2 samples, 0.04%)</title><rect x="107.8" y="1861" width="0.4" height="15.0" fill="rgb(237,158,52)" rx="2" ry="2" />
<text  x="110.79" y="1871.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value_view, std::allocator&lt;cql3::raw_value_view&gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="678.8" y="1909" width="0.3" height="15.0" fill="rgb(246,83,13)" rx="2" ry="2" />
<text  x="681.84" y="1919.5" ></text>
</g>
<g >
<title>cql3::single_column_relation::to_receivers (1 samples, 0.02%)</title><rect x="71.0" y="1781" width="0.3" height="15.0" fill="rgb(226,24,40)" rx="2" ry="2" />
<text  x="74.03" y="1791.5" ></text>
</g>
<g >
<title>database::find_uuid (26 samples, 0.50%)</title><rect x="776.2" y="1813" width="5.9" height="15.0" fill="rgb(229,123,17)" rx="2" ry="2" />
<text  x="779.17" y="1823.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (192 samples, 3.69%)</title><rect x="21.8" y="1813" width="43.6" height="15.0" fill="rgb(220,30,52)" rx="2" ry="2" />
<text  x="24.80" y="1823.5" >cql3..</text>
</g>
<g >
<title>service::abstract_read_executor::make_data_request (235 samples, 4.52%)</title><rect x="992.2" y="1733" width="53.3" height="15.0" fill="rgb(240,88,1)" rx="2" ry="2" />
<text  x="995.16" y="1743.5" >servi..</text>
</g>
<g >
<title>database::find_schema (10 samples, 0.19%)</title><rect x="773.9" y="1813" width="2.3" height="15.0" fill="rgb(239,44,31)" rx="2" ry="2" />
<text  x="776.90" y="1823.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::then_wrapped_common&lt;false, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (10 samples, 0.19%)</title><rect x="846.5" y="1845" width="2.3" height="15.0" fill="rgb(210,11,41)" rx="2" ry="2" />
<text  x="849.50" y="1855.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::unreserved_function_keyword (1 samples, 0.02%)</title><rect x="700.8" y="1717" width="0.3" height="15.0" fill="rgb(213,172,48)" rx="2" ry="2" />
<text  x="703.85" y="1727.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::impl (1 samples, 0.02%)</title><rect x="516.4" y="1701" width="0.2" height="15.0" fill="rgb(240,213,47)" rx="2" ry="2" />
<text  x="519.39" y="1711.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (1 samples, 0.02%)</title><rect x="795.5" y="1685" width="0.2" height="15.0" fill="rgb(207,87,51)" rx="2" ry="2" />
<text  x="798.46" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;gms::inet_address, std::pair&lt;gms::inet_address const, table::cache_hit_rate&gt;, std::allocator&lt;std::pair&lt;gms::inet_address const, table::cache_hit_rate&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;gms::inet_address&gt;, std::hash&lt;gms::inet_address&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::operator[] (8 samples, 0.15%)</title><rect x="725.6" y="1861" width="1.8" height="15.0" fill="rgb(225,57,1)" rx="2" ry="2" />
<text  x="728.58" y="1871.5" ></text>
</g>
<g >
<title>auth::standard_role_manager::create_default_role_if_missing (1 samples, 0.02%)</title><rect x="700.8" y="1909" width="0.3" height="15.0" fill="rgb(231,228,35)" rx="2" ry="2" />
<text  x="703.85" y="1919.5" ></text>
</g>
<g >
<title>seastar::reactor::reap_kernel_completions_pollfn::poll (1 samples, 0.02%)</title><rect x="89.0" y="1941" width="0.2" height="15.0" fill="rgb(206,226,24)" rx="2" ry="2" />
<text  x="91.95" y="1951.5" ></text>
</g>
<g >
<title>reader_selector::has_new_readers (3 samples, 0.06%)</title><rect x="458.5" y="1701" width="0.7" height="15.0" fill="rgb(226,53,36)" rx="2" ry="2" />
<text  x="461.54" y="1711.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.02%)</title><rect x="57.2" y="1765" width="0.2" height="15.0" fill="rgb(213,16,36)" rx="2" ry="2" />
<text  x="60.19" y="1775.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="648.2" y="1909" width="0.2" height="15.0" fill="rgb(230,98,36)" rx="2" ry="2" />
<text  x="651.21" y="1919.5" ></text>
</g>
<g >
<title>service::storage_service::mutate_token_metadata (1 samples, 0.02%)</title><rect x="17.7" y="1877" width="0.2" height="15.0" fill="rgb(251,53,6)" rx="2" ry="2" />
<text  x="20.71" y="1887.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (1 samples, 0.02%)</title><rect x="428.8" y="1669" width="0.2" height="15.0" fill="rgb(211,79,32)" rx="2" ry="2" />
<text  x="431.82" y="1679.5" ></text>
</g>
<g >
<title>query::result_set::from_raw_result (1 samples, 0.02%)</title><rect x="106.7" y="1733" width="0.2" height="15.0" fill="rgb(216,117,33)" rx="2" ry="2" />
<text  x="109.65" y="1743.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (1 samples, 0.02%)</title><rect x="49.7" y="1701" width="0.2" height="15.0" fill="rgb(240,102,48)" rx="2" ry="2" />
<text  x="52.70" y="1711.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (1 samples, 0.02%)</title><rect x="912.1" y="1797" width="0.2" height="15.0" fill="rgb(229,168,39)" rx="2" ry="2" />
<text  x="915.07" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.5" y="869" width="0.2" height="15.0" fill="rgb(254,58,42)" rx="2" ry="2" />
<text  x="13.45" y="879.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::followPop (2 samples, 0.04%)</title><rect x="36.1" y="1797" width="0.4" height="15.0" fill="rgb(242,206,1)" rx="2" ry="2" />
<text  x="39.09" y="1807.5" ></text>
</g>
<g >
<title>visit&lt;(anonymous namespace)::serialized_size_visitor&gt; (1 samples, 0.02%)</title><rect x="71.3" y="1717" width="0.2" height="15.0" fill="rgb(252,207,32)" rx="2" ry="2" />
<text  x="74.26" y="1727.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (6 samples, 0.12%)</title><rect x="1014.6" y="1637" width="1.4" height="15.0" fill="rgb(216,136,26)" rx="2" ry="2" />
<text  x="1017.62" y="1647.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::move_it (1 samples, 0.02%)</title><rect x="681.8" y="1877" width="0.2" height="15.0" fill="rgb(245,10,27)" rx="2" ry="2" />
<text  x="684.79" y="1887.5" ></text>
</g>
<g >
<title>compound_type&lt; (1 samples, 0.02%)</title><rect x="101.7" y="1733" width="0.2" height="15.0" fill="rgb(217,73,10)" rx="2" ry="2" />
<text  x="104.66" y="1743.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::insertToken (9 samples, 0.17%)</title><rect x="22.5" y="1733" width="2.0" height="15.0" fill="rgb(231,148,43)" rx="2" ry="2" />
<text  x="25.48" y="1743.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::pop_back (1 samples, 0.02%)</title><rect x="301.3" y="1701" width="0.2" height="15.0" fill="rgb(249,159,50)" rx="2" ry="2" />
<text  x="304.31" y="1711.5" ></text>
</g>
<g >
<title>ser::deserialize&lt;seastar::simple_memory_input_stream&gt; (1 samples, 0.02%)</title><rect x="1122.6" y="1621" width="0.2" height="15.0" fill="rgb(219,111,49)" rx="2" ry="2" />
<text  x="1125.62" y="1631.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="23.8" y="1589" width="0.3" height="15.0" fill="rgb(207,44,20)" rx="2" ry="2" />
<text  x="26.84" y="1599.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (1 samples, 0.02%)</title><rect x="874.0" y="1861" width="0.2" height="15.0" fill="rgb(254,48,14)" rx="2" ry="2" />
<text  x="876.96" y="1871.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (1 samples, 0.02%)</title><rect x="1139.6" y="1893" width="0.3" height="15.0" fill="rgb(227,143,16)" rx="2" ry="2" />
<text  x="1142.63" y="1903.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;cql3::query_processor&gt;::local (3 samples, 0.06%)</title><rect x="849.2" y="1861" width="0.7" height="15.0" fill="rgb(221,121,54)" rx="2" ry="2" />
<text  x="852.23" y="1871.5" ></text>
</g>
<g >
<title>partition_snapshot::static_row (8 samples, 0.15%)</title><rect x="290.0" y="1637" width="1.8" height="15.0" fill="rgb(219,110,34)" rx="2" ry="2" />
<text  x="292.97" y="1647.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (1 samples, 0.02%)</title><rect x="987.6" y="1749" width="0.3" height="15.0" fill="rgb(216,229,4)" rx="2" ry="2" />
<text  x="990.62" y="1759.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="322.6" y="1781" width="0.3" height="15.0" fill="rgb(224,94,8)" rx="2" ry="2" />
<text  x="325.64" y="1791.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (2 samples, 0.04%)</title><rect x="915.2" y="1765" width="0.5" height="15.0" fill="rgb(222,84,53)" rx="2" ry="2" />
<text  x="918.25" y="1775.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="1131.2" y="1525" width="0.3" height="15.0" fill="rgb(210,41,3)" rx="2" ry="2" />
<text  x="1134.24" y="1535.5" ></text>
</g>
<g >
<title>__dynamic_cast (1 samples, 0.02%)</title><rect x="10.9" y="2021" width="0.2" height="15.0" fill="rgb(223,106,30)" rx="2" ry="2" />
<text  x="13.91" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.5" y="693" width="0.2" height="15.0" fill="rgb(231,105,32)" rx="2" ry="2" />
<text  x="13.45" y="703.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.02%)</title><rect x="59.9" y="1717" width="0.2" height="15.0" fill="rgb(205,111,8)" rx="2" ry="2" />
<text  x="62.91" y="1727.5" ></text>
</g>
<g >
<title>partition_snapshot::versions (1 samples, 0.02%)</title><rect x="259.6" y="1557" width="0.2" height="15.0" fill="rgb(208,38,25)" rx="2" ry="2" />
<text  x="262.57" y="1567.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;void&gt;::set_urgent_state (2 samples, 0.04%)</title><rect x="873.5" y="1925" width="0.5" height="15.0" fill="rgb(251,106,44)" rx="2" ry="2" />
<text  x="876.50" y="1935.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql3::restrictions::single_column_restrictions&gt;::~shared_ptr_count_for (2 samples, 0.04%)</title><rect x="654.1" y="1845" width="0.5" height="15.0" fill="rgb(208,84,7)" rx="2" ry="2" />
<text  x="657.11" y="1855.5" ></text>
</g>
<g >
<title>logalloc::region_impl::alloc (1 samples, 0.02%)</title><rect x="1121.3" y="1605" width="0.2" height="15.0" fill="rgb(245,19,36)" rx="2" ry="2" />
<text  x="1124.26" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (1 samples, 0.02%)</title><rect x="57.9" y="1717" width="0.2" height="15.0" fill="rgb(232,189,52)" rx="2" ry="2" />
<text  x="60.87" y="1727.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::leaf_node::allocate (1 samples, 0.02%)</title><rect x="108.0" y="1813" width="0.2" height="15.0" fill="rgb(224,167,9)" rx="2" ry="2" />
<text  x="111.01" y="1823.5" ></text>
</g>
<g >
<title>seastar::app_template::run_deprecated (4,769 samples, 91.69%)</title><rect x="84.9" y="1989" width="1082.0" height="15.0" fill="rgb(216,199,31)" rx="2" ry="2" />
<text  x="87.87" y="1999.5" >seastar::app_template::run_deprecated</text>
</g>
<g >
<title>operator delete (5 samples, 0.10%)</title><rect x="631.9" y="1797" width="1.1" height="15.0" fill="rgb(242,208,15)" rx="2" ry="2" />
<text  x="634.88" y="1807.5" ></text>
</g>
<g >
<title>logalloc::basic_region_impl::set_reclaiming_enabled (1 samples, 0.02%)</title><rect x="268.2" y="1605" width="0.2" height="15.0" fill="rgb(221,4,40)" rx="2" ry="2" />
<text  x="271.19" y="1615.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (2 samples, 0.04%)</title><rect x="57.9" y="1749" width="0.4" height="15.0" fill="rgb(246,82,31)" rx="2" ry="2" />
<text  x="60.87" y="1759.5" ></text>
</g>
<g >
<title>seastar::uninitialized_string&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; (2 samples, 0.04%)</title><rect x="79.9" y="1909" width="0.4" height="15.0" fill="rgb(250,47,21)" rx="2" ry="2" />
<text  x="82.88" y="1919.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::operator (1 samples, 0.02%)</title><rect x="17.9" y="1781" width="0.3" height="15.0" fill="rgb(215,107,17)" rx="2" ry="2" />
<text  x="20.94" y="1791.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (3 samples, 0.06%)</title><rect x="37.2" y="1765" width="0.7" height="15.0" fill="rgb(240,181,10)" rx="2" ry="2" />
<text  x="40.23" y="1775.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="1146.7" y="1877" width="0.2" height="15.0" fill="rgb(225,127,24)" rx="2" ry="2" />
<text  x="1149.67" y="1887.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="69.7" y="1781" width="0.2" height="15.0" fill="rgb(209,138,7)" rx="2" ry="2" />
<text  x="72.67" y="1791.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.02%)</title><rect x="24.3" y="1653" width="0.2" height="15.0" fill="rgb(246,224,3)" rx="2" ry="2" />
<text  x="27.29" y="1663.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="652.5" y="1893" width="0.2" height="15.0" fill="rgb(250,185,53)" rx="2" ry="2" />
<text  x="655.52" y="1903.5" ></text>
</g>
<g >
<title>seastar::futurize_invoke&lt;seastar::future&lt;void&gt;  (6 samples, 0.12%)</title><rect x="699.3" y="1845" width="1.3" height="15.0" fill="rgb(230,122,0)" rx="2" ry="2" />
<text  x="702.26" y="1855.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (1 samples, 0.02%)</title><rect x="1090.2" y="1813" width="0.2" height="15.0" fill="rgb(214,26,42)" rx="2" ry="2" />
<text  x="1093.17" y="1823.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::pop_mutation_fragment (2 samples, 0.04%)</title><rect x="182.0" y="1669" width="0.4" height="15.0" fill="rgb(242,136,29)" rx="2" ry="2" />
<text  x="184.97" y="1679.5" ></text>
</g>
<g >
<title>std::vector&lt;seastar::shared_ptr&lt;cql3::relation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::relation&gt; &gt; &gt;::vector (1 samples, 0.02%)</title><rect x="62.0" y="1781" width="0.2" height="15.0" fill="rgb(213,129,0)" rx="2" ry="2" />
<text  x="64.96" y="1791.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (2 samples, 0.04%)</title><rect x="722.2" y="1845" width="0.4" height="15.0" fill="rgb(216,229,42)" rx="2" ry="2" />
<text  x="725.17" y="1855.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql_transport::messages::result_message&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="674.1" y="1909" width="0.2" height="15.0" fill="rgb(240,126,45)" rx="2" ry="2" />
<text  x="677.08" y="1919.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (1 samples, 0.02%)</title><rect x="324.9" y="1829" width="0.2" height="15.0" fill="rgb(208,146,6)" rx="2" ry="2" />
<text  x="327.91" y="1839.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::vector (2 samples, 0.04%)</title><rect x="1103.6" y="1829" width="0.4" height="15.0" fill="rgb(234,221,0)" rx="2" ry="2" />
<text  x="1106.56" y="1839.5" ></text>
</g>
<g >
<title>allocation_strategy::get_standard_migrator&lt;partition_version&gt; (1 samples, 0.02%)</title><rect x="1119.7" y="1525" width="0.2" height="15.0" fill="rgb(251,155,36)" rx="2" ry="2" />
<text  x="1122.67" y="1535.5" ></text>
</g>
<g >
<title>schema_registry::get_entry (13 samples, 0.25%)</title><rect x="969.7" y="1765" width="2.9" height="15.0" fill="rgb(242,84,34)" rx="2" ry="2" />
<text  x="972.70" y="1775.5" ></text>
</g>
<g >
<title>write_fragmented&lt;managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="1120.8" y="1637" width="0.2" height="15.0" fill="rgb(241,92,2)" rx="2" ry="2" />
<text  x="1123.80" y="1647.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::relationType (3 samples, 0.06%)</title><rect x="59.0" y="1749" width="0.7" height="15.0" fill="rgb(241,150,35)" rx="2" ry="2" />
<text  x="62.01" y="1759.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (4 samples, 0.08%)</title><rect x="920.2" y="1781" width="0.9" height="15.0" fill="rgb(231,56,16)" rx="2" ry="2" />
<text  x="923.24" y="1791.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="435.2" y="1765" width="0.2" height="15.0" fill="rgb(209,143,37)" rx="2" ry="2" />
<text  x="438.17" y="1775.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (1 samples, 0.02%)</title><rect x="101.7" y="1829" width="0.2" height="15.0" fill="rgb(219,136,37)" rx="2" ry="2" />
<text  x="104.66" y="1839.5" ></text>
</g>
<g >
<title>table::stop (1 samples, 0.02%)</title><rect x="701.3" y="1893" width="0.2" height="15.0" fill="rgb(206,71,28)" rx="2" ry="2" />
<text  x="704.30" y="1903.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::get_promise (2 samples, 0.04%)</title><rect x="1004.6" y="1701" width="0.5" height="15.0" fill="rgb(245,27,41)" rx="2" ry="2" />
<text  x="1007.64" y="1711.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (1 samples, 0.02%)</title><rect x="101.7" y="1813" width="0.2" height="15.0" fill="rgb(233,100,9)" rx="2" ry="2" />
<text  x="104.66" y="1823.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.02%)</title><rect x="59.9" y="1701" width="0.2" height="15.0" fill="rgb(225,140,46)" rx="2" ry="2" />
<text  x="62.91" y="1711.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (1 samples, 0.02%)</title><rect x="700.8" y="1845" width="0.3" height="15.0" fill="rgb(223,102,19)" rx="2" ry="2" />
<text  x="703.85" y="1855.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, enum_set&lt;super_enum&lt;auth::permission,  (5 samples, 0.10%)</title><rect x="77.8" y="1717" width="1.2" height="15.0" fill="rgb(216,225,2)" rx="2" ry="2" />
<text  x="80.84" y="1727.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::unreserved_keyword (1 samples, 0.02%)</title><rect x="700.8" y="1733" width="0.3" height="15.0" fill="rgb(208,21,21)" rx="2" ry="2" />
<text  x="703.85" y="1743.5" ></text>
</g>
<g >
<title>table::stop (1 samples, 0.02%)</title><rect x="701.3" y="1877" width="0.2" height="15.0" fill="rgb(222,20,36)" rx="2" ry="2" />
<text  x="704.30" y="1887.5" ></text>
</g>
<g >
<title>ser::query_result__partitions&lt;bytes_ostream&gt;::add (2 samples, 0.04%)</title><rect x="348.5" y="1589" width="0.5" height="15.0" fill="rgb(207,180,16)" rx="2" ry="2" />
<text  x="351.50" y="1599.5" ></text>
</g>
<g >
<title>cql3::query_processor::prepare_internal (1 samples, 0.02%)</title><rect x="11.6" y="1797" width="0.2" height="15.0" fill="rgb(241,69,13)" rx="2" ry="2" />
<text  x="14.59" y="1807.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (2 samples, 0.04%)</title><rect x="1029.8" y="1605" width="0.5" height="15.0" fill="rgb(223,143,34)" rx="2" ry="2" />
<text  x="1032.82" y="1615.5" ></text>
</g>
<g >
<title>frozen_schema::frozen_schema (3 samples, 0.06%)</title><rect x="108.5" y="1877" width="0.6" height="15.0" fill="rgb(249,153,44)" rx="2" ry="2" />
<text  x="111.47" y="1887.5" ></text>
</g>
<g >
<title>row_cache::invalidate (1 samples, 0.02%)</title><rect x="701.3" y="1861" width="0.2" height="15.0" fill="rgb(224,196,33)" rx="2" ry="2" />
<text  x="704.30" y="1871.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::execute (1 samples, 0.02%)</title><rect x="706.7" y="1861" width="0.3" height="15.0" fill="rgb(242,137,17)" rx="2" ry="2" />
<text  x="709.75" y="1871.5" ></text>
</g>
<g >
<title>cql3::attributes::attributes (1 samples, 0.02%)</title><rect x="67.2" y="1861" width="0.2" height="15.0" fill="rgb(207,59,12)" rx="2" ry="2" />
<text  x="70.17" y="1871.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (275 samples, 5.29%)</title><rect x="18.2" y="1989" width="62.4" height="15.0" fill="rgb(223,147,28)" rx="2" ry="2" />
<text  x="21.17" y="1999.5" >std::_..</text>
</g>
<g >
<title>auth::permissions_cache::get (95 samples, 1.83%)</title><rect x="800.7" y="1701" width="21.5" height="15.0" fill="rgb(227,0,10)" rx="2" ry="2" />
<text  x="803.67" y="1711.5" >a..</text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.08%)</title><rect x="868.1" y="1845" width="0.9" height="15.0" fill="rgb(237,107,12)" rx="2" ry="2" />
<text  x="871.06" y="1855.5" ></text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_token (1 samples, 0.02%)</title><rect x="946.1" y="1749" width="0.2" height="15.0" fill="rgb(226,16,47)" rx="2" ry="2" />
<text  x="949.10" y="1759.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.02%)</title><rect x="700.8" y="1653" width="0.3" height="15.0" fill="rgb(228,196,37)" rx="2" ry="2" />
<text  x="703.85" y="1663.5" ></text>
</g>
<g >
<title>ser::serializer&lt;ser::deletable_row_view&gt;::read&lt;seastar::simple_memory_input_stream&gt; (1 samples, 0.02%)</title><rect x="1123.8" y="1605" width="0.2" height="15.0" fill="rgb(244,204,50)" rx="2" ry="2" />
<text  x="1126.75" y="1615.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (2 samples, 0.04%)</title><rect x="441.5" y="1797" width="0.5" height="15.0" fill="rgb(251,103,20)" rx="2" ry="2" />
<text  x="444.52" y="1807.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.04%)</title><rect x="515.0" y="1701" width="0.5" height="15.0" fill="rgb(239,182,17)" rx="2" ry="2" />
<text  x="518.03" y="1711.5" ></text>
</g>
<g >
<title>db::schema_tables::merge_tables_and_views (4 samples, 0.08%)</title><rect x="106.4" y="1909" width="0.9" height="15.0" fill="rgb(205,210,52)" rx="2" ry="2" />
<text  x="109.42" y="1919.5" ></text>
</g>
<g >
<title>single_node_cql_env::do_with (3 samples, 0.06%)</title><rect x="17.3" y="1989" width="0.6" height="15.0" fill="rgb(230,93,10)" rx="2" ry="2" />
<text  x="20.26" y="1999.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (3 samples, 0.06%)</title><rect x="643.2" y="1909" width="0.7" height="15.0" fill="rgb(207,7,38)" rx="2" ry="2" />
<text  x="646.22" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::binary_operator const*&gt;  (1 samples, 0.02%)</title><rect x="893.9" y="1813" width="0.2" height="15.0" fill="rgb(227,55,51)" rx="2" ry="2" />
<text  x="896.92" y="1823.5" ></text>
</g>
<g >
<title>downgrade_to_v1 (1 samples, 0.02%)</title><rect x="17.9" y="1765" width="0.3" height="15.0" fill="rgb(249,135,22)" rx="2" ry="2" />
<text  x="20.94" y="1775.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (2 samples, 0.04%)</title><rect x="923.9" y="1813" width="0.4" height="15.0" fill="rgb(232,219,7)" rx="2" ry="2" />
<text  x="926.87" y="1823.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="469.4" y="1701" width="0.3" height="15.0" fill="rgb(241,43,32)" rx="2" ry="2" />
<text  x="472.43" y="1711.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="678.2" y="1845" width="0.2" height="15.0" fill="rgb(217,195,10)" rx="2" ry="2" />
<text  x="681.16" y="1855.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (5 samples, 0.10%)</title><rect x="699.3" y="1749" width="1.1" height="15.0" fill="rgb(248,23,11)" rx="2" ry="2" />
<text  x="702.26" y="1759.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.02%)</title><rect x="53.6" y="1509" width="0.2" height="15.0" fill="rgb(217,204,32)" rx="2" ry="2" />
<text  x="56.56" y="1519.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (6 samples, 0.12%)</title><rect x="197.9" y="1637" width="1.3" height="15.0" fill="rgb(227,105,19)" rx="2" ry="2" />
<text  x="200.86" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.5" y="469" width="0.2" height="15.0" fill="rgb(233,154,0)" rx="2" ry="2" />
<text  x="13.45" y="479.5" ></text>
</g>
<g >
<title>free (1 samples, 0.02%)</title><rect x="47.9" y="1669" width="0.2" height="15.0" fill="rgb(254,180,6)" rx="2" ry="2" />
<text  x="50.89" y="1679.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="57.0" y="1765" width="0.2" height="15.0" fill="rgb(216,182,36)" rx="2" ry="2" />
<text  x="59.96" y="1775.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_slice_or_needs_filtering (1 samples, 0.02%)</title><rect x="660.2" y="1829" width="0.3" height="15.0" fill="rgb(246,69,27)" rx="2" ry="2" />
<text  x="663.24" y="1839.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (2 samples, 0.04%)</title><rect x="679.7" y="1893" width="0.5" height="15.0" fill="rgb(230,66,16)" rx="2" ry="2" />
<text  x="682.75" y="1903.5" ></text>
</g>
<g >
<title>bytes_ostream::chunk::~chunk (4 samples, 0.08%)</title><rect x="98.9" y="1829" width="0.9" height="15.0" fill="rgb(247,173,42)" rx="2" ry="2" />
<text  x="101.94" y="1839.5" ></text>
</g>
<g >
<title>partition_snapshot::slide_to_oldest (5 samples, 0.10%)</title><rect x="583.6" y="1701" width="1.1" height="15.0" fill="rgb(226,154,5)" rx="2" ry="2" />
<text  x="586.55" y="1711.5" ></text>
</g>
<g >
<title>bplus::node&lt;long, intrusive_array&lt;memtable_entry&gt;, dht::raw_token_less_comparator, 16ul,  (3 samples, 0.06%)</title><rect x="1120.1" y="1605" width="0.7" height="15.0" fill="rgb(252,27,32)" rx="2" ry="2" />
<text  x="1123.12" y="1615.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;service::abstract_read_executor::execute (3 samples, 0.06%)</title><rect x="706.3" y="1877" width="0.7" height="15.0" fill="rgb(230,147,23)" rx="2" ry="2" />
<text  x="709.29" y="1887.5" ></text>
</g>
<g >
<title>ser::serializer&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;::read&lt;seastar::fragmented_memory_input_stream&lt;bytes_ostream::fragment_iterator&gt; &gt; (1 samples, 0.02%)</title><rect x="109.1" y="1685" width="0.3" height="15.0" fill="rgb(253,104,40)" rx="2" ry="2" />
<text  x="112.15" y="1695.5" ></text>
</g>
<g >
<title>sstables::file_writer::write (1 samples, 0.02%)</title><rect x="698.8" y="1589" width="0.2" height="15.0" fill="rgb(249,3,17)" rx="2" ry="2" />
<text  x="701.81" y="1599.5" ></text>
</g>
<g >
<title>std::construct_at&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="49.0" y="1589" width="0.3" height="15.0" fill="rgb(221,165,51)" rx="2" ry="2" />
<text  x="52.02" y="1599.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::operator (1 samples, 0.02%)</title><rect x="1054.3" y="1701" width="0.3" height="15.0" fill="rgb(242,186,5)" rx="2" ry="2" />
<text  x="1057.33" y="1711.5" ></text>
</g>
<g >
<title>service::abstract_write_response_handler::max_backlog (1 samples, 0.02%)</title><rect x="730.1" y="1845" width="0.2" height="15.0" fill="rgb(247,130,9)" rx="2" ry="2" />
<text  x="733.12" y="1855.5" ></text>
</g>
<g >
<title>std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;::vector (1 samples, 0.02%)</title><rect x="66.9" y="1861" width="0.3" height="15.0" fill="rgb(207,203,27)" rx="2" ry="2" />
<text  x="69.95" y="1871.5" ></text>
</g>
<g >
<title>cql3::query_processor::parse_statement (1 samples, 0.02%)</title><rect x="700.8" y="1877" width="0.3" height="15.0" fill="rgb(218,1,29)" rx="2" ry="2" />
<text  x="703.85" y="1887.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.02%)</title><rect x="133.2" y="1813" width="0.2" height="15.0" fill="rgb(238,185,46)" rx="2" ry="2" />
<text  x="136.20" y="1823.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, flat_mutation_reader::impl::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (6 samples, 0.12%)</title><rect x="699.3" y="1813" width="1.3" height="15.0" fill="rgb(253,2,31)" rx="2" ry="2" />
<text  x="702.26" y="1823.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (1 samples, 0.02%)</title><rect x="54.7" y="1685" width="0.2" height="15.0" fill="rgb(231,79,32)" rx="2" ry="2" />
<text  x="57.70" y="1695.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_prepared (1 samples, 0.02%)</title><rect x="872.1" y="1909" width="0.3" height="15.0" fill="rgb(215,98,50)" rx="2" ry="2" />
<text  x="875.14" y="1919.5" ></text>
</g>
<g >
<title>_ZSt5applyIZN7seastar8internal12do_with_implIRKNS0_13basic_sstringIcjLj15ELb1EEEN4auth8resourceEJZNK7service12client_state24has_column_family_accessERK8databaseS6_S6_NS7_10permissionENS7_12command_desc4typeEE3$_4EEEDaOT_OT0_DpOT1_EUlDpOT_E_St5tupleIJS6_OS8_EEEDcSJ_SL_ (14 samples, 0.27%)</title><rect x="783.7" y="1813" width="3.1" height="15.0" fill="rgb(218,141,49)" rx="2" ry="2" />
<text  x="786.66" y="1823.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (14 samples, 0.27%)</title><rect x="81.2" y="1989" width="3.2" height="15.0" fill="rgb(235,134,6)" rx="2" ry="2" />
<text  x="84.24" y="1999.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::needs_post_query_ordering (13 samples, 0.25%)</title><rect x="663.0" y="1893" width="2.9" height="15.0" fill="rgb(238,38,48)" rx="2" ry="2" />
<text  x="665.96" y="1903.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (1 samples, 0.02%)</title><rect x="878.3" y="1653" width="0.2" height="15.0" fill="rgb(244,194,29)" rx="2" ry="2" />
<text  x="881.27" y="1663.5" ></text>
</g>
<g >
<title>mutation_reader_merger::mutation_reader_merger (42 samples, 0.81%)</title><rect x="451.1" y="1733" width="9.5" height="15.0" fill="rgb(241,79,36)" rx="2" ry="2" />
<text  x="454.05" y="1743.5" ></text>
</g>
<g >
<title>executor&lt;test_read (603 samples, 11.59%)</title><rect x="734.2" y="1909" width="136.8" height="15.0" fill="rgb(225,126,51)" rx="2" ry="2" />
<text  x="737.20" y="1919.5" >executor&lt;test_read</text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_token (1 samples, 0.02%)</title><rect x="660.9" y="1813" width="0.2" height="15.0" fill="rgb(222,209,42)" rx="2" ry="2" />
<text  x="663.92" y="1823.5" ></text>
</g>
<g >
<title>create_partitions (274 samples, 5.27%)</title><rect x="18.2" y="1957" width="62.1" height="15.0" fill="rgb(221,136,54)" rx="2" ry="2" />
<text  x="21.17" y="1967.5" >create..</text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::operator+ (1 samples, 0.02%)</title><rect x="701.1" y="1893" width="0.2" height="15.0" fill="rgb(213,100,54)" rx="2" ry="2" />
<text  x="704.07" y="1903.5" ></text>
</g>
<g >
<title>std::__make_heap&lt;__gnu_cxx::__normal_iterator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position*, std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::heap_compare&gt; &gt; (1 samples, 0.02%)</title><rect x="286.3" y="1653" width="0.3" height="15.0" fill="rgb(212,84,18)" rx="2" ry="2" />
<text  x="289.34" y="1663.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.02%)</title><rect x="46.3" y="1653" width="0.2" height="15.0" fill="rgb(242,102,3)" rx="2" ry="2" />
<text  x="49.30" y="1663.5" ></text>
</g>
<g >
<title>seastar::internal::future_base::set_coroutine (1 samples, 0.02%)</title><rect x="1031.0" y="1669" width="0.2" height="15.0" fill="rgb(232,92,28)" rx="2" ry="2" />
<text  x="1033.96" y="1679.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::restrictions::single_column_restriction&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="654.3" y="1781" width="0.3" height="15.0" fill="rgb(215,79,0)" rx="2" ry="2" />
<text  x="657.34" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.5" y="485" width="0.2" height="15.0" fill="rgb(220,224,32)" rx="2" ry="2" />
<text  x="13.45" y="495.5" ></text>
</g>
<g >
<title>bplus::tree&lt;long, intrusive_array&lt;memtable_entry&gt;, dht::raw_token_less_comparator, 16ul,  (6 samples, 0.12%)</title><rect x="1119.4" y="1621" width="1.4" height="15.0" fill="rgb(229,84,23)" rx="2" ry="2" />
<text  x="1122.44" y="1631.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (2 samples, 0.04%)</title><rect x="50.4" y="1589" width="0.4" height="15.0" fill="rgb(209,188,6)" rx="2" ry="2" />
<text  x="53.38" y="1599.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.02%)</title><rect x="39.3" y="1701" width="0.2" height="15.0" fill="rgb(245,81,39)" rx="2" ry="2" />
<text  x="42.27" y="1711.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::leaf_node::allocate (29 samples, 0.56%)</title><rect x="239.4" y="1541" width="6.6" height="15.0" fill="rgb(232,12,24)" rx="2" ry="2" />
<text  x="242.38" y="1551.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.02%)</title><rect x="257.1" y="1589" width="0.2" height="15.0" fill="rgb(231,55,52)" rx="2" ry="2" />
<text  x="260.07" y="1599.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.02%)</title><rect x="701.3" y="1717" width="0.2" height="15.0" fill="rgb(208,74,29)" rx="2" ry="2" />
<text  x="704.30" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.5" y="1269" width="0.2" height="15.0" fill="rgb(238,63,46)" rx="2" ry="2" />
<text  x="13.45" y="1279.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::maybe_refresh_state (1 samples, 0.02%)</title><rect x="210.6" y="1621" width="0.2" height="15.0" fill="rgb(254,47,51)" rx="2" ry="2" />
<text  x="213.56" y="1631.5" ></text>
</g>
<g >
<title>partition_key::from_range&lt;std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt; const&amp;&gt; (1 samples, 0.02%)</title><rect x="877.8" y="1781" width="0.2" height="15.0" fill="rgb(219,214,12)" rx="2" ry="2" />
<text  x="880.81" y="1791.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::operator+ (1 samples, 0.02%)</title><rect x="17.5" y="1701" width="0.2" height="15.0" fill="rgb(222,153,14)" rx="2" ry="2" />
<text  x="20.49" y="1711.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="292.5" y="1685" width="0.2" height="15.0" fill="rgb(219,126,13)" rx="2" ry="2" />
<text  x="295.46" y="1695.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (1 samples, 0.02%)</title><rect x="730.1" y="1781" width="0.2" height="15.0" fill="rgb(230,169,38)" rx="2" ry="2" />
<text  x="733.12" y="1791.5" ></text>
</g>
<g >
<title>seastar::reactor::submit_io_read (1 samples, 0.02%)</title><rect x="17.9" y="1317" width="0.3" height="15.0" fill="rgb(252,168,8)" rx="2" ry="2" />
<text  x="20.94" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;11ul, cql3::expr::untyped_constant&gt; (2 samples, 0.04%)</title><rect x="52.7" y="1557" width="0.4" height="15.0" fill="rgb(240,39,38)" rx="2" ry="2" />
<text  x="55.65" y="1567.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;service::digest_read_resolver, false&gt;::make&lt;seastar::lw_shared_ptr&lt;schema const&gt;&amp;, db::consistency_level&amp;, unsigned long&amp;, unsigned long, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;&amp;&gt; (34 samples, 0.65%)</title><rect x="979.2" y="1765" width="7.7" height="15.0" fill="rgb(226,56,26)" rx="2" ry="2" />
<text  x="982.23" y="1775.5" ></text>
</g>
<g >
<title>row::apply_monotonically (1 samples, 0.02%)</title><rect x="16.6" y="1957" width="0.2" height="15.0" fill="rgb(229,157,2)" rx="2" ry="2" />
<text  x="19.58" y="1967.5" ></text>
</g>
<g >
<title>std::tuple&lt;cql3::statements::drop_keyspace_statement*, std::default_delete&lt;cql3::statements::drop_keyspace_statement&gt; &gt;::tuple&lt;true, true&gt; (1 samples, 0.02%)</title><rect x="64.7" y="1749" width="0.2" height="15.0" fill="rgb(220,41,18)" rx="2" ry="2" />
<text  x="67.68" y="1759.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::_M_realloc_insert&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; (6 samples, 0.12%)</title><rect x="48.1" y="1701" width="1.4" height="15.0" fill="rgb(238,124,27)" rx="2" ry="2" />
<text  x="51.12" y="1711.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt;, true, true&gt;::__uniq_ptr_data (1 samples, 0.02%)</title><rect x="49.0" y="1541" width="0.3" height="15.0" fill="rgb(238,123,22)" rx="2" ry="2" />
<text  x="52.02" y="1551.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::contains&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (2 samples, 0.04%)</title><rect x="76.5" y="1829" width="0.4" height="15.0" fill="rgb(215,80,44)" rx="2" ry="2" />
<text  x="79.48" y="1839.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (3 samples, 0.06%)</title><rect x="189.5" y="1685" width="0.6" height="15.0" fill="rgb(218,70,34)" rx="2" ry="2" />
<text  x="192.46" y="1695.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="606.7" y="1797" width="0.2" height="15.0" fill="rgb(218,172,44)" rx="2" ry="2" />
<text  x="609.69" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.5" y="1813" width="0.2" height="15.0" fill="rgb(235,146,20)" rx="2" ry="2" />
<text  x="13.45" y="1823.5" ></text>
</g>
<g >
<title>mutation_fragment::operator= (3 samples, 0.06%)</title><rect x="186.3" y="1653" width="0.7" height="15.0" fill="rgb(221,41,48)" rx="2" ry="2" />
<text  x="189.29" y="1663.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::pop_back (1 samples, 0.02%)</title><rect x="301.5" y="1717" width="0.3" height="15.0" fill="rgb(221,178,47)" rx="2" ry="2" />
<text  x="304.54" y="1727.5" ></text>
</g>
<g >
<title>std::operator- (2 samples, 0.04%)</title><rect x="50.4" y="1557" width="0.4" height="15.0" fill="rgb(217,124,5)" rx="2" ry="2" />
<text  x="53.38" y="1567.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_one (49 samples, 0.94%)</title><rect x="179.0" y="1701" width="11.1" height="15.0" fill="rgb(216,198,38)" rx="2" ry="2" />
<text  x="182.03" y="1711.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (8 samples, 0.15%)</title><rect x="407.7" y="1557" width="1.8" height="15.0" fill="rgb(237,76,40)" rx="2" ry="2" />
<text  x="410.72" y="1567.5" ></text>
</g>
<g >
<title>perf_simple_que (5,199 samples, 99.96%)</title><rect x="10.0" y="2069" width="1179.5" height="15.0" fill="rgb(239,84,53)" rx="2" ry="2" />
<text  x="13.00" y="2079.5" >perf_simple_que</text>
</g>
<g >
<title>std::__detail::_Map_base&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::at (1 samples, 0.02%)</title><rect x="835.4" y="1765" width="0.2" height="15.0" fill="rgb(236,5,23)" rx="2" ry="2" />
<text  x="838.39" y="1775.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::free (3 samples, 0.06%)</title><rect x="425.6" y="1637" width="0.7" height="15.0" fill="rgb(249,35,28)" rx="2" ry="2" />
<text  x="428.64" y="1647.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::create_role_statement, std::default_delete&lt;cql3::statements::create_role_statement&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="63.5" y="1797" width="0.3" height="15.0" fill="rgb(242,93,30)" rx="2" ry="2" />
<text  x="66.54" y="1807.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;position_in_partition&gt;::_M_reset (1 samples, 0.02%)</title><rect x="286.1" y="1653" width="0.2" height="15.0" fill="rgb(235,81,53)" rx="2" ry="2" />
<text  x="289.11" y="1663.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.02%)</title><rect x="574.9" y="1717" width="0.3" height="15.0" fill="rgb(229,175,48)" rx="2" ry="2" />
<text  x="577.93" y="1727.5" ></text>
</g>
<g >
<title>std::__lower_bound&lt;__gnu_cxx::__normal_iterator&lt;long*, std::vector&lt;long, std::allocator&lt;long&gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_less_val&gt; (6 samples, 0.12%)</title><rect x="1153.5" y="1877" width="1.3" height="15.0" fill="rgb(205,51,8)" rx="2" ry="2" />
<text  x="1156.47" y="1887.5" ></text>
</g>
<g >
<title>seastar::metrics::make_derive&lt;unsigned long&amp;&gt; (1 samples, 0.02%)</title><rect x="17.9" y="1221" width="0.3" height="15.0" fill="rgb(244,93,48)" rx="2" ry="2" />
<text  x="20.94" y="1231.5" ></text>
</g>
<g >
<title>service::abstract_write_response_handler::apply_locally (3 samples, 0.06%)</title><rect x="1128.1" y="1669" width="0.6" height="15.0" fill="rgb(230,173,9)" rx="2" ry="2" />
<text  x="1131.06" y="1679.5" ></text>
</g>
<g >
<title>mutation_fragment_stream_validating_filter::operator (1 samples, 0.02%)</title><rect x="84.0" y="1813" width="0.2" height="15.0" fill="rgb(239,81,2)" rx="2" ry="2" />
<text  x="86.96" y="1823.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.02%)</title><rect x="38.4" y="1637" width="0.2" height="15.0" fill="rgb(250,211,21)" rx="2" ry="2" />
<text  x="41.36" y="1647.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (1 samples, 0.02%)</title><rect x="532.3" y="1749" width="0.2" height="15.0" fill="rgb(207,6,47)" rx="2" ry="2" />
<text  x="535.28" y="1759.5" ></text>
</g>
<g >
<title>free (1 samples, 0.02%)</title><rect x="655.0" y="1797" width="0.2" height="15.0" fill="rgb(221,86,31)" rx="2" ry="2" />
<text  x="658.02" y="1807.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (9 samples, 0.17%)</title><rect x="646.2" y="1909" width="2.0" height="15.0" fill="rgb(223,13,27)" rx="2" ry="2" />
<text  x="649.17" y="1919.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.02%)</title><rect x="49.7" y="1717" width="0.2" height="15.0" fill="rgb(248,33,5)" rx="2" ry="2" />
<text  x="52.70" y="1727.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::get_promise (1 samples, 0.02%)</title><rect x="961.5" y="1797" width="0.3" height="15.0" fill="rgb(212,92,2)" rx="2" ry="2" />
<text  x="964.53" y="1807.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.02%)</title><rect x="58.3" y="1717" width="0.3" height="15.0" fill="rgb(241,107,22)" rx="2" ry="2" />
<text  x="61.33" y="1727.5" ></text>
</g>
<g >
<title>std::type_info::operator== (2 samples, 0.04%)</title><rect x="719.9" y="1861" width="0.5" height="15.0" fill="rgb(210,216,44)" rx="2" ry="2" />
<text  x="722.91" y="1871.5" ></text>
</g>
<g >
<title>schema::column_at (10 samples, 0.19%)</title><rect x="362.1" y="1605" width="2.3" height="15.0" fill="rgb(224,113,36)" rx="2" ry="2" />
<text  x="365.12" y="1615.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::pop_clustering_row (3 samples, 0.06%)</title><rect x="264.8" y="1605" width="0.7" height="15.0" fill="rgb(218,164,44)" rx="2" ry="2" />
<text  x="267.79" y="1615.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (13 samples, 0.25%)</title><rect x="340.6" y="1669" width="2.9" height="15.0" fill="rgb(234,180,47)" rx="2" ry="2" />
<text  x="343.56" y="1679.5" ></text>
</g>
<g >
<title>ser::writer_of_qr_partition&lt;bytes_ostream&gt;::skip_key (3 samples, 0.06%)</title><rect x="349.0" y="1589" width="0.6" height="15.0" fill="rgb(209,216,37)" rx="2" ry="2" />
<text  x="351.96" y="1599.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;::operator (15 samples, 0.29%)</title><rect x="763.9" y="1717" width="3.4" height="15.0" fill="rgb(227,13,6)" rx="2" ry="2" />
<text  x="766.92" y="1727.5" ></text>
</g>
<g >
<title>seastar::reactor::run (4,769 samples, 91.69%)</title><rect x="84.9" y="1973" width="1082.0" height="15.0" fill="rgb(208,116,23)" rx="2" ry="2" />
<text  x="87.87" y="1983.5" >seastar::reactor::run</text>
</g>
<g >
<title>range_tombstone_stream::empty (1 samples, 0.02%)</title><rect x="874.0" y="1765" width="0.2" height="15.0" fill="rgb(212,40,46)" rx="2" ry="2" />
<text  x="876.96" y="1775.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql_transport::messages::result_message::rows&gt;::~shared_ptr_count_for (1 samples, 0.02%)</title><rect x="1136.9" y="1925" width="0.2" height="15.0" fill="rgb(246,155,15)" rx="2" ry="2" />
<text  x="1139.91" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.5" y="437" width="0.2" height="15.0" fill="rgb(206,180,28)" rx="2" ry="2" />
<text  x="13.45" y="447.5" ></text>
</g>
<g >
<title>abstract_type::from_string (1 samples, 0.02%)</title><rect x="11.4" y="1621" width="0.2" height="15.0" fill="rgb(213,88,26)" rx="2" ry="2" />
<text  x="14.36" y="1631.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.08%)</title><rect x="937.9" y="1781" width="0.9" height="15.0" fill="rgb(253,59,10)" rx="2" ry="2" />
<text  x="940.94" y="1791.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;query::read_command&gt;::make&lt;utils::UUID const&amp;, utils::UUID, query::partition_slice, query::max_result_size, query::row_limit, query::partition_limit, std::chrono::time_point&lt;gc_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt; &gt;&amp;, std::optional&lt;tracing::trace_info&gt;, utils::UUID, seastar::bool_class&lt;query::is_first_page_tag&gt; const&amp;, long&gt; (28 samples, 0.54%)</title><rect x="1107.2" y="1845" width="6.3" height="15.0" fill="rgb(236,202,14)" rx="2" ry="2" />
<text  x="1110.19" y="1855.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;std::vector&lt;cql3::query_options, std::allocator&lt;cql3::query_options&gt; &gt; &gt;::_M_reset (1 samples, 0.02%)</title><rect x="685.6" y="1893" width="0.3" height="15.0" fill="rgb(242,104,10)" rx="2" ry="2" />
<text  x="688.65" y="1903.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;managed_bytes&gt;::allocate (2 samples, 0.04%)</title><rect x="937.5" y="1813" width="0.4" height="15.0" fill="rgb(230,91,19)" rx="2" ry="2" />
<text  x="940.48" y="1823.5" ></text>
</g>
<g >
<title>bplus::searcher&lt;dht::decorated_key, long, dht::raw_token_less_comparator, 16ul,  (1 samples, 0.02%)</title><rect x="16.4" y="1941" width="0.2" height="15.0" fill="rgb(209,106,43)" rx="2" ry="2" />
<text  x="19.35" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.5" y="501" width="0.2" height="15.0" fill="rgb(216,148,47)" rx="2" ry="2" />
<text  x="13.45" y="511.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (2 samples, 0.04%)</title><rect x="680.9" y="1893" width="0.4" height="15.0" fill="rgb(240,209,41)" rx="2" ry="2" />
<text  x="683.88" y="1903.5" ></text>
</g>
<g >
<title>mutation_reader_merger::close (77 samples, 1.48%)</title><rect x="570.8" y="1797" width="17.5" height="15.0" fill="rgb(249,54,54)" rx="2" ry="2" />
<text  x="573.85" y="1807.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::~impl (1 samples, 0.02%)</title><rect x="576.5" y="1749" width="0.2" height="15.0" fill="rgb(250,4,29)" rx="2" ry="2" />
<text  x="579.52" y="1759.5" ></text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_token (1 samples, 0.02%)</title><rect x="73.5" y="1781" width="0.3" height="15.0" fill="rgb(242,194,36)" rx="2" ry="2" />
<text  x="76.53" y="1791.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="454.7" y="1669" width="0.2" height="15.0" fill="rgb(254,27,12)" rx="2" ry="2" />
<text  x="457.68" y="1679.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (6 samples, 0.12%)</title><rect x="719.0" y="1877" width="1.4" height="15.0" fill="rgb(216,139,29)" rx="2" ry="2" />
<text  x="722.00" y="1887.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;query::read_command&gt;::dispose (7 samples, 0.13%)</title><rect x="99.8" y="1893" width="1.6" height="15.0" fill="rgb(220,148,54)" rx="2" ry="2" />
<text  x="102.84" y="1903.5" ></text>
</g>
<g >
<title>std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt;::emplace_back&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; (2 samples, 0.04%)</title><rect x="263.9" y="1573" width="0.4" height="15.0" fill="rgb(253,6,17)" rx="2" ry="2" />
<text  x="266.88" y="1583.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_tokenSource (1 samples, 0.02%)</title><rect x="21.1" y="1781" width="0.2" height="15.0" fill="rgb(231,187,5)" rx="2" ry="2" />
<text  x="24.12" y="1791.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (2 samples, 0.04%)</title><rect x="50.4" y="1637" width="0.4" height="15.0" fill="rgb(243,37,39)" rx="2" ry="2" />
<text  x="53.38" y="1647.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::__do_dyncast (2 samples, 0.04%)</title><rect x="12.5" y="2005" width="0.4" height="15.0" fill="rgb(205,64,43)" rx="2" ry="2" />
<text  x="15.50" y="2015.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEENK4$_43clERKNSF_15binary_operatorEEUlRKNSF_12column_valueEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_17tuple_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlNSF_5tokenEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlSS_E_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_11conjunctionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_8constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_21unresolved_identifierEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_25column_mutation_attributeEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13function_callEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4castEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_15field_selectionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4nullEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13bind_variableEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_16untyped_constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_22collection_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_20usertype_constructorEE_EERS4_IJS14_SQ_ST_S11_S1C_S1G_S1K_S1O_S1S_S1W_S20_S24_S18_SX_S28_S2C_EEEJEEESt16integer_sequenceImJLm2EEEE14__visit_invokeES2H_S2J_ (73 samples, 1.40%)</title><rect x="895.3" y="1797" width="16.5" height="15.0" fill="rgb(205,86,1)" rx="2" ry="2" />
<text  x="898.28" y="1807.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (1 samples, 0.02%)</title><rect x="699.0" y="1909" width="0.3" height="15.0" fill="rgb(221,19,11)" rx="2" ry="2" />
<text  x="702.03" y="1919.5" ></text>
</g>
<g >
<title>service::abstract_read_resolver::~abstract_read_resolver (3 samples, 0.06%)</title><rect x="713.1" y="1893" width="0.7" height="15.0" fill="rgb(234,207,13)" rx="2" ry="2" />
<text  x="716.10" y="1903.5" ></text>
</g>
<g >
<title>ser::serializer&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;::write&lt;bytes_ostream&gt; (1 samples, 0.02%)</title><rect x="138.2" y="1589" width="0.2" height="15.0" fill="rgb(249,202,32)" rx="2" ry="2" />
<text  x="141.19" y="1599.5" ></text>
</g>
<g >
<title>antlr3::IntStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::_LA (1 samples, 0.02%)</title><rect x="32.7" y="1669" width="0.2" height="15.0" fill="rgb(253,183,38)" rx="2" ry="2" />
<text  x="35.69" y="1679.5" ></text>
</g>
<g >
<title>seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;::swap (5 samples, 0.10%)</title><rect x="850.6" y="1861" width="1.1" height="15.0" fill="rgb(254,35,42)" rx="2" ry="2" />
<text  x="853.59" y="1871.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (1,033 samples, 19.86%)</title><rect x="883.9" y="1893" width="234.4" height="15.0" fill="rgb(220,216,36)" rx="2" ry="2" />
<text  x="886.94" y="1903.5" >seastar::noncopyable_function&lt;s..</text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.02%)</title><rect x="700.8" y="1525" width="0.3" height="15.0" fill="rgb(242,174,9)" rx="2" ry="2" />
<text  x="703.85" y="1535.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (2 samples, 0.04%)</title><rect x="46.3" y="1685" width="0.5" height="15.0" fill="rgb(253,27,27)" rx="2" ry="2" />
<text  x="49.30" y="1695.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, flat_mutation_reader::impl::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (437 samples, 8.40%)</title><rect x="332.6" y="1733" width="99.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="335.62" y="1743.5" >std::__invok..</text>
</g>
<g >
<title>[perf_simple_query_flame_219f1a43593042f0924f8fe16cb9c27482170876] (1 samples, 0.02%)</title><rect x="763.2" y="1701" width="0.3" height="15.0" fill="rgb(215,210,5)" rx="2" ry="2" />
<text  x="766.24" y="1711.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.02%)</title><rect x="772.1" y="1829" width="0.2" height="15.0" fill="rgb(244,49,35)" rx="2" ry="2" />
<text  x="775.09" y="1839.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, enum_set&lt;super_enum&lt;auth::permission,  (67 samples, 1.29%)</title><rect x="802.7" y="1669" width="15.2" height="15.0" fill="rgb(244,46,47)" rx="2" ry="2" />
<text  x="805.72" y="1679.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (8 samples, 0.15%)</title><rect x="903.2" y="1701" width="1.8" height="15.0" fill="rgb(228,101,20)" rx="2" ry="2" />
<text  x="906.22" y="1711.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::pop_mutation_fragment (10 samples, 0.19%)</title><rect x="296.5" y="1701" width="2.3" height="15.0" fill="rgb(228,33,12)" rx="2" ry="2" />
<text  x="299.55" y="1711.5" ></text>
</g>
<g >
<title>compound_type&lt; (16 samples, 0.31%)</title><rect x="926.8" y="1797" width="3.6" height="15.0" fill="rgb(220,1,10)" rx="2" ry="2" />
<text  x="929.82" y="1807.5" ></text>
</g>
<g >
<title>seastar::reactor_backend_aio::kernel_submit_work (1 samples, 0.02%)</title><rect x="1166.0" y="1925" width="0.2" height="15.0" fill="rgb(223,20,53)" rx="2" ry="2" />
<text  x="1168.95" y="1935.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.02%)</title><rect x="832.2" y="1781" width="0.2" height="15.0" fill="rgb(237,226,18)" rx="2" ry="2" />
<text  x="835.21" y="1791.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (2 samples, 0.04%)</title><rect x="42.4" y="1685" width="0.5" height="15.0" fill="rgb(244,11,0)" rx="2" ry="2" />
<text  x="45.44" y="1695.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (314 samples, 6.04%)</title><rect x="344.0" y="1653" width="71.2" height="15.0" fill="rgb(235,44,42)" rx="2" ry="2" />
<text  x="346.97" y="1663.5" >compact_..</text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::get_value (1 samples, 0.02%)</title><rect x="671.8" y="1909" width="0.2" height="15.0" fill="rgb(234,175,10)" rx="2" ry="2" />
<text  x="674.81" y="1919.5" ></text>
</g>
<g >
<title>std::hash&lt;auth::resource&gt;::operator (7 samples, 0.13%)</title><rect x="827.4" y="1765" width="1.6" height="15.0" fill="rgb(245,205,31)" rx="2" ry="2" />
<text  x="830.45" y="1775.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned char, std::pair&lt;unsigned char const, std::optional&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned char const, std::optional&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned char&gt;, std::hash&lt;unsigned char&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::~_Hashtable (2 samples, 0.04%)</title><rect x="687.2" y="1877" width="0.5" height="15.0" fill="rgb(232,207,17)" rx="2" ry="2" />
<text  x="690.24" y="1887.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_pausable_in_thread&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_compaction&lt;sstables::compacting_sstable_writer, noop_compacted_fragments_consumer&gt; &gt; &gt; &gt;, flat_mutation_reader::no_filter&gt; (1 samples, 0.02%)</title><rect x="17.9" y="1925" width="0.3" height="15.0" fill="rgb(242,206,35)" rx="2" ry="2" />
<text  x="20.94" y="1935.5" ></text>
</g>
<g >
<title>__gnu_cxx::__alloc_traits&lt;std::allocator&lt;char&gt;, char&gt;::_S_select_on_copy (1 samples, 0.02%)</title><rect x="23.2" y="1605" width="0.2" height="15.0" fill="rgb(217,90,28)" rx="2" ry="2" />
<text  x="26.16" y="1615.5" ></text>
</g>
<g >
<title>cql3::query_processor::create_paged_state (1 samples, 0.02%)</title><rect x="11.4" y="1733" width="0.2" height="15.0" fill="rgb(221,28,47)" rx="2" ry="2" />
<text  x="14.36" y="1743.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (1 samples, 0.02%)</title><rect x="645.9" y="1909" width="0.3" height="15.0" fill="rgb(244,126,44)" rx="2" ry="2" />
<text  x="648.94" y="1919.5" ></text>
</g>
<g >
<title>query::result_set::result_set (1 samples, 0.02%)</title><rect x="106.9" y="1733" width="0.2" height="15.0" fill="rgb(205,5,30)" rx="2" ry="2" />
<text  x="109.88" y="1743.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::close (1 samples, 0.02%)</title><rect x="1165.3" y="1861" width="0.2" height="15.0" fill="rgb(228,168,5)" rx="2" ry="2" />
<text  x="1168.27" y="1871.5" ></text>
</g>
<g >
<title>std::optional&lt;reader_concurrency_semaphore::entry&gt;::optional&lt;reader_concurrency_semaphore::entry, true&gt; (1 samples, 0.02%)</title><rect x="1026.0" y="1589" width="0.2" height="15.0" fill="rgb(206,115,23)" rx="2" ry="2" />
<text  x="1028.97" y="1599.5" ></text>
</g>
<g >
<title>nonwrapping_interval&lt;dht::ring_position&gt;::make_singular (7 samples, 0.13%)</title><rect x="924.3" y="1813" width="1.6" height="15.0" fill="rgb(223,122,13)" rx="2" ry="2" />
<text  x="927.32" y="1823.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;cql_transport::messages::result_message::rows, false&gt;::make&lt;cql3::result&gt; (9 samples, 0.17%)</title><rect x="667.5" y="1893" width="2.0" height="15.0" fill="rgb(254,7,15)" rx="2" ry="2" />
<text  x="670.50" y="1903.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;compact_for_query&lt; (1 samples, 0.02%)</title><rect x="434.0" y="1781" width="0.3" height="15.0" fill="rgb(217,138,30)" rx="2" ry="2" />
<text  x="437.04" y="1791.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (1 samples, 0.02%)</title><rect x="53.8" y="1637" width="0.2" height="15.0" fill="rgb(248,182,27)" rx="2" ry="2" />
<text  x="56.79" y="1647.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (5 samples, 0.10%)</title><rect x="984.7" y="1701" width="1.1" height="15.0" fill="rgb(221,217,16)" rx="2" ry="2" />
<text  x="987.67" y="1711.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector (4 samples, 0.08%)</title><rect x="1154.8" y="1893" width="0.9" height="15.0" fill="rgb(214,57,27)" rx="2" ry="2" />
<text  x="1157.83" y="1903.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::on_new_range (43 samples, 0.83%)</title><rect x="196.9" y="1669" width="9.8" height="15.0" fill="rgb(239,197,53)" rx="2" ry="2" />
<text  x="199.95" y="1679.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (1 samples, 0.02%)</title><rect x="645.0" y="1893" width="0.3" height="15.0" fill="rgb(236,1,1)" rx="2" ry="2" />
<text  x="648.04" y="1903.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mHEXNUMBER (14 samples, 0.27%)</title><rect x="29.3" y="1685" width="3.2" height="15.0" fill="rgb(230,200,3)" rx="2" ry="2" />
<text  x="32.28" y="1695.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (5 samples, 0.10%)</title><rect x="590.4" y="1781" width="1.1" height="15.0" fill="rgb(246,140,9)" rx="2" ry="2" />
<text  x="593.36" y="1791.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_create_nodes (10 samples, 0.19%)</title><rect x="564.9" y="1781" width="2.3" height="15.0" fill="rgb(243,64,25)" rx="2" ry="2" />
<text  x="567.95" y="1791.5" ></text>
</g>
<g >
<title>seastar::internal::coroutine_traits_base&lt;void&gt;::promise_type::run_and_dispose (1 samples, 0.02%)</title><rect x="87.8" y="1941" width="0.2" height="15.0" fill="rgb(249,34,9)" rx="2" ry="2" />
<text  x="90.82" y="1951.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (1 samples, 0.02%)</title><rect x="1165.0" y="1925" width="0.3" height="15.0" fill="rgb(209,76,1)" rx="2" ry="2" />
<text  x="1168.04" y="1935.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;query::querier&lt; (26 samples, 0.50%)</title><rect x="627.6" y="1861" width="5.9" height="15.0" fill="rgb(216,116,33)" rx="2" ry="2" />
<text  x="630.57" y="1871.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::consume_with&lt;row::apply_monotonically (1 samples, 0.02%)</title><rect x="16.6" y="1925" width="0.2" height="15.0" fill="rgb(219,95,27)" rx="2" ry="2" />
<text  x="19.58" y="1935.5" ></text>
</g>
<g >
<title>std::optional&lt;mutation_querier&gt;::emplace&lt;mutation_querier&gt; (1 samples, 0.02%)</title><rect x="352.1" y="1621" width="0.3" height="15.0" fill="rgb(217,57,50)" rx="2" ry="2" />
<text  x="355.13" y="1631.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.08%)</title><rect x="854.7" y="1829" width="0.9" height="15.0" fill="rgb(229,79,23)" rx="2" ry="2" />
<text  x="857.67" y="1839.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_destroy_data (2 samples, 0.04%)</title><rect x="393.9" y="1589" width="0.4" height="15.0" fill="rgb(212,7,2)" rx="2" ry="2" />
<text  x="396.88" y="1599.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_push_back_aux&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (4 samples, 0.08%)</title><rect x="23.6" y="1685" width="0.9" height="15.0" fill="rgb(214,122,10)" rx="2" ry="2" />
<text  x="26.61" y="1695.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value, std::allocator&lt;cql3::raw_value&gt; &gt;::~vector (3 samples, 0.06%)</title><rect x="866.0" y="1861" width="0.7" height="15.0" fill="rgb(244,163,30)" rx="2" ry="2" />
<text  x="869.02" y="1871.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="17.9" y="1189" width="0.3" height="15.0" fill="rgb(232,154,53)" rx="2" ry="2" />
<text  x="20.94" y="1199.5" ></text>
</g>
<g >
<title>mutation::set_clustered_cell (1 samples, 0.02%)</title><rect x="106.2" y="1893" width="0.2" height="15.0" fill="rgb(245,12,18)" rx="2" ry="2" />
<text  x="109.20" y="1903.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::alter_view_statement, std::default_delete&lt;cql3::statements::alter_view_statement&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="65.4" y="1813" width="0.2" height="15.0" fill="rgb(252,60,32)" rx="2" ry="2" />
<text  x="68.36" y="1823.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (6 samples, 0.12%)</title><rect x="699.3" y="1877" width="1.3" height="15.0" fill="rgb(240,59,8)" rx="2" ry="2" />
<text  x="702.26" y="1887.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;gms::inet_address, std::pair&lt;gms::inet_address const, service::view_update_backlog_timestamped&gt;, std::allocator&lt;std::pair&lt;gms::inet_address const, service::view_update_backlog_timestamped&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;gms::inet_address&gt;, std::hash&lt;gms::inet_address&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (1 samples, 0.02%)</title><rect x="730.1" y="1813" width="0.2" height="15.0" fill="rgb(240,8,43)" rx="2" ry="2" />
<text  x="733.12" y="1823.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (3 samples, 0.06%)</title><rect x="45.4" y="1669" width="0.7" height="15.0" fill="rgb(217,71,50)" rx="2" ry="2" />
<text  x="48.39" y="1679.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::do_flush (1,050 samples, 20.19%)</title><rect x="880.5" y="1909" width="238.3" height="15.0" fill="rgb(248,172,19)" rx="2" ry="2" />
<text  x="883.54" y="1919.5" >seastar::concrete_execution_sta..</text>
</g>
<g >
<title>managed_bytes::~managed_bytes (1 samples, 0.02%)</title><rect x="425.4" y="1637" width="0.2" height="15.0" fill="rgb(244,122,51)" rx="2" ry="2" />
<text  x="428.42" y="1647.5" ></text>
</g>
<g >
<title>schema_builder::build (1 samples, 0.02%)</title><rect x="17.3" y="1685" width="0.2" height="15.0" fill="rgb(221,9,10)" rx="2" ry="2" />
<text  x="20.26" y="1695.5" ></text>
</g>
<g >
<title>std::optional&lt;dht::decorated_key&gt;::emplace&lt;dht::decorated_key&gt; (1 samples, 0.02%)</title><rect x="419.1" y="1669" width="0.2" height="15.0" fill="rgb(246,158,34)" rx="2" ry="2" />
<text  x="422.06" y="1679.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::statements::drop_keyspace_statement, std::default_delete&lt;cql3::statements::drop_keyspace_statement&gt;, true, true&gt;::__uniq_ptr_data (1 samples, 0.02%)</title><rect x="64.7" y="1781" width="0.2" height="15.0" fill="rgb(248,177,31)" rx="2" ry="2" />
<text  x="67.68" y="1791.5" ></text>
</g>
<g >
<title>cql3::authorized_prepared_statements_cache_key::hash (21 samples, 0.40%)</title><rect x="762.6" y="1749" width="4.7" height="15.0" fill="rgb(220,175,45)" rx="2" ry="2" />
<text  x="765.56" y="1759.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::vector (20 samples, 0.38%)</title><rect x="1038.7" y="1701" width="4.5" height="15.0" fill="rgb(243,179,29)" rx="2" ry="2" />
<text  x="1041.67" y="1711.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.02%)</title><rect x="59.5" y="1605" width="0.2" height="15.0" fill="rgb(240,89,20)" rx="2" ry="2" />
<text  x="62.46" y="1615.5" ></text>
</g>
<g >
<title>row::compact_and_expire (2 samples, 0.04%)</title><rect x="699.9" y="1717" width="0.5" height="15.0" fill="rgb(205,224,0)" rx="2" ry="2" />
<text  x="702.94" y="1727.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; const*, nonwrapping_interval&lt;clustering_key_prefix&gt;*&gt; (3 samples, 0.06%)</title><rect x="1099.2" y="1781" width="0.7" height="15.0" fill="rgb(241,211,46)" rx="2" ry="2" />
<text  x="1102.25" y="1791.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (2 samples, 0.04%)</title><rect x="274.3" y="1653" width="0.5" height="15.0" fill="rgb(210,205,43)" rx="2" ry="2" />
<text  x="277.31" y="1663.5" ></text>
</g>
<g >
<title>antlr3::IntStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::consume (3 samples, 0.06%)</title><rect x="31.8" y="1669" width="0.7" height="15.0" fill="rgb(213,187,33)" rx="2" ry="2" />
<text  x="34.78" y="1679.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.02%)</title><rect x="16.8" y="1925" width="0.2" height="15.0" fill="rgb(244,29,45)" rx="2" ry="2" />
<text  x="19.81" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.5" y="1301" width="0.2" height="15.0" fill="rgb(247,126,9)" rx="2" ry="2" />
<text  x="13.45" y="1311.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_rehash (10 samples, 0.19%)</title><rect x="1147.6" y="1861" width="2.2" height="15.0" fill="rgb(227,189,44)" rx="2" ry="2" />
<text  x="1150.57" y="1871.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (28 samples, 0.54%)</title><rect x="230.3" y="1509" width="6.4" height="15.0" fill="rgb(219,108,26)" rx="2" ry="2" />
<text  x="233.30" y="1519.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;partition_snapshot&gt;::make&lt;seastar::lw_shared_ptr&lt;schema const&gt;&amp;, logalloc::region&amp;, mutation_cleaner&amp;, partition_entry*, cache_tracker*&amp;, unsigned long&amp;&gt; (4 samples, 0.08%)</title><rect x="533.4" y="1717" width="0.9" height="15.0" fill="rgb(215,151,20)" rx="2" ry="2" />
<text  x="536.41" y="1727.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (1 samples, 0.02%)</title><rect x="874.0" y="1877" width="0.2" height="15.0" fill="rgb(220,73,15)" rx="2" ry="2" />
<text  x="876.96" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.02%)</title><rect x="869.4" y="1845" width="0.2" height="15.0" fill="rgb(215,143,37)" rx="2" ry="2" />
<text  x="872.42" y="1855.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (1 samples, 0.02%)</title><rect x="730.3" y="1909" width="0.3" height="15.0" fill="rgb(239,136,27)" rx="2" ry="2" />
<text  x="733.34" y="1919.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::statements::raw::select_statement, std::default_delete&lt;cql3::statements::raw::select_statement&gt;, true, true&gt;::__uniq_ptr_data (1 samples, 0.02%)</title><rect x="64.9" y="1781" width="0.2" height="15.0" fill="rgb(232,158,26)" rx="2" ry="2" />
<text  x="67.90" y="1791.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::iterator::operator* (1 samples, 0.02%)</title><rect x="76.2" y="1829" width="0.3" height="15.0" fill="rgb(224,17,50)" rx="2" ry="2" />
<text  x="79.25" y="1839.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;int&gt;  (1 samples, 0.02%)</title><rect x="730.3" y="1893" width="0.3" height="15.0" fill="rgb(227,212,34)" rx="2" ry="2" />
<text  x="733.34" y="1903.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::operator (1 samples, 0.02%)</title><rect x="1132.6" y="1589" width="0.2" height="15.0" fill="rgb(226,128,37)" rx="2" ry="2" />
<text  x="1135.60" y="1599.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.02%)</title><rect x="57.2" y="1733" width="0.2" height="15.0" fill="rgb(231,145,6)" rx="2" ry="2" />
<text  x="60.19" y="1743.5" ></text>
</g>
<g >
<title>auth::permissions_cache::get (1 samples, 0.02%)</title><rect x="799.8" y="1717" width="0.2" height="15.0" fill="rgb(214,59,23)" rx="2" ry="2" />
<text  x="802.77" y="1727.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::find (6 samples, 0.12%)</title><rect x="664.3" y="1845" width="1.4" height="15.0" fill="rgb(233,40,7)" rx="2" ry="2" />
<text  x="667.32" y="1855.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt; &gt;::satisfy_with_result_of&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::then_wrapped_nrvo&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (10 samples, 0.19%)</title><rect x="680.4" y="1909" width="2.3" height="15.0" fill="rgb(227,124,51)" rx="2" ry="2" />
<text  x="683.43" y="1919.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (5 samples, 0.10%)</title><rect x="798.6" y="1685" width="1.2" height="15.0" fill="rgb(232,121,54)" rx="2" ry="2" />
<text  x="801.63" y="1695.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (1 samples, 0.02%)</title><rect x="1166.9" y="2053" width="0.2" height="15.0" fill="rgb(237,10,34)" rx="2" ry="2" />
<text  x="1169.86" y="2063.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::cql_statement&gt;::~shared_ptr (2 samples, 0.04%)</title><rect x="772.3" y="1829" width="0.5" height="15.0" fill="rgb(209,149,1)" rx="2" ry="2" />
<text  x="775.31" y="1839.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (7 samples, 0.13%)</title><rect x="989.4" y="1669" width="1.6" height="15.0" fill="rgb(230,157,42)" rx="2" ry="2" />
<text  x="992.44" y="1679.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (2 samples, 0.04%)</title><rect x="475.3" y="1765" width="0.5" height="15.0" fill="rgb(232,107,30)" rx="2" ry="2" />
<text  x="478.33" y="1775.5" ></text>
</g>
<g >
<title>std::__apply_impl&lt;seastar::sharded&lt;service::storage_proxy&gt;::start&lt;std::reference_wrapper&lt;seastar::sharded&lt;database&gt; &gt;, std::reference_wrapper&lt;seastar::sharded&lt;gms::gossiper&gt; &gt;, service::storage_proxy::config&amp;, std::reference_wrapper&lt;db::view::node_update_backlog&gt;, seastar::scheduling_group_key, std::reference_wrapper&lt;seastar::sharded&lt;gms::feature_service&gt; &gt;, std::reference_wrapper&lt;seastar::sharded&lt;locator::shared_token_metadata&gt; &gt;, std::reference_wrapper&lt;seastar::sharded&lt;netw::messaging_service&gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="17.5" y="1861" width="0.2" height="15.0" fill="rgb(233,111,1)" rx="2" ry="2" />
<text  x="20.49" y="1871.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::check_queue_size (1 samples, 0.02%)</title><rect x="1020.1" y="1621" width="0.2" height="15.0" fill="rgb(246,61,7)" rx="2" ry="2" />
<text  x="1023.07" y="1631.5" ></text>
</g>
<g >
<title>service::client_state::has_access (178 samples, 3.42%)</title><rect x="789.1" y="1797" width="40.4" height="15.0" fill="rgb(248,28,48)" rx="2" ry="2" />
<text  x="792.10" y="1807.5" >ser..</text>
</g>
<g >
<title>absl::hash_internal::AbslHashValue&lt;absl::hash_internal::HashState&gt; (4 samples, 0.08%)</title><rect x="853.1" y="1781" width="0.9" height="15.0" fill="rgb(235,106,16)" rx="2" ry="2" />
<text  x="856.08" y="1791.5" ></text>
</g>
<g >
<title>seastar::futurize_invoke&lt;seastar::future&lt;void&gt;  (1 samples, 0.02%)</title><rect x="700.6" y="1845" width="0.2" height="15.0" fill="rgb(224,116,16)" rx="2" ry="2" />
<text  x="703.62" y="1855.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.02%)</title><rect x="46.8" y="1557" width="0.2" height="15.0" fill="rgb(250,90,18)" rx="2" ry="2" />
<text  x="49.75" y="1567.5" ></text>
</g>
<g >
<title>db::assure_sufficient_live_nodes&lt;utils::small_vector&lt;gms::inet_address, 3ul&gt;, utils::small_vector&lt;gms::inet_address, 1ul&gt; &gt; (1 samples, 0.02%)</title><rect x="1132.1" y="1621" width="0.3" height="15.0" fill="rgb(239,148,19)" rx="2" ry="2" />
<text  x="1135.15" y="1631.5" ></text>
</g>
<g >
<title>db::schema_tables::do_merge_schema (5 samples, 0.10%)</title><rect x="106.4" y="1925" width="1.2" height="15.0" fill="rgb(219,97,38)" rx="2" ry="2" />
<text  x="109.42" y="1935.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureINS_10bool_classIN22mutation_reader_merger15needs_merge_tagEEEE9then_implIZNS5_14discard_resultEvEUlDpOT_E_NS0_IvEEEET0_OT_ (3 samples, 0.06%)</title><rect x="178.1" y="1701" width="0.7" height="15.0" fill="rgb(212,62,38)" rx="2" ry="2" />
<text  x="181.12" y="1711.5" ></text>
</g>
<g >
<title>db::schema_tables::calculate_schema_digest (1 samples, 0.02%)</title><rect x="107.6" y="1877" width="0.2" height="15.0" fill="rgb(237,122,45)" rx="2" ry="2" />
<text  x="110.56" y="1887.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;::basic_sstring (1 samples, 0.02%)</title><rect x="737.6" y="1893" width="0.2" height="15.0" fill="rgb(235,148,34)" rx="2" ry="2" />
<text  x="740.60" y="1903.5" ></text>
</g>
<g >
<title>service::endpoints_to_replica_ids (14 samples, 0.27%)</title><rect x="1142.4" y="1893" width="3.1" height="15.0" fill="rgb(215,65,19)" rx="2" ry="2" />
<text  x="1145.36" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.5" y="1589" width="0.2" height="15.0" fill="rgb(254,202,0)" rx="2" ry="2" />
<text  x="13.45" y="1599.5" ></text>
</g>
<g >
<title>__sigsetjmp (1 samples, 0.02%)</title><rect x="1165.7" y="1845" width="0.3" height="15.0" fill="rgb(220,220,42)" rx="2" ry="2" />
<text  x="1168.72" y="1855.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;::__uniq_ptr_impl (1 samples, 0.02%)</title><rect x="49.0" y="1525" width="0.3" height="15.0" fill="rgb(219,91,1)" rx="2" ry="2" />
<text  x="52.02" y="1535.5" ></text>
</g>
<g >
<title>db::schema_tables::read_tables_for_keyspaces (1 samples, 0.02%)</title><rect x="107.3" y="1909" width="0.3" height="15.0" fill="rgb(252,96,50)" rx="2" ry="2" />
<text  x="110.33" y="1919.5" ></text>
</g>
<g >
<title>seastar::promise&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::promise (2 samples, 0.04%)</title><rect x="1135.5" y="1909" width="0.5" height="15.0" fill="rgb(237,212,28)" rx="2" ry="2" />
<text  x="1138.55" y="1919.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="47.2" y="1653" width="0.2" height="15.0" fill="rgb(238,70,42)" rx="2" ry="2" />
<text  x="50.21" y="1663.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.02%)</title><rect x="700.8" y="1669" width="0.3" height="15.0" fill="rgb(230,14,52)" rx="2" ry="2" />
<text  x="703.85" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::at (2 samples, 0.04%)</title><rect x="1011.2" y="1653" width="0.5" height="15.0" fill="rgb(210,214,25)" rx="2" ry="2" />
<text  x="1014.22" y="1663.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (8 samples, 0.15%)</title><rect x="967.4" y="1765" width="1.8" height="15.0" fill="rgb(212,217,41)" rx="2" ry="2" />
<text  x="970.43" y="1775.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::move_it (1 samples, 0.02%)</title><rect x="978.5" y="1765" width="0.3" height="15.0" fill="rgb(247,191,12)" rx="2" ry="2" />
<text  x="981.55" y="1775.5" ></text>
</g>
<g >
<title>operator delete (6 samples, 0.12%)</title><rect x="603.5" y="1829" width="1.4" height="15.0" fill="rgb(235,188,23)" rx="2" ry="2" />
<text  x="606.52" y="1839.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (2 samples, 0.04%)</title><rect x="47.0" y="1717" width="0.4" height="15.0" fill="rgb(246,92,9)" rx="2" ry="2" />
<text  x="49.98" y="1727.5" ></text>
</g>
<g >
<title>service::client_state::ensure_has_permission (7 samples, 0.13%)</title><rect x="77.4" y="1845" width="1.6" height="15.0" fill="rgb(210,225,6)" rx="2" ry="2" />
<text  x="80.38" y="1855.5" ></text>
</g>
<g >
<title>__strlen_avx2 (1 samples, 0.02%)</title><rect x="26.3" y="1685" width="0.3" height="15.0" fill="rgb(209,183,50)" rx="2" ry="2" />
<text  x="29.34" y="1695.5" ></text>
</g>
<g >
<title>seastar::do_until&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (447 samples, 8.59%)</title><rect x="191.7" y="1717" width="101.4" height="15.0" fill="rgb(223,63,6)" rx="2" ry="2" />
<text  x="194.73" y="1727.5" >seastar::do_..</text>
</g>
<g >
<title>schema::cdc_options (1 samples, 0.02%)</title><rect x="875.3" y="1781" width="0.2" height="15.0" fill="rgb(214,189,9)" rx="2" ry="2" />
<text  x="878.32" y="1791.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (2 samples, 0.04%)</title><rect x="45.6" y="1637" width="0.5" height="15.0" fill="rgb(206,69,23)" rx="2" ry="2" />
<text  x="48.62" y="1647.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::get0 (3 samples, 0.06%)</title><rect x="166.3" y="1797" width="0.7" height="15.0" fill="rgb(223,214,14)" rx="2" ry="2" />
<text  x="169.32" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::at (7 samples, 0.13%)</title><rect x="833.8" y="1749" width="1.6" height="15.0" fill="rgb(215,48,40)" rx="2" ry="2" />
<text  x="836.80" y="1759.5" ></text>
</g>
<g >
<title>partition_snapshot::get_change_mark (1 samples, 0.02%)</title><rect x="257.8" y="1605" width="0.2" height="15.0" fill="rgb(214,169,48)" rx="2" ry="2" />
<text  x="260.75" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::constant&gt;  (4 samples, 0.08%)</title><rect x="907.3" y="1781" width="0.9" height="15.0" fill="rgb(215,85,46)" rx="2" ry="2" />
<text  x="910.31" y="1791.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::~vector (2 samples, 0.04%)</title><rect x="647.8" y="1893" width="0.4" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="650.76" y="1903.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_map&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::at&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt; &gt; (22 samples, 0.42%)</title><rect x="776.2" y="1797" width="5.0" height="15.0" fill="rgb(225,0,2)" rx="2" ry="2" />
<text  x="779.17" y="1807.5" ></text>
</g>
<g >
<title>query_result_builder::consume_end_of_partition (9 samples, 0.17%)</title><rect x="341.5" y="1653" width="2.0" height="15.0" fill="rgb(239,99,40)" rx="2" ry="2" />
<text  x="344.47" y="1663.5" ></text>
</g>
<g >
<title>seastar::chunked_fifo&lt;seastar::concrete_execution_stage&lt;seastar::future&lt;void&gt;, database*, seastar::lw_shared_ptr&lt;schema const&gt;, frozen_mutation const&amp;, tracing::trace_state_ptr, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, seastar::bool_class&lt;db::force_sync_tag&gt; &gt;::work_item, 128ul&gt;::back_chunk_new (1 samples, 0.02%)</title><rect x="1128.3" y="1541" width="0.2" height="15.0" fill="rgb(226,32,20)" rx="2" ry="2" />
<text  x="1131.29" y="1551.5" ></text>
</g>
<g >
<title>partition_snapshot::versions (1 samples, 0.02%)</title><rect x="270.7" y="1541" width="0.2" height="15.0" fill="rgb(252,80,23)" rx="2" ry="2" />
<text  x="273.68" y="1551.5" ></text>
</g>
<g >
<title>seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;::check (1 samples, 0.02%)</title><rect x="843.3" y="1845" width="0.3" height="15.0" fill="rgb(218,107,42)" rx="2" ry="2" />
<text  x="846.33" y="1855.5" ></text>
</g>
<g >
<title>seastar::data_source::get (1 samples, 0.02%)</title><rect x="17.9" y="1573" width="0.3" height="15.0" fill="rgb(235,27,10)" rx="2" ry="2" />
<text  x="20.94" y="1583.5" ></text>
</g>
<g >
<title>service::never_speculating_read_executor::~never_speculating_read_executor (14 samples, 0.27%)</title><rect x="1161.9" y="1877" width="3.1" height="15.0" fill="rgb(206,209,7)" rx="2" ry="2" />
<text  x="1164.87" y="1887.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;service::digest_read_resolver&gt;::shared_ptr_count_for&lt;seastar::lw_shared_ptr&lt;schema const&gt;&amp;, db::consistency_level&amp;, unsigned long&amp;, unsigned long, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;&amp;&gt; (26 samples, 0.50%)</title><rect x="981.0" y="1749" width="5.9" height="15.0" fill="rgb(213,189,32)" rx="2" ry="2" />
<text  x="984.04" y="1759.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="1178.4" y="2053" width="0.3" height="15.0" fill="rgb(215,90,43)" rx="2" ry="2" />
<text  x="1181.43" y="2063.5" ></text>
</g>
<g >
<title>seastar::metrics::impl::metric_groups_impl::~metric_groups_impl (1 samples, 0.02%)</title><rect x="12.3" y="1973" width="0.2" height="15.0" fill="rgb(217,131,47)" rx="2" ry="2" />
<text  x="15.27" y="1983.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::operation::set_value, std::default_delete&lt;cql3::operation::set_value&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="56.5" y="1669" width="0.2" height="15.0" fill="rgb(249,90,23)" rx="2" ry="2" />
<text  x="59.51" y="1679.5" ></text>
</g>
<g >
<title>query::result::result (1 samples, 0.02%)</title><rect x="609.6" y="1861" width="0.3" height="15.0" fill="rgb(236,172,54)" rx="2" ry="2" />
<text  x="612.64" y="1871.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEE4$_44ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_45ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_43ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_46ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_47ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_48ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_49ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_50ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_51ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_52ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_53ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_54ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_55ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_56ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_57ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_58EERS4_IJNSF_11conjunctionENSF_15binary_operatorENSF_12column_valueENSF_5tokenENSF_21unresolved_identifierENSF_25column_mutation_attributeENSF_13function_callENSF_4castENSF_15field_selectionENSF_4nullENSF_13bind_variableENSF_16untyped_constantENSF_8constantENSF_17tuple_constructorENSF_22collection_constructorENSF_20usertype_constructorEEEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES16_S1O_ (79 samples, 1.52%)</title><rect x="894.6" y="1813" width="17.9" height="15.0" fill="rgb(241,169,47)" rx="2" ry="2" />
<text  x="897.60" y="1823.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="1131.5" y="1477" width="0.2" height="15.0" fill="rgb(231,125,23)" rx="2" ry="2" />
<text  x="1134.47" y="1487.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="1106.1" y="1829" width="0.2" height="15.0" fill="rgb(216,228,34)" rx="2" ry="2" />
<text  x="1109.05" y="1839.5" ></text>
</g>
<g >
<title>row::row (1 samples, 0.02%)</title><rect x="291.6" y="1621" width="0.2" height="15.0" fill="rgb(230,228,15)" rx="2" ry="2" />
<text  x="294.56" y="1631.5" ></text>
</g>
<g >
<title>do_lookup_x (1 samples, 0.02%)</title><rect x="1178.2" y="2053" width="0.2" height="15.0" fill="rgb(233,81,52)" rx="2" ry="2" />
<text  x="1181.20" y="2063.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_move_assign (2 samples, 0.04%)</title><rect x="454.5" y="1685" width="0.4" height="15.0" fill="rgb(237,183,39)" rx="2" ry="2" />
<text  x="457.46" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.5" y="1013" width="0.2" height="15.0" fill="rgb(215,49,33)" rx="2" ry="2" />
<text  x="13.45" y="1023.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (2 samples, 0.04%)</title><rect x="825.9" y="1717" width="0.4" height="15.0" fill="rgb(228,62,51)" rx="2" ry="2" />
<text  x="828.86" y="1727.5" ></text>
</g>
<g >
<title>all (5,201 samples, 100%)</title><rect x="10.0" y="2085" width="1180.0" height="15.0" fill="rgb(223,72,52)" rx="2" ry="2" />
<text  x="13.00" y="2095.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::do_fill_buffer (4 samples, 0.08%)</title><rect x="82.4" y="1749" width="0.9" height="15.0" fill="rgb(251,209,10)" rx="2" ry="2" />
<text  x="85.37" y="1759.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.02%)</title><rect x="761.9" y="1701" width="0.2" height="15.0" fill="rgb(245,45,50)" rx="2" ry="2" />
<text  x="764.88" y="1711.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (2 samples, 0.04%)</title><rect x="78.3" y="1637" width="0.4" height="15.0" fill="rgb(205,153,50)" rx="2" ry="2" />
<text  x="81.29" y="1647.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql3::query_options&gt;::~shared_ptr_count_for (1 samples, 0.02%)</title><rect x="1136.7" y="1925" width="0.2" height="15.0" fill="rgb(221,175,51)" rx="2" ry="2" />
<text  x="1139.68" y="1935.5" ></text>
</g>
<g >
<title>utils::directories::verify_owner_and_mode (1 samples, 0.02%)</title><rect x="730.6" y="1909" width="0.2" height="15.0" fill="rgb(219,128,29)" rx="2" ry="2" />
<text  x="733.57" y="1919.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;clustering_key_prefix&gt;::_M_reset (1 samples, 0.02%)</title><rect x="137.3" y="1877" width="0.2" height="15.0" fill="rgb(239,178,45)" rx="2" ry="2" />
<text  x="140.28" y="1887.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (3 samples, 0.06%)</title><rect x="933.4" y="1829" width="0.7" height="15.0" fill="rgb(215,58,37)" rx="2" ry="2" />
<text  x="936.40" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.5" y="741" width="0.2" height="15.0" fill="rgb(241,69,36)" rx="2" ry="2" />
<text  x="13.45" y="751.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::followPush (1 samples, 0.02%)</title><rect x="36.5" y="1797" width="0.3" height="15.0" fill="rgb(218,145,17)" rx="2" ry="2" />
<text  x="39.54" y="1807.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::operator (1 samples, 0.02%)</title><rect x="874.0" y="1909" width="0.2" height="15.0" fill="rgb(214,128,33)" rx="2" ry="2" />
<text  x="876.96" y="1919.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::forward_to (3 samples, 0.06%)</title><rect x="731.7" y="1925" width="0.7" height="15.0" fill="rgb(223,97,48)" rx="2" ry="2" />
<text  x="734.70" y="1935.5" ></text>
</g>
<g >
<title>service::client_state::check_has_permission (7 samples, 0.13%)</title><rect x="77.4" y="1829" width="1.6" height="15.0" fill="rgb(251,165,26)" rx="2" ry="2" />
<text  x="80.38" y="1839.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.02%)</title><rect x="730.3" y="1749" width="0.3" height="15.0" fill="rgb(216,137,41)" rx="2" ry="2" />
<text  x="733.34" y="1759.5" ></text>
</g>
<g >
<title>allocation_strategy::get_standard_migrator&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::leaf_node&gt; (3 samples, 0.06%)</title><rect x="241.2" y="1509" width="0.7" height="15.0" fill="rgb(209,213,13)" rx="2" ry="2" />
<text  x="244.19" y="1519.5" ></text>
</g>
<g >
<title>bplus::node&lt;long, intrusive_array&lt;memtable_entry&gt;, dht::raw_token_less_comparator, 16ul,  (1 samples, 0.02%)</title><rect x="1120.6" y="1573" width="0.2" height="15.0" fill="rgb(243,193,26)" rx="2" ry="2" />
<text  x="1123.57" y="1583.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="47.2" y="1685" width="0.2" height="15.0" fill="rgb(232,205,30)" rx="2" ry="2" />
<text  x="50.21" y="1695.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::deallocate (2 samples, 0.04%)</title><rect x="200.6" y="1637" width="0.4" height="15.0" fill="rgb(208,156,29)" rx="2" ry="2" />
<text  x="203.58" y="1647.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (447 samples, 8.59%)</title><rect x="191.7" y="1733" width="101.4" height="15.0" fill="rgb(207,210,48)" rx="2" ry="2" />
<text  x="194.73" y="1743.5" >partition_sn..</text>
</g>
<g >
<title>seastar::do_until&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (1 samples, 0.02%)</title><rect x="874.0" y="1845" width="0.2" height="15.0" fill="rgb(219,36,8)" rx="2" ry="2" />
<text  x="876.96" y="1855.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;void&gt;  (1 samples, 0.02%)</title><rect x="17.5" y="1909" width="0.2" height="15.0" fill="rgb(206,95,25)" rx="2" ry="2" />
<text  x="20.49" y="1919.5" ></text>
</g>
<g >
<title>row_cache::do_update (1 samples, 0.02%)</title><rect x="11.8" y="1973" width="0.2" height="15.0" fill="rgb(235,61,29)" rx="2" ry="2" />
<text  x="14.82" y="1983.5" ></text>
</g>
<g >
<title>sstables::write (1 samples, 0.02%)</title><rect x="698.8" y="1637" width="0.2" height="15.0" fill="rgb(253,203,15)" rx="2" ry="2" />
<text  x="701.81" y="1647.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="100.5" y="1861" width="0.3" height="15.0" fill="rgb(214,90,36)" rx="2" ry="2" />
<text  x="103.52" y="1871.5" ></text>
</g>
<g >
<title>db::system_distributed_keyspace::create_cdc_desc (1 samples, 0.02%)</title><rect x="101.7" y="1909" width="0.2" height="15.0" fill="rgb(211,17,41)" rx="2" ry="2" />
<text  x="104.66" y="1919.5" ></text>
</g>
<g >
<title>deletable_row::apply (1 samples, 0.02%)</title><rect x="1121.9" y="1653" width="0.3" height="15.0" fill="rgb(238,57,9)" rx="2" ry="2" />
<text  x="1124.94" y="1663.5" ></text>
</g>
<g >
<title>tombstone::apply (1 samples, 0.02%)</title><rect x="413.6" y="1621" width="0.2" height="15.0" fill="rgb(251,102,7)" rx="2" ry="2" />
<text  x="416.62" y="1631.5" ></text>
</g>
<g >
<title>mutation_partition::clustered_row (1 samples, 0.02%)</title><rect x="106.2" y="1877" width="0.2" height="15.0" fill="rgb(207,40,0)" rx="2" ry="2" />
<text  x="109.20" y="1887.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (1 samples, 0.02%)</title><rect x="704.0" y="1893" width="0.3" height="15.0" fill="rgb(251,78,20)" rx="2" ry="2" />
<text  x="707.02" y="1903.5" ></text>
</g>
<g >
<title>bplus::node&lt;long, intrusive_array&lt;cache_entry&gt;, dht::raw_token_less_comparator, 16ul,  (1 samples, 0.02%)</title><rect x="16.1" y="1957" width="0.3" height="15.0" fill="rgb(236,78,26)" rx="2" ry="2" />
<text  x="19.13" y="1967.5" ></text>
</g>
<g >
<title>cql3::statements::raw::update_statement::update_statement (1 samples, 0.02%)</title><rect x="61.3" y="1765" width="0.2" height="15.0" fill="rgb(230,109,16)" rx="2" ry="2" />
<text  x="64.27" y="1775.5" ></text>
</g>
<g >
<title>_ZSt5applyIZN7seastar8internal12do_with_implISt4pairIN4auth17role_or_anonymousENS4_8resourceEEZNS4_17permissions_cache3getERKS5_RKS6_E3$_0JEEEDaOT_OT0_DpOT1_EUlDpOT_E_St5tupleIJOS7_EEEDcSF_SH_ (6 samples, 0.12%)</title><rect x="800.9" y="1685" width="1.4" height="15.0" fill="rgb(216,171,27)" rx="2" ry="2" />
<text  x="803.90" y="1695.5" ></text>
</g>
<g >
<title>seastar::futurize_invoke&lt;seastar::future&lt;reconcilable_result&gt;  (1 samples, 0.02%)</title><rect x="138.2" y="1765" width="0.2" height="15.0" fill="rgb(209,227,27)" rx="2" ry="2" />
<text  x="141.19" y="1775.5" ></text>
</g>
<g >
<title>seastar::reactor::~reactor (1 samples, 0.02%)</title><rect x="12.3" y="2005" width="0.2" height="15.0" fill="rgb(241,26,47)" rx="2" ry="2" />
<text  x="15.27" y="2015.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.04%)</title><rect x="684.7" y="1893" width="0.5" height="15.0" fill="rgb(219,191,35)" rx="2" ry="2" />
<text  x="687.74" y="1903.5" ></text>
</g>
<g >
<title>schema::column_at (5 samples, 0.10%)</title><rect x="254.3" y="1525" width="1.2" height="15.0" fill="rgb(213,141,19)" rx="2" ry="2" />
<text  x="257.35" y="1535.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::_M_check_len (1 samples, 0.02%)</title><rect x="48.6" y="1685" width="0.2" height="15.0" fill="rgb(228,55,38)" rx="2" ry="2" />
<text  x="51.57" y="1695.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="308.8" y="1733" width="0.2" height="15.0" fill="rgb(249,195,5)" rx="2" ry="2" />
<text  x="311.80" y="1743.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.06%)</title><rect x="591.9" y="1781" width="0.7" height="15.0" fill="rgb(219,174,0)" rx="2" ry="2" />
<text  x="594.95" y="1791.5" ></text>
</g>
<g >
<title>seastar::internal::extract_values_from_futures_tuple&lt;seastar::future&lt;void&gt;, seastar::future&lt;void&gt; &gt;::set_promise (1 samples, 0.02%)</title><rect x="874.2" y="1877" width="0.2" height="15.0" fill="rgb(252,192,27)" rx="2" ry="2" />
<text  x="877.18" y="1887.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="49.0" y="1605" width="0.3" height="15.0" fill="rgb(243,84,28)" rx="2" ry="2" />
<text  x="52.02" y="1615.5" ></text>
</g>
<g >
<title>db::get_cdc_streams_descriptions_v2_mutation (1 samples, 0.02%)</title><rect x="101.7" y="1893" width="0.2" height="15.0" fill="rgb(251,127,17)" rx="2" ry="2" />
<text  x="104.66" y="1903.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (2 samples, 0.04%)</title><rect x="682.7" y="1909" width="0.5" height="15.0" fill="rgb(213,197,5)" rx="2" ry="2" />
<text  x="685.70" y="1919.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (3 samples, 0.06%)</title><rect x="1085.0" y="1781" width="0.6" height="15.0" fill="rgb(220,30,39)" rx="2" ry="2" />
<text  x="1087.95" y="1791.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.04%)</title><rect x="598.1" y="1813" width="0.4" height="15.0" fill="rgb(243,87,38)" rx="2" ry="2" />
<text  x="601.07" y="1823.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (3 samples, 0.06%)</title><rect x="832.4" y="1781" width="0.7" height="15.0" fill="rgb(218,87,49)" rx="2" ry="2" />
<text  x="835.44" y="1791.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.04%)</title><rect x="534.3" y="1749" width="0.5" height="15.0" fill="rgb(227,183,18)" rx="2" ry="2" />
<text  x="537.32" y="1759.5" ></text>
</g>
<g >
<title>partition_key_view::legacy_tri_compare (39 samples, 0.75%)</title><rect x="497.1" y="1669" width="8.9" height="15.0" fill="rgb(222,123,0)" rx="2" ry="2" />
<text  x="500.11" y="1679.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_one (1 samples, 0.02%)</title><rect x="17.9" y="1797" width="0.3" height="15.0" fill="rgb(247,18,31)" rx="2" ry="2" />
<text  x="20.94" y="1807.5" ></text>
</g>
<g >
<title>read_simple&lt;unsigned short, managed_bytes_basic_view&lt; (3 samples, 0.06%)</title><rect x="915.0" y="1781" width="0.7" height="15.0" fill="rgb(229,119,2)" rx="2" ry="2" />
<text  x="918.02" y="1791.5" ></text>
</g>
<g >
<title>read_simple&lt;unsigned short, managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="877.1" y="1733" width="0.3" height="15.0" fill="rgb(235,68,39)" rx="2" ry="2" />
<text  x="880.13" y="1743.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.02%)</title><rect x="650.7" y="1909" width="0.2" height="15.0" fill="rgb(227,131,2)" rx="2" ry="2" />
<text  x="653.71" y="1919.5" ></text>
</g>
<g >
<title>std::construct_at&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; const&amp;&gt; (1 samples, 0.02%)</title><rect x="57.4" y="1669" width="0.2" height="15.0" fill="rgb(218,174,32)" rx="2" ry="2" />
<text  x="60.42" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.5" y="1845" width="0.2" height="15.0" fill="rgb(207,56,5)" rx="2" ry="2" />
<text  x="13.45" y="1855.5" ></text>
</g>
<g >
<title>std::operator+ (3 samples, 0.06%)</title><rect x="43.4" y="1573" width="0.6" height="15.0" fill="rgb(234,103,35)" rx="2" ry="2" />
<text  x="46.35" y="1583.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_state&lt;std::tuple&lt;std::optional&lt;auth::resource&gt; &gt;, seastar::future&lt;bool&gt; &gt;::do_with_state&lt;std::optional&lt;auth::resource&gt; &gt; (5 samples, 0.10%)</title><rect x="794.5" y="1733" width="1.2" height="15.0" fill="rgb(232,138,34)" rx="2" ry="2" />
<text  x="797.55" y="1743.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::clear (1 samples, 0.02%)</title><rect x="871.7" y="1909" width="0.2" height="15.0" fill="rgb(209,47,48)" rx="2" ry="2" />
<text  x="874.69" y="1919.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::do_get_limit (2 samples, 0.04%)</title><rect x="1099.9" y="1829" width="0.5" height="15.0" fill="rgb(246,91,44)" rx="2" ry="2" />
<text  x="1102.93" y="1839.5" ></text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::find (1 samples, 0.02%)</title><rect x="951.3" y="1781" width="0.2" height="15.0" fill="rgb(211,6,52)" rx="2" ry="2" />
<text  x="954.32" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (5 samples, 0.10%)</title><rect x="600.8" y="1845" width="1.1" height="15.0" fill="rgb(209,201,17)" rx="2" ry="2" />
<text  x="603.79" y="1855.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::find (2 samples, 0.04%)</title><rect x="664.8" y="1813" width="0.4" height="15.0" fill="rgb(213,40,20)" rx="2" ry="2" />
<text  x="667.77" y="1823.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="631.0" y="1813" width="0.2" height="15.0" fill="rgb(236,149,15)" rx="2" ry="2" />
<text  x="633.97" y="1823.5" ></text>
</g>
<g >
<title>std::vector&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, std::allocator&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt;::emplace_back&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; (1 samples, 0.02%)</title><rect x="1131.2" y="1557" width="0.3" height="15.0" fill="rgb(232,153,24)" rx="2" ry="2" />
<text  x="1134.24" y="1567.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::shared_ptr&lt;service::storage_proxy&gt;, seastar::sharded&lt;service::storage_proxy&gt;::start&lt;std::reference_wrapper&lt;seastar::sharded&lt;database&gt; &gt;, std::reference_wrapper&lt;seastar::sharded&lt;gms::gossiper&gt; &gt;, service::storage_proxy::config&amp;, std::reference_wrapper&lt;db::view::node_update_backlog&gt;, seastar::scheduling_group_key, std::reference_wrapper&lt;seastar::sharded&lt;gms::feature_service&gt; &gt;, std::reference_wrapper&lt;seastar::sharded&lt;locator::shared_token_metadata&gt; &gt;, std::reference_wrapper&lt;seastar::sharded&lt;netw::messaging_service&gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="17.5" y="1845" width="0.2" height="15.0" fill="rgb(249,95,11)" rx="2" ry="2" />
<text  x="20.49" y="1855.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (3 samples, 0.06%)</title><rect x="27.7" y="1653" width="0.7" height="15.0" fill="rgb(239,193,29)" rx="2" ry="2" />
<text  x="30.70" y="1663.5" ></text>
</g>
<g >
<title>operator new (12 samples, 0.23%)</title><rect x="201.5" y="1637" width="2.7" height="15.0" fill="rgb(242,134,31)" rx="2" ry="2" />
<text  x="204.49" y="1647.5" ></text>
</g>
<g >
<title>position_in_partition_view::for_range_end (2 samples, 0.04%)</title><rect x="272.7" y="1653" width="0.5" height="15.0" fill="rgb(241,225,1)" rx="2" ry="2" />
<text  x="275.73" y="1663.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.02%)</title><rect x="53.6" y="1685" width="0.2" height="15.0" fill="rgb(209,163,53)" rx="2" ry="2" />
<text  x="56.56" y="1695.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::set_value&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt; (7 samples, 0.13%)</title><rect x="707.7" y="1877" width="1.5" height="15.0" fill="rgb(243,49,51)" rx="2" ry="2" />
<text  x="710.65" y="1887.5" ></text>
</g>
<g >
<title>table::query (2 samples, 0.04%)</title><rect x="1165.3" y="1925" width="0.4" height="15.0" fill="rgb(244,211,13)" rx="2" ry="2" />
<text  x="1168.27" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.5" y="933" width="0.2" height="15.0" fill="rgb(243,103,22)" rx="2" ry="2" />
<text  x="13.45" y="943.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt;::basic_regex&lt;char const*&gt; (1 samples, 0.02%)</title><rect x="11.4" y="1557" width="0.2" height="15.0" fill="rgb(253,137,5)" rx="2" ry="2" />
<text  x="14.36" y="1567.5" ></text>
</g>
<g >
<title>std::vector&lt;seastar::shared_ptr&lt;cql3::operation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::operation&gt; &gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="655.0" y="1877" width="0.2" height="15.0" fill="rgb(224,93,2)" rx="2" ry="2" />
<text  x="658.02" y="1887.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_construct&lt;interval_bound&lt;dht::ring_position&gt; const&amp;&gt; (2 samples, 0.04%)</title><rect x="1037.1" y="1701" width="0.4" height="15.0" fill="rgb(239,122,44)" rx="2" ry="2" />
<text  x="1040.08" y="1711.5" ></text>
</g>
<g >
<title>locator::everywhere_replication_strategy::calculate_natural_endpoints (1 samples, 0.02%)</title><rect x="17.7" y="1829" width="0.2" height="15.0" fill="rgb(207,69,44)" rx="2" ry="2" />
<text  x="20.71" y="1839.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (1 samples, 0.02%)</title><rect x="1129.9" y="1557" width="0.2" height="15.0" fill="rgb(206,70,52)" rx="2" ry="2" />
<text  x="1132.88" y="1567.5" ></text>
</g>
<g >
<title>std::apply&lt;auth::get_permissions (101 samples, 1.94%)</title><rect x="800.2" y="1717" width="22.9" height="15.0" fill="rgb(225,195,19)" rx="2" ry="2" />
<text  x="803.22" y="1727.5" >s..</text>
</g>
<g >
<title>query::result_view::consume&lt;query::result_set_builder&amp;&gt; (1 samples, 0.02%)</title><rect x="109.1" y="1781" width="0.3" height="15.0" fill="rgb(221,140,26)" rx="2" ry="2" />
<text  x="112.15" y="1791.5" ></text>
</g>
<g >
<title>cql3::operation::set_value::prepare (10 samples, 0.19%)</title><rect x="68.1" y="1845" width="2.2" height="15.0" fill="rgb(205,27,51)" rx="2" ry="2" />
<text  x="71.08" y="1855.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="854.2" y="1829" width="0.2" height="15.0" fill="rgb(226,202,49)" rx="2" ry="2" />
<text  x="857.22" y="1839.5" ></text>
</g>
<g >
<title>keyspace::make_column_family_config (1 samples, 0.02%)</title><rect x="109.4" y="1909" width="0.2" height="15.0" fill="rgb(225,44,3)" rx="2" ry="2" />
<text  x="112.37" y="1919.5" ></text>
</g>
<g >
<title>seastar::sprint&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; (2 samples, 0.04%)</title><rect x="18.4" y="1941" width="0.4" height="15.0" fill="rgb(226,195,35)" rx="2" ry="2" />
<text  x="21.39" y="1951.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (3 samples, 0.06%)</title><rect x="37.2" y="1701" width="0.7" height="15.0" fill="rgb(249,135,0)" rx="2" ry="2" />
<text  x="40.23" y="1711.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (3 samples, 0.06%)</title><rect x="459.9" y="1685" width="0.7" height="15.0" fill="rgb(249,112,1)" rx="2" ry="2" />
<text  x="462.90" y="1695.5" ></text>
</g>
<g >
<title>reader_permit::impl::~impl (2 samples, 0.04%)</title><rect x="116.4" y="1893" width="0.5" height="15.0" fill="rgb(243,132,21)" rx="2" ry="2" />
<text  x="119.41" y="1903.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::abstract_read_executor (16 samples, 0.31%)</title><rect x="1060.7" y="1733" width="3.6" height="15.0" fill="rgb(212,23,47)" rx="2" ry="2" />
<text  x="1063.68" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;utils::UUID, std::pair&lt;utils::UUID const, unsigned long&gt;, std::allocator&lt;std::pair&lt;utils::UUID const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::operator[] (1 samples, 0.02%)</title><rect x="1126.2" y="1701" width="0.3" height="15.0" fill="rgb(233,173,54)" rx="2" ry="2" />
<text  x="1129.25" y="1711.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::digest_read_resolver (23 samples, 0.44%)</title><rect x="981.7" y="1733" width="5.2" height="15.0" fill="rgb(205,89,35)" rx="2" ry="2" />
<text  x="984.72" y="1743.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;service::storage_proxy_coordinator_query_result&gt;::set_urgent_state (9 samples, 0.17%)</title><rect x="695.4" y="1909" width="2.0" height="15.0" fill="rgb(230,167,28)" rx="2" ry="2" />
<text  x="698.40" y="1919.5" ></text>
</g>
<g >
<title>mutation_querier::consume (167 samples, 3.21%)</title><rect x="354.2" y="1621" width="37.9" height="15.0" fill="rgb(210,113,26)" rx="2" ry="2" />
<text  x="357.18" y="1631.5" >mut..</text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::do_fill_buffer (1 samples, 0.02%)</title><rect x="874.0" y="1813" width="0.2" height="15.0" fill="rgb(222,72,46)" rx="2" ry="2" />
<text  x="876.96" y="1823.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (3 samples, 0.06%)</title><rect x="414.5" y="1621" width="0.7" height="15.0" fill="rgb(251,150,24)" rx="2" ry="2" />
<text  x="417.53" y="1631.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (1 samples, 0.02%)</title><rect x="249.4" y="1557" width="0.2" height="15.0" fill="rgb(243,195,42)" rx="2" ry="2" />
<text  x="252.36" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.02%)</title><rect x="74.2" y="1701" width="0.2" height="15.0" fill="rgb(227,208,19)" rx="2" ry="2" />
<text  x="77.21" y="1711.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;mutation_fragment&gt;::allocate (1 samples, 0.02%)</title><rect x="521.4" y="1621" width="0.2" height="15.0" fill="rgb(233,206,25)" rx="2" ry="2" />
<text  x="524.39" y="1631.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.02%)</title><rect x="40.9" y="1637" width="0.2" height="15.0" fill="rgb(236,54,37)" rx="2" ry="2" />
<text  x="43.86" y="1647.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="46.5" y="1653" width="0.3" height="15.0" fill="rgb(226,119,46)" rx="2" ry="2" />
<text  x="49.53" y="1663.5" ></text>
</g>
<g >
<title>utils::tuple_hash::operator (2 samples, 0.04%)</title><rect x="839.0" y="1749" width="0.5" height="15.0" fill="rgb(221,151,12)" rx="2" ry="2" />
<text  x="842.02" y="1759.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_Vector_base (1 samples, 0.02%)</title><rect x="52.0" y="1669" width="0.2" height="15.0" fill="rgb(246,204,3)" rx="2" ry="2" />
<text  x="54.97" y="1679.5" ></text>
</g>
<g >
<title>global_schema_ptr::get (1 samples, 0.02%)</title><rect x="1031.6" y="1685" width="0.3" height="15.0" fill="rgb(246,10,6)" rx="2" ry="2" />
<text  x="1034.64" y="1695.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="387.3" y="1573" width="0.2" height="15.0" fill="rgb(205,16,35)" rx="2" ry="2" />
<text  x="390.30" y="1583.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_in_thread&lt;sstables::sstable_writer, flat_mutation_reader::no_filter&gt; (1 samples, 0.02%)</title><rect x="698.8" y="1701" width="0.2" height="15.0" fill="rgb(244,196,23)" rx="2" ry="2" />
<text  x="701.81" y="1711.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;schema_registry_entry&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;schema_registry_entry&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (3 samples, 0.06%)</title><rect x="972.0" y="1733" width="0.6" height="15.0" fill="rgb(235,112,34)" rx="2" ry="2" />
<text  x="974.97" y="1743.5" ></text>
</g>
<g >
<title>clustering_row::clustering_row (2 samples, 0.04%)</title><rect x="82.6" y="1653" width="0.5" height="15.0" fill="rgb(248,155,49)" rx="2" ry="2" />
<text  x="85.60" y="1663.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::on_read_resolved (1 samples, 0.02%)</title><rect x="710.1" y="1877" width="0.3" height="15.0" fill="rgb(232,212,0)" rx="2" ry="2" />
<text  x="713.15" y="1887.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="302.7" y="1733" width="0.2" height="15.0" fill="rgb(231,164,43)" rx="2" ry="2" />
<text  x="305.67" y="1743.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (2 samples, 0.04%)</title><rect x="38.4" y="1701" width="0.4" height="15.0" fill="rgb(234,166,29)" rx="2" ry="2" />
<text  x="41.36" y="1711.5" ></text>
</g>
<g >
<title>logalloc::region_group::update_maximal_rg (1 samples, 0.02%)</title><rect x="81.2" y="1781" width="0.3" height="15.0" fill="rgb(230,17,28)" rx="2" ry="2" />
<text  x="84.24" y="1791.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value, std::allocator&lt;cql3::raw_value&gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="869.6" y="1893" width="0.3" height="15.0" fill="rgb(232,60,0)" rx="2" ry="2" />
<text  x="872.65" y="1903.5" ></text>
</g>
<g >
<title>write_fragmented&lt;managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="929.5" y="1765" width="0.3" height="15.0" fill="rgb(210,151,23)" rx="2" ry="2" />
<text  x="932.54" y="1775.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt; &gt;::invoke&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (134 samples, 2.58%)</title><rect x="1005.1" y="1701" width="30.4" height="15.0" fill="rgb(225,228,16)" rx="2" ry="2" />
<text  x="1008.09" y="1711.5" >se..</text>
</g>
<g >
<title>make_combined_reader (100 samples, 1.92%)</title><rect x="450.4" y="1749" width="22.7" height="15.0" fill="rgb(206,223,44)" rx="2" ry="2" />
<text  x="453.37" y="1759.5" >m..</text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="569.3" y="1845" width="0.2" height="15.0" fill="rgb(229,4,17)" rx="2" ry="2" />
<text  x="572.26" y="1855.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::~__si_class_type_info (15 samples, 0.29%)</title><rect x="12.5" y="2037" width="3.4" height="15.0" fill="rgb(213,190,36)" rx="2" ry="2" />
<text  x="15.50" y="2047.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::erase (1 samples, 0.02%)</title><rect x="109.4" y="1861" width="0.2" height="15.0" fill="rgb(206,132,27)" rx="2" ry="2" />
<text  x="112.37" y="1871.5" ></text>
</g>
<g >
<title>schema_registry_entry::load (3 samples, 0.06%)</title><rect x="106.7" y="1813" width="0.6" height="15.0" fill="rgb(217,98,29)" rx="2" ry="2" />
<text  x="109.65" y="1823.5" ></text>
</g>
<g >
<title>reader_permit::impl::~impl (5 samples, 0.10%)</title><rect x="126.4" y="1861" width="1.1" height="15.0" fill="rgb(248,79,45)" rx="2" ry="2" />
<text  x="129.39" y="1871.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.02%)</title><rect x="1033.5" y="1685" width="0.2" height="15.0" fill="rgb(238,82,44)" rx="2" ry="2" />
<text  x="1036.45" y="1695.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="17.5" y="1653" width="0.2" height="15.0" fill="rgb(205,37,38)" rx="2" ry="2" />
<text  x="20.49" y="1663.5" ></text>
</g>
<g >
<title>partition_entry::partition_entry (1 samples, 0.02%)</title><rect x="11.1" y="1941" width="0.3" height="15.0" fill="rgb(252,47,9)" rx="2" ry="2" />
<text  x="14.13" y="1951.5" ></text>
</g>
<g >
<title>seastar::internal::awaiter&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::await_suspend&lt;seastar::internal::coroutine_traits_base&lt;service::storage_proxy_coordinator_query_result&gt;::promise_type&gt; (1 samples, 0.02%)</title><rect x="973.6" y="1781" width="0.2" height="15.0" fill="rgb(237,151,34)" rx="2" ry="2" />
<text  x="976.56" y="1791.5" ></text>
</g>
<g >
<title>std::vector&lt;antlr3::LexState&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::LexState&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::_M_realloc_insert&lt;antlr3::LexState&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="34.5" y="1621" width="0.2" height="15.0" fill="rgb(224,140,5)" rx="2" ry="2" />
<text  x="37.50" y="1631.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (1 samples, 0.02%)</title><rect x="1037.3" y="1653" width="0.2" height="15.0" fill="rgb(207,45,10)" rx="2" ry="2" />
<text  x="1040.31" y="1663.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="54.7" y="1653" width="0.2" height="15.0" fill="rgb(224,116,48)" rx="2" ry="2" />
<text  x="57.70" y="1663.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.06%)</title><rect x="199.7" y="1605" width="0.7" height="15.0" fill="rgb(225,12,14)" rx="2" ry="2" />
<text  x="202.67" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (2 samples, 0.04%)</title><rect x="51.5" y="1653" width="0.5" height="15.0" fill="rgb(252,99,10)" rx="2" ry="2" />
<text  x="54.52" y="1663.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::allocate_large (1 samples, 0.02%)</title><rect x="969.0" y="1733" width="0.2" height="15.0" fill="rgb(209,121,40)" rx="2" ry="2" />
<text  x="972.02" y="1743.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_slice_or_needs_filtering (1 samples, 0.02%)</title><rect x="659.8" y="1813" width="0.2" height="15.0" fill="rgb(221,101,28)" rx="2" ry="2" />
<text  x="662.78" y="1823.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::execute_without_condition (2 samples, 0.04%)</title><rect x="875.1" y="1829" width="0.4" height="15.0" fill="rgb(251,70,43)" rx="2" ry="2" />
<text  x="878.09" y="1839.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (1 samples, 0.02%)</title><rect x="648.0" y="1877" width="0.2" height="15.0" fill="rgb(227,100,36)" rx="2" ry="2" />
<text  x="650.99" y="1887.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (2 samples, 0.04%)</title><rect x="502.6" y="1605" width="0.4" height="15.0" fill="rgb(246,191,14)" rx="2" ry="2" />
<text  x="505.56" y="1615.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::followPush (1 samples, 0.02%)</title><rect x="51.1" y="1701" width="0.2" height="15.0" fill="rgb(214,55,0)" rx="2" ry="2" />
<text  x="54.07" y="1711.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_insert&lt;flat_mutation_reader&gt; (8 samples, 0.15%)</title><rect x="455.8" y="1685" width="1.8" height="15.0" fill="rgb(246,79,2)" rx="2" ry="2" />
<text  x="458.82" y="1695.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::set_input (1 samples, 0.02%)</title><rect x="27.0" y="1685" width="0.2" height="15.0" fill="rgb(213,35,49)" rx="2" ry="2" />
<text  x="30.02" y="1695.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="687.0" y="1861" width="0.2" height="15.0" fill="rgb(220,10,23)" rx="2" ry="2" />
<text  x="690.01" y="1871.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="534.5" y="1733" width="0.3" height="15.0" fill="rgb(212,31,22)" rx="2" ry="2" />
<text  x="537.55" y="1743.5" ></text>
</g>
<g >
<title>db::commitlog::segment_manager::allocate_when_possible&lt;db::commitlog::add_entry (5 samples, 0.10%)</title><rect x="1125.3" y="1717" width="1.2" height="15.0" fill="rgb(212,152,23)" rx="2" ry="2" />
<text  x="1128.34" y="1727.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.02%)</title><rect x="59.0" y="1637" width="0.2" height="15.0" fill="rgb(245,156,28)" rx="2" ry="2" />
<text  x="62.01" y="1647.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::vector (7 samples, 0.13%)</title><rect x="937.3" y="1829" width="1.5" height="15.0" fill="rgb(245,131,12)" rx="2" ry="2" />
<text  x="940.26" y="1839.5" ></text>
</g>
<g >
<title>seastar::internal::uninitialized_wrapper_base&lt;service::storage_proxy_coordinator_query_result, false&gt;::uninitialized_set&lt;service::storage_proxy_coordinator_query_result&gt; (4 samples, 0.08%)</title><rect x="696.1" y="1877" width="0.9" height="15.0" fill="rgb(246,111,39)" rx="2" ry="2" />
<text  x="699.08" y="1887.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (4 samples, 0.08%)</title><rect x="530.5" y="1701" width="0.9" height="15.0" fill="rgb(239,126,27)" rx="2" ry="2" />
<text  x="533.46" y="1711.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (1 samples, 0.02%)</title><rect x="603.1" y="1829" width="0.2" height="15.0" fill="rgb(211,54,6)" rx="2" ry="2" />
<text  x="606.06" y="1839.5" ></text>
</g>
<g >
<title>allocation_strategy::destroy&lt;rows_entry&gt; (1 samples, 0.02%)</title><rect x="701.3" y="1589" width="0.2" height="15.0" fill="rgb(217,108,48)" rx="2" ry="2" />
<text  x="704.30" y="1599.5" ></text>
</g>
<g >
<title>seastar::data_source::get (1 samples, 0.02%)</title><rect x="17.9" y="1525" width="0.3" height="15.0" fill="rgb(220,109,14)" rx="2" ry="2" />
<text  x="20.94" y="1535.5" ></text>
</g>
<g >
<title>service::abstract_write_response_handler::delay&lt;service::abstract_write_response_handler::signal (1 samples, 0.02%)</title><rect x="730.1" y="1861" width="0.2" height="15.0" fill="rgb(240,170,18)" rx="2" ry="2" />
<text  x="733.12" y="1871.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_219f1a43593042f0924f8fe16cb9c27482170876] (1 samples, 0.02%)</title><rect x="814.3" y="1541" width="0.2" height="15.0" fill="rgb(233,73,0)" rx="2" ry="2" />
<text  x="817.29" y="1551.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::~partition_snapshot_flat_reader (43 samples, 0.83%)</title><rect x="578.1" y="1749" width="9.8" height="15.0" fill="rgb(219,158,8)" rx="2" ry="2" />
<text  x="581.11" y="1759.5" ></text>
</g>
<g >
<title>std::function&lt;seastar::future&lt;void&gt;  (1 samples, 0.02%)</title><rect x="701.3" y="1765" width="0.2" height="15.0" fill="rgb(221,43,23)" rx="2" ry="2" />
<text  x="704.30" y="1775.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser&lt;std::_Mem_fn&lt;std::unique_ptr&lt;cql3::statements::raw::parsed_statement, std::default_delete&lt;cql3::statements::raw::parsed_statement&gt; &gt;  (1 samples, 0.02%)</title><rect x="700.8" y="1861" width="0.3" height="15.0" fill="rgb(252,124,31)" rx="2" ry="2" />
<text  x="703.85" y="1871.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::set&lt;&gt; (1 samples, 0.02%)</title><rect x="722.6" y="1845" width="0.3" height="15.0" fill="rgb(210,68,2)" rx="2" ry="2" />
<text  x="725.63" y="1855.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::statements::drop_keyspace_statement, std::default_delete&lt;cql3::statements::drop_keyspace_statement&gt;, true, true&gt;::__uniq_ptr_data (1 samples, 0.02%)</title><rect x="62.6" y="1797" width="0.3" height="15.0" fill="rgb(224,41,33)" rx="2" ry="2" />
<text  x="65.64" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::binary_operator const*&gt;  (2 samples, 0.04%)</title><rect x="665.2" y="1829" width="0.5" height="15.0" fill="rgb(241,17,1)" rx="2" ry="2" />
<text  x="668.23" y="1839.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::make_partition_slice (62 samples, 1.19%)</title><rect x="1090.6" y="1845" width="14.1" height="15.0" fill="rgb(237,145,29)" rx="2" ry="2" />
<text  x="1093.63" y="1855.5" ></text>
</g>
<g >
<title>compound_type&lt; (7 samples, 0.13%)</title><rect x="916.6" y="1781" width="1.6" height="15.0" fill="rgb(244,210,4)" rx="2" ry="2" />
<text  x="919.61" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.5" y="293" width="0.2" height="15.0" fill="rgb(214,102,37)" rx="2" ry="2" />
<text  x="13.45" y="303.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (7 samples, 0.13%)</title><rect x="545.4" y="1733" width="1.6" height="15.0" fill="rgb(242,20,23)" rx="2" ry="2" />
<text  x="548.44" y="1743.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (2 samples, 0.04%)</title><rect x="1141.2" y="1909" width="0.5" height="15.0" fill="rgb(207,176,34)" rx="2" ry="2" />
<text  x="1144.22" y="1919.5" ></text>
</g>
<g >
<title>cql3::statements::update_statement::execute_operations_for_key (4 samples, 0.08%)</title><rect x="878.0" y="1765" width="0.9" height="15.0" fill="rgb(236,38,0)" rx="2" ry="2" />
<text  x="881.04" y="1775.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (2 samples, 0.04%)</title><rect x="1135.1" y="1909" width="0.4" height="15.0" fill="rgb(223,220,31)" rx="2" ry="2" />
<text  x="1138.10" y="1919.5" ></text>
</g>
<g >
<title>antlr3::IntStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::_LA (4 samples, 0.08%)</title><rect x="30.9" y="1669" width="0.9" height="15.0" fill="rgb(251,173,2)" rx="2" ry="2" />
<text  x="33.87" y="1679.5" ></text>
</g>
<g >
<title>seastar::reactor::add_timer (4 samples, 0.08%)</title><rect x="982.6" y="1717" width="0.9" height="15.0" fill="rgb(207,17,10)" rx="2" ry="2" />
<text  x="985.63" y="1727.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::get0 (1 samples, 0.02%)</title><rect x="718.8" y="1877" width="0.2" height="15.0" fill="rgb(218,52,51)" rx="2" ry="2" />
<text  x="721.77" y="1887.5" ></text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_slice_or_needs_filtering (8 samples, 0.15%)</title><rect x="942.7" y="1813" width="1.8" height="15.0" fill="rgb(233,94,54)" rx="2" ry="2" />
<text  x="945.70" y="1823.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (2,294 samples, 44.11%)</title><rect x="118.4" y="1893" width="520.5" height="15.0" fill="rgb(214,46,10)" rx="2" ry="2" />
<text  x="121.45" y="1903.5" >seastar::noncopyable_function&lt;seastar::future&lt;void&gt; </text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::partition_snapshot_flat_reader&lt;memtable&amp;&gt; (1 samples, 0.02%)</title><rect x="511.6" y="1733" width="0.3" height="15.0" fill="rgb(216,25,18)" rx="2" ry="2" />
<text  x="514.63" y="1743.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (1 samples, 0.02%)</title><rect x="236.7" y="1525" width="0.2" height="15.0" fill="rgb(205,149,21)" rx="2" ry="2" />
<text  x="239.65" y="1535.5" ></text>
</g>
<g >
<title>__tls_init (1 samples, 0.02%)</title><rect x="518.0" y="1685" width="0.2" height="15.0" fill="rgb(240,6,31)" rx="2" ry="2" />
<text  x="520.98" y="1695.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::cql_statement&gt;::~shared_ptr (2 samples, 0.04%)</title><rect x="850.1" y="1861" width="0.5" height="15.0" fill="rgb(248,76,46)" rx="2" ry="2" />
<text  x="853.13" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.02%)</title><rect x="637.3" y="1813" width="0.2" height="15.0" fill="rgb(229,147,11)" rx="2" ry="2" />
<text  x="640.32" y="1823.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::range_tombstone_accumulator (17 samples, 0.33%)</title><rect x="563.4" y="1813" width="3.8" height="15.0" fill="rgb(225,1,21)" rx="2" ry="2" />
<text  x="566.36" y="1823.5" ></text>
</g>
<g >
<title>seastar::uninitialized_string&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; (1 samples, 0.02%)</title><rect x="79.4" y="1925" width="0.3" height="15.0" fill="rgb(252,128,17)" rx="2" ry="2" />
<text  x="82.43" y="1935.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (2 samples, 0.04%)</title><rect x="50.4" y="1573" width="0.4" height="15.0" fill="rgb(207,50,2)" rx="2" ry="2" />
<text  x="53.38" y="1583.5" ></text>
</g>
<g >
<title>service::client_state::ensure_has_permission (1 samples, 0.02%)</title><rect x="826.3" y="1765" width="0.2" height="15.0" fill="rgb(226,110,7)" rx="2" ry="2" />
<text  x="829.31" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (1 samples, 0.02%)</title><rect x="688.1" y="1861" width="0.3" height="15.0" fill="rgb(220,105,40)" rx="2" ry="2" />
<text  x="691.14" y="1871.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (2 samples, 0.04%)</title><rect x="914.6" y="1765" width="0.4" height="15.0" fill="rgb(227,59,46)" rx="2" ry="2" />
<text  x="917.57" y="1775.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;boost::range_detail::integer_iterator&lt;unsigned int&gt;, seastar::smp::invoke_on_all&lt;logalloc::prime_segment_pool (1 samples, 0.02%)</title><rect x="730.3" y="1701" width="0.3" height="15.0" fill="rgb(217,19,39)" rx="2" ry="2" />
<text  x="733.34" y="1711.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;void&gt;  (1 samples, 0.02%)</title><rect x="17.3" y="1829" width="0.2" height="15.0" fill="rgb(206,99,47)" rx="2" ry="2" />
<text  x="20.26" y="1839.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each_state::parallel_for_each_state (1 samples, 0.02%)</title><rect x="1126.9" y="1685" width="0.3" height="15.0" fill="rgb(250,191,10)" rx="2" ry="2" />
<text  x="1129.93" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_term (1 samples, 0.02%)</title><rect x="11.4" y="1493" width="0.2" height="15.0" fill="rgb(224,135,27)" rx="2" ry="2" />
<text  x="14.36" y="1503.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (5 samples, 0.10%)</title><rect x="699.3" y="1733" width="1.1" height="15.0" fill="rgb(250,10,22)" rx="2" ry="2" />
<text  x="702.26" y="1743.5" ></text>
</g>
<g >
<title>gms::gossiper::run (1 samples, 0.02%)</title><rect x="1165.7" y="1909" width="0.3" height="15.0" fill="rgb(226,32,24)" rx="2" ry="2" />
<text  x="1168.72" y="1919.5" ></text>
</g>
<g >
<title>cpuid_or_from_dump.lto_priv.0 (1 samples, 0.02%)</title><rect x="81.0" y="2037" width="0.2" height="15.0" fill="rgb(240,183,10)" rx="2" ry="2" />
<text  x="84.01" y="2047.5" ></text>
</g>
<g >
<title>db::filter_for_query (1 samples, 0.02%)</title><rect x="967.2" y="1781" width="0.2" height="15.0" fill="rgb(247,180,41)" rx="2" ry="2" />
<text  x="970.20" y="1791.5" ></text>
</g>
<g >
<title>utils::murmur_hash::hash3_x64_128&lt;legacy_compound_view&lt;compound_type&lt; (21 samples, 0.40%)</title><rect x="919.1" y="1797" width="4.8" height="15.0" fill="rgb(254,19,21)" rx="2" ry="2" />
<text  x="922.11" y="1807.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::digest_read_result&gt;::move_it (2 samples, 0.04%)</title><rect x="704.3" y="1893" width="0.4" height="15.0" fill="rgb(211,40,31)" rx="2" ry="2" />
<text  x="707.25" y="1903.5" ></text>
</g>
<g >
<title>seastar::file_data_source_impl::issue_read_aheads (1 samples, 0.02%)</title><rect x="17.9" y="1493" width="0.3" height="15.0" fill="rgb(229,38,22)" rx="2" ry="2" />
<text  x="20.94" y="1503.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::iterator_at (1 samples, 0.02%)</title><rect x="837.4" y="1733" width="0.3" height="15.0" fill="rgb(254,181,9)" rx="2" ry="2" />
<text  x="840.43" y="1743.5" ></text>
</g>
<g >
<title>std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt; &gt;, seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (7 samples, 0.13%)</title><rect x="820.4" y="1669" width="1.6" height="15.0" fill="rgb(222,193,10)" rx="2" ry="2" />
<text  x="823.41" y="1679.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;dht::decorated_key&gt;::_M_reset (1 samples, 0.02%)</title><rect x="415.7" y="1653" width="0.2" height="15.0" fill="rgb(207,20,46)" rx="2" ry="2" />
<text  x="418.66" y="1663.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (1 samples, 0.02%)</title><rect x="669.1" y="1861" width="0.2" height="15.0" fill="rgb(249,31,30)" rx="2" ry="2" />
<text  x="672.08" y="1871.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::operator (3 samples, 0.06%)</title><rect x="814.3" y="1557" width="0.7" height="15.0" fill="rgb(216,139,23)" rx="2" ry="2" />
<text  x="817.29" y="1567.5" ></text>
</g>
<g >
<title>std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;, seastar::future&lt;void&gt; &gt; &gt;::operator (1 samples, 0.02%)</title><rect x="829.5" y="1813" width="0.2" height="15.0" fill="rgb(217,222,4)" rx="2" ry="2" />
<text  x="832.49" y="1823.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::populate_slot (1 samples, 0.02%)</title><rect x="878.7" y="1701" width="0.2" height="15.0" fill="rgb(215,158,13)" rx="2" ry="2" />
<text  x="881.72" y="1711.5" ></text>
</g>
<g >
<title>data_value::data_value (1 samples, 0.02%)</title><rect x="107.1" y="1685" width="0.2" height="15.0" fill="rgb(223,195,15)" rx="2" ry="2" />
<text  x="110.10" y="1695.5" ></text>
</g>
<g >
<title>utils::config_file::named_value&lt;unsigned long&gt;::the_value (3 samples, 0.06%)</title><rect x="1116.0" y="1813" width="0.7" height="15.0" fill="rgb(208,168,31)" rx="2" ry="2" />
<text  x="1119.04" y="1823.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt; &gt;::invoke&lt;flat_mutation_reader_v2::impl::consume_pausable&lt;downgrade_to_v1 (1 samples, 0.02%)</title><rect x="17.9" y="1749" width="0.3" height="15.0" fill="rgb(242,143,22)" rx="2" ry="2" />
<text  x="20.94" y="1759.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_prepared (570 samples, 10.96%)</title><rect x="737.8" y="1893" width="129.4" height="15.0" fill="rgb(216,2,54)" rx="2" ry="2" />
<text  x="740.83" y="1903.5" >single_node_cql_..</text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.02%)</title><rect x="10.5" y="165" width="0.2" height="15.0" fill="rgb(252,52,30)" rx="2" ry="2" />
<text  x="13.45" y="175.5" ></text>
</g>
<g >
<title>partition_snapshot::version_count (4 samples, 0.08%)</title><rect x="270.0" y="1557" width="0.9" height="15.0" fill="rgb(225,198,30)" rx="2" ry="2" />
<text  x="273.00" y="1567.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::reset_state (46 samples, 0.88%)</title><rect x="276.1" y="1669" width="10.5" height="15.0" fill="rgb(242,108,0)" rx="2" ry="2" />
<text  x="279.13" y="1679.5" ></text>
</g>
<g >
<title>database::has_keyspace (10 samples, 0.19%)</title><rect x="852.2" y="1845" width="2.2" height="15.0" fill="rgb(215,2,47)" rx="2" ry="2" />
<text  x="855.18" y="1855.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.02%)</title><rect x="38.4" y="1605" width="0.2" height="15.0" fill="rgb(244,134,22)" rx="2" ry="2" />
<text  x="41.36" y="1615.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::operator (1 samples, 0.02%)</title><rect x="178.8" y="1701" width="0.2" height="15.0" fill="rgb(223,130,9)" rx="2" ry="2" />
<text  x="181.80" y="1711.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.08%)</title><rect x="1150.3" y="1845" width="0.9" height="15.0" fill="rgb(228,221,49)" rx="2" ry="2" />
<text  x="1153.30" y="1855.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::query_options, std::default_delete&lt;cql3::query_options&gt; &gt;::~unique_ptr (2 samples, 0.04%)</title><rect x="866.7" y="1877" width="0.5" height="15.0" fill="rgb(225,158,18)" rx="2" ry="2" />
<text  x="869.70" y="1887.5" ></text>
</g>
<g >
<title>_ZSt5applyIZN7seastar8internal12do_with_implISt8optionalIN4auth8resourceEEZNK7service12client_state20check_has_permissionENS4_12command_descEE3$_7JEEEDaOT_OT0_DpOT1_EUlDpOT_E_St5tupleIJOS6_EEEDcSC_SE_ (9 samples, 0.17%)</title><rect x="793.9" y="1749" width="2.0" height="15.0" fill="rgb(239,126,46)" rx="2" ry="2" />
<text  x="796.87" y="1759.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="665.9" y="1893" width="0.2" height="15.0" fill="rgb(248,94,52)" rx="2" ry="2" />
<text  x="668.91" y="1903.5" ></text>
</g>
<g >
<title>seastar::future&lt;mutation_fragment*&gt;::then_impl&lt;query::consume_page&lt; (4 samples, 0.08%)</title><rect x="556.1" y="1845" width="0.9" height="15.0" fill="rgb(235,8,8)" rx="2" ry="2" />
<text  x="559.10" y="1855.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="936.3" y="1813" width="0.3" height="15.0" fill="rgb(233,169,8)" rx="2" ry="2" />
<text  x="939.35" y="1823.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (13 samples, 0.25%)</title><rect x="1053.2" y="1733" width="2.9" height="15.0" fill="rgb(232,25,22)" rx="2" ry="2" />
<text  x="1056.19" y="1743.5" ></text>
</g>
<g >
<title>bytes_ostream::view (1 samples, 0.02%)</title><rect x="106.7" y="1717" width="0.2" height="15.0" fill="rgb(245,83,48)" rx="2" ry="2" />
<text  x="109.65" y="1727.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::clear (9 samples, 0.17%)</title><rect x="392.7" y="1621" width="2.1" height="15.0" fill="rgb(235,97,35)" rx="2" ry="2" />
<text  x="395.75" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::~_Variant_storage (1 samples, 0.02%)</title><rect x="433.4" y="1669" width="0.2" height="15.0" fill="rgb(222,118,24)" rx="2" ry="2" />
<text  x="436.36" y="1679.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="59.5" y="1669" width="0.2" height="15.0" fill="rgb(244,192,12)" rx="2" ry="2" />
<text  x="62.46" y="1679.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (3 samples, 0.06%)</title><rect x="984.0" y="1701" width="0.7" height="15.0" fill="rgb(246,15,11)" rx="2" ry="2" />
<text  x="986.99" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.5" y="1733" width="0.2" height="15.0" fill="rgb(221,199,47)" rx="2" ry="2" />
<text  x="13.45" y="1743.5" ></text>
</g>
<g >
<title>std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="1134.2" y="1797" width="0.2" height="15.0" fill="rgb(211,121,31)" rx="2" ry="2" />
<text  x="1137.19" y="1807.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (1 samples, 0.02%)</title><rect x="1166.6" y="1941" width="0.3" height="15.0" fill="rgb(244,172,10)" rx="2" ry="2" />
<text  x="1169.63" y="1951.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt;  (1 samples, 0.02%)</title><rect x="17.0" y="1973" width="0.3" height="15.0" fill="rgb(214,10,31)" rx="2" ry="2" />
<text  x="20.03" y="1983.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="670.0" y="1893" width="0.2" height="15.0" fill="rgb(227,100,19)" rx="2" ry="2" />
<text  x="672.99" y="1903.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;column_definition const*, std::pair&lt;column_definition const* const, seastar::shared_ptr&lt;cql3::restrictions::single_column_restriction&gt; &gt;, std::_Select1st&lt;std::pair&lt;column_definition const* const, seastar::shared_ptr&lt;cql3::restrictions::single_column_restriction&gt; &gt; &gt;, cql3::restrictions::single_column_restrictions::column_definition_comparator, std::allocator&lt;std::pair&lt;column_definition const* const, seastar::shared_ptr&lt;cql3::restrictions::single_column_restriction&gt; &gt; &gt; &gt;::_M_erase (2 samples, 0.04%)</title><rect x="654.1" y="1813" width="0.5" height="15.0" fill="rgb(212,201,9)" rx="2" ry="2" />
<text  x="657.11" y="1823.5" ></text>
</g>
<g >
<title>row::external_memory_usage (21 samples, 0.40%)</title><rect x="251.2" y="1573" width="4.7" height="15.0" fill="rgb(211,78,32)" rx="2" ry="2" />
<text  x="254.17" y="1583.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE8scheduleINS_8internal22promise_base_with_typeIvEEZNS6_14discard_resultEvEUlDpOT_E_ZNS6_14then_impl_nrvoISE_NS0_IvEEEET0_OT_EUlOSA_RSE_ONS_12future_stateIS5_EEE_EEvSJ_OSH_OT1_ (5 samples, 0.10%)</title><rect x="736.0" y="1861" width="1.1" height="15.0" fill="rgb(238,152,2)" rx="2" ry="2" />
<text  x="739.01" y="1871.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::__uniq_ptr_impl (1 samples, 0.02%)</title><rect x="55.6" y="1653" width="0.2" height="15.0" fill="rgb(207,66,44)" rx="2" ry="2" />
<text  x="58.60" y="1663.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (2 samples, 0.04%)</title><rect x="576.1" y="1733" width="0.4" height="15.0" fill="rgb(227,71,11)" rx="2" ry="2" />
<text  x="579.06" y="1743.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::constant (1 samples, 0.02%)</title><rect x="60.4" y="1717" width="0.2" height="15.0" fill="rgb(234,75,51)" rx="2" ry="2" />
<text  x="63.37" y="1727.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (1 samples, 0.02%)</title><rect x="10.7" y="2005" width="0.2" height="15.0" fill="rgb(219,12,30)" rx="2" ry="2" />
<text  x="13.68" y="2015.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, seastar::future&lt;void&gt;::finally_body&lt;table::stop (1 samples, 0.02%)</title><rect x="701.3" y="1925" width="0.2" height="15.0" fill="rgb(242,165,20)" rx="2" ry="2" />
<text  x="704.30" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.5" y="1045" width="0.2" height="15.0" fill="rgb(205,88,13)" rx="2" ry="2" />
<text  x="13.45" y="1055.5" ></text>
</g>
<g >
<title>db::schema_tables::create_table_from_mutations (1 samples, 0.02%)</title><rect x="109.1" y="1829" width="0.3" height="15.0" fill="rgb(245,205,31)" rx="2" ry="2" />
<text  x="112.15" y="1839.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (1 samples, 0.02%)</title><rect x="698.6" y="1909" width="0.2" height="15.0" fill="rgb(215,94,11)" rx="2" ry="2" />
<text  x="701.58" y="1919.5" ></text>
</g>
<g >
<title>ser::writer_of_std__optional__qr_cell&lt;bytes_ostream&gt;::write (9 samples, 0.17%)</title><rect x="390.0" y="1589" width="2.1" height="15.0" fill="rgb(216,189,39)" rx="2" ry="2" />
<text  x="393.02" y="1599.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::result_set, std::default_delete&lt;cql3::result_set&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="678.6" y="1909" width="0.2" height="15.0" fill="rgb(241,54,35)" rx="2" ry="2" />
<text  x="681.61" y="1919.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cident (3 samples, 0.06%)</title><rect x="58.3" y="1749" width="0.7" height="15.0" fill="rgb(215,57,14)" rx="2" ry="2" />
<text  x="61.33" y="1759.5" ></text>
</g>
<g >
<title>sstables::mx::mx_sstable_mutation_reader::fill_buffer (1 samples, 0.02%)</title><rect x="17.9" y="1717" width="0.3" height="15.0" fill="rgb(246,82,2)" rx="2" ry="2" />
<text  x="20.94" y="1727.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::make_data_requests (4 samples, 0.08%)</title><rect x="991.0" y="1685" width="0.9" height="15.0" fill="rgb(247,195,36)" rx="2" ry="2" />
<text  x="994.03" y="1695.5" ></text>
</g>
<g >
<title>posix_memalign (1 samples, 0.02%)</title><rect x="82.6" y="1541" width="0.2" height="15.0" fill="rgb(208,53,9)" rx="2" ry="2" />
<text  x="85.60" y="1551.5" ></text>
</g>
<g >
<title>range_tombstone_list::slice (11 samples, 0.21%)</title><rect x="280.2" y="1637" width="2.5" height="15.0" fill="rgb(248,185,15)" rx="2" ry="2" />
<text  x="283.21" y="1647.5" ></text>
</g>
<g >
<title>__start_context (2 samples, 0.04%)</title><rect x="11.1" y="2021" width="0.5" height="15.0" fill="rgb(230,107,33)" rx="2" ry="2" />
<text  x="14.13" y="2031.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEE4$_44ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_45ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_43ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_46ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_47ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_48ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_49ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_50ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_51ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_52ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_53ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_54ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_55ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_56ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_57ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_58EERS4_IJNSF_11conjunctionENSF_15binary_operatorENSF_12column_valueENSF_5tokenENSF_21unresolved_identifierENSF_25column_mutation_attributeENSF_13function_callENSF_4castENSF_15field_selectionENSF_4nullENSF_13bind_variableENSF_16untyped_constantENSF_8constantENSF_17tuple_constructorENSF_22collection_constructorENSF_20usertype_constructorEEEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES16_S1O_ (1 samples, 0.02%)</title><rect x="876.7" y="1765" width="0.2" height="15.0" fill="rgb(247,41,42)" rx="2" ry="2" />
<text  x="879.68" y="1775.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::alloc (14 samples, 0.27%)</title><rect x="242.8" y="1525" width="3.2" height="15.0" fill="rgb(223,48,11)" rx="2" ry="2" />
<text  x="245.78" y="1535.5" ></text>
</g>
<g >
<title>std::visit&lt;overloaded_functor&lt;cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_slice_or_needs_filtering (1 samples, 0.02%)</title><rect x="660.0" y="1813" width="0.2" height="15.0" fill="rgb(239,189,30)" rx="2" ry="2" />
<text  x="663.01" y="1823.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.02%)</title><rect x="21.1" y="1813" width="0.2" height="15.0" fill="rgb(212,207,6)" rx="2" ry="2" />
<text  x="24.12" y="1823.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::pop_mutation_fragment (3 samples, 0.06%)</title><rect x="430.0" y="1701" width="0.6" height="15.0" fill="rgb(229,129,11)" rx="2" ry="2" />
<text  x="432.95" y="1711.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::operator (5 samples, 0.10%)</title><rect x="307.9" y="1749" width="1.1" height="15.0" fill="rgb(222,49,26)" rx="2" ry="2" />
<text  x="310.89" y="1759.5" ></text>
</g>
<g >
<title>__sigsetjmp (1 samples, 0.02%)</title><rect x="642.5" y="1909" width="0.3" height="15.0" fill="rgb(230,0,19)" rx="2" ry="2" />
<text  x="645.54" y="1919.5" ></text>
</g>
<g >
<title>bound_view::from_range_start&lt;nonwrapping_interval&gt; (2 samples, 0.04%)</title><rect x="281.8" y="1605" width="0.5" height="15.0" fill="rgb(245,170,8)" rx="2" ry="2" />
<text  x="284.80" y="1615.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="436.3" y="1797" width="0.2" height="15.0" fill="rgb(241,103,45)" rx="2" ry="2" />
<text  x="439.31" y="1807.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.29] (2 samples, 0.04%)</title><rect x="987.2" y="1749" width="0.4" height="15.0" fill="rgb(213,125,35)" rx="2" ry="2" />
<text  x="990.17" y="1759.5" ></text>
</g>
<g >
<title>query::result_set::result_set (1 samples, 0.02%)</title><rect x="106.7" y="1749" width="0.2" height="15.0" fill="rgb(225,166,24)" rx="2" ry="2" />
<text  x="109.65" y="1759.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, seastar::future&lt;void&gt;::handle_exception&lt;service::storage_proxy::send_to_live_endpoints (1 samples, 0.02%)</title><rect x="701.5" y="1925" width="0.3" height="15.0" fill="rgb(243,175,47)" rx="2" ry="2" />
<text  x="704.53" y="1935.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.02%)</title><rect x="47.2" y="1669" width="0.2" height="15.0" fill="rgb(235,28,54)" rx="2" ry="2" />
<text  x="50.21" y="1679.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::add_raw_update (6 samples, 0.12%)</title><rect x="48.1" y="1733" width="1.4" height="15.0" fill="rgb(220,126,3)" rx="2" ry="2" />
<text  x="51.12" y="1743.5" ></text>
</g>
<g >
<title>__tls_init (2 samples, 0.04%)</title><rect x="507.8" y="1717" width="0.4" height="15.0" fill="rgb(228,140,44)" rx="2" ry="2" />
<text  x="510.77" y="1727.5" ></text>
</g>
<g >
<title>operator delete (7 samples, 0.13%)</title><rect x="121.6" y="1877" width="1.6" height="15.0" fill="rgb(206,8,31)" rx="2" ry="2" />
<text  x="124.62" y="1887.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::impl (2 samples, 0.04%)</title><rect x="465.6" y="1701" width="0.4" height="15.0" fill="rgb(234,0,30)" rx="2" ry="2" />
<text  x="468.57" y="1711.5" ></text>
</g>
<g >
<title>schema::get_column_definition (2 samples, 0.04%)</title><rect x="74.7" y="1845" width="0.4" height="15.0" fill="rgb(250,46,0)" rx="2" ry="2" />
<text  x="77.66" y="1855.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (4 samples, 0.08%)</title><rect x="214.4" y="1557" width="0.9" height="15.0" fill="rgb(237,119,28)" rx="2" ry="2" />
<text  x="217.42" y="1567.5" ></text>
</g>
<g >
<title>mutation_reader_merger::add_readers (1 samples, 0.02%)</title><rect x="453.1" y="1717" width="0.2" height="15.0" fill="rgb(221,65,43)" rx="2" ry="2" />
<text  x="456.10" y="1727.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_one (25 samples, 0.48%)</title><rect x="182.4" y="1685" width="5.7" height="15.0" fill="rgb(216,154,7)" rx="2" ry="2" />
<text  x="185.43" y="1695.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="1117.6" y="1845" width="0.3" height="15.0" fill="rgb(254,15,49)" rx="2" ry="2" />
<text  x="1120.63" y="1855.5" ></text>
</g>
<g >
<title>boost::intrusive::bstree_impl&lt;boost::intrusive::mhtraits&lt;range_tombstone_entry, boost::intrusive::set_member_hook&lt;boost::intrusive::link_mode&lt; (1 samples, 0.02%)</title><rect x="585.8" y="1701" width="0.2" height="15.0" fill="rgb(227,156,30)" rx="2" ry="2" />
<text  x="588.82" y="1711.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_data_requests (53 samples, 1.02%)</title><rect x="716.0" y="1893" width="12.1" height="15.0" fill="rgb(223,101,16)" rx="2" ry="2" />
<text  x="719.05" y="1903.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (4 samples, 0.08%)</title><rect x="133.4" y="1797" width="0.9" height="15.0" fill="rgb(253,33,32)" rx="2" ry="2" />
<text  x="136.42" y="1807.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE9then_implIZNS6_14discard_resultEvEUlDpOT_E_NS0_IvEEEET0_OT_ (8 samples, 0.15%)</title><rect x="735.6" y="1893" width="1.8" height="15.0" fill="rgb(215,21,40)" rx="2" ry="2" />
<text  x="738.56" y="1903.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (14 samples, 0.27%)</title><rect x="81.2" y="1957" width="3.2" height="15.0" fill="rgb(248,27,9)" rx="2" ry="2" />
<text  x="84.24" y="1967.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.08%)</title><rect x="284.3" y="1589" width="0.9" height="15.0" fill="rgb(243,124,15)" rx="2" ry="2" />
<text  x="287.30" y="1599.5" ></text>
</g>
<g >
<title>utils::tuple_hash::operator (10 samples, 0.19%)</title><rect x="746.5" y="1765" width="2.2" height="15.0" fill="rgb(250,127,35)" rx="2" ry="2" />
<text  x="749.45" y="1775.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.02%)</title><rect x="46.3" y="1589" width="0.2" height="15.0" fill="rgb(241,26,24)" rx="2" ry="2" />
<text  x="49.30" y="1599.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (2 samples, 0.04%)</title><rect x="814.5" y="1541" width="0.5" height="15.0" fill="rgb(243,60,25)" rx="2" ry="2" />
<text  x="817.51" y="1551.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;void&gt;  (1 samples, 0.02%)</title><rect x="730.3" y="1877" width="0.3" height="15.0" fill="rgb(244,137,11)" rx="2" ry="2" />
<text  x="733.34" y="1887.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="568.1" y="1845" width="0.3" height="15.0" fill="rgb(218,23,4)" rx="2" ry="2" />
<text  x="571.12" y="1855.5" ></text>
</g>
<g >
<title>row::external_memory_usage (1 samples, 0.02%)</title><rect x="257.3" y="1589" width="0.2" height="15.0" fill="rgb(254,208,48)" rx="2" ry="2" />
<text  x="260.30" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (1 samples, 0.02%)</title><rect x="11.4" y="1461" width="0.2" height="15.0" fill="rgb(248,217,19)" rx="2" ry="2" />
<text  x="14.36" y="1471.5" ></text>
</g>
<g >
<title>double_decker&lt;long, cache_entry, dht::raw_token_less_comparator, dht::ring_position_comparator, 16,  (15 samples, 0.29%)</title><rect x="541.8" y="1733" width="3.4" height="15.0" fill="rgb(241,223,9)" rx="2" ry="2" />
<text  x="544.81" y="1743.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;, service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (21 samples, 0.40%)</title><rect x="1129.2" y="1717" width="4.8" height="15.0" fill="rgb(214,152,36)" rx="2" ry="2" />
<text  x="1132.20" y="1727.5" ></text>
</g>
<g >
<title>seastar::futurize_invoke&lt;seastar::future&lt;void&gt;  (455 samples, 8.75%)</title><rect x="330.4" y="1765" width="103.2" height="15.0" fill="rgb(226,29,17)" rx="2" ry="2" />
<text  x="333.35" y="1775.5" >seastar::fut..</text>
</g>
<g >
<title>query::partition_slice::partition_slice (3 samples, 0.06%)</title><rect x="555.2" y="1829" width="0.7" height="15.0" fill="rgb(246,147,5)" rx="2" ry="2" />
<text  x="558.19" y="1839.5" ></text>
</g>
<g >
<title>service::get_local_priority_manager (2 samples, 0.04%)</title><rect x="136.8" y="1877" width="0.5" height="15.0" fill="rgb(232,1,52)" rx="2" ry="2" />
<text  x="139.83" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.5" y="965" width="0.2" height="15.0" fill="rgb(205,16,39)" rx="2" ry="2" />
<text  x="13.45" y="975.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reserve&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (442 samples, 8.50%)</title><rect x="192.4" y="1701" width="100.3" height="15.0" fill="rgb(233,36,32)" rx="2" ry="2" />
<text  x="195.41" y="1711.5" >logalloc::al..</text>
</g>
<g >
<title>operator delete (2 samples, 0.04%)</title><rect x="684.1" y="1893" width="0.4" height="15.0" fill="rgb(223,90,23)" rx="2" ry="2" />
<text  x="687.06" y="1903.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;std::_List_iterator&lt;flat_mutation_reader&gt;, mutation_reader_merger::close (1 samples, 0.02%)</title><rect x="1165.3" y="1829" width="0.2" height="15.0" fill="rgb(215,210,11)" rx="2" ry="2" />
<text  x="1168.27" y="1839.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.02%)</title><rect x="58.8" y="1525" width="0.2" height="15.0" fill="rgb(221,98,18)" rx="2" ry="2" />
<text  x="61.78" y="1535.5" ></text>
</g>
<g >
<title>db::commitlog::add_entry (5 samples, 0.10%)</title><rect x="1125.3" y="1733" width="1.2" height="15.0" fill="rgb(234,171,4)" rx="2" ry="2" />
<text  x="1128.34" y="1743.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (5 samples, 0.10%)</title><rect x="156.3" y="1861" width="1.2" height="15.0" fill="rgb(223,218,31)" rx="2" ry="2" />
<text  x="159.34" y="1871.5" ></text>
</g>
<g >
<title>std::optional&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::operator= (1 samples, 0.02%)</title><rect x="40.6" y="1733" width="0.3" height="15.0" fill="rgb(248,5,40)" rx="2" ry="2" />
<text  x="43.63" y="1743.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (2 samples, 0.04%)</title><rect x="932.0" y="1781" width="0.5" height="15.0" fill="rgb(218,210,39)" rx="2" ry="2" />
<text  x="935.04" y="1791.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::~partition_snapshot_flat_reader (1 samples, 0.02%)</title><rect x="588.1" y="1765" width="0.2" height="15.0" fill="rgb(212,98,36)" rx="2" ry="2" />
<text  x="591.09" y="1775.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::get_mutations (18 samples, 0.35%)</title><rect x="875.5" y="1829" width="4.1" height="15.0" fill="rgb(220,21,20)" rx="2" ry="2" />
<text  x="878.55" y="1839.5" ></text>
</g>
<g >
<title>std::__make_heap&lt;__gnu_cxx::__normal_iterator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position*, std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::heap_compare&gt; &gt; (1 samples, 0.02%)</title><rect x="263.7" y="1573" width="0.2" height="15.0" fill="rgb(241,214,28)" rx="2" ry="2" />
<text  x="266.65" y="1583.5" ></text>
</g>
<g >
<title>service::shared_mutation::shared_mutation (10 samples, 0.19%)</title><rect x="1129.7" y="1637" width="2.2" height="15.0" fill="rgb(252,84,15)" rx="2" ry="2" />
<text  x="1132.65" y="1647.5" ></text>
</g>
<g >
<title>logalloc::region_group::top_region_evictable_space (1 samples, 0.02%)</title><rect x="81.2" y="1765" width="0.3" height="15.0" fill="rgb(236,65,22)" rx="2" ry="2" />
<text  x="84.24" y="1775.5" ></text>
</g>
<g >
<title>query_data_on_all_shards (1 samples, 0.02%)</title><rect x="11.6" y="2021" width="0.2" height="15.0" fill="rgb(240,199,54)" rx="2" ry="2" />
<text  x="14.59" y="2031.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (3 samples, 0.06%)</title><rect x="1163.5" y="1845" width="0.6" height="15.0" fill="rgb(214,52,43)" rx="2" ry="2" />
<text  x="1166.46" y="1855.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="73.3" y="1669" width="0.2" height="15.0" fill="rgb(223,167,8)" rx="2" ry="2" />
<text  x="76.30" y="1679.5" ></text>
</g>
<g >
<title>std::hash&lt;std::basic_string_view&lt;signed char, std::char_traits&lt;signed char&gt; &gt; &gt;::operator (10 samples, 0.19%)</title><rect x="746.5" y="1733" width="2.2" height="15.0" fill="rgb(244,223,47)" rx="2" ry="2" />
<text  x="749.45" y="1743.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;schema&gt;::make&lt;schema&gt; (1 samples, 0.02%)</title><rect x="17.3" y="1653" width="0.2" height="15.0" fill="rgb(214,64,3)" rx="2" ry="2" />
<text  x="20.26" y="1663.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.08%)</title><rect x="679.3" y="1909" width="0.9" height="15.0" fill="rgb(253,83,49)" rx="2" ry="2" />
<text  x="682.29" y="1919.5" ></text>
</g>
<g >
<title>std::type_info::operator== (1 samples, 0.02%)</title><rect x="725.4" y="1877" width="0.2" height="15.0" fill="rgb(248,107,11)" rx="2" ry="2" />
<text  x="728.35" y="1887.5" ></text>
</g>
<g >
<title>reader_permit::consume_resources (1 samples, 0.02%)</title><rect x="204.7" y="1621" width="0.2" height="15.0" fill="rgb(241,80,26)" rx="2" ry="2" />
<text  x="207.66" y="1631.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (2 samples, 0.04%)</title><rect x="58.6" y="1621" width="0.4" height="15.0" fill="rgb(207,120,48)" rx="2" ry="2" />
<text  x="61.55" y="1631.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.04%)</title><rect x="535.2" y="1733" width="0.5" height="15.0" fill="rgb(233,40,43)" rx="2" ry="2" />
<text  x="538.23" y="1743.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (1 samples, 0.02%)</title><rect x="74.0" y="1749" width="0.2" height="15.0" fill="rgb(253,181,10)" rx="2" ry="2" />
<text  x="76.98" y="1759.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::clear (3 samples, 0.06%)</title><rect x="190.1" y="1701" width="0.7" height="15.0" fill="rgb(247,137,16)" rx="2" ry="2" />
<text  x="193.14" y="1711.5" ></text>
</g>
<g >
<title>antlr3::CyclicDFA&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, cql3_parser::CqlLexer&gt;::predict&lt;cql3_parser::CqlLexerCyclicDFA44&gt; (8 samples, 0.15%)</title><rect x="33.4" y="1669" width="1.8" height="15.0" fill="rgb(233,61,19)" rx="2" ry="2" />
<text  x="36.37" y="1679.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::relation (17 samples, 0.33%)</title><rect x="57.4" y="1765" width="3.9" height="15.0" fill="rgb(205,87,20)" rx="2" ry="2" />
<text  x="60.42" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_need_rehash (4 samples, 0.08%)</title><rect x="1151.4" y="1877" width="0.9" height="15.0" fill="rgb(230,9,17)" rx="2" ry="2" />
<text  x="1154.43" y="1887.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::_M_range_initialize&lt;managed_bytes const*&gt; (1 samples, 0.02%)</title><rect x="908.7" y="1781" width="0.2" height="15.0" fill="rgb(206,113,25)" rx="2" ry="2" />
<text  x="911.67" y="1791.5" ></text>
</g>
<g >
<title>v3_columns::v3_columns (1 samples, 0.02%)</title><rect x="17.3" y="1573" width="0.2" height="15.0" fill="rgb(209,13,34)" rx="2" ry="2" />
<text  x="20.26" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;seastar::future&lt;void&gt; &gt;  (9 samples, 0.17%)</title><rect x="633.5" y="1861" width="2.0" height="15.0" fill="rgb(215,55,28)" rx="2" ry="2" />
<text  x="636.46" y="1871.5" ></text>
</g>
<g >
<title>mutation_reader_merger::close (1 samples, 0.02%)</title><rect x="1165.3" y="1845" width="0.2" height="15.0" fill="rgb(211,97,40)" rx="2" ry="2" />
<text  x="1168.27" y="1855.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;void&gt;, database*, seastar::lw_shared_ptr&lt;schema const&gt;, frozen_mutation const&amp;, tracing::trace_state_ptr, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, seastar::bool_class&lt;db::force_sync_tag&gt; &gt;::operator (1 samples, 0.02%)</title><rect x="1128.3" y="1557" width="0.2" height="15.0" fill="rgb(206,211,35)" rx="2" ry="2" />
<text  x="1131.29" y="1567.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.02%)</title><rect x="73.1" y="1637" width="0.2" height="15.0" fill="rgb(238,205,5)" rx="2" ry="2" />
<text  x="76.07" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.5" y="1397" width="0.2" height="15.0" fill="rgb(252,27,1)" rx="2" ry="2" />
<text  x="13.45" y="1407.5" ></text>
</g>
<g >
<title>mutation_partition::clustered_row (1 samples, 0.02%)</title><rect x="101.7" y="1845" width="0.2" height="15.0" fill="rgb(214,159,24)" rx="2" ry="2" />
<text  x="104.66" y="1855.5" ></text>
</g>
<g >
<title>seastar::internal::when_all_state&lt;seastar::internal::extract_values_from_futures_tuple&lt;seastar::future&lt;void&gt;, seastar::future&lt;void&gt; &gt;, seastar::future&lt;void&gt;, seastar::future&lt;void&gt; &gt;::~when_all_state (1 samples, 0.02%)</title><rect x="874.2" y="1893" width="0.2" height="15.0" fill="rgb(246,36,38)" rx="2" ry="2" />
<text  x="877.18" y="1903.5" ></text>
</g>
<g >
<title>query::result_set_builder::accept_new_row (1 samples, 0.02%)</title><rect x="109.1" y="1749" width="0.3" height="15.0" fill="rgb(244,180,49)" rx="2" ry="2" />
<text  x="112.15" y="1759.5" ></text>
</g>
<g >
<title>sstables::sstable::do_write_simple (1 samples, 0.02%)</title><rect x="698.8" y="1653" width="0.2" height="15.0" fill="rgb(222,48,3)" rx="2" ry="2" />
<text  x="701.81" y="1663.5" ></text>
</g>
<g >
<title>query::partition_slice::row_ranges (1 samples, 0.02%)</title><rect x="537.7" y="1765" width="0.2" height="15.0" fill="rgb(247,28,33)" rx="2" ry="2" />
<text  x="540.72" y="1775.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate (2 samples, 0.04%)</title><rect x="875.1" y="1797" width="0.4" height="15.0" fill="rgb(241,0,33)" rx="2" ry="2" />
<text  x="878.09" y="1807.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_digest_requests (2 samples, 0.04%)</title><rect x="1045.7" y="1749" width="0.5" height="15.0" fill="rgb(221,97,31)" rx="2" ry="2" />
<text  x="1048.70" y="1759.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (2 samples, 0.04%)</title><rect x="313.6" y="1717" width="0.4" height="15.0" fill="rgb(226,213,21)" rx="2" ry="2" />
<text  x="316.56" y="1727.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::clear (1 samples, 0.02%)</title><rect x="464.0" y="1701" width="0.2" height="15.0" fill="rgb(218,190,42)" rx="2" ry="2" />
<text  x="466.99" y="1711.5" ></text>
</g>
<g >
<title>query::result::result (3 samples, 0.06%)</title><rect x="608.7" y="1845" width="0.7" height="15.0" fill="rgb(209,45,20)" rx="2" ry="2" />
<text  x="611.73" y="1855.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (2 samples, 0.04%)</title><rect x="649.6" y="1893" width="0.4" height="15.0" fill="rgb(229,12,1)" rx="2" ry="2" />
<text  x="652.57" y="1903.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (2 samples, 0.04%)</title><rect x="838.3" y="1717" width="0.5" height="15.0" fill="rgb(217,170,19)" rx="2" ry="2" />
<text  x="841.34" y="1727.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.02%)</title><rect x="38.6" y="1685" width="0.2" height="15.0" fill="rgb(224,157,29)" rx="2" ry="2" />
<text  x="41.59" y="1695.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.29] (1 samples, 0.02%)</title><rect x="956.8" y="1813" width="0.2" height="15.0" fill="rgb(235,1,54)" rx="2" ry="2" />
<text  x="959.77" y="1823.5" ></text>
</g>
<g >
<title>seastar::smp::submit_to&lt;seastar::sharded&lt;database&gt;::invoke_on_all (1 samples, 0.02%)</title><rect x="17.3" y="1797" width="0.2" height="15.0" fill="rgb(214,35,44)" rx="2" ry="2" />
<text  x="20.26" y="1807.5" ></text>
</g>
<g >
<title>locator::calculate_effective_replication_map (1 samples, 0.02%)</title><rect x="17.7" y="1845" width="0.2" height="15.0" fill="rgb(217,169,22)" rx="2" ry="2" />
<text  x="20.71" y="1855.5" ></text>
</g>
<g >
<title>seastar::internal::try_reap_events (1 samples, 0.02%)</title><rect x="1166.2" y="1877" width="0.2" height="15.0" fill="rgb(217,116,53)" rx="2" ry="2" />
<text  x="1169.18" y="1887.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql3::metadata&gt;::~shared_ptr_count_for (1 samples, 0.02%)</title><rect x="95.8" y="1909" width="0.2" height="15.0" fill="rgb(248,229,33)" rx="2" ry="2" />
<text  x="98.76" y="1919.5" ></text>
</g>
<g >
<title>auth::standard_role_manager::create_metadata_tables_if_missing (1 samples, 0.02%)</title><rect x="700.6" y="1877" width="0.2" height="15.0" fill="rgb(248,80,51)" rx="2" ry="2" />
<text  x="703.62" y="1887.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="109.4" y="1845" width="0.2" height="15.0" fill="rgb(209,87,50)" rx="2" ry="2" />
<text  x="112.37" y="1855.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (2 samples, 0.04%)</title><rect x="1140.8" y="1909" width="0.4" height="15.0" fill="rgb(220,77,28)" rx="2" ry="2" />
<text  x="1143.77" y="1919.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (2 samples, 0.04%)</title><rect x="1121.5" y="1621" width="0.4" height="15.0" fill="rgb(231,54,8)" rx="2" ry="2" />
<text  x="1124.48" y="1631.5" ></text>
</g>
<g >
<title>database::get_reader_concurrency_semaphore (1 samples, 0.02%)</title><rect x="1011.7" y="1669" width="0.2" height="15.0" fill="rgb(230,120,4)" rx="2" ry="2" />
<text  x="1014.67" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.5" y="837" width="0.2" height="15.0" fill="rgb(219,196,18)" rx="2" ry="2" />
<text  x="13.45" y="847.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::clear (6 samples, 0.12%)</title><rect x="299.3" y="1701" width="1.3" height="15.0" fill="rgb(230,168,48)" rx="2" ry="2" />
<text  x="302.27" y="1711.5" ></text>
</g>
<g >
<title>seastar::logger::log&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;&amp;&gt; (1 samples, 0.02%)</title><rect x="849.0" y="1861" width="0.2" height="15.0" fill="rgb(242,77,13)" rx="2" ry="2" />
<text  x="852.00" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_Compiler (1 samples, 0.02%)</title><rect x="11.4" y="1541" width="0.2" height="15.0" fill="rgb(237,71,16)" rx="2" ry="2" />
<text  x="14.36" y="1551.5" ></text>
</g>
<g >
<title>mutation::set_cell (1 samples, 0.02%)</title><rect x="106.2" y="1909" width="0.2" height="15.0" fill="rgb(216,12,38)" rx="2" ry="2" />
<text  x="109.20" y="1919.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (3 samples, 0.06%)</title><rect x="697.4" y="1909" width="0.7" height="15.0" fill="rgb(237,177,26)" rx="2" ry="2" />
<text  x="700.44" y="1919.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement::execute (103 samples, 1.98%)</title><rect x="655.5" y="1925" width="23.3" height="15.0" fill="rgb(224,14,45)" rx="2" ry="2" />
<text  x="658.47" y="1935.5" >s..</text>
</g>
<g >
<title>cql3::query_options::get_value_at (8 samples, 0.15%)</title><rect x="898.2" y="1733" width="1.8" height="15.0" fill="rgb(247,73,16)" rx="2" ry="2" />
<text  x="901.23" y="1743.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;cql3::statements::update_statement, false&gt;::make&lt;cql3::statements::statement_type const&amp;, unsigned long, seastar::lw_shared_ptr&lt;schema const&gt;&amp;, std::unique_ptr&lt;cql3::attributes, std::default_delete&lt;cql3::attributes&gt; &gt;, cql3::cql_stats&amp;&gt; (1 samples, 0.02%)</title><rect x="75.1" y="1845" width="0.2" height="15.0" fill="rgb(233,211,16)" rx="2" ry="2" />
<text  x="78.11" y="1855.5" ></text>
</g>
<g >
<title>atomic_cell_or_collection::copy (1 samples, 0.02%)</title><rect x="82.6" y="1605" width="0.2" height="15.0" fill="rgb(218,5,6)" rx="2" ry="2" />
<text  x="85.60" y="1615.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (2 samples, 0.04%)</title><rect x="58.6" y="1653" width="0.4" height="15.0" fill="rgb(218,35,7)" rx="2" ry="2" />
<text  x="61.55" y="1663.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::column_identifier&gt;::shared_ptr (1 samples, 0.02%)</title><rect x="56.7" y="1765" width="0.3" height="15.0" fill="rgb(218,165,16)" rx="2" ry="2" />
<text  x="59.74" y="1775.5" ></text>
</g>
<g >
<title>cql3::expr::prepare_term (1 samples, 0.02%)</title><rect x="11.4" y="1653" width="0.2" height="15.0" fill="rgb(222,21,5)" rx="2" ry="2" />
<text  x="14.36" y="1663.5" ></text>
</g>
<g >
<title>atomic_cell::make_live (4 samples, 0.08%)</title><rect x="1121.0" y="1653" width="0.9" height="15.0" fill="rgb(246,129,31)" rx="2" ry="2" />
<text  x="1124.03" y="1663.5" ></text>
</g>
<g >
<title>dht::tri_compare (2 samples, 0.04%)</title><rect x="1067.9" y="1669" width="0.5" height="15.0" fill="rgb(245,2,45)" rx="2" ry="2" />
<text  x="1070.94" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.5" y="1061" width="0.2" height="15.0" fill="rgb(207,205,36)" rx="2" ry="2" />
<text  x="13.45" y="1071.5" ></text>
</g>
<g >
<title>seastar::internal::uninitialized_wrapper_base&lt;utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (1 samples, 0.02%)</title><rect x="807.5" y="1589" width="0.2" height="15.0" fill="rgb(236,206,28)" rx="2" ry="2" />
<text  x="810.48" y="1599.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Scoped_node::~_Scoped_node (1 samples, 0.02%)</title><rect x="1153.2" y="1893" width="0.3" height="15.0" fill="rgb(207,207,31)" rx="2" ry="2" />
<text  x="1156.25" y="1903.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (2 samples, 0.04%)</title><rect x="906.9" y="1765" width="0.4" height="15.0" fill="rgb(232,128,6)" rx="2" ry="2" />
<text  x="909.85" y="1775.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (6 samples, 0.12%)</title><rect x="761.2" y="1749" width="1.4" height="15.0" fill="rgb(245,124,42)" rx="2" ry="2" />
<text  x="764.20" y="1759.5" ></text>
</g>
<g >
<title>db::assure_sufficient_live_nodes&lt;utils::small_vector&lt;gms::inet_address, 3ul&gt;, std::array&lt;gms::inet_address, 0ul&gt; &gt; (1 samples, 0.02%)</title><rect x="1056.1" y="1765" width="0.3" height="15.0" fill="rgb(252,212,23)" rx="2" ry="2" />
<text  x="1059.14" y="1775.5" ></text>
</g>
<g >
<title>std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt;::_M_realloc_insert&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; (5 samples, 0.10%)</title><rect x="284.1" y="1621" width="1.1" height="15.0" fill="rgb(231,196,24)" rx="2" ry="2" />
<text  x="287.07" y="1631.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="51.3" y="1653" width="0.2" height="15.0" fill="rgb(253,118,18)" rx="2" ry="2" />
<text  x="54.29" y="1663.5" ></text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::find (4 samples, 0.08%)</title><rect x="951.8" y="1765" width="0.9" height="15.0" fill="rgb(245,48,31)" rx="2" ry="2" />
<text  x="954.78" y="1775.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_Optional_payload_base (8 samples, 0.15%)</title><rect x="1061.8" y="1717" width="1.8" height="15.0" fill="rgb(226,26,6)" rx="2" ry="2" />
<text  x="1064.81" y="1727.5" ></text>
</g>
<g >
<title>cql3::statements::update_statement::add_update_for_key (4 samples, 0.08%)</title><rect x="878.0" y="1781" width="0.9" height="15.0" fill="rgb(236,8,14)" rx="2" ry="2" />
<text  x="881.04" y="1791.5" ></text>
</g>
<g >
<title>partition_key::from_range&lt;std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt; const&amp;&gt; (1 samples, 0.02%)</title><rect x="877.4" y="1765" width="0.2" height="15.0" fill="rgb(245,170,17)" rx="2" ry="2" />
<text  x="880.36" y="1775.5" ></text>
</g>
<g >
<title>mutation_partition_view::from_view (1 samples, 0.02%)</title><rect x="1124.7" y="1669" width="0.2" height="15.0" fill="rgb(216,96,11)" rx="2" ry="2" />
<text  x="1127.66" y="1679.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::make_ready&lt; (1 samples, 0.02%)</title><rect x="623.5" y="1861" width="0.2" height="15.0" fill="rgb(248,50,46)" rx="2" ry="2" />
<text  x="626.48" y="1871.5" ></text>
</g>
<g >
<title>validation::validate_column_family (2 samples, 0.04%)</title><rect x="79.0" y="1877" width="0.4" height="15.0" fill="rgb(253,54,31)" rx="2" ry="2" />
<text  x="81.97" y="1887.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;cql3::metadata, false&gt;::make&lt;cql3::metadata&amp;&gt; (1 samples, 0.02%)</title><rect x="674.3" y="1909" width="0.2" height="15.0" fill="rgb(249,17,20)" rx="2" ry="2" />
<text  x="677.30" y="1919.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (3 samples, 0.06%)</title><rect x="504.4" y="1637" width="0.7" height="15.0" fill="rgb(215,165,0)" rx="2" ry="2" />
<text  x="507.37" y="1647.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="209.7" y="1637" width="0.2" height="15.0" fill="rgb(217,13,35)" rx="2" ry="2" />
<text  x="212.65" y="1647.5" ></text>
</g>
<g >
<title>ser::writer_of_query_result&lt;bytes_ostream&gt;::start_partitions (3 samples, 0.06%)</title><rect x="613.3" y="1829" width="0.7" height="15.0" fill="rgb(214,28,35)" rx="2" ry="2" />
<text  x="616.27" y="1839.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::query_processor::process_authorized_statement (1 samples, 0.02%)</title><rect x="85.8" y="1941" width="0.2" height="15.0" fill="rgb(229,173,44)" rx="2" ry="2" />
<text  x="88.78" y="1951.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="836.7" y="1701" width="0.3" height="15.0" fill="rgb(216,16,11)" rx="2" ry="2" />
<text  x="839.75" y="1711.5" ></text>
</g>
<g >
<title>std::hash&lt;gms::inet_address&gt;::operator (1 samples, 0.02%)</title><rect x="1143.5" y="1845" width="0.2" height="15.0" fill="rgb(248,39,54)" rx="2" ry="2" />
<text  x="1146.49" y="1855.5" ></text>
</g>
<g >
<title>ser::deletable_row_view::key (2 samples, 0.04%)</title><rect x="1123.1" y="1653" width="0.4" height="15.0" fill="rgb(251,128,54)" rx="2" ry="2" />
<text  x="1126.07" y="1663.5" ></text>
</g>
<g >
<title>std::forward&lt;cql3::expr::expression&gt; (1 samples, 0.02%)</title><rect x="60.8" y="1749" width="0.2" height="15.0" fill="rgb(233,165,42)" rx="2" ry="2" />
<text  x="63.82" y="1759.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.02%)</title><rect x="39.3" y="1669" width="0.2" height="15.0" fill="rgb(223,189,0)" rx="2" ry="2" />
<text  x="42.27" y="1679.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::normalColumnOperation (43 samples, 0.83%)</title><rect x="47.0" y="1749" width="9.7" height="15.0" fill="rgb(211,126,49)" rx="2" ry="2" />
<text  x="49.98" y="1759.5" ></text>
</g>
<g >
<title>std::visit&lt;overloaded_functor&lt;cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_token (1 samples, 0.02%)</title><rect x="660.9" y="1797" width="0.2" height="15.0" fill="rgb(211,14,11)" rx="2" ry="2" />
<text  x="663.92" y="1807.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (1 samples, 0.02%)</title><rect x="59.5" y="1701" width="0.2" height="15.0" fill="rgb(206,149,48)" rx="2" ry="2" />
<text  x="62.46" y="1711.5" ></text>
</g>
<g >
<title>reader_permit::impl::mark_used (4 samples, 0.08%)</title><rect x="125.3" y="1877" width="0.9" height="15.0" fill="rgb(234,48,54)" rx="2" ry="2" />
<text  x="128.25" y="1887.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_token (4 samples, 0.08%)</title><rect x="661.4" y="1813" width="0.9" height="15.0" fill="rgb(213,211,36)" rx="2" ry="2" />
<text  x="664.37" y="1823.5" ></text>
</g>
<g >
<title>flat_mutation_reader::peek (4 samples, 0.08%)</title><rect x="324.0" y="1797" width="0.9" height="15.0" fill="rgb(218,199,41)" rx="2" ry="2" />
<text  x="327.00" y="1807.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::get_tokenStartLine (1 samples, 0.02%)</title><rect x="28.6" y="1685" width="0.2" height="15.0" fill="rgb(248,27,52)" rx="2" ry="2" />
<text  x="31.60" y="1695.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;service::query_state&gt;::~shared_ptr_count_for (5 samples, 0.10%)</title><rect x="683.6" y="1909" width="1.1" height="15.0" fill="rgb(239,11,7)" rx="2" ry="2" />
<text  x="686.61" y="1919.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (2 samples, 0.04%)</title><rect x="1041.8" y="1637" width="0.5" height="15.0" fill="rgb(225,73,21)" rx="2" ry="2" />
<text  x="1044.85" y="1647.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::clear (1 samples, 0.02%)</title><rect x="883.5" y="1893" width="0.2" height="15.0" fill="rgb(213,157,48)" rx="2" ry="2" />
<text  x="886.49" y="1903.5" ></text>
</g>
<g >
<title>schema::schema (1 samples, 0.02%)</title><rect x="17.3" y="1637" width="0.2" height="15.0" fill="rgb(230,1,47)" rx="2" ry="2" />
<text  x="20.26" y="1647.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::operation::set_value, std::default_delete&lt;cql3::operation::set_value&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::operation::set_value&gt;, void&gt; (1 samples, 0.02%)</title><rect x="56.5" y="1717" width="0.2" height="15.0" fill="rgb(219,130,25)" rx="2" ry="2" />
<text  x="59.51" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.5" y="1861" width="0.2" height="15.0" fill="rgb(247,133,20)" rx="2" ry="2" />
<text  x="13.45" y="1871.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::execute (626 samples, 12.04%)</title><rect x="948.4" y="1845" width="142.0" height="15.0" fill="rgb(215,211,29)" rx="2" ry="2" />
<text  x="951.37" y="1855.5" >cql3::statements::..</text>
</g>
<g >
<title>cql3::restrictions::single_column_restrictions::size (1 samples, 0.02%)</title><rect x="662.7" y="1877" width="0.3" height="15.0" fill="rgb(215,59,31)" rx="2" ry="2" />
<text  x="665.73" y="1887.5" ></text>
</g>
<g >
<title>db::schema_tables::merge_schema (1 samples, 0.02%)</title><rect x="107.6" y="1925" width="0.2" height="15.0" fill="rgb(218,95,17)" rx="2" ry="2" />
<text  x="110.56" y="1935.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::remove_if&lt;row::compact_and_expire (1 samples, 0.02%)</title><rect x="700.2" y="1701" width="0.2" height="15.0" fill="rgb(231,136,36)" rx="2" ry="2" />
<text  x="703.17" y="1711.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="432.9" y="1669" width="0.2" height="15.0" fill="rgb(244,90,19)" rx="2" ry="2" />
<text  x="435.90" y="1679.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.04%)</title><rect x="39.7" y="1701" width="0.5" height="15.0" fill="rgb(248,99,1)" rx="2" ry="2" />
<text  x="42.72" y="1711.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::vector (10 samples, 0.19%)</title><rect x="939.3" y="1829" width="2.3" height="15.0" fill="rgb(239,190,49)" rx="2" ry="2" />
<text  x="942.30" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;11ul, cql3::expr::untyped_constant&gt; (2 samples, 0.04%)</title><rect x="52.7" y="1621" width="0.4" height="15.0" fill="rgb(223,123,50)" rx="2" ry="2" />
<text  x="55.65" y="1631.5" ></text>
</g>
<g >
<title>service::storage_proxy::do_mutate (33 samples, 0.63%)</title><rect x="1126.5" y="1765" width="7.5" height="15.0" fill="rgb(227,159,18)" rx="2" ry="2" />
<text  x="1129.47" y="1775.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_result_local (212 samples, 4.08%)</title><rect x="995.6" y="1717" width="48.1" height="15.0" fill="rgb(207,229,34)" rx="2" ry="2" />
<text  x="998.56" y="1727.5" >serv..</text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.5" y="1765" width="0.2" height="15.0" fill="rgb(208,8,45)" rx="2" ry="2" />
<text  x="13.45" y="1775.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (2 samples, 0.04%)</title><rect x="58.6" y="1589" width="0.4" height="15.0" fill="rgb(248,63,14)" rx="2" ry="2" />
<text  x="61.55" y="1599.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (3 samples, 0.06%)</title><rect x="38.4" y="1749" width="0.6" height="15.0" fill="rgb(237,15,0)" rx="2" ry="2" />
<text  x="41.36" y="1759.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.02%)</title><rect x="831.1" y="1797" width="0.2" height="15.0" fill="rgb(224,131,12)" rx="2" ry="2" />
<text  x="834.08" y="1807.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;position_in_partition&gt;::_M_reset (5 samples, 0.10%)</title><rect x="286.6" y="1669" width="1.1" height="15.0" fill="rgb(217,24,12)" rx="2" ry="2" />
<text  x="289.57" y="1679.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_map&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::at&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt; &gt; (14 samples, 0.27%)</title><rect x="1053.0" y="1749" width="3.1" height="15.0" fill="rgb(234,159,6)" rx="2" ry="2" />
<text  x="1055.96" y="1759.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (1 samples, 0.02%)</title><rect x="816.8" y="1621" width="0.2" height="15.0" fill="rgb(229,210,33)" rx="2" ry="2" />
<text  x="819.78" y="1631.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (1 samples, 0.02%)</title><rect x="787.7" y="1765" width="0.3" height="15.0" fill="rgb(251,137,53)" rx="2" ry="2" />
<text  x="790.74" y="1775.5" ></text>
</g>
<g >
<title>database::find_uuid (1 samples, 0.02%)</title><rect x="79.2" y="1845" width="0.2" height="15.0" fill="rgb(236,68,7)" rx="2" ry="2" />
<text  x="82.20" y="1855.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.02%)</title><rect x="46.8" y="1541" width="0.2" height="15.0" fill="rgb(219,179,50)" rx="2" ry="2" />
<text  x="49.75" y="1551.5" ></text>
</g>
<g >
<title>sstables::sstable_writer::consume_new_partition (1 samples, 0.02%)</title><rect x="84.0" y="1829" width="0.2" height="15.0" fill="rgb(205,29,16)" rx="2" ry="2" />
<text  x="86.96" y="1839.5" ></text>
</g>
<g >
<title>partition_entry::read (5 samples, 0.10%)</title><rect x="533.2" y="1733" width="1.1" height="15.0" fill="rgb(239,171,23)" rx="2" ry="2" />
<text  x="536.18" y="1743.5" ></text>
</g>
<g >
<title>appending_hash&lt;mutation&gt;::operator (1 samples, 0.02%)</title><rect x="107.6" y="1845" width="0.2" height="15.0" fill="rgb(222,165,39)" rx="2" ry="2" />
<text  x="110.56" y="1855.5" ></text>
</g>
<g >
<title>seastar::chunked_fifo&lt;seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::entry, 128ul&gt;::emplace_back&lt;reader_concurrency_semaphore::entry, seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;&amp;, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;&amp;&gt; (20 samples, 0.38%)</title><rect x="1021.2" y="1605" width="4.5" height="15.0" fill="rgb(249,57,0)" rx="2" ry="2" />
<text  x="1024.20" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;, nonwrapping_interval&lt;managed_bytes&gt; &gt;::~_Variant_storage (3 samples, 0.06%)</title><rect x="935.9" y="1829" width="0.7" height="15.0" fill="rgb(247,7,18)" rx="2" ry="2" />
<text  x="938.90" y="1839.5" ></text>
</g>
<g >
<title>utils::tuple_hash::operator (6 samples, 0.12%)</title><rect x="837.7" y="1733" width="1.3" height="15.0" fill="rgb(232,17,4)" rx="2" ry="2" />
<text  x="840.66" y="1743.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (1 samples, 0.02%)</title><rect x="911.8" y="1797" width="0.3" height="15.0" fill="rgb(213,44,45)" rx="2" ry="2" />
<text  x="914.85" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (15 samples, 0.29%)</title><rect x="12.5" y="2021" width="3.4" height="15.0" fill="rgb(216,21,41)" rx="2" ry="2" />
<text  x="15.50" y="2031.5" ></text>
</g>
<g >
<title>std::default_delete&lt;cql3::expr::expression::impl&gt;::operator (1 samples, 0.02%)</title><rect x="72.4" y="1781" width="0.2" height="15.0" fill="rgb(206,39,18)" rx="2" ry="2" />
<text  x="75.39" y="1791.5" ></text>
</g>
<g >
<title>partition_key_view::legacy_form (2 samples, 0.04%)</title><rect x="918.2" y="1797" width="0.5" height="15.0" fill="rgb(234,113,48)" rx="2" ry="2" />
<text  x="921.20" y="1807.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (201 samples, 3.86%)</title><rect x="21.1" y="1845" width="45.6" height="15.0" fill="rgb(221,197,40)" rx="2" ry="2" />
<text  x="24.12" y="1855.5" >seas..</text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;reader_permit::impl, true&gt;::make&lt;reader_concurrency_semaphore&amp;, schema const* const&amp;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;&amp;, reader_resources&amp;, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;&amp;&gt; (1 samples, 0.02%)</title><rect x="1031.2" y="1669" width="0.2" height="15.0" fill="rgb(210,82,23)" rx="2" ry="2" />
<text  x="1034.18" y="1679.5" ></text>
</g>
<g >
<title>seastar::metrics::impl::metric_groups_impl::add_group (1 samples, 0.02%)</title><rect x="17.5" y="1765" width="0.2" height="15.0" fill="rgb(249,42,18)" rx="2" ry="2" />
<text  x="20.49" y="1775.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (2 samples, 0.04%)</title><rect x="1102.0" y="1813" width="0.4" height="15.0" fill="rgb(251,4,21)" rx="2" ry="2" />
<text  x="1104.97" y="1823.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (1 samples, 0.02%)</title><rect x="1165.7" y="1877" width="0.3" height="15.0" fill="rgb(238,213,29)" rx="2" ry="2" />
<text  x="1168.72" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.5" y="357" width="0.2" height="15.0" fill="rgb(205,187,45)" rx="2" ry="2" />
<text  x="13.45" y="367.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt; &gt;::invoke&lt;seastar::input_stream&lt;char&gt;::consume&lt;std::reference_wrapper&lt;sstables::mx::data_consume_rows_context_m&gt; &gt; (1 samples, 0.02%)</title><rect x="17.9" y="1589" width="0.3" height="15.0" fill="rgb(245,120,6)" rx="2" ry="2" />
<text  x="20.94" y="1599.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (2 samples, 0.04%)</title><rect x="49.9" y="1701" width="0.5" height="15.0" fill="rgb(244,38,36)" rx="2" ry="2" />
<text  x="52.93" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (1 samples, 0.02%)</title><rect x="11.4" y="1413" width="0.2" height="15.0" fill="rgb(243,172,35)" rx="2" ry="2" />
<text  x="14.36" y="1423.5" ></text>
</g>
<g >
<title>mutation::mutation (1 samples, 0.02%)</title><rect x="106.9" y="1717" width="0.2" height="15.0" fill="rgb(233,123,21)" rx="2" ry="2" />
<text  x="109.88" y="1727.5" ></text>
</g>
<g >
<title>seastar::future&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (13 samples, 0.25%)</title><rect x="804.8" y="1637" width="2.9" height="15.0" fill="rgb(230,112,28)" rx="2" ry="2" />
<text  x="807.76" y="1647.5" ></text>
</g>
<g >
<title>query::querier_base::~querier_base (1 samples, 0.02%)</title><rect x="1165.5" y="1909" width="0.2" height="15.0" fill="rgb(207,116,13)" rx="2" ry="2" />
<text  x="1168.50" y="1919.5" ></text>
</g>
<g >
<title>seastar::promise&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::promise (2 samples, 0.04%)</title><rect x="1118.3" y="1893" width="0.5" height="15.0" fill="rgb(240,219,13)" rx="2" ry="2" />
<text  x="1121.31" y="1903.5" ></text>
</g>
<g >
<title>TLS init function for bound_view::_empty_prefix (1 samples, 0.02%)</title><rect x="263.4" y="1525" width="0.3" height="15.0" fill="rgb(207,57,30)" rx="2" ry="2" />
<text  x="266.42" y="1535.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (2 samples, 0.04%)</title><rect x="39.7" y="1749" width="0.5" height="15.0" fill="rgb(243,218,37)" rx="2" ry="2" />
<text  x="42.72" y="1759.5" ></text>
</g>
<g >
<title>partition_version_ref::operator* (1 samples, 0.02%)</title><rect x="528.4" y="1653" width="0.2" height="15.0" fill="rgb(252,211,37)" rx="2" ry="2" />
<text  x="531.42" y="1663.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;cql3::expr::untyped_constant, void, void, cql3::expr::untyped_constant, void&gt; (2 samples, 0.04%)</title><rect x="52.7" y="1669" width="0.4" height="15.0" fill="rgb(248,177,48)" rx="2" ry="2" />
<text  x="55.65" y="1679.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;data_value, data_value&gt;, std::allocator&lt;std::pair&lt;data_value, data_value&gt; &gt; &gt;::vector (1 samples, 0.02%)</title><rect x="107.1" y="1653" width="0.2" height="15.0" fill="rgb(214,42,0)" rx="2" ry="2" />
<text  x="110.10" y="1663.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_last_fragment_kind, 4ul&gt;::emplace_back&lt;std::_List_iterator&lt;flat_mutation_reader&gt;, mutation_fragment::kind&gt; (1 samples, 0.02%)</title><rect x="303.4" y="1733" width="0.2" height="15.0" fill="rgb(210,130,24)" rx="2" ry="2" />
<text  x="306.36" y="1743.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::CqlParser (3 samples, 0.06%)</title><rect x="20.2" y="1845" width="0.7" height="15.0" fill="rgb(228,186,30)" rx="2" ry="2" />
<text  x="23.21" y="1855.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_slice_or_needs_filtering (2 samples, 0.04%)</title><rect x="944.1" y="1765" width="0.4" height="15.0" fill="rgb(206,1,35)" rx="2" ry="2" />
<text  x="947.06" y="1775.5" ></text>
</g>
<g >
<title>std::optional&lt;clustering_key_prefix&gt;::operator=&lt;clustering_key_prefix&amp;&gt; (3 samples, 0.06%)</title><rect x="414.5" y="1637" width="0.7" height="15.0" fill="rgb(226,68,17)" rx="2" ry="2" />
<text  x="417.53" y="1647.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_state&lt;std::tuple&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (1 samples, 0.02%)</title><rect x="332.2" y="1717" width="0.2" height="15.0" fill="rgb(233,54,36)" rx="2" ry="2" />
<text  x="335.17" y="1727.5" ></text>
</g>
<g >
<title>aligned_alloc (1 samples, 0.02%)</title><rect x="730.3" y="1637" width="0.3" height="15.0" fill="rgb(227,132,36)" rx="2" ry="2" />
<text  x="733.34" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.5" y="725" width="0.2" height="15.0" fill="rgb(206,188,13)" rx="2" ry="2" />
<text  x="13.45" y="735.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.29] (1 samples, 0.02%)</title><rect x="10.0" y="2021" width="0.2" height="15.0" fill="rgb(220,172,12)" rx="2" ry="2" />
<text  x="13.00" y="2031.5" ></text>
</g>
<g >
<title>db::block_for (2 samples, 0.04%)</title><rect x="1056.4" y="1765" width="0.4" height="15.0" fill="rgb(221,85,21)" rx="2" ry="2" />
<text  x="1059.37" y="1775.5" ></text>
</g>
<g >
<title>partition_snapshot::slide_to_oldest (1 samples, 0.02%)</title><rect x="17.0" y="1925" width="0.3" height="15.0" fill="rgb(232,146,33)" rx="2" ry="2" />
<text  x="20.03" y="1935.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (33 samples, 0.63%)</title><rect x="1119.0" y="1813" width="7.5" height="15.0" fill="rgb(250,193,44)" rx="2" ry="2" />
<text  x="1121.99" y="1823.5" ></text>
</g>
<g >
<title>make_partition_snapshot_flat_reader_from_snp_schema (1 samples, 0.02%)</title><rect x="475.1" y="1765" width="0.2" height="15.0" fill="rgb(209,5,31)" rx="2" ry="2" />
<text  x="478.10" y="1775.5" ></text>
</g>
<g >
<title>mutation_reader_merger::close (6 samples, 0.12%)</title><rect x="596.7" y="1813" width="1.4" height="15.0" fill="rgb(232,155,31)" rx="2" ry="2" />
<text  x="599.71" y="1823.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (3 samples, 0.06%)</title><rect x="439.0" y="1845" width="0.7" height="15.0" fill="rgb(230,75,13)" rx="2" ry="2" />
<text  x="442.03" y="1855.5" ></text>
</g>
<g >
<title>nonwrapping_interval&lt;dht::ring_position&gt;::nonwrapping_interval (4 samples, 0.08%)</title><rect x="924.6" y="1797" width="0.9" height="15.0" fill="rgb(243,6,32)" rx="2" ry="2" />
<text  x="927.55" y="1807.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;::operator (1 samples, 0.02%)</title><rect x="74.9" y="1813" width="0.2" height="15.0" fill="rgb(249,73,39)" rx="2" ry="2" />
<text  x="77.89" y="1823.5" ></text>
</g>
<g >
<title>list_reader_selector::create_new_readers (6 samples, 0.12%)</title><rect x="453.8" y="1701" width="1.3" height="15.0" fill="rgb(206,122,21)" rx="2" ry="2" />
<text  x="456.78" y="1711.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (2 samples, 0.04%)</title><rect x="42.4" y="1717" width="0.5" height="15.0" fill="rgb(245,228,2)" rx="2" ry="2" />
<text  x="45.44" y="1727.5" ></text>
</g>
<g >
<title>skip_empty_fragments&lt;managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="1120.8" y="1621" width="0.2" height="15.0" fill="rgb(224,143,44)" rx="2" ry="2" />
<text  x="1123.80" y="1631.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;database&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="1034.1" y="1685" width="0.3" height="15.0" fill="rgb(224,42,45)" rx="2" ry="2" />
<text  x="1037.13" y="1695.5" ></text>
</g>
<g >
<title>std::__lower_bound&lt;__gnu_cxx::__normal_iterator&lt;dht::token const*, std::vector&lt;dht::token, std::allocator&lt;dht::token&gt; &gt; &gt;, dht::token, __gnu_cxx::__ops::_Iter_less_val&gt; (14 samples, 0.27%)</title><rect x="1068.4" y="1669" width="3.2" height="15.0" fill="rgb(224,56,30)" rx="2" ry="2" />
<text  x="1071.39" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.5" y="597" width="0.2" height="15.0" fill="rgb(241,77,42)" rx="2" ry="2" />
<text  x="13.45" y="607.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_construct&lt;interval_bound&lt;dht::ring_position&gt; const&amp;&gt; (2 samples, 0.04%)</title><rect x="1042.8" y="1653" width="0.4" height="15.0" fill="rgb(234,198,36)" rx="2" ry="2" />
<text  x="1045.76" y="1663.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_istream (1 samples, 0.02%)</title><rect x="37.0" y="1765" width="0.2" height="15.0" fill="rgb(230,48,10)" rx="2" ry="2" />
<text  x="40.00" y="1775.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;cql3::restrictions::single_column_restriction, false&gt;::make&lt;column_definition const&amp;&gt; (5 samples, 0.10%)</title><rect x="71.3" y="1781" width="1.1" height="15.0" fill="rgb(242,211,27)" rx="2" ry="2" />
<text  x="74.26" y="1791.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::default_delete&lt;cql3::statements::raw::select_statement&gt;, true&gt;::_Head_base (1 samples, 0.02%)</title><rect x="64.9" y="1717" width="0.2" height="15.0" fill="rgb(242,224,0)" rx="2" ry="2" />
<text  x="67.90" y="1727.5" ></text>
</g>
<g >
<title>managed_bytes::external_memory_usage (1 samples, 0.02%)</title><rect x="523.9" y="1621" width="0.2" height="15.0" fill="rgb(210,219,22)" rx="2" ry="2" />
<text  x="526.88" y="1631.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (1 samples, 0.02%)</title><rect x="108.5" y="1765" width="0.2" height="15.0" fill="rgb(238,156,3)" rx="2" ry="2" />
<text  x="111.47" y="1775.5" ></text>
</g>
<g >
<title>ser::column_view::id (1 samples, 0.02%)</title><rect x="1122.8" y="1653" width="0.3" height="15.0" fill="rgb(224,66,7)" rx="2" ry="2" />
<text  x="1125.84" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;seastar::future&lt;std::optional&lt;cdc::topology_description&gt; &gt; &gt;  (1 samples, 0.02%)</title><rect x="11.4" y="1781" width="0.2" height="15.0" fill="rgb(253,29,32)" rx="2" ry="2" />
<text  x="14.36" y="1791.5" ></text>
</g>
<g >
<title>ser::writer_of_qr_clustered_row&lt;bytes_ostream&gt;::skip_key (5 samples, 0.10%)</title><rect x="366.0" y="1605" width="1.1" height="15.0" fill="rgb(213,41,45)" rx="2" ry="2" />
<text  x="368.97" y="1615.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (1 samples, 0.02%)</title><rect x="1043.0" y="1621" width="0.2" height="15.0" fill="rgb(233,24,42)" rx="2" ry="2" />
<text  x="1045.98" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_ctor_base (1 samples, 0.02%)</title><rect x="55.4" y="1701" width="0.2" height="15.0" fill="rgb(210,163,27)" rx="2" ry="2" />
<text  x="58.38" y="1711.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;reconcilable_result&gt;, flat_mutation_reader::impl::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (1 samples, 0.02%)</title><rect x="138.2" y="1733" width="0.2" height="15.0" fill="rgb(244,50,33)" rx="2" ry="2" />
<text  x="141.19" y="1743.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::get_following (1 samples, 0.02%)</title><rect x="39.5" y="1781" width="0.2" height="15.0" fill="rgb(233,184,4)" rx="2" ry="2" />
<text  x="42.49" y="1791.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::_M_range_initialize&lt;nonwrapping_interval&lt;dht::ring_position&gt; const*&gt; (18 samples, 0.35%)</title><rect x="1039.1" y="1685" width="4.1" height="15.0" fill="rgb(241,17,13)" rx="2" ry="2" />
<text  x="1042.13" y="1695.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (1 samples, 0.02%)</title><rect x="645.7" y="1877" width="0.2" height="15.0" fill="rgb(250,113,38)" rx="2" ry="2" />
<text  x="648.72" y="1887.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.02%)</title><rect x="40.9" y="1685" width="0.2" height="15.0" fill="rgb(235,224,28)" rx="2" ry="2" />
<text  x="43.86" y="1695.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_range_tombstone (22 samples, 0.42%)</title><rect x="266.6" y="1637" width="5.0" height="15.0" fill="rgb(211,171,14)" rx="2" ry="2" />
<text  x="269.60" y="1647.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.02%)</title><rect x="736.7" y="1813" width="0.2" height="15.0" fill="rgb(233,162,24)" rx="2" ry="2" />
<text  x="739.69" y="1823.5" ></text>
</g>
<g >
<title>main (4,769 samples, 91.69%)</title><rect x="84.9" y="2037" width="1082.0" height="15.0" fill="rgb(221,62,11)" rx="2" ry="2" />
<text  x="87.87" y="2047.5" >main</text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::metadata&gt;::~shared_ptr (2 samples, 0.04%)</title><rect x="673.6" y="1909" width="0.5" height="15.0" fill="rgb(236,92,43)" rx="2" ry="2" />
<text  x="676.62" y="1919.5" ></text>
</g>
<g >
<title>seastar::reactor::do_expire_lowres_timers (1 samples, 0.02%)</title><rect x="1165.7" y="1925" width="0.3" height="15.0" fill="rgb(249,139,12)" rx="2" ry="2" />
<text  x="1168.72" y="1935.5" ></text>
</g>
<g >
<title>partition_entry::partition_entry (1 samples, 0.02%)</title><rect x="11.1" y="1957" width="0.3" height="15.0" fill="rgb(247,168,40)" rx="2" ry="2" />
<text  x="14.13" y="1967.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.02%)</title><rect x="46.3" y="1621" width="0.2" height="15.0" fill="rgb(210,103,49)" rx="2" ry="2" />
<text  x="49.30" y="1631.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;nonwrapping_interval&lt;dht::ring_position&gt; const*, nonwrapping_interval&lt;dht::ring_position&gt;*&gt; (2 samples, 0.04%)</title><rect x="1038.7" y="1685" width="0.4" height="15.0" fill="rgb(222,84,35)" rx="2" ry="2" />
<text  x="1041.67" y="1695.5" ></text>
</g>
<g >
<title>reader_permit::impl::mark_unused (29 samples, 0.56%)</title><rect x="128.2" y="1861" width="6.6" height="15.0" fill="rgb(226,65,29)" rx="2" ry="2" />
<text  x="131.20" y="1871.5" ></text>
</g>
<g >
<title>compound_type&lt; (1 samples, 0.02%)</title><rect x="877.4" y="1749" width="0.2" height="15.0" fill="rgb(247,142,46)" rx="2" ry="2" />
<text  x="880.36" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.5" y="1637" width="0.2" height="15.0" fill="rgb(238,11,54)" rx="2" ry="2" />
<text  x="13.45" y="1647.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::get_state (1 samples, 0.02%)</title><rect x="26.6" y="1685" width="0.2" height="15.0" fill="rgb(239,113,28)" rx="2" ry="2" />
<text  x="29.56" y="1695.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.02%)</title><rect x="43.8" y="1541" width="0.2" height="15.0" fill="rgb(239,191,50)" rx="2" ry="2" />
<text  x="46.81" y="1551.5" ></text>
</g>
<g >
<title>utils::phased_barrier::start (1 samples, 0.02%)</title><rect x="1035.3" y="1685" width="0.2" height="15.0" fill="rgb(252,194,49)" rx="2" ry="2" />
<text  x="1038.27" y="1695.5" ></text>
</g>
<g >
<title>std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt;::emplace_back&lt;seastar::lw_shared_ptr&lt;schema const&gt; const&amp;, partition_key const&gt; (3 samples, 0.06%)</title><rect x="878.9" y="1781" width="0.7" height="15.0" fill="rgb(220,142,33)" rx="2" ry="2" />
<text  x="881.95" y="1791.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::find&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (19 samples, 0.37%)</title><rect x="776.9" y="1781" width="4.3" height="15.0" fill="rgb(226,48,21)" rx="2" ry="2" />
<text  x="779.85" y="1791.5" ></text>
</g>
<g >
<title>mutation_reader_merger::maybe_add_readers_at_partition_boundary (3 samples, 0.06%)</title><rect x="176.1" y="1717" width="0.7" height="15.0" fill="rgb(219,212,12)" rx="2" ry="2" />
<text  x="179.08" y="1727.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector (2 samples, 0.04%)</title><rect x="1081.1" y="1765" width="0.5" height="15.0" fill="rgb(230,66,21)" rx="2" ry="2" />
<text  x="1084.10" y="1775.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.04%)</title><rect x="567.7" y="1813" width="0.4" height="15.0" fill="rgb(210,55,13)" rx="2" ry="2" />
<text  x="570.67" y="1823.5" ></text>
</g>
<g >
<title>linux_perf_event::user_instructions_retired (1 samples, 0.02%)</title><rect x="10.5" y="37" width="0.2" height="15.0" fill="rgb(209,113,8)" rx="2" ry="2" />
<text  x="13.45" y="47.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (1 samples, 0.02%)</title><rect x="1117.2" y="1845" width="0.2" height="15.0" fill="rgb(236,91,38)" rx="2" ry="2" />
<text  x="1120.17" y="1855.5" ></text>
</g>
<g >
<title>seastar::internal::future_base::set_coroutine (1 samples, 0.02%)</title><rect x="961.8" y="1797" width="0.2" height="15.0" fill="rgb(221,204,2)" rx="2" ry="2" />
<text  x="964.76" y="1807.5" ></text>
</g>
<g >
<title>atomic_cell_type::make_live&lt;fragment_range&lt;managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="878.3" y="1669" width="0.2" height="15.0" fill="rgb(211,69,40)" rx="2" ry="2" />
<text  x="881.27" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (2 samples, 0.04%)</title><rect x="908.2" y="1781" width="0.5" height="15.0" fill="rgb(246,129,52)" rx="2" ry="2" />
<text  x="911.22" y="1791.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (1 samples, 0.02%)</title><rect x="17.9" y="1845" width="0.3" height="15.0" fill="rgb(243,83,6)" rx="2" ry="2" />
<text  x="20.94" y="1855.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, seastar::future&lt;void&gt;, seastar::future&lt;void&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="874.2" y="1845" width="0.2" height="15.0" fill="rgb(230,23,53)" rx="2" ry="2" />
<text  x="877.18" y="1855.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.02%)</title><rect x="53.6" y="1557" width="0.2" height="15.0" fill="rgb(225,67,24)" rx="2" ry="2" />
<text  x="56.56" y="1567.5" ></text>
</g>
<g >
<title>service::storage_proxy::query (586 samples, 11.27%)</title><rect x="955.9" y="1829" width="132.9" height="15.0" fill="rgb(237,204,47)" rx="2" ry="2" />
<text  x="958.86" y="1839.5" >service::storage..</text>
</g>
<g >
<title>managed_bytes::operator= (4 samples, 0.08%)</title><rect x="334.0" y="1685" width="0.9" height="15.0" fill="rgb(230,74,24)" rx="2" ry="2" />
<text  x="336.98" y="1695.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::deallocate (10 samples, 0.19%)</title><rect x="318.8" y="1733" width="2.3" height="15.0" fill="rgb(216,75,54)" rx="2" ry="2" />
<text  x="321.78" y="1743.5" ></text>
</g>
<g >
<title>row::compact_and_expire (79 samples, 1.52%)</title><rect x="395.5" y="1637" width="17.9" height="15.0" fill="rgb(208,66,30)" rx="2" ry="2" />
<text  x="398.47" y="1647.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (2 samples, 0.04%)</title><rect x="799.3" y="1669" width="0.5" height="15.0" fill="rgb(231,79,2)" rx="2" ry="2" />
<text  x="802.31" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.5" y="1973" width="0.2" height="15.0" fill="rgb(238,214,53)" rx="2" ry="2" />
<text  x="13.45" y="1983.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;mutation_reader_merger::reader_and_last_fragment_kind*, mutation_reader_merger::prepare_next (66 samples, 1.27%)</title><rect x="176.8" y="1717" width="14.9" height="15.0" fill="rgb(220,171,12)" rx="2" ry="2" />
<text  x="179.76" y="1727.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::clear (1 samples, 0.02%)</title><rect x="771.9" y="1829" width="0.2" height="15.0" fill="rgb(227,62,10)" rx="2" ry="2" />
<text  x="774.86" y="1839.5" ></text>
</g>
<g >
<title>remove_or_mark_as_unique_owner (1 samples, 0.02%)</title><rect x="84.4" y="1941" width="0.2" height="15.0" fill="rgb(242,35,15)" rx="2" ry="2" />
<text  x="87.42" y="1951.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (1 samples, 0.02%)</title><rect x="1164.6" y="1861" width="0.2" height="15.0" fill="rgb(248,215,44)" rx="2" ry="2" />
<text  x="1167.59" y="1871.5" ></text>
</g>
<g >
<title>operator delete (6 samples, 0.12%)</title><rect x="702.2" y="1909" width="1.4" height="15.0" fill="rgb(247,98,52)" rx="2" ry="2" />
<text  x="705.21" y="1919.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="1161.2" y="1877" width="0.2" height="15.0" fill="rgb(217,15,20)" rx="2" ry="2" />
<text  x="1164.19" y="1887.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (2 samples, 0.04%)</title><rect x="819.5" y="1669" width="0.5" height="15.0" fill="rgb(211,188,35)" rx="2" ry="2" />
<text  x="822.51" y="1679.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (1 samples, 0.02%)</title><rect x="84.4" y="2021" width="0.2" height="15.0" fill="rgb(250,2,27)" rx="2" ry="2" />
<text  x="87.42" y="2031.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::initial_key_restrictions&lt;partition_key&gt;::do_merge_to (4 samples, 0.08%)</title><rect x="72.6" y="1797" width="0.9" height="15.0" fill="rgb(227,180,40)" rx="2" ry="2" />
<text  x="75.62" y="1807.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::vector (1 samples, 0.02%)</title><rect x="52.0" y="1685" width="0.2" height="15.0" fill="rgb(239,195,8)" rx="2" ry="2" />
<text  x="54.97" y="1695.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.02%)</title><rect x="38.4" y="1589" width="0.2" height="15.0" fill="rgb(224,109,27)" rx="2" ry="2" />
<text  x="41.36" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::_Copy_ctor_base (2 samples, 0.04%)</title><rect x="350.8" y="1605" width="0.4" height="15.0" fill="rgb(224,200,37)" rx="2" ry="2" />
<text  x="353.77" y="1615.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="550.0" y="1653" width="0.2" height="15.0" fill="rgb(231,215,54)" rx="2" ry="2" />
<text  x="552.97" y="1663.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (2 samples, 0.04%)</title><rect x="631.2" y="1813" width="0.4" height="15.0" fill="rgb(208,212,44)" rx="2" ry="2" />
<text  x="634.20" y="1823.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.04%)</title><rect x="978.1" y="1717" width="0.4" height="15.0" fill="rgb(233,118,31)" rx="2" ry="2" />
<text  x="981.09" y="1727.5" ></text>
</g>
<g >
<title>allocation_strategy::construct&lt;bplus::data&lt;long, intrusive_array&lt;memtable_entry&gt;, dht::raw_token_less_comparator, 16ul,  (2 samples, 0.04%)</title><rect x="1119.7" y="1605" width="0.4" height="15.0" fill="rgb(234,21,20)" rx="2" ry="2" />
<text  x="1122.67" y="1615.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.02%)</title><rect x="59.0" y="1621" width="0.2" height="15.0" fill="rgb(234,32,31)" rx="2" ry="2" />
<text  x="62.01" y="1631.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (1 samples, 0.02%)</title><rect x="672.3" y="1909" width="0.2" height="15.0" fill="rgb(243,53,44)" rx="2" ry="2" />
<text  x="675.26" y="1919.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::allocate (4 samples, 0.08%)</title><rect x="199.7" y="1621" width="0.9" height="15.0" fill="rgb(233,228,26)" rx="2" ry="2" />
<text  x="202.67" y="1631.5" ></text>
</g>
<g >
<title>bytes_view_hasher::update (2 samples, 0.04%)</title><rect x="763.9" y="1701" width="0.5" height="15.0" fill="rgb(254,13,3)" rx="2" ry="2" />
<text  x="766.92" y="1711.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;cql3::column_identifier_raw, false&gt;::make&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, bool&gt; (4 samples, 0.08%)</title><rect x="44.5" y="1733" width="0.9" height="15.0" fill="rgb(232,33,35)" rx="2" ry="2" />
<text  x="47.49" y="1743.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::__uniq_ptr_data (1 samples, 0.02%)</title><rect x="55.6" y="1669" width="0.2" height="15.0" fill="rgb(228,220,10)" rx="2" ry="2" />
<text  x="58.60" y="1679.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::mutation_fragment_merger (13 samples, 0.25%)</title><rect x="466.0" y="1701" width="3.0" height="15.0" fill="rgb(231,183,33)" rx="2" ry="2" />
<text  x="469.03" y="1711.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="55.4" y="1653" width="0.2" height="15.0" fill="rgb(245,16,51)" rx="2" ry="2" />
<text  x="58.38" y="1663.5" ></text>
</g>
<g >
<title>row_cache::do_update (1 samples, 0.02%)</title><rect x="701.3" y="1797" width="0.2" height="15.0" fill="rgb(248,148,40)" rx="2" ry="2" />
<text  x="704.30" y="1807.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::invoke&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (43 samples, 0.83%)</title><rect x="311.5" y="1765" width="9.8" height="15.0" fill="rgb(237,51,9)" rx="2" ry="2" />
<text  x="314.52" y="1775.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;compact_for_query&lt; (6 samples, 0.12%)</title><rect x="432.2" y="1701" width="1.4" height="15.0" fill="rgb(225,9,0)" rx="2" ry="2" />
<text  x="435.22" y="1711.5" ></text>
</g>
<g >
<title>absl::container_internal::probe_seq&lt;16ul&gt;::probe_seq (1 samples, 0.02%)</title><rect x="841.7" y="1733" width="0.3" height="15.0" fill="rgb(233,165,26)" rx="2" ry="2" />
<text  x="844.74" y="1743.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.02%)</title><rect x="49.5" y="1701" width="0.2" height="15.0" fill="rgb(234,111,23)" rx="2" ry="2" />
<text  x="52.48" y="1711.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, unsigned int, std::_Identity&lt;unsigned int&gt;, std::less&lt;unsigned int&gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;unsigned int&gt; &gt;::_M_lower_bound (1 samples, 0.02%)</title><rect x="35.6" y="1701" width="0.3" height="15.0" fill="rgb(245,217,9)" rx="2" ry="2" />
<text  x="38.64" y="1711.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::move_it (1 samples, 0.02%)</title><rect x="670.9" y="1909" width="0.2" height="15.0" fill="rgb(250,66,4)" rx="2" ry="2" />
<text  x="673.90" y="1919.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement::execute (1 samples, 0.02%)</title><rect x="86.0" y="1941" width="0.2" height="15.0" fill="rgb(244,222,10)" rx="2" ry="2" />
<text  x="89.00" y="1951.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (33 samples, 0.63%)</title><rect x="1119.0" y="1845" width="7.5" height="15.0" fill="rgb(238,69,43)" rx="2" ry="2" />
<text  x="1121.99" y="1855.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.02%)</title><rect x="701.3" y="1701" width="0.2" height="15.0" fill="rgb(236,206,9)" rx="2" ry="2" />
<text  x="704.30" y="1711.5" ></text>
</g>
<g >
<title>service::storage_service::join_token_ring (1 samples, 0.02%)</title><rect x="17.7" y="1893" width="0.2" height="15.0" fill="rgb(218,18,25)" rx="2" ry="2" />
<text  x="20.71" y="1903.5" ></text>
</g>
<g >
<title>empty_flat_reader::~empty_flat_reader (1 samples, 0.02%)</title><rect x="573.8" y="1765" width="0.2" height="15.0" fill="rgb(245,64,12)" rx="2" ry="2" />
<text  x="576.80" y="1775.5" ></text>
</g>
<g >
<title>cql3::restrictions::partition_key_restrictions::needs_filtering (23 samples, 0.44%)</title><rect x="942.5" y="1829" width="5.2" height="15.0" fill="rgb(249,34,20)" rx="2" ry="2" />
<text  x="945.47" y="1839.5" ></text>
</g>
<g >
<title>seastar::future&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (2 samples, 0.04%)</title><rect x="803.2" y="1653" width="0.4" height="15.0" fill="rgb(210,10,42)" rx="2" ry="2" />
<text  x="806.17" y="1663.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="429.0" y="1669" width="0.3" height="15.0" fill="rgb(241,40,10)" rx="2" ry="2" />
<text  x="432.05" y="1679.5" ></text>
</g>
<g >
<title>operator new (18 samples, 0.35%)</title><rect x="1000.3" y="1701" width="4.1" height="15.0" fill="rgb(221,141,45)" rx="2" ry="2" />
<text  x="1003.33" y="1711.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql3::column_identifier_raw&gt;::shared_ptr_count_for&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, bool&gt; (1 samples, 0.02%)</title><rect x="44.9" y="1717" width="0.3" height="15.0" fill="rgb(230,17,7)" rx="2" ry="2" />
<text  x="47.94" y="1727.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::find_and_unlink_span_reclaiming (1 samples, 0.02%)</title><rect x="567.0" y="1685" width="0.2" height="15.0" fill="rgb(247,126,11)" rx="2" ry="2" />
<text  x="569.99" y="1695.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql_transport::messages::result_message&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="683.2" y="1909" width="0.2" height="15.0" fill="rgb(242,86,53)" rx="2" ry="2" />
<text  x="686.15" y="1919.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.02%)</title><rect x="700.8" y="1573" width="0.3" height="15.0" fill="rgb(227,195,12)" rx="2" ry="2" />
<text  x="703.85" y="1583.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;flat_mutation_reader  (1 samples, 0.02%)</title><rect x="441.3" y="1813" width="0.2" height="15.0" fill="rgb(247,148,14)" rx="2" ry="2" />
<text  x="444.30" y="1823.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (6 samples, 0.12%)</title><rect x="376.2" y="1589" width="1.3" height="15.0" fill="rgb(230,176,22)" rx="2" ry="2" />
<text  x="379.18" y="1599.5" ></text>
</g>
<g >
<title>db::schema_tables::fill_column_info (1 samples, 0.02%)</title><rect x="108.5" y="1829" width="0.2" height="15.0" fill="rgb(212,118,33)" rx="2" ry="2" />
<text  x="111.47" y="1839.5" ></text>
</g>
<g >
<title>managed_bytes::free_chain (1 samples, 0.02%)</title><rect x="701.3" y="1525" width="0.2" height="15.0" fill="rgb(213,102,2)" rx="2" ry="2" />
<text  x="704.30" y="1535.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::set_token_present (1 samples, 0.02%)</title><rect x="29.1" y="1685" width="0.2" height="15.0" fill="rgb(221,36,35)" rx="2" ry="2" />
<text  x="32.06" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.5" y="917" width="0.2" height="15.0" fill="rgb(241,53,39)" rx="2" ry="2" />
<text  x="13.45" y="927.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.02%)</title><rect x="1026.4" y="1621" width="0.2" height="15.0" fill="rgb(225,1,32)" rx="2" ry="2" />
<text  x="1029.42" y="1631.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="74.0" y="1733" width="0.2" height="15.0" fill="rgb(218,176,50)" rx="2" ry="2" />
<text  x="76.98" y="1743.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (1 samples, 0.02%)</title><rect x="807.9" y="1621" width="0.3" height="15.0" fill="rgb(239,32,45)" rx="2" ry="2" />
<text  x="810.94" y="1631.5" ></text>
</g>
<g >
<title>seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;::swap (2 samples, 0.04%)</title><rect x="758.7" y="1797" width="0.5" height="15.0" fill="rgb(240,9,31)" rx="2" ry="2" />
<text  x="761.70" y="1807.5" ></text>
</g>
<g >
<title>single_node_cql_env::local_qp (1 samples, 0.02%)</title><rect x="859.0" y="1877" width="0.2" height="15.0" fill="rgb(252,156,30)" rx="2" ry="2" />
<text  x="861.98" y="1887.5" ></text>
</g>
<g >
<title>read_simple&lt;unsigned short, managed_bytes_basic_view&lt; (4 samples, 0.08%)</title><rect x="503.2" y="1621" width="0.9" height="15.0" fill="rgb(220,146,22)" rx="2" ry="2" />
<text  x="506.24" y="1631.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_max_result_size (12 samples, 0.23%)</title><rect x="1114.4" y="1845" width="2.8" height="15.0" fill="rgb(244,117,23)" rx="2" ry="2" />
<text  x="1117.45" y="1855.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.02%)</title><rect x="49.5" y="1557" width="0.2" height="15.0" fill="rgb(214,228,38)" rx="2" ry="2" />
<text  x="52.48" y="1567.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (1 samples, 0.02%)</title><rect x="132.1" y="1829" width="0.2" height="15.0" fill="rgb(206,36,18)" rx="2" ry="2" />
<text  x="135.06" y="1839.5" ></text>
</g>
<g >
<title>dht::murmur3_partitioner::get_token (43 samples, 0.83%)</title><rect x="914.1" y="1813" width="9.8" height="15.0" fill="rgb(214,89,16)" rx="2" ry="2" />
<text  x="917.11" y="1823.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (28 samples, 0.54%)</title><rect x="761.0" y="1765" width="6.3" height="15.0" fill="rgb(214,158,2)" rx="2" ry="2" />
<text  x="763.97" y="1775.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.02%)</title><rect x="38.4" y="1669" width="0.2" height="15.0" fill="rgb(207,36,40)" rx="2" ry="2" />
<text  x="41.36" y="1679.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (3 samples, 0.06%)</title><rect x="45.4" y="1685" width="0.7" height="15.0" fill="rgb(235,120,5)" rx="2" ry="2" />
<text  x="48.39" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.5" y="1941" width="0.2" height="15.0" fill="rgb(245,122,52)" rx="2" ry="2" />
<text  x="13.45" y="1951.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::make_data_requests (1 samples, 0.02%)</title><rect x="989.2" y="1701" width="0.2" height="15.0" fill="rgb(232,67,26)" rx="2" ry="2" />
<text  x="992.21" y="1711.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="698.8" y="1813" width="0.2" height="15.0" fill="rgb(205,196,31)" rx="2" ry="2" />
<text  x="701.81" y="1823.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::deallocate (1 samples, 0.02%)</title><rect x="23.8" y="1605" width="0.3" height="15.0" fill="rgb(217,106,34)" rx="2" ry="2" />
<text  x="26.84" y="1615.5" ></text>
</g>
<g >
<title>std::__optional_hash_call_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, true&gt;::operator (4 samples, 0.08%)</title><rect x="814.3" y="1573" width="0.9" height="15.0" fill="rgb(222,28,1)" rx="2" ry="2" />
<text  x="817.29" y="1583.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::get_at (1 samples, 0.02%)</title><rect x="699.5" y="1701" width="0.2" height="15.0" fill="rgb(235,204,22)" rx="2" ry="2" />
<text  x="702.49" y="1711.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (1 samples, 0.02%)</title><rect x="700.8" y="1813" width="0.3" height="15.0" fill="rgb(234,42,14)" rx="2" ry="2" />
<text  x="703.85" y="1823.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::~small_vector (3 samples, 0.06%)</title><rect x="463.5" y="1717" width="0.7" height="15.0" fill="rgb(251,182,26)" rx="2" ry="2" />
<text  x="466.53" y="1727.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::followPop (1 samples, 0.02%)</title><rect x="46.1" y="1749" width="0.2" height="15.0" fill="rgb(227,63,3)" rx="2" ry="2" />
<text  x="49.07" y="1759.5" ></text>
</g>
<g >
<title>std::hash&lt;wrapping_interval&lt;dht::token&gt; &gt;::operator (1 samples, 0.02%)</title><rect x="1153.0" y="1877" width="0.2" height="15.0" fill="rgb(234,106,6)" rx="2" ry="2" />
<text  x="1156.02" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.5" y="1445" width="0.2" height="15.0" fill="rgb(225,212,27)" rx="2" ry="2" />
<text  x="13.45" y="1455.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="1130.3" y="1525" width="0.3" height="15.0" fill="rgb(220,179,40)" rx="2" ry="2" />
<text  x="1133.33" y="1535.5" ></text>
</g>
<g >
<title>seastar::promise&lt;void&gt;::promise (1 samples, 0.02%)</title><rect x="1024.8" y="1589" width="0.3" height="15.0" fill="rgb(242,53,9)" rx="2" ry="2" />
<text  x="1027.83" y="1599.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::do_execute (24 samples, 0.46%)</title><rect x="874.9" y="1861" width="5.4" height="15.0" fill="rgb(233,126,17)" rx="2" ry="2" />
<text  x="877.86" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (1 samples, 0.02%)</title><rect x="11.4" y="1445" width="0.2" height="15.0" fill="rgb(246,176,9)" rx="2" ry="2" />
<text  x="14.36" y="1455.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::hasException (1 samples, 0.02%)</title><rect x="37.9" y="1781" width="0.2" height="15.0" fill="rgb(218,16,45)" rx="2" ry="2" />
<text  x="40.91" y="1791.5" ></text>
</g>
<g >
<title>seastar::promise&lt;void&gt;::promise (4 samples, 0.08%)</title><rect x="133.4" y="1813" width="0.9" height="15.0" fill="rgb(221,44,20)" rx="2" ry="2" />
<text  x="136.42" y="1823.5" ></text>
</g>
<g >
<title>mutation_partition::lower_bound (7 samples, 0.13%)</title><rect x="278.6" y="1621" width="1.6" height="15.0" fill="rgb(211,26,50)" rx="2" ry="2" />
<text  x="281.63" y="1631.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::get_following (1 samples, 0.02%)</title><rect x="57.6" y="1749" width="0.3" height="15.0" fill="rgb(247,68,8)" rx="2" ry="2" />
<text  x="60.64" y="1759.5" ></text>
</g>
<g >
<title>query_result_builder::consume_new_partition (2 samples, 0.04%)</title><rect x="392.3" y="1637" width="0.4" height="15.0" fill="rgb(236,150,10)" rx="2" ry="2" />
<text  x="395.29" y="1647.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.02%)</title><rect x="54.2" y="1573" width="0.3" height="15.0" fill="rgb(238,167,22)" rx="2" ry="2" />
<text  x="57.24" y="1583.5" ></text>
</g>
<g >
<title>seastar::priority_class_data::priority_class_data (1 samples, 0.02%)</title><rect x="17.9" y="1253" width="0.3" height="15.0" fill="rgb(213,30,50)" rx="2" ry="2" />
<text  x="20.94" y="1263.5" ></text>
</g>
<g >
<title>query::result_set::from_raw_result (1 samples, 0.02%)</title><rect x="109.1" y="1797" width="0.3" height="15.0" fill="rgb(207,149,35)" rx="2" ry="2" />
<text  x="112.15" y="1807.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.04%)</title><rect x="533.9" y="1685" width="0.4" height="15.0" fill="rgb(254,178,24)" rx="2" ry="2" />
<text  x="536.86" y="1695.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;mutation_reader_merger::operator (3 samples, 0.06%)</title><rect x="304.5" y="1749" width="0.7" height="15.0" fill="rgb(248,96,34)" rx="2" ry="2" />
<text  x="307.49" y="1759.5" ></text>
</g>
<g >
<title>std::operator+ (2 samples, 0.04%)</title><rect x="44.0" y="1589" width="0.5" height="15.0" fill="rgb(234,137,7)" rx="2" ry="2" />
<text  x="47.03" y="1599.5" ></text>
</g>
<g >
<title>std::__optional_hash_call_base&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, true&gt;::operator (1 samples, 0.02%)</title><rect x="816.3" y="1509" width="0.3" height="15.0" fill="rgb(214,57,9)" rx="2" ry="2" />
<text  x="819.33" y="1519.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (267 samples, 5.13%)</title><rect x="18.8" y="1925" width="60.6" height="15.0" fill="rgb(250,135,2)" rx="2" ry="2" />
<text  x="21.85" y="1935.5" >cql3::..</text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (1 samples, 0.02%)</title><rect x="691.3" y="1893" width="0.2" height="15.0" fill="rgb(223,61,24)" rx="2" ry="2" />
<text  x="694.32" y="1903.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.06%)</title><rect x="552.7" y="1749" width="0.7" height="15.0" fill="rgb(246,76,40)" rx="2" ry="2" />
<text  x="555.70" y="1759.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (4 samples, 0.08%)</title><rect x="834.5" y="1717" width="0.9" height="15.0" fill="rgb(217,189,21)" rx="2" ry="2" />
<text  x="837.48" y="1727.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (3 samples, 0.06%)</title><rect x="1130.3" y="1557" width="0.7" height="15.0" fill="rgb(240,119,37)" rx="2" ry="2" />
<text  x="1133.33" y="1567.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::alloc (1 samples, 0.02%)</title><rect x="82.6" y="1557" width="0.2" height="15.0" fill="rgb(213,185,51)" rx="2" ry="2" />
<text  x="85.60" y="1567.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="458.3" y="1685" width="0.2" height="15.0" fill="rgb(205,119,3)" rx="2" ry="2" />
<text  x="461.31" y="1695.5" ></text>
</g>
<g >
<title>tracing::global_trace_state_ptr::global_trace_state_ptr (1 samples, 0.02%)</title><rect x="1128.5" y="1621" width="0.2" height="15.0" fill="rgb(253,221,35)" rx="2" ry="2" />
<text  x="1131.52" y="1631.5" ></text>
</g>
<g >
<title>partition_entry::make_evictable (1 samples, 0.02%)</title><rect x="11.1" y="1973" width="0.3" height="15.0" fill="rgb(246,75,5)" rx="2" ry="2" />
<text  x="14.13" y="1983.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::file&gt;, seastar::future&lt;seastar::file&gt;::handle_exception&lt;do_io_check&lt;open_checked_directory (1 samples, 0.02%)</title><rect x="85.6" y="1941" width="0.2" height="15.0" fill="rgb(238,104,29)" rx="2" ry="2" />
<text  x="88.55" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.5" y="1109" width="0.2" height="15.0" fill="rgb(251,22,16)" rx="2" ry="2" />
<text  x="13.45" y="1119.5" ></text>
</g>
<g >
<title>utils::fb_utilities::get_broadcast_address (1 samples, 0.02%)</title><rect x="1044.1" y="1701" width="0.2" height="15.0" fill="rgb(225,37,42)" rx="2" ry="2" />
<text  x="1047.12" y="1711.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (2 samples, 0.04%)</title><rect x="11.1" y="2005" width="0.5" height="15.0" fill="rgb(253,132,53)" rx="2" ry="2" />
<text  x="14.13" y="2015.5" ></text>
</g>
<g >
<title>std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt;::_M_check_len (1 samples, 0.02%)</title><rect x="283.8" y="1621" width="0.3" height="15.0" fill="rgb(233,228,45)" rx="2" ry="2" />
<text  x="286.84" y="1631.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.02%)</title><rect x="11.6" y="1989" width="0.2" height="15.0" fill="rgb(225,158,20)" rx="2" ry="2" />
<text  x="14.59" y="1999.5" ></text>
</g>
<g >
<title>__tls_init (2 samples, 0.04%)</title><rect x="193.1" y="1669" width="0.4" height="15.0" fill="rgb(241,57,48)" rx="2" ry="2" />
<text  x="196.09" y="1679.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (1 samples, 0.02%)</title><rect x="768.5" y="1813" width="0.2" height="15.0" fill="rgb(226,89,25)" rx="2" ry="2" />
<text  x="771.46" y="1823.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.02%)</title><rect x="57.2" y="1653" width="0.2" height="15.0" fill="rgb(247,154,8)" rx="2" ry="2" />
<text  x="60.19" y="1663.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (2 samples, 0.04%)</title><rect x="511.9" y="1733" width="0.4" height="15.0" fill="rgb(251,170,20)" rx="2" ry="2" />
<text  x="514.86" y="1743.5" ></text>
</g>
<g >
<title>query::digester::digester (5 samples, 0.10%)</title><rect x="612.1" y="1829" width="1.2" height="15.0" fill="rgb(232,93,32)" rx="2" ry="2" />
<text  x="615.14" y="1839.5" ></text>
</g>
<g >
<title>seastar::repeat&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (686 samples, 13.19%)</title><rect x="167.2" y="1797" width="155.7" height="15.0" fill="rgb(243,61,14)" rx="2" ry="2" />
<text  x="170.23" y="1807.5" >seastar::repeat&lt;mer..</text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::drop_expired_front (4 samples, 0.08%)</title><rect x="129.6" y="1829" width="0.9" height="15.0" fill="rgb(216,27,33)" rx="2" ry="2" />
<text  x="132.57" y="1839.5" ></text>
</g>
<g >
<title>boost::dynamic_bitset&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::dynamic_bitset (1 samples, 0.02%)</title><rect x="75.1" y="1781" width="0.2" height="15.0" fill="rgb(244,223,23)" rx="2" ry="2" />
<text  x="78.11" y="1791.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="59.0" y="1653" width="0.2" height="15.0" fill="rgb(240,196,47)" rx="2" ry="2" />
<text  x="62.01" y="1663.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.06%)</title><rect x="801.1" y="1653" width="0.7" height="15.0" fill="rgb(247,65,30)" rx="2" ry="2" />
<text  x="804.13" y="1663.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;interval_bound&lt;dht::ring_position&gt;, false, false&gt;::_Optional_base (1 samples, 0.02%)</title><rect x="1042.3" y="1669" width="0.2" height="15.0" fill="rgb(220,224,23)" rx="2" ry="2" />
<text  x="1045.30" y="1679.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="17.9" y="1173" width="0.3" height="15.0" fill="rgb(235,59,0)" rx="2" ry="2" />
<text  x="20.94" y="1183.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (1 samples, 0.02%)</title><rect x="1044.6" y="1717" width="0.2" height="15.0" fill="rgb(234,174,0)" rx="2" ry="2" />
<text  x="1047.57" y="1727.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;reader_concurrency_semaphore::entry&gt; &gt;::destroy&lt;reader_concurrency_semaphore::entry&gt; (2 samples, 0.04%)</title><rect x="641.9" y="1893" width="0.4" height="15.0" fill="rgb(252,161,49)" rx="2" ry="2" />
<text  x="644.86" y="1903.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::operator (3 samples, 0.06%)</title><rect x="763.2" y="1717" width="0.7" height="15.0" fill="rgb(242,77,45)" rx="2" ry="2" />
<text  x="766.24" y="1727.5" ></text>
</g>
<g >
<title>compound_type&lt; (16 samples, 0.31%)</title><rect x="500.7" y="1637" width="3.7" height="15.0" fill="rgb(224,146,23)" rx="2" ry="2" />
<text  x="503.74" y="1647.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt;  (3 samples, 0.06%)</title><rect x="16.6" y="1989" width="0.7" height="15.0" fill="rgb(228,180,8)" rx="2" ry="2" />
<text  x="19.58" y="1999.5" ></text>
</g>
<g >
<title>atomic_cell_or_collection::external_memory_usage (2 samples, 0.04%)</title><rect x="252.8" y="1541" width="0.4" height="15.0" fill="rgb(228,54,50)" rx="2" ry="2" />
<text  x="255.76" y="1551.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (1 samples, 0.02%)</title><rect x="1060.2" y="1733" width="0.3" height="15.0" fill="rgb(227,19,13)" rx="2" ry="2" />
<text  x="1063.22" y="1743.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.06%)</title><rect x="432.4" y="1685" width="0.7" height="15.0" fill="rgb(232,34,46)" rx="2" ry="2" />
<text  x="435.45" y="1695.5" ></text>
</g>
<g >
<title>bplus::tree&lt;long, intrusive_array&lt;cache_entry&gt;, dht::raw_token_less_comparator, 16ul,  (13 samples, 0.25%)</title><rect x="542.3" y="1717" width="2.9" height="15.0" fill="rgb(239,171,15)" rx="2" ry="2" />
<text  x="545.26" y="1727.5" ></text>
</g>
<g >
<title>database::find_uuid (1 samples, 0.02%)</title><rect x="76.2" y="1845" width="0.3" height="15.0" fill="rgb(213,91,21)" rx="2" ry="2" />
<text  x="79.25" y="1855.5" ></text>
</g>
<g >
<title>logalloc::region_impl::object_descriptor::encode (1 samples, 0.02%)</title><rect x="701.3" y="1493" width="0.2" height="15.0" fill="rgb(207,179,1)" rx="2" ry="2" />
<text  x="704.30" y="1503.5" ></text>
</g>
<g >
<title>operator delete (5 samples, 0.10%)</title><rect x="629.4" y="1845" width="1.1" height="15.0" fill="rgb(238,67,9)" rx="2" ry="2" />
<text  x="632.38" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.5" y="1317" width="0.2" height="15.0" fill="rgb(235,104,36)" rx="2" ry="2" />
<text  x="13.45" y="1327.5" ></text>
</g>
<g >
<title>flat_mutation_reader::close (1 samples, 0.02%)</title><rect x="1165.3" y="1813" width="0.2" height="15.0" fill="rgb(245,113,10)" rx="2" ry="2" />
<text  x="1168.27" y="1823.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (2 samples, 0.04%)</title><rect x="39.7" y="1637" width="0.5" height="15.0" fill="rgb(221,15,13)" rx="2" ry="2" />
<text  x="42.72" y="1647.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="39.3" y="1685" width="0.2" height="15.0" fill="rgb(213,39,42)" rx="2" ry="2" />
<text  x="42.27" y="1695.5" ></text>
</g>
<g >
<title>bplus::searcher&lt;dht::ring_position, long, dht::raw_token_less_comparator, 16ul,  (7 samples, 0.13%)</title><rect x="542.7" y="1701" width="1.6" height="15.0" fill="rgb(242,200,4)" rx="2" ry="2" />
<text  x="545.71" y="1711.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (2 samples, 0.04%)</title><rect x="968.8" y="1749" width="0.4" height="15.0" fill="rgb(208,68,49)" rx="2" ry="2" />
<text  x="971.79" y="1759.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::operator== (3 samples, 0.06%)</title><rect x="811.3" y="1557" width="0.7" height="15.0" fill="rgb(248,102,27)" rx="2" ry="2" />
<text  x="814.34" y="1567.5" ></text>
</g>
<g >
<title>antlr3::DefaultAllocPolicy::StackType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::push (1 samples, 0.02%)</title><rect x="36.5" y="1781" width="0.3" height="15.0" fill="rgb(221,213,30)" rx="2" ry="2" />
<text  x="39.54" y="1791.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume_in_thread&lt;sstables::sstable_writer&gt; (14 samples, 0.27%)</title><rect x="81.2" y="1925" width="3.2" height="15.0" fill="rgb(213,185,14)" rx="2" ry="2" />
<text  x="84.24" y="1935.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (54 samples, 1.04%)</title><rect x="755.1" y="1813" width="12.2" height="15.0" fill="rgb(246,184,38)" rx="2" ry="2" />
<text  x="758.07" y="1823.5" ></text>
</g>
<g >
<title>operator delete (5 samples, 0.10%)</title><rect x="689.3" y="1909" width="1.1" height="15.0" fill="rgb(245,146,9)" rx="2" ry="2" />
<text  x="692.28" y="1919.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (1 samples, 0.02%)</title><rect x="1119.2" y="1621" width="0.2" height="15.0" fill="rgb(222,50,12)" rx="2" ry="2" />
<text  x="1122.21" y="1631.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, cql3::statements::drop_function_statement*, std::default_delete&lt;cql3::statements::drop_function_statement&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="64.5" y="1733" width="0.2" height="15.0" fill="rgb(243,103,4)" rx="2" ry="2" />
<text  x="67.45" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.5" y="1493" width="0.2" height="15.0" fill="rgb(218,224,42)" rx="2" ry="2" />
<text  x="13.45" y="1503.5" ></text>
</g>
<g >
<title>service::storage_service::join_cluster (1 samples, 0.02%)</title><rect x="11.4" y="1957" width="0.2" height="15.0" fill="rgb(231,164,49)" rx="2" ry="2" />
<text  x="14.36" y="1967.5" ></text>
</g>
<g >
<title>cql3::statements::raw::update_statement::prepare_internal (36 samples, 0.69%)</title><rect x="67.4" y="1861" width="8.2" height="15.0" fill="rgb(231,159,23)" rx="2" ry="2" />
<text  x="70.40" y="1871.5" ></text>
</g>
<g >
<title>cql3::keyspace_element_name::operator= (2 samples, 0.04%)</title><rect x="40.4" y="1749" width="0.5" height="15.0" fill="rgb(237,100,47)" rx="2" ry="2" />
<text  x="43.40" y="1759.5" ></text>
</g>
<g >
<title>table::query (2,206 samples, 42.41%)</title><rect x="138.4" y="1877" width="500.5" height="15.0" fill="rgb(212,79,3)" rx="2" ry="2" />
<text  x="141.41" y="1887.5" >table::query</text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::~vector (2 samples, 0.04%)</title><rect x="938.8" y="1829" width="0.5" height="15.0" fill="rgb(251,106,44)" rx="2" ry="2" />
<text  x="941.84" y="1839.5" ></text>
</g>
<g >
<title>std::function&lt;seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (1 samples, 0.02%)</title><rect x="807.9" y="1637" width="0.3" height="15.0" fill="rgb(215,107,50)" rx="2" ry="2" />
<text  x="810.94" y="1647.5" ></text>
</g>
<g >
<title>seastar::internal::when_all_state&lt;seastar::internal::extract_values_from_futures_tuple&lt;seastar::future&lt;void&gt;, seastar::future&lt;void&gt; &gt;, seastar::future&lt;void&gt;, seastar::future&lt;void&gt; &gt;::~when_all_state (1 samples, 0.02%)</title><rect x="874.2" y="1909" width="0.2" height="15.0" fill="rgb(227,46,16)" rx="2" ry="2" />
<text  x="877.18" y="1919.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (1 samples, 0.02%)</title><rect x="54.9" y="1669" width="0.2" height="15.0" fill="rgb(238,186,12)" rx="2" ry="2" />
<text  x="57.92" y="1679.5" ></text>
</g>
<g >
<title>range_tombstone_list::slice (4 samples, 0.08%)</title><rect x="262.7" y="1573" width="1.0" height="15.0" fill="rgb(214,222,48)" rx="2" ry="2" />
<text  x="265.74" y="1583.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (5 samples, 0.10%)</title><rect x="623.9" y="1829" width="1.2" height="15.0" fill="rgb(224,39,14)" rx="2" ry="2" />
<text  x="626.94" y="1839.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (1 samples, 0.02%)</title><rect x="17.9" y="1205" width="0.3" height="15.0" fill="rgb(230,99,44)" rx="2" ry="2" />
<text  x="20.94" y="1215.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (2 samples, 0.04%)</title><rect x="685.2" y="1893" width="0.4" height="15.0" fill="rgb(216,195,27)" rx="2" ry="2" />
<text  x="688.19" y="1903.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (12 samples, 0.23%)</title><rect x="97.1" y="1893" width="2.7" height="15.0" fill="rgb(236,44,36)" rx="2" ry="2" />
<text  x="100.12" y="1903.5" ></text>
</g>
<g >
<title>std::default_delete&lt;query::partition_slice const&gt;::operator (1 samples, 0.02%)</title><rect x="601.9" y="1845" width="0.3" height="15.0" fill="rgb(218,71,5)" rx="2" ry="2" />
<text  x="604.93" y="1855.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::push_back (1 samples, 0.02%)</title><rect x="57.4" y="1717" width="0.2" height="15.0" fill="rgb(241,153,4)" rx="2" ry="2" />
<text  x="60.42" y="1727.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.02%)</title><rect x="778.7" y="1733" width="0.2" height="15.0" fill="rgb(238,135,47)" rx="2" ry="2" />
<text  x="781.67" y="1743.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.02%)</title><rect x="42.0" y="1765" width="0.2" height="15.0" fill="rgb(245,20,52)" rx="2" ry="2" />
<text  x="44.99" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::binary_operator const*&gt;  (1 samples, 0.02%)</title><rect x="946.8" y="1781" width="0.2" height="15.0" fill="rgb(226,177,34)" rx="2" ry="2" />
<text  x="949.79" y="1791.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::metadata const&gt;::~shared_ptr (2 samples, 0.04%)</title><rect x="673.2" y="1909" width="0.4" height="15.0" fill="rgb(224,229,20)" rx="2" ry="2" />
<text  x="676.17" y="1919.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value, std::allocator&lt;cql3::raw_value&gt; &gt;::_M_range_initialize&lt;cql3::raw_value const*&gt; (9 samples, 0.17%)</title><rect x="867.6" y="1877" width="2.0" height="15.0" fill="rgb(210,134,49)" rx="2" ry="2" />
<text  x="870.60" y="1887.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (1 samples, 0.02%)</title><rect x="412.5" y="1573" width="0.2" height="15.0" fill="rgb(223,73,19)" rx="2" ry="2" />
<text  x="415.48" y="1583.5" ></text>
</g>
<g >
<title>service::storage_service::replicate_to_all_cores (1 samples, 0.02%)</title><rect x="17.7" y="1861" width="0.2" height="15.0" fill="rgb(211,62,28)" rx="2" ry="2" />
<text  x="20.71" y="1871.5" ></text>
</g>
<g >
<title>row::external_memory_usage (1 samples, 0.02%)</title><rect x="16.8" y="1941" width="0.2" height="15.0" fill="rgb(251,226,34)" rx="2" ry="2" />
<text  x="19.81" y="1951.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::visit&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (30 samples, 0.58%)</title><rect x="419.5" y="1653" width="6.8" height="15.0" fill="rgb(238,18,50)" rx="2" ry="2" />
<text  x="422.52" y="1663.5" ></text>
</g>
<g >
<title>intrusive_b::searcher&lt;clustering_key_prefix, rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare,  (1 samples, 0.02%)</title><rect x="106.2" y="1813" width="0.2" height="15.0" fill="rgb(234,54,54)" rx="2" ry="2" />
<text  x="109.20" y="1823.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.02%)</title><rect x="856.3" y="1797" width="0.2" height="15.0" fill="rgb(245,129,18)" rx="2" ry="2" />
<text  x="859.26" y="1807.5" ></text>
</g>
<g >
<title>service::storage_service::init_server (1 samples, 0.02%)</title><rect x="11.6" y="1941" width="0.2" height="15.0" fill="rgb(210,18,44)" rx="2" ry="2" />
<text  x="14.59" y="1951.5" ></text>
</g>
<g >
<title>__strcmp_avx2 (11 samples, 0.21%)</title><rect x="13.4" y="2005" width="2.5" height="15.0" fill="rgb(236,147,16)" rx="2" ry="2" />
<text  x="16.40" y="2015.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (1 samples, 0.02%)</title><rect x="101.7" y="1797" width="0.2" height="15.0" fill="rgb(207,59,25)" rx="2" ry="2" />
<text  x="104.66" y="1807.5" ></text>
</g>
<g >
<title>__libc_start_main (4,769 samples, 91.69%)</title><rect x="84.9" y="2053" width="1082.0" height="15.0" fill="rgb(224,22,52)" rx="2" ry="2" />
<text  x="87.87" y="2063.5" >__libc_start_main</text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.5" y="1717" width="0.2" height="15.0" fill="rgb(219,113,14)" rx="2" ry="2" />
<text  x="13.45" y="1727.5" ></text>
</g>
<g >
<title>schema_registry::get_entry (1 samples, 0.02%)</title><rect x="972.6" y="1781" width="0.3" height="15.0" fill="rgb(219,220,1)" rx="2" ry="2" />
<text  x="975.65" y="1791.5" ></text>
</g>
<g >
<title>database::has_keyspace (8 samples, 0.15%)</title><rect x="856.7" y="1829" width="1.8" height="15.0" fill="rgb(239,118,46)" rx="2" ry="2" />
<text  x="859.71" y="1839.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment (13 samples, 0.25%)</title><rect x="522.5" y="1637" width="3.0" height="15.0" fill="rgb(223,118,21)" rx="2" ry="2" />
<text  x="525.52" y="1647.5" ></text>
</g>
<g >
<title>std::vector&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, std::allocator&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt;::_M_realloc_insert&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; (1 samples, 0.02%)</title><rect x="1131.2" y="1541" width="0.3" height="15.0" fill="rgb(251,222,1)" rx="2" ry="2" />
<text  x="1134.24" y="1551.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.02%)</title><rect x="84.4" y="1989" width="0.2" height="15.0" fill="rgb(229,212,52)" rx="2" ry="2" />
<text  x="87.42" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_nodes (1 samples, 0.02%)</title><rect x="671.6" y="1861" width="0.2" height="15.0" fill="rgb(231,69,16)" rx="2" ry="2" />
<text  x="674.58" y="1871.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.04%)</title><rect x="667.7" y="1861" width="0.5" height="15.0" fill="rgb(251,157,52)" rx="2" ry="2" />
<text  x="670.72" y="1871.5" ></text>
</g>
<g >
<title>cdc::generation_service::after_join (1 samples, 0.02%)</title><rect x="11.4" y="1861" width="0.2" height="15.0" fill="rgb(247,158,8)" rx="2" ry="2" />
<text  x="14.36" y="1871.5" ></text>
</g>
<g >
<title>double_decker&lt;long, memtable_entry, dht::raw_token_less_comparator, dht::ring_position_comparator, 16,  (2 samples, 0.04%)</title><rect x="448.3" y="1765" width="0.5" height="15.0" fill="rgb(205,179,40)" rx="2" ry="2" />
<text  x="451.33" y="1775.5" ></text>
</g>
<g >
<title>database::apply_with_commitlog (27 samples, 0.52%)</title><rect x="1119.2" y="1733" width="6.1" height="15.0" fill="rgb(227,174,44)" rx="2" ry="2" />
<text  x="1122.21" y="1743.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mWS (1 samples, 0.02%)</title><rect x="35.2" y="1685" width="0.2" height="15.0" fill="rgb(215,109,1)" rx="2" ry="2" />
<text  x="38.18" y="1695.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;nonwrapping_interval&lt;dht::ring_position&gt; const*, nonwrapping_interval&lt;dht::ring_position&gt;*&gt; (4 samples, 0.08%)</title><rect x="940.7" y="1797" width="0.9" height="15.0" fill="rgb(219,96,27)" rx="2" ry="2" />
<text  x="943.66" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.5" y="1909" width="0.2" height="15.0" fill="rgb(254,70,42)" rx="2" ry="2" />
<text  x="13.45" y="1919.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::get_value (2 samples, 0.04%)</title><rect x="92.6" y="1893" width="0.4" height="15.0" fill="rgb(223,86,22)" rx="2" ry="2" />
<text  x="95.58" y="1903.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::pop_back (1 samples, 0.02%)</title><rect x="46.1" y="1717" width="0.2" height="15.0" fill="rgb(232,21,52)" rx="2" ry="2" />
<text  x="49.07" y="1727.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::on_new_range (53 samples, 1.02%)</title><rect x="275.7" y="1685" width="12.0" height="15.0" fill="rgb(246,49,39)" rx="2" ry="2" />
<text  x="278.68" y="1695.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (1 samples, 0.02%)</title><rect x="439.7" y="1845" width="0.2" height="15.0" fill="rgb(215,172,38)" rx="2" ry="2" />
<text  x="442.71" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.5" y="517" width="0.2" height="15.0" fill="rgb(205,174,52)" rx="2" ry="2" />
<text  x="13.45" y="527.5" ></text>
</g>
<g >
<title>[unknown] (329 samples, 6.33%)</title><rect x="10.0" y="2053" width="74.6" height="15.0" fill="rgb(213,126,2)" rx="2" ry="2" />
<text  x="13.00" y="2063.5" >[unknown]</text>
</g>
<g >
<title>std::default_delete&lt;mutation_fragment::data&gt;::operator (3 samples, 0.06%)</title><rect x="429.3" y="1669" width="0.7" height="15.0" fill="rgb(227,22,11)" rx="2" ry="2" />
<text  x="432.27" y="1679.5" ></text>
</g>
<g >
<title>ser::after_qr_cell__timestamp&lt;bytes_ostream&gt;::skip_expiry (1 samples, 0.02%)</title><rect x="364.4" y="1605" width="0.2" height="15.0" fill="rgb(237,113,39)" rx="2" ry="2" />
<text  x="367.39" y="1615.5" ></text>
</g>
<g >
<title>posix_memalign (1 samples, 0.02%)</title><rect x="878.3" y="1621" width="0.2" height="15.0" fill="rgb(236,174,31)" rx="2" ry="2" />
<text  x="881.27" y="1631.5" ></text>
</g>
<g >
<title>utils::tuple_hash::hash_impl&lt;1ul, auth::resource_kind, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (2 samples, 0.04%)</title><rect x="816.1" y="1525" width="0.5" height="15.0" fill="rgb(242,25,48)" rx="2" ry="2" />
<text  x="819.10" y="1535.5" ></text>
</g>
<g >
<title>cql3::query_processor::process_authorized_statement (18 samples, 0.35%)</title><rect x="768.7" y="1845" width="4.1" height="15.0" fill="rgb(230,56,3)" rx="2" ry="2" />
<text  x="771.68" y="1855.5" ></text>
</g>
<g >
<title>seastar::internal::io_getevents (1 samples, 0.02%)</title><rect x="1166.2" y="1893" width="0.2" height="15.0" fill="rgb(228,102,14)" rx="2" ry="2" />
<text  x="1169.18" y="1903.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::splice (2 samples, 0.04%)</title><rect x="184.0" y="1669" width="0.5" height="15.0" fill="rgb(233,209,15)" rx="2" ry="2" />
<text  x="187.02" y="1679.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::fillBuffer (61 samples, 1.17%)</title><rect x="22.0" y="1749" width="13.9" height="15.0" fill="rgb(244,121,33)" rx="2" ry="2" />
<text  x="25.02" y="1759.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_singular (60 samples, 1.15%)</title><rect x="1142.1" y="1909" width="13.6" height="15.0" fill="rgb(222,25,20)" rx="2" ry="2" />
<text  x="1145.13" y="1919.5" ></text>
</g>
<g >
<title>dht::tri_compare (8 samples, 0.15%)</title><rect x="494.8" y="1685" width="1.9" height="15.0" fill="rgb(250,103,3)" rx="2" ry="2" />
<text  x="497.84" y="1695.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.04%)</title><rect x="50.4" y="1621" width="0.4" height="15.0" fill="rgb(219,2,7)" rx="2" ry="2" />
<text  x="53.38" y="1631.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;service::storage_proxy, true&gt;::make&lt;seastar::internal::either_sharded_or_local&lt;database&gt;, seastar::internal::either_sharded_or_local&lt;gms::gossiper&gt;, service::storage_proxy::config&amp;, std::reference_wrapper&lt;db::view::node_update_backlog&gt;, seastar::scheduling_group_key, seastar::internal::either_sharded_or_local&lt;gms::feature_service&gt;, seastar::internal::either_sharded_or_local&lt;locator::shared_token_metadata&gt;, seastar::internal::either_sharded_or_local&lt;netw::messaging_service&gt; &gt; (1 samples, 0.02%)</title><rect x="17.5" y="1813" width="0.2" height="15.0" fill="rgb(236,16,38)" rx="2" ry="2" />
<text  x="20.49" y="1823.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;data_value, data_value&gt;, std::allocator&lt;std::pair&lt;data_value, data_value&gt; &gt; &gt;::_M_create_storage (1 samples, 0.02%)</title><rect x="107.1" y="1637" width="0.2" height="15.0" fill="rgb(224,31,17)" rx="2" ry="2" />
<text  x="110.10" y="1647.5" ></text>
</g>
<g >
<title>seastar::repeat&lt;flat_mutation_reader::impl::consume_pausable&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (1 samples, 0.02%)</title><rect x="138.2" y="1717" width="0.2" height="15.0" fill="rgb(230,221,1)" rx="2" ry="2" />
<text  x="141.19" y="1727.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="802.3" y="1685" width="0.2" height="15.0" fill="rgb(231,36,53)" rx="2" ry="2" />
<text  x="805.26" y="1695.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (284 samples, 5.46%)</title><rect x="16.1" y="2021" width="64.5" height="15.0" fill="rgb(245,39,3)" rx="2" ry="2" />
<text  x="19.13" y="2031.5" >seastar..</text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.5" y="1173" width="0.2" height="15.0" fill="rgb(249,18,17)" rx="2" ry="2" />
<text  x="13.45" y="1183.5" ></text>
</g>
<g >
<title>schema::column_at (1 samples, 0.02%)</title><rect x="255.5" y="1541" width="0.2" height="15.0" fill="rgb(224,112,52)" rx="2" ry="2" />
<text  x="258.48" y="1551.5" ></text>
</g>
<g >
<title>cql3::column_identifier_raw::prepare_column_identifier (2 samples, 0.04%)</title><rect x="67.6" y="1845" width="0.5" height="15.0" fill="rgb(246,151,48)" rx="2" ry="2" />
<text  x="70.63" y="1855.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (1,027 samples, 19.75%)</title><rect x="885.3" y="1877" width="233.0" height="15.0" fill="rgb(209,126,21)" rx="2" ry="2" />
<text  x="888.30" y="1887.5" >seastar::noncopyable_function&lt;..</text>
</g>
<g >
<title>operator new (4 samples, 0.08%)</title><rect x="1150.3" y="1861" width="0.9" height="15.0" fill="rgb(216,64,27)" rx="2" ry="2" />
<text  x="1153.30" y="1871.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;mutation_fragment*&gt;::take_value (1 samples, 0.02%)</title><rect x="437.7" y="1813" width="0.2" height="15.0" fill="rgb(210,132,30)" rx="2" ry="2" />
<text  x="440.67" y="1823.5" ></text>
</g>
<g >
<title>seastar::do_until&lt;flush_reader::fill_buffer (9 samples, 0.17%)</title><rect x="81.2" y="1845" width="2.1" height="15.0" fill="rgb(238,179,34)" rx="2" ry="2" />
<text  x="84.24" y="1855.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::get0 (3 samples, 0.06%)</title><rect x="430.9" y="1701" width="0.6" height="15.0" fill="rgb(232,170,39)" rx="2" ry="2" />
<text  x="433.86" y="1711.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (1 samples, 0.02%)</title><rect x="11.1" y="1909" width="0.3" height="15.0" fill="rgb(208,142,23)" rx="2" ry="2" />
<text  x="14.13" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_nodes (2 samples, 0.04%)</title><rect x="1086.1" y="1765" width="0.4" height="15.0" fill="rgb(222,127,22)" rx="2" ry="2" />
<text  x="1089.09" y="1775.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;cql3::column_identifier, false&gt;::make&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const&amp;, bool&gt; (2 samples, 0.04%)</title><rect x="67.6" y="1829" width="0.5" height="15.0" fill="rgb(224,47,28)" rx="2" ry="2" />
<text  x="70.63" y="1839.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="256.2" y="1589" width="0.2" height="15.0" fill="rgb(207,121,34)" rx="2" ry="2" />
<text  x="259.16" y="1599.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::create_table_statement::raw_statement, std::default_delete&lt;cql3::statements::create_table_statement::raw_statement&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="63.8" y="1797" width="0.2" height="15.0" fill="rgb(233,36,29)" rx="2" ry="2" />
<text  x="66.77" y="1807.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (1 samples, 0.02%)</title><rect x="28.2" y="1621" width="0.2" height="15.0" fill="rgb(237,96,20)" rx="2" ry="2" />
<text  x="31.15" y="1631.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::tombstone_for_row (2 samples, 0.04%)</title><rect x="395.0" y="1637" width="0.5" height="15.0" fill="rgb(226,98,32)" rx="2" ry="2" />
<text  x="398.01" y="1647.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (1 samples, 0.02%)</title><rect x="289.5" y="1637" width="0.2" height="15.0" fill="rgb(234,211,3)" rx="2" ry="2" />
<text  x="292.52" y="1647.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (2 samples, 0.04%)</title><rect x="44.0" y="1557" width="0.5" height="15.0" fill="rgb(244,57,42)" rx="2" ry="2" />
<text  x="47.03" y="1567.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::reset (1 samples, 0.02%)</title><rect x="50.2" y="1669" width="0.2" height="15.0" fill="rgb(205,179,1)" rx="2" ry="2" />
<text  x="53.16" y="1679.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;cql3::expr::untyped_constant, void, void, cql3::expr::untyped_constant, void&gt; (1 samples, 0.02%)</title><rect x="60.1" y="1685" width="0.3" height="15.0" fill="rgb(212,27,8)" rx="2" ry="2" />
<text  x="63.14" y="1695.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;auth::resource_kind, std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;auth::resource_kind&gt;, std::hash&lt;auth::resource_kind&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (1 samples, 0.02%)</title><rect x="787.3" y="1749" width="0.2" height="15.0" fill="rgb(250,26,6)" rx="2" ry="2" />
<text  x="790.29" y="1759.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;service::write_response_handler, true&gt;::make&lt;seastar::shared_ptr&lt;service::storage_proxy&gt;, keyspace&amp;, db::consistency_level&amp;, db::write_type&amp;, std::unique_ptr&lt;service::mutation_holder, std::default_delete&lt;service::mutation_holder&gt; &gt;, utils::small_vector&lt;gms::inet_address, 3ul&gt;, utils::small_vector&lt;gms::inet_address, 1ul&gt; const&amp;, utils::small_vector&lt;gms::inet_address, 1ul&gt;, tracing::trace_state_ptr, service::storage_proxy_stats::write_stats&amp;, service_permit&gt; (1 samples, 0.02%)</title><rect x="1133.3" y="1605" width="0.2" height="15.0" fill="rgb(230,7,31)" rx="2" ry="2" />
<text  x="1136.28" y="1615.5" ></text>
</g>
<g >
<title>mutation_partition::mutation_partition (1 samples, 0.02%)</title><rect x="106.9" y="1685" width="0.2" height="15.0" fill="rgb(216,125,45)" rx="2" ry="2" />
<text  x="109.88" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_need_rehash (1 samples, 0.02%)</title><rect x="17.3" y="1541" width="0.2" height="15.0" fill="rgb(235,83,5)" rx="2" ry="2" />
<text  x="20.26" y="1551.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="879.2" y="1685" width="0.2" height="15.0" fill="rgb(218,175,11)" rx="2" ry="2" />
<text  x="882.18" y="1695.5" ></text>
</g>
<g >
<title>absl::hash_internal::AbslHashValue&lt;absl::hash_internal::HashState&gt; (1 samples, 0.02%)</title><rect x="842.0" y="1717" width="0.2" height="15.0" fill="rgb(228,125,30)" rx="2" ry="2" />
<text  x="844.97" y="1727.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.06%)</title><rect x="1144.9" y="1845" width="0.6" height="15.0" fill="rgb(236,221,32)" rx="2" ry="2" />
<text  x="1147.85" y="1855.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (3 samples, 0.06%)</title><rect x="191.0" y="1701" width="0.7" height="15.0" fill="rgb(232,135,10)" rx="2" ry="2" />
<text  x="194.05" y="1711.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;std::optional&lt;auth::resource&gt; &gt;, seastar::future&lt;bool&gt; &gt;, std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;std::optional&lt;auth::resource&gt; &gt;, seastar::future&lt;bool&gt; &gt; &gt; &gt;::~unique_ptr (6 samples, 0.12%)</title><rect x="825.0" y="1749" width="1.3" height="15.0" fill="rgb(211,156,52)" rx="2" ry="2" />
<text  x="827.95" y="1759.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql_transport::messages::result_message::rows&gt;::shared_ptr_count_for&lt;cql3::result&gt; (5 samples, 0.10%)</title><rect x="668.2" y="1877" width="1.1" height="15.0" fill="rgb(209,57,34)" rx="2" ry="2" />
<text  x="671.18" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.5" y="645" width="0.2" height="15.0" fill="rgb(214,76,22)" rx="2" ry="2" />
<text  x="13.45" y="655.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;query::result_memory_accounter&gt;::take (1 samples, 0.02%)</title><rect x="621.9" y="1861" width="0.2" height="15.0" fill="rgb(229,148,50)" rx="2" ry="2" />
<text  x="624.89" y="1871.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::timer (2 samples, 0.04%)</title><rect x="1023.7" y="1573" width="0.5" height="15.0" fill="rgb(208,146,47)" rx="2" ry="2" />
<text  x="1026.70" y="1583.5" ></text>
</g>
<g >
<title>logalloc::region_impl::free (1 samples, 0.02%)</title><rect x="701.3" y="1509" width="0.2" height="15.0" fill="rgb(218,0,48)" rx="2" ry="2" />
<text  x="704.30" y="1519.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::digest_read_result&gt;::schedule&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::execute (10 samples, 0.19%)</title><rect x="976.3" y="1733" width="2.2" height="15.0" fill="rgb(250,70,19)" rx="2" ry="2" />
<text  x="979.28" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;void&gt;  (2 samples, 0.04%)</title><rect x="74.0" y="1797" width="0.4" height="15.0" fill="rgb(249,177,39)" rx="2" ry="2" />
<text  x="76.98" y="1807.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="923.6" y="1765" width="0.3" height="15.0" fill="rgb(235,92,26)" rx="2" ry="2" />
<text  x="926.64" y="1775.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;::lru_entry, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="748.9" y="1813" width="0.3" height="15.0" fill="rgb(219,201,26)" rx="2" ry="2" />
<text  x="751.95" y="1823.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const*, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;*&gt; (1 samples, 0.02%)</title><rect x="796.6" y="1717" width="0.2" height="15.0" fill="rgb(245,65,6)" rx="2" ry="2" />
<text  x="799.59" y="1727.5" ></text>
</g>
<g >
<title>seastar::metrics::impl::impl::remove_registration (1 samples, 0.02%)</title><rect x="12.3" y="1925" width="0.2" height="15.0" fill="rgb(237,139,14)" rx="2" ry="2" />
<text  x="15.27" y="1935.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="57.2" y="1685" width="0.2" height="15.0" fill="rgb(208,37,13)" rx="2" ry="2" />
<text  x="60.19" y="1695.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (45 samples, 0.87%)</title><rect x="1168.0" y="2053" width="10.2" height="15.0" fill="rgb(217,59,28)" rx="2" ry="2" />
<text  x="1170.99" y="2063.5" ></text>
</g>
<g >
<title>compound_type&lt; (8 samples, 0.15%)</title><rect x="928.0" y="1781" width="1.8" height="15.0" fill="rgb(217,122,17)" rx="2" ry="2" />
<text  x="930.95" y="1791.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;dht::token, std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt;, std::allocator&lt;std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;dht::token&gt;, std::hash&lt;dht::token&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (23 samples, 0.44%)</title><rect x="1073.2" y="1685" width="5.2" height="15.0" fill="rgb(241,89,12)" rx="2" ry="2" />
<text  x="1076.16" y="1695.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.04%)</title><rect x="524.1" y="1605" width="0.5" height="15.0" fill="rgb(215,150,29)" rx="2" ry="2" />
<text  x="527.11" y="1615.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume_in_thread&lt;stable_flattened_mutations_consumer&lt;compact_for_compaction&lt;sstables::compacting_sstable_writer, noop_compacted_fragments_consumer&gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="17.9" y="1973" width="0.3" height="15.0" fill="rgb(224,130,38)" rx="2" ry="2" />
<text  x="20.94" y="1983.5" ></text>
</g>
<g >
<title>seastar::memory::stats (6 samples, 0.12%)</title><rect x="506.9" y="1733" width="1.3" height="15.0" fill="rgb(211,215,50)" rx="2" ry="2" />
<text  x="509.87" y="1743.5" ></text>
</g>
<g >
<title>bound_view::from_range&lt;nonwrapping_interval&gt; (9 samples, 0.17%)</title><rect x="280.2" y="1621" width="2.1" height="15.0" fill="rgb(227,119,27)" rx="2" ry="2" />
<text  x="283.21" y="1631.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="39.3" y="1717" width="0.2" height="15.0" fill="rgb(221,95,54)" rx="2" ry="2" />
<text  x="42.27" y="1727.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (1 samples, 0.02%)</title><rect x="47.7" y="1685" width="0.2" height="15.0" fill="rgb(214,92,3)" rx="2" ry="2" />
<text  x="50.66" y="1695.5" ></text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt;&amp;&gt; (5 samples, 0.10%)</title><rect x="840.6" y="1733" width="1.1" height="15.0" fill="rgb(221,112,33)" rx="2" ry="2" />
<text  x="843.61" y="1743.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="162.9" y="1845" width="0.2" height="15.0" fill="rgb(244,60,13)" rx="2" ry="2" />
<text  x="165.92" y="1855.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (26 samples, 0.50%)</title><rect x="874.6" y="1893" width="5.9" height="15.0" fill="rgb(240,120,5)" rx="2" ry="2" />
<text  x="877.64" y="1903.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.02%)</title><rect x="53.6" y="1589" width="0.2" height="15.0" fill="rgb(211,146,40)" rx="2" ry="2" />
<text  x="56.56" y="1599.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::statements::create_index_statement, std::default_delete&lt;cql3::statements::create_index_statement&gt;, true, true&gt;::__uniq_ptr_data (1 samples, 0.02%)</title><rect x="63.1" y="1781" width="0.2" height="15.0" fill="rgb(224,228,2)" rx="2" ry="2" />
<text  x="66.09" y="1791.5" ></text>
</g>
<g >
<title>std::hash&lt;wrapping_interval&lt;dht::token&gt; &gt;::operator (2 samples, 0.04%)</title><rect x="1084.3" y="1781" width="0.4" height="15.0" fill="rgb(220,3,17)" rx="2" ry="2" />
<text  x="1087.27" y="1791.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (4 samples, 0.08%)</title><rect x="916.8" y="1765" width="0.9" height="15.0" fill="rgb(236,68,52)" rx="2" ry="2" />
<text  x="919.84" y="1775.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::followPush (1 samples, 0.02%)</title><rect x="41.3" y="1765" width="0.2" height="15.0" fill="rgb(237,191,50)" rx="2" ry="2" />
<text  x="44.31" y="1775.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, auth::standard_role_manager::create_default_role_if_missing (1 samples, 0.02%)</title><rect x="700.8" y="1925" width="0.3" height="15.0" fill="rgb(215,31,15)" rx="2" ry="2" />
<text  x="703.85" y="1935.5" ></text>
</g>
<g >
<title>dht::tri_compare (2 samples, 0.04%)</title><rect x="1077.9" y="1669" width="0.5" height="15.0" fill="rgb(209,144,27)" rx="2" ry="2" />
<text  x="1080.92" y="1679.5" ></text>
</g>
<g >
<title>std::hash&lt;std::basic_string_view&lt;signed char, std::char_traits&lt;signed char&gt; &gt; &gt;::operator (13 samples, 0.25%)</title><rect x="764.4" y="1701" width="2.9" height="15.0" fill="rgb(240,198,53)" rx="2" ry="2" />
<text  x="767.37" y="1711.5" ></text>
</g>
<g >
<title>boost::algorithm::any_of&lt;std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;, std::_Bind_front&lt;bool  (1 samples, 0.02%)</title><rect x="876.2" y="1797" width="0.3" height="15.0" fill="rgb(216,197,6)" rx="2" ry="2" />
<text  x="879.23" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (1 samples, 0.02%)</title><rect x="11.4" y="1365" width="0.2" height="15.0" fill="rgb(246,141,18)" rx="2" ry="2" />
<text  x="14.36" y="1375.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::untyped_constant&gt; (1 samples, 0.02%)</title><rect x="60.1" y="1701" width="0.3" height="15.0" fill="rgb(213,69,30)" rx="2" ry="2" />
<text  x="63.14" y="1711.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (2 samples, 0.04%)</title><rect x="801.8" y="1653" width="0.5" height="15.0" fill="rgb(228,181,29)" rx="2" ry="2" />
<text  x="804.81" y="1663.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (3 samples, 0.06%)</title><rect x="1112.6" y="1813" width="0.7" height="15.0" fill="rgb(230,112,49)" rx="2" ry="2" />
<text  x="1115.63" y="1823.5" ></text>
</g>
<g >
<title>logalloc::segment_pool::allocate_segment (1 samples, 0.02%)</title><rect x="730.3" y="1653" width="0.3" height="15.0" fill="rgb(208,13,47)" rx="2" ry="2" />
<text  x="733.34" y="1663.5" ></text>
</g>
<g >
<title>boost::iterators::filter_iterator&lt;mutation_partition::non_dummy_rows (1 samples, 0.02%)</title><rect x="1130.1" y="1557" width="0.2" height="15.0" fill="rgb(222,148,21)" rx="2" ry="2" />
<text  x="1133.10" y="1567.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::disable_abort_on_alloc_failure_temporarily (2 samples, 0.04%)</title><rect x="265.5" y="1621" width="0.4" height="15.0" fill="rgb(244,196,28)" rx="2" ry="2" />
<text  x="268.47" y="1631.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="638.7" y="1813" width="0.2" height="15.0" fill="rgb(220,37,31)" rx="2" ry="2" />
<text  x="641.68" y="1823.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*&gt; &gt;::_Deque_impl_data::_Deque_impl_data (1 samples, 0.02%)</title><rect x="20.4" y="1685" width="0.3" height="15.0" fill="rgb(211,75,1)" rx="2" ry="2" />
<text  x="23.44" y="1695.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;::basic_sstring (1 samples, 0.02%)</title><rect x="871.0" y="1909" width="0.2" height="15.0" fill="rgb(232,169,46)" rx="2" ry="2" />
<text  x="874.01" y="1919.5" ></text>
</g>
<g >
<title>cql3::raw_value::make_value (2 samples, 0.04%)</title><rect x="906.2" y="1749" width="0.4" height="15.0" fill="rgb(233,78,50)" rx="2" ry="2" />
<text  x="909.17" y="1759.5" ></text>
</g>
<g >
<title>cql3::statements::raw::modification_statement::prepare (39 samples, 0.75%)</title><rect x="67.2" y="1877" width="8.8" height="15.0" fill="rgb(211,115,13)" rx="2" ry="2" />
<text  x="70.17" y="1887.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (1 samples, 0.02%)</title><rect x="54.9" y="1685" width="0.2" height="15.0" fill="rgb(254,164,50)" rx="2" ry="2" />
<text  x="57.92" y="1695.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (6 samples, 0.12%)</title><rect x="1148.5" y="1797" width="1.3" height="15.0" fill="rgb(227,152,20)" rx="2" ry="2" />
<text  x="1151.48" y="1807.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_Optional_payload_base (2 samples, 0.04%)</title><rect x="1037.1" y="1685" width="0.4" height="15.0" fill="rgb(234,170,34)" rx="2" ry="2" />
<text  x="1040.08" y="1695.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.02%)</title><rect x="698.8" y="1781" width="0.2" height="15.0" fill="rgb(234,74,9)" rx="2" ry="2" />
<text  x="701.81" y="1791.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::lw_shared_ptr&lt;schema const&gt;  (1 samples, 0.02%)</title><rect x="106.4" y="1861" width="0.3" height="15.0" fill="rgb(231,25,41)" rx="2" ry="2" />
<text  x="109.42" y="1871.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="830.8" y="1797" width="0.3" height="15.0" fill="rgb(235,200,19)" rx="2" ry="2" />
<text  x="833.85" y="1807.5" ></text>
</g>
<g >
<title>abstract_type::validate&lt;managed_bytes_basic_view&lt; (3 samples, 0.06%)</title><rect x="897.6" y="1733" width="0.6" height="15.0" fill="rgb(253,8,11)" rx="2" ry="2" />
<text  x="900.55" y="1743.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::upper_bound&lt;mutation_partition, schema const&amp;, nonwrapping_interval&lt;clustering_key_prefix&gt; const&amp;&gt; (1 samples, 0.02%)</title><rect x="285.9" y="1653" width="0.2" height="15.0" fill="rgb(218,54,11)" rx="2" ry="2" />
<text  x="288.89" y="1663.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;dht::token, std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt;, std::allocator&lt;std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;dht::token&gt;, std::hash&lt;dht::token&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (1 samples, 0.02%)</title><rect x="1132.4" y="1573" width="0.2" height="15.0" fill="rgb(224,216,45)" rx="2" ry="2" />
<text  x="1135.37" y="1583.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (2 samples, 0.04%)</title><rect x="1089.9" y="1829" width="0.5" height="15.0" fill="rgb(210,109,24)" rx="2" ry="2" />
<text  x="1092.95" y="1839.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.02%)</title><rect x="17.7" y="1925" width="0.2" height="15.0" fill="rgb(248,198,24)" rx="2" ry="2" />
<text  x="20.71" y="1935.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.06%)</title><rect x="199.7" y="1589" width="0.7" height="15.0" fill="rgb(224,178,20)" rx="2" ry="2" />
<text  x="202.67" y="1599.5" ></text>
</g>
<g >
<title>__libc_siglongjmp (1 samples, 0.02%)</title><rect x="642.3" y="1909" width="0.2" height="15.0" fill="rgb(228,193,33)" rx="2" ry="2" />
<text  x="645.31" y="1919.5" ></text>
</g>
<g >
<title>service::storage_proxy::got_response (3 samples, 0.06%)</title><rect x="729.7" y="1909" width="0.6" height="15.0" fill="rgb(235,90,26)" rx="2" ry="2" />
<text  x="732.66" y="1919.5" ></text>
</g>
<g >
<title>std::make_unique&lt;empty_flat_reader, seastar::lw_shared_ptr&lt;schema const&gt;, reader_permit&gt; (12 samples, 0.23%)</title><rect x="548.6" y="1701" width="2.7" height="15.0" fill="rgb(216,83,12)" rx="2" ry="2" />
<text  x="551.61" y="1711.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.08%)</title><rect x="331.3" y="1717" width="0.9" height="15.0" fill="rgb(229,31,44)" rx="2" ry="2" />
<text  x="334.26" y="1727.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_destroy_data (1 samples, 0.02%)</title><rect x="393.0" y="1605" width="0.2" height="15.0" fill="rgb(220,120,44)" rx="2" ry="2" />
<text  x="395.97" y="1615.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; const*, std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt; &gt;, nonwrapping_interval&lt;clustering_key_prefix&gt;*&gt; (2 samples, 0.04%)</title><rect x="155.2" y="1829" width="0.5" height="15.0" fill="rgb(236,149,0)" rx="2" ry="2" />
<text  x="158.20" y="1839.5" ></text>
</g>
<g >
<title>bplus::tree&lt;long, intrusive_array&lt;cache_entry&gt;, dht::raw_token_less_comparator, 16ul,  (1 samples, 0.02%)</title><rect x="16.4" y="1957" width="0.2" height="15.0" fill="rgb(240,64,43)" rx="2" ry="2" />
<text  x="19.35" y="1967.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_rec (1 samples, 0.02%)</title><rect x="41.5" y="1765" width="0.3" height="15.0" fill="rgb(210,37,11)" rx="2" ry="2" />
<text  x="44.54" y="1775.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (1 samples, 0.02%)</title><rect x="807.7" y="1637" width="0.2" height="15.0" fill="rgb(245,151,6)" rx="2" ry="2" />
<text  x="810.71" y="1647.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;compact_for_query&lt; (2 samples, 0.04%)</title><rect x="437.9" y="1813" width="0.4" height="15.0" fill="rgb(237,216,38)" rx="2" ry="2" />
<text  x="440.89" y="1823.5" ></text>
</g>
<g >
<title>rows_entry::tri_compare::operator (1 samples, 0.02%)</title><rect x="101.7" y="1765" width="0.2" height="15.0" fill="rgb(230,134,8)" rx="2" ry="2" />
<text  x="104.66" y="1775.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_impl&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (452 samples, 8.69%)</title><rect x="331.0" y="1749" width="102.6" height="15.0" fill="rgb(216,65,15)" rx="2" ry="2" />
<text  x="334.03" y="1759.5" >seastar::int..</text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (7 samples, 0.13%)</title><rect x="852.4" y="1813" width="1.6" height="15.0" fill="rgb(233,39,49)" rx="2" ry="2" />
<text  x="855.40" y="1823.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::value_ptr&gt;::future_state&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry_ptr&gt; (7 samples, 0.13%)</title><rect x="756.9" y="1749" width="1.6" height="15.0" fill="rgb(248,193,51)" rx="2" ry="2" />
<text  x="759.89" y="1759.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIN4cql34expr10expressionEEER18overloaded_functorIJZNS5_12prepare_termERKS6_R8databaseRKN7seastar13basic_sstringIcjLj15ELb1EEENSD_13lw_shared_ptrINS4_20column_specificationEEEE3$_0ZNS5_12prepare_termESA_SC_SH_SK_E3$_1ZNS5_12prepare_termESA_SC_SH_SK_E3$_2ZNS5_12prepare_termESA_SC_SH_SK_E3$_3ZNS5_12prepare_termESA_SC_SH_SK_E3$_4ZNS5_12prepare_termESA_SC_SH_SK_E3$_5ZNS5_12prepare_termESA_SC_SH_SK_E3$_6ZNS5_12prepare_termESA_SC_SH_SK_E3$_7ZNS5_12prepare_termESA_SC_SH_SK_E3$_8ZNS5_12prepare_termESA_SC_SH_SK_E3$_9ZNS5_12prepare_termESA_SC_SH_SK_E4$_10ZNS5_12prepare_termESA_SC_SH_SK_E4$_11ZNS5_12prepare_termESA_SC_SH_SK_E4$_12ZNS5_12prepare_termESA_SC_SH_SK_E4$_13ZNS5_12prepare_termESA_SC_SH_SK_E4$_14ZNS5_12prepare_termESA_SC_SH_SK_E4$_15EERSt7variantIJNS5_11conjunctionENS5_15binary_operatorENS5_12column_valueENS5_5tokenENS5_21unresolved_identifierENS5_25column_mutation_attributeENS5_13function_callENS5_4castENS5_15field_selectionENS5_4nullENS5_13bind_variableENS5_16untyped_constantENS5_8constantENS5_17tuple_constructorENS5_22collection_constructorENS5_20usertype_constructorEEEEJEEESt16integer_sequenceImJLm11EEEE14__visit_invokeES12_S1L_ (1 samples, 0.02%)</title><rect x="11.4" y="1637" width="0.2" height="15.0" fill="rgb(237,127,10)" rx="2" ry="2" />
<text  x="14.36" y="1647.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::impl (6 samples, 0.12%)</title><rect x="548.8" y="1669" width="1.4" height="15.0" fill="rgb(213,135,28)" rx="2" ry="2" />
<text  x="551.84" y="1679.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;gms::inet_address, gms::inet_address, std::allocator&lt;gms::inet_address&gt;, std::__detail::_Identity, std::equal_to&lt;gms::inet_address&gt;, std::hash&lt;gms::inet_address&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert&lt;gms::inet_address const&amp;, std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;gms::inet_address, false&gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="17.7" y="1765" width="0.2" height="15.0" fill="rgb(239,133,38)" rx="2" ry="2" />
<text  x="20.71" y="1775.5" ></text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_token (11 samples, 0.21%)</title><rect x="944.5" y="1813" width="2.5" height="15.0" fill="rgb(219,26,48)" rx="2" ry="2" />
<text  x="947.52" y="1823.5" ></text>
</g>
<g >
<title>utils::tuple_hash::operator (15 samples, 0.29%)</title><rect x="763.9" y="1733" width="3.4" height="15.0" fill="rgb(220,131,3)" rx="2" ry="2" />
<text  x="766.92" y="1743.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.02%)</title><rect x="730.3" y="1781" width="0.3" height="15.0" fill="rgb(226,120,54)" rx="2" ry="2" />
<text  x="733.34" y="1791.5" ></text>
</g>
<g >
<title>std::__make_heap&lt;__gnu_cxx::__normal_iterator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position*, std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::heap_compare&gt; &gt; (1 samples, 0.02%)</title><rect x="283.2" y="1637" width="0.2" height="15.0" fill="rgb(216,163,36)" rx="2" ry="2" />
<text  x="286.16" y="1647.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::operator== (2 samples, 0.04%)</title><rect x="78.3" y="1621" width="0.4" height="15.0" fill="rgb(214,160,51)" rx="2" ry="2" />
<text  x="81.29" y="1631.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::operator== (8 samples, 0.15%)</title><rect x="812.0" y="1557" width="1.8" height="15.0" fill="rgb(223,22,47)" rx="2" ry="2" />
<text  x="815.02" y="1567.5" ></text>
</g>
<g >
<title>validation::validate_column_family (3 samples, 0.06%)</title><rect x="76.2" y="1877" width="0.7" height="15.0" fill="rgb(242,108,38)" rx="2" ry="2" />
<text  x="79.25" y="1887.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (3 samples, 0.06%)</title><rect x="43.4" y="1557" width="0.6" height="15.0" fill="rgb(234,36,12)" rx="2" ry="2" />
<text  x="46.35" y="1567.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, std::optional&lt;auth::resource&gt;&amp;&amp;, service::client_state::check_has_permission (1 samples, 0.02%)</title><rect x="824.7" y="1749" width="0.3" height="15.0" fill="rgb(228,75,42)" rx="2" ry="2" />
<text  x="827.72" y="1759.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (4 samples, 0.08%)</title><rect x="53.8" y="1669" width="0.9" height="15.0" fill="rgb(225,164,39)" rx="2" ry="2" />
<text  x="56.79" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.5" y="789" width="0.2" height="15.0" fill="rgb(248,167,34)" rx="2" ry="2" />
<text  x="13.45" y="799.5" ></text>
</g>
<g >
<title>intrusive_b::searcher&lt;clustering_key_prefix, rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare,  (1 samples, 0.02%)</title><rect x="108.5" y="1717" width="0.2" height="15.0" fill="rgb(234,219,41)" rx="2" ry="2" />
<text  x="111.47" y="1727.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (1 samples, 0.02%)</title><rect x="138.2" y="1813" width="0.2" height="15.0" fill="rgb(213,153,32)" rx="2" ry="2" />
<text  x="141.19" y="1823.5" ></text>
</g>
<g >
<title>list_reader_selector::create_new_readers (3 samples, 0.06%)</title><rect x="452.4" y="1717" width="0.7" height="15.0" fill="rgb(238,86,4)" rx="2" ry="2" />
<text  x="455.41" y="1727.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (579 samples, 11.13%)</title><rect x="172.2" y="1749" width="131.4" height="15.0" fill="rgb(231,195,49)" rx="2" ry="2" />
<text  x="175.22" y="1759.5" >mutation_reader_..</text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (3 samples, 0.06%)</title><rect x="778.2" y="1749" width="0.7" height="15.0" fill="rgb(214,39,48)" rx="2" ry="2" />
<text  x="781.21" y="1759.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (5 samples, 0.10%)</title><rect x="1111.5" y="1813" width="1.1" height="15.0" fill="rgb(248,108,10)" rx="2" ry="2" />
<text  x="1114.50" y="1823.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt;, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt; &gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="1129.0" y="1685" width="0.2" height="15.0" fill="rgb(241,39,39)" rx="2" ry="2" />
<text  x="1131.97" y="1695.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (11 samples, 0.21%)</title><rect x="1100.6" y="1829" width="2.5" height="15.0" fill="rgb(214,88,26)" rx="2" ry="2" />
<text  x="1103.61" y="1839.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (1 samples, 0.02%)</title><rect x="633.2" y="1845" width="0.3" height="15.0" fill="rgb(225,110,31)" rx="2" ry="2" />
<text  x="636.24" y="1855.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;mutation_fragment*&gt;::take_value (1 samples, 0.02%)</title><rect x="438.6" y="1829" width="0.2" height="15.0" fill="rgb(220,175,2)" rx="2" ry="2" />
<text  x="441.58" y="1839.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.02%)</title><rect x="49.5" y="1685" width="0.2" height="15.0" fill="rgb(238,216,15)" rx="2" ry="2" />
<text  x="52.48" y="1695.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="788.0" y="1813" width="0.2" height="15.0" fill="rgb(240,31,23)" rx="2" ry="2" />
<text  x="790.97" y="1823.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (3 samples, 0.06%)</title><rect x="422.9" y="1589" width="0.7" height="15.0" fill="rgb(227,172,28)" rx="2" ry="2" />
<text  x="425.92" y="1599.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (2 samples, 0.04%)</title><rect x="50.4" y="1669" width="0.4" height="15.0" fill="rgb(248,176,53)" rx="2" ry="2" />
<text  x="53.38" y="1679.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="108.5" y="1637" width="0.2" height="15.0" fill="rgb(247,43,13)" rx="2" ry="2" />
<text  x="111.47" y="1647.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::get_promise (2 samples, 0.04%)</title><rect x="1106.7" y="1845" width="0.5" height="15.0" fill="rgb(246,159,1)" rx="2" ry="2" />
<text  x="1109.74" y="1855.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.04%)</title><rect x="521.6" y="1621" width="0.5" height="15.0" fill="rgb(247,70,33)" rx="2" ry="2" />
<text  x="524.61" y="1631.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;void&gt;  (1 samples, 0.02%)</title><rect x="11.8" y="2021" width="0.2" height="15.0" fill="rgb(220,222,6)" rx="2" ry="2" />
<text  x="14.82" y="2031.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;11ul, cql3::expr::untyped_constant, cql3::expr::untyped_constant, void&gt; (1 samples, 0.02%)</title><rect x="60.1" y="1669" width="0.3" height="15.0" fill="rgb(248,146,54)" rx="2" ry="2" />
<text  x="63.14" y="1679.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::~resource_units (1 samples, 0.02%)</title><rect x="428.4" y="1669" width="0.2" height="15.0" fill="rgb(235,177,22)" rx="2" ry="2" />
<text  x="431.37" y="1679.5" ></text>
</g>
<g >
<title>seastar::internal::future_base::set_coroutine (1 samples, 0.02%)</title><rect x="1033.2" y="1685" width="0.3" height="15.0" fill="rgb(215,185,13)" rx="2" ry="2" />
<text  x="1036.23" y="1695.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.06%)</title><rect x="771.0" y="1813" width="0.6" height="15.0" fill="rgb(253,58,2)" rx="2" ry="2" />
<text  x="773.95" y="1823.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::query_options, db::consistency_level&amp;, std::vector&lt;cql3::raw_value, std::allocator&lt;cql3::raw_value&gt; &gt;, cql3::query_options::specific_options&gt; (33 samples, 0.63%)</title><rect x="859.2" y="1877" width="7.5" height="15.0" fill="rgb(246,96,41)" rx="2" ry="2" />
<text  x="862.21" y="1887.5" ></text>
</g>
<g >
<title>antlr3::DefaultAllocPolicy::StackType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::push (1 samples, 0.02%)</title><rect x="57.4" y="1733" width="0.2" height="15.0" fill="rgb(216,103,7)" rx="2" ry="2" />
<text  x="60.42" y="1743.5" ></text>
</g>
<g >
<title>TLS init function for bound_view::_empty_prefix (1 samples, 0.02%)</title><rect x="263.0" y="1541" width="0.2" height="15.0" fill="rgb(226,92,11)" rx="2" ry="2" />
<text  x="265.97" y="1551.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (3 samples, 0.06%)</title><rect x="250.5" y="1573" width="0.7" height="15.0" fill="rgb(224,116,11)" rx="2" ry="2" />
<text  x="253.49" y="1583.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (2 samples, 0.04%)</title><rect x="940.9" y="1733" width="0.4" height="15.0" fill="rgb(238,201,41)" rx="2" ry="2" />
<text  x="943.89" y="1743.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::drop_keyspace_statement, std::default_delete&lt;cql3::statements::drop_keyspace_statement&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::statements::drop_keyspace_statement&gt;, void&gt; (1 samples, 0.02%)</title><rect x="64.7" y="1797" width="0.2" height="15.0" fill="rgb(228,224,28)" rx="2" ry="2" />
<text  x="67.68" y="1807.5" ></text>
</g>
<g >
<title>utils::tuple_hash::operator (11 samples, 0.21%)</title><rect x="814.1" y="1589" width="2.5" height="15.0" fill="rgb(220,85,12)" rx="2" ry="2" />
<text  x="817.06" y="1599.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::apply_updates (7 samples, 0.13%)</title><rect x="878.0" y="1797" width="1.6" height="15.0" fill="rgb(236,179,20)" rx="2" ry="2" />
<text  x="881.04" y="1807.5" ></text>
</g>
<g >
<title>utils::tuple_hash::operator (10 samples, 0.19%)</title><rect x="778.9" y="1765" width="2.3" height="15.0" fill="rgb(213,108,35)" rx="2" ry="2" />
<text  x="781.89" y="1775.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (62 samples, 1.19%)</title><rect x="22.0" y="1781" width="14.1" height="15.0" fill="rgb(245,117,45)" rx="2" ry="2" />
<text  x="25.02" y="1791.5" ></text>
</g>
<g >
<title>seastar::memory::stats (4 samples, 0.08%)</title><rect x="194.2" y="1669" width="0.9" height="15.0" fill="rgb(215,226,9)" rx="2" ry="2" />
<text  x="197.23" y="1679.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.02%)</title><rect x="42.4" y="1621" width="0.3" height="15.0" fill="rgb(251,225,49)" rx="2" ry="2" />
<text  x="45.44" y="1631.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (1 samples, 0.02%)</title><rect x="17.7" y="1957" width="0.2" height="15.0" fill="rgb(253,188,20)" rx="2" ry="2" />
<text  x="20.71" y="1967.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::~resource_units (1 samples, 0.02%)</title><rect x="429.5" y="1653" width="0.2" height="15.0" fill="rgb(209,105,30)" rx="2" ry="2" />
<text  x="432.50" y="1663.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.02%)</title><rect x="42.4" y="1605" width="0.3" height="15.0" fill="rgb(229,191,10)" rx="2" ry="2" />
<text  x="45.44" y="1615.5" ></text>
</g>
<g >
<title>atomic_cell::make_live (2 samples, 0.04%)</title><rect x="878.0" y="1685" width="0.5" height="15.0" fill="rgb(239,91,26)" rx="2" ry="2" />
<text  x="881.04" y="1695.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (3 samples, 0.06%)</title><rect x="45.4" y="1717" width="0.7" height="15.0" fill="rgb(242,173,44)" rx="2" ry="2" />
<text  x="48.39" y="1727.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (2 samples, 0.04%)</title><rect x="136.4" y="1877" width="0.4" height="15.0" fill="rgb(246,3,39)" rx="2" ry="2" />
<text  x="139.37" y="1887.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (2 samples, 0.04%)</title><rect x="50.4" y="1701" width="0.4" height="15.0" fill="rgb(230,149,33)" rx="2" ry="2" />
<text  x="53.38" y="1711.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (40 samples, 0.77%)</title><rect x="558.6" y="1829" width="9.1" height="15.0" fill="rgb(206,160,44)" rx="2" ry="2" />
<text  x="561.59" y="1839.5" ></text>
</g>
<g >
<title>row::row (2 samples, 0.04%)</title><rect x="82.6" y="1637" width="0.5" height="15.0" fill="rgb(231,135,46)" rx="2" ry="2" />
<text  x="85.60" y="1647.5" ></text>
</g>
<g >
<title>bplus::searcher&lt;long, long, dht::raw_token_less_comparator, 16ul,  (1 samples, 0.02%)</title><rect x="16.1" y="1925" width="0.3" height="15.0" fill="rgb(242,59,21)" rx="2" ry="2" />
<text  x="19.13" y="1935.5" ></text>
</g>
<g >
<title>seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::expand (8 samples, 0.15%)</title><rect x="520.5" y="1653" width="1.8" height="15.0" fill="rgb(252,46,37)" rx="2" ry="2" />
<text  x="523.48" y="1663.5" ></text>
</g>
<g >
<title>schema::column_at (10 samples, 0.19%)</title><rect x="246.9" y="1541" width="2.2" height="15.0" fill="rgb(207,101,8)" rx="2" ry="2" />
<text  x="249.86" y="1551.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (1 samples, 0.02%)</title><rect x="832.4" y="1765" width="0.3" height="15.0" fill="rgb(217,134,18)" rx="2" ry="2" />
<text  x="835.44" y="1775.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::check_local_limit (2 samples, 0.04%)</title><rect x="343.1" y="1621" width="0.4" height="15.0" fill="rgb(251,142,32)" rx="2" ry="2" />
<text  x="346.06" y="1631.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (2 samples, 0.04%)</title><rect x="815.6" y="1509" width="0.5" height="15.0" fill="rgb(232,125,24)" rx="2" ry="2" />
<text  x="818.65" y="1519.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql_transport::messages::result_message&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="682.5" y="1893" width="0.2" height="15.0" fill="rgb(252,63,24)" rx="2" ry="2" />
<text  x="685.47" y="1903.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (22 samples, 0.42%)</title><rect x="419.5" y="1637" width="5.0" height="15.0" fill="rgb(220,63,6)" rx="2" ry="2" />
<text  x="422.52" y="1647.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="49.5" y="1637" width="0.2" height="15.0" fill="rgb(226,223,28)" rx="2" ry="2" />
<text  x="52.48" y="1647.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::read_next (1 samples, 0.02%)</title><rect x="874.0" y="1797" width="0.2" height="15.0" fill="rgb(210,11,14)" rx="2" ry="2" />
<text  x="876.96" y="1807.5" ></text>
</g>
<g >
<title>mutation_partition::clear_gently (1 samples, 0.02%)</title><rect x="701.3" y="1637" width="0.2" height="15.0" fill="rgb(210,91,36)" rx="2" ry="2" />
<text  x="704.30" y="1647.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;query::result_memory_accounter&gt;::move_it (3 samples, 0.06%)</title><rect x="621.2" y="1861" width="0.7" height="15.0" fill="rgb(237,48,44)" rx="2" ry="2" />
<text  x="624.21" y="1871.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (2 samples, 0.04%)</title><rect x="705.8" y="1861" width="0.5" height="15.0" fill="rgb(220,177,39)" rx="2" ry="2" />
<text  x="708.84" y="1871.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::operator (3 samples, 0.06%)</title><rect x="769.6" y="1797" width="0.7" height="15.0" fill="rgb(216,44,4)" rx="2" ry="2" />
<text  x="772.59" y="1807.5" ></text>
</g>
<g >
<title>utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;::lru_entry::touch (2 samples, 0.04%)</title><rect x="748.7" y="1829" width="0.5" height="15.0" fill="rgb(239,208,10)" rx="2" ry="2" />
<text  x="751.72" y="1839.5" ></text>
</g>
<g >
<title>seastar::memory::allocate_aligned (9 samples, 0.17%)</title><rect x="243.5" y="1493" width="2.0" height="15.0" fill="rgb(250,104,3)" rx="2" ry="2" />
<text  x="246.46" y="1503.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextToken (1 samples, 0.02%)</title><rect x="35.9" y="1749" width="0.2" height="15.0" fill="rgb(237,70,4)" rx="2" ry="2" />
<text  x="38.86" y="1759.5" ></text>
</g>
<g >
<title>std::_Optional_payload&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, false, false, false&gt;::operator= (1 samples, 0.02%)</title><rect x="40.6" y="1701" width="0.3" height="15.0" fill="rgb(244,10,32)" rx="2" ry="2" />
<text  x="43.63" y="1711.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (2 samples, 0.04%)</title><rect x="39.7" y="1653" width="0.5" height="15.0" fill="rgb(210,39,47)" rx="2" ry="2" />
<text  x="42.72" y="1663.5" ></text>
</g>
<g >
<title>schema_registry::learn (4 samples, 0.08%)</title><rect x="108.5" y="1893" width="0.9" height="15.0" fill="rgb(252,199,44)" rx="2" ry="2" />
<text  x="111.47" y="1903.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.02%)</title><rect x="59.2" y="1701" width="0.3" height="15.0" fill="rgb(209,129,40)" rx="2" ry="2" />
<text  x="62.23" y="1711.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;cql3::constants::setter, false&gt;::make&lt;column_definition const&amp;, cql3::expr::expression&gt; (1 samples, 0.02%)</title><rect x="70.1" y="1829" width="0.2" height="15.0" fill="rgb(238,175,24)" rx="2" ry="2" />
<text  x="73.12" y="1839.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_no_esft&lt;std::function&lt;flat_mutation_reader  (1 samples, 0.02%)</title><rect x="638.5" y="1813" width="0.2" height="15.0" fill="rgb(219,65,13)" rx="2" ry="2" />
<text  x="641.46" y="1823.5" ></text>
</g>
<g >
<title>std::construct_at&lt;std::pair&lt;column_definition const* const, cql3::expr::expression&gt;, std::piecewise_construct_t const&amp;, std::tuple&lt;column_definition const* const&amp;&gt;, std::tuple&lt;&gt; &gt; (1 samples, 0.02%)</title><rect x="74.2" y="1749" width="0.2" height="15.0" fill="rgb(242,47,31)" rx="2" ry="2" />
<text  x="77.21" y="1759.5" ></text>
</g>
<g >
<title>allocation_strategy::construct&lt;rows_entry, schema const&amp;, rows_entry const&amp;&gt; (1 samples, 0.02%)</title><rect x="106.9" y="1669" width="0.2" height="15.0" fill="rgb(244,141,6)" rx="2" ry="2" />
<text  x="109.88" y="1679.5" ></text>
</g>
<g >
<title>utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::touch (1 samples, 0.02%)</title><rect x="758.5" y="1749" width="0.2" height="15.0" fill="rgb(219,180,50)" rx="2" ry="2" />
<text  x="761.48" y="1759.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_Optional_payload_base (3 samples, 0.06%)</title><rect x="568.6" y="1845" width="0.7" height="15.0" fill="rgb(209,6,53)" rx="2" ry="2" />
<text  x="571.58" y="1855.5" ></text>
</g>
<g >
<title>service::storage_proxy::create_write_response_handler_helper (9 samples, 0.17%)</title><rect x="1131.9" y="1637" width="2.1" height="15.0" fill="rgb(210,92,7)" rx="2" ry="2" />
<text  x="1134.92" y="1647.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::operator= (1 samples, 0.02%)</title><rect x="47.7" y="1701" width="0.2" height="15.0" fill="rgb(252,207,42)" rx="2" ry="2" />
<text  x="50.66" y="1711.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::raw::modification_statement, std::default_delete&lt;cql3::statements::raw::modification_statement&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::statements::raw::modification_statement&gt;, void&gt; (1 samples, 0.02%)</title><rect x="66.3" y="1813" width="0.2" height="15.0" fill="rgb(239,68,27)" rx="2" ry="2" />
<text  x="69.27" y="1823.5" ></text>
</g>
<g >
<title>v3_columns::from_v2_schema (1 samples, 0.02%)</title><rect x="17.3" y="1589" width="0.2" height="15.0" fill="rgb(230,123,44)" rx="2" ry="2" />
<text  x="20.26" y="1599.5" ></text>
</g>
<g >
<title>row::~row (1 samples, 0.02%)</title><rect x="292.0" y="1685" width="0.2" height="15.0" fill="rgb(234,95,4)" rx="2" ry="2" />
<text  x="295.01" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_node (2 samples, 0.04%)</title><rect x="678.2" y="1861" width="0.4" height="15.0" fill="rgb(213,199,37)" rx="2" ry="2" />
<text  x="681.16" y="1871.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_singular (539 samples, 10.36%)</title><rect x="962.4" y="1797" width="122.3" height="15.0" fill="rgb(243,3,41)" rx="2" ry="2" />
<text  x="965.44" y="1807.5" >service::storag..</text>
</g>
<g >
<title>managed_bytes::managed_bytes (2 samples, 0.04%)</title><rect x="906.9" y="1781" width="0.4" height="15.0" fill="rgb(254,200,32)" rx="2" ry="2" />
<text  x="909.85" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::binary_operator const*&gt;  (1 samples, 0.02%)</title><rect x="952.7" y="1765" width="0.2" height="15.0" fill="rgb(224,34,35)" rx="2" ry="2" />
<text  x="955.68" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.5" y="1413" width="0.2" height="15.0" fill="rgb(216,168,36)" rx="2" ry="2" />
<text  x="13.45" y="1423.5" ></text>
</g>
<g >
<title>allocation_strategy::alloc&lt;blob_storage&gt; (2 samples, 0.04%)</title><rect x="230.8" y="1493" width="0.4" height="15.0" fill="rgb(214,182,27)" rx="2" ry="2" />
<text  x="233.75" y="1503.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt;::allocate (1 samples, 0.02%)</title><rect x="940.0" y="1813" width="0.2" height="15.0" fill="rgb(233,209,20)" rx="2" ry="2" />
<text  x="942.98" y="1823.5" ></text>
</g>
<g >
<title>mutation_fragment::consume&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (1 samples, 0.02%)</title><rect x="138.2" y="1685" width="0.2" height="15.0" fill="rgb(252,217,12)" rx="2" ry="2" />
<text  x="141.19" y="1695.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;service::query_state, false&gt;::make&lt;service::client_state&amp;, service_permit&gt; (3 samples, 0.06%)</title><rect x="855.8" y="1845" width="0.7" height="15.0" fill="rgb(240,221,20)" rx="2" ry="2" />
<text  x="858.81" y="1855.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (2 samples, 0.04%)</title><rect x="44.0" y="1541" width="0.5" height="15.0" fill="rgb(254,81,48)" rx="2" ry="2" />
<text  x="47.03" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.02%)</title><rect x="350.1" y="1589" width="0.2" height="15.0" fill="rgb(238,67,51)" rx="2" ry="2" />
<text  x="353.09" y="1599.5" ></text>
</g>
<g >
<title>operator new (7 samples, 0.13%)</title><rect x="989.4" y="1685" width="1.6" height="15.0" fill="rgb(237,188,36)" rx="2" ry="2" />
<text  x="992.44" y="1695.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, std::function&lt;void  (1 samples, 0.02%)</title><rect x="730.3" y="1925" width="0.3" height="15.0" fill="rgb(251,149,47)" rx="2" ry="2" />
<text  x="733.34" y="1935.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_next (76 samples, 1.46%)</title><rect x="174.5" y="1733" width="17.2" height="15.0" fill="rgb(230,180,38)" rx="2" ry="2" />
<text  x="177.49" y="1743.5" ></text>
</g>
<g >
<title>compare_unsigned&lt;managed_bytes_basic_view&lt; (11 samples, 0.21%)</title><rect x="498.2" y="1637" width="2.5" height="15.0" fill="rgb(232,104,22)" rx="2" ry="2" />
<text  x="501.24" y="1647.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (2 samples, 0.04%)</title><rect x="58.6" y="1701" width="0.4" height="15.0" fill="rgb(249,182,23)" rx="2" ry="2" />
<text  x="61.55" y="1711.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (8 samples, 0.15%)</title><rect x="1155.7" y="1909" width="1.9" height="15.0" fill="rgb(205,94,23)" rx="2" ry="2" />
<text  x="1158.74" y="1919.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::fill_buffer (4 samples, 0.08%)</title><rect x="82.4" y="1797" width="0.9" height="15.0" fill="rgb(229,41,33)" rx="2" ry="2" />
<text  x="85.37" y="1807.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::semaphore_units&lt;db::commitlog::segment_manager::request_controller_timeout_exception_factory, seastar::lowres_clock&gt; &gt;::get0 (1 samples, 0.02%)</title><rect x="1126.0" y="1701" width="0.2" height="15.0" fill="rgb(242,222,8)" rx="2" ry="2" />
<text  x="1129.02" y="1711.5" ></text>
</g>
<g >
<title>dht::shard_of (3 samples, 0.06%)</title><rect x="993.1" y="1717" width="0.6" height="15.0" fill="rgb(220,20,13)" rx="2" ry="2" />
<text  x="996.07" y="1727.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;query::querier&lt; (1 samples, 0.02%)</title><rect x="137.5" y="1877" width="0.2" height="15.0" fill="rgb(209,153,24)" rx="2" ry="2" />
<text  x="140.51" y="1887.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="909.4" y="1765" width="0.2" height="15.0" fill="rgb(248,182,7)" rx="2" ry="2" />
<text  x="912.35" y="1775.5" ></text>
</g>
<g >
<title>std::binary_search&lt;char const*, char&gt; (1 samples, 0.02%)</title><rect x="12.3" y="1829" width="0.2" height="15.0" fill="rgb(250,13,42)" rx="2" ry="2" />
<text  x="15.27" y="1839.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.02%)</title><rect x="11.4" y="1909" width="0.2" height="15.0" fill="rgb(246,211,48)" rx="2" ry="2" />
<text  x="14.36" y="1919.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (2 samples, 0.04%)</title><rect x="469.0" y="1701" width="0.4" height="15.0" fill="rgb(224,52,42)" rx="2" ry="2" />
<text  x="471.98" y="1711.5" ></text>
</g>
<g >
<title>absl::container_internal::operator== (1 samples, 0.02%)</title><rect x="1053.0" y="1733" width="0.2" height="15.0" fill="rgb(249,133,20)" rx="2" ry="2" />
<text  x="1055.96" y="1743.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;service::storage_proxy_coordinator_query_result&gt;::set_urgent_state (1 samples, 0.02%)</title><rect x="873.3" y="1925" width="0.2" height="15.0" fill="rgb(237,182,14)" rx="2" ry="2" />
<text  x="876.28" y="1935.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="187.2" y="1653" width="0.2" height="15.0" fill="rgb(233,49,41)" rx="2" ry="2" />
<text  x="190.19" y="1663.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::forward_to (3 samples, 0.06%)</title><rect x="1134.4" y="1909" width="0.7" height="15.0" fill="rgb(213,215,43)" rx="2" ry="2" />
<text  x="1137.41" y="1919.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (2 samples, 0.04%)</title><rect x="976.7" y="1685" width="0.5" height="15.0" fill="rgb(240,216,45)" rx="2" ry="2" />
<text  x="979.73" y="1695.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_cachedSize (1 samples, 0.02%)</title><rect x="53.8" y="1621" width="0.2" height="15.0" fill="rgb(242,174,38)" rx="2" ry="2" />
<text  x="56.79" y="1631.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (6 samples, 0.12%)</title><rect x="959.7" y="1781" width="1.4" height="15.0" fill="rgb(216,117,9)" rx="2" ry="2" />
<text  x="962.72" y="1791.5" ></text>
</g>
<g >
<title>cql3::query_options::query_options (25 samples, 0.48%)</title><rect x="859.4" y="1861" width="5.7" height="15.0" fill="rgb(225,137,4)" rx="2" ry="2" />
<text  x="862.44" y="1871.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;cql3::statements::update_statement, false&gt;::make&lt;cql3::statements::statement_type const&amp;, unsigned long, seastar::lw_shared_ptr&lt;schema const&gt;&amp;, std::unique_ptr&lt;cql3::attributes, std::default_delete&lt;cql3::attributes&gt; &gt;, cql3::cql_stats&amp;&gt; (2 samples, 0.04%)</title><rect x="75.6" y="1861" width="0.4" height="15.0" fill="rgb(249,221,15)" rx="2" ry="2" />
<text  x="78.57" y="1871.5" ></text>
</g>
<g >
<title>operator new (10 samples, 0.19%)</title><rect x="1107.6" y="1829" width="2.3" height="15.0" fill="rgb(226,55,11)" rx="2" ry="2" />
<text  x="1110.64" y="1839.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;managed_bytes const*, managed_bytes*&gt; (5 samples, 0.10%)</title><rect x="910.5" y="1749" width="1.1" height="15.0" fill="rgb(225,160,8)" rx="2" ry="2" />
<text  x="913.48" y="1759.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::clear (1 samples, 0.02%)</title><rect x="19.8" y="1829" width="0.2" height="15.0" fill="rgb(212,29,11)" rx="2" ry="2" />
<text  x="22.76" y="1839.5" ></text>
</g>
<g >
<title>cql3::column_identifier::column_identifier (1 samples, 0.02%)</title><rect x="67.6" y="1797" width="0.3" height="15.0" fill="rgb(226,192,7)" rx="2" ry="2" />
<text  x="70.63" y="1807.5" ></text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_token (8 samples, 0.15%)</title><rect x="945.0" y="1781" width="1.8" height="15.0" fill="rgb(230,73,22)" rx="2" ry="2" />
<text  x="947.97" y="1791.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.02%)</title><rect x="46.8" y="1637" width="0.2" height="15.0" fill="rgb(237,187,37)" rx="2" ry="2" />
<text  x="49.75" y="1647.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::operator (1 samples, 0.02%)</title><rect x="857.4" y="1765" width="0.2" height="15.0" fill="rgb(206,223,27)" rx="2" ry="2" />
<text  x="860.39" y="1775.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::move_it (5 samples, 0.10%)</title><rect x="696.1" y="1893" width="1.1" height="15.0" fill="rgb(224,83,28)" rx="2" ry="2" />
<text  x="699.08" y="1903.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::assign (1 samples, 0.02%)</title><rect x="28.8" y="1653" width="0.3" height="15.0" fill="rgb(209,11,42)" rx="2" ry="2" />
<text  x="31.83" y="1663.5" ></text>
</g>
<g >
<title>ser::after_qr_cell__timestamp&lt;bytes_ostream&gt;::skip_expiry (11 samples, 0.21%)</title><rect x="380.9" y="1589" width="2.5" height="15.0" fill="rgb(219,75,41)" rx="2" ry="2" />
<text  x="383.95" y="1599.5" ></text>
</g>
<g >
<title>std::forward&lt;cql3::expr::oper_t&amp;&gt; (1 samples, 0.02%)</title><rect x="61.0" y="1749" width="0.3" height="15.0" fill="rgb(216,152,43)" rx="2" ry="2" />
<text  x="64.05" y="1759.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::do_merge_with (4 samples, 0.08%)</title><rect x="72.6" y="1749" width="0.9" height="15.0" fill="rgb(207,8,0)" rx="2" ry="2" />
<text  x="75.62" y="1759.5" ></text>
</g>
<g >
<title>mutation_partition::clear_gently (1 samples, 0.02%)</title><rect x="10.7" y="1909" width="0.2" height="15.0" fill="rgb(219,103,6)" rx="2" ry="2" />
<text  x="13.68" y="1919.5" ></text>
</g>
<g >
<title>reader_permit::consume (1 samples, 0.02%)</title><rect x="315.4" y="1717" width="0.2" height="15.0" fill="rgb(216,93,14)" rx="2" ry="2" />
<text  x="318.38" y="1727.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (4 samples, 0.08%)</title><rect x="811.1" y="1573" width="0.9" height="15.0" fill="rgb(213,118,29)" rx="2" ry="2" />
<text  x="814.11" y="1583.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.02%)</title><rect x="443.8" y="1781" width="0.2" height="15.0" fill="rgb(252,96,16)" rx="2" ry="2" />
<text  x="446.79" y="1791.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (10 samples, 0.19%)</title><rect x="1107.6" y="1813" width="2.3" height="15.0" fill="rgb(211,125,35)" rx="2" ry="2" />
<text  x="1110.64" y="1823.5" ></text>
</g>
<g >
<title>range_tombstone_stream::empty (1 samples, 0.02%)</title><rect x="273.2" y="1653" width="0.2" height="15.0" fill="rgb(227,72,49)" rx="2" ry="2" />
<text  x="276.18" y="1663.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::vector (1 samples, 0.02%)</title><rect x="73.1" y="1685" width="0.2" height="15.0" fill="rgb(234,43,39)" rx="2" ry="2" />
<text  x="76.07" y="1695.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::read_next (4 samples, 0.08%)</title><rect x="82.4" y="1733" width="0.9" height="15.0" fill="rgb(243,87,38)" rx="2" ry="2" />
<text  x="85.37" y="1743.5" ></text>
</g>
<g >
<title>boost::intrusive::bstree_impl&lt;boost::intrusive::mhtraits&lt;range_tombstone_entry, boost::intrusive::set_member_hook&lt;boost::intrusive::link_mode&lt; (1 samples, 0.02%)</title><rect x="580.8" y="1717" width="0.3" height="15.0" fill="rgb(231,37,38)" rx="2" ry="2" />
<text  x="583.83" y="1727.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::_M_range_initialize&lt;managed_bytes const*&gt; (8 samples, 0.15%)</title><rect x="909.8" y="1765" width="1.8" height="15.0" fill="rgb(207,181,41)" rx="2" ry="2" />
<text  x="912.80" y="1775.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.10%)</title><rect x="623.9" y="1845" width="1.2" height="15.0" fill="rgb(246,72,9)" rx="2" ry="2" />
<text  x="626.94" y="1855.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::reserve (4 samples, 0.08%)</title><rect x="552.7" y="1765" width="0.9" height="15.0" fill="rgb(228,116,23)" rx="2" ry="2" />
<text  x="555.70" y="1775.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::clone (6 samples, 0.12%)</title><rect x="509.6" y="1733" width="1.3" height="15.0" fill="rgb(252,93,50)" rx="2" ry="2" />
<text  x="512.59" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.5" y="421" width="0.2" height="15.0" fill="rgb(208,54,26)" rx="2" ry="2" />
<text  x="13.45" y="431.5" ></text>
</g>
<g >
<title>operator delete (9 samples, 0.17%)</title><rect x="319.0" y="1717" width="2.1" height="15.0" fill="rgb(220,185,28)" rx="2" ry="2" />
<text  x="322.01" y="1727.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::emplace_back&lt;mutation_fragment&gt; (1 samples, 0.02%)</title><rect x="300.6" y="1701" width="0.3" height="15.0" fill="rgb(231,186,28)" rx="2" ry="2" />
<text  x="303.63" y="1711.5" ></text>
</g>
<g >
<title>db::system_keyspace::paxos (1 samples, 0.02%)</title><rect x="17.3" y="1701" width="0.2" height="15.0" fill="rgb(215,11,53)" rx="2" ry="2" />
<text  x="20.26" y="1711.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::clear (9 samples, 0.17%)</title><rect x="392.7" y="1637" width="2.1" height="15.0" fill="rgb(212,146,16)" rx="2" ry="2" />
<text  x="395.75" y="1647.5" ></text>
</g>
<g >
<title>mutation::set_cell (1 samples, 0.02%)</title><rect x="101.7" y="1877" width="0.2" height="15.0" fill="rgb(218,105,31)" rx="2" ry="2" />
<text  x="104.66" y="1887.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="1102.4" y="1813" width="0.3" height="15.0" fill="rgb(228,174,2)" rx="2" ry="2" />
<text  x="1105.42" y="1823.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.02%)</title><rect x="55.6" y="1701" width="0.2" height="15.0" fill="rgb(226,157,35)" rx="2" ry="2" />
<text  x="58.60" y="1711.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.06%)</title><rect x="855.8" y="1813" width="0.7" height="15.0" fill="rgb(232,120,45)" rx="2" ry="2" />
<text  x="858.81" y="1823.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (4 samples, 0.08%)</title><rect x="566.3" y="1733" width="0.9" height="15.0" fill="rgb(246,20,45)" rx="2" ry="2" />
<text  x="569.31" y="1743.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="55.4" y="1669" width="0.2" height="15.0" fill="rgb(223,143,33)" rx="2" ry="2" />
<text  x="58.38" y="1679.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::~small_vector (1 samples, 0.02%)</title><rect x="1164.4" y="1845" width="0.2" height="15.0" fill="rgb(230,65,20)" rx="2" ry="2" />
<text  x="1167.36" y="1855.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::operator+= (1 samples, 0.02%)</title><rect x="80.1" y="1877" width="0.2" height="15.0" fill="rgb(214,188,46)" rx="2" ry="2" />
<text  x="83.11" y="1887.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (1 samples, 0.02%)</title><rect x="54.5" y="1653" width="0.2" height="15.0" fill="rgb(245,13,27)" rx="2" ry="2" />
<text  x="57.47" y="1663.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="1106.3" y="1829" width="0.2" height="15.0" fill="rgb(214,77,6)" rx="2" ry="2" />
<text  x="1109.28" y="1839.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (2 samples, 0.04%)</title><rect x="723.8" y="1845" width="0.4" height="15.0" fill="rgb(206,128,20)" rx="2" ry="2" />
<text  x="726.76" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.5" y="613" width="0.2" height="15.0" fill="rgb(229,7,39)" rx="2" ry="2" />
<text  x="13.45" y="623.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_deallocate_map (1 samples, 0.02%)</title><rect x="23.8" y="1637" width="0.3" height="15.0" fill="rgb(243,107,27)" rx="2" ry="2" />
<text  x="26.84" y="1647.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="53.6" y="1605" width="0.2" height="15.0" fill="rgb(209,93,29)" rx="2" ry="2" />
<text  x="56.56" y="1615.5" ></text>
</g>
<g >
<title>seastar::with_semaphore&lt;seastar::semaphore_default_exception_factory, gms::gossiper::run (1 samples, 0.02%)</title><rect x="1165.7" y="1893" width="0.3" height="15.0" fill="rgb(224,97,47)" rx="2" ry="2" />
<text  x="1168.72" y="1903.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="55.6" y="1621" width="0.2" height="15.0" fill="rgb(215,67,27)" rx="2" ry="2" />
<text  x="58.60" y="1631.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="638.2" y="1861" width="0.3" height="15.0" fill="rgb(249,78,25)" rx="2" ry="2" />
<text  x="641.23" y="1871.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="73.1" y="1557" width="0.2" height="15.0" fill="rgb(239,167,38)" rx="2" ry="2" />
<text  x="76.07" y="1567.5" ></text>
</g>
<g >
<title>seastar::chunked_fifo&lt;seastar::expiring_fifo&lt;seastar::basic_semaphore&lt;seastar::semaphore_default_exception_factory, std::chrono::_V2::steady_clock&gt;::entry, std::function&lt;void  (1 samples, 0.02%)</title><rect x="698.8" y="1845" width="0.2" height="15.0" fill="rgb(228,23,26)" rx="2" ry="2" />
<text  x="701.81" y="1855.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::operator= (1 samples, 0.02%)</title><rect x="59.7" y="1701" width="0.2" height="15.0" fill="rgb(205,184,5)" rx="2" ry="2" />
<text  x="62.69" y="1711.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (1 samples, 0.02%)</title><rect x="10.7" y="1893" width="0.2" height="15.0" fill="rgb(235,146,40)" rx="2" ry="2" />
<text  x="13.68" y="1903.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.04%)</title><rect x="200.6" y="1621" width="0.4" height="15.0" fill="rgb(247,119,44)" rx="2" ry="2" />
<text  x="203.58" y="1631.5" ></text>
</g>
<g >
<title>logalloc::segment_pool::prime (1 samples, 0.02%)</title><rect x="730.3" y="1685" width="0.3" height="15.0" fill="rgb(213,9,23)" rx="2" ry="2" />
<text  x="733.34" y="1695.5" ></text>
</g>
<g >
<title>std::pair&lt;auth::authenticated_user, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;::pair (2 samples, 0.04%)</title><rect x="759.2" y="1797" width="0.4" height="15.0" fill="rgb(231,117,51)" rx="2" ry="2" />
<text  x="762.16" y="1807.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (3 samples, 0.06%)</title><rect x="588.8" y="1781" width="0.7" height="15.0" fill="rgb(242,104,36)" rx="2" ry="2" />
<text  x="591.77" y="1791.5" ></text>
</g>
<g >
<title>seastar::reactor_backend_aio::reap_kernel_completions (2 samples, 0.04%)</title><rect x="1166.2" y="1925" width="0.4" height="15.0" fill="rgb(206,181,3)" rx="2" ry="2" />
<text  x="1169.18" y="1935.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.04%)</title><rect x="667.7" y="1877" width="0.5" height="15.0" fill="rgb(245,203,42)" rx="2" ry="2" />
<text  x="670.72" y="1887.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.02%)</title><rect x="57.2" y="1573" width="0.2" height="15.0" fill="rgb(226,160,45)" rx="2" ry="2" />
<text  x="60.19" y="1583.5" ></text>
</g>
<g >
<title>ser::serializer&lt;clustering_key_prefix&gt;::read&lt;seastar::simple_memory_input_stream&gt; (1 samples, 0.02%)</title><rect x="1123.1" y="1637" width="0.2" height="15.0" fill="rgb(224,99,38)" rx="2" ry="2" />
<text  x="1126.07" y="1647.5" ></text>
</g>
<g >
<title>std::optional&lt;mutation_querier&gt;::emplace&lt;mutation_querier&gt; (3 samples, 0.06%)</title><rect x="351.5" y="1605" width="0.6" height="15.0" fill="rgb(249,141,43)" rx="2" ry="2" />
<text  x="354.45" y="1615.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (1 samples, 0.02%)</title><rect x="579.2" y="1701" width="0.3" height="15.0" fill="rgb(219,83,3)" rx="2" ry="2" />
<text  x="582.24" y="1711.5" ></text>
</g>
<g >
<title>flat_mutation_reader::close (1 samples, 0.02%)</title><rect x="1165.3" y="1877" width="0.2" height="15.0" fill="rgb(227,173,29)" rx="2" ry="2" />
<text  x="1168.27" y="1887.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;, seastar::future&lt;void&gt; &gt;, std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;, seastar::future&lt;void&gt; &gt; &gt; &gt;::~unique_ptr (13 samples, 0.25%)</title><rect x="830.2" y="1813" width="2.9" height="15.0" fill="rgb(226,6,42)" rx="2" ry="2" />
<text  x="833.17" y="1823.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::~guard (2 samples, 0.04%)</title><rect x="193.1" y="1685" width="0.4" height="15.0" fill="rgb(228,152,50)" rx="2" ry="2" />
<text  x="196.09" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (1 samples, 0.02%)</title><rect x="905.3" y="1733" width="0.2" height="15.0" fill="rgb(234,49,42)" rx="2" ry="2" />
<text  x="908.27" y="1743.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::raw::select_statement, std::default_delete&lt;cql3::statements::raw::select_statement&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::statements::raw::select_statement&gt;, void&gt; (1 samples, 0.02%)</title><rect x="64.9" y="1797" width="0.2" height="15.0" fill="rgb(227,204,11)" rx="2" ry="2" />
<text  x="67.90" y="1807.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.02%)</title><rect x="94.4" y="1909" width="0.2" height="15.0" fill="rgb(248,77,16)" rx="2" ry="2" />
<text  x="97.40" y="1919.5" ></text>
</g>
<g >
<title>seastar::promise&lt;void&gt;::promise (1 samples, 0.02%)</title><rect x="1020.5" y="1605" width="0.2" height="15.0" fill="rgb(230,51,54)" rx="2" ry="2" />
<text  x="1023.52" y="1615.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;service::storage_proxy&gt;::start&lt;std::reference_wrapper&lt;seastar::sharded&lt;database&gt; &gt;, std::reference_wrapper&lt;seastar::sharded&lt;gms::gossiper&gt; &gt;, service::storage_proxy::config&amp;, std::reference_wrapper&lt;db::view::node_update_backlog&gt;, seastar::scheduling_group_key, std::reference_wrapper&lt;seastar::sharded&lt;gms::feature_service&gt; &gt;, std::reference_wrapper&lt;seastar::sharded&lt;locator::shared_token_metadata&gt; &gt;, std::reference_wrapper&lt;seastar::sharded&lt;netw::messaging_service&gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="17.5" y="1973" width="0.2" height="15.0" fill="rgb(242,24,20)" rx="2" ry="2" />
<text  x="20.49" y="1983.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_reallocate_map (1 samples, 0.02%)</title><rect x="23.8" y="1653" width="0.3" height="15.0" fill="rgb(213,202,39)" rx="2" ry="2" />
<text  x="26.84" y="1663.5" ></text>
</g>
<g >
<title>partition_builder::accept_row_cell (2 samples, 0.04%)</title><rect x="107.8" y="1877" width="0.4" height="15.0" fill="rgb(232,114,34)" rx="2" ry="2" />
<text  x="110.79" y="1887.5" ></text>
</g>
<g >
<title>flat_mutation_reader::close (1 samples, 0.02%)</title><rect x="572.2" y="1781" width="0.2" height="15.0" fill="rgb(234,227,1)" rx="2" ry="2" />
<text  x="575.21" y="1791.5" ></text>
</g>
<g >
<title>ser::writer_of_column&lt;bytes_ostream&gt;::write_id (1 samples, 0.02%)</title><rect x="108.7" y="1717" width="0.2" height="15.0" fill="rgb(207,4,30)" rx="2" ry="2" />
<text  x="111.69" y="1727.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (2 samples, 0.04%)</title><rect x="298.8" y="1701" width="0.5" height="15.0" fill="rgb(221,66,52)" rx="2" ry="2" />
<text  x="301.82" y="1711.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.10%)</title><rect x="1031.9" y="1685" width="1.1" height="15.0" fill="rgb(251,211,7)" rx="2" ry="2" />
<text  x="1034.87" y="1695.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.02%)</title><rect x="59.0" y="1717" width="0.2" height="15.0" fill="rgb(229,95,0)" rx="2" ry="2" />
<text  x="62.01" y="1727.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (2 samples, 0.04%)</title><rect x="246.0" y="1541" width="0.4" height="15.0" fill="rgb(206,152,25)" rx="2" ry="2" />
<text  x="248.95" y="1551.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;std::tuple&lt;std::optional&lt;clustering_key_prefix&gt; &gt; &gt; &gt;::satisfy_with_result_of&lt;seastar::future&lt;mutation_fragment*&gt;::then_impl_nrvo&lt;query::consume_page&lt; (6 samples, 0.12%)</title><rect x="699.3" y="1909" width="1.3" height="15.0" fill="rgb(208,101,41)" rx="2" ry="2" />
<text  x="702.26" y="1919.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (11 samples, 0.21%)</title><rect x="236.9" y="1541" width="2.5" height="15.0" fill="rgb(205,33,24)" rx="2" ry="2" />
<text  x="239.88" y="1551.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_insert&lt;flat_mutation_reader&gt; (1 samples, 0.02%)</title><rect x="459.2" y="1701" width="0.2" height="15.0" fill="rgb(254,84,1)" rx="2" ry="2" />
<text  x="462.22" y="1711.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_singular (123 samples, 2.36%)</title><rect x="1137.1" y="1925" width="27.9" height="15.0" fill="rgb(205,103,49)" rx="2" ry="2" />
<text  x="1140.14" y="1935.5" >s..</text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::then_wrapped_common&lt;true, void, service::abstract_read_executor::make_data_requests (12 samples, 0.23%)</title><rect x="989.2" y="1733" width="2.7" height="15.0" fill="rgb(218,36,15)" rx="2" ry="2" />
<text  x="992.21" y="1743.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*&gt; &gt;::_Deque_impl::_Deque_impl (1 samples, 0.02%)</title><rect x="20.4" y="1701" width="0.3" height="15.0" fill="rgb(253,128,40)" rx="2" ry="2" />
<text  x="23.44" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (14 samples, 0.27%)</title><rect x="81.2" y="2021" width="3.2" height="15.0" fill="rgb(248,67,41)" rx="2" ry="2" />
<text  x="84.24" y="2031.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;bool&gt;::take_value (1 samples, 0.02%)</title><rect x="790.9" y="1781" width="0.2" height="15.0" fill="rgb(249,175,51)" rx="2" ry="2" />
<text  x="793.92" y="1791.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mTokens (9 samples, 0.17%)</title><rect x="33.1" y="1685" width="2.1" height="15.0" fill="rgb(232,10,35)" rx="2" ry="2" />
<text  x="36.14" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (1 samples, 0.02%)</title><rect x="11.4" y="1349" width="0.2" height="15.0" fill="rgb(218,223,51)" rx="2" ry="2" />
<text  x="14.36" y="1359.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_construct&lt;interval_bound&lt;dht::ring_position&gt; const&amp;&gt; (3 samples, 0.06%)</title><rect x="940.7" y="1781" width="0.6" height="15.0" fill="rgb(224,113,31)" rx="2" ry="2" />
<text  x="943.66" y="1791.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnFamilyName (1 samples, 0.02%)</title><rect x="700.8" y="1765" width="0.3" height="15.0" fill="rgb(208,101,40)" rx="2" ry="2" />
<text  x="703.85" y="1775.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (4 samples, 0.08%)</title><rect x="696.1" y="1861" width="0.9" height="15.0" fill="rgb(238,196,11)" rx="2" ry="2" />
<text  x="699.08" y="1871.5" ></text>
</g>
<g >
<title>logalloc::segment_pool::refill_emergency_reserve (1 samples, 0.02%)</title><rect x="730.3" y="1669" width="0.3" height="15.0" fill="rgb(209,137,26)" rx="2" ry="2" />
<text  x="733.34" y="1679.5" ></text>
</g>
<g >
<title>data_value::data_value (2 samples, 0.04%)</title><rect x="71.5" y="1733" width="0.4" height="15.0" fill="rgb(241,29,53)" rx="2" ry="2" />
<text  x="74.48" y="1743.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::execute (317 samples, 6.09%)</title><rect x="974.5" y="1781" width="71.9" height="15.0" fill="rgb(239,176,13)" rx="2" ry="2" />
<text  x="977.46" y="1791.5" >service:..</text>
</g>
<g >
<title>mutation_fragment::consume&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (5 samples, 0.10%)</title><rect x="699.3" y="1765" width="1.1" height="15.0" fill="rgb(224,201,2)" rx="2" ry="2" />
<text  x="702.26" y="1775.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.02%)</title><rect x="10.5" y="149" width="0.2" height="15.0" fill="rgb(233,49,9)" rx="2" ry="2" />
<text  x="13.45" y="159.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (2 samples, 0.04%)</title><rect x="820.4" y="1653" width="0.5" height="15.0" fill="rgb(238,32,0)" rx="2" ry="2" />
<text  x="823.41" y="1663.5" ></text>
</g>
<g >
<title>operator new (6 samples, 0.12%)</title><rect x="151.6" y="1861" width="1.3" height="15.0" fill="rgb(228,80,28)" rx="2" ry="2" />
<text  x="154.57" y="1871.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume_in_thread&lt;stable_flattened_mutations_consumer&lt;compact_for_compaction&lt;sstables::compacting_sstable_writer, noop_compacted_fragments_consumer&gt; &gt;, flat_mutation_reader::no_filter&gt; (1 samples, 0.02%)</title><rect x="17.9" y="1957" width="0.3" height="15.0" fill="rgb(234,111,12)" rx="2" ry="2" />
<text  x="20.94" y="1967.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (1 samples, 0.02%)</title><rect x="1043.0" y="1605" width="0.2" height="15.0" fill="rgb(235,94,31)" rx="2" ry="2" />
<text  x="1045.98" y="1615.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::create_type_statement, std::default_delete&lt;cql3::statements::create_type_statement&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::statements::create_type_statement&gt;, void&gt; (2 samples, 0.04%)</title><rect x="64.0" y="1797" width="0.5" height="15.0" fill="rgb(244,221,50)" rx="2" ry="2" />
<text  x="67.00" y="1807.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;auth::resource&gt;::_Optional_payload_base (5 samples, 0.10%)</title><rect x="794.5" y="1717" width="1.2" height="15.0" fill="rgb(233,103,8)" rx="2" ry="2" />
<text  x="797.55" y="1727.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;dht::token, std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt;, std::allocator&lt;std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;dht::token&gt;, std::hash&lt;dht::token&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (3 samples, 0.06%)</title><rect x="1078.4" y="1717" width="0.7" height="15.0" fill="rgb(213,181,30)" rx="2" ry="2" />
<text  x="1081.38" y="1727.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::modification_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::do_flush (26 samples, 0.50%)</title><rect x="874.6" y="1909" width="5.9" height="15.0" fill="rgb(212,150,48)" rx="2" ry="2" />
<text  x="877.64" y="1919.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::value (21 samples, 0.40%)</title><rect x="50.4" y="1717" width="4.7" height="15.0" fill="rgb(233,176,15)" rx="2" ry="2" />
<text  x="53.38" y="1727.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (2 samples, 0.04%)</title><rect x="481.5" y="1733" width="0.4" height="15.0" fill="rgb(217,3,32)" rx="2" ry="2" />
<text  x="484.46" y="1743.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::got_response (16 samples, 0.31%)</title><rect x="721.0" y="1861" width="3.7" height="15.0" fill="rgb(227,161,10)" rx="2" ry="2" />
<text  x="724.04" y="1871.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt;::allocate (1 samples, 0.02%)</title><rect x="1096.3" y="1781" width="0.2" height="15.0" fill="rgb(223,13,1)" rx="2" ry="2" />
<text  x="1099.30" y="1791.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (35 samples, 0.67%)</title><rect x="1126.5" y="1877" width="7.9" height="15.0" fill="rgb(234,167,19)" rx="2" ry="2" />
<text  x="1129.47" y="1887.5" ></text>
</g>
<g >
<title>service::client_state::has_column_family_access (10 samples, 0.19%)</title><rect x="77.2" y="1893" width="2.2" height="15.0" fill="rgb(208,54,16)" rx="2" ry="2" />
<text  x="80.16" y="1903.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (1 samples, 0.02%)</title><rect x="816.3" y="1493" width="0.3" height="15.0" fill="rgb(247,85,9)" rx="2" ry="2" />
<text  x="819.33" y="1503.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;column_definition const*, std::pair&lt;column_definition const* const, seastar::shared_ptr&lt;cql3::restrictions::single_column_restriction&gt; &gt;, std::_Select1st&lt;std::pair&lt;column_definition const* const, seastar::shared_ptr&lt;cql3::restrictions::single_column_restriction&gt; &gt; &gt;, cql3::restrictions::single_column_restrictions::column_definition_comparator, std::allocator&lt;std::pair&lt;column_definition const* const, seastar::shared_ptr&lt;cql3::restrictions::single_column_restriction&gt; &gt; &gt; &gt;::~_Rb_tree (1 samples, 0.02%)</title><rect x="654.6" y="1861" width="0.2" height="15.0" fill="rgb(228,26,33)" rx="2" ry="2" />
<text  x="657.56" y="1871.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.02%)</title><rect x="700.8" y="1541" width="0.3" height="15.0" fill="rgb(228,132,45)" rx="2" ry="2" />
<text  x="703.85" y="1551.5" ></text>
</g>
<g >
<title>partition_key::legacy_tri_compare (41 samples, 0.79%)</title><rect x="496.7" y="1685" width="9.3" height="15.0" fill="rgb(222,77,37)" rx="2" ry="2" />
<text  x="499.66" y="1695.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.02%)</title><rect x="57.2" y="1701" width="0.2" height="15.0" fill="rgb(214,85,31)" rx="2" ry="2" />
<text  x="60.19" y="1711.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::timer (1 samples, 0.02%)</title><rect x="1025.7" y="1589" width="0.3" height="15.0" fill="rgb(254,44,40)" rx="2" ry="2" />
<text  x="1028.74" y="1599.5" ></text>
</g>
<g >
<title>seastar::internal::future_base::future_base (1 samples, 0.02%)</title><rect x="782.5" y="1829" width="0.3" height="15.0" fill="rgb(234,37,27)" rx="2" ry="2" />
<text  x="785.52" y="1839.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_Optional_payload_base (2 samples, 0.04%)</title><rect x="155.2" y="1813" width="0.5" height="15.0" fill="rgb(212,118,15)" rx="2" ry="2" />
<text  x="158.20" y="1823.5" ></text>
</g>
<g >
<title>table::make_reader (482 samples, 9.27%)</title><rect x="444.2" y="1781" width="109.4" height="15.0" fill="rgb(226,88,28)" rx="2" ry="2" />
<text  x="447.25" y="1791.5" >table::make_r..</text>
</g>
<g >
<title>auth::resource::resource (4 samples, 0.08%)</title><rect x="787.1" y="1797" width="0.9" height="15.0" fill="rgb(245,84,37)" rx="2" ry="2" />
<text  x="790.06" y="1807.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_prepared (424 samples, 8.15%)</title><rect x="749.9" y="1861" width="96.2" height="15.0" fill="rgb(243,118,40)" rx="2" ry="2" />
<text  x="752.85" y="1871.5" >cql3::query..</text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (1 samples, 0.02%)</title><rect x="94.9" y="1909" width="0.2" height="15.0" fill="rgb(207,152,1)" rx="2" ry="2" />
<text  x="97.85" y="1919.5" ></text>
</g>
<g >
<title>atomic_cell_or_collection::copy (64 samples, 1.23%)</title><rect x="222.4" y="1541" width="14.5" height="15.0" fill="rgb(237,209,30)" rx="2" ry="2" />
<text  x="225.36" y="1551.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::create_function_statement, std::default_delete&lt;cql3::statements::create_function_statement&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::statements::create_function_statement&gt;, void&gt; (1 samples, 0.02%)</title><rect x="65.6" y="1813" width="0.2" height="15.0" fill="rgb(215,55,35)" rx="2" ry="2" />
<text  x="68.59" y="1823.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::storage_proxy&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="1059.5" y="1749" width="0.3" height="15.0" fill="rgb(242,22,47)" rx="2" ry="2" />
<text  x="1062.54" y="1759.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (5 samples, 0.10%)</title><rect x="1108.8" y="1797" width="1.1" height="15.0" fill="rgb(254,127,0)" rx="2" ry="2" />
<text  x="1111.78" y="1807.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (33 samples, 0.63%)</title><rect x="1119.0" y="1861" width="7.5" height="15.0" fill="rgb(240,149,31)" rx="2" ry="2" />
<text  x="1121.99" y="1871.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::execute_without_condition (24 samples, 0.46%)</title><rect x="874.9" y="1845" width="5.4" height="15.0" fill="rgb(218,46,41)" rx="2" ry="2" />
<text  x="877.86" y="1855.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;dht::ring_position&gt;::wrapping_interval (1 samples, 0.02%)</title><rect x="925.7" y="1797" width="0.2" height="15.0" fill="rgb(233,227,44)" rx="2" ry="2" />
<text  x="928.69" y="1807.5" ></text>
</g>
<g >
<title>dht::sharder::shard_of (1 samples, 0.02%)</title><rect x="993.7" y="1717" width="0.3" height="15.0" fill="rgb(246,216,1)" rx="2" ry="2" />
<text  x="996.75" y="1727.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::binary_operator&gt; (1 samples, 0.02%)</title><rect x="74.0" y="1781" width="0.2" height="15.0" fill="rgb(218,87,19)" rx="2" ry="2" />
<text  x="76.98" y="1791.5" ></text>
</g>
<g >
<title>boost::algorithm::detail::find_format_all_impl2&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, boost::algorithm::detail::first_finderF&lt;char const*, boost::algorithm::is_equal&gt;, boost::algorithm::detail::empty_formatF&lt;char&gt;, boost::iterator_range&lt;char*&gt;, boost::algorithm::detail::empty_container&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="109.4" y="1877" width="0.2" height="15.0" fill="rgb(251,117,46)" rx="2" ry="2" />
<text  x="112.37" y="1887.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (2 samples, 0.04%)</title><rect x="531.6" y="1717" width="0.4" height="15.0" fill="rgb(215,64,46)" rx="2" ry="2" />
<text  x="534.60" y="1727.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (5 samples, 0.10%)</title><rect x="728.5" y="1909" width="1.2" height="15.0" fill="rgb(213,69,5)" rx="2" ry="2" />
<text  x="731.53" y="1919.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::vector (12 samples, 0.23%)</title><rect x="908.9" y="1781" width="2.7" height="15.0" fill="rgb(245,57,54)" rx="2" ry="2" />
<text  x="911.90" y="1791.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (1 samples, 0.02%)</title><rect x="1050.2" y="1749" width="0.3" height="15.0" fill="rgb(213,191,31)" rx="2" ry="2" />
<text  x="1053.24" y="1759.5" ></text>
</g>
<g >
<title>seastar::memory::stats (3 samples, 0.06%)</title><rect x="518.9" y="1669" width="0.7" height="15.0" fill="rgb(245,220,32)" rx="2" ry="2" />
<text  x="521.89" y="1679.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::get_at (4 samples, 0.08%)</title><rect x="359.6" y="1605" width="0.9" height="15.0" fill="rgb(232,162,52)" rx="2" ry="2" />
<text  x="362.62" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt;::~_Variant_storage (2 samples, 0.04%)</title><rect x="687.7" y="1861" width="0.4" height="15.0" fill="rgb(219,43,18)" rx="2" ry="2" />
<text  x="690.69" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::binary_operator const*&gt;  (2 samples, 0.04%)</title><rect x="947.2" y="1813" width="0.5" height="15.0" fill="rgb(221,136,17)" rx="2" ry="2" />
<text  x="950.24" y="1823.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::partition_snapshot_flat_reader&lt;memtable&amp;&gt; (43 samples, 0.83%)</title><rect x="519.6" y="1685" width="9.7" height="15.0" fill="rgb(205,62,13)" rx="2" ry="2" />
<text  x="522.57" y="1695.5" ></text>
</g>
<g >
<title>std::hash&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::operator (1 samples, 0.02%)</title><rect x="815.0" y="1557" width="0.2" height="15.0" fill="rgb(213,17,2)" rx="2" ry="2" />
<text  x="817.97" y="1567.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::lower_bound&lt;mutation_partition, schema const&amp;, nonwrapping_interval&lt;clustering_key_prefix&gt; const&amp;&gt; (8 samples, 0.15%)</title><rect x="278.4" y="1637" width="1.8" height="15.0" fill="rgb(228,45,38)" rx="2" ry="2" />
<text  x="281.40" y="1647.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.02%)</title><rect x="54.2" y="1477" width="0.3" height="15.0" fill="rgb(206,155,45)" rx="2" ry="2" />
<text  x="57.24" y="1487.5" ></text>
</g>
<g >
<title>std::__relocate_object_a&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="49.0" y="1621" width="0.3" height="15.0" fill="rgb(236,124,52)" rx="2" ry="2" />
<text  x="52.02" y="1631.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="700.4" y="1765" width="0.2" height="15.0" fill="rgb(220,151,35)" rx="2" ry="2" />
<text  x="703.39" y="1775.5" ></text>
</g>
<g >
<title>database::find_schema (2 samples, 0.04%)</title><rect x="79.0" y="1861" width="0.4" height="15.0" fill="rgb(243,13,29)" rx="2" ry="2" />
<text  x="81.97" y="1871.5" ></text>
</g>
<g >
<title>seastar::io_desc_read_write::complete (1 samples, 0.02%)</title><rect x="1166.4" y="1893" width="0.2" height="15.0" fill="rgb(235,105,18)" rx="2" ry="2" />
<text  x="1169.40" y="1903.5" ></text>
</g>
</g>
</svg>
