<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="806" onload="init(evt)" viewBox="0 0 1200 806" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="806.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="789" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="789" > </text>
<g id="frames">
<g >
<title>utils::phased_barrier::start (2 samples, 0.04%)</title><rect x="1018.4" y="341" width="0.5" height="15.0" fill="rgb(225,211,28)" rx="2" ry="2" />
<text  x="1021.43" y="351.5" ></text>
</g>
<g >
<title>crc32_nbo::process_fragmented&lt;ser::buffer_view&lt;__gnu_cxx::__normal_iterator&lt;seastar::temporary_buffer&lt;char&gt;*, std::vector&lt;seastar::temporary_buffer&lt;char&gt;, std::allocator&lt;seastar::temporary_buffer&lt;char&gt; &gt; &gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="1124.9" y="357" width="0.2" height="15.0" fill="rgb(239,83,30)" rx="2" ry="2" />
<text  x="1127.85" y="367.5" ></text>
</g>
<g >
<title>db::schema_tables::calculate_schema_digest (1 samples, 0.02%)</title><rect x="105.9" y="533" width="0.3" height="15.0" fill="rgb(217,133,16)" rx="2" ry="2" />
<text  x="108.93" y="543.5" ></text>
</g>
<g >
<title>sched_setaffinity@@GLIBC_2.3.4 (40 samples, 0.76%)</title><rect x="1180.9" y="725" width="8.9" height="15.0" fill="rgb(243,217,22)" rx="2" ry="2" />
<text  x="1183.85" y="735.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;std::function&lt;flat_mutation_reader  (1 samples, 0.02%)</title><rect x="615.5" y="501" width="0.2" height="15.0" fill="rgb(248,106,29)" rx="2" ry="2" />
<text  x="618.51" y="511.5" ></text>
</g>
<g >
<title>service::storage_service::mutate_token_metadata (1 samples, 0.02%)</title><rect x="17.4" y="549" width="0.2" height="15.0" fill="rgb(254,62,34)" rx="2" ry="2" />
<text  x="20.36" y="559.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::operator (1 samples, 0.02%)</title><rect x="836.8" y="453" width="0.2" height="15.0" fill="rgb(230,131,8)" rx="2" ry="2" />
<text  x="839.83" y="463.5" ></text>
</g>
<g >
<title>seastar::promise&lt;void&gt;::promise (5 samples, 0.09%)</title><rect x="617.7" y="581" width="1.2" height="15.0" fill="rgb(225,120,41)" rx="2" ry="2" />
<text  x="620.74" y="591.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::emplace_back&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; const&amp;&gt; (3 samples, 0.06%)</title><rect x="759.0" y="453" width="0.6" height="15.0" fill="rgb(237,41,23)" rx="2" ry="2" />
<text  x="761.96" y="463.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (2,268 samples, 42.88%)</title><rect x="111.7" y="581" width="506.0" height="15.0" fill="rgb(217,31,41)" rx="2" ry="2" />
<text  x="114.74" y="591.5" >seastar::noncopyable_function&lt;seastar::future&lt;void&gt; </text>
</g>
<g >
<title>clustering_row::external_memory_usage (29 samples, 0.55%)</title><rect x="247.2" y="261" width="6.4" height="15.0" fill="rgb(206,27,13)" rx="2" ry="2" />
<text  x="250.16" y="271.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (51 samples, 0.96%)</title><rect x="1169.3" y="725" width="11.3" height="15.0" fill="rgb(253,132,17)" rx="2" ry="2" />
<text  x="1172.25" y="735.5" ></text>
</g>
<g >
<title>std::hash&lt;auth::resource&gt;::operator (10 samples, 0.19%)</title><rect x="801.8" y="437" width="2.2" height="15.0" fill="rgb(211,182,10)" rx="2" ry="2" />
<text  x="804.80" y="447.5" ></text>
</g>
<g >
<title>row_tombstone::apply (1 samples, 0.02%)</title><rect x="416.5" y="309" width="0.2" height="15.0" fill="rgb(205,178,54)" rx="2" ry="2" />
<text  x="419.50" y="319.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.02%)</title><rect x="106.4" y="501" width="0.2" height="15.0" fill="rgb(219,225,10)" rx="2" ry="2" />
<text  x="109.38" y="511.5" ></text>
</g>
<g >
<title>service::abstract_write_response_handler::response (2 samples, 0.04%)</title><rect x="703.6" y="565" width="0.5" height="15.0" fill="rgb(230,78,49)" rx="2" ry="2" />
<text  x="706.63" y="575.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;column_definition const*, std::pair&lt;column_definition const* const, seastar::shared_ptr&lt;cql3::restrictions::single_column_restriction&gt; &gt;, std::_Select1st&lt;std::pair&lt;column_definition const* const, seastar::shared_ptr&lt;cql3::restrictions::single_column_restriction&gt; &gt; &gt;, cql3::restrictions::single_column_restrictions::column_definition_comparator, std::allocator&lt;std::pair&lt;column_definition const* const, seastar::shared_ptr&lt;cql3::restrictions::single_column_restriction&gt; &gt; &gt; &gt;::_M_emplace_hint_unique&lt;column_definition const*, seastar::shared_ptr&lt;cql3::restrictions::single_column_restriction&gt; &gt; (1 samples, 0.02%)</title><rect x="70.9" y="405" width="0.2" height="15.0" fill="rgb(227,136,37)" rx="2" ry="2" />
<text  x="73.91" y="415.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (1 samples, 0.02%)</title><rect x="682.9" y="549" width="0.2" height="15.0" fill="rgb(243,146,45)" rx="2" ry="2" />
<text  x="685.88" y="559.5" ></text>
</g>
<g >
<title>std::hash&lt;auth::resource&gt;::operator (1 samples, 0.02%)</title><rect x="804.0" y="453" width="0.3" height="15.0" fill="rgb(229,140,41)" rx="2" ry="2" />
<text  x="807.03" y="463.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.02%)</title><rect x="43.5" y="197" width="0.2" height="15.0" fill="rgb(248,55,24)" rx="2" ry="2" />
<text  x="46.47" y="207.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_istream (1 samples, 0.02%)</title><rect x="53.1" y="325" width="0.2" height="15.0" fill="rgb(226,103,0)" rx="2" ry="2" />
<text  x="56.06" y="335.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (2 samples, 0.04%)</title><rect x="40.3" y="245" width="0.5" height="15.0" fill="rgb(232,190,29)" rx="2" ry="2" />
<text  x="43.34" y="255.5" ></text>
</g>
<g >
<title>ser::writer_of_query_result&lt;bytes_ostream&gt;::writer_of_query_result (10 samples, 0.19%)</title><rect x="592.1" y="501" width="2.2" height="15.0" fill="rgb(217,44,33)" rx="2" ry="2" />
<text  x="595.08" y="511.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.02%)</title><rect x="21.2" y="325" width="0.2" height="15.0" fill="rgb(214,57,30)" rx="2" ry="2" />
<text  x="24.16" y="335.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.02%)</title><rect x="39.7" y="325" width="0.2" height="15.0" fill="rgb(253,178,46)" rx="2" ry="2" />
<text  x="42.67" y="335.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (1 samples, 0.02%)</title><rect x="419.0" y="341" width="0.2" height="15.0" fill="rgb(217,10,7)" rx="2" ry="2" />
<text  x="421.95" y="351.5" ></text>
</g>
<g >
<title>db::schema_tables::read_table_mutations (1 samples, 0.02%)</title><rect x="106.6" y="581" width="0.2" height="15.0" fill="rgb(207,173,13)" rx="2" ry="2" />
<text  x="109.60" y="591.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (1 samples, 0.02%)</title><rect x="1137.3" y="437" width="0.3" height="15.0" fill="rgb(245,140,18)" rx="2" ry="2" />
<text  x="1140.35" y="447.5" ></text>
</g>
<g >
<title>schema_registry_entry::get_schema (1 samples, 0.02%)</title><rect x="105.7" y="469" width="0.2" height="15.0" fill="rgb(247,54,47)" rx="2" ry="2" />
<text  x="108.71" y="479.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="609.5" y="485" width="0.2" height="15.0" fill="rgb(253,173,27)" rx="2" ry="2" />
<text  x="612.48" y="495.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::storage_proxy&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="1047.2" y="437" width="0.2" height="15.0" fill="rgb(249,37,24)" rx="2" ry="2" />
<text  x="1050.21" y="447.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_pausable&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (1 samples, 0.02%)</title><rect x="1165.2" y="421" width="0.3" height="15.0" fill="rgb(253,153,4)" rx="2" ry="2" />
<text  x="1168.24" y="431.5" ></text>
</g>
<g >
<title>row_cache::do_update (1 samples, 0.02%)</title><rect x="1134.0" y="501" width="0.2" height="15.0" fill="rgb(224,112,38)" rx="2" ry="2" />
<text  x="1137.00" y="511.5" ></text>
</g>
<g >
<title>std::__apply_impl&lt;seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (30 samples, 0.57%)</title><rect x="1126.2" y="565" width="6.7" height="15.0" fill="rgb(224,69,8)" rx="2" ry="2" />
<text  x="1129.19" y="575.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="570.2" y="437" width="0.2" height="15.0" fill="rgb(205,100,39)" rx="2" ry="2" />
<text  x="573.22" y="447.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::push_mutation_fragment&lt;mutation_fragment&gt; (39 samples, 0.74%)</title><rect x="309.2" y="421" width="8.7" height="15.0" fill="rgb(207,180,44)" rx="2" ry="2" />
<text  x="312.18" y="431.5" ></text>
</g>
<g >
<title>seastar::sprint&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; (7 samples, 0.13%)</title><rect x="17.8" y="613" width="1.6" height="15.0" fill="rgb(213,208,9)" rx="2" ry="2" />
<text  x="20.81" y="623.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (3 samples, 0.06%)</title><rect x="52.4" y="261" width="0.7" height="15.0" fill="rgb(223,171,33)" rx="2" ry="2" />
<text  x="55.39" y="271.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;nonwrapping_interval&lt;dht::ring_position&gt; const*, nonwrapping_interval&lt;dht::ring_position&gt;*&gt; (2 samples, 0.04%)</title><rect x="1027.6" y="341" width="0.4" height="15.0" fill="rgb(207,8,38)" rx="2" ry="2" />
<text  x="1030.58" y="351.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::~holder (1 samples, 0.02%)</title><rect x="559.3" y="389" width="0.2" height="15.0" fill="rgb(247,117,54)" rx="2" ry="2" />
<text  x="562.28" y="399.5" ></text>
</g>
<g >
<title>row::row (1 samples, 0.02%)</title><rect x="80.5" y="309" width="0.2" height="15.0" fill="rgb(216,23,43)" rx="2" ry="2" />
<text  x="83.50" y="319.5" ></text>
</g>
<g >
<title>flat_mutation_reader::close (1 samples, 0.02%)</title><rect x="1165.5" y="549" width="0.2" height="15.0" fill="rgb(233,5,34)" rx="2" ry="2" />
<text  x="1168.46" y="559.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::set_urgent_state (1 samples, 0.02%)</title><rect x="851.1" y="597" width="0.2" height="15.0" fill="rgb(225,203,54)" rx="2" ry="2" />
<text  x="854.10" y="607.5" ></text>
</g>
<g >
<title>reader_permit::impl::~impl (13 samples, 0.25%)</title><rect x="121.3" y="549" width="2.9" height="15.0" fill="rgb(222,139,31)" rx="2" ry="2" />
<text  x="124.33" y="559.5" ></text>
</g>
<g >
<title>absl::container_internal::probe_seq&lt;16ul&gt;::probe_seq (1 samples, 0.02%)</title><rect x="836.6" y="453" width="0.2" height="15.0" fill="rgb(253,228,49)" rx="2" ry="2" />
<text  x="839.60" y="463.5" ></text>
</g>
<g >
<title>create_partitions (274 samples, 5.18%)</title><rect x="17.6" y="629" width="61.1" height="15.0" fill="rgb(223,173,33)" rx="2" ry="2" />
<text  x="20.59" y="639.5" >create..</text>
</g>
<g >
<title>write_row&lt;ser::writer_of_deletable_row&lt;bytes_ostream&gt; &gt; (2 samples, 0.04%)</title><rect x="1129.5" y="245" width="0.5" height="15.0" fill="rgb(249,151,12)" rx="2" ry="2" />
<text  x="1132.54" y="255.5" ></text>
</g>
<g >
<title>intrusive_b::searcher&lt;clustering_key_prefix, rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare,  (1 samples, 0.02%)</title><rect x="102.4" y="453" width="0.2" height="15.0" fill="rgb(228,14,50)" rx="2" ry="2" />
<text  x="105.37" y="463.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (18 samples, 0.34%)</title><rect x="826.1" y="485" width="4.0" height="15.0" fill="rgb(230,65,41)" rx="2" ry="2" />
<text  x="829.12" y="495.5" ></text>
</g>
<g >
<title>seastar::futurize_invoke&lt;seastar::future&lt;void&gt;  (1 samples, 0.02%)</title><rect x="1165.2" y="485" width="0.3" height="15.0" fill="rgb(229,117,32)" rx="2" ry="2" />
<text  x="1168.24" y="495.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;void&gt;, database*, seastar::lw_shared_ptr&lt;schema const&gt;, frozen_mutation const&amp;, tracing::trace_state_ptr, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, seastar::bool_class&lt;db::force_sync_tag&gt; &gt;::do_flush (41 samples, 0.78%)</title><rect x="1117.0" y="581" width="9.2" height="15.0" fill="rgb(254,8,53)" rx="2" ry="2" />
<text  x="1120.04" y="591.5" ></text>
</g>
<g >
<title>logalloc::basic_region_impl::set_reclaiming_enabled (1 samples, 0.02%)</title><rect x="263.4" y="277" width="0.3" height="15.0" fill="rgb(243,116,24)" rx="2" ry="2" />
<text  x="266.45" y="287.5" ></text>
</g>
<g >
<title>managed_bytes::external_memory_usage (2 samples, 0.04%)</title><rect x="250.5" y="197" width="0.5" height="15.0" fill="rgb(215,100,2)" rx="2" ry="2" />
<text  x="253.51" y="207.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::make_ready&lt; (1 samples, 0.02%)</title><rect x="850.9" y="597" width="0.2" height="15.0" fill="rgb(224,90,9)" rx="2" ry="2" />
<text  x="853.88" y="607.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::~timer (9 samples, 0.17%)</title><rect x="130.3" y="485" width="2.0" height="15.0" fill="rgb(243,50,17)" rx="2" ry="2" />
<text  x="133.25" y="495.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::clear (1 samples, 0.02%)</title><rect x="576.5" y="437" width="0.2" height="15.0" fill="rgb(230,35,31)" rx="2" ry="2" />
<text  x="579.46" y="447.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (2 samples, 0.04%)</title><rect x="916.0" y="437" width="0.5" height="15.0" fill="rgb(242,112,23)" rx="2" ry="2" />
<text  x="919.03" y="447.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="39.4" y="341" width="0.3" height="15.0" fill="rgb(243,110,31)" rx="2" ry="2" />
<text  x="42.45" y="351.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::get_promise (1 samples, 0.02%)</title><rect x="815.9" y="517" width="0.2" height="15.0" fill="rgb(211,92,31)" rx="2" ry="2" />
<text  x="818.85" y="527.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (3 samples, 0.06%)</title><rect x="54.2" y="277" width="0.6" height="15.0" fill="rgb(211,94,24)" rx="2" ry="2" />
<text  x="57.17" y="287.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;query::read_command&gt;::make&lt;utils::UUID const&amp;, utils::UUID, query::partition_slice, query::max_result_size, query::row_limit, query::partition_limit, std::chrono::time_point&lt;gc_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt; &gt;&amp;, std::optional&lt;tracing::trace_info&gt;, utils::UUID, seastar::bool_class&lt;query::is_first_page_tag&gt; const&amp;, long&gt; (26 samples, 0.49%)</title><rect x="1101.4" y="517" width="5.8" height="15.0" fill="rgb(206,124,47)" rx="2" ry="2" />
<text  x="1104.43" y="527.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (1 samples, 0.02%)</title><rect x="437.2" y="421" width="0.3" height="15.0" fill="rgb(241,136,36)" rx="2" ry="2" />
<text  x="440.25" y="431.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;void&gt;, service::storage_proxy*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt;, db::consistency_level, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, tracing::trace_state_ptr, service_permit, bool, seastar::lw_shared_ptr&lt;cdc::operation_result_tracker&gt; &gt;::do_flush (31 samples, 0.59%)</title><rect x="1126.2" y="581" width="6.9" height="15.0" fill="rgb(213,172,52)" rx="2" ry="2" />
<text  x="1129.19" y="591.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (1 samples, 0.02%)</title><rect x="106.8" y="405" width="0.3" height="15.0" fill="rgb(235,177,43)" rx="2" ry="2" />
<text  x="109.83" y="415.5" ></text>
</g>
<g >
<title>seastar::chunked_fifo&lt;seastar::expiring_fifo&lt;seastar::basic_semaphore&lt;seastar::semaphore_default_exception_factory, std::chrono::_V2::steady_clock&gt;::entry, std::function&lt;void  (1 samples, 0.02%)</title><rect x="676.0" y="517" width="0.2" height="15.0" fill="rgb(206,161,40)" rx="2" ry="2" />
<text  x="678.97" y="527.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (5 samples, 0.09%)</title><rect x="94.3" y="581" width="1.1" height="15.0" fill="rgb(248,88,4)" rx="2" ry="2" />
<text  x="97.33" y="591.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::execution_loop (2,297 samples, 43.43%)</title><rect x="108.6" y="597" width="512.5" height="15.0" fill="rgb(228,1,43)" rx="2" ry="2" />
<text  x="111.61" y="607.5" >reader_concurrency_semaphore::execution_loop</text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::alter_service_level_statement, std::default_delete&lt;cql3::statements::alter_service_level_statement&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::statements::alter_service_level_statement&gt;, void&gt; (1 samples, 0.02%)</title><rect x="62.9" y="485" width="0.2" height="15.0" fill="rgb(232,75,3)" rx="2" ry="2" />
<text  x="65.88" y="495.5" ></text>
</g>
<g >
<title>TLS init function for seastar::testing::local_random_engine (1 samples, 0.02%)</title><rect x="846.9" y="549" width="0.2" height="15.0" fill="rgb(214,33,2)" rx="2" ry="2" />
<text  x="849.87" y="559.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_Optional_payload_base (1 samples, 0.02%)</title><rect x="1093.2" y="453" width="0.2" height="15.0" fill="rgb(221,77,34)" rx="2" ry="2" />
<text  x="1096.17" y="463.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (1 samples, 0.02%)</title><rect x="160.1" y="517" width="0.3" height="15.0" fill="rgb(235,21,19)" rx="2" ry="2" />
<text  x="163.15" y="527.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (1 samples, 0.02%)</title><rect x="962.7" y="453" width="0.2" height="15.0" fill="rgb(205,109,26)" rx="2" ry="2" />
<text  x="965.66" y="463.5" ></text>
</g>
<g >
<title>compound_wrapper&lt;partition_key, partition_key_view&gt;::components (1 samples, 0.02%)</title><rect x="107.3" y="405" width="0.2" height="15.0" fill="rgb(227,202,10)" rx="2" ry="2" />
<text  x="110.27" y="415.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.02%)</title><rect x="1133.8" y="469" width="0.2" height="15.0" fill="rgb(228,192,27)" rx="2" ry="2" />
<text  x="1136.78" y="479.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_9c4051607141ccef88a5c0c6888f804fb0de85a9] (1 samples, 0.02%)</title><rect x="1041.6" y="357" width="0.3" height="15.0" fill="rgb(254,209,9)" rx="2" ry="2" />
<text  x="1044.64" y="367.5" ></text>
</g>
<g >
<title>table::make_reader (1 samples, 0.02%)</title><rect x="141.4" y="453" width="0.2" height="15.0" fill="rgb(222,58,36)" rx="2" ry="2" />
<text  x="144.41" y="463.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (2 samples, 0.04%)</title><rect x="611.0" y="517" width="0.5" height="15.0" fill="rgb(237,207,43)" rx="2" ry="2" />
<text  x="614.04" y="527.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::take (4 samples, 0.08%)</title><rect x="304.5" y="437" width="0.9" height="15.0" fill="rgb(239,196,3)" rx="2" ry="2" />
<text  x="307.50" y="447.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::CommonToken (1 samples, 0.02%)</title><rect x="20.5" y="421" width="0.2" height="15.0" fill="rgb(210,6,47)" rx="2" ry="2" />
<text  x="23.49" y="431.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (1 samples, 0.02%)</title><rect x="58.2" y="389" width="0.2" height="15.0" fill="rgb(254,228,32)" rx="2" ry="2" />
<text  x="61.19" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::~vector (3 samples, 0.06%)</title><rect x="460.4" y="373" width="0.7" height="15.0" fill="rgb(225,195,12)" rx="2" ry="2" />
<text  x="463.45" y="383.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="24.9" y="357" width="0.3" height="15.0" fill="rgb(205,3,4)" rx="2" ry="2" />
<text  x="27.95" y="367.5" ></text>
</g>
<g >
<title>db::assure_sufficient_live_nodes&lt;utils::small_vector&lt;gms::inet_address, 3ul&gt;, std::array&lt;gms::inet_address, 0ul&gt; &gt; (1 samples, 0.02%)</title><rect x="1044.5" y="437" width="0.3" height="15.0" fill="rgb(223,17,10)" rx="2" ry="2" />
<text  x="1047.54" y="447.5" ></text>
</g>
<g >
<title>partition_builder::accept_row_cell (1 samples, 0.02%)</title><rect x="106.4" y="549" width="0.2" height="15.0" fill="rgb(238,223,48)" rx="2" ry="2" />
<text  x="109.38" y="559.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (4 samples, 0.08%)</title><rect x="53.3" y="229" width="0.9" height="15.0" fill="rgb(241,36,20)" rx="2" ry="2" />
<text  x="56.28" y="239.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::get_mutations (27 samples, 0.51%)</title><rect x="853.3" y="501" width="6.1" height="15.0" fill="rgb(244,112,45)" rx="2" ry="2" />
<text  x="856.34" y="511.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;single_node_cql_env::core_local_state&gt;::local (1 samples, 0.02%)</title><rect x="832.6" y="517" width="0.2" height="15.0" fill="rgb(230,19,4)" rx="2" ry="2" />
<text  x="835.59" y="527.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_internal&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt; &gt; (25 samples, 0.47%)</title><rect x="1126.9" y="421" width="5.5" height="15.0" fill="rgb(220,100,19)" rx="2" ry="2" />
<text  x="1129.86" y="431.5" ></text>
</g>
<g >
<title>query::querier_base::querier_base (432 samples, 8.17%)</title><rect x="443.7" y="517" width="96.4" height="15.0" fill="rgb(231,166,1)" rx="2" ry="2" />
<text  x="446.72" y="527.5" >query::quer..</text>
</g>
<g >
<title>flat_mutation_reader::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (4 samples, 0.08%)</title><rect x="676.2" y="549" width="0.9" height="15.0" fill="rgb(241,177,41)" rx="2" ry="2" />
<text  x="679.19" y="559.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;clustering_key_prefix, false, false&gt;::_Optional_base (1 samples, 0.02%)</title><rect x="614.6" y="501" width="0.2" height="15.0" fill="rgb(225,53,32)" rx="2" ry="2" />
<text  x="617.61" y="511.5" ></text>
</g>
<g >
<title>db::get_cdc_streams_descriptions_v2_mutation (1 samples, 0.02%)</title><rect x="102.4" y="565" width="0.2" height="15.0" fill="rgb(238,216,26)" rx="2" ry="2" />
<text  x="105.37" y="575.5" ></text>
</g>
<g >
<title>std::push_heap&lt;mutation_reader_merger::reader_and_fragment*, mutation_reader_merger::reader_heap_compare&gt; (8 samples, 0.15%)</title><rect x="189.4" y="341" width="1.8" height="15.0" fill="rgb(221,135,17)" rx="2" ry="2" />
<text  x="192.38" y="351.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;empty_flat_reader, std::default_delete&lt;empty_flat_reader&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="535.0" y="373" width="0.2" height="15.0" fill="rgb(245,152,11)" rx="2" ry="2" />
<text  x="537.97" y="383.5" ></text>
</g>
<g >
<title>cql3::authorized_prepared_statements_cache_key::hash (17 samples, 0.32%)</title><rect x="734.2" y="421" width="3.8" height="15.0" fill="rgb(211,140,19)" rx="2" ry="2" />
<text  x="737.20" y="431.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (3 samples, 0.06%)</title><rect x="1114.6" y="517" width="0.7" height="15.0" fill="rgb(248,11,53)" rx="2" ry="2" />
<text  x="1117.59" y="527.5" ></text>
</g>
<g >
<title>std::type_info::operator== (1 samples, 0.02%)</title><rect x="664.4" y="549" width="0.2" height="15.0" fill="rgb(229,170,5)" rx="2" ry="2" />
<text  x="667.37" y="559.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_max_result_size (14 samples, 0.26%)</title><rect x="1108.1" y="517" width="3.1" height="15.0" fill="rgb(207,152,46)" rx="2" ry="2" />
<text  x="1111.12" y="527.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (1 samples, 0.02%)</title><rect x="54.8" y="325" width="0.3" height="15.0" fill="rgb(249,121,12)" rx="2" ry="2" />
<text  x="57.84" y="335.5" ></text>
</g>
<g >
<title>__vfprintf_internal (1 samples, 0.02%)</title><rect x="676.0" y="469" width="0.2" height="15.0" fill="rgb(244,10,52)" rx="2" ry="2" />
<text  x="678.97" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (3 samples, 0.06%)</title><rect x="940.6" y="469" width="0.6" height="15.0" fill="rgb(231,150,26)" rx="2" ry="2" />
<text  x="943.57" y="479.5" ></text>
</g>
<g >
<title>sstables::sstable::filename (1 samples, 0.02%)</title><rect x="1133.8" y="373" width="0.2" height="15.0" fill="rgb(228,89,7)" rx="2" ry="2" />
<text  x="1136.78" y="383.5" ></text>
</g>
<g >
<title>logalloc::region_impl::free (1 samples, 0.02%)</title><rect x="1137.3" y="341" width="0.3" height="15.0" fill="rgb(243,70,18)" rx="2" ry="2" />
<text  x="1140.35" y="351.5" ></text>
</g>
<g >
<title>make_flat_mutation_reader&lt;empty_flat_reader, seastar::lw_shared_ptr&lt;schema const&gt;, reader_permit&gt; (17 samples, 0.32%)</title><rect x="531.4" y="389" width="3.8" height="15.0" fill="rgb(206,91,32)" rx="2" ry="2" />
<text  x="534.40" y="399.5" ></text>
</g>
<g >
<title>std::variant&lt;fragmented_temporary_buffer::view, managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="892.6" y="421" width="0.2" height="15.0" fill="rgb(243,57,19)" rx="2" ry="2" />
<text  x="895.60" y="431.5" ></text>
</g>
<g >
<title>sstables::sstable::write_simple&lt; (1 samples, 0.02%)</title><rect x="676.0" y="325" width="0.2" height="15.0" fill="rgb(205,64,13)" rx="2" ry="2" />
<text  x="678.97" y="335.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::set_value&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; (2 samples, 0.04%)</title><rect x="601.7" y="533" width="0.4" height="15.0" fill="rgb(248,137,17)" rx="2" ry="2" />
<text  x="604.67" y="543.5" ></text>
</g>
<g >
<title>seastar::metrics::impl::metric_groups_impl::add_metric (1 samples, 0.02%)</title><rect x="107.9" y="437" width="0.3" height="15.0" fill="rgb(243,86,43)" rx="2" ry="2" />
<text  x="110.94" y="447.5" ></text>
</g>
<g >
<title>db::commitlog::add_entry (1 samples, 0.02%)</title><rect x="1125.1" y="357" width="0.2" height="15.0" fill="rgb(236,15,40)" rx="2" ry="2" />
<text  x="1128.08" y="367.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (1 samples, 0.02%)</title><rect x="569.8" y="437" width="0.2" height="15.0" fill="rgb(246,43,28)" rx="2" ry="2" />
<text  x="572.77" y="447.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;boost::range_detail::integer_iterator&lt;unsigned int&gt;, seastar::smp::invoke_on_all&lt;seastar::create_scheduling_group (1 samples, 0.02%)</title><rect x="107.9" y="565" width="0.3" height="15.0" fill="rgb(209,131,7)" rx="2" ry="2" />
<text  x="110.94" y="575.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="577.1" y="469" width="0.3" height="15.0" fill="rgb(210,191,19)" rx="2" ry="2" />
<text  x="580.13" y="479.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::operator= (3 samples, 0.06%)</title><rect x="816.1" y="501" width="0.6" height="15.0" fill="rgb(243,144,5)" rx="2" ry="2" />
<text  x="819.08" y="511.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;auth::resource&gt;::_Optional_payload_base (2 samples, 0.04%)</title><rect x="769.2" y="405" width="0.5" height="15.0" fill="rgb(235,192,20)" rx="2" ry="2" />
<text  x="772.22" y="415.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;, service::storage_proxy::query_result_local (12 samples, 0.23%)</title><rect x="627.3" y="597" width="2.7" height="15.0" fill="rgb(217,193,37)" rx="2" ry="2" />
<text  x="630.33" y="607.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.08%)</title><rect x="643.4" y="533" width="0.9" height="15.0" fill="rgb(243,100,11)" rx="2" ry="2" />
<text  x="646.39" y="543.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_Optional_payload_base (1 samples, 0.02%)</title><rect x="1089.6" y="453" width="0.2" height="15.0" fill="rgb(211,192,35)" rx="2" ry="2" />
<text  x="1092.60" y="463.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, cql3::statements::raw::delete_statement*, std::default_delete&lt;cql3::statements::raw::delete_statement&gt; &gt; (1 samples, 0.02%)</title><rect x="62.0" y="453" width="0.2" height="15.0" fill="rgb(214,102,51)" rx="2" ry="2" />
<text  x="64.98" y="463.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;sstables::file_writer&gt;, sstables::sstable::make_component_file_writer (1 samples, 0.02%)</title><rect x="676.0" y="597" width="0.2" height="15.0" fill="rgb(238,125,0)" rx="2" ry="2" />
<text  x="678.97" y="607.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_9c4051607141ccef88a5c0c6888f804fb0de85a9] (1 samples, 0.02%)</title><rect x="1159.4" y="565" width="0.3" height="15.0" fill="rgb(236,207,51)" rx="2" ry="2" />
<text  x="1162.43" y="575.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;column_definition const*, std::pair&lt;column_definition const* const, cql3::expr::expression&gt;, std::allocator&lt;std::pair&lt;column_definition const* const, cql3::expr::expression&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;column_definition const*&gt;, std::hash&lt;column_definition const*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::operator[] (1 samples, 0.02%)</title><rect x="72.5" y="453" width="0.2" height="15.0" fill="rgb(252,91,27)" rx="2" ry="2" />
<text  x="75.47" y="463.5" ></text>
</g>
<g >
<title>sstables::mc::writer::consume (4 samples, 0.08%)</title><rect x="81.2" y="501" width="0.9" height="15.0" fill="rgb(230,71,26)" rx="2" ry="2" />
<text  x="84.17" y="511.5" ></text>
</g>
<g >
<title>cql3::single_column_relation::single_column_relation (1 samples, 0.02%)</title><rect x="58.9" y="389" width="0.2" height="15.0" fill="rgb(223,73,39)" rx="2" ry="2" />
<text  x="61.86" y="399.5" ></text>
</g>
<g >
<title>deletable_row::apply_monotonically (2 samples, 0.04%)</title><rect x="16.0" y="645" width="0.5" height="15.0" fill="rgb(205,69,5)" rx="2" ry="2" />
<text  x="19.02" y="655.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (1 samples, 0.02%)</title><rect x="1168.1" y="725" width="0.3" height="15.0" fill="rgb(254,216,30)" rx="2" ry="2" />
<text  x="1171.14" y="735.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.06%)</title><rect x="1151.4" y="469" width="0.7" height="15.0" fill="rgb(223,202,7)" rx="2" ry="2" />
<text  x="1154.40" y="479.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (1 samples, 0.02%)</title><rect x="627.8" y="581" width="0.2" height="15.0" fill="rgb(242,158,42)" rx="2" ry="2" />
<text  x="630.78" y="591.5" ></text>
</g>
<g >
<title>mutation_partition::clustered_row (1 samples, 0.02%)</title><rect x="102.4" y="517" width="0.2" height="15.0" fill="rgb(216,9,41)" rx="2" ry="2" />
<text  x="105.37" y="527.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.02%)</title><rect x="1134.0" y="229" width="0.2" height="15.0" fill="rgb(236,36,13)" rx="2" ry="2" />
<text  x="1137.00" y="239.5" ></text>
</g>
<g >
<title>cql3::single_column_relation::to_term (2 samples, 0.04%)</title><rect x="68.2" y="453" width="0.5" height="15.0" fill="rgb(237,66,34)" rx="2" ry="2" />
<text  x="71.23" y="463.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::get0 (4 samples, 0.08%)</title><rect x="432.8" y="373" width="0.9" height="15.0" fill="rgb(254,213,1)" rx="2" ry="2" />
<text  x="435.78" y="383.5" ></text>
</g>
<g >
<title>abstract_type::decompose (1 samples, 0.02%)</title><rect x="68.7" y="405" width="0.2" height="15.0" fill="rgb(250,9,34)" rx="2" ry="2" />
<text  x="71.68" y="415.5" ></text>
</g>
<g >
<title>std::default_delete&lt;query::partition_slice const&gt;::operator (1 samples, 0.02%)</title><rect x="580.3" y="517" width="0.2" height="15.0" fill="rgb(232,148,12)" rx="2" ry="2" />
<text  x="583.26" y="527.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (3 samples, 0.06%)</title><rect x="47.5" y="389" width="0.7" height="15.0" fill="rgb(232,39,49)" rx="2" ry="2" />
<text  x="50.48" y="399.5" ></text>
</g>
<g >
<title>std::make_unique&lt;compact_for_query&lt; (3 samples, 0.06%)</title><rect x="438.4" y="453" width="0.6" height="15.0" fill="rgb(209,91,32)" rx="2" ry="2" />
<text  x="441.36" y="463.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.04%)</title><rect x="608.4" y="517" width="0.4" height="15.0" fill="rgb(216,27,47)" rx="2" ry="2" />
<text  x="611.37" y="527.5" ></text>
</g>
<g >
<title>__tls_init (2 samples, 0.04%)</title><rect x="196.3" y="341" width="0.4" height="15.0" fill="rgb(247,220,15)" rx="2" ry="2" />
<text  x="199.29" y="351.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql_transport::messages::result_message&gt;::~shared_ptr (2 samples, 0.04%)</title><rect x="1136.5" y="597" width="0.4" height="15.0" fill="rgb(253,31,21)" rx="2" ry="2" />
<text  x="1139.45" y="607.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.08%)</title><rect x="439.9" y="453" width="0.9" height="15.0" fill="rgb(215,5,51)" rx="2" ry="2" />
<text  x="442.92" y="463.5" ></text>
</g>
<g >
<title>__tls_init (1 samples, 0.02%)</title><rect x="490.1" y="405" width="0.2" height="15.0" fill="rgb(218,149,10)" rx="2" ry="2" />
<text  x="493.12" y="415.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;cql3::statements::raw::parsed_statement&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect x="62.4" y="405" width="0.3" height="15.0" fill="rgb(238,42,35)" rx="2" ry="2" />
<text  x="65.43" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::_M_range_initialize&lt;nonwrapping_interval&lt;dht::ring_position&gt; const*&gt; (9 samples, 0.17%)</title><rect x="1026.0" y="357" width="2.0" height="15.0" fill="rgb(227,122,2)" rx="2" ry="2" />
<text  x="1029.02" y="367.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take (1 samples, 0.02%)</title><rect x="738.4" y="485" width="0.3" height="15.0" fill="rgb(214,213,26)" rx="2" ry="2" />
<text  x="741.44" y="495.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.08%)</title><rect x="555.0" y="421" width="0.9" height="15.0" fill="rgb(237,25,52)" rx="2" ry="2" />
<text  x="558.04" y="431.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::get0 (1 samples, 0.02%)</title><rect x="168.9" y="469" width="0.2" height="15.0" fill="rgb(239,107,51)" rx="2" ry="2" />
<text  x="171.85" y="479.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reclaiming_disabled&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_range_tombstone (13 samples, 0.25%)</title><rect x="262.8" y="293" width="2.9" height="15.0" fill="rgb(218,28,25)" rx="2" ry="2" />
<text  x="265.78" y="303.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;sstables::compaction_strategy_impl&gt;::operator= (1 samples, 0.02%)</title><rect x="107.7" y="533" width="0.2" height="15.0" fill="rgb(249,168,26)" rx="2" ry="2" />
<text  x="110.72" y="543.5" ></text>
</g>
<g >
<title>compound_type&lt; (1 samples, 0.02%)</title><rect x="10.9" y="421" width="0.2" height="15.0" fill="rgb(209,60,16)" rx="2" ry="2" />
<text  x="13.89" y="431.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::query_options, std::default_delete&lt;cql3::query_options&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="844.6" y="549" width="0.3" height="15.0" fill="rgb(233,36,44)" rx="2" ry="2" />
<text  x="847.63" y="559.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (2 samples, 0.04%)</title><rect x="908.4" y="453" width="0.5" height="15.0" fill="rgb(247,160,10)" rx="2" ry="2" />
<text  x="911.44" y="463.5" ></text>
</g>
<g >
<title>db::schema_tables::do_merge_schema (1 samples, 0.02%)</title><rect x="105.7" y="597" width="0.2" height="15.0" fill="rgb(240,120,45)" rx="2" ry="2" />
<text  x="108.71" y="607.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (1 samples, 0.02%)</title><rect x="105.5" y="533" width="0.2" height="15.0" fill="rgb(218,215,47)" rx="2" ry="2" />
<text  x="108.49" y="543.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (2 samples, 0.04%)</title><rect x="352.2" y="277" width="0.5" height="15.0" fill="rgb(205,173,54)" rx="2" ry="2" />
<text  x="355.24" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (1 samples, 0.02%)</title><rect x="252.1" y="181" width="0.2" height="15.0" fill="rgb(214,193,37)" rx="2" ry="2" />
<text  x="255.07" y="191.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_construct&lt;interval_bound&lt;dht::ring_position&gt; const&amp;&gt; (2 samples, 0.04%)</title><rect x="606.1" y="533" width="0.5" height="15.0" fill="rgb(238,195,40)" rx="2" ry="2" />
<text  x="609.14" y="543.5" ></text>
</g>
<g >
<title>read_simple&lt;long, managed_bytes_basic_view&lt; (3 samples, 0.06%)</title><rect x="413.8" y="261" width="0.7" height="15.0" fill="rgb(220,195,3)" rx="2" ry="2" />
<text  x="416.82" y="271.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="319.9" y="453" width="0.2" height="15.0" fill="rgb(232,3,54)" rx="2" ry="2" />
<text  x="322.89" y="463.5" ></text>
</g>
<g >
<title>dht::i_partitioner::decorate_key (1 samples, 0.02%)</title><rect x="859.1" y="389" width="0.3" height="15.0" fill="rgb(248,141,53)" rx="2" ry="2" />
<text  x="862.14" y="399.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::create_keyspace_statement, std::default_delete&lt;cql3::statements::create_keyspace_statement&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::statements::create_keyspace_statement&gt;, void&gt; (1 samples, 0.02%)</title><rect x="63.1" y="485" width="0.2" height="15.0" fill="rgb(249,75,19)" rx="2" ry="2" />
<text  x="66.10" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (19 samples, 0.36%)</title><rect x="1000.6" y="325" width="4.2" height="15.0" fill="rgb(227,183,10)" rx="2" ry="2" />
<text  x="1003.58" y="335.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;::__uniq_ptr_impl (1 samples, 0.02%)</title><rect x="46.6" y="277" width="0.2" height="15.0" fill="rgb(206,161,8)" rx="2" ry="2" />
<text  x="49.59" y="287.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;bool  (1 samples, 0.02%)</title><rect x="546.6" y="485" width="0.2" height="15.0" fill="rgb(214,115,6)" rx="2" ry="2" />
<text  x="549.57" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt;::_M_check_len (1 samples, 0.02%)</title><rect x="282.2" y="277" width="0.2" height="15.0" fill="rgb(235,25,10)" rx="2" ry="2" />
<text  x="285.19" y="287.5" ></text>
</g>
<g >
<title>mutation_reader_merger::mutation_reader_merger (24 samples, 0.45%)</title><rect x="455.8" y="405" width="5.3" height="15.0" fill="rgb(209,215,51)" rx="2" ry="2" />
<text  x="458.76" y="415.5" ></text>
</g>
<g >
<title>perf_simple_que (5,289 samples, 100.00%)</title><rect x="10.0" y="741" width="1180.0" height="15.0" fill="rgb(221,221,22)" rx="2" ry="2" />
<text  x="13.00" y="751.5" >perf_simple_que</text>
</g>
<g >
<title>seastar::futurize_invoke&lt;seastar::future&lt;void&gt;  (1 samples, 0.02%)</title><rect x="677.1" y="517" width="0.2" height="15.0" fill="rgb(219,20,39)" rx="2" ry="2" />
<text  x="680.08" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::_M_check_len (1 samples, 0.02%)</title><rect x="46.8" y="357" width="0.2" height="15.0" fill="rgb(217,80,28)" rx="2" ry="2" />
<text  x="49.81" y="367.5" ></text>
</g>
<g >
<title>row::external_memory_usage (26 samples, 0.49%)</title><rect x="247.8" y="245" width="5.8" height="15.0" fill="rgb(224,218,35)" rx="2" ry="2" />
<text  x="250.83" y="255.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="877.4" y="389" width="0.3" height="15.0" fill="rgb(253,207,13)" rx="2" ry="2" />
<text  x="880.43" y="399.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.02%)</title><rect x="1133.8" y="453" width="0.2" height="15.0" fill="rgb(254,101,38)" rx="2" ry="2" />
<text  x="1136.78" y="463.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::lower_bound&lt;mutation_partition, schema const&amp;, nonwrapping_interval&lt;clustering_key_prefix&gt; const&amp;&gt; (3 samples, 0.06%)</title><rect x="282.4" y="325" width="0.7" height="15.0" fill="rgb(241,28,27)" rx="2" ry="2" />
<text  x="285.41" y="335.5" ></text>
</g>
<g >
<title>std::default_delete&lt;cql3::query_options&gt;::operator (12 samples, 0.23%)</title><rect x="660.6" y="565" width="2.7" height="15.0" fill="rgb(209,11,10)" rx="2" ry="2" />
<text  x="663.57" y="575.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::net::inet_address&gt;::operator (1 samples, 0.02%)</title><rect x="1147.6" y="501" width="0.2" height="15.0" fill="rgb(234,86,45)" rx="2" ry="2" />
<text  x="1150.61" y="511.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (2 samples, 0.04%)</title><rect x="1092.5" y="421" width="0.4" height="15.0" fill="rgb(221,127,43)" rx="2" ry="2" />
<text  x="1095.50" y="431.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::on_read_resolved (3 samples, 0.06%)</title><rect x="687.1" y="549" width="0.7" height="15.0" fill="rgb(216,35,11)" rx="2" ry="2" />
<text  x="690.12" y="559.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.02%)</title><rect x="135.8" y="549" width="0.3" height="15.0" fill="rgb(210,193,44)" rx="2" ry="2" />
<text  x="138.83" y="559.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;tracking_allocator&lt;mutation_fragment&gt; &gt;::_S_destroy&lt;tracking_allocator&lt;mutation_fragment&gt;, mutation_fragment&gt; (1 samples, 0.02%)</title><rect x="185.1" y="325" width="0.3" height="15.0" fill="rgb(246,140,17)" rx="2" ry="2" />
<text  x="188.14" y="335.5" ></text>
</g>
<g >
<title>seastar::schedule (1 samples, 0.02%)</title><rect x="742.0" y="437" width="0.2" height="15.0" fill="rgb(220,164,35)" rx="2" ry="2" />
<text  x="745.01" y="447.5" ></text>
</g>
<g >
<title>nonwrapping_interval&lt;dht::ring_position&gt;::nonwrapping_interval (6 samples, 0.11%)</title><rect x="912.0" y="469" width="1.4" height="15.0" fill="rgb(234,67,5)" rx="2" ry="2" />
<text  x="915.01" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="941.7" y="501" width="0.2" height="15.0" fill="rgb(234,116,30)" rx="2" ry="2" />
<text  x="944.68" y="511.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (1 samples, 0.02%)</title><rect x="895.7" y="453" width="0.2" height="15.0" fill="rgb(231,218,33)" rx="2" ry="2" />
<text  x="898.73" y="463.5" ></text>
</g>
<g >
<title>db::schema_tables::update_schema_version_and_announce (2 samples, 0.04%)</title><rect x="105.9" y="581" width="0.5" height="15.0" fill="rgb(247,76,47)" rx="2" ry="2" />
<text  x="108.93" y="591.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (2 samples, 0.04%)</title><rect x="386.8" y="261" width="0.5" height="15.0" fill="rgb(234,174,5)" rx="2" ry="2" />
<text  x="389.82" y="271.5" ></text>
</g>
<g >
<title>flat_mutation_reader::peek (1 samples, 0.02%)</title><rect x="320.3" y="469" width="0.3" height="15.0" fill="rgb(205,155,3)" rx="2" ry="2" />
<text  x="323.34" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="774.4" y="373" width="0.2" height="15.0" fill="rgb(250,111,7)" rx="2" ry="2" />
<text  x="777.36" y="383.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::operator (1 samples, 0.02%)</title><rect x="105.9" y="245" width="0.3" height="15.0" fill="rgb(217,138,13)" rx="2" ry="2" />
<text  x="108.93" y="255.5" ></text>
</g>
<g >
<title>std::type_info::operator== (2 samples, 0.04%)</title><rect x="983.4" y="373" width="0.5" height="15.0" fill="rgb(248,87,0)" rx="2" ry="2" />
<text  x="986.41" y="383.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="771.2" y="421" width="0.3" height="15.0" fill="rgb(231,17,27)" rx="2" ry="2" />
<text  x="774.23" y="431.5" ></text>
</g>
<g >
<title>compound_type&lt; (10 samples, 0.19%)</title><rect x="905.1" y="453" width="2.2" height="15.0" fill="rgb(231,9,15)" rx="2" ry="2" />
<text  x="908.10" y="463.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;5ul, cql3::expr::untyped_constant&gt; (2 samples, 0.04%)</title><rect x="51.5" y="117" width="0.4" height="15.0" fill="rgb(206,204,40)" rx="2" ry="2" />
<text  x="54.50" y="127.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::build_partition_keys (7 samples, 0.13%)</title><rect x="854.2" y="485" width="1.6" height="15.0" fill="rgb(223,120,47)" rx="2" ry="2" />
<text  x="857.23" y="495.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (1 samples, 0.02%)</title><rect x="163.5" y="517" width="0.2" height="15.0" fill="rgb(212,57,14)" rx="2" ry="2" />
<text  x="166.50" y="527.5" ></text>
</g>
<g >
<title>bytes_ostream::view (1 samples, 0.02%)</title><rect x="587.6" y="501" width="0.2" height="15.0" fill="rgb(239,36,16)" rx="2" ry="2" />
<text  x="590.62" y="511.5" ></text>
</g>
<g >
<title>std::variant&lt;fragmented_temporary_buffer::view, managed_bytes_basic_view&lt; (2 samples, 0.04%)</title><rect x="891.9" y="405" width="0.5" height="15.0" fill="rgb(232,118,11)" rx="2" ry="2" />
<text  x="894.93" y="415.5" ></text>
</g>
<g >
<title>secondary_index::secondary_index_manager::list_indexes (1 samples, 0.02%)</title><rect x="69.6" y="453" width="0.2" height="15.0" fill="rgb(225,61,16)" rx="2" ry="2" />
<text  x="72.57" y="463.5" ></text>
</g>
<g >
<title>validation::validate_keyspace (1 samples, 0.02%)</title><rect x="74.9" y="533" width="0.2" height="15.0" fill="rgb(246,146,3)" rx="2" ry="2" />
<text  x="77.92" y="543.5" ></text>
</g>
<g >
<title>row_tombstone::apply (1 samples, 0.02%)</title><rect x="1165.2" y="357" width="0.3" height="15.0" fill="rgb(222,83,51)" rx="2" ry="2" />
<text  x="1168.24" y="367.5" ></text>
</g>
<g >
<title>std::_Optional_base_impl&lt;query::querier&lt; (2 samples, 0.04%)</title><rect x="605.7" y="533" width="0.4" height="15.0" fill="rgb(208,212,17)" rx="2" ry="2" />
<text  x="608.69" y="543.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_cachedSize (1 samples, 0.02%)</title><rect x="42.8" y="373" width="0.2" height="15.0" fill="rgb(214,109,42)" rx="2" ry="2" />
<text  x="45.80" y="383.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;bool&gt;::take_value (1 samples, 0.02%)</title><rect x="763.6" y="453" width="0.3" height="15.0" fill="rgb(212,187,53)" rx="2" ry="2" />
<text  x="766.65" y="463.5" ></text>
</g>
<g >
<title>db::system_keyspace_make (1 samples, 0.02%)</title><rect x="16.9" y="405" width="0.2" height="15.0" fill="rgb(251,32,44)" rx="2" ry="2" />
<text  x="19.92" y="415.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (1 samples, 0.02%)</title><rect x="1036.5" y="421" width="0.2" height="15.0" fill="rgb(219,221,22)" rx="2" ry="2" />
<text  x="1039.50" y="431.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;interval_bound&lt;dht::ring_position&gt;, false, false&gt;::_Optional_base (1 samples, 0.02%)</title><rect x="927.2" y="453" width="0.2" height="15.0" fill="rgb(225,199,35)" rx="2" ry="2" />
<text  x="930.18" y="463.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::future&lt;void&gt;  (29 samples, 0.55%)</title><rect x="1126.4" y="453" width="6.5" height="15.0" fill="rgb(218,121,26)" rx="2" ry="2" />
<text  x="1129.42" y="463.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::set&lt;&gt; (1 samples, 0.02%)</title><rect x="94.1" y="565" width="0.2" height="15.0" fill="rgb(238,176,14)" rx="2" ry="2" />
<text  x="97.11" y="575.5" ></text>
</g>
<g >
<title>compound_wrapper&lt;clustering_key_prefix, clustering_key_prefix_view&gt;::begin (1 samples, 0.02%)</title><rect x="10.9" y="437" width="0.2" height="15.0" fill="rgb(206,96,23)" rx="2" ry="2" />
<text  x="13.89" y="447.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (46 samples, 0.87%)</title><rect x="653.2" y="597" width="10.3" height="15.0" fill="rgb(235,197,29)" rx="2" ry="2" />
<text  x="656.21" y="607.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::EqualElement&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (2 samples, 0.04%)</title><rect x="811.2" y="389" width="0.4" height="15.0" fill="rgb(226,227,28)" rx="2" ry="2" />
<text  x="814.17" y="399.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mWS (1 samples, 0.02%)</title><rect x="34.1" y="357" width="0.2" height="15.0" fill="rgb(242,79,52)" rx="2" ry="2" />
<text  x="37.10" y="367.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_no_esft&lt;std::function&lt;std::function&lt;partition_presence_checker_result  (2 samples, 0.04%)</title><rect x="616.2" y="485" width="0.4" height="15.0" fill="rgb(208,12,21)" rx="2" ry="2" />
<text  x="619.18" y="495.5" ></text>
</g>
<g >
<title>service::get_local_priority_manager (2 samples, 0.04%)</title><rect x="603.9" y="533" width="0.5" height="15.0" fill="rgb(211,212,25)" rx="2" ry="2" />
<text  x="606.90" y="543.5" ></text>
</g>
<g >
<title>seastar::future&lt;utils::small_vector&lt;service::storage_proxy::unique_response_handler, 1ul&gt; &gt;::then_impl&lt;service::storage_proxy::mutate_internal&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt; &gt; (10 samples, 0.19%)</title><rect x="1126.9" y="405" width="2.2" height="15.0" fill="rgb(208,148,3)" rx="2" ry="2" />
<text  x="1129.86" y="415.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::lsa_partition_reader (3 samples, 0.06%)</title><rect x="514.4" y="373" width="0.7" height="15.0" fill="rgb(243,223,12)" rx="2" ry="2" />
<text  x="517.44" y="383.5" ></text>
</g>
<g >
<title>utils::basic_ihistogram&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt; &gt;::mark&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; (2 samples, 0.04%)</title><rect x="596.8" y="501" width="0.4" height="15.0" fill="rgb(248,103,6)" rx="2" ry="2" />
<text  x="599.76" y="511.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (1 samples, 0.02%)</title><rect x="77.4" y="453" width="0.2" height="15.0" fill="rgb(240,56,1)" rx="2" ry="2" />
<text  x="80.38" y="463.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (1 samples, 0.02%)</title><rect x="1081.3" y="453" width="0.3" height="15.0" fill="rgb(236,106,36)" rx="2" ry="2" />
<text  x="1084.35" y="463.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;mutation_querier, false, false&gt;::_Optional_base (1 samples, 0.02%)</title><rect x="548.8" y="517" width="0.2" height="15.0" fill="rgb(208,109,16)" rx="2" ry="2" />
<text  x="551.80" y="527.5" ></text>
</g>
<g >
<title>utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (36 samples, 0.68%)</title><rect x="782.4" y="309" width="8.0" height="15.0" fill="rgb(242,111,34)" rx="2" ry="2" />
<text  x="785.39" y="319.5" ></text>
</g>
<g >
<title>seastar::syscall_work_queue::submit&lt;seastar::syscall_result_extra&lt;stat&gt; &gt; (1 samples, 0.02%)</title><rect x="850.0" y="405" width="0.2" height="15.0" fill="rgb(216,177,7)" rx="2" ry="2" />
<text  x="852.99" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="561.7" y="373" width="0.3" height="15.0" fill="rgb(248,107,10)" rx="2" ry="2" />
<text  x="564.74" y="383.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::create_service_level_statement, std::default_delete&lt;cql3::statements::create_service_level_statement&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::statements::create_service_level_statement&gt;, void&gt; (1 samples, 0.02%)</title><rect x="61.1" y="469" width="0.2" height="15.0" fill="rgb(223,30,51)" rx="2" ry="2" />
<text  x="64.09" y="479.5" ></text>
</g>
<g >
<title>make_partition_snapshot_flat_reader_from_snp_schema (113 samples, 2.14%)</title><rect x="491.0" y="421" width="25.2" height="15.0" fill="rgb(238,189,32)" rx="2" ry="2" />
<text  x="494.01" y="431.5" >m..</text>
</g>
<g >
<title>seastar::create_scheduling_group (1 samples, 0.02%)</title><rect x="107.9" y="581" width="0.3" height="15.0" fill="rgb(205,192,26)" rx="2" ry="2" />
<text  x="110.94" y="591.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (1 samples, 0.02%)</title><rect x="845.1" y="565" width="0.2" height="15.0" fill="rgb(248,53,44)" rx="2" ry="2" />
<text  x="848.08" y="575.5" ></text>
</g>
<g >
<title>mutation::set_clustered_cell (1 samples, 0.02%)</title><rect x="858.7" y="405" width="0.2" height="15.0" fill="rgb(209,154,4)" rx="2" ry="2" />
<text  x="861.69" y="415.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::~holder (3 samples, 0.06%)</title><rect x="452.2" y="437" width="0.7" height="15.0" fill="rgb(214,181,47)" rx="2" ry="2" />
<text  x="455.19" y="447.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::~impl (5 samples, 0.09%)</title><rect x="569.3" y="469" width="1.1" height="15.0" fill="rgb(223,189,40)" rx="2" ry="2" />
<text  x="572.32" y="479.5" ></text>
</g>
<g >
<title>utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;::lru_entry::touch (9 samples, 0.17%)</title><rect x="721.9" y="501" width="2.0" height="15.0" fill="rgb(246,87,8)" rx="2" ry="2" />
<text  x="724.93" y="511.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::indirect_move (2 samples, 0.04%)</title><rect x="1014.4" y="309" width="0.5" height="15.0" fill="rgb(219,172,37)" rx="2" ry="2" />
<text  x="1017.42" y="319.5" ></text>
</g>
<g >
<title>std::hash&lt;std::basic_string_view&lt;signed char, std::char_traits&lt;signed char&gt; &gt; &gt;::operator (1 samples, 0.02%)</title><rect x="737.8" y="389" width="0.2" height="15.0" fill="rgb(208,151,51)" rx="2" ry="2" />
<text  x="740.77" y="399.5" ></text>
</g>
<g >
<title>seastar::reactor::task_queue::task_queue (1 samples, 0.02%)</title><rect x="107.9" y="501" width="0.3" height="15.0" fill="rgb(250,11,44)" rx="2" ry="2" />
<text  x="110.94" y="511.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;tracking_allocator&lt;mutation_fragment&gt; &gt;::_S_destroy&lt;tracking_allocator&lt;mutation_fragment&gt;, mutation_fragment&gt; (1 samples, 0.02%)</title><rect x="333.9" y="341" width="0.3" height="15.0" fill="rgb(216,96,15)" rx="2" ry="2" />
<text  x="336.95" y="351.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (4 samples, 0.08%)</title><rect x="1024.7" y="325" width="0.9" height="15.0" fill="rgb(215,55,22)" rx="2" ry="2" />
<text  x="1027.68" y="335.5" ></text>
</g>
<g >
<title>ser::serializer&lt;partition_key&gt;::write&lt;seastar::measuring_output_stream&gt; (1 samples, 0.02%)</title><rect x="107.3" y="437" width="0.2" height="15.0" fill="rgb(236,94,37)" rx="2" ry="2" />
<text  x="110.27" y="447.5" ></text>
</g>
<g >
<title>reader_permit::impl::~impl (9 samples, 0.17%)</title><rect x="122.0" y="533" width="2.0" height="15.0" fill="rgb(225,199,15)" rx="2" ry="2" />
<text  x="125.00" y="543.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (2 samples, 0.04%)</title><rect x="53.7" y="149" width="0.5" height="15.0" fill="rgb(242,97,16)" rx="2" ry="2" />
<text  x="56.73" y="159.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::operator= (1 samples, 0.02%)</title><rect x="48.6" y="357" width="0.2" height="15.0" fill="rgb(207,198,3)" rx="2" ry="2" />
<text  x="51.60" y="367.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;::operator (1 samples, 0.02%)</title><rect x="72.9" y="485" width="0.2" height="15.0" fill="rgb(230,88,3)" rx="2" ry="2" />
<text  x="75.92" y="495.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::schedule&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (7 samples, 0.13%)</title><rect x="818.5" y="485" width="1.6" height="15.0" fill="rgb(244,174,27)" rx="2" ry="2" />
<text  x="821.53" y="495.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (2 samples, 0.04%)</title><rect x="37.2" y="389" width="0.5" height="15.0" fill="rgb(233,93,6)" rx="2" ry="2" />
<text  x="40.22" y="399.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;mutation_querier, false, false&gt;::_Optional_base (1 samples, 0.02%)</title><rect x="438.8" y="437" width="0.2" height="15.0" fill="rgb(225,205,36)" rx="2" ry="2" />
<text  x="441.81" y="447.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="1130.0" y="229" width="0.2" height="15.0" fill="rgb(207,44,6)" rx="2" ry="2" />
<text  x="1132.98" y="239.5" ></text>
</g>
<g >
<title>ser::writer_of_query_result&lt;bytes_ostream&gt;::start_partitions (1 samples, 0.02%)</title><rect x="594.3" y="517" width="0.2" height="15.0" fill="rgb(225,205,27)" rx="2" ry="2" />
<text  x="597.31" y="527.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (3 samples, 0.06%)</title><rect x="53.5" y="165" width="0.7" height="15.0" fill="rgb(218,93,24)" rx="2" ry="2" />
<text  x="56.51" y="175.5" ></text>
</g>
<g >
<title>bound_view::tri_compare::operator (1 samples, 0.02%)</title><rect x="105.5" y="453" width="0.2" height="15.0" fill="rgb(250,100,31)" rx="2" ry="2" />
<text  x="108.49" y="463.5" ></text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::modification_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::operator (1 samples, 0.02%)</title><rect x="19.6" y="533" width="0.2" height="15.0" fill="rgb(212,187,50)" rx="2" ry="2" />
<text  x="22.59" y="543.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;void&gt;::set_urgent_state (3 samples, 0.06%)</title><rect x="851.6" y="597" width="0.6" height="15.0" fill="rgb(220,206,51)" rx="2" ry="2" />
<text  x="854.55" y="607.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::value_ptr&gt;::future_state&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry_ptr&gt; (7 samples, 0.13%)</title><rect x="729.7" y="421" width="1.6" height="15.0" fill="rgb(228,31,28)" rx="2" ry="2" />
<text  x="732.74" y="431.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::with_ready_permit (1 samples, 0.02%)</title><rect x="1014.0" y="309" width="0.2" height="15.0" fill="rgb(213,156,51)" rx="2" ry="2" />
<text  x="1016.97" y="319.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (2 samples, 0.04%)</title><rect x="37.2" y="309" width="0.5" height="15.0" fill="rgb(222,158,54)" rx="2" ry="2" />
<text  x="40.22" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (1 samples, 0.02%)</title><rect x="23.4" y="293" width="0.2" height="15.0" fill="rgb(228,80,46)" rx="2" ry="2" />
<text  x="26.39" y="303.5" ></text>
</g>
<g >
<title>schema::rebuild (1 samples, 0.02%)</title><rect x="16.9" y="277" width="0.2" height="15.0" fill="rgb(247,194,18)" rx="2" ry="2" />
<text  x="19.92" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="1132.9" y="565" width="0.2" height="15.0" fill="rgb(216,197,5)" rx="2" ry="2" />
<text  x="1135.89" y="575.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;dht::decorated_key&gt;::_Optional_payload_base (1 samples, 0.02%)</title><rect x="325.2" y="373" width="0.3" height="15.0" fill="rgb(217,166,3)" rx="2" ry="2" />
<text  x="328.25" y="383.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (1 samples, 0.02%)</title><rect x="1024.2" y="357" width="0.3" height="15.0" fill="rgb(233,102,18)" rx="2" ry="2" />
<text  x="1027.23" y="367.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (1 samples, 0.02%)</title><rect x="82.7" y="533" width="0.3" height="15.0" fill="rgb(240,155,0)" rx="2" ry="2" />
<text  x="85.73" y="543.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (4 samples, 0.08%)</title><rect x="323.2" y="469" width="0.9" height="15.0" fill="rgb(247,14,45)" rx="2" ry="2" />
<text  x="326.24" y="479.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql3::statements::update_statement&gt;::~shared_ptr_count_for (2 samples, 0.04%)</title><rect x="632.9" y="581" width="0.5" height="15.0" fill="rgb(233,37,50)" rx="2" ry="2" />
<text  x="635.91" y="591.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (3 samples, 0.06%)</title><rect x="670.8" y="549" width="0.7" height="15.0" fill="rgb(211,99,33)" rx="2" ry="2" />
<text  x="673.84" y="559.5" ></text>
</g>
<g >
<title>absl::container_internal::probe_seq&lt;16ul&gt;::probe_seq (1 samples, 0.02%)</title><rect x="834.8" y="469" width="0.2" height="15.0" fill="rgb(238,162,12)" rx="2" ry="2" />
<text  x="837.82" y="479.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (425 samples, 8.04%)</title><rect x="195.2" y="405" width="94.8" height="15.0" fill="rgb(238,188,15)" rx="2" ry="2" />
<text  x="198.18" y="415.5" >partition_s..</text>
</g>
<g >
<title>antlr3::Lexer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::Lexer (1 samples, 0.02%)</title><rect x="20.0" y="517" width="0.3" height="15.0" fill="rgb(230,88,14)" rx="2" ry="2" />
<text  x="23.04" y="527.5" ></text>
</g>
<g >
<title>mutation_reader_merger::maybe_add_readers (3 samples, 0.06%)</title><rect x="177.3" y="389" width="0.7" height="15.0" fill="rgb(212,218,21)" rx="2" ry="2" />
<text  x="180.33" y="399.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (4 samples, 0.08%)</title><rect x="528.5" y="357" width="0.9" height="15.0" fill="rgb(240,219,31)" rx="2" ry="2" />
<text  x="531.49" y="367.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;boost::iterator_range&lt;mutation_fragment*&gt; &gt;::take_value (1 samples, 0.02%)</title><rect x="300.0" y="421" width="0.3" height="15.0" fill="rgb(242,124,9)" rx="2" ry="2" />
<text  x="303.04" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="434.3" y="373" width="0.3" height="15.0" fill="rgb(244,215,38)" rx="2" ry="2" />
<text  x="437.34" y="383.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::restrictions::single_column_restrictions&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="632.9" y="517" width="0.2" height="15.0" fill="rgb(219,221,50)" rx="2" ry="2" />
<text  x="635.91" y="527.5" ></text>
</g>
<g >
<title>seastar::memory::stats (2 samples, 0.04%)</title><rect x="490.6" y="405" width="0.4" height="15.0" fill="rgb(241,22,40)" rx="2" ry="2" />
<text  x="493.57" y="415.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::unique_ptr&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, std::default_delete&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;, std::allocator&lt;std::unique_ptr&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, std::default_delete&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt; &gt; &gt;::_Vector_impl::_Vector_impl (1 samples, 0.02%)</title><rect x="20.7" y="469" width="0.2" height="15.0" fill="rgb(244,50,42)" rx="2" ry="2" />
<text  x="23.71" y="479.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_clustering_bounds (25 samples, 0.47%)</title><rect x="1088.0" y="501" width="5.6" height="15.0" fill="rgb(251,181,24)" rx="2" ry="2" />
<text  x="1091.04" y="511.5" ></text>
</g>
<g >
<title>cql3::update_parameters::make_cell (1 samples, 0.02%)</title><rect x="856.5" y="389" width="0.2" height="15.0" fill="rgb(244,27,30)" rx="2" ry="2" />
<text  x="859.46" y="399.5" ></text>
</g>
<g >
<title>table::update_cache (1 samples, 0.02%)</title><rect x="1134.0" y="565" width="0.2" height="15.0" fill="rgb(242,149,31)" rx="2" ry="2" />
<text  x="1137.00" y="575.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::clear (1 samples, 0.02%)</title><rect x="655.7" y="565" width="0.2" height="15.0" fill="rgb(213,1,47)" rx="2" ry="2" />
<text  x="658.66" y="575.5" ></text>
</g>
<g >
<title>do_cql_test (274 samples, 5.18%)</title><rect x="17.6" y="645" width="61.1" height="15.0" fill="rgb(213,99,44)" rx="2" ry="2" />
<text  x="20.59" y="655.5" >do_cql..</text>
</g>
<g >
<title>operator new (7 samples, 0.13%)</title><rect x="840.4" y="453" width="1.6" height="15.0" fill="rgb(214,47,3)" rx="2" ry="2" />
<text  x="843.40" y="463.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_prepared (415 samples, 7.85%)</title><rect x="724.6" y="533" width="92.6" height="15.0" fill="rgb(246,43,45)" rx="2" ry="2" />
<text  x="727.60" y="543.5" >cql3::query..</text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (2 samples, 0.04%)</title><rect x="720.8" y="389" width="0.5" height="15.0" fill="rgb(244,155,42)" rx="2" ry="2" />
<text  x="723.81" y="399.5" ></text>
</g>
<g >
<title>mutation::set_cell (1 samples, 0.02%)</title><rect x="102.4" y="549" width="0.2" height="15.0" fill="rgb(216,83,40)" rx="2" ry="2" />
<text  x="105.37" y="559.5" ></text>
</g>
<g >
<title>absl::container_internal::operator== (1 samples, 0.02%)</title><rect x="1039.6" y="405" width="0.3" height="15.0" fill="rgb(229,8,24)" rx="2" ry="2" />
<text  x="1042.63" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::allocate_large_and_trim (1 samples, 0.02%)</title><rect x="956.2" y="389" width="0.2" height="15.0" fill="rgb(206,125,44)" rx="2" ry="2" />
<text  x="959.19" y="399.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment (1 samples, 0.02%)</title><rect x="199.0" y="341" width="0.2" height="15.0" fill="rgb(234,135,3)" rx="2" ry="2" />
<text  x="201.97" y="351.5" ></text>
</g>
<g >
<title>mutation_reader_merger::maybe_add_readers (3 samples, 0.06%)</title><rect x="178.2" y="373" width="0.7" height="15.0" fill="rgb(243,89,8)" rx="2" ry="2" />
<text  x="181.22" y="383.5" ></text>
</g>
<g >
<title>mutation_partition::clustered_row (5 samples, 0.09%)</title><rect x="856.7" y="373" width="1.1" height="15.0" fill="rgb(229,180,8)" rx="2" ry="2" />
<text  x="859.68" y="383.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_M_reset (1 samples, 0.02%)</title><rect x="585.6" y="485" width="0.2" height="15.0" fill="rgb(230,154,21)" rx="2" ry="2" />
<text  x="588.61" y="495.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.04%)</title><rect x="324.8" y="389" width="0.4" height="15.0" fill="rgb(213,208,37)" rx="2" ry="2" />
<text  x="327.80" y="399.5" ></text>
</g>
<g >
<title>memtable::evict_entry (1 samples, 0.02%)</title><rect x="1134.0" y="373" width="0.2" height="15.0" fill="rgb(233,88,50)" rx="2" ry="2" />
<text  x="1137.00" y="383.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (1 samples, 0.02%)</title><rect x="40.8" y="373" width="0.2" height="15.0" fill="rgb(234,195,17)" rx="2" ry="2" />
<text  x="43.79" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (2 samples, 0.04%)</title><rect x="833.5" y="469" width="0.4" height="15.0" fill="rgb(234,98,38)" rx="2" ry="2" />
<text  x="836.48" y="479.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.02%)</title><rect x="1137.3" y="533" width="0.3" height="15.0" fill="rgb(253,145,7)" rx="2" ry="2" />
<text  x="1140.35" y="543.5" ></text>
</g>
<g >
<title>partition_entry::evict (1 samples, 0.02%)</title><rect x="82.7" y="629" width="0.3" height="15.0" fill="rgb(233,89,4)" rx="2" ry="2" />
<text  x="85.73" y="639.5" ></text>
</g>
<g >
<title>seastar::posix_file_impl::list_directory (1 samples, 0.02%)</title><rect x="850.0" y="581" width="0.2" height="15.0" fill="rgb(214,129,14)" rx="2" ry="2" />
<text  x="852.99" y="591.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_wrapped_common&lt;false, seastar::future&lt;void&gt;, seastar::future&lt;void&gt;::handle_exception&lt;service::abstract_read_executor::execute (2 samples, 0.04%)</title><rect x="684.2" y="549" width="0.5" height="15.0" fill="rgb(220,168,6)" rx="2" ry="2" />
<text  x="687.22" y="559.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_last_fragment_kind, 4ul&gt;::~small_vector (1 samples, 0.02%)</title><rect x="462.7" y="389" width="0.2" height="15.0" fill="rgb(231,147,39)" rx="2" ry="2" />
<text  x="465.68" y="399.5" ></text>
</g>
<g >
<title>std::hash&lt;gms::inet_address&gt;::operator (1 samples, 0.02%)</title><rect x="1147.6" y="517" width="0.2" height="15.0" fill="rgb(213,170,1)" rx="2" ry="2" />
<text  x="1150.61" y="527.5" ></text>
</g>
<g >
<title>std::__copy_n_a&lt;legacy_compound_view&lt;compound_type&lt; (1 samples, 0.02%)</title><rect x="859.1" y="341" width="0.3" height="15.0" fill="rgb(242,184,50)" rx="2" ry="2" />
<text  x="862.14" y="351.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (1 samples, 0.02%)</title><rect x="781.0" y="309" width="0.3" height="15.0" fill="rgb(209,195,13)" rx="2" ry="2" />
<text  x="784.05" y="319.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (2 samples, 0.04%)</title><rect x="48.2" y="373" width="0.4" height="15.0" fill="rgb(248,162,6)" rx="2" ry="2" />
<text  x="51.15" y="383.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (5 samples, 0.09%)</title><rect x="43.0" y="373" width="1.1" height="15.0" fill="rgb(224,73,1)" rx="2" ry="2" />
<text  x="46.02" y="383.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;gms::inet_address, gms::inet_address, std::allocator&lt;gms::inet_address&gt;, std::__detail::_Identity, std::equal_to&lt;gms::inet_address&gt;, std::hash&lt;gms::inet_address&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert&lt;gms::inet_address const&amp;, std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;gms::inet_address, false&gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="1164.8" y="533" width="0.2" height="15.0" fill="rgb(222,52,49)" rx="2" ry="2" />
<text  x="1167.79" y="543.5" ></text>
</g>
<g >
<title>reader_permit::impl::on_permit_inactive (1 samples, 0.02%)</title><rect x="1014.2" y="309" width="0.2" height="15.0" fill="rgb(206,62,48)" rx="2" ry="2" />
<text  x="1017.19" y="319.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_M_reset (2 samples, 0.04%)</title><rect x="797.1" y="357" width="0.5" height="15.0" fill="rgb(252,215,48)" rx="2" ry="2" />
<text  x="800.11" y="367.5" ></text>
</g>
<g >
<title>seastar::internal::sharded_parallel_for_each (1 samples, 0.02%)</title><rect x="16.9" y="533" width="0.2" height="15.0" fill="rgb(225,10,32)" rx="2" ry="2" />
<text  x="19.92" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value_view, std::allocator&lt;cql3::raw_value_view&gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="663.0" y="549" width="0.3" height="15.0" fill="rgb(209,132,53)" rx="2" ry="2" />
<text  x="666.03" y="559.5" ></text>
</g>
<g >
<title>schema_registry::get (20 samples, 0.38%)</title><rect x="956.4" y="453" width="4.5" height="15.0" fill="rgb(249,53,49)" rx="2" ry="2" />
<text  x="959.41" y="463.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, cql3::statements::raw::modification_statement*, std::default_delete&lt;cql3::statements::raw::modification_statement&gt; &gt; (1 samples, 0.02%)</title><rect x="62.2" y="421" width="0.2" height="15.0" fill="rgb(240,195,54)" rx="2" ry="2" />
<text  x="65.21" y="431.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;void&gt; &gt;::invoke&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::mutate_locally (3 samples, 0.06%)</title><rect x="1128.4" y="277" width="0.7" height="15.0" fill="rgb(228,25,24)" rx="2" ry="2" />
<text  x="1131.42" y="287.5" ></text>
</g>
<g >
<title>ser::serializer&lt;ser::column_view&gt;::read&lt;seastar::simple_memory_input_stream&gt; (1 samples, 0.02%)</title><rect x="1122.8" y="293" width="0.3" height="15.0" fill="rgb(249,180,14)" rx="2" ry="2" />
<text  x="1125.85" y="303.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (2 samples, 0.04%)</title><rect x="240.9" y="197" width="0.5" height="15.0" fill="rgb(224,132,25)" rx="2" ry="2" />
<text  x="243.91" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_clear (3 samples, 0.06%)</title><rect x="574.7" y="453" width="0.6" height="15.0" fill="rgb(234,114,11)" rx="2" ry="2" />
<text  x="577.68" y="463.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.08%)</title><rect x="582.7" y="501" width="0.9" height="15.0" fill="rgb(245,224,48)" rx="2" ry="2" />
<text  x="585.71" y="511.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEENK4$_43clERKNSF_15binary_operatorEEUlRKNSF_12column_valueEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_17tuple_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlNSF_5tokenEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlSS_E_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_11conjunctionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_8constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_21unresolved_identifierEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_25column_mutation_attributeEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13function_callEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4castEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_15field_selectionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4nullEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13bind_variableEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_16untyped_constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_22collection_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_20usertype_constructorEE_EERS4_IJS14_SQ_ST_S11_S1C_S1G_S1K_S1O_S1S_S1W_S20_S24_S18_SX_S28_S2C_EEEJEEESt16integer_sequenceImJLm2EEEE14__visit_invokeES2H_S2J_ (100 samples, 1.89%)</title><rect x="876.3" y="469" width="22.3" height="15.0" fill="rgb(240,18,3)" rx="2" ry="2" />
<text  x="879.31" y="479.5" >_..</text>
</g>
<g >
<title>db::view::node_update_backlog::add_fetch (1 samples, 0.02%)</title><rect x="703.4" y="581" width="0.2" height="15.0" fill="rgb(245,199,5)" rx="2" ry="2" />
<text  x="706.41" y="591.5" ></text>
</g>
<g >
<title>list_reader_selector::~list_reader_selector (2 samples, 0.04%)</title><rect x="573.1" y="453" width="0.5" height="15.0" fill="rgb(235,186,46)" rx="2" ry="2" />
<text  x="576.12" y="463.5" ></text>
</g>
<g >
<title>cql3::expr::has_supporting_index (2 samples, 0.04%)</title><rect x="69.6" y="469" width="0.4" height="15.0" fill="rgb(215,204,7)" rx="2" ry="2" />
<text  x="72.57" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (7 samples, 0.13%)</title><rect x="205.0" y="293" width="1.6" height="15.0" fill="rgb(209,29,2)" rx="2" ry="2" />
<text  x="207.99" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_insert&lt;flat_mutation_reader&gt; (8 samples, 0.15%)</title><rect x="456.9" y="357" width="1.8" height="15.0" fill="rgb(212,188,22)" rx="2" ry="2" />
<text  x="459.88" y="367.5" ></text>
</g>
<g >
<title>_dl_relocate_object (1 samples, 0.02%)</title><rect x="79.2" y="677" width="0.2" height="15.0" fill="rgb(209,54,39)" rx="2" ry="2" />
<text  x="82.16" y="687.5" ></text>
</g>
<g >
<title>std::hash&lt;std::basic_string_view&lt;signed char, std::char_traits&lt;signed char&gt; &gt; &gt;::operator (5 samples, 0.09%)</title><rect x="720.6" y="405" width="1.1" height="15.0" fill="rgb(248,19,27)" rx="2" ry="2" />
<text  x="723.59" y="415.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (1 samples, 0.02%)</title><rect x="817.0" y="501" width="0.2" height="15.0" fill="rgb(212,163,34)" rx="2" ry="2" />
<text  x="819.97" y="511.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::visit&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (1 samples, 0.02%)</title><rect x="1134.0" y="245" width="0.2" height="15.0" fill="rgb(252,66,15)" rx="2" ry="2" />
<text  x="1137.00" y="255.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (2 samples, 0.04%)</title><rect x="607.9" y="517" width="0.5" height="15.0" fill="rgb(227,213,43)" rx="2" ry="2" />
<text  x="610.92" y="527.5" ></text>
</g>
<g >
<title>compound_type&lt; (9 samples, 0.17%)</title><rect x="902.0" y="469" width="2.0" height="15.0" fill="rgb(205,120,46)" rx="2" ry="2" />
<text  x="904.97" y="479.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_9c4051607141ccef88a5c0c6888f804fb0de85a9] (1 samples, 0.02%)</title><rect x="691.8" y="565" width="0.2" height="15.0" fill="rgb(205,39,39)" rx="2" ry="2" />
<text  x="694.81" y="575.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::raw::parsed_statement, std::default_delete&lt;cql3::statements::raw::parsed_statement&gt; &gt;::operator=&lt;cql3::statements::raw::update_statement, std::default_delete&lt;cql3::statements::raw::update_statement&gt; &gt; (1 samples, 0.02%)</title><rect x="62.4" y="469" width="0.3" height="15.0" fill="rgb(221,59,37)" rx="2" ry="2" />
<text  x="65.43" y="479.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::signal (1 samples, 0.02%)</title><rect x="558.2" y="373" width="0.2" height="15.0" fill="rgb(250,148,13)" rx="2" ry="2" />
<text  x="561.17" y="383.5" ></text>
</g>
<g >
<title>service::abstract_read_resolver::done (2 samples, 0.04%)</title><rect x="687.8" y="549" width="0.4" height="15.0" fill="rgb(210,99,46)" rx="2" ry="2" />
<text  x="690.79" y="559.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.08%)</title><rect x="923.6" y="469" width="0.9" height="15.0" fill="rgb(207,37,38)" rx="2" ry="2" />
<text  x="926.61" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="852.7" y="565" width="0.2" height="15.0" fill="rgb(231,12,22)" rx="2" ry="2" />
<text  x="855.67" y="575.5" ></text>
</g>
<g >
<title>cql3::prepared_statements_cache::find (32 samples, 0.61%)</title><rect x="717.2" y="533" width="7.2" height="15.0" fill="rgb(242,51,35)" rx="2" ry="2" />
<text  x="720.24" y="543.5" ></text>
</g>
<g >
<title>compound_type&lt; (1 samples, 0.02%)</title><rect x="901.5" y="485" width="0.2" height="15.0" fill="rgb(217,108,27)" rx="2" ry="2" />
<text  x="904.53" y="495.5" ></text>
</g>
<g >
<title>flat_mutation_reader::close (1 samples, 0.02%)</title><rect x="1165.5" y="485" width="0.2" height="15.0" fill="rgb(227,223,51)" rx="2" ry="2" />
<text  x="1168.46" y="495.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;void&gt;  (1 samples, 0.02%)</title><rect x="1134.0" y="453" width="0.2" height="15.0" fill="rgb(244,146,15)" rx="2" ry="2" />
<text  x="1137.00" y="463.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::clone (5 samples, 0.09%)</title><rect x="491.5" y="405" width="1.1" height="15.0" fill="rgb(224,100,13)" rx="2" ry="2" />
<text  x="494.46" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::free_span (1 samples, 0.02%)</title><rect x="1143.6" y="565" width="0.2" height="15.0" fill="rgb(212,3,36)" rx="2" ry="2" />
<text  x="1146.59" y="575.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (1 samples, 0.02%)</title><rect x="695.2" y="533" width="0.2" height="15.0" fill="rgb(224,202,49)" rx="2" ry="2" />
<text  x="698.15" y="543.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.04%)</title><rect x="467.6" y="405" width="0.4" height="15.0" fill="rgb(220,171,33)" rx="2" ry="2" />
<text  x="470.59" y="415.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (2 samples, 0.04%)</title><rect x="190.7" y="325" width="0.5" height="15.0" fill="rgb(235,131,28)" rx="2" ry="2" />
<text  x="193.71" y="335.5" ></text>
</g>
<g >
<title>utils::timed_rate_moving_average_and_histogram::mark&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; (6 samples, 0.11%)</title><rect x="665.3" y="565" width="1.3" height="15.0" fill="rgb(205,227,2)" rx="2" ry="2" />
<text  x="668.26" y="575.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.02%)</title><rect x="39.7" y="229" width="0.2" height="15.0" fill="rgb(237,117,22)" rx="2" ry="2" />
<text  x="42.67" y="239.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (1 samples, 0.02%)</title><rect x="74.7" y="469" width="0.2" height="15.0" fill="rgb(226,103,29)" rx="2" ry="2" />
<text  x="77.70" y="479.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (1 samples, 0.02%)</title><rect x="37.9" y="405" width="0.2" height="15.0" fill="rgb(231,162,48)" rx="2" ry="2" />
<text  x="40.89" y="415.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.02%)</title><rect x="1137.3" y="517" width="0.3" height="15.0" fill="rgb(230,29,41)" rx="2" ry="2" />
<text  x="1140.35" y="527.5" ></text>
</g>
<g >
<title>seastar::api_v3::and_newer::make_file_data_sink (1 samples, 0.02%)</title><rect x="676.0" y="549" width="0.2" height="15.0" fill="rgb(251,20,39)" rx="2" ry="2" />
<text  x="678.97" y="559.5" ></text>
</g>
<g >
<title>[unknown] (15 samples, 0.28%)</title><rect x="12.0" y="693" width="3.4" height="15.0" fill="rgb(215,56,31)" rx="2" ry="2" />
<text  x="15.01" y="703.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (4 samples, 0.08%)</title><rect x="1084.2" y="501" width="0.9" height="15.0" fill="rgb(217,64,8)" rx="2" ry="2" />
<text  x="1087.25" y="511.5" ></text>
</g>
<g >
<title>managed_bytes::operator= (2 samples, 0.04%)</title><rect x="919.2" y="501" width="0.4" height="15.0" fill="rgb(209,186,22)" rx="2" ry="2" />
<text  x="922.15" y="511.5" ></text>
</g>
<g >
<title>partition_snapshot::static_row (1 samples, 0.02%)</title><rect x="852.4" y="437" width="0.3" height="15.0" fill="rgb(241,145,8)" rx="2" ry="2" />
<text  x="855.44" y="447.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::statements::update_statement&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="73.4" y="533" width="0.2" height="15.0" fill="rgb(224,74,22)" rx="2" ry="2" />
<text  x="76.36" y="543.5" ></text>
</g>
<g >
<title>posix_memalign (1 samples, 0.02%)</title><rect x="241.4" y="197" width="0.2" height="15.0" fill="rgb(253,84,5)" rx="2" ry="2" />
<text  x="244.36" y="207.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_istream (1 samples, 0.02%)</title><rect x="47.9" y="357" width="0.3" height="15.0" fill="rgb(215,175,1)" rx="2" ry="2" />
<text  x="50.93" y="367.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (1 samples, 0.02%)</title><rect x="1133.8" y="501" width="0.2" height="15.0" fill="rgb(235,75,36)" rx="2" ry="2" />
<text  x="1136.78" y="511.5" ></text>
</g>
<g >
<title>std::hash&lt;std::basic_string_view&lt;signed char, std::char_traits&lt;signed char&gt; &gt; &gt;::operator (1 samples, 0.02%)</title><rect x="72.9" y="469" width="0.2" height="15.0" fill="rgb(214,151,23)" rx="2" ry="2" />
<text  x="75.92" y="479.5" ></text>
</g>
<g >
<title>seastar::reactor::do_run (4,856 samples, 91.81%)</title><rect x="84.3" y="629" width="1083.4" height="15.0" fill="rgb(229,11,3)" rx="2" ry="2" />
<text  x="87.29" y="639.5" >seastar::reactor::do_run</text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::~merging_reader (37 samples, 0.70%)</title><rect x="569.3" y="485" width="8.3" height="15.0" fill="rgb(206,164,32)" rx="2" ry="2" />
<text  x="572.32" y="495.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, cql3::statements::raw::modification_statement*, false&gt;::_M_head (1 samples, 0.02%)</title><rect x="62.2" y="405" width="0.2" height="15.0" fill="rgb(253,220,28)" rx="2" ry="2" />
<text  x="65.21" y="415.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_slice_or_needs_filtering (5 samples, 0.09%)</title><rect x="931.2" y="485" width="1.1" height="15.0" fill="rgb(242,66,52)" rx="2" ry="2" />
<text  x="934.20" y="495.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (552 samples, 10.44%)</title><rect x="174.7" y="421" width="123.1" height="15.0" fill="rgb(235,131,23)" rx="2" ry="2" />
<text  x="177.65" y="431.5" >mutation_reader..</text>
</g>
<g >
<title>seastar::gate::enter (1 samples, 0.02%)</title><rect x="1018.7" y="325" width="0.2" height="15.0" fill="rgb(238,77,41)" rx="2" ry="2" />
<text  x="1021.66" y="335.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (3 samples, 0.06%)</title><rect x="52.4" y="277" width="0.7" height="15.0" fill="rgb(245,47,1)" rx="2" ry="2" />
<text  x="55.39" y="287.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (1 samples, 0.02%)</title><rect x="1112.8" y="501" width="0.2" height="15.0" fill="rgb(237,78,50)" rx="2" ry="2" />
<text  x="1115.81" y="511.5" ></text>
</g>
<g >
<title>atomic_cell::make_live (1 samples, 0.02%)</title><rect x="856.5" y="357" width="0.2" height="15.0" fill="rgb(216,45,30)" rx="2" ry="2" />
<text  x="859.46" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::vector (7 samples, 0.13%)</title><rect x="156.4" y="517" width="1.5" height="15.0" fill="rgb(250,154,24)" rx="2" ry="2" />
<text  x="159.36" y="527.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, flat_mutation_reader::impl::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (485 samples, 9.17%)</title><rect x="325.7" y="405" width="108.2" height="15.0" fill="rgb(239,43,20)" rx="2" ry="2" />
<text  x="328.69" y="415.5" >std::__invoke..</text>
</g>
<g >
<title>operator new (2 samples, 0.04%)</title><rect x="602.6" y="517" width="0.4" height="15.0" fill="rgb(254,25,4)" rx="2" ry="2" />
<text  x="605.57" y="527.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.09%)</title><rect x="925.6" y="469" width="1.1" height="15.0" fill="rgb(225,4,34)" rx="2" ry="2" />
<text  x="928.62" y="479.5" ></text>
</g>
<g >
<title>std::construct_at&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (2 samples, 0.04%)</title><rect x="24.1" y="309" width="0.4" height="15.0" fill="rgb(219,78,21)" rx="2" ry="2" />
<text  x="27.06" y="319.5" ></text>
</g>
<g >
<title>sstables::sstable::write_filter (1 samples, 0.02%)</title><rect x="676.0" y="341" width="0.2" height="15.0" fill="rgb(247,228,20)" rx="2" ry="2" />
<text  x="678.97" y="351.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_4findERKNS5_10expressionENS5_6oper_tEEUlRS7_E_EES8_SE_T_EUlSG_E_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_8constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_11conjunctionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_12column_valueEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_5tokenEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13function_callEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4castEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_15field_selectionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4nullEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13bind_variableEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_16untyped_constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_17tuple_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_22collection_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSO_S6_SS_SW_S10_S14_S18_S1C_S1G_S1K_S1O_S1S_SK_S1W_S20_S24_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES29_S2C_ (2 samples, 0.04%)</title><rect x="640.5" y="533" width="0.4" height="15.0" fill="rgb(244,103,37)" rx="2" ry="2" />
<text  x="643.49" y="543.5" ></text>
</g>
<g >
<title>schema::column_at (3 samples, 0.06%)</title><rect x="246.5" y="229" width="0.7" height="15.0" fill="rgb(249,36,39)" rx="2" ry="2" />
<text  x="249.49" y="239.5" ></text>
</g>
<g >
<title>antlr3::IntStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::consume (4 samples, 0.08%)</title><rect x="31.4" y="341" width="0.9" height="15.0" fill="rgb(209,184,44)" rx="2" ry="2" />
<text  x="34.42" y="351.5" ></text>
</g>
<g >
<title>locator::calculate_effective_replication_map (1 samples, 0.02%)</title><rect x="1164.8" y="581" width="0.2" height="15.0" fill="rgb(215,125,7)" rx="2" ry="2" />
<text  x="1167.79" y="591.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::execute (32 samples, 0.61%)</title><rect x="681.1" y="565" width="7.1" height="15.0" fill="rgb(231,50,31)" rx="2" ry="2" />
<text  x="684.10" y="575.5" ></text>
</g>
<g >
<title>ser::set_size&lt;bytes_ostream, partition_key&gt; (1 samples, 0.02%)</title><rect x="107.3" y="469" width="0.2" height="15.0" fill="rgb(223,73,17)" rx="2" ry="2" />
<text  x="110.27" y="479.5" ></text>
</g>
<g >
<title>memtable::make_flat_reader (1 samples, 0.02%)</title><rect x="447.7" y="453" width="0.3" height="15.0" fill="rgb(236,184,36)" rx="2" ry="2" />
<text  x="450.73" y="463.5" ></text>
</g>
<g >
<title>reader_permit::impl::on_admission (8 samples, 0.15%)</title><rect x="126.9" y="501" width="1.8" height="15.0" fill="rgb(213,112,32)" rx="2" ry="2" />
<text  x="129.91" y="511.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::small_vector (4 samples, 0.08%)</title><rect x="464.7" y="357" width="0.9" height="15.0" fill="rgb(246,35,51)" rx="2" ry="2" />
<text  x="467.69" y="367.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_Optional_payload_base (1 samples, 0.02%)</title><rect x="157.7" y="485" width="0.2" height="15.0" fill="rgb(239,132,23)" rx="2" ry="2" />
<text  x="160.70" y="495.5" ></text>
</g>
<g >
<title>basic_atomic_cell_view&lt; (1 samples, 0.02%)</title><rect x="676.4" y="341" width="0.2" height="15.0" fill="rgb(243,171,45)" rx="2" ry="2" />
<text  x="679.41" y="351.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (1 samples, 0.02%)</title><rect x="622.4" y="581" width="0.2" height="15.0" fill="rgb(211,161,6)" rx="2" ry="2" />
<text  x="625.42" y="591.5" ></text>
</g>
<g >
<title>std::default_delete&lt;cql3::expr::expression::impl&gt;::operator (3 samples, 0.06%)</title><rect x="889.7" y="405" width="0.7" height="15.0" fill="rgb(237,142,9)" rx="2" ry="2" />
<text  x="892.70" y="415.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (1 samples, 0.02%)</title><rect x="285.5" y="341" width="0.3" height="15.0" fill="rgb(211,32,26)" rx="2" ry="2" />
<text  x="288.53" y="351.5" ></text>
</g>
<g >
<title>database::find_column_family (1 samples, 0.02%)</title><rect x="74.7" y="501" width="0.2" height="15.0" fill="rgb(223,205,3)" rx="2" ry="2" />
<text  x="77.70" y="511.5" ></text>
</g>
<g >
<title>sstables::compact_sstables (1 samples, 0.02%)</title><rect x="1133.8" y="549" width="0.2" height="15.0" fill="rgb(220,67,27)" rx="2" ry="2" />
<text  x="1136.78" y="559.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::clear (10 samples, 0.19%)</title><rect x="399.8" y="293" width="2.2" height="15.0" fill="rgb(232,83,20)" rx="2" ry="2" />
<text  x="402.76" y="303.5" ></text>
</g>
<g >
<title>std::forward_as_tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const&amp;, auth::resource, service::client_state::has_column_family_access (1 samples, 0.02%)</title><rect x="77.6" y="565" width="0.2" height="15.0" fill="rgb(222,203,33)" rx="2" ry="2" />
<text  x="80.60" y="575.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (1 samples, 0.02%)</title><rect x="859.1" y="325" width="0.3" height="15.0" fill="rgb(244,195,28)" rx="2" ry="2" />
<text  x="862.14" y="335.5" ></text>
</g>
<g >
<title>antlr3::CyclicDFA&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, cql3_parser::CqlLexer&gt;::predict&lt;cql3_parser::CqlLexerCyclicDFA44&gt; (1 samples, 0.02%)</title><rect x="25.6" y="357" width="0.2" height="15.0" fill="rgb(214,159,29)" rx="2" ry="2" />
<text  x="28.62" y="367.5" ></text>
</g>
<g >
<title>logalloc::basic_region_impl::set_reclaiming_enabled (1 samples, 0.02%)</title><rect x="261.7" y="309" width="0.2" height="15.0" fill="rgb(251,73,41)" rx="2" ry="2" />
<text  x="264.66" y="319.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (4 samples, 0.08%)</title><rect x="43.2" y="277" width="0.9" height="15.0" fill="rgb(229,186,21)" rx="2" ry="2" />
<text  x="46.24" y="287.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::untyped_constant&gt; (9 samples, 0.17%)</title><rect x="50.2" y="373" width="2.0" height="15.0" fill="rgb(230,149,6)" rx="2" ry="2" />
<text  x="53.16" y="383.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (3 samples, 0.06%)</title><rect x="52.4" y="245" width="0.7" height="15.0" fill="rgb(213,104,10)" rx="2" ry="2" />
<text  x="55.39" y="255.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.02%)</title><rect x="54.8" y="277" width="0.3" height="15.0" fill="rgb(245,39,42)" rx="2" ry="2" />
<text  x="57.84" y="287.5" ></text>
</g>
<g >
<title>schema::column_at (6 samples, 0.11%)</title><rect x="251.0" y="197" width="1.3" height="15.0" fill="rgb(211,8,5)" rx="2" ry="2" />
<text  x="253.95" y="207.5" ></text>
</g>
<g >
<title>remove_or_mark_as_unique_owner (1 samples, 0.02%)</title><rect x="1134.0" y="341" width="0.2" height="15.0" fill="rgb(249,9,21)" rx="2" ry="2" />
<text  x="1137.00" y="351.5" ></text>
</g>
<g >
<title>utils::phased_barrier::start (2 samples, 0.04%)</title><rect x="1022.7" y="357" width="0.4" height="15.0" fill="rgb(243,218,48)" rx="2" ry="2" />
<text  x="1025.67" y="367.5" ></text>
</g>
<g >
<title>service::storage_proxy::send_to_live_endpoints (9 samples, 0.17%)</title><rect x="1127.1" y="357" width="2.0" height="15.0" fill="rgb(227,93,23)" rx="2" ry="2" />
<text  x="1130.08" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.04%)</title><rect x="845.7" y="517" width="0.5" height="15.0" fill="rgb(216,181,12)" rx="2" ry="2" />
<text  x="848.75" y="527.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::then_wrapped_nrvo&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (11 samples, 0.21%)</title><rect x="817.6" y="501" width="2.5" height="15.0" fill="rgb(216,60,37)" rx="2" ry="2" />
<text  x="820.64" y="511.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, seastar::shared_ptr&lt;service::abstract_write_response_handler&gt; &gt;, std::allocator&lt;std::pair&lt;unsigned long const, seastar::shared_ptr&lt;service::abstract_write_response_handler&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (1 samples, 0.02%)</title><rect x="1126.9" y="325" width="0.2" height="15.0" fill="rgb(221,31,42)" rx="2" ry="2" />
<text  x="1129.86" y="335.5" ></text>
</g>
<g >
<title>rows_entry::tri_compare::operator (1 samples, 0.02%)</title><rect x="102.4" y="437" width="0.2" height="15.0" fill="rgb(208,166,0)" rx="2" ry="2" />
<text  x="105.37" y="447.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::check_access (10 samples, 0.19%)</title><rect x="75.6" y="581" width="2.2" height="15.0" fill="rgb(253,227,8)" rx="2" ry="2" />
<text  x="78.59" y="591.5" ></text>
</g>
<g >
<title>table::as_mutation_source (8 samples, 0.15%)</title><rect x="615.3" y="533" width="1.8" height="15.0" fill="rgb(234,90,42)" rx="2" ry="2" />
<text  x="618.28" y="543.5" ></text>
</g>
<g >
<title>cql3::statements::raw::modification_statement::prepare (42 samples, 0.79%)</title><rect x="64.4" y="549" width="9.4" height="15.0" fill="rgb(219,129,14)" rx="2" ry="2" />
<text  x="67.44" y="559.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;::basic_sstring (2 samples, 0.04%)</title><rect x="66.4" y="421" width="0.5" height="15.0" fill="rgb(217,143,53)" rx="2" ry="2" />
<text  x="69.45" y="431.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take (2 samples, 0.04%)</title><rect x="684.2" y="533" width="0.5" height="15.0" fill="rgb(231,212,37)" rx="2" ry="2" />
<text  x="687.22" y="543.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (1 samples, 0.02%)</title><rect x="1134.0" y="437" width="0.2" height="15.0" fill="rgb(246,56,31)" rx="2" ry="2" />
<text  x="1137.00" y="447.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.02%)</title><rect x="24.9" y="373" width="0.3" height="15.0" fill="rgb(246,147,47)" rx="2" ry="2" />
<text  x="27.95" y="383.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (1 samples, 0.02%)</title><rect x="655.4" y="565" width="0.3" height="15.0" fill="rgb(246,25,8)" rx="2" ry="2" />
<text  x="658.44" y="575.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (2 samples, 0.04%)</title><rect x="273.5" y="293" width="0.4" height="15.0" fill="rgb(226,193,24)" rx="2" ry="2" />
<text  x="276.49" y="303.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.02%)</title><rect x="11.1" y="613" width="0.2" height="15.0" fill="rgb(236,218,8)" rx="2" ry="2" />
<text  x="14.12" y="623.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (2 samples, 0.04%)</title><rect x="317.9" y="421" width="0.4" height="15.0" fill="rgb(211,137,50)" rx="2" ry="2" />
<text  x="320.88" y="431.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_map&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::at&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt; &gt; (22 samples, 0.42%)</title><rect x="808.5" y="437" width="4.9" height="15.0" fill="rgb(250,164,14)" rx="2" ry="2" />
<text  x="811.49" y="447.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::lsa_partition_reader::reset_state (1 samples, 0.02%)</title><rect x="80.9" y="405" width="0.3" height="15.0" fill="rgb(235,132,31)" rx="2" ry="2" />
<text  x="83.95" y="415.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::maybe_drop_from (1 samples, 0.02%)</title><rect x="403.3" y="293" width="0.3" height="15.0" fill="rgb(249,126,52)" rx="2" ry="2" />
<text  x="406.33" y="303.5" ></text>
</g>
<g >
<title>utils::sequenced_set&lt;gms::inet_address&gt;::insert (1 samples, 0.02%)</title><rect x="1164.8" y="549" width="0.2" height="15.0" fill="rgb(253,171,40)" rx="2" ry="2" />
<text  x="1167.79" y="559.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (2 samples, 0.04%)</title><rect x="37.2" y="357" width="0.5" height="15.0" fill="rgb(230,33,8)" rx="2" ry="2" />
<text  x="40.22" y="367.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (3 samples, 0.06%)</title><rect x="676.4" y="421" width="0.7" height="15.0" fill="rgb(226,205,37)" rx="2" ry="2" />
<text  x="679.41" y="431.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::raw::parsed_statement, std::default_delete&lt;cql3::statements::raw::parsed_statement&gt; &gt;::operator bool (1 samples, 0.02%)</title><rect x="63.8" y="485" width="0.2" height="15.0" fill="rgb(246,139,50)" rx="2" ry="2" />
<text  x="66.77" y="495.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::close (1 samples, 0.02%)</title><rect x="1165.5" y="533" width="0.2" height="15.0" fill="rgb(212,29,9)" rx="2" ry="2" />
<text  x="1168.46" y="543.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextTokenStr (1 samples, 0.02%)</title><rect x="35.0" y="389" width="0.2" height="15.0" fill="rgb(251,7,4)" rx="2" ry="2" />
<text  x="37.99" y="399.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_destroy_data (1 samples, 0.02%)</title><rect x="609.3" y="501" width="0.2" height="15.0" fill="rgb(211,155,4)" rx="2" ry="2" />
<text  x="612.26" y="511.5" ></text>
</g>
<g >
<title>_ZSt5applyIZN7seastar8internal12do_with_implISt8optionalIN4auth8resourceEEZNK7service12client_state20check_has_permissionENS4_12command_descEE3$_7JEEEDaOT_OT0_DpOT1_EUlDpOT_E_St5tupleIJOS6_EEEDcSC_SE_ (13 samples, 0.25%)</title><rect x="766.8" y="421" width="2.9" height="15.0" fill="rgb(214,138,9)" rx="2" ry="2" />
<text  x="769.77" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="70.7" y="389" width="0.2" height="15.0" fill="rgb(213,229,18)" rx="2" ry="2" />
<text  x="73.68" y="399.5" ></text>
</g>
<g >
<title>fmt::v7::detail::value&lt;fmt::v7::basic_printf_context&lt;fmt::v7::detail::buffer_appender&lt;char&gt;, char&gt; &gt;::format_custom_arg&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, fmt::v7::detail::fallback_formatter&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, char, void&gt; &gt; (2 samples, 0.04%)</title><rect x="18.3" y="581" width="0.4" height="15.0" fill="rgb(241,129,23)" rx="2" ry="2" />
<text  x="21.25" y="591.5" ></text>
</g>
<g >
<title>seastar::internal::uninitialized_wrapper_base&lt;service::storage_proxy_coordinator_query_result, false&gt;::uninitialized_set&lt;service::storage_proxy_coordinator_query_result&gt; (1 samples, 0.02%)</title><rect x="1142.7" y="565" width="0.2" height="15.0" fill="rgb(240,118,42)" rx="2" ry="2" />
<text  x="1145.70" y="575.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;db::cf_holder&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="1125.5" y="373" width="0.2" height="15.0" fill="rgb(208,182,11)" rx="2" ry="2" />
<text  x="1128.52" y="383.5" ></text>
</g>
<g >
<title>seastar::file::list_directory (1 samples, 0.02%)</title><rect x="677.8" y="517" width="0.2" height="15.0" fill="rgb(214,58,48)" rx="2" ry="2" />
<text  x="680.75" y="527.5" ></text>
</g>
<g >
<title>cql3::raw_value_view::raw_value_view (8 samples, 0.15%)</title><rect x="890.6" y="421" width="1.8" height="15.0" fill="rgb(238,54,42)" rx="2" ry="2" />
<text  x="893.59" y="431.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (1 samples, 0.02%)</title><rect x="1140.2" y="581" width="0.3" height="15.0" fill="rgb(221,68,14)" rx="2" ry="2" />
<text  x="1143.25" y="591.5" ></text>
</g>
<g >
<title>double_decker&lt;long, memtable_entry, dht::raw_token_less_comparator, dht::ring_position_comparator, 16,  (6 samples, 0.11%)</title><rect x="1118.2" y="309" width="1.3" height="15.0" fill="rgb(242,67,38)" rx="2" ry="2" />
<text  x="1121.16" y="319.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::do_merge_with (5 samples, 0.09%)</title><rect x="70.2" y="421" width="1.2" height="15.0" fill="rgb(247,41,20)" rx="2" ry="2" />
<text  x="73.24" y="431.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::emplace&lt;atomic_cell_or_collection, seastar::optimized_optional&lt;cell_hash&gt; &gt; (1 samples, 0.02%)</title><rect x="16.2" y="565" width="0.3" height="15.0" fill="rgb(224,215,12)" rx="2" ry="2" />
<text  x="19.25" y="575.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit_slot&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::walking_visitor&lt;row::for_each_cell&lt;(anonymous namespace)::write_row_cells&lt;ser::deletable_row__cells&lt;bytes_ostream&gt; &gt; (1 samples, 0.02%)</title><rect x="1129.5" y="213" width="0.3" height="15.0" fill="rgb(250,150,52)" rx="2" ry="2" />
<text  x="1132.54" y="223.5" ></text>
</g>
<g >
<title>operator new (8 samples, 0.15%)</title><rect x="1102.3" y="501" width="1.8" height="15.0" fill="rgb(206,9,28)" rx="2" ry="2" />
<text  x="1105.32" y="511.5" ></text>
</g>
<g >
<title>database::query (12 samples, 0.23%)</title><rect x="102.8" y="597" width="2.7" height="15.0" fill="rgb(240,51,43)" rx="2" ry="2" />
<text  x="105.81" y="607.5" ></text>
</g>
<g >
<title>antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;::RecognizerType&lt;antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::RecognizerType (1 samples, 0.02%)</title><rect x="20.5" y="485" width="0.2" height="15.0" fill="rgb(214,149,12)" rx="2" ry="2" />
<text  x="23.49" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (2 samples, 0.04%)</title><rect x="24.1" y="277" width="0.4" height="15.0" fill="rgb(211,172,25)" rx="2" ry="2" />
<text  x="27.06" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.04%)</title><rect x="506.2" y="277" width="0.4" height="15.0" fill="rgb(250,9,15)" rx="2" ry="2" />
<text  x="509.18" y="287.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::local (1 samples, 0.02%)</title><rect x="832.4" y="517" width="0.2" height="15.0" fill="rgb(217,144,48)" rx="2" ry="2" />
<text  x="835.36" y="527.5" ></text>
</g>
<g >
<title>query::querier&lt; (1,758 samples, 33.24%)</title><rect x="160.4" y="533" width="392.2" height="15.0" fill="rgb(230,22,3)" rx="2" ry="2" />
<text  x="163.37" y="543.5" >query::querier&lt;</text>
</g>
<g >
<title>make_map_value (1 samples, 0.02%)</title><rect x="107.1" y="485" width="0.2" height="15.0" fill="rgb(253,191,17)" rx="2" ry="2" />
<text  x="110.05" y="495.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::~_Variant_storage (1 samples, 0.02%)</title><rect x="611.9" y="533" width="0.3" height="15.0" fill="rgb(209,118,26)" rx="2" ry="2" />
<text  x="614.94" y="543.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="855.1" y="357" width="0.2" height="15.0" fill="rgb(214,78,45)" rx="2" ry="2" />
<text  x="858.12" y="367.5" ></text>
</g>
<g >
<title>global_schema_ptr::get (1 samples, 0.02%)</title><rect x="1018.9" y="357" width="0.2" height="15.0" fill="rgb(205,201,18)" rx="2" ry="2" />
<text  x="1021.88" y="367.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::~_Deque_base (5 samples, 0.09%)</title><rect x="609.7" y="485" width="1.1" height="15.0" fill="rgb(227,61,35)" rx="2" ry="2" />
<text  x="612.71" y="495.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.04%)</title><rect x="104.4" y="581" width="0.4" height="15.0" fill="rgb(236,39,37)" rx="2" ry="2" />
<text  x="107.37" y="591.5" ></text>
</g>
<g >
<title>seastar::internal::future_base::set_coroutine (1 samples, 0.02%)</title><rect x="962.4" y="453" width="0.3" height="15.0" fill="rgb(222,183,6)" rx="2" ry="2" />
<text  x="965.43" y="463.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::make_ready&lt; (1 samples, 0.02%)</title><rect x="648.7" y="581" width="0.3" height="15.0" fill="rgb(206,72,10)" rx="2" ry="2" />
<text  x="651.75" y="591.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::restrictions::multi_column_restriction&gt;::~shared_ptr (2 samples, 0.04%)</title><rect x="642.7" y="565" width="0.5" height="15.0" fill="rgb(214,189,0)" rx="2" ry="2" />
<text  x="645.72" y="575.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (2 samples, 0.04%)</title><rect x="585.8" y="485" width="0.5" height="15.0" fill="rgb(247,83,12)" rx="2" ry="2" />
<text  x="588.83" y="495.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt;::_M_reset (1 samples, 0.02%)</title><rect x="516.0" y="389" width="0.2" height="15.0" fill="rgb(219,1,34)" rx="2" ry="2" />
<text  x="519.00" y="399.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;void&gt;  (3 samples, 0.06%)</title><rect x="72.2" y="469" width="0.7" height="15.0" fill="rgb(242,186,53)" rx="2" ry="2" />
<text  x="75.25" y="479.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_Optional_payload_base (2 samples, 0.04%)</title><rect x="781.5" y="293" width="0.4" height="15.0" fill="rgb(207,29,52)" rx="2" ry="2" />
<text  x="784.50" y="303.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_partition_key_ranges (7 samples, 0.13%)</title><rect x="854.2" y="469" width="1.6" height="15.0" fill="rgb(237,59,43)" rx="2" ry="2" />
<text  x="857.23" y="479.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.08%)</title><rect x="792.9" y="341" width="0.9" height="15.0" fill="rgb(222,173,15)" rx="2" ry="2" />
<text  x="795.87" y="351.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (1 samples, 0.02%)</title><rect x="429.7" y="309" width="0.2" height="15.0" fill="rgb(237,121,15)" rx="2" ry="2" />
<text  x="432.66" y="319.5" ></text>
</g>
<g >
<title>db::schema_tables::recalculate_schema_version (1 samples, 0.02%)</title><rect x="17.1" y="549" width="0.3" height="15.0" fill="rgb(244,153,5)" rx="2" ry="2" />
<text  x="20.14" y="559.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::operation::set_value, cql3::expr::expression&amp;&gt; (5 samples, 0.09%)</title><rect x="56.2" y="405" width="1.1" height="15.0" fill="rgb(238,170,35)" rx="2" ry="2" />
<text  x="59.18" y="415.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.08%)</title><rect x="1151.2" y="485" width="0.9" height="15.0" fill="rgb(252,197,22)" rx="2" ry="2" />
<text  x="1154.18" y="495.5" ></text>
</g>
<g >
<title>auth::permissions_cache::get (4 samples, 0.08%)</title><rect x="76.3" y="437" width="0.9" height="15.0" fill="rgb(205,184,16)" rx="2" ry="2" />
<text  x="79.26" y="447.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_construct&lt;interval_bound&lt;dht::ring_position&gt; const&amp;&gt; (6 samples, 0.11%)</title><rect x="1024.2" y="373" width="1.4" height="15.0" fill="rgb(233,125,32)" rx="2" ry="2" />
<text  x="1027.23" y="383.5" ></text>
</g>
<g >
<title>partition_snapshot::~partition_snapshot (4 samples, 0.08%)</title><rect x="563.7" y="373" width="0.9" height="15.0" fill="rgb(227,99,11)" rx="2" ry="2" />
<text  x="566.75" y="383.5" ></text>
</g>
<g >
<title>service::migration_manager::announce_new_column_family (1 samples, 0.02%)</title><rect x="677.1" y="453" width="0.2" height="15.0" fill="rgb(216,217,20)" rx="2" ry="2" />
<text  x="680.08" y="463.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt; &gt;  (1 samples, 0.02%)</title><rect x="70.5" y="373" width="0.2" height="15.0" fill="rgb(236,58,1)" rx="2" ry="2" />
<text  x="73.46" y="383.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (3 samples, 0.06%)</title><rect x="52.4" y="197" width="0.7" height="15.0" fill="rgb(246,115,38)" rx="2" ry="2" />
<text  x="55.39" y="207.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (5 samples, 0.09%)</title><rect x="745.1" y="437" width="1.1" height="15.0" fill="rgb(221,77,24)" rx="2" ry="2" />
<text  x="748.13" y="447.5" ></text>
</g>
<g >
<title>db::is_datacenter_local (1 samples, 0.02%)</title><rect x="965.3" y="437" width="0.3" height="15.0" fill="rgb(253,130,33)" rx="2" ry="2" />
<text  x="968.33" y="447.5" ></text>
</g>
<g >
<title>cql3::single_column_relation::single_column_relation (1 samples, 0.02%)</title><rect x="58.9" y="357" width="0.2" height="15.0" fill="rgb(208,5,15)" rx="2" ry="2" />
<text  x="61.86" y="367.5" ></text>
</g>
<g >
<title>sstables::mc::writer::write_clustered&lt;clustering_row&gt; (4 samples, 0.08%)</title><rect x="81.2" y="485" width="0.9" height="15.0" fill="rgb(222,205,29)" rx="2" ry="2" />
<text  x="84.17" y="495.5" ></text>
</g>
<g >
<title>init_cpu_features.constprop.0 (1 samples, 0.02%)</title><rect x="1180.6" y="725" width="0.3" height="15.0" fill="rgb(222,227,41)" rx="2" ry="2" />
<text  x="1183.63" y="735.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_destroy_data_aux (2 samples, 0.04%)</title><rect x="401.5" y="261" width="0.5" height="15.0" fill="rgb(216,193,3)" rx="2" ry="2" />
<text  x="404.55" y="271.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_9has_tokenERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES28_S2B_ (1 samples, 0.02%)</title><rect x="873.9" y="501" width="0.2" height="15.0" fill="rgb(205,82,46)" rx="2" ry="2" />
<text  x="876.86" y="511.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="71.4" y="389" width="0.2" height="15.0" fill="rgb(217,129,27)" rx="2" ry="2" />
<text  x="74.35" y="399.5" ></text>
</g>
<g >
<title>ser::qr_clustered_row__cells&lt;bytes_ostream&gt;::start_cells (3 samples, 0.06%)</title><rect x="368.8" y="277" width="0.6" height="15.0" fill="rgb(209,126,54)" rx="2" ry="2" />
<text  x="371.75" y="287.5" ></text>
</g>
<g >
<title>partition_entry::evict (1 samples, 0.02%)</title><rect x="15.8" y="645" width="0.2" height="15.0" fill="rgb(216,72,21)" rx="2" ry="2" />
<text  x="18.80" y="655.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;11ul, cql3::expr::untyped_constant&gt; (3 samples, 0.06%)</title><rect x="51.5" y="293" width="0.7" height="15.0" fill="rgb(210,62,34)" rx="2" ry="2" />
<text  x="54.50" y="303.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (1 samples, 0.02%)</title><rect x="62.7" y="485" width="0.2" height="15.0" fill="rgb(223,189,19)" rx="2" ry="2" />
<text  x="65.65" y="495.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;std::_List_iterator&lt;flat_mutation_reader&gt;, mutation_reader_merger::close (69 samples, 1.30%)</title><rect x="553.3" y="453" width="15.4" height="15.0" fill="rgb(229,110,22)" rx="2" ry="2" />
<text  x="556.26" y="463.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (2 samples, 0.04%)</title><rect x="295.1" y="357" width="0.5" height="15.0" fill="rgb(230,141,17)" rx="2" ry="2" />
<text  x="298.13" y="367.5" ></text>
</g>
<g >
<title>frozen_mutation::unfreeze (1 samples, 0.02%)</title><rect x="106.4" y="581" width="0.2" height="15.0" fill="rgb(252,8,54)" rx="2" ry="2" />
<text  x="109.38" y="591.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (1 samples, 0.02%)</title><rect x="779.0" y="325" width="0.3" height="15.0" fill="rgb(220,217,49)" rx="2" ry="2" />
<text  x="782.04" y="335.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::entry::entry (6 samples, 0.11%)</title><rect x="1006.6" y="293" width="1.3" height="15.0" fill="rgb(218,112,22)" rx="2" ry="2" />
<text  x="1009.61" y="303.5" ></text>
</g>
<g >
<title>logalloc::region_impl::free (1 samples, 0.02%)</title><rect x="1134.0" y="197" width="0.2" height="15.0" fill="rgb(223,146,22)" rx="2" ry="2" />
<text  x="1137.00" y="207.5" ></text>
</g>
<g >
<title>read_page&lt;(anonymous namespace)::mutation_query_result_builder&gt; (1 samples, 0.02%)</title><rect x="105.9" y="405" width="0.3" height="15.0" fill="rgb(220,140,12)" rx="2" ry="2" />
<text  x="108.93" y="415.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;void&gt;  (1 samples, 0.02%)</title><rect x="16.9" y="437" width="0.2" height="15.0" fill="rgb(221,88,25)" rx="2" ry="2" />
<text  x="19.92" y="447.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (1 samples, 0.02%)</title><rect x="623.1" y="549" width="0.2" height="15.0" fill="rgb(208,200,2)" rx="2" ry="2" />
<text  x="626.09" y="559.5" ></text>
</g>
<g >
<title>seastar::file_stat (1 samples, 0.02%)</title><rect x="850.0" y="437" width="0.2" height="15.0" fill="rgb(247,56,53)" rx="2" ry="2" />
<text  x="852.99" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::vector (2 samples, 0.04%)</title><rect x="1112.4" y="517" width="0.4" height="15.0" fill="rgb(246,119,7)" rx="2" ry="2" />
<text  x="1115.36" y="527.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::add_raw_update (5 samples, 0.09%)</title><rect x="45.9" y="405" width="1.1" height="15.0" fill="rgb(211,14,52)" rx="2" ry="2" />
<text  x="48.92" y="415.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;service::storage_proxy_coordinator_query_result&gt;::set_urgent_state (14 samples, 0.26%)</title><rect x="672.2" y="581" width="3.1" height="15.0" fill="rgb(228,117,14)" rx="2" ry="2" />
<text  x="675.17" y="591.5" ></text>
</g>
<g >
<title>database::find_column_family (2 samples, 0.04%)</title><rect x="953.5" y="453" width="0.5" height="15.0" fill="rgb(223,124,32)" rx="2" ry="2" />
<text  x="956.51" y="463.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (1 samples, 0.02%)</title><rect x="58.2" y="405" width="0.2" height="15.0" fill="rgb(244,227,11)" rx="2" ry="2" />
<text  x="61.19" y="415.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::query_options, db::consistency_level&amp;, std::vector&lt;cql3::raw_value, std::allocator&lt;cql3::raw_value&gt; &gt;, cql3::query_options::specific_options&gt; (31 samples, 0.59%)</title><rect x="837.7" y="549" width="6.9" height="15.0" fill="rgb(216,173,18)" rx="2" ry="2" />
<text  x="840.72" y="559.5" ></text>
</g>
<g >
<title>antlr3::Lexer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchc (2 samples, 0.04%)</title><rect x="32.3" y="341" width="0.5" height="15.0" fill="rgb(211,52,26)" rx="2" ry="2" />
<text  x="35.31" y="351.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="45.3" y="389" width="0.2" height="15.0" fill="rgb(252,212,47)" rx="2" ry="2" />
<text  x="48.25" y="399.5" ></text>
</g>
<g >
<title>mutation_querier::consume (2 samples, 0.04%)</title><rect x="676.4" y="373" width="0.5" height="15.0" fill="rgb(233,189,3)" rx="2" ry="2" />
<text  x="679.41" y="383.5" ></text>
</g>
<g >
<title>nonwrapping_interval&lt;clustering_key_prefix&gt;::make_open_ended_both_sides (12 samples, 0.23%)</title><rect x="1088.3" y="485" width="2.6" height="15.0" fill="rgb(236,97,5)" rx="2" ry="2" />
<text  x="1091.26" y="495.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reclaiming_disabled&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::get_static_row (12 samples, 0.23%)</title><rect x="285.8" y="325" width="2.6" height="15.0" fill="rgb(222,59,4)" rx="2" ry="2" />
<text  x="288.76" y="335.5" ></text>
</g>
<g >
<title>cql3::query_options::query_options (22 samples, 0.42%)</title><rect x="837.9" y="533" width="4.9" height="15.0" fill="rgb(233,149,25)" rx="2" ry="2" />
<text  x="840.94" y="543.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::selection::selection const&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="646.1" y="533" width="0.2" height="15.0" fill="rgb(241,190,30)" rx="2" ry="2" />
<text  x="649.07" y="543.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (1 samples, 0.02%)</title><rect x="922.1" y="501" width="0.2" height="15.0" fill="rgb(252,51,32)" rx="2" ry="2" />
<text  x="925.05" y="511.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (13 samples, 0.25%)</title><rect x="667.3" y="549" width="2.9" height="15.0" fill="rgb(210,68,42)" rx="2" ry="2" />
<text  x="670.27" y="559.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (1 samples, 0.02%)</title><rect x="266.6" y="293" width="0.2" height="15.0" fill="rgb(234,189,21)" rx="2" ry="2" />
<text  x="269.57" y="303.5" ></text>
</g>
<g >
<title>service::storage_proxy::create_write_response_handler (13 samples, 0.25%)</title><rect x="1129.3" y="325" width="2.9" height="15.0" fill="rgb(225,208,8)" rx="2" ry="2" />
<text  x="1132.32" y="335.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="81.6" y="373" width="0.2" height="15.0" fill="rgb(241,20,0)" rx="2" ry="2" />
<text  x="84.62" y="383.5" ></text>
</g>
<g >
<title>flush_reader::fill_buffer (8 samples, 0.15%)</title><rect x="79.4" y="533" width="1.8" height="15.0" fill="rgb(222,204,40)" rx="2" ry="2" />
<text  x="82.39" y="543.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (3 samples, 0.06%)</title><rect x="780.4" y="229" width="0.6" height="15.0" fill="rgb(211,17,53)" rx="2" ry="2" />
<text  x="783.38" y="239.5" ></text>
</g>
<g >
<title>antlr3::Lexer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getCharIndex (2 samples, 0.04%)</title><rect x="27.0" y="341" width="0.4" height="15.0" fill="rgb(247,16,46)" rx="2" ry="2" />
<text  x="29.96" y="351.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.02%)</title><rect x="54.8" y="213" width="0.3" height="15.0" fill="rgb(215,200,47)" rx="2" ry="2" />
<text  x="57.84" y="223.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (1 samples, 0.02%)</title><rect x="17.4" y="629" width="0.2" height="15.0" fill="rgb(243,38,33)" rx="2" ry="2" />
<text  x="20.36" y="639.5" ></text>
</g>
<g >
<title>query_result_builder::consume_new_partition (1 samples, 0.02%)</title><rect x="398.9" y="309" width="0.2" height="15.0" fill="rgb(222,139,30)" rx="2" ry="2" />
<text  x="401.87" y="319.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (2 samples, 0.04%)</title><rect x="55.1" y="357" width="0.4" height="15.0" fill="rgb(220,189,8)" rx="2" ry="2" />
<text  x="58.07" y="367.5" ></text>
</g>
<g >
<title>std::default_delete&lt;cql3::expr::expression::impl&gt;::operator (1 samples, 0.02%)</title><rect x="72.7" y="453" width="0.2" height="15.0" fill="rgb(236,66,2)" rx="2" ry="2" />
<text  x="75.69" y="463.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::lru_entry, boost::intrusive::list_node_traits&lt;void*&gt;,  (2 samples, 0.04%)</title><rect x="730.9" y="389" width="0.4" height="15.0" fill="rgb(249,122,54)" rx="2" ry="2" />
<text  x="733.85" y="399.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.04%)</title><rect x="845.7" y="533" width="0.5" height="15.0" fill="rgb(242,125,1)" rx="2" ry="2" />
<text  x="848.75" y="543.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (2 samples, 0.04%)</title><rect x="606.6" y="533" width="0.4" height="15.0" fill="rgb(215,155,31)" rx="2" ry="2" />
<text  x="609.58" y="543.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::pop_mutation_fragment (1 samples, 0.02%)</title><rect x="186.5" y="357" width="0.2" height="15.0" fill="rgb(240,227,5)" rx="2" ry="2" />
<text  x="189.48" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (7 samples, 0.13%)</title><rect x="772.3" y="357" width="1.6" height="15.0" fill="rgb(254,65,54)" rx="2" ry="2" />
<text  x="775.35" y="367.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (1 samples, 0.02%)</title><rect x="720.1" y="437" width="0.3" height="15.0" fill="rgb(239,86,14)" rx="2" ry="2" />
<text  x="723.14" y="447.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.04%)</title><rect x="108.2" y="597" width="0.4" height="15.0" fill="rgb(232,93,50)" rx="2" ry="2" />
<text  x="111.17" y="607.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::pop_back (1 samples, 0.02%)</title><rect x="296.0" y="373" width="0.2" height="15.0" fill="rgb(216,220,11)" rx="2" ry="2" />
<text  x="299.02" y="383.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (2 samples, 0.04%)</title><rect x="288.9" y="357" width="0.4" height="15.0" fill="rgb(237,20,50)" rx="2" ry="2" />
<text  x="291.88" y="367.5" ></text>
</g>
<g >
<title>auth::resource::parent (6 samples, 0.11%)</title><rect x="769.7" y="421" width="1.3" height="15.0" fill="rgb(216,77,34)" rx="2" ry="2" />
<text  x="772.67" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="652.3" y="517" width="0.2" height="15.0" fill="rgb(240,175,13)" rx="2" ry="2" />
<text  x="655.32" y="527.5" ></text>
</g>
<g >
<title>single_node_cql_env::do_with (3 samples, 0.06%)</title><rect x="16.9" y="661" width="0.7" height="15.0" fill="rgb(242,109,33)" rx="2" ry="2" />
<text  x="19.92" y="671.5" ></text>
</g>
<g >
<title>mutation_source::make_reader (420 samples, 7.94%)</title><rect x="444.6" y="501" width="93.7" height="15.0" fill="rgb(223,80,13)" rx="2" ry="2" />
<text  x="447.61" y="511.5" >mutation_so..</text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (1 samples, 0.02%)</title><rect x="56.2" y="373" width="0.2" height="15.0" fill="rgb(206,197,22)" rx="2" ry="2" />
<text  x="59.18" y="383.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::timer (2 samples, 0.04%)</title><rect x="1010.2" y="245" width="0.4" height="15.0" fill="rgb(238,204,54)" rx="2" ry="2" />
<text  x="1013.18" y="255.5" ></text>
</g>
<g >
<title>bplus::tree&lt;long, intrusive_array&lt;cache_entry&gt;, dht::raw_token_less_comparator, 16ul,  (1 samples, 0.02%)</title><rect x="10.7" y="629" width="0.2" height="15.0" fill="rgb(210,88,20)" rx="2" ry="2" />
<text  x="13.67" y="639.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reclaiming_disabled&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::lsa_partition_reader::next_range_tombstone (1 samples, 0.02%)</title><rect x="80.7" y="357" width="0.2" height="15.0" fill="rgb(226,195,48)" rx="2" ry="2" />
<text  x="83.72" y="367.5" ></text>
</g>
<g >
<title>logalloc::segment_pool::refill_emergency_reserve (1 samples, 0.02%)</title><rect x="502.2" y="341" width="0.2" height="15.0" fill="rgb(248,24,27)" rx="2" ry="2" />
<text  x="505.17" y="351.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (3 samples, 0.06%)</title><rect x="54.2" y="293" width="0.6" height="15.0" fill="rgb(214,163,0)" rx="2" ry="2" />
<text  x="57.17" y="303.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (2 samples, 0.04%)</title><rect x="326.6" y="389" width="0.4" height="15.0" fill="rgb(212,107,53)" rx="2" ry="2" />
<text  x="329.59" y="399.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::invoke_on_all (1 samples, 0.02%)</title><rect x="16.9" y="565" width="0.2" height="15.0" fill="rgb(208,143,37)" rx="2" ry="2" />
<text  x="19.92" y="575.5" ></text>
</g>
<g >
<title>utils::approx_exponential_histogram&lt;512ul, 33554432ul, 4ul&gt;::find_bucket_index (1 samples, 0.02%)</title><rect x="595.4" y="517" width="0.2" height="15.0" fill="rgb(248,201,34)" rx="2" ry="2" />
<text  x="598.43" y="527.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (1 samples, 0.02%)</title><rect x="1134.0" y="261" width="0.2" height="15.0" fill="rgb(241,79,22)" rx="2" ry="2" />
<text  x="1137.00" y="271.5" ></text>
</g>
<g >
<title>mutation_fragment::visit&lt;partition_snapshot_read_accounter&amp;&gt; (3 samples, 0.06%)</title><rect x="199.2" y="325" width="0.7" height="15.0" fill="rgb(253,198,27)" rx="2" ry="2" />
<text  x="202.19" y="335.5" ></text>
</g>
<g >
<title>to_hex (1 samples, 0.02%)</title><rect x="78.5" y="613" width="0.2" height="15.0" fill="rgb(211,174,44)" rx="2" ry="2" />
<text  x="81.49" y="623.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::_Move_ctor_base (2 samples, 0.04%)</title><rect x="353.4" y="245" width="0.4" height="15.0" fill="rgb(228,199,26)" rx="2" ry="2" />
<text  x="356.36" y="255.5" ></text>
</g>
<g >
<title>logalloc::region_impl::free (1 samples, 0.02%)</title><rect x="82.7" y="469" width="0.3" height="15.0" fill="rgb(226,125,13)" rx="2" ry="2" />
<text  x="85.73" y="479.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (2 samples, 0.04%)</title><rect x="674.6" y="549" width="0.5" height="15.0" fill="rgb(242,23,11)" rx="2" ry="2" />
<text  x="677.63" y="559.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.02%)</title><rect x="47.5" y="277" width="0.2" height="15.0" fill="rgb(229,153,46)" rx="2" ry="2" />
<text  x="50.48" y="287.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::on_permit_destroyed (4 samples, 0.08%)</title><rect x="122.9" y="517" width="0.9" height="15.0" fill="rgb(236,66,23)" rx="2" ry="2" />
<text  x="125.89" y="527.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::get_static_row (14 samples, 0.26%)</title><rect x="285.8" y="341" width="3.1" height="15.0" fill="rgb(207,145,26)" rx="2" ry="2" />
<text  x="288.76" y="351.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt;::~_Variant_storage (2 samples, 0.04%)</title><rect x="662.6" y="533" width="0.4" height="15.0" fill="rgb(224,73,38)" rx="2" ry="2" />
<text  x="665.58" y="543.5" ></text>
</g>
<g >
<title>seastar::internal::coroutine_traits_base&lt;service::storage_proxy_coordinator_query_result&gt;::promise_type::run_and_dispose (4 samples, 0.08%)</title><rect x="86.3" y="613" width="0.9" height="15.0" fill="rgb(236,174,36)" rx="2" ry="2" />
<text  x="89.30" y="623.5" ></text>
</g>
<g >
<title>_ZN7seastar12continuationINS_8internal22promise_base_with_typeIvEEZNS_6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE14discard_resultEvEUlDpOT_E_ZNSA_14then_impl_nrvoISE_NS4_IvEEEET0_OT_EUlOS3_RSE_ONS_12future_stateIS9_EEE_S9_E15run_and_disposeEv (42 samples, 0.79%)</title><rect x="93.0" y="597" width="9.4" height="15.0" fill="rgb(231,170,49)" rx="2" ry="2" />
<text  x="95.99" y="607.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_M_reset (1 samples, 0.02%)</title><rect x="739.3" y="501" width="0.3" height="15.0" fill="rgb(214,138,34)" rx="2" ry="2" />
<text  x="742.33" y="511.5" ></text>
</g>
<g >
<title>database::add_column_family (5 samples, 0.09%)</title><rect x="106.8" y="581" width="1.1" height="15.0" fill="rgb(209,182,14)" rx="2" ry="2" />
<text  x="109.83" y="591.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (1 samples, 0.02%)</title><rect x="58.0" y="405" width="0.2" height="15.0" fill="rgb(233,216,10)" rx="2" ry="2" />
<text  x="60.97" y="415.5" ></text>
</g>
<g >
<title>ser::integral_serializer&lt;long&gt;::read&lt;seastar::simple_memory_input_stream&gt; (1 samples, 0.02%)</title><rect x="1117.3" y="325" width="0.2" height="15.0" fill="rgb(220,177,54)" rx="2" ry="2" />
<text  x="1120.27" y="335.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::~resource_units (2 samples, 0.04%)</title><rect x="431.9" y="325" width="0.4" height="15.0" fill="rgb(236,124,13)" rx="2" ry="2" />
<text  x="434.89" y="335.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.04%)</title><rect x="57.5" y="373" width="0.5" height="15.0" fill="rgb(229,180,39)" rx="2" ry="2" />
<text  x="60.52" y="383.5" ></text>
</g>
<g >
<title>partition_entry::partition_entry (1 samples, 0.02%)</title><rect x="1118.2" y="229" width="0.2" height="15.0" fill="rgb(248,11,27)" rx="2" ry="2" />
<text  x="1121.16" y="239.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate (45 samples, 0.85%)</title><rect x="878.5" y="421" width="10.1" height="15.0" fill="rgb(253,49,27)" rx="2" ry="2" />
<text  x="881.55" y="431.5" ></text>
</g>
<g >
<title>global_schema_ptr::global_schema_ptr (1 samples, 0.02%)</title><rect x="105.7" y="517" width="0.2" height="15.0" fill="rgb(220,70,50)" rx="2" ry="2" />
<text  x="108.71" y="527.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE8scheduleINS_8internal22promise_base_with_typeIvEEZNS6_14discard_resultEvEUlDpOT_E_ZNS6_14then_impl_nrvoISE_NS0_IvEEEET0_OT_EUlOSA_RSE_ONS_12future_stateIS5_EEE_EEvSJ_OSH_OT1_ (9 samples, 0.17%)</title><rect x="711.9" y="533" width="2.0" height="15.0" fill="rgb(225,102,9)" rx="2" ry="2" />
<text  x="714.89" y="543.5" ></text>
</g>
<g >
<title>partition_key::from_range&lt;std::vector&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, std::allocator&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt; &gt; (5 samples, 0.09%)</title><rect x="542.8" y="469" width="1.1" height="15.0" fill="rgb(210,17,21)" rx="2" ry="2" />
<text  x="545.77" y="479.5" ></text>
</g>
<g >
<title>bound_view::from_range&lt;nonwrapping_interval&gt; (1 samples, 0.02%)</title><rect x="272.1" y="309" width="0.3" height="15.0" fill="rgb(221,170,31)" rx="2" ry="2" />
<text  x="275.15" y="319.5" ></text>
</g>
<g >
<title>sstables::mc::writer::write_clustered&lt;clustering_row&gt; (1 samples, 0.02%)</title><rect x="10.9" y="517" width="0.2" height="15.0" fill="rgb(244,71,21)" rx="2" ry="2" />
<text  x="13.89" y="527.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;std::function&lt;flat_mutation_reader  (2 samples, 0.04%)</title><rect x="600.3" y="533" width="0.5" height="15.0" fill="rgb(209,39,23)" rx="2" ry="2" />
<text  x="603.33" y="543.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::~impl (8 samples, 0.15%)</title><rect x="556.8" y="405" width="1.8" height="15.0" fill="rgb(220,0,15)" rx="2" ry="2" />
<text  x="559.83" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::allocate_large (1 samples, 0.02%)</title><rect x="877.4" y="357" width="0.3" height="15.0" fill="rgb(235,222,4)" rx="2" ry="2" />
<text  x="880.43" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="950.4" y="469" width="0.2" height="15.0" fill="rgb(241,40,53)" rx="2" ry="2" />
<text  x="953.39" y="479.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::emplace&lt;atomic_cell_or_collection, seastar::optimized_optional&lt;cell_hash&gt; &gt; (1 samples, 0.02%)</title><rect x="1120.8" y="293" width="0.3" height="15.0" fill="rgb(223,218,2)" rx="2" ry="2" />
<text  x="1123.84" y="303.5" ></text>
</g>
<g >
<title>partition_snapshot::versions (1 samples, 0.02%)</title><rect x="258.5" y="245" width="0.3" height="15.0" fill="rgb(242,86,30)" rx="2" ry="2" />
<text  x="261.54" y="255.5" ></text>
</g>
<g >
<title>main (4,858 samples, 91.85%)</title><rect x="84.3" y="709" width="1083.8" height="15.0" fill="rgb(205,220,49)" rx="2" ry="2" />
<text  x="87.29" y="719.5" >main</text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value_view, std::allocator&lt;cql3::raw_value_view&gt; &gt;::_M_range_check (1 samples, 0.02%)</title><rect x="883.2" y="357" width="0.3" height="15.0" fill="rgb(225,111,26)" rx="2" ry="2" />
<text  x="886.23" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="583.4" y="485" width="0.2" height="15.0" fill="rgb(207,60,45)" rx="2" ry="2" />
<text  x="586.38" y="495.5" ></text>
</g>
<g >
<title>std::operator+ (3 samples, 0.06%)</title><rect x="54.2" y="197" width="0.6" height="15.0" fill="rgb(251,229,26)" rx="2" ry="2" />
<text  x="57.17" y="207.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.02%)</title><rect x="49.5" y="373" width="0.2" height="15.0" fill="rgb(212,83,23)" rx="2" ry="2" />
<text  x="52.49" y="383.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="59.8" y="437" width="0.2" height="15.0" fill="rgb(235,142,1)" rx="2" ry="2" />
<text  x="62.75" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (2 samples, 0.04%)</title><rect x="713.4" y="485" width="0.5" height="15.0" fill="rgb(218,197,54)" rx="2" ry="2" />
<text  x="716.45" y="495.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::constant&gt;  (41 samples, 0.78%)</title><rect x="879.4" y="405" width="9.2" height="15.0" fill="rgb(227,169,6)" rx="2" ry="2" />
<text  x="882.44" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (3 samples, 0.06%)</title><rect x="979.2" y="325" width="0.6" height="15.0" fill="rgb(222,65,26)" rx="2" ry="2" />
<text  x="982.17" y="335.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::get0 (1 samples, 0.02%)</title><rect x="705.0" y="597" width="0.2" height="15.0" fill="rgb(220,39,20)" rx="2" ry="2" />
<text  x="707.97" y="607.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.02%)</title><rect x="106.8" y="325" width="0.3" height="15.0" fill="rgb(209,152,18)" rx="2" ry="2" />
<text  x="109.83" y="335.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="448.2" y="453" width="0.2" height="15.0" fill="rgb(217,135,23)" rx="2" ry="2" />
<text  x="451.18" y="463.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (1 samples, 0.02%)</title><rect x="704.7" y="597" width="0.3" height="15.0" fill="rgb(228,4,19)" rx="2" ry="2" />
<text  x="707.75" y="607.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (5 samples, 0.09%)</title><rect x="510.6" y="309" width="1.2" height="15.0" fill="rgb(222,56,21)" rx="2" ry="2" />
<text  x="513.65" y="319.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.02%)</title><rect x="17.1" y="581" width="0.3" height="15.0" fill="rgb(236,82,28)" rx="2" ry="2" />
<text  x="20.14" y="591.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (2 samples, 0.04%)</title><rect x="260.8" y="261" width="0.4" height="15.0" fill="rgb(208,215,23)" rx="2" ry="2" />
<text  x="263.77" y="271.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector (2 samples, 0.04%)</title><rect x="1077.8" y="437" width="0.4" height="15.0" fill="rgb(233,19,30)" rx="2" ry="2" />
<text  x="1080.78" y="447.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;schema_registry_entry&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;schema_registry_entry&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (8 samples, 0.15%)</title><rect x="958.4" y="405" width="1.8" height="15.0" fill="rgb(211,61,18)" rx="2" ry="2" />
<text  x="961.42" y="415.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_singular (58 samples, 1.10%)</title><rect x="1144.7" y="581" width="12.9" height="15.0" fill="rgb(248,115,32)" rx="2" ry="2" />
<text  x="1147.71" y="591.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (5 samples, 0.09%)</title><rect x="742.9" y="485" width="1.1" height="15.0" fill="rgb(245,17,12)" rx="2" ry="2" />
<text  x="745.90" y="495.5" ></text>
</g>
<g >
<title>empty_flat_reader::~empty_flat_reader (1 samples, 0.02%)</title><rect x="553.7" y="437" width="0.2" height="15.0" fill="rgb(228,166,3)" rx="2" ry="2" />
<text  x="556.71" y="447.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (1 samples, 0.02%)</title><rect x="10.9" y="693" width="0.2" height="15.0" fill="rgb(233,90,11)" rx="2" ry="2" />
<text  x="13.89" y="703.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::deallocate (1 samples, 0.02%)</title><rect x="570.2" y="453" width="0.2" height="15.0" fill="rgb(245,181,13)" rx="2" ry="2" />
<text  x="573.22" y="463.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (1 samples, 0.02%)</title><rect x="1141.8" y="565" width="0.2" height="15.0" fill="rgb(230,47,34)" rx="2" ry="2" />
<text  x="1144.81" y="575.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_clear (1 samples, 0.02%)</title><rect x="462.9" y="405" width="0.2" height="15.0" fill="rgb(244,156,49)" rx="2" ry="2" />
<text  x="465.90" y="415.5" ></text>
</g>
<g >
<title>mutation_partition::mutation_partition (1 samples, 0.02%)</title><rect x="1118.4" y="245" width="0.2" height="15.0" fill="rgb(244,226,39)" rx="2" ry="2" />
<text  x="1121.38" y="255.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;dht::token, std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt;, std::allocator&lt;std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;dht::token&gt;, std::hash&lt;dht::token&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (22 samples, 0.42%)</title><rect x="1067.5" y="373" width="4.9" height="15.0" fill="rgb(208,209,30)" rx="2" ry="2" />
<text  x="1070.52" y="383.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (1 samples, 0.02%)</title><rect x="40.8" y="389" width="0.2" height="15.0" fill="rgb(221,209,1)" rx="2" ry="2" />
<text  x="43.79" y="399.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (5 samples, 0.09%)</title><rect x="196.3" y="357" width="1.1" height="15.0" fill="rgb(251,78,14)" rx="2" ry="2" />
<text  x="199.29" y="367.5" ></text>
</g>
<g >
<title>query_result_builder::consume (2 samples, 0.04%)</title><rect x="676.4" y="389" width="0.5" height="15.0" fill="rgb(248,109,6)" rx="2" ry="2" />
<text  x="679.41" y="399.5" ></text>
</g>
<g >
<title>seastar::smp::configure (1 samples, 0.02%)</title><rect x="1167.9" y="645" width="0.2" height="15.0" fill="rgb(238,129,39)" rx="2" ry="2" />
<text  x="1170.91" y="655.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::lsa_partition_reader::next_row (1 samples, 0.02%)</title><rect x="80.5" y="389" width="0.2" height="15.0" fill="rgb(244,204,23)" rx="2" ry="2" />
<text  x="83.50" y="399.5" ></text>
</g>
<g >
<title>_start (4 samples, 0.08%)</title><rect x="1168.4" y="725" width="0.9" height="15.0" fill="rgb(205,76,18)" rx="2" ry="2" />
<text  x="1171.36" y="735.5" ></text>
</g>
<g >
<title>ser::idl::serializers::internal::vector_serializer&lt;std::vector&lt;ser::column_view, std::allocator&lt;ser::column_view&gt; &gt; &gt;::read&lt;seastar::simple_memory_input_stream&gt; (2 samples, 0.04%)</title><rect x="1122.6" y="309" width="0.5" height="15.0" fill="rgb(242,53,37)" rx="2" ry="2" />
<text  x="1125.62" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.08%)</title><rect x="547.7" y="485" width="0.9" height="15.0" fill="rgb(229,152,13)" rx="2" ry="2" />
<text  x="550.68" y="495.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="54.8" y="261" width="0.3" height="15.0" fill="rgb(230,57,34)" rx="2" ry="2" />
<text  x="57.84" y="271.5" ></text>
</g>
<g >
<title>antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;::RecognizerSharedStateType&lt;antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::RecognizerSharedStateType (1 samples, 0.02%)</title><rect x="20.5" y="453" width="0.2" height="15.0" fill="rgb(205,20,15)" rx="2" ry="2" />
<text  x="23.49" y="463.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.02%)</title><rect x="445.1" y="485" width="0.2" height="15.0" fill="rgb(235,93,49)" rx="2" ry="2" />
<text  x="448.05" y="495.5" ></text>
</g>
<g >
<title>bplus::tree&lt;long, intrusive_array&lt;memtable_entry&gt;, dht::raw_token_less_comparator, 16ul,  (38 samples, 0.72%)</title><rect x="472.0" y="405" width="8.5" height="15.0" fill="rgb(232,184,17)" rx="2" ry="2" />
<text  x="475.05" y="415.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;partition_snapshot&gt;::make&lt;seastar::lw_shared_ptr&lt;schema const&gt;&amp;, logalloc::region&amp;, mutation_cleaner&amp;, partition_entry*, cache_tracker*&amp;, unsigned long&amp;&gt; (2 samples, 0.04%)</title><rect x="517.6" y="405" width="0.4" height="15.0" fill="rgb(219,26,46)" rx="2" ry="2" />
<text  x="520.56" y="415.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnFamilyName (1 samples, 0.02%)</title><rect x="38.6" y="453" width="0.2" height="15.0" fill="rgb(242,223,3)" rx="2" ry="2" />
<text  x="41.56" y="463.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::operator (1 samples, 0.02%)</title><rect x="852.4" y="581" width="0.3" height="15.0" fill="rgb(223,196,20)" rx="2" ry="2" />
<text  x="855.44" y="591.5" ></text>
</g>
<g >
<title>empty_flat_reader::empty_flat_reader (8 samples, 0.15%)</title><rect x="531.6" y="357" width="1.8" height="15.0" fill="rgb(250,59,38)" rx="2" ry="2" />
<text  x="534.62" y="367.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, cql3::statements::drop_view_statement*, std::default_delete&lt;cql3::statements::drop_view_statement&gt; &gt; (1 samples, 0.02%)</title><rect x="61.8" y="437" width="0.2" height="15.0" fill="rgb(211,96,9)" rx="2" ry="2" />
<text  x="64.76" y="447.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::partition_snapshot_flat_reader&lt;schema const&amp;, flush_memory_accounter&amp;&gt; (1 samples, 0.02%)</title><rect x="79.8" y="437" width="0.3" height="15.0" fill="rgb(205,202,54)" rx="2" ry="2" />
<text  x="82.83" y="447.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (1 samples, 0.02%)</title><rect x="1150.7" y="501" width="0.3" height="15.0" fill="rgb(214,228,26)" rx="2" ry="2" />
<text  x="1153.73" y="511.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (18 samples, 0.34%)</title><rect x="782.6" y="261" width="4.0" height="15.0" fill="rgb(210,66,44)" rx="2" ry="2" />
<text  x="785.61" y="271.5" ></text>
</g>
<g >
<title>db::schema_tables::store_map&lt;clustering_key_prefix, std::map&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, std::less&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="107.1" y="501" width="0.2" height="15.0" fill="rgb(234,142,14)" rx="2" ry="2" />
<text  x="110.05" y="511.5" ></text>
</g>
<g >
<title>logalloc::segment_pool::refill_emergency_reserve (1 samples, 0.02%)</title><rect x="196.7" y="341" width="0.3" height="15.0" fill="rgb(249,197,41)" rx="2" ry="2" />
<text  x="199.74" y="351.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="37.7" y="389" width="0.2" height="15.0" fill="rgb(250,130,40)" rx="2" ry="2" />
<text  x="40.66" y="399.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;::lru_entry, boost::intrusive::list_node_traits&lt;void*&gt;,  (6 samples, 0.11%)</title><rect x="722.6" y="485" width="1.3" height="15.0" fill="rgb(245,81,51)" rx="2" ry="2" />
<text  x="725.60" y="495.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (1 samples, 0.02%)</title><rect x="82.7" y="693" width="0.3" height="15.0" fill="rgb(213,51,17)" rx="2" ry="2" />
<text  x="85.73" y="703.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (4 samples, 0.08%)</title><rect x="216.8" y="229" width="0.9" height="15.0" fill="rgb(233,22,44)" rx="2" ry="2" />
<text  x="219.82" y="239.5" ></text>
</g>
<g >
<title>__dynamic_cast (1 samples, 0.02%)</title><rect x="13.6" y="677" width="0.2" height="15.0" fill="rgb(235,105,41)" rx="2" ry="2" />
<text  x="16.57" y="687.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (1 samples, 0.02%)</title><rect x="1165.2" y="517" width="0.3" height="15.0" fill="rgb(215,2,17)" rx="2" ry="2" />
<text  x="1168.24" y="527.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;cql3::restrictions::single_column_restriction, false&gt;::make&lt;column_definition const&amp;&gt; (2 samples, 0.04%)</title><rect x="68.7" y="453" width="0.4" height="15.0" fill="rgb(235,219,48)" rx="2" ry="2" />
<text  x="71.68" y="463.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (1 samples, 0.02%)</title><rect x="755.8" y="453" width="0.3" height="15.0" fill="rgb(205,45,0)" rx="2" ry="2" />
<text  x="758.84" y="463.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::get_timeout (1 samples, 0.02%)</title><rect x="938.8" y="501" width="0.2" height="15.0" fill="rgb(247,160,5)" rx="2" ry="2" />
<text  x="941.78" y="511.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.02%)</title><rect x="70.2" y="405" width="0.3" height="15.0" fill="rgb(205,183,8)" rx="2" ry="2" />
<text  x="73.24" y="415.5" ></text>
</g>
<g >
<title>ser::after_qr_cell__value&lt;bytes_ostream&gt;::skip_ttl (5 samples, 0.09%)</title><rect x="390.4" y="261" width="1.1" height="15.0" fill="rgb(253,143,42)" rx="2" ry="2" />
<text  x="393.39" y="271.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.02%)</title><rect x="21.2" y="389" width="0.2" height="15.0" fill="rgb(219,100,25)" rx="2" ry="2" />
<text  x="24.16" y="399.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, lister::scan_dir (1 samples, 0.02%)</title><rect x="677.8" y="597" width="0.2" height="15.0" fill="rgb(230,143,51)" rx="2" ry="2" />
<text  x="680.75" y="607.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (3 samples, 0.06%)</title><rect x="81.4" y="421" width="0.7" height="15.0" fill="rgb(247,76,42)" rx="2" ry="2" />
<text  x="84.39" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, std::allocator&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt;::emplace_back&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; (1 samples, 0.02%)</title><rect x="1130.2" y="197" width="0.2" height="15.0" fill="rgb(231,200,51)" rx="2" ry="2" />
<text  x="1133.21" y="207.5" ></text>
</g>
<g >
<title>seastar::gate::leave (1 samples, 0.02%)</title><rect x="138.1" y="549" width="0.2" height="15.0" fill="rgb(250,113,45)" rx="2" ry="2" />
<text  x="141.06" y="559.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::entry::entry (1 samples, 0.02%)</title><rect x="1012.6" y="261" width="0.3" height="15.0" fill="rgb(238,59,7)" rx="2" ry="2" />
<text  x="1015.63" y="271.5" ></text>
</g>
<g >
<title>std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt; &gt;, seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (6 samples, 0.11%)</title><rect x="793.8" y="341" width="1.3" height="15.0" fill="rgb(251,159,9)" rx="2" ry="2" />
<text  x="796.77" y="351.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (1 samples, 0.02%)</title><rect x="1134.2" y="597" width="0.2" height="15.0" fill="rgb(249,150,15)" rx="2" ry="2" />
<text  x="1137.22" y="607.5" ></text>
</g>
<g >
<title>seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;::swap (2 samples, 0.04%)</title><rect x="738.9" y="501" width="0.4" height="15.0" fill="rgb(226,15,18)" rx="2" ry="2" />
<text  x="741.88" y="511.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (2 samples, 0.04%)</title><rect x="1022.0" y="357" width="0.4" height="15.0" fill="rgb(239,49,4)" rx="2" ry="2" />
<text  x="1025.00" y="367.5" ></text>
</g>
<g >
<title>bound_view::from_range_end&lt;nonwrapping_interval&gt; (2 samples, 0.04%)</title><rect x="277.7" y="277" width="0.5" height="15.0" fill="rgb(238,23,2)" rx="2" ry="2" />
<text  x="280.73" y="287.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;cql3::constants::value, true&gt;::make&lt;cql3::raw_value, seastar::shared_ptr&lt;abstract_type const&gt; const&amp;&gt; (2 samples, 0.04%)</title><rect x="66.9" y="469" width="0.4" height="15.0" fill="rgb(215,223,25)" rx="2" ry="2" />
<text  x="69.89" y="479.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::on_new_range (1 samples, 0.02%)</title><rect x="289.3" y="373" width="0.3" height="15.0" fill="rgb(230,58,52)" rx="2" ry="2" />
<text  x="292.33" y="383.5" ></text>
</g>
<g >
<title>partition_version::partition_version (1 samples, 0.02%)</title><rect x="1118.2" y="197" width="0.2" height="15.0" fill="rgb(206,200,53)" rx="2" ry="2" />
<text  x="1121.16" y="207.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::key_is_in_relation (8 samples, 0.15%)</title><rect x="640.5" y="549" width="1.8" height="15.0" fill="rgb(231,129,33)" rx="2" ry="2" />
<text  x="643.49" y="559.5" ></text>
</g>
<g >
<title>db::commitlog::segment_manager::allocate_when_possible&lt;db::commitlog::add_entry (5 samples, 0.09%)</title><rect x="1124.6" y="389" width="1.1" height="15.0" fill="rgb(211,68,5)" rx="2" ry="2" />
<text  x="1127.63" y="399.5" ></text>
</g>
<g >
<title>std::__lower_bound&lt;__gnu_cxx::__normal_iterator&lt;long*, std::vector&lt;long, std::allocator&lt;long&gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_less_val&gt; (4 samples, 0.08%)</title><rect x="1155.9" y="549" width="0.9" height="15.0" fill="rgb(241,119,3)" rx="2" ry="2" />
<text  x="1158.87" y="559.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::CqlParser (3 samples, 0.06%)</title><rect x="20.3" y="517" width="0.6" height="15.0" fill="rgb(222,197,50)" rx="2" ry="2" />
<text  x="23.26" y="527.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (2 samples, 0.04%)</title><rect x="39.2" y="421" width="0.5" height="15.0" fill="rgb(251,1,7)" rx="2" ry="2" />
<text  x="42.23" y="431.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (1 samples, 0.02%)</title><rect x="106.8" y="437" width="0.3" height="15.0" fill="rgb(207,68,39)" rx="2" ry="2" />
<text  x="109.83" y="447.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (6 samples, 0.11%)</title><rect x="42.8" y="389" width="1.3" height="15.0" fill="rgb(245,92,4)" rx="2" ry="2" />
<text  x="45.80" y="399.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::visit&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (1 samples, 0.02%)</title><rect x="1137.3" y="373" width="0.3" height="15.0" fill="rgb(213,34,21)" rx="2" ry="2" />
<text  x="1140.35" y="383.5" ></text>
</g>
<g >
<title>range_tombstone_list::slice (4 samples, 0.08%)</title><rect x="259.2" y="245" width="0.9" height="15.0" fill="rgb(237,99,41)" rx="2" ry="2" />
<text  x="262.21" y="255.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::execution_loop (1 samples, 0.02%)</title><rect x="84.5" y="613" width="0.2" height="15.0" fill="rgb(254,104,4)" rx="2" ry="2" />
<text  x="87.52" y="623.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (1 samples, 0.02%)</title><rect x="82.7" y="581" width="0.3" height="15.0" fill="rgb(226,69,6)" rx="2" ry="2" />
<text  x="85.73" y="591.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::make_ready&lt; (1 samples, 0.02%)</title><rect x="672.0" y="581" width="0.2" height="15.0" fill="rgb(235,208,31)" rx="2" ry="2" />
<text  x="674.95" y="591.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_esft&lt;partition_snapshot&gt;::dispose (3 samples, 0.06%)</title><rect x="566.2" y="389" width="0.7" height="15.0" fill="rgb(234,60,45)" rx="2" ry="2" />
<text  x="569.20" y="399.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (4 samples, 0.08%)</title><rect x="269.2" y="341" width="0.9" height="15.0" fill="rgb(226,56,41)" rx="2" ry="2" />
<text  x="272.25" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (6 samples, 0.11%)</title><rect x="538.3" y="485" width="1.4" height="15.0" fill="rgb(249,91,4)" rx="2" ry="2" />
<text  x="541.31" y="495.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;db::rp_handle&gt;::clear (1 samples, 0.02%)</title><rect x="1125.7" y="421" width="0.3" height="15.0" fill="rgb(232,197,12)" rx="2" ry="2" />
<text  x="1128.75" y="431.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume_in_thread&lt;sstables::sstable_writer&gt; (1 samples, 0.02%)</title><rect x="676.0" y="405" width="0.2" height="15.0" fill="rgb(227,133,45)" rx="2" ry="2" />
<text  x="678.97" y="415.5" ></text>
</g>
<g >
<title>row_cache::update (1 samples, 0.02%)</title><rect x="1134.0" y="549" width="0.2" height="15.0" fill="rgb(231,56,6)" rx="2" ry="2" />
<text  x="1137.00" y="559.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.02%)</title><rect x="39.4" y="325" width="0.3" height="15.0" fill="rgb(233,91,44)" rx="2" ry="2" />
<text  x="42.45" y="335.5" ></text>
</g>
<g >
<title>bplus::node&lt;long, intrusive_array&lt;memtable_entry&gt;, dht::raw_token_less_comparator, 16ul,  (2 samples, 0.04%)</title><rect x="1118.8" y="277" width="0.5" height="15.0" fill="rgb(252,224,29)" rx="2" ry="2" />
<text  x="1121.83" y="287.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (1 samples, 0.02%)</title><rect x="645.8" y="533" width="0.3" height="15.0" fill="rgb(219,53,6)" rx="2" ry="2" />
<text  x="648.85" y="543.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.04%)</title><rect x="755.2" y="469" width="0.4" height="15.0" fill="rgb(228,162,52)" rx="2" ry="2" />
<text  x="758.17" y="479.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::get_at (1 samples, 0.02%)</title><rect x="354.0" y="293" width="0.3" height="15.0" fill="rgb(226,194,49)" rx="2" ry="2" />
<text  x="357.03" y="303.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (5 samples, 0.09%)</title><rect x="536.1" y="437" width="1.1" height="15.0" fill="rgb(234,223,21)" rx="2" ry="2" />
<text  x="539.08" y="447.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::followPop (1 samples, 0.02%)</title><rect x="36.1" y="469" width="0.2" height="15.0" fill="rgb(220,6,32)" rx="2" ry="2" />
<text  x="39.10" y="479.5" ></text>
</g>
<g >
<title>seastar::promise&lt;void&gt;::promise (1 samples, 0.02%)</title><rect x="1134.4" y="597" width="0.3" height="15.0" fill="rgb(241,133,25)" rx="2" ry="2" />
<text  x="1137.45" y="607.5" ></text>
</g>
<g >
<title>logalloc::segment_pool::refill_emergency_reserve (1 samples, 0.02%)</title><rect x="490.3" y="405" width="0.3" height="15.0" fill="rgb(251,38,27)" rx="2" ry="2" />
<text  x="493.34" y="415.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_pausable&lt;flush_reader::fill_buffer (5 samples, 0.09%)</title><rect x="80.1" y="485" width="1.1" height="15.0" fill="rgb(252,118,21)" rx="2" ry="2" />
<text  x="83.05" y="495.5" ></text>
</g>
<g >
<title>range_tombstone_stream::get_next (1 samples, 0.02%)</title><rect x="265.5" y="261" width="0.2" height="15.0" fill="rgb(209,157,19)" rx="2" ry="2" />
<text  x="268.45" y="271.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (10 samples, 0.19%)</title><rect x="719.7" y="469" width="2.2" height="15.0" fill="rgb(242,107,35)" rx="2" ry="2" />
<text  x="722.70" y="479.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (3 samples, 0.06%)</title><rect x="629.3" y="581" width="0.7" height="15.0" fill="rgb(228,2,12)" rx="2" ry="2" />
<text  x="632.34" y="591.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (2 samples, 0.04%)</title><rect x="39.7" y="389" width="0.4" height="15.0" fill="rgb(236,229,31)" rx="2" ry="2" />
<text  x="42.67" y="399.5" ></text>
</g>
<g >
<title>seastar::sync_directory (1 samples, 0.02%)</title><rect x="678.0" y="581" width="0.2" height="15.0" fill="rgb(233,40,40)" rx="2" ry="2" />
<text  x="680.98" y="591.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (6 samples, 0.11%)</title><rect x="457.3" y="325" width="1.4" height="15.0" fill="rgb(222,229,12)" rx="2" ry="2" />
<text  x="460.32" y="335.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (1 samples, 0.02%)</title><rect x="1106.8" y="469" width="0.2" height="15.0" fill="rgb(215,90,8)" rx="2" ry="2" />
<text  x="1109.78" y="479.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (4 samples, 0.08%)</title><rect x="200.5" y="293" width="0.9" height="15.0" fill="rgb(207,215,36)" rx="2" ry="2" />
<text  x="203.53" y="303.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_M_move_assign (2 samples, 0.04%)</title><rect x="1088.7" y="453" width="0.5" height="15.0" fill="rgb(225,94,53)" rx="2" ry="2" />
<text  x="1091.71" y="463.5" ></text>
</g>
<g >
<title>__libc_write (1 samples, 0.02%)</title><rect x="850.0" y="373" width="0.2" height="15.0" fill="rgb(223,112,40)" rx="2" ry="2" />
<text  x="852.99" y="383.5" ></text>
</g>
<g >
<title>seastar::promise&lt;void&gt;::promise (1 samples, 0.02%)</title><rect x="132.9" y="501" width="0.3" height="15.0" fill="rgb(244,39,25)" rx="2" ry="2" />
<text  x="135.93" y="511.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt;::construct&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; (1 samples, 0.02%)</title><rect x="280.4" y="293" width="0.2" height="15.0" fill="rgb(242,148,29)" rx="2" ry="2" />
<text  x="283.40" y="303.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="1095.8" y="485" width="0.3" height="15.0" fill="rgb(221,146,28)" rx="2" ry="2" />
<text  x="1098.85" y="495.5" ></text>
</g>
<g >
<title>query_result_builder::consume_new_partition (44 samples, 0.83%)</title><rect x="344.0" y="293" width="9.8" height="15.0" fill="rgb(228,201,23)" rx="2" ry="2" />
<text  x="346.99" y="303.5" ></text>
</g>
<g >
<title>std::__push_heap&lt;mutation_reader_merger::reader_and_fragment*, long, mutation_reader_merger::reader_and_fragment, __gnu_cxx::__ops::_Iter_comp_val&lt;mutation_reader_merger::reader_heap_compare&gt; &gt; (1 samples, 0.02%)</title><rect x="190.5" y="325" width="0.2" height="15.0" fill="rgb(230,130,14)" rx="2" ry="2" />
<text  x="193.49" y="335.5" ></text>
</g>
<g >
<title>mutation_fragment::visit&lt;mutation_fragment::calculate_memory_usage (3 samples, 0.06%)</title><rect x="253.6" y="261" width="0.7" height="15.0" fill="rgb(239,27,18)" rx="2" ry="2" />
<text  x="256.63" y="271.5" ></text>
</g>
<g >
<title>__strlen_avx2 (1 samples, 0.02%)</title><rect x="853.1" y="421" width="0.2" height="15.0" fill="rgb(241,105,12)" rx="2" ry="2" />
<text  x="856.11" y="431.5" ></text>
</g>
<g >
<title>std::_Optional_base_impl&lt;query::querier&lt; (6 samples, 0.11%)</title><rect x="613.5" y="517" width="1.3" height="15.0" fill="rgb(248,224,32)" rx="2" ry="2" />
<text  x="616.50" y="527.5" ></text>
</g>
<g >
<title>auth::standard_role_manager::start (1 samples, 0.02%)</title><rect x="677.1" y="565" width="0.2" height="15.0" fill="rgb(232,120,26)" rx="2" ry="2" />
<text  x="680.08" y="575.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::signal (2 samples, 0.04%)</title><rect x="557.1" y="389" width="0.4" height="15.0" fill="rgb(208,155,5)" rx="2" ry="2" />
<text  x="560.05" y="399.5" ></text>
</g>
<g >
<title>mutation_querier::mutation_querier (8 samples, 0.15%)</title><rect x="344.2" y="277" width="1.8" height="15.0" fill="rgb(242,61,30)" rx="2" ry="2" />
<text  x="347.21" y="287.5" ></text>
</g>
<g >
<title>std::operator+ (2 samples, 0.04%)</title><rect x="41.2" y="277" width="0.5" height="15.0" fill="rgb(216,58,39)" rx="2" ry="2" />
<text  x="44.23" y="287.5" ></text>
</g>
<g >
<title>utils::tuple_hash::hash_impl&lt;2ul, auth::resource_kind, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (5 samples, 0.09%)</title><rect x="802.9" y="405" width="1.1" height="15.0" fill="rgb(213,111,42)" rx="2" ry="2" />
<text  x="805.91" y="415.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.02%)</title><rect x="21.2" y="357" width="0.2" height="15.0" fill="rgb(253,214,51)" rx="2" ry="2" />
<text  x="24.16" y="367.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (1 samples, 0.02%)</title><rect x="1027.8" y="293" width="0.2" height="15.0" fill="rgb(232,147,48)" rx="2" ry="2" />
<text  x="1030.80" y="303.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="907.1" y="421" width="0.2" height="15.0" fill="rgb(244,8,46)" rx="2" ry="2" />
<text  x="910.10" y="431.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (10 samples, 0.19%)</title><rect x="1158.3" y="581" width="2.3" height="15.0" fill="rgb(205,160,47)" rx="2" ry="2" />
<text  x="1161.32" y="591.5" ></text>
</g>
<g >
<title>atomic_cell::atomic_cell (1 samples, 0.02%)</title><rect x="1119.9" y="325" width="0.3" height="15.0" fill="rgb(239,56,28)" rx="2" ry="2" />
<text  x="1122.95" y="335.5" ></text>
</g>
<g >
<title>seastar::internal::future_base::do_wait (1 samples, 0.02%)</title><rect x="17.6" y="613" width="0.2" height="15.0" fill="rgb(246,89,1)" rx="2" ry="2" />
<text  x="20.59" y="623.5" ></text>
</g>
<g >
<title>utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;::touch (1 samples, 0.02%)</title><rect x="723.9" y="501" width="0.3" height="15.0" fill="rgb(236,187,53)" rx="2" ry="2" />
<text  x="726.93" y="511.5" ></text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt;&amp;&gt; (4 samples, 0.08%)</title><rect x="827.5" y="469" width="0.8" height="15.0" fill="rgb(241,149,45)" rx="2" ry="2" />
<text  x="830.46" y="479.5" ></text>
</g>
<g >
<title>compound_wrapper&lt;partition_key, partition_key_view&gt;::explode (1 samples, 0.02%)</title><rect x="107.3" y="421" width="0.2" height="15.0" fill="rgb(237,94,40)" rx="2" ry="2" />
<text  x="110.27" y="431.5" ></text>
</g>
<g >
<title>service::never_speculating_read_executor::~never_speculating_read_executor (1 samples, 0.02%)</title><rect x="1160.8" y="565" width="0.2" height="15.0" fill="rgb(237,10,27)" rx="2" ry="2" />
<text  x="1163.77" y="575.5" ></text>
</g>
<g >
<title>mutation_partition::clear_gently (1 samples, 0.02%)</title><rect x="1134.0" y="325" width="0.2" height="15.0" fill="rgb(214,15,2)" rx="2" ry="2" />
<text  x="1137.00" y="335.5" ></text>
</g>
<g >
<title>locator::token_metadata_impl::first_token_index (38 samples, 0.72%)</title><rect x="1058.6" y="357" width="8.5" height="15.0" fill="rgb(244,153,42)" rx="2" ry="2" />
<text  x="1061.59" y="367.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, enum_set&lt;super_enum&lt;auth::permission,  (6 samples, 0.11%)</title><rect x="779.7" y="277" width="1.3" height="15.0" fill="rgb(239,113,41)" rx="2" ry="2" />
<text  x="782.71" y="287.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.02%)</title><rect x="37.4" y="245" width="0.3" height="15.0" fill="rgb(234,118,27)" rx="2" ry="2" />
<text  x="40.44" y="255.5" ></text>
</g>
<g >
<title>reader_permit::impl::mark_used (2 samples, 0.04%)</title><rect x="120.9" y="549" width="0.4" height="15.0" fill="rgb(209,223,1)" rx="2" ry="2" />
<text  x="123.88" y="559.5" ></text>
</g>
<g >
<title>memtable_entry::memtable_entry (1 samples, 0.02%)</title><rect x="1118.2" y="245" width="0.2" height="15.0" fill="rgb(216,202,2)" rx="2" ry="2" />
<text  x="1121.16" y="255.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (2 samples, 0.04%)</title><rect x="47.5" y="293" width="0.4" height="15.0" fill="rgb(227,167,36)" rx="2" ry="2" />
<text  x="50.48" y="303.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_S_construct&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (2 samples, 0.04%)</title><rect x="23.2" y="341" width="0.4" height="15.0" fill="rgb(238,3,14)" rx="2" ry="2" />
<text  x="26.16" y="351.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (3 samples, 0.06%)</title><rect x="40.1" y="373" width="0.7" height="15.0" fill="rgb(246,51,51)" rx="2" ry="2" />
<text  x="43.12" y="383.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;service::storage_proxy::unique_response_handler, 1ul&gt;::reserve (1 samples, 0.02%)</title><rect x="1132.2" y="357" width="0.2" height="15.0" fill="rgb(215,42,5)" rx="2" ry="2" />
<text  x="1135.22" y="367.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::enqueue_waiter (37 samples, 0.70%)</title><rect x="1005.7" y="309" width="8.3" height="15.0" fill="rgb(244,68,52)" rx="2" ry="2" />
<text  x="1008.72" y="319.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (1 samples, 0.02%)</title><rect x="620.9" y="549" width="0.2" height="15.0" fill="rgb(240,115,34)" rx="2" ry="2" />
<text  x="623.86" y="559.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::operator (3 samples, 0.06%)</title><rect x="734.4" y="389" width="0.7" height="15.0" fill="rgb(211,69,49)" rx="2" ry="2" />
<text  x="737.42" y="399.5" ></text>
</g>
<g >
<title>serialize (1 samples, 0.02%)</title><rect x="68.7" y="389" width="0.2" height="15.0" fill="rgb(220,191,34)" rx="2" ry="2" />
<text  x="71.68" y="399.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_nodes (1 samples, 0.02%)</title><rect x="1160.1" y="549" width="0.2" height="15.0" fill="rgb(213,168,5)" rx="2" ry="2" />
<text  x="1163.10" y="559.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::__do_dyncast (7 samples, 0.13%)</title><rect x="12.0" y="677" width="1.6" height="15.0" fill="rgb(249,147,38)" rx="2" ry="2" />
<text  x="15.01" y="687.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::partition_tombstone (10 samples, 0.19%)</title><rect x="512.2" y="341" width="2.2" height="15.0" fill="rgb(250,162,36)" rx="2" ry="2" />
<text  x="515.21" y="351.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="877.4" y="405" width="0.3" height="15.0" fill="rgb(220,99,39)" rx="2" ry="2" />
<text  x="880.43" y="415.5" ></text>
</g>
<g >
<title>mutation_partition::clustered_row (1 samples, 0.02%)</title><rect x="105.5" y="549" width="0.2" height="15.0" fill="rgb(240,50,41)" rx="2" ry="2" />
<text  x="108.49" y="559.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::_M_erase_at_end (1 samples, 0.02%)</title><rect x="20.3" y="437" width="0.2" height="15.0" fill="rgb(250,136,16)" rx="2" ry="2" />
<text  x="23.26" y="447.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (2 samples, 0.04%)</title><rect x="1007.5" y="261" width="0.4" height="15.0" fill="rgb(231,100,53)" rx="2" ry="2" />
<text  x="1010.50" y="271.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::push_back (22 samples, 0.42%)</title><rect x="1007.9" y="293" width="5.0" height="15.0" fill="rgb(231,16,16)" rx="2" ry="2" />
<text  x="1010.95" y="303.5" ></text>
</g>
<g >
<title>clustering_row::external_memory_usage (2 samples, 0.04%)</title><rect x="214.1" y="277" width="0.5" height="15.0" fill="rgb(247,48,37)" rx="2" ry="2" />
<text  x="217.14" y="287.5" ></text>
</g>
<g >
<title>query::querier&lt; (1 samples, 0.02%)</title><rect x="141.4" y="533" width="0.2" height="15.0" fill="rgb(230,222,35)" rx="2" ry="2" />
<text  x="144.41" y="543.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="661.0" y="533" width="0.2" height="15.0" fill="rgb(240,40,27)" rx="2" ry="2" />
<text  x="664.02" y="543.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="676.0" y="501" width="0.2" height="15.0" fill="rgb(238,220,43)" rx="2" ry="2" />
<text  x="678.97" y="511.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (3 samples, 0.06%)</title><rect x="442.6" y="517" width="0.7" height="15.0" fill="rgb(252,107,18)" rx="2" ry="2" />
<text  x="445.60" y="527.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::clear (2 samples, 0.04%)</title><rect x="462.2" y="373" width="0.5" height="15.0" fill="rgb(229,10,5)" rx="2" ry="2" />
<text  x="465.23" y="383.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (1 samples, 0.02%)</title><rect x="480.3" y="373" width="0.2" height="15.0" fill="rgb(245,184,36)" rx="2" ry="2" />
<text  x="483.30" y="383.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::apply_updates (15 samples, 0.28%)</title><rect x="856.0" y="469" width="3.4" height="15.0" fill="rgb(226,103,2)" rx="2" ry="2" />
<text  x="859.01" y="479.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;gms::inet_address*, __gnu_cxx::__ops::_Iter_pred&lt;std::unary_negate&lt;std::binder1st&lt;std::_Mem_fn&lt;bool  (8 samples, 0.15%)</title><rect x="1072.9" y="405" width="1.8" height="15.0" fill="rgb(241,8,45)" rx="2" ry="2" />
<text  x="1075.87" y="415.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::pop_clustering_row (1 samples, 0.02%)</title><rect x="261.2" y="293" width="0.2" height="15.0" fill="rgb(246,19,53)" rx="2" ry="2" />
<text  x="264.22" y="303.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::~result_memory_accounter (1 samples, 0.02%)</title><rect x="588.3" y="533" width="0.2" height="15.0" fill="rgb(205,2,50)" rx="2" ry="2" />
<text  x="591.29" y="543.5" ></text>
</g>
<g >
<title>db::schema_tables::add_table_params_to_mutations (1 samples, 0.02%)</title><rect x="677.1" y="325" width="0.2" height="15.0" fill="rgb(233,95,15)" rx="2" ry="2" />
<text  x="680.08" y="335.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (4 samples, 0.08%)</title><rect x="155.0" y="517" width="0.9" height="15.0" fill="rgb(252,160,28)" rx="2" ry="2" />
<text  x="158.02" y="527.5" ></text>
</g>
<g >
<title>utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (1 samples, 0.02%)</title><rect x="76.9" y="373" width="0.3" height="15.0" fill="rgb(223,215,41)" rx="2" ry="2" />
<text  x="79.93" y="383.5" ></text>
</g>
<g >
<title>std::operator+ (3 samples, 0.06%)</title><rect x="52.4" y="213" width="0.7" height="15.0" fill="rgb(240,153,1)" rx="2" ry="2" />
<text  x="55.39" y="223.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;::operator (5 samples, 0.09%)</title><rect x="720.6" y="421" width="1.1" height="15.0" fill="rgb(218,117,37)" rx="2" ry="2" />
<text  x="723.59" y="431.5" ></text>
</g>
<g >
<title>ser::get_sizeof&lt;partition_key&gt; (1 samples, 0.02%)</title><rect x="107.3" y="453" width="0.2" height="15.0" fill="rgb(231,171,39)" rx="2" ry="2" />
<text  x="110.27" y="463.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::trivial_direct_move&lt;16ul&gt; (2 samples, 0.04%)</title><rect x="1008.6" y="245" width="0.5" height="15.0" fill="rgb(251,220,15)" rx="2" ry="2" />
<text  x="1011.62" y="255.5" ></text>
</g>
<g >
<title>partition_version_ref::operator (1 samples, 0.02%)</title><rect x="1124.0" y="341" width="0.2" height="15.0" fill="rgb(242,218,3)" rx="2" ry="2" />
<text  x="1126.96" y="351.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::close (73 samples, 1.38%)</title><rect x="553.0" y="485" width="16.3" height="15.0" fill="rgb(205,217,3)" rx="2" ry="2" />
<text  x="556.04" y="495.5" ></text>
</g>
<g >
<title>locator::i_endpoint_snitch::get_local_snitch_ptr (1 samples, 0.02%)</title><rect x="1075.3" y="405" width="0.2" height="15.0" fill="rgb(243,160,54)" rx="2" ry="2" />
<text  x="1078.32" y="415.5" ></text>
</g>
<g >
<title>service::migration_manager::announce_new_column_family (1 samples, 0.02%)</title><rect x="677.1" y="469" width="0.2" height="15.0" fill="rgb(249,83,40)" rx="2" ry="2" />
<text  x="680.08" y="479.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::lsa_partition_reader::next_range_tombstone (1 samples, 0.02%)</title><rect x="80.7" y="389" width="0.2" height="15.0" fill="rgb(225,119,51)" rx="2" ry="2" />
<text  x="83.72" y="399.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (8 samples, 0.15%)</title><rect x="53.3" y="341" width="1.8" height="15.0" fill="rgb(206,160,51)" rx="2" ry="2" />
<text  x="56.28" y="351.5" ></text>
</g>
<g >
<title>utils::array_search_gt (1 samples, 0.02%)</title><rect x="529.4" y="373" width="0.2" height="15.0" fill="rgb(237,137,35)" rx="2" ry="2" />
<text  x="532.39" y="383.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (1 samples, 0.02%)</title><rect x="1083.4" y="485" width="0.2" height="15.0" fill="rgb(234,41,13)" rx="2" ry="2" />
<text  x="1086.36" y="495.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::get_promise (1 samples, 0.02%)</title><rect x="992.3" y="373" width="0.3" height="15.0" fill="rgb(246,69,53)" rx="2" ry="2" />
<text  x="995.33" y="383.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.02%)</title><rect x="24.7" y="341" width="0.2" height="15.0" fill="rgb(207,100,28)" rx="2" ry="2" />
<text  x="27.72" y="351.5" ></text>
</g>
<g >
<title>__tls_init (2 samples, 0.04%)</title><rect x="500.2" y="357" width="0.4" height="15.0" fill="rgb(243,204,52)" rx="2" ry="2" />
<text  x="503.16" y="367.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_restrictions::has_supporting_index (2 samples, 0.04%)</title><rect x="69.6" y="485" width="0.4" height="15.0" fill="rgb(216,161,29)" rx="2" ry="2" />
<text  x="72.57" y="495.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (2 samples, 0.04%)</title><rect x="47.5" y="357" width="0.4" height="15.0" fill="rgb(245,228,39)" rx="2" ry="2" />
<text  x="50.48" y="367.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="394.2" y="245" width="0.2" height="15.0" fill="rgb(221,228,19)" rx="2" ry="2" />
<text  x="397.19" y="255.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::allocate_on (1 samples, 0.02%)</title><rect x="857.8" y="357" width="0.2" height="15.0" fill="rgb(232,56,46)" rx="2" ry="2" />
<text  x="860.80" y="367.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::emplace&lt;atomic_cell_or_collection, seastar::optimized_optional&lt;cell_hash&gt; &gt; (2 samples, 0.04%)</title><rect x="857.8" y="373" width="0.4" height="15.0" fill="rgb(225,222,13)" rx="2" ry="2" />
<text  x="860.80" y="383.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::query_processor::process_authorized_statement (1 samples, 0.02%)</title><rect x="84.7" y="613" width="0.3" height="15.0" fill="rgb(208,196,0)" rx="2" ry="2" />
<text  x="87.74" y="623.5" ></text>
</g>
<g >
<title>logalloc::basic_region_impl::set_reclaiming_enabled (1 samples, 0.02%)</title><rect x="288.4" y="325" width="0.3" height="15.0" fill="rgb(210,37,52)" rx="2" ry="2" />
<text  x="291.43" y="335.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_M_reset (2 samples, 0.04%)</title><rect x="582.3" y="501" width="0.4" height="15.0" fill="rgb(250,83,7)" rx="2" ry="2" />
<text  x="585.26" y="511.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="488.8" y="277" width="0.2" height="15.0" fill="rgb(221,124,38)" rx="2" ry="2" />
<text  x="491.78" y="287.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;::operator== (5 samples, 0.09%)</title><rect x="732.9" y="389" width="1.1" height="15.0" fill="rgb(244,79,28)" rx="2" ry="2" />
<text  x="735.86" y="399.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::get_promise (1 samples, 0.02%)</title><rect x="744.0" y="501" width="0.2" height="15.0" fill="rgb(227,143,34)" rx="2" ry="2" />
<text  x="747.01" y="511.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_no_esft&lt;query::read_command&gt;::shared_ptr_no_esft&lt;utils::UUID const&amp;, utils::UUID, query::partition_slice, query::max_result_size, query::row_limit, query::partition_limit, std::chrono::time_point&lt;gc_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt; &gt;&amp;, std::optional&lt;tracing::trace_info&gt;, utils::UUID, seastar::bool_class&lt;query::is_first_page_tag&gt; const&amp;, long&gt; (13 samples, 0.25%)</title><rect x="1104.3" y="501" width="2.9" height="15.0" fill="rgb(250,109,10)" rx="2" ry="2" />
<text  x="1107.33" y="511.5" ></text>
</g>
<g >
<title>logalloc::segment::occupancy (1 samples, 0.02%)</title><rect x="1134.0" y="181" width="0.2" height="15.0" fill="rgb(246,121,44)" rx="2" ry="2" />
<text  x="1137.00" y="191.5" ></text>
</g>
<g >
<title>mutation_fragment::consume&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (1 samples, 0.02%)</title><rect x="432.6" y="373" width="0.2" height="15.0" fill="rgb(207,108,49)" rx="2" ry="2" />
<text  x="435.56" y="383.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::emplace_back&lt;mutation_fragment&gt; (1 samples, 0.02%)</title><rect x="295.6" y="373" width="0.2" height="15.0" fill="rgb(240,134,42)" rx="2" ry="2" />
<text  x="298.57" y="383.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (2 samples, 0.04%)</title><rect x="256.1" y="261" width="0.4" height="15.0" fill="rgb(216,179,6)" rx="2" ry="2" />
<text  x="259.08" y="271.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="1120.4" y="277" width="0.2" height="15.0" fill="rgb(206,198,30)" rx="2" ry="2" />
<text  x="1123.39" y="287.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (109 samples, 2.06%)</title><rect x="36.3" y="469" width="24.3" height="15.0" fill="rgb(238,170,26)" rx="2" ry="2" />
<text  x="39.33" y="479.5" >c..</text>
</g>
<g >
<title>locator::token_metadata::first_token (39 samples, 0.74%)</title><rect x="1058.6" y="373" width="8.7" height="15.0" fill="rgb(233,67,24)" rx="2" ry="2" />
<text  x="1061.59" y="383.5" ></text>
</g>
<g >
<title>bound_view::from_range&lt;nonwrapping_interval&gt; (8 samples, 0.15%)</title><rect x="276.6" y="293" width="1.8" height="15.0" fill="rgb(206,15,42)" rx="2" ry="2" />
<text  x="279.61" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;global_schema_ptr, std::allocator&lt;global_schema_ptr&gt; &gt;::emplace_back&lt;seastar::lw_shared_ptr&lt;schema const&gt;&amp;&gt; (1 samples, 0.02%)</title><rect x="105.7" y="549" width="0.2" height="15.0" fill="rgb(215,115,44)" rx="2" ry="2" />
<text  x="108.71" y="559.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (3 samples, 0.06%)</title><rect x="529.8" y="405" width="0.7" height="15.0" fill="rgb(215,110,33)" rx="2" ry="2" />
<text  x="532.83" y="415.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (3 samples, 0.06%)</title><rect x="40.1" y="341" width="0.7" height="15.0" fill="rgb(211,93,54)" rx="2" ry="2" />
<text  x="43.12" y="351.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.06%)</title><rect x="1152.3" y="533" width="0.7" height="15.0" fill="rgb(208,14,54)" rx="2" ry="2" />
<text  x="1155.30" y="543.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (283 samples, 5.35%)</title><rect x="15.6" y="693" width="63.1" height="15.0" fill="rgb(227,94,49)" rx="2" ry="2" />
<text  x="18.58" y="703.5" >seasta..</text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (5 samples, 0.09%)</title><rect x="794.0" y="325" width="1.1" height="15.0" fill="rgb(241,187,42)" rx="2" ry="2" />
<text  x="796.99" y="335.5" ></text>
</g>
<g >
<title>table::mutation_query (1 samples, 0.02%)</title><rect x="141.4" y="549" width="0.2" height="15.0" fill="rgb(234,69,35)" rx="2" ry="2" />
<text  x="144.41" y="559.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (1 samples, 0.02%)</title><rect x="352.0" y="261" width="0.2" height="15.0" fill="rgb(234,222,11)" rx="2" ry="2" />
<text  x="355.02" y="271.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::process_where_clause (23 samples, 0.43%)</title><rect x="67.8" y="517" width="5.1" height="15.0" fill="rgb(252,63,26)" rx="2" ry="2" />
<text  x="70.78" y="527.5" ></text>
</g>
<g >
<title>mutation::set_clustered_cell (1 samples, 0.02%)</title><rect x="102.4" y="533" width="0.2" height="15.0" fill="rgb(229,1,11)" rx="2" ry="2" />
<text  x="105.37" y="543.5" ></text>
</g>
<g >
<title>malloc (2 samples, 0.04%)</title><rect x="55.1" y="325" width="0.4" height="15.0" fill="rgb(222,18,25)" rx="2" ry="2" />
<text  x="58.07" y="335.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (2 samples, 0.04%)</title><rect x="748.0" y="421" width="0.5" height="15.0" fill="rgb(244,190,47)" rx="2" ry="2" />
<text  x="751.03" y="431.5" ></text>
</g>
<g >
<title>query::partition_slice::row_ranges (1 samples, 0.02%)</title><rect x="417.8" y="325" width="0.3" height="15.0" fill="rgb(240,134,16)" rx="2" ry="2" />
<text  x="420.84" y="335.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_prepared (1 samples, 0.02%)</title><rect x="849.5" y="581" width="0.3" height="15.0" fill="rgb(213,53,30)" rx="2" ry="2" />
<text  x="852.54" y="591.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (3 samples, 0.06%)</title><rect x="1042.5" y="357" width="0.7" height="15.0" fill="rgb(214,165,54)" rx="2" ry="2" />
<text  x="1045.53" y="367.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (1 samples, 0.02%)</title><rect x="76.7" y="325" width="0.2" height="15.0" fill="rgb(239,38,25)" rx="2" ry="2" />
<text  x="79.71" y="335.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIN7seastar10shared_ptrIN4cql34termEEEEER18overloaded_functorIJZNS6_4expr12prepare_termERKNSB_10expressionER8databaseRKNS4_13basic_sstringIcjLj15ELb1EEENS4_13lw_shared_ptrINS6_20column_specificationEEEE3$_0ZNSB_12prepare_termESE_SG_SK_SN_E3$_1ZNSB_12prepare_termESE_SG_SK_SN_E3$_2ZNSB_12prepare_termESE_SG_SK_SN_E3$_3ZNSB_12prepare_termESE_SG_SK_SN_E3$_4ZNSB_12prepare_termESE_SG_SK_SN_E3$_5ZNSB_12prepare_termESE_SG_SK_SN_E3$_6ZNSB_12prepare_termESE_SG_SK_SN_E3$_7ZNSB_12prepare_termESE_SG_SK_SN_E3$_8ZNSB_12prepare_termESE_SG_SK_SN_E3$_9ZNSB_12prepare_termESE_SG_SK_SN_E4$_10ZNSB_12prepare_termESE_SG_SK_SN_E4$_11ZNSB_12prepare_termESE_SG_SK_SN_E4$_12ZNSB_12prepare_termESE_SG_SK_SN_E4$_13ZNSB_12prepare_termESE_SG_SK_SN_E4$_14ZNSB_12prepare_termESE_SG_SK_SN_E4$_15EERSt7variantIJNSB_11conjunctionENSB_15binary_operatorENSB_12column_valueENSB_5tokenENSB_21unresolved_identifierENSB_25column_mutation_attributeENSB_13function_callENSB_4castENSB_15field_selectionENSB_4nullENSB_13bind_variableENSB_16untyped_constantENSB_8constantENSB_17tuple_constructorENSB_22collection_constructorENSB_20usertype_constructorEEEEJEEESt16integer_sequenceImJLm11EEEE14__visit_invokeES15_S1O_ (9 samples, 0.17%)</title><rect x="65.3" y="485" width="2.0" height="15.0" fill="rgb(228,53,47)" rx="2" ry="2" />
<text  x="68.33" y="495.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::clear (1 samples, 0.02%)</title><rect x="461.6" y="389" width="0.2" height="15.0" fill="rgb(231,174,15)" rx="2" ry="2" />
<text  x="464.56" y="399.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (2 samples, 0.04%)</title><rect x="328.1" y="357" width="0.5" height="15.0" fill="rgb(236,53,8)" rx="2" ry="2" />
<text  x="331.15" y="367.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::signal (1 samples, 0.02%)</title><rect x="312.1" y="389" width="0.2" height="15.0" fill="rgb(213,14,36)" rx="2" ry="2" />
<text  x="315.08" y="399.5" ></text>
</g>
<g >
<title>auth::create_metadata_table_if_missing (1 samples, 0.02%)</title><rect x="677.1" y="533" width="0.2" height="15.0" fill="rgb(212,218,44)" rx="2" ry="2" />
<text  x="680.08" y="543.5" ></text>
</g>
<g >
<title>auth::resource::resource (1 samples, 0.02%)</title><rect x="75.6" y="549" width="0.2" height="15.0" fill="rgb(221,76,19)" rx="2" ry="2" />
<text  x="78.59" y="559.5" ></text>
</g>
<g >
<title>cql3::raw_value::to_view (1 samples, 0.02%)</title><rect x="839.1" y="485" width="0.2" height="15.0" fill="rgb(236,124,53)" rx="2" ry="2" />
<text  x="842.06" y="495.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::get_promise (2 samples, 0.04%)</title><rect x="980.1" y="373" width="0.4" height="15.0" fill="rgb(251,138,15)" rx="2" ry="2" />
<text  x="983.06" y="383.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="885.5" y="357" width="0.2" height="15.0" fill="rgb(209,85,19)" rx="2" ry="2" />
<text  x="888.46" y="367.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (2 samples, 0.04%)</title><rect x="579.1" y="501" width="0.5" height="15.0" fill="rgb(234,215,50)" rx="2" ry="2" />
<text  x="582.14" y="511.5" ></text>
</g>
<g >
<title>seastar::reactor_backend_aio::reap_kernel_completions (4 samples, 0.08%)</title><rect x="1166.8" y="597" width="0.9" height="15.0" fill="rgb(230,148,27)" rx="2" ry="2" />
<text  x="1169.80" y="607.5" ></text>
</g>
<g >
<title>cql3::statements::prepared_statement::checked_weak_from_this (9 samples, 0.17%)</title><rect x="717.2" y="517" width="2.0" height="15.0" fill="rgb(231,34,34)" rx="2" ry="2" />
<text  x="720.24" y="527.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="1129.5" y="197" width="0.3" height="15.0" fill="rgb(227,90,51)" rx="2" ry="2" />
<text  x="1132.54" y="207.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::pop_clustering_row (5 samples, 0.09%)</title><rect x="260.1" y="277" width="1.1" height="15.0" fill="rgb(224,147,6)" rx="2" ry="2" />
<text  x="263.10" y="287.5" ></text>
</g>
<g >
<title>partition_entry::evict (1 samples, 0.02%)</title><rect x="1137.3" y="485" width="0.3" height="15.0" fill="rgb(213,137,32)" rx="2" ry="2" />
<text  x="1140.35" y="495.5" ></text>
</g>
<g >
<title>service::client_state::ensure_has_permission (167 samples, 3.16%)</title><rect x="764.1" y="453" width="37.3" height="15.0" fill="rgb(241,29,5)" rx="2" ry="2" />
<text  x="767.09" y="463.5" >ser..</text>
</g>
<g >
<title>basic_atomic_cell_view&lt; (21 samples, 0.40%)</title><rect x="408.9" y="261" width="4.7" height="15.0" fill="rgb(233,86,20)" rx="2" ry="2" />
<text  x="411.91" y="271.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::clear (4 samples, 0.08%)</title><rect x="294.7" y="373" width="0.9" height="15.0" fill="rgb(221,117,15)" rx="2" ry="2" />
<text  x="297.68" y="383.5" ></text>
</g>
<g >
<title>std::visit&lt;overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::has_token (1 samples, 0.02%)</title><rect x="640.0" y="501" width="0.3" height="15.0" fill="rgb(244,97,15)" rx="2" ry="2" />
<text  x="643.05" y="511.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_singular (1 samples, 0.02%)</title><rect x="1166.1" y="613" width="0.3" height="15.0" fill="rgb(249,121,25)" rx="2" ry="2" />
<text  x="1169.13" y="623.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.04%)</title><rect x="57.5" y="341" width="0.5" height="15.0" fill="rgb(232,20,30)" rx="2" ry="2" />
<text  x="60.52" y="351.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="154.3" y="533" width="0.3" height="15.0" fill="rgb(245,66,32)" rx="2" ry="2" />
<text  x="157.35" y="543.5" ></text>
</g>
<g >
<title>seastar::memory::configure (1 samples, 0.02%)</title><rect x="1167.9" y="629" width="0.2" height="15.0" fill="rgb(244,151,11)" rx="2" ry="2" />
<text  x="1170.91" y="639.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::close (2 samples, 0.04%)</title><rect x="568.0" y="437" width="0.4" height="15.0" fill="rgb(233,94,49)" rx="2" ry="2" />
<text  x="570.98" y="447.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.02%)</title><rect x="676.0" y="453" width="0.2" height="15.0" fill="rgb(210,52,43)" rx="2" ry="2" />
<text  x="678.97" y="463.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (43 samples, 0.81%)</title><rect x="228.9" y="197" width="9.6" height="15.0" fill="rgb(243,109,11)" rx="2" ry="2" />
<text  x="231.87" y="207.5" ></text>
</g>
<g >
<title>bplus::tree&lt;long, intrusive_array&lt;cache_entry&gt;, dht::raw_token_less_comparator, 16ul,  (9 samples, 0.17%)</title><rect x="527.6" y="389" width="2.0" height="15.0" fill="rgb(224,57,25)" rx="2" ry="2" />
<text  x="530.60" y="399.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (1 samples, 0.02%)</title><rect x="806.5" y="437" width="0.2" height="15.0" fill="rgb(250,160,34)" rx="2" ry="2" />
<text  x="809.48" y="447.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::query_options, std::default_delete&lt;cql3::query_options&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="837.3" y="533" width="0.2" height="15.0" fill="rgb(219,169,13)" rx="2" ry="2" />
<text  x="840.27" y="543.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;service::storage_proxy::unique_response_handler*, service::storage_proxy::mutate_begin (10 samples, 0.19%)</title><rect x="1126.9" y="373" width="2.2" height="15.0" fill="rgb(242,90,5)" rx="2" ry="2" />
<text  x="1129.86" y="383.5" ></text>
</g>
<g >
<title>__tls_init (1 samples, 0.02%)</title><rect x="1117.9" y="325" width="0.3" height="15.0" fill="rgb(217,194,38)" rx="2" ry="2" />
<text  x="1120.94" y="335.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.02%)</title><rect x="58.0" y="421" width="0.2" height="15.0" fill="rgb(239,205,20)" rx="2" ry="2" />
<text  x="60.97" y="431.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reclaiming_disabled&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (1 samples, 0.02%)</title><rect x="210.6" y="325" width="0.2" height="15.0" fill="rgb(221,84,33)" rx="2" ry="2" />
<text  x="213.57" y="335.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (1 samples, 0.02%)</title><rect x="759.6" y="469" width="0.3" height="15.0" fill="rgb(210,91,7)" rx="2" ry="2" />
<text  x="762.63" y="479.5" ></text>
</g>
<g >
<title>__libc_csu_init (5 samples, 0.09%)</title><rect x="83.2" y="725" width="1.1" height="15.0" fill="rgb(222,122,19)" rx="2" ry="2" />
<text  x="86.18" y="735.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::contains&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (20 samples, 0.38%)</title><rect x="825.7" y="501" width="4.4" height="15.0" fill="rgb(222,6,26)" rx="2" ry="2" />
<text  x="828.67" y="511.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.06%)</title><rect x="439.3" y="469" width="0.6" height="15.0" fill="rgb(212,65,44)" rx="2" ry="2" />
<text  x="442.25" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::_M_range_initialize&lt;nonwrapping_interval&lt;dht::ring_position&gt; const*&gt; (1 samples, 0.02%)</title><rect x="924.7" y="501" width="0.3" height="15.0" fill="rgb(226,225,9)" rx="2" ry="2" />
<text  x="927.73" y="511.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_range_tombstone (1 samples, 0.02%)</title><rect x="200.3" y="341" width="0.2" height="15.0" fill="rgb(243,58,8)" rx="2" ry="2" />
<text  x="203.31" y="351.5" ></text>
</g>
<g >
<title>db::schema_tables::calculate_schema_digest (1 samples, 0.02%)</title><rect x="17.1" y="469" width="0.3" height="15.0" fill="rgb(230,104,14)" rx="2" ry="2" />
<text  x="20.14" y="479.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.02%)</title><rect x="107.5" y="357" width="0.2" height="15.0" fill="rgb(232,203,5)" rx="2" ry="2" />
<text  x="110.50" y="367.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.04%)</title><rect x="97.5" y="549" width="0.4" height="15.0" fill="rgb(214,55,16)" rx="2" ry="2" />
<text  x="100.46" y="559.5" ></text>
</g>
<g >
<title>cql3::constants::setter::execute (9 samples, 0.17%)</title><rect x="856.5" y="405" width="2.0" height="15.0" fill="rgb(222,86,30)" rx="2" ry="2" />
<text  x="859.46" y="415.5" ></text>
</g>
<g >
<title>db::schema_tables::read_tables_for_keyspaces (1 samples, 0.02%)</title><rect x="106.6" y="597" width="0.2" height="15.0" fill="rgb(208,3,10)" rx="2" ry="2" />
<text  x="109.60" y="607.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;false, false, std::random_access_iterator_tag&gt;::__copy_m&lt;char const*, fmt::v7::detail::buffer_appender&lt;char&gt; &gt; (3 samples, 0.06%)</title><rect x="18.7" y="581" width="0.7" height="15.0" fill="rgb(220,211,27)" rx="2" ry="2" />
<text  x="21.70" y="591.5" ></text>
</g>
<g >
<title>intrusive_b::node&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (1 samples, 0.02%)</title><rect x="106.2" y="437" width="0.2" height="15.0" fill="rgb(225,16,51)" rx="2" ry="2" />
<text  x="109.16" y="447.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_create_nodes (4 samples, 0.08%)</title><rect x="545.7" y="453" width="0.9" height="15.0" fill="rgb(246,35,41)" rx="2" ry="2" />
<text  x="548.67" y="463.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (2 samples, 0.04%)</title><rect x="41.2" y="261" width="0.5" height="15.0" fill="rgb(254,104,45)" rx="2" ry="2" />
<text  x="44.23" y="271.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::do_fill_buffer (3 samples, 0.06%)</title><rect x="80.3" y="421" width="0.6" height="15.0" fill="rgb(244,144,43)" rx="2" ry="2" />
<text  x="83.28" y="431.5" ></text>
</g>
<g >
<title>atomic_cell::make_live (3 samples, 0.06%)</title><rect x="1120.2" y="325" width="0.6" height="15.0" fill="rgb(221,45,35)" rx="2" ry="2" />
<text  x="1123.17" y="335.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;std::vector&lt;cql3::query_options, std::allocator&lt;cql3::query_options&gt; &gt; &gt;::_M_reset (1 samples, 0.02%)</title><rect x="660.3" y="565" width="0.3" height="15.0" fill="rgb(233,58,33)" rx="2" ry="2" />
<text  x="663.35" y="575.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;auth::resource&gt;::_Optional_payload_base (1 samples, 0.02%)</title><rect x="76.0" y="469" width="0.3" height="15.0" fill="rgb(239,3,41)" rx="2" ry="2" />
<text  x="79.04" y="479.5" ></text>
</g>
<g >
<title>seastar::format&lt;char const* const&amp;&gt; (4 samples, 0.08%)</title><rect x="83.4" y="693" width="0.9" height="15.0" fill="rgb(247,84,27)" rx="2" ry="2" />
<text  x="86.40" y="703.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::allocate (5 samples, 0.09%)</title><rect x="506.0" y="309" width="1.1" height="15.0" fill="rgb(236,83,14)" rx="2" ry="2" />
<text  x="508.96" y="319.5" ></text>
</g>
<g >
<title>sstables::compaction_strategy::operator= (1 samples, 0.02%)</title><rect x="107.7" y="549" width="0.2" height="15.0" fill="rgb(252,220,35)" rx="2" ry="2" />
<text  x="110.72" y="559.5" ></text>
</g>
<g >
<title>sstables::compaction_strategy_impl::~compaction_strategy_impl (1 samples, 0.02%)</title><rect x="107.7" y="501" width="0.2" height="15.0" fill="rgb(212,222,24)" rx="2" ry="2" />
<text  x="110.72" y="511.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (4 samples, 0.08%)</title><rect x="43.2" y="309" width="0.9" height="15.0" fill="rgb(217,10,12)" rx="2" ry="2" />
<text  x="46.24" y="319.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.29] (2 samples, 0.04%)</title><rect x="943.5" y="485" width="0.4" height="15.0" fill="rgb(212,47,34)" rx="2" ry="2" />
<text  x="946.47" y="495.5" ></text>
</g>
<g >
<title>free (1 samples, 0.02%)</title><rect x="107.7" y="485" width="0.2" height="15.0" fill="rgb(225,56,43)" rx="2" ry="2" />
<text  x="110.72" y="495.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::~guard (3 samples, 0.06%)</title><rect x="489.5" y="421" width="0.6" height="15.0" fill="rgb(247,93,52)" rx="2" ry="2" />
<text  x="492.45" y="431.5" ></text>
</g>
<g >
<title>flat_mutation_reader::peek (1 samples, 0.02%)</title><rect x="105.9" y="389" width="0.3" height="15.0" fill="rgb(240,134,5)" rx="2" ry="2" />
<text  x="108.93" y="399.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::query_options, std::default_delete&lt;cql3::query_options&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="845.3" y="565" width="0.2" height="15.0" fill="rgb(207,31,50)" rx="2" ry="2" />
<text  x="848.30" y="575.5" ></text>
</g>
<g >
<title>service::storage_proxy::create_write_response_handler (2 samples, 0.04%)</title><rect x="1131.5" y="293" width="0.5" height="15.0" fill="rgb(253,102,22)" rx="2" ry="2" />
<text  x="1134.55" y="303.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.02%)</title><rect x="704.5" y="357" width="0.2" height="15.0" fill="rgb(243,180,20)" rx="2" ry="2" />
<text  x="707.52" y="367.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.09%)</title><rect x="940.1" y="501" width="1.1" height="15.0" fill="rgb(253,69,26)" rx="2" ry="2" />
<text  x="943.12" y="511.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;clustering_key_prefix&gt;::wrapping_interval (1 samples, 0.02%)</title><rect x="1089.8" y="453" width="0.2" height="15.0" fill="rgb(225,180,20)" rx="2" ry="2" />
<text  x="1092.83" y="463.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::push_mutation_fragment&lt;schema const&amp;, reader_permit&amp;, partition_start&gt; (1 samples, 0.02%)</title><rect x="500.6" y="357" width="0.2" height="15.0" fill="rgb(219,150,12)" rx="2" ry="2" />
<text  x="503.61" y="367.5" ></text>
</g>
<g >
<title>make_empty_flat_reader (21 samples, 0.40%)</title><rect x="530.7" y="405" width="4.7" height="15.0" fill="rgb(210,46,29)" rx="2" ry="2" />
<text  x="533.73" y="415.5" ></text>
</g>
<g >
<title>service::storage_proxy::got_response (4 samples, 0.08%)</title><rect x="703.6" y="581" width="0.9" height="15.0" fill="rgb(249,118,26)" rx="2" ry="2" />
<text  x="706.63" y="591.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, false, false&gt;::operator= (1 samples, 0.02%)</title><rect x="38.3" y="405" width="0.3" height="15.0" fill="rgb(238,11,12)" rx="2" ry="2" />
<text  x="41.33" y="415.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (1 samples, 0.02%)</title><rect x="82.3" y="517" width="0.2" height="15.0" fill="rgb(215,139,36)" rx="2" ry="2" />
<text  x="85.29" y="527.5" ></text>
</g>
<g >
<title>seastar::future&lt;query::result_memory_accounter&gt;::get0 (3 samples, 0.06%)</title><rect x="597.2" y="533" width="0.7" height="15.0" fill="rgb(215,119,27)" rx="2" ry="2" />
<text  x="600.21" y="543.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.02%)</title><rect x="950.2" y="469" width="0.2" height="15.0" fill="rgb(215,152,5)" rx="2" ry="2" />
<text  x="953.16" y="479.5" ></text>
</g>
<g >
<title>utils::crc32::process (1 samples, 0.02%)</title><rect x="1124.9" y="341" width="0.2" height="15.0" fill="rgb(233,190,42)" rx="2" ry="2" />
<text  x="1127.85" y="351.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (2 samples, 0.04%)</title><rect x="918.7" y="501" width="0.5" height="15.0" fill="rgb(210,148,43)" rx="2" ry="2" />
<text  x="921.70" y="511.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::~unique_ptr (6 samples, 0.11%)</title><rect x="889.0" y="421" width="1.4" height="15.0" fill="rgb(230,140,2)" rx="2" ry="2" />
<text  x="892.03" y="431.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_construct&lt;interval_bound&lt;dht::ring_position&gt; const&amp;&gt; (1 samples, 0.02%)</title><rect x="1027.8" y="325" width="0.2" height="15.0" fill="rgb(230,43,11)" rx="2" ry="2" />
<text  x="1030.80" y="335.5" ></text>
</g>
<g >
<title>sstables::mc::writer::write_cell (2 samples, 0.04%)</title><rect x="81.6" y="389" width="0.5" height="15.0" fill="rgb(221,191,0)" rx="2" ry="2" />
<text  x="84.62" y="399.5" ></text>
</g>
<g >
<title>_dl_sysdep_start (1 samples, 0.02%)</title><rect x="79.2" y="709" width="0.2" height="15.0" fill="rgb(245,141,47)" rx="2" ry="2" />
<text  x="82.16" y="719.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;reader_permit::impl, true&gt;::make&lt;reader_concurrency_semaphore&amp;, schema const* const&amp;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;&amp;, reader_resources&amp;, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;&amp;&gt; (11 samples, 0.21%)</title><rect x="1016.0" y="325" width="2.4" height="15.0" fill="rgb(232,158,29)" rx="2" ry="2" />
<text  x="1018.98" y="335.5" ></text>
</g>
<g >
<title>operator new (6 samples, 0.11%)</title><rect x="742.7" y="501" width="1.3" height="15.0" fill="rgb(225,79,36)" rx="2" ry="2" />
<text  x="745.68" y="511.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (3 samples, 0.06%)</title><rect x="274.4" y="277" width="0.6" height="15.0" fill="rgb(215,73,31)" rx="2" ry="2" />
<text  x="277.38" y="287.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::drop_unneeded_tombstones (1 samples, 0.02%)</title><rect x="402.2" y="293" width="0.2" height="15.0" fill="rgb(214,126,51)" rx="2" ry="2" />
<text  x="405.22" y="303.5" ></text>
</g>
<g >
<title>bplus::searcher&lt;dht::ring_position, long, dht::raw_token_less_comparator, 16ul,  (19 samples, 0.36%)</title><rect x="476.1" y="373" width="4.2" height="15.0" fill="rgb(210,17,15)" rx="2" ry="2" />
<text  x="479.07" y="383.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::future (1 samples, 0.02%)</title><rect x="960.9" y="453" width="0.2" height="15.0" fill="rgb(232,87,21)" rx="2" ry="2" />
<text  x="963.87" y="463.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::~statement_restrictions (1 samples, 0.02%)</title><rect x="632.9" y="549" width="0.2" height="15.0" fill="rgb(229,25,20)" rx="2" ry="2" />
<text  x="635.91" y="559.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (1 samples, 0.02%)</title><rect x="48.6" y="373" width="0.2" height="15.0" fill="rgb(224,76,52)" rx="2" ry="2" />
<text  x="51.60" y="383.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::net::inet_address&gt;::operator (1 samples, 0.02%)</title><rect x="1164.8" y="517" width="0.2" height="15.0" fill="rgb(226,2,37)" rx="2" ry="2" />
<text  x="1167.79" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="1112.8" y="517" width="0.2" height="15.0" fill="rgb(237,191,41)" rx="2" ry="2" />
<text  x="1115.81" y="527.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;void&gt;::set_value&lt;&gt; (1 samples, 0.02%)</title><rect x="692.7" y="565" width="0.2" height="15.0" fill="rgb(214,225,12)" rx="2" ry="2" />
<text  x="695.70" y="575.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (3 samples, 0.06%)</title><rect x="819.4" y="469" width="0.7" height="15.0" fill="rgb(244,46,16)" rx="2" ry="2" />
<text  x="822.42" y="479.5" ></text>
</g>
<g >
<title>auth::resource::resource (15 samples, 0.28%)</title><rect x="757.8" y="485" width="3.4" height="15.0" fill="rgb(250,53,32)" rx="2" ry="2" />
<text  x="760.85" y="495.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;8ul, cql3::expr::untyped_constant&gt; (2 samples, 0.04%)</title><rect x="51.5" y="165" width="0.4" height="15.0" fill="rgb(219,26,6)" rx="2" ry="2" />
<text  x="54.50" y="175.5" ></text>
</g>
<g >
<title>db::query_context::execute_cql&lt;utils::UUID&amp;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;&amp;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;&amp;, std::chrono::time_point&lt;db_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;&amp;, long&amp;, long&amp;, data_value&gt; (1 samples, 0.02%)</title><rect x="704.5" y="549" width="0.2" height="15.0" fill="rgb(251,28,19)" rx="2" ry="2" />
<text  x="707.52" y="559.5" ></text>
</g>
<g >
<title>mutation_querier::query_static_row (1 samples, 0.02%)</title><rect x="365.4" y="277" width="0.2" height="15.0" fill="rgb(252,167,38)" rx="2" ry="2" />
<text  x="368.41" y="287.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (2 samples, 0.04%)</title><rect x="41.2" y="325" width="0.5" height="15.0" fill="rgb(214,104,50)" rx="2" ry="2" />
<text  x="44.23" y="335.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cfName (1 samples, 0.02%)</title><rect x="38.6" y="437" width="0.2" height="15.0" fill="rgb(240,75,40)" rx="2" ry="2" />
<text  x="41.56" y="447.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;bool  (6 samples, 0.11%)</title><rect x="1166.4" y="613" width="1.3" height="15.0" fill="rgb(253,98,23)" rx="2" ry="2" />
<text  x="1169.35" y="623.5" ></text>
</g>
<g >
<title>fmt::v7::basic_printf_context&lt;fmt::v7::detail::buffer_appender&lt;char&gt;, char&gt;::format&lt;fmt::v7::printf_arg_formatter&lt;fmt::v7::detail::buffer_appender&lt;char&gt;, char&gt; &gt; (7 samples, 0.13%)</title><rect x="17.8" y="597" width="1.6" height="15.0" fill="rgb(233,120,4)" rx="2" ry="2" />
<text  x="20.81" y="607.5" ></text>
</g>
<g >
<title>cql3::raw_value_view::make_temporary (11 samples, 0.21%)</title><rect x="890.4" y="437" width="2.4" height="15.0" fill="rgb(228,222,17)" rx="2" ry="2" />
<text  x="893.37" y="447.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="79.8" y="373" width="0.3" height="15.0" fill="rgb(220,159,29)" rx="2" ry="2" />
<text  x="82.83" y="383.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="139.6" y="549" width="0.2" height="15.0" fill="rgb(226,134,42)" rx="2" ry="2" />
<text  x="142.62" y="559.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;schema const&gt;::operator= (3 samples, 0.06%)</title><rect x="1023.1" y="373" width="0.7" height="15.0" fill="rgb(216,117,46)" rx="2" ry="2" />
<text  x="1026.12" y="383.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::take_value (1 samples, 0.02%)</title><rect x="195.0" y="373" width="0.2" height="15.0" fill="rgb(216,123,49)" rx="2" ry="2" />
<text  x="197.95" y="383.5" ></text>
</g>
<g >
<title>database::find_uuid (1 samples, 0.02%)</title><rect x="750.3" y="501" width="0.2" height="15.0" fill="rgb(236,57,15)" rx="2" ry="2" />
<text  x="753.26" y="511.5" ></text>
</g>
<g >
<title>seastar::repeat&lt;flat_mutation_reader::impl::consume_pausable&lt;flush_reader::fill_buffer (5 samples, 0.09%)</title><rect x="80.1" y="501" width="1.1" height="15.0" fill="rgb(210,155,46)" rx="2" ry="2" />
<text  x="83.05" y="511.5" ></text>
</g>
<g >
<title>sstring_hash::operator (2 samples, 0.04%)</title><rect x="815.0" y="405" width="0.4" height="15.0" fill="rgb(241,85,21)" rx="2" ry="2" />
<text  x="817.96" y="415.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextToken (1 samples, 0.02%)</title><rect x="704.5" y="309" width="0.2" height="15.0" fill="rgb(207,138,9)" rx="2" ry="2" />
<text  x="707.52" y="319.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::lower_bound&lt;mutation_partition, schema const&amp;, nonwrapping_interval&lt;clustering_key_prefix&gt; const&amp;&gt; (9 samples, 0.17%)</title><rect x="273.0" y="309" width="2.0" height="15.0" fill="rgb(224,92,45)" rx="2" ry="2" />
<text  x="276.04" y="319.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (1 samples, 0.02%)</title><rect x="600.3" y="517" width="0.3" height="15.0" fill="rgb(205,124,22)" rx="2" ry="2" />
<text  x="603.33" y="527.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (7 samples, 0.13%)</title><rect x="651.0" y="581" width="1.5" height="15.0" fill="rgb(227,43,1)" rx="2" ry="2" />
<text  x="653.98" y="591.5" ></text>
</g>
<g >
<title>std::__copy_n_a&lt;legacy_compound_view&lt;compound_type&lt; (10 samples, 0.19%)</title><rect x="908.9" y="453" width="2.2" height="15.0" fill="rgb(225,107,52)" rx="2" ry="2" />
<text  x="911.89" y="463.5" ></text>
</g>
<g >
<title>service::client_state::set_keyspace (1 samples, 0.02%)</title><rect x="825.0" y="533" width="0.2" height="15.0" fill="rgb(224,189,14)" rx="2" ry="2" />
<text  x="828.00" y="543.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="40.8" y="325" width="0.2" height="15.0" fill="rgb(224,111,44)" rx="2" ry="2" />
<text  x="43.79" y="335.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (1 samples, 0.02%)</title><rect x="1023.8" y="373" width="0.2" height="15.0" fill="rgb(219,93,37)" rx="2" ry="2" />
<text  x="1026.79" y="383.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::reset&lt;cql3_parser::CqlParser&gt; (1 samples, 0.02%)</title><rect x="20.3" y="453" width="0.2" height="15.0" fill="rgb(207,79,23)" rx="2" ry="2" />
<text  x="23.26" y="463.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (4 samples, 0.08%)</title><rect x="557.5" y="389" width="0.9" height="15.0" fill="rgb(254,208,28)" rx="2" ry="2" />
<text  x="560.50" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::find_and_unlink_span_reclaiming (1 samples, 0.02%)</title><rect x="956.2" y="373" width="0.2" height="15.0" fill="rgb(250,178,39)" rx="2" ry="2" />
<text  x="959.19" y="383.5" ></text>
</g>
<g >
<title>schema::schema (1 samples, 0.02%)</title><rect x="16.9" y="293" width="0.2" height="15.0" fill="rgb(236,127,44)" rx="2" ry="2" />
<text  x="19.92" y="303.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (1 samples, 0.02%)</title><rect x="552.4" y="517" width="0.2" height="15.0" fill="rgb(210,71,15)" rx="2" ry="2" />
<text  x="555.37" y="527.5" ></text>
</g>
<g >
<title>write_fragmented&lt;managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="917.4" y="453" width="0.2" height="15.0" fill="rgb(226,111,8)" rx="2" ry="2" />
<text  x="920.37" y="463.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (3 samples, 0.06%)</title><rect x="40.1" y="325" width="0.7" height="15.0" fill="rgb(223,154,13)" rx="2" ry="2" />
<text  x="43.12" y="335.5" ></text>
</g>
<g >
<title>sstables::mc::clustering_blocks_input_range::next (1 samples, 0.02%)</title><rect x="10.9" y="469" width="0.2" height="15.0" fill="rgb(209,95,44)" rx="2" ry="2" />
<text  x="13.89" y="479.5" ></text>
</g>
<g >
<title>reader_permit::used_guard::~used_guard (52 samples, 0.98%)</title><rect x="124.2" y="549" width="11.6" height="15.0" fill="rgb(232,190,50)" rx="2" ry="2" />
<text  x="127.23" y="559.5" ></text>
</g>
<g >
<title>ser::serializer&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;::write_fragmented&lt;bytes_ostream, fragment_range&lt;managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="676.6" y="341" width="0.3" height="15.0" fill="rgb(227,59,2)" rx="2" ry="2" />
<text  x="679.64" y="351.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser&lt;std::_Mem_fn&lt;std::unique_ptr&lt;cql3::statements::raw::parsed_statement, std::default_delete&lt;cql3::statements::raw::parsed_statement&gt; &gt;  (1 samples, 0.02%)</title><rect x="704.5" y="469" width="0.2" height="15.0" fill="rgb(223,56,6)" rx="2" ry="2" />
<text  x="707.52" y="479.5" ></text>
</g>
<g >
<title>std::optional&lt;cql3::restrictions::statement_restrictions&gt;::operator=&lt;cql3::restrictions::statement_restrictions&gt; (1 samples, 0.02%)</title><rect x="73.1" y="517" width="0.3" height="15.0" fill="rgb(254,122,37)" rx="2" ry="2" />
<text  x="76.14" y="527.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (8 samples, 0.15%)</title><rect x="53.3" y="357" width="1.8" height="15.0" fill="rgb(214,25,52)" rx="2" ry="2" />
<text  x="56.28" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="41.0" y="373" width="0.2" height="15.0" fill="rgb(230,64,37)" rx="2" ry="2" />
<text  x="44.01" y="383.5" ></text>
</g>
<g >
<title>TLS init function for bound_view::_empty_prefix (1 samples, 0.02%)</title><rect x="278.2" y="261" width="0.2" height="15.0" fill="rgb(232,36,47)" rx="2" ry="2" />
<text  x="281.17" y="271.5" ></text>
</g>
<g >
<title>seastar::internal::do_until_state&lt;executor&lt;test_read (635 samples, 12.01%)</title><rect x="708.1" y="597" width="141.7" height="15.0" fill="rgb(240,52,38)" rx="2" ry="2" />
<text  x="711.09" y="607.5" >seastar::internal:..</text>
</g>
<g >
<title>antlr3::Lexer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::emit (5 samples, 0.09%)</title><rect x="26.3" y="357" width="1.1" height="15.0" fill="rgb(213,91,53)" rx="2" ry="2" />
<text  x="29.29" y="367.5" ></text>
</g>
<g >
<title>seastar::timer_set&lt;seastar::timer&lt;std::chrono::_V2::steady_clock&gt;, &amp;seastar::timer&lt;std::chrono::_V2::steady_clock&gt;::_link&gt;::expire (1 samples, 0.02%)</title><rect x="1167.2" y="533" width="0.3" height="15.0" fill="rgb(245,157,46)" rx="2" ry="2" />
<text  x="1170.24" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::~vector (2 samples, 0.04%)</title><rect x="626.9" y="565" width="0.4" height="15.0" fill="rgb(235,153,24)" rx="2" ry="2" />
<text  x="629.88" y="575.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;false, false, std::random_access_iterator_tag&gt;::__copy_m&lt;char*, fmt::v7::detail::buffer_appender&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="18.5" y="565" width="0.2" height="15.0" fill="rgb(238,222,12)" rx="2" ry="2" />
<text  x="21.48" y="575.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.02%)</title><rect x="1007.1" y="277" width="0.2" height="15.0" fill="rgb(208,56,1)" rx="2" ry="2" />
<text  x="1010.05" y="287.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::partition_snapshot_flat_reader&lt;schema const&amp;, flush_memory_accounter&amp;&gt; (1 samples, 0.02%)</title><rect x="79.8" y="469" width="0.3" height="15.0" fill="rgb(240,178,24)" rx="2" ry="2" />
<text  x="82.83" y="479.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;nonwrapping_interval&lt;dht::ring_position&gt; const*, nonwrapping_interval&lt;dht::ring_position&gt;*&gt; (1 samples, 0.02%)</title><rect x="925.2" y="485" width="0.2" height="15.0" fill="rgb(221,98,1)" rx="2" ry="2" />
<text  x="928.17" y="495.5" ></text>
</g>
<g >
<title>ser::read_frame_size&lt;seastar::simple_memory_input_stream&gt; (1 samples, 0.02%)</title><rect x="1122.4" y="293" width="0.2" height="15.0" fill="rgb(228,25,45)" rx="2" ry="2" />
<text  x="1125.40" y="303.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.02%)</title><rect x="41.9" y="261" width="0.2" height="15.0" fill="rgb(252,25,38)" rx="2" ry="2" />
<text  x="44.90" y="271.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::operator= (4 samples, 0.08%)</title><rect x="695.4" y="533" width="0.9" height="15.0" fill="rgb(212,177,42)" rx="2" ry="2" />
<text  x="698.38" y="543.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::digest_read_result&gt;::then_wrapped_common&lt;true, void, service::abstract_read_executor::execute (7 samples, 0.13%)</title><rect x="966.4" y="437" width="1.6" height="15.0" fill="rgb(234,168,6)" rx="2" ry="2" />
<text  x="969.45" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::do_resize (1 samples, 0.02%)</title><rect x="1167.9" y="597" width="0.2" height="15.0" fill="rgb(240,201,45)" rx="2" ry="2" />
<text  x="1170.91" y="607.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::operator (5 samples, 0.09%)</title><rect x="787.1" y="229" width="1.1" height="15.0" fill="rgb(222,155,47)" rx="2" ry="2" />
<text  x="790.07" y="239.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="79.8" y="357" width="0.3" height="15.0" fill="rgb(208,153,16)" rx="2" ry="2" />
<text  x="82.83" y="367.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (4 samples, 0.08%)</title><rect x="676.2" y="533" width="0.9" height="15.0" fill="rgb(242,214,20)" rx="2" ry="2" />
<text  x="679.19" y="543.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (5 samples, 0.09%)</title><rect x="1134.9" y="597" width="1.1" height="15.0" fill="rgb(246,206,30)" rx="2" ry="2" />
<text  x="1137.89" y="607.5" ></text>
</g>
<g >
<title>service::client_state::has_column_family_access (9 samples, 0.17%)</title><rect x="75.6" y="565" width="2.0" height="15.0" fill="rgb(238,217,52)" rx="2" ry="2" />
<text  x="78.59" y="575.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_state&lt;std::tuple&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (1 samples, 0.02%)</title><rect x="325.2" y="389" width="0.3" height="15.0" fill="rgb(228,59,53)" rx="2" ry="2" />
<text  x="328.25" y="399.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::handle_exception&lt;cql3::query_processor::execute_prepared (1 samples, 0.02%)</title><rect x="738.4" y="501" width="0.3" height="15.0" fill="rgb(225,26,16)" rx="2" ry="2" />
<text  x="741.44" y="511.5" ></text>
</g>
<g >
<title>mutation_querier::mutation_querier (2 samples, 0.04%)</title><rect x="343.1" y="293" width="0.4" height="15.0" fill="rgb(223,50,3)" rx="2" ry="2" />
<text  x="346.10" y="303.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_M_move_assign (3 samples, 0.06%)</title><rect x="1090.0" y="469" width="0.7" height="15.0" fill="rgb(224,197,17)" rx="2" ry="2" />
<text  x="1093.05" y="479.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, seastar::shared_ptr&lt;service::abstract_write_response_handler&gt; &gt;, std::allocator&lt;std::pair&lt;unsigned long const, seastar::shared_ptr&lt;service::abstract_write_response_handler&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (1 samples, 0.02%)</title><rect x="1126.9" y="341" width="0.2" height="15.0" fill="rgb(215,40,16)" rx="2" ry="2" />
<text  x="1129.86" y="351.5" ></text>
</g>
<g >
<title>seastar::reactor::file_stat (1 samples, 0.02%)</title><rect x="850.0" y="421" width="0.2" height="15.0" fill="rgb(247,12,15)" rx="2" ry="2" />
<text  x="852.99" y="431.5" ></text>
</g>
<g >
<title>db::system_keyspace::query_mutations (1 samples, 0.02%)</title><rect x="105.9" y="517" width="0.3" height="15.0" fill="rgb(225,14,45)" rx="2" ry="2" />
<text  x="108.93" y="527.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::operator== (2 samples, 0.04%)</title><rect x="783.1" y="245" width="0.4" height="15.0" fill="rgb(252,158,11)" rx="2" ry="2" />
<text  x="786.06" y="255.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, enum_set&lt;super_enum&lt;auth::permission,  (4 samples, 0.08%)</title><rect x="76.3" y="405" width="0.9" height="15.0" fill="rgb(249,122,1)" rx="2" ry="2" />
<text  x="79.26" y="415.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextTokenStr (43 samples, 0.81%)</title><rect x="25.2" y="373" width="9.6" height="15.0" fill="rgb(208,222,41)" rx="2" ry="2" />
<text  x="28.17" y="383.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;query::result_memory_limiter::new_data_read (4 samples, 0.08%)</title><rect x="598.1" y="533" width="0.9" height="15.0" fill="rgb(213,39,7)" rx="2" ry="2" />
<text  x="601.10" y="543.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (1 samples, 0.02%)</title><rect x="852.4" y="533" width="0.3" height="15.0" fill="rgb(213,13,29)" rx="2" ry="2" />
<text  x="855.44" y="543.5" ></text>
</g>
<g >
<title>schema::schema (1 samples, 0.02%)</title><rect x="16.9" y="309" width="0.2" height="15.0" fill="rgb(218,94,49)" rx="2" ry="2" />
<text  x="19.92" y="319.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextToken (1 samples, 0.02%)</title><rect x="107.5" y="325" width="0.2" height="15.0" fill="rgb(224,55,25)" rx="2" ry="2" />
<text  x="110.50" y="335.5" ></text>
</g>
<g >
<title>ser::get_sizeof&lt;partition_key&gt; (1 samples, 0.02%)</title><rect x="1130.2" y="229" width="0.2" height="15.0" fill="rgb(251,36,27)" rx="2" ry="2" />
<text  x="1133.21" y="239.5" ></text>
</g>
<g >
<title>utils::tuple_hash::operator (16 samples, 0.30%)</title><rect x="786.6" y="261" width="3.6" height="15.0" fill="rgb(227,64,10)" rx="2" ry="2" />
<text  x="789.63" y="271.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::do_wait_admission (42 samples, 0.79%)</title><rect x="1005.5" y="325" width="9.4" height="15.0" fill="rgb(237,9,6)" rx="2" ry="2" />
<text  x="1008.49" y="335.5" ></text>
</g>
<g >
<title>db::schema_tables::merge_schema (2 samples, 0.04%)</title><rect x="105.9" y="597" width="0.5" height="15.0" fill="rgb(213,146,22)" rx="2" ry="2" />
<text  x="108.93" y="607.5" ></text>
</g>
<g >
<title>std::apply&lt;service::client_state::check_has_permission (5 samples, 0.09%)</title><rect x="76.3" y="485" width="1.1" height="15.0" fill="rgb(222,62,34)" rx="2" ry="2" />
<text  x="79.26" y="495.5" ></text>
</g>
<g >
<title>bound_view::from_range_end&lt;nonwrapping_interval&gt; (2 samples, 0.04%)</title><rect x="259.7" y="213" width="0.4" height="15.0" fill="rgb(251,143,46)" rx="2" ry="2" />
<text  x="262.65" y="223.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::value_ptr&gt;::take_value (1 samples, 0.02%)</title><rect x="727.5" y="485" width="0.2" height="15.0" fill="rgb(217,40,12)" rx="2" ry="2" />
<text  x="730.50" y="495.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::alloc (1 samples, 0.02%)</title><rect x="238.2" y="181" width="0.3" height="15.0" fill="rgb(212,47,27)" rx="2" ry="2" />
<text  x="241.24" y="191.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (2 samples, 0.04%)</title><rect x="813.0" y="389" width="0.4" height="15.0" fill="rgb(221,177,23)" rx="2" ry="2" />
<text  x="815.95" y="399.5" ></text>
</g>
<g >
<title>seastar::weakly_referencable&lt;cql3::statements::prepared_statement&gt;::weak_from_this (1 samples, 0.02%)</title><rect x="719.0" y="501" width="0.2" height="15.0" fill="rgb(236,216,1)" rx="2" ry="2" />
<text  x="722.03" y="511.5" ></text>
</g>
<g >
<title>write_cell&lt;ser::qr_clustered_row__cells__cells&lt;bytes_ostream&gt; &gt; (119 samples, 2.25%)</title><rect x="371.2" y="277" width="26.6" height="15.0" fill="rgb(206,18,25)" rx="2" ry="2" />
<text  x="374.21" y="287.5" >w..</text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="852.7" y="581" width="0.2" height="15.0" fill="rgb(243,194,53)" rx="2" ry="2" />
<text  x="855.67" y="591.5" ></text>
</g>
<g >
<title>cql3::keyspace_element_name::operator= (1 samples, 0.02%)</title><rect x="38.3" y="437" width="0.3" height="15.0" fill="rgb(225,180,30)" rx="2" ry="2" />
<text  x="41.33" y="447.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::~unique_ptr (2 samples, 0.04%)</title><rect x="893.5" y="437" width="0.4" height="15.0" fill="rgb(218,120,9)" rx="2" ry="2" />
<text  x="896.49" y="447.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.02%)</title><rect x="40.8" y="245" width="0.2" height="15.0" fill="rgb(241,68,11)" rx="2" ry="2" />
<text  x="43.79" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value, std::allocator&lt;cql3::raw_value&gt; &gt;::vector (1 samples, 0.02%)</title><rect x="853.3" y="437" width="0.3" height="15.0" fill="rgb(238,84,12)" rx="2" ry="2" />
<text  x="856.34" y="447.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE14then_impl_nrvoIZNS6_14discard_resultEvEUlDpOT_E_NS0_IvEEEET0_OT_ (11 samples, 0.21%)</title><rect x="711.9" y="549" width="2.4" height="15.0" fill="rgb(223,144,26)" rx="2" ry="2" />
<text  x="714.89" y="559.5" ></text>
</g>
<g >
<title>bytes_view_hasher::finalize (2 samples, 0.04%)</title><rect x="721.3" y="389" width="0.4" height="15.0" fill="rgb(223,115,50)" rx="2" ry="2" />
<text  x="724.26" y="399.5" ></text>
</g>
<g >
<title>operator new (19 samples, 0.36%)</title><rect x="1000.6" y="341" width="4.2" height="15.0" fill="rgb(242,223,8)" rx="2" ry="2" />
<text  x="1003.58" y="351.5" ></text>
</g>
<g >
<title>db::schema_tables::make_schema_mutations (1 samples, 0.02%)</title><rect x="677.1" y="341" width="0.2" height="15.0" fill="rgb(215,209,33)" rx="2" ry="2" />
<text  x="680.08" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="44.6" y="357" width="0.2" height="15.0" fill="rgb(206,200,34)" rx="2" ry="2" />
<text  x="47.58" y="367.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (1 samples, 0.02%)</title><rect x="769.0" y="357" width="0.2" height="15.0" fill="rgb(214,207,2)" rx="2" ry="2" />
<text  x="772.00" y="367.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_erase_at_end (10 samples, 0.19%)</title><rect x="399.8" y="277" width="2.2" height="15.0" fill="rgb(231,40,16)" rx="2" ry="2" />
<text  x="402.76" y="287.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (1 samples, 0.02%)</title><rect x="71.8" y="437" width="0.2" height="15.0" fill="rgb(223,5,28)" rx="2" ry="2" />
<text  x="74.80" y="447.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::constant (15 samples, 0.28%)</title><rect x="52.2" y="373" width="3.3" height="15.0" fill="rgb(239,194,31)" rx="2" ry="2" />
<text  x="55.17" y="383.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (194 samples, 3.67%)</title><rect x="20.9" y="501" width="43.3" height="15.0" fill="rgb(223,115,10)" rx="2" ry="2" />
<text  x="23.93" y="511.5" >cql3..</text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (1 samples, 0.02%)</title><rect x="1084.9" y="485" width="0.2" height="15.0" fill="rgb(238,86,50)" rx="2" ry="2" />
<text  x="1087.92" y="495.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (6 samples, 0.11%)</title><rect x="42.8" y="405" width="1.3" height="15.0" fill="rgb(248,73,39)" rx="2" ry="2" />
<text  x="45.80" y="415.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;gms::inet_address, std::pair&lt;gms::inet_address const, service::view_update_backlog_timestamped&gt;, std::allocator&lt;std::pair&lt;gms::inet_address const, service::view_update_backlog_timestamped&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;gms::inet_address&gt;, std::hash&lt;gms::inet_address&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (1 samples, 0.02%)</title><rect x="703.9" y="485" width="0.2" height="15.0" fill="rgb(207,19,11)" rx="2" ry="2" />
<text  x="706.86" y="495.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::key_is_in_relation (1 samples, 0.02%)</title><rect x="638.5" y="565" width="0.2" height="15.0" fill="rgb(243,172,20)" rx="2" ry="2" />
<text  x="641.49" y="575.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.02%)</title><rect x="37.0" y="421" width="0.2" height="15.0" fill="rgb(239,97,42)" rx="2" ry="2" />
<text  x="40.00" y="431.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::restrictions::single_column_restriction&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="69.1" y="469" width="0.2" height="15.0" fill="rgb(225,76,16)" rx="2" ry="2" />
<text  x="72.12" y="479.5" ></text>
</g>
<g >
<title>allocation_strategy::construct&lt;bplus::data&lt;long, intrusive_array&lt;cache_entry&gt;, dht::raw_token_less_comparator, 16ul,  (1 samples, 0.02%)</title><rect x="15.6" y="629" width="0.2" height="15.0" fill="rgb(224,200,33)" rx="2" ry="2" />
<text  x="18.58" y="639.5" ></text>
</g>
<g >
<title>std::construct_at&lt;mutation_fragment, schema const&amp;, reader_permit&amp;, partition_start&gt; (20 samples, 0.38%)</title><rect x="507.3" y="325" width="4.5" height="15.0" fill="rgb(239,98,52)" rx="2" ry="2" />
<text  x="510.30" y="335.5" ></text>
</g>
<g >
<title>ser::serializer&lt;schema_mutations&gt;::write&lt;bytes_ostream&gt; (1 samples, 0.02%)</title><rect x="107.3" y="533" width="0.2" height="15.0" fill="rgb(226,103,18)" rx="2" ry="2" />
<text  x="110.27" y="543.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (3 samples, 0.06%)</title><rect x="835.9" y="437" width="0.7" height="15.0" fill="rgb(210,80,54)" rx="2" ry="2" />
<text  x="838.93" y="447.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.08%)</title><rect x="609.9" y="469" width="0.9" height="15.0" fill="rgb(235,212,6)" rx="2" ry="2" />
<text  x="612.93" y="479.5" ></text>
</g>
<g >
<title>locator::calculate_effective_replication_map (1 samples, 0.02%)</title><rect x="17.4" y="517" width="0.2" height="15.0" fill="rgb(219,20,26)" rx="2" ry="2" />
<text  x="20.36" y="527.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_internal (1 samples, 0.02%)</title><rect x="704.5" y="533" width="0.2" height="15.0" fill="rgb(251,102,30)" rx="2" ry="2" />
<text  x="707.52" y="543.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (3 samples, 0.06%)</title><rect x="1082.0" y="453" width="0.7" height="15.0" fill="rgb(213,144,27)" rx="2" ry="2" />
<text  x="1085.02" y="463.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::impl&gt;::_S_destroy&lt;seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::impl, mutation_fragment&gt; (1 samples, 0.02%)</title><rect x="203.0" y="293" width="0.2" height="15.0" fill="rgb(213,6,17)" rx="2" ry="2" />
<text  x="205.99" y="303.5" ></text>
</g>
<g >
<title>database::apply_with_commitlog (39 samples, 0.74%)</title><rect x="1117.0" y="421" width="8.7" height="15.0" fill="rgb(221,101,31)" rx="2" ry="2" />
<text  x="1120.04" y="431.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="83.2" y="693" width="0.2" height="15.0" fill="rgb(244,163,4)" rx="2" ry="2" />
<text  x="86.18" y="703.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, table::compact_sstables (1 samples, 0.02%)</title><rect x="704.5" y="597" width="0.2" height="15.0" fill="rgb(249,129,45)" rx="2" ry="2" />
<text  x="707.52" y="607.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::get_promise (1 samples, 0.02%)</title><rect x="941.2" y="501" width="0.3" height="15.0" fill="rgb(236,2,49)" rx="2" ry="2" />
<text  x="944.24" y="511.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.02%)</title><rect x="1137.3" y="501" width="0.3" height="15.0" fill="rgb(210,224,52)" rx="2" ry="2" />
<text  x="1140.35" y="511.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::insertToken (12 samples, 0.23%)</title><rect x="22.3" y="389" width="2.6" height="15.0" fill="rgb(229,89,12)" rx="2" ry="2" />
<text  x="25.27" y="399.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (1 samples, 0.02%)</title><rect x="854.0" y="421" width="0.2" height="15.0" fill="rgb(236,86,29)" rx="2" ry="2" />
<text  x="857.00" y="431.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned char, std::pair&lt;unsigned char const, std::optional&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned char const, std::optional&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned char&gt;, std::hash&lt;unsigned char&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::clear (4 samples, 0.08%)</title><rect x="661.5" y="533" width="0.9" height="15.0" fill="rgb(209,196,10)" rx="2" ry="2" />
<text  x="664.47" y="543.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (2 samples, 0.04%)</title><rect x="41.2" y="293" width="0.5" height="15.0" fill="rgb(229,34,25)" rx="2" ry="2" />
<text  x="44.23" y="303.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIN7seastar10shared_ptrIN4cql34termEEEEER18overloaded_functorIJZNS6_4expr12prepare_termERKNSB_10expressionER8databaseRKNS4_13basic_sstringIcjLj15ELb1EEENS4_13lw_shared_ptrINS6_20column_specificationEEEE3$_0ZNSB_12prepare_termESE_SG_SK_SN_E3$_1ZNSB_12prepare_termESE_SG_SK_SN_E3$_2ZNSB_12prepare_termESE_SG_SK_SN_E3$_3ZNSB_12prepare_termESE_SG_SK_SN_E3$_4ZNSB_12prepare_termESE_SG_SK_SN_E3$_5ZNSB_12prepare_termESE_SG_SK_SN_E3$_6ZNSB_12prepare_termESE_SG_SK_SN_E3$_7ZNSB_12prepare_termESE_SG_SK_SN_E3$_8ZNSB_12prepare_termESE_SG_SK_SN_E3$_9ZNSB_12prepare_termESE_SG_SK_SN_E4$_10ZNSB_12prepare_termESE_SG_SK_SN_E4$_11ZNSB_12prepare_termESE_SG_SK_SN_E4$_12ZNSB_12prepare_termESE_SG_SK_SN_E4$_13ZNSB_12prepare_termESE_SG_SK_SN_E4$_14ZNSB_12prepare_termESE_SG_SK_SN_E4$_15EERSt7variantIJNSB_11conjunctionENSB_15binary_operatorENSB_12column_valueENSB_5tokenENSB_21unresolved_identifierENSB_25column_mutation_attributeENSB_13function_callENSB_4castENSB_15field_selectionENSB_4nullENSB_13bind_variableENSB_16untyped_constantENSB_8constantENSB_17tuple_constructorENSB_22collection_constructorENSB_20usertype_constructorEEEEJEEESt16integer_sequenceImJLm11EEEE14__visit_invokeES15_S1O_ (2 samples, 0.04%)</title><rect x="68.2" y="421" width="0.5" height="15.0" fill="rgb(233,208,32)" rx="2" ry="2" />
<text  x="71.23" y="431.5" ></text>
</g>
<g >
<title>cdc::do_update_streams_description (1 samples, 0.02%)</title><rect x="102.4" y="597" width="0.2" height="15.0" fill="rgb(253,75,25)" rx="2" ry="2" />
<text  x="105.37" y="607.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql_transport::messages::result_message::rows&gt;::shared_ptr_count_for&lt;cql3::result&gt; (6 samples, 0.11%)</title><rect x="645.0" y="549" width="1.3" height="15.0" fill="rgb(222,132,5)" rx="2" ry="2" />
<text  x="647.96" y="559.5" ></text>
</g>
<g >
<title>std::operator+ (4 samples, 0.08%)</title><rect x="43.2" y="261" width="0.9" height="15.0" fill="rgb(223,154,26)" rx="2" ry="2" />
<text  x="46.24" y="271.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (1 samples, 0.02%)</title><rect x="919.4" y="469" width="0.2" height="15.0" fill="rgb(218,96,39)" rx="2" ry="2" />
<text  x="922.37" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="555.7" y="405" width="0.2" height="15.0" fill="rgb(217,174,19)" rx="2" ry="2" />
<text  x="558.71" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.06%)</title><rect x="896.6" y="405" width="0.7" height="15.0" fill="rgb(229,221,1)" rx="2" ry="2" />
<text  x="899.62" y="415.5" ></text>
</g>
<g >
<title>ser::serializer&lt;ser::live_cell_view&gt;::read&lt;seastar::simple_memory_input_stream&gt; (1 samples, 0.02%)</title><rect x="1122.0" y="277" width="0.2" height="15.0" fill="rgb(218,202,12)" rx="2" ry="2" />
<text  x="1124.95" y="287.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::allocate (11 samples, 0.21%)</title><rect x="313.9" y="389" width="2.4" height="15.0" fill="rgb(207,174,42)" rx="2" ry="2" />
<text  x="316.87" y="399.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (6 samples, 0.11%)</title><rect x="421.0" y="309" width="1.3" height="15.0" fill="rgb(245,229,27)" rx="2" ry="2" />
<text  x="423.96" y="319.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (2 samples, 0.04%)</title><rect x="41.2" y="357" width="0.5" height="15.0" fill="rgb(206,193,25)" rx="2" ry="2" />
<text  x="44.23" y="367.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;nonwrapping_interval&lt;dht::ring_position&gt; const, std::default_delete&lt;nonwrapping_interval&lt;dht::ring_position&gt; const&gt; &gt;::~unique_ptr (10 samples, 0.19%)</title><rect x="580.5" y="517" width="2.2" height="15.0" fill="rgb(205,220,14)" rx="2" ry="2" />
<text  x="583.48" y="527.5" ></text>
</g>
<g >
<title>mutation::set_clustered_cell (5 samples, 0.09%)</title><rect x="856.7" y="389" width="1.1" height="15.0" fill="rgb(252,47,35)" rx="2" ry="2" />
<text  x="859.68" y="399.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::digest_read_result&gt;::schedule&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::execute (7 samples, 0.13%)</title><rect x="966.4" y="405" width="1.6" height="15.0" fill="rgb(229,171,10)" rx="2" ry="2" />
<text  x="969.45" y="415.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::get0 (5 samples, 0.09%)</title><rect x="304.3" y="453" width="1.1" height="15.0" fill="rgb(245,62,15)" rx="2" ry="2" />
<text  x="307.27" y="463.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::do_refresh_state (1 samples, 0.02%)</title><rect x="270.8" y="341" width="0.2" height="15.0" fill="rgb(236,179,5)" rx="2" ry="2" />
<text  x="273.81" y="351.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::lsa_partition_reader (1 samples, 0.02%)</title><rect x="497.5" y="389" width="0.2" height="15.0" fill="rgb(232,73,33)" rx="2" ry="2" />
<text  x="500.48" y="399.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::with_permit (6 samples, 0.11%)</title><rect x="1020.0" y="357" width="1.3" height="15.0" fill="rgb(226,217,15)" rx="2" ry="2" />
<text  x="1022.99" y="367.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::lsa_partition_reader::maybe_refresh_state (1 samples, 0.02%)</title><rect x="80.7" y="325" width="0.2" height="15.0" fill="rgb(239,178,40)" rx="2" ry="2" />
<text  x="83.72" y="335.5" ></text>
</g>
<g >
<title>seastar::future_state_base::future_state_base (1 samples, 0.02%)</title><rect x="795.6" y="373" width="0.2" height="15.0" fill="rgb(206,41,26)" rx="2" ry="2" />
<text  x="798.55" y="383.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (1 samples, 0.02%)</title><rect x="770.8" y="373" width="0.2" height="15.0" fill="rgb(210,103,16)" rx="2" ry="2" />
<text  x="773.79" y="383.5" ></text>
</g>
<g >
<title>table::query (2,134 samples, 40.35%)</title><rect x="141.6" y="549" width="476.1" height="15.0" fill="rgb(226,116,9)" rx="2" ry="2" />
<text  x="144.63" y="559.5" >table::query</text>
</g>
<g >
<title>ser::serialize_array_helper&lt;false, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;::doit&lt;std::vector&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, std::allocator&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt;, bytes_ostream&gt; (1 samples, 0.02%)</title><rect x="1130.0" y="245" width="0.2" height="15.0" fill="rgb(250,184,3)" rx="2" ry="2" />
<text  x="1132.98" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value, std::allocator&lt;cql3::raw_value&gt; &gt;::~vector (3 samples, 0.06%)</title><rect x="662.4" y="549" width="0.6" height="15.0" fill="rgb(224,121,18)" rx="2" ry="2" />
<text  x="665.36" y="559.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (7 samples, 0.13%)</title><rect x="775.9" y="325" width="1.6" height="15.0" fill="rgb(254,158,48)" rx="2" ry="2" />
<text  x="778.92" y="335.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="21.2" y="437" width="0.2" height="15.0" fill="rgb(220,17,27)" rx="2" ry="2" />
<text  x="24.16" y="447.5" ></text>
</g>
<g >
<title>mutation_partition_view::do_accept&lt;partition_builder&gt; (16 samples, 0.30%)</title><rect x="1119.7" y="341" width="3.6" height="15.0" fill="rgb(233,143,34)" rx="2" ry="2" />
<text  x="1122.72" y="351.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_Optional_payload_base (1 samples, 0.02%)</title><rect x="1056.1" y="421" width="0.3" height="15.0" fill="rgb(242,7,53)" rx="2" ry="2" />
<text  x="1059.14" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_List_node_base::_M_transfer (2 samples, 0.04%)</title><rect x="188.9" y="341" width="0.5" height="15.0" fill="rgb(239,173,50)" rx="2" ry="2" />
<text  x="191.93" y="351.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::leaf_node::free (1 samples, 0.02%)</title><rect x="1137.3" y="357" width="0.3" height="15.0" fill="rgb(237,213,18)" rx="2" ry="2" />
<text  x="1140.35" y="367.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (250 samples, 4.73%)</title><rect x="19.8" y="581" width="55.8" height="15.0" fill="rgb(244,127,48)" rx="2" ry="2" />
<text  x="22.82" y="591.5" >cql3:..</text>
</g>
<g >
<title>memtable::apply (31 samples, 0.59%)</title><rect x="1117.5" y="357" width="6.9" height="15.0" fill="rgb(220,16,44)" rx="2" ry="2" />
<text  x="1120.49" y="367.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (4 samples, 0.08%)</title><rect x="362.3" y="277" width="0.9" height="15.0" fill="rgb(252,47,5)" rx="2" ry="2" />
<text  x="365.28" y="287.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::create_service_level_statement, std::default_delete&lt;cql3::statements::create_service_level_statement&gt; &gt;::__uniq_ptr_impl (1 samples, 0.02%)</title><rect x="61.1" y="453" width="0.2" height="15.0" fill="rgb(213,101,12)" rx="2" ry="2" />
<text  x="64.09" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.04%)</title><rect x="23.6" y="277" width="0.5" height="15.0" fill="rgb(222,111,40)" rx="2" ry="2" />
<text  x="26.61" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (1 samples, 0.02%)</title><rect x="252.3" y="197" width="0.2" height="15.0" fill="rgb(213,89,13)" rx="2" ry="2" />
<text  x="255.29" y="207.5" ></text>
</g>
<g >
<title>database::find_keyspace (26 samples, 0.49%)</title><rect x="1038.7" y="437" width="5.8" height="15.0" fill="rgb(231,96,41)" rx="2" ry="2" />
<text  x="1041.74" y="447.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (3 samples, 0.06%)</title><rect x="386.2" y="245" width="0.6" height="15.0" fill="rgb(232,76,14)" rx="2" ry="2" />
<text  x="389.15" y="255.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (1 samples, 0.02%)</title><rect x="102.4" y="501" width="0.2" height="15.0" fill="rgb(237,14,31)" rx="2" ry="2" />
<text  x="105.37" y="511.5" ></text>
</g>
<g >
<title>seastar::semaphore_units&lt;seastar::semaphore_default_exception_factory, std::chrono::_V2::steady_clock&gt;::return_all (2 samples, 0.04%)</title><rect x="97.9" y="533" width="0.4" height="15.0" fill="rgb(216,15,43)" rx="2" ry="2" />
<text  x="100.90" y="543.5" ></text>
</g>
<g >
<title>_IO_old_init (1 samples, 0.02%)</title><rect x="11.8" y="709" width="0.2" height="15.0" fill="rgb(253,121,28)" rx="2" ry="2" />
<text  x="14.78" y="719.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (220 samples, 4.16%)</title><rect x="212.1" y="293" width="49.1" height="15.0" fill="rgb(213,26,15)" rx="2" ry="2" />
<text  x="215.13" y="303.5" >part..</text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::emplace_back&lt;std::_List_iterator&lt;flat_mutation_reader&gt; const&amp;, mutation_fragment&gt; (4 samples, 0.08%)</title><rect x="191.2" y="341" width="0.9" height="15.0" fill="rgb(245,222,27)" rx="2" ry="2" />
<text  x="194.16" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="679.8" y="565" width="0.2" height="15.0" fill="rgb(220,124,23)" rx="2" ry="2" />
<text  x="682.76" y="575.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_token (2 samples, 0.04%)</title><rect x="639.8" y="533" width="0.5" height="15.0" fill="rgb(251,160,2)" rx="2" ry="2" />
<text  x="642.82" y="543.5" ></text>
</g>
<g >
<title>bplus::tree&lt;long, intrusive_array&lt;memtable_entry&gt;, dht::raw_token_less_comparator, 16ul,  (6 samples, 0.11%)</title><rect x="1118.2" y="293" width="1.3" height="15.0" fill="rgb(229,121,18)" rx="2" ry="2" />
<text  x="1121.16" y="303.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mK_INSERT (1 samples, 0.02%)</title><rect x="704.5" y="277" width="0.2" height="15.0" fill="rgb(240,120,15)" rx="2" ry="2" />
<text  x="707.52" y="287.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.02%)</title><rect x="54.8" y="229" width="0.3" height="15.0" fill="rgb(225,180,42)" rx="2" ry="2" />
<text  x="57.84" y="239.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::storage_proxy&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="1144.5" y="581" width="0.2" height="15.0" fill="rgb(213,224,47)" rx="2" ry="2" />
<text  x="1147.49" y="591.5" ></text>
</g>
<g >
<title>seastar::api_v3::and_newer::make_file_output_stream (1 samples, 0.02%)</title><rect x="676.0" y="565" width="0.2" height="15.0" fill="rgb(223,131,4)" rx="2" ry="2" />
<text  x="678.97" y="575.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.04%)</title><rect x="537.6" y="405" width="0.5" height="15.0" fill="rgb(221,191,5)" rx="2" ry="2" />
<text  x="540.64" y="415.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="10.9" y="405" width="0.2" height="15.0" fill="rgb(241,44,6)" rx="2" ry="2" />
<text  x="13.89" y="415.5" ></text>
</g>
<g >
<title>absl::container_internal::operator== (1 samples, 0.02%)</title><rect x="1039.2" y="421" width="0.2" height="15.0" fill="rgb(246,180,11)" rx="2" ry="2" />
<text  x="1042.18" y="431.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (4 samples, 0.08%)</title><rect x="676.2" y="565" width="0.9" height="15.0" fill="rgb(230,169,16)" rx="2" ry="2" />
<text  x="679.19" y="575.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;seastar::future&lt;void&gt; &gt;  (1 samples, 0.02%)</title><rect x="1165.5" y="565" width="0.2" height="15.0" fill="rgb(236,105,30)" rx="2" ry="2" />
<text  x="1168.46" y="575.5" ></text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::EqualElement&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt;&amp;&gt; (5 samples, 0.09%)</title><rect x="747.4" y="437" width="1.1" height="15.0" fill="rgb(205,87,8)" rx="2" ry="2" />
<text  x="750.36" y="447.5" ></text>
</g>
<g >
<title>seastar::schedule_urgent (1 samples, 0.02%)</title><rect x="620.2" y="581" width="0.2" height="15.0" fill="rgb(229,47,52)" rx="2" ry="2" />
<text  x="623.19" y="591.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_pausable&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (457 samples, 8.64%)</title><rect x="330.6" y="373" width="102.0" height="15.0" fill="rgb(229,152,1)" rx="2" ry="2" />
<text  x="333.60" y="383.5" >flat_mutatio..</text>
</g>
<g >
<title>seastar::future_state&lt;service::digest_read_result&gt;::clear (1 samples, 0.02%)</title><rect x="968.0" y="437" width="0.2" height="15.0" fill="rgb(237,48,30)" rx="2" ry="2" />
<text  x="971.01" y="447.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::term (2 samples, 0.04%)</title><rect x="58.4" y="421" width="0.5" height="15.0" fill="rgb(228,82,50)" rx="2" ry="2" />
<text  x="61.41" y="431.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="625.3" y="565" width="0.2" height="15.0" fill="rgb(245,31,37)" rx="2" ry="2" />
<text  x="628.32" y="575.5" ></text>
</g>
<g >
<title>db::is_serial_consistency (1 samples, 0.02%)</title><rect x="1115.5" y="533" width="0.2" height="15.0" fill="rgb(218,93,45)" rx="2" ry="2" />
<text  x="1118.48" y="543.5" ></text>
</g>
<g >
<title>__tls_init (1 samples, 0.02%)</title><rect x="501.1" y="341" width="0.2" height="15.0" fill="rgb(224,16,29)" rx="2" ry="2" />
<text  x="504.05" y="351.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::leaf_node::allocate (1 samples, 0.02%)</title><rect x="858.0" y="341" width="0.2" height="15.0" fill="rgb(239,27,7)" rx="2" ry="2" />
<text  x="861.02" y="351.5" ></text>
</g>
<g >
<title>cql3::constants::setter::execute (12 samples, 0.23%)</title><rect x="856.5" y="421" width="2.6" height="15.0" fill="rgb(230,137,24)" rx="2" ry="2" />
<text  x="859.46" y="431.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;seastar::future&lt;void&gt; &gt;  (3 samples, 0.06%)</title><rect x="612.2" y="533" width="0.6" height="15.0" fill="rgb(239,134,20)" rx="2" ry="2" />
<text  x="615.16" y="543.5" ></text>
</g>
<g >
<title>cql3::attributes::is_timestamp_set (1 samples, 0.02%)</title><rect x="19.4" y="533" width="0.2" height="15.0" fill="rgb(226,185,16)" rx="2" ry="2" />
<text  x="22.37" y="543.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::allocate_large (1 samples, 0.02%)</title><rect x="956.2" y="405" width="0.2" height="15.0" fill="rgb(242,218,7)" rx="2" ry="2" />
<text  x="959.19" y="415.5" ></text>
</g>
<g >
<title>cql3::to_managed_bytes_opt (5 samples, 0.09%)</title><rect x="893.9" y="453" width="1.2" height="15.0" fill="rgb(250,222,36)" rx="2" ry="2" />
<text  x="896.94" y="463.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::push_mutation_fragment&lt;mutation_fragment&gt; (1 samples, 0.02%)</title><rect x="307.4" y="437" width="0.2" height="15.0" fill="rgb(214,64,12)" rx="2" ry="2" />
<text  x="310.40" y="447.5" ></text>
</g>
<g >
<title>std::optional&lt;position_in_partition&gt;::operator=&lt;position_in_partition&gt; (1 samples, 0.02%)</title><rect x="267.5" y="325" width="0.2" height="15.0" fill="rgb(228,115,31)" rx="2" ry="2" />
<text  x="270.46" y="335.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextTokenStr (1 samples, 0.02%)</title><rect x="107.5" y="293" width="0.2" height="15.0" fill="rgb(247,229,34)" rx="2" ry="2" />
<text  x="110.50" y="303.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;cql3::metadata, false&gt;::make&lt;cql3::metadata&amp;&gt; (5 samples, 0.09%)</title><rect x="643.4" y="565" width="1.1" height="15.0" fill="rgb(228,223,46)" rx="2" ry="2" />
<text  x="646.39" y="575.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::clear (1 samples, 0.02%)</title><rect x="461.8" y="389" width="0.2" height="15.0" fill="rgb(209,12,39)" rx="2" ry="2" />
<text  x="464.79" y="399.5" ></text>
</g>
<g >
<title>auth::data_resource_view::data_resource_view (2 samples, 0.04%)</title><rect x="802.0" y="421" width="0.5" height="15.0" fill="rgb(248,23,43)" rx="2" ry="2" />
<text  x="805.02" y="431.5" ></text>
</g>
<g >
<title>cql3::query_processor::parse_statement (200 samples, 3.78%)</title><rect x="19.8" y="565" width="44.6" height="15.0" fill="rgb(240,72,35)" rx="2" ry="2" />
<text  x="22.82" y="575.5" >cql3..</text>
</g>
<g >
<title>seastar::future_state&lt;mutation_fragment*&gt;::take_value (3 samples, 0.06%)</title><rect x="441.9" y="501" width="0.7" height="15.0" fill="rgb(220,113,40)" rx="2" ry="2" />
<text  x="444.93" y="511.5" ></text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt;&amp;&gt; (9 samples, 0.17%)</title><rect x="1041.2" y="389" width="2.0" height="15.0" fill="rgb(235,194,12)" rx="2" ry="2" />
<text  x="1044.19" y="399.5" ></text>
</g>
<g >
<title>reader_selector::has_new_readers (1 samples, 0.02%)</title><rect x="178.7" y="357" width="0.2" height="15.0" fill="rgb(206,59,28)" rx="2" ry="2" />
<text  x="181.67" y="367.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate (61 samples, 1.15%)</title><rect x="876.8" y="437" width="13.6" height="15.0" fill="rgb(211,129,30)" rx="2" ry="2" />
<text  x="879.76" y="447.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::get_per_partition_limit (1 samples, 0.02%)</title><rect x="1093.6" y="501" width="0.2" height="15.0" fill="rgb(247,223,46)" rx="2" ry="2" />
<text  x="1096.62" y="511.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;::operator (1 samples, 0.02%)</title><rect x="105.7" y="389" width="0.2" height="15.0" fill="rgb(235,152,44)" rx="2" ry="2" />
<text  x="108.71" y="399.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.02%)</title><rect x="677.1" y="421" width="0.2" height="15.0" fill="rgb(206,74,40)" rx="2" ry="2" />
<text  x="680.08" y="431.5" ></text>
</g>
<g >
<title>antlr3::IntStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::rewind (1 samples, 0.02%)</title><rect x="33.6" y="325" width="0.3" height="15.0" fill="rgb(231,73,9)" rx="2" ry="2" />
<text  x="36.65" y="335.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, seastar::do_recursive_touch_directory (1 samples, 0.02%)</title><rect x="678.0" y="597" width="0.2" height="15.0" fill="rgb(248,42,7)" rx="2" ry="2" />
<text  x="680.98" y="607.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.02%)</title><rect x="16.9" y="613" width="0.2" height="15.0" fill="rgb(253,204,17)" rx="2" ry="2" />
<text  x="19.92" y="623.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperationDifferentiator (72 samples, 1.36%)</title><rect x="41.2" y="437" width="16.1" height="15.0" fill="rgb(232,24,36)" rx="2" ry="2" />
<text  x="44.23" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::vector (11 samples, 0.21%)</title><rect x="1025.6" y="373" width="2.4" height="15.0" fill="rgb(241,66,27)" rx="2" ry="2" />
<text  x="1028.57" y="383.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::do_flush (1 samples, 0.02%)</title><rect x="621.3" y="597" width="0.2" height="15.0" fill="rgb(241,24,20)" rx="2" ry="2" />
<text  x="624.31" y="607.5" ></text>
</g>
<g >
<title>std::operator+ (2 samples, 0.04%)</title><rect x="37.2" y="277" width="0.5" height="15.0" fill="rgb(229,52,39)" rx="2" ry="2" />
<text  x="40.22" y="287.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (1 samples, 0.02%)</title><rect x="1111.2" y="517" width="0.3" height="15.0" fill="rgb(217,121,33)" rx="2" ry="2" />
<text  x="1114.24" y="527.5" ></text>
</g>
<g >
<title>seastar::repeat&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (1 samples, 0.02%)</title><rect x="105.9" y="261" width="0.3" height="15.0" fill="rgb(224,172,10)" rx="2" ry="2" />
<text  x="108.93" y="271.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (1 samples, 0.02%)</title><rect x="41.9" y="421" width="0.2" height="15.0" fill="rgb(244,94,28)" rx="2" ry="2" />
<text  x="44.90" y="431.5" ></text>
</g>
<g >
<title>query::querier_base::close (1 samples, 0.02%)</title><rect x="120.0" y="549" width="0.2" height="15.0" fill="rgb(232,169,50)" rx="2" ry="2" />
<text  x="122.99" y="559.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::get0 (1 samples, 0.02%)</title><rect x="1142.0" y="581" width="0.3" height="15.0" fill="rgb(231,174,23)" rx="2" ry="2" />
<text  x="1145.03" y="591.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (1 samples, 0.02%)</title><rect x="41.9" y="373" width="0.2" height="15.0" fill="rgb(242,209,43)" rx="2" ry="2" />
<text  x="44.90" y="383.5" ></text>
</g>
<g >
<title>write_fragmented&lt;managed_bytes_basic_view&lt; (5 samples, 0.09%)</title><rect x="885.7" y="357" width="1.1" height="15.0" fill="rgb(233,128,4)" rx="2" ry="2" />
<text  x="888.69" y="367.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (1 samples, 0.02%)</title><rect x="1123.7" y="309" width="0.3" height="15.0" fill="rgb(209,208,34)" rx="2" ry="2" />
<text  x="1126.74" y="319.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (3 samples, 0.06%)</title><rect x="493.5" y="405" width="0.6" height="15.0" fill="rgb(243,180,3)" rx="2" ry="2" />
<text  x="496.47" y="415.5" ></text>
</g>
<g >
<title>mutation_querier::consume (194 samples, 3.67%)</title><rect x="354.5" y="293" width="43.3" height="15.0" fill="rgb(245,191,0)" rx="2" ry="2" />
<text  x="357.47" y="303.5" >muta..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (1 samples, 0.02%)</title><rect x="52.2" y="341" width="0.2" height="15.0" fill="rgb(254,26,48)" rx="2" ry="2" />
<text  x="55.17" y="351.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mTokens (1 samples, 0.02%)</title><rect x="34.8" y="373" width="0.2" height="15.0" fill="rgb(220,129,13)" rx="2" ry="2" />
<text  x="37.76" y="383.5" ></text>
</g>
<g >
<title>std::_Optional_base_impl&lt;mutation_querier, std::_Optional_base&lt;mutation_querier, false, false&gt; &gt;::_M_construct&lt;mutation_querier&gt; (4 samples, 0.08%)</title><rect x="352.9" y="261" width="0.9" height="15.0" fill="rgb(233,131,24)" rx="2" ry="2" />
<text  x="355.91" y="271.5" ></text>
</g>
<g >
<title>std::move&lt;std::_Optional_payload&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, false, false, false&gt;&amp;&gt; (1 samples, 0.02%)</title><rect x="59.3" y="389" width="0.2" height="15.0" fill="rgb(215,68,53)" rx="2" ry="2" />
<text  x="62.31" y="399.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (684 samples, 12.93%)</title><rect x="167.7" y="485" width="152.6" height="15.0" fill="rgb(242,29,24)" rx="2" ry="2" />
<text  x="170.73" y="495.5" >merging_reader&lt;muta..</text>
</g>
<g >
<title>reader_permit::consume (1 samples, 0.02%)</title><rect x="256.3" y="245" width="0.2" height="15.0" fill="rgb(215,224,9)" rx="2" ry="2" />
<text  x="259.31" y="255.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (1 samples, 0.02%)</title><rect x="791.1" y="325" width="0.2" height="15.0" fill="rgb(217,226,16)" rx="2" ry="2" />
<text  x="794.09" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt;::reserve (2 samples, 0.04%)</title><rect x="1154.7" y="565" width="0.5" height="15.0" fill="rgb(249,113,31)" rx="2" ry="2" />
<text  x="1157.75" y="575.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::set&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt; (3 samples, 0.06%)</title><rect x="685.1" y="533" width="0.7" height="15.0" fill="rgb(217,130,44)" rx="2" ry="2" />
<text  x="688.11" y="543.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_slice_or_needs_filtering (2 samples, 0.04%)</title><rect x="931.9" y="453" width="0.4" height="15.0" fill="rgb(220,47,36)" rx="2" ry="2" />
<text  x="934.87" y="463.5" ></text>
</g>
<g >
<title>global_schema_ptr::get (1 samples, 0.02%)</title><rect x="987.2" y="373" width="0.2" height="15.0" fill="rgb(239,122,36)" rx="2" ry="2" />
<text  x="990.20" y="383.5" ></text>
</g>
<g >
<title>seastar::uninitialized_string&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; (1 samples, 0.02%)</title><rect x="78.5" y="597" width="0.2" height="15.0" fill="rgb(221,85,36)" rx="2" ry="2" />
<text  x="81.49" y="607.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (10 samples, 0.19%)</title><rect x="954.2" y="437" width="2.2" height="15.0" fill="rgb(247,0,54)" rx="2" ry="2" />
<text  x="957.18" y="447.5" ></text>
</g>
<g >
<title>std::default_delete&lt;seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::entry&gt;::operator (2 samples, 0.04%)</title><rect x="135.2" y="501" width="0.4" height="15.0" fill="rgb(206,48,48)" rx="2" ry="2" />
<text  x="138.16" y="511.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (1 samples, 0.02%)</title><rect x="623.1" y="565" width="0.2" height="15.0" fill="rgb(239,98,20)" rx="2" ry="2" />
<text  x="626.09" y="575.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (1 samples, 0.02%)</title><rect x="17.4" y="405" width="0.2" height="15.0" fill="rgb(216,166,39)" rx="2" ry="2" />
<text  x="20.36" y="415.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::allocate (2 samples, 0.04%)</title><rect x="23.6" y="325" width="0.5" height="15.0" fill="rgb(252,227,35)" rx="2" ry="2" />
<text  x="26.61" y="335.5" ></text>
</g>
<g >
<title>cql3::authorized_prepared_statements_cache::insert (50 samples, 0.95%)</title><rect x="726.8" y="501" width="11.2" height="15.0" fill="rgb(211,223,12)" rx="2" ry="2" />
<text  x="729.83" y="511.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (4 samples, 0.08%)</title><rect x="53.3" y="245" width="0.9" height="15.0" fill="rgb(249,128,11)" rx="2" ry="2" />
<text  x="56.28" y="255.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::sharded_parallel_for_each (1 samples, 0.02%)</title><rect x="16.9" y="549" width="0.2" height="15.0" fill="rgb(214,39,15)" rx="2" ry="2" />
<text  x="19.92" y="559.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::execute_without_condition (29 samples, 0.55%)</title><rect x="853.1" y="517" width="6.5" height="15.0" fill="rgb(221,207,54)" rx="2" ry="2" />
<text  x="856.11" y="527.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_initialize_map (10 samples, 0.19%)</title><rect x="544.3" y="469" width="2.3" height="15.0" fill="rgb(213,31,32)" rx="2" ry="2" />
<text  x="547.34" y="479.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="107.1" y="453" width="0.2" height="15.0" fill="rgb(225,163,20)" rx="2" ry="2" />
<text  x="110.05" y="463.5" ></text>
</g>
<g >
<title>seastar::schedule_urgent (1 samples, 0.02%)</title><rect x="632.5" y="581" width="0.2" height="15.0" fill="rgb(223,221,29)" rx="2" ry="2" />
<text  x="635.46" y="591.5" ></text>
</g>
<g >
<title>std::apply&lt;service::client_state::has_column_family_access (1 samples, 0.02%)</title><rect x="815.4" y="501" width="0.2" height="15.0" fill="rgb(239,175,48)" rx="2" ry="2" />
<text  x="818.41" y="511.5" ></text>
</g>
<g >
<title>__tls_init (1 samples, 0.02%)</title><rect x="501.9" y="341" width="0.3" height="15.0" fill="rgb(225,14,33)" rx="2" ry="2" />
<text  x="504.95" y="351.5" ></text>
</g>
<g >
<title>memtable::find_or_create_partition (6 samples, 0.11%)</title><rect x="1118.2" y="325" width="1.3" height="15.0" fill="rgb(242,30,9)" rx="2" ry="2" />
<text  x="1121.16" y="335.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::reset (1 samples, 0.02%)</title><rect x="20.3" y="469" width="0.2" height="15.0" fill="rgb(231,227,19)" rx="2" ry="2" />
<text  x="23.26" y="479.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (1 samples, 0.02%)</title><rect x="739.6" y="485" width="0.2" height="15.0" fill="rgb(217,204,25)" rx="2" ry="2" />
<text  x="742.55" y="495.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;schema const&gt;::operator= (1 samples, 0.02%)</title><rect x="987.9" y="357" width="0.2" height="15.0" fill="rgb(254,162,23)" rx="2" ry="2" />
<text  x="990.87" y="367.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.02%)</title><rect x="676.0" y="293" width="0.2" height="15.0" fill="rgb(250,22,44)" rx="2" ry="2" />
<text  x="678.97" y="303.5" ></text>
</g>
<g >
<title>seastar::basic_semaphore&lt;seastar::semaphore_default_exception_factory, std::chrono::_V2::steady_clock&gt;::signal (1 samples, 0.02%)</title><rect x="1166.6" y="565" width="0.2" height="15.0" fill="rgb(226,175,28)" rx="2" ry="2" />
<text  x="1169.57" y="575.5" ></text>
</g>
<g >
<title>reader_permit::consume_resources (4 samples, 0.08%)</title><rect x="255.0" y="245" width="0.9" height="15.0" fill="rgb(215,229,33)" rx="2" ry="2" />
<text  x="257.97" y="255.5" ></text>
</g>
<g >
<title>query::result::builder::add_partition (1 samples, 0.02%)</title><rect x="343.8" y="293" width="0.2" height="15.0" fill="rgb(235,120,29)" rx="2" ry="2" />
<text  x="346.76" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.09%)</title><rect x="426.8" y="261" width="1.1" height="15.0" fill="rgb(232,16,43)" rx="2" ry="2" />
<text  x="429.76" y="271.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, enum_set&lt;super_enum&lt;auth::permission,  (58 samples, 1.10%)</title><rect x="777.7" y="341" width="12.9" height="15.0" fill="rgb(223,156,40)" rx="2" ry="2" />
<text  x="780.70" y="351.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (1 samples, 0.02%)</title><rect x="48.6" y="341" width="0.2" height="15.0" fill="rgb(208,81,15)" rx="2" ry="2" />
<text  x="51.60" y="351.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::_Move_ctor_base (1 samples, 0.02%)</title><rect x="345.3" y="261" width="0.2" height="15.0" fill="rgb(245,100,4)" rx="2" ry="2" />
<text  x="348.33" y="271.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (1 samples, 0.02%)</title><rect x="45.0" y="389" width="0.3" height="15.0" fill="rgb(216,181,7)" rx="2" ry="2" />
<text  x="48.03" y="399.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_nodes (6 samples, 0.11%)</title><rect x="651.2" y="549" width="1.3" height="15.0" fill="rgb(225,61,26)" rx="2" ry="2" />
<text  x="654.20" y="559.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume_in_thread&lt;sstables::sstable_writer&gt; (14 samples, 0.26%)</title><rect x="79.4" y="597" width="3.1" height="15.0" fill="rgb(251,159,23)" rx="2" ry="2" />
<text  x="82.39" y="607.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (1 samples, 0.02%)</title><rect x="58.6" y="373" width="0.3" height="15.0" fill="rgb(233,228,17)" rx="2" ry="2" />
<text  x="61.64" y="383.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (2 samples, 0.04%)</title><rect x="443.3" y="517" width="0.4" height="15.0" fill="rgb(213,16,4)" rx="2" ry="2" />
<text  x="446.27" y="527.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::consume_with&lt;row::apply_monotonically (2 samples, 0.04%)</title><rect x="16.0" y="613" width="0.5" height="15.0" fill="rgb(249,189,40)" rx="2" ry="2" />
<text  x="19.02" y="623.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (4 samples, 0.08%)</title><rect x="1081.8" y="469" width="0.9" height="15.0" fill="rgb(209,214,38)" rx="2" ry="2" />
<text  x="1084.79" y="479.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE9then_implIZNS6_14discard_resultEvEUlDpOT_E_NS0_IvEEEET0_OT_ (14 samples, 0.26%)</title><rect x="711.2" y="565" width="3.1" height="15.0" fill="rgb(208,117,53)" rx="2" ry="2" />
<text  x="714.22" y="575.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (1 samples, 0.02%)</title><rect x="105.9" y="213" width="0.3" height="15.0" fill="rgb(247,54,45)" rx="2" ry="2" />
<text  x="108.93" y="223.5" ></text>
</g>
<g >
<title>db::system_distributed_keyspace::create_cdc_desc (1 samples, 0.02%)</title><rect x="102.4" y="581" width="0.2" height="15.0" fill="rgb(249,30,30)" rx="2" ry="2" />
<text  x="105.37" y="591.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (1 samples, 0.02%)</title><rect x="287.8" y="293" width="0.2" height="15.0" fill="rgb(246,33,36)" rx="2" ry="2" />
<text  x="290.77" y="303.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::do_refresh_state (51 samples, 0.96%)</title><rect x="271.0" y="325" width="11.4" height="15.0" fill="rgb(215,210,49)" rx="2" ry="2" />
<text  x="274.03" y="335.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_nonsingular_mutations_locally (1 samples, 0.02%)</title><rect x="105.9" y="485" width="0.3" height="15.0" fill="rgb(250,98,27)" rx="2" ry="2" />
<text  x="108.93" y="495.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_state&lt;std::tuple&lt;std::optional&lt;auth::resource&gt; &gt;, seastar::future&lt;bool&gt; &gt;::do_with_state&lt;std::optional&lt;auth::resource&gt; &gt; (7 samples, 0.13%)</title><rect x="767.7" y="405" width="1.5" height="15.0" fill="rgb(248,51,1)" rx="2" ry="2" />
<text  x="770.66" y="415.5" ></text>
</g>
<g >
<title>seastar::promise&lt;void&gt;::promise (3 samples, 0.06%)</title><rect x="1007.3" y="277" width="0.6" height="15.0" fill="rgb(221,171,29)" rx="2" ry="2" />
<text  x="1010.28" y="287.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (1 samples, 0.02%)</title><rect x="677.5" y="581" width="0.3" height="15.0" fill="rgb(239,227,24)" rx="2" ry="2" />
<text  x="680.53" y="591.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::push_static_row (2 samples, 0.04%)</title><rect x="289.6" y="373" width="0.4" height="15.0" fill="rgb(217,133,15)" rx="2" ry="2" />
<text  x="292.55" y="383.5" ></text>
</g>
<g >
<title>checked_file_impl::list_directory (1 samples, 0.02%)</title><rect x="677.8" y="501" width="0.2" height="15.0" fill="rgb(250,90,2)" rx="2" ry="2" />
<text  x="680.75" y="511.5" ></text>
</g>
<g >
<title>partition_snapshot::versions (1 samples, 0.02%)</title><rect x="265.2" y="229" width="0.3" height="15.0" fill="rgb(210,50,41)" rx="2" ry="2" />
<text  x="268.23" y="239.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (2 samples, 0.04%)</title><rect x="57.5" y="325" width="0.5" height="15.0" fill="rgb(206,112,25)" rx="2" ry="2" />
<text  x="60.52" y="335.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::operator== (1 samples, 0.02%)</title><rect x="786.4" y="245" width="0.2" height="15.0" fill="rgb(237,17,50)" rx="2" ry="2" />
<text  x="789.40" y="255.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::fetch (570 samples, 10.78%)</title><rect x="173.1" y="437" width="127.2" height="15.0" fill="rgb(236,123,3)" rx="2" ry="2" />
<text  x="176.09" y="447.5" >mutation_fragme..</text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::set_type (1 samples, 0.02%)</title><rect x="25.4" y="357" width="0.2" height="15.0" fill="rgb(220,18,33)" rx="2" ry="2" />
<text  x="28.39" y="367.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (29 samples, 0.55%)</title><rect x="1126.4" y="485" width="6.5" height="15.0" fill="rgb(207,3,44)" rx="2" ry="2" />
<text  x="1129.42" y="495.5" ></text>
</g>
<g >
<title>abstract_type::from_string (1 samples, 0.02%)</title><rect x="68.2" y="405" width="0.3" height="15.0" fill="rgb(237,52,4)" rx="2" ry="2" />
<text  x="71.23" y="415.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (1 samples, 0.02%)</title><rect x="58.2" y="373" width="0.2" height="15.0" fill="rgb(253,131,48)" rx="2" ry="2" />
<text  x="61.19" y="383.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, enum_set&lt;super_enum&lt;auth::permission,  (2 samples, 0.04%)</title><rect x="76.5" y="341" width="0.4" height="15.0" fill="rgb(210,209,51)" rx="2" ry="2" />
<text  x="79.49" y="351.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="548.6" y="517" width="0.2" height="15.0" fill="rgb(253,57,43)" rx="2" ry="2" />
<text  x="551.57" y="527.5" ></text>
</g>
<g >
<title>operator new (7 samples, 0.13%)</title><rect x="205.0" y="309" width="1.6" height="15.0" fill="rgb(215,185,54)" rx="2" ry="2" />
<text  x="207.99" y="319.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base&lt;11ul, cql3::expr::untyped_constant&gt; (3 samples, 0.06%)</title><rect x="51.5" y="309" width="0.7" height="15.0" fill="rgb(233,62,39)" rx="2" ry="2" />
<text  x="54.50" y="319.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::~_Deque_base (2 samples, 0.04%)</title><rect x="608.8" y="501" width="0.5" height="15.0" fill="rgb(223,139,14)" rx="2" ry="2" />
<text  x="611.81" y="511.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (2 samples, 0.04%)</title><rect x="345.5" y="261" width="0.5" height="15.0" fill="rgb(207,150,42)" rx="2" ry="2" />
<text  x="348.55" y="271.5" ></text>
</g>
<g >
<title>auth::get_permissions (5 samples, 0.09%)</title><rect x="76.3" y="469" width="1.1" height="15.0" fill="rgb(221,64,2)" rx="2" ry="2" />
<text  x="79.26" y="479.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (1 samples, 0.02%)</title><rect x="106.8" y="421" width="0.3" height="15.0" fill="rgb(238,219,24)" rx="2" ry="2" />
<text  x="109.83" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_node (1 samples, 0.02%)</title><rect x="652.3" y="533" width="0.2" height="15.0" fill="rgb(231,13,45)" rx="2" ry="2" />
<text  x="655.32" y="543.5" ></text>
</g>
<g >
<title>row_cache::do_update (1 samples, 0.02%)</title><rect x="1134.0" y="485" width="0.2" height="15.0" fill="rgb(243,183,6)" rx="2" ry="2" />
<text  x="1137.00" y="495.5" ></text>
</g>
<g >
<title>operator new (15 samples, 0.28%)</title><rect x="988.1" y="373" width="3.3" height="15.0" fill="rgb(211,61,40)" rx="2" ry="2" />
<text  x="991.09" y="383.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (1 samples, 0.02%)</title><rect x="1158.1" y="581" width="0.2" height="15.0" fill="rgb(246,100,35)" rx="2" ry="2" />
<text  x="1161.10" y="591.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;::~basic_sstring (1 samples, 0.02%)</title><rect x="844.9" y="549" width="0.2" height="15.0" fill="rgb(236,104,16)" rx="2" ry="2" />
<text  x="847.86" y="559.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (15 samples, 0.28%)</title><rect x="904.0" y="469" width="3.3" height="15.0" fill="rgb(247,217,35)" rx="2" ry="2" />
<text  x="906.98" y="479.5" ></text>
</g>
<g >
<title>logalloc::region_impl::alloc (1 samples, 0.02%)</title><rect x="15.6" y="613" width="0.2" height="15.0" fill="rgb(216,92,54)" rx="2" ry="2" />
<text  x="18.58" y="623.5" ></text>
</g>
<g >
<title>service::client_state::check_has_permission (156 samples, 2.95%)</title><rect x="766.1" y="437" width="34.8" height="15.0" fill="rgb(242,81,28)" rx="2" ry="2" />
<text  x="769.10" y="447.5" >se..</text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (1 samples, 0.02%)</title><rect x="124.0" y="533" width="0.2" height="15.0" fill="rgb(244,67,40)" rx="2" ry="2" />
<text  x="127.01" y="543.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (1 samples, 0.02%)</title><rect x="105.5" y="501" width="0.2" height="15.0" fill="rgb(243,48,13)" rx="2" ry="2" />
<text  x="108.49" y="511.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (4 samples, 0.08%)</title><rect x="53.3" y="293" width="0.9" height="15.0" fill="rgb(227,200,21)" rx="2" ry="2" />
<text  x="56.28" y="303.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_impl&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (506 samples, 9.57%)</title><rect x="324.4" y="421" width="112.8" height="15.0" fill="rgb(251,60,5)" rx="2" ry="2" />
<text  x="327.35" y="431.5" >seastar::inte..</text>
</g>
<g >
<title>seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;::swap (7 samples, 0.13%)</title><rect x="717.5" y="501" width="1.5" height="15.0" fill="rgb(248,208,13)" rx="2" ry="2" />
<text  x="720.46" y="511.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::~_Variant_storage (1 samples, 0.02%)</title><rect x="75.4" y="501" width="0.2" height="15.0" fill="rgb(240,172,22)" rx="2" ry="2" />
<text  x="78.37" y="511.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_no_esft&lt;lister&gt;::shared_ptr_no_esft&lt;seastar::file, std::unordered_set&lt;seastar::directory_entry_type, seastar::enum_hash&lt;seastar::directory_entry_type&gt;, std::equal_to&lt;seastar::directory_entry_type&gt;, std::allocator&lt;seastar::directory_entry_type&gt; &gt; const, std::function&lt;seastar::future&lt;void&gt;  (1 samples, 0.02%)</title><rect x="677.8" y="549" width="0.2" height="15.0" fill="rgb(233,120,35)" rx="2" ry="2" />
<text  x="680.75" y="559.5" ></text>
</g>
<g >
<title>cql3::single_column_relation::single_column_relation (1 samples, 0.02%)</title><rect x="58.9" y="373" width="0.2" height="15.0" fill="rgb(239,15,4)" rx="2" ry="2" />
<text  x="61.86" y="383.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;11ul, cql3::expr::untyped_constant, cql3::expr::untyped_constant, void&gt; (3 samples, 0.06%)</title><rect x="51.5" y="325" width="0.7" height="15.0" fill="rgb(237,44,47)" rx="2" ry="2" />
<text  x="54.50" y="335.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::read_next (275 samples, 5.20%)</title><rect x="207.4" y="341" width="61.4" height="15.0" fill="rgb(246,98,50)" rx="2" ry="2" />
<text  x="210.45" y="351.5" >partit..</text>
</g>
<g >
<title>seastar::future_state&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::take (1 samples, 0.02%)</title><rect x="1142.0" y="565" width="0.3" height="15.0" fill="rgb(239,117,13)" rx="2" ry="2" />
<text  x="1145.03" y="575.5" ></text>
</g>
<g >
<title>intrusive_array&lt;memtable_entry&gt;::intrusive_array&lt;seastar::lw_shared_ptr&lt;schema const&gt;&amp;, dht::decorated_key, mutation_partition&gt; (2 samples, 0.04%)</title><rect x="1118.2" y="261" width="0.4" height="15.0" fill="rgb(233,17,49)" rx="2" ry="2" />
<text  x="1121.16" y="271.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::maybe_prepare_json_cache (1 samples, 0.02%)</title><rect x="859.4" y="501" width="0.2" height="15.0" fill="rgb(212,21,3)" rx="2" ry="2" />
<text  x="862.36" y="511.5" ></text>
</g>
<g >
<title>flush_reader::get_next_partition (1 samples, 0.02%)</title><rect x="79.6" y="453" width="0.2" height="15.0" fill="rgb(221,212,43)" rx="2" ry="2" />
<text  x="82.61" y="463.5" ></text>
</g>
<g >
<title>database::query (108 samples, 2.04%)</title><rect x="994.8" y="357" width="24.1" height="15.0" fill="rgb(210,69,9)" rx="2" ry="2" />
<text  x="997.78" y="367.5" >d..</text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;1ul, cql3::expr::untyped_constant&gt; (1 samples, 0.02%)</title><rect x="51.5" y="69" width="0.2" height="15.0" fill="rgb(208,179,37)" rx="2" ry="2" />
<text  x="54.50" y="79.5" ></text>
</g>
<g >
<title>std::operator+ (4 samples, 0.08%)</title><rect x="53.3" y="181" width="0.9" height="15.0" fill="rgb(245,52,28)" rx="2" ry="2" />
<text  x="56.28" y="191.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (4 samples, 0.08%)</title><rect x="572.2" y="453" width="0.9" height="15.0" fill="rgb(245,206,5)" rx="2" ry="2" />
<text  x="575.22" y="463.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;1ul, cql3::expr::untyped_constant&gt; (1 samples, 0.02%)</title><rect x="51.7" y="53" width="0.2" height="15.0" fill="rgb(227,107,42)" rx="2" ry="2" />
<text  x="54.72" y="63.5" ></text>
</g>
<g >
<title>seastar::internal::future_base::set_coroutine (2 samples, 0.04%)</title><rect x="1021.6" y="357" width="0.4" height="15.0" fill="rgb(220,70,30)" rx="2" ry="2" />
<text  x="1024.56" y="367.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::cancel (1 samples, 0.02%)</title><rect x="696.3" y="533" width="0.2" height="15.0" fill="rgb(243,222,53)" rx="2" ry="2" />
<text  x="699.27" y="543.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.02%)</title><rect x="58.2" y="325" width="0.2" height="15.0" fill="rgb(239,199,25)" rx="2" ry="2" />
<text  x="61.19" y="335.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::result_set, std::default_delete&lt;cql3::result_set&gt; &gt;::~unique_ptr (2 samples, 0.04%)</title><rect x="646.3" y="565" width="0.4" height="15.0" fill="rgb(217,64,52)" rx="2" ry="2" />
<text  x="649.29" y="575.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (3 samples, 0.06%)</title><rect x="41.2" y="405" width="0.7" height="15.0" fill="rgb(215,57,49)" rx="2" ry="2" />
<text  x="44.23" y="415.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.02%)</title><rect x="39.7" y="245" width="0.2" height="15.0" fill="rgb(217,119,47)" rx="2" ry="2" />
<text  x="42.67" y="255.5" ></text>
</g>
<g >
<title>mutation_partition_serializer::write_serialized&lt;ser::writer_of_mutation_partition&lt;bytes_ostream&gt; &gt; (2 samples, 0.04%)</title><rect x="1129.5" y="261" width="0.5" height="15.0" fill="rgb(252,18,15)" rx="2" ry="2" />
<text  x="1132.54" y="271.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::clear (3 samples, 0.06%)</title><rect x="137.4" y="549" width="0.7" height="15.0" fill="rgb(215,107,18)" rx="2" ry="2" />
<text  x="140.39" y="559.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="558.4" y="373" width="0.2" height="15.0" fill="rgb(241,212,54)" rx="2" ry="2" />
<text  x="561.39" y="383.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;database&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="1022.4" y="357" width="0.3" height="15.0" fill="rgb(254,194,31)" rx="2" ry="2" />
<text  x="1025.45" y="367.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_Optional_payload_base (8 samples, 0.15%)</title><rect x="549.5" y="517" width="1.8" height="15.0" fill="rgb(248,60,0)" rx="2" ry="2" />
<text  x="552.47" y="527.5" ></text>
</g>
<g >
<title>std::operator==&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; (1 samples, 0.02%)</title><rect x="786.2" y="245" width="0.2" height="15.0" fill="rgb(207,7,18)" rx="2" ry="2" />
<text  x="789.18" y="255.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_schema_tables.cc (4 samples, 0.08%)</title><rect x="83.4" y="709" width="0.9" height="15.0" fill="rgb(230,68,19)" rx="2" ry="2" />
<text  x="86.40" y="719.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (15 samples, 0.28%)</title><rect x="433.9" y="405" width="3.3" height="15.0" fill="rgb(246,81,16)" rx="2" ry="2" />
<text  x="436.90" y="415.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (1 samples, 0.02%)</title><rect x="77.8" y="597" width="0.2" height="15.0" fill="rgb(234,65,35)" rx="2" ry="2" />
<text  x="80.82" y="607.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (17 samples, 0.32%)</title><rect x="225.1" y="197" width="3.8" height="15.0" fill="rgb(249,112,46)" rx="2" ry="2" />
<text  x="228.07" y="207.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (23 samples, 0.43%)</title><rect x="291.1" y="389" width="5.1" height="15.0" fill="rgb(208,50,14)" rx="2" ry="2" />
<text  x="294.11" y="399.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::clear (1 samples, 0.02%)</title><rect x="816.7" y="517" width="0.3" height="15.0" fill="rgb(229,52,3)" rx="2" ry="2" />
<text  x="819.75" y="527.5" ></text>
</g>
<g >
<title>seastar::internal::when_all_state&lt;seastar::internal::extract_values_from_futures_tuple&lt;seastar::future&lt;void&gt;, seastar::future&lt;void&gt; &gt;, seastar::future&lt;void&gt;, seastar::future&lt;void&gt; &gt;::wait_all (1 samples, 0.02%)</title><rect x="1126.6" y="421" width="0.3" height="15.0" fill="rgb(210,170,7)" rx="2" ry="2" />
<text  x="1129.64" y="431.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="771.0" y="421" width="0.2" height="15.0" fill="rgb(247,107,17)" rx="2" ry="2" />
<text  x="774.01" y="431.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (1 samples, 0.02%)</title><rect x="832.1" y="517" width="0.3" height="15.0" fill="rgb(250,121,31)" rx="2" ry="2" />
<text  x="835.14" y="527.5" ></text>
</g>
<g >
<title>mutation_partition::clear_gently (1 samples, 0.02%)</title><rect x="1137.3" y="453" width="0.3" height="15.0" fill="rgb(218,84,1)" rx="2" ry="2" />
<text  x="1140.35" y="463.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::emplace_back&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; const&amp;&gt; (1 samples, 0.02%)</title><rect x="75.6" y="517" width="0.2" height="15.0" fill="rgb(211,214,42)" rx="2" ry="2" />
<text  x="78.59" y="527.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reserve&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (418 samples, 7.90%)</title><rect x="196.1" y="373" width="93.2" height="15.0" fill="rgb(249,35,2)" rx="2" ry="2" />
<text  x="199.07" y="383.5" >logalloc::a..</text>
</g>
<g >
<title>operator new (5 samples, 0.09%)</title><rect x="832.8" y="501" width="1.1" height="15.0" fill="rgb(224,175,13)" rx="2" ry="2" />
<text  x="835.81" y="511.5" ></text>
</g>
<g >
<title>boost::intrusive::bstree_algorithms&lt;boost::intrusive::rbtree_node_traits&lt;void*, false&gt; &gt;::clear_and_dispose&lt;boost::intrusive::detail::node_disposer&lt;boost::intrusive::detail::null_disposer, boost::intrusive::mhtraits&lt;range_tombstone_entry, boost::intrusive::set_member_hook&lt;boost::intrusive::link_mode&lt; (2 samples, 0.04%)</title><rect x="559.5" y="389" width="0.5" height="15.0" fill="rgb(221,227,6)" rx="2" ry="2" />
<text  x="562.51" y="399.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::partition_slice, std::default_delete&lt;query::partition_slice&gt; &gt;::~unique_ptr (2 samples, 0.04%)</title><rect x="535.4" y="421" width="0.5" height="15.0" fill="rgb(205,44,7)" rx="2" ry="2" />
<text  x="538.41" y="431.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="39.7" y="309" width="0.2" height="15.0" fill="rgb(209,196,29)" rx="2" ry="2" />
<text  x="42.67" y="319.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (1 samples, 0.02%)</title><rect x="1119.3" y="245" width="0.2" height="15.0" fill="rgb(254,95,42)" rx="2" ry="2" />
<text  x="1122.28" y="255.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, std::optional&lt;auth::resource&gt;&amp;&amp;, service::client_state::check_has_permission (1 samples, 0.02%)</title><rect x="801.1" y="437" width="0.3" height="15.0" fill="rgb(251,138,46)" rx="2" ry="2" />
<text  x="804.13" y="447.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="515.3" y="373" width="0.3" height="15.0" fill="rgb(208,103,50)" rx="2" ry="2" />
<text  x="518.33" y="383.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;service::storage_proxy_coordinator_query_result&gt;, seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::finally_body&lt;service::storage_proxy::do_query (1 samples, 0.02%)</title><rect x="85.6" y="613" width="0.3" height="15.0" fill="rgb(251,87,21)" rx="2" ry="2" />
<text  x="88.63" y="623.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;11ul, cql3::expr::untyped_constant&gt; (2 samples, 0.04%)</title><rect x="51.5" y="213" width="0.4" height="15.0" fill="rgb(211,181,48)" rx="2" ry="2" />
<text  x="54.50" y="223.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::then_impl&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (58 samples, 1.10%)</title><rect x="305.4" y="453" width="12.9" height="15.0" fill="rgb(236,209,44)" rx="2" ry="2" />
<text  x="308.39" y="463.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (1 samples, 0.02%)</title><rect x="648.1" y="565" width="0.2" height="15.0" fill="rgb(249,88,37)" rx="2" ry="2" />
<text  x="651.08" y="575.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reserve&lt;logalloc::allocating_section::operator (1 samples, 0.02%)</title><rect x="79.6" y="485" width="0.2" height="15.0" fill="rgb(205,4,20)" rx="2" ry="2" />
<text  x="82.61" y="495.5" ></text>
</g>
<g >
<title>partition_snapshot::versions (1 samples, 0.02%)</title><rect x="264.8" y="213" width="0.2" height="15.0" fill="rgb(240,16,27)" rx="2" ry="2" />
<text  x="267.79" y="223.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (4 samples, 0.08%)</title><rect x="470.5" y="405" width="0.9" height="15.0" fill="rgb(242,13,46)" rx="2" ry="2" />
<text  x="473.49" y="415.5" ></text>
</g>
<g >
<title>cdc::cdc_service::needs_cdc_augmentation (1 samples, 0.02%)</title><rect x="853.1" y="453" width="0.2" height="15.0" fill="rgb(235,151,9)" rx="2" ry="2" />
<text  x="856.11" y="463.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::CommonToken (2 samples, 0.04%)</title><rect x="24.1" y="293" width="0.4" height="15.0" fill="rgb(241,1,24)" rx="2" ry="2" />
<text  x="27.06" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (7 samples, 0.13%)</title><rect x="1102.5" y="485" width="1.6" height="15.0" fill="rgb(248,183,34)" rx="2" ry="2" />
<text  x="1105.54" y="495.5" ></text>
</g>
<g >
<title>std::get&lt;2ul, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; (2 samples, 0.04%)</title><rect x="1111.5" y="517" width="0.4" height="15.0" fill="rgb(253,77,53)" rx="2" ry="2" />
<text  x="1114.47" y="527.5" ></text>
</g>
<g >
<title>operator new (6 samples, 0.11%)</title><rect x="538.3" y="501" width="1.4" height="15.0" fill="rgb(224,194,42)" rx="2" ry="2" />
<text  x="541.31" y="511.5" ></text>
</g>
<g >
<title>write_fragmented&lt;managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="855.1" y="389" width="0.2" height="15.0" fill="rgb(229,54,29)" rx="2" ry="2" />
<text  x="858.12" y="399.5" ></text>
</g>
<g >
<title>mutation_querier::consume_end_of_stream (2 samples, 0.04%)</title><rect x="337.7" y="309" width="0.5" height="15.0" fill="rgb(252,222,34)" rx="2" ry="2" />
<text  x="340.74" y="319.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate_to_raw_view (1 samples, 0.02%)</title><rect x="853.8" y="405" width="0.2" height="15.0" fill="rgb(221,46,22)" rx="2" ry="2" />
<text  x="856.78" y="415.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="36.8" y="421" width="0.2" height="15.0" fill="rgb(247,2,21)" rx="2" ry="2" />
<text  x="39.77" y="431.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, cql3::attributes::raw*, std::default_delete&lt;cql3::attributes::raw&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="60.0" y="373" width="0.2" height="15.0" fill="rgb(230,193,51)" rx="2" ry="2" />
<text  x="62.98" y="383.5" ></text>
</g>
<g >
<title>db::schema_tables::calculate_schema_digest (2 samples, 0.04%)</title><rect x="105.9" y="549" width="0.5" height="15.0" fill="rgb(232,62,18)" rx="2" ry="2" />
<text  x="108.93" y="559.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="898.4" y="453" width="0.2" height="15.0" fill="rgb(247,19,4)" rx="2" ry="2" />
<text  x="901.40" y="463.5" ></text>
</g>
<g >
<title>partition_snapshot::partition_tombstone (4 samples, 0.08%)</title><rect x="512.4" y="325" width="0.9" height="15.0" fill="rgb(217,13,25)" rx="2" ry="2" />
<text  x="515.43" y="335.5" ></text>
</g>
<g >
<title>do_query_on_all_shards&lt;(anonymous namespace)::mutation_query_result_builder&gt; (1 samples, 0.02%)</title><rect x="105.9" y="437" width="0.3" height="15.0" fill="rgb(237,94,53)" rx="2" ry="2" />
<text  x="108.93" y="447.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_singular (122 samples, 2.31%)</title><rect x="1137.6" y="597" width="27.2" height="15.0" fill="rgb(220,10,11)" rx="2" ry="2" />
<text  x="1140.57" y="607.5" >s..</text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.02%)</title><rect x="107.5" y="389" width="0.2" height="15.0" fill="rgb(243,129,38)" rx="2" ry="2" />
<text  x="110.50" y="399.5" ></text>
</g>
<g >
<title>seastar::internal::uninitialized_wrapper_base&lt;service::storage_proxy_coordinator_query_result, false&gt;::uninitialized_set&lt;service::storage_proxy_coordinator_query_result&gt; (6 samples, 0.11%)</title><rect x="673.1" y="549" width="1.3" height="15.0" fill="rgb(235,157,29)" rx="2" ry="2" />
<text  x="676.07" y="559.5" ></text>
</g>
<g >
<title>seastar::gate::leave (1 samples, 0.02%)</title><rect x="123.6" y="501" width="0.2" height="15.0" fill="rgb(217,169,11)" rx="2" ry="2" />
<text  x="126.56" y="511.5" ></text>
</g>
<g >
<title>locator::token_metadata_impl::get_all_endpoints (1 samples, 0.02%)</title><rect x="17.4" y="469" width="0.2" height="15.0" fill="rgb(252,151,12)" rx="2" ry="2" />
<text  x="20.36" y="479.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;auth::resource_kind, std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;auth::resource_kind&gt;, std::hash&lt;auth::resource_kind&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (3 samples, 0.06%)</title><rect x="758.3" y="437" width="0.7" height="15.0" fill="rgb(226,213,26)" rx="2" ry="2" />
<text  x="761.29" y="447.5" ></text>
</g>
<g >
<title>seastar::syscall_work_queue::submit_item (1 samples, 0.02%)</title><rect x="677.8" y="405" width="0.2" height="15.0" fill="rgb(233,130,25)" rx="2" ry="2" />
<text  x="680.75" y="415.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;11ul, cql3::expr::untyped_constant&gt; (3 samples, 0.06%)</title><rect x="51.5" y="261" width="0.7" height="15.0" fill="rgb(235,21,53)" rx="2" ry="2" />
<text  x="54.50" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_List_node_header::_List_node_header (1 samples, 0.02%)</title><rect x="465.8" y="373" width="0.2" height="15.0" fill="rgb(238,122,0)" rx="2" ry="2" />
<text  x="468.80" y="383.5" ></text>
</g>
<g >
<title>seastar::syscall_work_queue::submit_item (1 samples, 0.02%)</title><rect x="850.0" y="389" width="0.2" height="15.0" fill="rgb(243,219,46)" rx="2" ry="2" />
<text  x="852.99" y="399.5" ></text>
</g>
<g >
<title>utils::timed_rate_moving_average_and_histogram::mark (7 samples, 0.13%)</title><rect x="595.6" y="517" width="1.6" height="15.0" fill="rgb(240,92,37)" rx="2" ry="2" />
<text  x="598.65" y="527.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.02%)</title><rect x="967.8" y="373" width="0.2" height="15.0" fill="rgb(220,164,37)" rx="2" ry="2" />
<text  x="970.79" y="383.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (2 samples, 0.04%)</title><rect x="1012.0" y="261" width="0.4" height="15.0" fill="rgb(224,118,13)" rx="2" ry="2" />
<text  x="1014.96" y="271.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (25 samples, 0.47%)</title><rect x="541.9" y="501" width="5.6" height="15.0" fill="rgb(237,187,5)" rx="2" ry="2" />
<text  x="544.88" y="511.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::operator= (3 samples, 0.06%)</title><rect x="1140.5" y="581" width="0.6" height="15.0" fill="rgb(227,159,47)" rx="2" ry="2" />
<text  x="1143.47" y="591.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (1 samples, 0.02%)</title><rect x="1164.6" y="533" width="0.2" height="15.0" fill="rgb(214,176,45)" rx="2" ry="2" />
<text  x="1167.57" y="543.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment&lt;schema const&amp;, rows_entry const&amp;&gt; (188 samples, 3.55%)</title><rect x="214.6" y="277" width="41.9" height="15.0" fill="rgb(216,121,32)" rx="2" ry="2" />
<text  x="217.59" y="287.5" >mut..</text>
</g>
<g >
<title>operator new (9 samples, 0.17%)</title><rect x="314.3" y="373" width="2.0" height="15.0" fill="rgb(232,210,49)" rx="2" ry="2" />
<text  x="317.31" y="383.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (1 samples, 0.02%)</title><rect x="648.3" y="565" width="0.2" height="15.0" fill="rgb(247,114,48)" rx="2" ry="2" />
<text  x="651.30" y="575.5" ></text>
</g>
<g >
<title>std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (12 samples, 0.23%)</title><rect x="434.6" y="389" width="2.6" height="15.0" fill="rgb(230,119,53)" rx="2" ry="2" />
<text  x="437.57" y="399.5" ></text>
</g>
<g >
<title>locator::effective_replication_map::get_natural_endpoints_without_node_being_replaced (66 samples, 1.25%)</title><rect x="1058.1" y="405" width="14.8" height="15.0" fill="rgb(251,170,36)" rx="2" ry="2" />
<text  x="1061.15" y="415.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::push_static_row (19 samples, 0.36%)</title><rect x="284.6" y="357" width="4.3" height="15.0" fill="rgb(213,139,11)" rx="2" ry="2" />
<text  x="287.64" y="367.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::lsa_partition_reader::next_row (1 samples, 0.02%)</title><rect x="80.5" y="357" width="0.2" height="15.0" fill="rgb(235,113,9)" rx="2" ry="2" />
<text  x="83.50" y="367.5" ></text>
</g>
<g >
<title>ser::query_result__partitions&lt;bytes_ostream&gt;::add (1 samples, 0.02%)</title><rect x="347.8" y="261" width="0.2" height="15.0" fill="rgb(253,212,30)" rx="2" ry="2" />
<text  x="350.78" y="271.5" ></text>
</g>
<g >
<title>db::schema_tables::update_schema_version_and_announce (1 samples, 0.02%)</title><rect x="17.1" y="485" width="0.3" height="15.0" fill="rgb(214,208,10)" rx="2" ry="2" />
<text  x="20.14" y="495.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::take_value (2 samples, 0.04%)</title><rect x="192.7" y="357" width="0.5" height="15.0" fill="rgb(225,206,31)" rx="2" ry="2" />
<text  x="195.72" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::vector (8 samples, 0.15%)</title><rect x="896.6" y="453" width="1.8" height="15.0" fill="rgb(234,220,21)" rx="2" ry="2" />
<text  x="899.62" y="463.5" ></text>
</g>
<g >
<title>logalloc::region_impl::free (1 samples, 0.02%)</title><rect x="1119.1" y="229" width="0.2" height="15.0" fill="rgb(221,35,27)" rx="2" ry="2" />
<text  x="1122.05" y="239.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.02%)</title><rect x="49.9" y="373" width="0.3" height="15.0" fill="rgb(209,41,12)" rx="2" ry="2" />
<text  x="52.94" y="383.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, seastar::shared_ptr&lt;service::abstract_write_response_handler&gt; &gt;, std::allocator&lt;std::pair&lt;unsigned long const, seastar::shared_ptr&lt;service::abstract_write_response_handler&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_erase (1 samples, 0.02%)</title><rect x="704.1" y="565" width="0.2" height="15.0" fill="rgb(207,70,42)" rx="2" ry="2" />
<text  x="707.08" y="575.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, cql3::statements::create_aggregate_statement*, false&gt;::_M_head (1 samples, 0.02%)</title><rect x="60.9" y="405" width="0.2" height="15.0" fill="rgb(236,189,37)" rx="2" ry="2" />
<text  x="63.87" y="415.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (1 samples, 0.02%)</title><rect x="895.5" y="437" width="0.2" height="15.0" fill="rgb(219,20,12)" rx="2" ry="2" />
<text  x="898.50" y="447.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (1 samples, 0.02%)</title><rect x="800.7" y="357" width="0.2" height="15.0" fill="rgb(208,154,5)" rx="2" ry="2" />
<text  x="803.68" y="367.5" ></text>
</g>
<g >
<title>seastar::internal::future_base::future_base (1 samples, 0.02%)</title><rect x="751.4" y="501" width="0.2" height="15.0" fill="rgb(249,3,37)" rx="2" ry="2" />
<text  x="754.38" y="511.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (18 samples, 0.34%)</title><rect x="562.0" y="389" width="4.0" height="15.0" fill="rgb(229,0,45)" rx="2" ry="2" />
<text  x="564.96" y="399.5" ></text>
</g>
<g >
<title>logalloc::basic_region_impl::set_reclaiming_enabled (1 samples, 0.02%)</title><rect x="530.5" y="405" width="0.2" height="15.0" fill="rgb(215,62,17)" rx="2" ry="2" />
<text  x="533.50" y="415.5" ></text>
</g>
<g >
<title>std::variant&lt;query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::operator=&lt;query::noop_hasher&gt; (1 samples, 0.02%)</title><rect x="591.6" y="485" width="0.3" height="15.0" fill="rgb(223,134,21)" rx="2" ry="2" />
<text  x="594.63" y="495.5" ></text>
</g>
<g >
<title>bytes_ostream::linearize (1 samples, 0.02%)</title><rect x="587.4" y="501" width="0.2" height="15.0" fill="rgb(221,2,12)" rx="2" ry="2" />
<text  x="590.39" y="511.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;void&gt;  (1 samples, 0.02%)</title><rect x="850.0" y="533" width="0.2" height="15.0" fill="rgb(224,90,0)" rx="2" ry="2" />
<text  x="852.99" y="543.5" ></text>
</g>
<g >
<title>query::querier_base::querier_base (1 samples, 0.02%)</title><rect x="613.3" y="517" width="0.2" height="15.0" fill="rgb(242,15,9)" rx="2" ry="2" />
<text  x="616.27" y="527.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;6ul, cql3::expr::untyped_constant&gt; (2 samples, 0.04%)</title><rect x="51.5" y="133" width="0.4" height="15.0" fill="rgb(225,0,12)" rx="2" ry="2" />
<text  x="54.50" y="143.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_wrapped_nrvo&lt;seastar::future&lt;void&gt;, service::storage_proxy::mutate_internal&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="1129.1" y="405" width="0.2" height="15.0" fill="rgb(247,180,18)" rx="2" ry="2" />
<text  x="1132.09" y="415.5" ></text>
</g>
<g >
<title>utils::basic_ihistogram&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt; &gt;::set_latency (1 samples, 0.02%)</title><rect x="1124.4" y="373" width="0.2" height="15.0" fill="rgb(247,212,29)" rx="2" ry="2" />
<text  x="1127.41" y="383.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::value (32 samples, 0.61%)</title><rect x="48.8" y="389" width="7.2" height="15.0" fill="rgb(218,119,39)" rx="2" ry="2" />
<text  x="51.82" y="399.5" ></text>
</g>
<g >
<title>ser::deletable_row_view::cells (1 samples, 0.02%)</title><rect x="1122.2" y="325" width="0.2" height="15.0" fill="rgb(239,7,12)" rx="2" ry="2" />
<text  x="1125.18" y="335.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (2 samples, 0.04%)</title><rect x="657.2" y="565" width="0.5" height="15.0" fill="rgb(227,48,41)" rx="2" ry="2" />
<text  x="660.23" y="575.5" ></text>
</g>
<g >
<title>reader_permit::impl::mark_unused (48 samples, 0.91%)</title><rect x="125.1" y="533" width="10.7" height="15.0" fill="rgb(217,55,19)" rx="2" ry="2" />
<text  x="128.12" y="543.5" ></text>
</g>
<g >
<title>cql3::restrictions::partition_key_restrictions::merge_to (6 samples, 0.11%)</title><rect x="70.0" y="453" width="1.4" height="15.0" fill="rgb(221,72,4)" rx="2" ry="2" />
<text  x="73.02" y="463.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;void&gt;::set_value&lt;&gt; (2 samples, 0.04%)</title><rect x="697.8" y="517" width="0.5" height="15.0" fill="rgb(216,102,45)" rx="2" ry="2" />
<text  x="700.83" y="527.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (3 samples, 0.06%)</title><rect x="734.4" y="373" width="0.7" height="15.0" fill="rgb(245,202,30)" rx="2" ry="2" />
<text  x="737.42" y="383.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.02%)</title><rect x="1116.8" y="549" width="0.2" height="15.0" fill="rgb(215,71,28)" rx="2" ry="2" />
<text  x="1119.82" y="559.5" ></text>
</g>
<g >
<title>utils::tuple_hash::operator (6 samples, 0.11%)</title><rect x="748.5" y="437" width="1.3" height="15.0" fill="rgb(241,10,28)" rx="2" ry="2" />
<text  x="751.48" y="447.5" ></text>
</g>
<g >
<title>cql3::statements::update_statement::add_update_for_key (14 samples, 0.26%)</title><rect x="856.0" y="453" width="3.1" height="15.0" fill="rgb(237,62,42)" rx="2" ry="2" />
<text  x="859.01" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (2 samples, 0.04%)</title><rect x="843.5" y="501" width="0.5" height="15.0" fill="rgb(210,198,39)" rx="2" ry="2" />
<text  x="846.52" y="511.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::query_state&gt;::~shared_ptr (2 samples, 0.04%)</title><rect x="821.7" y="533" width="0.4" height="15.0" fill="rgb(211,51,22)" rx="2" ry="2" />
<text  x="824.65" y="543.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.02%)</title><rect x="10.9" y="661" width="0.2" height="15.0" fill="rgb(236,64,54)" rx="2" ry="2" />
<text  x="13.89" y="671.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (1 samples, 0.02%)</title><rect x="38.6" y="421" width="0.2" height="15.0" fill="rgb(247,145,30)" rx="2" ry="2" />
<text  x="41.56" y="431.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.04%)</title><rect x="891.3" y="389" width="0.4" height="15.0" fill="rgb(244,212,8)" rx="2" ry="2" />
<text  x="894.26" y="399.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::abstract_write_response_handler&gt;::operator=&lt;service::write_response_handler, void&gt; (1 samples, 0.02%)</title><rect x="1131.1" y="293" width="0.2" height="15.0" fill="rgb(237,191,43)" rx="2" ry="2" />
<text  x="1134.10" y="303.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::emplace_back&lt;mutation_reader_merger::reader_and_fragment&gt; (1 samples, 0.02%)</title><rect x="295.8" y="373" width="0.2" height="15.0" fill="rgb(222,140,0)" rx="2" ry="2" />
<text  x="298.80" y="383.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextToken (45 samples, 0.85%)</title><rect x="25.2" y="405" width="10.0" height="15.0" fill="rgb(211,52,48)" rx="2" ry="2" />
<text  x="28.17" y="415.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::has_available_units (1 samples, 0.02%)</title><rect x="201.2" y="277" width="0.2" height="15.0" fill="rgb(220,139,19)" rx="2" ry="2" />
<text  x="204.20" y="287.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;cql3::attributes::raw&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="60.0" y="357" width="0.2" height="15.0" fill="rgb(220,190,14)" rx="2" ry="2" />
<text  x="62.98" y="367.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="432.3" y="325" width="0.3" height="15.0" fill="rgb(253,31,13)" rx="2" ry="2" />
<text  x="435.34" y="335.5" ></text>
</g>
<g >
<title>std::operator+ (3 samples, 0.06%)</title><rect x="40.1" y="261" width="0.7" height="15.0" fill="rgb(219,149,9)" rx="2" ry="2" />
<text  x="43.12" y="271.5" ></text>
</g>
<g >
<title>schema_registry::get_or_load (1 samples, 0.02%)</title><rect x="105.7" y="501" width="0.2" height="15.0" fill="rgb(243,129,50)" rx="2" ry="2" />
<text  x="108.71" y="511.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (5 samples, 0.09%)</title><rect x="267.7" y="325" width="1.1" height="15.0" fill="rgb(222,92,35)" rx="2" ry="2" />
<text  x="270.69" y="335.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (3 samples, 0.06%)</title><rect x="557.5" y="373" width="0.7" height="15.0" fill="rgb(225,193,54)" rx="2" ry="2" />
<text  x="560.50" y="383.5" ></text>
</g>
<g >
<title>sstables::sstable_writer::consume_end_of_partition (1 samples, 0.02%)</title><rect x="82.1" y="517" width="0.2" height="15.0" fill="rgb(211,226,14)" rx="2" ry="2" />
<text  x="85.06" y="527.5" ></text>
</g>
<g >
<title>database::find_schema (2 samples, 0.04%)</title><rect x="74.5" y="517" width="0.4" height="15.0" fill="rgb(245,116,7)" rx="2" ry="2" />
<text  x="77.48" y="527.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.06%)</title><rect x="1148.5" y="517" width="0.7" height="15.0" fill="rgb(234,221,27)" rx="2" ry="2" />
<text  x="1151.50" y="527.5" ></text>
</g>
<g >
<title>utils::tuple_hash::operator (13 samples, 0.25%)</title><rect x="735.1" y="405" width="2.9" height="15.0" fill="rgb(237,79,50)" rx="2" ry="2" />
<text  x="738.09" y="415.5" ></text>
</g>
<g >
<title>db::schema_tables::add_table_or_view_to_schema_mutation (1 samples, 0.02%)</title><rect x="677.1" y="357" width="0.2" height="15.0" fill="rgb(216,217,4)" rx="2" ry="2" />
<text  x="680.08" y="367.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="44.6" y="373" width="0.2" height="15.0" fill="rgb(241,65,37)" rx="2" ry="2" />
<text  x="47.58" y="383.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_slice_or_needs_filtering (2 samples, 0.04%)</title><rect x="931.4" y="469" width="0.5" height="15.0" fill="rgb(232,213,39)" rx="2" ry="2" />
<text  x="934.42" y="479.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_M_reset (1 samples, 0.02%)</title><rect x="1090.7" y="469" width="0.2" height="15.0" fill="rgb(207,42,21)" rx="2" ry="2" />
<text  x="1093.72" y="479.5" ></text>
</g>
<g >
<title>cql3::statements::raw::update_statement::~update_statement (2 samples, 0.04%)</title><rect x="75.1" y="565" width="0.5" height="15.0" fill="rgb(216,3,6)" rx="2" ry="2" />
<text  x="78.15" y="575.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (2 samples, 0.04%)</title><rect x="870.7" y="517" width="0.5" height="15.0" fill="rgb(214,54,44)" rx="2" ry="2" />
<text  x="873.74" y="527.5" ></text>
</g>
<g >
<title>std::_Optional_base_impl&lt;mutation_querier, std::_Optional_base&lt;mutation_querier, false, false&gt; &gt;::_M_construct&lt;mutation_querier&gt; (1 samples, 0.02%)</title><rect x="350.9" y="277" width="0.2" height="15.0" fill="rgb(210,77,36)" rx="2" ry="2" />
<text  x="353.90" y="287.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (1 samples, 0.02%)</title><rect x="664.4" y="565" width="0.2" height="15.0" fill="rgb(218,186,29)" rx="2" ry="2" />
<text  x="667.37" y="575.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="1149.8" y="549" width="0.3" height="15.0" fill="rgb(247,5,21)" rx="2" ry="2" />
<text  x="1152.84" y="559.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::modification_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::operator (1 samples, 0.02%)</title><rect x="19.6" y="517" width="0.2" height="15.0" fill="rgb(215,58,1)" rx="2" ry="2" />
<text  x="22.59" y="527.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, cql3::statements::drop_aggregate_statement*, false&gt;::_M_head (1 samples, 0.02%)</title><rect x="61.3" y="405" width="0.2" height="15.0" fill="rgb(239,116,13)" rx="2" ry="2" />
<text  x="64.31" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (1 samples, 0.02%)</title><rect x="658.1" y="581" width="0.2" height="15.0" fill="rgb(249,80,8)" rx="2" ry="2" />
<text  x="661.12" y="591.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (41 samples, 0.78%)</title><rect x="1117.0" y="517" width="9.2" height="15.0" fill="rgb(246,48,49)" rx="2" ry="2" />
<text  x="1120.04" y="527.5" ></text>
</g>
<g >
<title>partition_key::legacy_tri_compare (29 samples, 0.55%)</title><rect x="483.0" y="357" width="6.5" height="15.0" fill="rgb(209,20,29)" rx="2" ry="2" />
<text  x="485.98" y="367.5" ></text>
</g>
<g >
<title>service::storage_proxy::hint_to_dead_endpoints (1 samples, 0.02%)</title><rect x="1126.9" y="357" width="0.2" height="15.0" fill="rgb(237,126,50)" rx="2" ry="2" />
<text  x="1129.86" y="367.5" ></text>
</g>
<g >
<title>db::schema_tables::merge_tables_and_views (1 samples, 0.02%)</title><rect x="105.7" y="581" width="0.2" height="15.0" fill="rgb(232,108,40)" rx="2" ry="2" />
<text  x="108.71" y="591.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::move_it (4 samples, 0.08%)</title><rect x="750.5" y="501" width="0.9" height="15.0" fill="rgb(209,124,48)" rx="2" ry="2" />
<text  x="753.48" y="511.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (2 samples, 0.04%)</title><rect x="93.7" y="581" width="0.4" height="15.0" fill="rgb(218,6,40)" rx="2" ry="2" />
<text  x="96.66" y="591.5" ></text>
</g>
<g >
<title>ser::set_size&lt;bytes_ostream, partition_key&gt; (1 samples, 0.02%)</title><rect x="1130.2" y="245" width="0.2" height="15.0" fill="rgb(246,126,48)" rx="2" ry="2" />
<text  x="1133.21" y="255.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::populate_slot (1 samples, 0.02%)</title><rect x="858.0" y="357" width="0.2" height="15.0" fill="rgb(211,194,20)" rx="2" ry="2" />
<text  x="861.02" y="367.5" ></text>
</g>
<g >
<title>read_simple&lt;long, managed_bytes_basic_view&lt; (4 samples, 0.08%)</title><rect x="412.7" y="245" width="0.9" height="15.0" fill="rgb(248,87,43)" rx="2" ry="2" />
<text  x="415.70" y="255.5" ></text>
</g>
<g >
<title>mutation_reader_merger::maybe_add_readers_at_partition_boundary (5 samples, 0.09%)</title><rect x="178.0" y="389" width="1.1" height="15.0" fill="rgb(228,1,49)" rx="2" ry="2" />
<text  x="181.00" y="399.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::tombstone_for_row (1 samples, 0.02%)</title><rect x="402.2" y="309" width="0.2" height="15.0" fill="rgb(237,16,19)" rx="2" ry="2" />
<text  x="405.22" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_need_rehash (3 samples, 0.06%)</title><rect x="1153.0" y="549" width="0.6" height="15.0" fill="rgb(219,99,16)" rx="2" ry="2" />
<text  x="1155.96" y="559.5" ></text>
</g>
<g >
<title>nonwrapping_interval&lt;dht::ring_position&gt;::make_singular (8 samples, 0.15%)</title><rect x="911.6" y="485" width="1.8" height="15.0" fill="rgb(228,154,9)" rx="2" ry="2" />
<text  x="914.57" y="495.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (6 samples, 0.11%)</title><rect x="618.9" y="581" width="1.3" height="15.0" fill="rgb(206,66,31)" rx="2" ry="2" />
<text  x="621.85" y="591.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_state&lt;std::tuple&lt;auth::role_or_anonymous&gt;, seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (2 samples, 0.04%)</title><rect x="773.9" y="373" width="0.5" height="15.0" fill="rgb(246,60,47)" rx="2" ry="2" />
<text  x="776.91" y="383.5" ></text>
</g>
<g >
<title>seastar::reactor::task_queue::register_stats (1 samples, 0.02%)</title><rect x="107.9" y="485" width="0.3" height="15.0" fill="rgb(249,89,21)" rx="2" ry="2" />
<text  x="110.94" y="495.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (1 samples, 0.02%)</title><rect x="748.3" y="405" width="0.2" height="15.0" fill="rgb(231,73,12)" rx="2" ry="2" />
<text  x="751.25" y="415.5" ></text>
</g>
<g >
<title>seastar::do_until&lt;flush_reader::fill_buffer (8 samples, 0.15%)</title><rect x="79.4" y="517" width="1.8" height="15.0" fill="rgb(243,213,16)" rx="2" ry="2" />
<text  x="82.39" y="527.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::operator== (1 samples, 0.02%)</title><rect x="46.1" y="389" width="0.3" height="15.0" fill="rgb(239,27,42)" rx="2" ry="2" />
<text  x="49.14" y="399.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::execute (2 samples, 0.04%)</title><rect x="85.9" y="613" width="0.4" height="15.0" fill="rgb(247,142,48)" rx="2" ry="2" />
<text  x="88.86" y="623.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="517.3" y="357" width="0.3" height="15.0" fill="rgb(242,111,53)" rx="2" ry="2" />
<text  x="520.34" y="367.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="211.0" y="309" width="0.2" height="15.0" fill="rgb(219,169,12)" rx="2" ry="2" />
<text  x="214.02" y="319.5" ></text>
</g>
<g >
<title>service::abstract_write_response_handler::~abstract_write_response_handler (1 samples, 0.02%)</title><rect x="678.2" y="565" width="0.2" height="15.0" fill="rgb(205,136,53)" rx="2" ry="2" />
<text  x="681.20" y="575.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;query::result&gt;::dispose (8 samples, 0.15%)</title><rect x="97.9" y="549" width="1.8" height="15.0" fill="rgb(247,184,33)" rx="2" ry="2" />
<text  x="100.90" y="559.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (1 samples, 0.02%)</title><rect x="663.9" y="565" width="0.2" height="15.0" fill="rgb(249,115,1)" rx="2" ry="2" />
<text  x="666.92" y="575.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (3 samples, 0.06%)</title><rect x="52.4" y="309" width="0.7" height="15.0" fill="rgb(242,205,28)" rx="2" ry="2" />
<text  x="55.39" y="319.5" ></text>
</g>
<g >
<title>cql3::query_options::query_options (20 samples, 0.38%)</title><rect x="838.4" y="517" width="4.4" height="15.0" fill="rgb(236,157,54)" rx="2" ry="2" />
<text  x="841.39" y="527.5" ></text>
</g>
<g >
<title>service::storage_service::replicate_to_all_cores (1 samples, 0.02%)</title><rect x="17.4" y="533" width="0.2" height="15.0" fill="rgb(252,88,14)" rx="2" ry="2" />
<text  x="20.36" y="543.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;managed_bytes&gt;::make&lt;managed_bytes&gt; (1 samples, 0.02%)</title><rect x="892.4" y="421" width="0.2" height="15.0" fill="rgb(252,18,22)" rx="2" ry="2" />
<text  x="895.38" y="431.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned char, std::pair&lt;unsigned char const, std::optional&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned char const, std::optional&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned char&gt;, std::hash&lt;unsigned char&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::~_Hashtable (1 samples, 0.02%)</title><rect x="854.0" y="437" width="0.2" height="15.0" fill="rgb(215,10,31)" rx="2" ry="2" />
<text  x="857.00" y="447.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::clone&lt;row::row (1 samples, 0.02%)</title><rect x="80.5" y="293" width="0.2" height="15.0" fill="rgb(234,207,3)" rx="2" ry="2" />
<text  x="83.50" y="303.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (4 samples, 0.08%)</title><rect x="919.6" y="501" width="0.9" height="15.0" fill="rgb(237,18,52)" rx="2" ry="2" />
<text  x="922.60" y="511.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (7 samples, 0.13%)</title><rect x="487.0" y="293" width="1.6" height="15.0" fill="rgb(225,88,6)" rx="2" ry="2" />
<text  x="490.00" y="303.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (1 samples, 0.02%)</title><rect x="134.0" y="485" width="0.3" height="15.0" fill="rgb(232,192,47)" rx="2" ry="2" />
<text  x="137.05" y="495.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.02%)</title><rect x="484.3" y="309" width="0.2" height="15.0" fill="rgb(240,179,9)" rx="2" ry="2" />
<text  x="487.32" y="319.5" ></text>
</g>
<g >
<title>partition_version_ref::operator (1 samples, 0.02%)</title><rect x="265.0" y="213" width="0.2" height="15.0" fill="rgb(218,13,50)" rx="2" ry="2" />
<text  x="268.01" y="223.5" ></text>
</g>
<g >
<title>seastar::reactor::service_highres_timer (2 samples, 0.04%)</title><rect x="1167.2" y="549" width="0.5" height="15.0" fill="rgb(239,182,54)" rx="2" ry="2" />
<text  x="1170.24" y="559.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (4 samples, 0.08%)</title><rect x="595.6" y="501" width="0.9" height="15.0" fill="rgb(242,19,2)" rx="2" ry="2" />
<text  x="598.65" y="511.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_partition_key_ranges (250 samples, 4.73%)</title><rect x="872.7" y="517" width="55.8" height="15.0" fill="rgb(230,132,53)" rx="2" ry="2" />
<text  x="875.75" y="527.5" >cql3:..</text>
</g>
<g >
<title>lister::lister (1 samples, 0.02%)</title><rect x="677.8" y="533" width="0.2" height="15.0" fill="rgb(206,9,43)" rx="2" ry="2" />
<text  x="680.75" y="543.5" ></text>
</g>
<g >
<title>std::__equal&lt;true&gt;::equal&lt;char&gt; (5 samples, 0.09%)</title><rect x="785.1" y="213" width="1.1" height="15.0" fill="rgb(230,10,23)" rx="2" ry="2" />
<text  x="788.07" y="223.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (29 samples, 0.55%)</title><rect x="853.1" y="565" width="6.5" height="15.0" fill="rgb(238,166,43)" rx="2" ry="2" />
<text  x="856.11" y="575.5" ></text>
</g>
<g >
<title>__strlen_avx2 (13 samples, 0.25%)</title><rect x="997.5" y="341" width="2.9" height="15.0" fill="rgb(242,150,25)" rx="2" ry="2" />
<text  x="1000.46" y="351.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (8 samples, 0.15%)</title><rect x="779.3" y="293" width="1.7" height="15.0" fill="rgb(251,214,43)" rx="2" ry="2" />
<text  x="782.26" y="303.5" ></text>
</g>
<g >
<title>schema_registry::get_or_load (1 samples, 0.02%)</title><rect x="106.6" y="501" width="0.2" height="15.0" fill="rgb(224,110,18)" rx="2" ry="2" />
<text  x="109.60" y="511.5" ></text>
</g>
<g >
<title>database::find_uuid (22 samples, 0.42%)</title><rect x="808.5" y="453" width="4.9" height="15.0" fill="rgb(207,13,7)" rx="2" ry="2" />
<text  x="811.49" y="463.5" ></text>
</g>
<g >
<title>seastar::execution_stage::flush (1 samples, 0.02%)</title><rect x="19.6" y="501" width="0.2" height="15.0" fill="rgb(246,9,21)" rx="2" ry="2" />
<text  x="22.59" y="511.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::signal (1 samples, 0.02%)</title><rect x="419.6" y="325" width="0.2" height="15.0" fill="rgb(232,10,15)" rx="2" ry="2" />
<text  x="422.62" y="335.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.02%)</title><rect x="10.9" y="677" width="0.2" height="15.0" fill="rgb(237,121,13)" rx="2" ry="2" />
<text  x="13.89" y="687.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (1 samples, 0.02%)</title><rect x="96.8" y="565" width="0.2" height="15.0" fill="rgb(226,113,15)" rx="2" ry="2" />
<text  x="99.79" y="575.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.02%)</title><rect x="37.0" y="389" width="0.2" height="15.0" fill="rgb(209,144,33)" rx="2" ry="2" />
<text  x="40.00" y="399.5" ></text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt;&amp;&gt; (1 samples, 0.02%)</title><rect x="813.6" y="421" width="0.2" height="15.0" fill="rgb(242,178,51)" rx="2" ry="2" />
<text  x="816.62" y="431.5" ></text>
</g>
<g >
<title>service::storage_service::prepare_to_join (1 samples, 0.02%)</title><rect x="17.1" y="565" width="0.3" height="15.0" fill="rgb(248,28,49)" rx="2" ry="2" />
<text  x="20.14" y="575.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (1 samples, 0.02%)</title><rect x="747.8" y="389" width="0.2" height="15.0" fill="rgb(213,164,9)" rx="2" ry="2" />
<text  x="750.81" y="399.5" ></text>
</g>
<g >
<title>seastar::reactor::fstat (1 samples, 0.02%)</title><rect x="663.5" y="565" width="0.2" height="15.0" fill="rgb(239,192,33)" rx="2" ry="2" />
<text  x="666.47" y="575.5" ></text>
</g>
<g >
<title>seastar::memory::allocate_aligned (1 samples, 0.02%)</title><rect x="858.0" y="293" width="0.2" height="15.0" fill="rgb(242,208,19)" rx="2" ry="2" />
<text  x="861.02" y="303.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.08%)</title><rect x="491.5" y="389" width="0.9" height="15.0" fill="rgb(216,143,29)" rx="2" ry="2" />
<text  x="494.46" y="399.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;service::storage_proxy_coordinator_query_result&gt;, seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::finally_body&lt;service::storage_proxy::do_query (55 samples, 1.04%)</title><rect x="663.7" y="597" width="12.3" height="15.0" fill="rgb(246,108,14)" rx="2" ry="2" />
<text  x="666.70" y="607.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (1 samples, 0.02%)</title><rect x="95.4" y="581" width="0.3" height="15.0" fill="rgb(241,6,4)" rx="2" ry="2" />
<text  x="98.45" y="591.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::local (1 samples, 0.02%)</title><rect x="821.0" y="533" width="0.2" height="15.0" fill="rgb(244,34,16)" rx="2" ry="2" />
<text  x="823.99" y="543.5" ></text>
</g>
<g >
<title>posix_memalign (4 samples, 0.08%)</title><rect x="241.6" y="181" width="0.9" height="15.0" fill="rgb(222,85,0)" rx="2" ry="2" />
<text  x="244.58" y="191.5" ></text>
</g>
<g >
<title>seastar::repeat&lt;flat_mutation_reader::impl::consume_pausable&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (4 samples, 0.08%)</title><rect x="676.2" y="469" width="0.9" height="15.0" fill="rgb(217,170,33)" rx="2" ry="2" />
<text  x="679.19" y="479.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="75.4" y="517" width="0.2" height="15.0" fill="rgb(226,188,17)" rx="2" ry="2" />
<text  x="78.37" y="527.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (538 samples, 10.17%)</title><rect x="321.7" y="485" width="120.0" height="15.0" fill="rgb(206,30,54)" rx="2" ry="2" />
<text  x="324.68" y="495.5" >query::consume..</text>
</g>
<g >
<title>seastar::future_state&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::move_it (1 samples, 0.02%)</title><rect x="692.5" y="565" width="0.2" height="15.0" fill="rgb(245,40,4)" rx="2" ry="2" />
<text  x="695.48" y="575.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.04%)</title><rect x="660.8" y="549" width="0.4" height="15.0" fill="rgb(219,41,5)" rx="2" ry="2" />
<text  x="663.80" y="559.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (3 samples, 0.06%)</title><rect x="647.6" y="581" width="0.7" height="15.0" fill="rgb(233,186,15)" rx="2" ry="2" />
<text  x="650.63" y="591.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::value_ptr&gt; &gt;::invoke&lt;utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (9 samples, 0.17%)</title><rect x="729.3" y="453" width="2.0" height="15.0" fill="rgb(249,132,19)" rx="2" ry="2" />
<text  x="732.29" y="463.5" ></text>
</g>
<g >
<title>write_fragmented&lt;managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="1120.6" y="277" width="0.2" height="15.0" fill="rgb(240,147,43)" rx="2" ry="2" />
<text  x="1123.61" y="287.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_locally (7 samples, 0.13%)</title><rect x="1127.5" y="293" width="1.6" height="15.0" fill="rgb(250,116,51)" rx="2" ry="2" />
<text  x="1130.53" y="303.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (1 samples, 0.02%)</title><rect x="806.5" y="453" width="0.2" height="15.0" fill="rgb(231,211,32)" rx="2" ry="2" />
<text  x="809.48" y="463.5" ></text>
</g>
<g >
<title>seastar::do_until&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (1 samples, 0.02%)</title><rect x="852.4" y="517" width="0.3" height="15.0" fill="rgb(232,43,26)" rx="2" ry="2" />
<text  x="855.44" y="527.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (2 samples, 0.04%)</title><rect x="39.7" y="373" width="0.4" height="15.0" fill="rgb(233,11,2)" rx="2" ry="2" />
<text  x="42.67" y="383.5" ></text>
</g>
<g >
<title>multishard_combining_reader::fill_buffer (1 samples, 0.02%)</title><rect x="105.9" y="357" width="0.3" height="15.0" fill="rgb(246,14,34)" rx="2" ry="2" />
<text  x="108.93" y="367.5" ></text>
</g>
<g >
<title>utils::config_file::named_value&lt;unsigned long&gt;::the_value (8 samples, 0.15%)</title><rect x="1109.5" y="485" width="1.7" height="15.0" fill="rgb(220,130,8)" rx="2" ry="2" />
<text  x="1112.46" y="495.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (1 samples, 0.02%)</title><rect x="107.5" y="437" width="0.2" height="15.0" fill="rgb(207,153,2)" rx="2" ry="2" />
<text  x="110.50" y="447.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (3 samples, 0.06%)</title><rect x="760.3" y="453" width="0.7" height="15.0" fill="rgb(215,75,35)" rx="2" ry="2" />
<text  x="763.30" y="463.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (4 samples, 0.08%)</title><rect x="43.2" y="357" width="0.9" height="15.0" fill="rgb(208,118,46)" rx="2" ry="2" />
<text  x="46.24" y="367.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.02%)</title><rect x="40.8" y="293" width="0.2" height="15.0" fill="rgb(237,123,39)" rx="2" ry="2" />
<text  x="43.79" y="303.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::emplace_back&lt;gms::inet_address const&amp;&gt; (4 samples, 0.08%)</title><rect x="701.8" y="549" width="0.9" height="15.0" fill="rgb(240,107,20)" rx="2" ry="2" />
<text  x="704.85" y="559.5" ></text>
</g>
<g >
<title>reader_permit::consume_memory (4 samples, 0.08%)</title><rect x="509.5" y="293" width="0.9" height="15.0" fill="rgb(234,225,44)" rx="2" ry="2" />
<text  x="512.53" y="303.5" ></text>
</g>
<g >
<title>schema::partition_key_size (2 samples, 0.04%)</title><rect x="1100.8" y="517" width="0.4" height="15.0" fill="rgb(227,94,16)" rx="2" ry="2" />
<text  x="1103.76" y="527.5" ></text>
</g>
<g >
<title>mutation_fragment::consume&lt;flat_mutation_reader::impl::consumer_adapter&lt;sstables::sstable_writer&gt; &gt; (1 samples, 0.02%)</title><rect x="10.9" y="565" width="0.2" height="15.0" fill="rgb(234,175,0)" rx="2" ry="2" />
<text  x="13.89" y="575.5" ></text>
</g>
<g >
<title>__vsnprintf_internal (1 samples, 0.02%)</title><rect x="78.7" y="709" width="0.2" height="15.0" fill="rgb(227,210,3)" rx="2" ry="2" />
<text  x="81.72" y="719.5" ></text>
</g>
<g >
<title>mutation_reader_merger::maybe_add_readers (22 samples, 0.42%)</title><rect x="456.2" y="389" width="4.9" height="15.0" fill="rgb(244,96,30)" rx="2" ry="2" />
<text  x="459.21" y="399.5" ></text>
</g>
<g >
<title>double_decker&lt;long, memtable_entry, dht::raw_token_less_comparator, dht::ring_position_comparator, 16,  (81 samples, 1.53%)</title><rect x="471.4" y="421" width="18.1" height="15.0" fill="rgb(241,136,0)" rx="2" ry="2" />
<text  x="474.38" y="431.5" ></text>
</g>
<g >
<title>bplus::searcher&lt;dht::decorated_key, long, dht::raw_token_less_comparator, 16ul,  (1 samples, 0.02%)</title><rect x="1119.3" y="261" width="0.2" height="15.0" fill="rgb(237,48,40)" rx="2" ry="2" />
<text  x="1122.28" y="271.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::cql_statement&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="74.3" y="549" width="0.2" height="15.0" fill="rgb(227,28,19)" rx="2" ry="2" />
<text  x="77.25" y="559.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_destroy_data (1 samples, 0.02%)</title><rect x="610.8" y="485" width="0.2" height="15.0" fill="rgb(215,36,35)" rx="2" ry="2" />
<text  x="613.82" y="495.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::emplace_mutation_fragment (3 samples, 0.06%)</title><rect x="199.2" y="341" width="0.7" height="15.0" fill="rgb(240,178,13)" rx="2" ry="2" />
<text  x="202.19" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::splice (1 samples, 0.02%)</title><rect x="193.2" y="357" width="0.2" height="15.0" fill="rgb(210,98,26)" rx="2" ry="2" />
<text  x="196.17" y="367.5" ></text>
</g>
<g >
<title>rows_entry::tri_compare::operator (1 samples, 0.02%)</title><rect x="105.5" y="469" width="0.2" height="15.0" fill="rgb(244,227,33)" rx="2" ry="2" />
<text  x="108.49" y="479.5" ></text>
</g>
<g >
<title>compound_wrapper&lt;partition_key, partition_key_view&gt;::make_empty (6 samples, 0.11%)</title><rect x="542.8" y="485" width="1.3" height="15.0" fill="rgb(247,127,25)" rx="2" ry="2" />
<text  x="545.77" y="495.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_M_reset (2 samples, 0.04%)</title><rect x="100.4" y="533" width="0.4" height="15.0" fill="rgb(225,82,47)" rx="2" ry="2" />
<text  x="103.36" y="543.5" ></text>
</g>
<g >
<title>fmt::v7::detail::buffer&lt;char&gt;::push_back (2 samples, 0.04%)</title><rect x="17.8" y="581" width="0.5" height="15.0" fill="rgb(241,214,0)" rx="2" ry="2" />
<text  x="20.81" y="591.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (1 samples, 0.02%)</title><rect x="55.5" y="373" width="0.2" height="15.0" fill="rgb(218,191,17)" rx="2" ry="2" />
<text  x="58.51" y="383.5" ></text>
</g>
<g >
<title>do_query&lt;(anonymous namespace)::mutation_query_result_builder&gt; (1 samples, 0.02%)</title><rect x="105.9" y="421" width="0.3" height="15.0" fill="rgb(227,70,24)" rx="2" ry="2" />
<text  x="108.93" y="431.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.02%)</title><rect x="17.4" y="613" width="0.2" height="15.0" fill="rgb(254,63,38)" rx="2" ry="2" />
<text  x="20.36" y="623.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (1 samples, 0.02%)</title><rect x="719.0" y="485" width="0.2" height="15.0" fill="rgb(228,216,7)" rx="2" ry="2" />
<text  x="722.03" y="495.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.04%)</title><rect x="691.1" y="581" width="0.5" height="15.0" fill="rgb(234,202,50)" rx="2" ry="2" />
<text  x="694.14" y="591.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.04%)</title><rect x="41.2" y="373" width="0.5" height="15.0" fill="rgb(220,177,49)" rx="2" ry="2" />
<text  x="44.23" y="383.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reserve&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::fill_buffer (5 samples, 0.09%)</title><rect x="80.1" y="437" width="1.1" height="15.0" fill="rgb(223,165,45)" rx="2" ry="2" />
<text  x="83.05" y="447.5" ></text>
</g>
<g >
<title>absl::hash_internal::AbslHashValue&lt;absl::hash_internal::HashState&gt; (2 samples, 0.04%)</title><rect x="1043.4" y="373" width="0.5" height="15.0" fill="rgb(227,71,27)" rx="2" ry="2" />
<text  x="1046.42" y="383.5" ></text>
</g>
<g >
<title>cql3::statements::raw::update_statement::update_statement (1 samples, 0.02%)</title><rect x="59.5" y="437" width="0.3" height="15.0" fill="rgb(223,228,34)" rx="2" ry="2" />
<text  x="62.53" y="447.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (1 samples, 0.02%)</title><rect x="539.7" y="501" width="0.2" height="15.0" fill="rgb(217,56,32)" rx="2" ry="2" />
<text  x="542.65" y="511.5" ></text>
</g>
<g >
<title>row::append_cell (1 samples, 0.02%)</title><rect x="106.4" y="533" width="0.2" height="15.0" fill="rgb(224,184,37)" rx="2" ry="2" />
<text  x="109.38" y="543.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::~_Variant_storage (1 samples, 0.02%)</title><rect x="888.6" y="421" width="0.2" height="15.0" fill="rgb(211,198,43)" rx="2" ry="2" />
<text  x="891.59" y="431.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (4 samples, 0.08%)</title><rect x="43.2" y="341" width="0.9" height="15.0" fill="rgb(233,57,46)" rx="2" ry="2" />
<text  x="46.24" y="351.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (359 samples, 6.79%)</title><rect x="338.6" y="341" width="80.1" height="15.0" fill="rgb(244,173,47)" rx="2" ry="2" />
<text  x="341.63" y="351.5" >flat_muta..</text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (3 samples, 0.06%)</title><rect x="40.1" y="309" width="0.7" height="15.0" fill="rgb(218,223,2)" rx="2" ry="2" />
<text  x="43.12" y="319.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.02%)</title><rect x="704.5" y="373" width="0.2" height="15.0" fill="rgb(242,176,53)" rx="2" ry="2" />
<text  x="707.52" y="383.5" ></text>
</g>
<g >
<title>cql3::expr::(anonymous namespace)::explode_conjunction (1 samples, 0.02%)</title><rect x="70.5" y="389" width="0.2" height="15.0" fill="rgb(224,159,4)" rx="2" ry="2" />
<text  x="73.46" y="399.5" ></text>
</g>
<g >
<title>std::push_heap&lt;mutation_reader_merger::reader_and_fragment*, mutation_reader_merger::reader_heap_compare&gt; (2 samples, 0.04%)</title><rect x="193.4" y="357" width="0.4" height="15.0" fill="rgb(223,116,50)" rx="2" ry="2" />
<text  x="196.39" y="367.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::on_new_range (1 samples, 0.02%)</title><rect x="80.9" y="421" width="0.3" height="15.0" fill="rgb(252,132,3)" rx="2" ry="2" />
<text  x="83.95" y="431.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_get_Tp_allocator (1 samples, 0.02%)</title><rect x="24.5" y="277" width="0.2" height="15.0" fill="rgb(242,160,53)" rx="2" ry="2" />
<text  x="27.50" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="521.6" y="421" width="0.2" height="15.0" fill="rgb(238,192,42)" rx="2" ry="2" />
<text  x="524.58" y="431.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (1 samples, 0.02%)</title><rect x="104.8" y="581" width="0.2" height="15.0" fill="rgb(207,82,7)" rx="2" ry="2" />
<text  x="107.82" y="591.5" ></text>
</g>
<g >
<title>empty_flat_reader::close (1 samples, 0.02%)</title><rect x="553.5" y="437" width="0.2" height="15.0" fill="rgb(210,196,19)" rx="2" ry="2" />
<text  x="556.48" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="70.2" y="373" width="0.3" height="15.0" fill="rgb(245,175,53)" rx="2" ry="2" />
<text  x="73.24" y="383.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;void&gt;::set_value&lt;&gt; (1 samples, 0.02%)</title><rect x="94.1" y="581" width="0.2" height="15.0" fill="rgb(228,43,39)" rx="2" ry="2" />
<text  x="97.11" y="591.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (3 samples, 0.06%)</title><rect x="417.2" y="325" width="0.6" height="15.0" fill="rgb(244,128,19)" rx="2" ry="2" />
<text  x="420.17" y="335.5" ></text>
</g>
<g >
<title>memtable::make_flat_reader (240 samples, 4.54%)</title><rect x="468.3" y="437" width="53.5" height="15.0" fill="rgb(247,122,41)" rx="2" ry="2" />
<text  x="471.26" y="447.5" >memta..</text>
</g>
<g >
<title>logalloc::allocating_section::guard::~guard (1 samples, 0.02%)</title><rect x="529.6" y="405" width="0.2" height="15.0" fill="rgb(217,164,47)" rx="2" ry="2" />
<text  x="532.61" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.02%)</title><rect x="877.4" y="373" width="0.3" height="15.0" fill="rgb(219,166,12)" rx="2" ry="2" />
<text  x="880.43" y="383.5" ></text>
</g>
<g >
<title>db::schema_tables::add_table_params_to_mutations (1 samples, 0.02%)</title><rect x="107.1" y="517" width="0.2" height="15.0" fill="rgb(234,48,4)" rx="2" ry="2" />
<text  x="110.05" y="527.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::reset_state (60 samples, 1.13%)</title><rect x="271.0" y="341" width="13.4" height="15.0" fill="rgb(208,22,20)" rx="2" ry="2" />
<text  x="274.03" y="351.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (2 samples, 0.04%)</title><rect x="37.2" y="293" width="0.5" height="15.0" fill="rgb(252,106,38)" rx="2" ry="2" />
<text  x="40.22" y="303.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_deallocate_map (1 samples, 0.02%)</title><rect x="24.5" y="309" width="0.2" height="15.0" fill="rgb(211,80,4)" rx="2" ry="2" />
<text  x="27.50" y="319.5" ></text>
</g>
<g >
<title>db::schema_tables::make_schema_mutations (2 samples, 0.04%)</title><rect x="106.8" y="533" width="0.5" height="15.0" fill="rgb(227,101,6)" rx="2" ry="2" />
<text  x="109.83" y="543.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::entry::entry (13 samples, 0.25%)</title><rect x="1008.6" y="261" width="2.9" height="15.0" fill="rgb(247,4,21)" rx="2" ry="2" />
<text  x="1011.62" y="271.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector (3 samples, 0.06%)</title><rect x="1054.8" y="389" width="0.7" height="15.0" fill="rgb(240,35,23)" rx="2" ry="2" />
<text  x="1057.80" y="399.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::leaf_node::free (1 samples, 0.02%)</title><rect x="82.3" y="485" width="0.2" height="15.0" fill="rgb(247,149,39)" rx="2" ry="2" />
<text  x="85.29" y="495.5" ></text>
</g>
<g >
<title>std::construct_at&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::entry&gt; (6 samples, 0.11%)</title><rect x="133.8" y="501" width="1.4" height="15.0" fill="rgb(217,16,32)" rx="2" ry="2" />
<text  x="136.82" y="511.5" ></text>
</g>
<g >
<title>mutation_partition::lower_bound (2 samples, 0.04%)</title><rect x="258.8" y="229" width="0.4" height="15.0" fill="rgb(233,39,18)" rx="2" ry="2" />
<text  x="261.76" y="239.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::guard (1 samples, 0.02%)</title><rect x="1117.7" y="341" width="0.2" height="15.0" fill="rgb(215,21,4)" rx="2" ry="2" />
<text  x="1120.71" y="351.5" ></text>
</g>
<g >
<title>absl::hash_internal::AbslHashValue&lt;absl::hash_internal::HashState&gt; (7 samples, 0.13%)</title><rect x="828.3" y="453" width="1.6" height="15.0" fill="rgb(238,210,4)" rx="2" ry="2" />
<text  x="831.35" y="463.5" ></text>
</g>
<g >
<title>range_tombstone_list::~range_tombstone_list (1 samples, 0.02%)</title><rect x="566.0" y="389" width="0.2" height="15.0" fill="rgb(244,60,50)" rx="2" ry="2" />
<text  x="568.98" y="399.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (5 samples, 0.09%)</title><rect x="1024.5" y="341" width="1.1" height="15.0" fill="rgb(249,129,44)" rx="2" ry="2" />
<text  x="1027.46" y="351.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;4ul, cql3::expr::untyped_constant&gt; (2 samples, 0.04%)</title><rect x="51.5" y="101" width="0.4" height="15.0" fill="rgb(254,155,17)" rx="2" ry="2" />
<text  x="54.50" y="111.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;std::optional&lt;auth::resource&gt; &gt;, seastar::future&lt;bool&gt; &gt;, std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;std::optional&lt;auth::resource&gt; &gt;, seastar::future&lt;bool&gt; &gt; &gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="77.4" y="485" width="0.2" height="15.0" fill="rgb(220,117,35)" rx="2" ry="2" />
<text  x="80.38" y="495.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::pop_mutation_fragment (5 samples, 0.09%)</title><rect x="184.5" y="341" width="1.1" height="15.0" fill="rgb(219,58,54)" rx="2" ry="2" />
<text  x="187.47" y="351.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (1 samples, 0.02%)</title><rect x="123.8" y="517" width="0.2" height="15.0" fill="rgb(246,168,53)" rx="2" ry="2" />
<text  x="126.78" y="527.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::result_memory_accounter (2 samples, 0.04%)</title><rect x="597.2" y="517" width="0.5" height="15.0" fill="rgb(214,193,25)" rx="2" ry="2" />
<text  x="600.21" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;seastar::shared_ptr&lt;cql3::relation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::relation&gt; &gt; &gt;::emplace_back&lt;seastar::shared_ptr&lt;cql3::single_column_relation&gt; &gt; (1 samples, 0.02%)</title><rect x="59.1" y="437" width="0.2" height="15.0" fill="rgb(222,6,35)" rx="2" ry="2" />
<text  x="62.08" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::assign (1 samples, 0.02%)</title><rect x="26.7" y="309" width="0.3" height="15.0" fill="rgb(211,212,10)" rx="2" ry="2" />
<text  x="29.73" y="319.5" ></text>
</g>
<g >
<title>bound_view::from_range_start&lt;nonwrapping_interval&gt; (5 samples, 0.09%)</title><rect x="278.4" y="293" width="1.1" height="15.0" fill="rgb(219,19,41)" rx="2" ry="2" />
<text  x="281.39" y="303.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::leaf_node::allocate (11 samples, 0.21%)</title><rect x="240.0" y="213" width="2.5" height="15.0" fill="rgb(209,26,42)" rx="2" ry="2" />
<text  x="243.02" y="223.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (2 samples, 0.04%)</title><rect x="453.3" y="437" width="0.5" height="15.0" fill="rgb(207,112,9)" rx="2" ry="2" />
<text  x="456.31" y="447.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (3 samples, 0.06%)</title><rect x="52.4" y="293" width="0.7" height="15.0" fill="rgb(245,211,25)" rx="2" ry="2" />
<text  x="55.39" y="303.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (6 samples, 0.11%)</title><rect x="791.3" y="341" width="1.4" height="15.0" fill="rgb(252,162,34)" rx="2" ry="2" />
<text  x="794.31" y="351.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getText[abi:cxx11] (1 samples, 0.02%)</title><rect x="39.0" y="421" width="0.2" height="15.0" fill="rgb(233,72,25)" rx="2" ry="2" />
<text  x="42.00" y="431.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (1 samples, 0.02%)</title><rect x="1137.3" y="389" width="0.3" height="15.0" fill="rgb(222,208,2)" rx="2" ry="2" />
<text  x="1140.35" y="399.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.02%)</title><rect x="57.7" y="261" width="0.3" height="15.0" fill="rgb(218,195,29)" rx="2" ry="2" />
<text  x="60.74" y="271.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_data_requests (240 samples, 4.54%)</title><rect x="977.4" y="421" width="53.5" height="15.0" fill="rgb(213,134,14)" rx="2" ry="2" />
<text  x="980.38" y="431.5" >servi..</text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="203.7" y="277" width="0.2" height="15.0" fill="rgb(228,112,50)" rx="2" ry="2" />
<text  x="206.65" y="287.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (1 samples, 0.02%)</title><rect x="499.3" y="373" width="0.2" height="15.0" fill="rgb(207,18,6)" rx="2" ry="2" />
<text  x="502.27" y="383.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (2 samples, 0.04%)</title><rect x="738.9" y="485" width="0.4" height="15.0" fill="rgb(206,107,7)" rx="2" ry="2" />
<text  x="741.88" y="495.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_construct&lt;interval_bound&lt;dht::ring_position&gt; const&amp;&gt; (4 samples, 0.08%)</title><rect x="927.4" y="453" width="0.9" height="15.0" fill="rgb(206,47,20)" rx="2" ry="2" />
<text  x="930.41" y="463.5" ></text>
</g>
<g >
<title>mutation::data::data (1 samples, 0.02%)</title><rect x="859.1" y="405" width="0.3" height="15.0" fill="rgb(209,48,18)" rx="2" ry="2" />
<text  x="862.14" y="415.5" ></text>
</g>
<g >
<title>seastar::metrics::metric_groups::add_group (1 samples, 0.02%)</title><rect x="107.9" y="469" width="0.3" height="15.0" fill="rgb(251,211,39)" rx="2" ry="2" />
<text  x="110.94" y="479.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;partition_key, false, false&gt;::_Optional_base (1 samples, 0.02%)</title><rect x="539.9" y="485" width="0.2" height="15.0" fill="rgb(230,13,17)" rx="2" ry="2" />
<text  x="542.87" y="495.5" ></text>
</g>
<g >
<title>dht::sharder::shard_of (1 samples, 0.02%)</title><rect x="981.6" y="389" width="0.2" height="15.0" fill="rgb(222,73,8)" rx="2" ry="2" />
<text  x="984.62" y="399.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureINS_10bool_classIN22mutation_reader_merger15needs_merge_tagEEEE9then_implIZNS5_14discard_resultEvEUlDpOT_E_NS0_IvEEEET0_OT_ (1 samples, 0.02%)</title><rect x="177.1" y="389" width="0.2" height="15.0" fill="rgb(218,107,3)" rx="2" ry="2" />
<text  x="180.11" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="107.1" y="437" width="0.2" height="15.0" fill="rgb(240,146,8)" rx="2" ry="2" />
<text  x="110.05" y="447.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (30 samples, 0.57%)</title><rect x="1126.2" y="517" width="6.7" height="15.0" fill="rgb(228,99,47)" rx="2" ry="2" />
<text  x="1129.19" y="527.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, std::pair&lt;auth::role_or_anonymous, auth::resource&gt;&amp;&amp;, auth::permissions_cache::get (1 samples, 0.02%)</title><rect x="790.9" y="357" width="0.2" height="15.0" fill="rgb(205,98,13)" rx="2" ry="2" />
<text  x="793.87" y="367.5" ></text>
</g>
<g >
<title>ser::mutation_view::table_id (1 samples, 0.02%)</title><rect x="1117.3" y="357" width="0.2" height="15.0" fill="rgb(254,66,37)" rx="2" ry="2" />
<text  x="1120.27" y="367.5" ></text>
</g>
<g >
<title>utils::timed_rate_moving_average_and_histogram::mark (1 samples, 0.02%)</title><rect x="1165.7" y="565" width="0.2" height="15.0" fill="rgb(254,198,17)" rx="2" ry="2" />
<text  x="1168.68" y="575.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::~disable_abort_on_alloc_failure_temporarily (1 samples, 0.02%)</title><rect x="288.7" y="325" width="0.2" height="15.0" fill="rgb(207,220,6)" rx="2" ry="2" />
<text  x="291.66" y="335.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_Optional_payload_base (3 samples, 0.06%)</title><rect x="917.6" y="485" width="0.7" height="15.0" fill="rgb(236,146,41)" rx="2" ry="2" />
<text  x="920.59" y="495.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="58.2" y="309" width="0.2" height="15.0" fill="rgb(218,152,8)" rx="2" ry="2" />
<text  x="61.19" y="319.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;, service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (14 samples, 0.26%)</title><rect x="1129.3" y="389" width="3.1" height="15.0" fill="rgb(213,164,15)" rx="2" ry="2" />
<text  x="1132.32" y="399.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.02%)</title><rect x="446.2" y="469" width="0.2" height="15.0" fill="rgb(209,61,36)" rx="2" ry="2" />
<text  x="449.17" y="479.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, cql3::statements::drop_view_statement*, std::default_delete&lt;cql3::statements::drop_view_statement&gt; &gt; (1 samples, 0.02%)</title><rect x="61.8" y="421" width="0.2" height="15.0" fill="rgb(252,86,25)" rx="2" ry="2" />
<text  x="64.76" y="431.5" ></text>
</g>
<g >
<title>partition_version_ref::operator (1 samples, 0.02%)</title><rect x="257.4" y="229" width="0.2" height="15.0" fill="rgb(251,108,42)" rx="2" ry="2" />
<text  x="260.42" y="239.5" ></text>
</g>
<g >
<title>sstables::formatted_sstables_list::operator+= (1 samples, 0.02%)</title><rect x="1133.8" y="405" width="0.2" height="15.0" fill="rgb(206,101,33)" rx="2" ry="2" />
<text  x="1136.78" y="415.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (2 samples, 0.04%)</title><rect x="819.6" y="453" width="0.5" height="15.0" fill="rgb(244,146,52)" rx="2" ry="2" />
<text  x="822.65" y="463.5" ></text>
</g>
<g >
<title>operator delete (7 samples, 0.13%)</title><rect x="804.7" y="469" width="1.6" height="15.0" fill="rgb(205,33,28)" rx="2" ry="2" />
<text  x="807.70" y="479.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (4 samples, 0.08%)</title><rect x="1141.1" y="581" width="0.9" height="15.0" fill="rgb(230,135,17)" rx="2" ry="2" />
<text  x="1144.14" y="591.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (1 samples, 0.02%)</title><rect x="674.9" y="533" width="0.2" height="15.0" fill="rgb(232,194,33)" rx="2" ry="2" />
<text  x="677.85" y="543.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider (1 samples, 0.02%)</title><rect x="24.1" y="261" width="0.2" height="15.0" fill="rgb(209,96,47)" rx="2" ry="2" />
<text  x="27.06" y="271.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.06%)</title><rect x="433.9" y="389" width="0.7" height="15.0" fill="rgb(253,110,51)" rx="2" ry="2" />
<text  x="436.90" y="399.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_M_move_assign (1 samples, 0.02%)</title><rect x="38.3" y="357" width="0.3" height="15.0" fill="rgb(215,158,17)" rx="2" ry="2" />
<text  x="41.33" y="367.5" ></text>
</g>
<g >
<title>db::schema_tables::calculate_schema_digest (2 samples, 0.04%)</title><rect x="105.9" y="565" width="0.5" height="15.0" fill="rgb(214,101,35)" rx="2" ry="2" />
<text  x="108.93" y="575.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::visit&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (33 samples, 0.62%)</title><rect x="422.5" y="325" width="7.4" height="15.0" fill="rgb(236,223,25)" rx="2" ry="2" />
<text  x="425.52" y="335.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (2 samples, 0.04%)</title><rect x="747.4" y="389" width="0.4" height="15.0" fill="rgb(220,67,13)" rx="2" ry="2" />
<text  x="750.36" y="399.5" ></text>
</g>
<g >
<title>seastar::reactor::del_timer (6 samples, 0.11%)</title><rect x="130.9" y="469" width="1.4" height="15.0" fill="rgb(233,73,15)" rx="2" ry="2" />
<text  x="133.92" y="479.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::partition_snapshot_flat_reader&lt;memtable&amp;&gt; (81 samples, 1.53%)</title><rect x="497.7" y="389" width="18.1" height="15.0" fill="rgb(222,227,8)" rx="2" ry="2" />
<text  x="500.71" y="399.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.04%)</title><rect x="518.9" y="421" width="0.4" height="15.0" fill="rgb(216,174,26)" rx="2" ry="2" />
<text  x="521.90" y="431.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (3 samples, 0.06%)</title><rect x="895.1" y="453" width="0.6" height="15.0" fill="rgb(229,115,7)" rx="2" ry="2" />
<text  x="898.06" y="463.5" ></text>
</g>
<g >
<title>distributed_loader::init_system_keyspace (1 samples, 0.02%)</title><rect x="16.9" y="645" width="0.2" height="15.0" fill="rgb(239,197,34)" rx="2" ry="2" />
<text  x="19.92" y="655.5" ></text>
</g>
<g >
<title>managed_bytes::free_chain (1 samples, 0.02%)</title><rect x="429.4" y="309" width="0.3" height="15.0" fill="rgb(247,66,23)" rx="2" ry="2" />
<text  x="432.44" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::free_span (1 samples, 0.02%)</title><rect x="98.8" y="517" width="0.2" height="15.0" fill="rgb(254,24,19)" rx="2" ry="2" />
<text  x="101.80" y="527.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.02%)</title><rect x="828.1" y="437" width="0.2" height="15.0" fill="rgb(210,115,38)" rx="2" ry="2" />
<text  x="831.12" y="447.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::execute (2 samples, 0.04%)</title><rect x="967.6" y="389" width="0.4" height="15.0" fill="rgb(215,161,31)" rx="2" ry="2" />
<text  x="970.56" y="399.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEE4$_44ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_45ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_43ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_46ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_47ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_48ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_49ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_50ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_51ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_52ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_53ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_54ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_55ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_56ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_57ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_58EERS4_IJNSF_11conjunctionENSF_15binary_operatorENSF_12column_valueENSF_5tokenENSF_21unresolved_identifierENSF_25column_mutation_attributeENSF_13function_callENSF_4castENSF_15field_selectionENSF_4nullENSF_13bind_variableENSF_16untyped_constantENSF_8constantENSF_17tuple_constructorENSF_22collection_constructorENSF_20usertype_constructorEEEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES16_S1O_ (1 samples, 0.02%)</title><rect x="874.1" y="501" width="0.2" height="15.0" fill="rgb(212,20,37)" rx="2" ry="2" />
<text  x="877.08" y="511.5" ></text>
</g>
<g >
<title>dht::shard_of (3 samples, 0.06%)</title><rect x="986.5" y="373" width="0.7" height="15.0" fill="rgb(216,221,5)" rx="2" ry="2" />
<text  x="989.53" y="383.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::leaf_node::allocate (1 samples, 0.02%)</title><rect x="1120.8" y="245" width="0.3" height="15.0" fill="rgb(223,178,38)" rx="2" ry="2" />
<text  x="1123.84" y="255.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_rehash (1 samples, 0.02%)</title><rect x="1152.1" y="549" width="0.2" height="15.0" fill="rgb(236,84,13)" rx="2" ry="2" />
<text  x="1155.07" y="559.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.02%)</title><rect x="54.8" y="245" width="0.3" height="15.0" fill="rgb(221,5,6)" rx="2" ry="2" />
<text  x="57.84" y="255.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.02%)</title><rect x="49.5" y="357" width="0.2" height="15.0" fill="rgb(254,0,6)" rx="2" ry="2" />
<text  x="52.49" y="367.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::operator= (2 samples, 0.04%)</title><rect x="849.1" y="581" width="0.4" height="15.0" fill="rgb(226,199,2)" rx="2" ry="2" />
<text  x="852.10" y="591.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (4 samples, 0.08%)</title><rect x="902.9" y="453" width="0.9" height="15.0" fill="rgb(250,66,2)" rx="2" ry="2" />
<text  x="905.86" y="463.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::got_response (15 samples, 0.28%)</title><rect x="696.5" y="533" width="3.3" height="15.0" fill="rgb(244,189,43)" rx="2" ry="2" />
<text  x="699.49" y="543.5" ></text>
</g>
<g >
<title>basic_atomic_cell_view&lt; (2 samples, 0.04%)</title><rect x="361.8" y="277" width="0.5" height="15.0" fill="rgb(242,2,47)" rx="2" ry="2" />
<text  x="364.84" y="287.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (2,258 samples, 42.69%)</title><rect x="114.0" y="565" width="503.7" height="15.0" fill="rgb(245,93,1)" rx="2" ry="2" />
<text  x="116.97" y="575.5" >seastar::noncopyable_function&lt;seastar::future&lt;void&gt; </text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (1 samples, 0.02%)</title><rect x="1081.6" y="469" width="0.2" height="15.0" fill="rgb(239,118,11)" rx="2" ry="2" />
<text  x="1084.57" y="479.5" ></text>
</g>
<g >
<title>ser::writer_of_std__optional__qr_cell&lt;bytes_ostream&gt;::write (6 samples, 0.11%)</title><rect x="396.4" y="261" width="1.4" height="15.0" fill="rgb(214,224,41)" rx="2" ry="2" />
<text  x="399.42" y="271.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::~partition_snapshot_flat_reader (38 samples, 0.72%)</title><rect x="558.6" y="405" width="8.5" height="15.0" fill="rgb(214,167,31)" rx="2" ry="2" />
<text  x="561.61" y="415.5" ></text>
</g>
<g >
<title>multishard_combining_reader::fill_buffer (1 samples, 0.02%)</title><rect x="105.9" y="373" width="0.3" height="15.0" fill="rgb(221,193,7)" rx="2" ry="2" />
<text  x="108.93" y="383.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (8 samples, 0.15%)</title><rect x="732.2" y="405" width="1.8" height="15.0" fill="rgb(207,45,24)" rx="2" ry="2" />
<text  x="735.19" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (2 samples, 0.04%)</title><rect x="623.3" y="581" width="0.5" height="15.0" fill="rgb(219,181,36)" rx="2" ry="2" />
<text  x="626.31" y="591.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const*, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;*&gt; (2 samples, 0.04%)</title><rect x="770.6" y="389" width="0.4" height="15.0" fill="rgb(222,9,17)" rx="2" ry="2" />
<text  x="773.56" y="399.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (2 samples, 0.04%)</title><rect x="48.2" y="389" width="0.4" height="15.0" fill="rgb(228,76,37)" rx="2" ry="2" />
<text  x="51.15" y="399.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="663.7" y="581" width="0.2" height="15.0" fill="rgb(242,92,15)" rx="2" ry="2" />
<text  x="666.70" y="591.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::at (5 samples, 0.09%)</title><rect x="745.1" y="453" width="1.1" height="15.0" fill="rgb(208,132,5)" rx="2" ry="2" />
<text  x="748.13" y="463.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;dht::token, std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt;, std::allocator&lt;std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;dht::token&gt;, std::hash&lt;dht::token&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (2 samples, 0.04%)</title><rect x="1072.4" y="389" width="0.5" height="15.0" fill="rgb(223,228,27)" rx="2" ry="2" />
<text  x="1075.42" y="399.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (3 samples, 0.06%)</title><rect x="40.1" y="293" width="0.7" height="15.0" fill="rgb(220,157,32)" rx="2" ry="2" />
<text  x="43.12" y="303.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_type (1 samples, 0.02%)</title><rect x="21.4" y="421" width="0.2" height="15.0" fill="rgb(225,123,1)" rx="2" ry="2" />
<text  x="24.38" y="431.5" ></text>
</g>
<g >
<title>seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;::swap (13 samples, 0.25%)</title><rect x="822.1" y="533" width="2.9" height="15.0" fill="rgb(220,171,49)" rx="2" ry="2" />
<text  x="825.10" y="543.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (1 samples, 0.02%)</title><rect x="71.4" y="421" width="0.2" height="15.0" fill="rgb(250,26,20)" rx="2" ry="2" />
<text  x="74.35" y="431.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::digest_read_result&gt;::future (2 samples, 0.04%)</title><rect x="966.0" y="437" width="0.4" height="15.0" fill="rgb(235,21,43)" rx="2" ry="2" />
<text  x="969.00" y="447.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::on_permit_unused (4 samples, 0.08%)</title><rect x="124.2" y="533" width="0.9" height="15.0" fill="rgb(222,25,22)" rx="2" ry="2" />
<text  x="127.23" y="543.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (1 samples, 0.02%)</title><rect x="1134.7" y="597" width="0.2" height="15.0" fill="rgb(209,225,35)" rx="2" ry="2" />
<text  x="1137.67" y="607.5" ></text>
</g>
<g >
<title>std::hash&lt;auth::resource&gt;::hash_data (7 samples, 0.13%)</title><rect x="802.5" y="421" width="1.5" height="15.0" fill="rgb(217,219,27)" rx="2" ry="2" />
<text  x="805.47" y="431.5" ></text>
</g>
<g >
<title>table::compact_sstables (1 samples, 0.02%)</title><rect x="1133.8" y="565" width="0.2" height="15.0" fill="rgb(210,73,34)" rx="2" ry="2" />
<text  x="1136.78" y="575.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (1 samples, 0.02%)</title><rect x="37.9" y="421" width="0.2" height="15.0" fill="rgb(232,77,48)" rx="2" ry="2" />
<text  x="40.89" y="431.5" ></text>
</g>
<g >
<title>sstables::delete_atomically (1 samples, 0.02%)</title><rect x="82.5" y="709" width="0.2" height="15.0" fill="rgb(217,206,25)" rx="2" ry="2" />
<text  x="85.51" y="719.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (2 samples, 0.04%)</title><rect x="37.2" y="421" width="0.5" height="15.0" fill="rgb(234,46,31)" rx="2" ry="2" />
<text  x="40.22" y="431.5" ></text>
</g>
<g >
<title>scanning_and_populating_reader::fill_buffer (1 samples, 0.02%)</title><rect x="105.9" y="133" width="0.3" height="15.0" fill="rgb(250,205,43)" rx="2" ry="2" />
<text  x="108.93" y="143.5" ></text>
</g>
<g >
<title>mutation_fragment::consume&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (4 samples, 0.08%)</title><rect x="676.2" y="437" width="0.9" height="15.0" fill="rgb(211,44,42)" rx="2" ry="2" />
<text  x="679.19" y="447.5" ></text>
</g>
<g >
<title>db::schema_tables::add_column_to_schema_mutation (1 samples, 0.02%)</title><rect x="106.8" y="517" width="0.3" height="15.0" fill="rgb(250,81,33)" rx="2" ry="2" />
<text  x="109.83" y="527.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::Parser (2 samples, 0.04%)</title><rect x="20.3" y="501" width="0.4" height="15.0" fill="rgb(221,28,24)" rx="2" ry="2" />
<text  x="23.26" y="511.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (2 samples, 0.04%)</title><rect x="274.6" y="261" width="0.4" height="15.0" fill="rgb(217,219,16)" rx="2" ry="2" />
<text  x="277.60" y="271.5" ></text>
</g>
<g >
<title>std::__find_if&lt;gms::inet_address*, __gnu_cxx::__ops::_Iter_equals_val&lt;gms::inet_address const&gt; &gt; (1 samples, 0.02%)</title><rect x="1076.0" y="421" width="0.2" height="15.0" fill="rgb(209,120,4)" rx="2" ry="2" />
<text  x="1078.99" y="431.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_range_tombstone (18 samples, 0.34%)</title><rect x="261.9" y="325" width="4.0" height="15.0" fill="rgb(228,90,23)" rx="2" ry="2" />
<text  x="264.89" y="335.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment (8 samples, 0.15%)</title><rect x="205.0" y="325" width="1.8" height="15.0" fill="rgb(231,154,35)" rx="2" ry="2" />
<text  x="207.99" y="335.5" ></text>
</g>
<g >
<title>std::apply&lt;auth::permissions_cache::get (1 samples, 0.02%)</title><rect x="796.0" y="373" width="0.2" height="15.0" fill="rgb(231,203,47)" rx="2" ry="2" />
<text  x="799.00" y="383.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.29] (1 samples, 0.02%)</title><rect x="10.2" y="725" width="0.2" height="15.0" fill="rgb(235,15,51)" rx="2" ry="2" />
<text  x="13.22" y="735.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::need_filtering (8 samples, 0.15%)</title><rect x="638.7" y="565" width="1.8" height="15.0" fill="rgb(221,159,17)" rx="2" ry="2" />
<text  x="641.71" y="575.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take (3 samples, 0.06%)</title><rect x="599.2" y="533" width="0.7" height="15.0" fill="rgb(239,32,35)" rx="2" ry="2" />
<text  x="602.22" y="543.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (2 samples, 0.04%)</title><rect x="47.5" y="325" width="0.4" height="15.0" fill="rgb(249,55,9)" rx="2" ry="2" />
<text  x="50.48" y="335.5" ></text>
</g>
<g >
<title>reader_selector::~reader_selector (1 samples, 0.02%)</title><rect x="573.3" y="437" width="0.3" height="15.0" fill="rgb(218,212,7)" rx="2" ry="2" />
<text  x="576.34" y="447.5" ></text>
</g>
<g >
<title>locator::token_metadata_impl::first_token_index (1 samples, 0.02%)</title><rect x="1067.3" y="373" width="0.2" height="15.0" fill="rgb(221,89,5)" rx="2" ry="2" />
<text  x="1070.29" y="383.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.02%)</title><rect x="37.7" y="293" width="0.2" height="15.0" fill="rgb(253,19,19)" rx="2" ry="2" />
<text  x="40.66" y="303.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.08%)</title><rect x="920.5" y="501" width="0.9" height="15.0" fill="rgb(234,179,33)" rx="2" ry="2" />
<text  x="923.49" y="511.5" ></text>
</g>
<g >
<title>rows_entry::tri_compare::operator (1 samples, 0.02%)</title><rect x="106.8" y="373" width="0.3" height="15.0" fill="rgb(229,58,52)" rx="2" ry="2" />
<text  x="109.83" y="383.5" ></text>
</g>
<g >
<title>std::make_unique&lt;empty_flat_reader, seastar::lw_shared_ptr&lt;schema const&gt;, reader_permit&gt; (1 samples, 0.02%)</title><rect x="535.2" y="389" width="0.2" height="15.0" fill="rgb(208,64,54)" rx="2" ry="2" />
<text  x="538.19" y="399.5" ></text>
</g>
<g >
<title>sstables::mc::clustering_blocks_input_range::next (1 samples, 0.02%)</title><rect x="81.2" y="437" width="0.2" height="15.0" fill="rgb(231,175,33)" rx="2" ry="2" />
<text  x="84.17" y="447.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.02%)</title><rect x="24.7" y="325" width="0.2" height="15.0" fill="rgb(229,194,1)" rx="2" ry="2" />
<text  x="27.72" y="335.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (1 samples, 0.02%)</title><rect x="1031.4" y="421" width="0.2" height="15.0" fill="rgb(207,36,14)" rx="2" ry="2" />
<text  x="1034.37" y="431.5" ></text>
</g>
<g >
<title>db::schema_tables::query_partition_mutation (1 samples, 0.02%)</title><rect x="106.6" y="549" width="0.2" height="15.0" fill="rgb(214,104,30)" rx="2" ry="2" />
<text  x="109.60" y="559.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="394.4" y="245" width="0.2" height="15.0" fill="rgb(246,141,44)" rx="2" ry="2" />
<text  x="397.41" y="255.5" ></text>
</g>
<g >
<title>seastar::memory::allocate_aligned (16 samples, 0.30%)</title><rect x="234.7" y="133" width="3.5" height="15.0" fill="rgb(254,172,43)" rx="2" ry="2" />
<text  x="237.67" y="143.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.02%)</title><rect x="37.0" y="341" width="0.2" height="15.0" fill="rgb(235,39,19)" rx="2" ry="2" />
<text  x="40.00" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (2 samples, 0.04%)</title><rect x="245.8" y="197" width="0.5" height="15.0" fill="rgb(222,179,36)" rx="2" ry="2" />
<text  x="248.82" y="207.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::then_impl&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (1 samples, 0.02%)</title><rect x="169.1" y="469" width="0.2" height="15.0" fill="rgb(206,30,22)" rx="2" ry="2" />
<text  x="172.07" y="479.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.04%)</title><rect x="23.6" y="293" width="0.5" height="15.0" fill="rgb(238,12,3)" rx="2" ry="2" />
<text  x="26.61" y="303.5" ></text>
</g>
<g >
<title>bytes_ostream::chunk::~chunk (2 samples, 0.04%)</title><rect x="99.2" y="501" width="0.5" height="15.0" fill="rgb(209,185,4)" rx="2" ry="2" />
<text  x="102.24" y="511.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::alloc (16 samples, 0.30%)</title><rect x="234.7" y="165" width="3.5" height="15.0" fill="rgb(231,222,40)" rx="2" ry="2" />
<text  x="237.67" y="175.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector (2 samples, 0.04%)</title><rect x="1045.7" y="421" width="0.4" height="15.0" fill="rgb(217,186,33)" rx="2" ry="2" />
<text  x="1048.65" y="431.5" ></text>
</g>
<g >
<title>utils::directories::verify_owner_and_mode (1 samples, 0.02%)</title><rect x="850.0" y="453" width="0.2" height="15.0" fill="rgb(243,18,10)" rx="2" ry="2" />
<text  x="852.99" y="463.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="99.7" y="549" width="0.2" height="15.0" fill="rgb(248,157,10)" rx="2" ry="2" />
<text  x="102.69" y="559.5" ></text>
</g>
<g >
<title>ser::writer_of_qr_clustered_row&lt;bytes_ostream&gt;::skip_key (2 samples, 0.04%)</title><rect x="370.3" y="277" width="0.5" height="15.0" fill="rgb(211,42,49)" rx="2" ry="2" />
<text  x="373.31" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (9 samples, 0.17%)</title><rect x="1048.6" y="405" width="2.0" height="15.0" fill="rgb(215,124,13)" rx="2" ry="2" />
<text  x="1051.55" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::vector (2 samples, 0.04%)</title><rect x="855.3" y="453" width="0.5" height="15.0" fill="rgb(253,179,52)" rx="2" ry="2" />
<text  x="858.34" y="463.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::iterator_at (1 samples, 0.02%)</title><rect x="812.1" y="405" width="0.2" height="15.0" fill="rgb(215,85,31)" rx="2" ry="2" />
<text  x="815.06" y="415.5" ></text>
</g>
<g >
<title>allocation_strategy::get_standard_migrator&lt;blob_storage&gt; (2 samples, 0.04%)</title><rect x="234.0" y="149" width="0.4" height="15.0" fill="rgb(240,113,45)" rx="2" ry="2" />
<text  x="237.00" y="159.5" ></text>
</g>
<g >
<title>std::optional&lt;clustering_key_prefix&gt;::operator=&lt;clustering_key_prefix&amp;&gt; (2 samples, 0.04%)</title><rect x="416.7" y="309" width="0.5" height="15.0" fill="rgb(250,105,3)" rx="2" ry="2" />
<text  x="419.72" y="319.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (3 samples, 0.06%)</title><rect x="927.6" y="421" width="0.7" height="15.0" fill="rgb(249,101,15)" rx="2" ry="2" />
<text  x="930.63" y="431.5" ></text>
</g>
<g >
<title>std::hash&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::operator (1 samples, 0.02%)</title><rect x="788.2" y="229" width="0.2" height="15.0" fill="rgb(242,151,16)" rx="2" ry="2" />
<text  x="791.19" y="239.5" ></text>
</g>
<g >
<title>seastar::future&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (1 samples, 0.02%)</title><rect x="777.7" y="325" width="0.2" height="15.0" fill="rgb(212,146,35)" rx="2" ry="2" />
<text  x="780.70" y="335.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (2 samples, 0.04%)</title><rect x="52.6" y="181" width="0.5" height="15.0" fill="rgb(206,77,29)" rx="2" ry="2" />
<text  x="55.61" y="191.5" ></text>
</g>
<g >
<title>service::storage_proxy::sort_endpoints_by_proximity (1 samples, 0.02%)</title><rect x="1076.2" y="437" width="0.2" height="15.0" fill="rgb(206,96,22)" rx="2" ry="2" />
<text  x="1079.22" y="447.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;cql3::restrictions::single_column_restrictions, false&gt;::make&lt;seastar::lw_shared_ptr&lt;schema const&gt;&amp;&gt; (1 samples, 0.02%)</title><rect x="71.6" y="469" width="0.2" height="15.0" fill="rgb(248,65,32)" rx="2" ry="2" />
<text  x="74.58" y="479.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::needs_post_query_ordering (5 samples, 0.09%)</title><rect x="634.2" y="581" width="1.2" height="15.0" fill="rgb(208,44,52)" rx="2" ry="2" />
<text  x="637.25" y="591.5" ></text>
</g>
<g >
<title>compound_type&lt; (1 samples, 0.02%)</title><rect x="107.3" y="389" width="0.2" height="15.0" fill="rgb(208,106,18)" rx="2" ry="2" />
<text  x="110.27" y="399.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (5 samples, 0.09%)</title><rect x="779.9" y="261" width="1.1" height="15.0" fill="rgb(222,114,30)" rx="2" ry="2" />
<text  x="782.93" y="271.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;cql3::expr::untyped_constant, void, void, cql3::expr::untyped_constant, void&gt; (4 samples, 0.08%)</title><rect x="51.3" y="341" width="0.9" height="15.0" fill="rgb(210,91,12)" rx="2" ry="2" />
<text  x="54.27" y="351.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (2 samples, 0.04%)</title><rect x="649.6" y="581" width="0.5" height="15.0" fill="rgb(208,62,0)" rx="2" ry="2" />
<text  x="652.64" y="591.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::operator= (3 samples, 0.06%)</title><rect x="863.4" y="549" width="0.6" height="15.0" fill="rgb(215,106,1)" rx="2" ry="2" />
<text  x="866.37" y="559.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate_to_raw_view (77 samples, 1.46%)</title><rect x="876.8" y="453" width="17.1" height="15.0" fill="rgb(235,11,44)" rx="2" ry="2" />
<text  x="879.76" y="463.5" ></text>
</g>
<g >
<title>service::client_state::has_access (8 samples, 0.15%)</title><rect x="75.8" y="533" width="1.8" height="15.0" fill="rgb(206,106,6)" rx="2" ry="2" />
<text  x="78.82" y="543.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (4 samples, 0.08%)</title><rect x="856.7" y="341" width="0.9" height="15.0" fill="rgb(253,83,22)" rx="2" ry="2" />
<text  x="859.68" y="351.5" ></text>
</g>
<g >
<title>service::storage_proxy::do_query (619 samples, 11.70%)</title><rect x="944.6" y="485" width="138.1" height="15.0" fill="rgb(238,93,6)" rx="2" ry="2" />
<text  x="947.58" y="495.5" >service::storage_..</text>
</g>
<g >
<title>service::client_state::check_has_permission (1 samples, 0.02%)</title><rect x="763.9" y="453" width="0.2" height="15.0" fill="rgb(229,108,39)" rx="2" ry="2" />
<text  x="766.87" y="463.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::get_value (1 samples, 0.02%)</title><rect x="648.5" y="581" width="0.2" height="15.0" fill="rgb(228,0,51)" rx="2" ry="2" />
<text  x="651.53" y="591.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (4 samples, 0.08%)</title><rect x="311.4" y="405" width="0.9" height="15.0" fill="rgb(207,10,21)" rx="2" ry="2" />
<text  x="314.41" y="415.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_result_local (205 samples, 3.88%)</title><rect x="983.9" y="389" width="45.7" height="15.0" fill="rgb(213,73,32)" rx="2" ry="2" />
<text  x="986.85" y="399.5" >serv..</text>
</g>
<g >
<title>std::hash&lt;std::basic_string_view&lt;signed char, std::char_traits&lt;signed char&gt; &gt; &gt;::operator (9 samples, 0.17%)</title><rect x="735.8" y="373" width="2.0" height="15.0" fill="rgb(254,60,5)" rx="2" ry="2" />
<text  x="738.76" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="50.6" y="325" width="0.2" height="15.0" fill="rgb(232,193,27)" rx="2" ry="2" />
<text  x="53.61" y="335.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (1 samples, 0.02%)</title><rect x="320.8" y="501" width="0.2" height="15.0" fill="rgb(214,54,15)" rx="2" ry="2" />
<text  x="323.78" y="511.5" ></text>
</g>
<g >
<title>row_cache::make_reader (1 samples, 0.02%)</title><rect x="141.4" y="437" width="0.2" height="15.0" fill="rgb(242,52,37)" rx="2" ry="2" />
<text  x="144.41" y="447.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::set_urgent_state (2 samples, 0.04%)</title><rect x="649.0" y="581" width="0.4" height="15.0" fill="rgb(226,124,25)" rx="2" ry="2" />
<text  x="651.97" y="591.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextToken (1 samples, 0.02%)</title><rect x="704.5" y="325" width="0.2" height="15.0" fill="rgb(241,146,9)" rx="2" ry="2" />
<text  x="707.52" y="335.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql3::query_options&gt;::~shared_ptr_count_for (1 samples, 0.02%)</title><rect x="1136.9" y="597" width="0.2" height="15.0" fill="rgb(211,118,4)" rx="2" ry="2" />
<text  x="1139.90" y="607.5" ></text>
</g>
<g >
<title>bound_view::tri_compare::operator (1 samples, 0.02%)</title><rect x="857.4" y="309" width="0.2" height="15.0" fill="rgb(206,0,22)" rx="2" ry="2" />
<text  x="860.35" y="319.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::impl (7 samples, 0.13%)</title><rect x="531.6" y="341" width="1.6" height="15.0" fill="rgb(210,52,33)" rx="2" ry="2" />
<text  x="534.62" y="351.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;auth::resource&gt;::_Optional_payload_base (5 samples, 0.09%)</title><rect x="768.1" y="389" width="1.1" height="15.0" fill="rgb(238,191,17)" rx="2" ry="2" />
<text  x="771.11" y="399.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (5 samples, 0.09%)</title><rect x="748.7" y="421" width="1.1" height="15.0" fill="rgb(241,59,22)" rx="2" ry="2" />
<text  x="751.70" y="431.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.02%)</title><rect x="82.5" y="661" width="0.2" height="15.0" fill="rgb(231,220,11)" rx="2" ry="2" />
<text  x="85.51" y="671.5" ></text>
</g>
<g >
<title>bytes_view_hasher::finalize (3 samples, 0.06%)</title><rect x="736.4" y="357" width="0.7" height="15.0" fill="rgb(227,56,0)" rx="2" ry="2" />
<text  x="739.43" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="979.8" y="357" width="0.3" height="15.0" fill="rgb(205,229,0)" rx="2" ry="2" />
<text  x="982.84" y="367.5" ></text>
</g>
<g >
<title>seastar::internal::do_until_state&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (1 samples, 0.02%)</title><rect x="849.8" y="597" width="0.2" height="15.0" fill="rgb(225,66,13)" rx="2" ry="2" />
<text  x="852.77" y="607.5" ></text>
</g>
<g >
<title>database::get_reader_concurrency_semaphore (1 samples, 0.02%)</title><rect x="994.6" y="357" width="0.2" height="15.0" fill="rgb(253,5,41)" rx="2" ry="2" />
<text  x="997.56" y="367.5" ></text>
</g>
<g >
<title>db::schema_tables::create_columns_from_column_rows (1 samples, 0.02%)</title><rect x="107.5" y="485" width="0.2" height="15.0" fill="rgb(222,174,36)" rx="2" ry="2" />
<text  x="110.50" y="495.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;service::abstract_read_executor::execute (3 samples, 0.06%)</title><rect x="683.6" y="549" width="0.6" height="15.0" fill="rgb(240,165,17)" rx="2" ry="2" />
<text  x="686.55" y="559.5" ></text>
</g>
<g >
<title>write_cell&lt;ser::qr_clustered_row__cells__cells&lt;bytes_ostream&gt; &gt; (1 samples, 0.02%)</title><rect x="398.6" y="293" width="0.3" height="15.0" fill="rgb(226,216,30)" rx="2" ry="2" />
<text  x="401.65" y="303.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::free (2 samples, 0.04%)</title><rect x="428.3" y="293" width="0.5" height="15.0" fill="rgb(219,207,14)" rx="2" ry="2" />
<text  x="431.32" y="303.5" ></text>
</g>
<g >
<title>std::__lower_bound&lt;__gnu_cxx::__normal_iterator&lt;dht::token const*, std::vector&lt;dht::token, std::allocator&lt;dht::token&gt; &gt; &gt;, dht::token, __gnu_cxx::__ops::_Iter_less_val&gt; (32 samples, 0.61%)</title><rect x="1059.9" y="341" width="7.2" height="15.0" fill="rgb(238,210,25)" rx="2" ry="2" />
<text  x="1062.93" y="351.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::sharded&lt;database&gt;::invoke_on_all (1 samples, 0.02%)</title><rect x="16.9" y="485" width="0.2" height="15.0" fill="rgb(223,75,6)" rx="2" ry="2" />
<text  x="19.92" y="495.5" ></text>
</g>
<g >
<title>std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;, seastar::future&lt;void&gt; &gt; &gt;::operator (1 samples, 0.02%)</title><rect x="804.3" y="485" width="0.2" height="15.0" fill="rgb(254,199,7)" rx="2" ry="2" />
<text  x="807.25" y="495.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;seastar::future&lt;void&gt; &gt;  (116 samples, 2.19%)</title><rect x="552.6" y="517" width="25.9" height="15.0" fill="rgb(215,135,28)" rx="2" ry="2" />
<text  x="555.59" y="527.5" >s..</text>
</g>
<g >
<title>mutation_reader_merger::close (1 samples, 0.02%)</title><rect x="1165.5" y="517" width="0.2" height="15.0" fill="rgb(223,23,38)" rx="2" ry="2" />
<text  x="1168.46" y="527.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (5 samples, 0.09%)</title><rect x="925.6" y="453" width="1.1" height="15.0" fill="rgb(207,152,52)" rx="2" ry="2" />
<text  x="928.62" y="463.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="67.3" y="485" width="0.3" height="15.0" fill="rgb(248,109,47)" rx="2" ry="2" />
<text  x="70.34" y="495.5" ></text>
</g>
<g >
<title>parse_raw (1 samples, 0.02%)</title><rect x="107.5" y="453" width="0.2" height="15.0" fill="rgb(232,188,8)" rx="2" ry="2" />
<text  x="110.50" y="463.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="1137.3" y="565" width="0.3" height="15.0" fill="rgb(216,162,28)" rx="2" ry="2" />
<text  x="1140.35" y="575.5" ></text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt;&amp;&gt; (1 samples, 0.02%)</title><rect x="814.5" y="405" width="0.2" height="15.0" fill="rgb(216,211,33)" rx="2" ry="2" />
<text  x="817.52" y="415.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (18 samples, 0.34%)</title><rect x="476.3" y="357" width="4.0" height="15.0" fill="rgb(246,50,17)" rx="2" ry="2" />
<text  x="479.29" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (1 samples, 0.02%)</title><rect x="23.2" y="293" width="0.2" height="15.0" fill="rgb(227,39,28)" rx="2" ry="2" />
<text  x="26.16" y="303.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser&lt;std::_Mem_fn&lt;std::unique_ptr&lt;cql3::statements::raw::parsed_statement, std::default_delete&lt;cql3::statements::raw::parsed_statement&gt; &gt;  (200 samples, 3.78%)</title><rect x="19.8" y="549" width="44.6" height="15.0" fill="rgb(231,142,29)" rx="2" ry="2" />
<text  x="22.82" y="559.5" >cql3..</text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_destroy_data_aux (1 samples, 0.02%)</title><rect x="610.8" y="469" width="0.2" height="15.0" fill="rgb(241,66,45)" rx="2" ry="2" />
<text  x="613.82" y="479.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::cql_statement&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="632.7" y="581" width="0.2" height="15.0" fill="rgb(218,227,13)" rx="2" ry="2" />
<text  x="635.68" y="591.5" ></text>
</g>
<g >
<title>std::__make_heap&lt;__gnu_cxx::__normal_iterator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position*, std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::heap_compare&gt; &gt; (1 samples, 0.02%)</title><rect x="280.0" y="309" width="0.2" height="15.0" fill="rgb(212,184,9)" rx="2" ry="2" />
<text  x="282.96" y="319.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (262 samples, 4.95%)</title><rect x="19.4" y="597" width="58.4" height="15.0" fill="rgb(216,43,14)" rx="2" ry="2" />
<text  x="22.37" y="607.5" >cql3::..</text>
</g>
<g >
<title>row::apply_monotonically (2 samples, 0.04%)</title><rect x="16.0" y="629" width="0.5" height="15.0" fill="rgb(252,62,5)" rx="2" ry="2" />
<text  x="19.02" y="639.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (3 samples, 0.06%)</title><rect x="943.9" y="485" width="0.7" height="15.0" fill="rgb(238,91,53)" rx="2" ry="2" />
<text  x="946.92" y="495.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::consume_with&lt;row::apply_monotonically (2 samples, 0.04%)</title><rect x="16.0" y="597" width="0.5" height="15.0" fill="rgb(211,9,7)" rx="2" ry="2" />
<text  x="19.02" y="607.5" ></text>
</g>
<g >
<title>std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;, seastar::future&lt;void&gt; &gt; &gt;::operator (2 samples, 0.04%)</title><rect x="806.3" y="469" width="0.4" height="15.0" fill="rgb(233,220,37)" rx="2" ry="2" />
<text  x="809.26" y="479.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (1 samples, 0.02%)</title><rect x="1165.2" y="373" width="0.3" height="15.0" fill="rgb(254,162,24)" rx="2" ry="2" />
<text  x="1168.24" y="383.5" ></text>
</g>
<g >
<title>reader_permit::consume_resources (1 samples, 0.02%)</title><rect x="80.3" y="357" width="0.2" height="15.0" fill="rgb(244,116,53)" rx="2" ry="2" />
<text  x="83.28" y="367.5" ></text>
</g>
<g >
<title>database::find_schema (29 samples, 0.55%)</title><rect x="806.9" y="469" width="6.5" height="15.0" fill="rgb(212,90,27)" rx="2" ry="2" />
<text  x="809.93" y="479.5" ></text>
</g>
<g >
<title>reader_permit::consume_resources (3 samples, 0.06%)</title><rect x="509.8" y="277" width="0.6" height="15.0" fill="rgb(206,91,51)" rx="2" ry="2" />
<text  x="512.75" y="287.5" ></text>
</g>
<g >
<title>ser::after_qr_cell__timestamp&lt;bytes_ostream&gt;::skip_expiry (14 samples, 0.26%)</title><rect x="387.3" y="261" width="3.1" height="15.0" fill="rgb(212,178,28)" rx="2" ry="2" />
<text  x="390.27" y="271.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.02%)</title><rect x="41.9" y="229" width="0.2" height="15.0" fill="rgb(206,20,6)" rx="2" ry="2" />
<text  x="44.90" y="239.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::abstract_write_response_handler&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="1131.5" y="277" width="0.3" height="15.0" fill="rgb(205,98,34)" rx="2" ry="2" />
<text  x="1134.55" y="287.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.02%)</title><rect x="21.2" y="341" width="0.2" height="15.0" fill="rgb(244,49,46)" rx="2" ry="2" />
<text  x="24.16" y="351.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt;::~_Variant_storage (1 samples, 0.02%)</title><rect x="844.9" y="565" width="0.2" height="15.0" fill="rgb(228,53,5)" rx="2" ry="2" />
<text  x="847.86" y="575.5" ></text>
</g>
<g >
<title>seastar::future&lt;mutation_fragment*&gt;::then_impl&lt;query::consume_page&lt; (3 samples, 0.06%)</title><rect x="540.1" y="517" width="0.7" height="15.0" fill="rgb(244,60,46)" rx="2" ry="2" />
<text  x="543.10" y="527.5" ></text>
</g>
<g >
<title>partition_snapshot::~partition_snapshot (5 samples, 0.09%)</title><rect x="564.6" y="357" width="1.2" height="15.0" fill="rgb(248,84,8)" rx="2" ry="2" />
<text  x="567.64" y="367.5" ></text>
</g>
<g >
<title>partition_snapshot::partition_tombstone (1 samples, 0.02%)</title><rect x="512.0" y="341" width="0.2" height="15.0" fill="rgb(208,36,9)" rx="2" ry="2" />
<text  x="514.99" y="351.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;dht::decorated_key&gt;::_Optional_payload_base (1 samples, 0.02%)</title><rect x="325.5" y="389" width="0.2" height="15.0" fill="rgb(227,73,1)" rx="2" ry="2" />
<text  x="328.47" y="399.5" ></text>
</g>
<g >
<title>std::hash&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::operator (1 samples, 0.02%)</title><rect x="790.0" y="165" width="0.2" height="15.0" fill="rgb(205,188,16)" rx="2" ry="2" />
<text  x="792.97" y="175.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (2 samples, 0.04%)</title><rect x="698.3" y="517" width="0.4" height="15.0" fill="rgb(208,181,3)" rx="2" ry="2" />
<text  x="701.28" y="527.5" ></text>
</g>
<g >
<title>seastar::execution_stage::flush (2 samples, 0.04%)</title><rect x="741.8" y="453" width="0.4" height="15.0" fill="rgb(206,110,7)" rx="2" ry="2" />
<text  x="744.78" y="463.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (4 samples, 0.08%)</title><rect x="200.5" y="309" width="0.9" height="15.0" fill="rgb(239,53,2)" rx="2" ry="2" />
<text  x="203.53" y="319.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="70.7" y="373" width="0.2" height="15.0" fill="rgb(209,7,38)" rx="2" ry="2" />
<text  x="73.68" y="383.5" ></text>
</g>
<g >
<title>cql3::cf_name::cf_name (1 samples, 0.02%)</title><rect x="59.3" y="437" width="0.2" height="15.0" fill="rgb(250,19,35)" rx="2" ry="2" />
<text  x="62.31" y="447.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.02%)</title><rect x="82.7" y="677" width="0.3" height="15.0" fill="rgb(247,179,3)" rx="2" ry="2" />
<text  x="85.73" y="687.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="1165.0" y="581" width="0.2" height="15.0" fill="rgb(251,229,7)" rx="2" ry="2" />
<text  x="1168.01" y="591.5" ></text>
</g>
<g >
<title>ser::deserialize_array_helper&lt;false, ser::column_view&gt;::doit&lt;seastar::simple_memory_input_stream, std::vector&lt;ser::column_view, std::allocator&lt;ser::column_view&gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="1122.6" y="293" width="0.2" height="15.0" fill="rgb(253,39,24)" rx="2" ry="2" />
<text  x="1125.62" y="303.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (2 samples, 0.04%)</title><rect x="974.5" y="373" width="0.4" height="15.0" fill="rgb(235,92,44)" rx="2" ry="2" />
<text  x="977.48" y="383.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.02%)</title><rect x="429.2" y="309" width="0.2" height="15.0" fill="rgb(240,86,29)" rx="2" ry="2" />
<text  x="432.21" y="319.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="413.6" y="261" width="0.2" height="15.0" fill="rgb(252,219,36)" rx="2" ry="2" />
<text  x="416.60" y="271.5" ></text>
</g>
<g >
<title>service::abstract_read_resolver::~abstract_read_resolver (2 samples, 0.04%)</title><rect x="690.2" y="565" width="0.5" height="15.0" fill="rgb(254,181,14)" rx="2" ry="2" />
<text  x="693.25" y="575.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="45.3" y="373" width="0.2" height="15.0" fill="rgb(248,203,48)" rx="2" ry="2" />
<text  x="48.25" y="383.5" ></text>
</g>
<g >
<title>table::query (5 samples, 0.09%)</title><rect x="1165.0" y="597" width="1.1" height="15.0" fill="rgb(209,122,2)" rx="2" ry="2" />
<text  x="1168.01" y="607.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::constant&gt;  (1 samples, 0.02%)</title><rect x="888.8" y="421" width="0.2" height="15.0" fill="rgb(207,214,4)" rx="2" ry="2" />
<text  x="891.81" y="431.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, seastar::future&lt;void&gt;, false&gt;::_Head_base&lt;seastar::future&lt;void&gt; &gt; (1 samples, 0.02%)</title><rect x="82.5" y="565" width="0.2" height="15.0" fill="rgb(231,4,5)" rx="2" ry="2" />
<text  x="85.51" y="575.5" ></text>
</g>
<g >
<title>single_node_cql_env::local_qp (1 samples, 0.02%)</title><rect x="837.5" y="549" width="0.2" height="15.0" fill="rgb(246,200,18)" rx="2" ry="2" />
<text  x="840.49" y="559.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="505.5" y="309" width="0.2" height="15.0" fill="rgb(229,162,35)" rx="2" ry="2" />
<text  x="508.52" y="319.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (2 samples, 0.04%)</title><rect x="916.9" y="421" width="0.5" height="15.0" fill="rgb(234,180,44)" rx="2" ry="2" />
<text  x="919.92" y="431.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="37.7" y="357" width="0.2" height="15.0" fill="rgb(225,212,26)" rx="2" ry="2" />
<text  x="40.66" y="367.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;schema&gt;::make&lt;schema&gt; (1 samples, 0.02%)</title><rect x="16.9" y="325" width="0.2" height="15.0" fill="rgb(220,43,49)" rx="2" ry="2" />
<text  x="19.92" y="335.5" ></text>
</g>
<g >
<title>seastar::smp::submit_to&lt;seastar::sharded&lt;database&gt;::invoke_on_all (1 samples, 0.02%)</title><rect x="16.9" y="469" width="0.2" height="15.0" fill="rgb(240,50,44)" rx="2" ry="2" />
<text  x="19.92" y="479.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.02%)</title><rect x="40.8" y="261" width="0.2" height="15.0" fill="rgb(214,12,54)" rx="2" ry="2" />
<text  x="43.79" y="271.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (1 samples, 0.02%)</title><rect x="694.7" y="549" width="0.2" height="15.0" fill="rgb(234,99,33)" rx="2" ry="2" />
<text  x="697.71" y="559.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, auth::role_or_anonymous&amp;&amp;, auth::get_permissions (1 samples, 0.02%)</title><rect x="797.6" y="405" width="0.2" height="15.0" fill="rgb(247,130,44)" rx="2" ry="2" />
<text  x="800.56" y="415.5" ></text>
</g>
<g >
<title>service::storage_service::join_cluster (1 samples, 0.02%)</title><rect x="17.4" y="645" width="0.2" height="15.0" fill="rgb(249,200,33)" rx="2" ry="2" />
<text  x="20.36" y="655.5" ></text>
</g>
<g >
<title>seastar::logger::do_log (1 samples, 0.02%)</title><rect x="11.1" y="485" width="0.2" height="15.0" fill="rgb(222,183,50)" rx="2" ry="2" />
<text  x="14.12" y="495.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (6 samples, 0.11%)</title><rect x="685.8" y="549" width="1.3" height="15.0" fill="rgb(236,181,24)" rx="2" ry="2" />
<text  x="688.78" y="559.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (10 samples, 0.19%)</title><rect x="835.0" y="469" width="2.3" height="15.0" fill="rgb(235,50,52)" rx="2" ry="2" />
<text  x="838.04" y="479.5" ></text>
</g>
<g >
<title>allocation_strategy::destroy&lt;rows_entry&gt; (1 samples, 0.02%)</title><rect x="1134.0" y="277" width="0.2" height="15.0" fill="rgb(222,172,35)" rx="2" ry="2" />
<text  x="1137.00" y="287.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (1 samples, 0.02%)</title><rect x="54.8" y="309" width="0.3" height="15.0" fill="rgb(246,186,16)" rx="2" ry="2" />
<text  x="57.84" y="319.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (1 samples, 0.02%)</title><rect x="71.8" y="453" width="0.2" height="15.0" fill="rgb(214,113,3)" rx="2" ry="2" />
<text  x="74.80" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::allocate_large (1 samples, 0.02%)</title><rect x="1004.6" y="293" width="0.2" height="15.0" fill="rgb(228,42,6)" rx="2" ry="2" />
<text  x="1007.60" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.06%)</title><rect x="818.8" y="453" width="0.6" height="15.0" fill="rgb(229,147,25)" rx="2" ry="2" />
<text  x="821.75" y="463.5" ></text>
</g>
<g >
<title>cql3::restrictions::partition_key_restrictions::needs_filtering (6 samples, 0.11%)</title><rect x="638.9" y="549" width="1.4" height="15.0" fill="rgb(246,77,18)" rx="2" ry="2" />
<text  x="641.93" y="559.5" ></text>
</g>
<g >
<title>logalloc::segment_pool::refill_emergency_reserve (1 samples, 0.02%)</title><rect x="503.3" y="357" width="0.2" height="15.0" fill="rgb(234,71,52)" rx="2" ry="2" />
<text  x="506.28" y="367.5" ></text>
</g>
<g >
<title>utils::tuple_hash::operator (5 samples, 0.09%)</title><rect x="812.3" y="405" width="1.1" height="15.0" fill="rgb(250,35,10)" rx="2" ry="2" />
<text  x="815.28" y="415.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;service::digest_read_resolver&gt;::~shared_ptr_count_for (7 samples, 0.13%)</title><rect x="689.4" y="581" width="1.5" height="15.0" fill="rgb(246,222,15)" rx="2" ry="2" />
<text  x="692.35" y="591.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.02%)</title><rect x="554.8" y="405" width="0.2" height="15.0" fill="rgb(211,185,20)" rx="2" ry="2" />
<text  x="557.82" y="415.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;void&gt;::set_urgent_state (1 samples, 0.02%)</title><rect x="111.5" y="581" width="0.2" height="15.0" fill="rgb(206,180,30)" rx="2" ry="2" />
<text  x="114.51" y="591.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;,  (11 samples, 0.21%)</title><rect x="719.5" y="501" width="2.4" height="15.0" fill="rgb(235,148,51)" rx="2" ry="2" />
<text  x="722.47" y="511.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.06%)</title><rect x="577.6" y="485" width="0.6" height="15.0" fill="rgb(235,214,35)" rx="2" ry="2" />
<text  x="580.58" y="495.5" ></text>
</g>
<g >
<title>list_reader_selector::~list_reader_selector (4 samples, 0.08%)</title><rect x="570.4" y="469" width="0.9" height="15.0" fill="rgb(230,214,46)" rx="2" ry="2" />
<text  x="573.44" y="479.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::clear (13 samples, 0.25%)</title><rect x="399.1" y="309" width="2.9" height="15.0" fill="rgb(246,159,54)" rx="2" ry="2" />
<text  x="402.09" y="319.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (12 samples, 0.23%)</title><rect x="97.0" y="565" width="2.7" height="15.0" fill="rgb(217,96,21)" rx="2" ry="2" />
<text  x="100.01" y="575.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::move_it (10 samples, 0.19%)</title><rect x="672.8" y="565" width="2.3" height="15.0" fill="rgb(210,26,0)" rx="2" ry="2" />
<text  x="675.84" y="575.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, flat_mutation_reader, reader_concurrency_semaphore::inactive_read_handle&gt;::~_Variant_storage (4 samples, 0.08%)</title><rect x="578.7" y="517" width="0.9" height="15.0" fill="rgb(221,119,19)" rx="2" ry="2" />
<text  x="581.69" y="527.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (3 samples, 0.06%)</title><rect x="584.9" y="469" width="0.7" height="15.0" fill="rgb(214,203,20)" rx="2" ry="2" />
<text  x="587.94" y="479.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (1 samples, 0.02%)</title><rect x="17.1" y="629" width="0.3" height="15.0" fill="rgb(215,94,34)" rx="2" ry="2" />
<text  x="20.14" y="639.5" ></text>
</g>
<g >
<title>boost::algorithm::any_of&lt;std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;, std::_Bind_front&lt;bool  (4 samples, 0.08%)</title><rect x="853.3" y="469" width="0.9" height="15.0" fill="rgb(253,127,37)" rx="2" ry="2" />
<text  x="856.34" y="479.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, std::pair&lt;auth::role_or_anonymous, auth::resource&gt;&amp;&amp;, auth::permissions_cache::get (1 samples, 0.02%)</title><rect x="77.2" y="437" width="0.2" height="15.0" fill="rgb(251,213,54)" rx="2" ry="2" />
<text  x="80.15" y="447.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;flat_mutation_reader  (412 samples, 7.79%)</title><rect x="446.4" y="469" width="91.9" height="15.0" fill="rgb(222,79,53)" rx="2" ry="2" />
<text  x="449.39" y="479.5" >std::_Func..</text>
</g>
<g >
<title>std::operator+ (1 samples, 0.02%)</title><rect x="37.0" y="309" width="0.2" height="15.0" fill="rgb(237,94,31)" rx="2" ry="2" />
<text  x="40.00" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_clear (1 samples, 0.02%)</title><rect x="577.4" y="469" width="0.2" height="15.0" fill="rgb(224,3,11)" rx="2" ry="2" />
<text  x="580.35" y="479.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::initial_key_restrictions&lt;partition_key&gt;::merge_to (7 samples, 0.13%)</title><rect x="70.0" y="485" width="1.6" height="15.0" fill="rgb(244,159,43)" rx="2" ry="2" />
<text  x="73.02" y="495.5" ></text>
</g>
<g >
<title>mutation_partition::lower_bound (3 samples, 0.06%)</title><rect x="272.4" y="309" width="0.6" height="15.0" fill="rgb(250,164,28)" rx="2" ry="2" />
<text  x="275.37" y="319.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.04%)</title><rect x="981.8" y="389" width="0.5" height="15.0" fill="rgb(205,18,7)" rx="2" ry="2" />
<text  x="984.84" y="399.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::find (1 samples, 0.02%)</title><rect x="642.1" y="501" width="0.2" height="15.0" fill="rgb(242,84,1)" rx="2" ry="2" />
<text  x="645.06" y="511.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_cachedSize (1 samples, 0.02%)</title><rect x="38.6" y="373" width="0.2" height="15.0" fill="rgb(234,1,39)" rx="2" ry="2" />
<text  x="41.56" y="383.5" ></text>
</g>
<g >
<title>database::find_column_family (5 samples, 0.09%)</title><rect x="745.1" y="469" width="1.1" height="15.0" fill="rgb(249,62,8)" rx="2" ry="2" />
<text  x="748.13" y="479.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.02%)</title><rect x="216.1" y="229" width="0.3" height="15.0" fill="rgb(219,135,43)" rx="2" ry="2" />
<text  x="219.15" y="239.5" ></text>
</g>
<g >
<title>bytes_view_hasher::update (2 samples, 0.04%)</title><rect x="735.3" y="373" width="0.5" height="15.0" fill="rgb(248,140,40)" rx="2" ry="2" />
<text  x="738.31" y="383.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, fragmented_temporary_buffer::view, managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="887.0" y="373" width="0.2" height="15.0" fill="rgb(242,52,6)" rx="2" ry="2" />
<text  x="890.02" y="383.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::allocate_on (1 samples, 0.02%)</title><rect x="1120.8" y="277" width="0.3" height="15.0" fill="rgb(205,219,42)" rx="2" ry="2" />
<text  x="1123.84" y="287.5" ></text>
</g>
<g >
<title>reader_permit::signal (1 samples, 0.02%)</title><rect x="206.8" y="325" width="0.2" height="15.0" fill="rgb(250,124,0)" rx="2" ry="2" />
<text  x="209.78" y="335.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.04%)</title><rect x="817.2" y="533" width="0.4" height="15.0" fill="rgb(226,24,41)" rx="2" ry="2" />
<text  x="820.19" y="543.5" ></text>
</g>
<g >
<title>schema_registry_entry::get_schema (3 samples, 0.06%)</title><rect x="960.2" y="437" width="0.7" height="15.0" fill="rgb(250,214,37)" rx="2" ry="2" />
<text  x="963.20" y="447.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (1 samples, 0.02%)</title><rect x="320.6" y="469" width="0.2" height="15.0" fill="rgb(211,55,7)" rx="2" ry="2" />
<text  x="323.56" y="479.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (1 samples, 0.02%)</title><rect x="676.2" y="421" width="0.2" height="15.0" fill="rgb(231,27,18)" rx="2" ry="2" />
<text  x="679.19" y="431.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_M_reset (1 samples, 0.02%)</title><rect x="912.5" y="453" width="0.2" height="15.0" fill="rgb(216,173,28)" rx="2" ry="2" />
<text  x="915.46" y="463.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (1 samples, 0.02%)</title><rect x="877.9" y="405" width="0.2" height="15.0" fill="rgb(220,213,3)" rx="2" ry="2" />
<text  x="880.88" y="415.5" ></text>
</g>
<g >
<title>seastar::reactor::run_some_tasks (1 samples, 0.02%)</title><rect x="1167.7" y="629" width="0.2" height="15.0" fill="rgb(216,69,19)" rx="2" ry="2" />
<text  x="1170.69" y="639.5" ></text>
</g>
<g >
<title>absl::hash_internal::AbslHashValue&lt;absl::hash_internal::HashState&gt; (2 samples, 0.04%)</title><rect x="815.0" y="389" width="0.4" height="15.0" fill="rgb(206,140,7)" rx="2" ry="2" />
<text  x="817.96" y="399.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::get_value (1 samples, 0.02%)</title><rect x="707.6" y="597" width="0.3" height="15.0" fill="rgb(208,5,28)" rx="2" ry="2" />
<text  x="710.65" y="607.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (12 samples, 0.23%)</title><rect x="429.9" y="357" width="2.7" height="15.0" fill="rgb(232,217,20)" rx="2" ry="2" />
<text  x="432.88" y="367.5" ></text>
</g>
<g >
<title>fmt::v7::detail::buffer&lt;char&gt;::push_back (1 samples, 0.02%)</title><rect x="18.3" y="533" width="0.2" height="15.0" fill="rgb(250,25,43)" rx="2" ry="2" />
<text  x="21.25" y="543.5" ></text>
</g>
<g >
<title>logalloc::region_impl::free (1 samples, 0.02%)</title><rect x="1123.5" y="325" width="0.2" height="15.0" fill="rgb(210,107,8)" rx="2" ry="2" />
<text  x="1126.51" y="335.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (3 samples, 0.06%)</title><rect x="1038.1" y="389" width="0.6" height="15.0" fill="rgb(223,221,18)" rx="2" ry="2" />
<text  x="1041.07" y="399.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::needs_filtering (1 samples, 0.02%)</title><rect x="69.3" y="485" width="0.3" height="15.0" fill="rgb(231,17,16)" rx="2" ry="2" />
<text  x="72.35" y="495.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;reader_concurrency_semaphore::entry&gt; &gt;::destroy&lt;reader_concurrency_semaphore::entry&gt; (2 samples, 0.04%)</title><rect x="620.6" y="565" width="0.5" height="15.0" fill="rgb(212,158,8)" rx="2" ry="2" />
<text  x="623.64" y="575.5" ></text>
</g>
<g >
<title>seastar::internal::do_until_state&lt;seastar::posix_file_impl::list_directory (1 samples, 0.02%)</title><rect x="850.0" y="597" width="0.2" height="15.0" fill="rgb(220,6,11)" rx="2" ry="2" />
<text  x="852.99" y="607.5" ></text>
</g>
<g >
<title>std::vector&lt;antlr3::LexState&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::LexState&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.02%)</title><rect x="33.9" y="325" width="0.2" height="15.0" fill="rgb(252,160,47)" rx="2" ry="2" />
<text  x="36.87" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::allocate_large_and_trim (1 samples, 0.02%)</title><rect x="1004.6" y="277" width="0.2" height="15.0" fill="rgb(228,118,40)" rx="2" ry="2" />
<text  x="1007.60" y="287.5" ></text>
</g>
<g >
<title>ser::writer_of_qr_partition&lt;bytes_ostream&gt;::skip_key (3 samples, 0.06%)</title><rect x="348.0" y="261" width="0.7" height="15.0" fill="rgb(242,143,42)" rx="2" ry="2" />
<text  x="351.00" y="271.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="811.4" y="373" width="0.2" height="15.0" fill="rgb(207,119,21)" rx="2" ry="2" />
<text  x="814.39" y="383.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::with_permit (60 samples, 1.13%)</title><rect x="1005.0" y="341" width="13.4" height="15.0" fill="rgb(231,161,32)" rx="2" ry="2" />
<text  x="1008.05" y="351.5" ></text>
</g>
<g >
<title>query::querier_base::querier_base (1 samples, 0.02%)</title><rect x="141.4" y="517" width="0.2" height="15.0" fill="rgb(212,87,25)" rx="2" ry="2" />
<text  x="144.41" y="527.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::make_ready&lt; (1 samples, 0.02%)</title><rect x="697.6" y="517" width="0.2" height="15.0" fill="rgb(222,204,35)" rx="2" ry="2" />
<text  x="700.61" y="527.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.02%)</title><rect x="47.7" y="277" width="0.2" height="15.0" fill="rgb(214,21,20)" rx="2" ry="2" />
<text  x="50.70" y="287.5" ></text>
</g>
<g >
<title>write_cell&lt;ser::qr_clustered_row__cells__cells&lt;bytes_ostream&gt; &gt; (2 samples, 0.04%)</title><rect x="676.4" y="357" width="0.5" height="15.0" fill="rgb(207,169,49)" rx="2" ry="2" />
<text  x="679.41" y="367.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (4 samples, 0.08%)</title><rect x="53.3" y="261" width="0.9" height="15.0" fill="rgb(252,108,12)" rx="2" ry="2" />
<text  x="56.28" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="203.7" y="261" width="0.2" height="15.0" fill="rgb(216,29,6)" rx="2" ry="2" />
<text  x="206.65" y="271.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (66 samples, 1.25%)</title><rect x="21.4" y="469" width="14.7" height="15.0" fill="rgb(250,108,6)" rx="2" ry="2" />
<text  x="24.38" y="479.5" ></text>
</g>
<g >
<title>free (2 samples, 0.04%)</title><rect x="98.3" y="517" width="0.5" height="15.0" fill="rgb(207,206,22)" rx="2" ry="2" />
<text  x="101.35" y="527.5" ></text>
</g>
<g >
<title>_setjmp (1 samples, 0.02%)</title><rect x="621.1" y="581" width="0.2" height="15.0" fill="rgb(227,166,51)" rx="2" ry="2" />
<text  x="624.08" y="591.5" ></text>
</g>
<g >
<title>std::pair&lt;auth::role_or_anonymous, auth::resource&gt;::pair (5 samples, 0.09%)</title><rect x="781.3" y="309" width="1.1" height="15.0" fill="rgb(222,102,43)" rx="2" ry="2" />
<text  x="784.27" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="435.5" y="357" width="0.2" height="15.0" fill="rgb(236,205,13)" rx="2" ry="2" />
<text  x="438.46" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.02%)</title><rect x="967.3" y="357" width="0.3" height="15.0" fill="rgb(252,184,24)" rx="2" ry="2" />
<text  x="970.34" y="367.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_no_esft&lt;std::function&lt;flat_mutation_reader  (1 samples, 0.02%)</title><rect x="615.5" y="485" width="0.2" height="15.0" fill="rgb(243,218,14)" rx="2" ry="2" />
<text  x="618.51" y="495.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;managed_bytes const*, managed_bytes*&gt; (5 samples, 0.09%)</title><rect x="897.3" y="421" width="1.1" height="15.0" fill="rgb(215,91,48)" rx="2" ry="2" />
<text  x="900.29" y="431.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;query::read_command&gt;::dispose (8 samples, 0.15%)</title><rect x="99.7" y="565" width="1.8" height="15.0" fill="rgb(245,162,23)" rx="2" ry="2" />
<text  x="102.69" y="575.5" ></text>
</g>
<g >
<title>single_node_cql_env::make_query_state (54 samples, 1.02%)</title><rect x="825.2" y="533" width="12.1" height="15.0" fill="rgb(223,180,28)" rx="2" ry="2" />
<text  x="828.22" y="543.5" ></text>
</g>
<g >
<title>sstring_hash::operator (2 samples, 0.04%)</title><rect x="1043.4" y="389" width="0.5" height="15.0" fill="rgb(233,191,1)" rx="2" ry="2" />
<text  x="1046.42" y="399.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_istream (1 samples, 0.02%)</title><rect x="39.9" y="341" width="0.2" height="15.0" fill="rgb(218,222,1)" rx="2" ry="2" />
<text  x="42.90" y="351.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;std::unique_ptr&lt;char [], seastar::mmap_deleter&gt;  (1 samples, 0.02%)</title><rect x="1167.9" y="581" width="0.2" height="15.0" fill="rgb(243,10,40)" rx="2" ry="2" />
<text  x="1170.91" y="591.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;interval_bound&lt;dht::ring_position&gt;, false, false&gt;::_Optional_base (1 samples, 0.02%)</title><rect x="1024.0" y="373" width="0.2" height="15.0" fill="rgb(230,4,9)" rx="2" ry="2" />
<text  x="1027.01" y="383.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::pop_mutation_fragment (6 samples, 0.11%)</title><rect x="293.3" y="373" width="1.4" height="15.0" fill="rgb(241,47,7)" rx="2" ry="2" />
<text  x="296.34" y="383.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::fetch (1 samples, 0.02%)</title><rect x="852.4" y="565" width="0.3" height="15.0" fill="rgb(252,208,53)" rx="2" ry="2" />
<text  x="855.44" y="575.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::set_tokText (1 samples, 0.02%)</title><rect x="26.7" y="341" width="0.3" height="15.0" fill="rgb(205,59,16)" rx="2" ry="2" />
<text  x="29.73" y="351.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.02%)</title><rect x="40.6" y="213" width="0.2" height="15.0" fill="rgb(247,148,36)" rx="2" ry="2" />
<text  x="43.57" y="223.5" ></text>
</g>
<g >
<title>fmt::v7::detail::buffer&lt;char&gt;::push_back (3 samples, 0.06%)</title><rect x="18.7" y="565" width="0.7" height="15.0" fill="rgb(252,21,6)" rx="2" ry="2" />
<text  x="21.70" y="575.5" ></text>
</g>
<g >
<title>seastar::memory::allocate_anonymous_memory (1 samples, 0.02%)</title><rect x="1167.9" y="565" width="0.2" height="15.0" fill="rgb(223,61,54)" rx="2" ry="2" />
<text  x="1170.91" y="575.5" ></text>
</g>
<g >
<title>service::shared_mutation::shared_mutation (1 samples, 0.02%)</title><rect x="1130.9" y="293" width="0.2" height="15.0" fill="rgb(211,89,15)" rx="2" ry="2" />
<text  x="1133.88" y="303.5" ></text>
</g>
<g >
<title>db::schema_tables::calculate_schema_digest (1 samples, 0.02%)</title><rect x="17.1" y="453" width="0.3" height="15.0" fill="rgb(253,38,41)" rx="2" ry="2" />
<text  x="20.14" y="463.5" ></text>
</g>
<g >
<title>row::apply_monotonically (2 samples, 0.04%)</title><rect x="16.0" y="581" width="0.5" height="15.0" fill="rgb(246,180,6)" rx="2" ry="2" />
<text  x="19.02" y="591.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (3 samples, 0.06%)</title><rect x="949.3" y="437" width="0.6" height="15.0" fill="rgb(238,130,43)" rx="2" ry="2" />
<text  x="952.27" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="59.8" y="421" width="0.2" height="15.0" fill="rgb(232,4,45)" rx="2" ry="2" />
<text  x="62.75" y="431.5" ></text>
</g>
<g >
<title>std::apply&lt;row_cache::do_update (1 samples, 0.02%)</title><rect x="1134.0" y="517" width="0.2" height="15.0" fill="rgb(239,213,32)" rx="2" ry="2" />
<text  x="1137.00" y="527.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.04%)</title><rect x="506.2" y="293" width="0.4" height="15.0" fill="rgb(247,161,2)" rx="2" ry="2" />
<text  x="509.18" y="303.5" ></text>
</g>
<g >
<title>service::client_state::get_timestamp (2 samples, 0.04%)</title><rect x="1107.7" y="517" width="0.4" height="15.0" fill="rgb(246,5,37)" rx="2" ry="2" />
<text  x="1110.67" y="527.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (1 samples, 0.02%)</title><rect x="803.4" y="373" width="0.2" height="15.0" fill="rgb(245,142,7)" rx="2" ry="2" />
<text  x="806.36" y="383.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;column_definition const*, std::pair&lt;column_definition const* const, cql3::expr::expression&gt;, std::allocator&lt;std::pair&lt;column_definition const* const, cql3::expr::expression&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;column_definition const*&gt;, std::hash&lt;column_definition const*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::~_Hashtable (1 samples, 0.02%)</title><rect x="72.0" y="485" width="0.2" height="15.0" fill="rgb(243,11,11)" rx="2" ry="2" />
<text  x="75.02" y="495.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::operator== (10 samples, 0.19%)</title><rect x="783.9" y="229" width="2.3" height="15.0" fill="rgb(212,112,32)" rx="2" ry="2" />
<text  x="786.95" y="239.5" ></text>
</g>
<g >
<title>utils::phased_barrier::operation::~operation (1 samples, 0.02%)</title><rect x="105.3" y="581" width="0.2" height="15.0" fill="rgb(239,219,26)" rx="2" ry="2" />
<text  x="108.27" y="591.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::digest_read_result&gt;::clear (1 samples, 0.02%)</title><rect x="689.8" y="565" width="0.2" height="15.0" fill="rgb(216,9,48)" rx="2" ry="2" />
<text  x="692.80" y="575.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;std::pair&lt;seastar::shared_ptr&lt;service::abstract_read_executor&gt;, nonwrapping_interval&lt;dht::token&gt; &gt;, 1ul&gt;::clear (17 samples, 0.32%)</title><rect x="1161.0" y="565" width="3.8" height="15.0" fill="rgb(214,25,41)" rx="2" ry="2" />
<text  x="1164.00" y="575.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.02%)</title><rect x="37.7" y="421" width="0.2" height="15.0" fill="rgb(239,94,50)" rx="2" ry="2" />
<text  x="40.66" y="431.5" ></text>
</g>
<g >
<title>seastar::future&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry_ptr&gt;::then_impl&lt;utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (10 samples, 0.19%)</title><rect x="729.3" y="469" width="2.2" height="15.0" fill="rgb(222,177,3)" rx="2" ry="2" />
<text  x="732.29" y="479.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (2 samples, 0.04%)</title><rect x="1147.2" y="501" width="0.4" height="15.0" fill="rgb(207,6,44)" rx="2" ry="2" />
<text  x="1150.16" y="511.5" ></text>
</g>
<g >
<title>tracing::global_trace_state_ptr::get (1 samples, 0.02%)</title><rect x="1030.5" y="389" width="0.2" height="15.0" fill="rgb(218,18,26)" rx="2" ry="2" />
<text  x="1033.48" y="399.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (1 samples, 0.02%)</title><rect x="672.6" y="565" width="0.2" height="15.0" fill="rgb(239,30,23)" rx="2" ry="2" />
<text  x="675.62" y="575.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (2 samples, 0.04%)</title><rect x="39.2" y="405" width="0.5" height="15.0" fill="rgb(220,177,11)" rx="2" ry="2" />
<text  x="42.23" y="415.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_emplace&lt;nonwrapping_interval&lt;dht::token&gt;, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; (25 samples, 0.47%)</title><rect x="1149.2" y="565" width="5.5" height="15.0" fill="rgb(205,94,24)" rx="2" ry="2" />
<text  x="1152.17" y="575.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.04%)</title><rect x="602.6" y="501" width="0.4" height="15.0" fill="rgb(208,221,29)" rx="2" ry="2" />
<text  x="605.57" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, unsigned int, std::_Identity&lt;unsigned int&gt;, std::less&lt;unsigned int&gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;unsigned int&gt; &gt;::find (3 samples, 0.06%)</title><rect x="35.4" y="389" width="0.7" height="15.0" fill="rgb(206,123,22)" rx="2" ry="2" />
<text  x="38.43" y="399.5" ></text>
</g>
<g >
<title>schema_registry::learn (4 samples, 0.08%)</title><rect x="106.8" y="565" width="0.9" height="15.0" fill="rgb(245,92,37)" rx="2" ry="2" />
<text  x="109.83" y="575.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (1 samples, 0.02%)</title><rect x="16.9" y="629" width="0.2" height="15.0" fill="rgb(240,215,38)" rx="2" ry="2" />
<text  x="19.92" y="639.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::guard (2 samples, 0.04%)</title><rect x="500.8" y="357" width="0.5" height="15.0" fill="rgb(223,190,0)" rx="2" ry="2" />
<text  x="503.83" y="367.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_M_set_node (1 samples, 0.02%)</title><rect x="40.1" y="245" width="0.2" height="15.0" fill="rgb(225,54,10)" rx="2" ry="2" />
<text  x="43.12" y="255.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::invoke&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (48 samples, 0.91%)</title><rect x="307.6" y="437" width="10.7" height="15.0" fill="rgb(237,50,54)" rx="2" ry="2" />
<text  x="310.62" y="447.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="1012.4" y="277" width="0.2" height="15.0" fill="rgb(237,36,21)" rx="2" ry="2" />
<text  x="1015.41" y="287.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (3 samples, 0.06%)</title><rect x="787.5" y="213" width="0.7" height="15.0" fill="rgb(221,74,51)" rx="2" ry="2" />
<text  x="790.52" y="223.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;service::digest_read_resolver&gt;::shared_ptr_count_for&lt;seastar::lw_shared_ptr&lt;schema const&gt;&amp;, db::consistency_level&amp;, unsigned long&amp;, unsigned long, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;&amp;&gt; (11 samples, 0.21%)</title><rect x="973.4" y="421" width="2.4" height="15.0" fill="rgb(248,1,12)" rx="2" ry="2" />
<text  x="976.37" y="431.5" ></text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt;&amp;&gt; (1 samples, 0.02%)</title><rect x="1039.4" y="405" width="0.2" height="15.0" fill="rgb(230,64,27)" rx="2" ry="2" />
<text  x="1042.40" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (1 samples, 0.02%)</title><rect x="371.0" y="277" width="0.2" height="15.0" fill="rgb(243,2,15)" rx="2" ry="2" />
<text  x="373.98" y="287.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::operator (9 samples, 0.17%)</title><rect x="301.2" y="421" width="2.0" height="15.0" fill="rgb(214,25,25)" rx="2" ry="2" />
<text  x="304.15" y="431.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="584.7" y="469" width="0.2" height="15.0" fill="rgb(246,119,0)" rx="2" ry="2" />
<text  x="587.72" y="479.5" ></text>
</g>
<g >
<title>allocation_strategy::destroy&lt;rows_entry&gt; (1 samples, 0.02%)</title><rect x="1137.3" y="405" width="0.3" height="15.0" fill="rgb(252,106,9)" rx="2" ry="2" />
<text  x="1140.35" y="415.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (4 samples, 0.08%)</title><rect x="520.2" y="421" width="0.9" height="15.0" fill="rgb(251,95,41)" rx="2" ry="2" />
<text  x="523.24" y="431.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (4 samples, 0.08%)</title><rect x="600.8" y="533" width="0.9" height="15.0" fill="rgb(218,15,22)" rx="2" ry="2" />
<text  x="603.78" y="543.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (2 samples, 0.04%)</title><rect x="927.9" y="405" width="0.4" height="15.0" fill="rgb(212,179,7)" rx="2" ry="2" />
<text  x="930.85" y="415.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;seastar::future&lt;void&gt; &gt;  (1 samples, 0.02%)</title><rect x="1165.9" y="581" width="0.2" height="15.0" fill="rgb(244,95,34)" rx="2" ry="2" />
<text  x="1168.90" y="591.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_read_executor (208 samples, 3.93%)</title><rect x="1031.8" y="453" width="46.4" height="15.0" fill="rgb(212,225,46)" rx="2" ry="2" />
<text  x="1034.82" y="463.5" >serv..</text>
</g>
<g >
<title>global_schema_ptr::global_schema_ptr (3 samples, 0.06%)</title><rect x="987.4" y="373" width="0.7" height="15.0" fill="rgb(210,104,3)" rx="2" ry="2" />
<text  x="990.42" y="383.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (13 samples, 0.25%)</title><rect x="1129.3" y="341" width="2.9" height="15.0" fill="rgb(210,104,2)" rx="2" ry="2" />
<text  x="1132.32" y="351.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;flat_mutation_reader  (1 samples, 0.02%)</title><rect x="600.3" y="501" width="0.3" height="15.0" fill="rgb(230,111,39)" rx="2" ry="2" />
<text  x="603.33" y="511.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.06%)</title><rect x="254.3" y="261" width="0.7" height="15.0" fill="rgb(224,160,39)" rx="2" ry="2" />
<text  x="257.30" y="271.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;auth::role_or_anonymous&gt;, seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (4 samples, 0.08%)</title><rect x="796.7" y="389" width="0.9" height="15.0" fill="rgb(236,0,9)" rx="2" ry="2" />
<text  x="799.67" y="399.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::~_Variant_storage (3 samples, 0.06%)</title><rect x="351.6" y="277" width="0.6" height="15.0" fill="rgb(211,113,14)" rx="2" ry="2" />
<text  x="354.57" y="287.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::raw::use_statement, std::default_delete&lt;cql3::statements::raw::use_statement&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::statements::raw::use_statement&gt;, void&gt; (1 samples, 0.02%)</title><rect x="64.0" y="485" width="0.2" height="15.0" fill="rgb(243,16,50)" rx="2" ry="2" />
<text  x="66.99" y="495.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;auth::resource&gt;::_M_reset (2 samples, 0.04%)</title><rect x="799.6" y="389" width="0.4" height="15.0" fill="rgb(214,104,19)" rx="2" ry="2" />
<text  x="802.57" y="399.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getText[abi:cxx11] (1 samples, 0.02%)</title><rect x="52.2" y="357" width="0.2" height="15.0" fill="rgb(245,11,27)" rx="2" ry="2" />
<text  x="55.17" y="367.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (1 samples, 0.02%)</title><rect x="677.3" y="565" width="0.2" height="15.0" fill="rgb(237,1,34)" rx="2" ry="2" />
<text  x="680.31" y="575.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;service::storage_proxy_coordinator_query_result&gt;::set_urgent_state (1 samples, 0.02%)</title><rect x="851.3" y="597" width="0.3" height="15.0" fill="rgb(211,212,50)" rx="2" ry="2" />
<text  x="854.33" y="607.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::pop_front (1 samples, 0.02%)</title><rect x="135.6" y="517" width="0.2" height="15.0" fill="rgb(248,155,38)" rx="2" ry="2" />
<text  x="138.61" y="527.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take (3 samples, 0.06%)</title><rect x="136.7" y="549" width="0.7" height="15.0" fill="rgb(238,59,10)" rx="2" ry="2" />
<text  x="139.72" y="559.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (1,132 samples, 21.40%)</title><rect x="864.3" y="565" width="252.5" height="15.0" fill="rgb(224,142,26)" rx="2" ry="2" />
<text  x="867.27" y="575.5" >seastar::noncopyable_function&lt;sea..</text>
</g>
<g >
<title>ser::serializer&lt;ser::mutation_partition_view&gt;::read&lt;seastar::memory_input_stream&lt;bytes_ostream::fragment_iterator&gt; &gt; (1 samples, 0.02%)</title><rect x="1124.2" y="341" width="0.2" height="15.0" fill="rgb(227,67,2)" rx="2" ry="2" />
<text  x="1127.18" y="351.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::statement_restrictions (22 samples, 0.42%)</title><rect x="68.0" y="501" width="4.9" height="15.0" fill="rgb(247,123,39)" rx="2" ry="2" />
<text  x="71.01" y="511.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.09%)</title><rect x="281.1" y="277" width="1.1" height="15.0" fill="rgb(222,217,8)" rx="2" ry="2" />
<text  x="284.07" y="287.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (1 samples, 0.02%)</title><rect x="807.6" y="405" width="0.2" height="15.0" fill="rgb(242,58,44)" rx="2" ry="2" />
<text  x="810.60" y="415.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.02%)</title><rect x="41.9" y="277" width="0.2" height="15.0" fill="rgb(241,101,23)" rx="2" ry="2" />
<text  x="44.90" y="287.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;11ul, cql3::expr::untyped_constant&gt; (3 samples, 0.06%)</title><rect x="51.5" y="277" width="0.7" height="15.0" fill="rgb(246,32,33)" rx="2" ry="2" />
<text  x="54.50" y="287.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.04%)</title><rect x="435.0" y="357" width="0.5" height="15.0" fill="rgb(226,92,20)" rx="2" ry="2" />
<text  x="438.01" y="367.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (1 samples, 0.02%)</title><rect x="76.9" y="357" width="0.3" height="15.0" fill="rgb(223,77,52)" rx="2" ry="2" />
<text  x="79.93" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;seastar::shared_ptr&lt;cql3::operation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::operation&gt; &gt; &gt;::emplace_back&lt;seastar::shared_ptr&lt;cql3::operation&gt; &gt; (2 samples, 0.04%)</title><rect x="67.3" y="501" width="0.5" height="15.0" fill="rgb(219,218,14)" rx="2" ry="2" />
<text  x="70.34" y="511.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.06%)</title><rect x="254.3" y="245" width="0.7" height="15.0" fill="rgb(236,214,37)" rx="2" ry="2" />
<text  x="257.30" y="255.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::drop_view_statement, std::default_delete&lt;cql3::statements::drop_view_statement&gt; &gt;::~unique_ptr (2 samples, 0.04%)</title><rect x="61.5" y="469" width="0.5" height="15.0" fill="rgb(208,224,17)" rx="2" ry="2" />
<text  x="64.54" y="479.5" ></text>
</g>
<g >
<title>std::tuple&lt;cql3::operation::raw_update*, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;::tuple (1 samples, 0.02%)</title><rect x="46.6" y="261" width="0.2" height="15.0" fill="rgb(238,151,21)" rx="2" ry="2" />
<text  x="49.59" y="271.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::alloc (1 samples, 0.02%)</title><rect x="858.0" y="325" width="0.2" height="15.0" fill="rgb(234,156,45)" rx="2" ry="2" />
<text  x="861.02" y="335.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (1 samples, 0.02%)</title><rect x="11.1" y="565" width="0.2" height="15.0" fill="rgb(218,7,37)" rx="2" ry="2" />
<text  x="14.12" y="575.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.02%)</title><rect x="24.7" y="293" width="0.2" height="15.0" fill="rgb(245,153,23)" rx="2" ry="2" />
<text  x="27.72" y="303.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::has_slice_or_needs_filtering (4 samples, 0.08%)</title><rect x="638.9" y="517" width="0.9" height="15.0" fill="rgb(221,227,12)" rx="2" ry="2" />
<text  x="641.93" y="527.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="67.6" y="469" width="0.2" height="15.0" fill="rgb(245,159,11)" rx="2" ry="2" />
<text  x="70.56" y="479.5" ></text>
</g>
<g >
<title>antlr3::IntStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::index (1 samples, 0.02%)</title><rect x="27.2" y="325" width="0.2" height="15.0" fill="rgb(249,181,43)" rx="2" ry="2" />
<text  x="30.18" y="335.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.02%)</title><rect x="37.0" y="293" width="0.2" height="15.0" fill="rgb(245,15,47)" rx="2" ry="2" />
<text  x="40.00" y="303.5" ></text>
</g>
<g >
<title>cql3::restrictions::(anonymous namespace)::range_from_bytes (82 samples, 1.55%)</title><rect x="900.0" y="501" width="18.3" height="15.0" fill="rgb(211,120,18)" rx="2" ry="2" />
<text  x="902.96" y="511.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::_M_create_storage (6 samples, 0.11%)</title><rect x="923.2" y="485" width="1.3" height="15.0" fill="rgb(221,122,19)" rx="2" ry="2" />
<text  x="926.17" y="495.5" ></text>
</g>
<g >
<title>cql3::raw_value::make_value (15 samples, 0.28%)</title><rect x="883.5" y="373" width="3.3" height="15.0" fill="rgb(239,76,10)" rx="2" ry="2" />
<text  x="886.45" y="383.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt;, true, true&gt;::__uniq_ptr_data (1 samples, 0.02%)</title><rect x="46.6" y="293" width="0.2" height="15.0" fill="rgb(223,183,25)" rx="2" ry="2" />
<text  x="49.59" y="303.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.02%)</title><rect x="39.7" y="277" width="0.2" height="15.0" fill="rgb(218,194,15)" rx="2" ry="2" />
<text  x="42.67" y="287.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::~_Variant_storage (2 samples, 0.04%)</title><rect x="436.6" y="341" width="0.4" height="15.0" fill="rgb(217,107,11)" rx="2" ry="2" />
<text  x="439.58" y="351.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_Optional_payload_base (2 samples, 0.04%)</title><rect x="606.1" y="517" width="0.5" height="15.0" fill="rgb(247,44,25)" rx="2" ry="2" />
<text  x="609.14" y="527.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::move_it (1 samples, 0.02%)</title><rect x="962.0" y="453" width="0.2" height="15.0" fill="rgb(232,133,25)" rx="2" ry="2" />
<text  x="964.99" y="463.5" ></text>
</g>
<g >
<title>schema_registry_entry::get_schema (1 samples, 0.02%)</title><rect x="107.5" y="533" width="0.2" height="15.0" fill="rgb(254,105,0)" rx="2" ry="2" />
<text  x="110.50" y="543.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;mutation_reader_merger::reader_and_last_fragment_kind*, mutation_reader_merger::prepare_next (1 samples, 0.02%)</title><rect x="297.1" y="405" width="0.3" height="15.0" fill="rgb(254,209,41)" rx="2" ry="2" />
<text  x="300.14" y="415.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_M_set_node (1 samples, 0.02%)</title><rect x="43.5" y="229" width="0.2" height="15.0" fill="rgb(241,165,19)" rx="2" ry="2" />
<text  x="46.47" y="239.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (4 samples, 0.08%)</title><rect x="53.3" y="197" width="0.9" height="15.0" fill="rgb(238,147,21)" rx="2" ry="2" />
<text  x="56.28" y="207.5" ></text>
</g>
<g >
<title>basic_atomic_cell_view&lt; (18 samples, 0.34%)</title><rect x="382.8" y="261" width="4.0" height="15.0" fill="rgb(223,227,16)" rx="2" ry="2" />
<text  x="385.81" y="271.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::set&lt;&gt; (2 samples, 0.04%)</title><rect x="697.8" y="501" width="0.5" height="15.0" fill="rgb(214,189,16)" rx="2" ry="2" />
<text  x="700.83" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt;::_M_realloc_insert&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; (8 samples, 0.15%)</title><rect x="280.6" y="293" width="1.8" height="15.0" fill="rgb(224,150,18)" rx="2" ry="2" />
<text  x="283.63" y="303.5" ></text>
</g>
<g >
<title>mutation_partition::clustered_row (1 samples, 0.02%)</title><rect x="106.8" y="453" width="0.3" height="15.0" fill="rgb(253,13,35)" rx="2" ry="2" />
<text  x="109.83" y="463.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="1100.3" y="501" width="0.2" height="15.0" fill="rgb(210,118,7)" rx="2" ry="2" />
<text  x="1103.31" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt;::emplace_back&lt;seastar::lw_shared_ptr&lt;schema const&gt; const&amp;, partition_key const&gt; (1 samples, 0.02%)</title><rect x="859.1" y="453" width="0.3" height="15.0" fill="rgb(213,219,45)" rx="2" ry="2" />
<text  x="862.14" y="463.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::untyped_constant&gt; (8 samples, 0.15%)</title><rect x="50.4" y="357" width="1.8" height="15.0" fill="rgb(236,55,10)" rx="2" ry="2" />
<text  x="53.38" y="367.5" ></text>
</g>
<g >
<title>mutation::mutation (1 samples, 0.02%)</title><rect x="859.1" y="421" width="0.3" height="15.0" fill="rgb(241,46,0)" rx="2" ry="2" />
<text  x="862.14" y="431.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="1099.9" y="517" width="0.2" height="15.0" fill="rgb(223,25,15)" rx="2" ry="2" />
<text  x="1102.87" y="527.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.02%)</title><rect x="47.5" y="229" width="0.2" height="15.0" fill="rgb(225,117,42)" rx="2" ry="2" />
<text  x="50.48" y="239.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (3 samples, 0.06%)</title><rect x="47.5" y="373" width="0.7" height="15.0" fill="rgb(247,19,41)" rx="2" ry="2" />
<text  x="50.48" y="383.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::digest_read_resolver&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="963.1" y="453" width="0.2" height="15.0" fill="rgb(227,58,40)" rx="2" ry="2" />
<text  x="966.10" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="899.7" y="469" width="0.3" height="15.0" fill="rgb(211,60,48)" rx="2" ry="2" />
<text  x="902.74" y="479.5" ></text>
</g>
<g >
<title>managed_bytes::operator= (2 samples, 0.04%)</title><rect x="327.7" y="357" width="0.4" height="15.0" fill="rgb(219,201,31)" rx="2" ry="2" />
<text  x="330.70" y="367.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (4 samples, 0.08%)</title><rect x="43.2" y="325" width="0.9" height="15.0" fill="rgb(246,39,46)" rx="2" ry="2" />
<text  x="46.24" y="335.5" ></text>
</g>
<g >
<title>double_decker&lt;long, cache_entry, dht::raw_token_less_comparator, dht::ring_position_comparator, 16,  (1 samples, 0.02%)</title><rect x="141.4" y="405" width="0.2" height="15.0" fill="rgb(239,187,45)" rx="2" ry="2" />
<text  x="144.41" y="415.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::clone (1 samples, 0.02%)</title><rect x="469.8" y="421" width="0.2" height="15.0" fill="rgb(221,54,33)" rx="2" ry="2" />
<text  x="472.82" y="431.5" ></text>
</g>
<g >
<title>read_simple&lt;unsigned short, managed_bytes_basic_view&lt; (2 samples, 0.04%)</title><rect x="488.6" y="293" width="0.4" height="15.0" fill="rgb(211,104,14)" rx="2" ry="2" />
<text  x="491.56" y="303.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (4 samples, 0.08%)</title><rect x="53.3" y="325" width="0.9" height="15.0" fill="rgb(208,213,15)" rx="2" ry="2" />
<text  x="56.28" y="335.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS4_12restrictionsL11has_eq_nullERKNS4_13query_optionsERKNS5_10expressionEE3$_8EES8_SI_T_EUlRS7_E_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_8constantEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_11conjunctionEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_12column_valueEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_5tokenEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_13function_callEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_4castEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_15field_selectionEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_4nullEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_13bind_variableEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_16untyped_constantEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_17tuple_constructorEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_22collection_constructorEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSR_S6_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_S1V_SN_S1Z_S23_S27_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES2C_S2F_ (1 samples, 0.02%)</title><rect x="853.8" y="421" width="0.2" height="15.0" fill="rgb(205,53,53)" rx="2" ry="2" />
<text  x="856.78" y="431.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::on_new_range (65 samples, 1.23%)</title><rect x="270.1" y="357" width="14.5" height="15.0" fill="rgb(210,11,16)" rx="2" ry="2" />
<text  x="273.14" y="367.5" ></text>
</g>
<g >
<title>cql3::operation::set_value::set_value (1 samples, 0.02%)</title><rect x="56.9" y="389" width="0.2" height="15.0" fill="rgb(223,80,26)" rx="2" ry="2" />
<text  x="59.85" y="399.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;, true&gt;::make&lt;seastar::lw_shared_ptr&lt;schema const&gt;&amp;, bool const&amp;&gt; (1 samples, 0.02%)</title><rect x="71.4" y="453" width="0.2" height="15.0" fill="rgb(228,72,1)" rx="2" ry="2" />
<text  x="74.35" y="463.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.02%)</title><rect x="43.5" y="213" width="0.2" height="15.0" fill="rgb(240,51,5)" rx="2" ry="2" />
<text  x="46.47" y="223.5" ></text>
</g>
<g >
<title>ser::serializer&lt;std::chrono::time_point&lt;gc_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt; &gt; &gt;::write&lt;bytes_ostream&gt; (1 samples, 0.02%)</title><rect x="1130.4" y="261" width="0.3" height="15.0" fill="rgb(247,125,25)" rx="2" ry="2" />
<text  x="1133.43" y="271.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate (1 samples, 0.02%)</title><rect x="879.2" y="405" width="0.2" height="15.0" fill="rgb(252,31,29)" rx="2" ry="2" />
<text  x="882.22" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (2 samples, 0.04%)</title><rect x="1111.9" y="517" width="0.5" height="15.0" fill="rgb(238,13,38)" rx="2" ry="2" />
<text  x="1114.91" y="527.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (3 samples, 0.06%)</title><rect x="54.2" y="261" width="0.6" height="15.0" fill="rgb(233,132,9)" rx="2" ry="2" />
<text  x="57.17" y="271.5" ></text>
</g>
<g >
<title>multishard_combining_reader::handle_empty_reader_buffer (1 samples, 0.02%)</title><rect x="105.9" y="341" width="0.3" height="15.0" fill="rgb(220,105,45)" rx="2" ry="2" />
<text  x="108.93" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::_M_range_initialize&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; const*&gt; (12 samples, 0.23%)</title><rect x="1090.9" y="469" width="2.7" height="15.0" fill="rgb(221,139,41)" rx="2" ry="2" />
<text  x="1093.94" y="479.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_state&lt;std::tuple&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt; &gt;, seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (9 samples, 0.17%)</title><rect x="775.5" y="341" width="2.0" height="15.0" fill="rgb(250,97,54)" rx="2" ry="2" />
<text  x="778.47" y="351.5" ></text>
</g>
<g >
<title>compound_type&lt; (1 samples, 0.02%)</title><rect x="854.7" y="421" width="0.2" height="15.0" fill="rgb(218,174,53)" rx="2" ry="2" />
<text  x="857.67" y="431.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::unique_ptr (1 samples, 0.02%)</title><rect x="56.9" y="357" width="0.2" height="15.0" fill="rgb(212,7,48)" rx="2" ry="2" />
<text  x="59.85" y="367.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_prepared (60 samples, 1.13%)</title><rect x="726.4" y="517" width="13.4" height="15.0" fill="rgb(233,81,52)" rx="2" ry="2" />
<text  x="729.39" y="527.5" ></text>
</g>
<g >
<title>global_schema_ptr::global_schema_ptr (1 samples, 0.02%)</title><rect x="1128.2" y="277" width="0.2" height="15.0" fill="rgb(217,173,39)" rx="2" ry="2" />
<text  x="1131.20" y="287.5" ></text>
</g>
<g >
<title>utils::timed_rate_moving_average_and_histogram::mark (3 samples, 0.06%)</title><rect x="617.1" y="533" width="0.6" height="15.0" fill="rgb(211,192,4)" rx="2" ry="2" />
<text  x="620.07" y="543.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.08%)</title><rect x="204.1" y="293" width="0.9" height="15.0" fill="rgb(228,36,28)" rx="2" ry="2" />
<text  x="207.10" y="303.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="855.1" y="373" width="0.2" height="15.0" fill="rgb(217,10,8)" rx="2" ry="2" />
<text  x="858.12" y="383.5" ></text>
</g>
<g >
<title>dht::murmur3_partitioner::get_token (42 samples, 0.79%)</title><rect x="901.7" y="485" width="9.4" height="15.0" fill="rgb(212,100,4)" rx="2" ry="2" />
<text  x="904.75" y="495.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;clustering_key_prefix&gt;::_M_reset (1 samples, 0.02%)</title><rect x="323.0" y="453" width="0.2" height="15.0" fill="rgb(252,42,7)" rx="2" ry="2" />
<text  x="326.02" y="463.5" ></text>
</g>
<g >
<title>seastar::async&lt;sstables::compaction::run&lt;noop_compacted_fragments_consumer&gt; (1 samples, 0.02%)</title><rect x="1133.8" y="517" width="0.2" height="15.0" fill="rgb(216,202,42)" rx="2" ry="2" />
<text  x="1136.78" y="527.5" ></text>
</g>
<g >
<title>seastar::future_state_base::any::operator= (2 samples, 0.04%)</title><rect x="849.1" y="565" width="0.4" height="15.0" fill="rgb(248,179,7)" rx="2" ry="2" />
<text  x="852.10" y="575.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (2 samples, 0.04%)</title><rect x="623.8" y="581" width="0.4" height="15.0" fill="rgb(225,183,38)" rx="2" ry="2" />
<text  x="626.76" y="591.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.02%)</title><rect x="24.9" y="325" width="0.3" height="15.0" fill="rgb(220,37,50)" rx="2" ry="2" />
<text  x="27.95" y="335.5" ></text>
</g>
<g >
<title>dht::murmur3_partitioner::get_token (2 samples, 0.04%)</title><rect x="918.3" y="501" width="0.4" height="15.0" fill="rgb(243,77,10)" rx="2" ry="2" />
<text  x="921.26" y="511.5" ></text>
</g>
<g >
<title>db::schema_tables::make_create_table_mutations (1 samples, 0.02%)</title><rect x="677.1" y="373" width="0.2" height="15.0" fill="rgb(229,56,5)" rx="2" ry="2" />
<text  x="680.08" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::swap (1 samples, 0.02%)</title><rect x="1189.8" y="725" width="0.2" height="15.0" fill="rgb(215,35,35)" rx="2" ry="2" />
<text  x="1192.78" y="735.5" ></text>
</g>
<g >
<title>__tls_init (1 samples, 0.02%)</title><rect x="503.1" y="325" width="0.2" height="15.0" fill="rgb(228,208,35)" rx="2" ry="2" />
<text  x="506.06" y="335.5" ></text>
</g>
<g >
<title>siglongjmp@GLIBC_2.2.5 (1 samples, 0.02%)</title><rect x="17.6" y="597" width="0.2" height="15.0" fill="rgb(238,65,41)" rx="2" ry="2" />
<text  x="20.59" y="607.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::execute (56 samples, 1.06%)</title><rect x="678.4" y="597" width="12.5" height="15.0" fill="rgb(254,208,46)" rx="2" ry="2" />
<text  x="681.42" y="607.5" ></text>
</g>
<g >
<title>abstract_type::without_reversed (1 samples, 0.02%)</title><rect x="874.3" y="501" width="0.2" height="15.0" fill="rgb(228,26,48)" rx="2" ry="2" />
<text  x="877.31" y="511.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.02%)</title><rect x="37.0" y="325" width="0.2" height="15.0" fill="rgb(222,150,27)" rx="2" ry="2" />
<text  x="40.00" y="335.5" ></text>
</g>
<g >
<title>query::result::builder::add_partition (17 samples, 0.32%)</title><rect x="346.0" y="277" width="3.8" height="15.0" fill="rgb(225,53,6)" rx="2" ry="2" />
<text  x="349.00" y="287.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (1 samples, 0.02%)</title><rect x="1165.2" y="389" width="0.3" height="15.0" fill="rgb(212,224,31)" rx="2" ry="2" />
<text  x="1168.24" y="399.5" ></text>
</g>
<g >
<title>basic_atomic_cell_view&lt; (1 samples, 0.02%)</title><rect x="405.1" y="277" width="0.2" height="15.0" fill="rgb(209,161,20)" rx="2" ry="2" />
<text  x="408.12" y="287.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.02%)</title><rect x="37.9" y="373" width="0.2" height="15.0" fill="rgb(238,189,20)" rx="2" ry="2" />
<text  x="40.89" y="383.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (5 samples, 0.09%)</title><rect x="673.3" y="533" width="1.1" height="15.0" fill="rgb(252,196,16)" rx="2" ry="2" />
<text  x="676.29" y="543.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.02%)</title><rect x="16.9" y="597" width="0.2" height="15.0" fill="rgb(210,63,46)" rx="2" ry="2" />
<text  x="19.92" y="607.5" ></text>
</g>
<g >
<title>std::__lower_bound&lt;__gnu_cxx::__normal_iterator&lt;dht::token const*, std::vector&lt;dht::token, std::allocator&lt;dht::token&gt; &gt; &gt;, dht::token, __gnu_cxx::__ops::_Iter_less_val&gt; (1 samples, 0.02%)</title><rect x="1067.1" y="357" width="0.2" height="15.0" fill="rgb(247,181,43)" rx="2" ry="2" />
<text  x="1070.07" y="367.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (43 samples, 0.81%)</title><rect x="728.4" y="485" width="9.6" height="15.0" fill="rgb(254,1,21)" rx="2" ry="2" />
<text  x="731.40" y="495.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::on_new_range (1 samples, 0.02%)</title><rect x="80.3" y="405" width="0.2" height="15.0" fill="rgb(232,94,35)" rx="2" ry="2" />
<text  x="83.28" y="415.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (12 samples, 0.23%)</title><rect x="1078.7" y="453" width="2.6" height="15.0" fill="rgb(222,188,13)" rx="2" ry="2" />
<text  x="1081.67" y="463.5" ></text>
</g>
<g >
<title>std::default_delete&lt;bytes_ostream::chunk&gt;::operator (2 samples, 0.04%)</title><rect x="99.2" y="517" width="0.5" height="15.0" fill="rgb(240,194,51)" rx="2" ry="2" />
<text  x="102.24" y="527.5" ></text>
</g>
<g >
<title>row::apply_monotonically (3 samples, 0.06%)</title><rect x="857.8" y="389" width="0.7" height="15.0" fill="rgb(219,166,28)" rx="2" ry="2" />
<text  x="860.80" y="399.5" ></text>
</g>
<g >
<title>std::construct_at&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (2 samples, 0.04%)</title><rect x="23.2" y="325" width="0.4" height="15.0" fill="rgb(243,126,26)" rx="2" ry="2" />
<text  x="26.16" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::disable_abort_on_alloc_failure_temporarily (1 samples, 0.02%)</title><rect x="535.9" y="437" width="0.2" height="15.0" fill="rgb(220,214,49)" rx="2" ry="2" />
<text  x="538.86" y="447.5" ></text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::EqualElement&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt;&amp;&gt; (5 samples, 0.09%)</title><rect x="810.9" y="405" width="1.2" height="15.0" fill="rgb(229,66,26)" rx="2" ry="2" />
<text  x="813.95" y="415.5" ></text>
</g>
<g >
<title>antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;::get_currentLine (2 samples, 0.04%)</title><rect x="25.8" y="357" width="0.5" height="15.0" fill="rgb(208,59,53)" rx="2" ry="2" />
<text  x="28.84" y="367.5" ></text>
</g>
<g >
<title>make_shared_schema (1 samples, 0.02%)</title><rect x="16.9" y="357" width="0.2" height="15.0" fill="rgb(216,22,31)" rx="2" ry="2" />
<text  x="19.92" y="367.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::clear (1 samples, 0.02%)</title><rect x="676.9" y="373" width="0.2" height="15.0" fill="rgb(245,123,27)" rx="2" ry="2" />
<text  x="679.86" y="383.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cident (10 samples, 0.19%)</title><rect x="39.0" y="437" width="2.2" height="15.0" fill="rgb(223,130,49)" rx="2" ry="2" />
<text  x="42.00" y="447.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::drop_expired_front (2 samples, 0.04%)</title><rect x="128.7" y="501" width="0.4" height="15.0" fill="rgb(219,58,25)" rx="2" ry="2" />
<text  x="131.69" y="511.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (1 samples, 0.02%)</title><rect x="704.5" y="405" width="0.2" height="15.0" fill="rgb(226,227,23)" rx="2" ry="2" />
<text  x="707.52" y="415.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::operator (6 samples, 0.11%)</title><rect x="741.3" y="469" width="1.4" height="15.0" fill="rgb(241,80,10)" rx="2" ry="2" />
<text  x="744.34" y="479.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (1 samples, 0.02%)</title><rect x="58.6" y="389" width="0.3" height="15.0" fill="rgb(245,221,46)" rx="2" ry="2" />
<text  x="61.64" y="399.5" ></text>
</g>
<g >
<title>absl::container_internal::operator== (2 samples, 0.04%)</title><rect x="834.4" y="469" width="0.4" height="15.0" fill="rgb(248,195,37)" rx="2" ry="2" />
<text  x="837.37" y="479.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.08%)</title><rect x="966.7" y="389" width="0.9" height="15.0" fill="rgb(211,22,43)" rx="2" ry="2" />
<text  x="969.67" y="399.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="75.6" y="501" width="0.2" height="15.0" fill="rgb(240,88,18)" rx="2" ry="2" />
<text  x="78.59" y="511.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (1 samples, 0.02%)</title><rect x="1082.7" y="485" width="0.2" height="15.0" fill="rgb(247,148,5)" rx="2" ry="2" />
<text  x="1085.69" y="495.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.09%)</title><rect x="547.5" y="501" width="1.1" height="15.0" fill="rgb(222,93,38)" rx="2" ry="2" />
<text  x="550.46" y="511.5" ></text>
</g>
<g >
<title>partition_snapshot::version_count (1 samples, 0.02%)</title><rect x="257.4" y="245" width="0.2" height="15.0" fill="rgb(228,159,12)" rx="2" ry="2" />
<text  x="260.42" y="255.5" ></text>
</g>
<g >
<title>seastar::do_until&lt;scanning_and_populating_reader::fill_buffer (1 samples, 0.02%)</title><rect x="105.9" y="117" width="0.3" height="15.0" fill="rgb(235,12,15)" rx="2" ry="2" />
<text  x="108.93" y="127.5" ></text>
</g>
<g >
<title>std::tuple&lt;cql3::attributes::raw*, std::default_delete&lt;cql3::attributes::raw&gt; &gt;::tuple (1 samples, 0.02%)</title><rect x="60.0" y="389" width="0.2" height="15.0" fill="rgb(233,103,36)" rx="2" ry="2" />
<text  x="62.98" y="399.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_one (58 samples, 1.10%)</title><rect x="181.3" y="373" width="13.0" height="15.0" fill="rgb(229,197,40)" rx="2" ry="2" />
<text  x="184.34" y="383.5" ></text>
</g>
<g >
<title>ser::serializer&lt;utils::UUID&gt;::read&lt;seastar::simple_memory_input_stream&gt; (1 samples, 0.02%)</title><rect x="1117.3" y="341" width="0.2" height="15.0" fill="rgb(254,131,42)" rx="2" ry="2" />
<text  x="1120.27" y="351.5" ></text>
</g>
<g >
<title>database::has_keyspace (1 samples, 0.02%)</title><rect x="74.9" y="517" width="0.2" height="15.0" fill="rgb(215,11,8)" rx="2" ry="2" />
<text  x="77.92" y="527.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_Optional_payload_base (1 samples, 0.02%)</title><rect x="922.3" y="501" width="0.2" height="15.0" fill="rgb(208,36,3)" rx="2" ry="2" />
<text  x="925.27" y="511.5" ></text>
</g>
<g >
<title>set_value&lt;fragment_range&lt;managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="856.5" y="325" width="0.2" height="15.0" fill="rgb(218,13,39)" rx="2" ry="2" />
<text  x="859.46" y="335.5" ></text>
</g>
<g >
<title>seastar::metrics::impl::metric_groups_impl::add_group (1 samples, 0.02%)</title><rect x="107.9" y="453" width="0.3" height="15.0" fill="rgb(244,23,2)" rx="2" ry="2" />
<text  x="110.94" y="463.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (1 samples, 0.02%)</title><rect x="328.8" y="389" width="0.2" height="15.0" fill="rgb(213,98,16)" rx="2" ry="2" />
<text  x="331.82" y="399.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="486.1" y="277" width="0.2" height="15.0" fill="rgb(249,144,32)" rx="2" ry="2" />
<text  x="489.11" y="287.5" ></text>
</g>
<g >
<title>all (5,289 samples, 100%)</title><rect x="10.0" y="757" width="1180.0" height="15.0" fill="rgb(205,30,47)" rx="2" ry="2" />
<text  x="13.00" y="767.5" ></text>
</g>
<g >
<title>seastar::metrics::impl::impl::add_registration (1 samples, 0.02%)</title><rect x="107.9" y="421" width="0.3" height="15.0" fill="rgb(233,144,25)" rx="2" ry="2" />
<text  x="110.94" y="431.5" ></text>
</g>
<g >
<title>seastar::internal::awaiter&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::awaiter (1 samples, 0.02%)</title><rect x="962.2" y="453" width="0.2" height="15.0" fill="rgb(239,171,3)" rx="2" ry="2" />
<text  x="965.21" y="463.5" ></text>
</g>
<g >
<title>bplus::searcher&lt;dht::ring_position, long, dht::raw_token_less_comparator, 16ul,  (5 samples, 0.09%)</title><rect x="528.3" y="373" width="1.1" height="15.0" fill="rgb(247,184,26)" rx="2" ry="2" />
<text  x="531.27" y="383.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (3 samples, 0.06%)</title><rect x="1083.6" y="501" width="0.6" height="15.0" fill="rgb(215,141,39)" rx="2" ry="2" />
<text  x="1086.58" y="511.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (7 samples, 0.13%)</title><rect x="533.4" y="341" width="1.6" height="15.0" fill="rgb(232,1,13)" rx="2" ry="2" />
<text  x="536.40" y="351.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (3 samples, 0.06%)</title><rect x="732.2" y="373" width="0.7" height="15.0" fill="rgb(222,4,39)" rx="2" ry="2" />
<text  x="735.19" y="383.5" ></text>
</g>
<g >
<title>std::type_info::operator== (1 samples, 0.02%)</title><rect x="1023.8" y="357" width="0.2" height="15.0" fill="rgb(214,205,3)" rx="2" ry="2" />
<text  x="1026.79" y="367.5" ></text>
</g>
<g >
<title>double_decker&lt;long, cache_entry, dht::raw_token_less_comparator, dht::ring_position_comparator, 16,  (1 samples, 0.02%)</title><rect x="523.4" y="421" width="0.2" height="15.0" fill="rgb(211,29,25)" rx="2" ry="2" />
<text  x="526.36" y="431.5" ></text>
</g>
<g >
<title>nonwrapping_interval&lt;clustering_key_prefix&gt;::make_open_ended_both_sides (2 samples, 0.04%)</title><rect x="1093.8" y="501" width="0.5" height="15.0" fill="rgb(250,87,50)" rx="2" ry="2" />
<text  x="1096.84" y="511.5" ></text>
</g>
<g >
<title>ser::serializer&lt;utils::UUID&gt;::skip&lt;seastar::simple_memory_input_stream&gt; (1 samples, 0.02%)</title><rect x="1117.5" y="325" width="0.2" height="15.0" fill="rgb(215,142,54)" rx="2" ry="2" />
<text  x="1120.49" y="335.5" ></text>
</g>
<g >
<title>cql3::terminal::to_expression (1 samples, 0.02%)</title><rect x="858.5" y="373" width="0.2" height="15.0" fill="rgb(241,151,11)" rx="2" ry="2" />
<text  x="861.47" y="383.5" ></text>
</g>
<g >
<title>query_result_builder::consume_end_of_partition (4 samples, 0.08%)</title><rect x="337.7" y="325" width="0.9" height="15.0" fill="rgb(237,130,8)" rx="2" ry="2" />
<text  x="340.74" y="335.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_Optional_payload_base (1 samples, 0.02%)</title><rect x="539.9" y="501" width="0.2" height="15.0" fill="rgb(249,118,0)" rx="2" ry="2" />
<text  x="542.87" y="511.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_digest_requests (2 samples, 0.04%)</title><rect x="1030.9" y="421" width="0.5" height="15.0" fill="rgb(219,223,10)" rx="2" ry="2" />
<text  x="1033.93" y="431.5" ></text>
</g>
<g >
<title>managed_bytes::free_chain (1 samples, 0.02%)</title><rect x="82.7" y="485" width="0.3" height="15.0" fill="rgb(221,89,10)" rx="2" ry="2" />
<text  x="85.73" y="495.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (28 samples, 0.53%)</title><rect x="422.5" y="309" width="6.3" height="15.0" fill="rgb(225,131,1)" rx="2" ry="2" />
<text  x="425.52" y="319.5" ></text>
</g>
<g >
<title>std::default_delete&lt;mutation::data&gt;::operator (2 samples, 0.04%)</title><rect x="1132.4" y="405" width="0.5" height="15.0" fill="rgb(214,6,19)" rx="2" ry="2" />
<text  x="1135.44" y="415.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.08%)</title><rect x="630.2" y="581" width="0.9" height="15.0" fill="rgb(221,53,50)" rx="2" ry="2" />
<text  x="633.23" y="591.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.04%)</title><rect x="93.2" y="581" width="0.5" height="15.0" fill="rgb(231,203,30)" rx="2" ry="2" />
<text  x="96.22" y="591.5" ></text>
</g>
<g >
<title>utils::tuple_hash::hash_impl&lt;1ul, auth::resource_kind, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (3 samples, 0.06%)</title><rect x="789.5" y="197" width="0.7" height="15.0" fill="rgb(229,216,49)" rx="2" ry="2" />
<text  x="792.53" y="207.5" ></text>
</g>
<g >
<title>service::never_speculating_read_executor::~never_speculating_read_executor (7 samples, 0.13%)</title><rect x="1163.2" y="549" width="1.6" height="15.0" fill="rgb(245,177,0)" rx="2" ry="2" />
<text  x="1166.23" y="559.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (3 samples, 0.06%)</title><rect x="56.2" y="389" width="0.7" height="15.0" fill="rgb(214,203,10)" rx="2" ry="2" />
<text  x="59.18" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="325.0" y="373" width="0.2" height="15.0" fill="rgb(238,126,35)" rx="2" ry="2" />
<text  x="328.02" y="383.5" ></text>
</g>
<g >
<title>absl::container_internal::operator== (2 samples, 0.04%)</title><rect x="808.9" y="421" width="0.5" height="15.0" fill="rgb(215,128,36)" rx="2" ry="2" />
<text  x="811.94" y="431.5" ></text>
</g>
<g >
<title>__dynamic_cast (1 samples, 0.02%)</title><rect x="870.5" y="517" width="0.2" height="15.0" fill="rgb(208,124,6)" rx="2" ry="2" />
<text  x="873.51" y="527.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.02%)</title><rect x="24.9" y="309" width="0.3" height="15.0" fill="rgb(215,120,42)" rx="2" ry="2" />
<text  x="27.95" y="319.5" ></text>
</g>
<g >
<title>data_value::~data_value (1 samples, 0.02%)</title><rect x="677.1" y="309" width="0.2" height="15.0" fill="rgb(229,31,53)" rx="2" ry="2" />
<text  x="680.08" y="319.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::partition_snapshot_flat_reader&lt;memtable&amp;&gt; (48 samples, 0.91%)</title><rect x="503.7" y="357" width="10.7" height="15.0" fill="rgb(232,175,0)" rx="2" ry="2" />
<text  x="506.73" y="367.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (6 samples, 0.11%)</title><rect x="1105.4" y="485" width="1.4" height="15.0" fill="rgb(246,16,16)" rx="2" ry="2" />
<text  x="1108.44" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value_view, std::allocator&lt;cql3::raw_value_view&gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="653.0" y="581" width="0.2" height="15.0" fill="rgb(239,167,16)" rx="2" ry="2" />
<text  x="655.99" y="591.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::digest_read_resolver&gt;::~shared_ptr (2 samples, 0.04%)</title><rect x="969.1" y="437" width="0.5" height="15.0" fill="rgb(253,181,13)" rx="2" ry="2" />
<text  x="972.13" y="447.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_last_fragment_kind, 4ul&gt;::emplace_back&lt;std::_List_iterator&lt;flat_mutation_reader&gt;, mutation_fragment::kind&gt; (2 samples, 0.04%)</title><rect x="458.7" y="357" width="0.4" height="15.0" fill="rgb(227,112,44)" rx="2" ry="2" />
<text  x="461.66" y="367.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (1 samples, 0.02%)</title><rect x="1078.4" y="453" width="0.3" height="15.0" fill="rgb(245,104,19)" rx="2" ry="2" />
<text  x="1081.45" y="463.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_token (5 samples, 0.09%)</title><rect x="932.3" y="485" width="1.1" height="15.0" fill="rgb(221,58,25)" rx="2" ry="2" />
<text  x="935.31" y="495.5" ></text>
</g>
<g >
<title>utils::timed_rate_moving_average_and_histogram::mark&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; (1 samples, 0.02%)</title><rect x="675.7" y="581" width="0.3" height="15.0" fill="rgb(230,16,10)" rx="2" ry="2" />
<text  x="678.74" y="591.5" ></text>
</g>
<g >
<title>tracing::global_trace_state_ptr::get (3 samples, 0.06%)</title><rect x="1028.9" y="357" width="0.7" height="15.0" fill="rgb(231,33,5)" rx="2" ry="2" />
<text  x="1031.92" y="367.5" ></text>
</g>
<g >
<title>cql3::statements::raw::modification_statement::prepare (48 samples, 0.91%)</title><rect x="64.4" y="565" width="10.7" height="15.0" fill="rgb(223,138,45)" rx="2" ry="2" />
<text  x="67.44" y="575.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.08%)</title><rect x="508.6" y="277" width="0.9" height="15.0" fill="rgb(246,228,44)" rx="2" ry="2" />
<text  x="511.64" y="287.5" ></text>
</g>
<g >
<title>service::abstract_write_response_handler::signal (1 samples, 0.02%)</title><rect x="703.9" y="549" width="0.2" height="15.0" fill="rgb(220,181,14)" rx="2" ry="2" />
<text  x="706.86" y="559.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (2 samples, 0.04%)</title><rect x="770.6" y="405" width="0.4" height="15.0" fill="rgb(251,30,3)" rx="2" ry="2" />
<text  x="773.56" y="415.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (3 samples, 0.06%)</title><rect x="850.2" y="597" width="0.7" height="15.0" fill="rgb(217,127,27)" rx="2" ry="2" />
<text  x="853.21" y="607.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::vector (1 samples, 0.02%)</title><rect x="899.5" y="469" width="0.2" height="15.0" fill="rgb(235,91,8)" rx="2" ry="2" />
<text  x="902.52" y="479.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_ctor_base (1 samples, 0.02%)</title><rect x="56.4" y="373" width="0.2" height="15.0" fill="rgb(242,62,51)" rx="2" ry="2" />
<text  x="59.41" y="383.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::relation (8 samples, 0.15%)</title><rect x="57.3" y="437" width="1.8" height="15.0" fill="rgb(219,96,22)" rx="2" ry="2" />
<text  x="60.30" y="447.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="41.0" y="389" width="0.2" height="15.0" fill="rgb(222,96,0)" rx="2" ry="2" />
<text  x="44.01" y="399.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;::~basic_ostream (1 samples, 0.02%)</title><rect x="83.0" y="709" width="0.2" height="15.0" fill="rgb(239,122,45)" rx="2" ry="2" />
<text  x="85.96" y="719.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::set&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="684.7" y="549" width="0.2" height="15.0" fill="rgb(243,179,2)" rx="2" ry="2" />
<text  x="687.67" y="559.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.02%)</title><rect x="82.5" y="645" width="0.2" height="15.0" fill="rgb(222,79,53)" rx="2" ry="2" />
<text  x="85.51" y="655.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::visit&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (1 samples, 0.02%)</title><rect x="82.7" y="517" width="0.3" height="15.0" fill="rgb(226,92,34)" rx="2" ry="2" />
<text  x="85.73" y="527.5" ></text>
</g>
<g >
<title>evictable_reader::fill_buffer (1 samples, 0.02%)</title><rect x="105.9" y="309" width="0.3" height="15.0" fill="rgb(233,130,49)" rx="2" ry="2" />
<text  x="108.93" y="319.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::contains&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (13 samples, 0.25%)</title><rect x="834.4" y="485" width="2.9" height="15.0" fill="rgb(227,55,24)" rx="2" ry="2" />
<text  x="837.37" y="495.5" ></text>
</g>
<g >
<title>tracing::global_trace_state_ptr::global_trace_state_ptr (4 samples, 0.08%)</title><rect x="1028.7" y="373" width="0.9" height="15.0" fill="rgb(224,92,26)" rx="2" ry="2" />
<text  x="1031.70" y="383.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.04%)</title><rect x="622.0" y="581" width="0.4" height="15.0" fill="rgb(215,26,22)" rx="2" ry="2" />
<text  x="624.98" y="591.5" ></text>
</g>
<g >
<title>seastar::posix_file_impl::list_directory (1 samples, 0.02%)</title><rect x="677.8" y="453" width="0.2" height="15.0" fill="rgb(230,16,11)" rx="2" ry="2" />
<text  x="680.75" y="463.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::iterator::operator* (2 samples, 0.04%)</title><rect x="749.8" y="469" width="0.5" height="15.0" fill="rgb(250,151,12)" rx="2" ry="2" />
<text  x="752.81" y="479.5" ></text>
</g>
<g >
<title>_ZSt5applyIZN7seastar8internal12do_with_implIRKNS0_13basic_sstringIcjLj15ELb1EEEN4auth8resourceEJZNK7service12client_state24has_column_family_accessERK8databaseS6_S6_NS7_10permissionENS7_12command_desc4typeEE3$_4EEEDaOT_OT0_DpOT1_EUlDpOT_E_St5tupleIJS6_OS8_EEEDcSJ_SL_ (13 samples, 0.25%)</title><rect x="754.9" y="485" width="2.9" height="15.0" fill="rgb(230,84,53)" rx="2" ry="2" />
<text  x="757.95" y="495.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::~timer (1 samples, 0.02%)</title><rect x="678.2" y="549" width="0.2" height="15.0" fill="rgb(205,5,10)" rx="2" ry="2" />
<text  x="681.20" y="559.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.02%)</title><rect x="58.2" y="293" width="0.2" height="15.0" fill="rgb(211,208,41)" rx="2" ry="2" />
<text  x="61.19" y="303.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::check_queue_size (1 samples, 0.02%)</title><rect x="1006.4" y="293" width="0.2" height="15.0" fill="rgb(212,169,11)" rx="2" ry="2" />
<text  x="1009.38" y="303.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;void&gt;::satisfy_with_result_of&lt;seastar::future&lt;service::digest_read_result&gt;::then_wrapped_nrvo&lt;void, service::abstract_read_executor::execute (38 samples, 0.72%)</title><rect x="680.2" y="581" width="8.5" height="15.0" fill="rgb(232,74,49)" rx="2" ry="2" />
<text  x="683.21" y="591.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.02%)</title><rect x="1129.5" y="229" width="0.3" height="15.0" fill="rgb(245,58,24)" rx="2" ry="2" />
<text  x="1132.54" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="924.5" y="501" width="0.2" height="15.0" fill="rgb(239,129,45)" rx="2" ry="2" />
<text  x="927.51" y="511.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_M_reset (1 samples, 0.02%)</title><rect x="59.5" y="421" width="0.3" height="15.0" fill="rgb(219,81,53)" rx="2" ry="2" />
<text  x="62.53" y="431.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::get_promise (1 samples, 0.02%)</title><rect x="1101.2" y="517" width="0.2" height="15.0" fill="rgb(218,31,20)" rx="2" ry="2" />
<text  x="1104.20" y="527.5" ></text>
</g>
<g >
<title>std::uniform_int_distribution&lt;unsigned long&gt;::operator (7 samples, 0.13%)</title><rect x="847.1" y="549" width="1.6" height="15.0" fill="rgb(224,106,18)" rx="2" ry="2" />
<text  x="850.09" y="559.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (1 samples, 0.02%)</title><rect x="1134.0" y="309" width="0.2" height="15.0" fill="rgb(231,117,10)" rx="2" ry="2" />
<text  x="1137.00" y="319.5" ></text>
</g>
<g >
<title>cql3::query_processor::prepare_internal (1 samples, 0.02%)</title><rect x="704.5" y="501" width="0.2" height="15.0" fill="rgb(240,157,42)" rx="2" ry="2" />
<text  x="707.52" y="511.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (6 samples, 0.11%)</title><rect x="421.0" y="325" width="1.3" height="15.0" fill="rgb(210,3,11)" rx="2" ry="2" />
<text  x="423.96" y="335.5" ></text>
</g>
<g >
<title>bound_view::tri_compare::operator (1 samples, 0.02%)</title><rect x="106.8" y="357" width="0.3" height="15.0" fill="rgb(208,151,34)" rx="2" ry="2" />
<text  x="109.83" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (5 samples, 0.09%)</title><rect x="1103.0" y="469" width="1.1" height="15.0" fill="rgb(208,220,53)" rx="2" ry="2" />
<text  x="1105.99" y="479.5" ></text>
</g>
<g >
<title>rows_entry::tri_compare::operator (1 samples, 0.02%)</title><rect x="857.4" y="325" width="0.2" height="15.0" fill="rgb(254,6,15)" rx="2" ry="2" />
<text  x="860.35" y="335.5" ></text>
</g>
<g >
<title>std::move&lt;std::vector&lt;seastar::shared_ptr&lt;cql3::relation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::relation&gt; &gt; &gt;&amp;&gt; (1 samples, 0.02%)</title><rect x="60.4" y="453" width="0.2" height="15.0" fill="rgb(234,17,26)" rx="2" ry="2" />
<text  x="63.42" y="463.5" ></text>
</g>
<g >
<title>canonical_mutation::canonical_mutation (1 samples, 0.02%)</title><rect x="107.3" y="501" width="0.2" height="15.0" fill="rgb(216,125,39)" rx="2" ry="2" />
<text  x="110.27" y="511.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (3 samples, 0.06%)</title><rect x="158.1" y="517" width="0.7" height="15.0" fill="rgb(250,148,32)" rx="2" ry="2" />
<text  x="161.14" y="527.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (1 samples, 0.02%)</title><rect x="616.8" y="517" width="0.3" height="15.0" fill="rgb(219,67,13)" rx="2" ry="2" />
<text  x="619.84" y="527.5" ></text>
</g>
<g >
<title>compound_wrapper&lt;clustering_key_prefix, clustering_key_prefix_view&gt;::get_component (1 samples, 0.02%)</title><rect x="10.9" y="453" width="0.2" height="15.0" fill="rgb(207,161,14)" rx="2" ry="2" />
<text  x="13.89" y="463.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::execute (675 samples, 12.76%)</title><rect x="934.5" y="517" width="150.6" height="15.0" fill="rgb(225,80,7)" rx="2" ry="2" />
<text  x="937.55" y="527.5" >cql3::statements::s..</text>
</g>
<g >
<title>query::result::builder::build (8 samples, 0.15%)</title><rect x="586.3" y="533" width="1.8" height="15.0" fill="rgb(250,53,3)" rx="2" ry="2" />
<text  x="589.28" y="543.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::contains&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (8 samples, 0.15%)</title><rect x="813.6" y="437" width="1.8" height="15.0" fill="rgb(250,205,51)" rx="2" ry="2" />
<text  x="816.62" y="447.5" ></text>
</g>
<g >
<title>seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;::swap (1 samples, 0.02%)</title><rect x="817.0" y="517" width="0.2" height="15.0" fill="rgb(213,145,3)" rx="2" ry="2" />
<text  x="819.97" y="527.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;::_Tuple_impl&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const&amp;, auth::resource, void&gt; (8 samples, 0.15%)</title><rect x="756.1" y="453" width="1.7" height="15.0" fill="rgb(230,143,48)" rx="2" ry="2" />
<text  x="759.06" y="463.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::partition_slice const, std::default_delete&lt;query::partition_slice const&gt; &gt;::~unique_ptr (16 samples, 0.30%)</title><rect x="582.7" y="517" width="3.6" height="15.0" fill="rgb(209,145,32)" rx="2" ry="2" />
<text  x="585.71" y="527.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.06%)</title><rect x="545.9" y="421" width="0.7" height="15.0" fill="rgb(218,140,14)" rx="2" ry="2" />
<text  x="548.90" y="431.5" ></text>
</g>
<g >
<title>db::filter_for_query (6 samples, 0.11%)</title><rect x="1044.8" y="437" width="1.3" height="15.0" fill="rgb(206,98,40)" rx="2" ry="2" />
<text  x="1047.76" y="447.5" ></text>
</g>
<g >
<title>service::abstract_write_response_handler::max_backlog (1 samples, 0.02%)</title><rect x="703.9" y="517" width="0.2" height="15.0" fill="rgb(223,54,16)" rx="2" ry="2" />
<text  x="706.86" y="527.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reclaiming_disabled&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::lsa_partition_reader::next_row (1 samples, 0.02%)</title><rect x="80.5" y="373" width="0.2" height="15.0" fill="rgb(231,166,39)" rx="2" ry="2" />
<text  x="83.50" y="383.5" ></text>
</g>
<g >
<title>mutation_fragment::operator= (2 samples, 0.04%)</title><rect x="210.8" y="325" width="0.4" height="15.0" fill="rgb(209,81,43)" rx="2" ry="2" />
<text  x="213.79" y="335.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::iterator_at (1 samples, 0.02%)</title><rect x="1043.9" y="405" width="0.2" height="15.0" fill="rgb(235,82,18)" rx="2" ry="2" />
<text  x="1046.87" y="415.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::signal (1 samples, 0.02%)</title><rect x="570.0" y="437" width="0.2" height="15.0" fill="rgb(249,0,9)" rx="2" ry="2" />
<text  x="572.99" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="688.7" y="581" width="0.2" height="15.0" fill="rgb(254,97,18)" rx="2" ry="2" />
<text  x="691.68" y="591.5" ></text>
</g>
<g >
<title>intrusive_b::node&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (1 samples, 0.02%)</title><rect x="1134.0" y="293" width="0.2" height="15.0" fill="rgb(223,186,34)" rx="2" ry="2" />
<text  x="1137.00" y="303.5" ></text>
</g>
<g >
<title>utils::fb_utilities::get_broadcast_address (1 samples, 0.02%)</title><rect x="1074.2" y="341" width="0.2" height="15.0" fill="rgb(205,57,6)" rx="2" ry="2" />
<text  x="1077.21" y="351.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::term&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="72.2" y="453" width="0.3" height="15.0" fill="rgb(211,143,3)" rx="2" ry="2" />
<text  x="75.25" y="463.5" ></text>
</g>
<g >
<title>mutation_reader_merger::add_readers (12 samples, 0.23%)</title><rect x="456.4" y="373" width="2.7" height="15.0" fill="rgb(252,18,5)" rx="2" ry="2" />
<text  x="459.43" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="593.9" y="469" width="0.2" height="15.0" fill="rgb(208,14,12)" rx="2" ry="2" />
<text  x="596.86" y="479.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, cql3::statements::drop_aggregate_statement*, std::default_delete&lt;cql3::statements::drop_aggregate_statement&gt; &gt; (1 samples, 0.02%)</title><rect x="61.3" y="421" width="0.2" height="15.0" fill="rgb(237,136,35)" rx="2" ry="2" />
<text  x="64.31" y="431.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (1 samples, 0.02%)</title><rect x="1123.7" y="277" width="0.3" height="15.0" fill="rgb(219,82,28)" rx="2" ry="2" />
<text  x="1126.74" y="287.5" ></text>
</g>
<g >
<title>posix_memalign (1 samples, 0.02%)</title><rect x="858.0" y="309" width="0.2" height="15.0" fill="rgb(249,101,17)" rx="2" ry="2" />
<text  x="861.02" y="319.5" ></text>
</g>
<g >
<title>query::querier_base::close (1 samples, 0.02%)</title><rect x="1165.5" y="581" width="0.2" height="15.0" fill="rgb(224,188,12)" rx="2" ry="2" />
<text  x="1168.46" y="591.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (7 samples, 0.13%)</title><rect x="948.4" y="453" width="1.5" height="15.0" fill="rgb(206,95,0)" rx="2" ry="2" />
<text  x="951.38" y="463.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;cql3::raw_value const*, cql3::raw_value*&gt; (2 samples, 0.04%)</title><rect x="846.2" y="533" width="0.4" height="15.0" fill="rgb(240,191,47)" rx="2" ry="2" />
<text  x="849.20" y="543.5" ></text>
</g>
<g >
<title>sstables::compaction::setup&lt;noop_compacted_fragments_consumer&gt; (1 samples, 0.02%)</title><rect x="1133.8" y="421" width="0.2" height="15.0" fill="rgb(239,63,49)" rx="2" ry="2" />
<text  x="1136.78" y="431.5" ></text>
</g>
<g >
<title>remove_or_mark_as_unique_owner (1 samples, 0.02%)</title><rect x="1137.3" y="469" width="0.3" height="15.0" fill="rgb(239,227,48)" rx="2" ry="2" />
<text  x="1140.35" y="479.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (2 samples, 0.04%)</title><rect x="728.0" y="469" width="0.4" height="15.0" fill="rgb(209,154,27)" rx="2" ry="2" />
<text  x="730.95" y="479.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (2 samples, 0.04%)</title><rect x="568.7" y="469" width="0.4" height="15.0" fill="rgb(231,126,3)" rx="2" ry="2" />
<text  x="571.65" y="479.5" ></text>
</g>
<g >
<title>std::make_unique&lt;empty_flat_reader, seastar::lw_shared_ptr&lt;schema const&gt;, reader_permit&gt; (15 samples, 0.28%)</title><rect x="531.6" y="373" width="3.4" height="15.0" fill="rgb(252,59,43)" rx="2" ry="2" />
<text  x="534.62" y="383.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (1 samples, 0.02%)</title><rect x="852.4" y="549" width="0.3" height="15.0" fill="rgb(254,167,21)" rx="2" ry="2" />
<text  x="855.44" y="559.5" ></text>
</g>
<g >
<title>seastar::gate::leave (1 samples, 0.02%)</title><rect x="600.1" y="533" width="0.2" height="15.0" fill="rgb(220,82,36)" rx="2" ry="2" />
<text  x="603.11" y="543.5" ></text>
</g>
<g >
<title>query_state::query_state (28 samples, 0.53%)</title><rect x="588.5" y="533" width="6.3" height="15.0" fill="rgb(229,152,40)" rx="2" ry="2" />
<text  x="591.51" y="543.5" ></text>
</g>
<g >
<title>boost::variant&lt;ser::live_cell_view, ser::expiring_cell_view, ser::dead_cell_view, ser::counter_cell_view, ser::unknown_variant_type&gt;::variant (1 samples, 0.02%)</title><rect x="1121.3" y="293" width="0.2" height="15.0" fill="rgb(218,80,5)" rx="2" ry="2" />
<text  x="1124.28" y="303.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="1133.8" y="357" width="0.2" height="15.0" fill="rgb(222,80,35)" rx="2" ry="2" />
<text  x="1136.78" y="367.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::_Copy_ctor_base (2 samples, 0.04%)</title><rect x="351.1" y="277" width="0.5" height="15.0" fill="rgb(228,102,5)" rx="2" ry="2" />
<text  x="354.13" y="287.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (1 samples, 0.02%)</title><rect x="106.2" y="453" width="0.2" height="15.0" fill="rgb(221,223,54)" rx="2" ry="2" />
<text  x="109.16" y="463.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::get_type (1 samples, 0.02%)</title><rect x="27.6" y="357" width="0.2" height="15.0" fill="rgb(235,66,40)" rx="2" ry="2" />
<text  x="30.63" y="367.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (14 samples, 0.26%)</title><rect x="624.2" y="581" width="3.1" height="15.0" fill="rgb(238,41,31)" rx="2" ry="2" />
<text  x="627.21" y="591.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, cql3::statements::create_aggregate_statement*, std::default_delete&lt;cql3::statements::create_aggregate_statement&gt; &gt; (1 samples, 0.02%)</title><rect x="60.9" y="421" width="0.2" height="15.0" fill="rgb(221,188,28)" rx="2" ry="2" />
<text  x="63.87" y="431.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.02%)</title><rect x="111.3" y="581" width="0.2" height="15.0" fill="rgb(216,168,4)" rx="2" ry="2" />
<text  x="114.29" y="591.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.02%)</title><rect x="17.1" y="613" width="0.3" height="15.0" fill="rgb(231,140,25)" rx="2" ry="2" />
<text  x="20.14" y="623.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::get_limit (1 samples, 0.02%)</title><rect x="1115.3" y="533" width="0.2" height="15.0" fill="rgb(239,57,11)" rx="2" ry="2" />
<text  x="1118.26" y="543.5" ></text>
</g>
<g >
<title>std::operator==&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; (1 samples, 0.02%)</title><rect x="734.0" y="405" width="0.2" height="15.0" fill="rgb(248,2,7)" rx="2" ry="2" />
<text  x="736.97" y="415.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (4 samples, 0.08%)</title><rect x="43.2" y="245" width="0.9" height="15.0" fill="rgb(211,1,28)" rx="2" ry="2" />
<text  x="46.24" y="255.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="1161.4" y="533" width="0.3" height="15.0" fill="rgb(222,144,29)" rx="2" ry="2" />
<text  x="1164.44" y="543.5" ></text>
</g>
<g >
<title>utils::fb_utilities::get_broadcast_address (1 samples, 0.02%)</title><rect x="1074.4" y="357" width="0.3" height="15.0" fill="rgb(226,179,0)" rx="2" ry="2" />
<text  x="1077.43" y="367.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (1 samples, 0.02%)</title><rect x="549.2" y="517" width="0.3" height="15.0" fill="rgb(208,103,0)" rx="2" ry="2" />
<text  x="552.24" y="527.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::node_size (2 samples, 0.04%)</title><rect x="253.2" y="229" width="0.4" height="15.0" fill="rgb(253,64,53)" rx="2" ry="2" />
<text  x="256.18" y="239.5" ></text>
</g>
<g >
<title>table::set_compaction_strategy (1 samples, 0.02%)</title><rect x="107.7" y="565" width="0.2" height="15.0" fill="rgb(244,28,15)" rx="2" ry="2" />
<text  x="110.72" y="575.5" ></text>
</g>
<g >
<title>seastar::memory::allocate_aligned (4 samples, 0.08%)</title><rect x="241.6" y="165" width="0.9" height="15.0" fill="rgb(233,118,17)" rx="2" ry="2" />
<text  x="244.58" y="175.5" ></text>
</g>
<g >
<title>operator new (8 samples, 0.15%)</title><rect x="1016.6" y="309" width="1.8" height="15.0" fill="rgb(210,10,29)" rx="2" ry="2" />
<text  x="1019.65" y="319.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::construct&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (2 samples, 0.04%)</title><rect x="24.1" y="341" width="0.4" height="15.0" fill="rgb(211,217,34)" rx="2" ry="2" />
<text  x="27.06" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (7 samples, 0.13%)</title><rect x="840.4" y="437" width="1.6" height="15.0" fill="rgb(230,115,11)" rx="2" ry="2" />
<text  x="843.40" y="447.5" ></text>
</g>
<g >
<title>absl::hash_internal::HashState::combine_contiguous (1 samples, 0.02%)</title><rect x="829.9" y="453" width="0.2" height="15.0" fill="rgb(248,181,26)" rx="2" ry="2" />
<text  x="832.91" y="463.5" ></text>
</g>
<g >
<title>db::schema_tables::calculate_schema_digest (1 samples, 0.02%)</title><rect x="17.1" y="437" width="0.3" height="15.0" fill="rgb(221,52,5)" rx="2" ry="2" />
<text  x="20.14" y="447.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_destroy_data (1 samples, 0.02%)</title><rect x="676.9" y="357" width="0.2" height="15.0" fill="rgb(248,143,15)" rx="2" ry="2" />
<text  x="679.86" y="367.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.02%)</title><rect x="37.7" y="309" width="0.2" height="15.0" fill="rgb(243,89,54)" rx="2" ry="2" />
<text  x="40.66" y="319.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::set_value&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt; (3 samples, 0.06%)</title><rect x="685.1" y="549" width="0.7" height="15.0" fill="rgb(249,157,6)" rx="2" ry="2" />
<text  x="688.11" y="559.5" ></text>
</g>
<g >
<title>antlr3::CyclicDFA&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, cql3_parser::CqlLexer&gt;::predict&lt;cql3_parser::CqlLexerCyclicDFA44&gt; (1 samples, 0.02%)</title><rect x="107.5" y="261" width="0.2" height="15.0" fill="rgb(243,116,4)" rx="2" ry="2" />
<text  x="110.50" y="271.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::insertToken (13 samples, 0.25%)</title><rect x="22.0" y="405" width="2.9" height="15.0" fill="rgb(246,91,36)" rx="2" ry="2" />
<text  x="25.05" y="415.5" ></text>
</g>
<g >
<title>db::validate_for_read (1 samples, 0.02%)</title><rect x="1097.6" y="517" width="0.3" height="15.0" fill="rgb(229,209,29)" rx="2" ry="2" />
<text  x="1100.63" y="527.5" ></text>
</g>
<g >
<title>utils::approx_exponential_histogram&lt;512ul, 33554432ul, 4ul&gt;::find_bucket_index (1 samples, 0.02%)</title><rect x="665.0" y="565" width="0.3" height="15.0" fill="rgb(219,209,14)" rx="2" ry="2" />
<text  x="668.03" y="575.5" ></text>
</g>
<g >
<title>utils::estimated_histogram::add (7 samples, 0.13%)</title><rect x="1155.2" y="565" width="1.6" height="15.0" fill="rgb(221,102,43)" rx="2" ry="2" />
<text  x="1158.20" y="575.5" ></text>
</g>
<g >
<title>sstables::mc::writer::consume (1 samples, 0.02%)</title><rect x="10.9" y="533" width="0.2" height="15.0" fill="rgb(240,34,16)" rx="2" ry="2" />
<text  x="13.89" y="543.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (3 samples, 0.06%)</title><rect x="1095.2" y="469" width="0.6" height="15.0" fill="rgb(217,44,9)" rx="2" ry="2" />
<text  x="1098.18" y="479.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (1 samples, 0.02%)</title><rect x="654.8" y="581" width="0.2" height="15.0" fill="rgb(209,139,35)" rx="2" ry="2" />
<text  x="657.77" y="591.5" ></text>
</g>
<g >
<title>bound_view::from_range_start&lt;nonwrapping_interval&gt; (1 samples, 0.02%)</title><rect x="278.2" y="277" width="0.2" height="15.0" fill="rgb(206,117,36)" rx="2" ry="2" />
<text  x="281.17" y="287.5" ></text>
</g>
<g >
<title>seastar::internal::when_all_state&lt;seastar::internal::extract_values_from_futures_tuple&lt;seastar::future&lt;void&gt;, seastar::future&lt;void&gt; &gt;, seastar::future&lt;void&gt;, seastar::future&lt;void&gt; &gt;::~when_all_state (1 samples, 0.02%)</title><rect x="852.9" y="565" width="0.2" height="15.0" fill="rgb(242,52,52)" rx="2" ry="2" />
<text  x="855.89" y="575.5" ></text>
</g>
<g >
<title>std::default_delete&lt;compact_for_query&lt; (7 samples, 0.13%)</title><rect x="435.7" y="357" width="1.5" height="15.0" fill="rgb(221,71,33)" rx="2" ry="2" />
<text  x="438.68" y="367.5" ></text>
</g>
<g >
<title>atomic_cell_type::make_live&lt;ser::buffer_view&lt;bytes_ostream::fragment_iterator&gt; &gt; (2 samples, 0.04%)</title><rect x="1120.4" y="309" width="0.4" height="15.0" fill="rgb(245,0,20)" rx="2" ry="2" />
<text  x="1123.39" y="319.5" ></text>
</g>
<g >
<title>service::abstract_write_response_handler::delay&lt;service::abstract_write_response_handler::signal (1 samples, 0.02%)</title><rect x="703.9" y="533" width="0.2" height="15.0" fill="rgb(211,90,13)" rx="2" ry="2" />
<text  x="706.86" y="543.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::push_mutation_fragment&lt;mutation_fragment&gt; (20 samples, 0.38%)</title><rect x="200.5" y="325" width="4.5" height="15.0" fill="rgb(208,116,47)" rx="2" ry="2" />
<text  x="203.53" y="335.5" ></text>
</g>
<g >
<title>row::append_cell (1 samples, 0.02%)</title><rect x="1120.8" y="309" width="0.3" height="15.0" fill="rgb(224,104,51)" rx="2" ry="2" />
<text  x="1123.84" y="319.5" ></text>
</g>
<g >
<title>seastar::reactor::init_scheduling_group (1 samples, 0.02%)</title><rect x="107.9" y="533" width="0.3" height="15.0" fill="rgb(232,55,41)" rx="2" ry="2" />
<text  x="110.94" y="543.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.02%)</title><rect x="47.7" y="245" width="0.2" height="15.0" fill="rgb(226,4,21)" rx="2" ry="2" />
<text  x="50.70" y="255.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mQUOTED_NAME (2 samples, 0.04%)</title><rect x="32.3" y="357" width="0.5" height="15.0" fill="rgb(253,187,43)" rx="2" ry="2" />
<text  x="35.31" y="367.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::allocate (4 samples, 0.08%)</title><rect x="203.2" y="293" width="0.9" height="15.0" fill="rgb(233,227,22)" rx="2" ry="2" />
<text  x="206.21" y="303.5" ></text>
</g>
<g >
<title>ser::serializer&lt;tombstone&gt;::write&lt;bytes_ostream&gt; (1 samples, 0.02%)</title><rect x="1130.7" y="261" width="0.2" height="15.0" fill="rgb(229,160,34)" rx="2" ry="2" />
<text  x="1133.65" y="271.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::small_vector (1 samples, 0.02%)</title><rect x="464.5" y="357" width="0.2" height="15.0" fill="rgb(230,203,47)" rx="2" ry="2" />
<text  x="467.46" y="367.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_destroy_data_aux (1 samples, 0.02%)</title><rect x="401.3" y="245" width="0.2" height="15.0" fill="rgb(252,133,22)" rx="2" ry="2" />
<text  x="404.33" y="255.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::resize (1 samples, 0.02%)</title><rect x="1167.9" y="613" width="0.2" height="15.0" fill="rgb(240,12,41)" rx="2" ry="2" />
<text  x="1170.91" y="623.5" ></text>
</g>
<g >
<title>partition_version_ref::operator (1 samples, 0.02%)</title><rect x="258.5" y="229" width="0.3" height="15.0" fill="rgb(241,66,27)" rx="2" ry="2" />
<text  x="261.54" y="239.5" ></text>
</g>
<g >
<title>service::client_state::has_access (188 samples, 3.55%)</title><rect x="762.3" y="469" width="42.0" height="15.0" fill="rgb(210,67,7)" rx="2" ry="2" />
<text  x="765.31" y="479.5" >ser..</text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (3 samples, 0.06%)</title><rect x="579.6" y="517" width="0.7" height="15.0" fill="rgb(251,174,40)" rx="2" ry="2" />
<text  x="582.59" y="527.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::clear (1 samples, 0.02%)</title><rect x="648.3" y="581" width="0.2" height="15.0" fill="rgb(223,66,6)" rx="2" ry="2" />
<text  x="651.30" y="591.5" ></text>
</g>
<g >
<title>cql3::expr::expression::operator= (1 samples, 0.02%)</title><rect x="48.6" y="389" width="0.2" height="15.0" fill="rgb(244,142,18)" rx="2" ry="2" />
<text  x="51.60" y="399.5" ></text>
</g>
<g >
<title>logalloc::region_impl::alloc_small (1 samples, 0.02%)</title><rect x="1118.6" y="245" width="0.2" height="15.0" fill="rgb(219,91,45)" rx="2" ry="2" />
<text  x="1121.61" y="255.5" ></text>
</g>
<g >
<title>logalloc::basic_region_impl::set_reclaiming_enabled (1 samples, 0.02%)</title><rect x="454.0" y="437" width="0.2" height="15.0" fill="rgb(247,165,41)" rx="2" ry="2" />
<text  x="456.98" y="447.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::fillBuffer (65 samples, 1.23%)</title><rect x="21.6" y="421" width="14.5" height="15.0" fill="rgb(249,100,54)" rx="2" ry="2" />
<text  x="24.60" y="431.5" ></text>
</g>
<g >
<title>[[vdso]] (29 samples, 0.55%)</title><rect x="1170.4" y="709" width="6.4" height="15.0" fill="rgb(241,72,10)" rx="2" ry="2" />
<text  x="1173.37" y="719.5" ></text>
</g>
<g >
<title>row::compact_and_expire (63 samples, 1.19%)</title><rect x="402.4" y="309" width="14.1" height="15.0" fill="rgb(206,125,22)" rx="2" ry="2" />
<text  x="405.44" y="319.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (1 samples, 0.02%)</title><rect x="695.8" y="517" width="0.2" height="15.0" fill="rgb(234,221,12)" rx="2" ry="2" />
<text  x="698.82" y="527.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (1 samples, 0.02%)</title><rect x="82.5" y="693" width="0.2" height="15.0" fill="rgb(222,103,19)" rx="2" ry="2" />
<text  x="85.51" y="703.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (2 samples, 0.04%)</title><rect x="1014.9" y="325" width="0.4" height="15.0" fill="rgb(235,176,41)" rx="2" ry="2" />
<text  x="1017.86" y="335.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt; &gt;::satisfy_with_result_of&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::then_wrapped_nrvo&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (1 samples, 0.02%)</title><rect x="707.9" y="597" width="0.2" height="15.0" fill="rgb(220,43,40)" rx="2" ry="2" />
<text  x="710.87" y="607.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (1 samples, 0.02%)</title><rect x="443.5" y="501" width="0.2" height="15.0" fill="rgb(228,210,7)" rx="2" ry="2" />
<text  x="446.49" y="511.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (1 samples, 0.02%)</title><rect x="327.5" y="357" width="0.2" height="15.0" fill="rgb(247,155,33)" rx="2" ry="2" />
<text  x="330.48" y="367.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::then_wrapped_nrvo&lt;void, service::abstract_read_executor::make_data_requests (11 samples, 0.21%)</title><rect x="978.1" y="389" width="2.4" height="15.0" fill="rgb(229,139,25)" rx="2" ry="2" />
<text  x="981.05" y="399.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (2 samples, 0.04%)</title><rect x="827.9" y="453" width="0.4" height="15.0" fill="rgb(244,202,40)" rx="2" ry="2" />
<text  x="830.90" y="463.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::get0 (1 samples, 0.02%)</title><rect x="327.0" y="389" width="0.3" height="15.0" fill="rgb(247,151,53)" rx="2" ry="2" />
<text  x="330.03" y="399.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::iterator_at (1 samples, 0.02%)</title><rect x="1043.2" y="389" width="0.2" height="15.0" fill="rgb(216,45,33)" rx="2" ry="2" />
<text  x="1046.20" y="399.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::abstract_read_executor (16 samples, 0.30%)</title><rect x="1051.9" y="405" width="3.6" height="15.0" fill="rgb(231,224,17)" rx="2" ry="2" />
<text  x="1054.90" y="415.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::find&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="17.1" y="373" width="0.3" height="15.0" fill="rgb(229,172,43)" rx="2" ry="2" />
<text  x="20.14" y="383.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::clear (1 samples, 0.02%)</title><rect x="795.3" y="357" width="0.3" height="15.0" fill="rgb(205,139,21)" rx="2" ry="2" />
<text  x="798.33" y="367.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::needs_post_query_ordering (5 samples, 0.09%)</title><rect x="939.0" y="501" width="1.1" height="15.0" fill="rgb(221,159,40)" rx="2" ry="2" />
<text  x="942.01" y="511.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (9 samples, 0.17%)</title><rect x="732.2" y="421" width="2.0" height="15.0" fill="rgb(239,182,37)" rx="2" ry="2" />
<text  x="735.19" y="431.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureIvE9then_implIZZN5query12consume_pageIL19emit_only_live_rows1E20query_result_builderEEDaR20flat_mutation_readerNS_13lw_shared_ptrI22compact_mutation_stateIXT_EL20compact_for_sstables0EEEERKNS3_15partition_sliceEOT0_mjNSt6chrono10time_pointI8gc_clockNSJ_8durationIlSt5ratioILl1ELl1EEEEEEENUlP17mutation_fragmentE_clESS_EUlDpOT_E_NS0_ISt5tupleIJSt8optionalI21clustering_key_prefixEEEEEEESH_OT_ (3 samples, 0.06%)</title><rect x="322.6" y="469" width="0.6" height="15.0" fill="rgb(210,101,13)" rx="2" ry="2" />
<text  x="325.57" y="479.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;tracking_allocator&lt;mutation_fragment&gt; &gt;::_S_destroy&lt;tracking_allocator&lt;mutation_fragment&gt;, mutation_fragment&gt; (1 samples, 0.02%)</title><rect x="294.5" y="357" width="0.2" height="15.0" fill="rgb(250,209,31)" rx="2" ry="2" />
<text  x="297.46" y="367.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_last_fragment_kind, 4ul&gt;::~small_vector (1 samples, 0.02%)</title><rect x="576.7" y="453" width="0.2" height="15.0" fill="rgb(246,214,7)" rx="2" ry="2" />
<text  x="579.69" y="463.5" ></text>
</g>
<g >
<title>db::large_data_handler::maybe_delete_large_data_entries (1 samples, 0.02%)</title><rect x="82.5" y="597" width="0.2" height="15.0" fill="rgb(226,229,22)" rx="2" ry="2" />
<text  x="85.51" y="607.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;dht::ring_position&gt;::wrapping_interval (3 samples, 0.06%)</title><rect x="912.7" y="453" width="0.7" height="15.0" fill="rgb(211,226,25)" rx="2" ry="2" />
<text  x="915.68" y="463.5" ></text>
</g>
<g >
<title>std::_Optional_payload&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, true, false, false&gt;::operator= (1 samples, 0.02%)</title><rect x="38.3" y="373" width="0.3" height="15.0" fill="rgb(226,45,46)" rx="2" ry="2" />
<text  x="41.33" y="383.5" ></text>
</g>
<g >
<title>bytes_ostream::alloc_new (9 samples, 0.17%)</title><rect x="592.3" y="485" width="2.0" height="15.0" fill="rgb(226,222,15)" rx="2" ry="2" />
<text  x="595.30" y="495.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (2 samples, 0.04%)</title><rect x="43.7" y="229" width="0.4" height="15.0" fill="rgb(240,110,33)" rx="2" ry="2" />
<text  x="46.69" y="239.5" ></text>
</g>
<g >
<title>partition_snapshot::slide_to_oldest (4 samples, 0.08%)</title><rect x="562.9" y="373" width="0.8" height="15.0" fill="rgb(234,211,10)" rx="2" ry="2" />
<text  x="565.85" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::vector (7 samples, 0.13%)</title><rect x="922.9" y="501" width="1.6" height="15.0" fill="rgb(222,189,19)" rx="2" ry="2" />
<text  x="925.94" y="511.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;service::storage_proxy_coordinator_query_result&gt;::set_value&lt;service::storage_proxy_coordinator_query_result&gt; (2 samples, 0.04%)</title><rect x="1142.5" y="581" width="0.4" height="15.0" fill="rgb(236,120,7)" rx="2" ry="2" />
<text  x="1145.48" y="591.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.04%)</title><rect x="518.9" y="405" width="0.4" height="15.0" fill="rgb(238,170,50)" rx="2" ry="2" />
<text  x="521.90" y="415.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::key_is_in_relation (1 samples, 0.02%)</title><rect x="938.6" y="501" width="0.2" height="15.0" fill="rgb(231,226,14)" rx="2" ry="2" />
<text  x="941.56" y="511.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mTokens (1 samples, 0.02%)</title><rect x="107.5" y="277" width="0.2" height="15.0" fill="rgb(252,149,18)" rx="2" ry="2" />
<text  x="110.50" y="287.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt;::_M_reset (2 samples, 0.04%)</title><rect x="268.8" y="341" width="0.4" height="15.0" fill="rgb(235,16,9)" rx="2" ry="2" />
<text  x="271.80" y="351.5" ></text>
</g>
<g >
<title>std::apply&lt;auth::permissions_cache::get (58 samples, 1.10%)</title><rect x="777.7" y="357" width="12.9" height="15.0" fill="rgb(252,151,41)" rx="2" ry="2" />
<text  x="780.70" y="367.5" ></text>
</g>
<g >
<title>mutation_querier::consume_end_of_stream (1 samples, 0.02%)</title><rect x="337.5" y="325" width="0.2" height="15.0" fill="rgb(209,191,8)" rx="2" ry="2" />
<text  x="340.52" y="335.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::clear (1 samples, 0.02%)</title><rect x="631.3" y="581" width="0.3" height="15.0" fill="rgb(242,10,51)" rx="2" ry="2" />
<text  x="634.35" y="591.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::drop_unneeded_tombstones (1 samples, 0.02%)</title><rect x="402.0" y="309" width="0.2" height="15.0" fill="rgb(225,103,30)" rx="2" ry="2" />
<text  x="404.99" y="319.5" ></text>
</g>
<g >
<title>write&lt;unsigned int&gt; (1 samples, 0.02%)</title><rect x="1125.3" y="357" width="0.2" height="15.0" fill="rgb(209,109,40)" rx="2" ry="2" />
<text  x="1128.30" y="367.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="40.8" y="357" width="0.2" height="15.0" fill="rgb(205,150,24)" rx="2" ry="2" />
<text  x="43.79" y="367.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.02%)</title><rect x="21.2" y="453" width="0.2" height="15.0" fill="rgb(254,228,13)" rx="2" ry="2" />
<text  x="24.16" y="463.5" ></text>
</g>
<g >
<title>std::pair&lt;auth::role_or_anonymous, auth::resource&gt;::pair (1 samples, 0.02%)</title><rect x="775.7" y="325" width="0.2" height="15.0" fill="rgb(219,10,32)" rx="2" ry="2" />
<text  x="778.69" y="335.5" ></text>
</g>
<g >
<title>non-virtual thunk to cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::~single_column_primary_key_restrictions (1 samples, 0.02%)</title><rect x="632.9" y="533" width="0.2" height="15.0" fill="rgb(210,126,27)" rx="2" ry="2" />
<text  x="635.91" y="543.5" ></text>
</g>
<g >
<title>ser::qr_partition__static_row&lt;bytes_ostream&gt;::qr_partition__static_row (5 samples, 0.09%)</title><rect x="349.8" y="277" width="1.1" height="15.0" fill="rgb(254,123,11)" rx="2" ry="2" />
<text  x="352.79" y="287.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.02%)</title><rect x="857.8" y="341" width="0.2" height="15.0" fill="rgb(232,211,12)" rx="2" ry="2" />
<text  x="860.80" y="351.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_map&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::at&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt; &gt; (16 samples, 0.30%)</title><rect x="746.2" y="469" width="3.6" height="15.0" fill="rgb(213,29,46)" rx="2" ry="2" />
<text  x="749.25" y="479.5" ></text>
</g>
<g >
<title>std::function&lt;seastar::future&lt;void&gt;  (1 samples, 0.02%)</title><rect x="850.0" y="485" width="0.2" height="15.0" fill="rgb(220,141,23)" rx="2" ry="2" />
<text  x="852.99" y="495.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (1 samples, 0.02%)</title><rect x="243.6" y="213" width="0.2" height="15.0" fill="rgb(236,107,43)" rx="2" ry="2" />
<text  x="246.59" y="223.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (1 samples, 0.02%)</title><rect x="675.5" y="581" width="0.2" height="15.0" fill="rgb(231,17,14)" rx="2" ry="2" />
<text  x="678.52" y="591.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::deallocate (1 samples, 0.02%)</title><rect x="558.4" y="389" width="0.2" height="15.0" fill="rgb(240,74,44)" rx="2" ry="2" />
<text  x="561.39" y="399.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (2 samples, 0.04%)</title><rect x="779.3" y="277" width="0.4" height="15.0" fill="rgb(206,172,18)" rx="2" ry="2" />
<text  x="782.26" y="287.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::get_limit (2 samples, 0.04%)</title><rect x="1085.1" y="517" width="0.5" height="15.0" fill="rgb(241,169,28)" rx="2" ry="2" />
<text  x="1088.14" y="527.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (6 samples, 0.11%)</title><rect x="625.5" y="565" width="1.4" height="15.0" fill="rgb(249,39,13)" rx="2" ry="2" />
<text  x="628.55" y="575.5" ></text>
</g>
<g >
<title>query_mutations_on_all_shards (1 samples, 0.02%)</title><rect x="105.9" y="453" width="0.3" height="15.0" fill="rgb(246,190,17)" rx="2" ry="2" />
<text  x="108.93" y="463.5" ></text>
</g>
<g >
<title>std::construct_at&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="46.6" y="341" width="0.2" height="15.0" fill="rgb(254,115,34)" rx="2" ry="2" />
<text  x="49.59" y="351.5" ></text>
</g>
<g >
<title>sstables::mc::writer::write_cells (3 samples, 0.06%)</title><rect x="81.4" y="437" width="0.7" height="15.0" fill="rgb(244,86,28)" rx="2" ry="2" />
<text  x="84.39" y="447.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (4 samples, 0.08%)</title><rect x="800.0" y="389" width="0.9" height="15.0" fill="rgb(220,142,48)" rx="2" ry="2" />
<text  x="803.01" y="399.5" ></text>
</g>
<g >
<title>sstables::mc::write_clustering_prefix&lt;sstables::file_writer&gt; (1 samples, 0.02%)</title><rect x="81.2" y="453" width="0.2" height="15.0" fill="rgb(251,183,40)" rx="2" ry="2" />
<text  x="84.17" y="463.5" ></text>
</g>
<g >
<title>dht::tri_compare (14 samples, 0.26%)</title><rect x="1063.9" y="325" width="3.2" height="15.0" fill="rgb(219,27,50)" rx="2" ry="2" />
<text  x="1066.95" y="335.5" ></text>
</g>
<g >
<title>utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;::touch (1 samples, 0.02%)</title><rect x="724.2" y="517" width="0.2" height="15.0" fill="rgb(218,47,46)" rx="2" ry="2" />
<text  x="727.16" y="527.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (14 samples, 0.26%)</title><rect x="1129.3" y="405" width="3.1" height="15.0" fill="rgb(207,2,48)" rx="2" ry="2" />
<text  x="1132.32" y="415.5" ></text>
</g>
<g >
<title>auth::resource::resource (1 samples, 0.02%)</title><rect x="75.6" y="533" width="0.2" height="15.0" fill="rgb(217,179,40)" rx="2" ry="2" />
<text  x="78.59" y="543.5" ></text>
</g>
<g >
<title>partition_snapshot::static_row (7 samples, 0.13%)</title><rect x="286.6" y="309" width="1.6" height="15.0" fill="rgb(250,61,23)" rx="2" ry="2" />
<text  x="289.65" y="319.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::operation::set_value, std::default_delete&lt;cql3::operation::set_value&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::operation::set_value&gt;, void&gt; (1 samples, 0.02%)</title><rect x="57.1" y="389" width="0.2" height="15.0" fill="rgb(245,87,12)" rx="2" ry="2" />
<text  x="60.08" y="399.5" ></text>
</g>
<g >
<title>partition_builder::accept_row_cell (1 samples, 0.02%)</title><rect x="1120.8" y="325" width="0.3" height="15.0" fill="rgb(234,58,25)" rx="2" ry="2" />
<text  x="1123.84" y="335.5" ></text>
</g>
<g >
<title>service::client_state::check_has_permission (7 samples, 0.13%)</title><rect x="76.0" y="501" width="1.6" height="15.0" fill="rgb(229,33,13)" rx="2" ry="2" />
<text  x="79.04" y="511.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (4 samples, 0.08%)</title><rect x="37.2" y="437" width="0.9" height="15.0" fill="rgb(252,162,29)" rx="2" ry="2" />
<text  x="40.22" y="447.5" ></text>
</g>
<g >
<title>mutation_partition::mutation_partition (1 samples, 0.02%)</title><rect x="1118.2" y="181" width="0.2" height="15.0" fill="rgb(254,165,44)" rx="2" ry="2" />
<text  x="1121.16" y="191.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;flat_mutation_reader::impl::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (7 samples, 0.13%)</title><rect x="327.3" y="389" width="1.5" height="15.0" fill="rgb(239,59,43)" rx="2" ry="2" />
<text  x="330.25" y="399.5" ></text>
</g>
<g >
<title>operator new (6 samples, 0.11%)</title><rect x="544.3" y="453" width="1.4" height="15.0" fill="rgb(238,117,13)" rx="2" ry="2" />
<text  x="547.34" y="463.5" ></text>
</g>
<g >
<title>query::result::builder::builder (18 samples, 0.34%)</title><rect x="590.3" y="517" width="4.0" height="15.0" fill="rgb(234,34,2)" rx="2" ry="2" />
<text  x="593.29" y="527.5" ></text>
</g>
<g >
<title>cql3::restrictions::(anonymous namespace)::range_from_bytes (4 samples, 0.08%)</title><rect x="854.5" y="453" width="0.8" height="15.0" fill="rgb(250,95,50)" rx="2" ry="2" />
<text  x="857.45" y="463.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mTokens (6 samples, 0.11%)</title><rect x="32.8" y="357" width="1.3" height="15.0" fill="rgb(241,23,2)" rx="2" ry="2" />
<text  x="35.76" y="367.5" ></text>
</g>
<g >
<title>absl::hash_internal::HashState::combine_contiguous (5 samples, 0.09%)</title><rect x="828.8" y="437" width="1.1" height="15.0" fill="rgb(214,58,11)" rx="2" ry="2" />
<text  x="831.79" y="447.5" ></text>
</g>
<g >
<title>schema_registry_entry::load (1 samples, 0.02%)</title><rect x="107.5" y="549" width="0.2" height="15.0" fill="rgb(235,83,47)" rx="2" ry="2" />
<text  x="110.50" y="559.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.02%)</title><rect x="57.7" y="309" width="0.3" height="15.0" fill="rgb(220,110,23)" rx="2" ry="2" />
<text  x="60.74" y="319.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::operation::set_value, std::default_delete&lt;cql3::operation::set_value&gt; &gt;::__uniq_ptr_impl (1 samples, 0.02%)</title><rect x="57.1" y="357" width="0.2" height="15.0" fill="rgb(209,63,52)" rx="2" ry="2" />
<text  x="60.08" y="367.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (6 samples, 0.11%)</title><rect x="651.2" y="565" width="1.3" height="15.0" fill="rgb(206,103,53)" rx="2" ry="2" />
<text  x="654.20" y="575.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (1 samples, 0.02%)</title><rect x="132.7" y="501" width="0.2" height="15.0" fill="rgb(247,44,27)" rx="2" ry="2" />
<text  x="135.71" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::~vector (2 samples, 0.04%)</title><rect x="1116.2" y="533" width="0.4" height="15.0" fill="rgb(216,51,46)" rx="2" ry="2" />
<text  x="1119.15" y="543.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (4 samples, 0.08%)</title><rect x="983.0" y="389" width="0.9" height="15.0" fill="rgb(230,93,42)" rx="2" ry="2" />
<text  x="985.96" y="399.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.06%)</title><rect x="767.0" y="405" width="0.7" height="15.0" fill="rgb(226,45,27)" rx="2" ry="2" />
<text  x="769.99" y="415.5" ></text>
</g>
<g >
<title>absl::hash_internal::HashState::combine_contiguous (1 samples, 0.02%)</title><rect x="815.2" y="373" width="0.2" height="15.0" fill="rgb(253,48,46)" rx="2" ry="2" />
<text  x="818.18" y="383.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.08%)</title><rect x="496.6" y="389" width="0.9" height="15.0" fill="rgb(243,34,48)" rx="2" ry="2" />
<text  x="499.59" y="399.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (1 samples, 0.02%)</title><rect x="41.9" y="389" width="0.2" height="15.0" fill="rgb(237,78,39)" rx="2" ry="2" />
<text  x="44.90" y="399.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::allocator (1 samples, 0.02%)</title><rect x="20.5" y="405" width="0.2" height="15.0" fill="rgb(217,102,10)" rx="2" ry="2" />
<text  x="23.49" y="415.5" ></text>
</g>
<g >
<title>cql_transport::messages::result_message::rows::rows (2 samples, 0.04%)</title><rect x="645.4" y="533" width="0.4" height="15.0" fill="rgb(243,28,3)" rx="2" ry="2" />
<text  x="648.40" y="543.5" ></text>
</g>
<g >
<title>utils::tuple_hash::hash_impl&lt;2ul, auth::resource_kind, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (3 samples, 0.06%)</title><rect x="789.5" y="213" width="0.7" height="15.0" fill="rgb(220,92,16)" rx="2" ry="2" />
<text  x="792.53" y="223.5" ></text>
</g>
<g >
<title>std::function&lt;flat_mutation_reader  (416 samples, 7.87%)</title><rect x="445.5" y="485" width="92.8" height="15.0" fill="rgb(233,136,38)" rx="2" ry="2" />
<text  x="448.50" y="495.5" >std::functi..</text>
</g>
<g >
<title>db::schema_tables::fill_column_info (1 samples, 0.02%)</title><rect x="106.8" y="501" width="0.3" height="15.0" fill="rgb(247,191,50)" rx="2" ry="2" />
<text  x="109.83" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;global_schema_ptr, std::allocator&lt;global_schema_ptr&gt; &gt;::_M_realloc_insert&lt;seastar::lw_shared_ptr&lt;schema const&gt;&amp;&gt; (1 samples, 0.02%)</title><rect x="105.7" y="533" width="0.2" height="15.0" fill="rgb(206,8,41)" rx="2" ry="2" />
<text  x="108.71" y="543.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;partition_key, false, false&gt;::_Optional_base (1 samples, 0.02%)</title><rect x="1055.9" y="421" width="0.2" height="15.0" fill="rgb(239,68,26)" rx="2" ry="2" />
<text  x="1058.91" y="431.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql_transport::messages::result_message::rows&gt;::~shared_ptr_count_for (29 samples, 0.55%)</title><rect x="95.9" y="581" width="6.5" height="15.0" fill="rgb(232,130,6)" rx="2" ry="2" />
<text  x="98.90" y="591.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.02%)</title><rect x="47.5" y="245" width="0.2" height="15.0" fill="rgb(232,149,25)" rx="2" ry="2" />
<text  x="50.48" y="255.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.02%)</title><rect x="1152.7" y="501" width="0.3" height="15.0" fill="rgb(216,83,15)" rx="2" ry="2" />
<text  x="1155.74" y="511.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (1 samples, 0.02%)</title><rect x="72.7" y="421" width="0.2" height="15.0" fill="rgb(228,47,4)" rx="2" ry="2" />
<text  x="75.69" y="431.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_requests (1 samples, 0.02%)</title><rect x="1031.6" y="453" width="0.2" height="15.0" fill="rgb(233,105,26)" rx="2" ry="2" />
<text  x="1034.60" y="463.5" ></text>
</g>
<g >
<title>seastar::future_state_base::any::operator= (3 samples, 0.06%)</title><rect x="816.1" y="485" width="0.6" height="15.0" fill="rgb(235,128,38)" rx="2" ry="2" />
<text  x="819.08" y="495.5" ></text>
</g>
<g >
<title>bplus::tree&lt;long, intrusive_array&lt;memtable_entry&gt;, dht::raw_token_less_comparator, 16ul,  (1 samples, 0.02%)</title><rect x="1119.3" y="277" width="0.2" height="15.0" fill="rgb(214,22,15)" rx="2" ry="2" />
<text  x="1122.28" y="287.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, seastar::shared_ptr&lt;service::abstract_write_response_handler&gt; &gt;, std::allocator&lt;std::pair&lt;unsigned long const, seastar::shared_ptr&lt;service::abstract_write_response_handler&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_emplace&lt;unsigned long&amp;, seastar::shared_ptr&lt;service::abstract_write_response_handler&gt; &gt; (1 samples, 0.02%)</title><rect x="1131.8" y="261" width="0.2" height="15.0" fill="rgb(235,68,3)" rx="2" ry="2" />
<text  x="1134.77" y="271.5" ></text>
</g>
<g >
<title>cql3::raw_value_view::with_value&lt;cql3::update_parameters::make_cell (1 samples, 0.02%)</title><rect x="856.5" y="373" width="0.2" height="15.0" fill="rgb(224,104,44)" rx="2" ry="2" />
<text  x="859.46" y="383.5" ></text>
</g>
<g >
<title>service::never_speculating_read_executor::never_speculating_read_executor (22 samples, 0.42%)</title><rect x="1051.0" y="421" width="4.9" height="15.0" fill="rgb(214,171,4)" rx="2" ry="2" />
<text  x="1054.01" y="431.5" ></text>
</g>
<g >
<title>timerfd_settime (1 samples, 0.02%)</title><rect x="1167.5" y="533" width="0.2" height="15.0" fill="rgb(213,221,3)" rx="2" ry="2" />
<text  x="1170.47" y="543.5" ></text>
</g>
<g >
<title>database::find_schema (5 samples, 0.09%)</title><rect x="807.4" y="453" width="1.1" height="15.0" fill="rgb(252,184,37)" rx="2" ry="2" />
<text  x="810.38" y="463.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (12 samples, 0.23%)</title><rect x="1094.3" y="501" width="2.7" height="15.0" fill="rgb(227,33,31)" rx="2" ry="2" />
<text  x="1097.29" y="511.5" ></text>
</g>
<g >
<title>boost::range_detail::default_constructible_unary_fn_wrapper&lt;service::abstract_write_response_handler::max_backlog (1 samples, 0.02%)</title><rect x="703.9" y="501" width="0.2" height="15.0" fill="rgb(209,106,13)" rx="2" ry="2" />
<text  x="706.86" y="511.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;gms::inet_address, std::pair&lt;gms::inet_address const, utils::UUID&gt;, std::allocator&lt;std::pair&lt;gms::inet_address const, utils::UUID&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;gms::inet_address&gt;, std::hash&lt;gms::inet_address&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (7 samples, 0.13%)</title><rect x="1146.3" y="533" width="1.5" height="15.0" fill="rgb(245,72,35)" rx="2" ry="2" />
<text  x="1149.27" y="543.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, cql3::statements::raw::parsed_statement*, std::default_delete&lt;cql3::statements::raw::parsed_statement&gt; &gt; (1 samples, 0.02%)</title><rect x="62.4" y="421" width="0.3" height="15.0" fill="rgb(244,193,33)" rx="2" ry="2" />
<text  x="65.43" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (2 samples, 0.04%)</title><rect x="415.4" y="245" width="0.4" height="15.0" fill="rgb(235,178,19)" rx="2" ry="2" />
<text  x="418.38" y="255.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;void&gt;, database*, seastar::lw_shared_ptr&lt;schema const&gt;, frozen_mutation const&amp;, tracing::trace_state_ptr, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, seastar::bool_class&lt;db::force_sync_tag&gt; &gt;::operator (1 samples, 0.02%)</title><rect x="1128.9" y="245" width="0.2" height="15.0" fill="rgb(223,65,12)" rx="2" ry="2" />
<text  x="1131.87" y="255.5" ></text>
</g>
<g >
<title>partition_key_view::legacy_tri_compare (25 samples, 0.47%)</title><rect x="483.9" y="341" width="5.6" height="15.0" fill="rgb(240,174,10)" rx="2" ry="2" />
<text  x="486.87" y="351.5" ></text>
</g>
<g >
<title>dht::tri_compare (8 samples, 0.15%)</title><rect x="481.2" y="357" width="1.8" height="15.0" fill="rgb(213,83,5)" rx="2" ry="2" />
<text  x="484.20" y="367.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_destroy_data (2 samples, 0.04%)</title><rect x="401.1" y="261" width="0.4" height="15.0" fill="rgb(211,8,1)" rx="2" ry="2" />
<text  x="404.10" y="271.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::clear (5 samples, 0.09%)</title><rect x="318.3" y="453" width="1.1" height="15.0" fill="rgb(223,91,30)" rx="2" ry="2" />
<text  x="321.33" y="463.5" ></text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt;&amp;&gt; (5 samples, 0.09%)</title><rect x="835.5" y="453" width="1.1" height="15.0" fill="rgb(206,204,23)" rx="2" ry="2" />
<text  x="838.49" y="463.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::got_cl (1 samples, 0.02%)</title><rect x="688.2" y="565" width="0.3" height="15.0" fill="rgb(231,224,8)" rx="2" ry="2" />
<text  x="691.24" y="575.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::comparator_type (1 samples, 0.02%)</title><rect x="107.5" y="405" width="0.2" height="15.0" fill="rgb(241,173,1)" rx="2" ry="2" />
<text  x="110.50" y="415.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.08%)</title><rect x="518.0" y="421" width="0.9" height="15.0" fill="rgb(254,84,6)" rx="2" ry="2" />
<text  x="521.01" y="431.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextTokenStr (1 samples, 0.02%)</title><rect x="704.5" y="293" width="0.2" height="15.0" fill="rgb(243,184,37)" rx="2" ry="2" />
<text  x="707.52" y="303.5" ></text>
</g>
<g >
<title>seastar::file_data_sink_impl::file_data_sink_impl (1 samples, 0.02%)</title><rect x="676.0" y="533" width="0.2" height="15.0" fill="rgb(214,217,8)" rx="2" ry="2" />
<text  x="678.97" y="543.5" ></text>
</g>
<g >
<title>bound_view::from_range&lt;nonwrapping_interval&gt; (3 samples, 0.06%)</title><rect x="259.4" y="229" width="0.7" height="15.0" fill="rgb(219,0,43)" rx="2" ry="2" />
<text  x="262.43" y="239.5" ></text>
</g>
<g >
<title>seastar::future&lt;mutation_fragment*&gt;::then_impl&lt;query::consume_page&lt; (1 samples, 0.02%)</title><rect x="1165.2" y="549" width="0.3" height="15.0" fill="rgb(252,23,37)" rx="2" ry="2" />
<text  x="1168.24" y="559.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.02%)</title><rect x="10.7" y="677" width="0.2" height="15.0" fill="rgb(213,138,16)" rx="2" ry="2" />
<text  x="13.67" y="687.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::at (9 samples, 0.17%)</title><rect x="1036.7" y="421" width="2.0" height="15.0" fill="rgb(205,17,1)" rx="2" ry="2" />
<text  x="1039.73" y="431.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (5 samples, 0.09%)</title><rect x="303.2" y="421" width="1.1" height="15.0" fill="rgb(214,56,26)" rx="2" ry="2" />
<text  x="306.16" y="431.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::emplace_back&lt;unsigned int const&amp;&gt; (1 samples, 0.02%)</title><rect x="1114.4" y="517" width="0.2" height="15.0" fill="rgb(206,150,24)" rx="2" ry="2" />
<text  x="1117.37" y="527.5" ></text>
</g>
<g >
<title>ser::serializer&lt;ser::tombstone_view&gt;::skip&lt;seastar::simple_memory_input_stream&gt; (1 samples, 0.02%)</title><rect x="1122.4" y="309" width="0.2" height="15.0" fill="rgb(242,57,38)" rx="2" ry="2" />
<text  x="1125.40" y="319.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (1 samples, 0.02%)</title><rect x="44.6" y="389" width="0.2" height="15.0" fill="rgb(233,86,31)" rx="2" ry="2" />
<text  x="47.58" y="399.5" ></text>
</g>
<g >
<title>service::storage_proxy::register_response_handler (1 samples, 0.02%)</title><rect x="1131.8" y="277" width="0.2" height="15.0" fill="rgb(206,207,10)" rx="2" ry="2" />
<text  x="1134.77" y="287.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (1 samples, 0.02%)</title><rect x="321.0" y="501" width="0.2" height="15.0" fill="rgb(247,220,1)" rx="2" ry="2" />
<text  x="324.01" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (2 samples, 0.04%)</title><rect x="100.4" y="549" width="0.4" height="15.0" fill="rgb(232,193,53)" rx="2" ry="2" />
<text  x="103.36" y="559.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, cql3::statements::raw::modification_statement*, std::default_delete&lt;cql3::statements::raw::modification_statement&gt; &gt; (1 samples, 0.02%)</title><rect x="62.2" y="437" width="0.2" height="15.0" fill="rgb(207,81,16)" rx="2" ry="2" />
<text  x="65.21" y="447.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::has_token (5 samples, 0.09%)</title><rect x="932.3" y="469" width="1.1" height="15.0" fill="rgb(235,22,38)" rx="2" ry="2" />
<text  x="935.31" y="479.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (1 samples, 0.02%)</title><rect x="11.3" y="693" width="0.3" height="15.0" fill="rgb(220,227,49)" rx="2" ry="2" />
<text  x="14.34" y="703.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::~partition_snapshot_flat_reader (1 samples, 0.02%)</title><rect x="1165.5" y="453" width="0.2" height="15.0" fill="rgb(246,60,6)" rx="2" ry="2" />
<text  x="1168.46" y="463.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (1 samples, 0.02%)</title><rect x="321.5" y="485" width="0.2" height="15.0" fill="rgb(251,40,37)" rx="2" ry="2" />
<text  x="324.45" y="495.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.02%)</title><rect x="47.7" y="261" width="0.2" height="15.0" fill="rgb(225,196,23)" rx="2" ry="2" />
<text  x="50.70" y="271.5" ></text>
</g>
<g >
<title>partition_entry::apply (3 samples, 0.06%)</title><rect x="1123.3" y="341" width="0.7" height="15.0" fill="rgb(233,50,14)" rx="2" ry="2" />
<text  x="1126.29" y="351.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (2 samples, 0.04%)</title><rect x="19.4" y="581" width="0.4" height="15.0" fill="rgb(246,65,3)" rx="2" ry="2" />
<text  x="22.37" y="591.5" ></text>
</g>
<g >
<title>seastar::future&lt;std::tuple&lt;std::optional&lt;clustering_key_prefix&gt; &gt; &gt;::then_impl&lt;query::querier&lt; (2 samples, 0.04%)</title><rect x="540.8" y="517" width="0.4" height="15.0" fill="rgb(216,99,23)" rx="2" ry="2" />
<text  x="543.77" y="527.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="66.7" y="405" width="0.2" height="15.0" fill="rgb(244,168,43)" rx="2" ry="2" />
<text  x="69.67" y="415.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (18 samples, 0.34%)</title><rect x="1039.9" y="405" width="4.0" height="15.0" fill="rgb(229,158,35)" rx="2" ry="2" />
<text  x="1042.85" y="415.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, flat_mutation_reader, reader_concurrency_semaphore::inactive_read_handle&gt;::_Move_ctor_base (2 samples, 0.04%)</title><rect x="613.9" y="485" width="0.5" height="15.0" fill="rgb(217,99,41)" rx="2" ry="2" />
<text  x="616.94" y="495.5" ></text>
</g>
<g >
<title>[unknown] (326 samples, 6.16%)</title><rect x="10.4" y="725" width="72.8" height="15.0" fill="rgb(244,76,47)" rx="2" ry="2" />
<text  x="13.45" y="735.5" >[unknown]</text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_S_construct&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (1 samples, 0.02%)</title><rect x="22.5" y="357" width="0.2" height="15.0" fill="rgb(222,99,54)" rx="2" ry="2" />
<text  x="25.49" y="367.5" ></text>
</g>
<g >
<title>from_hex (7 samples, 0.13%)</title><rect x="65.3" y="437" width="1.6" height="15.0" fill="rgb(218,15,50)" rx="2" ry="2" />
<text  x="68.33" y="447.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::set_value&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; (1 samples, 0.02%)</title><rect x="139.0" y="549" width="0.2" height="15.0" fill="rgb(219,130,16)" rx="2" ry="2" />
<text  x="141.95" y="559.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt;::~_Variant_storage (1 samples, 0.02%)</title><rect x="888.4" y="389" width="0.2" height="15.0" fill="rgb(236,38,11)" rx="2" ry="2" />
<text  x="891.36" y="399.5" ></text>
</g>
<g >
<title>query::querier_base::~querier_base (35 samples, 0.66%)</title><rect x="578.5" y="533" width="7.8" height="15.0" fill="rgb(238,179,54)" rx="2" ry="2" />
<text  x="581.47" y="543.5" ></text>
</g>
<g >
<title>managed_bytes::operator= (3 samples, 0.06%)</title><rect x="1097.9" y="517" width="0.6" height="15.0" fill="rgb(209,193,50)" rx="2" ry="2" />
<text  x="1100.86" y="527.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.02%)</title><rect x="58.2" y="245" width="0.2" height="15.0" fill="rgb(236,39,52)" rx="2" ry="2" />
<text  x="61.19" y="255.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::get_value (1 samples, 0.02%)</title><rect x="707.4" y="597" width="0.2" height="15.0" fill="rgb(220,17,10)" rx="2" ry="2" />
<text  x="710.42" y="607.5" ></text>
</g>
<g >
<title>ser::row_view::columns (2 samples, 0.04%)</title><rect x="1122.6" y="325" width="0.5" height="15.0" fill="rgb(223,158,5)" rx="2" ry="2" />
<text  x="1125.62" y="335.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::execute_without_condition (1 samples, 0.02%)</title><rect x="853.1" y="501" width="0.2" height="15.0" fill="rgb(239,42,12)" rx="2" ry="2" />
<text  x="856.11" y="511.5" ></text>
</g>
<g >
<title>service::storage_service::init_server (1 samples, 0.02%)</title><rect x="11.1" y="581" width="0.2" height="15.0" fill="rgb(235,208,4)" rx="2" ry="2" />
<text  x="14.12" y="591.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (4 samples, 0.08%)</title><rect x="1105.9" y="469" width="0.9" height="15.0" fill="rgb(234,69,11)" rx="2" ry="2" />
<text  x="1108.89" y="479.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.02%)</title><rect x="11.1" y="549" width="0.2" height="15.0" fill="rgb(227,131,1)" rx="2" ry="2" />
<text  x="14.12" y="559.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.04%)</title><rect x="467.1" y="373" width="0.5" height="15.0" fill="rgb(214,120,50)" rx="2" ry="2" />
<text  x="470.14" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (8 samples, 0.15%)</title><rect x="830.4" y="501" width="1.7" height="15.0" fill="rgb(227,57,41)" rx="2" ry="2" />
<text  x="833.36" y="511.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::normalColumnOperation (67 samples, 1.27%)</title><rect x="42.4" y="421" width="14.9" height="15.0" fill="rgb(251,202,20)" rx="2" ry="2" />
<text  x="45.35" y="431.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::fillBuffer (1 samples, 0.02%)</title><rect x="107.5" y="341" width="0.2" height="15.0" fill="rgb(245,190,0)" rx="2" ry="2" />
<text  x="110.50" y="351.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;mutation_reader_merger::operator (2 samples, 0.04%)</title><rect x="299.6" y="421" width="0.4" height="15.0" fill="rgb(224,157,19)" rx="2" ry="2" />
<text  x="302.59" y="431.5" ></text>
</g>
<g >
<title>seastar::futurize_invoke&lt;seastar::future&lt;void&gt;  (4 samples, 0.08%)</title><rect x="676.2" y="517" width="0.9" height="15.0" fill="rgb(211,188,25)" rx="2" ry="2" />
<text  x="679.19" y="527.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (2 samples, 0.04%)</title><rect x="37.2" y="405" width="0.5" height="15.0" fill="rgb(246,115,18)" rx="2" ry="2" />
<text  x="40.22" y="415.5" ></text>
</g>
<g >
<title>tracing::global_trace_state_ptr::global_trace_state_ptr (1 samples, 0.02%)</title><rect x="1030.7" y="389" width="0.2" height="15.0" fill="rgb(224,43,25)" rx="2" ry="2" />
<text  x="1033.70" y="399.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;void&gt;  (1 samples, 0.02%)</title><rect x="82.7" y="709" width="0.3" height="15.0" fill="rgb(223,43,1)" rx="2" ry="2" />
<text  x="85.73" y="719.5" ></text>
</g>
<g >
<title>std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt;::_M_realloc_insert&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; (1 samples, 0.02%)</title><rect x="280.2" y="309" width="0.2" height="15.0" fill="rgb(244,38,35)" rx="2" ry="2" />
<text  x="283.18" y="319.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (6 samples, 0.11%)</title><rect x="411.4" y="245" width="1.3" height="15.0" fill="rgb(226,182,9)" rx="2" ry="2" />
<text  x="414.37" y="255.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::needs_post_query_ordering (8 samples, 0.15%)</title><rect x="640.5" y="565" width="1.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="643.49" y="575.5" ></text>
</g>
<g >
<title>utils::approx_exponential_histogram&lt;512ul, 33554432ul, 4ul&gt;::add (2 samples, 0.04%)</title><rect x="664.6" y="565" width="0.4" height="15.0" fill="rgb(231,170,19)" rx="2" ry="2" />
<text  x="667.59" y="575.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (3 samples, 0.06%)</title><rect x="759.0" y="437" width="0.6" height="15.0" fill="rgb(210,44,11)" rx="2" ry="2" />
<text  x="761.96" y="447.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (1 samples, 0.02%)</title><rect x="704.5" y="453" width="0.2" height="15.0" fill="rgb(211,70,16)" rx="2" ry="2" />
<text  x="707.52" y="463.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (3 samples, 0.06%)</title><rect x="1100.1" y="517" width="0.7" height="15.0" fill="rgb(227,31,41)" rx="2" ry="2" />
<text  x="1103.09" y="527.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="74.9" y="501" width="0.2" height="15.0" fill="rgb(239,214,24)" rx="2" ry="2" />
<text  x="77.92" y="511.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::indirect_move (3 samples, 0.06%)</title><rect x="1015.3" y="325" width="0.7" height="15.0" fill="rgb(245,144,16)" rx="2" ry="2" />
<text  x="1018.31" y="335.5" ></text>
</g>
<g >
<title>managed_bytes::free_chain (1 samples, 0.02%)</title><rect x="858.9" y="389" width="0.2" height="15.0" fill="rgb(232,144,26)" rx="2" ry="2" />
<text  x="861.91" y="399.5" ></text>
</g>
<g >
<title>std::function&lt;seastar::future&lt;void&gt;  (1 samples, 0.02%)</title><rect x="16.9" y="453" width="0.2" height="15.0" fill="rgb(220,51,23)" rx="2" ry="2" />
<text  x="19.92" y="463.5" ></text>
</g>
<g >
<title>ser::qr_clustered_row__cells&lt;bytes_ostream&gt;::qr_clustered_row__cells (1 samples, 0.02%)</title><rect x="368.5" y="277" width="0.3" height="15.0" fill="rgb(249,78,29)" rx="2" ry="2" />
<text  x="371.53" y="287.5" ></text>
</g>
<g >
<title>utils::loading_shared_values&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater, 256ul&gt;::find&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt; &gt; (10 samples, 0.19%)</title><rect x="719.7" y="485" width="2.2" height="15.0" fill="rgb(254,5,4)" rx="2" ry="2" />
<text  x="722.70" y="495.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt; &gt;::invoke&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (137 samples, 2.59%)</title><rect x="992.6" y="373" width="30.5" height="15.0" fill="rgb(248,188,48)" rx="2" ry="2" />
<text  x="995.55" y="383.5" >se..</text>
</g>
<g >
<title>visit&lt;(anonymous namespace)::native_value_clone_visitor&gt; (1 samples, 0.02%)</title><rect x="107.1" y="469" width="0.2" height="15.0" fill="rgb(241,131,31)" rx="2" ry="2" />
<text  x="110.05" y="479.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::local (1 samples, 0.02%)</title><rect x="962.9" y="453" width="0.2" height="15.0" fill="rgb(225,143,25)" rx="2" ry="2" />
<text  x="965.88" y="463.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.02%)</title><rect x="247.2" y="245" width="0.2" height="15.0" fill="rgb(218,100,24)" rx="2" ry="2" />
<text  x="250.16" y="255.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::operator= (3 samples, 0.06%)</title><rect x="820.1" y="533" width="0.7" height="15.0" fill="rgb(212,219,47)" rx="2" ry="2" />
<text  x="823.09" y="543.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (1 samples, 0.02%)</title><rect x="649.4" y="581" width="0.2" height="15.0" fill="rgb(237,168,24)" rx="2" ry="2" />
<text  x="652.42" y="591.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::small_vector (1 samples, 0.02%)</title><rect x="466.0" y="373" width="0.2" height="15.0" fill="rgb(213,202,48)" rx="2" ry="2" />
<text  x="469.03" y="383.5" ></text>
</g>
<g >
<title>locator::token_metadata::get_host_id_if_known (7 samples, 0.13%)</title><rect x="1146.3" y="549" width="1.5" height="15.0" fill="rgb(221,193,38)" rx="2" ry="2" />
<text  x="1149.27" y="559.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (9 samples, 0.17%)</title><rect x="314.3" y="357" width="2.0" height="15.0" fill="rgb(220,109,13)" rx="2" ry="2" />
<text  x="317.31" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="844.0" y="533" width="0.2" height="15.0" fill="rgb(229,167,14)" rx="2" ry="2" />
<text  x="846.96" y="543.5" ></text>
</g>
<g >
<title>locator::everywhere_replication_strategy::calculate_natural_endpoints (1 samples, 0.02%)</title><rect x="17.4" y="501" width="0.2" height="15.0" fill="rgb(231,74,36)" rx="2" ry="2" />
<text  x="20.36" y="511.5" ></text>
</g>
<g >
<title>mutation_partition::lower_bound (5 samples, 0.09%)</title><rect x="273.9" y="293" width="1.1" height="15.0" fill="rgb(215,106,30)" rx="2" ry="2" />
<text  x="276.93" y="303.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_Optional_payload_base (3 samples, 0.06%)</title><rect x="927.6" y="437" width="0.7" height="15.0" fill="rgb(233,154,43)" rx="2" ry="2" />
<text  x="930.63" y="447.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (9 samples, 0.17%)</title><rect x="501.3" y="357" width="2.0" height="15.0" fill="rgb(220,194,52)" rx="2" ry="2" />
<text  x="504.28" y="367.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="21.2" y="405" width="0.2" height="15.0" fill="rgb(214,102,48)" rx="2" ry="2" />
<text  x="24.16" y="415.5" ></text>
</g>
<g >
<title>service::shared_mutation::shared_mutation (8 samples, 0.15%)</title><rect x="1129.3" y="309" width="1.8" height="15.0" fill="rgb(253,131,24)" rx="2" ry="2" />
<text  x="1132.32" y="319.5" ></text>
</g>
<g >
<title>flat_mutation_reader::peek (693 samples, 13.10%)</title><rect x="166.2" y="501" width="154.6" height="15.0" fill="rgb(232,210,50)" rx="2" ry="2" />
<text  x="169.17" y="511.5" >flat_mutation_reade..</text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_9has_tokenERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES28_S2B_ (2 samples, 0.04%)</title><rect x="933.0" y="453" width="0.4" height="15.0" fill="rgb(237,41,22)" rx="2" ry="2" />
<text  x="935.98" y="463.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.02%)</title><rect x="531.4" y="373" width="0.2" height="15.0" fill="rgb(252,122,37)" rx="2" ry="2" />
<text  x="534.40" y="383.5" ></text>
</g>
<g >
<title>TLS init function for cql3::statements::select_statement::_default_parameters (1 samples, 0.02%)</title><rect x="741.1" y="501" width="0.2" height="15.0" fill="rgb(251,23,10)" rx="2" ry="2" />
<text  x="744.11" y="511.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (1 samples, 0.02%)</title><rect x="675.1" y="565" width="0.2" height="15.0" fill="rgb(216,155,16)" rx="2" ry="2" />
<text  x="678.07" y="575.5" ></text>
</g>
<g >
<title>seastar::make_shared&lt;cql3::single_column_relation, seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, cql3::expr::oper_t&amp;, cql3::expr::expression&gt; (1 samples, 0.02%)</title><rect x="58.9" y="421" width="0.2" height="15.0" fill="rgb(225,178,26)" rx="2" ry="2" />
<text  x="61.86" y="431.5" ></text>
</g>
<g >
<title>dht::ring_position_comparator::operator (40 samples, 0.76%)</title><rect x="480.5" y="389" width="9.0" height="15.0" fill="rgb(216,202,13)" rx="2" ry="2" />
<text  x="483.53" y="399.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;void&gt;  (3 samples, 0.06%)</title><rect x="72.2" y="485" width="0.7" height="15.0" fill="rgb(241,25,33)" rx="2" ry="2" />
<text  x="75.25" y="495.5" ></text>
</g>
<g >
<title>intrusive_b::node&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (1 samples, 0.02%)</title><rect x="82.7" y="565" width="0.3" height="15.0" fill="rgb(254,190,51)" rx="2" ry="2" />
<text  x="85.73" y="575.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (14 samples, 0.26%)</title><rect x="419.2" y="341" width="3.1" height="15.0" fill="rgb(215,97,11)" rx="2" ry="2" />
<text  x="422.17" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.02%)</title><rect x="206.3" y="277" width="0.3" height="15.0" fill="rgb(207,68,40)" rx="2" ry="2" />
<text  x="209.33" y="287.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_map&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::at&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt; &gt; (1 samples, 0.02%)</title><rect x="1035.6" y="437" width="0.2" height="15.0" fill="rgb(218,131,47)" rx="2" ry="2" />
<text  x="1038.61" y="447.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::partition_snapshot_flat_reader&lt;memtable&amp;&gt; (1 samples, 0.02%)</title><rect x="515.1" y="373" width="0.2" height="15.0" fill="rgb(213,134,10)" rx="2" ry="2" />
<text  x="518.11" y="383.5" ></text>
</g>
<g >
<title>query_result_builder::consume (1 samples, 0.02%)</title><rect x="418.1" y="325" width="0.2" height="15.0" fill="rgb(213,209,45)" rx="2" ry="2" />
<text  x="421.06" y="335.5" ></text>
</g>
<g >
<title>mutation_fragment::operator= (1 samples, 0.02%)</title><rect x="190.3" y="325" width="0.2" height="15.0" fill="rgb(228,165,46)" rx="2" ry="2" />
<text  x="193.27" y="335.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.02%)</title><rect x="41.9" y="293" width="0.2" height="15.0" fill="rgb(241,12,47)" rx="2" ry="2" />
<text  x="44.90" y="303.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::clear (1 samples, 0.02%)</title><rect x="19.8" y="501" width="0.2" height="15.0" fill="rgb(231,2,32)" rx="2" ry="2" />
<text  x="22.82" y="511.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::trivial_direct_destroy (1 samples, 0.02%)</title><rect x="129.8" y="485" width="0.2" height="15.0" fill="rgb(205,119,22)" rx="2" ry="2" />
<text  x="132.81" y="495.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;std::tuple&lt;std::optional&lt;clustering_key_prefix&gt; &gt; &gt;, query::consume_page&lt; (4 samples, 0.08%)</title><rect x="676.2" y="597" width="0.9" height="15.0" fill="rgb(210,54,9)" rx="2" ry="2" />
<text  x="679.19" y="607.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (1 samples, 0.02%)</title><rect x="41.9" y="405" width="0.2" height="15.0" fill="rgb(233,225,14)" rx="2" ry="2" />
<text  x="44.90" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (2 samples, 0.04%)</title><rect x="1161.7" y="549" width="0.4" height="15.0" fill="rgb(214,135,37)" rx="2" ry="2" />
<text  x="1164.67" y="559.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.02%)</title><rect x="58.2" y="213" width="0.2" height="15.0" fill="rgb(254,148,26)" rx="2" ry="2" />
<text  x="61.19" y="223.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.04%)</title><rect x="517.1" y="373" width="0.5" height="15.0" fill="rgb(210,70,41)" rx="2" ry="2" />
<text  x="520.12" y="383.5" ></text>
</g>
<g >
<title>mutation_partition::compact_for_compaction (1 samples, 0.02%)</title><rect x="106.2" y="501" width="0.2" height="15.0" fill="rgb(254,129,13)" rx="2" ry="2" />
<text  x="109.16" y="511.5" ></text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (1 samples, 0.02%)</title><rect x="15.4" y="709" width="0.2" height="15.0" fill="rgb(243,221,33)" rx="2" ry="2" />
<text  x="18.35" y="719.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.02%)</title><rect x="47.7" y="229" width="0.2" height="15.0" fill="rgb(215,137,48)" rx="2" ry="2" />
<text  x="50.70" y="239.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::deallocate (4 samples, 0.08%)</title><rect x="204.1" y="309" width="0.9" height="15.0" fill="rgb(233,202,22)" rx="2" ry="2" />
<text  x="207.10" y="319.5" ></text>
</g>
<g >
<title>ser::deserialize&lt;seastar::simple_memory_input_stream&gt; (5 samples, 0.09%)</title><rect x="1121.1" y="309" width="1.1" height="15.0" fill="rgb(219,128,9)" rx="2" ry="2" />
<text  x="1124.06" y="319.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (2 samples, 0.04%)</title><rect x="44.4" y="405" width="0.4" height="15.0" fill="rgb(211,66,10)" rx="2" ry="2" />
<text  x="47.36" y="415.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::create_aggregate_statement, std::default_delete&lt;cql3::statements::create_aggregate_statement&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="60.9" y="453" width="0.2" height="15.0" fill="rgb(237,218,10)" rx="2" ry="2" />
<text  x="63.87" y="463.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_restrictions::size (1 samples, 0.02%)</title><rect x="640.3" y="549" width="0.2" height="15.0" fill="rgb(229,76,41)" rx="2" ry="2" />
<text  x="643.27" y="559.5" ></text>
</g>
<g >
<title>ser::serializer&lt;tombstone&gt;::read&lt;seastar::memory_input_stream&lt;bytes_ostream::fragment_iterator&gt; &gt; (1 samples, 0.02%)</title><rect x="1123.1" y="309" width="0.2" height="15.0" fill="rgb(222,203,38)" rx="2" ry="2" />
<text  x="1126.07" y="319.5" ></text>
</g>
<g >
<title>antlr3::IntStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::_LA (6 samples, 0.11%)</title><rect x="30.1" y="341" width="1.3" height="15.0" fill="rgb(230,32,40)" rx="2" ry="2" />
<text  x="33.08" y="351.5" ></text>
</g>
<g >
<title>seastar::internal::when_all_state_component&lt;seastar::future&lt;void&gt; &gt;::run_and_dispose (2 samples, 0.04%)</title><rect x="852.7" y="597" width="0.4" height="15.0" fill="rgb(246,88,7)" rx="2" ry="2" />
<text  x="855.67" y="607.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;std::_List_iterator&lt;flat_mutation_reader&gt;, mutation_reader_merger::close (1 samples, 0.02%)</title><rect x="569.1" y="469" width="0.2" height="15.0" fill="rgb(238,175,44)" rx="2" ry="2" />
<text  x="572.10" y="479.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;interval_bound&lt;dht::ring_position&gt;, false, false&gt;::_Optional_base (5 samples, 0.09%)</title><rect x="604.6" y="533" width="1.1" height="15.0" fill="rgb(246,190,54)" rx="2" ry="2" />
<text  x="607.57" y="543.5" ></text>
</g>
<g >
<title>auth::data_resource_view::keyspace (3 samples, 0.06%)</title><rect x="788.9" y="213" width="0.6" height="15.0" fill="rgb(234,13,29)" rx="2" ry="2" />
<text  x="791.86" y="223.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::entry::entry (1 samples, 0.02%)</title><rect x="1014.0" y="293" width="0.2" height="15.0" fill="rgb(223,76,46)" rx="2" ry="2" />
<text  x="1016.97" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_ostringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_ostringstream (1 samples, 0.02%)</title><rect x="78.3" y="613" width="0.2" height="15.0" fill="rgb(224,47,3)" rx="2" ry="2" />
<text  x="81.27" y="623.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;utils::small_vector&lt;service::storage_proxy::unique_response_handler, 1ul&gt; &gt; &gt;::invoke&lt;service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;, service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (14 samples, 0.26%)</title><rect x="1129.3" y="373" width="3.1" height="15.0" fill="rgb(236,114,20)" rx="2" ry="2" />
<text  x="1132.32" y="383.5" ></text>
</g>
<g >
<title>std::__optional_hash_call_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, true&gt;::operator (3 samples, 0.06%)</title><rect x="734.4" y="405" width="0.7" height="15.0" fill="rgb(226,159,32)" rx="2" ry="2" />
<text  x="737.42" y="415.5" ></text>
</g>
<g >
<title>seastar::reactor::add_timer (5 samples, 0.09%)</title><rect x="1009.1" y="245" width="1.1" height="15.0" fill="rgb(218,27,35)" rx="2" ry="2" />
<text  x="1012.06" y="255.5" ></text>
</g>
<g >
<title>auth::resource::resource (6 samples, 0.11%)</title><rect x="758.3" y="469" width="1.3" height="15.0" fill="rgb(232,8,6)" rx="2" ry="2" />
<text  x="761.29" y="479.5" ></text>
</g>
<g >
<title>seastar::chunked_fifo&lt;seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::entry, 128ul&gt;::emplace_back&lt;reader_concurrency_semaphore::entry, seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;&amp;, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;&amp;&gt; (18 samples, 0.34%)</title><rect x="1008.4" y="277" width="4.0" height="15.0" fill="rgb(235,155,1)" rx="2" ry="2" />
<text  x="1011.39" y="287.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (3 samples, 0.06%)</title><rect x="917.6" y="469" width="0.7" height="15.0" fill="rgb(219,147,23)" rx="2" ry="2" />
<text  x="920.59" y="479.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::restrictions::has_eq_null (1 samples, 0.02%)</title><rect x="853.8" y="437" width="0.2" height="15.0" fill="rgb(254,146,31)" rx="2" ry="2" />
<text  x="856.78" y="447.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (4 samples, 0.08%)</title><rect x="551.5" y="517" width="0.9" height="15.0" fill="rgb(227,115,24)" rx="2" ry="2" />
<text  x="554.47" y="527.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (13 samples, 0.25%)</title><rect x="822.1" y="517" width="2.9" height="15.0" fill="rgb(208,229,44)" rx="2" ry="2" />
<text  x="825.10" y="527.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="521.4" y="421" width="0.2" height="15.0" fill="rgb(207,118,53)" rx="2" ry="2" />
<text  x="524.36" y="431.5" ></text>
</g>
<g >
<title>db::schema_tables::query_partition_mutation (1 samples, 0.02%)</title><rect x="106.4" y="597" width="0.2" height="15.0" fill="rgb(251,228,4)" rx="2" ry="2" />
<text  x="109.38" y="607.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (1 samples, 0.02%)</title><rect x="680.0" y="581" width="0.2" height="15.0" fill="rgb(238,50,38)" rx="2" ry="2" />
<text  x="682.98" y="591.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="75.4" y="549" width="0.2" height="15.0" fill="rgb(214,42,38)" rx="2" ry="2" />
<text  x="78.37" y="559.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::clear (2 samples, 0.04%)</title><rect x="1163.9" y="517" width="0.4" height="15.0" fill="rgb(248,192,52)" rx="2" ry="2" />
<text  x="1166.90" y="527.5" ></text>
</g>
<g >
<title>reader_permit::consume (1 samples, 0.02%)</title><rect x="505.7" y="309" width="0.3" height="15.0" fill="rgb(228,4,38)" rx="2" ry="2" />
<text  x="508.74" y="319.5" ></text>
</g>
<g >
<title>seastar::future&lt;boost::iterator_range&lt;mutation_fragment*&gt; &gt;::then_impl&lt;mutation_fragment_merger&lt;mutation_reader_merger&gt;::fetch (1 samples, 0.02%)</title><rect x="300.7" y="437" width="0.2" height="15.0" fill="rgb(252,198,3)" rx="2" ry="2" />
<text  x="303.71" y="447.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;gms::inet_address, std::pair&lt;gms::inet_address const, utils::UUID&gt;, std::allocator&lt;std::pair&lt;gms::inet_address const, utils::UUID&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;gms::inet_address&gt;, std::hash&lt;gms::inet_address&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (3 samples, 0.06%)</title><rect x="1146.9" y="517" width="0.7" height="15.0" fill="rgb(209,211,49)" rx="2" ry="2" />
<text  x="1149.94" y="527.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::finally_body&lt;service::storage_proxy::do_query (11 samples, 0.21%)</title><rect x="664.1" y="581" width="2.5" height="15.0" fill="rgb(210,185,8)" rx="2" ry="2" />
<text  x="667.14" y="591.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.02%)</title><rect x="793.8" y="325" width="0.2" height="15.0" fill="rgb(212,94,2)" rx="2" ry="2" />
<text  x="796.77" y="335.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (1 samples, 0.02%)</title><rect x="811.4" y="357" width="0.2" height="15.0" fill="rgb(214,12,6)" rx="2" ry="2" />
<text  x="814.39" y="367.5" ></text>
</g>
<g >
<title>clustering_key_prefix::from_range&lt;std::vector&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, std::allocator&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="856.0" y="421" width="0.2" height="15.0" fill="rgb(229,25,36)" rx="2" ry="2" />
<text  x="859.01" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="156.8" y="469" width="0.2" height="15.0" fill="rgb(243,145,24)" rx="2" ry="2" />
<text  x="159.80" y="479.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.04%)</title><rect x="37.2" y="373" width="0.5" height="15.0" fill="rgb(236,97,31)" rx="2" ry="2" />
<text  x="40.22" y="383.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (1 samples, 0.02%)</title><rect x="327.9" y="341" width="0.2" height="15.0" fill="rgb(225,126,43)" rx="2" ry="2" />
<text  x="330.92" y="351.5" ></text>
</g>
<g >
<title>seastar::deferred_action&lt;table::query (1 samples, 0.02%)</title><rect x="1165.7" y="581" width="0.2" height="15.0" fill="rgb(242,144,32)" rx="2" ry="2" />
<text  x="1168.68" y="591.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (1 samples, 0.02%)</title><rect x="1011.7" y="261" width="0.3" height="15.0" fill="rgb(233,132,10)" rx="2" ry="2" />
<text  x="1014.74" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value_view, std::allocator&lt;cql3::raw_value_view&gt; &gt;::_M_check_len (3 samples, 0.06%)</title><rect x="842.0" y="453" width="0.6" height="15.0" fill="rgb(254,89,42)" rx="2" ry="2" />
<text  x="844.96" y="463.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::impl&gt;::_S_destroy&lt;seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::impl, mutation_fragment&gt; (1 samples, 0.02%)</title><rect x="316.3" y="405" width="0.2" height="15.0" fill="rgb(220,48,8)" rx="2" ry="2" />
<text  x="319.32" y="415.5" ></text>
</g>
<g >
<title>locator::simple_strategy::calculate_natural_endpoints (1 samples, 0.02%)</title><rect x="1164.8" y="565" width="0.2" height="15.0" fill="rgb(205,106,35)" rx="2" ry="2" />
<text  x="1167.79" y="575.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::max_size (1 samples, 0.02%)</title><rect x="46.8" y="341" width="0.2" height="15.0" fill="rgb(240,205,42)" rx="2" ry="2" />
<text  x="49.81" y="351.5" ></text>
</g>
<g >
<title>free (1 samples, 0.02%)</title><rect x="82.3" y="469" width="0.2" height="15.0" fill="rgb(232,213,49)" rx="2" ry="2" />
<text  x="85.29" y="479.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (10 samples, 0.19%)</title><rect x="380.6" y="261" width="2.2" height="15.0" fill="rgb(207,173,26)" rx="2" ry="2" />
<text  x="383.58" y="271.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (1 samples, 0.02%)</title><rect x="1100.5" y="501" width="0.3" height="15.0" fill="rgb(207,30,9)" rx="2" ry="2" />
<text  x="1103.54" y="511.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::default_delete&lt;cql3::expr::expression::impl&gt;, true&gt;::_M_head (1 samples, 0.02%)</title><rect x="48.6" y="277" width="0.2" height="15.0" fill="rgb(228,105,26)" rx="2" ry="2" />
<text  x="51.60" y="287.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (1 samples, 0.02%)</title><rect x="1012.9" y="293" width="0.2" height="15.0" fill="rgb(209,203,27)" rx="2" ry="2" />
<text  x="1015.85" y="303.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_esft&lt;partition_snapshot&gt;::dispose (5 samples, 0.09%)</title><rect x="564.6" y="373" width="1.2" height="15.0" fill="rgb(223,195,49)" rx="2" ry="2" />
<text  x="567.64" y="383.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.04%)</title><rect x="574.9" y="437" width="0.4" height="15.0" fill="rgb(205,63,10)" rx="2" ry="2" />
<text  x="577.90" y="447.5" ></text>
</g>
<g >
<title>empty_flat_reader::~empty_flat_reader (3 samples, 0.06%)</title><rect x="554.4" y="421" width="0.6" height="15.0" fill="rgb(225,121,51)" rx="2" ry="2" />
<text  x="557.38" y="431.5" ></text>
</g>
<g >
<title>row::row (141 samples, 2.67%)</title><rect x="215.7" y="245" width="31.5" height="15.0" fill="rgb(210,120,36)" rx="2" ry="2" />
<text  x="218.70" y="255.5" >ro..</text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (1 samples, 0.02%)</title><rect x="661.2" y="533" width="0.3" height="15.0" fill="rgb(232,171,12)" rx="2" ry="2" />
<text  x="664.24" y="543.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="154.1" y="517" width="0.2" height="15.0" fill="rgb(232,65,21)" rx="2" ry="2" />
<text  x="157.13" y="527.5" ></text>
</g>
<g >
<title>query_result_builder::consume_end_of_partition (1 samples, 0.02%)</title><rect x="418.7" y="341" width="0.3" height="15.0" fill="rgb(211,200,9)" rx="2" ry="2" />
<text  x="421.73" y="351.5" ></text>
</g>
<g >
<title>std::__apply_impl&lt;seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (41 samples, 0.78%)</title><rect x="1117.0" y="565" width="9.2" height="15.0" fill="rgb(214,191,25)" rx="2" ry="2" />
<text  x="1120.04" y="575.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;mutation_reader_merger::reader_and_last_fragment_kind*, mutation_reader_merger::prepare_next (1 samples, 0.02%)</title><rect x="105.9" y="181" width="0.3" height="15.0" fill="rgb(254,188,33)" rx="2" ry="2" />
<text  x="108.93" y="191.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.02%)</title><rect x="47.7" y="197" width="0.2" height="15.0" fill="rgb(230,225,32)" rx="2" ry="2" />
<text  x="50.70" y="207.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.02%)</title><rect x="37.7" y="245" width="0.2" height="15.0" fill="rgb(234,56,29)" rx="2" ry="2" />
<text  x="40.66" y="255.5" ></text>
</g>
<g >
<title>db::schema_tables::feed_hash_for_schema_digest (1 samples, 0.02%)</title><rect x="106.2" y="533" width="0.2" height="15.0" fill="rgb(240,29,15)" rx="2" ry="2" />
<text  x="109.16" y="543.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (2 samples, 0.04%)</title><rect x="199.9" y="341" width="0.4" height="15.0" fill="rgb(223,144,20)" rx="2" ry="2" />
<text  x="202.86" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node_base*&gt;::allocate (1 samples, 0.02%)</title><rect x="1151.0" y="485" width="0.2" height="15.0" fill="rgb(208,55,14)" rx="2" ry="2" />
<text  x="1153.96" y="495.5" ></text>
</g>
<g >
<title>service::storage_service::init_server (1 samples, 0.02%)</title><rect x="17.1" y="645" width="0.3" height="15.0" fill="rgb(242,193,16)" rx="2" ry="2" />
<text  x="20.14" y="655.5" ></text>
</g>
<g >
<title>cql3::expr::make_conjunction (2 samples, 0.04%)</title><rect x="70.5" y="405" width="0.4" height="15.0" fill="rgb(214,116,40)" rx="2" ry="2" />
<text  x="73.46" y="415.5" ></text>
</g>
<g >
<title>atomic_cell_or_collection::copy (65 samples, 1.23%)</title><rect x="224.0" y="213" width="14.5" height="15.0" fill="rgb(244,82,17)" rx="2" ry="2" />
<text  x="226.96" y="223.5" ></text>
</g>
<g >
<title>partition_key::partition_key (1 samples, 0.02%)</title><rect x="1119.5" y="325" width="0.2" height="15.0" fill="rgb(226,19,39)" rx="2" ry="2" />
<text  x="1122.50" y="335.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;cql3::expr::untyped_constant&gt; (1 samples, 0.02%)</title><rect x="51.7" y="37" width="0.2" height="15.0" fill="rgb(207,93,10)" rx="2" ry="2" />
<text  x="54.72" y="47.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (2 samples, 0.04%)</title><rect x="1080.9" y="437" width="0.4" height="15.0" fill="rgb(249,1,38)" rx="2" ry="2" />
<text  x="1083.90" y="447.5" ></text>
</g>
<g >
<title>seastar::reactor::add_timer (2 samples, 0.04%)</title><rect x="974.9" y="373" width="0.5" height="15.0" fill="rgb(236,98,36)" rx="2" ry="2" />
<text  x="977.93" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;std::unique_ptr&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, std::default_delete&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;, std::allocator&lt;std::unique_ptr&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, std::default_delete&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt; &gt; &gt;::vector (1 samples, 0.02%)</title><rect x="20.7" y="501" width="0.2" height="15.0" fill="rgb(232,97,11)" rx="2" ry="2" />
<text  x="23.71" y="511.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;::basic_sstring (1 samples, 0.02%)</title><rect x="846.4" y="501" width="0.2" height="15.0" fill="rgb(206,4,26)" rx="2" ry="2" />
<text  x="849.42" y="511.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::set&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; (1 samples, 0.02%)</title><rect x="601.9" y="517" width="0.2" height="15.0" fill="rgb(237,228,25)" rx="2" ry="2" />
<text  x="604.90" y="527.5" ></text>
</g>
<g >
<title>compound_type&lt; (1 samples, 0.02%)</title><rect x="102.4" y="405" width="0.2" height="15.0" fill="rgb(235,5,37)" rx="2" ry="2" />
<text  x="105.37" y="415.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::net::inet_address&gt;::operator (1 samples, 0.02%)</title><rect x="701.6" y="501" width="0.2" height="15.0" fill="rgb(244,215,10)" rx="2" ry="2" />
<text  x="704.62" y="511.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (2 samples, 0.04%)</title><rect x="43.7" y="213" width="0.4" height="15.0" fill="rgb(212,202,22)" rx="2" ry="2" />
<text  x="46.69" y="223.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::term&gt;::~shared_ptr (2 samples, 0.04%)</title><rect x="1107.2" y="517" width="0.5" height="15.0" fill="rgb(242,45,18)" rx="2" ry="2" />
<text  x="1110.23" y="527.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (15 samples, 0.28%)</title><rect x="969.8" y="405" width="3.3" height="15.0" fill="rgb(236,203,22)" rx="2" ry="2" />
<text  x="972.80" y="415.5" ></text>
</g>
<g >
<title>compound_type&lt; (2 samples, 0.04%)</title><rect x="854.9" y="421" width="0.4" height="15.0" fill="rgb(244,41,42)" rx="2" ry="2" />
<text  x="857.90" y="431.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::construct&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (4 samples, 0.08%)</title><rect x="22.7" y="357" width="0.9" height="15.0" fill="rgb(239,16,4)" rx="2" ry="2" />
<text  x="25.72" y="367.5" ></text>
</g>
<g >
<title>service::storage_proxy::do_query (1 samples, 0.02%)</title><rect x="941.9" y="501" width="0.2" height="15.0" fill="rgb(216,92,16)" rx="2" ry="2" />
<text  x="944.91" y="511.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.02%)</title><rect x="614.4" y="485" width="0.2" height="15.0" fill="rgb(250,111,2)" rx="2" ry="2" />
<text  x="617.39" y="495.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.02%)</title><rect x="38.6" y="389" width="0.2" height="15.0" fill="rgb(252,49,24)" rx="2" ry="2" />
<text  x="41.56" y="399.5" ></text>
</g>
<g >
<title>seastar::repeat&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (676 samples, 12.78%)</title><rect x="169.3" y="469" width="150.8" height="15.0" fill="rgb(230,195,22)" rx="2" ry="2" />
<text  x="172.30" y="479.5" >seastar::repeat&lt;mer..</text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (4 samples, 0.08%)</title><rect x="1142.9" y="581" width="0.9" height="15.0" fill="rgb(221,20,47)" rx="2" ry="2" />
<text  x="1145.92" y="591.5" ></text>
</g>
<g >
<title>cql3::query_processor::process_authorized_statement (2 samples, 0.04%)</title><rect x="19.4" y="565" width="0.4" height="15.0" fill="rgb(208,47,45)" rx="2" ry="2" />
<text  x="22.37" y="575.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.02%)</title><rect x="17.1" y="597" width="0.3" height="15.0" fill="rgb(213,125,6)" rx="2" ry="2" />
<text  x="20.14" y="607.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (7 samples, 0.13%)</title><rect x="158.8" y="533" width="1.6" height="15.0" fill="rgb(213,72,8)" rx="2" ry="2" />
<text  x="161.81" y="543.5" ></text>
</g>
<g >
<title>managed_bytes::free_chain (20 samples, 0.38%)</title><rect x="423.6" y="293" width="4.5" height="15.0" fill="rgb(211,13,44)" rx="2" ry="2" />
<text  x="426.64" y="303.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.02%)</title><rect x="37.9" y="341" width="0.2" height="15.0" fill="rgb(244,146,11)" rx="2" ry="2" />
<text  x="40.89" y="351.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (30 samples, 0.57%)</title><rect x="1126.2" y="533" width="6.7" height="15.0" fill="rgb(241,145,5)" rx="2" ry="2" />
<text  x="1129.19" y="543.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (24 samples, 0.45%)</title><rect x="247.8" y="229" width="5.4" height="15.0" fill="rgb(221,46,32)" rx="2" ry="2" />
<text  x="250.83" y="239.5" ></text>
</g>
<g >
<title>compact_mutation&lt; (1 samples, 0.02%)</title><rect x="438.6" y="437" width="0.2" height="15.0" fill="rgb(216,219,38)" rx="2" ry="2" />
<text  x="441.58" y="447.5" ></text>
</g>
<g >
<title>dht::ring_position::as_decorated_key (2 samples, 0.04%)</title><rect x="452.9" y="437" width="0.4" height="15.0" fill="rgb(237,136,19)" rx="2" ry="2" />
<text  x="455.86" y="447.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate (1 samples, 0.02%)</title><rect x="858.5" y="389" width="0.2" height="15.0" fill="rgb(214,14,53)" rx="2" ry="2" />
<text  x="861.47" y="399.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;void&gt;  (1 samples, 0.02%)</title><rect x="850.0" y="469" width="0.2" height="15.0" fill="rgb(238,115,35)" rx="2" ry="2" />
<text  x="852.99" y="479.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::create_aggregate_statement, std::default_delete&lt;cql3::statements::create_aggregate_statement&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="60.9" y="469" width="0.2" height="15.0" fill="rgb(212,179,39)" rx="2" ry="2" />
<text  x="63.87" y="479.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::~modification_statement (2 samples, 0.04%)</title><rect x="632.9" y="565" width="0.5" height="15.0" fill="rgb(249,86,13)" rx="2" ry="2" />
<text  x="635.91" y="575.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (1 samples, 0.02%)</title><rect x="266.1" y="309" width="0.2" height="15.0" fill="rgb(247,205,27)" rx="2" ry="2" />
<text  x="269.12" y="319.5" ></text>
</g>
<g >
<title>seastar::hrtimer_aio_completion::complete_with (2 samples, 0.04%)</title><rect x="1167.2" y="565" width="0.5" height="15.0" fill="rgb(214,175,6)" rx="2" ry="2" />
<text  x="1170.24" y="575.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="1140.0" y="581" width="0.2" height="15.0" fill="rgb(236,205,46)" rx="2" ry="2" />
<text  x="1143.02" y="591.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_Optional_payload_base (1 samples, 0.02%)</title><rect x="739.6" y="501" width="0.2" height="15.0" fill="rgb(254,51,41)" rx="2" ry="2" />
<text  x="742.55" y="511.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (2 samples, 0.04%)</title><rect x="215.3" y="245" width="0.4" height="15.0" fill="rgb(230,128,24)" rx="2" ry="2" />
<text  x="218.26" y="255.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="566.9" y="389" width="0.2" height="15.0" fill="rgb(247,194,33)" rx="2" ry="2" />
<text  x="569.87" y="399.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;utils::UUID&gt;::allocate (1 samples, 0.02%)</title><rect x="1146.0" y="549" width="0.3" height="15.0" fill="rgb(215,27,49)" rx="2" ry="2" />
<text  x="1149.05" y="559.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::forward_to (6 samples, 0.11%)</title><rect x="705.4" y="597" width="1.4" height="15.0" fill="rgb(221,23,20)" rx="2" ry="2" />
<text  x="708.42" y="607.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;mutation_querier&gt;::_M_reset (1 samples, 0.02%)</title><rect x="551.3" y="517" width="0.2" height="15.0" fill="rgb(209,99,10)" rx="2" ry="2" />
<text  x="554.25" y="527.5" ></text>
</g>
<g >
<title>database::find_schema (2 samples, 0.04%)</title><rect x="74.5" y="533" width="0.4" height="15.0" fill="rgb(233,131,51)" rx="2" ry="2" />
<text  x="77.48" y="543.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (4 samples, 0.08%)</title><rect x="37.2" y="453" width="0.9" height="15.0" fill="rgb(222,142,28)" rx="2" ry="2" />
<text  x="40.22" y="463.5" ></text>
</g>
<g >
<title>mutation_fragment::consume&lt;flat_mutation_reader::impl::consumer_adapter&lt;sstables::sstable_writer&gt; &gt; (5 samples, 0.09%)</title><rect x="81.2" y="533" width="1.1" height="15.0" fill="rgb(230,193,12)" rx="2" ry="2" />
<text  x="84.17" y="543.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::~guard (1 samples, 0.02%)</title><rect x="1117.9" y="341" width="0.3" height="15.0" fill="rgb(248,215,27)" rx="2" ry="2" />
<text  x="1120.94" y="351.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_9c4051607141ccef88a5c0c6888f804fb0de85a9] (1 samples, 0.02%)</title><rect x="1125.3" y="341" width="0.2" height="15.0" fill="rgb(230,195,27)" rx="2" ry="2" />
<text  x="1128.30" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="1140.0" y="565" width="0.2" height="15.0" fill="rgb(208,156,15)" rx="2" ry="2" />
<text  x="1143.02" y="575.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt; (1 samples, 0.02%)</title><rect x="48.6" y="309" width="0.2" height="15.0" fill="rgb(242,203,41)" rx="2" ry="2" />
<text  x="51.60" y="319.5" ></text>
</g>
<g >
<title>utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (1 samples, 0.02%)</title><rect x="76.7" y="309" width="0.2" height="15.0" fill="rgb(243,169,17)" rx="2" ry="2" />
<text  x="79.71" y="319.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment (11 samples, 0.21%)</title><rect x="508.2" y="309" width="2.4" height="15.0" fill="rgb(251,143,50)" rx="2" ry="2" />
<text  x="511.19" y="319.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::push_static_row (1 samples, 0.02%)</title><rect x="852.4" y="485" width="0.3" height="15.0" fill="rgb(243,46,27)" rx="2" ry="2" />
<text  x="855.44" y="495.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (2 samples, 0.04%)</title><rect x="1046.8" y="437" width="0.4" height="15.0" fill="rgb(238,194,34)" rx="2" ry="2" />
<text  x="1049.77" y="447.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (3 samples, 0.06%)</title><rect x="242.9" y="213" width="0.7" height="15.0" fill="rgb(221,174,53)" rx="2" ry="2" />
<text  x="245.92" y="223.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (4 samples, 0.08%)</title><rect x="1095.0" y="485" width="0.8" height="15.0" fill="rgb(213,16,42)" rx="2" ry="2" />
<text  x="1097.96" y="495.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment&lt;schema const&amp;, rows_entry const&amp;&gt; (1 samples, 0.02%)</title><rect x="80.5" y="341" width="0.2" height="15.0" fill="rgb(224,92,0)" rx="2" ry="2" />
<text  x="83.50" y="351.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::pop_mutation_fragment (12 samples, 0.23%)</title><rect x="332.6" y="357" width="2.7" height="15.0" fill="rgb(216,170,13)" rx="2" ry="2" />
<text  x="335.61" y="367.5" ></text>
</g>
<g >
<title>nonwrapping_interval&lt;clustering_key_prefix&gt;::nonwrapping_interval (7 samples, 0.13%)</title><rect x="1088.5" y="469" width="1.5" height="15.0" fill="rgb(206,50,8)" rx="2" ry="2" />
<text  x="1091.49" y="479.5" ></text>
</g>
<g >
<title>fmt::v7::vformat_to&lt;seastar::internal::log_buf::inserter_iterator, fmt::v7::basic_string_view&lt;char&gt;, char, true&gt; (1 samples, 0.02%)</title><rect x="11.1" y="453" width="0.2" height="15.0" fill="rgb(224,192,28)" rx="2" ry="2" />
<text  x="14.12" y="463.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::merging_reader (16 samples, 0.30%)</title><rect x="463.6" y="389" width="3.5" height="15.0" fill="rgb(254,33,16)" rx="2" ry="2" />
<text  x="466.57" y="399.5" ></text>
</g>
<g >
<title>sstables::mc::writer::write_clustered (4 samples, 0.08%)</title><rect x="81.2" y="469" width="0.9" height="15.0" fill="rgb(232,79,26)" rx="2" ry="2" />
<text  x="84.17" y="479.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, seastar::shared_ptr&lt;service::abstract_write_response_handler&gt; &gt;, false&gt; &gt; &gt;::_M_deallocate_node (1 samples, 0.02%)</title><rect x="704.3" y="565" width="0.2" height="15.0" fill="rgb(217,59,45)" rx="2" ry="2" />
<text  x="707.30" y="575.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;std::optional&lt;auth::resource&gt; &gt;, seastar::future&lt;bool&gt; &gt;, std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;std::optional&lt;auth::resource&gt; &gt;, seastar::future&lt;bool&gt; &gt; &gt; &gt;::~unique_ptr (12 samples, 0.23%)</title><rect x="798.2" y="421" width="2.7" height="15.0" fill="rgb(244,201,28)" rx="2" ry="2" />
<text  x="801.23" y="431.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.04%)</title><rect x="37.2" y="341" width="0.5" height="15.0" fill="rgb(247,44,26)" rx="2" ry="2" />
<text  x="40.22" y="351.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="891.0" y="405" width="0.3" height="15.0" fill="rgb(227,125,2)" rx="2" ry="2" />
<text  x="894.04" y="415.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.02%)</title><rect x="57.5" y="309" width="0.2" height="15.0" fill="rgb(252,128,2)" rx="2" ry="2" />
<text  x="60.52" y="319.5" ></text>
</g>
<g >
<title>sstables::mc::writer::write_row_body (3 samples, 0.06%)</title><rect x="81.4" y="453" width="0.7" height="15.0" fill="rgb(223,134,2)" rx="2" ry="2" />
<text  x="84.39" y="463.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (1 samples, 0.02%)</title><rect x="437.0" y="341" width="0.2" height="15.0" fill="rgb(243,11,26)" rx="2" ry="2" />
<text  x="440.02" y="351.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (3 samples, 0.06%)</title><rect x="567.3" y="421" width="0.7" height="15.0" fill="rgb(224,40,37)" rx="2" ry="2" />
<text  x="570.32" y="431.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="41.9" y="341" width="0.2" height="15.0" fill="rgb(239,163,36)" rx="2" ry="2" />
<text  x="44.90" y="351.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_nodes (1 samples, 0.02%)</title><rect x="1160.3" y="565" width="0.3" height="15.0" fill="rgb(242,70,37)" rx="2" ry="2" />
<text  x="1163.33" y="575.5" ></text>
</g>
<g >
<title>TLS init function for bound_view::_empty_prefix (3 samples, 0.06%)</title><rect x="277.1" y="277" width="0.6" height="15.0" fill="rgb(215,61,7)" rx="2" ry="2" />
<text  x="280.06" y="287.5" ></text>
</g>
<g >
<title>seastar::(anonymous namespace)::thread_wake_task::run_and_dispose (1 samples, 0.02%)</title><rect x="621.1" y="597" width="0.2" height="15.0" fill="rgb(210,63,11)" rx="2" ry="2" />
<text  x="624.08" y="607.5" ></text>
</g>
<g >
<title>[libhwloc.so.15.4.1] (1 samples, 0.02%)</title><rect x="10.0" y="725" width="0.2" height="15.0" fill="rgb(215,77,30)" rx="2" ry="2" />
<text  x="13.00" y="735.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="582.0" y="485" width="0.3" height="15.0" fill="rgb(217,229,35)" rx="2" ry="2" />
<text  x="585.04" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (7 samples, 0.13%)</title><rect x="712.3" y="501" width="1.6" height="15.0" fill="rgb(216,124,28)" rx="2" ry="2" />
<text  x="715.33" y="511.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.02%)</title><rect x="17.4" y="581" width="0.2" height="15.0" fill="rgb(205,90,26)" rx="2" ry="2" />
<text  x="20.36" y="591.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;2ul, cql3::expr::untyped_constant&gt; (1 samples, 0.02%)</title><rect x="51.7" y="69" width="0.2" height="15.0" fill="rgb(251,161,7)" rx="2" ry="2" />
<text  x="54.72" y="79.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="54.8" y="293" width="0.3" height="15.0" fill="rgb(230,112,31)" rx="2" ry="2" />
<text  x="57.84" y="303.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;query::querier&lt; (2 samples, 0.04%)</title><rect x="139.8" y="549" width="0.5" height="15.0" fill="rgb(245,50,30)" rx="2" ry="2" />
<text  x="142.85" y="559.5" ></text>
</g>
<g >
<title>mutation_partition::clear_gently (1 samples, 0.02%)</title><rect x="82.7" y="597" width="0.3" height="15.0" fill="rgb(225,102,43)" rx="2" ry="2" />
<text  x="85.73" y="607.5" ></text>
</g>
<g >
<title>std::apply&lt;auth::get_permissions (98 samples, 1.85%)</title><rect x="774.6" y="389" width="21.8" height="15.0" fill="rgb(220,69,41)" rx="2" ry="2" />
<text  x="777.58" y="399.5" >s..</text>
</g>
<g >
<title>db::commitlog::segment::allocate (4 samples, 0.08%)</title><rect x="1124.6" y="373" width="0.9" height="15.0" fill="rgb(251,55,48)" rx="2" ry="2" />
<text  x="1127.63" y="383.5" ></text>
</g>
<g >
<title>allocation_strategy::construct&lt;bplus::data&lt;long, intrusive_array&lt;memtable_entry&gt;, dht::raw_token_less_comparator, 16ul,  (3 samples, 0.06%)</title><rect x="1118.2" y="277" width="0.6" height="15.0" fill="rgb(234,30,26)" rx="2" ry="2" />
<text  x="1121.16" y="287.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::operation::set_value, std::default_delete&lt;cql3::operation::set_value&gt;, true, true&gt;::__uniq_ptr_impl (1 samples, 0.02%)</title><rect x="57.1" y="373" width="0.2" height="15.0" fill="rgb(209,73,42)" rx="2" ry="2" />
<text  x="60.08" y="383.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;partition_key, false, false&gt;::_Optional_base (3 samples, 0.06%)</title><rect x="550.6" y="501" width="0.7" height="15.0" fill="rgb(211,206,16)" rx="2" ry="2" />
<text  x="553.58" y="511.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (1 samples, 0.02%)</title><rect x="720.1" y="421" width="0.3" height="15.0" fill="rgb(252,121,39)" rx="2" ry="2" />
<text  x="723.14" y="431.5" ></text>
</g>
<g >
<title>std::__find_if&lt;gms::inet_address*, __gnu_cxx::__ops::_Iter_pred&lt;std::unary_negate&lt;std::binder1st&lt;std::_Mem_fn&lt;bool  (5 samples, 0.09%)</title><rect x="1073.5" y="389" width="1.2" height="15.0" fill="rgb(214,4,25)" rx="2" ry="2" />
<text  x="1076.54" y="399.5" ></text>
</g>
<g >
<title>schema::column_at (3 samples, 0.06%)</title><rect x="415.8" y="277" width="0.7" height="15.0" fill="rgb(244,169,0)" rx="2" ry="2" />
<text  x="418.83" y="287.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::make_ready&lt; (1 samples, 0.02%)</title><rect x="628.2" y="581" width="0.2" height="15.0" fill="rgb(253,81,9)" rx="2" ry="2" />
<text  x="631.22" y="591.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::at (1 samples, 0.02%)</title><rect x="74.7" y="485" width="0.2" height="15.0" fill="rgb(232,64,34)" rx="2" ry="2" />
<text  x="77.70" y="495.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_impl&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (4 samples, 0.08%)</title><rect x="676.2" y="501" width="0.9" height="15.0" fill="rgb(253,104,44)" rx="2" ry="2" />
<text  x="679.19" y="511.5" ></text>
</g>
<g >
<title>allocation_strategy::construct&lt;partition_version, mutation_partition&gt; (1 samples, 0.02%)</title><rect x="1118.2" y="213" width="0.2" height="15.0" fill="rgb(205,141,25)" rx="2" ry="2" />
<text  x="1121.16" y="223.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (2 samples, 0.04%)</title><rect x="628.9" y="565" width="0.4" height="15.0" fill="rgb(207,14,20)" rx="2" ry="2" />
<text  x="631.89" y="575.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (4 samples, 0.08%)</title><rect x="492.6" y="405" width="0.9" height="15.0" fill="rgb(244,119,7)" rx="2" ry="2" />
<text  x="495.58" y="415.5" ></text>
</g>
<g >
<title>sstables::sstable::do_write_simple (1 samples, 0.02%)</title><rect x="676.0" y="309" width="0.2" height="15.0" fill="rgb(223,218,38)" rx="2" ry="2" />
<text  x="678.97" y="319.5" ></text>
</g>
<g >
<title>reader_permit::consume (1 samples, 0.02%)</title><rect x="203.9" y="277" width="0.2" height="15.0" fill="rgb(245,173,43)" rx="2" ry="2" />
<text  x="206.88" y="287.5" ></text>
</g>
<g >
<title>bplus::searcher&lt;dht::ring_position, long, dht::raw_token_less_comparator, 16ul,  (2 samples, 0.04%)</title><rect x="472.9" y="389" width="0.5" height="15.0" fill="rgb(230,106,50)" rx="2" ry="2" />
<text  x="475.94" y="399.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.02%)</title><rect x="57.7" y="293" width="0.3" height="15.0" fill="rgb(223,228,1)" rx="2" ry="2" />
<text  x="60.74" y="303.5" ></text>
</g>
<g >
<title>seastar::do_until&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (424 samples, 8.02%)</title><rect x="195.4" y="389" width="94.6" height="15.0" fill="rgb(241,83,46)" rx="2" ry="2" />
<text  x="198.40" y="399.5" >seastar::do..</text>
</g>
<g >
<title>range_tombstone_accumulator::clear (1 samples, 0.02%)</title><rect x="676.9" y="389" width="0.2" height="15.0" fill="rgb(224,71,25)" rx="2" ry="2" />
<text  x="679.86" y="399.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;reader_concurrency_semaphore::entry&gt;::_M_reset (2 samples, 0.04%)</title><rect x="133.4" y="501" width="0.4" height="15.0" fill="rgb(224,215,33)" rx="2" ry="2" />
<text  x="136.38" y="511.5" ></text>
</g>
<g >
<title>cql_transport::messages::result_message::rows::rows (1 samples, 0.02%)</title><rect x="644.7" y="549" width="0.3" height="15.0" fill="rgb(246,99,8)" rx="2" ry="2" />
<text  x="647.73" y="559.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::forward_to (1 samples, 0.02%)</title><rect x="705.2" y="597" width="0.2" height="15.0" fill="rgb(206,212,26)" rx="2" ry="2" />
<text  x="708.19" y="607.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::clear (2 samples, 0.04%)</title><rect x="194.5" y="373" width="0.5" height="15.0" fill="rgb(226,26,32)" rx="2" ry="2" />
<text  x="197.51" y="383.5" ></text>
</g>
<g >
<title>bplus::tree&lt;long, intrusive_array&lt;cache_entry&gt;, dht::raw_token_less_comparator, 16ul,  (1 samples, 0.02%)</title><rect x="15.6" y="645" width="0.2" height="15.0" fill="rgb(223,19,2)" rx="2" ry="2" />
<text  x="18.58" y="655.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::list_service_level_statement, std::default_delete&lt;cql3::statements::list_service_level_statement&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="63.5" y="485" width="0.3" height="15.0" fill="rgb(253,89,45)" rx="2" ry="2" />
<text  x="66.55" y="495.5" ></text>
</g>
<g >
<title>std::make_unique&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;, seastar::lw_shared_ptr&lt;schema const&gt;, reader_permit, dht::decorated_key, partition_snapshot_ptr&amp;, query::clustering_key_filter_ranges, bool&amp;, logalloc::region&amp;, logalloc::allocating_section&amp;, boost::any, memtable&amp;&gt; (99 samples, 1.87%)</title><rect x="494.1" y="405" width="22.1" height="15.0" fill="rgb(236,83,3)" rx="2" ry="2" />
<text  x="497.14" y="415.5" >s..</text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (2 samples, 0.04%)</title><rect x="76.5" y="357" width="0.4" height="15.0" fill="rgb(245,37,0)" rx="2" ry="2" />
<text  x="79.49" y="367.5" ></text>
</g>
<g >
<title>mutation_source::mutation_source (5 samples, 0.09%)</title><rect x="615.5" y="517" width="1.1" height="15.0" fill="rgb(253,85,42)" rx="2" ry="2" />
<text  x="618.51" y="527.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::has_slice_or_needs_filtering (2 samples, 0.04%)</title><rect x="931.9" y="469" width="0.4" height="15.0" fill="rgb(237,124,17)" rx="2" ry="2" />
<text  x="934.87" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="578.0" y="469" width="0.2" height="15.0" fill="rgb(215,126,44)" rx="2" ry="2" />
<text  x="581.02" y="479.5" ></text>
</g>
<g >
<title>seastar::syscall_work_queue::complete (1 samples, 0.02%)</title><rect x="1166.6" y="581" width="0.2" height="15.0" fill="rgb(254,195,27)" rx="2" ry="2" />
<text  x="1169.57" y="591.5" ></text>
</g>
<g >
<title>partition_entry::read (4 samples, 0.08%)</title><rect x="519.3" y="421" width="0.9" height="15.0" fill="rgb(206,152,9)" rx="2" ry="2" />
<text  x="522.35" y="431.5" ></text>
</g>
<g >
<title>clustering_row::clustering_row (146 samples, 2.76%)</title><rect x="214.6" y="261" width="32.6" height="15.0" fill="rgb(222,78,44)" rx="2" ry="2" />
<text  x="217.59" y="271.5" >cl..</text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.02%)</title><rect x="806.3" y="453" width="0.2" height="15.0" fill="rgb(215,33,9)" rx="2" ry="2" />
<text  x="809.26" y="463.5" ></text>
</g>
<g >
<title>frozen_mutation::column_family_id (1 samples, 0.02%)</title><rect x="1117.3" y="373" width="0.2" height="15.0" fill="rgb(240,4,5)" rx="2" ry="2" />
<text  x="1120.27" y="383.5" ></text>
</g>
<g >
<title>ser::writer_of_query_result&lt;bytes_ostream&gt;::start_partitions (1 samples, 0.02%)</title><rect x="591.9" y="501" width="0.2" height="15.0" fill="rgb(220,152,21)" rx="2" ry="2" />
<text  x="594.86" y="511.5" ></text>
</g>
<g >
<title>atomic_cell_type::make_live&lt;fragment_range&lt;managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="856.5" y="341" width="0.2" height="15.0" fill="rgb(247,170,11)" rx="2" ry="2" />
<text  x="859.46" y="351.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_range_tombstone (14 samples, 0.26%)</title><rect x="262.6" y="309" width="3.1" height="15.0" fill="rgb(243,0,14)" rx="2" ry="2" />
<text  x="265.55" y="319.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (1 samples, 0.02%)</title><rect x="731.3" y="453" width="0.2" height="15.0" fill="rgb(221,62,4)" rx="2" ry="2" />
<text  x="734.30" y="463.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::raw::modification_statement, std::default_delete&lt;cql3::statements::raw::modification_statement&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="62.2" y="469" width="0.2" height="15.0" fill="rgb(249,147,31)" rx="2" ry="2" />
<text  x="65.21" y="479.5" ></text>
</g>
<g >
<title>__libc_start_main (4,858 samples, 91.85%)</title><rect x="84.3" y="725" width="1083.8" height="15.0" fill="rgb(234,155,15)" rx="2" ry="2" />
<text  x="87.29" y="735.5" >__libc_start_main</text>
</g>
<g >
<title>std::default_delete&lt;query::partition_slice const&gt;::operator (12 samples, 0.23%)</title><rect x="583.6" y="501" width="2.7" height="15.0" fill="rgb(248,17,20)" rx="2" ry="2" />
<text  x="586.60" y="511.5" ></text>
</g>
<g >
<title>std::forward_as_tuple&lt;std::optional&lt;auth::resource&gt; &gt; (1 samples, 0.02%)</title><rect x="797.8" y="421" width="0.2" height="15.0" fill="rgb(228,54,17)" rx="2" ry="2" />
<text  x="800.78" y="431.5" ></text>
</g>
<g >
<title>write_fragmented&lt;managed_bytes_basic_view&lt; (4 samples, 0.08%)</title><rect x="916.5" y="437" width="0.9" height="15.0" fill="rgb(245,124,50)" rx="2" ry="2" />
<text  x="919.47" y="447.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.09%)</title><rect x="842.8" y="533" width="1.2" height="15.0" fill="rgb(254,109,30)" rx="2" ry="2" />
<text  x="845.85" y="543.5" ></text>
</g>
<g >
<title>tracing::add_table_name (1 samples, 0.02%)</title><rect x="1116.6" y="533" width="0.2" height="15.0" fill="rgb(242,184,49)" rx="2" ry="2" />
<text  x="1119.60" y="543.5" ></text>
</g>
<g >
<title>__start_context (14 samples, 0.26%)</title><rect x="79.4" y="645" width="3.1" height="15.0" fill="rgb(213,62,36)" rx="2" ry="2" />
<text  x="82.39" y="655.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (1 samples, 0.02%)</title><rect x="677.1" y="437" width="0.2" height="15.0" fill="rgb(226,48,23)" rx="2" ry="2" />
<text  x="680.08" y="447.5" ></text>
</g>
<g >
<title>seastar::internal::when_all_state&lt;seastar::internal::identity_futures_tuple&lt;seastar::future&lt;void&gt;, seastar::future&lt;void&gt;, seastar::future&lt;void&gt; &gt;, seastar::future&lt;void&gt;, seastar::future&lt;void&gt;, seastar::future&lt;void&gt; &gt;::wait_all (1 samples, 0.02%)</title><rect x="82.5" y="581" width="0.2" height="15.0" fill="rgb(222,111,11)" rx="2" ry="2" />
<text  x="85.51" y="591.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (1 samples, 0.02%)</title><rect x="790.2" y="293" width="0.2" height="15.0" fill="rgb(227,16,43)" rx="2" ry="2" />
<text  x="793.20" y="303.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (2 samples, 0.04%)</title><rect x="311.0" y="405" width="0.4" height="15.0" fill="rgb(215,131,8)" rx="2" ry="2" />
<text  x="313.97" y="415.5" ></text>
</g>
<g >
<title>make_partition_snapshot_flat_reader_from_snp_schema (1 samples, 0.02%)</title><rect x="468.0" y="437" width="0.3" height="15.0" fill="rgb(227,109,39)" rx="2" ry="2" />
<text  x="471.03" y="447.5" ></text>
</g>
<g >
<title>sstables::compaction::run&lt;noop_compacted_fragments_consumer&gt; (1 samples, 0.02%)</title><rect x="1133.8" y="437" width="0.2" height="15.0" fill="rgb(246,11,10)" rx="2" ry="2" />
<text  x="1136.78" y="447.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt; &gt;::satisfy_with_result_of&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::then_wrapped_nrvo&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (13 samples, 0.25%)</title><rect x="655.0" y="581" width="2.9" height="15.0" fill="rgb(224,117,38)" rx="2" ry="2" />
<text  x="658.00" y="591.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::reserve (1 samples, 0.02%)</title><rect x="157.9" y="517" width="0.2" height="15.0" fill="rgb(229,8,3)" rx="2" ry="2" />
<text  x="160.92" y="527.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_restrictions::size (1 samples, 0.02%)</title><rect x="872.5" y="517" width="0.2" height="15.0" fill="rgb(214,130,34)" rx="2" ry="2" />
<text  x="875.52" y="527.5" ></text>
</g>
<g >
<title>read_simple&lt;unsigned short, managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="907.3" y="469" width="0.2" height="15.0" fill="rgb(240,94,50)" rx="2" ry="2" />
<text  x="910.33" y="479.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (3 samples, 0.06%)</title><rect x="100.8" y="549" width="0.7" height="15.0" fill="rgb(247,101,41)" rx="2" ry="2" />
<text  x="103.80" y="559.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (509 samples, 9.62%)</title><rect x="324.1" y="453" width="113.6" height="15.0" fill="rgb(245,21,44)" rx="2" ry="2" />
<text  x="327.13" y="463.5" >flat_mutation_..</text>
</g>
<g >
<title>operator new (9 samples, 0.17%)</title><rect x="1090.9" y="453" width="2.0" height="15.0" fill="rgb(247,27,9)" rx="2" ry="2" />
<text  x="1093.94" y="463.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.02%)</title><rect x="676.0" y="421" width="0.2" height="15.0" fill="rgb(235,201,52)" rx="2" ry="2" />
<text  x="678.97" y="431.5" ></text>
</g>
<g >
<title>boost::intrusive::bstree_impl&lt;boost::intrusive::mhtraits&lt;range_tombstone_entry, boost::intrusive::set_member_hook&lt;boost::intrusive::link_mode&lt; (1 samples, 0.02%)</title><rect x="566.0" y="373" width="0.2" height="15.0" fill="rgb(236,151,34)" rx="2" ry="2" />
<text  x="568.98" y="383.5" ></text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;void&gt;, service::storage_proxy*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt;, db::consistency_level, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, tracing::trace_state_ptr, service_permit, bool, seastar::lw_shared_ptr&lt;cdc::operation_result_tracker&gt; &gt;::make_stage_for_group (30 samples, 0.57%)</title><rect x="1126.2" y="501" width="6.7" height="15.0" fill="rgb(240,222,27)" rx="2" ry="2" />
<text  x="1129.19" y="511.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="71.1" y="405" width="0.3" height="15.0" fill="rgb(206,197,45)" rx="2" ry="2" />
<text  x="74.13" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.06%)</title><rect x="496.8" y="373" width="0.7" height="15.0" fill="rgb(216,26,32)" rx="2" ry="2" />
<text  x="499.81" y="383.5" ></text>
</g>
<g >
<title>table::compact_sstables (1 samples, 0.02%)</title><rect x="704.5" y="581" width="0.2" height="15.0" fill="rgb(229,43,16)" rx="2" ry="2" />
<text  x="707.52" y="591.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const&amp;, auth::resource&amp;&amp;, service::client_state::has_column_family_access (1 samples, 0.02%)</title><rect x="815.6" y="501" width="0.3" height="15.0" fill="rgb(245,18,45)" rx="2" ry="2" />
<text  x="818.63" y="511.5" ></text>
</g>
<g >
<title>query::querier_base::close (116 samples, 2.19%)</title><rect x="552.6" y="533" width="25.9" height="15.0" fill="rgb(220,159,27)" rx="2" ry="2" />
<text  x="555.59" y="543.5" >q..</text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (1 samples, 0.02%)</title><rect x="246.3" y="213" width="0.2" height="15.0" fill="rgb(240,192,42)" rx="2" ry="2" />
<text  x="249.27" y="223.5" ></text>
</g>
<g >
<title>seastar::internal::future_base::set_coroutine (1 samples, 0.02%)</title><rect x="138.3" y="549" width="0.2" height="15.0" fill="rgb(227,31,46)" rx="2" ry="2" />
<text  x="141.29" y="559.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (4 samples, 0.08%)</title><rect x="584.7" y="485" width="0.9" height="15.0" fill="rgb(229,122,32)" rx="2" ry="2" />
<text  x="587.72" y="495.5" ></text>
</g>
<g >
<title>query::querier_base::~querier_base (1 samples, 0.02%)</title><rect x="120.2" y="549" width="0.2" height="15.0" fill="rgb(231,70,30)" rx="2" ry="2" />
<text  x="123.21" y="559.5" ></text>
</g>
<g >
<title>row_cache::make_reader (60 samples, 1.13%)</title><rect x="522.5" y="437" width="13.4" height="15.0" fill="rgb(207,121,34)" rx="2" ry="2" />
<text  x="525.47" y="447.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::forward_to (1 samples, 0.02%)</title><rect x="631.1" y="581" width="0.2" height="15.0" fill="rgb(248,105,54)" rx="2" ry="2" />
<text  x="634.12" y="591.5" ></text>
</g>
<g >
<title>double_decker&lt;long, cache_entry, dht::raw_token_less_comparator, dht::ring_position_comparator, 16,  (1 samples, 0.02%)</title><rect x="15.6" y="661" width="0.2" height="15.0" fill="rgb(246,223,14)" rx="2" ry="2" />
<text  x="18.58" y="671.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::remove_if&lt;row::compact_and_expire (58 samples, 1.10%)</title><rect x="403.6" y="293" width="12.9" height="15.0" fill="rgb(218,215,3)" rx="2" ry="2" />
<text  x="406.56" y="303.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.06%)</title><rect x="798.7" y="405" width="0.6" height="15.0" fill="rgb(239,15,11)" rx="2" ry="2" />
<text  x="801.67" y="415.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.02%)</title><rect x="1011.3" y="213" width="0.2" height="15.0" fill="rgb(241,221,24)" rx="2" ry="2" />
<text  x="1014.29" y="223.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit_slot&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::memory_usage&lt;row::external_memory_usage (13 samples, 0.25%)</title><rect x="249.6" y="213" width="2.9" height="15.0" fill="rgb(240,119,39)" rx="2" ry="2" />
<text  x="252.61" y="223.5" ></text>
</g>
<g >
<title>dl_main (1 samples, 0.02%)</title><rect x="79.2" y="693" width="0.2" height="15.0" fill="rgb(242,17,2)" rx="2" ry="2" />
<text  x="82.16" y="703.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.02%)</title><rect x="1164.3" y="517" width="0.3" height="15.0" fill="rgb(251,60,45)" rx="2" ry="2" />
<text  x="1167.34" y="527.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (3 samples, 0.06%)</title><rect x="52.4" y="229" width="0.7" height="15.0" fill="rgb(210,9,42)" rx="2" ry="2" />
<text  x="55.39" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::_M_range_initialize&lt;nonwrapping_interval&lt;dht::ring_position&gt; const*&gt; (13 samples, 0.25%)</title><rect x="925.4" y="485" width="2.9" height="15.0" fill="rgb(230,150,22)" rx="2" ry="2" />
<text  x="928.40" y="495.5" ></text>
</g>
<g >
<title>seastar::logger::log&lt;std::unordered_set&lt;gms::inet_address, std::hash&lt;gms::inet_address&gt;, std::equal_to&lt;gms::inet_address&gt;, std::allocator&lt;gms::inet_address&gt; &gt;&amp;, std::unordered_set&lt;gms::inet_address, std::hash&lt;gms::inet_address&gt;, std::equal_to&lt;gms::inet_address&gt;, std::allocator&lt;gms::inet_address&gt; &gt;&amp;, unsigned long&gt; (1 samples, 0.02%)</title><rect x="11.1" y="501" width="0.2" height="15.0" fill="rgb(231,184,34)" rx="2" ry="2" />
<text  x="14.12" y="511.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::~resource_units (1 samples, 0.02%)</title><rect x="431.7" y="341" width="0.2" height="15.0" fill="rgb(208,92,12)" rx="2" ry="2" />
<text  x="434.67" y="351.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::emplace_back&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;&amp;&gt; (6 samples, 0.11%)</title><rect x="759.9" y="469" width="1.3" height="15.0" fill="rgb(227,78,13)" rx="2" ry="2" />
<text  x="762.85" y="479.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt;::_M_reset (1 samples, 0.02%)</title><rect x="567.1" y="405" width="0.2" height="15.0" fill="rgb(213,12,11)" rx="2" ry="2" />
<text  x="570.09" y="415.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;::basic_sstring (1 samples, 0.02%)</title><rect x="729.1" y="469" width="0.2" height="15.0" fill="rgb(208,101,31)" rx="2" ry="2" />
<text  x="732.07" y="479.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (2 samples, 0.04%)</title><rect x="138.5" y="549" width="0.5" height="15.0" fill="rgb(240,103,19)" rx="2" ry="2" />
<text  x="141.51" y="559.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (3 samples, 0.06%)</title><rect x="311.4" y="389" width="0.7" height="15.0" fill="rgb(241,36,13)" rx="2" ry="2" />
<text  x="314.41" y="399.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::_M_deleter (1 samples, 0.02%)</title><rect x="48.6" y="325" width="0.2" height="15.0" fill="rgb(222,123,5)" rx="2" ry="2" />
<text  x="51.60" y="335.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::operator (2 samples, 0.04%)</title><rect x="300.3" y="437" width="0.4" height="15.0" fill="rgb(220,181,2)" rx="2" ry="2" />
<text  x="303.26" y="447.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (185 samples, 3.50%)</title><rect x="21.4" y="485" width="41.3" height="15.0" fill="rgb(211,146,14)" rx="2" ry="2" />
<text  x="24.38" y="495.5" >cql..</text>
</g>
<g >
<title>db::commitlog::add_entry (5 samples, 0.09%)</title><rect x="1124.6" y="405" width="1.1" height="15.0" fill="rgb(248,182,14)" rx="2" ry="2" />
<text  x="1127.63" y="415.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (2 samples, 0.04%)</title><rect x="1013.1" y="293" width="0.4" height="15.0" fill="rgb(220,82,0)" rx="2" ry="2" />
<text  x="1016.08" y="303.5" ></text>
</g>
<g >
<title>sstables::mc::writer::consume_end_of_stream (1 samples, 0.02%)</title><rect x="676.0" y="357" width="0.2" height="15.0" fill="rgb(243,119,4)" rx="2" ry="2" />
<text  x="678.97" y="367.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::size (1 samples, 0.02%)</title><rect x="872.3" y="517" width="0.2" height="15.0" fill="rgb(222,125,31)" rx="2" ry="2" />
<text  x="875.30" y="527.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.02%)</title><rect x="799.3" y="389" width="0.3" height="15.0" fill="rgb(222,25,46)" rx="2" ry="2" />
<text  x="802.34" y="399.5" ></text>
</g>
<g >
<title>db::schema_tables::create_columns_from_column_rows (1 samples, 0.02%)</title><rect x="105.7" y="421" width="0.2" height="15.0" fill="rgb(238,228,12)" rx="2" ry="2" />
<text  x="108.71" y="431.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (1 samples, 0.02%)</title><rect x="99.9" y="533" width="0.2" height="15.0" fill="rgb(211,198,39)" rx="2" ry="2" />
<text  x="102.91" y="543.5" ></text>
</g>
<g >
<title>compound_wrapper&lt;clustering_key_prefix, clustering_key_prefix_view&gt;::make_empty (1 samples, 0.02%)</title><rect x="856.0" y="437" width="0.2" height="15.0" fill="rgb(226,176,30)" rx="2" ry="2" />
<text  x="859.01" y="447.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.08%)</title><rect x="643.4" y="549" width="0.9" height="15.0" fill="rgb(206,92,4)" rx="2" ry="2" />
<text  x="646.39" y="559.5" ></text>
</g>
<g >
<title>dht::ring_position::as_decorated_key (6 samples, 0.11%)</title><rect x="470.0" y="421" width="1.4" height="15.0" fill="rgb(215,37,6)" rx="2" ry="2" />
<text  x="473.04" y="431.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_one (1 samples, 0.02%)</title><rect x="105.9" y="165" width="0.3" height="15.0" fill="rgb(241,140,35)" rx="2" ry="2" />
<text  x="108.93" y="175.5" ></text>
</g>
<g >
<title>std::optional&lt;reader_concurrency_semaphore::entry&gt;::optional&lt;reader_concurrency_semaphore::entry, true&gt; (4 samples, 0.08%)</title><rect x="1010.6" y="245" width="0.9" height="15.0" fill="rgb(224,194,36)" rx="2" ry="2" />
<text  x="1013.62" y="255.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (7 samples, 0.13%)</title><rect x="1053.2" y="389" width="1.6" height="15.0" fill="rgb(233,4,11)" rx="2" ry="2" />
<text  x="1056.24" y="399.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (26 samples, 0.49%)</title><rect x="732.2" y="453" width="5.8" height="15.0" fill="rgb(209,177,28)" rx="2" ry="2" />
<text  x="735.19" y="463.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::followPush (1 samples, 0.02%)</title><rect x="58.4" y="405" width="0.2" height="15.0" fill="rgb(238,98,34)" rx="2" ry="2" />
<text  x="61.41" y="415.5" ></text>
</g>
<g >
<title>database::find_column_family (1 samples, 0.02%)</title><rect x="71.8" y="485" width="0.2" height="15.0" fill="rgb(235,203,24)" rx="2" ry="2" />
<text  x="74.80" y="495.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate (1 samples, 0.02%)</title><rect x="853.1" y="469" width="0.2" height="15.0" fill="rgb(207,40,45)" rx="2" ry="2" />
<text  x="856.11" y="479.5" ></text>
</g>
<g >
<title>cql3::relation::to_restriction (6 samples, 0.11%)</title><rect x="68.0" y="485" width="1.3" height="15.0" fill="rgb(224,36,0)" rx="2" ry="2" />
<text  x="71.01" y="495.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (8 samples, 0.15%)</title><rect x="336.8" y="341" width="1.8" height="15.0" fill="rgb(217,129,22)" rx="2" ry="2" />
<text  x="339.85" y="351.5" ></text>
</g>
<g >
<title>database::find_column_family (1 samples, 0.02%)</title><rect x="1000.4" y="341" width="0.2" height="15.0" fill="rgb(216,59,46)" rx="2" ry="2" />
<text  x="1003.36" y="351.5" ></text>
</g>
<g >
<title>memtable::evict_entry (1 samples, 0.02%)</title><rect x="15.8" y="661" width="0.2" height="15.0" fill="rgb(208,81,20)" rx="2" ry="2" />
<text  x="18.80" y="671.5" ></text>
</g>
<g >
<title>compound_type&lt; (3 samples, 0.06%)</title><rect x="543.0" y="453" width="0.7" height="15.0" fill="rgb(225,34,14)" rx="2" ry="2" />
<text  x="546.00" y="463.5" ></text>
</g>
<g >
<title>cql3::constants::marker::to_expression (6 samples, 0.11%)</title><rect x="877.2" y="421" width="1.3" height="15.0" fill="rgb(248,113,10)" rx="2" ry="2" />
<text  x="880.21" y="431.5" ></text>
</g>
<g >
<title>compound_wrapper&lt;clustering_key_prefix, clustering_key_prefix_view&gt;::size (1 samples, 0.02%)</title><rect x="857.4" y="293" width="0.2" height="15.0" fill="rgb(209,210,28)" rx="2" ry="2" />
<text  x="860.35" y="303.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::operator= (1 samples, 0.02%)</title><rect x="45.0" y="373" width="0.3" height="15.0" fill="rgb(235,10,40)" rx="2" ry="2" />
<text  x="48.03" y="383.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (1 samples, 0.02%)</title><rect x="45.0" y="357" width="0.3" height="15.0" fill="rgb(243,172,6)" rx="2" ry="2" />
<text  x="48.03" y="367.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (2 samples, 0.04%)</title><rect x="738.0" y="501" width="0.4" height="15.0" fill="rgb(219,219,16)" rx="2" ry="2" />
<text  x="740.99" y="511.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::pop_mutation_fragment (2 samples, 0.04%)</title><rect x="176.0" y="405" width="0.4" height="15.0" fill="rgb(223,112,18)" rx="2" ry="2" />
<text  x="178.99" y="415.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (4 samples, 0.08%)</title><rect x="53.3" y="213" width="0.9" height="15.0" fill="rgb(206,160,38)" rx="2" ry="2" />
<text  x="56.28" y="223.5" ></text>
</g>
<g >
<title>mutation::set_clustered_cell (1 samples, 0.02%)</title><rect x="106.8" y="469" width="0.3" height="15.0" fill="rgb(250,117,6)" rx="2" ry="2" />
<text  x="109.83" y="479.5" ></text>
</g>
<g >
<title>bytes_view_hasher::finalize (1 samples, 0.02%)</title><rect x="105.7" y="357" width="0.2" height="15.0" fill="rgb(229,99,40)" rx="2" ry="2" />
<text  x="108.71" y="367.5" ></text>
</g>
<g >
<title>evictable_reader::do_fill_buffer (1 samples, 0.02%)</title><rect x="105.9" y="293" width="0.3" height="15.0" fill="rgb(221,45,32)" rx="2" ry="2" />
<text  x="108.93" y="303.5" ></text>
</g>
<g >
<title>ser::serializer&lt;partition_key&gt;::write&lt;bytes_ostream&gt; (1 samples, 0.02%)</title><rect x="107.3" y="485" width="0.2" height="15.0" fill="rgb(218,34,5)" rx="2" ry="2" />
<text  x="110.27" y="495.5" ></text>
</g>
<g >
<title>std::apply&lt;service::client_state::has_column_family_access (193 samples, 3.65%)</title><rect x="761.2" y="485" width="43.1" height="15.0" fill="rgb(215,194,53)" rx="2" ry="2" />
<text  x="764.19" y="495.5" >std:..</text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (5 samples, 0.09%)</title><rect x="334.2" y="341" width="1.1" height="15.0" fill="rgb(233,8,5)" rx="2" ry="2" />
<text  x="337.17" y="351.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.02%)</title><rect x="48.4" y="341" width="0.2" height="15.0" fill="rgb(238,14,7)" rx="2" ry="2" />
<text  x="51.37" y="351.5" ></text>
</g>
<g >
<title>range_tombstone_list::~range_tombstone_list (1 samples, 0.02%)</title><rect x="1132.7" y="373" width="0.2" height="15.0" fill="rgb(231,226,53)" rx="2" ry="2" />
<text  x="1135.66" y="383.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (14 samples, 0.26%)</title><rect x="79.4" y="661" width="3.1" height="15.0" fill="rgb(232,31,11)" rx="2" ry="2" />
<text  x="82.39" y="671.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::attributes::raw, std::default_delete&lt;cql3::attributes::raw&gt; &gt;::unique_ptr (1 samples, 0.02%)</title><rect x="60.0" y="437" width="0.2" height="15.0" fill="rgb(219,21,1)" rx="2" ry="2" />
<text  x="62.98" y="447.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.02%)</title><rect x="39.7" y="293" width="0.2" height="15.0" fill="rgb(239,205,46)" rx="2" ry="2" />
<text  x="42.67" y="303.5" ></text>
</g>
<g >
<title>boost::range_detail::join_iterator&lt;gms::inet_address*, gms::inet_address*, gms::inet_address, gms::inet_address&amp;, boost::iterators::random_access_traversal_tag&gt;::increment (1 samples, 0.02%)</title><rect x="1131.3" y="261" width="0.2" height="15.0" fill="rgb(230,169,43)" rx="2" ry="2" />
<text  x="1134.32" y="271.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::close (1 samples, 0.02%)</title><rect x="578.2" y="501" width="0.3" height="15.0" fill="rgb(233,42,1)" rx="2" ry="2" />
<text  x="581.25" y="511.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::~impl (2 samples, 0.04%)</title><rect x="554.4" y="405" width="0.4" height="15.0" fill="rgb(224,105,29)" rx="2" ry="2" />
<text  x="557.38" y="415.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::~small_vector (3 samples, 0.06%)</title><rect x="576.0" y="453" width="0.7" height="15.0" fill="rgb(232,128,11)" rx="2" ry="2" />
<text  x="579.02" y="463.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement::execute (86 samples, 1.63%)</title><rect x="633.4" y="597" width="19.1" height="15.0" fill="rgb(251,82,13)" rx="2" ry="2" />
<text  x="636.35" y="607.5" ></text>
</g>
<g >
<title>std::pointer_traits&lt;char*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="24.3" y="261" width="0.2" height="15.0" fill="rgb(243,206,27)" rx="2" ry="2" />
<text  x="27.28" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::reserve (3 samples, 0.06%)</title><rect x="537.4" y="437" width="0.7" height="15.0" fill="rgb(230,192,0)" rx="2" ry="2" />
<text  x="540.42" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (5 samples, 0.09%)</title><rect x="842.8" y="517" width="1.2" height="15.0" fill="rgb(244,129,21)" rx="2" ry="2" />
<text  x="845.85" y="527.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.02%)</title><rect x="11.1" y="533" width="0.2" height="15.0" fill="rgb(244,89,15)" rx="2" ry="2" />
<text  x="14.12" y="543.5" ></text>
</g>
<g >
<title>operator new (7 samples, 0.13%)</title><rect x="533.4" y="357" width="1.6" height="15.0" fill="rgb(218,6,14)" rx="2" ry="2" />
<text  x="536.40" y="367.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql_transport::messages::result_message&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="657.7" y="565" width="0.2" height="15.0" fill="rgb(227,125,27)" rx="2" ry="2" />
<text  x="660.67" y="575.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (1 samples, 0.02%)</title><rect x="83.0" y="661" width="0.2" height="15.0" fill="rgb(230,67,41)" rx="2" ry="2" />
<text  x="85.96" y="671.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;11ul, cql3::expr::untyped_constant&gt; (1 samples, 0.02%)</title><rect x="51.9" y="245" width="0.3" height="15.0" fill="rgb(234,160,36)" rx="2" ry="2" />
<text  x="54.94" y="255.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::execute (6 samples, 0.11%)</title><rect x="741.3" y="501" width="1.4" height="15.0" fill="rgb(225,107,3)" rx="2" ry="2" />
<text  x="744.34" y="511.5" ></text>
</g>
<g >
<title>seastar::basic_semaphore&lt;seastar::semaphore_default_exception_factory, std::chrono::_V2::steady_clock&gt;::wait (1 samples, 0.02%)</title><rect x="595.0" y="533" width="0.2" height="15.0" fill="rgb(248,83,32)" rx="2" ry="2" />
<text  x="597.98" y="543.5" ></text>
</g>
<g >
<title>std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;, true&gt; (1 samples, 0.02%)</title><rect x="46.6" y="325" width="0.2" height="15.0" fill="rgb(242,124,42)" rx="2" ry="2" />
<text  x="49.59" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (3 samples, 0.06%)</title><rect x="654.1" y="565" width="0.7" height="15.0" fill="rgb(251,8,37)" rx="2" ry="2" />
<text  x="657.10" y="575.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::~small_vector (3 samples, 0.06%)</title><rect x="575.3" y="453" width="0.7" height="15.0" fill="rgb(209,221,47)" rx="2" ry="2" />
<text  x="578.35" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (2 samples, 0.04%)</title><rect x="991.0" y="341" width="0.4" height="15.0" fill="rgb(219,162,3)" rx="2" ry="2" />
<text  x="993.99" y="351.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureINS_10bool_classIN22mutation_reader_merger15needs_merge_tagEEEE9then_implIZNS5_14discard_resultEvEUlDpOT_E_NS0_IvEEEET0_OT_ (2 samples, 0.04%)</title><rect x="180.7" y="373" width="0.4" height="15.0" fill="rgb(224,225,8)" rx="2" ry="2" />
<text  x="183.67" y="383.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (3 samples, 0.06%)</title><rect x="807.8" y="405" width="0.7" height="15.0" fill="rgb(240,229,6)" rx="2" ry="2" />
<text  x="810.82" y="415.5" ></text>
</g>
<g >
<title>dht::murmur3_partitioner::get_token (1 samples, 0.02%)</title><rect x="859.1" y="373" width="0.3" height="15.0" fill="rgb(221,136,18)" rx="2" ry="2" />
<text  x="862.14" y="383.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mHEXNUMBER (20 samples, 0.38%)</title><rect x="27.8" y="357" width="4.5" height="15.0" fill="rgb(207,116,1)" rx="2" ry="2" />
<text  x="30.85" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="492.4" y="389" width="0.2" height="15.0" fill="rgb(211,133,4)" rx="2" ry="2" />
<text  x="495.35" y="399.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="37.9" y="389" width="0.2" height="15.0" fill="rgb(239,211,24)" rx="2" ry="2" />
<text  x="40.89" y="399.5" ></text>
</g>
<g >
<title>database::find_column_family (4 samples, 0.08%)</title><rect x="807.6" y="437" width="0.9" height="15.0" fill="rgb(239,155,45)" rx="2" ry="2" />
<text  x="810.60" y="447.5" ></text>
</g>
<g >
<title>operator delete (5 samples, 0.09%)</title><rect x="678.9" y="581" width="1.1" height="15.0" fill="rgb(248,11,20)" rx="2" ry="2" />
<text  x="681.87" y="591.5" ></text>
</g>
<g >
<title>cql3::restrictions::restriction::restriction (2 samples, 0.04%)</title><rect x="68.7" y="437" width="0.4" height="15.0" fill="rgb(250,25,6)" rx="2" ry="2" />
<text  x="71.68" y="447.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rows_entry, alloc_strategy_deleter&lt;rows_entry&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="857.6" y="341" width="0.2" height="15.0" fill="rgb(231,220,41)" rx="2" ry="2" />
<text  x="860.57" y="351.5" ></text>
</g>
<g >
<title>std::optional&lt;query::querier&lt; (2 samples, 0.04%)</title><rect x="140.7" y="549" width="0.5" height="15.0" fill="rgb(216,210,29)" rx="2" ry="2" />
<text  x="143.74" y="559.5" ></text>
</g>
<g >
<title>std::apply&lt;service::client_state::check_has_permission (118 samples, 2.23%)</title><rect x="771.5" y="421" width="26.3" height="15.0" fill="rgb(232,40,18)" rx="2" ry="2" />
<text  x="774.46" y="431.5" >s..</text>
</g>
<g >
<title>schema_registry_entry::load (1 samples, 0.02%)</title><rect x="105.7" y="485" width="0.2" height="15.0" fill="rgb(215,229,54)" rx="2" ry="2" />
<text  x="108.71" y="495.5" ></text>
</g>
<g >
<title>global_schema_ptr::global_schema_ptr (1 samples, 0.02%)</title><rect x="106.6" y="517" width="0.2" height="15.0" fill="rgb(223,128,32)" rx="2" ry="2" />
<text  x="109.60" y="527.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.29] (1 samples, 0.02%)</title><rect x="10.4" y="693" width="0.3" height="15.0" fill="rgb(247,72,31)" rx="2" ry="2" />
<text  x="13.45" y="703.5" ></text>
</g>
<g >
<title>service::client_state::has_column_family_access (286 samples, 5.41%)</title><rect x="751.6" y="501" width="63.8" height="15.0" fill="rgb(216,161,31)" rx="2" ry="2" />
<text  x="754.60" y="511.5" >service..</text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (3 samples, 0.06%)</title><rect x="1096.3" y="485" width="0.7" height="15.0" fill="rgb(233,174,0)" rx="2" ry="2" />
<text  x="1099.30" y="495.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::impl (2 samples, 0.04%)</title><rect x="463.6" y="373" width="0.4" height="15.0" fill="rgb(223,79,28)" rx="2" ry="2" />
<text  x="466.57" y="383.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::get_promise (2 samples, 0.04%)</title><rect x="713.9" y="533" width="0.4" height="15.0" fill="rgb(245,104,7)" rx="2" ry="2" />
<text  x="716.89" y="543.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.08%)</title><rect x="1019.1" y="357" width="0.9" height="15.0" fill="rgb(214,158,9)" rx="2" ry="2" />
<text  x="1022.10" y="367.5" ></text>
</g>
<g >
<title>utils::tuple_hash::operator (6 samples, 0.11%)</title><rect x="720.4" y="437" width="1.3" height="15.0" fill="rgb(234,173,54)" rx="2" ry="2" />
<text  x="723.36" y="447.5" ></text>
</g>
<g >
<title>compound_type&lt; (17 samples, 0.32%)</title><rect x="913.8" y="469" width="3.8" height="15.0" fill="rgb(212,132,34)" rx="2" ry="2" />
<text  x="916.80" y="479.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::need_filtering (2 samples, 0.04%)</title><rect x="865.6" y="533" width="0.5" height="15.0" fill="rgb(229,93,48)" rx="2" ry="2" />
<text  x="868.61" y="543.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume_in_thread&lt;sstables::sstable_writer, flat_mutation_reader::no_filter&gt; (1 samples, 0.02%)</title><rect x="10.9" y="613" width="0.2" height="15.0" fill="rgb(212,117,28)" rx="2" ry="2" />
<text  x="13.89" y="623.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; const, std::unique_ptr&lt;column_computation, std::default_delete&lt;column_computation&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; const, std::unique_ptr&lt;column_computation, std::default_delete&lt;column_computation&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;, std::hash&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (1 samples, 0.02%)</title><rect x="105.7" y="405" width="0.2" height="15.0" fill="rgb(235,222,4)" rx="2" ry="2" />
<text  x="108.71" y="415.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::EqualElement&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (3 samples, 0.06%)</title><rect x="747.4" y="421" width="0.6" height="15.0" fill="rgb(241,18,9)" rx="2" ry="2" />
<text  x="750.36" y="431.5" ></text>
</g>
<g >
<title>sstables::compaction::run&lt;noop_compacted_fragments_consumer&gt; (1 samples, 0.02%)</title><rect x="1133.8" y="533" width="0.2" height="15.0" fill="rgb(234,224,25)" rx="2" ry="2" />
<text  x="1136.78" y="543.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;clustering_key_prefix&gt;::_M_move_assign (1 samples, 0.02%)</title><rect x="549.0" y="517" width="0.2" height="15.0" fill="rgb(221,89,7)" rx="2" ry="2" />
<text  x="552.02" y="527.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;auth::resource&gt;::_M_reset (1 samples, 0.02%)</title><rect x="800.9" y="437" width="0.2" height="15.0" fill="rgb(219,51,3)" rx="2" ry="2" />
<text  x="803.91" y="447.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (1 samples, 0.02%)</title><rect x="731.5" y="453" width="0.2" height="15.0" fill="rgb(219,106,10)" rx="2" ry="2" />
<text  x="734.52" y="463.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (1 samples, 0.02%)</title><rect x="1165.2" y="565" width="0.3" height="15.0" fill="rgb(207,161,34)" rx="2" ry="2" />
<text  x="1168.24" y="575.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::_M_range_initialize&lt;managed_bytes const*&gt; (8 samples, 0.15%)</title><rect x="896.6" y="437" width="1.8" height="15.0" fill="rgb(230,213,16)" rx="2" ry="2" />
<text  x="899.62" y="447.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="741.8" y="437" width="0.2" height="15.0" fill="rgb(246,71,33)" rx="2" ry="2" />
<text  x="744.78" y="447.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (1 samples, 0.02%)</title><rect x="922.7" y="501" width="0.2" height="15.0" fill="rgb(249,96,7)" rx="2" ry="2" />
<text  x="925.72" y="511.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="71.4" y="405" width="0.2" height="15.0" fill="rgb(212,222,10)" rx="2" ry="2" />
<text  x="74.35" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::stats (4 samples, 0.08%)</title><rect x="502.4" y="341" width="0.9" height="15.0" fill="rgb(251,50,10)" rx="2" ry="2" />
<text  x="505.39" y="351.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::get_state (1 samples, 0.02%)</title><rect x="38.8" y="437" width="0.2" height="15.0" fill="rgb(233,205,41)" rx="2" ry="2" />
<text  x="41.78" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::emplace_back&lt;flat_mutation_reader&gt; (1 samples, 0.02%)</title><rect x="448.4" y="453" width="0.2" height="15.0" fill="rgb(233,58,10)" rx="2" ry="2" />
<text  x="451.40" y="463.5" ></text>
</g>
<g >
<title>malloc (4 samples, 0.08%)</title><rect x="593.0" y="469" width="0.9" height="15.0" fill="rgb(244,170,51)" rx="2" ry="2" />
<text  x="595.97" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::vector (1 samples, 0.02%)</title><rect x="56.0" y="389" width="0.2" height="15.0" fill="rgb(214,191,36)" rx="2" ry="2" />
<text  x="58.96" y="399.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.04%)</title><rect x="41.2" y="341" width="0.5" height="15.0" fill="rgb(246,44,39)" rx="2" ry="2" />
<text  x="44.23" y="351.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::lower_bound&lt;mutation_partition, schema const&amp;, nonwrapping_interval&lt;clustering_key_prefix&gt; const&amp;&gt; (2 samples, 0.04%)</title><rect x="258.8" y="245" width="0.4" height="15.0" fill="rgb(246,46,13)" rx="2" ry="2" />
<text  x="261.76" y="255.5" ></text>
</g>
<g >
<title>compaction_manager::submit (1 samples, 0.02%)</title><rect x="1133.8" y="581" width="0.2" height="15.0" fill="rgb(243,197,16)" rx="2" ry="2" />
<text  x="1136.78" y="591.5" ></text>
</g>
<g >
<title>seastar::make_file_impl (1 samples, 0.02%)</title><rect x="663.5" y="581" width="0.2" height="15.0" fill="rgb(247,42,44)" rx="2" ry="2" />
<text  x="666.47" y="591.5" ></text>
</g>
<g >
<title>basic_atomic_cell_view&lt; (1 samples, 0.02%)</title><rect x="81.8" y="373" width="0.3" height="15.0" fill="rgb(230,24,37)" rx="2" ry="2" />
<text  x="84.84" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value_view, std::allocator&lt;cql3::raw_value_view&gt; &gt;::_M_realloc_insert&lt;cql3::raw_value_view&gt; (15 samples, 0.28%)</title><rect x="839.3" y="469" width="3.3" height="15.0" fill="rgb(213,119,21)" rx="2" ry="2" />
<text  x="842.28" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="101.5" y="565" width="0.2" height="15.0" fill="rgb(245,67,17)" rx="2" ry="2" />
<text  x="104.47" y="575.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (1 samples, 0.02%)</title><rect x="1097.4" y="501" width="0.2" height="15.0" fill="rgb(211,167,39)" rx="2" ry="2" />
<text  x="1100.41" y="511.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::find_and_unlink_span_reclaiming (1 samples, 0.02%)</title><rect x="1004.6" y="261" width="0.2" height="15.0" fill="rgb(254,59,36)" rx="2" ry="2" />
<text  x="1007.60" y="271.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::__uniq_ptr_data (1 samples, 0.02%)</title><rect x="56.9" y="341" width="0.2" height="15.0" fill="rgb(254,162,20)" rx="2" ry="2" />
<text  x="59.85" y="351.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (1 samples, 0.02%)</title><rect x="76.9" y="341" width="0.3" height="15.0" fill="rgb(227,184,39)" rx="2" ry="2" />
<text  x="79.93" y="351.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (2 samples, 0.04%)</title><rect x="297.8" y="421" width="0.5" height="15.0" fill="rgb(224,54,45)" rx="2" ry="2" />
<text  x="300.80" y="431.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::future (2 samples, 0.04%)</title><rect x="742.2" y="453" width="0.5" height="15.0" fill="rgb(207,201,16)" rx="2" ry="2" />
<text  x="745.23" y="463.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;3ul, cql3::expr::untyped_constant&gt; (2 samples, 0.04%)</title><rect x="51.5" y="85" width="0.4" height="15.0" fill="rgb(228,37,30)" rx="2" ry="2" />
<text  x="54.50" y="95.5" ></text>
</g>
<g >
<title>table::set_hit_rate (9 samples, 0.17%)</title><rect x="699.8" y="549" width="2.0" height="15.0" fill="rgb(247,20,24)" rx="2" ry="2" />
<text  x="702.84" y="559.5" ></text>
</g>
<g >
<title>make_combined_reader (55 samples, 1.04%)</title><rect x="455.3" y="421" width="12.3" height="15.0" fill="rgb(236,94,41)" rx="2" ry="2" />
<text  x="458.32" y="431.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;signed char, std::char_traits&lt;signed char&gt; &gt;::substr (1 samples, 0.02%)</title><rect x="488.3" y="277" width="0.3" height="15.0" fill="rgb(250,152,54)" rx="2" ry="2" />
<text  x="491.34" y="287.5" ></text>
</g>
<g >
<title>seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;::swap (3 samples, 0.06%)</title><rect x="727.7" y="485" width="0.7" height="15.0" fill="rgb(253,86,40)" rx="2" ry="2" />
<text  x="730.73" y="495.5" ></text>
</g>
<g >
<title>boost::intrusive::bstree_impl&lt;boost::intrusive::mhtraits&lt;range_tombstone_entry, boost::intrusive::set_member_hook&lt;boost::intrusive::link_mode&lt; (1 samples, 0.02%)</title><rect x="1118.2" y="165" width="0.2" height="15.0" fill="rgb(229,225,28)" rx="2" ry="2" />
<text  x="1121.16" y="175.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="460.2" y="373" width="0.2" height="15.0" fill="rgb(220,216,51)" rx="2" ry="2" />
<text  x="463.22" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="1097.0" y="501" width="0.2" height="15.0" fill="rgb(235,229,31)" rx="2" ry="2" />
<text  x="1099.97" y="511.5" ></text>
</g>
<g >
<title>auth::get_permissions (113 samples, 2.14%)</title><rect x="772.3" y="405" width="25.3" height="15.0" fill="rgb(207,35,5)" rx="2" ry="2" />
<text  x="775.35" y="415.5" >a..</text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (2 samples, 0.04%)</title><rect x="36.8" y="437" width="0.4" height="15.0" fill="rgb(245,161,45)" rx="2" ry="2" />
<text  x="39.77" y="447.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::do_refresh_state (10 samples, 0.19%)</title><rect x="257.9" y="261" width="2.2" height="15.0" fill="rgb(220,160,46)" rx="2" ry="2" />
<text  x="260.87" y="271.5" ></text>
</g>
<g >
<title>seastar::reactor::add_timer (1 samples, 0.02%)</title><rect x="1012.6" y="245" width="0.3" height="15.0" fill="rgb(232,66,43)" rx="2" ry="2" />
<text  x="1015.63" y="255.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (3 samples, 0.06%)</title><rect x="54.2" y="245" width="0.6" height="15.0" fill="rgb(252,135,31)" rx="2" ry="2" />
<text  x="57.17" y="255.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (4 samples, 0.08%)</title><rect x="603.0" y="533" width="0.9" height="15.0" fill="rgb(244,20,13)" rx="2" ry="2" />
<text  x="606.01" y="543.5" ></text>
</g>
<g >
<title>allocation_strategy::destroy&lt;rows_entry&gt; (1 samples, 0.02%)</title><rect x="82.7" y="549" width="0.3" height="15.0" fill="rgb(230,127,8)" rx="2" ry="2" />
<text  x="85.73" y="559.5" ></text>
</g>
<g >
<title>range_tombstone_list::slice (1 samples, 0.02%)</title><rect x="283.1" y="325" width="0.2" height="15.0" fill="rgb(220,48,32)" rx="2" ry="2" />
<text  x="286.08" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::emplace_back&lt;flat_mutation_reader&gt; (1 samples, 0.02%)</title><rect x="537.2" y="437" width="0.2" height="15.0" fill="rgb(205,126,36)" rx="2" ry="2" />
<text  x="540.20" y="447.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, seastar::future&lt;void&gt;::handle_exception&lt;service::storage_proxy::send_to_live_endpoints (1 samples, 0.02%)</title><rect x="678.2" y="597" width="0.2" height="15.0" fill="rgb(218,98,41)" rx="2" ry="2" />
<text  x="681.20" y="607.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reserve&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::partition_snapshot_flat_reader&lt;schema const&amp;, flush_memory_accounter&amp;&gt; (1 samples, 0.02%)</title><rect x="79.8" y="453" width="0.3" height="15.0" fill="rgb(249,226,53)" rx="2" ry="2" />
<text  x="82.83" y="463.5" ></text>
</g>
<g >
<title>seastar::reactor::add_timer (1 samples, 0.02%)</title><rect x="974.0" y="389" width="0.3" height="15.0" fill="rgb(242,177,12)" rx="2" ry="2" />
<text  x="977.03" y="399.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="37.9" y="357" width="0.2" height="15.0" fill="rgb(222,95,6)" rx="2" ry="2" />
<text  x="40.89" y="367.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::execute (2 samples, 0.04%)</title><rect x="19.4" y="549" width="0.4" height="15.0" fill="rgb(231,65,52)" rx="2" ry="2" />
<text  x="22.37" y="559.5" ></text>
</g>
<g >
<title>range_tombstone_list::slice (18 samples, 0.34%)</title><rect x="275.5" y="309" width="4.0" height="15.0" fill="rgb(241,198,54)" rx="2" ry="2" />
<text  x="278.49" y="319.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_mutations_locally (1 samples, 0.02%)</title><rect x="105.9" y="501" width="0.3" height="15.0" fill="rgb(238,157,33)" rx="2" ry="2" />
<text  x="108.93" y="511.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (1 samples, 0.02%)</title><rect x="677.1" y="485" width="0.2" height="15.0" fill="rgb(230,8,52)" rx="2" ry="2" />
<text  x="680.08" y="495.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_last_fragment_kind, 4ul&gt;::emplace_back&lt;std::_List_iterator&lt;flat_mutation_reader&gt;, mutation_fragment::kind&gt; (2 samples, 0.04%)</title><rect x="297.4" y="405" width="0.4" height="15.0" fill="rgb(216,147,20)" rx="2" ry="2" />
<text  x="300.36" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value, std::allocator&lt;cql3::raw_value&gt; &gt;::~vector (2 samples, 0.04%)</title><rect x="844.2" y="533" width="0.4" height="15.0" fill="rgb(214,162,9)" rx="2" ry="2" />
<text  x="847.19" y="543.5" ></text>
</g>
<g >
<title>seastar::deferred_action&lt;table::query (9 samples, 0.17%)</title><rect x="595.2" y="533" width="2.0" height="15.0" fill="rgb(209,207,51)" rx="2" ry="2" />
<text  x="598.20" y="543.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate_to_raw_view (1 samples, 0.02%)</title><rect x="898.6" y="469" width="0.2" height="15.0" fill="rgb(243,117,23)" rx="2" ry="2" />
<text  x="901.63" y="479.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;void&gt;::set_value&lt;&gt; (1 samples, 0.02%)</title><rect x="852.2" y="597" width="0.2" height="15.0" fill="rgb(223,91,32)" rx="2" ry="2" />
<text  x="855.22" y="607.5" ></text>
</g>
<g >
<title>std::function&lt;bool  (3 samples, 0.06%)</title><rect x="546.8" y="485" width="0.7" height="15.0" fill="rgb(223,195,17)" rx="2" ry="2" />
<text  x="549.79" y="495.5" ></text>
</g>
<g >
<title>[unknown] (14 samples, 0.26%)</title><rect x="79.4" y="677" width="3.1" height="15.0" fill="rgb(227,8,52)" rx="2" ry="2" />
<text  x="82.39" y="687.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;std::tuple&lt;std::optional&lt;clustering_key_prefix&gt; &gt; &gt;::take_value (1 samples, 0.02%)</title><rect x="540.8" y="501" width="0.2" height="15.0" fill="rgb(230,142,51)" rx="2" ry="2" />
<text  x="543.77" y="511.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;void&gt;::set_urgent_state (1 samples, 0.02%)</title><rect x="1133.3" y="581" width="0.3" height="15.0" fill="rgb(208,194,33)" rx="2" ry="2" />
<text  x="1136.33" y="591.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (1 samples, 0.02%)</title><rect x="911.1" y="485" width="0.2" height="15.0" fill="rgb(205,139,17)" rx="2" ry="2" />
<text  x="914.12" y="495.5" ></text>
</g>
<g >
<title>executor&lt;test_read (620 samples, 11.72%)</title><rect x="710.3" y="581" width="138.4" height="15.0" fill="rgb(218,63,29)" rx="2" ry="2" />
<text  x="713.33" y="591.5" >executor&lt;test_read</text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;mutation_fragment&gt;::allocate (1 samples, 0.02%)</title><rect x="203.4" y="277" width="0.3" height="15.0" fill="rgb(207,37,53)" rx="2" ry="2" />
<text  x="206.43" y="287.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="533.2" y="341" width="0.2" height="15.0" fill="rgb(225,208,4)" rx="2" ry="2" />
<text  x="536.18" y="351.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="11.1" y="677" width="0.2" height="15.0" fill="rgb(242,170,22)" rx="2" ry="2" />
<text  x="14.12" y="687.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.02%)</title><rect x="82.7" y="645" width="0.3" height="15.0" fill="rgb(236,39,37)" rx="2" ry="2" />
<text  x="85.73" y="655.5" ></text>
</g>
<g >
<title>seastar::lambda_task&lt;seastar::with_scheduling_group&lt;compaction_manager::submit (1 samples, 0.02%)</title><rect x="1133.8" y="597" width="0.2" height="15.0" fill="rgb(232,23,1)" rx="2" ry="2" />
<text  x="1136.78" y="607.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::size (1 samples, 0.02%)</title><rect x="638.3" y="565" width="0.2" height="15.0" fill="rgb(220,61,46)" rx="2" ry="2" />
<text  x="641.26" y="575.5" ></text>
</g>
<g >
<title>compound_type&lt; (1 samples, 0.02%)</title><rect x="856.0" y="405" width="0.2" height="15.0" fill="rgb(239,146,45)" rx="2" ry="2" />
<text  x="859.01" y="415.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.02%)</title><rect x="41.9" y="325" width="0.2" height="15.0" fill="rgb(221,50,10)" rx="2" ry="2" />
<text  x="44.90" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="154.3" y="517" width="0.3" height="15.0" fill="rgb(206,213,17)" rx="2" ry="2" />
<text  x="157.35" y="527.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::on_permit_destroyed (1 samples, 0.02%)</title><rect x="121.6" y="533" width="0.2" height="15.0" fill="rgb(244,119,2)" rx="2" ry="2" />
<text  x="124.55" y="543.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.02%)</title><rect x="41.9" y="245" width="0.2" height="15.0" fill="rgb(233,103,2)" rx="2" ry="2" />
<text  x="44.90" y="255.5" ></text>
</g>
<g >
<title>intrusive_array&lt;memtable_entry&gt;::lower_bound&lt;dht::ring_position, dht::ring_position_comparator&gt; (40 samples, 0.76%)</title><rect x="480.5" y="405" width="9.0" height="15.0" fill="rgb(251,117,29)" rx="2" ry="2" />
<text  x="483.53" y="415.5" ></text>
</g>
<g >
<title>dht::maximum_token (1 samples, 0.02%)</title><rect x="456.2" y="373" width="0.2" height="15.0" fill="rgb(254,155,18)" rx="2" ry="2" />
<text  x="459.21" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, std::allocator&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="543.9" y="469" width="0.2" height="15.0" fill="rgb(211,116,37)" rx="2" ry="2" />
<text  x="546.89" y="479.5" ></text>
</g>
<g >
<title>seastar::posix_file_impl::list_directory (1 samples, 0.02%)</title><rect x="677.8" y="437" width="0.2" height="15.0" fill="rgb(242,224,33)" rx="2" ry="2" />
<text  x="680.75" y="447.5" ></text>
</g>
<g >
<title>service::endpoints_to_replica_ids (17 samples, 0.32%)</title><rect x="1145.4" y="565" width="3.8" height="15.0" fill="rgb(243,150,13)" rx="2" ry="2" />
<text  x="1148.38" y="575.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::unique_ptr&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, std::default_delete&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;, std::allocator&lt;std::unique_ptr&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, std::default_delete&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt; &gt; &gt;::_Vector_base (1 samples, 0.02%)</title><rect x="20.7" y="485" width="0.2" height="15.0" fill="rgb(205,88,35)" rx="2" ry="2" />
<text  x="23.71" y="495.5" ></text>
</g>
<g >
<title>seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::expand (18 samples, 0.34%)</title><rect x="312.3" y="405" width="4.0" height="15.0" fill="rgb(234,213,20)" rx="2" ry="2" />
<text  x="315.31" y="415.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (2 samples, 0.04%)</title><rect x="37.2" y="325" width="0.5" height="15.0" fill="rgb(219,138,16)" rx="2" ry="2" />
<text  x="40.22" y="335.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::execute (1 samples, 0.02%)</title><rect x="684.0" y="533" width="0.2" height="15.0" fill="rgb(206,167,17)" rx="2" ry="2" />
<text  x="687.00" y="543.5" ></text>
</g>
<g >
<title>cql3::restrictions::has_eq_null (2 samples, 0.04%)</title><rect x="853.6" y="453" width="0.4" height="15.0" fill="rgb(236,18,19)" rx="2" ry="2" />
<text  x="856.56" y="463.5" ></text>
</g>
<g >
<title>std::tuple&lt;cql3::operation::set_value*, std::default_delete&lt;cql3::operation::set_value&gt; &gt;::tuple&lt;true, true&gt; (1 samples, 0.02%)</title><rect x="57.1" y="341" width="0.2" height="15.0" fill="rgb(237,87,53)" rx="2" ry="2" />
<text  x="60.08" y="351.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_live_sorted_endpoints (88 samples, 1.66%)</title><rect x="1056.6" y="437" width="19.6" height="15.0" fill="rgb(217,23,7)" rx="2" ry="2" />
<text  x="1059.58" y="447.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.02%)</title><rect x="54.8" y="165" width="0.3" height="15.0" fill="rgb(245,49,38)" rx="2" ry="2" />
<text  x="57.84" y="175.5" ></text>
</g>
<g >
<title>frozen_mutation::partition (1 samples, 0.02%)</title><rect x="1117.5" y="341" width="0.2" height="15.0" fill="rgb(205,29,54)" rx="2" ry="2" />
<text  x="1120.49" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::disable_abort_on_alloc_failure_temporarily (1 samples, 0.02%)</title><rect x="261.4" y="293" width="0.3" height="15.0" fill="rgb(251,110,30)" rx="2" ry="2" />
<text  x="264.44" y="303.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;::operator (11 samples, 0.21%)</title><rect x="735.3" y="389" width="2.5" height="15.0" fill="rgb(250,79,43)" rx="2" ry="2" />
<text  x="738.31" y="399.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="663.5" y="549" width="0.2" height="15.0" fill="rgb(217,182,52)" rx="2" ry="2" />
<text  x="666.47" y="559.5" ></text>
</g>
<g >
<title>partition_version_ref::operator (2 samples, 0.04%)</title><rect x="275.0" y="309" width="0.5" height="15.0" fill="rgb(207,148,47)" rx="2" ry="2" />
<text  x="278.05" y="319.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;cql3::column_identifier_raw, false&gt;::make&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, bool&gt; (1 samples, 0.02%)</title><rect x="41.0" y="405" width="0.2" height="15.0" fill="rgb(227,147,29)" rx="2" ry="2" />
<text  x="44.01" y="415.5" ></text>
</g>
<g >
<title>cql3::expr::possible_lhs_values (110 samples, 2.08%)</title><rect x="875.4" y="501" width="24.6" height="15.0" fill="rgb(231,89,44)" rx="2" ry="2" />
<text  x="878.42" y="511.5" >c..</text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.02%)</title><rect x="130.0" y="485" width="0.3" height="15.0" fill="rgb(225,21,11)" rx="2" ry="2" />
<text  x="133.03" y="495.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_push_back_aux&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (6 samples, 0.11%)</title><rect x="23.6" y="357" width="1.3" height="15.0" fill="rgb(232,90,35)" rx="2" ry="2" />
<text  x="26.61" y="367.5" ></text>
</g>
<g >
<title>cql3::operation::set_value::prepare (11 samples, 0.21%)</title><rect x="64.9" y="517" width="2.4" height="15.0" fill="rgb(232,68,5)" rx="2" ry="2" />
<text  x="67.88" y="527.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_Optional_payload_base (2 samples, 0.04%)</title><rect x="1055.5" y="405" width="0.4" height="15.0" fill="rgb(248,40,35)" rx="2" ry="2" />
<text  x="1058.47" y="415.5" ></text>
</g>
<g >
<title>cql3::statements::raw::update_statement::prepare_internal (2 samples, 0.04%)</title><rect x="73.8" y="549" width="0.5" height="15.0" fill="rgb(251,35,52)" rx="2" ry="2" />
<text  x="76.81" y="559.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, fragmented_temporary_buffer::view, managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="891.7" y="405" width="0.2" height="15.0" fill="rgb(213,211,44)" rx="2" ry="2" />
<text  x="894.71" y="415.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.02%)</title><rect x="112.9" y="565" width="0.2" height="15.0" fill="rgb(222,174,43)" rx="2" ry="2" />
<text  x="115.85" y="575.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;service::query_state&gt;::~shared_ptr_count_for (5 samples, 0.09%)</title><rect x="658.8" y="581" width="1.1" height="15.0" fill="rgb(253,137,27)" rx="2" ry="2" />
<text  x="661.79" y="591.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_rehash_aux (7 samples, 0.13%)</title><rect x="1150.5" y="517" width="1.6" height="15.0" fill="rgb(224,224,2)" rx="2" ry="2" />
<text  x="1153.51" y="527.5" ></text>
</g>
<g >
<title>position_in_partition_view::position_in_partition_view (1 samples, 0.02%)</title><rect x="267.0" y="309" width="0.2" height="15.0" fill="rgb(251,89,11)" rx="2" ry="2" />
<text  x="270.02" y="319.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_data_request (226 samples, 4.27%)</title><rect x="980.5" y="405" width="50.4" height="15.0" fill="rgb(241,93,12)" rx="2" ry="2" />
<text  x="983.50" y="415.5" >servi..</text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql3::metadata&gt;::shared_ptr_count_for&lt;cql3::metadata&amp;&gt; (1 samples, 0.02%)</title><rect x="644.3" y="549" width="0.2" height="15.0" fill="rgb(232,147,40)" rx="2" ry="2" />
<text  x="647.29" y="559.5" ></text>
</g>
<g >
<title>ser::safe_serialize_as_uint32&lt;bytes_ostream&gt; (1 samples, 0.02%)</title><rect x="394.6" y="245" width="0.3" height="15.0" fill="rgb(230,6,31)" rx="2" ry="2" />
<text  x="397.63" y="255.5" ></text>
</g>
<g >
<title>frozen_schema::frozen_schema (3 samples, 0.06%)</title><rect x="106.8" y="549" width="0.7" height="15.0" fill="rgb(225,123,46)" rx="2" ry="2" />
<text  x="109.83" y="559.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_reallocate_map (1 samples, 0.02%)</title><rect x="24.5" y="325" width="0.2" height="15.0" fill="rgb(218,141,29)" rx="2" ry="2" />
<text  x="27.50" y="335.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::deallocate (1 samples, 0.02%)</title><rect x="554.6" y="389" width="0.2" height="15.0" fill="rgb(208,14,26)" rx="2" ry="2" />
<text  x="557.60" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (8 samples, 0.15%)</title><rect x="1016.6" y="293" width="1.8" height="15.0" fill="rgb(210,58,39)" rx="2" ry="2" />
<text  x="1019.65" y="303.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::then_wrapped_common&lt;false, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (11 samples, 0.21%)</title><rect x="817.6" y="517" width="2.5" height="15.0" fill="rgb(241,29,23)" rx="2" ry="2" />
<text  x="820.64" y="527.5" ></text>
</g>
<g >
<title>std::apply&lt;auth::get_permissions (5 samples, 0.09%)</title><rect x="76.3" y="453" width="1.1" height="15.0" fill="rgb(222,33,40)" rx="2" ry="2" />
<text  x="79.26" y="463.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::drop_keyspace_statement, std::default_delete&lt;cql3::statements::drop_keyspace_statement&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="63.3" y="485" width="0.2" height="15.0" fill="rgb(229,92,17)" rx="2" ry="2" />
<text  x="66.32" y="495.5" ></text>
</g>
<g >
<title>bplus::node&lt;long, intrusive_array&lt;cache_entry&gt;, dht::raw_token_less_comparator, 16ul,  (1 samples, 0.02%)</title><rect x="10.7" y="613" width="0.2" height="15.0" fill="rgb(245,38,36)" rx="2" ry="2" />
<text  x="13.67" y="623.5" ></text>
</g>
<g >
<title>partition_key::from_range&lt;std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt; const&amp;&gt; (19 samples, 0.36%)</title><rect x="913.4" y="485" width="4.2" height="15.0" fill="rgb(208,157,20)" rx="2" ry="2" />
<text  x="916.35" y="495.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (2 samples, 0.04%)</title><rect x="55.1" y="341" width="0.4" height="15.0" fill="rgb(227,51,47)" rx="2" ry="2" />
<text  x="58.07" y="351.5" ></text>
</g>
<g >
<title>seastar::promise&lt;void&gt;::promise (4 samples, 0.08%)</title><rect x="134.3" y="485" width="0.9" height="15.0" fill="rgb(216,209,35)" rx="2" ry="2" />
<text  x="137.27" y="495.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_allocate_node&lt;nonwrapping_interval&lt;dht::token&gt;, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; (3 samples, 0.06%)</title><rect x="1152.3" y="549" width="0.7" height="15.0" fill="rgb(250,197,16)" rx="2" ry="2" />
<text  x="1155.30" y="559.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::do_fill_buffer (326 samples, 6.16%)</title><rect x="197.4" y="357" width="72.7" height="15.0" fill="rgb(242,26,5)" rx="2" ry="2" />
<text  x="200.41" y="367.5" >partitio..</text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, cql3::operation::raw_update*, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="46.6" y="245" width="0.2" height="15.0" fill="rgb(242,44,6)" rx="2" ry="2" />
<text  x="49.59" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt;::~vector (2 samples, 0.04%)</title><rect x="1132.4" y="437" width="0.5" height="15.0" fill="rgb(220,163,49)" rx="2" ry="2" />
<text  x="1135.44" y="447.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;service::never_speculating_read_executor, true&gt;::make&lt;seastar::lw_shared_ptr&lt;schema const&gt;&amp;, seastar::lw_shared_ptr&lt;table&gt;&amp;, seastar::shared_ptr&lt;service::storage_proxy&gt;&amp;, seastar::lw_shared_ptr&lt;query::read_command&gt;&amp;, nonwrapping_interval&lt;dht::ring_position&gt;, db::consistency_level&amp;, utils::small_vector&lt;gms::inet_address, 3ul&gt;, tracing::trace_state_ptr, service_permit&gt; (41 samples, 0.78%)</title><rect x="1047.4" y="437" width="9.2" height="15.0" fill="rgb(215,10,28)" rx="2" ry="2" />
<text  x="1050.44" y="447.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector (4 samples, 0.08%)</title><rect x="1156.8" y="565" width="0.8" height="15.0" fill="rgb(245,116,28)" rx="2" ry="2" />
<text  x="1159.76" y="575.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::signal (1 samples, 0.02%)</title><rect x="123.8" y="501" width="0.2" height="15.0" fill="rgb(231,56,37)" rx="2" ry="2" />
<text  x="126.78" y="511.5" ></text>
</g>
<g >
<title>seastar::basic_semaphore&lt;seastar::semaphore_default_exception_factory, std::chrono::_V2::steady_clock&gt;::signal (1 samples, 0.02%)</title><rect x="98.1" y="517" width="0.2" height="15.0" fill="rgb(250,145,39)" rx="2" ry="2" />
<text  x="101.13" y="527.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;interval_bound&lt;dht::ring_position&gt;, false, false&gt;::_Optional_base (1 samples, 0.02%)</title><rect x="1027.4" y="341" width="0.2" height="15.0" fill="rgb(216,83,52)" rx="2" ry="2" />
<text  x="1030.36" y="351.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::operator== (3 samples, 0.06%)</title><rect x="732.2" y="389" width="0.7" height="15.0" fill="rgb(239,82,28)" rx="2" ry="2" />
<text  x="735.19" y="399.5" ></text>
</g>
<g >
<title>operator delete (5 samples, 0.09%)</title><rect x="653.7" y="581" width="1.1" height="15.0" fill="rgb(221,15,14)" rx="2" ry="2" />
<text  x="656.66" y="591.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::node_size (1 samples, 0.02%)</title><rect x="247.4" y="245" width="0.2" height="15.0" fill="rgb(205,83,24)" rx="2" ry="2" />
<text  x="250.38" y="255.5" ></text>
</g>
<g >
<title>antlr3::IntStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::consume (2 samples, 0.04%)</title><rect x="32.3" y="325" width="0.5" height="15.0" fill="rgb(223,83,22)" rx="2" ry="2" />
<text  x="35.31" y="335.5" ></text>
</g>
<g >
<title>std::optional&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::operator= (1 samples, 0.02%)</title><rect x="38.3" y="421" width="0.3" height="15.0" fill="rgb(208,184,0)" rx="2" ry="2" />
<text  x="41.33" y="431.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (2 samples, 0.04%)</title><rect x="363.2" y="277" width="0.4" height="15.0" fill="rgb(218,75,44)" rx="2" ry="2" />
<text  x="366.17" y="287.5" ></text>
</g>
<g >
<title>query_result_builder::query_result_builder (1 samples, 0.02%)</title><rect x="120.7" y="549" width="0.2" height="15.0" fill="rgb(210,179,30)" rx="2" ry="2" />
<text  x="123.66" y="559.5" ></text>
</g>
<g >
<title>std::queue&lt;reader_concurrency_semaphore::entry, seastar::circular_buffer&lt;reader_concurrency_semaphore::entry, std::allocator&lt;reader_concurrency_semaphore::entry&gt; &gt; &gt;::pop (3 samples, 0.06%)</title><rect x="620.4" y="581" width="0.7" height="15.0" fill="rgb(249,157,48)" rx="2" ry="2" />
<text  x="623.41" y="591.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.08%)</title><rect x="1148.3" y="533" width="0.9" height="15.0" fill="rgb(223,202,12)" rx="2" ry="2" />
<text  x="1151.28" y="543.5" ></text>
</g>
<g >
<title>cql3::expr::constant::make_bool (2 samples, 0.04%)</title><rect x="68.7" y="421" width="0.4" height="15.0" fill="rgb(224,19,20)" rx="2" ry="2" />
<text  x="71.68" y="431.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::BaseRecognizer (1 samples, 0.02%)</title><rect x="20.5" y="469" width="0.2" height="15.0" fill="rgb(238,146,46)" rx="2" ry="2" />
<text  x="23.49" y="479.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::push_back (11 samples, 0.21%)</title><rect x="22.5" y="373" width="2.4" height="15.0" fill="rgb(254,149,37)" rx="2" ry="2" />
<text  x="25.49" y="383.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;mutation_querier, false, false&gt;::_Optional_base (1 samples, 0.02%)</title><rect x="441.7" y="485" width="0.2" height="15.0" fill="rgb(225,122,46)" rx="2" ry="2" />
<text  x="444.71" y="495.5" ></text>
</g>
<g >
<title>get_scheduling_groups (1 samples, 0.02%)</title><rect x="107.9" y="597" width="0.3" height="15.0" fill="rgb(249,191,46)" rx="2" ry="2" />
<text  x="110.94" y="607.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::set_urgent_state (1 samples, 0.02%)</title><rect x="623.1" y="581" width="0.2" height="15.0" fill="rgb(249,5,30)" rx="2" ry="2" />
<text  x="626.09" y="591.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.02%)</title><rect x="47.7" y="213" width="0.2" height="15.0" fill="rgb(220,77,29)" rx="2" ry="2" />
<text  x="50.70" y="223.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;sstables::size_tiered_compaction_strategy&gt;::~shared_ptr_count_for (1 samples, 0.02%)</title><rect x="107.7" y="517" width="0.2" height="15.0" fill="rgb(225,22,13)" rx="2" ry="2" />
<text  x="110.72" y="527.5" ></text>
</g>
<g >
<title>ser::qr_partition__static_row&lt;bytes_ostream&gt;::qr_partition__static_row (2 samples, 0.04%)</title><rect x="344.2" y="261" width="0.5" height="15.0" fill="rgb(229,24,23)" rx="2" ry="2" />
<text  x="347.21" y="271.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::set_line (1 samples, 0.02%)</title><rect x="25.2" y="357" width="0.2" height="15.0" fill="rgb(249,96,25)" rx="2" ry="2" />
<text  x="28.17" y="367.5" ></text>
</g>
<g >
<title>cql3::query_options::prepare (1 samples, 0.02%)</title><rect x="724.4" y="533" width="0.2" height="15.0" fill="rgb(224,40,18)" rx="2" ry="2" />
<text  x="727.38" y="543.5" ></text>
</g>
<g >
<title>database::do_apply (41 samples, 0.78%)</title><rect x="1117.0" y="437" width="9.2" height="15.0" fill="rgb(208,170,41)" rx="2" ry="2" />
<text  x="1120.04" y="447.5" ></text>
</g>
<g >
<title>database::apply_in_memory (34 samples, 0.64%)</title><rect x="1117.0" y="389" width="7.6" height="15.0" fill="rgb(254,158,49)" rx="2" ry="2" />
<text  x="1120.04" y="399.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_token (1 samples, 0.02%)</title><rect x="930.1" y="501" width="0.2" height="15.0" fill="rgb(248,14,21)" rx="2" ry="2" />
<text  x="933.08" y="511.5" ></text>
</g>
<g >
<title>cql3::functions::function_name::~function_name (2 samples, 0.04%)</title><rect x="45.5" y="405" width="0.4" height="15.0" fill="rgb(222,79,32)" rx="2" ry="2" />
<text  x="48.47" y="415.5" ></text>
</g>
<g >
<title>schema::column_at (10 samples, 0.19%)</title><rect x="366.3" y="277" width="2.2" height="15.0" fill="rgb(228,123,41)" rx="2" ry="2" />
<text  x="369.30" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (3 samples, 0.06%)</title><rect x="1099.2" y="501" width="0.7" height="15.0" fill="rgb(215,133,13)" rx="2" ry="2" />
<text  x="1102.20" y="511.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (3 samples, 0.06%)</title><rect x="52.4" y="325" width="0.7" height="15.0" fill="rgb(250,173,54)" rx="2" ry="2" />
<text  x="55.39" y="335.5" ></text>
</g>
<g >
<title>dht::murmur3_partitioner::get_token (1 samples, 0.02%)</title><rect x="854.7" y="437" width="0.2" height="15.0" fill="rgb(245,173,19)" rx="2" ry="2" />
<text  x="857.67" y="447.5" ></text>
</g>
<g >
<title>auth::create_metadata_table_if_missing_impl (1 samples, 0.02%)</title><rect x="677.1" y="501" width="0.2" height="15.0" fill="rgb(229,224,41)" rx="2" ry="2" />
<text  x="680.08" y="511.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (1 samples, 0.02%)</title><rect x="1029.6" y="389" width="0.2" height="15.0" fill="rgb(248,149,4)" rx="2" ry="2" />
<text  x="1032.59" y="399.5" ></text>
</g>
<g >
<title>query::querier&lt; (1 samples, 0.02%)</title><rect x="1165.2" y="581" width="0.3" height="15.0" fill="rgb(237,6,2)" rx="2" ry="2" />
<text  x="1168.24" y="591.5" ></text>
</g>
<g >
<title>seastar::reactor::do_expire_lowres_timers (1 samples, 0.02%)</title><rect x="1166.4" y="597" width="0.2" height="15.0" fill="rgb(232,4,27)" rx="2" ry="2" />
<text  x="1169.35" y="607.5" ></text>
</g>
<g >
<title>operator new (10 samples, 0.19%)</title><rect x="954.2" y="453" width="2.2" height="15.0" fill="rgb(247,119,14)" rx="2" ry="2" />
<text  x="957.18" y="463.5" ></text>
</g>
<g >
<title>frozen_schema::unfreeze (1 samples, 0.02%)</title><rect x="105.7" y="453" width="0.2" height="15.0" fill="rgb(231,119,29)" rx="2" ry="2" />
<text  x="108.71" y="463.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.02%)</title><rect x="58.2" y="277" width="0.2" height="15.0" fill="rgb(227,109,27)" rx="2" ry="2" />
<text  x="61.19" y="287.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (4 samples, 0.08%)</title><rect x="348.9" y="261" width="0.9" height="15.0" fill="rgb(253,177,35)" rx="2" ry="2" />
<text  x="351.90" y="271.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="1119.5" y="309" width="0.2" height="15.0" fill="rgb(234,118,35)" rx="2" ry="2" />
<text  x="1122.50" y="319.5" ></text>
</g>
<g >
<title>seastar::open_directory (1 samples, 0.02%)</title><rect x="678.0" y="565" width="0.2" height="15.0" fill="rgb(245,77,33)" rx="2" ry="2" />
<text  x="680.98" y="575.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql_transport::messages::result_message::rows&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="643.2" y="565" width="0.2" height="15.0" fill="rgb(223,204,29)" rx="2" ry="2" />
<text  x="646.17" y="575.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (1 samples, 0.02%)</title><rect x="121.8" y="533" width="0.2" height="15.0" fill="rgb(228,92,32)" rx="2" ry="2" />
<text  x="124.78" y="543.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (2 samples, 0.04%)</title><rect x="680.4" y="549" width="0.5" height="15.0" fill="rgb(224,196,22)" rx="2" ry="2" />
<text  x="683.43" y="559.5" ></text>
</g>
<g >
<title>data_value::data_value (1 samples, 0.02%)</title><rect x="68.9" y="405" width="0.2" height="15.0" fill="rgb(230,79,9)" rx="2" ry="2" />
<text  x="71.90" y="415.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (2 samples, 0.04%)</title><rect x="57.5" y="389" width="0.5" height="15.0" fill="rgb(216,91,33)" rx="2" ry="2" />
<text  x="60.52" y="399.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (8 samples, 0.15%)</title><rect x="719.9" y="453" width="1.8" height="15.0" fill="rgb(243,173,49)" rx="2" ry="2" />
<text  x="722.92" y="463.5" ></text>
</g>
<g >
<title>operator new (7 samples, 0.13%)</title><rect x="712.3" y="517" width="1.6" height="15.0" fill="rgb(229,89,1)" rx="2" ry="2" />
<text  x="715.33" y="527.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_erase_at_end (3 samples, 0.06%)</title><rect x="399.1" y="293" width="0.7" height="15.0" fill="rgb(245,189,37)" rx="2" ry="2" />
<text  x="402.09" y="303.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="156.8" y="485" width="0.2" height="15.0" fill="rgb(231,61,17)" rx="2" ry="2" />
<text  x="159.80" y="495.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (1 samples, 0.02%)</title><rect x="102.4" y="485" width="0.2" height="15.0" fill="rgb(232,145,46)" rx="2" ry="2" />
<text  x="105.37" y="495.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::digest_read_resolver (1 samples, 0.02%)</title><rect x="975.8" y="421" width="0.2" height="15.0" fill="rgb(221,216,47)" rx="2" ry="2" />
<text  x="978.82" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt;::reserve (6 samples, 0.11%)</title><rect x="1147.8" y="549" width="1.4" height="15.0" fill="rgb(222,119,28)" rx="2" ry="2" />
<text  x="1150.83" y="559.5" ></text>
</g>
<g >
<title>db::schema_tables::read_schema_partition_for_table (1 samples, 0.02%)</title><rect x="106.6" y="565" width="0.2" height="15.0" fill="rgb(254,116,25)" rx="2" ry="2" />
<text  x="109.60" y="575.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;locator::snitch_ptr&gt;::local (1 samples, 0.02%)</title><rect x="1075.5" y="405" width="0.3" height="15.0" fill="rgb(249,189,54)" rx="2" ry="2" />
<text  x="1078.55" y="415.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (4 samples, 0.08%)</title><rect x="134.3" y="469" width="0.9" height="15.0" fill="rgb(213,126,27)" rx="2" ry="2" />
<text  x="137.27" y="479.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::__uniq_ptr_impl (1 samples, 0.02%)</title><rect x="56.9" y="325" width="0.2" height="15.0" fill="rgb(214,161,39)" rx="2" ry="2" />
<text  x="59.85" y="335.5" ></text>
</g>
<g >
<title>lister::scan_dir (1 samples, 0.02%)</title><rect x="677.8" y="581" width="0.2" height="15.0" fill="rgb(226,146,24)" rx="2" ry="2" />
<text  x="680.75" y="591.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="67.6" y="453" width="0.2" height="15.0" fill="rgb(212,137,19)" rx="2" ry="2" />
<text  x="70.56" y="463.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_mutations_locally (1 samples, 0.02%)</title><rect x="106.6" y="533" width="0.2" height="15.0" fill="rgb(231,55,34)" rx="2" ry="2" />
<text  x="109.60" y="543.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (1 samples, 0.02%)</title><rect x="99.9" y="549" width="0.2" height="15.0" fill="rgb(226,226,17)" rx="2" ry="2" />
<text  x="102.91" y="559.5" ></text>
</g>
<g >
<title>antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;::index_impl (1 samples, 0.02%)</title><rect x="27.0" y="325" width="0.2" height="15.0" fill="rgb(243,32,36)" rx="2" ry="2" />
<text  x="29.96" y="335.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_next_bkt (1 samples, 0.02%)</title><rect x="72.5" y="437" width="0.2" height="15.0" fill="rgb(249,190,53)" rx="2" ry="2" />
<text  x="75.47" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, unsigned int, std::_Identity&lt;unsigned int&gt;, std::less&lt;unsigned int&gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;unsigned int&gt; &gt;::end (2 samples, 0.04%)</title><rect x="35.7" y="373" width="0.4" height="15.0" fill="rgb(223,103,33)" rx="2" ry="2" />
<text  x="38.66" y="383.5" ></text>
</g>
<g >
<title>std::forward_as_tuple&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, auth::permissions_cache::get (1 samples, 0.02%)</title><rect x="796.2" y="373" width="0.2" height="15.0" fill="rgb(251,191,50)" rx="2" ry="2" />
<text  x="799.22" y="383.5" ></text>
</g>
<g >
<title>validation::validate_column_family (39 samples, 0.74%)</title><rect x="806.7" y="485" width="8.7" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="809.71" y="495.5" ></text>
</g>
<g >
<title>locator::token_metadata::get_all_endpoints (1 samples, 0.02%)</title><rect x="17.4" y="485" width="0.2" height="15.0" fill="rgb(251,25,15)" rx="2" ry="2" />
<text  x="20.36" y="495.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextToken (44 samples, 0.83%)</title><rect x="25.2" y="389" width="9.8" height="15.0" fill="rgb(221,137,42)" rx="2" ry="2" />
<text  x="28.17" y="399.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.06%)</title><rect x="896.6" y="421" width="0.7" height="15.0" fill="rgb(247,145,5)" rx="2" ry="2" />
<text  x="899.62" y="431.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::set&lt;service::storage_proxy_coordinator_query_result&gt; (1 samples, 0.02%)</title><rect x="1142.5" y="565" width="0.2" height="15.0" fill="rgb(238,209,4)" rx="2" ry="2" />
<text  x="1145.48" y="575.5" ></text>
</g>
<g >
<title>partition_entry::read (5 samples, 0.09%)</title><rect x="516.4" y="405" width="1.2" height="15.0" fill="rgb(249,128,22)" rx="2" ry="2" />
<text  x="519.45" y="415.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="37.0" y="373" width="0.2" height="15.0" fill="rgb(221,199,52)" rx="2" ry="2" />
<text  x="40.00" y="383.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (4 samples, 0.08%)</title><rect x="768.3" y="373" width="0.9" height="15.0" fill="rgb(246,229,17)" rx="2" ry="2" />
<text  x="771.33" y="383.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (1 samples, 0.02%)</title><rect x="105.9" y="277" width="0.3" height="15.0" fill="rgb(218,158,41)" rx="2" ry="2" />
<text  x="108.93" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="1096.1" y="485" width="0.2" height="15.0" fill="rgb(246,87,27)" rx="2" ry="2" />
<text  x="1099.07" y="495.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::operator (1 samples, 0.02%)</title><rect x="168.6" y="469" width="0.3" height="15.0" fill="rgb(226,146,23)" rx="2" ry="2" />
<text  x="171.63" y="479.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.02%)</title><rect x="24.9" y="341" width="0.3" height="15.0" fill="rgb(246,195,13)" rx="2" ry="2" />
<text  x="27.95" y="351.5" ></text>
</g>
<g >
<title>__tls_init (1 samples, 0.02%)</title><rect x="1119.1" y="213" width="0.2" height="15.0" fill="rgb(254,32,19)" rx="2" ry="2" />
<text  x="1122.05" y="223.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_locally (8 samples, 0.15%)</title><rect x="1127.3" y="309" width="1.8" height="15.0" fill="rgb(208,21,3)" rx="2" ry="2" />
<text  x="1130.31" y="319.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.06%)</title><rect x="459.1" y="373" width="0.7" height="15.0" fill="rgb(252,201,4)" rx="2" ry="2" />
<text  x="462.11" y="383.5" ></text>
</g>
<g >
<title>__tls_init (1 samples, 0.02%)</title><rect x="530.1" y="389" width="0.2" height="15.0" fill="rgb(230,18,22)" rx="2" ry="2" />
<text  x="533.06" y="399.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (8 samples, 0.15%)</title><rect x="729.5" y="437" width="1.8" height="15.0" fill="rgb(222,174,32)" rx="2" ry="2" />
<text  x="732.51" y="447.5" ></text>
</g>
<g >
<title>row_cache::do_make_reader (1 samples, 0.02%)</title><rect x="141.4" y="421" width="0.2" height="15.0" fill="rgb(236,208,52)" rx="2" ry="2" />
<text  x="144.41" y="431.5" ></text>
</g>
<g >
<title>evictable_reader::fill_buffer (1 samples, 0.02%)</title><rect x="105.9" y="325" width="0.3" height="15.0" fill="rgb(234,78,44)" rx="2" ry="2" />
<text  x="108.93" y="335.5" ></text>
</g>
<g >
<title>db::get_cdc_generation_mutations (1 samples, 0.02%)</title><rect x="105.5" y="597" width="0.2" height="15.0" fill="rgb(218,79,28)" rx="2" ry="2" />
<text  x="108.49" y="607.5" ></text>
</g>
<g >
<title>logalloc::region_impl::free (1 samples, 0.02%)</title><rect x="15.8" y="613" width="0.2" height="15.0" fill="rgb(240,68,5)" rx="2" ry="2" />
<text  x="18.80" y="623.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (1 samples, 0.02%)</title><rect x="652.1" y="533" width="0.2" height="15.0" fill="rgb(215,135,25)" rx="2" ry="2" />
<text  x="655.09" y="543.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::find (1 samples, 0.02%)</title><rect x="939.9" y="453" width="0.2" height="15.0" fill="rgb(220,135,51)" rx="2" ry="2" />
<text  x="942.90" y="463.5" ></text>
</g>
<g >
<title>seastar::schedule_urgent (2 samples, 0.04%)</title><rect x="1136.0" y="597" width="0.5" height="15.0" fill="rgb(215,37,23)" rx="2" ry="2" />
<text  x="1139.01" y="607.5" ></text>
</g>
<g >
<title>db::schema_tables::recalculate_schema_version (1 samples, 0.02%)</title><rect x="17.1" y="501" width="0.3" height="15.0" fill="rgb(234,50,12)" rx="2" ry="2" />
<text  x="20.14" y="511.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (1 samples, 0.02%)</title><rect x="899.3" y="469" width="0.2" height="15.0" fill="rgb(233,182,24)" rx="2" ry="2" />
<text  x="902.29" y="479.5" ></text>
</g>
<g >
<title>abstract_type::validate&lt;managed_bytes_basic_view&lt; (3 samples, 0.06%)</title><rect x="880.1" y="389" width="0.7" height="15.0" fill="rgb(216,130,53)" rx="2" ry="2" />
<text  x="883.11" y="399.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (3 samples, 0.06%)</title><rect x="54.2" y="213" width="0.6" height="15.0" fill="rgb(211,75,17)" rx="2" ry="2" />
<text  x="57.17" y="223.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (4 samples, 0.08%)</title><rect x="884.6" y="357" width="0.9" height="15.0" fill="rgb(246,85,46)" rx="2" ry="2" />
<text  x="887.57" y="367.5" ></text>
</g>
<g >
<title>[unknown] (6 samples, 0.11%)</title><rect x="10.4" y="709" width="1.4" height="15.0" fill="rgb(237,187,18)" rx="2" ry="2" />
<text  x="13.45" y="719.5" ></text>
</g>
<g >
<title>cql3::expr::prepare_term (2 samples, 0.04%)</title><rect x="68.2" y="437" width="0.5" height="15.0" fill="rgb(248,146,26)" rx="2" ry="2" />
<text  x="71.23" y="447.5" ></text>
</g>
<g >
<title>mutation_querier::query_static_row (8 samples, 0.15%)</title><rect x="363.6" y="261" width="1.8" height="15.0" fill="rgb(211,71,49)" rx="2" ry="2" />
<text  x="366.62" y="271.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::drop_view_statement, std::default_delete&lt;cql3::statements::drop_view_statement&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="61.8" y="453" width="0.2" height="15.0" fill="rgb(217,154,25)" rx="2" ry="2" />
<text  x="64.76" y="463.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.06%)</title><rect x="774.8" y="341" width="0.7" height="15.0" fill="rgb(247,87,25)" rx="2" ry="2" />
<text  x="777.80" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (1 samples, 0.02%)</title><rect x="34.5" y="357" width="0.3" height="15.0" fill="rgb(243,114,29)" rx="2" ry="2" />
<text  x="37.54" y="367.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::check (2 samples, 0.04%)</title><rect x="338.2" y="309" width="0.4" height="15.0" fill="rgb(210,29,7)" rx="2" ry="2" />
<text  x="341.19" y="319.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (1 samples, 0.02%)</title><rect x="428.1" y="293" width="0.2" height="15.0" fill="rgb(230,159,44)" rx="2" ry="2" />
<text  x="431.10" y="303.5" ></text>
</g>
<g >
<title>mutation_partition_view::do_accept&lt;partition_builder&gt; (1 samples, 0.02%)</title><rect x="106.4" y="565" width="0.2" height="15.0" fill="rgb(232,83,45)" rx="2" ry="2" />
<text  x="109.38" y="575.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (3 samples, 0.06%)</title><rect x="1049.9" y="389" width="0.7" height="15.0" fill="rgb(244,43,35)" rx="2" ry="2" />
<text  x="1052.89" y="399.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::set_urgent_state (3 samples, 0.06%)</title><rect x="656.6" y="565" width="0.6" height="15.0" fill="rgb(211,159,32)" rx="2" ry="2" />
<text  x="659.56" y="575.5" ></text>
</g>
<g >
<title>auth::data_resource_view::table (1 samples, 0.02%)</title><rect x="763.4" y="453" width="0.2" height="15.0" fill="rgb(251,134,7)" rx="2" ry="2" />
<text  x="766.42" y="463.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (2 samples, 0.04%)</title><rect x="692.0" y="565" width="0.5" height="15.0" fill="rgb(239,88,52)" rx="2" ry="2" />
<text  x="695.03" y="575.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="46.6" y="357" width="0.2" height="15.0" fill="rgb(228,210,35)" rx="2" ry="2" />
<text  x="49.59" y="367.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (1 samples, 0.02%)</title><rect x="76.9" y="325" width="0.3" height="15.0" fill="rgb(235,36,15)" rx="2" ry="2" />
<text  x="79.93" y="335.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::~timer (1 samples, 0.02%)</title><rect x="133.2" y="501" width="0.2" height="15.0" fill="rgb(232,192,43)" rx="2" ry="2" />
<text  x="136.15" y="511.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.02%)</title><rect x="40.6" y="197" width="0.2" height="15.0" fill="rgb(235,23,54)" rx="2" ry="2" />
<text  x="43.57" y="207.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="70.2" y="389" width="0.3" height="15.0" fill="rgb(205,205,49)" rx="2" ry="2" />
<text  x="73.24" y="399.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_rehash (8 samples, 0.15%)</title><rect x="1150.3" y="533" width="1.8" height="15.0" fill="rgb(219,166,43)" rx="2" ry="2" />
<text  x="1153.29" y="543.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::~__si_class_type_info (15 samples, 0.28%)</title><rect x="12.0" y="709" width="3.4" height="15.0" fill="rgb(244,75,12)" rx="2" ry="2" />
<text  x="15.01" y="719.5" ></text>
</g>
<g >
<title>remove_or_mark_as_unique_owner (1 samples, 0.02%)</title><rect x="15.8" y="629" width="0.2" height="15.0" fill="rgb(218,219,0)" rx="2" ry="2" />
<text  x="18.80" y="639.5" ></text>
</g>
<g >
<title>operator new (9 samples, 0.17%)</title><rect x="830.1" y="517" width="2.0" height="15.0" fill="rgb(207,97,5)" rx="2" ry="2" />
<text  x="833.13" y="527.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::abstract_read_executor&gt;::~shared_ptr (5 samples, 0.09%)</title><rect x="1162.1" y="549" width="1.1" height="15.0" fill="rgb(240,20,35)" rx="2" ry="2" />
<text  x="1165.11" y="559.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::emplace_back&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; (3 samples, 0.06%)</title><rect x="46.4" y="389" width="0.6" height="15.0" fill="rgb(236,82,54)" rx="2" ry="2" />
<text  x="49.37" y="399.5" ></text>
</g>
<g >
<title>managed_bytes::free_chain (1 samples, 0.02%)</title><rect x="1134.0" y="213" width="0.2" height="15.0" fill="rgb(220,59,35)" rx="2" ry="2" />
<text  x="1137.00" y="223.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.02%)</title><rect x="56.6" y="373" width="0.3" height="15.0" fill="rgb(219,17,49)" rx="2" ry="2" />
<text  x="59.63" y="383.5" ></text>
</g>
<g >
<title>intrusive_b::node&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (1 samples, 0.02%)</title><rect x="1137.3" y="421" width="0.3" height="15.0" fill="rgb(222,210,16)" rx="2" ry="2" />
<text  x="1140.35" y="431.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;bytes_ostream::chunk, std::default_delete&lt;bytes_ostream::chunk&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="141.2" y="549" width="0.2" height="15.0" fill="rgb(225,3,15)" rx="2" ry="2" />
<text  x="144.19" y="559.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::set_value&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="680.9" y="565" width="0.2" height="15.0" fill="rgb(227,227,11)" rx="2" ry="2" />
<text  x="683.88" y="575.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (2 samples, 0.04%)</title><rect x="745.8" y="421" width="0.4" height="15.0" fill="rgb(222,0,7)" rx="2" ry="2" />
<text  x="748.80" y="431.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (2 samples, 0.04%)</title><rect x="413.1" y="229" width="0.5" height="15.0" fill="rgb(250,186,8)" rx="2" ry="2" />
<text  x="416.15" y="239.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::read_next (2 samples, 0.04%)</title><rect x="80.5" y="405" width="0.4" height="15.0" fill="rgb(212,30,18)" rx="2" ry="2" />
<text  x="83.50" y="415.5" ></text>
</g>
<g >
<title>auth::data_resource_view::table (1 samples, 0.02%)</title><rect x="802.7" y="405" width="0.2" height="15.0" fill="rgb(247,175,38)" rx="2" ry="2" />
<text  x="805.69" y="415.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, flat_mutation_reader::impl::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (4 samples, 0.08%)</title><rect x="676.2" y="485" width="0.9" height="15.0" fill="rgb(241,94,15)" rx="2" ry="2" />
<text  x="679.19" y="495.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (2 samples, 0.04%)</title><rect x="20.9" y="485" width="0.5" height="15.0" fill="rgb(252,24,32)" rx="2" ry="2" />
<text  x="23.93" y="495.5" ></text>
</g>
<g >
<title>ser::writer_of_std__optional__qr_cell&lt;bytes_ostream&gt;::write (1 samples, 0.02%)</title><rect x="370.8" y="277" width="0.2" height="15.0" fill="rgb(211,191,42)" rx="2" ry="2" />
<text  x="373.76" y="287.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.02%)</title><rect x="56.9" y="373" width="0.2" height="15.0" fill="rgb(246,124,44)" rx="2" ry="2" />
<text  x="59.85" y="383.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::maybe_refresh_state (16 samples, 0.30%)</title><rect x="256.5" y="277" width="3.6" height="15.0" fill="rgb(246,135,25)" rx="2" ry="2" />
<text  x="259.53" y="287.5" ></text>
</g>
<g >
<title>query::result::result (1 samples, 0.02%)</title><rect x="588.1" y="533" width="0.2" height="15.0" fill="rgb(248,183,0)" rx="2" ry="2" />
<text  x="591.06" y="543.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (30 samples, 0.57%)</title><rect x="1126.2" y="549" width="6.7" height="15.0" fill="rgb(246,158,0)" rx="2" ry="2" />
<text  x="1129.19" y="559.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_M_set_node (1 samples, 0.02%)</title><rect x="40.6" y="229" width="0.2" height="15.0" fill="rgb(247,156,13)" rx="2" ry="2" />
<text  x="43.57" y="239.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="320.1" y="469" width="0.2" height="15.0" fill="rgb(251,75,52)" rx="2" ry="2" />
<text  x="323.12" y="479.5" ></text>
</g>
<g >
<title>ser::writer_of_qr_clustered_row&lt;bytes_ostream&gt;::skip_key (2 samples, 0.04%)</title><rect x="398.2" y="293" width="0.4" height="15.0" fill="rgb(218,127,12)" rx="2" ry="2" />
<text  x="401.20" y="303.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::query_state&gt;::~shared_ptr (2 samples, 0.04%)</title><rect x="715.7" y="549" width="0.4" height="15.0" fill="rgb(253,151,41)" rx="2" ry="2" />
<text  x="718.68" y="559.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (1 samples, 0.02%)</title><rect x="912.2" y="453" width="0.3" height="15.0" fill="rgb(222,119,54)" rx="2" ry="2" />
<text  x="915.23" y="463.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="811.8" y="389" width="0.3" height="15.0" fill="rgb(239,209,50)" rx="2" ry="2" />
<text  x="814.84" y="399.5" ></text>
</g>
<g >
<title>query::result::result (4 samples, 0.08%)</title><rect x="586.9" y="517" width="0.9" height="15.0" fill="rgb(235,218,53)" rx="2" ry="2" />
<text  x="589.95" y="527.5" ></text>
</g>
<g >
<title>std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt; &gt;, seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (1 samples, 0.02%)</title><rect x="790.6" y="357" width="0.3" height="15.0" fill="rgb(246,189,47)" rx="2" ry="2" />
<text  x="793.64" y="367.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperation (83 samples, 1.57%)</title><rect x="38.8" y="453" width="18.5" height="15.0" fill="rgb(254,56,4)" rx="2" ry="2" />
<text  x="41.78" y="463.5" ></text>
</g>
<g >
<title>seastar::logger::lambda_log_writer&lt;seastar::logger::log&lt;std::unordered_set&lt;gms::inet_address, std::hash&lt;gms::inet_address&gt;, std::equal_to&lt;gms::inet_address&gt;, std::allocator&lt;gms::inet_address&gt; &gt;&amp;, std::unordered_set&lt;gms::inet_address, std::hash&lt;gms::inet_address&gt;, std::equal_to&lt;gms::inet_address&gt;, std::allocator&lt;gms::inet_address&gt; &gt;&amp;, unsigned long&gt; (1 samples, 0.02%)</title><rect x="11.1" y="469" width="0.2" height="15.0" fill="rgb(220,102,32)" rx="2" ry="2" />
<text  x="14.12" y="479.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="736.2" y="357" width="0.2" height="15.0" fill="rgb(253,92,8)" rx="2" ry="2" />
<text  x="739.21" y="367.5" ></text>
</g>
<g >
<title>query_result_builder::consume (201 samples, 3.80%)</title><rect x="354.0" y="309" width="44.9" height="15.0" fill="rgb(234,181,16)" rx="2" ry="2" />
<text  x="357.03" y="319.5" >quer..</text>
</g>
<g >
<title>_ZSt13__invoke_implISt10unique_ptrIN7seastar8internal13do_with_stateISt5tupleIJN20flat_mutation_reader4impl16consumer_adapterI35stable_flattened_mutations_consumerI17compact_for_queryIL19emit_only_live_rows1EN5query27clustering_position_trackerI20query_result_builderEEEEEEEENS1_6futureIvEEEESt14default_deleteISL_EEZNS2_12do_with_implISH_ZNS6_7consumeISG_EEDaT_EUlRSH_E_JEEEDaOSR_OT0_DpOT1_EUlDpOT_E_JSH_EESR_St14__invoke_otherSW_SZ_ (4 samples, 0.08%)</title><rect x="324.8" y="405" width="0.9" height="15.0" fill="rgb(208,2,8)" rx="2" ry="2" />
<text  x="327.80" y="415.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;std::tuple&lt;seastar::lw_shared_ptr&lt;query::result&gt;, cache_temperature&gt; &gt;::set_value&lt;std::tuple&lt;seastar::lw_shared_ptr&lt;query::result&gt;, cache_temperature&gt; &gt; (1 samples, 0.02%)</title><rect x="105.0" y="581" width="0.3" height="15.0" fill="rgb(207,48,5)" rx="2" ry="2" />
<text  x="108.04" y="591.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (3 samples, 0.06%)</title><rect x="1159.7" y="565" width="0.6" height="15.0" fill="rgb(214,11,10)" rx="2" ry="2" />
<text  x="1162.66" y="575.5" ></text>
</g>
<g >
<title>std::__make_heap&lt;__gnu_cxx::__normal_iterator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position*, std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::heap_compare&gt; &gt; (3 samples, 0.06%)</title><rect x="283.7" y="325" width="0.7" height="15.0" fill="rgb(229,193,20)" rx="2" ry="2" />
<text  x="286.75" y="335.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (2 samples, 0.04%)</title><rect x="910.7" y="421" width="0.4" height="15.0" fill="rgb(212,151,19)" rx="2" ry="2" />
<text  x="913.67" y="431.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (1,249 samples, 23.62%)</title><rect x="163.9" y="517" width="278.7" height="15.0" fill="rgb(242,175,35)" rx="2" ry="2" />
<text  x="166.94" y="527.5" >query::consume_page&lt;</text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (1 samples, 0.02%)</title><rect x="781.3" y="293" width="0.2" height="15.0" fill="rgb(226,169,40)" rx="2" ry="2" />
<text  x="784.27" y="303.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="207.2" y="325" width="0.2" height="15.0" fill="rgb(235,49,12)" rx="2" ry="2" />
<text  x="210.22" y="335.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_impl&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (1 samples, 0.02%)</title><rect x="1165.2" y="469" width="0.3" height="15.0" fill="rgb(213,20,43)" rx="2" ry="2" />
<text  x="1168.24" y="479.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="83.0" y="677" width="0.2" height="15.0" fill="rgb(226,60,10)" rx="2" ry="2" />
<text  x="85.96" y="687.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;auth::resource_kind, std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;auth::resource_kind&gt;, std::hash&lt;auth::resource_kind&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (1 samples, 0.02%)</title><rect x="758.7" y="421" width="0.3" height="15.0" fill="rgb(229,111,30)" rx="2" ry="2" />
<text  x="761.74" y="431.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::process_results (51 samples, 0.96%)</title><rect x="635.4" y="581" width="11.3" height="15.0" fill="rgb(245,135,40)" rx="2" ry="2" />
<text  x="638.36" y="591.5" ></text>
</g>
<g >
<title>seastar::reactor_backend_aio::await_events (2 samples, 0.04%)</title><rect x="1167.2" y="581" width="0.5" height="15.0" fill="rgb(222,202,37)" rx="2" ry="2" />
<text  x="1170.24" y="591.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (3 samples, 0.06%)</title><rect x="650.3" y="581" width="0.7" height="15.0" fill="rgb(214,66,7)" rx="2" ry="2" />
<text  x="653.31" y="591.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.02%)</title><rect x="1133.8" y="485" width="0.2" height="15.0" fill="rgb(215,102,32)" rx="2" ry="2" />
<text  x="1136.78" y="495.5" ></text>
</g>
<g >
<title>seastar::futurize_invoke&lt;seastar::future&lt;void&gt;  (508 samples, 9.60%)</title><rect x="324.1" y="437" width="113.4" height="15.0" fill="rgb(206,143,1)" rx="2" ry="2" />
<text  x="327.13" y="447.5" >seastar::futur..</text>
</g>
<g >
<title>seastar::future_state&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::clear (1 samples, 0.02%)</title><rect x="192.5" y="357" width="0.2" height="15.0" fill="rgb(209,159,27)" rx="2" ry="2" />
<text  x="195.50" y="367.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::find&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (18 samples, 0.34%)</title><rect x="809.4" y="421" width="4.0" height="15.0" fill="rgb(240,167,37)" rx="2" ry="2" />
<text  x="812.38" y="431.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::query_options, std::default_delete&lt;cql3::query_options&gt; &gt;::~unique_ptr (16 samples, 0.30%)</title><rect x="659.9" y="581" width="3.6" height="15.0" fill="rgb(246,138,17)" rx="2" ry="2" />
<text  x="662.90" y="591.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (34 samples, 0.64%)</title><rect x="422.3" y="341" width="7.6" height="15.0" fill="rgb(211,23,9)" rx="2" ry="2" />
<text  x="425.30" y="351.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.02%)</title><rect x="37.7" y="373" width="0.2" height="15.0" fill="rgb(244,190,33)" rx="2" ry="2" />
<text  x="40.66" y="383.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::guard (1 samples, 0.02%)</title><rect x="195.8" y="373" width="0.3" height="15.0" fill="rgb(253,142,9)" rx="2" ry="2" />
<text  x="198.85" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::_M_realloc_insert&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; (2 samples, 0.04%)</title><rect x="46.6" y="373" width="0.4" height="15.0" fill="rgb(217,158,45)" rx="2" ry="2" />
<text  x="49.59" y="383.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (2 samples, 0.04%)</title><rect x="296.7" y="405" width="0.4" height="15.0" fill="rgb(228,156,11)" rx="2" ry="2" />
<text  x="299.69" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (2 samples, 0.04%)</title><rect x="368.1" y="261" width="0.4" height="15.0" fill="rgb(244,38,28)" rx="2" ry="2" />
<text  x="371.08" y="271.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (49 samples, 0.93%)</title><rect x="343.1" y="309" width="10.9" height="15.0" fill="rgb(224,176,54)" rx="2" ry="2" />
<text  x="346.10" y="319.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment (1 samples, 0.02%)</title><rect x="80.3" y="389" width="0.2" height="15.0" fill="rgb(228,190,3)" rx="2" ry="2" />
<text  x="83.28" y="399.5" ></text>
</g>
<g >
<title>visit&lt;(anonymous namespace)::from_string_visitor&gt; (1 samples, 0.02%)</title><rect x="68.2" y="389" width="0.3" height="15.0" fill="rgb(236,25,29)" rx="2" ry="2" />
<text  x="71.23" y="399.5" ></text>
</g>
<g >
<title>std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;std::optional&lt;auth::resource&gt; &gt;, seastar::future&lt;bool&gt; &gt; &gt;::operator (7 samples, 0.13%)</title><rect x="799.3" y="405" width="1.6" height="15.0" fill="rgb(227,189,23)" rx="2" ry="2" />
<text  x="802.34" y="415.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::metadata const&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="95.7" y="581" width="0.2" height="15.0" fill="rgb(212,0,41)" rx="2" ry="2" />
<text  x="98.67" y="591.5" ></text>
</g>
<g >
<title>local_schema_registry (1 samples, 0.02%)</title><rect x="954.0" y="453" width="0.2" height="15.0" fill="rgb(247,180,50)" rx="2" ry="2" />
<text  x="956.96" y="463.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.04%)</title><rect x="467.6" y="421" width="0.4" height="15.0" fill="rgb(228,102,54)" rx="2" ry="2" />
<text  x="470.59" y="431.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.06%)</title><rect x="646.7" y="581" width="0.7" height="15.0" fill="rgb(232,22,33)" rx="2" ry="2" />
<text  x="649.74" y="591.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::~partition_snapshot_flat_reader (1 samples, 0.02%)</title><rect x="1165.5" y="469" width="0.2" height="15.0" fill="rgb(251,153,10)" rx="2" ry="2" />
<text  x="1168.46" y="479.5" ></text>
</g>
<g >
<title>ser::qr_partition__static_row&lt;bytes_ostream&gt;::start_cells (3 samples, 0.06%)</title><rect x="344.7" y="261" width="0.6" height="15.0" fill="rgb(253,32,40)" rx="2" ry="2" />
<text  x="347.66" y="271.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="100.1" y="549" width="0.3" height="15.0" fill="rgb(211,37,4)" rx="2" ry="2" />
<text  x="103.13" y="559.5" ></text>
</g>
<g >
<title>single_node_cql_env::do_with (1 samples, 0.02%)</title><rect x="11.1" y="597" width="0.2" height="15.0" fill="rgb(240,176,50)" rx="2" ry="2" />
<text  x="14.12" y="607.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="185.4" y="325" width="0.2" height="15.0" fill="rgb(224,114,48)" rx="2" ry="2" />
<text  x="188.36" y="335.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.02%)</title><rect x="10.7" y="693" width="0.2" height="15.0" fill="rgb(254,176,54)" rx="2" ry="2" />
<text  x="13.67" y="703.5" ></text>
</g>
<g >
<title>cql3::query_options::get_value_at (6 samples, 0.11%)</title><rect x="882.1" y="373" width="1.4" height="15.0" fill="rgb(235,0,33)" rx="2" ry="2" />
<text  x="885.12" y="383.5" ></text>
</g>
<g >
<title>schema::cdc_options (1 samples, 0.02%)</title><rect x="853.1" y="437" width="0.2" height="15.0" fill="rgb(233,131,30)" rx="2" ry="2" />
<text  x="856.11" y="447.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::pop_front (16 samples, 0.30%)</title><rect x="129.1" y="501" width="3.6" height="15.0" fill="rgb(234,80,9)" rx="2" ry="2" />
<text  x="132.14" y="511.5" ></text>
</g>
<g >
<title>cql3::raw_value::make_value (5 samples, 0.09%)</title><rect x="887.2" y="389" width="1.2" height="15.0" fill="rgb(224,49,47)" rx="2" ry="2" />
<text  x="890.25" y="399.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::at (1 samples, 0.02%)</title><rect x="1076.4" y="437" width="0.3" height="15.0" fill="rgb(238,17,51)" rx="2" ry="2" />
<text  x="1079.44" y="447.5" ></text>
</g>
<g >
<title>clustering_row::clustering_row (1 samples, 0.02%)</title><rect x="80.5" y="325" width="0.2" height="15.0" fill="rgb(244,91,24)" rx="2" ry="2" />
<text  x="83.50" y="335.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_live_endpoints (79 samples, 1.49%)</title><rect x="1057.0" y="421" width="17.7" height="15.0" fill="rgb(235,7,10)" rx="2" ry="2" />
<text  x="1060.03" y="431.5" ></text>
</g>
<g >
<title>seastar::future&lt;mutation_fragment*&gt;::then_impl&lt;query::consume_page&lt; (541 samples, 10.23%)</title><rect x="321.2" y="501" width="120.7" height="15.0" fill="rgb(222,203,51)" rx="2" ry="2" />
<text  x="324.23" y="511.5" >seastar::future..</text>
</g>
<g >
<title>query::result_memory_accounter::done (1 samples, 0.02%)</title><rect x="587.8" y="517" width="0.3" height="15.0" fill="rgb(231,50,43)" rx="2" ry="2" />
<text  x="590.84" y="527.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::take (1 samples, 0.02%)</title><rect x="433.5" y="357" width="0.2" height="15.0" fill="rgb(209,108,40)" rx="2" ry="2" />
<text  x="436.45" y="367.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.02%)</title><rect x="40.8" y="277" width="0.2" height="15.0" fill="rgb(234,154,47)" rx="2" ry="2" />
<text  x="43.79" y="287.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_Optional_payload_base (1 samples, 0.02%)</title><rect x="791.1" y="341" width="0.2" height="15.0" fill="rgb(225,9,19)" rx="2" ry="2" />
<text  x="794.09" y="351.5" ></text>
</g>
<g >
<title>table::make_reader (402 samples, 7.60%)</title><rect x="448.6" y="453" width="89.7" height="15.0" fill="rgb(227,169,1)" rx="2" ry="2" />
<text  x="451.62" y="463.5" >table::mak..</text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;*, std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;*, std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="45.9" y="389" width="0.2" height="15.0" fill="rgb(240,16,23)" rx="2" ry="2" />
<text  x="48.92" y="399.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reserve&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (1 samples, 0.02%)</title><rect x="849.8" y="581" width="0.2" height="15.0" fill="rgb(221,93,5)" rx="2" ry="2" />
<text  x="852.77" y="591.5" ></text>
</g>
<g >
<title>std::optional&lt;mutation_querier&gt;::emplace&lt;mutation_querier&gt; (5 samples, 0.09%)</title><rect x="352.7" y="277" width="1.1" height="15.0" fill="rgb(216,152,2)" rx="2" ry="2" />
<text  x="355.69" y="287.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (1 samples, 0.02%)</title><rect x="663.9" y="581" width="0.2" height="15.0" fill="rgb(239,131,35)" rx="2" ry="2" />
<text  x="666.92" y="591.5" ></text>
</g>
<g >
<title>operator new (7 samples, 0.13%)</title><rect x="948.4" y="469" width="1.5" height="15.0" fill="rgb(229,99,31)" rx="2" ry="2" />
<text  x="951.38" y="479.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (14 samples, 0.26%)</title><rect x="79.4" y="613" width="3.1" height="15.0" fill="rgb(221,142,20)" rx="2" ry="2" />
<text  x="82.39" y="623.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (1 samples, 0.02%)</title><rect x="596.5" y="501" width="0.3" height="15.0" fill="rgb(227,77,17)" rx="2" ry="2" />
<text  x="599.54" y="511.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, database::query (2 samples, 0.04%)</title><rect x="677.3" y="597" width="0.5" height="15.0" fill="rgb(215,196,50)" rx="2" ry="2" />
<text  x="680.31" y="607.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (5 samples, 0.09%)</title><rect x="832.8" y="485" width="1.1" height="15.0" fill="rgb(216,179,24)" rx="2" ry="2" />
<text  x="835.81" y="495.5" ></text>
</g>
<g >
<title>ser::column_view::c (5 samples, 0.09%)</title><rect x="1121.1" y="325" width="1.1" height="15.0" fill="rgb(209,163,37)" rx="2" ry="2" />
<text  x="1124.06" y="335.5" ></text>
</g>
<g >
<title>std::make_unique&lt;seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::entry, reader_concurrency_semaphore::entry, seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;&amp;, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;&amp;&gt; (1 samples, 0.02%)</title><rect x="1012.6" y="277" width="0.3" height="15.0" fill="rgb(206,22,5)" rx="2" ry="2" />
<text  x="1015.63" y="287.5" ></text>
</g>
<g >
<title>v3_columns::from_v2_schema (1 samples, 0.02%)</title><rect x="16.9" y="261" width="0.2" height="15.0" fill="rgb(239,96,6)" rx="2" ry="2" />
<text  x="19.92" y="271.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::make_data_requests (56 samples, 1.06%)</title><rect x="690.9" y="597" width="12.5" height="15.0" fill="rgb(215,181,6)" rx="2" ry="2" />
<text  x="693.92" y="607.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_Optional_payload_base (1 samples, 0.02%)</title><rect x="1027.8" y="309" width="0.2" height="15.0" fill="rgb(212,182,30)" rx="2" ry="2" />
<text  x="1030.80" y="319.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (2 samples, 0.04%)</title><rect x="37.2" y="261" width="0.5" height="15.0" fill="rgb(233,156,7)" rx="2" ry="2" />
<text  x="40.22" y="271.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="24.9" y="389" width="0.3" height="15.0" fill="rgb(254,59,31)" rx="2" ry="2" />
<text  x="27.95" y="399.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (7 samples, 0.13%)</title><rect x="813.8" y="421" width="1.6" height="15.0" fill="rgb(240,159,39)" rx="2" ry="2" />
<text  x="816.85" y="431.5" ></text>
</g>
<g >
<title>std::__make_heap&lt;__gnu_cxx::__normal_iterator&lt;boost::iterator_range&lt;boost::intrusive::tree_iterator&lt;boost::intrusive::mhtraits&lt;range_tombstone_entry, boost::intrusive::set_member_hook&lt;boost::intrusive::link_mode&lt; (2 samples, 0.04%)</title><rect x="279.5" y="309" width="0.5" height="15.0" fill="rgb(241,4,28)" rx="2" ry="2" />
<text  x="282.51" y="319.5" ></text>
</g>
<g >
<title>operator delete (6 samples, 0.11%)</title><rect x="580.9" y="501" width="1.4" height="15.0" fill="rgb(212,195,19)" rx="2" ry="2" />
<text  x="583.92" y="511.5" ></text>
</g>
<g >
<title>seastar::internal::future_base::future_base (1 samples, 0.02%)</title><rect x="795.8" y="373" width="0.2" height="15.0" fill="rgb(213,203,47)" rx="2" ry="2" />
<text  x="798.77" y="383.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;query::result_memory_accounter&gt;::take (1 samples, 0.02%)</title><rect x="597.7" y="517" width="0.2" height="15.0" fill="rgb(237,123,24)" rx="2" ry="2" />
<text  x="600.66" y="527.5" ></text>
</g>
<g >
<title>read_simple&lt;unsigned short, managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="903.8" y="453" width="0.2" height="15.0" fill="rgb(246,2,19)" rx="2" ry="2" />
<text  x="906.76" y="463.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_next_bkt (5 samples, 0.09%)</title><rect x="1153.6" y="549" width="1.1" height="15.0" fill="rgb(227,131,18)" rx="2" ry="2" />
<text  x="1156.63" y="559.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="71.6" y="453" width="0.2" height="15.0" fill="rgb(251,158,53)" rx="2" ry="2" />
<text  x="74.58" y="463.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_erase_at_end (1 samples, 0.02%)</title><rect x="19.8" y="485" width="0.2" height="15.0" fill="rgb(240,42,21)" rx="2" ry="2" />
<text  x="22.82" y="495.5" ></text>
</g>
<g >
<title>seastar::app_template::run (4,858 samples, 91.85%)</title><rect x="84.3" y="677" width="1083.8" height="15.0" fill="rgb(221,199,50)" rx="2" ry="2" />
<text  x="87.29" y="687.5" >seastar::app_template::run</text>
</g>
<g >
<title>std::unique_ptr&lt;bytes_ostream::chunk, std::default_delete&lt;bytes_ostream::chunk&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="614.8" y="533" width="0.3" height="15.0" fill="rgb(205,42,3)" rx="2" ry="2" />
<text  x="617.84" y="543.5" ></text>
</g>
<g >
<title>database::find_uuid (1 samples, 0.02%)</title><rect x="17.1" y="405" width="0.3" height="15.0" fill="rgb(254,132,19)" rx="2" ry="2" />
<text  x="20.14" y="415.5" ></text>
</g>
<g >
<title>reader_permit::consume_memory (4 samples, 0.08%)</title><rect x="255.0" y="261" width="0.9" height="15.0" fill="rgb(235,73,26)" rx="2" ry="2" />
<text  x="257.97" y="271.5" ></text>
</g>
<g >
<title>cql3::cf_name::cf_name (1 samples, 0.02%)</title><rect x="38.1" y="453" width="0.2" height="15.0" fill="rgb(214,58,28)" rx="2" ry="2" />
<text  x="41.11" y="463.5" ></text>
</g>
<g >
<title>bplus::tree&lt;long, intrusive_array&lt;cache_entry&gt;, dht::raw_token_less_comparator, 16ul,  (1 samples, 0.02%)</title><rect x="141.4" y="389" width="0.2" height="15.0" fill="rgb(220,67,22)" rx="2" ry="2" />
<text  x="144.41" y="399.5" ></text>
</g>
<g >
<title>seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::expand (1 samples, 0.02%)</title><rect x="79.8" y="405" width="0.3" height="15.0" fill="rgb(225,133,33)" rx="2" ry="2" />
<text  x="82.83" y="415.5" ></text>
</g>
<g >
<title>service::storage_proxy::sort_endpoints_by_proximity (6 samples, 0.11%)</title><rect x="1074.7" y="421" width="1.3" height="15.0" fill="rgb(222,76,29)" rx="2" ry="2" />
<text  x="1077.65" y="431.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (2 samples, 0.04%)</title><rect x="57.5" y="405" width="0.5" height="15.0" fill="rgb(246,117,53)" rx="2" ry="2" />
<text  x="60.52" y="415.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (264 samples, 4.99%)</title><rect x="19.4" y="613" width="58.9" height="15.0" fill="rgb(225,148,49)" rx="2" ry="2" />
<text  x="22.37" y="623.5" >single..</text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (2 samples, 0.04%)</title><rect x="41.2" y="389" width="0.5" height="15.0" fill="rgb(242,201,40)" rx="2" ry="2" />
<text  x="44.23" y="399.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (2 samples, 0.04%)</title><rect x="606.1" y="501" width="0.5" height="15.0" fill="rgb(238,146,54)" rx="2" ry="2" />
<text  x="609.14" y="511.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.02%)</title><rect x="1134.0" y="421" width="0.2" height="15.0" fill="rgb(217,195,2)" rx="2" ry="2" />
<text  x="1137.00" y="431.5" ></text>
</g>
<g >
<title>compound_type&lt; (1 samples, 0.02%)</title><rect x="855.1" y="405" width="0.2" height="15.0" fill="rgb(240,133,35)" rx="2" ry="2" />
<text  x="858.12" y="415.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::set_callback (1 samples, 0.02%)</title><rect x="706.8" y="597" width="0.2" height="15.0" fill="rgb(207,105,33)" rx="2" ry="2" />
<text  x="709.76" y="607.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;query::read_command&gt;::make&lt;utils::UUID const&amp;, utils::UUID, query::partition_slice, query::max_result_size, query::row_limit, query::partition_limit, std::chrono::time_point&lt;gc_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt; &gt;&amp;, std::optional&lt;tracing::trace_info&gt;, utils::UUID, seastar::bool_class&lt;query::is_first_page_tag&gt; const&amp;, long&gt; (1 samples, 0.02%)</title><rect x="1115.7" y="533" width="0.2" height="15.0" fill="rgb(225,229,47)" rx="2" ry="2" />
<text  x="1118.71" y="543.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (1 samples, 0.02%)</title><rect x="1051.7" y="405" width="0.2" height="15.0" fill="rgb(212,2,35)" rx="2" ry="2" />
<text  x="1054.68" y="415.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="627.3" y="581" width="0.3" height="15.0" fill="rgb(212,64,14)" rx="2" ry="2" />
<text  x="630.33" y="591.5" ></text>
</g>
<g >
<title>db::system_keyspace::hints (1 samples, 0.02%)</title><rect x="16.9" y="373" width="0.2" height="15.0" fill="rgb(220,73,19)" rx="2" ry="2" />
<text  x="19.92" y="383.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned char, std::pair&lt;unsigned char const, std::optional&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned char const, std::optional&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned char&gt;, std::hash&lt;unsigned char&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::~_Hashtable (5 samples, 0.09%)</title><rect x="661.2" y="549" width="1.2" height="15.0" fill="rgb(225,207,16)" rx="2" ry="2" />
<text  x="664.24" y="559.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (227 samples, 4.29%)</title><rect x="211.2" y="325" width="50.7" height="15.0" fill="rgb(215,69,46)" rx="2" ry="2" />
<text  x="214.24" y="335.5" >parti..</text>
</g>
<g >
<title>flush_reader::get_next_partition (2 samples, 0.04%)</title><rect x="79.6" y="501" width="0.5" height="15.0" fill="rgb(209,171,29)" rx="2" ry="2" />
<text  x="82.61" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::vector (12 samples, 0.23%)</title><rect x="1090.9" y="485" width="2.7" height="15.0" fill="rgb(251,196,52)" rx="2" ry="2" />
<text  x="1093.94" y="495.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.06%)</title><rect x="545.9" y="437" width="0.7" height="15.0" fill="rgb(227,1,25)" rx="2" ry="2" />
<text  x="548.90" y="447.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::~CommonTokenStream (1 samples, 0.02%)</title><rect x="19.8" y="517" width="0.2" height="15.0" fill="rgb(216,123,30)" rx="2" ry="2" />
<text  x="22.82" y="527.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEE4$_44ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_45ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_43ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_46ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_47ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_48ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_49ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_50ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_51ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_52ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_53ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_54ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_55ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_56ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_57ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_58EERS4_IJNSF_11conjunctionENSF_15binary_operatorENSF_12column_valueENSF_5tokenENSF_21unresolved_identifierENSF_25column_mutation_attributeENSF_13function_callENSF_4castENSF_15field_selectionENSF_4nullENSF_13bind_variableENSF_16untyped_constantENSF_8constantENSF_17tuple_constructorENSF_22collection_constructorENSF_20usertype_constructorEEEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES16_S1O_ (107 samples, 2.02%)</title><rect x="876.1" y="485" width="23.9" height="15.0" fill="rgb(226,93,53)" rx="2" ry="2" />
<text  x="879.09" y="495.5" >_..</text>
</g>
<g >
<title>bytes_view_hasher::update (3 samples, 0.06%)</title><rect x="737.1" y="357" width="0.7" height="15.0" fill="rgb(242,151,11)" rx="2" ry="2" />
<text  x="740.10" y="367.5" ></text>
</g>
<g >
<title>sstables::sstable::unlink (1 samples, 0.02%)</title><rect x="82.5" y="613" width="0.2" height="15.0" fill="rgb(213,131,30)" rx="2" ry="2" />
<text  x="85.51" y="623.5" ></text>
</g>
<g >
<title>reader_permit::consume (1 samples, 0.02%)</title><rect x="80.3" y="341" width="0.2" height="15.0" fill="rgb(213,36,19)" rx="2" ry="2" />
<text  x="83.28" y="351.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, enum_set&lt;super_enum&lt;auth::permission,  (3 samples, 0.06%)</title><rect x="76.5" y="389" width="0.7" height="15.0" fill="rgb(248,16,27)" rx="2" ry="2" />
<text  x="79.49" y="399.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::statements::raw::update_statement, cql3::cf_name, std::unique_ptr&lt;cql3::attributes::raw, std::default_delete&lt;cql3::attributes::raw&gt; &gt;, std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;, std::vector&lt;seastar::shared_ptr&lt;cql3::relation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::relation&gt; &gt; &gt;, std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, seastar::lw_shared_ptr&lt;cql3::column_condition::raw&gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, seastar::lw_shared_ptr&lt;cql3::column_condition::raw&gt; &gt; &gt; &gt;, bool&amp;&gt; (5 samples, 0.09%)</title><rect x="59.3" y="453" width="1.1" height="15.0" fill="rgb(237,72,22)" rx="2" ry="2" />
<text  x="62.31" y="463.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.02%)</title><rect x="37.7" y="261" width="0.2" height="15.0" fill="rgb(242,133,36)" rx="2" ry="2" />
<text  x="40.66" y="271.5" ></text>
</g>
<g >
<title>schema::get_partitioner (3 samples, 0.06%)</title><rect x="921.4" y="501" width="0.7" height="15.0" fill="rgb(251,196,28)" rx="2" ry="2" />
<text  x="924.38" y="511.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::add_data (22 samples, 0.42%)</title><rect x="694.9" y="549" width="4.9" height="15.0" fill="rgb(227,135,0)" rx="2" ry="2" />
<text  x="697.93" y="559.5" ></text>
</g>
<g >
<title>std::make_unique&lt;seastar::reactor::task_queue, unsigned int&amp;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;&amp;, float&amp;&gt; (1 samples, 0.02%)</title><rect x="107.9" y="517" width="0.3" height="15.0" fill="rgb(254,190,22)" rx="2" ry="2" />
<text  x="110.94" y="527.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.02%)</title><rect x="39.4" y="357" width="0.3" height="15.0" fill="rgb(238,107,45)" rx="2" ry="2" />
<text  x="42.45" y="367.5" ></text>
</g>
<g >
<title>std::default_delete&lt;mutation_fragment::data&gt;::operator (3 samples, 0.06%)</title><rect x="431.9" y="341" width="0.7" height="15.0" fill="rgb(215,208,44)" rx="2" ry="2" />
<text  x="434.89" y="351.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::clear (2 samples, 0.04%)</title><rect x="794.7" y="309" width="0.4" height="15.0" fill="rgb(222,143,22)" rx="2" ry="2" />
<text  x="797.66" y="319.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::check_local_limit (2 samples, 0.04%)</title><rect x="338.2" y="293" width="0.4" height="15.0" fill="rgb(237,30,53)" rx="2" ry="2" />
<text  x="341.19" y="303.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="837.0" y="453" width="0.3" height="15.0" fill="rgb(224,2,4)" rx="2" ry="2" />
<text  x="840.05" y="463.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="58.2" y="341" width="0.2" height="15.0" fill="rgb(245,61,14)" rx="2" ry="2" />
<text  x="61.19" y="351.5" ></text>
</g>
<g >
<title>make_stable_flattened_mutations_consumer&lt;compact_for_query&lt; (7 samples, 0.13%)</title><rect x="437.7" y="469" width="1.6" height="15.0" fill="rgb(230,185,36)" rx="2" ry="2" />
<text  x="440.69" y="479.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_istream (1 samples, 0.02%)</title><rect x="44.1" y="405" width="0.3" height="15.0" fill="rgb(210,158,10)" rx="2" ry="2" />
<text  x="47.13" y="415.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt; &gt;::invoke&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (3 samples, 0.06%)</title><rect x="982.3" y="389" width="0.7" height="15.0" fill="rgb(219,92,18)" rx="2" ry="2" />
<text  x="985.29" y="399.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.02%)</title><rect x="748.0" y="405" width="0.3" height="15.0" fill="rgb(208,7,31)" rx="2" ry="2" />
<text  x="751.03" y="415.5" ></text>
</g>
<g >
<title>partition_snapshot::get_change_mark (4 samples, 0.08%)</title><rect x="264.6" y="245" width="0.9" height="15.0" fill="rgb(253,224,52)" rx="2" ry="2" />
<text  x="267.56" y="255.5" ></text>
</g>
<g >
<title>TLS init function for seastar::testing::local_random_engine (1 samples, 0.02%)</title><rect x="711.0" y="565" width="0.2" height="15.0" fill="rgb(224,196,9)" rx="2" ry="2" />
<text  x="713.99" y="575.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="676.0" y="485" width="0.2" height="15.0" fill="rgb(221,130,15)" rx="2" ry="2" />
<text  x="678.97" y="495.5" ></text>
</g>
<g >
<title>database::shard_of (1 samples, 0.02%)</title><rect x="1127.8" y="277" width="0.2" height="15.0" fill="rgb(234,27,12)" rx="2" ry="2" />
<text  x="1130.75" y="287.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;compact_for_query&lt; (1 samples, 0.02%)</title><rect x="437.5" y="437" width="0.2" height="15.0" fill="rgb(230,48,21)" rx="2" ry="2" />
<text  x="440.47" y="447.5" ></text>
</g>
<g >
<title>cql3::cf_name::operator= (1 samples, 0.02%)</title><rect x="38.3" y="453" width="0.3" height="15.0" fill="rgb(222,181,52)" rx="2" ry="2" />
<text  x="41.33" y="463.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;gms::inet_address, std::pair&lt;gms::inet_address const, table::cache_hit_rate&gt;, std::allocator&lt;std::pair&lt;gms::inet_address const, table::cache_hit_rate&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;gms::inet_address&gt;, std::hash&lt;gms::inet_address&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::operator[] (9 samples, 0.17%)</title><rect x="699.8" y="533" width="2.0" height="15.0" fill="rgb(218,140,24)" rx="2" ry="2" />
<text  x="702.84" y="543.5" ></text>
</g>
<g >
<title>allocation_strategy::alloc&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::leaf_node&gt; (3 samples, 0.06%)</title><rect x="240.2" y="197" width="0.7" height="15.0" fill="rgb(220,78,2)" rx="2" ry="2" />
<text  x="243.24" y="207.5" ></text>
</g>
<g >
<title>_ZSt5applyIZN7seastar8internal12do_with_implIN4auth17role_or_anonymousEZNS3_15get_permissionsERKNS3_7serviceERKNS3_18authenticated_userERKNS3_8resourceEE3$_9JEEEDaOT_OT0_DpOT1_EUlDpOT_E_St5tupleIJOS4_EEEDcSG_SI_ (10 samples, 0.19%)</title><rect x="772.3" y="389" width="2.3" height="15.0" fill="rgb(223,122,10)" rx="2" ry="2" />
<text  x="775.35" y="399.5" ></text>
</g>
<g >
<title>bplus::tree&lt;long, intrusive_array&lt;memtable_entry&gt;, dht::raw_token_less_comparator, 16ul,  (32 samples, 0.61%)</title><rect x="473.4" y="389" width="7.1" height="15.0" fill="rgb(231,57,13)" rx="2" ry="2" />
<text  x="476.39" y="399.5" ></text>
</g>
<g >
<title>cql3::restrictions::clustering_key_restrictions::needs_filtering (2 samples, 0.04%)</title><rect x="637.8" y="565" width="0.5" height="15.0" fill="rgb(219,215,27)" rx="2" ry="2" />
<text  x="640.82" y="575.5" ></text>
</g>
<g >
<title>free (1 samples, 0.02%)</title><rect x="78.9" y="693" width="0.3" height="15.0" fill="rgb(248,122,40)" rx="2" ry="2" />
<text  x="81.94" y="703.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;query::result&gt;::operator= (1 samples, 0.02%)</title><rect x="139.2" y="549" width="0.2" height="15.0" fill="rgb(251,44,7)" rx="2" ry="2" />
<text  x="142.18" y="559.5" ></text>
</g>
<g >
<title>TLS init function for bound_view::_empty_prefix (2 samples, 0.04%)</title><rect x="259.7" y="197" width="0.4" height="15.0" fill="rgb(215,150,38)" rx="2" ry="2" />
<text  x="262.65" y="207.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::~_Variant_storage (3 samples, 0.06%)</title><rect x="889.7" y="389" width="0.7" height="15.0" fill="rgb(250,198,27)" rx="2" ry="2" />
<text  x="892.70" y="399.5" ></text>
</g>
<g >
<title>partition_snapshot::versions (1 samples, 0.02%)</title><rect x="257.6" y="261" width="0.3" height="15.0" fill="rgb(214,171,0)" rx="2" ry="2" />
<text  x="260.65" y="271.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (2 samples, 0.04%)</title><rect x="613.9" y="469" width="0.5" height="15.0" fill="rgb(209,79,54)" rx="2" ry="2" />
<text  x="616.94" y="479.5" ></text>
</g>
<g >
<title>row_cache::make_reader (1 samples, 0.02%)</title><rect x="448.0" y="453" width="0.2" height="15.0" fill="rgb(244,121,3)" rx="2" ry="2" />
<text  x="450.95" y="463.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.04%)</title><rect x="659.5" y="565" width="0.4" height="15.0" fill="rgb(220,0,18)" rx="2" ry="2" />
<text  x="662.46" y="575.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.04%)</title><rect x="55.1" y="309" width="0.4" height="15.0" fill="rgb(226,202,44)" rx="2" ry="2" />
<text  x="58.07" y="319.5" ></text>
</g>
<g >
<title>managed_bytes::external_memory_usage (1 samples, 0.02%)</title><rect x="247.6" y="245" width="0.2" height="15.0" fill="rgb(227,202,23)" rx="2" ry="2" />
<text  x="250.61" y="255.5" ></text>
</g>
<g >
<title>fmt::v7::detail::iterator_buffer&lt;seastar::internal::log_buf::inserter_iterator, char, fmt::v7::detail::buffer_traits&gt;::flush (1 samples, 0.02%)</title><rect x="11.1" y="437" width="0.2" height="15.0" fill="rgb(237,71,33)" rx="2" ry="2" />
<text  x="14.12" y="447.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.02%)</title><rect x="1011.5" y="261" width="0.2" height="15.0" fill="rgb(205,15,32)" rx="2" ry="2" />
<text  x="1014.52" y="271.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.04%)</title><rect x="47.5" y="341" width="0.4" height="15.0" fill="rgb(236,226,14)" rx="2" ry="2" />
<text  x="50.48" y="351.5" ></text>
</g>
<g >
<title>std::pair&lt;auth::role_or_anonymous, auth::resource&gt;::pair&lt;auth::role_or_anonymous, auth::resource, true&gt; (7 samples, 0.13%)</title><rect x="791.1" y="357" width="1.6" height="15.0" fill="rgb(247,127,34)" rx="2" ry="2" />
<text  x="794.09" y="367.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (1 samples, 0.02%)</title><rect x="687.6" y="533" width="0.2" height="15.0" fill="rgb(205,13,52)" rx="2" ry="2" />
<text  x="690.57" y="543.5" ></text>
</g>
<g >
<title>schema::column_at (1 samples, 0.02%)</title><rect x="398.0" y="293" width="0.2" height="15.0" fill="rgb(239,101,29)" rx="2" ry="2" />
<text  x="400.98" y="303.5" ></text>
</g>
<g >
<title>sstables::sstable::filename (1 samples, 0.02%)</title><rect x="1133.8" y="389" width="0.2" height="15.0" fill="rgb(238,112,47)" rx="2" ry="2" />
<text  x="1136.78" y="399.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (1 samples, 0.02%)</title><rect x="604.4" y="533" width="0.2" height="15.0" fill="rgb(244,90,41)" rx="2" ry="2" />
<text  x="607.35" y="543.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate_to_raw_view (1 samples, 0.02%)</title><rect x="858.5" y="405" width="0.2" height="15.0" fill="rgb(210,124,17)" rx="2" ry="2" />
<text  x="861.47" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::vector (15 samples, 0.28%)</title><rect x="925.0" y="501" width="3.3" height="15.0" fill="rgb(222,173,3)" rx="2" ry="2" />
<text  x="927.95" y="511.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::attributes::raw, std::default_delete&lt;cql3::attributes::raw&gt;, true, true&gt;::__uniq_ptr_data (1 samples, 0.02%)</title><rect x="60.0" y="421" width="0.2" height="15.0" fill="rgb(205,22,52)" rx="2" ry="2" />
<text  x="62.98" y="431.5" ></text>
</g>
<g >
<title>std::has_facet&lt;std::num_get&lt;char, std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="11.6" y="693" width="0.2" height="15.0" fill="rgb(234,160,19)" rx="2" ry="2" />
<text  x="14.56" y="703.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::move_it (1 samples, 0.02%)</title><rect x="657.0" y="549" width="0.2" height="15.0" fill="rgb(223,105,44)" rx="2" ry="2" />
<text  x="660.00" y="559.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (1 samples, 0.02%)</title><rect x="1137.3" y="549" width="0.3" height="15.0" fill="rgb(223,130,9)" rx="2" ry="2" />
<text  x="1140.35" y="559.5" ></text>
</g>
<g >
<title>std::__equal&lt;true&gt;::equal&lt;signed char&gt; (1 samples, 0.02%)</title><rect x="733.8" y="373" width="0.2" height="15.0" fill="rgb(209,208,40)" rx="2" ry="2" />
<text  x="736.75" y="383.5" ></text>
</g>
<g >
<title>seastar::futurize_invoke&lt;seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (1 samples, 0.02%)</title><rect x="850.0" y="565" width="0.2" height="15.0" fill="rgb(223,116,10)" rx="2" ry="2" />
<text  x="852.99" y="575.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="554.4" y="389" width="0.2" height="15.0" fill="rgb(225,83,18)" rx="2" ry="2" />
<text  x="557.38" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.06%)</title><rect x="491.7" y="373" width="0.7" height="15.0" fill="rgb(234,116,15)" rx="2" ry="2" />
<text  x="494.68" y="383.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;flat_mutation_reader::peek (2 samples, 0.04%)</title><rect x="320.3" y="485" width="0.5" height="15.0" fill="rgb(238,184,52)" rx="2" ry="2" />
<text  x="323.34" y="495.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.02%)</title><rect x="37.7" y="341" width="0.2" height="15.0" fill="rgb(245,47,2)" rx="2" ry="2" />
<text  x="40.66" y="351.5" ></text>
</g>
<g >
<title>seastar::future&lt;boost::iterator_range&lt;mutation_fragment*&gt; &gt;::then_impl&lt;mutation_fragment_merger&lt;mutation_reader_merger&gt;::fetch (6 samples, 0.11%)</title><rect x="298.3" y="421" width="1.3" height="15.0" fill="rgb(246,37,29)" rx="2" ry="2" />
<text  x="301.25" y="431.5" ></text>
</g>
<g >
<title>boost::intrusive::bstbase&lt;boost::intrusive::mhtraits&lt;range_tombstone_entry, boost::intrusive::set_member_hook&lt;boost::intrusive::link_mode&lt; (2 samples, 0.04%)</title><rect x="556.4" y="405" width="0.4" height="15.0" fill="rgb(217,217,39)" rx="2" ry="2" />
<text  x="559.38" y="415.5" ></text>
</g>
<g >
<title>schema::column_at (6 samples, 0.11%)</title><rect x="414.5" y="261" width="1.3" height="15.0" fill="rgb(254,76,9)" rx="2" ry="2" />
<text  x="417.49" y="271.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (2 samples, 0.04%)</title><rect x="192.1" y="357" width="0.4" height="15.0" fill="rgb(240,132,13)" rx="2" ry="2" />
<text  x="195.05" y="367.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::digest_read_result&gt;::then_wrapped_nrvo&lt;void, service::abstract_read_executor::execute (7 samples, 0.13%)</title><rect x="966.4" y="421" width="1.6" height="15.0" fill="rgb(236,156,4)" rx="2" ry="2" />
<text  x="969.45" y="431.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_istream (1 samples, 0.02%)</title><rect x="41.7" y="389" width="0.2" height="15.0" fill="rgb(207,43,4)" rx="2" ry="2" />
<text  x="44.68" y="399.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.02%)</title><rect x="676.0" y="437" width="0.2" height="15.0" fill="rgb(214,124,13)" rx="2" ry="2" />
<text  x="678.97" y="447.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (1 samples, 0.02%)</title><rect x="473.2" y="373" width="0.2" height="15.0" fill="rgb(216,156,23)" rx="2" ry="2" />
<text  x="476.17" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.08%)</title><rect x="966.7" y="373" width="0.9" height="15.0" fill="rgb(223,216,20)" rx="2" ry="2" />
<text  x="969.67" y="383.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;void&gt;  (1 samples, 0.02%)</title><rect x="16.9" y="501" width="0.2" height="15.0" fill="rgb(222,175,18)" rx="2" ry="2" />
<text  x="19.92" y="511.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (1 samples, 0.02%)</title><rect x="24.9" y="405" width="0.3" height="15.0" fill="rgb(220,176,11)" rx="2" ry="2" />
<text  x="27.95" y="415.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::operator (2 samples, 0.04%)</title><rect x="1041.2" y="373" width="0.4" height="15.0" fill="rgb(252,184,31)" rx="2" ry="2" />
<text  x="1044.19" y="383.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::alloc (4 samples, 0.08%)</title><rect x="241.6" y="197" width="0.9" height="15.0" fill="rgb(207,155,1)" rx="2" ry="2" />
<text  x="244.58" y="207.5" ></text>
</g>
<g >
<title>remove_or_mark_as_unique_owner (1 samples, 0.02%)</title><rect x="82.7" y="613" width="0.3" height="15.0" fill="rgb(230,2,24)" rx="2" ry="2" />
<text  x="85.73" y="623.5" ></text>
</g>
<g >
<title>schema::get_column_definition (1 samples, 0.02%)</title><rect x="72.9" y="517" width="0.2" height="15.0" fill="rgb(223,95,4)" rx="2" ry="2" />
<text  x="75.92" y="527.5" ></text>
</g>
<g >
<title>bplus::node&lt;long, intrusive_array&lt;memtable_entry&gt;, dht::raw_token_less_comparator, 16ul,  (2 samples, 0.04%)</title><rect x="1118.8" y="261" width="0.5" height="15.0" fill="rgb(242,75,24)" rx="2" ry="2" />
<text  x="1121.83" y="271.5" ></text>
</g>
<g >
<title>allocation_strategy::construct&lt;partition_version, mutation_partition&gt; (1 samples, 0.02%)</title><rect x="1123.3" y="325" width="0.2" height="15.0" fill="rgb(229,135,32)" rx="2" ry="2" />
<text  x="1126.29" y="335.5" ></text>
</g>
<g >
<title>service::storage_proxy::new_read_repair_decision (1 samples, 0.02%)</title><rect x="1078.2" y="453" width="0.2" height="15.0" fill="rgb(218,103,52)" rx="2" ry="2" />
<text  x="1081.22" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (2 samples, 0.04%)</title><rect x="743.6" y="469" width="0.4" height="15.0" fill="rgb(228,1,16)" rx="2" ry="2" />
<text  x="746.57" y="479.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (1 samples, 0.02%)</title><rect x="627.8" y="565" width="0.2" height="15.0" fill="rgb(225,1,19)" rx="2" ry="2" />
<text  x="630.78" y="575.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;std::pair&lt;seastar::shared_ptr&lt;service::abstract_read_executor&gt;, nonwrapping_interval&lt;dht::token&gt; &gt;, 1ul&gt;::~small_vector (18 samples, 0.34%)</title><rect x="1160.8" y="581" width="4.0" height="15.0" fill="rgb(206,179,1)" rx="2" ry="2" />
<text  x="1163.77" y="591.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="1092.9" y="453" width="0.3" height="15.0" fill="rgb(214,177,54)" rx="2" ry="2" />
<text  x="1095.95" y="463.5" ></text>
</g>
<g >
<title>operator new (7 samples, 0.13%)</title><rect x="772.3" y="373" width="1.6" height="15.0" fill="rgb(228,31,3)" rx="2" ry="2" />
<text  x="775.35" y="383.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;schema_registry_entry&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;schema_registry_entry&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (10 samples, 0.19%)</title><rect x="958.0" y="421" width="2.2" height="15.0" fill="rgb(252,49,2)" rx="2" ry="2" />
<text  x="960.97" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::stats (1 samples, 0.02%)</title><rect x="530.3" y="389" width="0.2" height="15.0" fill="rgb(231,54,25)" rx="2" ry="2" />
<text  x="533.28" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.06%)</title><rect x="774.8" y="325" width="0.7" height="15.0" fill="rgb(229,188,18)" rx="2" ry="2" />
<text  x="777.80" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value_view, std::allocator&lt;cql3::raw_value_view&gt; &gt;::emplace_back&lt;cql3::raw_value_view&gt; (15 samples, 0.28%)</title><rect x="839.3" y="485" width="3.3" height="15.0" fill="rgb(238,144,34)" rx="2" ry="2" />
<text  x="842.28" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (1 samples, 0.02%)</title><rect x="34.3" y="357" width="0.2" height="15.0" fill="rgb(253,94,18)" rx="2" ry="2" />
<text  x="37.32" y="367.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.02%)</title><rect x="37.7" y="277" width="0.2" height="15.0" fill="rgb(224,49,0)" rx="2" ry="2" />
<text  x="40.66" y="287.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="507.1" y="325" width="0.2" height="15.0" fill="rgb(233,12,52)" rx="2" ry="2" />
<text  x="510.08" y="335.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (3 samples, 0.06%)</title><rect x="1041.9" y="357" width="0.6" height="15.0" fill="rgb(233,156,3)" rx="2" ry="2" />
<text  x="1044.86" y="367.5" ></text>
</g>
<g >
<title>auth::permissions_cache::get (93 samples, 1.76%)</title><rect x="774.8" y="373" width="20.8" height="15.0" fill="rgb(216,189,27)" rx="2" ry="2" />
<text  x="777.80" y="383.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::selection::selection const&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="650.1" y="581" width="0.2" height="15.0" fill="rgb(234,26,23)" rx="2" ry="2" />
<text  x="653.09" y="591.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;position_in_partition&gt;::_M_reset (2 samples, 0.04%)</title><rect x="283.3" y="325" width="0.4" height="15.0" fill="rgb(223,32,31)" rx="2" ry="2" />
<text  x="286.30" y="335.5" ></text>
</g>
<g >
<title>ser::qr_partition__rows&lt;bytes_ostream&gt;::add (4 samples, 0.08%)</title><rect x="369.4" y="277" width="0.9" height="15.0" fill="rgb(247,214,52)" rx="2" ry="2" />
<text  x="372.42" y="287.5" ></text>
</g>
<g >
<title>cql3::query_processor::process_authorized_statement (20 samples, 0.38%)</title><rect x="739.8" y="517" width="4.4" height="15.0" fill="rgb(228,168,12)" rx="2" ry="2" />
<text  x="742.78" y="527.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;std::_List_iterator&lt;flat_mutation_reader&gt;, mutation_reader_merger::close (1 samples, 0.02%)</title><rect x="1165.5" y="501" width="0.2" height="15.0" fill="rgb(213,43,50)" rx="2" ry="2" />
<text  x="1168.46" y="511.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;11ul, cql3::expr::untyped_constant&gt; (2 samples, 0.04%)</title><rect x="51.5" y="245" width="0.4" height="15.0" fill="rgb(254,27,40)" rx="2" ry="2" />
<text  x="54.50" y="255.5" ></text>
</g>
<g >
<title>ser::serializer&lt;partition_key&gt;::write&lt;bytes_ostream&gt; (2 samples, 0.04%)</title><rect x="1130.0" y="261" width="0.4" height="15.0" fill="rgb(209,89,41)" rx="2" ry="2" />
<text  x="1132.98" y="271.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;enum_set&lt;super_enum&lt;auth::permission,  (1 samples, 0.02%)</title><rect x="777.5" y="357" width="0.2" height="15.0" fill="rgb(220,112,37)" rx="2" ry="2" />
<text  x="780.48" y="367.5" ></text>
</g>
<g >
<title>std::__optional_hash_call_base&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, true&gt;::operator (3 samples, 0.06%)</title><rect x="802.9" y="389" width="0.7" height="15.0" fill="rgb(216,99,2)" rx="2" ry="2" />
<text  x="805.91" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::~vector (3 samples, 0.06%)</title><rect x="1028.0" y="373" width="0.7" height="15.0" fill="rgb(230,146,4)" rx="2" ry="2" />
<text  x="1031.03" y="383.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::get_promise (1 samples, 0.02%)</title><rect x="1021.3" y="357" width="0.3" height="15.0" fill="rgb(218,5,17)" rx="2" ry="2" />
<text  x="1024.33" y="367.5" ></text>
</g>
<g >
<title>double_decker&lt;long, cache_entry, dht::raw_token_less_comparator, dht::ring_position_comparator, 16,  (10 samples, 0.19%)</title><rect x="527.4" y="405" width="2.2" height="15.0" fill="rgb(207,67,10)" rx="2" ry="2" />
<text  x="530.38" y="415.5" ></text>
</g>
<g >
<title>service::storage_proxy::do_mutate (27 samples, 0.51%)</title><rect x="1126.4" y="437" width="6.0" height="15.0" fill="rgb(229,140,34)" rx="2" ry="2" />
<text  x="1129.42" y="447.5" ></text>
</g>
<g >
<title>operator new (16 samples, 0.30%)</title><rect x="969.6" y="421" width="3.5" height="15.0" fill="rgb(205,217,21)" rx="2" ry="2" />
<text  x="972.57" y="431.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (2 samples, 0.04%)</title><rect x="1157.6" y="581" width="0.5" height="15.0" fill="rgb(221,37,19)" rx="2" ry="2" />
<text  x="1160.65" y="591.5" ></text>
</g>
<g >
<title>row_cache::do_update (1 samples, 0.02%)</title><rect x="1134.0" y="533" width="0.2" height="15.0" fill="rgb(209,25,20)" rx="2" ry="2" />
<text  x="1137.00" y="543.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;flat_mutation_reader  (1 samples, 0.02%)</title><rect x="445.3" y="485" width="0.2" height="15.0" fill="rgb(248,52,25)" rx="2" ry="2" />
<text  x="448.28" y="495.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::modification_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::do_flush (29 samples, 0.55%)</title><rect x="853.1" y="581" width="6.5" height="15.0" fill="rgb(239,116,2)" rx="2" ry="2" />
<text  x="856.11" y="591.5" ></text>
</g>
<g >
<title>std::forward_as_tuple&lt;std::optional&lt;auth::resource&gt;, service::client_state::check_has_permission (1 samples, 0.02%)</title><rect x="798.0" y="421" width="0.2" height="15.0" fill="rgb(235,39,16)" rx="2" ry="2" />
<text  x="801.01" y="431.5" ></text>
</g>
<g >
<title>database::find_column_family (13 samples, 0.25%)</title><rect x="1035.8" y="437" width="2.9" height="15.0" fill="rgb(224,143,48)" rx="2" ry="2" />
<text  x="1038.83" y="447.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.02%)</title><rect x="21.2" y="469" width="0.2" height="15.0" fill="rgb(230,211,53)" rx="2" ry="2" />
<text  x="24.16" y="479.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.02%)</title><rect x="107.5" y="373" width="0.2" height="15.0" fill="rgb(250,70,10)" rx="2" ry="2" />
<text  x="110.50" y="383.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.02%)</title><rect x="1134.0" y="405" width="0.2" height="15.0" fill="rgb(249,105,38)" rx="2" ry="2" />
<text  x="1137.00" y="415.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (3 samples, 0.06%)</title><rect x="1143.8" y="581" width="0.7" height="15.0" fill="rgb(234,119,26)" rx="2" ry="2" />
<text  x="1146.82" y="591.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (1 samples, 0.02%)</title><rect x="794.9" y="293" width="0.2" height="15.0" fill="rgb(208,114,39)" rx="2" ry="2" />
<text  x="797.88" y="303.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume_in_thread&lt;sstables::sstable_writer, flat_mutation_reader::no_filter&gt; (1 samples, 0.02%)</title><rect x="676.0" y="389" width="0.2" height="15.0" fill="rgb(208,28,47)" rx="2" ry="2" />
<text  x="678.97" y="399.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (2 samples, 0.04%)</title><rect x="41.2" y="309" width="0.5" height="15.0" fill="rgb(253,11,0)" rx="2" ry="2" />
<text  x="44.23" y="319.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;compact_for_query&lt; (1 samples, 0.02%)</title><rect x="441.5" y="469" width="0.2" height="15.0" fill="rgb(228,62,14)" rx="2" ry="2" />
<text  x="444.48" y="479.5" ></text>
</g>
<g >
<title>seastar::promise&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::promise (1 samples, 0.02%)</title><rect x="1116.8" y="565" width="0.2" height="15.0" fill="rgb(239,48,30)" rx="2" ry="2" />
<text  x="1119.82" y="575.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (1 samples, 0.02%)</title><rect x="703.6" y="549" width="0.3" height="15.0" fill="rgb(241,229,6)" rx="2" ry="2" />
<text  x="706.63" y="559.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.04%)</title><rect x="467.1" y="389" width="0.5" height="15.0" fill="rgb(216,1,8)" rx="2" ry="2" />
<text  x="470.14" y="399.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (2 samples, 0.04%)</title><rect x="683.1" y="549" width="0.5" height="15.0" fill="rgb(214,166,38)" rx="2" ry="2" />
<text  x="686.11" y="559.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (1 samples, 0.02%)</title><rect x="1048.3" y="421" width="0.3" height="15.0" fill="rgb(246,191,19)" rx="2" ry="2" />
<text  x="1051.33" y="431.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_last_fragment_kind, 4ul&gt;::small_vector (1 samples, 0.02%)</title><rect x="465.6" y="357" width="0.2" height="15.0" fill="rgb(207,16,35)" rx="2" ry="2" />
<text  x="468.58" y="367.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (3 samples, 0.06%)</title><rect x="569.5" y="453" width="0.7" height="15.0" fill="rgb(213,134,33)" rx="2" ry="2" />
<text  x="572.55" y="463.5" ></text>
</g>
<g >
<title>memtable_entry::snapshot (1 samples, 0.02%)</title><rect x="79.6" y="437" width="0.2" height="15.0" fill="rgb(219,67,40)" rx="2" ry="2" />
<text  x="82.61" y="447.5" ></text>
</g>
<g >
<title>cql3::keyspace_element_name::keyspace_element_name (1 samples, 0.02%)</title><rect x="59.3" y="421" width="0.2" height="15.0" fill="rgb(213,40,29)" rx="2" ry="2" />
<text  x="62.31" y="431.5" ></text>
</g>
<g >
<title>std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;std::optional&lt;auth::resource&gt; &gt;, seastar::future&lt;bool&gt; &gt; &gt;::operator (1 samples, 0.02%)</title><rect x="77.4" y="469" width="0.2" height="15.0" fill="rgb(226,25,10)" rx="2" ry="2" />
<text  x="80.38" y="479.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::clear (1 samples, 0.02%)</title><rect x="666.6" y="581" width="0.2" height="15.0" fill="rgb(242,89,26)" rx="2" ry="2" />
<text  x="669.60" y="591.5" ></text>
</g>
<g >
<title>std::vector&lt;secondary_index::index, std::allocator&lt;secondary_index::index&gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="69.8" y="453" width="0.2" height="15.0" fill="rgb(250,27,15)" rx="2" ry="2" />
<text  x="72.79" y="463.5" ></text>
</g>
<g >
<title>__dynamic_cast (1 samples, 0.02%)</title><rect x="637.6" y="565" width="0.2" height="15.0" fill="rgb(243,188,15)" rx="2" ry="2" />
<text  x="640.59" y="575.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::do_get_limit (1 samples, 0.02%)</title><rect x="1093.6" y="485" width="0.2" height="15.0" fill="rgb(227,149,48)" rx="2" ry="2" />
<text  x="1096.62" y="495.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="510.4" y="293" width="0.2" height="15.0" fill="rgb(239,166,23)" rx="2" ry="2" />
<text  x="513.42" y="303.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (1 samples, 0.02%)</title><rect x="612.8" y="533" width="0.3" height="15.0" fill="rgb(206,13,22)" rx="2" ry="2" />
<text  x="615.83" y="543.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally&lt;single_node_cql_env::execute_prepared_with_qo (11 samples, 0.21%)</title><rect x="817.6" y="533" width="2.5" height="15.0" fill="rgb(205,142,17)" rx="2" ry="2" />
<text  x="820.64" y="543.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_M_reset (2 samples, 0.04%)</title><rect x="1089.2" y="453" width="0.4" height="15.0" fill="rgb(211,211,39)" rx="2" ry="2" />
<text  x="1092.16" y="463.5" ></text>
</g>
<g >
<title>absl::container_internal::TrailingZeros&lt;unsigned int&gt; (1 samples, 0.02%)</title><rect x="808.7" y="421" width="0.2" height="15.0" fill="rgb(207,228,44)" rx="2" ry="2" />
<text  x="811.71" y="431.5" ></text>
</g>
<g >
<title>validation::validate_keyspace (9 samples, 0.17%)</title><rect x="813.4" y="469" width="2.0" height="15.0" fill="rgb(212,108,6)" rx="2" ry="2" />
<text  x="816.40" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value_view, std::allocator&lt;cql3::raw_value_view&gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="663.3" y="565" width="0.2" height="15.0" fill="rgb(251,58,43)" rx="2" ry="2" />
<text  x="666.25" y="575.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (1 samples, 0.02%)</title><rect x="515.8" y="389" width="0.2" height="15.0" fill="rgb(224,7,39)" rx="2" ry="2" />
<text  x="518.78" y="399.5" ></text>
</g>
<g >
<title>absl::hash_internal::AbslHashValue&lt;absl::hash_internal::HashState&gt; (1 samples, 0.02%)</title><rect x="814.7" y="405" width="0.3" height="15.0" fill="rgb(245,201,18)" rx="2" ry="2" />
<text  x="817.74" y="415.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (1 samples, 0.02%)</title><rect x="215.5" y="229" width="0.2" height="15.0" fill="rgb(209,176,10)" rx="2" ry="2" />
<text  x="218.48" y="239.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="433.7" y="373" width="0.2" height="15.0" fill="rgb(221,100,4)" rx="2" ry="2" />
<text  x="436.68" y="383.5" ></text>
</g>
<g >
<title>partition_snapshot_row_cursor::ensure_entry_if_complete (1 samples, 0.02%)</title><rect x="16.7" y="645" width="0.2" height="15.0" fill="rgb(243,56,47)" rx="2" ry="2" />
<text  x="19.69" y="655.5" ></text>
</g>
<g >
<title>schema::column_at (11 samples, 0.21%)</title><rect x="243.8" y="213" width="2.5" height="15.0" fill="rgb(219,63,9)" rx="2" ry="2" />
<text  x="246.81" y="223.5" ></text>
</g>
<g >
<title>query::querier_base::querier_base (4 samples, 0.08%)</title><rect x="613.7" y="501" width="0.9" height="15.0" fill="rgb(225,105,14)" rx="2" ry="2" />
<text  x="616.72" y="511.5" ></text>
</g>
<g >
<title>fmt::v7::detail::fallback_formatter&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, char, void&gt;::format&lt;fmt::v7::detail::buffer_appender&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="18.3" y="565" width="0.2" height="15.0" fill="rgb(238,183,17)" rx="2" ry="2" />
<text  x="21.25" y="575.5" ></text>
</g>
<g >
<title>std::__detail::_Synth3way::operator (1 samples, 0.02%)</title><rect x="107.9" y="389" width="0.3" height="15.0" fill="rgb(226,118,29)" rx="2" ry="2" />
<text  x="110.94" y="399.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;, seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::finally_body&lt;seastar::smp::submit_to&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (26 samples, 0.49%)</title><rect x="621.5" y="597" width="5.8" height="15.0" fill="rgb(207,107,7)" rx="2" ry="2" />
<text  x="624.53" y="607.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::~_Variant_storage (1 samples, 0.02%)</title><rect x="353.8" y="293" width="0.2" height="15.0" fill="rgb(236,19,39)" rx="2" ry="2" />
<text  x="356.80" y="303.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_prepared_with_qo (544 samples, 10.29%)</title><rect x="716.1" y="549" width="121.4" height="15.0" fill="rgb(220,192,45)" rx="2" ry="2" />
<text  x="719.13" y="559.5" >single_node_cql..</text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (4 samples, 0.08%)</title><rect x="53.3" y="309" width="0.9" height="15.0" fill="rgb(226,39,19)" rx="2" ry="2" />
<text  x="56.28" y="319.5" ></text>
</g>
<g >
<title>__mmap (1 samples, 0.02%)</title><rect x="1167.9" y="549" width="0.2" height="15.0" fill="rgb(216,196,1)" rx="2" ry="2" />
<text  x="1170.91" y="559.5" ></text>
</g>
<g >
<title>_ZSt5applyIZN7seastar8internal12do_with_implISt4pairIN4auth17role_or_anonymousENS4_8resourceEEZNS4_17permissions_cache3getERKS5_RKS6_E3$_0JEEEDaOT_OT0_DpOT1_EUlDpOT_E_St5tupleIJOS7_EEEDcSF_SH_ (12 samples, 0.23%)</title><rect x="774.8" y="357" width="2.7" height="15.0" fill="rgb(234,226,1)" rx="2" ry="2" />
<text  x="777.80" y="367.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (1 samples, 0.02%)</title><rect x="777.3" y="309" width="0.2" height="15.0" fill="rgb(253,40,9)" rx="2" ry="2" />
<text  x="780.26" y="319.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;service::never_speculating_read_executor, true&gt;::make&lt;seastar::lw_shared_ptr&lt;schema const&gt;&amp;, seastar::lw_shared_ptr&lt;table&gt;&amp;, seastar::shared_ptr&lt;service::storage_proxy&gt;&amp;, seastar::lw_shared_ptr&lt;query::read_command&gt;&amp;, nonwrapping_interval&lt;dht::ring_position&gt;, db::consistency_level&amp;, utils::small_vector&lt;gms::inet_address, 3ul&gt;, tracing::trace_state_ptr, service_permit&gt; (1 samples, 0.02%)</title><rect x="963.8" y="453" width="0.2" height="15.0" fill="rgb(212,87,24)" rx="2" ry="2" />
<text  x="966.77" y="463.5" ></text>
</g>
<g >
<title>sstring_hash::operator (8 samples, 0.15%)</title><rect x="828.3" y="469" width="1.8" height="15.0" fill="rgb(227,141,26)" rx="2" ry="2" />
<text  x="831.35" y="479.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;query::result&gt;::make&lt;query::result&gt; (4 samples, 0.08%)</title><rect x="602.1" y="533" width="0.9" height="15.0" fill="rgb(250,226,28)" rx="2" ry="2" />
<text  x="605.12" y="543.5" ></text>
</g>
<g >
<title>seastar::memory::stats (2 samples, 0.04%)</title><rect x="197.0" y="341" width="0.4" height="15.0" fill="rgb(217,67,4)" rx="2" ry="2" />
<text  x="199.96" y="351.5" ></text>
</g>
<g >
<title>partition_version_ref::operator* (4 samples, 0.08%)</title><rect x="513.5" y="325" width="0.9" height="15.0" fill="rgb(251,189,6)" rx="2" ry="2" />
<text  x="516.55" y="335.5" ></text>
</g>
<g >
<title>[unknown] (14 samples, 0.26%)</title><rect x="79.4" y="693" width="3.1" height="15.0" fill="rgb(252,120,5)" rx="2" ry="2" />
<text  x="82.39" y="703.5" ></text>
</g>
<g >
<title>absl::container_internal::operator== (1 samples, 0.02%)</title><rect x="746.5" y="453" width="0.2" height="15.0" fill="rgb(250,140,13)" rx="2" ry="2" />
<text  x="749.47" y="463.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;lister&gt;::make&lt;seastar::file, std::unordered_set&lt;seastar::directory_entry_type, seastar::enum_hash&lt;seastar::directory_entry_type&gt;, std::equal_to&lt;seastar::directory_entry_type&gt;, std::allocator&lt;seastar::directory_entry_type&gt; &gt; const, std::function&lt;seastar::future&lt;void&gt;  (1 samples, 0.02%)</title><rect x="677.8" y="565" width="0.2" height="15.0" fill="rgb(224,88,17)" rx="2" ry="2" />
<text  x="680.75" y="575.5" ></text>
</g>
<g >
<title>gms::gossiper::is_alive (1 samples, 0.02%)</title><rect x="1074.2" y="357" width="0.2" height="15.0" fill="rgb(234,147,52)" rx="2" ry="2" />
<text  x="1077.21" y="367.5" ></text>
</g>
<g >
<title>cql3::constants::value::value (1 samples, 0.02%)</title><rect x="66.9" y="453" width="0.2" height="15.0" fill="rgb(210,229,35)" rx="2" ry="2" />
<text  x="69.89" y="463.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;managed_bytes&gt;::make&lt;managed_bytes&gt; (2 samples, 0.04%)</title><rect x="891.3" y="405" width="0.4" height="15.0" fill="rgb(230,227,29)" rx="2" ry="2" />
<text  x="894.26" y="415.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_cql (3 samples, 0.06%)</title><rect x="652.5" y="597" width="0.7" height="15.0" fill="rgb(234,105,19)" rx="2" ry="2" />
<text  x="655.54" y="607.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="616.0" y="485" width="0.2" height="15.0" fill="rgb(233,58,13)" rx="2" ry="2" />
<text  x="618.95" y="495.5" ></text>
</g>
<g >
<title>std::__optional_hash_call_base&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, true&gt;::operator (2 samples, 0.04%)</title><rect x="789.8" y="181" width="0.4" height="15.0" fill="rgb(242,20,31)" rx="2" ry="2" />
<text  x="792.75" y="191.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (3 samples, 0.06%)</title><rect x="40.1" y="389" width="0.7" height="15.0" fill="rgb(210,154,42)" rx="2" ry="2" />
<text  x="43.12" y="399.5" ></text>
</g>
<g >
<title>database::apply_with_commitlog (34 samples, 0.64%)</title><rect x="1117.0" y="405" width="7.6" height="15.0" fill="rgb(227,108,31)" rx="2" ry="2" />
<text  x="1120.04" y="415.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;compact_for_query&lt; (1 samples, 0.02%)</title><rect x="439.0" y="453" width="0.3" height="15.0" fill="rgb(226,64,17)" rx="2" ry="2" />
<text  x="442.03" y="463.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_cql (1 samples, 0.02%)</title><rect x="652.8" y="581" width="0.2" height="15.0" fill="rgb(214,130,28)" rx="2" ry="2" />
<text  x="655.76" y="591.5" ></text>
</g>
<g >
<title>service::storage_service::join_token_ring (1 samples, 0.02%)</title><rect x="17.4" y="565" width="0.2" height="15.0" fill="rgb(206,103,40)" rx="2" ry="2" />
<text  x="20.36" y="575.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (1 samples, 0.02%)</title><rect x="1142.7" y="549" width="0.2" height="15.0" fill="rgb(236,137,12)" rx="2" ry="2" />
<text  x="1145.70" y="559.5" ></text>
</g>
<g >
<title>seastar::reactor::run_some_tasks (4,835 samples, 91.42%)</title><rect x="87.4" y="613" width="1078.7" height="15.0" fill="rgb(248,189,47)" rx="2" ry="2" />
<text  x="90.42" y="623.5" >seastar::reactor::run_some_tasks</text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="538.1" y="437" width="0.2" height="15.0" fill="rgb(247,147,37)" rx="2" ry="2" />
<text  x="541.09" y="447.5" ></text>
</g>
<g >
<title>mutation::set_cell (1 samples, 0.02%)</title><rect x="105.5" y="581" width="0.2" height="15.0" fill="rgb(229,169,19)" rx="2" ry="2" />
<text  x="108.49" y="591.5" ></text>
</g>
<g >
<title>__start_context (283 samples, 5.35%)</title><rect x="15.6" y="709" width="63.1" height="15.0" fill="rgb(236,118,35)" rx="2" ry="2" />
<text  x="18.58" y="719.5" >__star..</text>
</g>
<g >
<title>ser::tombstone_view::operator tombstone (1 samples, 0.02%)</title><rect x="1123.1" y="325" width="0.2" height="15.0" fill="rgb(241,219,38)" rx="2" ry="2" />
<text  x="1126.07" y="335.5" ></text>
</g>
<g >
<title>utils::murmur_hash::hash3_x64_128&lt;legacy_compound_view&lt;compound_type&lt; (16 samples, 0.30%)</title><rect x="907.5" y="469" width="3.6" height="15.0" fill="rgb(205,12,5)" rx="2" ry="2" />
<text  x="910.55" y="479.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::find&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (14 samples, 0.26%)</title><rect x="746.7" y="453" width="3.1" height="15.0" fill="rgb(236,144,48)" rx="2" ry="2" />
<text  x="749.69" y="463.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.08%)</title><rect x="583.8" y="485" width="0.9" height="15.0" fill="rgb(236,107,6)" rx="2" ry="2" />
<text  x="586.82" y="495.5" ></text>
</g>
<g >
<title>reader_permit::consume_memory (1 samples, 0.02%)</title><rect x="80.3" y="373" width="0.2" height="15.0" fill="rgb(246,59,28)" rx="2" ry="2" />
<text  x="83.28" y="383.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;gms::inet_address, std::pair&lt;gms::inet_address const, table::cache_hit_rate&gt;, std::allocator&lt;std::pair&lt;gms::inet_address const, table::cache_hit_rate&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;gms::inet_address&gt;, std::hash&lt;gms::inet_address&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (5 samples, 0.09%)</title><rect x="700.5" y="517" width="1.1" height="15.0" fill="rgb(243,206,1)" rx="2" ry="2" />
<text  x="703.51" y="527.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt; &gt;, seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (11 samples, 0.21%)</title><rect x="792.7" y="357" width="2.4" height="15.0" fill="rgb(230,82,8)" rx="2" ry="2" />
<text  x="795.65" y="367.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (2 samples, 0.04%)</title><rect x="522.0" y="437" width="0.5" height="15.0" fill="rgb(220,33,39)" rx="2" ry="2" />
<text  x="525.02" y="447.5" ></text>
</g>
<g >
<title>intrusive_b::searcher&lt;clustering_key_prefix, rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare,  (1 samples, 0.02%)</title><rect x="105.5" y="485" width="0.2" height="15.0" fill="rgb(215,188,33)" rx="2" ry="2" />
<text  x="108.49" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::find_and_unlink_span_reclaiming (1 samples, 0.02%)</title><rect x="877.4" y="341" width="0.3" height="15.0" fill="rgb(233,2,10)" rx="2" ry="2" />
<text  x="880.43" y="351.5" ></text>
</g>
<g >
<title>std::make_unique&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;, seastar::lw_shared_ptr&lt;schema const&gt;, reader_permit, dht::decorated_key, partition_snapshot_ptr&amp;, query::clustering_key_filter_ranges, bool&amp;, logalloc::region&amp;, logalloc::allocating_section&amp;, boost::any, schema const&amp;, flush_memory_accounter&amp;&gt; (1 samples, 0.02%)</title><rect x="79.8" y="485" width="0.3" height="15.0" fill="rgb(248,159,48)" rx="2" ry="2" />
<text  x="82.83" y="495.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, flat_mutation_reader::impl::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (1 samples, 0.02%)</title><rect x="1165.2" y="453" width="0.3" height="15.0" fill="rgb(237,158,32)" rx="2" ry="2" />
<text  x="1168.24" y="463.5" ></text>
</g>
<g >
<title>boost::intrusive::bstree_impl&lt;boost::intrusive::mhtraits&lt;range_tombstone_entry, boost::intrusive::set_member_hook&lt;boost::intrusive::link_mode&lt; (1 samples, 0.02%)</title><rect x="1118.4" y="229" width="0.2" height="15.0" fill="rgb(233,66,43)" rx="2" ry="2" />
<text  x="1121.38" y="239.5" ></text>
</g>
<g >
<title>operator delete (7 samples, 0.13%)</title><rect x="430.1" y="341" width="1.6" height="15.0" fill="rgb(209,49,9)" rx="2" ry="2" />
<text  x="433.11" y="351.5" ></text>
</g>
<g >
<title>service::storage_proxy::query (634 samples, 11.99%)</title><rect x="942.1" y="501" width="141.5" height="15.0" fill="rgb(229,188,52)" rx="2" ry="2" />
<text  x="945.13" y="511.5" >service::storage_..</text>
</g>
<g >
<title>service::abstract_write_response_handler::apply_locally (8 samples, 0.15%)</title><rect x="1127.3" y="341" width="1.8" height="15.0" fill="rgb(244,204,36)" rx="2" ry="2" />
<text  x="1130.31" y="351.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.02%)</title><rect x="11.1" y="645" width="0.2" height="15.0" fill="rgb(251,5,20)" rx="2" ry="2" />
<text  x="14.12" y="655.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;position_in_partition&gt;::_M_reset (1 samples, 0.02%)</title><rect x="284.4" y="341" width="0.2" height="15.0" fill="rgb(212,157,10)" rx="2" ry="2" />
<text  x="287.42" y="351.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (1 samples, 0.02%)</title><rect x="818.3" y="485" width="0.2" height="15.0" fill="rgb(238,202,44)" rx="2" ry="2" />
<text  x="821.31" y="495.5" ></text>
</g>
<g >
<title>seastar::reactor::run (4,857 samples, 91.83%)</title><rect x="84.3" y="645" width="1083.6" height="15.0" fill="rgb(241,143,10)" rx="2" ry="2" />
<text  x="87.29" y="655.5" >seastar::reactor::run</text>
</g>
<g >
<title>seastar::internal::uninitialized_wrapper_base&lt;service::storage_proxy_coordinator_query_result, false&gt;::uninitialized_set&lt;service::storage_proxy_coordinator_query_result&gt; (15 samples, 0.28%)</title><rect x="666.8" y="565" width="3.4" height="15.0" fill="rgb(220,11,6)" rx="2" ry="2" />
<text  x="669.82" y="575.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;gms::inet_address, gms::inet_address, std::allocator&lt;gms::inet_address&gt;, std::__detail::_Identity, std::equal_to&lt;gms::inet_address&gt;, std::hash&lt;gms::inet_address&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_find_before_node (1 samples, 0.02%)</title><rect x="17.4" y="421" width="0.2" height="15.0" fill="rgb(248,216,18)" rx="2" ry="2" />
<text  x="20.36" y="431.5" ></text>
</g>
<g >
<title>std::_Bind_front&lt;bool  (1 samples, 0.02%)</title><rect x="854.0" y="453" width="0.2" height="15.0" fill="rgb(216,33,9)" rx="2" ry="2" />
<text  x="857.00" y="463.5" ></text>
</g>
<g >
<title>std::hash&lt;auth::resource&gt;::hash_data (8 samples, 0.15%)</title><rect x="788.4" y="229" width="1.8" height="15.0" fill="rgb(250,184,8)" rx="2" ry="2" />
<text  x="791.41" y="239.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::at (4 samples, 0.08%)</title><rect x="807.6" y="421" width="0.9" height="15.0" fill="rgb(253,82,21)" rx="2" ry="2" />
<text  x="810.60" y="431.5" ></text>
</g>
<g >
<title>sstables::write&lt;unsigned int, unsigned long&gt; (1 samples, 0.02%)</title><rect x="676.0" y="277" width="0.2" height="15.0" fill="rgb(223,180,25)" rx="2" ry="2" />
<text  x="678.97" y="287.5" ></text>
</g>
<g >
<title>db::system_keyspace_make (5 samples, 0.09%)</title><rect x="106.8" y="597" width="1.1" height="15.0" fill="rgb(225,62,22)" rx="2" ry="2" />
<text  x="109.83" y="607.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;mutation_fragment_merger&lt;mutation_reader_merger&gt;::operator (15 samples, 0.28%)</title><rect x="300.9" y="437" width="3.4" height="15.0" fill="rgb(225,155,17)" rx="2" ry="2" />
<text  x="303.93" y="447.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_prepared (583 samples, 11.02%)</title><rect x="714.8" y="565" width="130.1" height="15.0" fill="rgb(235,113,7)" rx="2" ry="2" />
<text  x="717.79" y="575.5" >single_node_cql_..</text>
</g>
<g >
<title>operator new (4 samples, 0.08%)</title><rect x="439.9" y="469" width="0.9" height="15.0" fill="rgb(213,4,6)" rx="2" ry="2" />
<text  x="442.92" y="479.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;service::digest_read_resolver&gt;::~shared_ptr_count_for (1 samples, 0.02%)</title><rect x="1137.1" y="597" width="0.2" height="15.0" fill="rgb(220,15,51)" rx="2" ry="2" />
<text  x="1140.12" y="607.5" ></text>
</g>
<g >
<title>utils::approx_exponential_histogram&lt;512ul, 33554432ul, 4ul&gt;::find_bucket_index (1 samples, 0.02%)</title><rect x="664.8" y="549" width="0.2" height="15.0" fill="rgb(205,136,28)" rx="2" ry="2" />
<text  x="667.81" y="559.5" ></text>
</g>
<g >
<title>database::has_keyspace (13 samples, 0.25%)</title><rect x="834.4" y="501" width="2.9" height="15.0" fill="rgb(232,13,39)" rx="2" ry="2" />
<text  x="837.37" y="511.5" ></text>
</g>
<g >
<title>seastar::memory::stats (1 samples, 0.02%)</title><rect x="849.8" y="565" width="0.2" height="15.0" fill="rgb(238,35,19)" rx="2" ry="2" />
<text  x="852.77" y="575.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;cql3::single_column_relation, true&gt;::make&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, cql3::expr::oper_t&amp;, cql3::expr::expression&gt; (1 samples, 0.02%)</title><rect x="58.9" y="405" width="0.2" height="15.0" fill="rgb(225,158,21)" rx="2" ry="2" />
<text  x="61.86" y="415.5" ></text>
</g>
<g >
<title>mutation_fragment::destroy_data (1 samples, 0.02%)</title><rect x="82.3" y="533" width="0.2" height="15.0" fill="rgb(209,109,40)" rx="2" ry="2" />
<text  x="85.29" y="543.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (2 samples, 0.04%)</title><rect x="57.5" y="357" width="0.5" height="15.0" fill="rgb(218,220,23)" rx="2" ry="2" />
<text  x="60.52" y="367.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::leaf_node::free (2 samples, 0.04%)</title><rect x="428.8" y="309" width="0.4" height="15.0" fill="rgb(243,11,47)" rx="2" ry="2" />
<text  x="431.77" y="319.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::guard (1 samples, 0.02%)</title><rect x="453.8" y="437" width="0.2" height="15.0" fill="rgb(219,56,14)" rx="2" ry="2" />
<text  x="456.75" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="896.2" y="453" width="0.2" height="15.0" fill="rgb(254,87,24)" rx="2" ry="2" />
<text  x="899.17" y="463.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (1,129 samples, 21.35%)</title><rect x="864.9" y="549" width="251.9" height="15.0" fill="rgb(218,29,20)" rx="2" ry="2" />
<text  x="867.94" y="559.5" >seastar::noncopyable_function&lt;sea..</text>
</g>
<g >
<title>ser::serializer&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;::write_fragmented&lt;bytes_ostream, fragment_range&lt;managed_bytes_basic_view&lt; (15 samples, 0.28%)</title><rect x="391.5" y="261" width="3.4" height="15.0" fill="rgb(240,64,40)" rx="2" ry="2" />
<text  x="394.51" y="271.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (41 samples, 0.78%)</title><rect x="1117.0" y="549" width="9.2" height="15.0" fill="rgb(221,117,9)" rx="2" ry="2" />
<text  x="1120.04" y="559.5" ></text>
</g>
<g >
<title>reader_permit::consume (2 samples, 0.04%)</title><rect x="506.6" y="293" width="0.5" height="15.0" fill="rgb(239,15,4)" rx="2" ry="2" />
<text  x="509.63" y="303.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="19.8" y="469" width="0.2" height="15.0" fill="rgb(212,83,38)" rx="2" ry="2" />
<text  x="22.82" y="479.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_data_requests (44 samples, 0.83%)</title><rect x="692.9" y="565" width="9.8" height="15.0" fill="rgb(215,80,21)" rx="2" ry="2" />
<text  x="695.92" y="575.5" ></text>
</g>
<g >
<title>seastar::promise&lt;void&gt;::promise (2 samples, 0.04%)</title><rect x="1011.1" y="229" width="0.4" height="15.0" fill="rgb(207,102,28)" rx="2" ry="2" />
<text  x="1014.07" y="239.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::need_filtering (27 samples, 0.51%)</title><rect x="928.5" y="517" width="6.0" height="15.0" fill="rgb(206,97,27)" rx="2" ry="2" />
<text  x="931.52" y="527.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.08%)</title><rect x="508.6" y="293" width="0.9" height="15.0" fill="rgb(219,69,23)" rx="2" ry="2" />
<text  x="511.64" y="303.5" ></text>
</g>
<g >
<title>reader_selector::has_new_readers (1 samples, 0.02%)</title><rect x="178.9" y="373" width="0.2" height="15.0" fill="rgb(236,133,54)" rx="2" ry="2" />
<text  x="181.89" y="383.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::get0 (1 samples, 0.02%)</title><rect x="597.9" y="533" width="0.2" height="15.0" fill="rgb(239,6,2)" rx="2" ry="2" />
<text  x="600.88" y="543.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::raw::parsed_statement, std::default_delete&lt;cql3::statements::raw::parsed_statement&gt; &gt;::_M_deleter (1 samples, 0.02%)</title><rect x="62.4" y="437" width="0.3" height="15.0" fill="rgb(234,106,29)" rx="2" ry="2" />
<text  x="65.43" y="447.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::invoke&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (2 samples, 0.04%)</title><rect x="319.4" y="453" width="0.5" height="15.0" fill="rgb(220,202,47)" rx="2" ry="2" />
<text  x="322.45" y="463.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (1 samples, 0.02%)</title><rect x="890.1" y="373" width="0.3" height="15.0" fill="rgb(209,21,32)" rx="2" ry="2" />
<text  x="893.15" y="383.5" ></text>
</g>
<g >
<title>row_cache::do_make_reader (53 samples, 1.00%)</title><rect x="523.6" y="421" width="11.8" height="15.0" fill="rgb(239,190,20)" rx="2" ry="2" />
<text  x="526.59" y="431.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (5 samples, 0.09%)</title><rect x="856.7" y="357" width="1.1" height="15.0" fill="rgb(247,19,8)" rx="2" ry="2" />
<text  x="859.68" y="367.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (2 samples, 0.04%)</title><rect x="784.6" y="213" width="0.5" height="15.0" fill="rgb(223,190,5)" rx="2" ry="2" />
<text  x="787.62" y="223.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE9then_implIZNS6_14discard_resultEvEUlDpOT_E_NS0_IvEEEET0_OT_ (4 samples, 0.08%)</title><rect x="709.4" y="581" width="0.9" height="15.0" fill="rgb(209,155,34)" rx="2" ry="2" />
<text  x="712.43" y="591.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (3 samples, 0.06%)</title><rect x="54.2" y="181" width="0.6" height="15.0" fill="rgb(246,57,18)" rx="2" ry="2" />
<text  x="57.17" y="191.5" ></text>
</g>
<g >
<title>std::apply&lt;auth::permissions_cache::get (4 samples, 0.08%)</title><rect x="76.3" y="421" width="0.9" height="15.0" fill="rgb(227,52,24)" rx="2" ry="2" />
<text  x="79.26" y="431.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::push_mutation_fragment&lt;schema const&amp;, reader_permit&amp;, partition_start&gt; (1 samples, 0.02%)</title><rect x="79.8" y="421" width="0.3" height="15.0" fill="rgb(236,190,46)" rx="2" ry="2" />
<text  x="82.83" y="431.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (1 samples, 0.02%)</title><rect x="543.7" y="453" width="0.2" height="15.0" fill="rgb(229,24,33)" rx="2" ry="2" />
<text  x="546.67" y="463.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.02%)</title><rect x="37.0" y="357" width="0.2" height="15.0" fill="rgb(225,213,35)" rx="2" ry="2" />
<text  x="40.00" y="367.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;clustering_key_prefix, false, false&gt;::_Optional_base (1 samples, 0.02%)</title><rect x="267.5" y="309" width="0.2" height="15.0" fill="rgb(245,219,3)" rx="2" ry="2" />
<text  x="270.46" y="319.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (1 samples, 0.02%)</title><rect x="286.4" y="309" width="0.2" height="15.0" fill="rgb(244,70,35)" rx="2" ry="2" />
<text  x="289.43" y="319.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.02%)</title><rect x="704.5" y="437" width="0.2" height="15.0" fill="rgb(218,209,28)" rx="2" ry="2" />
<text  x="707.52" y="447.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_slice_or_needs_filtering (4 samples, 0.08%)</title><rect x="638.9" y="533" width="0.9" height="15.0" fill="rgb(211,195,44)" rx="2" ry="2" />
<text  x="641.93" y="543.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_token (4 samples, 0.08%)</title><rect x="874.5" y="501" width="0.9" height="15.0" fill="rgb(221,160,24)" rx="2" ry="2" />
<text  x="877.53" y="511.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (4 samples, 0.08%)</title><rect x="791.8" y="309" width="0.9" height="15.0" fill="rgb(206,20,32)" rx="2" ry="2" />
<text  x="794.76" y="319.5" ></text>
</g>
<g >
<title>seastar::internal::coroutine_traits_base&lt;std::tuple&lt;seastar::lw_shared_ptr&lt;query::result&gt;, cache_temperature&gt; &gt;::promise_type::run_and_dispose (1 samples, 0.02%)</title><rect x="87.2" y="613" width="0.2" height="15.0" fill="rgb(218,150,4)" rx="2" ry="2" />
<text  x="90.19" y="623.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::~abstract_read_executor (5 samples, 0.09%)</title><rect x="1163.5" y="533" width="1.1" height="15.0" fill="rgb(217,44,50)" rx="2" ry="2" />
<text  x="1166.45" y="543.5" ></text>
</g>
<g >
<title>mutation_querier::prepare_writers (1 samples, 0.02%)</title><rect x="397.8" y="293" width="0.2" height="15.0" fill="rgb(223,160,10)" rx="2" ry="2" />
<text  x="400.76" y="303.5" ></text>
</g>
<g >
<title>position_in_partition::position_in_partition (4 samples, 0.08%)</title><rect x="265.9" y="325" width="0.9" height="15.0" fill="rgb(249,63,30)" rx="2" ry="2" />
<text  x="268.90" y="335.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.02%)</title><rect x="864.0" y="565" width="0.3" height="15.0" fill="rgb(244,3,45)" rx="2" ry="2" />
<text  x="867.04" y="575.5" ></text>
</g>
<g >
<title>absl::container_internal::operator== (1 samples, 0.02%)</title><rect x="825.9" y="485" width="0.2" height="15.0" fill="rgb(236,48,16)" rx="2" ry="2" />
<text  x="828.89" y="495.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;9ul, cql3::expr::untyped_constant&gt; (2 samples, 0.04%)</title><rect x="51.5" y="181" width="0.4" height="15.0" fill="rgb(217,108,32)" rx="2" ry="2" />
<text  x="54.50" y="191.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::find (6 samples, 0.11%)</title><rect x="640.9" y="533" width="1.4" height="15.0" fill="rgb(235,220,28)" rx="2" ry="2" />
<text  x="643.94" y="543.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::value_ptr&gt;::clear (1 samples, 0.02%)</title><rect x="738.7" y="501" width="0.2" height="15.0" fill="rgb(253,48,26)" rx="2" ry="2" />
<text  x="741.66" y="511.5" ></text>
</g>
<g >
<title>allocation_strategy::alloc&lt;blob_storage&gt; (1 samples, 0.02%)</title><rect x="232.4" y="181" width="0.3" height="15.0" fill="rgb(242,100,6)" rx="2" ry="2" />
<text  x="235.44" y="191.5" ></text>
</g>
<g >
<title>mutation_fragment::consume&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (390 samples, 7.37%)</title><rect x="335.3" y="357" width="87.0" height="15.0" fill="rgb(236,164,44)" rx="2" ry="2" />
<text  x="338.29" y="367.5" >mutation_f..</text>
</g>
<g >
<title>seastar::future&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::future (2 samples, 0.04%)</title><rect x="965.6" y="437" width="0.4" height="15.0" fill="rgb(241,192,1)" rx="2" ry="2" />
<text  x="968.56" y="447.5" ></text>
</g>
<g >
<title>partition_snapshot::get_change_mark (4 samples, 0.08%)</title><rect x="256.8" y="261" width="0.8" height="15.0" fill="rgb(207,192,27)" rx="2" ry="2" />
<text  x="259.75" y="271.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::operator (1 samples, 0.02%)</title><rect x="105.9" y="149" width="0.3" height="15.0" fill="rgb(214,23,18)" rx="2" ry="2" />
<text  x="108.93" y="159.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::_Copy_ctor_base (1 samples, 0.02%)</title><rect x="348.7" y="261" width="0.2" height="15.0" fill="rgb(236,82,7)" rx="2" ry="2" />
<text  x="351.67" y="271.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.02%)</title><rect x="677.1" y="389" width="0.2" height="15.0" fill="rgb(213,45,4)" rx="2" ry="2" />
<text  x="680.08" y="399.5" ></text>
</g>
<g >
<title>std::optional&lt;clustering_key_prefix&gt;::operator=&lt;clustering_key_prefix const&amp;&gt; (1 samples, 0.02%)</title><rect x="267.2" y="325" width="0.3" height="15.0" fill="rgb(243,39,15)" rx="2" ry="2" />
<text  x="270.24" y="335.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation::data, std::default_delete&lt;mutation::data&gt; &gt;::~unique_ptr (2 samples, 0.04%)</title><rect x="1132.4" y="421" width="0.5" height="15.0" fill="rgb(242,163,13)" rx="2" ry="2" />
<text  x="1135.44" y="431.5" ></text>
</g>
<g >
<title>std::make_unique&lt;merging_reader&lt;mutation_reader_merger&gt;, seastar::lw_shared_ptr&lt;schema const&gt;&amp;, reader_permit, seastar::bool_class&lt;streamed_mutation::forwarding_tag&gt;&amp;, mutation_reader_merger&gt; (20 samples, 0.38%)</title><rect x="463.1" y="405" width="4.5" height="15.0" fill="rgb(250,171,35)" rx="2" ry="2" />
<text  x="466.13" y="415.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (1 samples, 0.02%)</title><rect x="576.9" y="469" width="0.2" height="15.0" fill="rgb(206,108,8)" rx="2" ry="2" />
<text  x="579.91" y="479.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (6 samples, 0.11%)</title><rect x="39.7" y="405" width="1.3" height="15.0" fill="rgb(231,6,27)" rx="2" ry="2" />
<text  x="42.67" y="415.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.02%)</title><rect x="628.0" y="581" width="0.2" height="15.0" fill="rgb(246,194,16)" rx="2" ry="2" />
<text  x="631.00" y="591.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.02%)</title><rect x="39.7" y="213" width="0.2" height="15.0" fill="rgb(240,176,31)" rx="2" ry="2" />
<text  x="42.67" y="223.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;partition_snapshot&gt;::make&lt;seastar::lw_shared_ptr&lt;schema const&gt;&amp;, logalloc::region&amp;, mutation_cleaner&amp;, partition_entry*, cache_tracker*&amp;, unsigned long&amp;&gt; (3 samples, 0.06%)</title><rect x="516.9" y="389" width="0.7" height="15.0" fill="rgb(227,227,21)" rx="2" ry="2" />
<text  x="519.89" y="399.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::populate_slot (1 samples, 0.02%)</title><rect x="858.2" y="373" width="0.3" height="15.0" fill="rgb(236,67,30)" rx="2" ry="2" />
<text  x="861.24" y="383.5" ></text>
</g>
<g >
<title>cql3::query_options::query_options (1 samples, 0.02%)</title><rect x="853.3" y="453" width="0.3" height="15.0" fill="rgb(221,119,24)" rx="2" ry="2" />
<text  x="856.34" y="463.5" ></text>
</g>
<g >
<title>seastar::app_template::run (4,858 samples, 91.85%)</title><rect x="84.3" y="693" width="1083.8" height="15.0" fill="rgb(220,7,0)" rx="2" ry="2" />
<text  x="87.29" y="703.5" >seastar::app_template::run</text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt;::allocate (1 samples, 0.02%)</title><rect x="280.8" y="277" width="0.3" height="15.0" fill="rgb(219,47,39)" rx="2" ry="2" />
<text  x="283.85" y="287.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="39.0" y="405" width="0.2" height="15.0" fill="rgb(223,178,54)" rx="2" ry="2" />
<text  x="42.00" y="415.5" ></text>
</g>
<g >
<title>from_hex (1 samples, 0.02%)</title><rect x="68.2" y="373" width="0.3" height="15.0" fill="rgb(224,87,1)" rx="2" ry="2" />
<text  x="71.23" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, unsigned int, std::_Identity&lt;unsigned int&gt;, std::less&lt;unsigned int&gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;unsigned int&gt; &gt;::_M_lower_bound (1 samples, 0.02%)</title><rect x="35.4" y="373" width="0.3" height="15.0" fill="rgb(226,172,18)" rx="2" ry="2" />
<text  x="38.43" y="383.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (66 samples, 1.25%)</title><rect x="21.4" y="437" width="14.7" height="15.0" fill="rgb(246,24,12)" rx="2" ry="2" />
<text  x="24.38" y="447.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.02%)</title><rect x="1120.8" y="261" width="0.3" height="15.0" fill="rgb(213,172,48)" rx="2" ry="2" />
<text  x="1123.84" y="271.5" ></text>
</g>
<g >
<title>operator delete (5 samples, 0.09%)</title><rect x="573.6" y="453" width="1.1" height="15.0" fill="rgb(213,94,4)" rx="2" ry="2" />
<text  x="576.56" y="463.5" ></text>
</g>
<g >
<title>service::storage_proxy::cannot_hint&lt;boost::range::joined_range&lt;utils::small_vector&lt;gms::inet_address, 3ul&gt;, utils::small_vector&lt;gms::inet_address, 1ul&gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="1131.3" y="293" width="0.2" height="15.0" fill="rgb(250,47,2)" rx="2" ry="2" />
<text  x="1134.32" y="303.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_internal (1 samples, 0.02%)</title><rect x="704.5" y="517" width="0.2" height="15.0" fill="rgb(246,131,35)" rx="2" ry="2" />
<text  x="707.52" y="527.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (2 samples, 0.04%)</title><rect x="805.8" y="453" width="0.5" height="15.0" fill="rgb(224,173,47)" rx="2" ry="2" />
<text  x="808.81" y="463.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::check_access (321 samples, 6.07%)</title><rect x="744.2" y="517" width="71.7" height="15.0" fill="rgb(234,162,25)" rx="2" ry="2" />
<text  x="747.24" y="527.5" >cql3::st..</text>
</g>
<g >
<title>reader_permit::resource_units::reset (1 samples, 0.02%)</title><rect x="206.6" y="309" width="0.2" height="15.0" fill="rgb(231,69,23)" rx="2" ry="2" />
<text  x="209.56" y="319.5" ></text>
</g>
<g >
<title>cql3::query_options::fill_value_views (16 samples, 0.30%)</title><rect x="839.1" y="501" width="3.5" height="15.0" fill="rgb(247,145,34)" rx="2" ry="2" />
<text  x="842.06" y="511.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::arm (2 samples, 0.04%)</title><rect x="975.4" y="373" width="0.4" height="15.0" fill="rgb(246,200,6)" rx="2" ry="2" />
<text  x="978.37" y="383.5" ></text>
</g>
<g >
<title>position_in_partition_view::for_range_end (2 samples, 0.04%)</title><rect x="266.8" y="325" width="0.4" height="15.0" fill="rgb(241,73,46)" rx="2" ry="2" />
<text  x="269.79" y="335.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::clear (1 samples, 0.02%)</title><rect x="1133.1" y="581" width="0.2" height="15.0" fill="rgb(206,74,37)" rx="2" ry="2" />
<text  x="1136.11" y="591.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (7 samples, 0.13%)</title><rect x="238.5" y="213" width="1.5" height="15.0" fill="rgb(222,78,34)" rx="2" ry="2" />
<text  x="241.46" y="223.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.29] (2 samples, 0.04%)</title><rect x="976.9" y="421" width="0.5" height="15.0" fill="rgb(218,224,4)" rx="2" ry="2" />
<text  x="979.94" y="431.5" ></text>
</g>
<g >
<title>cql3::expr::untyped_constant_test_assignment (1 samples, 0.02%)</title><rect x="68.5" y="405" width="0.2" height="15.0" fill="rgb(247,205,28)" rx="2" ry="2" />
<text  x="71.45" y="415.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (1 samples, 0.02%)</title><rect x="1165.2" y="533" width="0.3" height="15.0" fill="rgb(245,124,29)" rx="2" ry="2" />
<text  x="1168.24" y="543.5" ></text>
</g>
<g >
<title>seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::expand (11 samples, 0.21%)</title><rect x="201.6" y="309" width="2.5" height="15.0" fill="rgb(213,192,10)" rx="2" ry="2" />
<text  x="204.65" y="319.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;nonwrapping_interval&lt;dht::ring_position&gt; const*, nonwrapping_interval&lt;dht::ring_position&gt;*&gt; (7 samples, 0.13%)</title><rect x="926.7" y="469" width="1.6" height="15.0" fill="rgb(205,174,28)" rx="2" ry="2" />
<text  x="929.74" y="479.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (4 samples, 0.08%)</title><rect x="52.4" y="357" width="0.9" height="15.0" fill="rgb(245,38,12)" rx="2" ry="2" />
<text  x="55.39" y="367.5" ></text>
</g>
<g >
<title>service::storage_service::replicate_to_all_cores (1 samples, 0.02%)</title><rect x="1164.8" y="597" width="0.2" height="15.0" fill="rgb(233,160,42)" rx="2" ry="2" />
<text  x="1167.79" y="607.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (1 samples, 0.02%)</title><rect x="80.1" y="421" width="0.2" height="15.0" fill="rgb(238,143,26)" rx="2" ry="2" />
<text  x="83.05" y="431.5" ></text>
</g>
<g >
<title>ser::deletable_row__shadowable_deleted_at&lt;bytes_ostream&gt;::deletable_row__shadowable_deleted_at (1 samples, 0.02%)</title><rect x="1129.8" y="229" width="0.2" height="15.0" fill="rgb(218,75,13)" rx="2" ry="2" />
<text  x="1132.76" y="239.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.02%)</title><rect x="58.6" y="357" width="0.3" height="15.0" fill="rgb(238,165,13)" rx="2" ry="2" />
<text  x="61.64" y="367.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reclaiming_disabled&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (225 samples, 4.25%)</title><rect x="211.5" y="309" width="50.2" height="15.0" fill="rgb(247,108,14)" rx="2" ry="2" />
<text  x="214.46" y="319.5" >logal..</text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_insert_unique_node (9 samples, 0.17%)</title><rect x="1150.1" y="549" width="2.0" height="15.0" fill="rgb(226,60,53)" rx="2" ry="2" />
<text  x="1153.06" y="559.5" ></text>
</g>
<g >
<title>single_node_cql_env::make_query_state (1 samples, 0.02%)</title><rect x="78.0" y="597" width="0.3" height="15.0" fill="rgb(254,79,25)" rx="2" ry="2" />
<text  x="81.05" y="607.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consumer_adapter&lt;sstables::sstable_writer&gt;::consume (1 samples, 0.02%)</title><rect x="10.9" y="549" width="0.2" height="15.0" fill="rgb(219,74,46)" rx="2" ry="2" />
<text  x="13.89" y="559.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (3 samples, 0.06%)</title><rect x="54.2" y="165" width="0.6" height="15.0" fill="rgb(221,3,52)" rx="2" ry="2" />
<text  x="57.17" y="175.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="37.0" y="405" width="0.2" height="15.0" fill="rgb(246,223,54)" rx="2" ry="2" />
<text  x="40.00" y="415.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (2 samples, 0.04%)</title><rect x="794.2" y="309" width="0.5" height="15.0" fill="rgb(228,95,52)" rx="2" ry="2" />
<text  x="797.21" y="319.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.02%)</title><rect x="58.6" y="405" width="0.3" height="15.0" fill="rgb(219,157,9)" rx="2" ry="2" />
<text  x="61.64" y="415.5" ></text>
</g>
<g >
<title>posix_memalign (16 samples, 0.30%)</title><rect x="234.7" y="149" width="3.5" height="15.0" fill="rgb(235,155,30)" rx="2" ry="2" />
<text  x="237.67" y="159.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::then_wrapped_common&lt;true, void, service::abstract_read_executor::make_data_requests (13 samples, 0.25%)</title><rect x="977.6" y="405" width="2.9" height="15.0" fill="rgb(225,129,12)" rx="2" ry="2" />
<text  x="980.60" y="415.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (1 samples, 0.02%)</title><rect x="1083.1" y="469" width="0.3" height="15.0" fill="rgb(209,210,25)" rx="2" ry="2" />
<text  x="1086.13" y="479.5" ></text>
</g>
<g >
<title>mutation::set_clustered_cell (1 samples, 0.02%)</title><rect x="106.8" y="485" width="0.3" height="15.0" fill="rgb(234,181,33)" rx="2" ry="2" />
<text  x="109.83" y="495.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::mutation_fragment_merger (8 samples, 0.15%)</title><rect x="464.0" y="373" width="1.8" height="15.0" fill="rgb(228,89,10)" rx="2" ry="2" />
<text  x="467.02" y="383.5" ></text>
</g>
<g >
<title>seastar::app_template::run_deprecated (4,858 samples, 91.85%)</title><rect x="84.3" y="661" width="1083.8" height="15.0" fill="rgb(243,28,27)" rx="2" ry="2" />
<text  x="87.29" y="671.5" >seastar::app_template::run_deprecated</text>
</g>
<g >
<title>std::_Optional_base&lt;std::vector&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::allocator&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, false, false&gt;::_Optional_base (1 samples, 0.02%)</title><rect x="842.6" y="501" width="0.2" height="15.0" fill="rgb(243,135,8)" rx="2" ry="2" />
<text  x="845.63" y="511.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (9 samples, 0.17%)</title><rect x="1090.9" y="437" width="2.0" height="15.0" fill="rgb(235,217,40)" rx="2" ry="2" />
<text  x="1093.94" y="447.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;10ul, cql3::expr::untyped_constant&gt; (2 samples, 0.04%)</title><rect x="51.5" y="197" width="0.4" height="15.0" fill="rgb(244,4,6)" rx="2" ry="2" />
<text  x="54.50" y="207.5" ></text>
</g>
<g >
<title>cql3::restrictions::partition_key_restrictions::needs_filtering (1 samples, 0.02%)</title><rect x="872.1" y="517" width="0.2" height="15.0" fill="rgb(242,208,5)" rx="2" ry="2" />
<text  x="875.08" y="527.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.04%)</title><rect x="47.5" y="309" width="0.4" height="15.0" fill="rgb(217,125,31)" rx="2" ry="2" />
<text  x="50.48" y="319.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reserve&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::partition_snapshot_flat_reader&lt;memtable&amp;&gt; (67 samples, 1.27%)</title><rect x="499.5" y="373" width="14.9" height="15.0" fill="rgb(252,208,36)" rx="2" ry="2" />
<text  x="502.49" y="383.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.08%)</title><rect x="562.0" y="373" width="0.9" height="15.0" fill="rgb(229,61,25)" rx="2" ry="2" />
<text  x="564.96" y="383.5" ></text>
</g>
<g >
<title>std::function&lt;flat_mutation_reader  (1 samples, 0.02%)</title><rect x="141.4" y="485" width="0.2" height="15.0" fill="rgb(213,136,50)" rx="2" ry="2" />
<text  x="144.41" y="495.5" ></text>
</g>
<g >
<title>seastar::logger::log&lt;dht::token const&amp;, utils::small_vector&lt;gms::inet_address, 3ul&gt;&amp;, utils::small_vector&lt;gms::inet_address, 3ul&gt;&amp;, db::read_repair_decision&amp;&gt; (1 samples, 0.02%)</title><rect x="1046.5" y="437" width="0.3" height="15.0" fill="rgb(231,9,18)" rx="2" ry="2" />
<text  x="1049.54" y="447.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;std::tuple&lt;std::optional&lt;clustering_key_prefix&gt; &gt; &gt; &gt;::satisfy_with_result_of&lt;seastar::future&lt;mutation_fragment*&gt;::then_impl_nrvo&lt;query::consume_page&lt; (4 samples, 0.08%)</title><rect x="676.2" y="581" width="0.9" height="15.0" fill="rgb(210,86,44)" rx="2" ry="2" />
<text  x="679.19" y="591.5" ></text>
</g>
<g >
<title>seastar::do_until&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::fill_buffer (5 samples, 0.09%)</title><rect x="80.1" y="453" width="1.1" height="15.0" fill="rgb(208,223,38)" rx="2" ry="2" />
<text  x="83.05" y="463.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::maybe_decay_reserve (1 samples, 0.02%)</title><rect x="16.5" y="645" width="0.2" height="15.0" fill="rgb(224,67,2)" rx="2" ry="2" />
<text  x="19.47" y="655.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; const, column_definition const*&gt;, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; const, column_definition const*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;, std::hash&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (1 samples, 0.02%)</title><rect x="72.9" y="501" width="0.2" height="15.0" fill="rgb(249,127,40)" rx="2" ry="2" />
<text  x="75.92" y="511.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::untyped_constant&gt; (1 samples, 0.02%)</title><rect x="55.7" y="373" width="0.3" height="15.0" fill="rgb(236,129,6)" rx="2" ry="2" />
<text  x="58.74" y="383.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_S_construct&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (2 samples, 0.04%)</title><rect x="24.1" y="325" width="0.4" height="15.0" fill="rgb(233,6,32)" rx="2" ry="2" />
<text  x="27.06" y="335.5" ></text>
</g>
<g >
<title>std::__optional_hash_call_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, true&gt;::operator (6 samples, 0.11%)</title><rect x="787.1" y="245" width="1.3" height="15.0" fill="rgb(228,147,15)" rx="2" ry="2" />
<text  x="790.07" y="255.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::get_error (1 samples, 0.02%)</title><rect x="49.7" y="373" width="0.2" height="15.0" fill="rgb(248,63,12)" rx="2" ry="2" />
<text  x="52.71" y="383.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;auth::resource_kind, std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;auth::resource_kind&gt;, std::hash&lt;auth::resource_kind&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::at (3 samples, 0.06%)</title><rect x="758.3" y="453" width="0.7" height="15.0" fill="rgb(239,150,14)" rx="2" ry="2" />
<text  x="761.29" y="463.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;query::querier&lt; (20 samples, 0.38%)</title><rect x="607.0" y="533" width="4.5" height="15.0" fill="rgb(231,74,45)" rx="2" ry="2" />
<text  x="610.03" y="543.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql3::constants::setter&gt;::~shared_ptr_count_for (1 samples, 0.02%)</title><rect x="633.1" y="549" width="0.3" height="15.0" fill="rgb(238,20,19)" rx="2" ry="2" />
<text  x="636.13" y="559.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="107.3" y="373" width="0.2" height="15.0" fill="rgb(212,175,8)" rx="2" ry="2" />
<text  x="110.27" y="383.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_Vector_base (1 samples, 0.02%)</title><rect x="56.0" y="373" width="0.2" height="15.0" fill="rgb(248,186,49)" rx="2" ry="2" />
<text  x="58.96" y="383.5" ></text>
</g>
<g >
<title>mutation_querier::prepare_writers (8 samples, 0.15%)</title><rect x="363.6" y="277" width="1.8" height="15.0" fill="rgb(239,51,2)" rx="2" ry="2" />
<text  x="366.62" y="287.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (283 samples, 5.35%)</title><rect x="15.6" y="677" width="63.1" height="15.0" fill="rgb(241,45,35)" rx="2" ry="2" />
<text  x="18.58" y="687.5" >seasta..</text>
</g>
<g >
<title>std::visit&lt;overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::has_token (1 samples, 0.02%)</title><rect x="928.3" y="501" width="0.2" height="15.0" fill="rgb(254,112,51)" rx="2" ry="2" />
<text  x="931.30" y="511.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="1044.3" y="421" width="0.2" height="15.0" fill="rgb(225,197,16)" rx="2" ry="2" />
<text  x="1047.31" y="431.5" ></text>
</g>
<g >
<title>partition_entry::read (1 samples, 0.02%)</title><rect x="79.6" y="421" width="0.2" height="15.0" fill="rgb(252,104,24)" rx="2" ry="2" />
<text  x="82.61" y="431.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::fetch (1 samples, 0.02%)</title><rect x="105.9" y="229" width="0.3" height="15.0" fill="rgb(248,227,34)" rx="2" ry="2" />
<text  x="108.93" y="239.5" ></text>
</g>
<g >
<title>reader_permit::consume_resources (1 samples, 0.02%)</title><rect x="255.9" y="261" width="0.2" height="15.0" fill="rgb(222,33,49)" rx="2" ry="2" />
<text  x="258.86" y="271.5" ></text>
</g>
<g >
<title>db::system_keyspace::make (1 samples, 0.02%)</title><rect x="16.9" y="421" width="0.2" height="15.0" fill="rgb(207,220,3)" rx="2" ry="2" />
<text  x="19.92" y="431.5" ></text>
</g>
<g >
<title>reader_permit::signal (1 samples, 0.02%)</title><rect x="201.4" y="309" width="0.2" height="15.0" fill="rgb(248,182,54)" rx="2" ry="2" />
<text  x="204.42" y="319.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::bool_class&lt;mutation_reader_merger::needs_merge_tag&gt; &gt;::take_value (1 samples, 0.02%)</title><rect x="194.3" y="373" width="0.2" height="15.0" fill="rgb(242,40,8)" rx="2" ry="2" />
<text  x="197.28" y="383.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (1 samples, 0.02%)</title><rect x="1146.7" y="517" width="0.2" height="15.0" fill="rgb(242,2,38)" rx="2" ry="2" />
<text  x="1149.72" y="527.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (3 samples, 0.06%)</title><rect x="41.2" y="421" width="0.7" height="15.0" fill="rgb(221,181,52)" rx="2" ry="2" />
<text  x="44.23" y="431.5" ></text>
</g>
<g >
<title>query::partition_slice::row_ranges (1 samples, 0.02%)</title><rect x="521.1" y="421" width="0.3" height="15.0" fill="rgb(225,31,41)" rx="2" ry="2" />
<text  x="524.13" y="431.5" ></text>
</g>
<g >
<title>memtable::find_or_create_partition_slow (7 samples, 0.13%)</title><rect x="1118.2" y="341" width="1.5" height="15.0" fill="rgb(242,217,25)" rx="2" ry="2" />
<text  x="1121.16" y="351.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::value_ptr&gt;::clear (1 samples, 0.02%)</title><rect x="727.3" y="485" width="0.2" height="15.0" fill="rgb(209,77,20)" rx="2" ry="2" />
<text  x="730.28" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::_M_check_len (1 samples, 0.02%)</title><rect x="46.4" y="373" width="0.2" height="15.0" fill="rgb(243,204,38)" rx="2" ry="2" />
<text  x="49.37" y="383.5" ></text>
</g>
<g >
<title>utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (5 samples, 0.09%)</title><rect x="779.9" y="245" width="1.1" height="15.0" fill="rgb(213,118,46)" rx="2" ry="2" />
<text  x="782.93" y="255.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (4 samples, 0.08%)</title><rect x="618.0" y="565" width="0.9" height="15.0" fill="rgb(232,211,14)" rx="2" ry="2" />
<text  x="620.96" y="575.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_slice_or_needs_filtering (3 samples, 0.06%)</title><rect x="639.2" y="501" width="0.6" height="15.0" fill="rgb(241,87,4)" rx="2" ry="2" />
<text  x="642.15" y="511.5" ></text>
</g>
<g >
<title>operator delete (9 samples, 0.17%)</title><rect x="152.3" y="533" width="2.0" height="15.0" fill="rgb(205,143,5)" rx="2" ry="2" />
<text  x="155.34" y="543.5" ></text>
</g>
<g >
<title>set_value&lt;ser::buffer_view&lt;bytes_ostream::fragment_iterator&gt; &gt; (2 samples, 0.04%)</title><rect x="1120.4" y="293" width="0.4" height="15.0" fill="rgb(240,195,31)" rx="2" ry="2" />
<text  x="1123.39" y="303.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (1 samples, 0.02%)</title><rect x="287.5" y="293" width="0.3" height="15.0" fill="rgb(215,18,27)" rx="2" ry="2" />
<text  x="290.54" y="303.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (2 samples, 0.04%)</title><rect x="670.4" y="549" width="0.4" height="15.0" fill="rgb(237,88,47)" rx="2" ry="2" />
<text  x="673.39" y="559.5" ></text>
</g>
<g >
<title>__tls_init (2 samples, 0.04%)</title><rect x="489.7" y="405" width="0.4" height="15.0" fill="rgb(227,144,7)" rx="2" ry="2" />
<text  x="492.67" y="415.5" ></text>
</g>
<g >
<title>std::optional&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::optional (1 samples, 0.02%)</title><rect x="59.3" y="405" width="0.2" height="15.0" fill="rgb(212,229,18)" rx="2" ry="2" />
<text  x="62.31" y="415.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::~partition_snapshot_flat_reader (1 samples, 0.02%)</title><rect x="568.4" y="437" width="0.3" height="15.0" fill="rgb(241,222,53)" rx="2" ry="2" />
<text  x="571.43" y="447.5" ></text>
</g>
<g >
<title>db::schema_tables::diff_table_or_view (1 samples, 0.02%)</title><rect x="105.7" y="565" width="0.2" height="15.0" fill="rgb(213,78,5)" rx="2" ry="2" />
<text  x="108.71" y="575.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (41 samples, 0.78%)</title><rect x="1117.0" y="533" width="9.2" height="15.0" fill="rgb(213,51,39)" rx="2" ry="2" />
<text  x="1120.04" y="543.5" ></text>
</g>
<g >
<title>seastar::future&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (8 samples, 0.15%)</title><rect x="779.3" y="309" width="1.7" height="15.0" fill="rgb(236,55,32)" rx="2" ry="2" />
<text  x="782.26" y="319.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::clone&lt;row::row (129 samples, 2.44%)</title><rect x="217.7" y="229" width="28.8" height="15.0" fill="rgb(214,49,49)" rx="2" ry="2" />
<text  x="220.71" y="239.5" >co..</text>
</g>
<g >
<title>service::digest_read_resolver::digest_read_resolver (10 samples, 0.19%)</title><rect x="973.6" y="405" width="2.2" height="15.0" fill="rgb(230,79,47)" rx="2" ry="2" />
<text  x="976.59" y="415.5" ></text>
</g>
<g >
<title>std::_Enable_default_constructor&lt;true, std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt;::_Enable_default_constructor (1 samples, 0.02%)</title><rect x="51.3" y="325" width="0.2" height="15.0" fill="rgb(234,192,11)" rx="2" ry="2" />
<text  x="54.27" y="335.5" ></text>
</g>
<g >
<title>bound_view::tri_compare::operator (1 samples, 0.02%)</title><rect x="102.4" y="421" width="0.2" height="15.0" fill="rgb(237,30,36)" rx="2" ry="2" />
<text  x="105.37" y="431.5" ></text>
</g>
<g >
<title>logalloc::segment::record_alloc (1 samples, 0.02%)</title><rect x="1118.6" y="229" width="0.2" height="15.0" fill="rgb(249,3,38)" rx="2" ry="2" />
<text  x="1121.61" y="239.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;query::result_memory_accounter&gt;::clear (2 samples, 0.04%)</title><rect x="136.3" y="549" width="0.4" height="15.0" fill="rgb(206,182,0)" rx="2" ry="2" />
<text  x="139.28" y="559.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (3 samples, 0.06%)</title><rect x="40.1" y="277" width="0.7" height="15.0" fill="rgb(238,186,38)" rx="2" ry="2" />
<text  x="43.12" y="287.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (195 samples, 3.69%)</title><rect x="20.9" y="517" width="43.5" height="15.0" fill="rgb(235,199,29)" rx="2" ry="2" />
<text  x="23.93" y="527.5" >seas..</text>
</g>
<g >
<title>query::result_memory_accounter::update_and_check (3 samples, 0.06%)</title><rect x="365.6" y="277" width="0.7" height="15.0" fill="rgb(219,154,42)" rx="2" ry="2" />
<text  x="368.63" y="287.5" ></text>
</g>
<g >
<title>std::hash&lt;auth::resource&gt;::operator (8 samples, 0.15%)</title><rect x="788.4" y="245" width="1.8" height="15.0" fill="rgb(231,77,28)" rx="2" ry="2" />
<text  x="791.41" y="255.5" ></text>
</g>
<g >
<title>std::type_info::operator== (1 samples, 0.02%)</title><rect x="1054.6" y="373" width="0.2" height="15.0" fill="rgb(246,197,6)" rx="2" ry="2" />
<text  x="1057.58" y="383.5" ></text>
</g>
<g >
<title>database::apply (2 samples, 0.04%)</title><rect x="1128.6" y="261" width="0.5" height="15.0" fill="rgb(219,159,52)" rx="2" ry="2" />
<text  x="1131.65" y="271.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::impl&gt;::_S_destroy&lt;seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::impl, mutation_fragment&gt; (3 samples, 0.06%)</title><rect x="313.2" y="389" width="0.7" height="15.0" fill="rgb(245,188,9)" rx="2" ry="2" />
<text  x="316.20" y="399.5" ></text>
</g>
<g >
<title>schema::column_at (3 samples, 0.06%)</title><rect x="252.5" y="213" width="0.7" height="15.0" fill="rgb(235,119,13)" rx="2" ry="2" />
<text  x="255.51" y="223.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_in_thread&lt;sstables::sstable_writer, flat_mutation_reader::no_filter&gt; (14 samples, 0.26%)</title><rect x="79.4" y="565" width="3.1" height="15.0" fill="rgb(222,71,20)" rx="2" ry="2" />
<text  x="82.39" y="575.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (2 samples, 0.04%)</title><rect x="85.2" y="613" width="0.4" height="15.0" fill="rgb(244,194,0)" rx="2" ry="2" />
<text  x="88.19" y="623.5" ></text>
</g>
<g >
<title>partition_entry::evict (1 samples, 0.02%)</title><rect x="1134.0" y="357" width="0.2" height="15.0" fill="rgb(230,229,36)" rx="2" ry="2" />
<text  x="1137.00" y="367.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (1 samples, 0.02%)</title><rect x="1133.6" y="581" width="0.2" height="15.0" fill="rgb(248,221,38)" rx="2" ry="2" />
<text  x="1136.55" y="591.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (14 samples, 0.26%)</title><rect x="79.4" y="629" width="3.1" height="15.0" fill="rgb(215,190,38)" rx="2" ry="2" />
<text  x="82.39" y="639.5" ></text>
</g>
<g >
<title>partition_snapshot::version_count (3 samples, 0.06%)</title><rect x="264.6" y="229" width="0.6" height="15.0" fill="rgb(231,220,54)" rx="2" ry="2" />
<text  x="267.56" y="239.5" ></text>
</g>
<g >
<title>dht::murmur3_partitioner::get_token (1 samples, 0.02%)</title><rect x="1128.0" y="277" width="0.2" height="15.0" fill="rgb(231,209,49)" rx="2" ry="2" />
<text  x="1130.98" y="287.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.02%)</title><rect x="54.8" y="181" width="0.3" height="15.0" fill="rgb(205,123,16)" rx="2" ry="2" />
<text  x="57.84" y="191.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.02%)</title><rect x="58.2" y="261" width="0.2" height="15.0" fill="rgb(212,2,30)" rx="2" ry="2" />
<text  x="61.19" y="271.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (2 samples, 0.04%)</title><rect x="416.7" y="293" width="0.5" height="15.0" fill="rgb(245,40,19)" rx="2" ry="2" />
<text  x="419.72" y="303.5" ></text>
</g>
<g >
<title>freeze (7 samples, 0.13%)</title><rect x="1129.3" y="293" width="1.6" height="15.0" fill="rgb(243,192,38)" rx="2" ry="2" />
<text  x="1132.32" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="66.7" y="389" width="0.2" height="15.0" fill="rgb(242,115,50)" rx="2" ry="2" />
<text  x="69.67" y="399.5" ></text>
</g>
<g >
<title>_asn1_remove_node (1 samples, 0.02%)</title><rect x="78.9" y="709" width="0.3" height="15.0" fill="rgb(224,24,0)" rx="2" ry="2" />
<text  x="81.94" y="719.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (2 samples, 0.04%)</title><rect x="1018.0" y="277" width="0.4" height="15.0" fill="rgb(238,185,51)" rx="2" ry="2" />
<text  x="1020.99" y="287.5" ></text>
</g>
<g >
<title>reader_permit::used_guard::~used_guard (1 samples, 0.02%)</title><rect x="112.6" y="565" width="0.3" height="15.0" fill="rgb(215,78,22)" rx="2" ry="2" />
<text  x="115.63" y="575.5" ></text>
</g>
<g >
<title>v3_columns::v3_columns (1 samples, 0.02%)</title><rect x="16.9" y="245" width="0.2" height="15.0" fill="rgb(223,187,36)" rx="2" ry="2" />
<text  x="19.92" y="255.5" ></text>
</g>
<g >
<title>operator new (6 samples, 0.11%)</title><rect x="457.3" y="341" width="1.4" height="15.0" fill="rgb(237,149,53)" rx="2" ry="2" />
<text  x="460.32" y="351.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;gms::inet_address, gms::inet_address, std::allocator&lt;gms::inet_address&gt;, std::__detail::_Identity, std::equal_to&lt;gms::inet_address&gt;, std::hash&lt;gms::inet_address&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert&lt;gms::inet_address const&amp;, std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;gms::inet_address, false&gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="17.4" y="437" width="0.2" height="15.0" fill="rgb(215,151,34)" rx="2" ry="2" />
<text  x="20.36" y="447.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (509 samples, 9.62%)</title><rect x="324.1" y="469" width="113.6" height="15.0" fill="rgb(250,81,50)" rx="2" ry="2" />
<text  x="327.13" y="479.5" >flat_mutation_..</text>
</g>
<g >
<title>flat_mutation_reader::consume_in_thread&lt;sstables::sstable_writer, flat_mutation_reader::no_filter&gt; (14 samples, 0.26%)</title><rect x="79.4" y="581" width="3.1" height="15.0" fill="rgb(238,102,34)" rx="2" ry="2" />
<text  x="82.39" y="591.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_get_map_allocator (1 samples, 0.02%)</title><rect x="24.5" y="293" width="0.2" height="15.0" fill="rgb(225,25,5)" rx="2" ry="2" />
<text  x="27.50" y="303.5" ></text>
</g>
<g >
<title>auth::standard_role_manager::create_metadata_tables_if_missing (1 samples, 0.02%)</title><rect x="677.1" y="549" width="0.2" height="15.0" fill="rgb(230,137,29)" rx="2" ry="2" />
<text  x="680.08" y="559.5" ></text>
</g>
<g >
<title>TLS init function for cql3::query_options::specific_options::DEFAULT (1 samples, 0.02%)</title><rect x="710.8" y="565" width="0.2" height="15.0" fill="rgb(229,48,17)" rx="2" ry="2" />
<text  x="713.77" y="575.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (2 samples, 0.04%)</title><rect x="836.2" y="421" width="0.4" height="15.0" fill="rgb(224,69,25)" rx="2" ry="2" />
<text  x="839.16" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="1050.6" y="421" width="0.2" height="15.0" fill="rgb(253,108,4)" rx="2" ry="2" />
<text  x="1053.56" y="431.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (1 samples, 0.02%)</title><rect x="1123.7" y="293" width="0.3" height="15.0" fill="rgb(253,40,4)" rx="2" ry="2" />
<text  x="1126.74" y="303.5" ></text>
</g>
<g >
<title>antlr3::CyclicDFA&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, cql3_parser::CqlLexer&gt;::predict&lt;cql3_parser::CqlLexerCyclicDFA44&gt; (5 samples, 0.09%)</title><rect x="33.0" y="341" width="1.1" height="15.0" fill="rgb(251,208,8)" rx="2" ry="2" />
<text  x="35.98" y="351.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;bytes_ostream::chunk, std::default_delete&lt;bytes_ostream::chunk&gt; &gt;::~unique_ptr (6 samples, 0.11%)</title><rect x="98.3" y="533" width="1.4" height="15.0" fill="rgb(244,182,31)" rx="2" ry="2" />
<text  x="101.35" y="543.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::visit&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (1 samples, 0.02%)</title><rect x="82.3" y="501" width="0.2" height="15.0" fill="rgb(251,75,51)" rx="2" ry="2" />
<text  x="85.29" y="511.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::digests_match (2 samples, 0.04%)</title><rect x="698.7" y="517" width="0.5" height="15.0" fill="rgb(237,76,0)" rx="2" ry="2" />
<text  x="701.72" y="527.5" ></text>
</g>
<g >
<title>cql3::query_processor::parse_statement (1 samples, 0.02%)</title><rect x="704.5" y="485" width="0.2" height="15.0" fill="rgb(213,119,10)" rx="2" ry="2" />
<text  x="707.52" y="495.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reclaiming_disabled&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::get_static_row (1 samples, 0.02%)</title><rect x="852.4" y="453" width="0.3" height="15.0" fill="rgb(233,113,54)" rx="2" ry="2" />
<text  x="855.44" y="463.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextToken (1 samples, 0.02%)</title><rect x="107.5" y="309" width="0.2" height="15.0" fill="rgb(218,20,42)" rx="2" ry="2" />
<text  x="110.50" y="319.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;, seastar::future&lt;void&gt; &gt;, std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;, seastar::future&lt;void&gt; &gt; &gt; &gt;::~unique_ptr (10 samples, 0.19%)</title><rect x="804.5" y="485" width="2.2" height="15.0" fill="rgb(242,220,28)" rx="2" ry="2" />
<text  x="807.48" y="495.5" ></text>
</g>
<g >
<title>utils::basic_ihistogram&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt; &gt;::mark&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; (1 samples, 0.02%)</title><rect x="1165.7" y="549" width="0.2" height="15.0" fill="rgb(210,39,45)" rx="2" ry="2" />
<text  x="1168.68" y="559.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::allocate_on (1 samples, 0.02%)</title><rect x="16.2" y="549" width="0.3" height="15.0" fill="rgb(231,211,37)" rx="2" ry="2" />
<text  x="19.25" y="559.5" ></text>
</g>
<g >
<title>lister::visit (1 samples, 0.02%)</title><rect x="850.0" y="501" width="0.2" height="15.0" fill="rgb(248,16,45)" rx="2" ry="2" />
<text  x="852.99" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt;::emplace_back&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; (9 samples, 0.17%)</title><rect x="280.4" y="309" width="2.0" height="15.0" fill="rgb(213,53,32)" rx="2" ry="2" />
<text  x="283.40" y="319.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::fillBuffer (1 samples, 0.02%)</title><rect x="704.5" y="341" width="0.2" height="15.0" fill="rgb(248,195,37)" rx="2" ry="2" />
<text  x="707.52" y="351.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (1 samples, 0.02%)</title><rect x="704.5" y="421" width="0.2" height="15.0" fill="rgb(237,187,36)" rx="2" ry="2" />
<text  x="707.52" y="431.5" ></text>
</g>
<g >
<title>std::move&lt;std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;&gt; (1 samples, 0.02%)</title><rect x="50.8" y="341" width="0.3" height="15.0" fill="rgb(241,65,38)" rx="2" ry="2" />
<text  x="53.83" y="351.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;std::function&lt;std::function&lt;partition_presence_checker_result  (4 samples, 0.08%)</title><rect x="615.7" y="501" width="0.9" height="15.0" fill="rgb(234,223,2)" rx="2" ry="2" />
<text  x="618.73" y="511.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.04%)</title><rect x="659.9" y="565" width="0.4" height="15.0" fill="rgb(249,129,38)" rx="2" ry="2" />
<text  x="662.90" y="575.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="83.0" y="693" width="0.2" height="15.0" fill="rgb(254,164,38)" rx="2" ry="2" />
<text  x="85.96" y="703.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;schema const&gt;::operator= (1 samples, 0.02%)</title><rect x="1128.2" y="261" width="0.2" height="15.0" fill="rgb(235,36,9)" rx="2" ry="2" />
<text  x="1131.20" y="271.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="652.5" y="581" width="0.3" height="15.0" fill="rgb(222,151,51)" rx="2" ry="2" />
<text  x="655.54" y="591.5" ></text>
</g>
<g >
<title>logalloc::region_impl::alloc (1 samples, 0.02%)</title><rect x="1118.6" y="261" width="0.2" height="15.0" fill="rgb(210,134,54)" rx="2" ry="2" />
<text  x="1121.61" y="271.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::clear (1 samples, 0.02%)</title><rect x="820.8" y="533" width="0.2" height="15.0" fill="rgb(222,194,9)" rx="2" ry="2" />
<text  x="823.76" y="543.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (3 samples, 0.06%)</title><rect x="747.4" y="405" width="0.6" height="15.0" fill="rgb(240,83,3)" rx="2" ry="2" />
<text  x="750.36" y="415.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, flat_mutation_reader, reader_concurrency_semaphore::inactive_read_handle&gt;::~_Variant_storage (2 samples, 0.04%)</title><rect x="611.5" y="533" width="0.4" height="15.0" fill="rgb(237,30,29)" rx="2" ry="2" />
<text  x="614.49" y="543.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (1 samples, 0.02%)</title><rect x="1104.1" y="501" width="0.2" height="15.0" fill="rgb(254,204,16)" rx="2" ry="2" />
<text  x="1107.10" y="511.5" ></text>
</g>
<g >
<title>database::find_schema (1 samples, 0.02%)</title><rect x="17.1" y="421" width="0.3" height="15.0" fill="rgb(241,88,36)" rx="2" ry="2" />
<text  x="20.14" y="431.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="895.9" y="453" width="0.3" height="15.0" fill="rgb(214,84,36)" rx="2" ry="2" />
<text  x="898.95" y="463.5" ></text>
</g>
<g >
<title>seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::expand (8 samples, 0.15%)</title><rect x="505.3" y="325" width="1.8" height="15.0" fill="rgb(211,159,46)" rx="2" ry="2" />
<text  x="508.29" y="335.5" ></text>
</g>
<g >
<title>locator::effective_replication_map::get_natural_endpoints_without_node_being_replaced (2 samples, 0.04%)</title><rect x="1056.6" y="421" width="0.4" height="15.0" fill="rgb(254,199,12)" rx="2" ry="2" />
<text  x="1059.58" y="431.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::clear (1 samples, 0.02%)</title><rect x="941.5" y="501" width="0.2" height="15.0" fill="rgb(224,135,2)" rx="2" ry="2" />
<text  x="944.46" y="511.5" ></text>
</g>
<g >
<title>auth::service::start (1 samples, 0.02%)</title><rect x="677.1" y="581" width="0.2" height="15.0" fill="rgb(240,135,5)" rx="2" ry="2" />
<text  x="680.08" y="591.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (4 samples, 0.08%)</title><rect x="885.9" y="341" width="0.9" height="15.0" fill="rgb(228,44,13)" rx="2" ry="2" />
<text  x="888.91" y="351.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, enum_set&lt;super_enum&lt;auth::permission,  (1 samples, 0.02%)</title><rect x="795.1" y="357" width="0.2" height="15.0" fill="rgb(240,33,51)" rx="2" ry="2" />
<text  x="798.10" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (5 samples, 0.09%)</title><rect x="281.1" y="261" width="1.1" height="15.0" fill="rgb(244,79,43)" rx="2" ry="2" />
<text  x="284.07" y="271.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (1 samples, 0.02%)</title><rect x="1123.3" y="309" width="0.2" height="15.0" fill="rgb(221,48,19)" rx="2" ry="2" />
<text  x="1126.29" y="319.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (2 samples, 0.04%)</title><rect x="53.7" y="133" width="0.5" height="15.0" fill="rgb(249,39,36)" rx="2" ry="2" />
<text  x="56.73" y="143.5" ></text>
</g>
<g >
<title>mutation_fragment_stream_validating_filter::on_end_of_partition (1 samples, 0.02%)</title><rect x="82.1" y="501" width="0.2" height="15.0" fill="rgb(233,15,51)" rx="2" ry="2" />
<text  x="85.06" y="511.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="616.0" y="469" width="0.2" height="15.0" fill="rgb(241,183,20)" rx="2" ry="2" />
<text  x="618.95" y="479.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (4 samples, 0.08%)</title><rect x="52.4" y="341" width="0.9" height="15.0" fill="rgb(248,211,10)" rx="2" ry="2" />
<text  x="55.39" y="351.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::_M_create_storage (2 samples, 0.04%)</title><rect x="155.9" y="517" width="0.5" height="15.0" fill="rgb(238,114,48)" rx="2" ry="2" />
<text  x="158.91" y="527.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const*, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;*&gt; (5 samples, 0.09%)</title><rect x="791.5" y="325" width="1.2" height="15.0" fill="rgb(225,221,25)" rx="2" ry="2" />
<text  x="794.54" y="335.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.04%)</title><rect x="855.3" y="437" width="0.5" height="15.0" fill="rgb(246,131,33)" rx="2" ry="2" />
<text  x="858.34" y="447.5" ></text>
</g>
<g >
<title>service::storage_proxy::create_write_response_handler_helper (5 samples, 0.09%)</title><rect x="1131.1" y="309" width="1.1" height="15.0" fill="rgb(224,4,33)" rx="2" ry="2" />
<text  x="1134.10" y="319.5" ></text>
</g>
<g >
<title>validation::validate_column_family (3 samples, 0.06%)</title><rect x="74.5" y="549" width="0.6" height="15.0" fill="rgb(248,221,40)" rx="2" ry="2" />
<text  x="77.48" y="559.5" ></text>
</g>
<g >
<title>std::apply&lt;service::client_state::has_column_family_access (8 samples, 0.15%)</title><rect x="75.8" y="549" width="1.8" height="15.0" fill="rgb(248,94,46)" rx="2" ry="2" />
<text  x="78.82" y="559.5" ></text>
</g>
<g >
<title>std::default_delete&lt;compact_for_query&lt; (1 samples, 0.02%)</title><rect x="434.8" y="373" width="0.2" height="15.0" fill="rgb(212,209,10)" rx="2" ry="2" />
<text  x="437.79" y="383.5" ></text>
</g>
<g >
<title>db::system_keyspace::update_compaction_history (1 samples, 0.02%)</title><rect x="704.5" y="565" width="0.2" height="15.0" fill="rgb(238,224,51)" rx="2" ry="2" />
<text  x="707.52" y="575.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate (29 samples, 0.55%)</title><rect x="880.8" y="389" width="6.4" height="15.0" fill="rgb(250,123,22)" rx="2" ry="2" />
<text  x="883.78" y="399.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;dht::token, std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt;, std::allocator&lt;std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;dht::token&gt;, std::hash&lt;dht::token&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (15 samples, 0.28%)</title><rect x="1069.1" y="357" width="3.3" height="15.0" fill="rgb(252,128,22)" rx="2" ry="2" />
<text  x="1072.08" y="367.5" ></text>
</g>
<g >
<title>cql3::expr::prepare_term (9 samples, 0.17%)</title><rect x="65.3" y="501" width="2.0" height="15.0" fill="rgb(235,191,47)" rx="2" ry="2" />
<text  x="68.33" y="511.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (1 samples, 0.02%)</title><rect x="789.8" y="165" width="0.2" height="15.0" fill="rgb(246,8,15)" rx="2" ry="2" />
<text  x="792.75" y="175.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.02%)</title><rect x="40.8" y="341" width="0.2" height="15.0" fill="rgb(218,133,39)" rx="2" ry="2" />
<text  x="43.79" y="351.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.02%)</title><rect x="42.1" y="421" width="0.3" height="15.0" fill="rgb(239,120,4)" rx="2" ry="2" />
<text  x="45.13" y="431.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;query::result&gt;::operator= (1 samples, 0.02%)</title><rect x="696.0" y="517" width="0.3" height="15.0" fill="rgb(217,5,39)" rx="2" ry="2" />
<text  x="699.05" y="527.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;mutation_reader_merger::operator (30 samples, 0.57%)</title><rect x="290.0" y="405" width="6.7" height="15.0" fill="rgb(224,179,3)" rx="2" ry="2" />
<text  x="293.00" y="415.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::raw::modification_statement, std::default_delete&lt;cql3::statements::raw::modification_statement&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="62.2" y="453" width="0.2" height="15.0" fill="rgb(220,79,40)" rx="2" ry="2" />
<text  x="65.21" y="463.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_allocate_node (2 samples, 0.04%)</title><rect x="23.6" y="341" width="0.5" height="15.0" fill="rgb(206,37,21)" rx="2" ry="2" />
<text  x="26.61" y="351.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::set_callback (2 samples, 0.04%)</title><rect x="848.7" y="581" width="0.4" height="15.0" fill="rgb(219,140,51)" rx="2" ry="2" />
<text  x="851.65" y="591.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (46 samples, 0.87%)</title><rect x="125.3" y="517" width="10.3" height="15.0" fill="rgb(206,152,40)" rx="2" ry="2" />
<text  x="128.35" y="527.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.02%)</title><rect x="47.5" y="213" width="0.2" height="15.0" fill="rgb(237,172,41)" rx="2" ry="2" />
<text  x="50.48" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (1 samples, 0.02%)</title><rect x="26.7" y="293" width="0.3" height="15.0" fill="rgb(248,226,7)" rx="2" ry="2" />
<text  x="29.73" y="303.5" ></text>
</g>
<g >
<title>operator delete (6 samples, 0.11%)</title><rect x="1098.5" y="517" width="1.4" height="15.0" fill="rgb(253,21,44)" rx="2" ry="2" />
<text  x="1101.53" y="527.5" ></text>
</g>
<g >
<title>std::optional&lt;query::querier&lt; (8 samples, 0.15%)</title><rect x="613.1" y="533" width="1.7" height="15.0" fill="rgb(220,135,2)" rx="2" ry="2" />
<text  x="616.05" y="543.5" ></text>
</g>
<g >
<title>flat_mutation_reader::close (115 samples, 2.17%)</title><rect x="552.6" y="501" width="25.6" height="15.0" fill="rgb(217,37,49)" rx="2" ry="2" />
<text  x="555.59" y="511.5" >f..</text>
</g>
<g >
<title>mutation_fragment::consume&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (1 samples, 0.02%)</title><rect x="1165.2" y="405" width="0.3" height="15.0" fill="rgb(226,132,1)" rx="2" ry="2" />
<text  x="1168.24" y="415.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (5 samples, 0.09%)</title><rect x="327.5" y="373" width="1.1" height="15.0" fill="rgb(234,118,52)" rx="2" ry="2" />
<text  x="330.48" y="383.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_next (84 samples, 1.59%)</title><rect x="176.4" y="405" width="18.8" height="15.0" fill="rgb(230,113,9)" rx="2" ry="2" />
<text  x="179.44" y="415.5" ></text>
</g>
<g >
<title>abstract_type::compare (1 samples, 0.02%)</title><rect x="106.8" y="341" width="0.3" height="15.0" fill="rgb(213,158,21)" rx="2" ry="2" />
<text  x="109.83" y="351.5" ></text>
</g>
<g >
<title>seastar::future&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (2 samples, 0.04%)</title><rect x="76.5" y="373" width="0.4" height="15.0" fill="rgb(222,79,27)" rx="2" ry="2" />
<text  x="79.49" y="383.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (2 samples, 0.04%)</title><rect x="193.8" y="357" width="0.5" height="15.0" fill="rgb(218,150,39)" rx="2" ry="2" />
<text  x="196.84" y="367.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_9c4051607141ccef88a5c0c6888f804fb0de85a9] (2 samples, 0.04%)</title><rect x="812.5" y="389" width="0.5" height="15.0" fill="rgb(242,123,11)" rx="2" ry="2" />
<text  x="815.51" y="399.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (35 samples, 0.66%)</title><rect x="782.4" y="277" width="7.8" height="15.0" fill="rgb(211,126,3)" rx="2" ry="2" />
<text  x="785.39" y="287.5" ></text>
</g>
<g >
<title>bplus::node&lt;long, intrusive_array&lt;memtable_entry&gt;, dht::raw_token_less_comparator, 16ul,  (2 samples, 0.04%)</title><rect x="1118.8" y="245" width="0.5" height="15.0" fill="rgb(251,31,8)" rx="2" ry="2" />
<text  x="1121.83" y="255.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.02%)</title><rect x="54.8" y="197" width="0.3" height="15.0" fill="rgb(216,156,50)" rx="2" ry="2" />
<text  x="57.84" y="207.5" ></text>
</g>
<g >
<title>mutation_partition::apply_monotonically (1 samples, 0.02%)</title><rect x="1123.7" y="325" width="0.3" height="15.0" fill="rgb(253,70,18)" rx="2" ry="2" />
<text  x="1126.74" y="335.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::waiting_for (3 samples, 0.06%)</title><rect x="699.2" y="517" width="0.6" height="15.0" fill="rgb(254,218,3)" rx="2" ry="2" />
<text  x="702.17" y="527.5" ></text>
</g>
<g >
<title>__dynamic_cast (1 samples, 0.02%)</title><rect x="67.8" y="501" width="0.2" height="15.0" fill="rgb(251,15,9)" rx="2" ry="2" />
<text  x="70.78" y="511.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_Optional_payload_base (5 samples, 0.09%)</title><rect x="1024.5" y="357" width="1.1" height="15.0" fill="rgb(240,50,17)" rx="2" ry="2" />
<text  x="1027.46" y="367.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::storage_proxy::send_to_live_endpoints (5 samples, 0.09%)</title><rect x="703.4" y="597" width="1.1" height="15.0" fill="rgb(205,138,31)" rx="2" ry="2" />
<text  x="706.41" y="607.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (41 samples, 0.78%)</title><rect x="1117.0" y="469" width="9.2" height="15.0" fill="rgb(230,80,15)" rx="2" ry="2" />
<text  x="1120.04" y="479.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.02%)</title><rect x="41.5" y="229" width="0.2" height="15.0" fill="rgb(220,121,2)" rx="2" ry="2" />
<text  x="44.46" y="239.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="79.6" y="389" width="0.2" height="15.0" fill="rgb(219,211,2)" rx="2" ry="2" />
<text  x="82.61" y="399.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::range_tombstone_accumulator (11 samples, 0.21%)</title><rect x="544.1" y="485" width="2.5" height="15.0" fill="rgb(233,129,26)" rx="2" ry="2" />
<text  x="547.11" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.06%)</title><rect x="767.0" y="389" width="0.7" height="15.0" fill="rgb(226,128,53)" rx="2" ry="2" />
<text  x="769.99" y="399.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::do_flush (1,154 samples, 21.82%)</title><rect x="859.6" y="581" width="257.4" height="15.0" fill="rgb(232,121,19)" rx="2" ry="2" />
<text  x="862.58" y="591.5" >seastar::concrete_execution_stage&lt;..</text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_in_thread&lt;sstables::sstable_writer, flat_mutation_reader::no_filter&gt; (1 samples, 0.02%)</title><rect x="676.0" y="373" width="0.2" height="15.0" fill="rgb(212,209,43)" rx="2" ry="2" />
<text  x="678.97" y="383.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (1 samples, 0.02%)</title><rect x="790.4" y="309" width="0.2" height="15.0" fill="rgb(245,182,20)" rx="2" ry="2" />
<text  x="793.42" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="97.7" y="533" width="0.2" height="15.0" fill="rgb(224,37,41)" rx="2" ry="2" />
<text  x="100.68" y="543.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_reserve_map_at_back (1 samples, 0.02%)</title><rect x="24.5" y="341" width="0.2" height="15.0" fill="rgb(230,180,13)" rx="2" ry="2" />
<text  x="27.50" y="351.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.02%)</title><rect x="877.7" y="405" width="0.2" height="15.0" fill="rgb(235,0,41)" rx="2" ry="2" />
<text  x="880.65" y="415.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::execute (303 samples, 5.73%)</title><rect x="964.0" y="453" width="67.6" height="15.0" fill="rgb(233,70,8)" rx="2" ry="2" />
<text  x="967.00" y="463.5" >service..</text>
</g>
<g >
<title>seastar::repeat&lt;flat_mutation_reader::impl::consume_pausable&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (470 samples, 8.89%)</title><rect x="329.0" y="389" width="104.9" height="15.0" fill="rgb(219,6,47)" rx="2" ry="2" />
<text  x="332.04" y="399.5" >seastar::rep..</text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="41.9" y="309" width="0.2" height="15.0" fill="rgb(243,131,10)" rx="2" ry="2" />
<text  x="44.90" y="319.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::term (41 samples, 0.78%)</title><rect x="47.0" y="405" width="9.2" height="15.0" fill="rgb(235,189,19)" rx="2" ry="2" />
<text  x="50.04" y="415.5" ></text>
</g>
<g >
<title>database::find_schema (25 samples, 0.47%)</title><rect x="744.7" y="501" width="5.6" height="15.0" fill="rgb(223,10,40)" rx="2" ry="2" />
<text  x="747.68" y="511.5" ></text>
</g>
<g >
<title>frozen_mutation::frozen_mutation (7 samples, 0.13%)</title><rect x="1129.3" y="277" width="1.6" height="15.0" fill="rgb(225,3,13)" rx="2" ry="2" />
<text  x="1132.32" y="287.5" ></text>
</g>
<g >
<title>database::find_uuid (18 samples, 0.34%)</title><rect x="746.2" y="485" width="4.1" height="15.0" fill="rgb(208,141,54)" rx="2" ry="2" />
<text  x="749.25" y="495.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::get (1 samples, 0.02%)</title><rect x="354.3" y="293" width="0.2" height="15.0" fill="rgb(252,48,19)" rx="2" ry="2" />
<text  x="357.25" y="303.5" ></text>
</g>
<g >
<title>table::do_apply&lt;frozen_mutation const&amp;, seastar::lw_shared_ptr&lt;schema const&gt; const&amp;&gt; (31 samples, 0.59%)</title><rect x="1117.5" y="373" width="6.9" height="15.0" fill="rgb(230,214,53)" rx="2" ry="2" />
<text  x="1120.49" y="383.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt;  (4 samples, 0.08%)</title><rect x="16.0" y="661" width="0.9" height="15.0" fill="rgb(209,50,51)" rx="2" ry="2" />
<text  x="19.02" y="671.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::set_urgent_state (4 samples, 0.08%)</title><rect x="628.4" y="581" width="0.9" height="15.0" fill="rgb(230,111,1)" rx="2" ry="2" />
<text  x="631.45" y="591.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;cql_transport::messages::result_message::rows, false&gt;::make&lt;cql3::result&gt; (8 samples, 0.15%)</title><rect x="644.5" y="565" width="1.8" height="15.0" fill="rgb(214,64,52)" rx="2" ry="2" />
<text  x="647.51" y="575.5" ></text>
</g>
<g >
<title>tests::random::get_int&lt;unsigned long&gt; (8 samples, 0.15%)</title><rect x="846.9" y="565" width="1.8" height="15.0" fill="rgb(245,166,42)" rx="2" ry="2" />
<text  x="849.87" y="575.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="615.1" y="533" width="0.2" height="15.0" fill="rgb(222,193,32)" rx="2" ry="2" />
<text  x="618.06" y="543.5" ></text>
</g>
<g >
<title>memtable::upgrade_entry (1 samples, 0.02%)</title><rect x="521.8" y="437" width="0.2" height="15.0" fill="rgb(245,88,48)" rx="2" ry="2" />
<text  x="524.80" y="447.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mI (1 samples, 0.02%)</title><rect x="704.5" y="261" width="0.2" height="15.0" fill="rgb(235,209,7)" rx="2" ry="2" />
<text  x="707.52" y="271.5" ></text>
</g>
<g >
<title>std::apply&lt;service::storage_proxy::query_nonsingular_mutations_locally (1 samples, 0.02%)</title><rect x="105.9" y="469" width="0.3" height="15.0" fill="rgb(254,88,22)" rx="2" ry="2" />
<text  x="108.93" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.08%)</title><rect x="593.0" y="453" width="0.9" height="15.0" fill="rgb(211,165,26)" rx="2" ry="2" />
<text  x="595.97" y="463.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::cql_statement&gt;::~shared_ptr (2 samples, 0.04%)</title><rect x="821.2" y="533" width="0.5" height="15.0" fill="rgb(205,179,7)" rx="2" ry="2" />
<text  x="824.21" y="543.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (1 samples, 0.02%)</title><rect x="811.6" y="389" width="0.2" height="15.0" fill="rgb(252,63,5)" rx="2" ry="2" />
<text  x="814.61" y="399.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.02%)</title><rect x="37.7" y="405" width="0.2" height="15.0" fill="rgb(210,54,5)" rx="2" ry="2" />
<text  x="40.66" y="415.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::schedule&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::make_data_requests (2 samples, 0.04%)</title><rect x="977.6" y="389" width="0.5" height="15.0" fill="rgb(237,8,21)" rx="2" ry="2" />
<text  x="980.60" y="399.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (5 samples, 0.09%)</title><rect x="717.9" y="485" width="1.1" height="15.0" fill="rgb(228,81,53)" rx="2" ry="2" />
<text  x="720.91" y="495.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (3 samples, 0.06%)</title><rect x="54.2" y="309" width="0.6" height="15.0" fill="rgb(213,198,27)" rx="2" ry="2" />
<text  x="57.17" y="319.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.02%)</title><rect x="37.4" y="229" width="0.3" height="15.0" fill="rgb(246,186,15)" rx="2" ry="2" />
<text  x="40.44" y="239.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_map&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::at&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt; &gt; (1 samples, 0.02%)</title><rect x="17.1" y="389" width="0.3" height="15.0" fill="rgb(214,104,41)" rx="2" ry="2" />
<text  x="20.14" y="399.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::get_static_row (1 samples, 0.02%)</title><rect x="852.4" y="469" width="0.3" height="15.0" fill="rgb(233,30,21)" rx="2" ry="2" />
<text  x="855.44" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (5 samples, 0.09%)</title><rect x="978.7" y="341" width="1.1" height="15.0" fill="rgb(246,28,2)" rx="2" ry="2" />
<text  x="981.72" y="351.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;db::rp_handle&gt;::take_value (1 samples, 0.02%)</title><rect x="1126.0" y="421" width="0.2" height="15.0" fill="rgb(237,102,41)" rx="2" ry="2" />
<text  x="1128.97" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (1 samples, 0.02%)</title><rect x="139.4" y="549" width="0.2" height="15.0" fill="rgb(221,18,4)" rx="2" ry="2" />
<text  x="142.40" y="559.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (1 samples, 0.02%)</title><rect x="701.4" y="501" width="0.2" height="15.0" fill="rgb(216,119,0)" rx="2" ry="2" />
<text  x="704.40" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value, std::allocator&lt;cql3::raw_value&gt; &gt;::_M_range_initialize&lt;cql3::raw_value const*&gt; (4 samples, 0.08%)</title><rect x="845.7" y="549" width="0.9" height="15.0" fill="rgb(212,205,34)" rx="2" ry="2" />
<text  x="848.75" y="559.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (1 samples, 0.02%)</title><rect x="261.0" y="245" width="0.2" height="15.0" fill="rgb(217,218,38)" rx="2" ry="2" />
<text  x="263.99" y="255.5" ></text>
</g>
<g >
<title>compound_wrapper&lt;clustering_key_prefix, clustering_key_prefix_view&gt;::begin (1 samples, 0.02%)</title><rect x="857.4" y="277" width="0.2" height="15.0" fill="rgb(205,126,11)" rx="2" ry="2" />
<text  x="860.35" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="793.5" y="325" width="0.3" height="15.0" fill="rgb(213,174,6)" rx="2" ry="2" />
<text  x="796.54" y="335.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::~partition_snapshot_flat_reader (51 samples, 0.96%)</title><rect x="555.9" y="421" width="11.4" height="15.0" fill="rgb(226,200,49)" rx="2" ry="2" />
<text  x="558.94" y="431.5" ></text>
</g>
<g >
<title>service::client_state::ensure_has_permission (7 samples, 0.13%)</title><rect x="76.0" y="517" width="1.6" height="15.0" fill="rgb(248,46,28)" rx="2" ry="2" />
<text  x="79.04" y="527.5" ></text>
</g>
<g >
<title>__tls_init (1 samples, 0.02%)</title><rect x="527.2" y="405" width="0.2" height="15.0" fill="rgb(213,103,41)" rx="2" ry="2" />
<text  x="530.16" y="415.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::default_delete&lt;cql3::operation::raw_update&gt;, true&gt;::_Head_base&lt;std::default_delete&lt;cql3::operation::raw_update&gt; &gt; (1 samples, 0.02%)</title><rect x="46.6" y="229" width="0.2" height="15.0" fill="rgb(252,199,22)" rx="2" ry="2" />
<text  x="49.59" y="239.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.02%)</title><rect x="40.8" y="309" width="0.2" height="15.0" fill="rgb(238,131,22)" rx="2" ry="2" />
<text  x="43.79" y="319.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_legacy_schema_migrator.cc (1 samples, 0.02%)</title><rect x="83.2" y="709" width="0.2" height="15.0" fill="rgb(248,174,5)" rx="2" ry="2" />
<text  x="86.18" y="719.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;std::function&lt;flat_mutation_reader  (1 samples, 0.02%)</title><rect x="616.6" y="517" width="0.2" height="15.0" fill="rgb(244,69,53)" rx="2" ry="2" />
<text  x="619.62" y="527.5" ></text>
</g>
<g >
<title>schema::get_sharder (4 samples, 0.08%)</title><rect x="991.4" y="373" width="0.9" height="15.0" fill="rgb(236,203,34)" rx="2" ry="2" />
<text  x="994.44" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.08%)</title><rect x="1026.5" y="325" width="0.9" height="15.0" fill="rgb(227,173,50)" rx="2" ry="2" />
<text  x="1029.46" y="335.5" ></text>
</g>
<g >
<title>_ZSt5applyIZN7seastar8internal12do_with_implISt4pairIN4auth17role_or_anonymousENS4_8resourceEEZNS4_17permissions_cache3getERKS5_RKS6_E3$_0JEEEDaOT_OT0_DpOT1_EUlDpOT_E_St5tupleIJOS7_EEEDcSF_SH_ (1 samples, 0.02%)</title><rect x="774.6" y="373" width="0.2" height="15.0" fill="rgb(229,103,32)" rx="2" ry="2" />
<text  x="777.58" y="383.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.02%)</title><rect x="24.7" y="309" width="0.2" height="15.0" fill="rgb(254,115,45)" rx="2" ry="2" />
<text  x="27.72" y="319.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;void&gt; &gt;::invoke&lt;seastar::create_scheduling_group (1 samples, 0.02%)</title><rect x="107.9" y="549" width="0.3" height="15.0" fill="rgb(226,62,44)" rx="2" ry="2" />
<text  x="110.94" y="559.5" ></text>
</g>
<g >
<title>utils::basic_ihistogram&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt; &gt;::mark&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; (5 samples, 0.09%)</title><rect x="665.5" y="549" width="1.1" height="15.0" fill="rgb(219,168,35)" rx="2" ry="2" />
<text  x="668.48" y="559.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;service::query_state, false&gt;::make&lt;service::client_state&amp;, service_permit&gt; (5 samples, 0.09%)</title><rect x="832.8" y="517" width="1.1" height="15.0" fill="rgb(250,227,15)" rx="2" ry="2" />
<text  x="835.81" y="527.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.02%)</title><rect x="82.7" y="501" width="0.3" height="15.0" fill="rgb(221,8,10)" rx="2" ry="2" />
<text  x="85.73" y="511.5" ></text>
</g>
<g >
<title>database::find_schema (6 samples, 0.11%)</title><rect x="744.9" y="485" width="1.3" height="15.0" fill="rgb(237,84,31)" rx="2" ry="2" />
<text  x="747.91" y="495.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (1 samples, 0.02%)</title><rect x="1165.2" y="501" width="0.3" height="15.0" fill="rgb(248,177,52)" rx="2" ry="2" />
<text  x="1168.24" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, unsigned int, std::_Identity&lt;unsigned int&gt;, std::less&lt;unsigned int&gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;unsigned int&gt; &gt;::_M_end (1 samples, 0.02%)</title><rect x="35.2" y="389" width="0.2" height="15.0" fill="rgb(226,205,11)" rx="2" ry="2" />
<text  x="38.21" y="399.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (1 samples, 0.02%)</title><rect x="599.9" y="533" width="0.2" height="15.0" fill="rgb(222,221,21)" rx="2" ry="2" />
<text  x="602.89" y="543.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;gms::inet_address, gms::inet_address, std::allocator&lt;gms::inet_address&gt;, std::__detail::_Identity, std::equal_to&lt;gms::inet_address&gt;, std::hash&lt;gms::inet_address&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_Hashtable&lt;boost::iterators::transform_iterator&lt;boost::range_detail::select_second_const&lt;std::unordered_map&lt;dht::token, gms::inet_address, std::hash&lt;dht::token&gt;, std::equal_to&lt;dht::token&gt;, std::allocator&lt;std::pair&lt;dht::token const, gms::inet_address&gt; &gt; &gt; &gt;, std::__detail::_Node_const_iterator&lt;std::pair&lt;dht::token const, gms::inet_address&gt;, false, true&gt;, boost::use_default, boost::use_default&gt; &gt; (1 samples, 0.02%)</title><rect x="17.4" y="453" width="0.2" height="15.0" fill="rgb(252,16,49)" rx="2" ry="2" />
<text  x="20.36" y="463.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::key_is_in_relation (4 samples, 0.08%)</title><rect x="939.2" y="485" width="0.9" height="15.0" fill="rgb(248,181,32)" rx="2" ry="2" />
<text  x="942.23" y="495.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (2 samples, 0.04%)</title><rect x="919.2" y="485" width="0.4" height="15.0" fill="rgb(224,145,9)" rx="2" ry="2" />
<text  x="922.15" y="495.5" ></text>
</g>
<g >
<title>db::schema_tables::with_merge_lock (1 samples, 0.02%)</title><rect x="17.1" y="533" width="0.3" height="15.0" fill="rgb(240,46,27)" rx="2" ry="2" />
<text  x="20.14" y="543.5" ></text>
</g>
<g >
<title>cql3::statements::raw::update_statement::prepare_internal (40 samples, 0.76%)</title><rect x="64.4" y="533" width="9.0" height="15.0" fill="rgb(223,71,11)" rx="2" ry="2" />
<text  x="67.44" y="543.5" ></text>
</g>
<g >
<title>utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::get_or_load&lt;utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (28 samples, 0.53%)</title><rect x="731.7" y="469" width="6.3" height="15.0" fill="rgb(248,92,12)" rx="2" ry="2" />
<text  x="734.74" y="479.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_map&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::at&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt; &gt; (22 samples, 0.42%)</title><rect x="1039.4" y="421" width="4.9" height="15.0" fill="rgb(241,74,17)" rx="2" ry="2" />
<text  x="1042.40" y="431.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const*, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;*&gt; (2 samples, 0.04%)</title><rect x="770.1" y="405" width="0.5" height="15.0" fill="rgb(231,166,1)" rx="2" ry="2" />
<text  x="773.12" y="415.5" ></text>
</g>
<g >
<title>service::abstract_read_resolver::abstract_read_resolver (7 samples, 0.13%)</title><rect x="974.3" y="389" width="1.5" height="15.0" fill="rgb(247,43,45)" rx="2" ry="2" />
<text  x="977.26" y="399.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.02%)</title><rect x="82.7" y="661" width="0.3" height="15.0" fill="rgb(229,61,4)" rx="2" ry="2" />
<text  x="85.73" y="671.5" ></text>
</g>
<g >
<title>double_decker&lt;long, cache_entry, dht::raw_token_less_comparator, dht::ring_position_comparator, 16,  (1 samples, 0.02%)</title><rect x="10.7" y="645" width="0.2" height="15.0" fill="rgb(219,73,14)" rx="2" ry="2" />
<text  x="13.67" y="655.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (1 samples, 0.02%)</title><rect x="471.2" y="389" width="0.2" height="15.0" fill="rgb(230,144,7)" rx="2" ry="2" />
<text  x="474.16" y="399.5" ></text>
</g>
<g >
<title>database::has_keyspace (22 samples, 0.42%)</title><rect x="825.2" y="517" width="4.9" height="15.0" fill="rgb(234,81,40)" rx="2" ry="2" />
<text  x="828.22" y="527.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_requests (249 samples, 4.71%)</title><rect x="976.0" y="437" width="55.6" height="15.0" fill="rgb(216,86,30)" rx="2" ry="2" />
<text  x="979.04" y="447.5" >servi..</text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::find (1 samples, 0.02%)</title><rect x="939.9" y="469" width="0.2" height="15.0" fill="rgb(214,22,34)" rx="2" ry="2" />
<text  x="942.90" y="479.5" ></text>
</g>
<g >
<title>schema_registry::get_entry (15 samples, 0.28%)</title><rect x="956.9" y="437" width="3.3" height="15.0" fill="rgb(243,88,6)" rx="2" ry="2" />
<text  x="959.86" y="447.5" ></text>
</g>
<g >
<title>boost::intrusive::bstree_algorithms&lt;boost::intrusive::rbtree_node_traits&lt;void*, false&gt; &gt;::swap_tree (1 samples, 0.02%)</title><rect x="1118.2" y="149" width="0.2" height="15.0" fill="rgb(207,219,6)" rx="2" ry="2" />
<text  x="1121.16" y="159.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (2 samples, 0.04%)</title><rect x="1151.6" y="453" width="0.5" height="15.0" fill="rgb(223,67,7)" rx="2" ry="2" />
<text  x="1154.63" y="463.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.06%)</title><rect x="119.3" y="549" width="0.7" height="15.0" fill="rgb(220,190,23)" rx="2" ry="2" />
<text  x="122.32" y="559.5" ></text>
</g>
<g >
<title>utils::array_search_gt (1 samples, 0.02%)</title><rect x="141.4" y="373" width="0.2" height="15.0" fill="rgb(206,21,24)" rx="2" ry="2" />
<text  x="144.41" y="383.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::~deque (7 samples, 0.13%)</title><rect x="609.5" y="501" width="1.5" height="15.0" fill="rgb(240,130,49)" rx="2" ry="2" />
<text  x="612.48" y="511.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::emplace_back&lt;unsigned int const&amp;&gt; (1 samples, 0.02%)</title><rect x="1097.2" y="501" width="0.2" height="15.0" fill="rgb(222,149,1)" rx="2" ry="2" />
<text  x="1100.19" y="511.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (2 samples, 0.04%)</title><rect x="808.0" y="389" width="0.5" height="15.0" fill="rgb(243,93,11)" rx="2" ry="2" />
<text  x="811.04" y="399.5" ></text>
</g>
<g >
<title>intrusive_b::searcher&lt;clustering_key_prefix, rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare,  (1 samples, 0.02%)</title><rect x="106.8" y="389" width="0.3" height="15.0" fill="rgb(252,137,14)" rx="2" ry="2" />
<text  x="109.83" y="399.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.02%)</title><rect x="594.8" y="533" width="0.2" height="15.0" fill="rgb(205,2,32)" rx="2" ry="2" />
<text  x="597.76" y="543.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, cql3::statements::create_aggregate_statement*, std::default_delete&lt;cql3::statements::create_aggregate_statement&gt; &gt; (1 samples, 0.02%)</title><rect x="60.9" y="437" width="0.2" height="15.0" fill="rgb(248,66,9)" rx="2" ry="2" />
<text  x="63.87" y="447.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::clear (4 samples, 0.08%)</title><rect x="800.0" y="373" width="0.9" height="15.0" fill="rgb(222,229,19)" rx="2" ry="2" />
<text  x="803.01" y="383.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;void&gt;::satisfy_with_result_of&lt;seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::then_wrapped_nrvo&lt;void, service::abstract_read_executor::make_data_requests (51 samples, 0.96%)</title><rect x="691.6" y="581" width="11.4" height="15.0" fill="rgb(210,174,20)" rx="2" ry="2" />
<text  x="694.58" y="591.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (5 samples, 0.09%)</title><rect x="544.6" y="437" width="1.1" height="15.0" fill="rgb(253,37,17)" rx="2" ry="2" />
<text  x="547.56" y="447.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::_M_create_storage (1 samples, 0.02%)</title><rect x="922.5" y="501" width="0.2" height="15.0" fill="rgb(213,176,26)" rx="2" ry="2" />
<text  x="925.50" y="511.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="562.6" y="357" width="0.3" height="15.0" fill="rgb(248,61,51)" rx="2" ry="2" />
<text  x="565.63" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::~vector (3 samples, 0.06%)</title><rect x="1029.8" y="389" width="0.7" height="15.0" fill="rgb(252,204,27)" rx="2" ry="2" />
<text  x="1032.81" y="399.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;query::result_digest, 3ul&gt;::~small_vector (1 samples, 0.02%)</title><rect x="690.7" y="565" width="0.2" height="15.0" fill="rgb(253,109,33)" rx="2" ry="2" />
<text  x="693.69" y="575.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::impl (5 samples, 0.09%)</title><rect x="498.2" y="373" width="1.1" height="15.0" fill="rgb(227,170,52)" rx="2" ry="2" />
<text  x="501.15" y="383.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::at (1 samples, 0.02%)</title><rect x="71.8" y="469" width="0.2" height="15.0" fill="rgb(233,92,32)" rx="2" ry="2" />
<text  x="74.80" y="479.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const*, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;*&gt; (1 samples, 0.02%)</title><rect x="782.2" y="277" width="0.2" height="15.0" fill="rgb(240,177,40)" rx="2" ry="2" />
<text  x="785.16" y="287.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (8 samples, 0.15%)</title><rect x="756.1" y="437" width="1.7" height="15.0" fill="rgb(239,193,2)" rx="2" ry="2" />
<text  x="759.06" y="447.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::allocate (1 samples, 0.02%)</title><rect x="79.8" y="389" width="0.3" height="15.0" fill="rgb(238,38,11)" rx="2" ry="2" />
<text  x="82.83" y="399.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_need_rehash (1 samples, 0.02%)</title><rect x="16.9" y="213" width="0.2" height="15.0" fill="rgb(226,41,2)" rx="2" ry="2" />
<text  x="19.92" y="223.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::storage_proxy&gt;::~shared_ptr (2 samples, 0.04%)</title><rect x="963.3" y="453" width="0.5" height="15.0" fill="rgb(227,174,54)" rx="2" ry="2" />
<text  x="966.33" y="463.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (1 samples, 0.02%)</title><rect x="850.0" y="549" width="0.2" height="15.0" fill="rgb(230,37,39)" rx="2" ry="2" />
<text  x="852.99" y="559.5" ></text>
</g>
<g >
<title>mutation_reader_merger::~mutation_reader_merger (8 samples, 0.15%)</title><rect x="461.1" y="405" width="1.8" height="15.0" fill="rgb(235,153,36)" rx="2" ry="2" />
<text  x="464.12" y="415.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (2 samples, 0.04%)</title><rect x="1082.9" y="485" width="0.5" height="15.0" fill="rgb(205,21,47)" rx="2" ry="2" />
<text  x="1085.91" y="495.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.02%)</title><rect x="47.5" y="261" width="0.2" height="15.0" fill="rgb(211,113,39)" rx="2" ry="2" />
<text  x="50.48" y="271.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::maybe_decay_reserve (1 samples, 0.02%)</title><rect x="263.2" y="277" width="0.2" height="15.0" fill="rgb(222,99,4)" rx="2" ry="2" />
<text  x="266.22" y="287.5" ></text>
</g>
<g >
<title>operator new (9 samples, 0.17%)</title><rect x="1048.6" y="421" width="2.0" height="15.0" fill="rgb(236,68,24)" rx="2" ry="2" />
<text  x="1051.55" y="431.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;bool, bool  (1 samples, 0.02%)</title><rect x="1132.0" y="293" width="0.2" height="15.0" fill="rgb(249,177,27)" rx="2" ry="2" />
<text  x="1134.99" y="303.5" ></text>
</g>
<g >
<title>schema_mutations::indices_canonical_mutation (1 samples, 0.02%)</title><rect x="107.3" y="517" width="0.2" height="15.0" fill="rgb(207,51,27)" rx="2" ry="2" />
<text  x="110.27" y="527.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (274 samples, 5.18%)</title><rect x="17.6" y="661" width="61.1" height="15.0" fill="rgb(250,186,51)" rx="2" ry="2" />
<text  x="20.59" y="671.5" >std::_..</text>
</g>
<g >
<title>seastar::internal::when_all_state_component&lt;seastar::future&lt;void&gt; &gt;::process_element_func (1 samples, 0.02%)</title><rect x="1126.6" y="405" width="0.3" height="15.0" fill="rgb(216,17,37)" rx="2" ry="2" />
<text  x="1129.64" y="415.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_pausable_in_thread&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;sstables::sstable_writer&gt; &gt;, flat_mutation_reader::no_filter&gt; (14 samples, 0.26%)</title><rect x="79.4" y="549" width="3.1" height="15.0" fill="rgb(223,195,54)" rx="2" ry="2" />
<text  x="82.39" y="559.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (2 samples, 0.04%)</title><rect x="52.6" y="165" width="0.5" height="15.0" fill="rgb(215,70,25)" rx="2" ry="2" />
<text  x="55.61" y="175.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, enum_set&lt;super_enum&lt;auth::permission,  (51 samples, 0.96%)</title><rect x="779.3" y="325" width="11.3" height="15.0" fill="rgb(244,100,23)" rx="2" ry="2" />
<text  x="782.26" y="335.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::on_read_resolved (1 samples, 0.02%)</title><rect x="688.5" y="565" width="0.2" height="15.0" fill="rgb(235,211,25)" rx="2" ry="2" />
<text  x="691.46" y="575.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_singular (587 samples, 11.10%)</title><rect x="950.6" y="469" width="131.0" height="15.0" fill="rgb(240,124,21)" rx="2" ry="2" />
<text  x="953.61" y="479.5" >service::storage..</text>
</g>
<g >
<title>seastar::future&lt;utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (1 samples, 0.02%)</title><rect x="76.3" y="389" width="0.2" height="15.0" fill="rgb(226,194,47)" rx="2" ry="2" />
<text  x="79.26" y="399.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (2 samples, 0.04%)</title><rect x="39.7" y="357" width="0.4" height="15.0" fill="rgb(246,116,18)" rx="2" ry="2" />
<text  x="42.67" y="367.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;11ul, cql3::expr::untyped_constant&gt; (2 samples, 0.04%)</title><rect x="51.5" y="229" width="0.4" height="15.0" fill="rgb(232,161,29)" rx="2" ry="2" />
<text  x="54.50" y="239.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_allocate_buckets (5 samples, 0.09%)</title><rect x="1151.0" y="501" width="1.1" height="15.0" fill="rgb(217,46,21)" rx="2" ry="2" />
<text  x="1153.96" y="511.5" ></text>
</g>
<g >
<title>std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;auth::role_or_anonymous&gt;, seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (4 samples, 0.08%)</title><rect x="796.7" y="373" width="0.9" height="15.0" fill="rgb(227,156,6)" rx="2" ry="2" />
<text  x="799.67" y="383.5" ></text>
</g>
<g >
<title>mutation_reader_merger::close (70 samples, 1.32%)</title><rect x="553.0" y="469" width="15.7" height="15.0" fill="rgb(217,85,10)" rx="2" ry="2" />
<text  x="556.04" y="479.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (17 samples, 0.32%)</title><rect x="1176.8" y="709" width="3.8" height="15.0" fill="rgb(245,108,40)" rx="2" ry="2" />
<text  x="1179.84" y="719.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.02%)</title><rect x="1134.0" y="389" width="0.2" height="15.0" fill="rgb(241,58,28)" rx="2" ry="2" />
<text  x="1137.00" y="399.5" ></text>
</g>
<g >
<title>database::get_unlimited_query_max_result_size (13 samples, 0.25%)</title><rect x="1108.3" y="501" width="2.9" height="15.0" fill="rgb(226,59,20)" rx="2" ry="2" />
<text  x="1111.34" y="511.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="1130.9" y="277" width="0.2" height="15.0" fill="rgb(233,218,48)" rx="2" ry="2" />
<text  x="1133.88" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; const, column_definition const*&gt;, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; const, column_definition const*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;, std::hash&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::operator[] (1 samples, 0.02%)</title><rect x="16.9" y="229" width="0.2" height="15.0" fill="rgb(216,53,27)" rx="2" ry="2" />
<text  x="19.92" y="239.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.08%)</title><rect x="1026.5" y="341" width="0.9" height="15.0" fill="rgb(241,123,43)" rx="2" ry="2" />
<text  x="1029.46" y="351.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::maybe_refresh_state (5 samples, 0.09%)</title><rect x="264.3" y="261" width="1.2" height="15.0" fill="rgb(223,103,46)" rx="2" ry="2" />
<text  x="267.34" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.04%)</title><rect x="755.2" y="453" width="0.4" height="15.0" fill="rgb(206,64,7)" rx="2" ry="2" />
<text  x="758.17" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (3 samples, 0.06%)</title><rect x="101.7" y="565" width="0.7" height="15.0" fill="rgb(252,25,20)" rx="2" ry="2" />
<text  x="104.70" y="575.5" ></text>
</g>
<g >
<title>visit&lt;(anonymous namespace)::native_value_clone_visitor&gt; (1 samples, 0.02%)</title><rect x="68.9" y="389" width="0.2" height="15.0" fill="rgb(220,50,26)" rx="2" ry="2" />
<text  x="71.90" y="399.5" ></text>
</g>
<g >
<title>boost::algorithm::any_of&lt;boost::range::joined_range&lt;utils::small_vector&lt;gms::inet_address, 3ul&gt;, utils::small_vector&lt;gms::inet_address, 1ul&gt; &gt;, std::_Bind&lt;bool  (1 samples, 0.02%)</title><rect x="1131.3" y="277" width="0.2" height="15.0" fill="rgb(206,184,1)" rx="2" ry="2" />
<text  x="1134.32" y="287.5" ></text>
</g>
<g >
<title>visit&lt;(anonymous namespace)::from_string_visitor&gt; (7 samples, 0.13%)</title><rect x="65.3" y="453" width="1.6" height="15.0" fill="rgb(234,199,4)" rx="2" ry="2" />
<text  x="68.33" y="463.5" ></text>
</g>
<g >
<title>db::system_keyspace::all_tables (1 samples, 0.02%)</title><rect x="16.9" y="389" width="0.2" height="15.0" fill="rgb(225,62,2)" rx="2" ry="2" />
<text  x="19.92" y="399.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="50.6" y="341" width="0.2" height="15.0" fill="rgb(233,91,47)" rx="2" ry="2" />
<text  x="53.61" y="351.5" ></text>
</g>
<g >
<title>frozen_schema::unfreeze (1 samples, 0.02%)</title><rect x="107.5" y="517" width="0.2" height="15.0" fill="rgb(246,147,1)" rx="2" ry="2" />
<text  x="110.50" y="527.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS4_12restrictionsL11has_eq_nullERKNS4_13query_optionsERKNS5_10expressionEE3$_8EES8_SI_T_EUlRS7_E_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_8constantEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_11conjunctionEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_12column_valueEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_5tokenEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_13function_callEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_4castEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_15field_selectionEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_4nullEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_13bind_variableEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_16untyped_constantEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_17tuple_constructorEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_22collection_constructorEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSR_S6_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_S1V_SN_S1Z_S23_S27_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES2C_S2F_ (1 samples, 0.02%)</title><rect x="853.6" y="437" width="0.2" height="15.0" fill="rgb(243,89,43)" rx="2" ry="2" />
<text  x="856.56" y="447.5" ></text>
</g>
<g >
<title>posix_memalign (1 samples, 0.02%)</title><rect x="234.4" y="165" width="0.3" height="15.0" fill="rgb(215,145,11)" rx="2" ry="2" />
<text  x="237.44" y="175.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::merge_with (6 samples, 0.11%)</title><rect x="70.0" y="437" width="1.4" height="15.0" fill="rgb(231,8,33)" rx="2" ry="2" />
<text  x="73.02" y="447.5" ></text>
</g>
<g >
<title>compound_type&lt; (1 samples, 0.02%)</title><rect x="484.1" y="325" width="0.2" height="15.0" fill="rgb(243,119,44)" rx="2" ry="2" />
<text  x="487.10" y="335.5" ></text>
</g>
<g >
<title>std::forward_as_tuple&lt;auth::role_or_anonymous&gt; (1 samples, 0.02%)</title><rect x="796.4" y="389" width="0.3" height="15.0" fill="rgb(251,205,9)" rx="2" ry="2" />
<text  x="799.44" y="399.5" ></text>
</g>
<g >
<title>seastar::future&lt;utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (2 samples, 0.04%)</title><rect x="777.9" y="325" width="0.5" height="15.0" fill="rgb(216,138,42)" rx="2" ry="2" />
<text  x="780.93" y="335.5" ></text>
</g>
<g >
<title>cql3::single_column_relation::new_EQ_restriction (4 samples, 0.08%)</title><rect x="68.2" y="469" width="0.9" height="15.0" fill="rgb(236,23,24)" rx="2" ry="2" />
<text  x="71.23" y="479.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.02%)</title><rect x="11.1" y="629" width="0.2" height="15.0" fill="rgb(213,39,46)" rx="2" ry="2" />
<text  x="14.12" y="639.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (1 samples, 0.02%)</title><rect x="761.0" y="453" width="0.2" height="15.0" fill="rgb(239,200,54)" rx="2" ry="2" />
<text  x="763.97" y="463.5" ></text>
</g>
<g >
<title>mutation_partition::~mutation_partition (2 samples, 0.04%)</title><rect x="1132.4" y="389" width="0.5" height="15.0" fill="rgb(235,126,36)" rx="2" ry="2" />
<text  x="1135.44" y="399.5" ></text>
</g>
<g >
<title>flat_mutation_reader::peek (1 samples, 0.02%)</title><rect x="163.3" y="517" width="0.2" height="15.0" fill="rgb(208,4,22)" rx="2" ry="2" />
<text  x="166.27" y="527.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.02%)</title><rect x="41.9" y="357" width="0.2" height="15.0" fill="rgb(249,21,17)" rx="2" ry="2" />
<text  x="44.90" y="367.5" ></text>
</g>
<g >
<title>make_combined_reader (62 samples, 1.17%)</title><rect x="454.2" y="437" width="13.8" height="15.0" fill="rgb(233,56,52)" rx="2" ry="2" />
<text  x="457.20" y="447.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (66 samples, 1.25%)</title><rect x="21.4" y="453" width="14.7" height="15.0" fill="rgb(214,74,38)" rx="2" ry="2" />
<text  x="24.38" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::allocate (2 samples, 0.04%)</title><rect x="23.6" y="309" width="0.5" height="15.0" fill="rgb(220,103,47)" rx="2" ry="2" />
<text  x="26.61" y="319.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (4 samples, 0.08%)</title><rect x="485.4" y="293" width="0.9" height="15.0" fill="rgb(232,166,54)" rx="2" ry="2" />
<text  x="488.44" y="303.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.02%)</title><rect x="1142.3" y="581" width="0.2" height="15.0" fill="rgb(226,164,7)" rx="2" ry="2" />
<text  x="1145.26" y="591.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (6 samples, 0.11%)</title><rect x="670.2" y="565" width="1.3" height="15.0" fill="rgb(251,48,37)" rx="2" ry="2" />
<text  x="673.17" y="575.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (1 samples, 0.02%)</title><rect x="853.8" y="389" width="0.2" height="15.0" fill="rgb(224,199,22)" rx="2" ry="2" />
<text  x="856.78" y="399.5" ></text>
</g>
<g >
<title>cql3::expr::expression::operator= (2 samples, 0.04%)</title><rect x="44.8" y="405" width="0.5" height="15.0" fill="rgb(250,132,24)" rx="2" ry="2" />
<text  x="47.80" y="415.5" ></text>
</g>
<g >
<title>operator new (6 samples, 0.11%)</title><rect x="978.5" y="357" width="1.3" height="15.0" fill="rgb(243,216,8)" rx="2" ry="2" />
<text  x="981.50" y="367.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (2 samples, 0.04%)</title><rect x="39.2" y="389" width="0.5" height="15.0" fill="rgb(249,14,2)" rx="2" ry="2" />
<text  x="42.23" y="399.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.02%)</title><rect x="11.1" y="517" width="0.2" height="15.0" fill="rgb(253,71,13)" rx="2" ry="2" />
<text  x="14.12" y="527.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::initial_key_restrictions&lt;partition_key&gt;::do_merge_to (7 samples, 0.13%)</title><rect x="70.0" y="469" width="1.6" height="15.0" fill="rgb(228,203,19)" rx="2" ry="2" />
<text  x="73.02" y="479.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (4 samples, 0.08%)</title><rect x="732.9" y="373" width="0.9" height="15.0" fill="rgb(221,15,35)" rx="2" ry="2" />
<text  x="735.86" y="383.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.02%)</title><rect x="58.2" y="229" width="0.2" height="15.0" fill="rgb(205,59,52)" rx="2" ry="2" />
<text  x="61.19" y="239.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::push_mutation_fragment&lt;mutation_fragment&gt; (2 samples, 0.04%)</title><rect x="198.5" y="341" width="0.5" height="15.0" fill="rgb(226,145,48)" rx="2" ry="2" />
<text  x="201.52" y="351.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::~_Variant_storage (2 samples, 0.04%)</title><rect x="140.3" y="549" width="0.4" height="15.0" fill="rgb(237,187,30)" rx="2" ry="2" />
<text  x="143.29" y="559.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;boost::range_detail::integer_iterator&lt;unsigned int&gt;, std::function&lt;seastar::future&lt;void&gt;  (1 samples, 0.02%)</title><rect x="16.9" y="517" width="0.2" height="15.0" fill="rgb(223,200,8)" rx="2" ry="2" />
<text  x="19.92" y="527.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;auth::resource, auth::resource, std::allocator&lt;auth::resource&gt;, std::__detail::_Identity, std::equal_to&lt;auth::resource&gt;, std::hash&lt;auth::resource&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;::find (12 samples, 0.23%)</title><rect x="801.4" y="453" width="2.6" height="15.0" fill="rgb(243,158,14)" rx="2" ry="2" />
<text  x="804.35" y="463.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::do_execute (29 samples, 0.55%)</title><rect x="853.1" y="533" width="6.5" height="15.0" fill="rgb(209,116,52)" rx="2" ry="2" />
<text  x="856.11" y="543.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::emplace&lt;atomic_cell_or_collection, seastar::optimized_optional&lt;cell_hash&gt; &gt; (1 samples, 0.02%)</title><rect x="106.4" y="517" width="0.2" height="15.0" fill="rgb(217,69,49)" rx="2" ry="2" />
<text  x="109.38" y="527.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="565.8" y="373" width="0.2" height="15.0" fill="rgb(252,223,12)" rx="2" ry="2" />
<text  x="568.75" y="383.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;managed_bytes&gt;::dispose (1 samples, 0.02%)</title><rect x="858.9" y="405" width="0.2" height="15.0" fill="rgb(243,105,7)" rx="2" ry="2" />
<text  x="861.91" y="415.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (1 samples, 0.02%)</title><rect x="782.2" y="261" width="0.2" height="15.0" fill="rgb(216,81,2)" rx="2" ry="2" />
<text  x="785.16" y="271.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;flat_mutation_reader  (1 samples, 0.02%)</title><rect x="600.6" y="517" width="0.2" height="15.0" fill="rgb(244,100,8)" rx="2" ry="2" />
<text  x="603.56" y="527.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, cql3::statements::drop_view_statement*, false&gt;::_M_head (1 samples, 0.02%)</title><rect x="61.8" y="405" width="0.2" height="15.0" fill="rgb(218,187,33)" rx="2" ry="2" />
<text  x="64.76" y="415.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::forward_to (4 samples, 0.08%)</title><rect x="863.2" y="565" width="0.8" height="15.0" fill="rgb(224,143,13)" rx="2" ry="2" />
<text  x="866.15" y="575.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="856.5" y="309" width="0.2" height="15.0" fill="rgb(252,43,31)" rx="2" ry="2" />
<text  x="859.46" y="319.5" ></text>
</g>
<g >
<title>allocation_strategy::alloc&lt;blob_storage&gt; (2 samples, 0.04%)</title><rect x="234.0" y="165" width="0.4" height="15.0" fill="rgb(222,216,1)" rx="2" ry="2" />
<text  x="237.00" y="175.5" ></text>
</g>
<g >
<title>partition_key::from_range&lt;std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt; const&amp;&gt; (2 samples, 0.04%)</title><rect x="854.9" y="437" width="0.4" height="15.0" fill="rgb(226,42,47)" rx="2" ry="2" />
<text  x="857.90" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (2 samples, 0.04%)</title><rect x="956.0" y="421" width="0.4" height="15.0" fill="rgb(214,99,19)" rx="2" ry="2" />
<text  x="958.96" y="431.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::do_execute (1,117 samples, 21.12%)</title><rect x="866.1" y="533" width="249.2" height="15.0" fill="rgb(220,40,29)" rx="2" ry="2" />
<text  x="869.05" y="543.5" >cql3::statements::select_statemen..</text>
</g>
<g >
<title>query::digester::digester (4 samples, 0.08%)</title><rect x="591.0" y="501" width="0.9" height="15.0" fill="rgb(226,223,29)" rx="2" ry="2" />
<text  x="593.96" y="511.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;::~basic_sstring (1 samples, 0.02%)</title><rect x="67.1" y="437" width="0.2" height="15.0" fill="rgb(217,97,8)" rx="2" ry="2" />
<text  x="70.11" y="447.5" ></text>
</g>
<g >
<title>abstract_type::from_string (7 samples, 0.13%)</title><rect x="65.3" y="469" width="1.6" height="15.0" fill="rgb(238,93,12)" rx="2" ry="2" />
<text  x="68.33" y="479.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reserve&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (1 samples, 0.02%)</title><rect x="852.4" y="501" width="0.3" height="15.0" fill="rgb(227,158,54)" rx="2" ry="2" />
<text  x="855.44" y="511.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (1 samples, 0.02%)</title><rect x="648.3" y="549" width="0.2" height="15.0" fill="rgb(215,14,49)" rx="2" ry="2" />
<text  x="651.30" y="559.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (2 samples, 0.04%)</title><rect x="36.8" y="453" width="0.4" height="15.0" fill="rgb(221,174,40)" rx="2" ry="2" />
<text  x="39.77" y="463.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::statement_restrictions (1 samples, 0.02%)</title><rect x="71.6" y="485" width="0.2" height="15.0" fill="rgb(247,222,7)" rx="2" ry="2" />
<text  x="74.58" y="495.5" ></text>
</g>
<g >
<title>seastar::syscall_work_queue::submit&lt;seastar::syscall_result&lt;long&gt; &gt; (1 samples, 0.02%)</title><rect x="677.8" y="421" width="0.2" height="15.0" fill="rgb(224,217,5)" rx="2" ry="2" />
<text  x="680.75" y="431.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::small_vector (4 samples, 0.08%)</title><rect x="466.2" y="373" width="0.9" height="15.0" fill="rgb(206,80,34)" rx="2" ry="2" />
<text  x="469.25" y="383.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::operator (593 samples, 11.21%)</title><rect x="172.0" y="453" width="132.3" height="15.0" fill="rgb(216,143,11)" rx="2" ry="2" />
<text  x="174.97" y="463.5" >mutation_fragmen..</text>
</g>
<g >
<title>query::partition_slice::~partition_slice (1 samples, 0.02%)</title><rect x="1106.8" y="485" width="0.2" height="15.0" fill="rgb(213,227,39)" rx="2" ry="2" />
<text  x="1109.78" y="495.5" ></text>
</g>
<g >
<title>cql3::expr::expression::~expression (1 samples, 0.02%)</title><rect x="45.3" y="405" width="0.2" height="15.0" fill="rgb(247,96,36)" rx="2" ry="2" />
<text  x="48.25" y="415.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="11.1" y="661" width="0.2" height="15.0" fill="rgb(234,99,23)" rx="2" ry="2" />
<text  x="14.12" y="671.5" ></text>
</g>
<g >
<title>compound_type&lt; (12 samples, 0.23%)</title><rect x="486.3" y="309" width="2.7" height="15.0" fill="rgb(253,55,32)" rx="2" ry="2" />
<text  x="489.33" y="319.5" ></text>
</g>
<g >
<title>partition_version_ref::operator (1 samples, 0.02%)</title><rect x="513.3" y="325" width="0.2" height="15.0" fill="rgb(234,19,42)" rx="2" ry="2" />
<text  x="516.32" y="335.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (26 samples, 0.49%)</title><rect x="732.2" y="437" width="5.8" height="15.0" fill="rgb(207,184,31)" rx="2" ry="2" />
<text  x="735.19" y="447.5" ></text>
</g>
<g >
<title>std::__find_if&lt;gms::inet_address*, __gnu_cxx::__ops::_Iter_equals_val&lt;gms::inet_address const&gt; &gt; (1 samples, 0.02%)</title><rect x="1075.8" y="405" width="0.2" height="15.0" fill="rgb(216,100,24)" rx="2" ry="2" />
<text  x="1078.77" y="415.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_restrictions::size (1 samples, 0.02%)</title><rect x="934.3" y="501" width="0.2" height="15.0" fill="rgb(208,4,3)" rx="2" ry="2" />
<text  x="937.32" y="511.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;compact_mutation_state&lt; (33 samples, 0.62%)</title><rect x="541.2" y="517" width="7.4" height="15.0" fill="rgb(237,208,1)" rx="2" ry="2" />
<text  x="544.21" y="527.5" ></text>
</g>
<g >
<title>db::schema_tables::create_table_from_mutations (1 samples, 0.02%)</title><rect x="107.5" y="501" width="0.2" height="15.0" fill="rgb(220,26,19)" rx="2" ry="2" />
<text  x="110.50" y="511.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.08%)</title><rect x="923.6" y="453" width="0.9" height="15.0" fill="rgb(253,135,42)" rx="2" ry="2" />
<text  x="926.61" y="463.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::move_it (3 samples, 0.06%)</title><rect x="655.9" y="565" width="0.7" height="15.0" fill="rgb(205,193,42)" rx="2" ry="2" />
<text  x="658.89" y="575.5" ></text>
</g>
<g >
<title>database::has_keyspace (1 samples, 0.02%)</title><rect x="78.0" y="581" width="0.3" height="15.0" fill="rgb(226,88,42)" rx="2" ry="2" />
<text  x="81.05" y="591.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::drop_aggregate_statement, std::default_delete&lt;cql3::statements::drop_aggregate_statement&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="61.3" y="469" width="0.2" height="15.0" fill="rgb(210,62,42)" rx="2" ry="2" />
<text  x="64.31" y="479.5" ></text>
</g>
<g >
<title>permit_monitor::~permit_monitor (14 samples, 0.26%)</title><rect x="79.4" y="709" width="3.1" height="15.0" fill="rgb(253,134,24)" rx="2" ry="2" />
<text  x="82.39" y="719.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.04%)</title><rect x="891.3" y="373" width="0.4" height="15.0" fill="rgb(252,206,27)" rx="2" ry="2" />
<text  x="894.26" y="383.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;7ul, cql3::expr::untyped_constant&gt; (2 samples, 0.04%)</title><rect x="51.5" y="149" width="0.4" height="15.0" fill="rgb(225,130,27)" rx="2" ry="2" />
<text  x="54.50" y="159.5" ></text>
</g>
<g >
<title>seastar::lambda_task&lt;seastar::with_scheduling_group&lt;table::try_flush_memtable_to_sstable (1 samples, 0.02%)</title><rect x="1134.0" y="597" width="0.2" height="15.0" fill="rgb(218,68,24)" rx="2" ry="2" />
<text  x="1137.00" y="607.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_4findERKNS5_10expressionENS5_6oper_tEEUlRS7_E_EES8_SE_T_EUlSG_E_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_8constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_11conjunctionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_12column_valueEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_5tokenEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13function_callEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4castEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_15field_selectionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4nullEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13bind_variableEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_16untyped_constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_17tuple_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_22collection_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSO_S6_SS_SW_S10_S14_S18_S1C_S1G_S1K_S1O_S1S_SK_S1W_S20_S24_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES29_S2C_ (3 samples, 0.06%)</title><rect x="939.2" y="469" width="0.7" height="15.0" fill="rgb(219,103,51)" rx="2" ry="2" />
<text  x="942.23" y="479.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::query_state&gt;::~shared_ptr (2 samples, 0.04%)</title><rect x="658.3" y="581" width="0.5" height="15.0" fill="rgb(238,105,33)" rx="2" ry="2" />
<text  x="661.34" y="591.5" ></text>
</g>
<g >
<title>reader_permit::consume (5 samples, 0.09%)</title><rect x="419.8" y="325" width="1.2" height="15.0" fill="rgb(238,8,48)" rx="2" ry="2" />
<text  x="422.84" y="335.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::operator (15 samples, 0.28%)</title><rect x="183.1" y="357" width="3.4" height="15.0" fill="rgb(235,203,25)" rx="2" ry="2" />
<text  x="186.13" y="367.5" ></text>
</g>
<g >
<title>mutation_partition::do_compact (1 samples, 0.02%)</title><rect x="106.2" y="485" width="0.2" height="15.0" fill="rgb(207,72,47)" rx="2" ry="2" />
<text  x="109.16" y="495.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;reader_concurrency_semaphore::entry&gt;::_M_reset (2 samples, 0.04%)</title><rect x="132.3" y="485" width="0.4" height="15.0" fill="rgb(207,216,46)" rx="2" ry="2" />
<text  x="135.26" y="495.5" ></text>
</g>
<g >
<title>compound_type&lt; (1 samples, 0.02%)</title><rect x="854.5" y="437" width="0.2" height="15.0" fill="rgb(219,175,10)" rx="2" ry="2" />
<text  x="857.45" y="447.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;abstract_type const&gt;::~shared_ptr (3 samples, 0.06%)</title><rect x="892.8" y="437" width="0.7" height="15.0" fill="rgb(242,97,29)" rx="2" ry="2" />
<text  x="895.82" y="447.5" ></text>
</g>
<g >
<title>seastar::reactor::syscall_pollfn::poll (1 samples, 0.02%)</title><rect x="1166.6" y="597" width="0.2" height="15.0" fill="rgb(226,153,32)" rx="2" ry="2" />
<text  x="1169.57" y="607.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt;::~_Variant_storage (1 samples, 0.02%)</title><rect x="67.1" y="453" width="0.2" height="15.0" fill="rgb(234,115,38)" rx="2" ry="2" />
<text  x="70.11" y="463.5" ></text>
</g>
<g >
<title>compare_unsigned&lt;managed_bytes_basic_view&lt; (8 samples, 0.15%)</title><rect x="484.5" y="309" width="1.8" height="15.0" fill="rgb(236,23,37)" rx="2" ry="2" />
<text  x="487.54" y="319.5" ></text>
</g>
<g >
<title>compound_type&lt; (12 samples, 0.23%)</title><rect x="914.7" y="453" width="2.7" height="15.0" fill="rgb(226,46,54)" rx="2" ry="2" />
<text  x="917.69" y="463.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.02%)</title><rect x="107.5" y="421" width="0.2" height="15.0" fill="rgb(229,41,24)" rx="2" ry="2" />
<text  x="110.50" y="431.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement::execute (1 samples, 0.02%)</title><rect x="85.0" y="613" width="0.2" height="15.0" fill="rgb(235,52,33)" rx="2" ry="2" />
<text  x="87.96" y="623.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (19 samples, 0.36%)</title><rect x="154.6" y="533" width="4.2" height="15.0" fill="rgb(247,161,7)" rx="2" ry="2" />
<text  x="157.57" y="543.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::clear (1 samples, 0.02%)</title><rect x="418.3" y="325" width="0.2" height="15.0" fill="rgb(215,185,31)" rx="2" ry="2" />
<text  x="421.28" y="335.5" ></text>
</g>
<g >
<title>schema_builder::build (1 samples, 0.02%)</title><rect x="16.9" y="341" width="0.2" height="15.0" fill="rgb(240,61,43)" rx="2" ry="2" />
<text  x="19.92" y="351.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (3 samples, 0.06%)</title><rect x="676.4" y="405" width="0.7" height="15.0" fill="rgb(238,55,4)" rx="2" ry="2" />
<text  x="679.41" y="415.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (2 samples, 0.04%)</title><rect x="671.5" y="581" width="0.5" height="15.0" fill="rgb(226,13,50)" rx="2" ry="2" />
<text  x="674.51" y="591.5" ></text>
</g>
<g >
<title>ser::deserialize&lt;seastar::simple_memory_input_stream&gt; (3 samples, 0.06%)</title><rect x="1121.5" y="293" width="0.7" height="15.0" fill="rgb(246,171,39)" rx="2" ry="2" />
<text  x="1124.51" y="303.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::lsa_partition_reader::next_range_tombstone (1 samples, 0.02%)</title><rect x="80.7" y="341" width="0.2" height="15.0" fill="rgb(206,187,20)" rx="2" ry="2" />
<text  x="83.72" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (1 samples, 0.02%)</title><rect x="99.0" y="517" width="0.2" height="15.0" fill="rgb(237,20,49)" rx="2" ry="2" />
<text  x="102.02" y="527.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consumer_adapter&lt;sstables::sstable_writer&gt;::consume (4 samples, 0.08%)</title><rect x="81.2" y="517" width="0.9" height="15.0" fill="rgb(205,222,8)" rx="2" ry="2" />
<text  x="84.17" y="527.5" ></text>
</g>
<g >
<title>dht::tri_compare (4 samples, 0.08%)</title><rect x="1059.0" y="341" width="0.9" height="15.0" fill="rgb(231,186,43)" rx="2" ry="2" />
<text  x="1062.04" y="351.5" ></text>
</g>
<g >
<title>reader_permit::impl::~impl (3 samples, 0.06%)</title><rect x="112.0" y="565" width="0.6" height="15.0" fill="rgb(231,181,40)" rx="2" ry="2" />
<text  x="114.96" y="575.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;clustering_key_prefix&gt;::_M_move_assign (1 samples, 0.02%)</title><rect x="541.0" y="501" width="0.2" height="15.0" fill="rgb(208,15,51)" rx="2" ry="2" />
<text  x="543.99" y="511.5" ></text>
</g>
<g >
<title>query_result_builder::consume_end_of_stream (1 samples, 0.02%)</title><rect x="328.6" y="373" width="0.2" height="15.0" fill="rgb(253,201,10)" rx="2" ry="2" />
<text  x="331.59" y="383.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (1 samples, 0.02%)</title><rect x="443.0" y="501" width="0.3" height="15.0" fill="rgb(234,220,38)" rx="2" ry="2" />
<text  x="446.05" y="511.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (35 samples, 0.66%)</title><rect x="782.4" y="293" width="7.8" height="15.0" fill="rgb(240,160,9)" rx="2" ry="2" />
<text  x="785.39" y="303.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::move_it (21 samples, 0.40%)</title><rect x="666.8" y="581" width="4.7" height="15.0" fill="rgb(239,40,41)" rx="2" ry="2" />
<text  x="669.82" y="591.5" ></text>
</g>
<g >
<title>absl::hash_internal::HashState::combine_contiguous (1 samples, 0.02%)</title><rect x="1043.6" y="357" width="0.3" height="15.0" fill="rgb(219,54,51)" rx="2" ry="2" />
<text  x="1046.64" y="367.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (3 samples, 0.06%)</title><rect x="54.2" y="229" width="0.6" height="15.0" fill="rgb(231,112,38)" rx="2" ry="2" />
<text  x="57.17" y="239.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="190.3" y="309" width="0.2" height="15.0" fill="rgb(240,37,0)" rx="2" ry="2" />
<text  x="193.27" y="319.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.02%)</title><rect x="57.5" y="293" width="0.2" height="15.0" fill="rgb(252,56,6)" rx="2" ry="2" />
<text  x="60.52" y="303.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (3 samples, 0.06%)</title><rect x="778.4" y="325" width="0.6" height="15.0" fill="rgb(237,66,5)" rx="2" ry="2" />
<text  x="781.37" y="335.5" ></text>
</g>
<g >
<title>db::schema_tables::compact_for_schema_digest (1 samples, 0.02%)</title><rect x="106.2" y="517" width="0.2" height="15.0" fill="rgb(228,207,54)" rx="2" ry="2" />
<text  x="109.16" y="527.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume_in_thread&lt;sstables::sstable_writer&gt; (1 samples, 0.02%)</title><rect x="10.9" y="629" width="0.2" height="15.0" fill="rgb(215,178,33)" rx="2" ry="2" />
<text  x="13.89" y="639.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (3 samples, 0.06%)</title><rect x="40.1" y="357" width="0.7" height="15.0" fill="rgb(206,148,15)" rx="2" ry="2" />
<text  x="43.12" y="367.5" ></text>
</g>
<g >
<title>partition_version_ref::operator* (1 samples, 0.02%)</title><rect x="288.2" y="309" width="0.2" height="15.0" fill="rgb(218,184,13)" rx="2" ry="2" />
<text  x="291.21" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (2 samples, 0.04%)</title><rect x="113.5" y="565" width="0.5" height="15.0" fill="rgb(212,12,17)" rx="2" ry="2" />
<text  x="116.52" y="575.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.02%)</title><rect x="21.2" y="373" width="0.2" height="15.0" fill="rgb(220,171,24)" rx="2" ry="2" />
<text  x="24.16" y="383.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (29 samples, 0.55%)</title><rect x="1126.4" y="469" width="6.5" height="15.0" fill="rgb(225,167,44)" rx="2" ry="2" />
<text  x="1129.42" y="479.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::single_column_primary_key_restrictions (1 samples, 0.02%)</title><rect x="71.4" y="437" width="0.2" height="15.0" fill="rgb(242,149,18)" rx="2" ry="2" />
<text  x="74.35" y="447.5" ></text>
</g>
<g >
<title>free (2 samples, 0.04%)</title><rect x="428.8" y="293" width="0.4" height="15.0" fill="rgb(236,23,54)" rx="2" ry="2" />
<text  x="431.77" y="303.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.02%)</title><rect x="82.5" y="677" width="0.2" height="15.0" fill="rgb(223,97,29)" rx="2" ry="2" />
<text  x="85.51" y="687.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;bytes_ostream::chunk, std::default_delete&lt;bytes_ostream::chunk&gt; &gt;::reset (1 samples, 0.02%)</title><rect x="594.1" y="469" width="0.2" height="15.0" fill="rgb(244,128,16)" rx="2" ry="2" />
<text  x="597.09" y="479.5" ></text>
</g>
<g >
<title>cql3::statements::update_statement::execute_operations_for_key (13 samples, 0.25%)</title><rect x="856.2" y="437" width="2.9" height="15.0" fill="rgb(228,138,15)" rx="2" ry="2" />
<text  x="859.24" y="447.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="554.6" y="373" width="0.2" height="15.0" fill="rgb(248,65,40)" rx="2" ry="2" />
<text  x="557.60" y="383.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::whereClause (9 samples, 0.17%)</title><rect x="57.3" y="453" width="2.0" height="15.0" fill="rgb(242,180,50)" rx="2" ry="2" />
<text  x="60.30" y="463.5" ></text>
</g>
<g >
<title>seastar::posix_file_impl::list_directory (1 samples, 0.02%)</title><rect x="677.8" y="469" width="0.2" height="15.0" fill="rgb(242,83,20)" rx="2" ry="2" />
<text  x="680.75" y="479.5" ></text>
</g>
<g >
<title>memtable_entry::snapshot (7 samples, 0.13%)</title><rect x="516.4" y="421" width="1.6" height="15.0" fill="rgb(229,62,47)" rx="2" ry="2" />
<text  x="519.45" y="431.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::clear (2 samples, 0.04%)</title><rect x="707.0" y="597" width="0.4" height="15.0" fill="rgb(231,57,14)" rx="2" ry="2" />
<text  x="709.98" y="607.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (6 samples, 0.11%)</title><rect x="39.7" y="421" width="1.3" height="15.0" fill="rgb(225,97,15)" rx="2" ry="2" />
<text  x="42.67" y="431.5" ></text>
</g>
<g >
<title>mutation_reader_merger::~mutation_reader_merger (25 samples, 0.47%)</title><rect x="571.3" y="469" width="5.6" height="15.0" fill="rgb(252,119,15)" rx="2" ry="2" />
<text  x="574.33" y="479.5" ></text>
</g>
<g >
<title>reader_permit::used_guard::~used_guard (1 samples, 0.02%)</title><rect x="677.3" y="581" width="0.2" height="15.0" fill="rgb(230,190,10)" rx="2" ry="2" />
<text  x="680.31" y="591.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (2 samples, 0.04%)</title><rect x="285.1" y="341" width="0.4" height="15.0" fill="rgb(215,37,42)" rx="2" ry="2" />
<text  x="288.09" y="351.5" ></text>
</g>
<g >
<title>std::__optional_hash_call_base&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, true&gt;::operator (1 samples, 0.02%)</title><rect x="803.8" y="373" width="0.2" height="15.0" fill="rgb(247,79,45)" rx="2" ry="2" />
<text  x="806.81" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value, std::allocator&lt;cql3::raw_value&gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="846.6" y="565" width="0.3" height="15.0" fill="rgb(218,37,28)" rx="2" ry="2" />
<text  x="849.64" y="575.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; const*, nonwrapping_interval&lt;clustering_key_prefix&gt;*&gt; (1 samples, 0.02%)</title><rect x="1093.4" y="453" width="0.2" height="15.0" fill="rgb(210,220,36)" rx="2" ry="2" />
<text  x="1096.40" y="463.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;bool, bool  (3 samples, 0.06%)</title><rect x="1074.0" y="373" width="0.7" height="15.0" fill="rgb(239,70,9)" rx="2" ry="2" />
<text  x="1076.99" y="383.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.02%)</title><rect x="37.9" y="325" width="0.2" height="15.0" fill="rgb(227,151,13)" rx="2" ry="2" />
<text  x="40.89" y="335.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (1 samples, 0.02%)</title><rect x="627.6" y="581" width="0.2" height="15.0" fill="rgb(205,64,11)" rx="2" ry="2" />
<text  x="630.55" y="591.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::take_value (2 samples, 0.04%)</title><rect x="113.1" y="565" width="0.4" height="15.0" fill="rgb(232,17,22)" rx="2" ry="2" />
<text  x="116.07" y="575.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (7 samples, 0.13%)</title><rect x="971.6" y="389" width="1.5" height="15.0" fill="rgb(253,112,25)" rx="2" ry="2" />
<text  x="974.58" y="399.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (345 samples, 6.52%)</title><rect x="340.2" y="325" width="77.0" height="15.0" fill="rgb(252,71,7)" rx="2" ry="2" />
<text  x="343.19" y="335.5" >compact_..</text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.02%)</title><rect x="37.9" y="309" width="0.2" height="15.0" fill="rgb(250,139,6)" rx="2" ry="2" />
<text  x="40.89" y="319.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;::basic_sstring (2 samples, 0.04%)</title><rect x="714.3" y="565" width="0.5" height="15.0" fill="rgb(242,56,31)" rx="2" ry="2" />
<text  x="717.34" y="575.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::move_it (2 samples, 0.04%)</title><rect x="622.6" y="581" width="0.5" height="15.0" fill="rgb(208,161,26)" rx="2" ry="2" />
<text  x="625.65" y="591.5" ></text>
</g>
<g >
<title>query::clustering_position_tracker&lt;query_result_builder&gt;::consume_new_partition (1 samples, 0.02%)</title><rect x="343.5" y="293" width="0.3" height="15.0" fill="rgb(223,38,18)" rx="2" ry="2" />
<text  x="346.54" y="303.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (2 samples, 0.04%)</title><rect x="242.5" y="213" width="0.4" height="15.0" fill="rgb(239,94,25)" rx="2" ry="2" />
<text  x="245.47" y="223.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (1 samples, 0.02%)</title><rect x="898.2" y="405" width="0.2" height="15.0" fill="rgb(221,130,16)" rx="2" ry="2" />
<text  x="901.18" y="415.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_state&lt;std::tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;, seastar::future&lt;void&gt; &gt;::do_with_state&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const&amp;, auth::resource&gt; (10 samples, 0.19%)</title><rect x="755.6" y="469" width="2.2" height="15.0" fill="rgb(241,132,32)" rx="2" ry="2" />
<text  x="758.62" y="479.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_M_reset (1 samples, 0.02%)</title><rect x="1056.4" y="421" width="0.2" height="15.0" fill="rgb(221,137,44)" rx="2" ry="2" />
<text  x="1059.36" y="431.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;,  (22 samples, 0.42%)</title><rect x="719.2" y="517" width="5.0" height="15.0" fill="rgb(213,128,51)" rx="2" ry="2" />
<text  x="722.25" y="527.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::~_Variant_storage (1 samples, 0.02%)</title><rect x="72.7" y="437" width="0.2" height="15.0" fill="rgb(208,184,54)" rx="2" ry="2" />
<text  x="75.69" y="447.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (29 samples, 0.55%)</title><rect x="853.1" y="549" width="6.5" height="15.0" fill="rgb(239,21,23)" rx="2" ry="2" />
<text  x="856.11" y="559.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="651.9" y="517" width="0.2" height="15.0" fill="rgb(239,215,29)" rx="2" ry="2" />
<text  x="654.87" y="527.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;compact_mutation_state&lt; (10 samples, 0.19%)</title><rect x="608.8" y="517" width="2.2" height="15.0" fill="rgb(237,43,43)" rx="2" ry="2" />
<text  x="611.81" y="527.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_one (24 samples, 0.45%)</title><rect x="186.7" y="357" width="5.4" height="15.0" fill="rgb(216,211,5)" rx="2" ry="2" />
<text  x="189.70" y="367.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (1 samples, 0.02%)</title><rect x="17.1" y="517" width="0.3" height="15.0" fill="rgb(240,95,51)" rx="2" ry="2" />
<text  x="20.14" y="527.5" ></text>
</g>
<g >
<title>seastar::internal::when_all_state&lt;seastar::internal::extract_values_from_futures_tuple&lt;seastar::future&lt;void&gt;, seastar::future&lt;void&gt; &gt;, seastar::future&lt;void&gt;, seastar::future&lt;void&gt; &gt;::~when_all_state (1 samples, 0.02%)</title><rect x="852.9" y="581" width="0.2" height="15.0" fill="rgb(236,186,31)" rx="2" ry="2" />
<text  x="855.89" y="591.5" ></text>
</g>
<g >
<title>tracing::add_table_name (6 samples, 0.11%)</title><rect x="1113.0" y="517" width="1.4" height="15.0" fill="rgb(227,67,18)" rx="2" ry="2" />
<text  x="1116.03" y="527.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::abstract_read_executor&gt;::~shared_ptr (4 samples, 0.08%)</title><rect x="968.2" y="437" width="0.9" height="15.0" fill="rgb(244,116,24)" rx="2" ry="2" />
<text  x="971.23" y="447.5" ></text>
</g>
<g >
<title>locator::abstract_replication_strategy::get_natural_endpoints (63 samples, 1.19%)</title><rect x="1058.4" y="389" width="14.0" height="15.0" fill="rgb(217,49,19)" rx="2" ry="2" />
<text  x="1061.37" y="399.5" ></text>
</g>
<g >
<title>std::_Optional_payload&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, false, false, false&gt;::operator= (1 samples, 0.02%)</title><rect x="38.3" y="389" width="0.3" height="15.0" fill="rgb(225,69,24)" rx="2" ry="2" />
<text  x="41.33" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;seastar::shared_ptr&lt;cql3::operation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::operation&gt; &gt; &gt;::_M_realloc_insert&lt;seastar::shared_ptr&lt;cql3::operation&gt; &gt; (1 samples, 0.02%)</title><rect x="67.6" y="485" width="0.2" height="15.0" fill="rgb(242,163,2)" rx="2" ry="2" />
<text  x="70.56" y="495.5" ></text>
</g>
<g >
<title>std::construct_at&lt;mutation, seastar::lw_shared_ptr&lt;schema const&gt; const&amp;, partition_key const&gt; (1 samples, 0.02%)</title><rect x="859.1" y="437" width="0.3" height="15.0" fill="rgb(208,204,0)" rx="2" ry="2" />
<text  x="862.14" y="447.5" ></text>
</g>
<g >
<title>cql3::restrictions::partition_key_restrictions::needs_filtering (14 samples, 0.26%)</title><rect x="930.3" y="501" width="3.1" height="15.0" fill="rgb(233,224,32)" rx="2" ry="2" />
<text  x="933.31" y="511.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.04%)</title><rect x="537.6" y="421" width="0.5" height="15.0" fill="rgb(228,219,27)" rx="2" ry="2" />
<text  x="540.64" y="431.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::move_it (1 samples, 0.02%)</title><rect x="949.9" y="469" width="0.3" height="15.0" fill="rgb(250,14,41)" rx="2" ry="2" />
<text  x="952.94" y="479.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.06%)</title><rect x="651.4" y="533" width="0.7" height="15.0" fill="rgb(246,181,6)" rx="2" ry="2" />
<text  x="654.43" y="543.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.08%)</title><rect x="95.9" y="565" width="0.9" height="15.0" fill="rgb(248,30,26)" rx="2" ry="2" />
<text  x="98.90" y="575.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_internal&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt; &gt; (10 samples, 0.19%)</title><rect x="1126.9" y="389" width="2.2" height="15.0" fill="rgb(240,84,5)" rx="2" ry="2" />
<text  x="1129.86" y="399.5" ></text>
</g>
<g >
<title>sstables::file_writer::make (1 samples, 0.02%)</title><rect x="676.0" y="581" width="0.2" height="15.0" fill="rgb(248,185,15)" rx="2" ry="2" />
<text  x="678.97" y="591.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (3 samples, 0.06%)</title><rect x="680.2" y="565" width="0.7" height="15.0" fill="rgb(215,114,40)" rx="2" ry="2" />
<text  x="683.21" y="575.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="1025.8" y="357" width="0.2" height="15.0" fill="rgb(241,123,20)" rx="2" ry="2" />
<text  x="1028.80" y="367.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::process_results (1 samples, 0.02%)</title><rect x="102.6" y="597" width="0.2" height="15.0" fill="rgb(245,122,0)" rx="2" ry="2" />
<text  x="105.59" y="607.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_pausable&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (4 samples, 0.08%)</title><rect x="676.2" y="453" width="0.9" height="15.0" fill="rgb(223,5,48)" rx="2" ry="2" />
<text  x="679.19" y="463.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (200 samples, 3.78%)</title><rect x="19.8" y="533" width="44.6" height="15.0" fill="rgb(211,227,19)" rx="2" ry="2" />
<text  x="22.82" y="543.5" >cql3..</text>
</g>
<g >
<title>sstring_hash::operator (1 samples, 0.02%)</title><rect x="1044.1" y="405" width="0.2" height="15.0" fill="rgb(226,45,38)" rx="2" ry="2" />
<text  x="1047.09" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="675.3" y="581" width="0.2" height="15.0" fill="rgb(248,11,23)" rx="2" ry="2" />
<text  x="678.30" y="591.5" ></text>
</g>
<g >
<title>__tls_init (1 samples, 0.02%)</title><rect x="1117.7" y="325" width="0.2" height="15.0" fill="rgb(214,114,22)" rx="2" ry="2" />
<text  x="1120.71" y="335.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_range_tombstone (9 samples, 0.17%)</title><rect x="263.7" y="277" width="2.0" height="15.0" fill="rgb(228,39,17)" rx="2" ry="2" />
<text  x="266.67" y="287.5" ></text>
</g>
<g >
<title>do_io_check&lt;checked_file_impl::list_directory (1 samples, 0.02%)</title><rect x="677.8" y="485" width="0.2" height="15.0" fill="rgb(247,56,53)" rx="2" ry="2" />
<text  x="680.75" y="495.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="39.4" y="373" width="0.3" height="15.0" fill="rgb(248,87,41)" rx="2" ry="2" />
<text  x="42.45" y="383.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::schedule&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::make_data_requests (9 samples, 0.17%)</title><rect x="978.1" y="373" width="2.0" height="15.0" fill="rgb(234,173,20)" rx="2" ry="2" />
<text  x="981.05" y="383.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::size (3 samples, 0.06%)</title><rect x="933.7" y="501" width="0.6" height="15.0" fill="rgb(212,222,40)" rx="2" ry="2" />
<text  x="936.65" y="511.5" ></text>
</g>
<g >
<title>row::~row (1 samples, 0.02%)</title><rect x="288.0" y="293" width="0.2" height="15.0" fill="rgb(231,145,24)" rx="2" ry="2" />
<text  x="290.99" y="303.5" ></text>
</g>
<g >
<title>ser::writer_of_query_result&lt;bytes_ostream&gt;::writer_of_query_result (1 samples, 0.02%)</title><rect x="594.5" y="517" width="0.3" height="15.0" fill="rgb(244,103,21)" rx="2" ry="2" />
<text  x="597.53" y="527.5" ></text>
</g>
<g >
<title>cql3::restrictions::clustering_key_restrictions::needs_filtering (4 samples, 0.08%)</title><rect x="871.2" y="517" width="0.9" height="15.0" fill="rgb(233,184,33)" rx="2" ry="2" />
<text  x="874.18" y="527.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (1 samples, 0.02%)</title><rect x="1165.5" y="437" width="0.2" height="15.0" fill="rgb(235,145,53)" rx="2" ry="2" />
<text  x="1168.46" y="447.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::operator (1 samples, 0.02%)</title><rect x="181.1" y="373" width="0.2" height="15.0" fill="rgb(221,31,33)" rx="2" ry="2" />
<text  x="184.12" y="383.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;, service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (13 samples, 0.25%)</title><rect x="1129.3" y="357" width="2.9" height="15.0" fill="rgb(210,14,33)" rx="2" ry="2" />
<text  x="1132.32" y="367.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (2 samples, 0.04%)</title><rect x="1013.5" y="293" width="0.5" height="15.0" fill="rgb(221,65,36)" rx="2" ry="2" />
<text  x="1016.52" y="303.5" ></text>
</g>
<g >
<title>table::try_flush_memtable_to_sstable (1 samples, 0.02%)</title><rect x="1134.0" y="581" width="0.2" height="15.0" fill="rgb(252,83,22)" rx="2" ry="2" />
<text  x="1137.00" y="591.5" ></text>
</g>
<g >
<title>read_simple&lt;unsigned short, managed_bytes_basic_view&lt; (2 samples, 0.04%)</title><rect x="489.0" y="309" width="0.5" height="15.0" fill="rgb(253,162,51)" rx="2" ry="2" />
<text  x="492.01" y="319.5" ></text>
</g>
<g >
<title>partition_snapshot::versions (1 samples, 0.02%)</title><rect x="80.9" y="389" width="0.3" height="15.0" fill="rgb(222,71,20)" rx="2" ry="2" />
<text  x="83.95" y="399.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::~holder (1 samples, 0.02%)</title><rect x="556.2" y="405" width="0.2" height="15.0" fill="rgb(254,76,17)" rx="2" ry="2" />
<text  x="559.16" y="415.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::RecognizerSharedState (1 samples, 0.02%)</title><rect x="20.5" y="437" width="0.2" height="15.0" fill="rgb(224,170,33)" rx="2" ry="2" />
<text  x="23.49" y="447.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="1107.0" y="485" width="0.2" height="15.0" fill="rgb(215,33,26)" rx="2" ry="2" />
<text  x="1110.01" y="495.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_4findERKNS5_10expressionENS5_6oper_tEEUlRS7_E_EES8_SE_T_EUlSG_E_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_8constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_11conjunctionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_12column_valueEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_5tokenEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13function_callEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4castEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_15field_selectionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4nullEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13bind_variableEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_16untyped_constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_17tuple_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_22collection_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSO_S6_SS_SW_S10_S14_S18_S1C_S1G_S1K_S1O_S1S_SK_S1W_S20_S24_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES29_S2C_ (2 samples, 0.04%)</title><rect x="873.4" y="501" width="0.5" height="15.0" fill="rgb(205,86,16)" rx="2" ry="2" />
<text  x="876.41" y="511.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;query::result_memory_accounter&gt;::clear (1 samples, 0.02%)</title><rect x="599.0" y="533" width="0.2" height="15.0" fill="rgb(235,144,20)" rx="2" ry="2" />
<text  x="602.00" y="543.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.02%)</title><rect x="10.9" y="645" width="0.2" height="15.0" fill="rgb(241,144,43)" rx="2" ry="2" />
<text  x="13.89" y="655.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.04%)</title><rect x="1046.1" y="437" width="0.4" height="15.0" fill="rgb(213,220,40)" rx="2" ry="2" />
<text  x="1049.10" y="447.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::digest_read_result&gt;::future (4 samples, 0.08%)</title><rect x="961.1" y="453" width="0.9" height="15.0" fill="rgb(254,225,42)" rx="2" ry="2" />
<text  x="964.09" y="463.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::detach_service_level_statement, std::default_delete&lt;cql3::statements::detach_service_level_statement&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="60.6" y="469" width="0.3" height="15.0" fill="rgb(240,128,25)" rx="2" ry="2" />
<text  x="63.64" y="479.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (1 samples, 0.02%)</title><rect x="911.3" y="485" width="0.3" height="15.0" fill="rgb(225,176,52)" rx="2" ry="2" />
<text  x="914.34" y="495.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::raw::delete_statement, std::default_delete&lt;cql3::statements::raw::delete_statement&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="62.0" y="469" width="0.2" height="15.0" fill="rgb(242,163,12)" rx="2" ry="2" />
<text  x="64.98" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (2 samples, 0.04%)</title><rect x="688.9" y="581" width="0.5" height="15.0" fill="rgb(207,125,4)" rx="2" ry="2" />
<text  x="691.91" y="591.5" ></text>
</g>
<g >
<title>seastar::repeat&lt;flat_mutation_reader::impl::consume_pausable&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (1 samples, 0.02%)</title><rect x="1165.2" y="437" width="0.3" height="15.0" fill="rgb(222,165,22)" rx="2" ry="2" />
<text  x="1168.24" y="447.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (2 samples, 0.04%)</title><rect x="54.4" y="149" width="0.4" height="15.0" fill="rgb(217,71,52)" rx="2" ry="2" />
<text  x="57.40" y="159.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;partition_snapshot&gt;::make&lt;seastar::lw_shared_ptr&lt;schema const&gt;&amp;, logalloc::region&amp;, mutation_cleaner&amp;, partition_entry*, cache_tracker*&amp;, unsigned long&amp;&gt; (1 samples, 0.02%)</title><rect x="79.6" y="405" width="0.2" height="15.0" fill="rgb(218,225,25)" rx="2" ry="2" />
<text  x="82.61" y="415.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::lsa_partition_reader::next_range_tombstone (1 samples, 0.02%)</title><rect x="80.7" y="373" width="0.2" height="15.0" fill="rgb(235,0,20)" rx="2" ry="2" />
<text  x="83.72" y="383.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::move_it (1 samples, 0.02%)</title><rect x="631.6" y="581" width="0.2" height="15.0" fill="rgb(238,163,34)" rx="2" ry="2" />
<text  x="634.57" y="591.5" ></text>
</g>
<g >
<title>managed_bytes::external_memory_usage (2 samples, 0.04%)</title><rect x="507.7" y="309" width="0.5" height="15.0" fill="rgb(235,46,38)" rx="2" ry="2" />
<text  x="510.75" y="319.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::storage_proxy&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="1050.8" y="421" width="0.2" height="15.0" fill="rgb(238,134,23)" rx="2" ry="2" />
<text  x="1053.78" y="431.5" ></text>
</g>
<g >
<title>cql3::operation::set_value::~set_value (1 samples, 0.02%)</title><rect x="75.4" y="533" width="0.2" height="15.0" fill="rgb(208,62,20)" rx="2" ry="2" />
<text  x="78.37" y="543.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cident (1 samples, 0.02%)</title><rect x="58.2" y="421" width="0.2" height="15.0" fill="rgb(247,61,18)" rx="2" ry="2" />
<text  x="61.19" y="431.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="207.0" y="325" width="0.2" height="15.0" fill="rgb(246,229,49)" rx="2" ry="2" />
<text  x="210.00" y="335.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::deallocate (6 samples, 0.11%)</title><rect x="316.5" y="405" width="1.4" height="15.0" fill="rgb(234,132,42)" rx="2" ry="2" />
<text  x="319.55" y="415.5" ></text>
</g>
<g >
<title>cql3::keyspace_element_name::keyspace_element_name (1 samples, 0.02%)</title><rect x="38.1" y="437" width="0.2" height="15.0" fill="rgb(245,4,3)" rx="2" ry="2" />
<text  x="41.11" y="447.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;1ul, std::default_delete&lt;cql3::expr::expression::impl&gt;&gt; (1 samples, 0.02%)</title><rect x="48.6" y="293" width="0.2" height="15.0" fill="rgb(243,57,18)" rx="2" ry="2" />
<text  x="51.60" y="303.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (1 samples, 0.02%)</title><rect x="48.4" y="357" width="0.2" height="15.0" fill="rgb(219,161,36)" rx="2" ry="2" />
<text  x="51.37" y="367.5" ></text>
</g>
<g >
<title>seastar::make_shared&lt;cql3::column_identifier_raw, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, bool&gt; (1 samples, 0.02%)</title><rect x="41.0" y="421" width="0.2" height="15.0" fill="rgb(219,159,51)" rx="2" ry="2" />
<text  x="44.01" y="431.5" ></text>
</g>
<g >
<title>cql3::raw_value_view::with_value&lt;cql3::raw_value_view::validate (1 samples, 0.02%)</title><rect x="886.8" y="373" width="0.2" height="15.0" fill="rgb(214,95,20)" rx="2" ry="2" />
<text  x="889.80" y="383.5" ></text>
</g>
<g >
<title>lister::visit (1 samples, 0.02%)</title><rect x="850.0" y="517" width="0.2" height="15.0" fill="rgb(254,97,28)" rx="2" ry="2" />
<text  x="852.99" y="527.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt;::_M_reset (1 samples, 0.02%)</title><rect x="515.6" y="373" width="0.2" height="15.0" fill="rgb(223,190,38)" rx="2" ry="2" />
<text  x="518.55" y="383.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="488.1" y="277" width="0.2" height="15.0" fill="rgb(250,46,47)" rx="2" ry="2" />
<text  x="491.11" y="287.5" ></text>
</g>
<g >
<title>utils::murmur_hash::hash3_x64_128&lt;legacy_compound_view&lt;compound_type&lt; (1 samples, 0.02%)</title><rect x="859.1" y="357" width="0.3" height="15.0" fill="rgb(211,198,21)" rx="2" ry="2" />
<text  x="862.14" y="367.5" ></text>
</g>
<g >
<title>mutation::set_clustered_cell (1 samples, 0.02%)</title><rect x="105.5" y="565" width="0.2" height="15.0" fill="rgb(206,49,48)" rx="2" ry="2" />
<text  x="108.49" y="575.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_in_thread&lt;sstables::sstable_writer, flat_mutation_reader::no_filter&gt; (1 samples, 0.02%)</title><rect x="10.9" y="597" width="0.2" height="15.0" fill="rgb(211,136,4)" rx="2" ry="2" />
<text  x="13.89" y="607.5" ></text>
</g>
<g >
<title>dht::ring_position_tri_compare (37 samples, 0.70%)</title><rect x="481.2" y="373" width="8.3" height="15.0" fill="rgb(234,167,41)" rx="2" ry="2" />
<text  x="484.20" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="973.1" y="421" width="0.3" height="15.0" fill="rgb(236,79,46)" rx="2" ry="2" />
<text  x="976.14" y="431.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.02%)</title><rect x="16.9" y="581" width="0.2" height="15.0" fill="rgb(221,24,38)" rx="2" ry="2" />
<text  x="19.92" y="591.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;flat_mutation_reader  (1 samples, 0.02%)</title><rect x="141.4" y="469" width="0.2" height="15.0" fill="rgb(227,151,44)" rx="2" ry="2" />
<text  x="144.41" y="479.5" ></text>
</g>
<g >
<title>seastar::internal::repeater&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (1 samples, 0.02%)</title><rect x="852.4" y="597" width="0.3" height="15.0" fill="rgb(243,196,43)" rx="2" ry="2" />
<text  x="855.44" y="607.5" ></text>
</g>
<g >
<title>mutation_source::make_reader (1 samples, 0.02%)</title><rect x="141.4" y="501" width="0.2" height="15.0" fill="rgb(231,218,20)" rx="2" ry="2" />
<text  x="144.41" y="511.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.02%)</title><rect x="677.1" y="405" width="0.2" height="15.0" fill="rgb(207,55,17)" rx="2" ry="2" />
<text  x="680.08" y="415.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (1 samples, 0.02%)</title><rect x="918.0" y="453" width="0.3" height="15.0" fill="rgb(205,224,51)" rx="2" ry="2" />
<text  x="921.04" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::map&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, std::less&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; &gt; &gt;, std::pair&lt;std::map&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, std::less&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; &gt; &gt; const, seastar::shared_ptr&lt;seastar::metrics::impl::registered_metric&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::map&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, std::less&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; &gt; &gt; const, seastar::shared_ptr&lt;seastar::metrics::impl::registered_metric&gt; &gt; &gt;, std::less&lt;std::map&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, std::less&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::map&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, std::less&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; &gt; &gt; const, seastar::shared_ptr&lt;seastar::metrics::impl::registered_metric&gt; &gt; &gt; &gt;::find (1 samples, 0.02%)</title><rect x="107.9" y="405" width="0.3" height="15.0" fill="rgb(249,65,46)" rx="2" ry="2" />
<text  x="110.94" y="415.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::get_tokenStartLine (1 samples, 0.02%)</title><rect x="27.4" y="357" width="0.2" height="15.0" fill="rgb(253,85,10)" rx="2" ry="2" />
<text  x="30.40" y="367.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;seastar::file_impl&gt; &gt;, seastar::reactor::open_directory (1 samples, 0.02%)</title><rect x="663.5" y="597" width="0.2" height="15.0" fill="rgb(244,172,48)" rx="2" ry="2" />
<text  x="666.47" y="607.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (1 samples, 0.02%)</title><rect x="811.8" y="373" width="0.3" height="15.0" fill="rgb(207,139,53)" rx="2" ry="2" />
<text  x="814.84" y="383.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned int, std::less&lt;unsigned int&gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;unsigned int&gt; &gt;::find (4 samples, 0.08%)</title><rect x="35.2" y="405" width="0.9" height="15.0" fill="rgb(232,113,31)" rx="2" ry="2" />
<text  x="38.21" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (15 samples, 0.28%)</title><rect x="988.1" y="357" width="3.3" height="15.0" fill="rgb(219,34,23)" rx="2" ry="2" />
<text  x="991.09" y="367.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::indirect_move (1 samples, 0.02%)</title><rect x="133.8" y="485" width="0.2" height="15.0" fill="rgb(210,203,18)" rx="2" ry="2" />
<text  x="136.82" y="495.5" ></text>
</g>
<g >
<title>allocation_strategy::alloc&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::leaf_node&gt; (1 samples, 0.02%)</title><rect x="1120.8" y="229" width="0.3" height="15.0" fill="rgb(238,127,45)" rx="2" ry="2" />
<text  x="1123.84" y="239.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::fill_buffer (5 samples, 0.09%)</title><rect x="80.1" y="469" width="1.1" height="15.0" fill="rgb(241,64,35)" rx="2" ry="2" />
<text  x="83.05" y="479.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::get0 (1 samples, 0.02%)</title><rect x="136.1" y="549" width="0.2" height="15.0" fill="rgb(212,133,19)" rx="2" ry="2" />
<text  x="139.05" y="559.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::attributes::raw, std::default_delete&lt;cql3::attributes::raw&gt; &gt;::__uniq_ptr_impl (1 samples, 0.02%)</title><rect x="60.0" y="405" width="0.2" height="15.0" fill="rgb(226,120,38)" rx="2" ry="2" />
<text  x="62.98" y="415.5" ></text>
</g>
<g >
<title>utils::tuple_hash::hash_impl&lt;1ul, auth::resource_kind, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (2 samples, 0.04%)</title><rect x="803.6" y="389" width="0.4" height="15.0" fill="rgb(205,4,47)" rx="2" ry="2" />
<text  x="806.58" y="399.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_cachedSize (1 samples, 0.02%)</title><rect x="49.5" y="341" width="0.2" height="15.0" fill="rgb(236,89,4)" rx="2" ry="2" />
<text  x="52.49" y="351.5" ></text>
</g>
<g >
<title>__strcmp_avx2 (7 samples, 0.13%)</title><rect x="13.8" y="677" width="1.6" height="15.0" fill="rgb(213,20,30)" rx="2" ry="2" />
<text  x="16.79" y="687.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="70.7" y="357" width="0.2" height="15.0" fill="rgb(211,173,44)" rx="2" ry="2" />
<text  x="73.68" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="427.9" y="277" width="0.2" height="15.0" fill="rgb(240,32,17)" rx="2" ry="2" />
<text  x="430.87" y="287.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::query_processor::process_authorized_statement (15 samples, 0.28%)</title><rect x="630.0" y="597" width="3.4" height="15.0" fill="rgb(250,75,40)" rx="2" ry="2" />
<text  x="633.01" y="607.5" ></text>
</g>
<g >
<title>service::write_response_handler::~write_response_handler (1 samples, 0.02%)</title><rect x="678.2" y="581" width="0.2" height="15.0" fill="rgb(230,105,52)" rx="2" ry="2" />
<text  x="681.20" y="591.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.02%)</title><rect x="57.7" y="277" width="0.3" height="15.0" fill="rgb(240,118,0)" rx="2" ry="2" />
<text  x="60.74" y="287.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (7 samples, 0.13%)</title><rect x="1041.6" y="373" width="1.6" height="15.0" fill="rgb(209,209,17)" rx="2" ry="2" />
<text  x="1044.64" y="383.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;::unique_ptr (1 samples, 0.02%)</title><rect x="46.6" y="309" width="0.2" height="15.0" fill="rgb(205,133,54)" rx="2" ry="2" />
<text  x="49.59" y="319.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::add_operation (2 samples, 0.04%)</title><rect x="67.3" y="517" width="0.5" height="15.0" fill="rgb(229,134,10)" rx="2" ry="2" />
<text  x="70.34" y="527.5" ></text>
</g>
<g >
<title>cql3::to_managed_bytes_opt (2 samples, 0.04%)</title><rect x="898.8" y="469" width="0.5" height="15.0" fill="rgb(210,61,39)" rx="2" ry="2" />
<text  x="901.85" y="479.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;service::digest_read_resolver, false&gt;::make&lt;seastar::lw_shared_ptr&lt;schema const&gt;&amp;, db::consistency_level&amp;, unsigned long&amp;, unsigned long, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;&amp;&gt; (29 samples, 0.55%)</title><rect x="969.6" y="437" width="6.4" height="15.0" fill="rgb(212,204,28)" rx="2" ry="2" />
<text  x="972.57" y="447.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; const*, std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt; &gt;, nonwrapping_interval&lt;clustering_key_prefix&gt;*&gt; (4 samples, 0.08%)</title><rect x="157.0" y="501" width="0.9" height="15.0" fill="rgb(217,135,51)" rx="2" ry="2" />
<text  x="160.03" y="511.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_max_result_size (1 samples, 0.02%)</title><rect x="1115.9" y="533" width="0.3" height="15.0" fill="rgb(234,47,43)" rx="2" ry="2" />
<text  x="1118.93" y="543.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.02%)</title><rect x="37.7" y="325" width="0.2" height="15.0" fill="rgb(234,26,35)" rx="2" ry="2" />
<text  x="40.66" y="335.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector (1 samples, 0.02%)</title><rect x="1160.6" y="581" width="0.2" height="15.0" fill="rgb(208,53,2)" rx="2" ry="2" />
<text  x="1163.55" y="591.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::partition_tombstone (1 samples, 0.02%)</title><rect x="503.5" y="357" width="0.2" height="15.0" fill="rgb(245,202,26)" rx="2" ry="2" />
<text  x="506.51" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (1 samples, 0.02%)</title><rect x="20.0" y="501" width="0.3" height="15.0" fill="rgb(232,106,21)" rx="2" ry="2" />
<text  x="23.04" y="511.5" ></text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;void&gt;, database*, seastar::lw_shared_ptr&lt;schema const&gt;, frozen_mutation const&amp;, tracing::trace_state_ptr, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, seastar::bool_class&lt;db::force_sync_tag&gt; &gt;::make_stage_for_group (41 samples, 0.78%)</title><rect x="1117.0" y="501" width="9.2" height="15.0" fill="rgb(226,18,15)" rx="2" ry="2" />
<text  x="1120.04" y="511.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.02%)</title><rect x="41.5" y="245" width="0.2" height="15.0" fill="rgb(228,126,33)" rx="2" ry="2" />
<text  x="44.46" y="255.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.02%)</title><rect x="17.4" y="597" width="0.2" height="15.0" fill="rgb(230,146,24)" rx="2" ry="2" />
<text  x="20.36" y="607.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt;::_Copy_ctor_base (2 samples, 0.04%)</title><rect x="846.2" y="517" width="0.4" height="15.0" fill="rgb(246,135,33)" rx="2" ry="2" />
<text  x="849.20" y="527.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.04%)</title><rect x="1019.5" y="341" width="0.5" height="15.0" fill="rgb(233,128,29)" rx="2" ry="2" />
<text  x="1022.55" y="351.5" ></text>
</g>
<g >
<title>database::has_keyspace (8 samples, 0.15%)</title><rect x="813.6" y="453" width="1.8" height="15.0" fill="rgb(235,127,54)" rx="2" ry="2" />
<text  x="816.62" y="463.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit_slot&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::walking_visitor&lt;row::for_each_cell&lt;sstables::mc::writer::write_cells (3 samples, 0.06%)</title><rect x="81.4" y="405" width="0.7" height="15.0" fill="rgb(249,149,31)" rx="2" ry="2" />
<text  x="84.39" y="415.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="39.7" y="341" width="0.2" height="15.0" fill="rgb(221,91,50)" rx="2" ry="2" />
<text  x="42.67" y="351.5" ></text>
</g>
<g >
<title>utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::lru_entry::touch (7 samples, 0.13%)</title><rect x="729.7" y="405" width="1.6" height="15.0" fill="rgb(222,32,8)" rx="2" ry="2" />
<text  x="732.74" y="415.5" ></text>
</g>
<g >
<title>ser::writer_of_qr_cell&lt;bytes_ostream&gt;::skip_timestamp (7 samples, 0.13%)</title><rect x="394.9" y="261" width="1.5" height="15.0" fill="rgb(223,49,10)" rx="2" ry="2" />
<text  x="397.86" y="271.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_Vector_impl_data::_Vector_impl_data (1 samples, 0.02%)</title><rect x="56.0" y="357" width="0.2" height="15.0" fill="rgb(245,119,29)" rx="2" ry="2" />
<text  x="58.96" y="367.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (1 samples, 0.02%)</title><rect x="674.4" y="549" width="0.2" height="15.0" fill="rgb(238,51,14)" rx="2" ry="2" />
<text  x="677.41" y="559.5" ></text>
</g>
<g >
<title>atomic_cell_or_collection::copy (2 samples, 0.04%)</title><rect x="215.7" y="229" width="0.4" height="15.0" fill="rgb(239,216,51)" rx="2" ry="2" />
<text  x="218.70" y="239.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (2 samples, 0.04%)</title><rect x="642.3" y="565" width="0.4" height="15.0" fill="rgb(249,93,49)" rx="2" ry="2" />
<text  x="645.28" y="575.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;abstract_type const&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="896.4" y="453" width="0.2" height="15.0" fill="rgb(222,157,33)" rx="2" ry="2" />
<text  x="899.39" y="463.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.02%)</title><rect x="704.5" y="389" width="0.2" height="15.0" fill="rgb(254,144,25)" rx="2" ry="2" />
<text  x="707.52" y="399.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (4 samples, 0.08%)</title><rect x="53.3" y="277" width="0.9" height="15.0" fill="rgb(205,186,54)" rx="2" ry="2" />
<text  x="56.28" y="287.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::leaf_node::allocate (2 samples, 0.04%)</title><rect x="216.4" y="229" width="0.4" height="15.0" fill="rgb(249,84,50)" rx="2" ry="2" />
<text  x="219.37" y="239.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::make_partition_slice (54 samples, 1.02%)</title><rect x="1085.6" y="517" width="12.0" height="15.0" fill="rgb(232,48,44)" rx="2" ry="2" />
<text  x="1088.59" y="527.5" ></text>
</g>
<g >
<title>utils::config_file::named_value&lt;bool&gt;::the_value (5 samples, 0.09%)</title><rect x="1076.7" y="437" width="1.1" height="15.0" fill="rgb(253,186,20)" rx="2" ry="2" />
<text  x="1079.66" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="657.9" y="581" width="0.2" height="15.0" fill="rgb(224,23,0)" rx="2" ry="2" />
<text  x="660.90" y="591.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (41 samples, 0.78%)</title><rect x="1117.0" y="485" width="9.2" height="15.0" fill="rgb(219,171,2)" rx="2" ry="2" />
<text  x="1120.04" y="495.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_with_triggers (1 samples, 0.02%)</title><rect x="853.1" y="485" width="0.2" height="15.0" fill="rgb(216,61,0)" rx="2" ry="2" />
<text  x="856.11" y="495.5" ></text>
</g>
<g >
<title>service::client_state::set_keyspace (15 samples, 0.28%)</title><rect x="833.9" y="517" width="3.4" height="15.0" fill="rgb(212,113,47)" rx="2" ry="2" />
<text  x="836.93" y="527.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (9 samples, 0.17%)</title><rect x="905.3" y="437" width="2.0" height="15.0" fill="rgb(233,222,53)" rx="2" ry="2" />
<text  x="908.32" y="447.5" ></text>
</g>
<g >
<title>__memset_avx2_erms (1 samples, 0.02%)</title><rect x="676.0" y="261" width="0.2" height="15.0" fill="rgb(220,141,13)" rx="2" ry="2" />
<text  x="678.97" y="271.5" ></text>
</g>
<g >
<title>std::hash&lt;std::basic_string_view&lt;signed char, std::char_traits&lt;signed char&gt; &gt; &gt;::operator (1 samples, 0.02%)</title><rect x="105.7" y="373" width="0.2" height="15.0" fill="rgb(226,51,43)" rx="2" ry="2" />
<text  x="108.71" y="383.5" ></text>
</g>
<g >
<title>flat_mutation_reader::close (63 samples, 1.19%)</title><rect x="553.9" y="437" width="14.1" height="15.0" fill="rgb(240,149,15)" rx="2" ry="2" />
<text  x="556.93" y="447.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.02%)</title><rect x="690.0" y="565" width="0.2" height="15.0" fill="rgb(237,131,41)" rx="2" ry="2" />
<text  x="693.02" y="575.5" ></text>
</g>
<g >
<title>reversal_traits&lt;false&gt;::erase_dispose_and_update_end&lt;intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (1 samples, 0.02%)</title><rect x="106.2" y="469" width="0.2" height="15.0" fill="rgb(236,216,38)" rx="2" ry="2" />
<text  x="109.16" y="479.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::push_mutation_fragment&lt;schema const&amp;, reader_permit&amp;, partition_start&gt; (35 samples, 0.66%)</title><rect x="504.2" y="341" width="7.8" height="15.0" fill="rgb(240,140,46)" rx="2" ry="2" />
<text  x="507.18" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (1 samples, 0.02%)</title><rect x="26.7" y="325" width="0.3" height="15.0" fill="rgb(230,159,24)" rx="2" ry="2" />
<text  x="29.73" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="741.8" y="421" width="0.2" height="15.0" fill="rgb(249,198,53)" rx="2" ry="2" />
<text  x="744.78" y="431.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::find (3 samples, 0.06%)</title><rect x="641.6" y="517" width="0.7" height="15.0" fill="rgb(252,200,26)" rx="2" ry="2" />
<text  x="644.61" y="527.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (5 samples, 0.09%)</title><rect x="940.1" y="485" width="1.1" height="15.0" fill="rgb(213,29,10)" rx="2" ry="2" />
<text  x="943.12" y="495.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (9 samples, 0.17%)</title><rect x="1036.7" y="405" width="2.0" height="15.0" fill="rgb(220,27,45)" rx="2" ry="2" />
<text  x="1039.73" y="415.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::future&lt;void&gt;  (41 samples, 0.78%)</title><rect x="1117.0" y="453" width="9.2" height="15.0" fill="rgb(247,73,39)" rx="2" ry="2" />
<text  x="1120.04" y="463.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, auth::service::start (1 samples, 0.02%)</title><rect x="677.1" y="597" width="0.2" height="15.0" fill="rgb(211,12,2)" rx="2" ry="2" />
<text  x="680.08" y="607.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.06%)</title><rect x="889.0" y="405" width="0.7" height="15.0" fill="rgb(232,100,47)" rx="2" ry="2" />
<text  x="892.03" y="415.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_pausable_in_thread&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;sstables::sstable_writer&gt; &gt;, flat_mutation_reader::no_filter&gt; (1 samples, 0.02%)</title><rect x="10.9" y="581" width="0.2" height="15.0" fill="rgb(219,205,49)" rx="2" ry="2" />
<text  x="13.89" y="591.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_result_local (1 samples, 0.02%)</title><rect x="11.1" y="693" width="0.2" height="15.0" fill="rgb(233,105,20)" rx="2" ry="2" />
<text  x="14.12" y="703.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.02%)</title><rect x="10.7" y="661" width="0.2" height="15.0" fill="rgb(229,106,34)" rx="2" ry="2" />
<text  x="13.67" y="671.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_Deque_iterator (1 samples, 0.02%)</title><rect x="53.3" y="165" width="0.2" height="15.0" fill="rgb(245,42,7)" rx="2" ry="2" />
<text  x="56.28" y="175.5" ></text>
</g>
<g >
<title>_ZSt5applyIZN7seastar8internal12do_with_implISt8optionalIN4auth8resourceEEZNK7service12client_state20check_has_permissionENS4_12command_descEE3$_7JEEEDaOT_OT0_DpOT1_EUlDpOT_E_St5tupleIJOS6_EEEDcSC_SE_ (1 samples, 0.02%)</title><rect x="76.0" y="485" width="0.3" height="15.0" fill="rgb(237,31,54)" rx="2" ry="2" />
<text  x="79.04" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="96.6" y="549" width="0.2" height="15.0" fill="rgb(215,43,19)" rx="2" ry="2" />
<text  x="99.56" y="559.5" ></text>
</g>
<g >
<title>seastar::syscall_work_queue::complete (1 samples, 0.02%)</title><rect x="1137.3" y="597" width="0.3" height="15.0" fill="rgb(221,87,22)" rx="2" ry="2" />
<text  x="1140.35" y="607.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;unsigned int&gt;::_Rb_tree_iterator (1 samples, 0.02%)</title><rect x="35.9" y="357" width="0.2" height="15.0" fill="rgb(226,137,19)" rx="2" ry="2" />
<text  x="38.88" y="367.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;bool  (1 samples, 0.02%)</title><rect x="547.2" y="469" width="0.3" height="15.0" fill="rgb(234,206,45)" rx="2" ry="2" />
<text  x="550.24" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value, std::allocator&lt;cql3::raw_value&gt; &gt;::vector (5 samples, 0.09%)</title><rect x="845.5" y="565" width="1.1" height="15.0" fill="rgb(228,56,2)" rx="2" ry="2" />
<text  x="848.53" y="575.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::get_mutations (16 samples, 0.30%)</title><rect x="855.8" y="485" width="3.6" height="15.0" fill="rgb(253,93,38)" rx="2" ry="2" />
<text  x="858.79" y="495.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::empty (1 samples, 0.02%)</title><rect x="933.4" y="501" width="0.3" height="15.0" fill="rgb(230,44,3)" rx="2" ry="2" />
<text  x="936.43" y="511.5" ></text>
</g>
<g >
<title>reader_permit::consume (1 samples, 0.02%)</title><rect x="255.6" y="229" width="0.3" height="15.0" fill="rgb(233,171,26)" rx="2" ry="2" />
<text  x="258.64" y="239.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (4 samples, 0.08%)</title><rect x="43.2" y="293" width="0.9" height="15.0" fill="rgb(240,13,42)" rx="2" ry="2" />
<text  x="46.24" y="303.5" ></text>
</g>
<g >
<title>operator delete (9 samples, 0.17%)</title><rect x="560.0" y="389" width="2.0" height="15.0" fill="rgb(227,161,32)" rx="2" ry="2" />
<text  x="562.95" y="399.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="45.0" y="341" width="0.3" height="15.0" fill="rgb(253,31,8)" rx="2" ry="2" />
<text  x="48.03" y="351.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.02%)</title><rect x="39.7" y="261" width="0.2" height="15.0" fill="rgb(250,29,54)" rx="2" ry="2" />
<text  x="42.67" y="271.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (25 samples, 0.47%)</title><rect x="232.7" y="181" width="5.5" height="15.0" fill="rgb(237,206,6)" rx="2" ry="2" />
<text  x="235.66" y="191.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.06%)</title><rect x="1161.0" y="549" width="0.7" height="15.0" fill="rgb(231,186,52)" rx="2" ry="2" />
<text  x="1164.00" y="559.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;mutation_reader_merger::reader_and_last_fragment_kind*, mutation_reader_merger::prepare_next (72 samples, 1.36%)</title><rect x="179.1" y="389" width="16.1" height="15.0" fill="rgb(207,54,35)" rx="2" ry="2" />
<text  x="182.11" y="399.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::on_new_range (31 samples, 0.59%)</title><rect x="200.5" y="341" width="6.9" height="15.0" fill="rgb(219,36,19)" rx="2" ry="2" />
<text  x="203.53" y="351.5" ></text>
</g>
<g >
<title>service::shared_mutation::apply_locally (8 samples, 0.15%)</title><rect x="1127.3" y="325" width="1.8" height="15.0" fill="rgb(238,34,11)" rx="2" ry="2" />
<text  x="1130.31" y="335.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::operator&lt; (1 samples, 0.02%)</title><rect x="107.9" y="373" width="0.3" height="15.0" fill="rgb(231,23,15)" rx="2" ry="2" />
<text  x="110.94" y="383.5" ></text>
</g>
<g >
<title>std::optional&lt;clustering_key_prefix&gt;::operator=&lt;clustering_key_prefix&amp;&gt; (1 samples, 0.02%)</title><rect x="418.5" y="325" width="0.2" height="15.0" fill="rgb(239,56,50)" rx="2" ry="2" />
<text  x="421.50" y="335.5" ></text>
</g>
<g >
<title>operator delete (5 samples, 0.09%)</title><rect x="316.8" y="389" width="1.1" height="15.0" fill="rgb(254,96,51)" rx="2" ry="2" />
<text  x="319.77" y="399.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (1 samples, 0.02%)</title><rect x="58.2" y="357" width="0.2" height="15.0" fill="rgb(248,205,19)" rx="2" ry="2" />
<text  x="61.19" y="367.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (1 samples, 0.02%)</title><rect x="647.4" y="581" width="0.2" height="15.0" fill="rgb(240,92,50)" rx="2" ry="2" />
<text  x="650.41" y="591.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::range_or_slice_eq_null (4 samples, 0.08%)</title><rect x="853.3" y="485" width="0.9" height="15.0" fill="rgb(246,124,23)" rx="2" ry="2" />
<text  x="856.34" y="495.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::has_available_units (1 samples, 0.02%)</title><rect x="126.7" y="501" width="0.2" height="15.0" fill="rgb(246,12,47)" rx="2" ry="2" />
<text  x="129.68" y="511.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (3 samples, 0.06%)</title><rect x="54.2" y="325" width="0.6" height="15.0" fill="rgb(250,154,34)" rx="2" ry="2" />
<text  x="57.17" y="335.5" ></text>
</g>
<g >
<title>std::optional&lt;clustering_key_prefix&gt;::operator=&lt;clustering_key_prefix const&amp;&gt; (2 samples, 0.04%)</title><rect x="266.3" y="309" width="0.5" height="15.0" fill="rgb(224,205,16)" rx="2" ry="2" />
<text  x="269.35" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::allocate_large (1 samples, 0.02%)</title><rect x="1049.7" y="389" width="0.2" height="15.0" fill="rgb(221,219,31)" rx="2" ry="2" />
<text  x="1052.67" y="399.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (1 samples, 0.02%)</title><rect x="102.4" y="469" width="0.2" height="15.0" fill="rgb(213,45,32)" rx="2" ry="2" />
<text  x="105.37" y="479.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_9c4051607141ccef88a5c0c6888f804fb0de85a9] (1 samples, 0.02%)</title><rect x="787.3" y="213" width="0.2" height="15.0" fill="rgb(254,10,33)" rx="2" ry="2" />
<text  x="790.30" y="223.5" ></text>
</g>
<g >
<title>cql3::operation::fill_prepare_context (1 samples, 0.02%)</title><rect x="64.7" y="517" width="0.2" height="15.0" fill="rgb(250,12,9)" rx="2" ry="2" />
<text  x="67.66" y="527.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (2 samples, 0.04%)</title><rect x="878.1" y="405" width="0.4" height="15.0" fill="rgb(206,100,30)" rx="2" ry="2" />
<text  x="881.10" y="415.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::has_token (1 samples, 0.02%)</title><rect x="640.0" y="517" width="0.3" height="15.0" fill="rgb(227,17,53)" rx="2" ry="2" />
<text  x="643.05" y="527.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::raw::parsed_statement, std::default_delete&lt;cql3::statements::raw::parsed_statement&gt; &gt;::operator= (1 samples, 0.02%)</title><rect x="64.2" y="501" width="0.2" height="15.0" fill="rgb(205,158,25)" rx="2" ry="2" />
<text  x="67.21" y="511.5" ></text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::operator (6 samples, 0.11%)</title><rect x="741.3" y="485" width="1.4" height="15.0" fill="rgb(234,168,24)" rx="2" ry="2" />
<text  x="744.34" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (4 samples, 0.08%)</title><rect x="1003.9" y="309" width="0.9" height="15.0" fill="rgb(220,113,33)" rx="2" ry="2" />
<text  x="1006.93" y="319.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="1137.3" y="581" width="0.3" height="15.0" fill="rgb(254,64,20)" rx="2" ry="2" />
<text  x="1140.35" y="591.5" ></text>
</g>
<g >
<title>std::hash&lt;gms::inet_address&gt;::operator (1 samples, 0.02%)</title><rect x="701.6" y="517" width="0.2" height="15.0" fill="rgb(227,220,53)" rx="2" ry="2" />
<text  x="704.62" y="527.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="533.0" y="325" width="0.2" height="15.0" fill="rgb(249,90,5)" rx="2" ry="2" />
<text  x="535.96" y="335.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (1 samples, 0.02%)</title><rect x="51.1" y="341" width="0.2" height="15.0" fill="rgb(228,181,5)" rx="2" ry="2" />
<text  x="54.05" y="351.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::remove_if&lt;row::compact_and_expire (47 samples, 0.89%)</title><rect x="405.3" y="277" width="10.5" height="15.0" fill="rgb(224,140,40)" rx="2" ry="2" />
<text  x="408.34" y="287.5" ></text>
</g>
<g >
<title>ser::mutation_partition_view::rows (1 samples, 0.02%)</title><rect x="1122.4" y="325" width="0.2" height="15.0" fill="rgb(207,76,1)" rx="2" ry="2" />
<text  x="1125.40" y="335.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::set_urgent_state (3 samples, 0.06%)</title><rect x="631.8" y="581" width="0.7" height="15.0" fill="rgb(214,229,37)" rx="2" ry="2" />
<text  x="634.79" y="591.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.08%)</title><rect x="818.5" y="469" width="0.9" height="15.0" fill="rgb(227,135,36)" rx="2" ry="2" />
<text  x="821.53" y="479.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reclaiming_disabled&lt;flush_reader::get_next_partition (1 samples, 0.02%)</title><rect x="79.6" y="469" width="0.2" height="15.0" fill="rgb(223,37,14)" rx="2" ry="2" />
<text  x="82.61" y="479.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_next (1 samples, 0.02%)</title><rect x="105.9" y="197" width="0.3" height="15.0" fill="rgb(250,187,20)" rx="2" ry="2" />
<text  x="108.93" y="207.5" ></text>
</g>
<g >
<title>seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;::swap (1 samples, 0.02%)</title><rect x="731.5" y="469" width="0.2" height="15.0" fill="rgb(218,172,7)" rx="2" ry="2" />
<text  x="734.52" y="479.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (2 samples, 0.04%)</title><rect x="57.5" y="421" width="0.5" height="15.0" fill="rgb(208,213,20)" rx="2" ry="2" />
<text  x="60.52" y="431.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;false, false, std::random_access_iterator_tag&gt;::__copy_m&lt;char*, fmt::v7::detail::buffer_appender&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="18.3" y="549" width="0.2" height="15.0" fill="rgb(235,131,41)" rx="2" ry="2" />
<text  x="21.25" y="559.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (2 samples, 0.04%)</title><rect x="296.2" y="389" width="0.5" height="15.0" fill="rgb(250,163,38)" rx="2" ry="2" />
<text  x="299.24" y="399.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::CommonToken (2 samples, 0.04%)</title><rect x="23.2" y="309" width="0.4" height="15.0" fill="rgb(216,25,19)" rx="2" ry="2" />
<text  x="26.16" y="319.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (2 samples, 0.04%)</title><rect x="781.9" y="293" width="0.5" height="15.0" fill="rgb(249,179,10)" rx="2" ry="2" />
<text  x="784.94" y="303.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (4 samples, 0.08%)</title><rect x="185.6" y="341" width="0.9" height="15.0" fill="rgb(221,109,4)" rx="2" ry="2" />
<text  x="188.58" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;ser::column_view, std::allocator&lt;ser::column_view&gt; &gt;::emplace_back&lt;ser::column_view&gt; (1 samples, 0.02%)</title><rect x="1122.6" y="277" width="0.2" height="15.0" fill="rgb(233,93,18)" rx="2" ry="2" />
<text  x="1125.62" y="287.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (1 samples, 0.02%)</title><rect x="105.5" y="517" width="0.2" height="15.0" fill="rgb(232,216,30)" rx="2" ry="2" />
<text  x="108.49" y="527.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.06%)</title><rect x="1152.3" y="517" width="0.7" height="15.0" fill="rgb(210,115,51)" rx="2" ry="2" />
<text  x="1155.30" y="527.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (23 samples, 0.43%)</title><rect x="484.3" y="325" width="5.2" height="15.0" fill="rgb(252,0,4)" rx="2" ry="2" />
<text  x="487.32" y="335.5" ></text>
</g>
<g >
<title>seastar::internal::log_buf::inserter_iterator::operator= (1 samples, 0.02%)</title><rect x="11.1" y="421" width="0.2" height="15.0" fill="rgb(226,79,51)" rx="2" ry="2" />
<text  x="14.12" y="431.5" ></text>
</g>
<g >
<title>reader_selector::has_new_readers (2 samples, 0.04%)</title><rect x="459.8" y="373" width="0.4" height="15.0" fill="rgb(236,155,22)" rx="2" ry="2" />
<text  x="462.78" y="383.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::drop_aggregate_statement, std::default_delete&lt;cql3::statements::drop_aggregate_statement&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="61.3" y="453" width="0.2" height="15.0" fill="rgb(208,94,44)" rx="2" ry="2" />
<text  x="64.31" y="463.5" ></text>
</g>
<g >
<title>std::__equal&lt;false&gt;::equal&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;*, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const*&gt; (12 samples, 0.23%)</title><rect x="783.5" y="245" width="2.7" height="15.0" fill="rgb(205,161,0)" rx="2" ry="2" />
<text  x="786.50" y="255.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (4 samples, 0.08%)</title><rect x="490.1" y="421" width="0.9" height="15.0" fill="rgb(254,1,16)" rx="2" ry="2" />
<text  x="493.12" y="431.5" ></text>
</g>
<g >
<title>db::schema_tables::create_table_from_mutations (1 samples, 0.02%)</title><rect x="105.7" y="437" width="0.2" height="15.0" fill="rgb(206,183,1)" rx="2" ry="2" />
<text  x="108.71" y="447.5" ></text>
</g>
<g >
<title>sstables::mc::writer::write_clustered (1 samples, 0.02%)</title><rect x="10.9" y="501" width="0.2" height="15.0" fill="rgb(221,53,28)" rx="2" ry="2" />
<text  x="13.89" y="511.5" ></text>
</g>
<g >
<title>db::cql_type_parser::parse (1 samples, 0.02%)</title><rect x="107.5" y="469" width="0.2" height="15.0" fill="rgb(225,87,31)" rx="2" ry="2" />
<text  x="110.50" y="479.5" ></text>
</g>
<g >
<title>utils::tuple_hash::operator (1 samples, 0.02%)</title><rect x="721.7" y="453" width="0.2" height="15.0" fill="rgb(221,193,34)" rx="2" ry="2" />
<text  x="724.70" y="463.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::~small_vector (3 samples, 0.06%)</title><rect x="462.0" y="389" width="0.7" height="15.0" fill="rgb(217,41,30)" rx="2" ry="2" />
<text  x="465.01" y="399.5" ></text>
</g>
<g >
<title>bplus::node&lt;long, intrusive_array&lt;memtable_entry&gt;, dht::raw_token_less_comparator, 16ul,  (1 samples, 0.02%)</title><rect x="1118.8" y="229" width="0.3" height="15.0" fill="rgb(228,118,2)" rx="2" ry="2" />
<text  x="1121.83" y="239.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::do_wait_admission (1 samples, 0.02%)</title><rect x="1004.8" y="341" width="0.2" height="15.0" fill="rgb(219,170,9)" rx="2" ry="2" />
<text  x="1007.82" y="351.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::deallocate (1 samples, 0.02%)</title><rect x="511.8" y="325" width="0.2" height="15.0" fill="rgb(227,192,31)" rx="2" ry="2" />
<text  x="514.76" y="335.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::operator= (3 samples, 0.06%)</title><rect x="816.1" y="517" width="0.6" height="15.0" fill="rgb(207,204,40)" rx="2" ry="2" />
<text  x="819.08" y="527.5" ></text>
</g>
<g >
<title>table::set_hit_rate (1 samples, 0.02%)</title><rect x="702.7" y="565" width="0.3" height="15.0" fill="rgb(227,215,36)" rx="2" ry="2" />
<text  x="705.74" y="575.5" ></text>
</g>
<g >
<title>auth::data_resource_view::table (1 samples, 0.02%)</title><rect x="762.1" y="469" width="0.2" height="15.0" fill="rgb(248,110,48)" rx="2" ry="2" />
<text  x="765.09" y="479.5" ></text>
</g>
<g >
<title>seastar::lambda_task&lt;seastar::execution_stage::flush (1,258 samples, 23.79%)</title><rect x="853.1" y="597" width="280.7" height="15.0" fill="rgb(212,67,41)" rx="2" ry="2" />
<text  x="856.11" y="607.5" >seastar::lambda_task&lt;seastar::executi..</text>
</g>
<g >
<title>_ZSt5visitIR18overloaded_functorIJZN4cql34expr9find_atomIZNS2_28has_slice_or_needs_filteringERKNS2_10expressionEEUlRKNS2_15binary_operatorEE_EEPS8_S6_T_EUlS9_E_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_8constantEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_11conjunctionEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_12column_valueEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_5tokenEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_21unresolved_identifierEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_25column_mutation_attributeEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_13function_callEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_4castEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_15field_selectionEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_4nullEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_13bind_variableEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_16untyped_constantEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_17tuple_constructorEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_22collection_constructorEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_20usertype_constructorEE_EEJRSt7variantIJSI_S7_SM_SQ_SU_SY_S12_S16_S1A_S1E_S1I_S1M_SE_S1Q_S1U_S1Y_EEEENSt13invoke_resultISC_JDpDTclsr3stdE3getILm0EEclsr3stdE7declvalIT0_EEEEEE4typeEOSC_DpOS28_ (1 samples, 0.02%)</title><rect x="931.2" y="469" width="0.2" height="15.0" fill="rgb(242,78,31)" rx="2" ry="2" />
<text  x="934.20" y="479.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="163.7" y="517" width="0.2" height="15.0" fill="rgb(208,76,9)" rx="2" ry="2" />
<text  x="166.72" y="527.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="75.1" y="549" width="0.3" height="15.0" fill="rgb(252,223,4)" rx="2" ry="2" />
<text  x="78.15" y="559.5" ></text>
</g>
<g >
<title>std::function&lt;seastar::future&lt;void&gt;  (1 samples, 0.02%)</title><rect x="1134.0" y="469" width="0.2" height="15.0" fill="rgb(205,183,33)" rx="2" ry="2" />
<text  x="1137.00" y="479.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.02%)</title><rect x="21.2" y="421" width="0.2" height="15.0" fill="rgb(212,78,27)" rx="2" ry="2" />
<text  x="24.16" y="431.5" ></text>
</g>
<g >
<title>memtable::upgrade_entry (1 samples, 0.02%)</title><rect x="516.2" y="421" width="0.2" height="15.0" fill="rgb(225,131,34)" rx="2" ry="2" />
<text  x="519.22" y="431.5" ></text>
</g>
<g >
<title>sstables::mc::write_clustering_prefix&lt;sstables::file_writer&gt; (1 samples, 0.02%)</title><rect x="10.9" y="485" width="0.2" height="15.0" fill="rgb(249,77,43)" rx="2" ry="2" />
<text  x="13.89" y="495.5" ></text>
</g>
<g >
<title>ser::serializer&lt;partition_key&gt;::write&lt;seastar::measuring_output_stream&gt; (1 samples, 0.02%)</title><rect x="1130.2" y="213" width="0.2" height="15.0" fill="rgb(254,45,24)" rx="2" ry="2" />
<text  x="1133.21" y="223.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (2 samples, 0.04%)</title><rect x="703.0" y="581" width="0.4" height="15.0" fill="rgb(239,40,28)" rx="2" ry="2" />
<text  x="705.96" y="591.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::operator (1 samples, 0.02%)</title><rect x="835.7" y="437" width="0.2" height="15.0" fill="rgb(232,178,44)" rx="2" ry="2" />
<text  x="838.71" y="447.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (1 samples, 0.02%)</title><rect x="574.7" y="437" width="0.2" height="15.0" fill="rgb(208,130,43)" rx="2" ry="2" />
<text  x="577.68" y="447.5" ></text>
</g>
<g >
<title>mutation_fragment::destroy_data (34 samples, 0.64%)</title><rect x="422.3" y="357" width="7.6" height="15.0" fill="rgb(242,196,14)" rx="2" ry="2" />
<text  x="425.30" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;seastar::shared_ptr&lt;cql3::relation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::relation&gt; &gt; &gt;::vector (1 samples, 0.02%)</title><rect x="60.2" y="437" width="0.2" height="15.0" fill="rgb(242,89,34)" rx="2" ry="2" />
<text  x="63.20" y="447.5" ></text>
</g>
<g >
<title>free (16 samples, 0.30%)</title><rect x="424.3" y="277" width="3.6" height="15.0" fill="rgb(210,105,49)" rx="2" ry="2" />
<text  x="427.31" y="287.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;compact_for_query&lt; (10 samples, 0.19%)</title><rect x="435.0" y="373" width="2.2" height="15.0" fill="rgb(226,112,42)" rx="2" ry="2" />
<text  x="438.01" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;seastar::shared_ptr&lt;cql3::relation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::relation&gt; &gt; &gt;::vector (1 samples, 0.02%)</title><rect x="73.6" y="533" width="0.2" height="15.0" fill="rgb(250,18,10)" rx="2" ry="2" />
<text  x="76.58" y="543.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::do_get_limit (2 samples, 0.04%)</title><rect x="1085.1" y="501" width="0.5" height="15.0" fill="rgb(239,120,5)" rx="2" ry="2" />
<text  x="1088.14" y="511.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (2 samples, 0.04%)</title><rect x="151.9" y="533" width="0.4" height="15.0" fill="rgb(251,137,35)" rx="2" ry="2" />
<text  x="154.89" y="543.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::_M_create_storage (1 samples, 0.02%)</title><rect x="156.8" y="501" width="0.2" height="15.0" fill="rgb(227,173,21)" rx="2" ry="2" />
<text  x="159.80" y="511.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;clustering_key_prefix&gt;::_M_reset (3 samples, 0.06%)</title><rect x="440.8" y="469" width="0.7" height="15.0" fill="rgb(230,188,14)" rx="2" ry="2" />
<text  x="443.81" y="479.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::setTokenStream (1 samples, 0.02%)</title><rect x="20.3" y="485" width="0.2" height="15.0" fill="rgb(206,28,8)" rx="2" ry="2" />
<text  x="23.26" y="495.5" ></text>
</g>
<g >
<title>range_tombstone_stream::empty (1 samples, 0.02%)</title><rect x="265.7" y="309" width="0.2" height="15.0" fill="rgb(244,45,38)" rx="2" ry="2" />
<text  x="268.68" y="319.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (1 samples, 0.02%)</title><rect x="684.9" y="549" width="0.2" height="15.0" fill="rgb(229,16,8)" rx="2" ry="2" />
<text  x="687.89" y="559.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::~result_memory_accounter (1 samples, 0.02%)</title><rect x="120.4" y="549" width="0.3" height="15.0" fill="rgb(228,117,48)" rx="2" ry="2" />
<text  x="123.44" y="559.5" ></text>
</g>
<g >
<title>seastar::reactor::open_directory (1 samples, 0.02%)</title><rect x="678.0" y="549" width="0.2" height="15.0" fill="rgb(236,199,47)" rx="2" ry="2" />
<text  x="680.98" y="559.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::raw::parsed_statement, std::default_delete&lt;cql3::statements::raw::parsed_statement&gt; &gt;::get_deleter (1 samples, 0.02%)</title><rect x="62.4" y="453" width="0.3" height="15.0" fill="rgb(229,100,8)" rx="2" ry="2" />
<text  x="65.43" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::_S_max_size (1 samples, 0.02%)</title><rect x="46.8" y="325" width="0.2" height="15.0" fill="rgb(219,84,42)" rx="2" ry="2" />
<text  x="49.81" y="335.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, cql3::statements::drop_aggregate_statement*, std::default_delete&lt;cql3::statements::drop_aggregate_statement&gt; &gt; (1 samples, 0.02%)</title><rect x="61.3" y="437" width="0.2" height="15.0" fill="rgb(211,83,45)" rx="2" ry="2" />
<text  x="64.31" y="447.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (1 samples, 0.02%)</title><rect x="38.6" y="405" width="0.2" height="15.0" fill="rgb(243,122,37)" rx="2" ry="2" />
<text  x="41.56" y="415.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (9 samples, 0.17%)</title><rect x="909.1" y="437" width="2.0" height="15.0" fill="rgb(223,7,25)" rx="2" ry="2" />
<text  x="912.11" y="447.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;__gnu_cxx::__normal_iterator&lt;seastar::lw_shared_ptr&lt;sstables::sstable&gt; const*, std::vector&lt;seastar::lw_shared_ptr&lt;sstables::sstable&gt;, std::allocator&lt;seastar::lw_shared_ptr&lt;sstables::sstable&gt; &gt; &gt; &gt;, sstables::delete_atomically (1 samples, 0.02%)</title><rect x="82.5" y="629" width="0.2" height="15.0" fill="rgb(211,152,15)" rx="2" ry="2" />
<text  x="85.51" y="639.5" ></text>
</g>
</g>
</svg>
